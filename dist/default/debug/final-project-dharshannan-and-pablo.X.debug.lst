

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Mar 02 21:42:37 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    61                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    73                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    74                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    75                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    76                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    77   000000                     
    78                           ; Generated 06/04/2022 GMT
    79                           ; 
    80                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    81                           ; All rights reserved.
    82                           ; 
    83                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    84                           ; 
    85                           ; Redistribution and use in source and binary forms, with or without modification, are
    86                           ; permitted provided that the following conditions are met:
    87                           ; 
    88                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    89                           ;        conditions and the following disclaimer.
    90                           ; 
    91                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    92                           ;        of conditions and the following disclaimer in the documentation and/or other
    93                           ;        materials provided with the distribution. Publication is not required when
    94                           ;        this file is used in an embedded application.
    95                           ; 
    96                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    97                           ;        software without specific prior written permission.
    98                           ; 
    99                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   100                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   101                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   102                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   103                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   104                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   105                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   106                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   107                           ; 
   108                           ; 
   109                           ; Code-generator required, PIC18F67K40 Definitions
   110                           ; 
   111                           ; SFR Addresses
   112   000000                     
   113                           	psect	idataCOMRAM
   114   002412                     __pidataCOMRAM:
   115                           	callstack 0
   116                           
   117                           ;initializer for _int_threshold_high
   118   002412  0CB2               	dw	3250
   119   000000                     _TRISBbits	set	3970
   120   000000                     _TX4REG	set	3812
   121   000000                     _RC4STAbits	set	3815
   122   000000                     _SP4BRGH	set	3814
   123   000000                     _TRISCbits	set	3971
   124   000000                     _TRISEbits	set	3973
   125   000000                     _TRISFbits	set	3974
   126   000000                     _TRISGbits	set	3975
   127   000000                     _SSP2CON2bits	set	3802
   128   000000                     _INT1PPS	set	3569
   129   000000                     _RX4PPS	set	3605
   130   000000                     _SSP2CLKPPS	set	3612
   131   000000                     _SSP2DATPPS	set	3613
   132   000000                     _ANSELDbits	set	3751
   133   000000                     _SSP2ADD	set	3798
   134   000000                     _SSP2CON1bits	set	3801
   135   000000                     _RC4REG	set	3811
   136   000000                     _SP4BRGL	set	3813
   137   000000                     _TX4STAbits	set	3816
   138   000000                     _BAUD4CONbits	set	3817
   139   000000                     _CCPR4H	set	3873
   140   000000                     _CCPR3H	set	3877
   141   000000                     _LATAbits	set	3961
   142   000000                     _LATGbits	set	3967
   143   000000                     _LATHbits	set	3968
   144   000000                     _TRISAbits	set	3969
   145   000000                     _SSP2CON2	set	3802
   146   000000                     _TRISDbits	set	3972
   147   000000                     _SSP2STAT	set	3800
   148   000000                     _SSP2BUF	set	3797
   149   000000                     _IPR0bits	set	3615
   150   000000                     _PIE0bits	set	3625
   151   000000                     _PIE4bits	set	3629
   152   000000                     _PIR4bits	set	3639
   153   000000                     _RC0PPS	set	3682
   154   000000                     _RC7PPS	set	3689
   155   000000                     _RD5PPS	set	3695
   156   000000                     _RE2PPS	set	3700
   157   000000                     _RD6PPS	set	3696
   158   000000                     _CCPR2H	set	4006
   159   000000                     _CCPR1H	set	4010
   160   000000                     _T2PR	set	4028
   161   000000                     _T2CONbits	set	4029
   162   000000                     _TRISHbits	set	3976
   163   000000                     _LATCbits	set	3963
   164   000000                     _LATEbits	set	3965
   165   000000                     _LATFbits	set	3966
   166   000000                     _RE4PPS	set	3702
   167   000000                     _RG6PPS	set	3720
   168   000000                     _ANSELBbits	set	3738
   169   000000                     _TMR0L	set	4051
   170   000000                     _TMR0H	set	4052
   171   000000                     _T0CON0bits	set	4053
   172   000000                     _T0CON1bits	set	4054
   173   000000                     _T2CLKCONbits	set	4031
   174   000000                     _T2HLTbits	set	4030
   175   000000                     _CCP1CONbits	set	4011
   176   000000                     _CCPTMRS0bits	set	4013
   177   000000                     _CCP2CONbits	set	4007
   178   000000                     _CCP3CONbits	set	3878
   179   000000                     _CCP4CONbits	set	3874
   180   000000                     _PIR0bits	set	3635
   181   000000                     _INTCONbits	set	4082
   182                           
   183                           	psect	smallconst
   184   000E00                     __psmallconst:
   185                           	callstack 0
   186   000E00  00                 	db	0
   187   000E01                     STR_1:
   188   000E01  0A                 	db	10
   189   000E02  43                 	db	67	;'C'
   190   000E03  6F                 	db	111	;'o'
   191   000E04  6C                 	db	108	;'l'
   192   000E05  6F                 	db	111	;'o'
   193   000E06  72                 	db	114	;'r'
   194   000E07  20                 	db	32
   195   000E08  44                 	db	68	;'D'
   196   000E09  65                 	db	101	;'e'
   197   000E0A  74                 	db	116	;'t'
   198   000E0B  65                 	db	101	;'e'
   199   000E0C  63                 	db	99	;'c'
   200   000E0D  74                 	db	116	;'t'
   201   000E0E  65                 	db	101	;'e'
   202   000E0F  64                 	db	100	;'d'
   203   000E10  20                 	db	32
   204   000E11  3D                 	db	61	;'='
   205   000E12  20                 	db	32
   206   000E13  25                 	db	37
   207   000E14  30                 	db	48	;'0'
   208   000E15  31                 	db	49	;'1'
   209   000E16  64                 	db	100	;'d'
   210   000E17  0A                 	db	10
   211   000E18  00                 	db	0
   212   000E19  00                 	db	0	; dummy byte at the end
   213   000000                     
   214                           ; #config settings
   215                           
   216                           	psect	cinit
   217   001F4C                     __pcinit:
   218                           	callstack 0
   219   001F4C                     start_initialization:
   220                           	callstack 0
   221   001F4C                     __initialization:
   222                           	callstack 0
   223                           
   224                           ; Initialize objects allocated to COMRAM (2 bytes)
   225                           ; load TBLPTR registers with __pidataCOMRAM
   226   001F4C  0E12               	movlw	low __pidataCOMRAM
   227   001F4E  6EF6               	movwf	tblptrl,c
   228   001F50  0E24               	movlw	high __pidataCOMRAM
   229   001F52  6EF7               	movwf	tblptrh,c
   230   001F54  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   231   001F56  6EF8               	movwf	tblptru,c
   232   001F58  0009               	tblrd		*+	;fetch initializer
   233   001F5A  CFF5 F04F          	movff	tablat,__pdataCOMRAM
   234   001F5E  0009               	tblrd		*+	;fetch initializer
   235   001F60  CFF5 F050          	movff	tablat,__pdataCOMRAM+1
   236                           
   237                           ; Clear objects allocated to BANK1 (60 bytes)
   238   001F64  EE01  F000         	lfsr	0,__pbssBANK1
   239   001F68  0E3C               	movlw	60
   240   001F6A                     clear_0:
   241   001F6A  6AEE               	clrf	postinc0,c
   242   001F6C  06E8               	decf	wreg,f,c
   243   001F6E  E1FD               	bnz	clear_0
   244                           
   245                           ; Clear objects allocated to BANK0 (55 bytes)
   246   001F70  EE00  F0C8         	lfsr	0,__pbssBANK0
   247   001F74  0E37               	movlw	55
   248   001F76                     clear_1:
   249   001F76  6AEE               	clrf	postinc0,c
   250   001F78  06E8               	decf	wreg,f,c
   251   001F7A  E1FD               	bnz	clear_1
   252                           
   253                           ; Clear objects allocated to COMRAM (10 bytes)
   254   001F7C  EE00  F045         	lfsr	0,__pbssCOMRAM
   255   001F80  0E0A               	movlw	10
   256   001F82                     clear_2:
   257   001F82  6AEE               	clrf	postinc0,c
   258   001F84  06E8               	decf	wreg,f,c
   259   001F86  E1FD               	bnz	clear_2
   260   001F88                     end_of_initialization:
   261                           	callstack 0
   262   001F88                     __end_of__initialization:
   263                           	callstack 0
   264   001F88  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   265   001F8A  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   266   001F8C  0100               	movlb	0
   267   001F8E  EFFA  F00C         	goto	_main	;jump to C main() function
   268                           
   269                           	psect	bssCOMRAM
   270   000045                     __pbssCOMRAM:
   271                           	callstack 0
   272   000045                     _prec:
   273                           	callstack 0
   274   000045                     	ds	2
   275   000047                     _int_threshold_low:
   276                           	callstack 0
   277   000047                     	ds	2
   278   000049                     _flags:
   279                           	callstack 0
   280   000049                     	ds	1
   281   00004A                     _TxBufReadCnt:
   282                           	callstack 0
   283   00004A                     	ds	1
   284   00004B                     _TxBufWriteCnt:
   285                           	callstack 0
   286   00004B                     	ds	1
   287   00004C                     _RxBufReadCnt:
   288                           	callstack 0
   289   00004C                     	ds	1
   290   00004D                     _RxBufWriteCnt:
   291                           	callstack 0
   292   00004D                     	ds	1
   293   00004E                     _color_flag:
   294                           	callstack 0
   295   00004E                     	ds	1
   296                           
   297                           	psect	dataCOMRAM
   298   00004F                     __pdataCOMRAM:
   299                           	callstack 0
   300   00004F                     _int_threshold_high:
   301                           	callstack 0
   302   00004F                     	ds	2
   303                           
   304                           	psect	bssBANK0
   305   0000C8                     __pbssBANK0:
   306                           	callstack 0
   307   0000C8                     _EUSART4RXbuf:
   308                           	callstack 0
   309   0000C8                     	ds	20
   310   0000DC                     _width:
   311                           	callstack 0
   312   0000DC                     	ds	2
   313   0000DE                     _tmr_ovf:
   314                           	callstack 0
   315   0000DE                     	ds	1
   316   0000DF                     _dbuf:
   317                           	callstack 0
   318   0000DF                     	ds	32
   319                           
   320                           	psect	bssBANK1
   321   000100                     __pbssBANK1:
   322                           	callstack 0
   323   000100                     _EUSART4TXbuf:
   324                           	callstack 0
   325   000100                     	ds	60
   326                           
   327                           	psect	cstackBANK0
   328   000060                     __pcstackBANK0:
   329                           	callstack 0
   330   000060                     _dtoa$2428:
   331                           	callstack 0
   332                           
   333                           ; 2 bytes @ 0x0
   334   000060                     	ds	2
   335   000062                     dtoa@p:
   336                           	callstack 0
   337                           
   338                           ; 2 bytes @ 0x2
   339   000062                     	ds	2
   340   000064                     dtoa@w:
   341                           	callstack 0
   342                           
   343                           ; 2 bytes @ 0x4
   344   000064                     	ds	2
   345   000066                     dtoa@n:
   346                           	callstack 0
   347                           
   348                           ; 8 bytes @ 0x6
   349   000066                     	ds	8
   350   00006E                     dtoa@s:
   351                           	callstack 0
   352                           
   353                           ; 1 bytes @ 0xE
   354   00006E                     	ds	1
   355   00006F                     dtoa@i:
   356                           	callstack 0
   357                           
   358                           ; 2 bytes @ 0xF
   359   00006F                     	ds	2
   360   000071                     vfpfcnvrt@convarg:
   361                           	callstack 0
   362                           
   363                           ; 8 bytes @ 0x11
   364   000071                     	ds	8
   365   000079                     vfpfcnvrt@done:
   366                           	callstack 0
   367                           
   368                           ; 2 bytes @ 0x19
   369   000079                     	ds	2
   370   00007B                     vfpfcnvrt@cp:
   371                           	callstack 0
   372                           
   373                           ; 2 bytes @ 0x1B
   374   00007B                     	ds	2
   375   00007D                     ?_vfprintf:
   376                           	callstack 0
   377   00007D                     vfprintf@fp:
   378                           	callstack 0
   379                           
   380                           ; 2 bytes @ 0x1D
   381   00007D                     	ds	2
   382   00007F                     vfprintf@fmt:
   383                           	callstack 0
   384                           
   385                           ; 2 bytes @ 0x1F
   386   00007F                     	ds	2
   387   000081                     vfprintf@ap:
   388                           	callstack 0
   389                           
   390                           ; 2 bytes @ 0x21
   391   000081                     	ds	2
   392   000083                     ?_sprintf:
   393                           	callstack 0
   394   000083                     sprintf@s:
   395                           	callstack 0
   396                           
   397                           ; 2 bytes @ 0x23
   398   000083                     	ds	2
   399   000085                     sprintf@fmt:
   400                           	callstack 0
   401                           
   402                           ; 2 bytes @ 0x25
   403   000085                     	ds	4
   404   000089                     sprintf@ap:
   405                           	callstack 0
   406                           
   407                           ; 2 bytes @ 0x29
   408   000089                     	ds	2
   409   00008B                     sprintf@f:
   410                           	callstack 0
   411                           
   412                           ; 11 bytes @ 0x2B
   413   00008B                     	ds	11
   414   000096                     main@string2:
   415                           	callstack 0
   416                           
   417                           ; 40 bytes @ 0x36
   418   000096                     	ds	40
   419   0000BE                     main@color_detected:
   420                           	callstack 0
   421                           
   422                           ; 1 bytes @ 0x5E
   423   0000BE                     	ds	1
   424   0000BF                     main@cont:
   425                           	callstack 0
   426                           
   427                           ; 1 bytes @ 0x5F
   428   0000BF                     	ds	1
   429   0000C0                     main@initial_color:
   430                           	callstack 0
   431                           
   432                           ; 8 bytes @ 0x60
   433   0000C0                     	ds	8
   434                           
   435                           	psect	cstackCOMRAM
   436   000001                     __pcstackCOMRAM:
   437                           	callstack 0
   438   000001                     ??_getCharFromTxBuf:
   439   000001                     ??i2_I2C_2_Master_Idle:
   440   000001                     putCharToRxBuf@byte:
   441                           	callstack 0
   442   000001                     
   443                           ; 1 bytes @ 0x0
   444   000001                     	ds	1
   445   000002                     i2I2C_2_Master_Write@data_byte:
   446                           	callstack 0
   447                           
   448                           ; 1 bytes @ 0x1
   449   000002                     	ds	1
   450   000003                     i2color_writetoaddr@value:
   451                           	callstack 0
   452                           
   453                           ; 1 bytes @ 0x2
   454   000003                     	ds	1
   455   000004                     i2color_writetoaddr@address:
   456                           	callstack 0
   457                           
   458                           ; 1 bytes @ 0x3
   459   000004                     	ds	1
   460   000005                     ??i2_init_colorclick_interrupts:
   461                           
   462                           ; 1 bytes @ 0x4
   463   000005                     	ds	1
   464   000006                     ??_HighISR:
   465   000006                     
   466                           ; 1 bytes @ 0x5
   467   000006                     	ds	3
   468   000009                     HighISR@a:
   469                           	callstack 0
   470                           
   471                           ; 1 bytes @ 0x8
   472   000009                     	ds	1
   473   00000A                     ??_LowISR:
   474                           
   475                           ; 1 bytes @ 0x9
   476   00000A                     	ds	3
   477   00000D                     ??_I2C_2_Master_Idle:
   478   00000D                     ??_getCharFromRxBuf:
   479   00000D                     ?_isdigit:
   480                           	callstack 0
   481   00000D                     ?_isspace:
   482                           	callstack 0
   483   00000D                     ?___wmul:
   484                           	callstack 0
   485   00000D                     ?___lwdiv:
   486                           	callstack 0
   487   00000D                     ?___aodiv:
   488                           	callstack 0
   489   00000D                     ?___aomod:
   490                           	callstack 0
   491   00000D                     putCharToTxBuf@byte:
   492                           	callstack 0
   493   00000D                     ___wmul@multiplier:
   494                           	callstack 0
   495   00000D                     ___lwdiv@dividend:
   496                           	callstack 0
   497   00000D                     isdigit@c:
   498                           	callstack 0
   499   00000D                     isspace@c:
   500                           	callstack 0
   501   00000D                     fputc@c:
   502                           	callstack 0
   503   00000D                     ___aodiv@dividend:
   504                           	callstack 0
   505   00000D                     ___aomod@dividend:
   506                           	callstack 0
   507                           
   508                           ; 8 bytes @ 0xC
   509   00000D                     	ds	1
   510   00000E                     ??_I2C_2_Master_Read:
   511   00000E                     I2C_2_Master_Write@data_byte:
   512                           	callstack 0
   513   00000E                     TxBufferedString@string:
   514                           	callstack 0
   515                           
   516                           ; 2 bytes @ 0xD
   517   00000E                     	ds	1
   518   00000F                     ??_isdigit:
   519   00000F                     ??_isspace:
   520   00000F                     color_writetoaddr@value:
   521                           	callstack 0
   522   00000F                     I2C_2_Master_Read@ack:
   523                           	callstack 0
   524   00000F                     ___wmul@multiplicand:
   525                           	callstack 0
   526   00000F                     ___lwdiv@divisor:
   527                           	callstack 0
   528   00000F                     fputc@fp:
   529                           	callstack 0
   530                           
   531                           ; 2 bytes @ 0xE
   532   00000F                     	ds	1
   533   000010                     color_writetoaddr@address:
   534                           	callstack 0
   535   000010                     I2C_2_Master_Read@tmp:
   536                           	callstack 0
   537                           
   538                           ; 1 bytes @ 0xF
   539   000010                     	ds	1
   540   000011                     ??_fputc:
   541   000011                     ??_color_click_init:
   542   000011                     ??_init_colorclick_interrupts:
   543   000011                     ?_color_read_Red:
   544                           	callstack 0
   545   000011                     ?_color_read_Green:
   546                           	callstack 0
   547   000011                     ?_color_read_Blue:
   548                           	callstack 0
   549   000011                     ?_color_read_Clear:
   550                           	callstack 0
   551   000011                     _isspace$2477:
   552                           	callstack 0
   553   000011                     ___wmul@product:
   554                           	callstack 0
   555   000011                     ___lwdiv@quotient:
   556                           	callstack 0
   557                           
   558                           ; 2 bytes @ 0x10
   559   000011                     	ds	1
   560   000012                     
   561                           ; 1 bytes @ 0x11
   562   000012                     	ds	1
   563   000013                     ??_color_read_Red:
   564   000013                     ??_color_read_Green:
   565   000013                     ??_color_read_Blue:
   566   000013                     ??_color_read_Clear:
   567   000013                     ?_atoi:
   568                           	callstack 0
   569   000013                     ___lwdiv@counter:
   570                           	callstack 0
   571   000013                     atoi@s:
   572                           	callstack 0
   573                           
   574                           ; 2 bytes @ 0x12
   575   000013                     	ds	1
   576   000014                     detect_color@tempval:
   577                           	callstack 0
   578                           
   579                           ; 2 bytes @ 0x13
   580   000014                     	ds	1
   581   000015                     ??_atoi:
   582   000015                     ___aodiv@divisor:
   583                           	callstack 0
   584   000015                     ___aomod@divisor:
   585                           	callstack 0
   586                           
   587                           ; 8 bytes @ 0x14
   588   000015                     	ds	1
   589   000016                     ??_detect_color:
   590   000016                     color_read_Red@tmp:
   591                           	callstack 0
   592   000016                     color_read_Green@tmp:
   593                           	callstack 0
   594   000016                     color_read_Blue@tmp:
   595                           	callstack 0
   596   000016                     color_read_Clear@tmp:
   597                           	callstack 0
   598   000016                     fputs@s:
   599                           	callstack 0
   600                           
   601                           ; 2 bytes @ 0x15
   602   000016                     	ds	2
   603   000018                     Update_RGBC@tempval:
   604                           	callstack 0
   605   000018                     atoi@neg:
   606                           	callstack 0
   607   000018                     fputs@fp:
   608                           	callstack 0
   609                           
   610                           ; 2 bytes @ 0x17
   611   000018                     	ds	2
   612   00001A                     fputs@c:
   613                           	callstack 0
   614   00001A                     atoi@n:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0x19
   618   00001A                     	ds	1
   619   00001B                     fputs@i:
   620                           	callstack 0
   621                           
   622                           ; 2 bytes @ 0x1A
   623   00001B                     	ds	2
   624   00001D                     ___aodiv@counter:
   625                           	callstack 0
   626   00001D                     ___aomod@counter:
   627                           	callstack 0
   628   00001D                     pad@fp:
   629                           	callstack 0
   630                           
   631                           ; 2 bytes @ 0x1C
   632   00001D                     	ds	1
   633   00001E                     detect_color@color:
   634                           	callstack 0
   635   00001E                     ___aodiv@sign:
   636                           	callstack 0
   637   00001E                     ___aomod@sign:
   638                           	callstack 0
   639                           
   640                           ; 1 bytes @ 0x1D
   641   00001E                     	ds	1
   642   00001F                     ?_abs:
   643                           	callstack 0
   644   00001F                     pad@buf:
   645                           	callstack 0
   646   00001F                     abs@a:
   647                           	callstack 0
   648   00001F                     ___aodiv@quotient:
   649                           	callstack 0
   650                           
   651                           ; 8 bytes @ 0x1E
   652   00001F                     	ds	2
   653   000021                     ??_abs:
   654   000021                     pad@p:
   655                           	callstack 0
   656                           
   657                           ; 2 bytes @ 0x20
   658   000021                     	ds	2
   659   000023                     ??_pad:
   660                           
   661                           ; 1 bytes @ 0x22
   662   000023                     	ds	1
   663   000024                     pad@i:
   664                           	callstack 0
   665                           
   666                           ; 2 bytes @ 0x23
   667   000024                     	ds	2
   668   000026                     pad@w:
   669                           	callstack 0
   670                           
   671                           ; 2 bytes @ 0x25
   672   000026                     	ds	2
   673   000028                     dtoa@fp:
   674                           	callstack 0
   675                           
   676                           ; 2 bytes @ 0x27
   677   000028                     	ds	2
   678   00002A                     dtoa@d:
   679                           	callstack 0
   680                           
   681                           ; 8 bytes @ 0x29
   682   00002A                     	ds	8
   683   000032                     ??_dtoa:
   684                           
   685                           ; 1 bytes @ 0x31
   686   000032                     	ds	8
   687   00003A                     vfpfcnvrt@fp:
   688                           	callstack 0
   689                           
   690                           ; 2 bytes @ 0x39
   691   00003A                     	ds	2
   692   00003C                     vfpfcnvrt@fmt:
   693                           	callstack 0
   694                           
   695                           ; 2 bytes @ 0x3B
   696   00003C                     	ds	2
   697   00003E                     vfpfcnvrt@ap:
   698                           	callstack 0
   699                           
   700                           ; 2 bytes @ 0x3D
   701   00003E                     	ds	2
   702   000040                     ??_vfpfcnvrt:
   703                           
   704                           ; 1 bytes @ 0x3F
   705   000040                     	ds	3
   706   000043                     vfprintf@cfmt:
   707                           	callstack 0
   708                           
   709                           ; 2 bytes @ 0x42
   710   000043                     	ds	2
   711   000045                     
   712                           ; 1 bytes @ 0x44
   713 ;;
   714 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   715 ;;
   716 ;; *************** function _main *****************
   717 ;; Defined at:
   718 ;;		line 20 in file "main_calibration.c"
   719 ;; Parameters:    Size  Location     Type
   720 ;;		None
   721 ;; Auto vars:     Size  Location     Type
   722 ;;  string2        40   54[BANK0 ] unsigned char [40]
   723 ;;  cont            1   95[BANK0 ] unsigned char 
   724 ;;  color_detect    1   94[BANK0 ] unsigned char 
   725 ;;  readingsC     200    0        int [100]
   726 ;;  readingsB     200    0        int [100]
   727 ;;  readingsG     200    0        int [100]
   728 ;;  readingsR     200    0        int [100]
   729 ;;  initial_colo    8   96[BANK0 ] struct RGB_val
   730 ;;  a               1    0        unsigned char 
   731 ;; Return value:  Size  Location     Type
   732 ;;                  1    wreg      void 
   733 ;; Registers used:
   734 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   735 ;; Tracked objects:
   736 ;;		On entry : 0/0
   737 ;;		On exit  : 0/0
   738 ;;		Unchanged: 0/0
   739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   741 ;;      Locals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   743 ;;      Totals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   744 ;;Total ram usage:       50 bytes
   745 ;; Hardware stack levels required when called: 15
   746 ;; This function calls:
   747 ;;		_Interrupts_init
   748 ;;		_LED_init
   749 ;;		_Timer0_init
   750 ;;		_TxBufferedString
   751 ;;		_Update_RGBC
   752 ;;		_WhiteLight
   753 ;;		_color_click_init
   754 ;;		_detect_color
   755 ;;		_getCharFromRxBuf
   756 ;;		_initUSART4
   757 ;;		_isDataInRxBuf
   758 ;;		_sendTxBuf
   759 ;;		_sprintf
   760 ;; This function is called by:
   761 ;;		Startup code after reset
   762 ;; This function uses a non-reentrant model
   763 ;;
   764                           
   765                           	psect	text0
   766   0019F4                     __ptext0:
   767                           	callstack 0
   768   0019F4                     _main:
   769                           	callstack 16
   770   0019F4                     
   771                           ;main_calibration.c: 23:     RGB_val initial_color;;main_calibration.c: 24:     initial_
      +                          color.R = 0;
   772   0019F4  0E00               	movlw	0
   773   0019F6  0100               	movlb	0	; () banked
   774   0019F8  6FC1               	movwf	(main@initial_color+1)& (0+255),b
   775   0019FA  0E00               	movlw	0
   776   0019FC  6FC0               	movwf	main@initial_color& (0+255),b
   777                           
   778                           ;main_calibration.c: 25:     initial_color.G = 0;
   779   0019FE  0E00               	movlw	0
   780   001A00  6FC3               	movwf	(main@initial_color+3)& (0+255),b
   781   001A02  0E00               	movlw	0
   782   001A04  6FC2               	movwf	(main@initial_color+2)& (0+255),b
   783                           
   784                           ;main_calibration.c: 26:     initial_color.B = 0;
   785   001A06  0E00               	movlw	0
   786   001A08  6FC5               	movwf	(main@initial_color+5)& (0+255),b
   787   001A0A  0E00               	movlw	0
   788   001A0C  6FC4               	movwf	(main@initial_color+4)& (0+255),b
   789                           
   790                           ;main_calibration.c: 27:     initial_color.C = 0;
   791   001A0E  0E00               	movlw	0
   792   001A10  6FC7               	movwf	(main@initial_color+7)& (0+255),b
   793   001A12  0E00               	movlw	0
   794   001A14  6FC6               	movwf	(main@initial_color+6)& (0+255),b
   795   001A16                     
   796                           ; BSR set to: 0
   797                           ;main_calibration.c: 29:     LED_init();
   798   001A16  ECDA  F011         	call	_LED_init	;wreg free
   799   001A1A                     
   800                           ;main_calibration.c: 30:     color_click_init();
   801   001A1A  EC4F  F010         	call	_color_click_init	;wreg free
   802   001A1E                     
   803                           ;main_calibration.c: 31:     Interrupts_init();
   804   001A1E  EC3D  F011         	call	_Interrupts_init	;wreg free
   805                           
   806                           ;main_calibration.c: 32:     initUSART4();
   807   001A22  EC80  F011         	call	_initUSART4	;wreg free
   808                           
   809                           ;main_calibration.c: 33:     Timer0_init();
   810   001A26  EC50  F011         	call	_Timer0_init	;wreg free
   811   001A2A                     l447:
   812                           
   813                           ;main_calibration.c: 42:         WhiteLight();
   814   001A2A  EC05  F012         	call	_WhiteLight	;wreg free
   815   001A2E                     
   816                           ;main_calibration.c: 43:         Update_RGBC(&initial_color);
   817   001A2E  0EC0               	movlw	low main@initial_color
   818   001A30  6E18               	movwf	Update_RGBC@tempval^0,c
   819   001A32  0E00               	movlw	high main@initial_color
   820   001A34  6E19               	movwf	(Update_RGBC@tempval+1)^0,c
   821   001A36  EC36  F00E         	call	_Update_RGBC	;wreg free
   822   001A3A                     
   823                           ;main_calibration.c: 100:         unsigned char color_detected;;main_calibration.c: 101:
      +                                   color_detected = detect_color(&initial_color);
   824   001A3A  0EC0               	movlw	low main@initial_color
   825   001A3C  6E14               	movwf	detect_color@tempval^0,c
   826   001A3E  0E00               	movlw	high main@initial_color
   827   001A40  6E15               	movwf	(detect_color@tempval+1)^0,c
   828   001A42  ECEB  F00B         	call	_detect_color	;wreg free
   829   001A46  0100               	movlb	0	; () banked
   830   001A48  6FBE               	movwf	main@color_detected& (0+255),b
   831   001A4A                     
   832                           ; BSR set to: 0
   833                           ;main_calibration.c: 103:         char cont = 0x00;
   834   001A4A  0E00               	movlw	0
   835   001A4C  6FBF               	movwf	main@cont& (0+255),b
   836                           
   837                           ;main_calibration.c: 105:         while(isDataInRxBuf()){
   838   001A4E  EF2D  F00D         	goto	l3208
   839   001A52                     l3206:
   840                           
   841                           ;main_calibration.c: 107:             cont = getCharFromRxBuf();
   842   001A52  EC97  F010         	call	_getCharFromRxBuf	;wreg free
   843   001A56  0100               	movlb	0	; () banked
   844   001A58  6FBF               	movwf	main@cont& (0+255),b
   845   001A5A                     l3208:
   846                           
   847                           ; BSR set to: 0
   848                           ;main_calibration.c: 105:         while(isDataInRxBuf()){
   849   001A5A  ECC2  F011         	call	_isDataInRxBuf	;wreg free
   850   001A5E  0900               	iorlw	0
   851   001A60  A4D8               	btfss	status,2,c
   852   001A62  EF35  F00D         	goto	u2281
   853   001A66  EF37  F00D         	goto	u2280
   854   001A6A                     u2281:
   855   001A6A  EF29  F00D         	goto	l3206
   856   001A6E                     u2280:
   857   001A6E                     
   858                           ;main_calibration.c: 110:         if(cont == 0x01){
   859   001A6E  0100               	movlb	0	; () banked
   860   001A70  05BF               	decf	main@cont& (0+255),w,b
   861   001A72  A4D8               	btfss	status,2,c
   862   001A74  EF3E  F00D         	goto	u2291
   863   001A78  EF40  F00D         	goto	u2290
   864   001A7C                     u2291:
   865   001A7C  EF15  F00D         	goto	l447
   866   001A80                     u2290:
   867   001A80                     
   868                           ; BSR set to: 0
   869                           ;main_calibration.c: 112:             char string2[40];;main_calibration.c: 113:        
      +                               sprintf(string2,"\nColor Detected = %01d\n",color_detected);
   870   001A80  0E96               	movlw	low main@string2
   871   001A82  6F83               	movwf	sprintf@s& (0+255),b
   872   001A84  0E00               	movlw	high main@string2
   873   001A86  6F84               	movwf	(sprintf@s+1)& (0+255),b
   874   001A88  0E01               	movlw	low STR_1
   875   001A8A  6F85               	movwf	sprintf@fmt& (0+255),b
   876   001A8C  0E0E               	movlw	high STR_1
   877   001A8E  6F86               	movwf	(sprintf@fmt+1)& (0+255),b
   878   001A90  C0BE  F087         	movff	main@color_detected,?_sprintf+4
   879   001A94  6B88               	clrf	(?_sprintf+5)& (0+255),b
   880   001A96  EC8F  F00E         	call	_sprintf	;wreg free
   881   001A9A                     
   882                           ;main_calibration.c: 114:             TxBufferedString(string2);
   883   001A9A  0E96               	movlw	low main@string2
   884   001A9C  6E0E               	movwf	TxBufferedString@string^0,c
   885   001A9E  0E00               	movlw	high main@string2
   886   001AA0  6E0F               	movwf	(TxBufferedString@string+1)^0,c
   887   001AA2  EC69  F010         	call	_TxBufferedString	;wreg free
   888   001AA6                     
   889                           ;main_calibration.c: 116:             sendTxBuf();
   890   001AA6  EC8F  F011         	call	_sendTxBuf	;wreg free
   891   001AAA  EF15  F00D         	goto	l447
   892   001AAE  EF2C  F000         	goto	start
   893   001AB2                     __end_of_main:
   894                           	callstack 0
   895                           
   896 ;; *************** function _sprintf *****************
   897 ;; Defined at:
   898 ;;		line 9 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\nf_sprintf.c"
   899 ;; Parameters:    Size  Location     Type
   900 ;;  s               2   35[BANK0 ] PTR unsigned char 
   901 ;;		 -> main@string2(40), 
   902 ;;  fmt             2   37[BANK0 ] PTR const unsigned char 
   903 ;;		 -> STR_1(24), 
   904 ;; Auto vars:     Size  Location     Type
   905 ;;  f              11   43[BANK0 ] struct _IO_FILE
   906 ;;  ap              2   41[BANK0 ] PTR void [1]
   907 ;;		 -> ?_sprintf(2), 
   908 ;;  ret             2    0        int 
   909 ;; Return value:  Size  Location     Type
   910 ;;                  2   35[BANK0 ] int 
   911 ;; Registers used:
   912 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   913 ;; Tracked objects:
   914 ;;		On entry : 0/0
   915 ;;		On exit  : 0/0
   916 ;;		Unchanged: 0/0
   917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   918 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   919 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   921 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   922 ;;Total ram usage:       19 bytes
   923 ;; Hardware stack levels used: 1
   924 ;; Hardware stack levels required when called: 14
   925 ;; This function calls:
   926 ;;		_vfprintf
   927 ;; This function is called by:
   928 ;;		_main
   929 ;; This function uses a non-reentrant model
   930 ;;
   931                           
   932                           	psect	text1
   933   001D1E                     __ptext1:
   934                           	callstack 0
   935   001D1E                     _sprintf:
   936                           	callstack 16
   937   001D1E  0E87               	movlw	low (?_sprintf+4)
   938   001D20  0100               	movlb	0	; () banked
   939   001D22  6F89               	movwf	sprintf@ap& (0+255),b
   940   001D24  0E00               	movlw	high (?_sprintf+4)
   941   001D26  6F8A               	movwf	(sprintf@ap+1)& (0+255),b
   942   001D28  C083  F08B         	movff	sprintf@s,sprintf@f
   943   001D2C  C084  F08C         	movff	sprintf@s+1,sprintf@f+1
   944   001D30                     
   945                           ; BSR set to: 0
   946   001D30  0E00               	movlw	0
   947   001D32  6F8F               	movwf	(sprintf@f+4)& (0+255),b
   948   001D34  0E00               	movlw	0
   949   001D36  6F8E               	movwf	(sprintf@f+3)& (0+255),b
   950   001D38                     
   951                           ; BSR set to: 0
   952   001D38  0E00               	movlw	0
   953   001D3A  6F95               	movwf	(sprintf@f+10)& (0+255),b
   954   001D3C  0E00               	movlw	0
   955   001D3E  6F94               	movwf	(sprintf@f+9)& (0+255),b
   956   001D40                     
   957                           ; BSR set to: 0
   958   001D40  0E8B               	movlw	low sprintf@f
   959   001D42  6F7D               	movwf	vfprintf@fp& (0+255),b
   960   001D44  0E00               	movlw	high sprintf@f
   961   001D46  6F7E               	movwf	(vfprintf@fp+1)& (0+255),b
   962   001D48  C085  F07F         	movff	sprintf@fmt,vfprintf@fmt
   963   001D4C  C086  F080         	movff	sprintf@fmt+1,vfprintf@fmt+1
   964   001D50  0E89               	movlw	low sprintf@ap
   965   001D52  6F81               	movwf	vfprintf@ap& (0+255),b
   966   001D54  0E00               	movlw	high sprintf@ap
   967   001D56  6F82               	movwf	(vfprintf@ap+1)& (0+255),b
   968   001D58  EC65  F00E         	call	_vfprintf	;wreg free
   969   001D5C  0100               	movlb	0	; () banked
   970   001D5E  518E               	movf	(sprintf@f+3)& (0+255),w,b
   971   001D60  2583               	addwf	sprintf@s& (0+255),w,b
   972   001D62  6ED9               	movwf	fsr2l,c
   973   001D64  518F               	movf	(sprintf@f+4)& (0+255),w,b
   974   001D66  2184               	addwfc	(sprintf@s+1)& (0+255),w,b
   975   001D68  6EDA               	movwf	fsr2h,c
   976   001D6A  0E00               	movlw	0
   977   001D6C  6EDF               	movwf	indf2,c
   978   001D6E                     
   979                           ; BSR set to: 0
   980   001D6E  0012               	return		;funcret
   981   001D70                     __end_of_sprintf:
   982                           	callstack 0
   983                           
   984 ;; *************** function _vfprintf *****************
   985 ;; Defined at:
   986 ;;		line 1520 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c"
   987 ;; Parameters:    Size  Location     Type
   988 ;;  fp              2   29[BANK0 ] PTR struct _IO_FILE
   989 ;;		 -> sprintf@f(11), 
   990 ;;  fmt             2   31[BANK0 ] PTR const unsigned char 
   991 ;;		 -> STR_1(24), 
   992 ;;  ap              2   33[BANK0 ] PTR PTR void 
   993 ;;		 -> sprintf@ap(2), 
   994 ;; Auto vars:     Size  Location     Type
   995 ;;  cfmt            2   66[COMRAM] PTR unsigned char 
   996 ;;		 -> STR_1(24), 
   997 ;; Return value:  Size  Location     Type
   998 ;;                  2   29[BANK0 ] int 
   999 ;; Registers used:
  1000 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1001 ;; Tracked objects:
  1002 ;;		On entry : 0/0
  1003 ;;		On exit  : 0/0
  1004 ;;		Unchanged: 0/0
  1005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1006 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1007 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1009 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1010 ;;Total ram usage:        8 bytes
  1011 ;; Hardware stack levels used: 1
  1012 ;; Hardware stack levels required when called: 13
  1013 ;; This function calls:
  1014 ;;		_vfpfcnvrt
  1015 ;; This function is called by:
  1016 ;;		_sprintf
  1017 ;; This function uses a non-reentrant model
  1018 ;;
  1019                           
  1020                           	psect	text2
  1021   001CCA                     __ptext2:
  1022                           	callstack 0
  1023   001CCA                     _vfprintf:
  1024                           	callstack 16
  1025   001CCA                     
  1026                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1520: int vfprintf(FILE *fp, const c
      +                          har *fmt, va_list ap);D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1521: {;D:\MPLA
      +                          B_COMPILER\pic\sources\c99\common\doprnt.c: 1523:     char *cfmt;;D:\MPLAB_COMPILER\pic\
      +                          sources\c99\common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1027   001CCA  C07F  F043         	movff	vfprintf@fmt,vfprintf@cfmt
  1028   001CCE  C080  F044         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1029                           
  1030                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1529:     while (*cfmt) {
  1031   001CD2  EF79  F00E         	goto	l3172
  1032   001CD6                     l3170:
  1033                           
  1034                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvrt(fp, &cfmt, ap);
  1035   001CD6  C07D  F03A         	movff	vfprintf@fp,vfpfcnvrt@fp
  1036   001CDA  C07E  F03B         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1037   001CDE  0E43               	movlw	low vfprintf@cfmt
  1038   001CE0  6E3C               	movwf	vfpfcnvrt@fmt^0,c
  1039   001CE2  0E00               	movlw	high vfprintf@cfmt
  1040   001CE4  6E3D               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1041   001CE6  C081  F03E         	movff	vfprintf@ap,vfpfcnvrt@ap
  1042   001CEA  C082  F03F         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1043   001CEE  EC0D  F007         	call	_vfpfcnvrt	;wreg free
  1044   001CF2                     l3172:
  1045                           
  1046                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1529:     while (*cfmt) {
  1047   001CF2  C043  FFF6         	movff	vfprintf@cfmt,tblptrl
  1048   001CF6  C044  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1049   001CFA                     	if	0	;tblptru may be non-zero
  1050   001CFA                     	endif
  1051   001CFA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1052   001CFA  0E00               	movlw	low (__mediumconst shr (0+16))
  1053   001CFC  6EF8               	movwf	tblptru,c
  1054   001CFE                     	endif
  1055   001CFE  0008               	tblrd		*
  1056   001D00  50F5               	movf	tablat,w,c
  1057   001D02  0900               	iorlw	0
  1058   001D04  A4D8               	btfss	status,2,c
  1059   001D06  EF87  F00E         	goto	u2271
  1060   001D0A  EF89  F00E         	goto	u2270
  1061   001D0E                     u2271:
  1062   001D0E  EF6B  F00E         	goto	l3170
  1063   001D12                     u2270:
  1064   001D12                     
  1065                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1066   001D12  0E00               	movlw	0
  1067   001D14  0100               	movlb	0	; () banked
  1068   001D16  6F7E               	movwf	(?_vfprintf+1)& (0+255),b
  1069   001D18  0E00               	movlw	0
  1070   001D1A  6F7D               	movwf	?_vfprintf& (0+255),b
  1071   001D1C                     
  1072                           ; BSR set to: 0
  1073   001D1C  0012               	return		;funcret
  1074   001D1E                     __end_of_vfprintf:
  1075                           	callstack 0
  1076                           
  1077 ;; *************** function _vfpfcnvrt *****************
  1078 ;; Defined at:
  1079 ;;		line 1007 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c"
  1080 ;; Parameters:    Size  Location     Type
  1081 ;;  fp              2   57[COMRAM] PTR struct _IO_FILE
  1082 ;;		 -> sprintf@f(11), 
  1083 ;;  fmt             2   59[COMRAM] PTR PTR unsigned char 
  1084 ;;		 -> vfprintf@cfmt(2), 
  1085 ;;  ap              2   61[COMRAM] PTR PTR void 
  1086 ;;		 -> sprintf@ap(2), 
  1087 ;; Auto vars:     Size  Location     Type
  1088 ;;  convarg         8   17[BANK0 ] struct .
  1089 ;;  cp              2   27[BANK0 ] PTR unsigned char 
  1090 ;;		 -> STR_1(24), 
  1091 ;;  done            2   25[BANK0 ] int 
  1092 ;;  i               2    0        int 
  1093 ;;  c               1    0        unsigned char 
  1094 ;; Return value:  Size  Location     Type
  1095 ;;                  1    wreg      void 
  1096 ;; Registers used:
  1097 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1098 ;; Tracked objects:
  1099 ;;		On entry : 0/0
  1100 ;;		On exit  : 0/0
  1101 ;;		Unchanged: 0/0
  1102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1103 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1104 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1105 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1106 ;;      Totals:         9      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1107 ;;Total ram usage:       21 bytes
  1108 ;; Hardware stack levels used: 1
  1109 ;; Hardware stack levels required when called: 12
  1110 ;; This function calls:
  1111 ;;		_atoi
  1112 ;;		_dtoa
  1113 ;;		_fputc
  1114 ;;		_isdigit
  1115 ;; This function is called by:
  1116 ;;		_vfprintf
  1117 ;; This function uses a non-reentrant model
  1118 ;;
  1119                           
  1120                           	psect	text3
  1121   000E1A                     __ptext3:
  1122                           	callstack 0
  1123   000E1A                     _vfpfcnvrt:
  1124                           	callstack 16
  1125   000E1A                     
  1126                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(FILE *fp, char *fmt[
      +                          ], va_list ap);D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1008: {;D:\MPLAB_COMPI
      +                          LER\pic\sources\c99\common\doprnt.c: 1009:     char c, *cp;;D:\MPLAB_COMPILER\pic\source
      +                          s\c99\common\doprnt.c: 1010:     int done, i;;D:\MPLAB_COMPILER\pic\sources\c99\common\d
      +                          oprnt.c: 1016:  } convarg;;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1019:     
      +                          if ((*fmt)[0] == '%') {
  1127   000E1A  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1128   000E1E  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1129   000E22  CFDE FFF6          	movff	postinc2,tblptrl
  1130   000E26  CFDD FFF7          	movff	postdec2,tblptrh
  1131   000E2A                     	if	0	;tblptru may be non-zero
  1132   000E2A                     	endif
  1133   000E2A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1134   000E2A  0E00               	movlw	low (__mediumconst shr (0+16))
  1135   000E2C  6EF8               	movwf	tblptru,c
  1136   000E2E                     	endif
  1137   000E2E  0008               	tblrd		*
  1138   000E30  50F5               	movf	tablat,w,c
  1139   000E32  0A25               	xorlw	37
  1140   000E34  A4D8               	btfss	status,2,c
  1141   000E36  EF1F  F007         	goto	u2201
  1142   000E3A  EF21  F007         	goto	u2200
  1143   000E3E                     u2201:
  1144   000E3E  EF53  F008         	goto	l3154
  1145   000E42                     u2200:
  1146   000E42                     
  1147                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1020:         ++*fmt;
  1148   000E42  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1149   000E46  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1150   000E4A  2ADE               	incf	postinc2,f,c
  1151   000E4C  0E00               	movlw	0
  1152   000E4E  22DD               	addwfc	postdec2,f,c
  1153   000E50                     
  1154                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1022:         flags = width = 0;
  1155   000E50  0E00               	movlw	0
  1156   000E52  0100               	movlb	0	; () banked
  1157   000E54  6FDD               	movwf	(_width+1)& (0+255),b
  1158   000E56  0E00               	movlw	0
  1159   000E58  6FDC               	movwf	_width& (0+255),b
  1160   000E5A  C0DC  F049         	movff	_width,_flags
  1161   000E5E                     
  1162                           ; BSR set to: 0
  1163                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1023:         prec = -1;
  1164   000E5E  6845               	setf	_prec^0,c
  1165   000E60  6846               	setf	(_prec+1)^0,c
  1166   000E62                     
  1167                           ; BSR set to: 0
  1168                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1027:         done = 0;
  1169   000E62  0E00               	movlw	0
  1170   000E64  6F7A               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1171   000E66  0E00               	movlw	0
  1172   000E68  6F79               	movwf	vfpfcnvrt@done& (0+255),b
  1173                           
  1174                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1028:         while (!done) {
  1175   000E6A  EF63  F007         	goto	l3120
  1176   000E6E                     l3110:
  1177                           
  1178                           ; BSR set to: 0
  1179                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1038:                     flags |= (
      +                          1 << 1);
  1180   000E6E  8249               	bsf	_flags^0,1,c
  1181   000E70                     
  1182                           ; BSR set to: 0
  1183                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1039:                     ++*fmt;
  1184   000E70  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1185   000E74  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1186   000E78  2ADE               	incf	postinc2,f,c
  1187   000E7A  0E00               	movlw	0
  1188   000E7C  22DD               	addwfc	postdec2,f,c
  1189                           
  1190                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1040:                     break;
  1191   000E7E  EF63  F007         	goto	l3120
  1192   000E82                     l3114:
  1193                           
  1194                           ; BSR set to: 0
  1195                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1061:                     done = 1;
  1196   000E82  0E00               	movlw	0
  1197   000E84  6F7A               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1198   000E86  0E01               	movlw	1
  1199   000E88  6F79               	movwf	vfpfcnvrt@done& (0+255),b
  1200                           
  1201                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1062:                     break;
  1202   000E8A  EF63  F007         	goto	l3120
  1203   000E8E                     l3118:
  1204                           
  1205                           ; BSR set to: 0
  1206   000E8E  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1207   000E92  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1208   000E96  CFDE FFF6          	movff	postinc2,tblptrl
  1209   000E9A  CFDD FFF7          	movff	postdec2,tblptrh
  1210   000E9E                     	if	0	;tblptru may be non-zero
  1211   000E9E                     	endif
  1212   000E9E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1213   000E9E  0E00               	movlw	low (__mediumconst shr (0+16))
  1214   000EA0  6EF8               	movwf	tblptru,c
  1215   000EA2                     	endif
  1216   000EA2  0008               	tblrd		*
  1217   000EA4  50F5               	movf	tablat,w,c
  1218   000EA6  6E40               	movwf	??_vfpfcnvrt^0,c
  1219   000EA8  6A41               	clrf	(??_vfpfcnvrt+1)^0,c
  1220                           
  1221                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1222                           ; Switch size 1, requested type "simple"
  1223                           ; Number of cases is 1, Range of values is 0 to 0
  1224                           ; switch strategies available:
  1225                           ; Name         Instructions Cycles
  1226                           ; simple_byte            4     3 (average)
  1227                           ;	Chosen strategy is simple_byte
  1228   000EAA  5041               	movf	(??_vfpfcnvrt+1)^0,w,c
  1229   000EAC  0A00               	xorlw	0	; case 0
  1230   000EAE  B4D8               	btfsc	status,2,c
  1231   000EB0  EF5C  F007         	goto	l3280
  1232   000EB4  EF41  F007         	goto	l3114
  1233   000EB8                     l3280:
  1234                           
  1235                           ; BSR set to: 0
  1236                           ; Switch size 1, requested type "simple"
  1237                           ; Number of cases is 1, Range of values is 48 to 48
  1238                           ; switch strategies available:
  1239                           ; Name         Instructions Cycles
  1240                           ; simple_byte            4     3 (average)
  1241                           ;	Chosen strategy is simple_byte
  1242   000EB8  5040               	movf	??_vfpfcnvrt^0,w,c
  1243   000EBA  0A30               	xorlw	48	; case 48
  1244   000EBC  B4D8               	btfsc	status,2,c
  1245   000EBE  EF37  F007         	goto	l3110
  1246   000EC2  EF41  F007         	goto	l3114
  1247   000EC6                     l3120:
  1248                           
  1249                           ; BSR set to: 0
  1250                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1028:         while (!done) {
  1251   000EC6  5179               	movf	vfpfcnvrt@done& (0+255),w,b
  1252   000EC8  117A               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  1253   000ECA  B4D8               	btfsc	status,2,c
  1254   000ECC  EF6A  F007         	goto	u2211
  1255   000ED0  EF6C  F007         	goto	u2210
  1256   000ED4                     u2211:
  1257   000ED4  EF47  F007         	goto	l3118
  1258   000ED8                     u2210:
  1259   000ED8                     
  1260                           ; BSR set to: 0
  1261                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1074:         if ((*fmt)[0] == '*') 
      +                          {
  1262   000ED8  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1263   000EDC  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1264   000EE0  CFDE FFF6          	movff	postinc2,tblptrl
  1265   000EE4  CFDD FFF7          	movff	postdec2,tblptrh
  1266   000EE8                     	if	0	;tblptru may be non-zero
  1267   000EE8                     	endif
  1268   000EE8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1269   000EE8  0E00               	movlw	low (__mediumconst shr (0+16))
  1270   000EEA  6EF8               	movwf	tblptru,c
  1271   000EEC                     	endif
  1272   000EEC  0008               	tblrd		*
  1273   000EEE  50F5               	movf	tablat,w,c
  1274   000EF0  0A2A               	xorlw	42
  1275   000EF2  A4D8               	btfss	status,2,c
  1276   000EF4  EF7E  F007         	goto	u2221
  1277   000EF8  EF80  F007         	goto	u2220
  1278   000EFC                     u2221:
  1279   000EFC  EFA9  F007         	goto	l3130
  1280   000F00                     u2220:
  1281   000F00                     
  1282                           ; BSR set to: 0
  1283                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1075:             ++*fmt;
  1284   000F00  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1285   000F04  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1286   000F08  2ADE               	incf	postinc2,f,c
  1287   000F0A  0E00               	movlw	0
  1288   000F0C  22DD               	addwfc	postdec2,f,c
  1289                           
  1290                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1076:             width = (*(int *)_
      +                          _va_arg(*(int **)ap, (int)0));
  1291   000F0E  C03E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1292   000F12  C03F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1293   000F16  CFDF F040          	movff	indf2,??_vfpfcnvrt
  1294   000F1A  0E02               	movlw	2
  1295   000F1C  26DE               	addwf	postinc2,f,c
  1296   000F1E  CFDF F041          	movff	indf2,??_vfpfcnvrt+1
  1297   000F22  0E00               	movlw	0
  1298   000F24  22DD               	addwfc	postdec2,f,c
  1299   000F26  C040  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1300   000F2A  C041  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1301   000F2E  CFDE F0DC          	movff	postinc2,_width
  1302   000F32  CFDD F0DD          	movff	postdec2,_width+1
  1303   000F36                     
  1304                           ; BSR set to: 0
  1305                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1077:             if (width < 0) {
  1306   000F36  BFDD               	btfsc	(_width+1)& (0+255),7,b
  1307   000F38  EFA2  F007         	goto	u2230
  1308   000F3C  EFA0  F007         	goto	u2231
  1309   000F40                     u2231:
  1310   000F40  EFDE  F007         	goto	l3138
  1311   000F44                     u2230:
  1312   000F44                     
  1313                           ; BSR set to: 0
  1314                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1078:                 flags |= (1 <<
      +                           0);
  1315   000F44  8049               	bsf	_flags^0,0,c
  1316                           
  1317                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1079:                 width = -width
      +                          ;
  1318   000F46  6DDC               	negf	_width& (0+255),b
  1319   000F48  1FDD               	comf	(_width+1)& (0+255),f,b
  1320   000F4A  B0D8               	btfsc	status,0,c
  1321   000F4C  2BDD               	incf	(_width+1)& (0+255),f,b
  1322   000F4E  EFDE  F007         	goto	l3138
  1323   000F52                     l3130:
  1324                           
  1325                           ; BSR set to: 0
  1326                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1082:             width = atoi(*fmt)
      +                          ;
  1327   000F52  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1328   000F56  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1329   000F5A  CFDE F013          	movff	postinc2,atoi@s
  1330   000F5E  CFDD F014          	movff	postdec2,atoi@s+1
  1331   000F62  EC3C  F00B         	call	_atoi	;wreg free
  1332   000F66  C013  F0DC         	movff	?_atoi,_width
  1333   000F6A  C014  F0DD         	movff	?_atoi+1,_width+1
  1334                           
  1335                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1083:             while ((0 && isdig
      +                          it((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  1336   000F6E  EFC0  F007         	goto	l3136
  1337   000F72                     l3132:
  1338                           
  1339                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1084:                 ++*fmt;
  1340   000F72  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1341   000F76  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1342   000F7A  2ADE               	incf	postinc2,f,c
  1343   000F7C  0E00               	movlw	0
  1344   000F7E  22DD               	addwfc	postdec2,f,c
  1345   000F80                     l3136:
  1346   000F80  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1347   000F84  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1348   000F88  CFDE FFF6          	movff	postinc2,tblptrl
  1349   000F8C  CFDD FFF7          	movff	postdec2,tblptrh
  1350   000F90                     	if	0	;tblptru may be non-zero
  1351   000F90                     	endif
  1352   000F90                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1353   000F90  0E00               	movlw	low (__mediumconst shr (0+16))
  1354   000F92  6EF8               	movwf	tblptru,c
  1355   000F94                     	endif
  1356   000F94  0008               	tblrd		*
  1357   000F96  CFF5 F040          	movff	tablat,??_vfpfcnvrt
  1358   000F9A  0ED0               	movlw	208
  1359   000F9C  2440               	addwf	??_vfpfcnvrt^0,w,c
  1360   000F9E  6E41               	movwf	(??_vfpfcnvrt+1)^0,c
  1361   000FA0  6A42               	clrf	(??_vfpfcnvrt+2)^0,c
  1362   000FA2  0EFF               	movlw	255
  1363   000FA4  2242               	addwfc	(??_vfpfcnvrt+2)^0,f,c
  1364   000FA6  5042               	movf	(??_vfpfcnvrt+2)^0,w,c
  1365   000FA8  E109               	bnz	u2240
  1366   000FAA  0E0A               	movlw	10
  1367   000FAC  5C41               	subwf	(??_vfpfcnvrt+1)^0,w,c
  1368   000FAE  A0D8               	btfss	status,0,c
  1369   000FB0  EFDC  F007         	goto	u2241
  1370   000FB4  EFDE  F007         	goto	u2240
  1371   000FB8                     u2241:
  1372   000FB8  EFB9  F007         	goto	l3132
  1373   000FBC                     u2240:
  1374   000FBC                     l3138:
  1375                           
  1376                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt;
  1377   000FBC  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1378   000FC0  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1379   000FC4  CFDE F07B          	movff	postinc2,vfpfcnvrt@cp
  1380   000FC8  CFDD F07C          	movff	postdec2,vfpfcnvrt@cp+1
  1381   000FCC                     
  1382                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1187:   if (*cp == 'd' || *cp == 'i'
      +                          ) {
  1383   000FCC  C07B  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1384   000FD0  C07C  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1385   000FD4                     	if	0	;tblptru may be non-zero
  1386   000FD4                     	endif
  1387   000FD4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1388   000FD4  0E00               	movlw	low (__mediumconst shr (0+16))
  1389   000FD6  6EF8               	movwf	tblptru,c
  1390   000FD8                     	endif
  1391   000FD8  0008               	tblrd		*
  1392   000FDA  50F5               	movf	tablat,w,c
  1393   000FDC  0A64               	xorlw	100
  1394   000FDE  B4D8               	btfsc	status,2,c
  1395   000FE0  EFF4  F007         	goto	u2251
  1396   000FE4  EFF6  F007         	goto	u2250
  1397   000FE8                     u2251:
  1398   000FE8  EF06  F008         	goto	l3144
  1399   000FEC                     u2250:
  1400   000FEC  C07B  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1401   000FF0  C07C  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1402   000FF4                     	if	0	;tblptru may be non-zero
  1403   000FF4                     	endif
  1404   000FF4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1405   000FF4  0E00               	movlw	low (__mediumconst shr (0+16))
  1406   000FF6  6EF8               	movwf	tblptru,c
  1407   000FF8                     	endif
  1408   000FF8  0008               	tblrd		*
  1409   000FFA  50F5               	movf	tablat,w,c
  1410   000FFC  0A69               	xorlw	105
  1411   000FFE  A4D8               	btfss	status,2,c
  1412   001000  EF04  F008         	goto	u2261
  1413   001004  EF06  F008         	goto	u2260
  1414   001008                     u2261:
  1415   001008  EF4A  F008         	goto	l3150
  1416   00100C                     u2260:
  1417   00100C                     l3144:
  1418                           
  1419                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1230:    convarg.ll = (long long)(in
      +                          t)(*(int *)__va_arg(*(int **)ap, (int)0));
  1420   00100C  C03E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1421   001010  C03F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1422   001014  CFDF F040          	movff	indf2,??_vfpfcnvrt
  1423   001018  0E02               	movlw	2
  1424   00101A  26DE               	addwf	postinc2,f,c
  1425   00101C  CFDF F041          	movff	indf2,??_vfpfcnvrt+1
  1426   001020  0E00               	movlw	0
  1427   001022  22DD               	addwfc	postdec2,f,c
  1428   001024  C040  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1429   001028  C041  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1430   00102C  CFDE F071          	movff	postinc2,vfpfcnvrt@convarg
  1431   001030  CFDD F072          	movff	postdec2,vfpfcnvrt@convarg+1
  1432   001034  0100               	movlb	0	; () banked
  1433   001036  0E00               	movlw	0
  1434   001038  BF72               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  1435   00103A  0EFF               	movlw	-1
  1436   00103C  6F73               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  1437   00103E  6F74               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  1438   001040  6F75               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  1439   001042  6F76               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  1440   001044  6F77               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  1441   001046  6F78               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  1442                           
  1443                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1232:    *fmt = cp+1;
  1444   001048  0E01               	movlw	1
  1445   00104A  257B               	addwf	vfpfcnvrt@cp& (0+255),w,b
  1446   00104C  6E40               	movwf	??_vfpfcnvrt^0,c
  1447   00104E  0E00               	movlw	0
  1448   001050  217C               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  1449   001052  6E41               	movwf	(??_vfpfcnvrt+1)^0,c
  1450   001054  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1451   001058  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1452   00105C  C040  FFDE         	movff	??_vfpfcnvrt,postinc2
  1453   001060  C041  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1454   001064                     
  1455                           ; BSR set to: 0
  1456                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1233:    return (void) dtoa(fp, conv
      +                          arg.ll);;	Return value of _vfpfcnvrt is never used
  1457   001064  C03A  F028         	movff	vfpfcnvrt@fp,dtoa@fp
  1458   001068  C03B  F029         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1459   00106C  C071  F02A         	movff	vfpfcnvrt@convarg,dtoa@d
  1460   001070  C072  F02B         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1461   001074  C073  F02C         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1462   001078  C074  F02D         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1463   00107C  C075  F02E         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1464   001080  C076  F02F         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1465   001084  C077  F030         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1466   001088  C078  F031         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1467   00108C  EC6A  F008         	call	_dtoa	;wreg free
  1468   001090  EF69  F008         	goto	l1211
  1469   001094                     l3150:
  1470                           
  1471                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1509:         ++*fmt;
  1472   001094  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1473   001098  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1474   00109C  2ADE               	incf	postinc2,f,c
  1475   00109E  0E00               	movlw	0
  1476   0010A0  22DD               	addwfc	postdec2,f,c
  1477   0010A2  EF69  F008         	goto	l1211
  1478   0010A6                     l3154:
  1479                           
  1480                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1514:     fputc((int)(*fmt)[0], fp);
  1481   0010A6  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1482   0010AA  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1483   0010AE  CFDE FFF6          	movff	postinc2,tblptrl
  1484   0010B2  CFDD FFF7          	movff	postdec2,tblptrh
  1485   0010B6                     	if	0	;tblptru may be non-zero
  1486   0010B6                     	endif
  1487   0010B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1488   0010B6  0E00               	movlw	low (__mediumconst shr (0+16))
  1489   0010B8  6EF8               	movwf	tblptru,c
  1490   0010BA                     	endif
  1491   0010BA  0008               	tblrd		*
  1492   0010BC  50F5               	movf	tablat,w,c
  1493   0010BE  6E0D               	movwf	fputc@c^0,c
  1494   0010C0  6A0E               	clrf	(fputc@c+1)^0,c
  1495   0010C2  C03A  F00F         	movff	vfpfcnvrt@fp,fputc@fp
  1496   0010C6  C03B  F010         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1497   0010CA  EC95  F00C         	call	_fputc	;wreg free
  1498   0010CE  EF4A  F008         	goto	l3150
  1499   0010D2                     l1211:
  1500   0010D2  0012               	return		;funcret
  1501   0010D4                     __end_of_vfpfcnvrt:
  1502                           	callstack 0
  1503                           
  1504 ;; *************** function _dtoa *****************
  1505 ;; Defined at:
  1506 ;;		line 443 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c"
  1507 ;; Parameters:    Size  Location     Type
  1508 ;;  fp              2   39[COMRAM] PTR struct _IO_FILE
  1509 ;;		 -> sprintf@f(11), 
  1510 ;;  d               8   41[COMRAM] long long 
  1511 ;; Auto vars:     Size  Location     Type
  1512 ;;  n               8    6[BANK0 ] long long 
  1513 ;;  i               2   15[BANK0 ] int 
  1514 ;;  w               2    4[BANK0 ] int 
  1515 ;;  p               2    2[BANK0 ] int 
  1516 ;;  s               1   14[BANK0 ] unsigned char 
  1517 ;; Return value:  Size  Location     Type
  1518 ;;                  1    wreg      void 
  1519 ;; Registers used:
  1520 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1521 ;; Tracked objects:
  1522 ;;		On entry : 0/0
  1523 ;;		On exit  : 0/0
  1524 ;;		Unchanged: 0/0
  1525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1526 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1527 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1528 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1529 ;;      Totals:        18      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1530 ;;Total ram usage:       35 bytes
  1531 ;; Hardware stack levels used: 1
  1532 ;; Hardware stack levels required when called: 11
  1533 ;; This function calls:
  1534 ;;		___aodiv
  1535 ;;		___aomod
  1536 ;;		_abs
  1537 ;;		_pad
  1538 ;; This function is called by:
  1539 ;;		_vfpfcnvrt
  1540 ;; This function uses a non-reentrant model
  1541 ;;
  1542                           
  1543                           	psect	text4
  1544   0010D4                     __ptext4:
  1545                           	callstack 0
  1546   0010D4                     _dtoa:
  1547                           	callstack 16
  1548   0010D4                     
  1549                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 443: static void dtoa(FILE *fp, long
      +                           long d);D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 444: {;D:\MPLAB_COMPILER\pic
      +                          \sources\c99\common\doprnt.c: 445:  char s;;D:\MPLAB_COMPILER\pic\sources\c99\common\dop
      +                          rnt.c: 446:     int i, p, w;;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 447:    
      +                           long long n;;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 450:     n = d;
  1550   0010D4  C02A  F066         	movff	dtoa@d,dtoa@n
  1551   0010D8  C02B  F067         	movff	dtoa@d+1,dtoa@n+1
  1552   0010DC  C02C  F068         	movff	dtoa@d+2,dtoa@n+2
  1553   0010E0  C02D  F069         	movff	dtoa@d+3,dtoa@n+3
  1554   0010E4  C02E  F06A         	movff	dtoa@d+4,dtoa@n+4
  1555   0010E8  C02F  F06B         	movff	dtoa@d+5,dtoa@n+5
  1556   0010EC  C030  F06C         	movff	dtoa@d+6,dtoa@n+6
  1557   0010F0  C031  F06D         	movff	dtoa@d+7,dtoa@n+7
  1558   0010F4                     
  1559                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 451:     s = n < 0 ? 1 : 0;
  1560   0010F4  0100               	movlb	0	; () banked
  1561   0010F6  BF6D               	btfsc	(dtoa@n+7)& (0+255),7,b
  1562   0010F8  EF80  F008         	goto	u2071
  1563   0010FC  EF83  F008         	goto	u2070
  1564   001100                     u2071:
  1565   001100  0E01               	movlw	1
  1566   001102  EF84  F008         	goto	u2080
  1567   001106                     u2070:
  1568   001106  0E00               	movlw	0
  1569   001108                     u2080:
  1570   001108  6F6E               	movwf	dtoa@s& (0+255),b
  1571   00110A                     
  1572                           ; BSR set to: 0
  1573                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  1574   00110A  516E               	movf	dtoa@s& (0+255),w,b
  1575   00110C  B4D8               	btfsc	status,2,c
  1576   00110E  EF8B  F008         	goto	u2091
  1577   001112  EF8D  F008         	goto	u2090
  1578   001116                     u2091:
  1579   001116  EF9D  F008         	goto	l3048
  1580   00111A                     u2090:
  1581   00111A                     
  1582                           ; BSR set to: 0
  1583                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 453:         n = -n;
  1584   00111A  1F6D               	comf	(dtoa@n+7)& (0+255),f,b
  1585   00111C  1F6C               	comf	(dtoa@n+6)& (0+255),f,b
  1586   00111E  1F6B               	comf	(dtoa@n+5)& (0+255),f,b
  1587   001120  1F6A               	comf	(dtoa@n+4)& (0+255),f,b
  1588   001122  1F69               	comf	(dtoa@n+3)& (0+255),f,b
  1589   001124  1F68               	comf	(dtoa@n+2)& (0+255),f,b
  1590   001126  1F67               	comf	(dtoa@n+1)& (0+255),f,b
  1591   001128  6D66               	negf	dtoa@n& (0+255),b
  1592   00112A  0E00               	movlw	0
  1593   00112C  2367               	addwfc	(dtoa@n+1)& (0+255),f,b
  1594   00112E  2368               	addwfc	(dtoa@n+2)& (0+255),f,b
  1595   001130  2369               	addwfc	(dtoa@n+3)& (0+255),f,b
  1596   001132  236A               	addwfc	(dtoa@n+4)& (0+255),f,b
  1597   001134  236B               	addwfc	(dtoa@n+5)& (0+255),f,b
  1598   001136  236C               	addwfc	(dtoa@n+6)& (0+255),f,b
  1599   001138  236D               	addwfc	(dtoa@n+7)& (0+255),f,b
  1600   00113A                     l3048:
  1601                           
  1602                           ; BSR set to: 0
  1603                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 458:     if (!(prec < 0)) {
  1604   00113A  BE46               	btfsc	(_prec+1)^0,7,c
  1605   00113C  EFA2  F008         	goto	u2101
  1606   001140  EFA4  F008         	goto	u2100
  1607   001144                     u2101:
  1608   001144  EFA5  F008         	goto	l3052
  1609   001148                     u2100:
  1610   001148                     
  1611                           ; BSR set to: 0
  1612                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 459:         flags &= ~(1 << 1);
  1613   001148  9249               	bcf	_flags^0,1,c
  1614   00114A                     l3052:
  1615                           
  1616                           ; BSR set to: 0
  1617                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 462:     p = (0 < prec) ? prec : 1;
  1618   00114A  BE46               	btfsc	(_prec+1)^0,7,c
  1619   00114C  EFB2  F008         	goto	u2110
  1620   001150  5046               	movf	(_prec+1)^0,w,c
  1621   001152  E106               	bnz	u2111
  1622   001154  0445               	decf	_prec^0,w,c
  1623   001156  B0D8               	btfsc	status,0,c
  1624   001158  EFB0  F008         	goto	u2111
  1625   00115C  EFB2  F008         	goto	u2110
  1626   001160                     u2111:
  1627   001160  EFB8  F008         	goto	l1173
  1628   001164                     u2110:
  1629   001164                     
  1630                           ; BSR set to: 0
  1631   001164  0E00               	movlw	0
  1632   001166  6F63               	movwf	(dtoa@p+1)& (0+255),b
  1633   001168  0E01               	movlw	1
  1634   00116A  6F62               	movwf	dtoa@p& (0+255),b
  1635   00116C  EFBC  F008         	goto	l1175
  1636   001170                     l1173:
  1637                           
  1638                           ; BSR set to: 0
  1639   001170  C045  F062         	movff	_prec,dtoa@p
  1640   001174  C046  F063         	movff	_prec+1,dtoa@p+1
  1641   001178                     l1175:
  1642                           
  1643                           ; BSR set to: 0
  1644                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 463:     w = width;
  1645   001178  C0DC  F064         	movff	_width,dtoa@w
  1646   00117C  C0DD  F065         	movff	_width+1,dtoa@w+1
  1647   001180                     
  1648                           ; BSR set to: 0
  1649                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 464:     if (s
  1650   001180  516E               	movf	dtoa@s& (0+255),w,b
  1651   001182  B4D8               	btfsc	status,2,c
  1652   001184  EFC6  F008         	goto	u2121
  1653   001188  EFC8  F008         	goto	u2120
  1654   00118C                     u2121:
  1655   00118C  EFDF  F008         	goto	l1176
  1656   001190                     u2120:
  1657   001190                     
  1658                           ; BSR set to: 0
  1659                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 468:     ) {;D:\MPLAB_COMPILER\pic\s
      +                          ources\c99\common\doprnt.c: 469:         --w;
  1660   001190  0764               	decf	dtoa@w& (0+255),f,b
  1661   001192  A0D8               	btfss	status,0,c
  1662   001194  0765               	decf	(dtoa@w+1)& (0+255),f,b
  1663   001196                     
  1664                           ; BSR set to: 0
  1665                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-' : '+';
  1666   001196  516E               	movf	dtoa@s& (0+255),w,b
  1667   001198  A4D8               	btfss	status,2,c
  1668   00119A  EFD1  F008         	goto	u2131
  1669   00119E  EFD3  F008         	goto	u2130
  1670   0011A2                     u2131:
  1671   0011A2  EFD9  F008         	goto	l3064
  1672   0011A6                     u2130:
  1673   0011A6                     
  1674                           ; BSR set to: 0
  1675   0011A6  0E00               	movlw	0
  1676   0011A8  6F61               	movwf	(_dtoa$2428+1)& (0+255),b
  1677   0011AA  0E2B               	movlw	43
  1678   0011AC  6F60               	movwf	_dtoa$2428& (0+255),b
  1679   0011AE  EFDD  F008         	goto	l3066
  1680   0011B2                     l3064:
  1681                           
  1682                           ; BSR set to: 0
  1683   0011B2  0E00               	movlw	0
  1684   0011B4  6F61               	movwf	(_dtoa$2428+1)& (0+255),b
  1685   0011B6  0E2D               	movlw	45
  1686   0011B8  6F60               	movwf	_dtoa$2428& (0+255),b
  1687   0011BA                     l3066:
  1688                           
  1689                           ; BSR set to: 0
  1690   0011BA  C060  F06E         	movff	_dtoa$2428,dtoa@s
  1691   0011BE                     l1176:
  1692                           
  1693                           ; BSR set to: 0
  1694                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 480:     i = sizeof(dbuf) - 1;
  1695   0011BE  0E00               	movlw	0
  1696   0011C0  6F70               	movwf	(dtoa@i+1)& (0+255),b
  1697   0011C2  0E1F               	movlw	31
  1698   0011C4  6F6F               	movwf	dtoa@i& (0+255),b
  1699   0011C6                     
  1700                           ; BSR set to: 0
  1701                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] = '\0';
  1702   0011C6  0E00               	movlw	0
  1703   0011C8  6FFE               	movwf	(_dbuf+31)& (0+255),b
  1704                           
  1705                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 482:     while (!(i < 1) && (n || (0
      +                           < p)
  1706   0011CA  EF64  F009         	goto	l3080
  1707   0011CE                     l3070:
  1708                           
  1709                           ; BSR set to: 0
  1710                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 486:     )) {;D:\MPLAB_COMPILER\pic\
      +                          sources\c99\common\doprnt.c: 487:         --i;
  1711   0011CE  076F               	decf	dtoa@i& (0+255),f,b
  1712   0011D0  A0D8               	btfss	status,0,c
  1713   0011D2  0770               	decf	(dtoa@i+1)& (0+255),f,b
  1714   0011D4                     
  1715                           ; BSR set to: 0
  1716                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 488:         dbuf[i] = (char)((int)'
      +                          0' + abs(n % 10));
  1717   0011D4  0EDF               	movlw	low _dbuf
  1718   0011D6  256F               	addwf	dtoa@i& (0+255),w,b
  1719   0011D8  6ED9               	movwf	fsr2l,c
  1720   0011DA  0E00               	movlw	high _dbuf
  1721   0011DC  2170               	addwfc	(dtoa@i+1)& (0+255),w,b
  1722   0011DE  6EDA               	movwf	fsr2h,c
  1723   0011E0  C066  F00D         	movff	dtoa@n,___aomod@dividend
  1724   0011E4  C067  F00E         	movff	dtoa@n+1,___aomod@dividend+1
  1725   0011E8  C068  F00F         	movff	dtoa@n+2,___aomod@dividend+2
  1726   0011EC  C069  F010         	movff	dtoa@n+3,___aomod@dividend+3
  1727   0011F0  C06A  F011         	movff	dtoa@n+4,___aomod@dividend+4
  1728   0011F4  C06B  F012         	movff	dtoa@n+5,___aomod@dividend+5
  1729   0011F8  C06C  F013         	movff	dtoa@n+6,___aomod@dividend+6
  1730   0011FC  C06D  F014         	movff	dtoa@n+7,___aomod@dividend+7
  1731   001200  0E0A               	movlw	10
  1732   001202  6E15               	movwf	___aomod@divisor^0,c
  1733   001204  0E00               	movlw	0
  1734   001206  6E16               	movwf	(___aomod@divisor+1)^0,c
  1735   001208  0E00               	movlw	0
  1736   00120A  6E17               	movwf	(___aomod@divisor+2)^0,c
  1737   00120C  0E00               	movlw	0
  1738   00120E  6E18               	movwf	(___aomod@divisor+3)^0,c
  1739   001210  0E00               	movlw	0
  1740   001212  6E19               	movwf	(___aomod@divisor+4)^0,c
  1741   001214  0E00               	movlw	0
  1742   001216  6E1A               	movwf	(___aomod@divisor+5)^0,c
  1743   001218  0E00               	movlw	0
  1744   00121A  6E1B               	movwf	(___aomod@divisor+6)^0,c
  1745   00121C  0E00               	movlw	0
  1746   00121E  6E1C               	movwf	(___aomod@divisor+7)^0,c
  1747   001220  EC8A  F00A         	call	___aomod	;wreg free
  1748   001224  C00D  F032         	movff	?___aomod,??_dtoa
  1749   001228  C00E  F033         	movff	?___aomod+1,??_dtoa+1
  1750   00122C  C00F  F034         	movff	?___aomod+2,??_dtoa+2
  1751   001230  C010  F035         	movff	?___aomod+3,??_dtoa+3
  1752   001234  C011  F036         	movff	?___aomod+4,??_dtoa+4
  1753   001238  C012  F037         	movff	?___aomod+5,??_dtoa+5
  1754   00123C  C013  F038         	movff	?___aomod+6,??_dtoa+6
  1755   001240  C014  F039         	movff	?___aomod+7,??_dtoa+7
  1756   001244  C032  F01F         	movff	??_dtoa,abs@a
  1757   001248  C033  F020         	movff	??_dtoa+1,abs@a+1
  1758   00124C  EC2F  F010         	call	_abs	;wreg free
  1759   001250  501F               	movf	?_abs^0,w,c
  1760   001252  0F30               	addlw	48
  1761   001254  6EDF               	movwf	indf2,c
  1762   001256                     
  1763                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 489:         --p;
  1764   001256  0100               	movlb	0	; () banked
  1765   001258  0762               	decf	dtoa@p& (0+255),f,b
  1766   00125A  A0D8               	btfss	status,0,c
  1767   00125C  0763               	decf	(dtoa@p+1)& (0+255),f,b
  1768   00125E                     
  1769                           ; BSR set to: 0
  1770                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 490:         --w;
  1771   00125E  0764               	decf	dtoa@w& (0+255),f,b
  1772   001260  A0D8               	btfss	status,0,c
  1773   001262  0765               	decf	(dtoa@w+1)& (0+255),f,b
  1774   001264                     
  1775                           ; BSR set to: 0
  1776                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 491:         n = n / 10;
  1777   001264  C066  F00D         	movff	dtoa@n,___aodiv@dividend
  1778   001268  C067  F00E         	movff	dtoa@n+1,___aodiv@dividend+1
  1779   00126C  C068  F00F         	movff	dtoa@n+2,___aodiv@dividend+2
  1780   001270  C069  F010         	movff	dtoa@n+3,___aodiv@dividend+3
  1781   001274  C06A  F011         	movff	dtoa@n+4,___aodiv@dividend+4
  1782   001278  C06B  F012         	movff	dtoa@n+5,___aodiv@dividend+5
  1783   00127C  C06C  F013         	movff	dtoa@n+6,___aodiv@dividend+6
  1784   001280  C06D  F014         	movff	dtoa@n+7,___aodiv@dividend+7
  1785   001284  0E0A               	movlw	10
  1786   001286  6E15               	movwf	___aodiv@divisor^0,c
  1787   001288  0E00               	movlw	0
  1788   00128A  6E16               	movwf	(___aodiv@divisor+1)^0,c
  1789   00128C  0E00               	movlw	0
  1790   00128E  6E17               	movwf	(___aodiv@divisor+2)^0,c
  1791   001290  0E00               	movlw	0
  1792   001292  6E18               	movwf	(___aodiv@divisor+3)^0,c
  1793   001294  0E00               	movlw	0
  1794   001296  6E19               	movwf	(___aodiv@divisor+4)^0,c
  1795   001298  0E00               	movlw	0
  1796   00129A  6E1A               	movwf	(___aodiv@divisor+5)^0,c
  1797   00129C  0E00               	movlw	0
  1798   00129E  6E1B               	movwf	(___aodiv@divisor+6)^0,c
  1799   0012A0  0E00               	movlw	0
  1800   0012A2  6E1C               	movwf	(___aodiv@divisor+7)^0,c
  1801   0012A4  ECC6  F009         	call	___aodiv	;wreg free
  1802   0012A8  C00D  F066         	movff	?___aodiv,dtoa@n
  1803   0012AC  C00E  F067         	movff	?___aodiv+1,dtoa@n+1
  1804   0012B0  C00F  F068         	movff	?___aodiv+2,dtoa@n+2
  1805   0012B4  C010  F069         	movff	?___aodiv+3,dtoa@n+3
  1806   0012B8  C011  F06A         	movff	?___aodiv+4,dtoa@n+4
  1807   0012BC  C012  F06B         	movff	?___aodiv+5,dtoa@n+5
  1808   0012C0  C013  F06C         	movff	?___aodiv+6,dtoa@n+6
  1809   0012C4  C014  F06D         	movff	?___aodiv+7,dtoa@n+7
  1810   0012C8                     l3080:
  1811                           
  1812                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 482:     while (!(i < 1) && (n || (0
      +                           < p)
  1813   0012C8  0100               	movlb	0	; () banked
  1814   0012CA  BF70               	btfsc	(dtoa@i+1)& (0+255),7,b
  1815   0012CC  EF70  F009         	goto	u2141
  1816   0012D0  5170               	movf	(dtoa@i+1)& (0+255),w,b
  1817   0012D2  E108               	bnz	u2140
  1818   0012D4  056F               	decf	dtoa@i& (0+255),w,b
  1819   0012D6  A0D8               	btfss	status,0,c
  1820   0012D8  EF70  F009         	goto	u2141
  1821   0012DC  EF72  F009         	goto	u2140
  1822   0012E0                     u2141:
  1823   0012E0  EFA2  F009         	goto	l3090
  1824   0012E4                     u2140:
  1825   0012E4                     
  1826                           ; BSR set to: 0
  1827   0012E4  5166               	movf	dtoa@n& (0+255),w,b
  1828   0012E6  1167               	iorwf	(dtoa@n+1)& (0+255),w,b
  1829   0012E8  1168               	iorwf	(dtoa@n+2)& (0+255),w,b
  1830   0012EA  1169               	iorwf	(dtoa@n+3)& (0+255),w,b
  1831   0012EC  116A               	iorwf	(dtoa@n+4)& (0+255),w,b
  1832   0012EE  116B               	iorwf	(dtoa@n+5)& (0+255),w,b
  1833   0012F0  116C               	iorwf	(dtoa@n+6)& (0+255),w,b
  1834   0012F2  116D               	iorwf	(dtoa@n+7)& (0+255),w,b
  1835   0012F4  A4D8               	btfss	status,2,c
  1836   0012F6  EF7F  F009         	goto	u2151
  1837   0012FA  EF81  F009         	goto	u2150
  1838   0012FE                     u2151:
  1839   0012FE  EFE7  F008         	goto	l3070
  1840   001302                     u2150:
  1841   001302                     
  1842                           ; BSR set to: 0
  1843   001302  BF63               	btfsc	(dtoa@p+1)& (0+255),7,b
  1844   001304  EF8E  F009         	goto	u2160
  1845   001308  5163               	movf	(dtoa@p+1)& (0+255),w,b
  1846   00130A  E106               	bnz	u2161
  1847   00130C  0562               	decf	dtoa@p& (0+255),w,b
  1848   00130E  B0D8               	btfsc	status,0,c
  1849   001310  EF8C  F009         	goto	u2161
  1850   001314  EF8E  F009         	goto	u2160
  1851   001318                     u2161:
  1852   001318  EFE7  F008         	goto	l3070
  1853   00131C                     u2160:
  1854   00131C                     
  1855                           ; BSR set to: 0
  1856   00131C  BF65               	btfsc	(dtoa@w+1)& (0+255),7,b
  1857   00131E  EF99  F009         	goto	u2171
  1858   001322  5165               	movf	(dtoa@w+1)& (0+255),w,b
  1859   001324  E108               	bnz	u2170
  1860   001326  0564               	decf	dtoa@w& (0+255),w,b
  1861   001328  A0D8               	btfss	status,0,c
  1862   00132A  EF99  F009         	goto	u2171
  1863   00132E  EF9B  F009         	goto	u2170
  1864   001332                     u2171:
  1865   001332  EFA2  F009         	goto	l3090
  1866   001336                     u2170:
  1867   001336                     
  1868                           ; BSR set to: 0
  1869   001336  B249               	btfsc	_flags^0,1,c
  1870   001338  EFA0  F009         	goto	u2181
  1871   00133C  EFA2  F009         	goto	u2180
  1872   001340                     u2181:
  1873   001340  EFE7  F008         	goto	l3070
  1874   001344                     u2180:
  1875   001344                     l3090:
  1876                           
  1877                           ; BSR set to: 0
  1878                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 495:     if (s != 0) {
  1879   001344  516E               	movf	dtoa@s& (0+255),w,b
  1880   001346  B4D8               	btfsc	status,2,c
  1881   001348  EFA8  F009         	goto	u2191
  1882   00134C  EFAA  F009         	goto	u2190
  1883   001350                     u2191:
  1884   001350  EFB5  F009         	goto	l3096
  1885   001354                     u2190:
  1886   001354                     
  1887                           ; BSR set to: 0
  1888                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 496:         --i;
  1889   001354  076F               	decf	dtoa@i& (0+255),f,b
  1890   001356  A0D8               	btfss	status,0,c
  1891   001358  0770               	decf	(dtoa@i+1)& (0+255),f,b
  1892   00135A                     
  1893                           ; BSR set to: 0
  1894                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 497:         dbuf[i] = s;
  1895   00135A  0EDF               	movlw	low _dbuf
  1896   00135C  256F               	addwf	dtoa@i& (0+255),w,b
  1897   00135E  6ED9               	movwf	fsr2l,c
  1898   001360  0E00               	movlw	high _dbuf
  1899   001362  2170               	addwfc	(dtoa@i+1)& (0+255),w,b
  1900   001364  6EDA               	movwf	fsr2h,c
  1901   001366  C06E  FFDF         	movff	dtoa@s,indf2
  1902   00136A                     l3096:
  1903                           
  1904                           ; BSR set to: 0
  1905                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 501:     return (void) pad(fp, &dbuf
      +                          [i], w);
  1906   00136A  C028  F01D         	movff	dtoa@fp,pad@fp
  1907   00136E  C029  F01E         	movff	dtoa@fp+1,pad@fp+1
  1908   001372  0EDF               	movlw	low _dbuf
  1909   001374  256F               	addwf	dtoa@i& (0+255),w,b
  1910   001376  6E1F               	movwf	pad@buf^0,c
  1911   001378  0E00               	movlw	high _dbuf
  1912   00137A  2170               	addwfc	(dtoa@i+1)& (0+255),w,b
  1913   00137C  6E20               	movwf	(pad@buf+1)^0,c
  1914   00137E  C064  F021         	movff	dtoa@w,pad@p
  1915   001382  C065  F022         	movff	dtoa@w+1,pad@p+1
  1916   001386  EC59  F00D         	call	_pad	;wreg free
  1917   00138A  0012               	return		;funcret
  1918   00138C                     __end_of_dtoa:
  1919                           	callstack 0
  1920                           
  1921 ;; *************** function _pad *****************
  1922 ;; Defined at:
  1923 ;;		line 133 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c"
  1924 ;; Parameters:    Size  Location     Type
  1925 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  1926 ;;		 -> sprintf@f(11), 
  1927 ;;  buf             2   30[COMRAM] PTR unsigned char 
  1928 ;;		 -> dbuf(32), 
  1929 ;;  p               2   32[COMRAM] int 
  1930 ;; Auto vars:     Size  Location     Type
  1931 ;;  w               2   37[COMRAM] int 
  1932 ;;  i               2   35[COMRAM] int 
  1933 ;; Return value:  Size  Location     Type
  1934 ;;                  1    wreg      void 
  1935 ;; Registers used:
  1936 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1937 ;; Tracked objects:
  1938 ;;		On entry : 0/0
  1939 ;;		On exit  : 0/0
  1940 ;;		Unchanged: 0/0
  1941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1942 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1943 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1944 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1945 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1946 ;;Total ram usage:       11 bytes
  1947 ;; Hardware stack levels used: 1
  1948 ;; Hardware stack levels required when called: 10
  1949 ;; This function calls:
  1950 ;;		_fputc
  1951 ;;		_fputs
  1952 ;; This function is called by:
  1953 ;;		_dtoa
  1954 ;; This function uses a non-reentrant model
  1955 ;;
  1956                           
  1957                           	psect	text5
  1958   001AB2                     __ptext5:
  1959                           	callstack 0
  1960   001AB2                     _pad:
  1961                           	callstack 16
  1962   001AB2                     
  1963                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 133: static void pad(FILE *fp, char 
      +                          *buf, int p);D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 134: {;D:\MPLAB_COMPILER
      +                          \pic\sources\c99\common\doprnt.c: 135:     int i, w;;D:\MPLAB_COMPILER\pic\sources\c99\c
      +                          ommon\doprnt.c: 139:     if (flags & (1 << 0)) {
  1964   001AB2  A049               	btfss	_flags^0,0,c
  1965   001AB4  EF5E  F00D         	goto	u2021
  1966   001AB8  EF60  F00D         	goto	u2020
  1967   001ABC                     u2021:
  1968   001ABC  EF6A  F00D         	goto	l3022
  1969   001AC0                     u2020:
  1970   001AC0                     
  1971                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 140:         fputs((const char *)buf
      +                          , fp);
  1972   001AC0  C01F  F016         	movff	pad@buf,fputs@s
  1973   001AC4  C020  F017         	movff	pad@buf+1,fputs@s+1
  1974   001AC8  C01D  F018         	movff	pad@fp,fputs@fp
  1975   001ACC  C01E  F019         	movff	pad@fp+1,fputs@fp+1
  1976   001AD0  ECEC  F00F         	call	_fputs	;wreg free
  1977   001AD4                     l3022:
  1978                           
  1979                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 145:     w = (p < 0) ? 0 : p;
  1980   001AD4  BE22               	btfsc	(pad@p+1)^0,7,c
  1981   001AD6  EF6F  F00D         	goto	u2031
  1982   001ADA  EF71  F00D         	goto	u2030
  1983   001ADE                     u2031:
  1984   001ADE  EF77  F00D         	goto	l3026
  1985   001AE2                     u2030:
  1986   001AE2  C021  F026         	movff	pad@p,pad@w
  1987   001AE6  C022  F027         	movff	pad@p+1,pad@w+1
  1988   001AEA  EF7B  F00D         	goto	l1162
  1989   001AEE                     l3026:
  1990   001AEE  0E00               	movlw	0
  1991   001AF0  6E27               	movwf	(pad@w+1)^0,c
  1992   001AF2  0E00               	movlw	0
  1993   001AF4  6E26               	movwf	pad@w^0,c
  1994   001AF6                     l1162:
  1995                           
  1996                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  1997   001AF6  0E00               	movlw	0
  1998   001AF8  6E25               	movwf	(pad@i+1)^0,c
  1999   001AFA  0E00               	movlw	0
  2000   001AFC  6E24               	movwf	pad@i^0,c
  2001                           
  2002                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 147:     while (i < w) {
  2003   001AFE  EF8D  F00D         	goto	l3032
  2004   001B02                     l3028:
  2005                           
  2006                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 148:         fputc(' ', fp);
  2007   001B02  0E00               	movlw	0
  2008   001B04  6E0E               	movwf	(fputc@c+1)^0,c
  2009   001B06  0E20               	movlw	32
  2010   001B08  6E0D               	movwf	fputc@c^0,c
  2011   001B0A  C01D  F00F         	movff	pad@fp,fputc@fp
  2012   001B0E  C01E  F010         	movff	pad@fp+1,fputc@fp+1
  2013   001B12  EC95  F00C         	call	_fputc	;wreg free
  2014   001B16                     
  2015                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 149:         ++i;
  2016   001B16  4A24               	infsnz	pad@i^0,f,c
  2017   001B18  2A25               	incf	(pad@i+1)^0,f,c
  2018   001B1A                     l3032:
  2019                           
  2020                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 147:     while (i < w) {
  2021   001B1A  5026               	movf	pad@w^0,w,c
  2022   001B1C  5C24               	subwf	pad@i^0,w,c
  2023   001B1E  5025               	movf	(pad@i+1)^0,w,c
  2024   001B20  0A80               	xorlw	128
  2025   001B22  6E23               	movwf	??_pad^0,c
  2026   001B24  5027               	movf	(pad@w+1)^0,w,c
  2027   001B26  0A80               	xorlw	128
  2028   001B28  5823               	subwfb	??_pad^0,w,c
  2029   001B2A  A0D8               	btfss	status,0,c
  2030   001B2C  EF9A  F00D         	goto	u2041
  2031   001B30  EF9C  F00D         	goto	u2040
  2032   001B34                     u2041:
  2033   001B34  EF81  F00D         	goto	l3028
  2034   001B38                     u2040:
  2035   001B38                     
  2036                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 154:     if (!(flags & (1 << 0))) {
  2037   001B38  B049               	btfsc	_flags^0,0,c
  2038   001B3A  EFA1  F00D         	goto	u2051
  2039   001B3E  EFA3  F00D         	goto	u2050
  2040   001B42                     u2051:
  2041   001B42  EFAD  F00D         	goto	l1167
  2042   001B46                     u2050:
  2043   001B46                     
  2044                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 156:         fputs((const char *)buf
      +                          , fp);
  2045   001B46  C01F  F016         	movff	pad@buf,fputs@s
  2046   001B4A  C020  F017         	movff	pad@buf+1,fputs@s+1
  2047   001B4E  C01D  F018         	movff	pad@fp,fputs@fp
  2048   001B52  C01E  F019         	movff	pad@fp+1,fputs@fp+1
  2049   001B56  ECEC  F00F         	call	_fputs	;wreg free
  2050   001B5A                     l1167:
  2051   001B5A  0012               	return		;funcret
  2052   001B5C                     __end_of_pad:
  2053                           	callstack 0
  2054                           
  2055 ;; *************** function _fputs *****************
  2056 ;; Defined at:
  2057 ;;		line 8 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\nf_fputs.c"
  2058 ;; Parameters:    Size  Location     Type
  2059 ;;  s               2   21[COMRAM] PTR const unsigned char 
  2060 ;;		 -> dbuf(32), 
  2061 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  2062 ;;		 -> sprintf@f(11), 
  2063 ;; Auto vars:     Size  Location     Type
  2064 ;;  i               2   26[COMRAM] int 
  2065 ;;  c               1   25[COMRAM] unsigned char 
  2066 ;; Return value:  Size  Location     Type
  2067 ;;                  2   21[COMRAM] int 
  2068 ;; Registers used:
  2069 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2070 ;; Tracked objects:
  2071 ;;		On entry : 0/0
  2072 ;;		On exit  : 0/0
  2073 ;;		Unchanged: 0/0
  2074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2075 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2076 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2078 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2079 ;;Total ram usage:        7 bytes
  2080 ;; Hardware stack levels used: 1
  2081 ;; Hardware stack levels required when called: 9
  2082 ;; This function calls:
  2083 ;;		_fputc
  2084 ;; This function is called by:
  2085 ;;		_pad
  2086 ;; This function uses a non-reentrant model
  2087 ;;
  2088                           
  2089                           	psect	text6
  2090   001FD8                     __ptext6:
  2091                           	callstack 0
  2092   001FD8                     _fputs:
  2093                           	callstack 16
  2094   001FD8  0E00               	movlw	0
  2095   001FDA  6E1C               	movwf	(fputs@i+1)^0,c
  2096   001FDC  0E00               	movlw	0
  2097   001FDE  6E1B               	movwf	fputs@i^0,c
  2098   001FE0  EFFD  F00F         	goto	l2936
  2099   001FE4                     l2932:
  2100   001FE4  C01A  F00D         	movff	fputs@c,fputc@c
  2101   001FE8  6A0E               	clrf	(fputc@c+1)^0,c
  2102   001FEA  C018  F00F         	movff	fputs@fp,fputc@fp
  2103   001FEE  C019  F010         	movff	fputs@fp+1,fputc@fp+1
  2104   001FF2  EC95  F00C         	call	_fputc	;wreg free
  2105   001FF6  4A1B               	infsnz	fputs@i^0,f,c
  2106   001FF8  2A1C               	incf	(fputs@i+1)^0,f,c
  2107   001FFA                     l2936:
  2108   001FFA  501B               	movf	fputs@i^0,w,c
  2109   001FFC  2416               	addwf	fputs@s^0,w,c
  2110   001FFE  6ED9               	movwf	fsr2l,c
  2111   002000  501C               	movf	(fputs@i+1)^0,w,c
  2112   002002  2017               	addwfc	(fputs@s+1)^0,w,c
  2113   002004  6EDA               	movwf	fsr2h,c
  2114   002006  50DF               	movf	indf2,w,c
  2115   002008  6E1A               	movwf	fputs@c^0,c
  2116   00200A  501A               	movf	fputs@c^0,w,c
  2117   00200C  A4D8               	btfss	status,2,c
  2118   00200E  EF0B  F010         	goto	u1881
  2119   002012  EF0D  F010         	goto	u1880
  2120   002016                     u1881:
  2121   002016  EFF2  F00F         	goto	l2932
  2122   00201A                     u1880:
  2123   00201A  0012               	return		;funcret
  2124   00201C                     __end_of_fputs:
  2125                           	callstack 0
  2126                           
  2127 ;; *************** function _fputc *****************
  2128 ;; Defined at:
  2129 ;;		line 8 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\nf_fputc.c"
  2130 ;; Parameters:    Size  Location     Type
  2131 ;;  c               2   12[COMRAM] int 
  2132 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
  2133 ;;		 -> sprintf@f(11), 
  2134 ;; Auto vars:     Size  Location     Type
  2135 ;;		None
  2136 ;; Return value:  Size  Location     Type
  2137 ;;                  2   12[COMRAM] int 
  2138 ;; Registers used:
  2139 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2140 ;; Tracked objects:
  2141 ;;		On entry : 0/0
  2142 ;;		On exit  : 0/0
  2143 ;;		Unchanged: 0/0
  2144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2145 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2147 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2148 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2149 ;;Total ram usage:        9 bytes
  2150 ;; Hardware stack levels used: 1
  2151 ;; Hardware stack levels required when called: 8
  2152 ;; This function calls:
  2153 ;;		_putch
  2154 ;; This function is called by:
  2155 ;;		_pad
  2156 ;;		_vfpfcnvrt
  2157 ;;		_fputs
  2158 ;; This function uses a non-reentrant model
  2159 ;;
  2160                           
  2161                           	psect	text7
  2162   00192A                     __ptext7:
  2163                           	callstack 0
  2164   00192A                     _fputc:
  2165                           	callstack 19
  2166   00192A  500F               	movf	fputc@fp^0,w,c
  2167   00192C  1010               	iorwf	(fputc@fp+1)^0,w,c
  2168   00192E  B4D8               	btfsc	status,2,c
  2169   001930  EF9C  F00C         	goto	u1841
  2170   001934  EF9E  F00C         	goto	u1840
  2171   001938                     u1841:
  2172   001938  EFA7  F00C         	goto	l2920
  2173   00193C                     u1840:
  2174   00193C  500F               	movf	fputc@fp^0,w,c
  2175   00193E  1010               	iorwf	(fputc@fp+1)^0,w,c
  2176   001940  A4D8               	btfss	status,2,c
  2177   001942  EFA5  F00C         	goto	u1851
  2178   001946  EFA7  F00C         	goto	u1850
  2179   00194A                     u1851:
  2180   00194A  EFAC  F00C         	goto	l2922
  2181   00194E                     u1850:
  2182   00194E                     l2920:
  2183   00194E  500D               	movf	fputc@c^0,w,c
  2184   001950  EC0A  F012         	call	_putch
  2185   001954  EFF9  F00C         	goto	l1275
  2186   001958                     l2922:
  2187   001958  EE20 F009          	lfsr	2,9
  2188   00195C  500F               	movf	fputc@fp^0,w,c
  2189   00195E  26D9               	addwf	fsr2l,f,c
  2190   001960  5010               	movf	(fputc@fp+1)^0,w,c
  2191   001962  22DA               	addwfc	fsr2h,f,c
  2192   001964  50DE               	movf	postinc2,w,c
  2193   001966  10DE               	iorwf	postinc2,w,c
  2194   001968  B4D8               	btfsc	status,2,c
  2195   00196A  EFB9  F00C         	goto	u1861
  2196   00196E  EFBB  F00C         	goto	u1860
  2197   001972                     u1861:
  2198   001972  EFD6  F00C         	goto	l2926
  2199   001976                     u1860:
  2200   001976  EE20 F009          	lfsr	2,9
  2201   00197A  500F               	movf	fputc@fp^0,w,c
  2202   00197C  26D9               	addwf	fsr2l,f,c
  2203   00197E  5010               	movf	(fputc@fp+1)^0,w,c
  2204   001980  22DA               	addwfc	fsr2h,f,c
  2205   001982  EE10 F003          	lfsr	1,3
  2206   001986  500F               	movf	fputc@fp^0,w,c
  2207   001988  26E1               	addwf	fsr1l,f,c
  2208   00198A  5010               	movf	(fputc@fp+1)^0,w,c
  2209   00198C  22E2               	addwfc	fsr1h,f,c
  2210   00198E  50DE               	movf	postinc2,w,c
  2211   001990  5CE6               	subwf	postinc1,w,c
  2212   001992  50E6               	movf	postinc1,w,c
  2213   001994  0A80               	xorlw	128
  2214   001996  6E15               	movwf	(??_fputc+4)^0,c
  2215   001998  50DE               	movf	postinc2,w,c
  2216   00199A  0A80               	xorlw	128
  2217   00199C  5815               	subwfb	(??_fputc+4)^0,w,c
  2218   00199E  B0D8               	btfsc	status,0,c
  2219   0019A0  EFD4  F00C         	goto	u1871
  2220   0019A4  EFD6  F00C         	goto	u1870
  2221   0019A8                     u1871:
  2222   0019A8  EFF9  F00C         	goto	l1275
  2223   0019AC                     u1870:
  2224   0019AC                     l2926:
  2225   0019AC  EE20 F003          	lfsr	2,3
  2226   0019B0  500F               	movf	fputc@fp^0,w,c
  2227   0019B2  26D9               	addwf	fsr2l,f,c
  2228   0019B4  5010               	movf	(fputc@fp+1)^0,w,c
  2229   0019B6  22DA               	addwfc	fsr2h,f,c
  2230   0019B8  CFDE F011          	movff	postinc2,??_fputc
  2231   0019BC  CFDD F012          	movff	postdec2,??_fputc+1
  2232   0019C0  C00F  FFD9         	movff	fputc@fp,fsr2l
  2233   0019C4  C010  FFDA         	movff	fputc@fp+1,fsr2h
  2234   0019C8  CFDE F013          	movff	postinc2,??_fputc+2
  2235   0019CC  CFDD F014          	movff	postdec2,??_fputc+3
  2236   0019D0  5011               	movf	??_fputc^0,w,c
  2237   0019D2  2413               	addwf	(??_fputc+2)^0,w,c
  2238   0019D4  6ED9               	movwf	fsr2l,c
  2239   0019D6  5012               	movf	(??_fputc+1)^0,w,c
  2240   0019D8  2014               	addwfc	(??_fputc+3)^0,w,c
  2241   0019DA  6EDA               	movwf	fsr2h,c
  2242   0019DC  C00D  FFDF         	movff	fputc@c,indf2
  2243   0019E0  EE20 F003          	lfsr	2,3
  2244   0019E4  500F               	movf	fputc@fp^0,w,c
  2245   0019E6  26D9               	addwf	fsr2l,f,c
  2246   0019E8  5010               	movf	(fputc@fp+1)^0,w,c
  2247   0019EA  22DA               	addwfc	fsr2h,f,c
  2248   0019EC  2ADE               	incf	postinc2,f,c
  2249   0019EE  0E00               	movlw	0
  2250   0019F0  22DD               	addwfc	postdec2,f,c
  2251   0019F2                     l1275:
  2252   0019F2  0012               	return		;funcret
  2253   0019F4                     __end_of_fputc:
  2254                           	callstack 0
  2255                           
  2256 ;; *************** function _putch *****************
  2257 ;; Defined at:
  2258 ;;		line 7 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\putch.c"
  2259 ;; Parameters:    Size  Location     Type
  2260 ;;  c               1    wreg     unsigned char 
  2261 ;; Auto vars:     Size  Location     Type
  2262 ;;  c               1    0[COMRAM] unsigned char 
  2263 ;; Return value:  Size  Location     Type
  2264 ;;                  1    wreg      void 
  2265 ;; Registers used:
  2266 ;;		wreg
  2267 ;; Tracked objects:
  2268 ;;		On entry : 0/0
  2269 ;;		On exit  : 0/0
  2270 ;;		Unchanged: 0/0
  2271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2276 ;;Total ram usage:        0 bytes
  2277 ;; Hardware stack levels used: 1
  2278 ;; Hardware stack levels required when called: 7
  2279 ;; This function calls:
  2280 ;;		Nothing
  2281 ;; This function is called by:
  2282 ;;		_fputc
  2283 ;; This function uses a non-reentrant model
  2284 ;;
  2285                           
  2286                           	psect	text8
  2287   002414                     __ptext8:
  2288                           	callstack 0
  2289   002414                     _putch:
  2290                           	callstack 19
  2291   002414  0012               	return		;funcret
  2292   002416                     __end_of_putch:
  2293                           	callstack 0
  2294                           
  2295 ;; *************** function _abs *****************
  2296 ;; Defined at:
  2297 ;;		line 1 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\abs.c"
  2298 ;; Parameters:    Size  Location     Type
  2299 ;;  a               2   30[COMRAM] int 
  2300 ;; Auto vars:     Size  Location     Type
  2301 ;;		None
  2302 ;; Return value:  Size  Location     Type
  2303 ;;                  2   30[COMRAM] int 
  2304 ;; Registers used:
  2305 ;;		wreg, status,2, status,0
  2306 ;; Tracked objects:
  2307 ;;		On entry : 0/0
  2308 ;;		On exit  : 0/0
  2309 ;;		Unchanged: 0/0
  2310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2311 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2313 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2314 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2315 ;;Total ram usage:        4 bytes
  2316 ;; Hardware stack levels used: 1
  2317 ;; Hardware stack levels required when called: 7
  2318 ;; This function calls:
  2319 ;;		Nothing
  2320 ;; This function is called by:
  2321 ;;		_dtoa
  2322 ;; This function uses a non-reentrant model
  2323 ;;
  2324                           
  2325                           	psect	text9
  2326   00205E                     __ptext9:
  2327                           	callstack 0
  2328   00205E                     _abs:
  2329                           	callstack 19
  2330   00205E  BE20               	btfsc	(abs@a+1)^0,7,c
  2331   002060  EF3C  F010         	goto	u2060
  2332   002064  5020               	movf	(abs@a+1)^0,w,c
  2333   002066  E106               	bnz	u2061
  2334   002068  041F               	decf	abs@a^0,w,c
  2335   00206A  B0D8               	btfsc	status,0,c
  2336   00206C  EF3A  F010         	goto	u2061
  2337   002070  EF3C  F010         	goto	u2060
  2338   002074                     u2061:
  2339   002074  EF4A  F010         	goto	l1221
  2340   002078                     u2060:
  2341   002078  C01F  F021         	movff	abs@a,??_abs
  2342   00207C  C020  F022         	movff	abs@a+1,??_abs+1
  2343   002080  1E21               	comf	??_abs^0,f,c
  2344   002082  1E22               	comf	(??_abs+1)^0,f,c
  2345   002084  4A21               	infsnz	??_abs^0,f,c
  2346   002086  2A22               	incf	(??_abs+1)^0,f,c
  2347   002088  C021  F01F         	movff	??_abs,?_abs
  2348   00208C  C022  F020         	movff	??_abs+1,?_abs+1
  2349   002090  EF4E  F010         	goto	l1224
  2350   002094                     l1221:
  2351   002094  C01F  F01F         	movff	abs@a,?_abs
  2352   002098  C020  F020         	movff	abs@a+1,?_abs+1
  2353   00209C                     l1224:
  2354   00209C  0012               	return		;funcret
  2355   00209E                     __end_of_abs:
  2356                           	callstack 0
  2357                           
  2358 ;; *************** function ___aomod *****************
  2359 ;; Defined at:
  2360 ;;		line 9 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\aomod.c"
  2361 ;; Parameters:    Size  Location     Type
  2362 ;;  dividend        8   12[COMRAM] long long 
  2363 ;;  divisor         8   20[COMRAM] long long 
  2364 ;; Auto vars:     Size  Location     Type
  2365 ;;  sign            1   29[COMRAM] unsigned char 
  2366 ;;  counter         1   28[COMRAM] unsigned char 
  2367 ;; Return value:  Size  Location     Type
  2368 ;;                  8   12[COMRAM] long long 
  2369 ;; Registers used:
  2370 ;;		wreg, status,2, status,0
  2371 ;; Tracked objects:
  2372 ;;		On entry : 0/0
  2373 ;;		On exit  : 0/0
  2374 ;;		Unchanged: 0/0
  2375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2376 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2377 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2379 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2380 ;;Total ram usage:       18 bytes
  2381 ;; Hardware stack levels used: 1
  2382 ;; Hardware stack levels required when called: 7
  2383 ;; This function calls:
  2384 ;;		Nothing
  2385 ;; This function is called by:
  2386 ;;		_dtoa
  2387 ;; This function uses a non-reentrant model
  2388 ;;
  2389                           
  2390                           	psect	text10
  2391   001514                     __ptext10:
  2392                           	callstack 0
  2393   001514                     ___aomod:
  2394                           	callstack 19
  2395   001514  0E00               	movlw	0
  2396   001516  6E1E               	movwf	___aomod@sign^0,c
  2397   001518  BE14               	btfsc	(___aomod@dividend+7)^0,7,c
  2398   00151A  EF93  F00A         	goto	u1960
  2399   00151E  EF91  F00A         	goto	u1961
  2400   001522                     u1961:
  2401   001522  EFA5  F00A         	goto	l2990
  2402   001526                     u1960:
  2403   001526  1E14               	comf	(___aomod@dividend+7)^0,f,c
  2404   001528  1E13               	comf	(___aomod@dividend+6)^0,f,c
  2405   00152A  1E12               	comf	(___aomod@dividend+5)^0,f,c
  2406   00152C  1E11               	comf	(___aomod@dividend+4)^0,f,c
  2407   00152E  1E10               	comf	(___aomod@dividend+3)^0,f,c
  2408   001530  1E0F               	comf	(___aomod@dividend+2)^0,f,c
  2409   001532  1E0E               	comf	(___aomod@dividend+1)^0,f,c
  2410   001534  6C0D               	negf	___aomod@dividend^0,c
  2411   001536  0E00               	movlw	0
  2412   001538  220E               	addwfc	(___aomod@dividend+1)^0,f,c
  2413   00153A  220F               	addwfc	(___aomod@dividend+2)^0,f,c
  2414   00153C  2210               	addwfc	(___aomod@dividend+3)^0,f,c
  2415   00153E  2211               	addwfc	(___aomod@dividend+4)^0,f,c
  2416   001540  2212               	addwfc	(___aomod@dividend+5)^0,f,c
  2417   001542  2213               	addwfc	(___aomod@dividend+6)^0,f,c
  2418   001544  2214               	addwfc	(___aomod@dividend+7)^0,f,c
  2419   001546  0E01               	movlw	1
  2420   001548  6E1E               	movwf	___aomod@sign^0,c
  2421   00154A                     l2990:
  2422   00154A  BE1C               	btfsc	(___aomod@divisor+7)^0,7,c
  2423   00154C  EFAC  F00A         	goto	u1970
  2424   001550  EFAA  F00A         	goto	u1971
  2425   001554                     u1971:
  2426   001554  EFBC  F00A         	goto	l2994
  2427   001558                     u1970:
  2428   001558  1E1C               	comf	(___aomod@divisor+7)^0,f,c
  2429   00155A  1E1B               	comf	(___aomod@divisor+6)^0,f,c
  2430   00155C  1E1A               	comf	(___aomod@divisor+5)^0,f,c
  2431   00155E  1E19               	comf	(___aomod@divisor+4)^0,f,c
  2432   001560  1E18               	comf	(___aomod@divisor+3)^0,f,c
  2433   001562  1E17               	comf	(___aomod@divisor+2)^0,f,c
  2434   001564  1E16               	comf	(___aomod@divisor+1)^0,f,c
  2435   001566  6C15               	negf	___aomod@divisor^0,c
  2436   001568  0E00               	movlw	0
  2437   00156A  2216               	addwfc	(___aomod@divisor+1)^0,f,c
  2438   00156C  2217               	addwfc	(___aomod@divisor+2)^0,f,c
  2439   00156E  2218               	addwfc	(___aomod@divisor+3)^0,f,c
  2440   001570  2219               	addwfc	(___aomod@divisor+4)^0,f,c
  2441   001572  221A               	addwfc	(___aomod@divisor+5)^0,f,c
  2442   001574  221B               	addwfc	(___aomod@divisor+6)^0,f,c
  2443   001576  221C               	addwfc	(___aomod@divisor+7)^0,f,c
  2444   001578                     l2994:
  2445   001578  5015               	movf	___aomod@divisor^0,w,c
  2446   00157A  1016               	iorwf	(___aomod@divisor+1)^0,w,c
  2447   00157C  1017               	iorwf	(___aomod@divisor+2)^0,w,c
  2448   00157E  1018               	iorwf	(___aomod@divisor+3)^0,w,c
  2449   001580  1019               	iorwf	(___aomod@divisor+4)^0,w,c
  2450   001582  101A               	iorwf	(___aomod@divisor+5)^0,w,c
  2451   001584  101B               	iorwf	(___aomod@divisor+6)^0,w,c
  2452   001586  101C               	iorwf	(___aomod@divisor+7)^0,w,c
  2453   001588  B4D8               	btfsc	status,2,c
  2454   00158A  EFC9  F00A         	goto	u1981
  2455   00158E  EFCB  F00A         	goto	u1980
  2456   001592                     u1981:
  2457   001592  EF13  F00B         	goto	l3010
  2458   001596                     u1980:
  2459   001596  0E01               	movlw	1
  2460   001598  6E1D               	movwf	___aomod@counter^0,c
  2461   00159A  EFD9  F00A         	goto	l3000
  2462   00159E                     l2998:
  2463   00159E  90D8               	bcf	status,0,c
  2464   0015A0  3615               	rlcf	___aomod@divisor^0,f,c
  2465   0015A2  3616               	rlcf	(___aomod@divisor+1)^0,f,c
  2466   0015A4  3617               	rlcf	(___aomod@divisor+2)^0,f,c
  2467   0015A6  3618               	rlcf	(___aomod@divisor+3)^0,f,c
  2468   0015A8  3619               	rlcf	(___aomod@divisor+4)^0,f,c
  2469   0015AA  361A               	rlcf	(___aomod@divisor+5)^0,f,c
  2470   0015AC  361B               	rlcf	(___aomod@divisor+6)^0,f,c
  2471   0015AE  361C               	rlcf	(___aomod@divisor+7)^0,f,c
  2472   0015B0  2A1D               	incf	___aomod@counter^0,f,c
  2473   0015B2                     l3000:
  2474   0015B2  AE1C               	btfss	(___aomod@divisor+7)^0,7,c
  2475   0015B4  EFDE  F00A         	goto	u1991
  2476   0015B8  EFE0  F00A         	goto	u1990
  2477   0015BC                     u1991:
  2478   0015BC  EFCF  F00A         	goto	l2998
  2479   0015C0                     u1990:
  2480   0015C0                     l3002:
  2481   0015C0  5015               	movf	___aomod@divisor^0,w,c
  2482   0015C2  5C0D               	subwf	___aomod@dividend^0,w,c
  2483   0015C4  5016               	movf	(___aomod@divisor+1)^0,w,c
  2484   0015C6  580E               	subwfb	(___aomod@dividend+1)^0,w,c
  2485   0015C8  5017               	movf	(___aomod@divisor+2)^0,w,c
  2486   0015CA  580F               	subwfb	(___aomod@dividend+2)^0,w,c
  2487   0015CC  5018               	movf	(___aomod@divisor+3)^0,w,c
  2488   0015CE  5810               	subwfb	(___aomod@dividend+3)^0,w,c
  2489   0015D0  5019               	movf	(___aomod@divisor+4)^0,w,c
  2490   0015D2  5811               	subwfb	(___aomod@dividend+4)^0,w,c
  2491   0015D4  501A               	movf	(___aomod@divisor+5)^0,w,c
  2492   0015D6  5812               	subwfb	(___aomod@dividend+5)^0,w,c
  2493   0015D8  501B               	movf	(___aomod@divisor+6)^0,w,c
  2494   0015DA  5813               	subwfb	(___aomod@dividend+6)^0,w,c
  2495   0015DC  501C               	movf	(___aomod@divisor+7)^0,w,c
  2496   0015DE  5814               	subwfb	(___aomod@dividend+7)^0,w,c
  2497   0015E0  A0D8               	btfss	status,0,c
  2498   0015E2  EFF5  F00A         	goto	u2001
  2499   0015E6  EFF7  F00A         	goto	u2000
  2500   0015EA                     u2001:
  2501   0015EA  EF07  F00B         	goto	l3006
  2502   0015EE                     u2000:
  2503   0015EE  5015               	movf	___aomod@divisor^0,w,c
  2504   0015F0  5E0D               	subwf	___aomod@dividend^0,f,c
  2505   0015F2  5016               	movf	(___aomod@divisor+1)^0,w,c
  2506   0015F4  5A0E               	subwfb	(___aomod@dividend+1)^0,f,c
  2507   0015F6  5017               	movf	(___aomod@divisor+2)^0,w,c
  2508   0015F8  5A0F               	subwfb	(___aomod@dividend+2)^0,f,c
  2509   0015FA  5018               	movf	(___aomod@divisor+3)^0,w,c
  2510   0015FC  5A10               	subwfb	(___aomod@dividend+3)^0,f,c
  2511   0015FE  5019               	movf	(___aomod@divisor+4)^0,w,c
  2512   001600  5A11               	subwfb	(___aomod@dividend+4)^0,f,c
  2513   001602  501A               	movf	(___aomod@divisor+5)^0,w,c
  2514   001604  5A12               	subwfb	(___aomod@dividend+5)^0,f,c
  2515   001606  501B               	movf	(___aomod@divisor+6)^0,w,c
  2516   001608  5A13               	subwfb	(___aomod@dividend+6)^0,f,c
  2517   00160A  501C               	movf	(___aomod@divisor+7)^0,w,c
  2518   00160C  5A14               	subwfb	(___aomod@dividend+7)^0,f,c
  2519   00160E                     l3006:
  2520   00160E  90D8               	bcf	status,0,c
  2521   001610  321C               	rrcf	(___aomod@divisor+7)^0,f,c
  2522   001612  321B               	rrcf	(___aomod@divisor+6)^0,f,c
  2523   001614  321A               	rrcf	(___aomod@divisor+5)^0,f,c
  2524   001616  3219               	rrcf	(___aomod@divisor+4)^0,f,c
  2525   001618  3218               	rrcf	(___aomod@divisor+3)^0,f,c
  2526   00161A  3217               	rrcf	(___aomod@divisor+2)^0,f,c
  2527   00161C  3216               	rrcf	(___aomod@divisor+1)^0,f,c
  2528   00161E  3215               	rrcf	___aomod@divisor^0,f,c
  2529   001620  2E1D               	decfsz	___aomod@counter^0,f,c
  2530   001622  EFE0  F00A         	goto	l3002
  2531   001626                     l3010:
  2532   001626  501E               	movf	___aomod@sign^0,w,c
  2533   001628  B4D8               	btfsc	status,2,c
  2534   00162A  EF19  F00B         	goto	u2011
  2535   00162E  EF1B  F00B         	goto	u2010
  2536   001632                     u2011:
  2537   001632  EF2B  F00B         	goto	l3014
  2538   001636                     u2010:
  2539   001636  1E14               	comf	(___aomod@dividend+7)^0,f,c
  2540   001638  1E13               	comf	(___aomod@dividend+6)^0,f,c
  2541   00163A  1E12               	comf	(___aomod@dividend+5)^0,f,c
  2542   00163C  1E11               	comf	(___aomod@dividend+4)^0,f,c
  2543   00163E  1E10               	comf	(___aomod@dividend+3)^0,f,c
  2544   001640  1E0F               	comf	(___aomod@dividend+2)^0,f,c
  2545   001642  1E0E               	comf	(___aomod@dividend+1)^0,f,c
  2546   001644  6C0D               	negf	___aomod@dividend^0,c
  2547   001646  0E00               	movlw	0
  2548   001648  220E               	addwfc	(___aomod@dividend+1)^0,f,c
  2549   00164A  220F               	addwfc	(___aomod@dividend+2)^0,f,c
  2550   00164C  2210               	addwfc	(___aomod@dividend+3)^0,f,c
  2551   00164E  2211               	addwfc	(___aomod@dividend+4)^0,f,c
  2552   001650  2212               	addwfc	(___aomod@dividend+5)^0,f,c
  2553   001652  2213               	addwfc	(___aomod@dividend+6)^0,f,c
  2554   001654  2214               	addwfc	(___aomod@dividend+7)^0,f,c
  2555   001656                     l3014:
  2556   001656  C00D  F00D         	movff	___aomod@dividend,?___aomod
  2557   00165A  C00E  F00E         	movff	___aomod@dividend+1,?___aomod+1
  2558   00165E  C00F  F00F         	movff	___aomod@dividend+2,?___aomod+2
  2559   001662  C010  F010         	movff	___aomod@dividend+3,?___aomod+3
  2560   001666  C011  F011         	movff	___aomod@dividend+4,?___aomod+4
  2561   00166A  C012  F012         	movff	___aomod@dividend+5,?___aomod+5
  2562   00166E  C013  F013         	movff	___aomod@dividend+6,?___aomod+6
  2563   001672  C014  F014         	movff	___aomod@dividend+7,?___aomod+7
  2564   001676  0012               	return		;funcret
  2565   001678                     __end_of___aomod:
  2566                           	callstack 0
  2567                           
  2568 ;; *************** function ___aodiv *****************
  2569 ;; Defined at:
  2570 ;;		line 9 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\aodiv.c"
  2571 ;; Parameters:    Size  Location     Type
  2572 ;;  dividend        8   12[COMRAM] long long 
  2573 ;;  divisor         8   20[COMRAM] long long 
  2574 ;; Auto vars:     Size  Location     Type
  2575 ;;  quotient        8   30[COMRAM] long long 
  2576 ;;  sign            1   29[COMRAM] unsigned char 
  2577 ;;  counter         1   28[COMRAM] unsigned char 
  2578 ;; Return value:  Size  Location     Type
  2579 ;;                  8   12[COMRAM] long long 
  2580 ;; Registers used:
  2581 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2582 ;; Tracked objects:
  2583 ;;		On entry : 0/0
  2584 ;;		On exit  : 0/0
  2585 ;;		Unchanged: 0/0
  2586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2587 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2588 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2590 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2591 ;;Total ram usage:       26 bytes
  2592 ;; Hardware stack levels used: 1
  2593 ;; Hardware stack levels required when called: 7
  2594 ;; This function calls:
  2595 ;;		Nothing
  2596 ;; This function is called by:
  2597 ;;		_dtoa
  2598 ;; This function uses a non-reentrant model
  2599 ;;
  2600                           
  2601                           	psect	text11
  2602   00138C                     __ptext11:
  2603                           	callstack 0
  2604   00138C                     ___aodiv:
  2605                           	callstack 19
  2606   00138C  0E00               	movlw	0
  2607   00138E  6E1E               	movwf	___aodiv@sign^0,c
  2608   001390  BE1C               	btfsc	(___aodiv@divisor+7)^0,7,c
  2609   001392  EFCF  F009         	goto	u1890
  2610   001396  EFCD  F009         	goto	u1891
  2611   00139A                     u1891:
  2612   00139A  EFE1  F009         	goto	l2946
  2613   00139E                     u1890:
  2614   00139E  1E1C               	comf	(___aodiv@divisor+7)^0,f,c
  2615   0013A0  1E1B               	comf	(___aodiv@divisor+6)^0,f,c
  2616   0013A2  1E1A               	comf	(___aodiv@divisor+5)^0,f,c
  2617   0013A4  1E19               	comf	(___aodiv@divisor+4)^0,f,c
  2618   0013A6  1E18               	comf	(___aodiv@divisor+3)^0,f,c
  2619   0013A8  1E17               	comf	(___aodiv@divisor+2)^0,f,c
  2620   0013AA  1E16               	comf	(___aodiv@divisor+1)^0,f,c
  2621   0013AC  6C15               	negf	___aodiv@divisor^0,c
  2622   0013AE  0E00               	movlw	0
  2623   0013B0  2216               	addwfc	(___aodiv@divisor+1)^0,f,c
  2624   0013B2  2217               	addwfc	(___aodiv@divisor+2)^0,f,c
  2625   0013B4  2218               	addwfc	(___aodiv@divisor+3)^0,f,c
  2626   0013B6  2219               	addwfc	(___aodiv@divisor+4)^0,f,c
  2627   0013B8  221A               	addwfc	(___aodiv@divisor+5)^0,f,c
  2628   0013BA  221B               	addwfc	(___aodiv@divisor+6)^0,f,c
  2629   0013BC  221C               	addwfc	(___aodiv@divisor+7)^0,f,c
  2630   0013BE  0E01               	movlw	1
  2631   0013C0  6E1E               	movwf	___aodiv@sign^0,c
  2632   0013C2                     l2946:
  2633   0013C2  BE14               	btfsc	(___aodiv@dividend+7)^0,7,c
  2634   0013C4  EFE8  F009         	goto	u1900
  2635   0013C8  EFE6  F009         	goto	u1901
  2636   0013CC                     u1901:
  2637   0013CC  EFFA  F009         	goto	l2952
  2638   0013D0                     u1900:
  2639   0013D0  1E14               	comf	(___aodiv@dividend+7)^0,f,c
  2640   0013D2  1E13               	comf	(___aodiv@dividend+6)^0,f,c
  2641   0013D4  1E12               	comf	(___aodiv@dividend+5)^0,f,c
  2642   0013D6  1E11               	comf	(___aodiv@dividend+4)^0,f,c
  2643   0013D8  1E10               	comf	(___aodiv@dividend+3)^0,f,c
  2644   0013DA  1E0F               	comf	(___aodiv@dividend+2)^0,f,c
  2645   0013DC  1E0E               	comf	(___aodiv@dividend+1)^0,f,c
  2646   0013DE  6C0D               	negf	___aodiv@dividend^0,c
  2647   0013E0  0E00               	movlw	0
  2648   0013E2  220E               	addwfc	(___aodiv@dividend+1)^0,f,c
  2649   0013E4  220F               	addwfc	(___aodiv@dividend+2)^0,f,c
  2650   0013E6  2210               	addwfc	(___aodiv@dividend+3)^0,f,c
  2651   0013E8  2211               	addwfc	(___aodiv@dividend+4)^0,f,c
  2652   0013EA  2212               	addwfc	(___aodiv@dividend+5)^0,f,c
  2653   0013EC  2213               	addwfc	(___aodiv@dividend+6)^0,f,c
  2654   0013EE  2214               	addwfc	(___aodiv@dividend+7)^0,f,c
  2655   0013F0  0E01               	movlw	1
  2656   0013F2  1A1E               	xorwf	___aodiv@sign^0,f,c
  2657   0013F4                     l2952:
  2658   0013F4  EE20  F01F         	lfsr	2,___aodiv@quotient
  2659   0013F8  0E07               	movlw	7
  2660   0013FA                     u1911:
  2661   0013FA  6ADE               	clrf	postinc2,c
  2662   0013FC  06E8               	decf	wreg,f,c
  2663   0013FE  E2FD               	bc	u1911
  2664   001400  5015               	movf	___aodiv@divisor^0,w,c
  2665   001402  1016               	iorwf	(___aodiv@divisor+1)^0,w,c
  2666   001404  1017               	iorwf	(___aodiv@divisor+2)^0,w,c
  2667   001406  1018               	iorwf	(___aodiv@divisor+3)^0,w,c
  2668   001408  1019               	iorwf	(___aodiv@divisor+4)^0,w,c
  2669   00140A  101A               	iorwf	(___aodiv@divisor+5)^0,w,c
  2670   00140C  101B               	iorwf	(___aodiv@divisor+6)^0,w,c
  2671   00140E  101C               	iorwf	(___aodiv@divisor+7)^0,w,c
  2672   001410  B4D8               	btfsc	status,2,c
  2673   001412  EF0D  F00A         	goto	u1921
  2674   001416  EF0F  F00A         	goto	u1920
  2675   00141A                     u1921:
  2676   00141A  EF61  F00A         	goto	l2974
  2677   00141E                     u1920:
  2678   00141E  0E01               	movlw	1
  2679   001420  6E1D               	movwf	___aodiv@counter^0,c
  2680   001422  EF1D  F00A         	goto	l2960
  2681   001426                     l2958:
  2682   001426  90D8               	bcf	status,0,c
  2683   001428  3615               	rlcf	___aodiv@divisor^0,f,c
  2684   00142A  3616               	rlcf	(___aodiv@divisor+1)^0,f,c
  2685   00142C  3617               	rlcf	(___aodiv@divisor+2)^0,f,c
  2686   00142E  3618               	rlcf	(___aodiv@divisor+3)^0,f,c
  2687   001430  3619               	rlcf	(___aodiv@divisor+4)^0,f,c
  2688   001432  361A               	rlcf	(___aodiv@divisor+5)^0,f,c
  2689   001434  361B               	rlcf	(___aodiv@divisor+6)^0,f,c
  2690   001436  361C               	rlcf	(___aodiv@divisor+7)^0,f,c
  2691   001438  2A1D               	incf	___aodiv@counter^0,f,c
  2692   00143A                     l2960:
  2693   00143A  AE1C               	btfss	(___aodiv@divisor+7)^0,7,c
  2694   00143C  EF22  F00A         	goto	u1931
  2695   001440  EF24  F00A         	goto	u1930
  2696   001444                     u1931:
  2697   001444  EF13  F00A         	goto	l2958
  2698   001448                     u1930:
  2699   001448                     l2962:
  2700   001448  90D8               	bcf	status,0,c
  2701   00144A  361F               	rlcf	___aodiv@quotient^0,f,c
  2702   00144C  3620               	rlcf	(___aodiv@quotient+1)^0,f,c
  2703   00144E  3621               	rlcf	(___aodiv@quotient+2)^0,f,c
  2704   001450  3622               	rlcf	(___aodiv@quotient+3)^0,f,c
  2705   001452  3623               	rlcf	(___aodiv@quotient+4)^0,f,c
  2706   001454  3624               	rlcf	(___aodiv@quotient+5)^0,f,c
  2707   001456  3625               	rlcf	(___aodiv@quotient+6)^0,f,c
  2708   001458  3626               	rlcf	(___aodiv@quotient+7)^0,f,c
  2709   00145A  5015               	movf	___aodiv@divisor^0,w,c
  2710   00145C  5C0D               	subwf	___aodiv@dividend^0,w,c
  2711   00145E  5016               	movf	(___aodiv@divisor+1)^0,w,c
  2712   001460  580E               	subwfb	(___aodiv@dividend+1)^0,w,c
  2713   001462  5017               	movf	(___aodiv@divisor+2)^0,w,c
  2714   001464  580F               	subwfb	(___aodiv@dividend+2)^0,w,c
  2715   001466  5018               	movf	(___aodiv@divisor+3)^0,w,c
  2716   001468  5810               	subwfb	(___aodiv@dividend+3)^0,w,c
  2717   00146A  5019               	movf	(___aodiv@divisor+4)^0,w,c
  2718   00146C  5811               	subwfb	(___aodiv@dividend+4)^0,w,c
  2719   00146E  501A               	movf	(___aodiv@divisor+5)^0,w,c
  2720   001470  5812               	subwfb	(___aodiv@dividend+5)^0,w,c
  2721   001472  501B               	movf	(___aodiv@divisor+6)^0,w,c
  2722   001474  5813               	subwfb	(___aodiv@dividend+6)^0,w,c
  2723   001476  501C               	movf	(___aodiv@divisor+7)^0,w,c
  2724   001478  5814               	subwfb	(___aodiv@dividend+7)^0,w,c
  2725   00147A  A0D8               	btfss	status,0,c
  2726   00147C  EF42  F00A         	goto	u1941
  2727   001480  EF44  F00A         	goto	u1940
  2728   001484                     u1941:
  2729   001484  EF55  F00A         	goto	l2970
  2730   001488                     u1940:
  2731   001488  5015               	movf	___aodiv@divisor^0,w,c
  2732   00148A  5E0D               	subwf	___aodiv@dividend^0,f,c
  2733   00148C  5016               	movf	(___aodiv@divisor+1)^0,w,c
  2734   00148E  5A0E               	subwfb	(___aodiv@dividend+1)^0,f,c
  2735   001490  5017               	movf	(___aodiv@divisor+2)^0,w,c
  2736   001492  5A0F               	subwfb	(___aodiv@dividend+2)^0,f,c
  2737   001494  5018               	movf	(___aodiv@divisor+3)^0,w,c
  2738   001496  5A10               	subwfb	(___aodiv@dividend+3)^0,f,c
  2739   001498  5019               	movf	(___aodiv@divisor+4)^0,w,c
  2740   00149A  5A11               	subwfb	(___aodiv@dividend+4)^0,f,c
  2741   00149C  501A               	movf	(___aodiv@divisor+5)^0,w,c
  2742   00149E  5A12               	subwfb	(___aodiv@dividend+5)^0,f,c
  2743   0014A0  501B               	movf	(___aodiv@divisor+6)^0,w,c
  2744   0014A2  5A13               	subwfb	(___aodiv@dividend+6)^0,f,c
  2745   0014A4  501C               	movf	(___aodiv@divisor+7)^0,w,c
  2746   0014A6  5A14               	subwfb	(___aodiv@dividend+7)^0,f,c
  2747   0014A8  801F               	bsf	___aodiv@quotient^0,0,c
  2748   0014AA                     l2970:
  2749   0014AA  90D8               	bcf	status,0,c
  2750   0014AC  321C               	rrcf	(___aodiv@divisor+7)^0,f,c
  2751   0014AE  321B               	rrcf	(___aodiv@divisor+6)^0,f,c
  2752   0014B0  321A               	rrcf	(___aodiv@divisor+5)^0,f,c
  2753   0014B2  3219               	rrcf	(___aodiv@divisor+4)^0,f,c
  2754   0014B4  3218               	rrcf	(___aodiv@divisor+3)^0,f,c
  2755   0014B6  3217               	rrcf	(___aodiv@divisor+2)^0,f,c
  2756   0014B8  3216               	rrcf	(___aodiv@divisor+1)^0,f,c
  2757   0014BA  3215               	rrcf	___aodiv@divisor^0,f,c
  2758   0014BC  2E1D               	decfsz	___aodiv@counter^0,f,c
  2759   0014BE  EF24  F00A         	goto	l2962
  2760   0014C2                     l2974:
  2761   0014C2  501E               	movf	___aodiv@sign^0,w,c
  2762   0014C4  B4D8               	btfsc	status,2,c
  2763   0014C6  EF67  F00A         	goto	u1951
  2764   0014CA  EF69  F00A         	goto	u1950
  2765   0014CE                     u1951:
  2766   0014CE  EF79  F00A         	goto	l2978
  2767   0014D2                     u1950:
  2768   0014D2  1E26               	comf	(___aodiv@quotient+7)^0,f,c
  2769   0014D4  1E25               	comf	(___aodiv@quotient+6)^0,f,c
  2770   0014D6  1E24               	comf	(___aodiv@quotient+5)^0,f,c
  2771   0014D8  1E23               	comf	(___aodiv@quotient+4)^0,f,c
  2772   0014DA  1E22               	comf	(___aodiv@quotient+3)^0,f,c
  2773   0014DC  1E21               	comf	(___aodiv@quotient+2)^0,f,c
  2774   0014DE  1E20               	comf	(___aodiv@quotient+1)^0,f,c
  2775   0014E0  6C1F               	negf	___aodiv@quotient^0,c
  2776   0014E2  0E00               	movlw	0
  2777   0014E4  2220               	addwfc	(___aodiv@quotient+1)^0,f,c
  2778   0014E6  2221               	addwfc	(___aodiv@quotient+2)^0,f,c
  2779   0014E8  2222               	addwfc	(___aodiv@quotient+3)^0,f,c
  2780   0014EA  2223               	addwfc	(___aodiv@quotient+4)^0,f,c
  2781   0014EC  2224               	addwfc	(___aodiv@quotient+5)^0,f,c
  2782   0014EE  2225               	addwfc	(___aodiv@quotient+6)^0,f,c
  2783   0014F0  2226               	addwfc	(___aodiv@quotient+7)^0,f,c
  2784   0014F2                     l2978:
  2785   0014F2  C01F  F00D         	movff	___aodiv@quotient,?___aodiv
  2786   0014F6  C020  F00E         	movff	___aodiv@quotient+1,?___aodiv+1
  2787   0014FA  C021  F00F         	movff	___aodiv@quotient+2,?___aodiv+2
  2788   0014FE  C022  F010         	movff	___aodiv@quotient+3,?___aodiv+3
  2789   001502  C023  F011         	movff	___aodiv@quotient+4,?___aodiv+4
  2790   001506  C024  F012         	movff	___aodiv@quotient+5,?___aodiv+5
  2791   00150A  C025  F013         	movff	___aodiv@quotient+6,?___aodiv+6
  2792   00150E  C026  F014         	movff	___aodiv@quotient+7,?___aodiv+7
  2793   001512  0012               	return		;funcret
  2794   001514                     __end_of___aodiv:
  2795                           	callstack 0
  2796                           
  2797 ;; *************** function _atoi *****************
  2798 ;; Defined at:
  2799 ;;		line 4 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\atoi.c"
  2800 ;; Parameters:    Size  Location     Type
  2801 ;;  s               2   18[COMRAM] PTR const unsigned char 
  2802 ;;		 -> STR_1(24), 
  2803 ;; Auto vars:     Size  Location     Type
  2804 ;;  n               2   25[COMRAM] int 
  2805 ;;  neg             2   23[COMRAM] int 
  2806 ;; Return value:  Size  Location     Type
  2807 ;;                  2   18[COMRAM] int 
  2808 ;; Registers used:
  2809 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2810 ;; Tracked objects:
  2811 ;;		On entry : 0/0
  2812 ;;		On exit  : 0/0
  2813 ;;		Unchanged: 0/0
  2814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2815 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2816 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2817 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2818 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2819 ;;Total ram usage:        9 bytes
  2820 ;; Hardware stack levels used: 1
  2821 ;; Hardware stack levels required when called: 8
  2822 ;; This function calls:
  2823 ;;		___wmul
  2824 ;;		_isdigit
  2825 ;;		_isspace
  2826 ;; This function is called by:
  2827 ;;		_vfpfcnvrt
  2828 ;; This function uses a non-reentrant model
  2829 ;;
  2830                           
  2831                           	psect	text12
  2832   001678                     __ptext12:
  2833                           	callstack 0
  2834   001678                     _atoi:
  2835                           	callstack 19
  2836   001678  0E00               	movlw	0
  2837   00167A  6E1B               	movwf	(atoi@n+1)^0,c
  2838   00167C  0E00               	movlw	0
  2839   00167E  6E1A               	movwf	atoi@n^0,c
  2840   001680  0E00               	movlw	0
  2841   001682  6E19               	movwf	(atoi@neg+1)^0,c
  2842   001684  0E00               	movlw	0
  2843   001686  6E18               	movwf	atoi@neg^0,c
  2844   001688  EF48  F00B         	goto	l2354
  2845   00168C                     l2350:
  2846   00168C  4A13               	infsnz	atoi@s^0,f,c
  2847   00168E  2A14               	incf	(atoi@s+1)^0,f,c
  2848   001690                     l2354:
  2849   001690  C013  FFF6         	movff	atoi@s,tblptrl
  2850   001694  C014  FFF7         	movff	atoi@s+1,tblptrh
  2851   001698                     	if	0	;tblptru may be non-zero
  2852   001698                     	endif
  2853   001698                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2854   001698  0E00               	movlw	low (__mediumconst shr (0+16))
  2855   00169A  6EF8               	movwf	tblptru,c
  2856   00169C                     	endif
  2857   00169C  0008               	tblrd		*
  2858   00169E  50F5               	movf	tablat,w,c
  2859   0016A0  0A20               	xorlw	32
  2860   0016A2  B4D8               	btfsc	status,2,c
  2861   0016A4  EF56  F00B         	goto	u1381
  2862   0016A8  EF58  F00B         	goto	u1380
  2863   0016AC                     u1381:
  2864   0016AC  EF46  F00B         	goto	l2350
  2865   0016B0                     u1380:
  2866   0016B0  C013  FFF6         	movff	atoi@s,tblptrl
  2867   0016B4  C014  FFF7         	movff	atoi@s+1,tblptrh
  2868   0016B8                     	if	0	;tblptru may be non-zero
  2869   0016B8                     	endif
  2870   0016B8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2871   0016B8  0E00               	movlw	low (__mediumconst shr (0+16))
  2872   0016BA  6EF8               	movwf	tblptru,c
  2873   0016BC                     	endif
  2874   0016BC  0008               	tblrd		*
  2875   0016BE  CFF5 F015          	movff	tablat,??_atoi
  2876   0016C2  0EF7               	movlw	247
  2877   0016C4  2415               	addwf	??_atoi^0,w,c
  2878   0016C6  6E16               	movwf	(??_atoi+1)^0,c
  2879   0016C8  6A17               	clrf	(??_atoi+2)^0,c
  2880   0016CA  0EFF               	movlw	255
  2881   0016CC  2217               	addwfc	(??_atoi+2)^0,f,c
  2882   0016CE  5017               	movf	(??_atoi+2)^0,w,c
  2883   0016D0  E109               	bnz	u1390
  2884   0016D2  0E05               	movlw	5
  2885   0016D4  5C16               	subwf	(??_atoi+1)^0,w,c
  2886   0016D6  A0D8               	btfss	status,0,c
  2887   0016D8  EF70  F00B         	goto	u1391
  2888   0016DC  EF72  F00B         	goto	u1390
  2889   0016E0                     u1391:
  2890   0016E0  EF46  F00B         	goto	l2350
  2891   0016E4                     u1390:
  2892   0016E4  EF7C  F00B         	goto	l2362
  2893   0016E8                     l2358:
  2894   0016E8  0E00               	movlw	0
  2895   0016EA  6E19               	movwf	(atoi@neg+1)^0,c
  2896   0016EC  0E01               	movlw	1
  2897   0016EE  6E18               	movwf	atoi@neg^0,c
  2898   0016F0                     l2360:
  2899   0016F0  4A13               	infsnz	atoi@s^0,f,c
  2900   0016F2  2A14               	incf	(atoi@s+1)^0,f,c
  2901   0016F4  EFB5  F00B         	goto	l2370
  2902   0016F8                     l2362:
  2903   0016F8  C013  FFF6         	movff	atoi@s,tblptrl
  2904   0016FC  C014  FFF7         	movff	atoi@s+1,tblptrh
  2905   001700                     	if	0	;tblptru may be non-zero
  2906   001700                     	endif
  2907   001700                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2908   001700  0E00               	movlw	low (__mediumconst shr (0+16))
  2909   001702  6EF8               	movwf	tblptru,c
  2910   001704                     	endif
  2911   001704  0008               	tblrd		*
  2912   001706  50F5               	movf	tablat,w,c
  2913   001708  6E15               	movwf	??_atoi^0,c
  2914   00170A  6A16               	clrf	(??_atoi+1)^0,c
  2915                           
  2916                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2917                           ; Switch size 1, requested type "simple"
  2918                           ; Number of cases is 1, Range of values is 0 to 0
  2919                           ; switch strategies available:
  2920                           ; Name         Instructions Cycles
  2921                           ; simple_byte            4     3 (average)
  2922                           ;	Chosen strategy is simple_byte
  2923   00170C  5016               	movf	(??_atoi+1)^0,w,c
  2924   00170E  0A00               	xorlw	0	; case 0
  2925   001710  B4D8               	btfsc	status,2,c
  2926   001712  EF8D  F00B         	goto	l3282
  2927   001716  EFB5  F00B         	goto	l2370
  2928   00171A                     l3282:
  2929                           
  2930                           ; Switch size 1, requested type "simple"
  2931                           ; Number of cases is 2, Range of values is 43 to 45
  2932                           ; switch strategies available:
  2933                           ; Name         Instructions Cycles
  2934                           ; simple_byte            7     4 (average)
  2935                           ;	Chosen strategy is simple_byte
  2936   00171A  5015               	movf	??_atoi^0,w,c
  2937   00171C  0A2B               	xorlw	43	; case 43
  2938   00171E  B4D8               	btfsc	status,2,c
  2939   001720  EF78  F00B         	goto	l2360
  2940   001724  0A06               	xorlw	6	; case 45
  2941   001726  B4D8               	btfsc	status,2,c
  2942   001728  EF74  F00B         	goto	l2358
  2943   00172C  EFB5  F00B         	goto	l2370
  2944   001730                     l2364:
  2945   001730  C01A  F00D         	movff	atoi@n,___wmul@multiplier
  2946   001734  C01B  F00E         	movff	atoi@n+1,___wmul@multiplier+1
  2947   001738  0E00               	movlw	0
  2948   00173A  6E10               	movwf	(___wmul@multiplicand+1)^0,c
  2949   00173C  0E0A               	movlw	10
  2950   00173E  6E0F               	movwf	___wmul@multiplicand^0,c
  2951   001740  EC2A  F011         	call	___wmul	;wreg free
  2952   001744  C013  FFF6         	movff	atoi@s,tblptrl
  2953   001748  C014  FFF7         	movff	atoi@s+1,tblptrh
  2954   00174C                     	if	0	;tblptru may be non-zero
  2955   00174C                     	endif
  2956   00174C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2957   00174C  0E00               	movlw	low (__mediumconst shr (0+16))
  2958   00174E  6EF8               	movwf	tblptru,c
  2959   001750                     	endif
  2960   001750  0008               	tblrd		*
  2961   001752  50F5               	movf	tablat,w,c
  2962   001754  5E0D               	subwf	?___wmul^0,f,c
  2963   001756  0E00               	movlw	0
  2964   001758  5A0E               	subwfb	(?___wmul+1)^0,f,c
  2965   00175A  0E30               	movlw	48
  2966   00175C  240D               	addwf	?___wmul^0,w,c
  2967   00175E  6E1A               	movwf	atoi@n^0,c
  2968   001760  0E00               	movlw	0
  2969   001762  200E               	addwfc	(?___wmul+1)^0,w,c
  2970   001764  6E1B               	movwf	(atoi@n+1)^0,c
  2971   001766  EF78  F00B         	goto	l2360
  2972   00176A                     l2370:
  2973   00176A  C013  FFF6         	movff	atoi@s,tblptrl
  2974   00176E  C014  FFF7         	movff	atoi@s+1,tblptrh
  2975   001772                     	if	0	;tblptru may be non-zero
  2976   001772                     	endif
  2977   001772                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2978   001772  0E00               	movlw	low (__mediumconst shr (0+16))
  2979   001774  6EF8               	movwf	tblptru,c
  2980   001776                     	endif
  2981   001776  0008               	tblrd		*
  2982   001778  CFF5 F015          	movff	tablat,??_atoi
  2983   00177C  0ED0               	movlw	208
  2984   00177E  2415               	addwf	??_atoi^0,w,c
  2985   001780  6E16               	movwf	(??_atoi+1)^0,c
  2986   001782  6A17               	clrf	(??_atoi+2)^0,c
  2987   001784  0EFF               	movlw	255
  2988   001786  2217               	addwfc	(??_atoi+2)^0,f,c
  2989   001788  5017               	movf	(??_atoi+2)^0,w,c
  2990   00178A  E109               	bnz	u1400
  2991   00178C  0E0A               	movlw	10
  2992   00178E  5C16               	subwf	(??_atoi+1)^0,w,c
  2993   001790  A0D8               	btfss	status,0,c
  2994   001792  EFCD  F00B         	goto	u1401
  2995   001796  EFCF  F00B         	goto	u1400
  2996   00179A                     u1401:
  2997   00179A  EF98  F00B         	goto	l2364
  2998   00179E                     u1400:
  2999   00179E  5018               	movf	atoi@neg^0,w,c
  3000   0017A0  1019               	iorwf	(atoi@neg+1)^0,w,c
  3001   0017A2  A4D8               	btfss	status,2,c
  3002   0017A4  EFD6  F00B         	goto	u1411
  3003   0017A8  EFD8  F00B         	goto	u1410
  3004   0017AC                     u1411:
  3005   0017AC  EFE6  F00B         	goto	l1246
  3006   0017B0                     u1410:
  3007   0017B0  C01A  F015         	movff	atoi@n,??_atoi
  3008   0017B4  C01B  F016         	movff	atoi@n+1,??_atoi+1
  3009   0017B8  1E15               	comf	??_atoi^0,f,c
  3010   0017BA  1E16               	comf	(??_atoi+1)^0,f,c
  3011   0017BC  4A15               	infsnz	??_atoi^0,f,c
  3012   0017BE  2A16               	incf	(??_atoi+1)^0,f,c
  3013   0017C0  C015  F013         	movff	??_atoi,?_atoi
  3014   0017C4  C016  F014         	movff	??_atoi+1,?_atoi+1
  3015   0017C8  EFEA  F00B         	goto	l1249
  3016   0017CC                     l1246:
  3017   0017CC  C01A  F013         	movff	atoi@n,?_atoi
  3018   0017D0  C01B  F014         	movff	atoi@n+1,?_atoi+1
  3019   0017D4                     l1249:
  3020   0017D4  0012               	return		;funcret
  3021   0017D6                     __end_of_atoi:
  3022                           	callstack 0
  3023                           
  3024 ;; *************** function _isspace *****************
  3025 ;; Defined at:
  3026 ;;		line 5 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\isspace.c"
  3027 ;; Parameters:    Size  Location     Type
  3028 ;;  c               2   12[COMRAM] int 
  3029 ;; Auto vars:     Size  Location     Type
  3030 ;;		None
  3031 ;; Return value:  Size  Location     Type
  3032 ;;                  2   12[COMRAM] int 
  3033 ;; Registers used:
  3034 ;;		wreg, status,2, status,0
  3035 ;; Tracked objects:
  3036 ;;		On entry : 0/0
  3037 ;;		On exit  : 0/0
  3038 ;;		Unchanged: 0/0
  3039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3040 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3041 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3042 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3043 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3044 ;;Total ram usage:        5 bytes
  3045 ;; Hardware stack levels used: 1
  3046 ;; Hardware stack levels required when called: 7
  3047 ;; This function calls:
  3048 ;;		Nothing
  3049 ;; This function is called by:
  3050 ;;		_atoi
  3051 ;; This function uses a non-reentrant model
  3052 ;;
  3053                           
  3054                           	psect	text13
  3055   001F92                     __ptext13:
  3056                           	callstack 0
  3057   001F92                     _isspace:
  3058                           	callstack 19
  3059   001F92  0E01               	movlw	1
  3060   001F94  6E11               	movwf	_isspace$2477^0,c
  3061   001F96  0E20               	movlw	32
  3062   001F98  180D               	xorwf	isspace@c^0,w,c
  3063   001F9A  100E               	iorwf	(isspace@c+1)^0,w,c
  3064   001F9C  B4D8               	btfsc	status,2,c
  3065   001F9E  EFD3  F00F         	goto	u1211
  3066   001FA2  EFD5  F00F         	goto	u1210
  3067   001FA6                     u1211:
  3068   001FA6  EFE8  F00F         	goto	l2278
  3069   001FAA                     u1210:
  3070   001FAA  0EF7               	movlw	247
  3071   001FAC  240D               	addwf	isspace@c^0,w,c
  3072   001FAE  6E0F               	movwf	??_isspace^0,c
  3073   001FB0  0EFF               	movlw	255
  3074   001FB2  200E               	addwfc	(isspace@c+1)^0,w,c
  3075   001FB4  6E10               	movwf	(??_isspace+1)^0,c
  3076   001FB6  5010               	movf	(??_isspace+1)^0,w,c
  3077   001FB8  E109               	bnz	u1220
  3078   001FBA  0E05               	movlw	5
  3079   001FBC  5C0F               	subwf	??_isspace^0,w,c
  3080   001FBE  A0D8               	btfss	status,0,c
  3081   001FC0  EFE4  F00F         	goto	u1221
  3082   001FC4  EFE6  F00F         	goto	u1220
  3083   001FC8                     u1221:
  3084   001FC8  EFE8  F00F         	goto	l2278
  3085   001FCC                     u1220:
  3086   001FCC  0E00               	movlw	0
  3087   001FCE  6E11               	movwf	_isspace$2477^0,c
  3088   001FD0                     l2278:
  3089   001FD0  C011  F00D         	movff	_isspace$2477,?_isspace
  3090   001FD4  6A0E               	clrf	(?_isspace+1)^0,c
  3091   001FD6  0012               	return		;funcret
  3092   001FD8                     __end_of_isspace:
  3093                           	callstack 0
  3094                           
  3095 ;; *************** function _isdigit *****************
  3096 ;; Defined at:
  3097 ;;		line 5 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\isdigit.c"
  3098 ;; Parameters:    Size  Location     Type
  3099 ;;  c               2   12[COMRAM] int 
  3100 ;; Auto vars:     Size  Location     Type
  3101 ;;		None
  3102 ;; Return value:  Size  Location     Type
  3103 ;;                  2   12[COMRAM] int 
  3104 ;; Registers used:
  3105 ;;		wreg, status,2, status,0
  3106 ;; Tracked objects:
  3107 ;;		On entry : 0/0
  3108 ;;		On exit  : 0/0
  3109 ;;		Unchanged: 0/0
  3110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3111 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3113 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3114 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3115 ;;Total ram usage:        4 bytes
  3116 ;; Hardware stack levels used: 1
  3117 ;; Hardware stack levels required when called: 7
  3118 ;; This function calls:
  3119 ;;		Nothing
  3120 ;; This function is called by:
  3121 ;;		_vfpfcnvrt
  3122 ;;		_atoi
  3123 ;; This function uses a non-reentrant model
  3124 ;;
  3125                           
  3126                           	psect	text14
  3127   002102                     __ptext14:
  3128                           	callstack 0
  3129   002102                     _isdigit:
  3130                           	callstack 20
  3131   002102  0ED0               	movlw	208
  3132   002104  240D               	addwf	isdigit@c^0,w,c
  3133   002106  6E0F               	movwf	??_isdigit^0,c
  3134   002108  0EFF               	movlw	255
  3135   00210A  200E               	addwfc	(isdigit@c+1)^0,w,c
  3136   00210C  6E10               	movwf	(??_isdigit+1)^0,c
  3137   00210E  5010               	movf	(??_isdigit+1)^0,w,c
  3138   002110  E10A               	bnz	u1190
  3139   002112  0E0A               	movlw	10
  3140   002114  5C0F               	subwf	??_isdigit^0,w,c
  3141   002116  A0D8               	btfss	status,0,c
  3142   002118  EF90  F010         	goto	u1191
  3143   00211C  EF93  F010         	goto	u1190
  3144   002120                     u1191:
  3145   002120  0E01               	movlw	1
  3146   002122  EF94  F010         	goto	u1200
  3147   002126                     u1190:
  3148   002126  0E00               	movlw	0
  3149   002128                     u1200:
  3150   002128  6E0D               	movwf	?_isdigit^0,c
  3151   00212A  6A0E               	clrf	(?_isdigit+1)^0,c
  3152   00212C  0012               	return		;funcret
  3153   00212E                     __end_of_isdigit:
  3154                           	callstack 0
  3155                           
  3156 ;; *************** function ___wmul *****************
  3157 ;; Defined at:
  3158 ;;		line 15 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\Umul16.c"
  3159 ;; Parameters:    Size  Location     Type
  3160 ;;  multiplier      2   12[COMRAM] unsigned int 
  3161 ;;  multiplicand    2   14[COMRAM] unsigned int 
  3162 ;; Auto vars:     Size  Location     Type
  3163 ;;  product         2   16[COMRAM] unsigned int 
  3164 ;; Return value:  Size  Location     Type
  3165 ;;                  2   12[COMRAM] unsigned int 
  3166 ;; Registers used:
  3167 ;;		wreg, status,2, status,0, prodl, prodh
  3168 ;; Tracked objects:
  3169 ;;		On entry : 0/0
  3170 ;;		On exit  : 0/0
  3171 ;;		Unchanged: 0/0
  3172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3173 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3174 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3176 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3177 ;;Total ram usage:        6 bytes
  3178 ;; Hardware stack levels used: 1
  3179 ;; Hardware stack levels required when called: 7
  3180 ;; This function calls:
  3181 ;;		Nothing
  3182 ;; This function is called by:
  3183 ;;		_atoi
  3184 ;;		_setMotorPWM
  3185 ;; This function uses a non-reentrant model
  3186 ;;
  3187                           
  3188                           	psect	text15
  3189   002254                     __ptext15:
  3190                           	callstack 0
  3191   002254                     ___wmul:
  3192                           	callstack 19
  3193   002254  500D               	movf	___wmul@multiplier^0,w,c
  3194   002256  020F               	mulwf	___wmul@multiplicand^0,c
  3195   002258  CFF3 F011          	movff	prodl,___wmul@product
  3196   00225C  CFF4 F012          	movff	prodh,___wmul@product+1
  3197   002260  500D               	movf	___wmul@multiplier^0,w,c
  3198   002262  0210               	mulwf	(___wmul@multiplicand+1)^0,c
  3199   002264  50F3               	movf	243,w,c
  3200   002266  2612               	addwf	(___wmul@product+1)^0,f,c
  3201   002268  500E               	movf	(___wmul@multiplier+1)^0,w,c
  3202   00226A  020F               	mulwf	___wmul@multiplicand^0,c
  3203   00226C  50F3               	movf	243,w,c
  3204   00226E  2612               	addwf	(___wmul@product+1)^0,f,c
  3205   002270  C011  F00D         	movff	___wmul@product,?___wmul
  3206   002274  C012  F00E         	movff	___wmul@product+1,?___wmul+1
  3207   002278  0012               	return		;funcret
  3208   00227A                     __end_of___wmul:
  3209                           	callstack 0
  3210                           
  3211 ;; *************** function _sendTxBuf *****************
  3212 ;; Defined at:
  3213 ;;		line 97 in file "serial.c"
  3214 ;; Parameters:    Size  Location     Type
  3215 ;;		None
  3216 ;; Auto vars:     Size  Location     Type
  3217 ;;		None
  3218 ;; Return value:  Size  Location     Type
  3219 ;;                  1    wreg      void 
  3220 ;; Registers used:
  3221 ;;		wreg, status,2, status,0, cstack
  3222 ;; Tracked objects:
  3223 ;;		On entry : 0/0
  3224 ;;		On exit  : 0/0
  3225 ;;		Unchanged: 0/0
  3226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3231 ;;Total ram usage:        0 bytes
  3232 ;; Hardware stack levels used: 1
  3233 ;; Hardware stack levels required when called: 8
  3234 ;; This function calls:
  3235 ;;		_isDataInTxBuf
  3236 ;; This function is called by:
  3237 ;;		_main
  3238 ;; This function uses a non-reentrant model
  3239 ;;
  3240                           
  3241                           	psect	text16
  3242   00231E                     __ptext16:
  3243                           	callstack 0
  3244   00231E                     _sendTxBuf:
  3245                           	callstack 22
  3246   00231E                     
  3247                           ;serial.c: 98:     if (isDataInTxBuf()) {PIE4bits.TX4IE=1;}
  3248   00231E  ECB6  F011         	call	_isDataInTxBuf	;wreg free
  3249   002322  0900               	iorlw	0
  3250   002324  B4D8               	btfsc	status,2,c
  3251   002326  EF97  F011         	goto	u1661
  3252   00232A  EF99  F011         	goto	u1660
  3253   00232E                     u1661:
  3254   00232E  EF9B  F011         	goto	l300
  3255   002332                     u1660:
  3256   002332  010E               	movlb	14	; () banked
  3257   002334  852D               	bsf	45,2,b	;volatile
  3258   002336                     l300:
  3259   002336  0012               	return		;funcret
  3260   002338                     __end_of_sendTxBuf:
  3261                           	callstack 0
  3262                           
  3263 ;; *************** function _isDataInTxBuf *****************
  3264 ;; Defined at:
  3265 ;;		line 82 in file "serial.c"
  3266 ;; Parameters:    Size  Location     Type
  3267 ;;		None
  3268 ;; Auto vars:     Size  Location     Type
  3269 ;;		None
  3270 ;; Return value:  Size  Location     Type
  3271 ;;                  1    wreg      unsigned char 
  3272 ;; Registers used:
  3273 ;;		wreg, status,2, status,0
  3274 ;; Tracked objects:
  3275 ;;		On entry : 0/0
  3276 ;;		On exit  : 0/0
  3277 ;;		Unchanged: 0/0
  3278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3283 ;;Total ram usage:        0 bytes
  3284 ;; Hardware stack levels used: 1
  3285 ;; Hardware stack levels required when called: 7
  3286 ;; This function calls:
  3287 ;;		Nothing
  3288 ;; This function is called by:
  3289 ;;		_sendTxBuf
  3290 ;; This function uses a non-reentrant model
  3291 ;;
  3292                           
  3293                           	psect	text17
  3294   00236C                     __ptext17:
  3295                           	callstack 0
  3296   00236C                     _isDataInTxBuf:
  3297                           	callstack 22
  3298   00236C                     
  3299                           ;serial.c: 83:     return (TxBufWriteCnt!=TxBufReadCnt);
  3300   00236C  504A               	movf	_TxBufReadCnt^0,w,c	;volatile
  3301   00236E  184B               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  3302   002370  A4D8               	btfss	status,2,c
  3303   002372  EFBD  F011         	goto	u1521
  3304   002376  EFC0  F011         	goto	u1520
  3305   00237A                     u1521:
  3306   00237A  0E01               	movlw	1
  3307   00237C  EFC1  F011         	goto	u1530
  3308   002380                     u1520:
  3309   002380  0E00               	movlw	0
  3310   002382                     u1530:
  3311   002382  0012               	return		;funcret
  3312   002384                     __end_of_isDataInTxBuf:
  3313                           	callstack 0
  3314                           
  3315 ;; *************** function _isDataInRxBuf *****************
  3316 ;; Defined at:
  3317 ;;		line 62 in file "serial.c"
  3318 ;; Parameters:    Size  Location     Type
  3319 ;;		None
  3320 ;; Auto vars:     Size  Location     Type
  3321 ;;		None
  3322 ;; Return value:  Size  Location     Type
  3323 ;;                  1    wreg      unsigned char 
  3324 ;; Registers used:
  3325 ;;		wreg, status,2, status,0
  3326 ;; Tracked objects:
  3327 ;;		On entry : 0/0
  3328 ;;		On exit  : 0/0
  3329 ;;		Unchanged: 0/0
  3330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3335 ;;Total ram usage:        0 bytes
  3336 ;; Hardware stack levels used: 1
  3337 ;; Hardware stack levels required when called: 7
  3338 ;; This function calls:
  3339 ;;		Nothing
  3340 ;; This function is called by:
  3341 ;;		_main
  3342 ;; This function uses a non-reentrant model
  3343 ;;
  3344                           
  3345                           	psect	text18
  3346   002384                     __ptext18:
  3347                           	callstack 0
  3348   002384                     _isDataInRxBuf:
  3349                           	callstack 23
  3350   002384                     
  3351                           ;serial.c: 63:     return (RxBufWriteCnt!=RxBufReadCnt);
  3352   002384  504C               	movf	_RxBufReadCnt^0,w,c	;volatile
  3353   002386  184D               	xorwf	_RxBufWriteCnt^0,w,c	;volatile
  3354   002388  A4D8               	btfss	status,2,c
  3355   00238A  EFC9  F011         	goto	u1621
  3356   00238E  EFCC  F011         	goto	u1620
  3357   002392                     u1621:
  3358   002392  0E01               	movlw	1
  3359   002394  EFCD  F011         	goto	u1630
  3360   002398                     u1620:
  3361   002398  0E00               	movlw	0
  3362   00239A                     u1630:
  3363   00239A  0012               	return		;funcret
  3364   00239C                     __end_of_isDataInRxBuf:
  3365                           	callstack 0
  3366                           
  3367 ;; *************** function _initUSART4 *****************
  3368 ;; Defined at:
  3369 ;;		line 5 in file "serial.c"
  3370 ;; Parameters:    Size  Location     Type
  3371 ;;		None
  3372 ;; Auto vars:     Size  Location     Type
  3373 ;;		None
  3374 ;; Return value:  Size  Location     Type
  3375 ;;                  1    wreg      void 
  3376 ;; Registers used:
  3377 ;;		wreg, status,2
  3378 ;; Tracked objects:
  3379 ;;		On entry : 0/0
  3380 ;;		On exit  : 0/0
  3381 ;;		Unchanged: 0/0
  3382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3387 ;;Total ram usage:        0 bytes
  3388 ;; Hardware stack levels used: 1
  3389 ;; Hardware stack levels required when called: 7
  3390 ;; This function calls:
  3391 ;;		Nothing
  3392 ;; This function is called by:
  3393 ;;		_main
  3394 ;; This function uses a non-reentrant model
  3395 ;;
  3396                           
  3397                           	psect	text19
  3398   002300                     __ptext19:
  3399                           	callstack 0
  3400   002300                     _initUSART4:
  3401                           	callstack 23
  3402   002300                     
  3403                           ;serial.c: 8:     RC0PPS = 0x12;
  3404   002300  0E12               	movlw	18
  3405   002302  010E               	movlb	14	; () banked
  3406   002304  6F62               	movwf	98,b	;volatile
  3407                           
  3408                           ;serial.c: 9:     RX4PPS = 0x11;
  3409   002306  0E11               	movlw	17
  3410   002308  6F15               	movwf	21,b	;volatile
  3411   00230A                     
  3412                           ; BSR set to: 14
  3413                           ;serial.c: 11:     BAUD4CONbits.BRG16 = 0;
  3414   00230A  97E9               	bcf	233,3,b	;volatile
  3415   00230C                     
  3416                           ; BSR set to: 14
  3417                           ;serial.c: 12:     TX4STAbits.BRGH = 0;
  3418   00230C  95E8               	bcf	232,2,b	;volatile
  3419                           
  3420                           ;serial.c: 13:     SP4BRGL = 51;
  3421   00230E  0E33               	movlw	51
  3422   002310  6FE5               	movwf	229,b	;volatile
  3423                           
  3424                           ;serial.c: 14:     SP4BRGH = 0;
  3425   002312  0E00               	movlw	0
  3426   002314  6FE6               	movwf	230,b	;volatile
  3427   002316                     
  3428                           ; BSR set to: 14
  3429                           ;serial.c: 16:     RC4STAbits.CREN = 1;
  3430   002316  89E7               	bsf	231,4,b	;volatile
  3431   002318                     
  3432                           ; BSR set to: 14
  3433                           ;serial.c: 17:     TX4STAbits.TXEN = 1;
  3434   002318  8BE8               	bsf	232,5,b	;volatile
  3435   00231A                     
  3436                           ; BSR set to: 14
  3437                           ;serial.c: 18:     RC4STAbits.SPEN = 1;
  3438   00231A  8FE7               	bsf	231,7,b	;volatile
  3439   00231C                     
  3440                           ; BSR set to: 14
  3441   00231C  0012               	return		;funcret
  3442   00231E                     __end_of_initUSART4:
  3443                           	callstack 0
  3444                           
  3445 ;; *************** function _getCharFromRxBuf *****************
  3446 ;; Defined at:
  3447 ;;		line 48 in file "serial.c"
  3448 ;; Parameters:    Size  Location     Type
  3449 ;;		None
  3450 ;; Auto vars:     Size  Location     Type
  3451 ;;		None
  3452 ;; Return value:  Size  Location     Type
  3453 ;;                  1    wreg      unsigned char 
  3454 ;; Registers used:
  3455 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3456 ;; Tracked objects:
  3457 ;;		On entry : 0/0
  3458 ;;		On exit  : 0/0
  3459 ;;		Unchanged: 0/0
  3460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3463 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3464 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3465 ;;Total ram usage:        2 bytes
  3466 ;; Hardware stack levels used: 1
  3467 ;; Hardware stack levels required when called: 7
  3468 ;; This function calls:
  3469 ;;		Nothing
  3470 ;; This function is called by:
  3471 ;;		_main
  3472 ;; This function uses a non-reentrant model
  3473 ;;
  3474                           
  3475                           	psect	text20
  3476   00212E                     __ptext20:
  3477                           	callstack 0
  3478   00212E                     _getCharFromRxBuf:
  3479                           	callstack 23
  3480   00212E                     
  3481                           ;serial.c: 49:     if (RxBufReadCnt>=20) {RxBufReadCnt=0;}
  3482   00212E  0E13               	movlw	19
  3483   002130  644C               	cpfsgt	_RxBufReadCnt^0,c	;volatile
  3484   002132  EF9D  F010         	goto	u1601
  3485   002136  EF9F  F010         	goto	u1600
  3486   00213A                     u1601:
  3487   00213A  EFA1  F010         	goto	l2662
  3488   00213E                     u1600:
  3489   00213E  0E00               	movlw	0
  3490   002140  6E4C               	movwf	_RxBufReadCnt^0,c	;volatile
  3491   002142                     l2662:
  3492                           
  3493                           ;serial.c: 50:     return EUSART4RXbuf[RxBufReadCnt++];
  3494   002142  2A4C               	incf	_RxBufReadCnt^0,f,c	;volatile
  3495   002144  044C               	decf	_RxBufReadCnt^0,w,c	;volatile
  3496   002146  6E0D               	movwf	??_getCharFromRxBuf^0,c
  3497   002148  6A0E               	clrf	(??_getCharFromRxBuf+1)^0,c
  3498   00214A  0EC8               	movlw	low _EUSART4RXbuf
  3499   00214C  240D               	addwf	??_getCharFromRxBuf^0,w,c
  3500   00214E  6ED9               	movwf	fsr2l,c
  3501   002150  0E00               	movlw	high _EUSART4RXbuf
  3502   002152  200E               	addwfc	(??_getCharFromRxBuf+1)^0,w,c
  3503   002154  6EDA               	movwf	fsr2h,c
  3504   002156  50DF               	movf	indf2,w,c
  3505   002158  0012               	return		;funcret
  3506   00215A                     __end_of_getCharFromRxBuf:
  3507                           	callstack 0
  3508                           
  3509 ;; *************** function _detect_color *****************
  3510 ;; Defined at:
  3511 ;;		line 99 in file "color.c"
  3512 ;; Parameters:    Size  Location     Type
  3513 ;;  tempval         2   19[COMRAM] PTR struct RGB_val
  3514 ;;		 -> main@initial_color(8), 
  3515 ;; Auto vars:     Size  Location     Type
  3516 ;;  color           1   29[COMRAM] unsigned char 
  3517 ;;  dist_B          1    0        unsigned char 
  3518 ;;  dist_G          1    0        unsigned char 
  3519 ;;  dist_R          1    0        unsigned char 
  3520 ;; Return value:  Size  Location     Type
  3521 ;;                  1    wreg      unsigned char 
  3522 ;; Registers used:
  3523 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3524 ;; Tracked objects:
  3525 ;;		On entry : 0/0
  3526 ;;		On exit  : 0/0
  3527 ;;		Unchanged: 0/0
  3528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3529 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3530 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3531 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3532 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3533 ;;Total ram usage:       11 bytes
  3534 ;; Hardware stack levels used: 1
  3535 ;; Hardware stack levels required when called: 8
  3536 ;; This function calls:
  3537 ;;		___lwdiv
  3538 ;; This function is called by:
  3539 ;;		_main
  3540 ;; This function uses a non-reentrant model
  3541 ;;
  3542                           
  3543                           	psect	text21
  3544   0017D6                     __ptext21:
  3545                           	callstack 0
  3546   0017D6                     _detect_color:
  3547                           	callstack 22
  3548   0017D6                     
  3549                           ;color.c: 99: unsigned char detect_color(RGB_val *tempval);color.c: 100: {;color.c: 101:
      +                               unsigned char color = 0;
  3550   0017D6  0E00               	movlw	0
  3551   0017D8  6E1E               	movwf	detect_color@color^0,c
  3552   0017DA  C014  FFD9         	movff	detect_color@tempval,fsr2l
  3553   0017DE  C015  FFDA         	movff	detect_color@tempval+1,fsr2h
  3554   0017E2  CFDE F00D          	movff	postinc2,___lwdiv@dividend
  3555   0017E6  CFDD F00E          	movff	postdec2,___lwdiv@dividend+1
  3556   0017EA  EE20 F004          	lfsr	2,4
  3557   0017EE  5014               	movf	detect_color@tempval^0,w,c
  3558   0017F0  26D9               	addwf	fsr2l,f,c
  3559   0017F2  5015               	movf	(detect_color@tempval+1)^0,w,c
  3560   0017F4  22DA               	addwfc	fsr2h,f,c
  3561   0017F6  CFDE F016          	movff	postinc2,??_detect_color
  3562   0017FA  CFDD F017          	movff	postdec2,??_detect_color+1
  3563   0017FE  EE20 F002          	lfsr	2,2
  3564   001802  5014               	movf	detect_color@tempval^0,w,c
  3565   001804  26D9               	addwf	fsr2l,f,c
  3566   001806  5015               	movf	(detect_color@tempval+1)^0,w,c
  3567   001808  22DA               	addwfc	fsr2h,f,c
  3568   00180A  CFDE F018          	movff	postinc2,??_detect_color+2
  3569   00180E  CFDD F019          	movff	postdec2,??_detect_color+3
  3570   001812  C014  FFD9         	movff	detect_color@tempval,fsr2l
  3571   001816  C015  FFDA         	movff	detect_color@tempval+1,fsr2h
  3572   00181A  CFDE F01A          	movff	postinc2,??_detect_color+4
  3573   00181E  CFDD F01B          	movff	postdec2,??_detect_color+5
  3574   001822  5018               	movf	(??_detect_color+2)^0,w,c
  3575   001824  241A               	addwf	(??_detect_color+4)^0,w,c
  3576   001826  6E1C               	movwf	(??_detect_color+6)^0,c
  3577   001828  5019               	movf	(??_detect_color+3)^0,w,c
  3578   00182A  201B               	addwfc	(??_detect_color+5)^0,w,c
  3579   00182C  6E1D               	movwf	(??_detect_color+7)^0,c
  3580   00182E  5016               	movf	??_detect_color^0,w,c
  3581   001830  241C               	addwf	(??_detect_color+6)^0,w,c
  3582   001832  6E0F               	movwf	___lwdiv@divisor^0,c
  3583   001834  5017               	movf	(??_detect_color+1)^0,w,c
  3584   001836  201D               	addwfc	(??_detect_color+7)^0,w,c
  3585   001838  6E10               	movwf	(___lwdiv@divisor+1)^0,c
  3586   00183A  ECFC  F00D         	call	___lwdiv	;wreg free
  3587   00183E  EE20 F002          	lfsr	2,2
  3588   001842  5014               	movf	detect_color@tempval^0,w,c
  3589   001844  26D9               	addwf	fsr2l,f,c
  3590   001846  5015               	movf	(detect_color@tempval+1)^0,w,c
  3591   001848  22DA               	addwfc	fsr2h,f,c
  3592   00184A  CFDE F00D          	movff	postinc2,___lwdiv@dividend
  3593   00184E  CFDD F00E          	movff	postdec2,___lwdiv@dividend+1
  3594   001852  EE20 F004          	lfsr	2,4
  3595   001856  5014               	movf	detect_color@tempval^0,w,c
  3596   001858  26D9               	addwf	fsr2l,f,c
  3597   00185A  5015               	movf	(detect_color@tempval+1)^0,w,c
  3598   00185C  22DA               	addwfc	fsr2h,f,c
  3599   00185E  CFDE F016          	movff	postinc2,??_detect_color
  3600   001862  CFDD F017          	movff	postdec2,??_detect_color+1
  3601   001866  EE20 F002          	lfsr	2,2
  3602   00186A  5014               	movf	detect_color@tempval^0,w,c
  3603   00186C  26D9               	addwf	fsr2l,f,c
  3604   00186E  5015               	movf	(detect_color@tempval+1)^0,w,c
  3605   001870  22DA               	addwfc	fsr2h,f,c
  3606   001872  CFDE F018          	movff	postinc2,??_detect_color+2
  3607   001876  CFDD F019          	movff	postdec2,??_detect_color+3
  3608   00187A  C014  FFD9         	movff	detect_color@tempval,fsr2l
  3609   00187E  C015  FFDA         	movff	detect_color@tempval+1,fsr2h
  3610   001882  CFDE F01A          	movff	postinc2,??_detect_color+4
  3611   001886  CFDD F01B          	movff	postdec2,??_detect_color+5
  3612   00188A  5018               	movf	(??_detect_color+2)^0,w,c
  3613   00188C  241A               	addwf	(??_detect_color+4)^0,w,c
  3614   00188E  6E1C               	movwf	(??_detect_color+6)^0,c
  3615   001890  5019               	movf	(??_detect_color+3)^0,w,c
  3616   001892  201B               	addwfc	(??_detect_color+5)^0,w,c
  3617   001894  6E1D               	movwf	(??_detect_color+7)^0,c
  3618   001896  5016               	movf	??_detect_color^0,w,c
  3619   001898  241C               	addwf	(??_detect_color+6)^0,w,c
  3620   00189A  6E0F               	movwf	___lwdiv@divisor^0,c
  3621   00189C  5017               	movf	(??_detect_color+1)^0,w,c
  3622   00189E  201D               	addwfc	(??_detect_color+7)^0,w,c
  3623   0018A0  6E10               	movwf	(___lwdiv@divisor+1)^0,c
  3624   0018A2  ECFC  F00D         	call	___lwdiv	;wreg free
  3625   0018A6  EE20 F004          	lfsr	2,4
  3626   0018AA  5014               	movf	detect_color@tempval^0,w,c
  3627   0018AC  26D9               	addwf	fsr2l,f,c
  3628   0018AE  5015               	movf	(detect_color@tempval+1)^0,w,c
  3629   0018B0  22DA               	addwfc	fsr2h,f,c
  3630   0018B2  CFDE F00D          	movff	postinc2,___lwdiv@dividend
  3631   0018B6  CFDD F00E          	movff	postdec2,___lwdiv@dividend+1
  3632   0018BA  EE20 F004          	lfsr	2,4
  3633   0018BE  5014               	movf	detect_color@tempval^0,w,c
  3634   0018C0  26D9               	addwf	fsr2l,f,c
  3635   0018C2  5015               	movf	(detect_color@tempval+1)^0,w,c
  3636   0018C4  22DA               	addwfc	fsr2h,f,c
  3637   0018C6  CFDE F016          	movff	postinc2,??_detect_color
  3638   0018CA  CFDD F017          	movff	postdec2,??_detect_color+1
  3639   0018CE  EE20 F002          	lfsr	2,2
  3640   0018D2  5014               	movf	detect_color@tempval^0,w,c
  3641   0018D4  26D9               	addwf	fsr2l,f,c
  3642   0018D6  5015               	movf	(detect_color@tempval+1)^0,w,c
  3643   0018D8  22DA               	addwfc	fsr2h,f,c
  3644   0018DA  CFDE F018          	movff	postinc2,??_detect_color+2
  3645   0018DE  CFDD F019          	movff	postdec2,??_detect_color+3
  3646   0018E2  C014  FFD9         	movff	detect_color@tempval,fsr2l
  3647   0018E6  C015  FFDA         	movff	detect_color@tempval+1,fsr2h
  3648   0018EA  CFDE F01A          	movff	postinc2,??_detect_color+4
  3649   0018EE  CFDD F01B          	movff	postdec2,??_detect_color+5
  3650   0018F2  5018               	movf	(??_detect_color+2)^0,w,c
  3651   0018F4  241A               	addwf	(??_detect_color+4)^0,w,c
  3652   0018F6  6E1C               	movwf	(??_detect_color+6)^0,c
  3653   0018F8  5019               	movf	(??_detect_color+3)^0,w,c
  3654   0018FA  201B               	addwfc	(??_detect_color+5)^0,w,c
  3655   0018FC  6E1D               	movwf	(??_detect_color+7)^0,c
  3656   0018FE  5016               	movf	??_detect_color^0,w,c
  3657   001900  241C               	addwf	(??_detect_color+6)^0,w,c
  3658   001902  6E0F               	movwf	___lwdiv@divisor^0,c
  3659   001904  5017               	movf	(??_detect_color+1)^0,w,c
  3660   001906  201D               	addwfc	(??_detect_color+7)^0,w,c
  3661   001908  6E10               	movwf	(___lwdiv@divisor+1)^0,c
  3662   00190A  ECFC  F00D         	call	___lwdiv	;wreg free
  3663   00190E                     
  3664                           ;color.c: 110:         if(72<=dist_R<=78 && 8<=dist_G<=14 && 11<=dist_B<=17){
  3665   00190E  044E               	decf	_color_flag^0,w,c
  3666   001910  A4D8               	btfss	status,2,c
  3667   001912  EF8D  F00C         	goto	u1581
  3668   001916  EF8F  F00C         	goto	u1580
  3669   00191A                     u1581:
  3670   00191A  EF93  F00C         	goto	l42
  3671   00191E                     u1580:
  3672   00191E                     
  3673                           ;color.c: 111:             color = 1;
  3674   00191E  0E01               	movlw	1
  3675   001920  6E1E               	movwf	detect_color@color^0,c
  3676   001922                     
  3677                           ;color.c: 134:         color_flag = 0;
  3678   001922  0E00               	movlw	0
  3679   001924  6E4E               	movwf	_color_flag^0,c
  3680   001926                     l42:
  3681                           
  3682                           ;color.c: 136:     return color;
  3683   001926  501E               	movf	detect_color@color^0,w,c
  3684   001928  0012               	return		;funcret
  3685   00192A                     __end_of_detect_color:
  3686                           	callstack 0
  3687                           
  3688 ;; *************** function ___lwdiv *****************
  3689 ;; Defined at:
  3690 ;;		line 7 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\lwdiv.c"
  3691 ;; Parameters:    Size  Location     Type
  3692 ;;  dividend        2   12[COMRAM] unsigned int 
  3693 ;;  divisor         2   14[COMRAM] unsigned int 
  3694 ;; Auto vars:     Size  Location     Type
  3695 ;;  quotient        2   16[COMRAM] unsigned int 
  3696 ;;  counter         1   18[COMRAM] unsigned char 
  3697 ;; Return value:  Size  Location     Type
  3698 ;;                  2   12[COMRAM] unsigned int 
  3699 ;; Registers used:
  3700 ;;		wreg, status,2, status,0
  3701 ;; Tracked objects:
  3702 ;;		On entry : 0/0
  3703 ;;		On exit  : 0/0
  3704 ;;		Unchanged: 0/0
  3705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3706 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3707 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3709 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3710 ;;Total ram usage:        7 bytes
  3711 ;; Hardware stack levels used: 1
  3712 ;; Hardware stack levels required when called: 7
  3713 ;; This function calls:
  3714 ;;		Nothing
  3715 ;; This function is called by:
  3716 ;;		_detect_color
  3717 ;;		_setMotorPWM
  3718 ;; This function uses a non-reentrant model
  3719 ;;
  3720                           
  3721                           	psect	text22
  3722   001BF8                     __ptext22:
  3723                           	callstack 0
  3724   001BF8                     ___lwdiv:
  3725                           	callstack 22
  3726   001BF8  0E00               	movlw	0
  3727   001BFA  6E12               	movwf	(___lwdiv@quotient+1)^0,c
  3728   001BFC  0E00               	movlw	0
  3729   001BFE  6E11               	movwf	___lwdiv@quotient^0,c
  3730   001C00  500F               	movf	___lwdiv@divisor^0,w,c
  3731   001C02  1010               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3732   001C04  B4D8               	btfsc	status,2,c
  3733   001C06  EF07  F00E         	goto	u1541
  3734   001C0A  EF09  F00E         	goto	u1540
  3735   001C0E                     u1541:
  3736   001C0E  EF31  F00E         	goto	l948
  3737   001C12                     u1540:
  3738   001C12  0E01               	movlw	1
  3739   001C14  6E13               	movwf	___lwdiv@counter^0,c
  3740   001C16  EF11  F00E         	goto	l2550
  3741   001C1A                     l2548:
  3742   001C1A  90D8               	bcf	status,0,c
  3743   001C1C  360F               	rlcf	___lwdiv@divisor^0,f,c
  3744   001C1E  3610               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3745   001C20  2A13               	incf	___lwdiv@counter^0,f,c
  3746   001C22                     l2550:
  3747   001C22  AE10               	btfss	(___lwdiv@divisor+1)^0,7,c
  3748   001C24  EF16  F00E         	goto	u1551
  3749   001C28  EF18  F00E         	goto	u1550
  3750   001C2C                     u1551:
  3751   001C2C  EF0D  F00E         	goto	l2548
  3752   001C30                     u1550:
  3753   001C30                     l2552:
  3754   001C30  90D8               	bcf	status,0,c
  3755   001C32  3611               	rlcf	___lwdiv@quotient^0,f,c
  3756   001C34  3612               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3757   001C36  500F               	movf	___lwdiv@divisor^0,w,c
  3758   001C38  5C0D               	subwf	___lwdiv@dividend^0,w,c
  3759   001C3A  5010               	movf	(___lwdiv@divisor+1)^0,w,c
  3760   001C3C  580E               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3761   001C3E  A0D8               	btfss	status,0,c
  3762   001C40  EF24  F00E         	goto	u1561
  3763   001C44  EF26  F00E         	goto	u1560
  3764   001C48                     u1561:
  3765   001C48  EF2B  F00E         	goto	l2560
  3766   001C4C                     u1560:
  3767   001C4C  500F               	movf	___lwdiv@divisor^0,w,c
  3768   001C4E  5E0D               	subwf	___lwdiv@dividend^0,f,c
  3769   001C50  5010               	movf	(___lwdiv@divisor+1)^0,w,c
  3770   001C52  5A0E               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3771   001C54  8011               	bsf	___lwdiv@quotient^0,0,c
  3772   001C56                     l2560:
  3773   001C56  90D8               	bcf	status,0,c
  3774   001C58  3210               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3775   001C5A  320F               	rrcf	___lwdiv@divisor^0,f,c
  3776   001C5C  2E13               	decfsz	___lwdiv@counter^0,f,c
  3777   001C5E  EF18  F00E         	goto	l2552
  3778   001C62                     l948:
  3779   001C62  C011  F00D         	movff	___lwdiv@quotient,?___lwdiv
  3780   001C66  C012  F00E         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3781   001C6A  0012               	return		;funcret
  3782   001C6C                     __end_of___lwdiv:
  3783                           	callstack 0
  3784                           
  3785 ;; *************** function _color_click_init *****************
  3786 ;; Defined at:
  3787 ;;		line 6 in file "color.c"
  3788 ;; Parameters:    Size  Location     Type
  3789 ;;		None
  3790 ;; Auto vars:     Size  Location     Type
  3791 ;;		None
  3792 ;; Return value:  Size  Location     Type
  3793 ;;                  1    wreg      void 
  3794 ;; Registers used:
  3795 ;;		wreg, status,2, status,0, cstack
  3796 ;; Tracked objects:
  3797 ;;		On entry : 0/0
  3798 ;;		On exit  : 0/0
  3799 ;;		Unchanged: 0/0
  3800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3803 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3804 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3805 ;;Total ram usage:        1 bytes
  3806 ;; Hardware stack levels used: 1
  3807 ;; Hardware stack levels required when called: 10
  3808 ;; This function calls:
  3809 ;;		_I2C_2_Master_Init
  3810 ;;		_color_writetoaddr
  3811 ;; This function is called by:
  3812 ;;		_main
  3813 ;; This function uses a non-reentrant model
  3814 ;;
  3815                           
  3816                           	psect	text23
  3817   00209E                     __ptext23:
  3818                           	callstack 0
  3819   00209E                     _color_click_init:
  3820                           	callstack 20
  3821   00209E                     
  3822                           ;color.c: 9:     I2C_2_Master_Init();
  3823   00209E  ECC3  F010         	call	_I2C_2_Master_Init	;wreg free
  3824   0020A2                     
  3825                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  3826   0020A2  0E01               	movlw	1
  3827   0020A4  6E0F               	movwf	color_writetoaddr@value^0,c
  3828   0020A6  0E00               	movlw	0
  3829   0020A8  EC60  F011         	call	_color_writetoaddr
  3830   0020AC                     
  3831                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3832   0020AC  0E3F               	movlw	63
  3833   0020AE  6E11               	movwf	??_color_click_init^0,c
  3834   0020B0  0E55               	movlw	85
  3835   0020B2                     u2307:
  3836   0020B2  2EE8               	decfsz	wreg,f,c
  3837   0020B4  D7FE               	bra	u2307
  3838   0020B6  2E11               	decfsz	??_color_click_init^0,f,c
  3839   0020B8  D7FC               	bra	u2307
  3840   0020BA  F000               	nop	
  3841   0020BC                     
  3842                           ;color.c: 16:  color_writetoaddr(0x00, 0x03);
  3843   0020BC  0E03               	movlw	3
  3844   0020BE  6E0F               	movwf	color_writetoaddr@value^0,c
  3845   0020C0  0E00               	movlw	0
  3846   0020C2  EC60  F011         	call	_color_writetoaddr
  3847   0020C6                     
  3848                           ;color.c: 19:  color_writetoaddr(0x01, 0xD5);
  3849   0020C6  0ED5               	movlw	213
  3850   0020C8  6E0F               	movwf	color_writetoaddr@value^0,c
  3851   0020CA  0E01               	movlw	1
  3852   0020CC  EC60  F011         	call	_color_writetoaddr
  3853   0020D0  0012               	return		;funcret
  3854   0020D2                     __end_of_color_click_init:
  3855                           	callstack 0
  3856                           
  3857 ;; *************** function _I2C_2_Master_Init *****************
  3858 ;; Defined at:
  3859 ;;		line 4 in file "i2c.c"
  3860 ;; Parameters:    Size  Location     Type
  3861 ;;		None
  3862 ;; Auto vars:     Size  Location     Type
  3863 ;;		None
  3864 ;; Return value:  Size  Location     Type
  3865 ;;                  1    wreg      void 
  3866 ;; Registers used:
  3867 ;;		wreg, status,2
  3868 ;; Tracked objects:
  3869 ;;		On entry : 0/0
  3870 ;;		On exit  : 0/0
  3871 ;;		Unchanged: 0/0
  3872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3877 ;;Total ram usage:        0 bytes
  3878 ;; Hardware stack levels used: 1
  3879 ;; Hardware stack levels required when called: 7
  3880 ;; This function calls:
  3881 ;;		Nothing
  3882 ;; This function is called by:
  3883 ;;		_color_click_init
  3884 ;; This function uses a non-reentrant model
  3885 ;;
  3886                           
  3887                           	psect	text24
  3888   002186                     __ptext24:
  3889                           	callstack 0
  3890   002186                     _I2C_2_Master_Init:
  3891                           	callstack 22
  3892   002186                     
  3893                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3894   002186  010E               	movlb	14	; () banked
  3895   002188  51D9               	movf	217,w,b	;volatile
  3896   00218A  0BF0               	andlw	-16
  3897   00218C  0908               	iorlw	8
  3898   00218E  6FD9               	movwf	217,b	;volatile
  3899   002190                     
  3900                           ; BSR set to: 14
  3901                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3902   002190  8BD9               	bsf	217,5,b	;volatile
  3903                           
  3904                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3905   002192  0E9F               	movlw	159
  3906   002194  6FD6               	movwf	214,b	;volatile
  3907   002196                     
  3908                           ; BSR set to: 14
  3909                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3910   002196  8A84               	bsf	132,5,c	;volatile
  3911   002198                     
  3912                           ; BSR set to: 14
  3913                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3914   002198  8C84               	bsf	132,6,c	;volatile
  3915   00219A                     
  3916                           ; BSR set to: 14
  3917                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3918   00219A  9BA7               	bcf	167,5,b	;volatile
  3919   00219C                     
  3920                           ; BSR set to: 14
  3921                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3922   00219C  9DA7               	bcf	167,6,b	;volatile
  3923                           
  3924                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3925   00219E  0E1D               	movlw	29
  3926   0021A0  6F1D               	movwf	29,b	;volatile
  3927                           
  3928                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3929   0021A2  0E1E               	movlw	30
  3930   0021A4  6F1C               	movwf	28,b	;volatile
  3931                           
  3932                           ;i2c.c: 18:   RD5PPS=0x1C;
  3933   0021A6  0E1C               	movlw	28
  3934   0021A8  6F6F               	movwf	111,b	;volatile
  3935                           
  3936                           ;i2c.c: 19:   RD6PPS=0x1B;
  3937   0021AA  0E1B               	movlw	27
  3938   0021AC  6F70               	movwf	112,b	;volatile
  3939   0021AE                     
  3940                           ; BSR set to: 14
  3941   0021AE  0012               	return		;funcret
  3942   0021B0                     __end_of_I2C_2_Master_Init:
  3943                           	callstack 0
  3944                           
  3945 ;; *************** function _WhiteLight *****************
  3946 ;; Defined at:
  3947 ;;		line 17 in file "LED_Buttons.c"
  3948 ;; Parameters:    Size  Location     Type
  3949 ;;		None
  3950 ;; Auto vars:     Size  Location     Type
  3951 ;;		None
  3952 ;; Return value:  Size  Location     Type
  3953 ;;                  1    wreg      void 
  3954 ;; Registers used:
  3955 ;;		None
  3956 ;; Tracked objects:
  3957 ;;		On entry : 0/0
  3958 ;;		On exit  : 0/0
  3959 ;;		Unchanged: 0/0
  3960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3965 ;;Total ram usage:        0 bytes
  3966 ;; Hardware stack levels used: 1
  3967 ;; Hardware stack levels required when called: 7
  3968 ;; This function calls:
  3969 ;;		Nothing
  3970 ;; This function is called by:
  3971 ;;		_main
  3972 ;; This function uses a non-reentrant model
  3973 ;;
  3974                           
  3975                           	psect	text25
  3976   00240A                     __ptext25:
  3977                           	callstack 0
  3978   00240A                     _WhiteLight:
  3979                           	callstack 23
  3980   00240A                     
  3981                           ;LED_Buttons.c: 18:     LATGbits.LATG1 = 1;
  3982   00240A  827F               	bsf	127,1,c	;volatile
  3983                           
  3984                           ;LED_Buttons.c: 19:     LATAbits.LATA4 = 1;
  3985   00240C  8879               	bsf	121,4,c	;volatile
  3986                           
  3987                           ;LED_Buttons.c: 20:     LATFbits.LATF7 = 1;
  3988   00240E  8E7E               	bsf	126,7,c	;volatile
  3989   002410  0012               	return		;funcret
  3990   002412                     __end_of_WhiteLight:
  3991                           	callstack 0
  3992                           
  3993 ;; *************** function _Update_RGBC *****************
  3994 ;; Defined at:
  3995 ;;		line 90 in file "color.c"
  3996 ;; Parameters:    Size  Location     Type
  3997 ;;  tempval         2   23[COMRAM] PTR struct RGB_val
  3998 ;;		 -> main@initial_color(8), 
  3999 ;; Auto vars:     Size  Location     Type
  4000 ;;		None
  4001 ;; Return value:  Size  Location     Type
  4002 ;;                  1    wreg      void 
  4003 ;; Registers used:
  4004 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4005 ;; Tracked objects:
  4006 ;;		On entry : 0/0
  4007 ;;		On exit  : 0/0
  4008 ;;		Unchanged: 0/0
  4009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4010 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4013 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4014 ;;Total ram usage:        2 bytes
  4015 ;; Hardware stack levels used: 1
  4016 ;; Hardware stack levels required when called: 10
  4017 ;; This function calls:
  4018 ;;		_color_read_Blue
  4019 ;;		_color_read_Clear
  4020 ;;		_color_read_Green
  4021 ;;		_color_read_Red
  4022 ;; This function is called by:
  4023 ;;		_main
  4024 ;; This function uses a non-reentrant model
  4025 ;;
  4026                           
  4027                           	psect	text26
  4028   001C6C                     __ptext26:
  4029                           	callstack 0
  4030   001C6C                     _Update_RGBC:
  4031                           	callstack 20
  4032   001C6C                     
  4033                           ;color.c: 92:     tempval->R = color_read_Red();
  4034   001C6C  ECB8  F00E         	call	_color_read_Red	;wreg free
  4035   001C70  C018  FFD9         	movff	Update_RGBC@tempval,fsr2l
  4036   001C74  C019  FFDA         	movff	Update_RGBC@tempval+1,fsr2h
  4037   001C78  C011  FFDE         	movff	?_color_read_Red,postinc2
  4038   001C7C  C012  FFDD         	movff	?_color_read_Red+1,postdec2
  4039                           
  4040                           ;color.c: 93:     tempval->G = color_read_Green();
  4041   001C80  ECE0  F00E         	call	_color_read_Green	;wreg free
  4042   001C84  EE20 F002          	lfsr	2,2
  4043   001C88  5018               	movf	Update_RGBC@tempval^0,w,c
  4044   001C8A  26D9               	addwf	fsr2l,f,c
  4045   001C8C  5019               	movf	(Update_RGBC@tempval+1)^0,w,c
  4046   001C8E  22DA               	addwfc	fsr2h,f,c
  4047   001C90  C011  FFDE         	movff	?_color_read_Green,postinc2
  4048   001C94  C012  FFDD         	movff	?_color_read_Green+1,postdec2
  4049                           
  4050                           ;color.c: 94:     tempval->B = color_read_Blue();
  4051   001C98  EC30  F00F         	call	_color_read_Blue	;wreg free
  4052   001C9C  EE20 F004          	lfsr	2,4
  4053   001CA0  5018               	movf	Update_RGBC@tempval^0,w,c
  4054   001CA2  26D9               	addwf	fsr2l,f,c
  4055   001CA4  5019               	movf	(Update_RGBC@tempval+1)^0,w,c
  4056   001CA6  22DA               	addwfc	fsr2h,f,c
  4057   001CA8  C011  FFDE         	movff	?_color_read_Blue,postinc2
  4058   001CAC  C012  FFDD         	movff	?_color_read_Blue+1,postdec2
  4059                           
  4060                           ;color.c: 95:     tempval->C = color_read_Clear();
  4061   001CB0  EC08  F00F         	call	_color_read_Clear	;wreg free
  4062   001CB4  EE20 F006          	lfsr	2,6
  4063   001CB8  5018               	movf	Update_RGBC@tempval^0,w,c
  4064   001CBA  26D9               	addwf	fsr2l,f,c
  4065   001CBC  5019               	movf	(Update_RGBC@tempval+1)^0,w,c
  4066   001CBE  22DA               	addwfc	fsr2h,f,c
  4067   001CC0  C011  FFDE         	movff	?_color_read_Clear,postinc2
  4068   001CC4  C012  FFDD         	movff	?_color_read_Clear+1,postdec2
  4069   001CC8  0012               	return		;funcret
  4070   001CCA                     __end_of_Update_RGBC:
  4071                           	callstack 0
  4072                           
  4073 ;; *************** function _color_read_Red *****************
  4074 ;; Defined at:
  4075 ;;		line 32 in file "color.c"
  4076 ;; Parameters:    Size  Location     Type
  4077 ;;		None
  4078 ;; Auto vars:     Size  Location     Type
  4079 ;;  tmp             2   21[COMRAM] unsigned int 
  4080 ;; Return value:  Size  Location     Type
  4081 ;;                  2   16[COMRAM] unsigned int 
  4082 ;; Registers used:
  4083 ;;		wreg, status,2, status,0, cstack
  4084 ;; Tracked objects:
  4085 ;;		On entry : 0/0
  4086 ;;		On exit  : 0/0
  4087 ;;		Unchanged: 0/0
  4088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4089 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4090 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4091 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4092 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4093 ;;Total ram usage:        7 bytes
  4094 ;; Hardware stack levels used: 1
  4095 ;; Hardware stack levels required when called: 9
  4096 ;; This function calls:
  4097 ;;		_I2C_2_Master_Read
  4098 ;;		_I2C_2_Master_RepStart
  4099 ;;		_I2C_2_Master_Start
  4100 ;;		_I2C_2_Master_Stop
  4101 ;;		_I2C_2_Master_Write
  4102 ;; This function is called by:
  4103 ;;		_Update_RGBC
  4104 ;; This function uses a non-reentrant model
  4105 ;;
  4106                           
  4107                           	psect	text27
  4108   001D70                     __ptext27:
  4109                           	callstack 0
  4110   001D70                     _color_read_Red:
  4111                           	callstack 20
  4112   001D70                     
  4113                           ;color.c: 34:  unsigned int tmp;;color.c: 35:  I2C_2_Master_Start();
  4114   001D70  ECF6  F011         	call	_I2C_2_Master_Start	;wreg free
  4115                           
  4116                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x00);
  4117   001D74  0E52               	movlw	82
  4118   001D76  ECE0  F011         	call	_I2C_2_Master_Write
  4119                           
  4120                           ;color.c: 37:  I2C_2_Master_Write(0xA0 | 0x16);
  4121   001D7A  0EB6               	movlw	182
  4122   001D7C  ECE0  F011         	call	_I2C_2_Master_Write
  4123                           
  4124                           ;color.c: 38:  I2C_2_Master_RepStart();
  4125   001D80  ECEC  F011         	call	_I2C_2_Master_RepStart	;wreg free
  4126                           
  4127                           ;color.c: 39:  I2C_2_Master_Write(0x52 | 0x01);
  4128   001D84  0E53               	movlw	83
  4129   001D86  ECE0  F011         	call	_I2C_2_Master_Write
  4130                           
  4131                           ;color.c: 40:  tmp=I2C_2_Master_Read(1);
  4132   001D8A  0E01               	movlw	1
  4133   001D8C  EC0E  F010         	call	_I2C_2_Master_Read
  4134   001D90  6E13               	movwf	??_color_read_Red^0,c
  4135   001D92  5013               	movf	??_color_read_Red^0,w,c
  4136   001D94  6E16               	movwf	color_read_Red@tmp^0,c
  4137   001D96  6A17               	clrf	(color_read_Red@tmp+1)^0,c
  4138                           
  4139                           ;color.c: 41:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4140   001D98  0E00               	movlw	0
  4141   001D9A  EC0E  F010         	call	_I2C_2_Master_Read
  4142   001D9E  6E13               	movwf	??_color_read_Red^0,c
  4143   001DA0  5013               	movf	??_color_read_Red^0,w,c
  4144   001DA2  6E15               	movwf	(??_color_read_Red+2)^0,c
  4145   001DA4  6A14               	clrf	(??_color_read_Red+1)^0,c
  4146   001DA6  5016               	movf	color_read_Red@tmp^0,w,c
  4147   001DA8  1014               	iorwf	(??_color_read_Red+1)^0,w,c
  4148   001DAA  6E16               	movwf	color_read_Red@tmp^0,c
  4149   001DAC  5017               	movf	(color_read_Red@tmp+1)^0,w,c
  4150   001DAE  1015               	iorwf	(??_color_read_Red+2)^0,w,c
  4151   001DB0  6E17               	movwf	(color_read_Red@tmp+1)^0,c
  4152                           
  4153                           ;color.c: 42:  I2C_2_Master_Stop();
  4154   001DB2  ECF1  F011         	call	_I2C_2_Master_Stop	;wreg free
  4155   001DB6                     
  4156                           ;color.c: 43:  return tmp;
  4157   001DB6  C016  F011         	movff	color_read_Red@tmp,?_color_read_Red
  4158   001DBA  C017  F012         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  4159   001DBE  0012               	return		;funcret
  4160   001DC0                     __end_of_color_read_Red:
  4161                           	callstack 0
  4162                           
  4163 ;; *************** function _color_read_Green *****************
  4164 ;; Defined at:
  4165 ;;		line 46 in file "color.c"
  4166 ;; Parameters:    Size  Location     Type
  4167 ;;		None
  4168 ;; Auto vars:     Size  Location     Type
  4169 ;;  tmp             2   21[COMRAM] unsigned int 
  4170 ;; Return value:  Size  Location     Type
  4171 ;;                  2   16[COMRAM] unsigned int 
  4172 ;; Registers used:
  4173 ;;		wreg, status,2, status,0, cstack
  4174 ;; Tracked objects:
  4175 ;;		On entry : 0/0
  4176 ;;		On exit  : 0/0
  4177 ;;		Unchanged: 0/0
  4178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4179 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4180 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4181 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4182 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4183 ;;Total ram usage:        7 bytes
  4184 ;; Hardware stack levels used: 1
  4185 ;; Hardware stack levels required when called: 9
  4186 ;; This function calls:
  4187 ;;		_I2C_2_Master_Read
  4188 ;;		_I2C_2_Master_RepStart
  4189 ;;		_I2C_2_Master_Start
  4190 ;;		_I2C_2_Master_Stop
  4191 ;;		_I2C_2_Master_Write
  4192 ;; This function is called by:
  4193 ;;		_Update_RGBC
  4194 ;; This function uses a non-reentrant model
  4195 ;;
  4196                           
  4197                           	psect	text28
  4198   001DC0                     __ptext28:
  4199                           	callstack 0
  4200   001DC0                     _color_read_Green:
  4201                           	callstack 20
  4202   001DC0                     
  4203                           ;color.c: 48:  unsigned int tmp;;color.c: 49:  I2C_2_Master_Start();
  4204   001DC0  ECF6  F011         	call	_I2C_2_Master_Start	;wreg free
  4205                           
  4206                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x00);
  4207   001DC4  0E52               	movlw	82
  4208   001DC6  ECE0  F011         	call	_I2C_2_Master_Write
  4209                           
  4210                           ;color.c: 51:  I2C_2_Master_Write(0xA0 | 0x18);
  4211   001DCA  0EB8               	movlw	184
  4212   001DCC  ECE0  F011         	call	_I2C_2_Master_Write
  4213                           
  4214                           ;color.c: 52:  I2C_2_Master_RepStart();
  4215   001DD0  ECEC  F011         	call	_I2C_2_Master_RepStart	;wreg free
  4216                           
  4217                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x01);
  4218   001DD4  0E53               	movlw	83
  4219   001DD6  ECE0  F011         	call	_I2C_2_Master_Write
  4220                           
  4221                           ;color.c: 54:  tmp=I2C_2_Master_Read(1);
  4222   001DDA  0E01               	movlw	1
  4223   001DDC  EC0E  F010         	call	_I2C_2_Master_Read
  4224   001DE0  6E13               	movwf	??_color_read_Green^0,c
  4225   001DE2  5013               	movf	??_color_read_Green^0,w,c
  4226   001DE4  6E16               	movwf	color_read_Green@tmp^0,c
  4227   001DE6  6A17               	clrf	(color_read_Green@tmp+1)^0,c
  4228                           
  4229                           ;color.c: 55:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4230   001DE8  0E00               	movlw	0
  4231   001DEA  EC0E  F010         	call	_I2C_2_Master_Read
  4232   001DEE  6E13               	movwf	??_color_read_Green^0,c
  4233   001DF0  5013               	movf	??_color_read_Green^0,w,c
  4234   001DF2  6E15               	movwf	(??_color_read_Green+2)^0,c
  4235   001DF4  6A14               	clrf	(??_color_read_Green+1)^0,c
  4236   001DF6  5016               	movf	color_read_Green@tmp^0,w,c
  4237   001DF8  1014               	iorwf	(??_color_read_Green+1)^0,w,c
  4238   001DFA  6E16               	movwf	color_read_Green@tmp^0,c
  4239   001DFC  5017               	movf	(color_read_Green@tmp+1)^0,w,c
  4240   001DFE  1015               	iorwf	(??_color_read_Green+2)^0,w,c
  4241   001E00  6E17               	movwf	(color_read_Green@tmp+1)^0,c
  4242                           
  4243                           ;color.c: 56:  I2C_2_Master_Stop();
  4244   001E02  ECF1  F011         	call	_I2C_2_Master_Stop	;wreg free
  4245   001E06                     
  4246                           ;color.c: 57:  return tmp;
  4247   001E06  C016  F011         	movff	color_read_Green@tmp,?_color_read_Green
  4248   001E0A  C017  F012         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  4249   001E0E  0012               	return		;funcret
  4250   001E10                     __end_of_color_read_Green:
  4251                           	callstack 0
  4252                           
  4253 ;; *************** function _color_read_Clear *****************
  4254 ;; Defined at:
  4255 ;;		line 74 in file "color.c"
  4256 ;; Parameters:    Size  Location     Type
  4257 ;;		None
  4258 ;; Auto vars:     Size  Location     Type
  4259 ;;  tmp             2   21[COMRAM] unsigned int 
  4260 ;; Return value:  Size  Location     Type
  4261 ;;                  2   16[COMRAM] unsigned int 
  4262 ;; Registers used:
  4263 ;;		wreg, status,2, status,0, cstack
  4264 ;; Tracked objects:
  4265 ;;		On entry : 0/0
  4266 ;;		On exit  : 0/0
  4267 ;;		Unchanged: 0/0
  4268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4269 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4270 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4271 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4272 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4273 ;;Total ram usage:        7 bytes
  4274 ;; Hardware stack levels used: 1
  4275 ;; Hardware stack levels required when called: 9
  4276 ;; This function calls:
  4277 ;;		_I2C_2_Master_Read
  4278 ;;		_I2C_2_Master_RepStart
  4279 ;;		_I2C_2_Master_Start
  4280 ;;		_I2C_2_Master_Stop
  4281 ;;		_I2C_2_Master_Write
  4282 ;; This function is called by:
  4283 ;;		_Update_RGBC
  4284 ;; This function uses a non-reentrant model
  4285 ;;
  4286                           
  4287                           	psect	text29
  4288   001E10                     __ptext29:
  4289                           	callstack 0
  4290   001E10                     _color_read_Clear:
  4291                           	callstack 20
  4292   001E10                     
  4293                           ;color.c: 76:  unsigned int tmp;;color.c: 77:  I2C_2_Master_Start();
  4294   001E10  ECF6  F011         	call	_I2C_2_Master_Start	;wreg free
  4295                           
  4296                           ;color.c: 78:  I2C_2_Master_Write(0x52 | 0x00);
  4297   001E14  0E52               	movlw	82
  4298   001E16  ECE0  F011         	call	_I2C_2_Master_Write
  4299                           
  4300                           ;color.c: 79:  I2C_2_Master_Write(0xA0 | 0x14);
  4301   001E1A  0EB4               	movlw	180
  4302   001E1C  ECE0  F011         	call	_I2C_2_Master_Write
  4303                           
  4304                           ;color.c: 80:  I2C_2_Master_RepStart();
  4305   001E20  ECEC  F011         	call	_I2C_2_Master_RepStart	;wreg free
  4306                           
  4307                           ;color.c: 81:  I2C_2_Master_Write(0x52 | 0x01);
  4308   001E24  0E53               	movlw	83
  4309   001E26  ECE0  F011         	call	_I2C_2_Master_Write
  4310                           
  4311                           ;color.c: 82:  tmp=I2C_2_Master_Read(1);
  4312   001E2A  0E01               	movlw	1
  4313   001E2C  EC0E  F010         	call	_I2C_2_Master_Read
  4314   001E30  6E13               	movwf	??_color_read_Clear^0,c
  4315   001E32  5013               	movf	??_color_read_Clear^0,w,c
  4316   001E34  6E16               	movwf	color_read_Clear@tmp^0,c
  4317   001E36  6A17               	clrf	(color_read_Clear@tmp+1)^0,c
  4318                           
  4319                           ;color.c: 83:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4320   001E38  0E00               	movlw	0
  4321   001E3A  EC0E  F010         	call	_I2C_2_Master_Read
  4322   001E3E  6E13               	movwf	??_color_read_Clear^0,c
  4323   001E40  5013               	movf	??_color_read_Clear^0,w,c
  4324   001E42  6E15               	movwf	(??_color_read_Clear+2)^0,c
  4325   001E44  6A14               	clrf	(??_color_read_Clear+1)^0,c
  4326   001E46  5016               	movf	color_read_Clear@tmp^0,w,c
  4327   001E48  1014               	iorwf	(??_color_read_Clear+1)^0,w,c
  4328   001E4A  6E16               	movwf	color_read_Clear@tmp^0,c
  4329   001E4C  5017               	movf	(color_read_Clear@tmp+1)^0,w,c
  4330   001E4E  1015               	iorwf	(??_color_read_Clear+2)^0,w,c
  4331   001E50  6E17               	movwf	(color_read_Clear@tmp+1)^0,c
  4332                           
  4333                           ;color.c: 84:  I2C_2_Master_Stop();
  4334   001E52  ECF1  F011         	call	_I2C_2_Master_Stop	;wreg free
  4335   001E56                     
  4336                           ;color.c: 85:  return tmp;
  4337   001E56  C016  F011         	movff	color_read_Clear@tmp,?_color_read_Clear
  4338   001E5A  C017  F012         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  4339   001E5E  0012               	return		;funcret
  4340   001E60                     __end_of_color_read_Clear:
  4341                           	callstack 0
  4342                           
  4343 ;; *************** function _color_read_Blue *****************
  4344 ;; Defined at:
  4345 ;;		line 60 in file "color.c"
  4346 ;; Parameters:    Size  Location     Type
  4347 ;;		None
  4348 ;; Auto vars:     Size  Location     Type
  4349 ;;  tmp             2   21[COMRAM] unsigned int 
  4350 ;; Return value:  Size  Location     Type
  4351 ;;                  2   16[COMRAM] unsigned int 
  4352 ;; Registers used:
  4353 ;;		wreg, status,2, status,0, cstack
  4354 ;; Tracked objects:
  4355 ;;		On entry : 0/0
  4356 ;;		On exit  : 0/0
  4357 ;;		Unchanged: 0/0
  4358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4359 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4360 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4361 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4362 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4363 ;;Total ram usage:        7 bytes
  4364 ;; Hardware stack levels used: 1
  4365 ;; Hardware stack levels required when called: 9
  4366 ;; This function calls:
  4367 ;;		_I2C_2_Master_Read
  4368 ;;		_I2C_2_Master_RepStart
  4369 ;;		_I2C_2_Master_Start
  4370 ;;		_I2C_2_Master_Stop
  4371 ;;		_I2C_2_Master_Write
  4372 ;; This function is called by:
  4373 ;;		_Update_RGBC
  4374 ;; This function uses a non-reentrant model
  4375 ;;
  4376                           
  4377                           	psect	text30
  4378   001E60                     __ptext30:
  4379                           	callstack 0
  4380   001E60                     _color_read_Blue:
  4381                           	callstack 20
  4382   001E60                     
  4383                           ;color.c: 62:  unsigned int tmp;;color.c: 63:  I2C_2_Master_Start();
  4384   001E60  ECF6  F011         	call	_I2C_2_Master_Start	;wreg free
  4385                           
  4386                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x00);
  4387   001E64  0E52               	movlw	82
  4388   001E66  ECE0  F011         	call	_I2C_2_Master_Write
  4389                           
  4390                           ;color.c: 65:  I2C_2_Master_Write(0xA0 | 0x1A);
  4391   001E6A  0EBA               	movlw	186
  4392   001E6C  ECE0  F011         	call	_I2C_2_Master_Write
  4393                           
  4394                           ;color.c: 66:  I2C_2_Master_RepStart();
  4395   001E70  ECEC  F011         	call	_I2C_2_Master_RepStart	;wreg free
  4396                           
  4397                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x01);
  4398   001E74  0E53               	movlw	83
  4399   001E76  ECE0  F011         	call	_I2C_2_Master_Write
  4400                           
  4401                           ;color.c: 68:  tmp=I2C_2_Master_Read(1);
  4402   001E7A  0E01               	movlw	1
  4403   001E7C  EC0E  F010         	call	_I2C_2_Master_Read
  4404   001E80  6E13               	movwf	??_color_read_Blue^0,c
  4405   001E82  5013               	movf	??_color_read_Blue^0,w,c
  4406   001E84  6E16               	movwf	color_read_Blue@tmp^0,c
  4407   001E86  6A17               	clrf	(color_read_Blue@tmp+1)^0,c
  4408                           
  4409                           ;color.c: 69:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4410   001E88  0E00               	movlw	0
  4411   001E8A  EC0E  F010         	call	_I2C_2_Master_Read
  4412   001E8E  6E13               	movwf	??_color_read_Blue^0,c
  4413   001E90  5013               	movf	??_color_read_Blue^0,w,c
  4414   001E92  6E15               	movwf	(??_color_read_Blue+2)^0,c
  4415   001E94  6A14               	clrf	(??_color_read_Blue+1)^0,c
  4416   001E96  5016               	movf	color_read_Blue@tmp^0,w,c
  4417   001E98  1014               	iorwf	(??_color_read_Blue+1)^0,w,c
  4418   001E9A  6E16               	movwf	color_read_Blue@tmp^0,c
  4419   001E9C  5017               	movf	(color_read_Blue@tmp+1)^0,w,c
  4420   001E9E  1015               	iorwf	(??_color_read_Blue+2)^0,w,c
  4421   001EA0  6E17               	movwf	(color_read_Blue@tmp+1)^0,c
  4422                           
  4423                           ;color.c: 70:  I2C_2_Master_Stop();
  4424   001EA2  ECF1  F011         	call	_I2C_2_Master_Stop	;wreg free
  4425   001EA6                     
  4426                           ;color.c: 71:  return tmp;
  4427   001EA6  C016  F011         	movff	color_read_Blue@tmp,?_color_read_Blue
  4428   001EAA  C017  F012         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  4429   001EAE  0012               	return		;funcret
  4430   001EB0                     __end_of_color_read_Blue:
  4431                           	callstack 0
  4432                           
  4433 ;; *************** function _I2C_2_Master_RepStart *****************
  4434 ;; Defined at:
  4435 ;;		line 33 in file "i2c.c"
  4436 ;; Parameters:    Size  Location     Type
  4437 ;;		None
  4438 ;; Auto vars:     Size  Location     Type
  4439 ;;		None
  4440 ;; Return value:  Size  Location     Type
  4441 ;;                  1    wreg      void 
  4442 ;; Registers used:
  4443 ;;		wreg, status,2, status,0, cstack
  4444 ;; Tracked objects:
  4445 ;;		On entry : 0/0
  4446 ;;		On exit  : 0/0
  4447 ;;		Unchanged: 0/0
  4448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4453 ;;Total ram usage:        0 bytes
  4454 ;; Hardware stack levels used: 1
  4455 ;; Hardware stack levels required when called: 8
  4456 ;; This function calls:
  4457 ;;		_I2C_2_Master_Idle
  4458 ;; This function is called by:
  4459 ;;		_color_read_Red
  4460 ;;		_color_read_Green
  4461 ;;		_color_read_Blue
  4462 ;;		_color_read_Clear
  4463 ;; This function uses a non-reentrant model
  4464 ;;
  4465                           
  4466                           	psect	text31
  4467   0023D8                     __ptext31:
  4468                           	callstack 0
  4469   0023D8                     _I2C_2_Master_RepStart:
  4470                           	callstack 20
  4471   0023D8                     
  4472                           ;i2c.c: 35:   I2C_2_Master_Idle();
  4473   0023D8  EC02  F011         	call	_I2C_2_Master_Idle	;wreg free
  4474   0023DC                     
  4475                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  4476   0023DC  010E               	movlb	14	; () banked
  4477   0023DE  83DA               	bsf	218,1,b	;volatile
  4478   0023E0                     
  4479                           ; BSR set to: 14
  4480   0023E0  0012               	return		;funcret
  4481   0023E2                     __end_of_I2C_2_Master_RepStart:
  4482                           	callstack 0
  4483                           
  4484 ;; *************** function _I2C_2_Master_Read *****************
  4485 ;; Defined at:
  4486 ;;		line 51 in file "i2c.c"
  4487 ;; Parameters:    Size  Location     Type
  4488 ;;  ack             1    wreg     unsigned char 
  4489 ;; Auto vars:     Size  Location     Type
  4490 ;;  ack             1   14[COMRAM] unsigned char 
  4491 ;;  tmp             1   15[COMRAM] unsigned char 
  4492 ;; Return value:  Size  Location     Type
  4493 ;;                  1    wreg      unsigned char 
  4494 ;; Registers used:
  4495 ;;		wreg, status,2, status,0, cstack
  4496 ;; Tracked objects:
  4497 ;;		On entry : 0/0
  4498 ;;		On exit  : 0/0
  4499 ;;		Unchanged: 0/0
  4500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4502 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4503 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4504 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4505 ;;Total ram usage:        3 bytes
  4506 ;; Hardware stack levels used: 1
  4507 ;; Hardware stack levels required when called: 8
  4508 ;; This function calls:
  4509 ;;		_I2C_2_Master_Idle
  4510 ;; This function is called by:
  4511 ;;		_color_read_Red
  4512 ;;		_color_read_Green
  4513 ;;		_color_read_Blue
  4514 ;;		_color_read_Clear
  4515 ;; This function uses a non-reentrant model
  4516 ;;
  4517                           
  4518                           	psect	text32
  4519   00201C                     __ptext32:
  4520                           	callstack 0
  4521   00201C                     _I2C_2_Master_Read:
  4522                           	callstack 20
  4523                           
  4524                           ; BSR set to: 14
  4525                           ;incstack = 0
  4526                           ;I2C_2_Master_Read@ack stored from wreg
  4527   00201C  6E0F               	movwf	I2C_2_Master_Read@ack^0,c
  4528   00201E                     
  4529                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  4530   00201E  EC02  F011         	call	_I2C_2_Master_Idle	;wreg free
  4531   002022                     
  4532                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  4533   002022  010E               	movlb	14	; () banked
  4534   002024  87DA               	bsf	218,3,b	;volatile
  4535                           
  4536                           ;i2c.c: 56:   I2C_2_Master_Idle();
  4537   002026  EC02  F011         	call	_I2C_2_Master_Idle	;wreg free
  4538   00202A                     
  4539                           ;i2c.c: 57:   tmp = SSP2BUF;
  4540   00202A  CED5 F010          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  4541                           
  4542                           ;i2c.c: 58:   I2C_2_Master_Idle();
  4543   00202E  EC02  F011         	call	_I2C_2_Master_Idle	;wreg free
  4544   002032                     
  4545                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  4546   002032  500F               	movf	I2C_2_Master_Read@ack^0,w,c
  4547   002034  B4D8               	btfsc	status,2,c
  4548   002036  EF1F  F010         	goto	u1421
  4549   00203A  EF23  F010         	goto	u1420
  4550   00203E                     u1421:
  4551   00203E  6A0E               	clrf	??_I2C_2_Master_Read^0,c
  4552   002040  2A0E               	incf	??_I2C_2_Master_Read^0,f,c
  4553   002042  EF24  F010         	goto	u1438
  4554   002046                     u1420:
  4555   002046  6A0E               	clrf	??_I2C_2_Master_Read^0,c
  4556   002048                     u1438:
  4557   002048  3A0E               	swapf	??_I2C_2_Master_Read^0,f,c
  4558   00204A  460E               	rlncf	??_I2C_2_Master_Read^0,f,c
  4559   00204C  010E               	movlb	14	; () banked
  4560   00204E  51DA               	movf	218,w,b	;volatile
  4561   002050  180E               	xorwf	??_I2C_2_Master_Read^0,w,c
  4562   002052  0BDF               	andlw	-33
  4563   002054  180E               	xorwf	??_I2C_2_Master_Read^0,w,c
  4564   002056  6FDA               	movwf	218,b	;volatile
  4565   002058                     
  4566                           ; BSR set to: 14
  4567                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  4568   002058  89DA               	bsf	218,4,b	;volatile
  4569   00205A                     
  4570                           ; BSR set to: 14
  4571                           ;i2c.c: 61:   return tmp;
  4572   00205A  5010               	movf	I2C_2_Master_Read@tmp^0,w,c
  4573   00205C                     
  4574                           ; BSR set to: 14
  4575   00205C  0012               	return		;funcret
  4576   00205E                     __end_of_I2C_2_Master_Read:
  4577                           	callstack 0
  4578                           
  4579 ;; *************** function _TxBufferedString *****************
  4580 ;; Defined at:
  4581 ;;		line 87 in file "serial.c"
  4582 ;; Parameters:    Size  Location     Type
  4583 ;;  string          2   13[COMRAM] PTR unsigned char 
  4584 ;;		 -> main@string2(40), 
  4585 ;; Auto vars:     Size  Location     Type
  4586 ;;		None
  4587 ;; Return value:  Size  Location     Type
  4588 ;;                  1    wreg      void 
  4589 ;; Registers used:
  4590 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4591 ;; Tracked objects:
  4592 ;;		On entry : 0/0
  4593 ;;		On exit  : 0/0
  4594 ;;		Unchanged: 0/0
  4595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4596 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4599 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4600 ;;Total ram usage:        2 bytes
  4601 ;; Hardware stack levels used: 1
  4602 ;; Hardware stack levels required when called: 8
  4603 ;; This function calls:
  4604 ;;		_putCharToTxBuf
  4605 ;; This function is called by:
  4606 ;;		_main
  4607 ;; This function uses a non-reentrant model
  4608 ;;
  4609                           
  4610                           	psect	text33
  4611   0020D2                     __ptext33:
  4612                           	callstack 0
  4613   0020D2                     _TxBufferedString:
  4614                           	callstack 22
  4615   0020D2                     
  4616                           ;serial.c: 90:     while(*string != 0){
  4617   0020D2  EF74  F010         	goto	l2692
  4618   0020D6                     l2688:
  4619                           
  4620                           ;serial.c: 91:   putCharToTxBuf(*string++);
  4621   0020D6  C00E  FFD9         	movff	TxBufferedString@string,fsr2l
  4622   0020DA  C00F  FFDA         	movff	TxBufferedString@string+1,fsr2h
  4623   0020DE  50DF               	movf	indf2,w,c
  4624   0020E0  ECD8  F010         	call	_putCharToTxBuf
  4625   0020E4  4A0E               	infsnz	TxBufferedString@string^0,f,c
  4626   0020E6  2A0F               	incf	(TxBufferedString@string+1)^0,f,c
  4627   0020E8                     l2692:
  4628                           
  4629                           ;serial.c: 90:     while(*string != 0){
  4630   0020E8  C00E  FFD9         	movff	TxBufferedString@string,fsr2l
  4631   0020EC  C00F  FFDA         	movff	TxBufferedString@string+1,fsr2h
  4632   0020F0  50DF               	movf	indf2,w,c
  4633   0020F2  A4D8               	btfss	status,2,c
  4634   0020F4  EF7E  F010         	goto	u1651
  4635   0020F8  EF80  F010         	goto	u1650
  4636   0020FC                     u1651:
  4637   0020FC  EF6B  F010         	goto	l2688
  4638   002100                     u1650:
  4639   002100  0012               	return		;funcret
  4640   002102                     __end_of_TxBufferedString:
  4641                           	callstack 0
  4642                           
  4643 ;; *************** function _putCharToTxBuf *****************
  4644 ;; Defined at:
  4645 ;;		line 74 in file "serial.c"
  4646 ;; Parameters:    Size  Location     Type
  4647 ;;  byte            1    wreg     unsigned char 
  4648 ;; Auto vars:     Size  Location     Type
  4649 ;;  byte            1   12[COMRAM] unsigned char 
  4650 ;; Return value:  Size  Location     Type
  4651 ;;                  1    wreg      void 
  4652 ;; Registers used:
  4653 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4654 ;; Tracked objects:
  4655 ;;		On entry : 0/0
  4656 ;;		On exit  : 0/0
  4657 ;;		Unchanged: 0/0
  4658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4660 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4662 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4663 ;;Total ram usage:        1 bytes
  4664 ;; Hardware stack levels used: 1
  4665 ;; Hardware stack levels required when called: 7
  4666 ;; This function calls:
  4667 ;;		Nothing
  4668 ;; This function is called by:
  4669 ;;		_TxBufferedString
  4670 ;; This function uses a non-reentrant model
  4671 ;;
  4672                           
  4673                           	psect	text34
  4674   0021B0                     __ptext34:
  4675                           	callstack 0
  4676   0021B0                     _putCharToTxBuf:
  4677                           	callstack 22
  4678                           
  4679                           ;incstack = 0
  4680                           ;putCharToTxBuf@byte stored from wreg
  4681   0021B0  6E0D               	movwf	putCharToTxBuf@byte^0,c
  4682   0021B2                     
  4683                           ;serial.c: 75:     if (TxBufWriteCnt>=60) {TxBufWriteCnt=0;}
  4684   0021B2  0E3B               	movlw	59
  4685   0021B4  644B               	cpfsgt	_TxBufWriteCnt^0,c	;volatile
  4686   0021B6  EFDF  F010         	goto	u1511
  4687   0021BA  EFE1  F010         	goto	u1510
  4688   0021BE                     u1511:
  4689   0021BE  EFE3  F010         	goto	l2532
  4690   0021C2                     u1510:
  4691   0021C2  0E00               	movlw	0
  4692   0021C4  6E4B               	movwf	_TxBufWriteCnt^0,c	;volatile
  4693   0021C6                     l2532:
  4694                           
  4695                           ;serial.c: 76:     EUSART4TXbuf[TxBufWriteCnt++]=byte;
  4696   0021C6  0E00               	movlw	low _EUSART4TXbuf
  4697   0021C8  244B               	addwf	_TxBufWriteCnt^0,w,c	;volatile
  4698   0021CA  6ED9               	movwf	fsr2l,c
  4699   0021CC  6ADA               	clrf	fsr2h,c
  4700   0021CE  0E01               	movlw	high _EUSART4TXbuf
  4701   0021D0  22DA               	addwfc	fsr2h,f,c
  4702   0021D2  C00D  FFDF         	movff	putCharToTxBuf@byte,indf2
  4703   0021D6  2A4B               	incf	_TxBufWriteCnt^0,f,c	;volatile
  4704   0021D8  0012               	return		;funcret
  4705   0021DA                     __end_of_putCharToTxBuf:
  4706                           	callstack 0
  4707                           
  4708 ;; *************** function _Timer0_init *****************
  4709 ;; Defined at:
  4710 ;;		line 7 in file "timers.c"
  4711 ;; Parameters:    Size  Location     Type
  4712 ;;		None
  4713 ;; Auto vars:     Size  Location     Type
  4714 ;;		None
  4715 ;; Return value:  Size  Location     Type
  4716 ;;                  1    wreg      void 
  4717 ;; Registers used:
  4718 ;;		wreg, status,2
  4719 ;; Tracked objects:
  4720 ;;		On entry : 0/0
  4721 ;;		On exit  : 0/0
  4722 ;;		Unchanged: 0/0
  4723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4728 ;;Total ram usage:        0 bytes
  4729 ;; Hardware stack levels used: 1
  4730 ;; Hardware stack levels required when called: 7
  4731 ;; This function calls:
  4732 ;;		Nothing
  4733 ;; This function is called by:
  4734 ;;		_main
  4735 ;; This function uses a non-reentrant model
  4736 ;;
  4737                           
  4738                           	psect	text35
  4739   0022A0                     __ptext35:
  4740                           	callstack 0
  4741   0022A0                     _Timer0_init:
  4742                           	callstack 23
  4743   0022A0                     
  4744                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  4745   0022A0  50D6               	movf	214,w,c	;volatile
  4746   0022A2  0B1F               	andlw	-225
  4747   0022A4  0940               	iorlw	64
  4748   0022A6  6ED6               	movwf	214,c	;volatile
  4749   0022A8                     
  4750                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  4751   0022A8  88D6               	bsf	214,4,c	;volatile
  4752                           
  4753                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
  4754   0022AA  50D6               	movf	214,w,c	;volatile
  4755   0022AC  0BF0               	andlw	-16
  4756   0022AE  0908               	iorlw	8
  4757   0022B0  6ED6               	movwf	214,c	;volatile
  4758   0022B2                     
  4759                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
  4760   0022B2  88D5               	bsf	213,4,c	;volatile
  4761                           
  4762                           ;timers.c: 15:     TMR0H = 0b11000010;
  4763   0022B4  0EC2               	movlw	194
  4764   0022B6  6ED4               	movwf	212,c	;volatile
  4765                           
  4766                           ;timers.c: 16:     TMR0L = 0b11110110;
  4767   0022B8  0EF6               	movlw	246
  4768   0022BA  6ED3               	movwf	211,c	;volatile
  4769   0022BC                     
  4770                           ;timers.c: 17:     T0CON0bits.T0EN=1;
  4771   0022BC  8ED5               	bsf	213,7,c	;volatile
  4772   0022BE  0012               	return		;funcret
  4773   0022C0                     __end_of_Timer0_init:
  4774                           	callstack 0
  4775                           
  4776 ;; *************** function _LED_init *****************
  4777 ;; Defined at:
  4778 ;;		line 7 in file "LED_Buttons.c"
  4779 ;; Parameters:    Size  Location     Type
  4780 ;;		None
  4781 ;; Auto vars:     Size  Location     Type
  4782 ;;		None
  4783 ;; Return value:  Size  Location     Type
  4784 ;;                  1    wreg      void 
  4785 ;; Registers used:
  4786 ;;		None
  4787 ;; Tracked objects:
  4788 ;;		On entry : 0/0
  4789 ;;		On exit  : 0/0
  4790 ;;		Unchanged: 0/0
  4791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4796 ;;Total ram usage:        0 bytes
  4797 ;; Hardware stack levels used: 1
  4798 ;; Hardware stack levels required when called: 7
  4799 ;; This function calls:
  4800 ;;		Nothing
  4801 ;; This function is called by:
  4802 ;;		_main
  4803 ;; This function uses a non-reentrant model
  4804 ;;
  4805                           
  4806                           	psect	text36
  4807   0023B4                     __ptext36:
  4808                           	callstack 0
  4809   0023B4                     _LED_init:
  4810                           	callstack 23
  4811   0023B4                     
  4812                           ;LED_Buttons.c: 8:     TRISGbits.TRISG1 = 0;
  4813   0023B4  9287               	bcf	135,1,c	;volatile
  4814                           
  4815                           ;LED_Buttons.c: 9:     TRISAbits.TRISA4 = 0;
  4816   0023B6  9881               	bcf	129,4,c	;volatile
  4817                           
  4818                           ;LED_Buttons.c: 10:     TRISFbits.TRISF7 = 0;
  4819   0023B8  9E86               	bcf	134,7,c	;volatile
  4820                           
  4821                           ;LED_Buttons.c: 12:     LATHbits.LATH3 = 1;
  4822   0023BA  8680               	bsf	128,3,c	;volatile
  4823                           
  4824                           ;LED_Buttons.c: 13:     TRISHbits.TRISH3 = 0;
  4825   0023BC  9688               	bcf	136,3,c	;volatile
  4826   0023BE  0012               	return		;funcret
  4827   0023C0                     __end_of_LED_init:
  4828                           	callstack 0
  4829                           
  4830 ;; *************** function _Interrupts_init *****************
  4831 ;; Defined at:
  4832 ;;		line 12 in file "interrupts.c"
  4833 ;; Parameters:    Size  Location     Type
  4834 ;;		None
  4835 ;; Auto vars:     Size  Location     Type
  4836 ;;		None
  4837 ;; Return value:  Size  Location     Type
  4838 ;;                  1    wreg      void 
  4839 ;; Registers used:
  4840 ;;		wreg, status,2, status,0, cstack
  4841 ;; Tracked objects:
  4842 ;;		On entry : 0/0
  4843 ;;		On exit  : 0/0
  4844 ;;		Unchanged: 0/0
  4845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4850 ;;Total ram usage:        0 bytes
  4851 ;; Hardware stack levels used: 1
  4852 ;; Hardware stack levels required when called: 12
  4853 ;; This function calls:
  4854 ;;		_interrupts_clear_colorclick
  4855 ;; This function is called by:
  4856 ;;		_main
  4857 ;; This function uses a non-reentrant model
  4858 ;;
  4859                           
  4860                           	psect	text37
  4861   00227A                     __ptext37:
  4862                           	callstack 0
  4863   00227A                     _Interrupts_init:
  4864                           	callstack 18
  4865   00227A                     
  4866                           ;interrupts.c: 18:     TRISBbits.TRISB1 = 1;
  4867   00227A  8282               	bsf	130,1,c	;volatile
  4868                           
  4869                           ;interrupts.c: 19:     ANSELBbits.ANSELB1 = 0;
  4870   00227C  010E               	movlb	14	; () banked
  4871   00227E  939A               	bcf	154,1,b	;volatile
  4872   002280                     
  4873                           ; BSR set to: 14
  4874                           ;interrupts.c: 20:     INT1PPS = 0x09;
  4875   002280  0E09               	movlw	9
  4876   002282  010D               	movlb	13	; () banked
  4877   002284  6FF1               	movwf	241,b	;volatile
  4878   002286                     
  4879                           ; BSR set to: 13
  4880                           ;interrupts.c: 21:     PIE0bits.INT1IE = 1;
  4881   002286  010E               	movlb	14	; () banked
  4882   002288  8329               	bsf	41,1,b	;volatile
  4883   00228A                     
  4884                           ; BSR set to: 14
  4885                           ;interrupts.c: 22:     IPR0bits.INT1IP = 1;
  4886   00228A  831F               	bsf	31,1,b	;volatile
  4887   00228C                     
  4888                           ; BSR set to: 14
  4889                           ;interrupts.c: 23:     INTCONbits.INT1EDG = 0;
  4890   00228C  92F2               	bcf	242,1,c	;volatile
  4891   00228E                     
  4892                           ; BSR set to: 14
  4893                           ;interrupts.c: 26:     PIE0bits.TMR0IE=1;
  4894   00228E  8B29               	bsf	41,5,b	;volatile
  4895   002290                     
  4896                           ; BSR set to: 14
  4897                           ;interrupts.c: 27:     IPR0bits.TMR0IP = 0;
  4898   002290  9B1F               	bcf	31,5,b	;volatile
  4899   002292                     
  4900                           ; BSR set to: 14
  4901                           ;interrupts.c: 30:     PIE4bits.RC4IE=1;
  4902   002292  872D               	bsf	45,3,b	;volatile
  4903   002294                     
  4904                           ; BSR set to: 14
  4905                           ;interrupts.c: 32:     interrupts_clear_colorclick();
  4906   002294  EC9C  F011         	call	_interrupts_clear_colorclick	;wreg free
  4907   002298                     
  4908                           ;interrupts.c: 34:     INTCONbits.IPEN = 1;
  4909   002298  8AF2               	bsf	242,5,c	;volatile
  4910   00229A                     
  4911                           ;interrupts.c: 35:     INTCONbits.PEIE = 1;
  4912   00229A  8CF2               	bsf	242,6,c	;volatile
  4913   00229C                     
  4914                           ;interrupts.c: 36:     INTCONbits.GIE=1;
  4915   00229C  8EF2               	bsf	242,7,c	;volatile
  4916   00229E  0012               	return		;funcret
  4917   0022A0                     __end_of_Interrupts_init:
  4918                           	callstack 0
  4919                           
  4920 ;; *************** function _interrupts_clear_colorclick *****************
  4921 ;; Defined at:
  4922 ;;		line 57 in file "interrupts.c"
  4923 ;; Parameters:    Size  Location     Type
  4924 ;;		None
  4925 ;; Auto vars:     Size  Location     Type
  4926 ;;		None
  4927 ;; Return value:  Size  Location     Type
  4928 ;;                  1    wreg      void 
  4929 ;; Registers used:
  4930 ;;		wreg, status,2, status,0, cstack
  4931 ;; Tracked objects:
  4932 ;;		On entry : 0/0
  4933 ;;		On exit  : 0/0
  4934 ;;		Unchanged: 0/0
  4935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4940 ;;Total ram usage:        0 bytes
  4941 ;; Hardware stack levels used: 1
  4942 ;; Hardware stack levels required when called: 11
  4943 ;; This function calls:
  4944 ;;		_I2C_2_Master_Start
  4945 ;;		_I2C_2_Master_Stop
  4946 ;;		_I2C_2_Master_Write
  4947 ;;		_init_colorclick_interrupts
  4948 ;; This function is called by:
  4949 ;;		_Interrupts_init
  4950 ;; This function uses a non-reentrant model
  4951 ;;
  4952                           
  4953                           	psect	text38
  4954   002338                     __ptext38:
  4955                           	callstack 0
  4956   002338                     _interrupts_clear_colorclick:
  4957                           	callstack 18
  4958   002338                     
  4959                           ;interrupts.c: 59:     I2C_2_Master_Start();
  4960   002338  ECF6  F011         	call	_I2C_2_Master_Start	;wreg free
  4961                           
  4962                           ;interrupts.c: 60:     I2C_2_Master_Write(0x52 | 0x00);
  4963   00233C  0E52               	movlw	82
  4964   00233E  ECE0  F011         	call	_I2C_2_Master_Write
  4965                           
  4966                           ;interrupts.c: 61:     I2C_2_Master_Write(0b11100110);
  4967   002342  0EE6               	movlw	230
  4968   002344  ECE0  F011         	call	_I2C_2_Master_Write
  4969                           
  4970                           ;interrupts.c: 62:     I2C_2_Master_Stop();
  4971   002348  ECF1  F011         	call	_I2C_2_Master_Stop	;wreg free
  4972                           
  4973                           ;interrupts.c: 64:     init_colorclick_interrupts();
  4974   00234C  EC58  F00F         	call	_init_colorclick_interrupts	;wreg free
  4975   002350  0012               	return		;funcret
  4976   002352                     __end_of_interrupts_clear_colorclick:
  4977                           	callstack 0
  4978                           
  4979 ;; *************** function _init_colorclick_interrupts *****************
  4980 ;; Defined at:
  4981 ;;		line 43 in file "interrupts.c"
  4982 ;; Parameters:    Size  Location     Type
  4983 ;;		None
  4984 ;; Auto vars:     Size  Location     Type
  4985 ;;		None
  4986 ;; Return value:  Size  Location     Type
  4987 ;;                  1    wreg      void 
  4988 ;; Registers used:
  4989 ;;		wreg, status,2, status,0, cstack
  4990 ;; Tracked objects:
  4991 ;;		On entry : 0/0
  4992 ;;		On exit  : 0/0
  4993 ;;		Unchanged: 0/0
  4994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4997 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4998 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4999 ;;Total ram usage:        1 bytes
  5000 ;; Hardware stack levels used: 1
  5001 ;; Hardware stack levels required when called: 10
  5002 ;; This function calls:
  5003 ;;		_color_writetoaddr
  5004 ;; This function is called by:
  5005 ;;		_interrupts_clear_colorclick
  5006 ;; This function uses a non-reentrant model
  5007 ;;
  5008                           
  5009                           	psect	text39
  5010   001EB0                     __ptext39:
  5011                           	callstack 0
  5012   001EB0                     _init_colorclick_interrupts:
  5013                           	callstack 18
  5014   001EB0                     
  5015                           ;interrupts.c: 45:     color_writetoaddr(0x00,0b10011);
  5016   001EB0  0E13               	movlw	19
  5017   001EB2  6E0F               	movwf	color_writetoaddr@value^0,c
  5018   001EB4  0E00               	movlw	0
  5019   001EB6  EC60  F011         	call	_color_writetoaddr
  5020   001EBA                     
  5021                           ;interrupts.c: 46:     _delay((unsigned long)((3)*(64000000/4000.0)));
  5022   001EBA  0E3F               	movlw	63
  5023   001EBC  6E11               	movwf	??_init_colorclick_interrupts^0,c
  5024   001EBE  0E55               	movlw	85
  5025   001EC0                     u2317:
  5026   001EC0  2EE8               	decfsz	wreg,f,c
  5027   001EC2  D7FE               	bra	u2317
  5028   001EC4  2E11               	decfsz	??_init_colorclick_interrupts^0,f,c
  5029   001EC6  D7FC               	bra	u2317
  5030   001EC8  F000               	nop	
  5031   001ECA                     
  5032                           ;interrupts.c: 48:     color_writetoaddr(0x0C,0b0100);
  5033   001ECA  0E04               	movlw	4
  5034   001ECC  6E0F               	movwf	color_writetoaddr@value^0,c
  5035   001ECE  0E0C               	movlw	12
  5036   001ED0  EC60  F011         	call	_color_writetoaddr
  5037   001ED4                     
  5038                           ;interrupts.c: 49:     color_writetoaddr(0x04,(int_threshold_low & 0xFF));
  5039   001ED4  C047  F00F         	movff	_int_threshold_low,color_writetoaddr@value
  5040   001ED8  0E04               	movlw	4
  5041   001EDA  EC60  F011         	call	_color_writetoaddr
  5042   001EDE                     
  5043                           ;interrupts.c: 50:     color_writetoaddr(0x05,(int_threshold_low >> 8));
  5044   001EDE  5048               	movf	(_int_threshold_low+1)^0,w,c
  5045   001EE0  6E0F               	movwf	color_writetoaddr@value^0,c
  5046   001EE2  0E05               	movlw	5
  5047   001EE4  EC60  F011         	call	_color_writetoaddr
  5048   001EE8                     
  5049                           ;interrupts.c: 51:     color_writetoaddr(0x06,(int_threshold_high & 0xFF));
  5050   001EE8  C04F  F00F         	movff	_int_threshold_high,color_writetoaddr@value
  5051   001EEC  0E06               	movlw	6
  5052   001EEE  EC60  F011         	call	_color_writetoaddr
  5053   001EF2                     
  5054                           ;interrupts.c: 52:     color_writetoaddr(0x07,(int_threshold_high >> 8));
  5055   001EF2  5050               	movf	(_int_threshold_high+1)^0,w,c
  5056   001EF4  6E0F               	movwf	color_writetoaddr@value^0,c
  5057   001EF6  0E07               	movlw	7
  5058   001EF8  EC60  F011         	call	_color_writetoaddr
  5059   001EFC  0012               	return		;funcret
  5060   001EFE                     __end_of_init_colorclick_interrupts:
  5061                           	callstack 0
  5062                           
  5063 ;; *************** function _color_writetoaddr *****************
  5064 ;; Defined at:
  5065 ;;		line 22 in file "color.c"
  5066 ;; Parameters:    Size  Location     Type
  5067 ;;  address         1    wreg     unsigned char 
  5068 ;;  value           1   14[COMRAM] unsigned char 
  5069 ;; Auto vars:     Size  Location     Type
  5070 ;;  address         1   15[COMRAM] unsigned char 
  5071 ;; Return value:  Size  Location     Type
  5072 ;;                  1    wreg      void 
  5073 ;; Registers used:
  5074 ;;		wreg, status,2, status,0, cstack
  5075 ;; Tracked objects:
  5076 ;;		On entry : 0/0
  5077 ;;		On exit  : 0/0
  5078 ;;		Unchanged: 0/0
  5079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5080 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5081 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5083 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5084 ;;Total ram usage:        2 bytes
  5085 ;; Hardware stack levels used: 1
  5086 ;; Hardware stack levels required when called: 9
  5087 ;; This function calls:
  5088 ;;		_I2C_2_Master_Start
  5089 ;;		_I2C_2_Master_Stop
  5090 ;;		_I2C_2_Master_Write
  5091 ;; This function is called by:
  5092 ;;		_color_click_init
  5093 ;;		_init_colorclick_interrupts
  5094 ;; This function uses a non-reentrant model
  5095 ;;
  5096                           
  5097                           	psect	text40
  5098   0022C0                     __ptext40:
  5099                           	callstack 0
  5100   0022C0                     _color_writetoaddr:
  5101                           	callstack 20
  5102                           
  5103                           ;incstack = 0
  5104                           ;color_writetoaddr@address stored from wreg
  5105   0022C0  6E10               	movwf	color_writetoaddr@address^0,c
  5106   0022C2                     
  5107                           ;color.c: 23:     I2C_2_Master_Start();
  5108   0022C2  ECF6  F011         	call	_I2C_2_Master_Start	;wreg free
  5109                           
  5110                           ;color.c: 24:     I2C_2_Master_Write(0x52 | 0x00);
  5111   0022C6  0E52               	movlw	82
  5112   0022C8  ECE0  F011         	call	_I2C_2_Master_Write
  5113                           
  5114                           ;color.c: 25:     I2C_2_Master_Write(0x80 | address);
  5115   0022CC  5010               	movf	color_writetoaddr@address^0,w,c
  5116   0022CE  0980               	iorlw	128
  5117   0022D0  ECE0  F011         	call	_I2C_2_Master_Write
  5118                           
  5119                           ;color.c: 26:     I2C_2_Master_Write(value);
  5120   0022D4  500F               	movf	color_writetoaddr@value^0,w,c
  5121   0022D6  ECE0  F011         	call	_I2C_2_Master_Write
  5122                           
  5123                           ;color.c: 27:     I2C_2_Master_Stop();
  5124   0022DA  ECF1  F011         	call	_I2C_2_Master_Stop	;wreg free
  5125   0022DE  0012               	return		;funcret
  5126   0022E0                     __end_of_color_writetoaddr:
  5127                           	callstack 0
  5128                           
  5129 ;; *************** function _I2C_2_Master_Write *****************
  5130 ;; Defined at:
  5131 ;;		line 45 in file "i2c.c"
  5132 ;; Parameters:    Size  Location     Type
  5133 ;;  data_byte       1    wreg     unsigned char 
  5134 ;; Auto vars:     Size  Location     Type
  5135 ;;  data_byte       1   13[COMRAM] unsigned char 
  5136 ;; Return value:  Size  Location     Type
  5137 ;;                  1    wreg      void 
  5138 ;; Registers used:
  5139 ;;		wreg, status,2, status,0, cstack
  5140 ;; Tracked objects:
  5141 ;;		On entry : 0/0
  5142 ;;		On exit  : 0/0
  5143 ;;		Unchanged: 0/0
  5144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5146 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5148 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5149 ;;Total ram usage:        1 bytes
  5150 ;; Hardware stack levels used: 1
  5151 ;; Hardware stack levels required when called: 8
  5152 ;; This function calls:
  5153 ;;		_I2C_2_Master_Idle
  5154 ;; This function is called by:
  5155 ;;		_color_writetoaddr
  5156 ;;		_color_read_Red
  5157 ;;		_color_read_Green
  5158 ;;		_color_read_Blue
  5159 ;;		_color_read_Clear
  5160 ;;		_interrupts_clear_colorclick
  5161 ;; This function uses a non-reentrant model
  5162 ;;
  5163                           
  5164                           	psect	text41
  5165   0023C0                     __ptext41:
  5166                           	callstack 0
  5167   0023C0                     _I2C_2_Master_Write:
  5168                           	callstack 20
  5169                           
  5170                           ;incstack = 0
  5171                           ;I2C_2_Master_Write@data_byte stored from wreg
  5172   0023C0  6E0E               	movwf	I2C_2_Master_Write@data_byte^0,c
  5173   0023C2                     
  5174                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  5175   0023C2  EC02  F011         	call	_I2C_2_Master_Idle	;wreg free
  5176   0023C6                     
  5177                           ;i2c.c: 48:   SSP2BUF = data_byte;
  5178   0023C6  C00E  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  5179   0023CA  0012               	return		;funcret
  5180   0023CC                     __end_of_I2C_2_Master_Write:
  5181                           	callstack 0
  5182                           
  5183 ;; *************** function _I2C_2_Master_Stop *****************
  5184 ;; Defined at:
  5185 ;;		line 39 in file "i2c.c"
  5186 ;; Parameters:    Size  Location     Type
  5187 ;;		None
  5188 ;; Auto vars:     Size  Location     Type
  5189 ;;		None
  5190 ;; Return value:  Size  Location     Type
  5191 ;;                  1    wreg      void 
  5192 ;; Registers used:
  5193 ;;		wreg, status,2, status,0, cstack
  5194 ;; Tracked objects:
  5195 ;;		On entry : 0/0
  5196 ;;		On exit  : 0/0
  5197 ;;		Unchanged: 0/0
  5198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5203 ;;Total ram usage:        0 bytes
  5204 ;; Hardware stack levels used: 1
  5205 ;; Hardware stack levels required when called: 8
  5206 ;; This function calls:
  5207 ;;		_I2C_2_Master_Idle
  5208 ;; This function is called by:
  5209 ;;		_color_writetoaddr
  5210 ;;		_color_read_Red
  5211 ;;		_color_read_Green
  5212 ;;		_color_read_Blue
  5213 ;;		_color_read_Clear
  5214 ;;		_interrupts_clear_colorclick
  5215 ;; This function uses a non-reentrant model
  5216 ;;
  5217                           
  5218                           	psect	text42
  5219   0023E2                     __ptext42:
  5220                           	callstack 0
  5221   0023E2                     _I2C_2_Master_Stop:
  5222                           	callstack 20
  5223   0023E2                     
  5224                           ;i2c.c: 41:   I2C_2_Master_Idle();
  5225   0023E2  EC02  F011         	call	_I2C_2_Master_Idle	;wreg free
  5226   0023E6                     
  5227                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  5228   0023E6  010E               	movlb	14	; () banked
  5229   0023E8  85DA               	bsf	218,2,b	;volatile
  5230   0023EA                     
  5231                           ; BSR set to: 14
  5232   0023EA  0012               	return		;funcret
  5233   0023EC                     __end_of_I2C_2_Master_Stop:
  5234                           	callstack 0
  5235                           
  5236 ;; *************** function _I2C_2_Master_Start *****************
  5237 ;; Defined at:
  5238 ;;		line 27 in file "i2c.c"
  5239 ;; Parameters:    Size  Location     Type
  5240 ;;		None
  5241 ;; Auto vars:     Size  Location     Type
  5242 ;;		None
  5243 ;; Return value:  Size  Location     Type
  5244 ;;                  1    wreg      void 
  5245 ;; Registers used:
  5246 ;;		wreg, status,2, status,0, cstack
  5247 ;; Tracked objects:
  5248 ;;		On entry : 0/0
  5249 ;;		On exit  : 0/0
  5250 ;;		Unchanged: 0/0
  5251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5256 ;;Total ram usage:        0 bytes
  5257 ;; Hardware stack levels used: 1
  5258 ;; Hardware stack levels required when called: 8
  5259 ;; This function calls:
  5260 ;;		_I2C_2_Master_Idle
  5261 ;; This function is called by:
  5262 ;;		_color_writetoaddr
  5263 ;;		_color_read_Red
  5264 ;;		_color_read_Green
  5265 ;;		_color_read_Blue
  5266 ;;		_color_read_Clear
  5267 ;;		_interrupts_clear_colorclick
  5268 ;; This function uses a non-reentrant model
  5269 ;;
  5270                           
  5271                           	psect	text43
  5272   0023EC                     __ptext43:
  5273                           	callstack 0
  5274   0023EC                     _I2C_2_Master_Start:
  5275                           	callstack 20
  5276   0023EC                     
  5277                           ;i2c.c: 29:   I2C_2_Master_Idle();
  5278   0023EC  EC02  F011         	call	_I2C_2_Master_Idle	;wreg free
  5279   0023F0                     
  5280                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  5281   0023F0  010E               	movlb	14	; () banked
  5282   0023F2  81DA               	bsf	218,0,b	;volatile
  5283   0023F4                     
  5284                           ; BSR set to: 14
  5285   0023F4  0012               	return		;funcret
  5286   0023F6                     __end_of_I2C_2_Master_Start:
  5287                           	callstack 0
  5288                           
  5289 ;; *************** function _I2C_2_Master_Idle *****************
  5290 ;; Defined at:
  5291 ;;		line 22 in file "i2c.c"
  5292 ;; Parameters:    Size  Location     Type
  5293 ;;		None
  5294 ;; Auto vars:     Size  Location     Type
  5295 ;;		None
  5296 ;; Return value:  Size  Location     Type
  5297 ;;                  1    wreg      void 
  5298 ;; Registers used:
  5299 ;;		wreg, status,2, status,0
  5300 ;; Tracked objects:
  5301 ;;		On entry : 0/0
  5302 ;;		On exit  : 0/0
  5303 ;;		Unchanged: 0/0
  5304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5307 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5308 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5309 ;;Total ram usage:        1 bytes
  5310 ;; Hardware stack levels used: 1
  5311 ;; Hardware stack levels required when called: 7
  5312 ;; This function calls:
  5313 ;;		Nothing
  5314 ;; This function is called by:
  5315 ;;		_I2C_2_Master_Start
  5316 ;;		_I2C_2_Master_RepStart
  5317 ;;		_I2C_2_Master_Stop
  5318 ;;		_I2C_2_Master_Write
  5319 ;;		_I2C_2_Master_Read
  5320 ;; This function uses a non-reentrant model
  5321 ;;
  5322                           
  5323                           	psect	text44
  5324   002204                     __ptext44:
  5325                           	callstack 0
  5326   002204                     _I2C_2_Master_Idle:
  5327                           	callstack 20
  5328   002204                     l88:
  5329   002204  010E               	movlb	14	; () banked
  5330   002206  B5D8               	btfsc	216,2,b	;volatile
  5331   002208  EF08  F011         	goto	u981
  5332   00220C  EF0A  F011         	goto	u980
  5333   002210                     u981:
  5334   002210  EF02  F011         	goto	l88
  5335   002214                     u980:
  5336   002214                     
  5337                           ; BSR set to: 14
  5338   002214  CEDA F00D          	movff	3802,??_I2C_2_Master_Idle	;volatile
  5339   002218  0E1F               	movlw	31
  5340   00221A  160D               	andwf	??_I2C_2_Master_Idle^0,f,c
  5341   00221C  A4D8               	btfss	status,2,c
  5342   00221E  EF13  F011         	goto	u991
  5343   002222  EF15  F011         	goto	u990
  5344   002226                     u991:
  5345   002226  EF02  F011         	goto	l88
  5346   00222A                     u990:
  5347   00222A                     
  5348                           ; BSR set to: 14
  5349   00222A  0012               	return		;funcret
  5350   00222C                     __end_of_I2C_2_Master_Idle:
  5351                           	callstack 0
  5352                           
  5353 ;; *************** function _LowISR *****************
  5354 ;; Defined at:
  5355 ;;		line 74 in file "interrupts.c"
  5356 ;; Parameters:    Size  Location     Type
  5357 ;;		None
  5358 ;; Auto vars:     Size  Location     Type
  5359 ;;		None
  5360 ;; Return value:  Size  Location     Type
  5361 ;;                  1    wreg      void 
  5362 ;; Registers used:
  5363 ;;		wreg, status,2
  5364 ;; Tracked objects:
  5365 ;;		On entry : 0/0
  5366 ;;		On exit  : 0/0
  5367 ;;		Unchanged: 0/0
  5368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5371 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5372 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5373 ;;Total ram usage:        3 bytes
  5374 ;; Hardware stack levels used: 1
  5375 ;; Hardware stack levels required when called: 6
  5376 ;; This function calls:
  5377 ;;		Nothing
  5378 ;; This function is called by:
  5379 ;;		Interrupt level 1
  5380 ;; This function uses a non-reentrant model
  5381 ;;
  5382                           
  5383                           	psect	intcodelo
  5384   000018                     __pintcodelo:
  5385                           	callstack 0
  5386   000018                     _LowISR:
  5387                           	callstack 16
  5388                           
  5389                           ; BSR set to: 14
  5390                           ;incstack = 0
  5391   000018  8051               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  5392   00001A  CFD8 F00A          	movff	status,??_LowISR
  5393   00001E  CFE8 F00B          	movff	wreg,??_LowISR+1
  5394   000022  CFE0 F00C          	movff	bsr,??_LowISR+2
  5395   000026                     
  5396                           ;interrupts.c: 77:     if(PIR0bits.TMR0IF){
  5397   000026  010E               	movlb	14	; () banked
  5398   000028  AB33               	btfss	51,5,b	;volatile
  5399   00002A  EF19  F000         	goto	i1u175_21
  5400   00002E  EF1B  F000         	goto	i1u175_20
  5401   000032                     i1u175_21:
  5402   000032  EF24  F000         	goto	i1l393
  5403   000036                     i1u175_20:
  5404   000036                     
  5405                           ; BSR set to: 14
  5406                           ;interrupts.c: 78:         TMR0H = 0b11000010;
  5407   000036  0EC2               	movlw	194
  5408   000038  6ED4               	movwf	212,c	;volatile
  5409                           
  5410                           ;interrupts.c: 79:         TMR0L = 0b11110110;
  5411   00003A  0EF6               	movlw	246
  5412   00003C  6ED3               	movwf	211,c	;volatile
  5413                           
  5414                           ;interrupts.c: 80:         tmr_ovf = 1;
  5415   00003E  0E01               	movlw	1
  5416   000040  0100               	movlb	0	; () banked
  5417   000042  6FDE               	movwf	_tmr_ovf& (0+255),b
  5418   000044                     
  5419                           ; BSR set to: 0
  5420                           ;interrupts.c: 81:         PIR0bits.TMR0IF=0;
  5421   000044  010E               	movlb	14	; () banked
  5422   000046  9B33               	bcf	51,5,b	;volatile
  5423   000048                     i1l393:
  5424                           
  5425                           ; BSR set to: 14
  5426   000048  C00C  FFE0         	movff	??_LowISR+2,bsr
  5427   00004C  C00B  FFE8         	movff	??_LowISR+1,wreg
  5428   000050  C00A  FFD8         	movff	??_LowISR,status
  5429   000054  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  5430   000056  0010               	retfie	
  5431   000058                     __end_of_LowISR:
  5432                           	callstack 0
  5433                           
  5434 ;; *************** function _HighISR *****************
  5435 ;; Defined at:
  5436 ;;		line 88 in file "interrupts.c"
  5437 ;; Parameters:    Size  Location     Type
  5438 ;;		None
  5439 ;; Auto vars:     Size  Location     Type
  5440 ;;  a               1    8[COMRAM] unsigned char 
  5441 ;; Return value:  Size  Location     Type
  5442 ;;                  1    wreg      void 
  5443 ;; Registers used:
  5444 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5445 ;; Tracked objects:
  5446 ;;		On entry : 0/0
  5447 ;;		On exit  : 0/0
  5448 ;;		Unchanged: 0/0
  5449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5451 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5452 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5453 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5454 ;;Total ram usage:        4 bytes
  5455 ;; Hardware stack levels used: 1
  5456 ;; Hardware stack levels required when called: 5
  5457 ;; This function calls:
  5458 ;;		_getCharFromTxBuf
  5459 ;;		_putCharToRxBuf
  5460 ;;		i2_interrupts_clear_colorclick
  5461 ;;		i2_isDataInTxBuf
  5462 ;; This function is called by:
  5463 ;;		Interrupt level 2
  5464 ;; This function uses a non-reentrant model
  5465 ;;
  5466                           
  5467                           	psect	intcode
  5468   000008                     __pintcode:
  5469                           	callstack 0
  5470   000008                     _HighISR:
  5471                           	callstack 16
  5472                           
  5473                           ; BSR set to: 14
  5474                           ;incstack = 0
  5475   000008  8251               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5476   00000A  EFAE  F00D         	goto	int_func
  5477                           
  5478                           	psect	intcode_body
  5479   001B5C                     __pintcode_body:
  5480                           	callstack 16
  5481   001B5C                     int_func:
  5482                           	callstack 16
  5483   001B5C  CFD9 F007          	movff	fsr2l,??_HighISR+1
  5484   001B60  CFDA F008          	movff	fsr2h,??_HighISR+2
  5485   001B64                     
  5486                           ;interrupts.c: 95:     if(PIR4bits.RC4IF){
  5487   001B64  010E               	movlb	14	; () banked
  5488   001B66  A737               	btfss	55,3,b	;volatile
  5489   001B68  EFB8  F00D         	goto	i2u176_41
  5490   001B6C  EFBA  F00D         	goto	i2u176_40
  5491   001B70                     i2u176_41:
  5492   001B70  EFBF  F00D         	goto	i2l2820
  5493   001B74                     i2u176_40:
  5494   001B74                     
  5495                           ; BSR set to: 14
  5496                           ;interrupts.c: 96:         unsigned char a = RC4REG;
  5497   001B74  CEE3 F009          	movff	3811,HighISR@a	;volatile
  5498   001B78                     
  5499                           ; BSR set to: 14
  5500                           ;interrupts.c: 97:         putCharToRxBuf(a);
  5501   001B78  5009               	movf	HighISR@a^0,w,c
  5502   001B7A  ECED  F010         	call	_putCharToRxBuf
  5503   001B7E                     i2l2820:
  5504                           
  5505                           ;interrupts.c: 101:     if(!isDataInTxBuf()){
  5506   001B7E  ECCE  F011         	call	i2_isDataInTxBuf	;wreg free
  5507   001B82  0900               	iorlw	0
  5508   001B84  A4D8               	btfss	status,2,c
  5509   001B86  EFC7  F00D         	goto	i2u177_41
  5510   001B8A  EFC9  F00D         	goto	i2u177_40
  5511   001B8E                     i2u177_41:
  5512   001B8E  EFCB  F00D         	goto	i2l401
  5513   001B92                     i2u177_40:
  5514   001B92                     
  5515                           ;interrupts.c: 102:         PIE4bits.TX4IE=0;
  5516   001B92  010E               	movlb	14	; () banked
  5517   001B94  952D               	bcf	45,2,b	;volatile
  5518   001B96                     i2l401:
  5519                           
  5520                           ;interrupts.c: 104:     if(PIR4bits.TX4IF){
  5521   001B96  010E               	movlb	14	; () banked
  5522   001B98  A537               	btfss	55,2,b	;volatile
  5523   001B9A  EFD1  F00D         	goto	i2u178_41
  5524   001B9E  EFD3  F00D         	goto	i2u178_40
  5525   001BA2                     i2u178_41:
  5526   001BA2  EFD7  F00D         	goto	i2l2826
  5527   001BA6                     i2u178_40:
  5528   001BA6                     
  5529                           ; BSR set to: 14
  5530                           ;interrupts.c: 105:         TX4REG = getCharFromTxBuf();
  5531   001BA6  ECAD  F010         	call	_getCharFromTxBuf	;wreg free
  5532   001BAA  010E               	movlb	14	; () banked
  5533   001BAC  6FE4               	movwf	228,b	;volatile
  5534   001BAE                     i2l2826:
  5535                           
  5536                           ; BSR set to: 14
  5537                           ;interrupts.c: 112:     if(PIR0bits.INT1IF){
  5538   001BAE  A333               	btfss	51,1,b	;volatile
  5539   001BB0  EFDC  F00D         	goto	i2u179_41
  5540   001BB4  EFDE  F00D         	goto	i2u179_40
  5541   001BB8                     i2u179_41:
  5542   001BB8  EFF6  F00D         	goto	i2l404
  5543   001BBC                     i2u179_40:
  5544   001BBC                     
  5545                           ; BSR set to: 14
  5546                           ;interrupts.c: 113:         color_flag = 1;
  5547   001BBC  0E01               	movlw	1
  5548   001BBE  6E4E               	movwf	_color_flag^0,c
  5549   001BC0                     
  5550                           ; BSR set to: 14
  5551                           ;interrupts.c: 114:         LATHbits.LATH3 = !LATHbits.LATH3;
  5552   001BC0  A680               	btfss	128,3,c	;volatile
  5553   001BC2  EFE5  F00D         	goto	i2u180_41
  5554   001BC6  EFE9  F00D         	goto	i2u180_40
  5555   001BCA                     i2u180_41:
  5556   001BCA  6A06               	clrf	??_HighISR^0,c
  5557   001BCC  2A06               	incf	??_HighISR^0,f,c
  5558   001BCE  EFEA  F00D         	goto	i2u181_48
  5559   001BD2                     i2u180_40:
  5560   001BD2  6A06               	clrf	??_HighISR^0,c
  5561   001BD4                     i2u181_48:
  5562   001BD4  4606               	rlncf	??_HighISR^0,f,c
  5563   001BD6  4606               	rlncf	??_HighISR^0,f,c
  5564   001BD8  4606               	rlncf	??_HighISR^0,f,c
  5565   001BDA  5080               	movf	128,w,c	;volatile
  5566   001BDC  1806               	xorwf	??_HighISR^0,w,c
  5567   001BDE  0BF7               	andlw	-9
  5568   001BE0  1806               	xorwf	??_HighISR^0,w,c
  5569   001BE2  6E80               	movwf	128,c	;volatile
  5570   001BE4                     
  5571                           ;interrupts.c: 115:         interrupts_clear_colorclick();
  5572   001BE4  ECA9  F011         	call	i2_interrupts_clear_colorclick	;wreg free
  5573   001BE8                     
  5574                           ;interrupts.c: 116:         PIR0bits.INT1IF = 0;
  5575   001BE8  010E               	movlb	14	; () banked
  5576   001BEA  9333               	bcf	51,1,b	;volatile
  5577   001BEC                     i2l404:
  5578                           
  5579                           ; BSR set to: 14
  5580   001BEC  C008  FFDA         	movff	??_HighISR+2,fsr2h
  5581   001BF0  C007  FFD9         	movff	??_HighISR+1,fsr2l
  5582   001BF4  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5583   001BF6  0011               	retfie		f
  5584   001BF8                     __end_of_HighISR:
  5585                           	callstack 0
  5586                           
  5587 ;; *************** function i2_isDataInTxBuf *****************
  5588 ;; Defined at:
  5589 ;;		line 82 in file "serial.c"
  5590 ;; Parameters:    Size  Location     Type
  5591 ;;		None
  5592 ;; Auto vars:     Size  Location     Type
  5593 ;;		None
  5594 ;; Return value:  Size  Location     Type
  5595 ;;                  1    wreg      unsigned char 
  5596 ;; Registers used:
  5597 ;;		wreg, status,2, status,0
  5598 ;; Tracked objects:
  5599 ;;		On entry : 0/0
  5600 ;;		On exit  : 0/0
  5601 ;;		Unchanged: 0/0
  5602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5607 ;;Total ram usage:        0 bytes
  5608 ;; Hardware stack levels used: 1
  5609 ;; This function calls:
  5610 ;;		Nothing
  5611 ;; This function is called by:
  5612 ;;		_HighISR
  5613 ;; This function uses a non-reentrant model
  5614 ;;
  5615                           
  5616                           	psect	text47
  5617   00239C                     __ptext47:
  5618                           	callstack 0
  5619   00239C                     i2_isDataInTxBuf:
  5620                           	callstack 20
  5621   00239C                     
  5622                           ;serial.c: 83:     return (TxBufWriteCnt!=TxBufReadCnt);
  5623   00239C  504A               	movf	_TxBufReadCnt^0,w,c	;volatile
  5624   00239E  184B               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  5625   0023A0  A4D8               	btfss	status,2,c
  5626   0023A2  EFD5  F011         	goto	i2u167_41
  5627   0023A6  EFD8  F011         	goto	i2u167_40
  5628   0023AA                     i2u167_41:
  5629   0023AA  0E01               	movlw	1
  5630   0023AC  EFD9  F011         	goto	i2u168_40
  5631   0023B0                     i2u167_40:
  5632   0023B0  0E00               	movlw	0
  5633   0023B2                     i2u168_40:
  5634   0023B2  0012               	return		;funcret
  5635   0023B4                     __end_ofi2_isDataInTxBuf:
  5636                           	callstack 0
  5637                           
  5638 ;; *************** function i2_interrupts_clear_colorclick *****************
  5639 ;; Defined at:
  5640 ;;		line 57 in file "interrupts.c"
  5641 ;; Parameters:    Size  Location     Type
  5642 ;;		None
  5643 ;; Auto vars:     Size  Location     Type
  5644 ;;		None
  5645 ;; Return value:  Size  Location     Type
  5646 ;;                  1    wreg      void 
  5647 ;; Registers used:
  5648 ;;		wreg, status,2, status,0, cstack
  5649 ;; Tracked objects:
  5650 ;;		On entry : 0/0
  5651 ;;		On exit  : 0/0
  5652 ;;		Unchanged: 0/0
  5653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5658 ;;Total ram usage:        0 bytes
  5659 ;; Hardware stack levels used: 1
  5660 ;; Hardware stack levels required when called: 4
  5661 ;; This function calls:
  5662 ;;		i2_I2C_2_Master_Start
  5663 ;;		i2_I2C_2_Master_Stop
  5664 ;;		i2_I2C_2_Master_Write
  5665 ;;		i2_init_colorclick_interrupts
  5666 ;; This function is called by:
  5667 ;;		_HighISR
  5668 ;; This function uses a non-reentrant model
  5669 ;;
  5670                           
  5671                           	psect	text48
  5672   002352                     __ptext48:
  5673                           	callstack 0
  5674   002352                     i2_interrupts_clear_colorclick:
  5675                           	callstack 16
  5676   002352                     
  5677                           ;interrupts.c: 59:     I2C_2_Master_Start();
  5678   002352  EC00  F012         	call	i2_I2C_2_Master_Start	;wreg free
  5679                           
  5680                           ;interrupts.c: 60:     I2C_2_Master_Write(0x52 | 0x00);
  5681   002356  0E52               	movlw	82
  5682   002358  ECE6  F011         	call	i2_I2C_2_Master_Write
  5683                           
  5684                           ;interrupts.c: 61:     I2C_2_Master_Write(0b11100110);
  5685   00235C  0EE6               	movlw	230
  5686   00235E  ECE6  F011         	call	i2_I2C_2_Master_Write
  5687                           
  5688                           ;interrupts.c: 62:     I2C_2_Master_Stop();
  5689   002362  ECFB  F011         	call	i2_I2C_2_Master_Stop	;wreg free
  5690                           
  5691                           ;interrupts.c: 64:     init_colorclick_interrupts();
  5692   002366  EC7F  F00F         	call	i2_init_colorclick_interrupts	;wreg free
  5693   00236A  0012               	return		;funcret
  5694   00236C                     __end_ofi2_interrupts_clear_colorclick:
  5695                           	callstack 0
  5696                           
  5697 ;; *************** function i2_init_colorclick_interrupts *****************
  5698 ;; Defined at:
  5699 ;;		line 43 in file "interrupts.c"
  5700 ;; Parameters:    Size  Location     Type
  5701 ;;		None
  5702 ;; Auto vars:     Size  Location     Type
  5703 ;;		None
  5704 ;; Return value:  Size  Location     Type
  5705 ;;                  1    wreg      void 
  5706 ;; Registers used:
  5707 ;;		wreg, status,2, status,0, cstack
  5708 ;; Tracked objects:
  5709 ;;		On entry : 0/0
  5710 ;;		On exit  : 0/0
  5711 ;;		Unchanged: 0/0
  5712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5715 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5716 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5717 ;;Total ram usage:        1 bytes
  5718 ;; Hardware stack levels used: 1
  5719 ;; Hardware stack levels required when called: 3
  5720 ;; This function calls:
  5721 ;;		i2_color_writetoaddr
  5722 ;; This function is called by:
  5723 ;;		i2_interrupts_clear_colorclick
  5724 ;; This function uses a non-reentrant model
  5725 ;;
  5726                           
  5727                           	psect	text49
  5728   001EFE                     __ptext49:
  5729                           	callstack 0
  5730   001EFE                     i2_init_colorclick_interrupts:
  5731                           	callstack 16
  5732   001EFE                     
  5733                           ;interrupts.c: 45:     color_writetoaddr(0x00,0b10011);
  5734   001EFE  0E13               	movlw	19
  5735   001F00  6E03               	movwf	i2color_writetoaddr@value^0,c
  5736   001F02  0E00               	movlw	0
  5737   001F04  EC70  F011         	call	i2_color_writetoaddr
  5738   001F08                     
  5739                           ;interrupts.c: 46:     _delay((unsigned long)((3)*(64000000/4000.0)));
  5740   001F08  0E3F               	movlw	63
  5741   001F0A  6E05               	movwf	??i2_init_colorclick_interrupts^0,c
  5742   001F0C  0E55               	movlw	85
  5743   001F0E                     i2u232_47:
  5744   001F0E  2EE8               	decfsz	wreg,f,c
  5745   001F10  D7FE               	bra	i2u232_47
  5746   001F12  2E05               	decfsz	??i2_init_colorclick_interrupts^0,f,c
  5747   001F14  D7FC               	bra	i2u232_47
  5748   001F16  F000               	nop	
  5749   001F18                     
  5750                           ;interrupts.c: 48:     color_writetoaddr(0x0C,0b0100);
  5751   001F18  0E04               	movlw	4
  5752   001F1A  6E03               	movwf	i2color_writetoaddr@value^0,c
  5753   001F1C  0E0C               	movlw	12
  5754   001F1E  EC70  F011         	call	i2_color_writetoaddr
  5755   001F22                     
  5756                           ;interrupts.c: 49:     color_writetoaddr(0x04,(int_threshold_low & 0xFF));
  5757   001F22  C047  F003         	movff	_int_threshold_low,i2color_writetoaddr@value
  5758   001F26  0E04               	movlw	4
  5759   001F28  EC70  F011         	call	i2_color_writetoaddr
  5760   001F2C                     
  5761                           ;interrupts.c: 50:     color_writetoaddr(0x05,(int_threshold_low >> 8));
  5762   001F2C  5048               	movf	(_int_threshold_low+1)^0,w,c
  5763   001F2E  6E03               	movwf	i2color_writetoaddr@value^0,c
  5764   001F30  0E05               	movlw	5
  5765   001F32  EC70  F011         	call	i2_color_writetoaddr
  5766   001F36                     
  5767                           ;interrupts.c: 51:     color_writetoaddr(0x06,(int_threshold_high & 0xFF));
  5768   001F36  C04F  F003         	movff	_int_threshold_high,i2color_writetoaddr@value
  5769   001F3A  0E06               	movlw	6
  5770   001F3C  EC70  F011         	call	i2_color_writetoaddr
  5771   001F40                     
  5772                           ;interrupts.c: 52:     color_writetoaddr(0x07,(int_threshold_high >> 8));
  5773   001F40  5050               	movf	(_int_threshold_high+1)^0,w,c
  5774   001F42  6E03               	movwf	i2color_writetoaddr@value^0,c
  5775   001F44  0E07               	movlw	7
  5776   001F46  EC70  F011         	call	i2_color_writetoaddr
  5777   001F4A  0012               	return		;funcret
  5778   001F4C                     __end_ofi2_init_colorclick_interrupts:
  5779                           	callstack 0
  5780                           
  5781 ;; *************** function i2_color_writetoaddr *****************
  5782 ;; Defined at:
  5783 ;;		line 22 in file "color.c"
  5784 ;; Parameters:    Size  Location     Type
  5785 ;;  address         1    wreg     unsigned char 
  5786 ;;  value           1    2[COMRAM] unsigned char 
  5787 ;; Auto vars:     Size  Location     Type
  5788 ;;  address         1    3[COMRAM] unsigned char 
  5789 ;; Return value:  Size  Location     Type
  5790 ;;                  1    wreg      void 
  5791 ;; Registers used:
  5792 ;;		wreg, status,2, status,0, cstack
  5793 ;; Tracked objects:
  5794 ;;		On entry : 0/0
  5795 ;;		On exit  : 0/0
  5796 ;;		Unchanged: 0/0
  5797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5798 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5799 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5801 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5802 ;;Total ram usage:        2 bytes
  5803 ;; Hardware stack levels used: 1
  5804 ;; Hardware stack levels required when called: 2
  5805 ;; This function calls:
  5806 ;;		i2_I2C_2_Master_Start
  5807 ;;		i2_I2C_2_Master_Stop
  5808 ;;		i2_I2C_2_Master_Write
  5809 ;; This function is called by:
  5810 ;;		i2_init_colorclick_interrupts
  5811 ;; This function uses a non-reentrant model
  5812 ;;
  5813                           
  5814                           	psect	text50
  5815   0022E0                     __ptext50:
  5816                           	callstack 0
  5817   0022E0                     i2_color_writetoaddr:
  5818                           	callstack 16
  5819                           
  5820                           ;incstack = 0
  5821                           ;i2color_writetoaddr@address stored from wreg
  5822   0022E0  6E04               	movwf	i2color_writetoaddr@address^0,c
  5823   0022E2                     
  5824                           ;color.c: 23:     I2C_2_Master_Start();
  5825   0022E2  EC00  F012         	call	i2_I2C_2_Master_Start	;wreg free
  5826                           
  5827                           ;color.c: 24:     I2C_2_Master_Write(0x52 | 0x00);
  5828   0022E6  0E52               	movlw	82
  5829   0022E8  ECE6  F011         	call	i2_I2C_2_Master_Write
  5830                           
  5831                           ;color.c: 25:     I2C_2_Master_Write(0x80 | address);
  5832   0022EC  5004               	movf	i2color_writetoaddr@address^0,w,c
  5833   0022EE  0980               	iorlw	128
  5834   0022F0  ECE6  F011         	call	i2_I2C_2_Master_Write
  5835                           
  5836                           ;color.c: 26:     I2C_2_Master_Write(value);
  5837   0022F4  5003               	movf	i2color_writetoaddr@value^0,w,c
  5838   0022F6  ECE6  F011         	call	i2_I2C_2_Master_Write
  5839                           
  5840                           ;color.c: 27:     I2C_2_Master_Stop();
  5841   0022FA  ECFB  F011         	call	i2_I2C_2_Master_Stop	;wreg free
  5842   0022FE  0012               	return		;funcret
  5843   002300                     __end_ofi2_color_writetoaddr:
  5844                           	callstack 0
  5845                           
  5846 ;; *************** function i2_I2C_2_Master_Write *****************
  5847 ;; Defined at:
  5848 ;;		line 45 in file "i2c.c"
  5849 ;; Parameters:    Size  Location     Type
  5850 ;;  data_byte       1    wreg     unsigned char 
  5851 ;; Auto vars:     Size  Location     Type
  5852 ;;  data_byte       1    1[COMRAM] unsigned char 
  5853 ;; Return value:  Size  Location     Type
  5854 ;;                  1    wreg      void 
  5855 ;; Registers used:
  5856 ;;		wreg, status,2, status,0, cstack
  5857 ;; Tracked objects:
  5858 ;;		On entry : 0/0
  5859 ;;		On exit  : 0/0
  5860 ;;		Unchanged: 0/0
  5861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5863 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5865 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5866 ;;Total ram usage:        1 bytes
  5867 ;; Hardware stack levels used: 1
  5868 ;; Hardware stack levels required when called: 1
  5869 ;; This function calls:
  5870 ;;		i2_I2C_2_Master_Idle
  5871 ;; This function is called by:
  5872 ;;		i2_color_writetoaddr
  5873 ;;		i2_interrupts_clear_colorclick
  5874 ;; This function uses a non-reentrant model
  5875 ;;
  5876                           
  5877                           	psect	text51
  5878   0023CC                     __ptext51:
  5879                           	callstack 0
  5880   0023CC                     i2_I2C_2_Master_Write:
  5881                           	callstack 16
  5882                           
  5883                           ;incstack = 0
  5884                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  5885   0023CC  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  5886   0023CE                     
  5887                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  5888   0023CE  EC16  F011         	call	i2_I2C_2_Master_Idle	;wreg free
  5889   0023D2                     
  5890                           ;i2c.c: 48:   SSP2BUF = data_byte;
  5891   0023D2  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  5892   0023D6  0012               	return		;funcret
  5893   0023D8                     __end_ofi2_I2C_2_Master_Write:
  5894                           	callstack 0
  5895                           
  5896 ;; *************** function i2_I2C_2_Master_Stop *****************
  5897 ;; Defined at:
  5898 ;;		line 39 in file "i2c.c"
  5899 ;; Parameters:    Size  Location     Type
  5900 ;;		None
  5901 ;; Auto vars:     Size  Location     Type
  5902 ;;		None
  5903 ;; Return value:  Size  Location     Type
  5904 ;;                  1    wreg      void 
  5905 ;; Registers used:
  5906 ;;		wreg, status,2, status,0, cstack
  5907 ;; Tracked objects:
  5908 ;;		On entry : 0/0
  5909 ;;		On exit  : 0/0
  5910 ;;		Unchanged: 0/0
  5911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5916 ;;Total ram usage:        0 bytes
  5917 ;; Hardware stack levels used: 1
  5918 ;; Hardware stack levels required when called: 1
  5919 ;; This function calls:
  5920 ;;		i2_I2C_2_Master_Idle
  5921 ;; This function is called by:
  5922 ;;		i2_color_writetoaddr
  5923 ;;		i2_interrupts_clear_colorclick
  5924 ;; This function uses a non-reentrant model
  5925 ;;
  5926                           
  5927                           	psect	text52
  5928   0023F6                     __ptext52:
  5929                           	callstack 0
  5930   0023F6                     i2_I2C_2_Master_Stop:
  5931                           	callstack 16
  5932   0023F6                     
  5933                           ;i2c.c: 41:   I2C_2_Master_Idle();
  5934   0023F6  EC16  F011         	call	i2_I2C_2_Master_Idle	;wreg free
  5935   0023FA                     
  5936                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  5937   0023FA  010E               	movlb	14	; () banked
  5938   0023FC  85DA               	bsf	218,2,b	;volatile
  5939   0023FE                     
  5940                           ; BSR set to: 14
  5941   0023FE  0012               	return		;funcret
  5942   002400                     __end_ofi2_I2C_2_Master_Stop:
  5943                           	callstack 0
  5944                           
  5945 ;; *************** function i2_I2C_2_Master_Start *****************
  5946 ;; Defined at:
  5947 ;;		line 27 in file "i2c.c"
  5948 ;; Parameters:    Size  Location     Type
  5949 ;;		None
  5950 ;; Auto vars:     Size  Location     Type
  5951 ;;		None
  5952 ;; Return value:  Size  Location     Type
  5953 ;;                  1    wreg      void 
  5954 ;; Registers used:
  5955 ;;		wreg, status,2, status,0, cstack
  5956 ;; Tracked objects:
  5957 ;;		On entry : 0/0
  5958 ;;		On exit  : 0/0
  5959 ;;		Unchanged: 0/0
  5960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5965 ;;Total ram usage:        0 bytes
  5966 ;; Hardware stack levels used: 1
  5967 ;; Hardware stack levels required when called: 1
  5968 ;; This function calls:
  5969 ;;		i2_I2C_2_Master_Idle
  5970 ;; This function is called by:
  5971 ;;		i2_color_writetoaddr
  5972 ;;		i2_interrupts_clear_colorclick
  5973 ;; This function uses a non-reentrant model
  5974 ;;
  5975                           
  5976                           	psect	text53
  5977   002400                     __ptext53:
  5978                           	callstack 0
  5979   002400                     i2_I2C_2_Master_Start:
  5980                           	callstack 16
  5981   002400                     
  5982                           ;i2c.c: 29:   I2C_2_Master_Idle();
  5983   002400  EC16  F011         	call	i2_I2C_2_Master_Idle	;wreg free
  5984   002404                     
  5985                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  5986   002404  010E               	movlb	14	; () banked
  5987   002406  81DA               	bsf	218,0,b	;volatile
  5988   002408                     
  5989                           ; BSR set to: 14
  5990   002408  0012               	return		;funcret
  5991   00240A                     __end_ofi2_I2C_2_Master_Start:
  5992                           	callstack 0
  5993                           
  5994 ;; *************** function i2_I2C_2_Master_Idle *****************
  5995 ;; Defined at:
  5996 ;;		line 22 in file "i2c.c"
  5997 ;; Parameters:    Size  Location     Type
  5998 ;;		None
  5999 ;; Auto vars:     Size  Location     Type
  6000 ;;		None
  6001 ;; Return value:  Size  Location     Type
  6002 ;;                  1    wreg      void 
  6003 ;; Registers used:
  6004 ;;		wreg, status,2, status,0
  6005 ;; Tracked objects:
  6006 ;;		On entry : 0/0
  6007 ;;		On exit  : 0/0
  6008 ;;		Unchanged: 0/0
  6009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6012 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6013 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6014 ;;Total ram usage:        1 bytes
  6015 ;; Hardware stack levels used: 1
  6016 ;; This function calls:
  6017 ;;		Nothing
  6018 ;; This function is called by:
  6019 ;;		i2_I2C_2_Master_Start
  6020 ;;		i2_I2C_2_Master_Stop
  6021 ;;		i2_I2C_2_Master_Write
  6022 ;; This function uses a non-reentrant model
  6023 ;;
  6024                           
  6025                           	psect	text54
  6026   00222C                     __ptext54:
  6027                           	callstack 0
  6028   00222C                     i2_I2C_2_Master_Idle:
  6029                           	callstack 16
  6030   00222C                     i2l88:
  6031   00222C  010E               	movlb	14	; () banked
  6032   00222E  B5D8               	btfsc	216,2,b	;volatile
  6033   002230  EF1C  F011         	goto	i2u123_41
  6034   002234  EF1E  F011         	goto	i2u123_40
  6035   002238                     i2u123_41:
  6036   002238  EF16  F011         	goto	i2l88
  6037   00223C                     i2u123_40:
  6038   00223C                     
  6039                           ; BSR set to: 14
  6040   00223C  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  6041   002240  0E1F               	movlw	31
  6042   002242  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  6043   002244  A4D8               	btfss	status,2,c
  6044   002246  EF27  F011         	goto	i2u124_41
  6045   00224A  EF29  F011         	goto	i2u124_40
  6046   00224E                     i2u124_41:
  6047   00224E  EF16  F011         	goto	i2l88
  6048   002252                     i2u124_40:
  6049   002252                     
  6050                           ; BSR set to: 14
  6051   002252  0012               	return		;funcret
  6052   002254                     __end_ofi2_I2C_2_Master_Idle:
  6053                           	callstack 0
  6054                           
  6055 ;; *************** function _putCharToRxBuf *****************
  6056 ;; Defined at:
  6057 ;;		line 54 in file "serial.c"
  6058 ;; Parameters:    Size  Location     Type
  6059 ;;  byte            1    wreg     unsigned char 
  6060 ;; Auto vars:     Size  Location     Type
  6061 ;;  byte            1    0[COMRAM] unsigned char 
  6062 ;; Return value:  Size  Location     Type
  6063 ;;                  1    wreg      void 
  6064 ;; Registers used:
  6065 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6066 ;; Tracked objects:
  6067 ;;		On entry : 0/0
  6068 ;;		On exit  : 0/0
  6069 ;;		Unchanged: 0/0
  6070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6072 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6074 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6075 ;;Total ram usage:        1 bytes
  6076 ;; Hardware stack levels used: 1
  6077 ;; This function calls:
  6078 ;;		Nothing
  6079 ;; This function is called by:
  6080 ;;		_HighISR
  6081 ;; This function uses a non-reentrant model
  6082 ;;
  6083                           
  6084                           	psect	text55
  6085   0021DA                     __ptext55:
  6086                           	callstack 0
  6087   0021DA                     _putCharToRxBuf:
  6088                           	callstack 20
  6089                           
  6090                           ; BSR set to: 14
  6091                           ;incstack = 0
  6092                           ;putCharToRxBuf@byte stored from wreg
  6093   0021DA  6E01               	movwf	putCharToRxBuf@byte^0,c
  6094   0021DC                     
  6095                           ;serial.c: 55:     if (RxBufWriteCnt>=20) {RxBufWriteCnt=0;}
  6096   0021DC  0E13               	movlw	19
  6097   0021DE  644D               	cpfsgt	_RxBufWriteCnt^0,c	;volatile
  6098   0021E0  EFF4  F010         	goto	i2u161_41
  6099   0021E4  EFF6  F010         	goto	i2u161_40
  6100   0021E8                     i2u161_41:
  6101   0021E8  EFF8  F010         	goto	i2l2670
  6102   0021EC                     i2u161_40:
  6103   0021EC  0E00               	movlw	0
  6104   0021EE  6E4D               	movwf	_RxBufWriteCnt^0,c	;volatile
  6105   0021F0                     i2l2670:
  6106                           
  6107                           ;serial.c: 56:     EUSART4RXbuf[RxBufWriteCnt++]=byte;
  6108   0021F0  0EC8               	movlw	low _EUSART4RXbuf
  6109   0021F2  244D               	addwf	_RxBufWriteCnt^0,w,c	;volatile
  6110   0021F4  6ED9               	movwf	fsr2l,c
  6111   0021F6  6ADA               	clrf	fsr2h,c
  6112   0021F8  0E00               	movlw	high _EUSART4RXbuf
  6113   0021FA  22DA               	addwfc	fsr2h,f,c
  6114   0021FC  C001  FFDF         	movff	putCharToRxBuf@byte,indf2
  6115   002200  2A4D               	incf	_RxBufWriteCnt^0,f,c	;volatile
  6116   002202  0012               	return		;funcret
  6117   002204                     __end_of_putCharToRxBuf:
  6118                           	callstack 0
  6119                           
  6120 ;; *************** function _getCharFromTxBuf *****************
  6121 ;; Defined at:
  6122 ;;		line 68 in file "serial.c"
  6123 ;; Parameters:    Size  Location     Type
  6124 ;;		None
  6125 ;; Auto vars:     Size  Location     Type
  6126 ;;		None
  6127 ;; Return value:  Size  Location     Type
  6128 ;;                  1    wreg      unsigned char 
  6129 ;; Registers used:
  6130 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6131 ;; Tracked objects:
  6132 ;;		On entry : 0/0
  6133 ;;		On exit  : 0/0
  6134 ;;		Unchanged: 0/0
  6135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6138 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6139 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6140 ;;Total ram usage:        2 bytes
  6141 ;; Hardware stack levels used: 1
  6142 ;; This function calls:
  6143 ;;		Nothing
  6144 ;; This function is called by:
  6145 ;;		_HighISR
  6146 ;; This function uses a non-reentrant model
  6147 ;;
  6148                           
  6149                           	psect	text56
  6150   00215A                     __ptext56:
  6151                           	callstack 0
  6152   00215A                     _getCharFromTxBuf:
  6153                           	callstack 20
  6154   00215A                     
  6155                           ;serial.c: 69:     if (TxBufReadCnt>=60) {TxBufReadCnt=0;}
  6156   00215A  0E3B               	movlw	59
  6157   00215C  644A               	cpfsgt	_TxBufReadCnt^0,c	;volatile
  6158   00215E  EFB3  F010         	goto	i2u164_41
  6159   002162  EFB5  F010         	goto	i2u164_40
  6160   002166                     i2u164_41:
  6161   002166  EFB7  F010         	goto	i2l2682
  6162   00216A                     i2u164_40:
  6163   00216A  0E00               	movlw	0
  6164   00216C  6E4A               	movwf	_TxBufReadCnt^0,c	;volatile
  6165   00216E                     i2l2682:
  6166                           
  6167                           ;serial.c: 70:     return EUSART4TXbuf[TxBufReadCnt++];
  6168   00216E  2A4A               	incf	_TxBufReadCnt^0,f,c	;volatile
  6169   002170  044A               	decf	_TxBufReadCnt^0,w,c	;volatile
  6170   002172  6E01               	movwf	??_getCharFromTxBuf^0,c
  6171   002174  6A02               	clrf	(??_getCharFromTxBuf+1)^0,c
  6172   002176  0E00               	movlw	low _EUSART4TXbuf
  6173   002178  2401               	addwf	??_getCharFromTxBuf^0,w,c
  6174   00217A  6ED9               	movwf	fsr2l,c
  6175   00217C  0E01               	movlw	high _EUSART4TXbuf
  6176   00217E  2002               	addwfc	(??_getCharFromTxBuf+1)^0,w,c
  6177   002180  6EDA               	movwf	fsr2h,c
  6178   002182  50DF               	movf	indf2,w,c
  6179   002184  0012               	return		;funcret
  6180   002186                     __end_of_getCharFromTxBuf:
  6181                           	callstack 0
  6182                           
  6183                           	psect	rparam
  6184   000000                     
  6185                           	psect	temp
  6186   000051                     btemp:
  6187                           	callstack 0
  6188   000051                     	ds	1
  6189   000000                     int$flags	set	btemp
  6190   000000                     wtemp8	set	btemp+1
  6191   000000                     ttemp5	set	btemp+1
  6192   000000                     ttemp6	set	btemp+4
  6193   000000                     ttemp7	set	btemp+8
  6194                           
  6195                           	psect	idloc
  6196                           
  6197                           ;Config register IDLOC0 @ 0x200000
  6198                           ;	unspecified, using default values
  6199   200000                     	org	2097152
  6200   200000  0FFF               	dw	4095
  6201                           
  6202                           ;Config register IDLOC1 @ 0x200002
  6203                           ;	unspecified, using default values
  6204   200002                     	org	2097154
  6205   200002  0FFF               	dw	4095
  6206                           
  6207                           ;Config register IDLOC2 @ 0x200004
  6208                           ;	unspecified, using default values
  6209   200004                     	org	2097156
  6210   200004  0FFF               	dw	4095
  6211                           
  6212                           ;Config register IDLOC3 @ 0x200006
  6213                           ;	unspecified, using default values
  6214   200006                     	org	2097158
  6215   200006  0FFF               	dw	4095
  6216                           
  6217                           ;Config register IDLOC4 @ 0x200008
  6218                           ;	unspecified, using default values
  6219   200008                     	org	2097160
  6220   200008  0FFF               	dw	4095
  6221                           
  6222                           ;Config register IDLOC5 @ 0x20000A
  6223                           ;	unspecified, using default values
  6224   20000A                     	org	2097162
  6225   20000A  0FFF               	dw	4095
  6226                           
  6227                           ;Config register IDLOC6 @ 0x20000C
  6228                           ;	unspecified, using default values
  6229   20000C                     	org	2097164
  6230   20000C  0FFF               	dw	4095
  6231                           
  6232                           ;Config register IDLOC7 @ 0x20000E
  6233                           ;	unspecified, using default values
  6234   20000E                     	org	2097166
  6235   20000E  0FFF               	dw	4095
  6236                           
  6237                           	psect	config
  6238                           
  6239                           ;Config register CONFIG1L @ 0x300000
  6240                           ;	External Oscillator mode Selection bits
  6241                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  6242                           ;	Power-up default value for COSC bits
  6243                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  6244   300000                     	org	3145728
  6245   300000  AA                 	db	170
  6246                           
  6247                           ;Config register CONFIG1H @ 0x300001
  6248                           ;	unspecified, using default values
  6249                           ;	Clock Out Enable bit
  6250                           ;	CLKOUTEN = 0x1, unprogrammed default
  6251                           ;	Clock Switch Enable bit
  6252                           ;	CSWEN = 0x1, unprogrammed default
  6253                           ;	Fail-Safe Clock Monitor Enable bit
  6254                           ;	FCMEN = 0x1, unprogrammed default
  6255   300001                     	org	3145729
  6256   300001  FF                 	db	255
  6257                           
  6258                           ;Config register CONFIG2L @ 0x300002
  6259                           ;	unspecified, using default values
  6260                           ;	Master Clear Enable bit
  6261                           ;	MCLRE = 0x1, unprogrammed default
  6262                           ;	Power-up Timer Enable bit
  6263                           ;	PWRTE = 0x1, unprogrammed default
  6264                           ;	Low-power BOR enable bit
  6265                           ;	LPBOREN = 0x1, unprogrammed default
  6266                           ;	Brown-out Reset Enable bits
  6267                           ;	BOREN = 0x3, unprogrammed default
  6268   300002                     	org	3145730
  6269   300002  FF                 	db	255
  6270                           
  6271                           ;Config register CONFIG2H @ 0x300003
  6272                           ;	unspecified, using default values
  6273                           ;	Brown Out Reset Voltage selection bits
  6274                           ;	BORV = 0x3, unprogrammed default
  6275                           ;	ZCD Disable bit
  6276                           ;	ZCD = 0x1, unprogrammed default
  6277                           ;	PPSLOCK bit One-Way Set Enable bit
  6278                           ;	PPS1WAY = 0x1, unprogrammed default
  6279                           ;	Stack Full/Underflow Reset Enable bit
  6280                           ;	STVREN = 0x1, unprogrammed default
  6281                           ;	Debugger Enable bit
  6282                           ;	DEBUG = 0x1, unprogrammed default
  6283                           ;	Extended Instruction Set Enable bit
  6284                           ;	XINST = 0x1, unprogrammed default
  6285   300003                     	org	3145731
  6286   300003  FF                 	db	255
  6287                           
  6288                           ;Config register CONFIG3L @ 0x300004
  6289                           ;	WDT Period Select bits
  6290                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  6291                           ;	WDT operating mode
  6292                           ;	WDTE = OFF, WDT Disabled
  6293   300004                     	org	3145732
  6294   300004  9F                 	db	159
  6295                           
  6296                           ;Config register CONFIG3H @ 0x300005
  6297                           ;	unspecified, using default values
  6298                           ;	WDT Window Select bits
  6299                           ;	WDTCWS = 0x7, unprogrammed default
  6300                           ;	WDT input clock selector
  6301                           ;	WDTCCS = 0x7, unprogrammed default
  6302   300005                     	org	3145733
  6303   300005  FF                 	db	255
  6304                           
  6305                           ;Config register CONFIG4L @ 0x300006
  6306                           ;	unspecified, using default values
  6307                           ;	Write Protection Block 0
  6308                           ;	WRT0 = 0x1, unprogrammed default
  6309                           ;	Write Protection Block 1
  6310                           ;	WRT1 = 0x1, unprogrammed default
  6311                           ;	Write Protection Block 2
  6312                           ;	WRT2 = 0x1, unprogrammed default
  6313                           ;	Write Protection Block 3
  6314                           ;	WRT3 = 0x1, unprogrammed default
  6315                           ;	Write Protection Block 3
  6316                           ;	WRT4 = 0x1, unprogrammed default
  6317                           ;	Write Protection Block 3
  6318                           ;	WRT5 = 0x1, unprogrammed default
  6319                           ;	Write Protection Block 3
  6320                           ;	WRT6 = 0x1, unprogrammed default
  6321                           ;	Write Protection Block 3
  6322                           ;	WRT7 = 0x1, unprogrammed default
  6323   300006                     	org	3145734
  6324   300006  FF                 	db	255
  6325                           
  6326                           ;Config register CONFIG4H @ 0x300007
  6327                           ;	unspecified, using default values
  6328                           ;	Configuration Register Write Protection bit
  6329                           ;	WRTC = 0x1, unprogrammed default
  6330                           ;	Boot Block Write Protection bit
  6331                           ;	WRTB = 0x1, unprogrammed default
  6332                           ;	Data EEPROM Write Protection bit
  6333                           ;	WRTD = 0x1, unprogrammed default
  6334                           ;	Scanner Enable bit
  6335                           ;	SCANE = 0x1, unprogrammed default
  6336                           ;	Low Voltage Programming Enable bit
  6337                           ;	LVP = 0x1, unprogrammed default
  6338   300007                     	org	3145735
  6339   300007  FF                 	db	255
  6340                           
  6341                           ;Config register CONFIG5L @ 0x300008
  6342                           ;	unspecified, using default values
  6343                           ;	UserNVM Program Memory Code Protection bit
  6344                           ;	CP = 0x1, unprogrammed default
  6345                           ;	DataNVM Memory Code Protection bit
  6346                           ;	CPD = 0x1, unprogrammed default
  6347   300008                     	org	3145736
  6348   300008  FF                 	db	255
  6349                           
  6350                           ;Config register CONFIG5H @ 0x300009
  6351                           ;	unspecified, using default values
  6352   300009                     	org	3145737
  6353   300009  FF                 	db	255
  6354                           
  6355                           ;Config register CONFIG6L @ 0x30000A
  6356                           ;	unspecified, using default values
  6357                           ;	Table Read Protection Block 0
  6358                           ;	EBTR0 = 0x1, unprogrammed default
  6359                           ;	Table Read Protection Block 1
  6360                           ;	EBTR1 = 0x1, unprogrammed default
  6361                           ;	Table Read Protection Block 2
  6362                           ;	EBTR2 = 0x1, unprogrammed default
  6363                           ;	Table Read Protection Block 3
  6364                           ;	EBTR3 = 0x1, unprogrammed default
  6365                           ;	Table Read Protection Block 4
  6366                           ;	EBTR4 = 0x1, unprogrammed default
  6367                           ;	Table Read Protection Block 5
  6368                           ;	EBTR5 = 0x1, unprogrammed default
  6369                           ;	Table Read Protection Block 6
  6370                           ;	EBTR6 = 0x1, unprogrammed default
  6371                           ;	Table Read Protection Block 7
  6372                           ;	EBTR7 = 0x1, unprogrammed default
  6373   30000A                     	org	3145738
  6374   30000A  FF                 	db	255
  6375                           
  6376                           ;Config register CONFIG6H @ 0x30000B
  6377                           ;	unspecified, using default values
  6378                           ;	Boot Block Table Read Protection bit
  6379                           ;	EBTRB = 0x1, unprogrammed default
  6380   30000B                     	org	3145739
  6381   30000B  FF                 	db	255
  6382                           tosu	equ	0xFFF
  6383                           tosh	equ	0xFFE
  6384                           tosl	equ	0xFFD
  6385                           stkptr	equ	0xFFC
  6386                           pclatu	equ	0xFFB
  6387                           pclath	equ	0xFFA
  6388                           pcl	equ	0xFF9
  6389                           tblptru	equ	0xFF8
  6390                           tblptrh	equ	0xFF7
  6391                           tblptrl	equ	0xFF6
  6392                           tablat	equ	0xFF5
  6393                           prodh	equ	0xFF4
  6394                           prodl	equ	0xFF3
  6395                           indf0	equ	0xFEF
  6396                           postinc0	equ	0xFEE
  6397                           postdec0	equ	0xFED
  6398                           preinc0	equ	0xFEC
  6399                           plusw0	equ	0xFEB
  6400                           fsr0h	equ	0xFEA
  6401                           fsr0l	equ	0xFE9
  6402                           wreg	equ	0xFE8
  6403                           indf1	equ	0xFE7
  6404                           postinc1	equ	0xFE6
  6405                           postdec1	equ	0xFE5
  6406                           preinc1	equ	0xFE4
  6407                           plusw1	equ	0xFE3
  6408                           fsr1h	equ	0xFE2
  6409                           fsr1l	equ	0xFE1
  6410                           bsr	equ	0xFE0
  6411                           indf2	equ	0xFDF
  6412                           postinc2	equ	0xFDE
  6413                           postdec2	equ	0xFDD
  6414                           preinc2	equ	0xFDC
  6415                           plusw2	equ	0xFDB
  6416                           fsr2h	equ	0xFDA
  6417                           fsr2l	equ	0xFD9
  6418                           status	equ	0xFD8

Data Sizes:
    Strings     24
    Constant    0
    Data        2
    BSS         125
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     68      80
    BANK0           160    104     159
    BANK1           256      0      60
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_1(CODE[24]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_1(CODE[24]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_1(CODE[24]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 24
		 -> STR_1(CODE[24]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2390$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_1(CODE[24]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 40
		 -> main@string2(BANK0[40]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2337$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2337$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    TxBufferedString@string	PTR unsigned char  size(2) Largest target is 40
		 -> main@string2(BANK0[40]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    S1153DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    S1153DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    detect_color@tempval	PTR struct RGB_val size(2) Largest target is 8
		 -> main@initial_color(BANK0[8]), 

    Update_RGBC@tempval	PTR struct RGB_val size(2) Largest target is 8
		 -> main@initial_color(BANK0[8]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->___wmul
    _detect_color->___lwdiv
    _color_click_init->_color_writetoaddr
    _Update_RGBC->_color_read_Blue
    _Update_RGBC->_color_read_Clear
    _Update_RGBC->_color_read_Green
    _Update_RGBC->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _TxBufferedString->_putCharToTxBuf
    _interrupts_clear_colorclick->_init_colorclick_interrupts
    _init_colorclick_interrupts->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    i2_interrupts_clear_colorclick->i2_init_colorclick_interrupts
    i2_init_colorclick_interrupts->i2_color_writetoaddr
    i2_color_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               851   851      0   13373
                                             54 BANK0     50    50      0
                    _Interrupts_init
                           _LED_init
                        _Timer0_init
                   _TxBufferedString
                        _Update_RGBC
                         _WhiteLight
                   _color_click_init
                       _detect_color
                   _getCharFromRxBuf
                         _initUSART4
                      _isDataInRxBuf
                          _sendTxBuf
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    15      6    9565
                                             35 BANK0     19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    9073
                                             66 COMRAM     2     2      0
                                             29 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           24    18      6    8579
                                             57 COMRAM     9     3      6
                                             17 BANK0     12    12      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    5075
                                             39 COMRAM    18     8     10
                                              0 BANK0     17    17      0
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2775
                                             28 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1357
                                             21 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     857
                                             12 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             30 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                             12 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                             12 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 9     7      2    1384
                                             18 COMRAM     9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     207
                                             12 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              4     2      2     237
                                             12 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     615
                                             12 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _sendTxBuf                                            0     0      0       0
                      _isDataInTxBuf
 ---------------------------------------------------------------------------------
 (2) _isDataInTxBuf                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _isDataInRxBuf                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getCharFromRxBuf                                     2     2      0       0
                                             12 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _detect_color                                        14    12      2    1134
                                             19 COMRAM    11     9      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     760
                                             12 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     750
                                             16 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WhiteLight                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Update_RGBC                                          2     0      2     616
                                             23 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                             16 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                             16 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                             16 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                             16 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                             13 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _TxBufferedString                                     2     0      2     143
                                             13 COMRAM     2     0      2
                     _putCharToTxBuf
 ---------------------------------------------------------------------------------
 (2) _putCharToTxBuf                                       1     1      0      22
                                             12 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0     772
        _interrupts_clear_colorclick
 ---------------------------------------------------------------------------------
 (2) _interrupts_clear_colorclick                          0     0      0     772
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
         _init_colorclick_interrupts
 ---------------------------------------------------------------------------------
 (3) _init_colorclick_interrupts                           1     1      0     750
                                             16 COMRAM     1     1      0
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     750
                                             14 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                             13 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                             12 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _LowISR                                               3     3      0       0
                                              9 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _HighISR                                             4     4      0     289
                                              5 COMRAM     4     4      0
                   _getCharFromTxBuf
                     _putCharToRxBuf
      i2_interrupts_clear_colorclick
                    i2_isDataInTxBuf
 ---------------------------------------------------------------------------------
 (11) i2_isDataInTxBuf                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (11) i2_interrupts_clear_colorclick                       0     0      0     244
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
       i2_init_colorclick_interrupts
 ---------------------------------------------------------------------------------
 (12) i2_init_colorclick_interrupts                        1     1      0     222
                                              4 COMRAM     1     1      0
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (13) i2_color_writetoaddr                                 2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (14) i2_I2C_2_Master_Write                                1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (14) i2_I2C_2_Master_Stop                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (14) i2_I2C_2_Master_Start                                0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (15) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _putCharToRxBuf                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _getCharFromTxBuf                                    2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Interrupts_init
     _interrupts_clear_colorclick
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
       _init_colorclick_interrupts
         _color_writetoaddr
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
   _LED_init
   _Timer0_init
   _TxBufferedString
     _putCharToTxBuf
   _Update_RGBC
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _WhiteLight
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
   _detect_color
     ___lwdiv
   _getCharFromRxBuf
   _initUSART4
   _isDataInRxBuf
   _sendTxBuf
     _isDataInTxBuf
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
         _isdigit

 _LowISR (ROOT)

 _HighISR (ROOT)
   _getCharFromTxBuf
   _putCharToRxBuf
   i2_interrupts_clear_colorclick
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle
     i2_init_colorclick_interrupts
       i2_color_writetoaddr
         i2_I2C_2_Master_Start
         i2_I2C_2_Master_Stop
         i2_I2C_2_Master_Write
   i2_isDataInTxBuf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      64        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      3C       7       23.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     68      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     44      50       1       85.1%
BITBIGSFRhlllh      52      0       0      41        0.0%
BITBIGSFRhlllll     37      0       0      43        0.0%
BITBIGSFRllh        2D      0       0      46        0.0%
BITBIGSFRlllhll     2A      0       0      54        0.0%
BITBIGSFRlllllh     23      0       0      61        0.0%
BITBIGSFRhhhlll     1D      0       0      38        0.0%
BITBIGSFRhhhhhl     1B      0       0      33        0.0%
BITBIGSFRhhhhl      13      0       0      34        0.0%
BITBIGSFRlllhhh     11      0       0      48        0.0%
BITBIGSFRlllhhh     11      0       0      49        0.0%
BITBIGSFRhhhlhh      E      0       0      35        0.0%
BITBIGSFRhhhhhh      D      0       0      32        0.0%
BITBIGSFRlllhhh      C      0       0      47        0.0%
BITBIGSFRlllhll      9      0       0      58        0.0%
BITBIGSFRhlllll      8      0       0      44        0.0%
BITBIGSFRllllh       6      0       0      60        0.0%
BITBIGSFRlllhll      6      0       0      53        0.0%
BITBIGSFRlllhll      5      0       0      56        0.0%
BITBIGSFRlllhlh      5      0       0      52        0.0%
BITBIGSFRlllhll      3      0       0      55        0.0%
BITBIGSFRlllhll      3      0       0      57        0.0%
BITBIGSFRlllhhl      3      0       0      51        0.0%
BITBIGSFRhllllh      2      0       0      42        0.0%
BITBIGSFRhhhllh      2      0       0      37        0.0%
BITBIGSFRllllll      2      0       0      62        0.0%
BITBIGSFRhhhlhl      1      0       0      36        0.0%
BITBIGSFRlllhhh      1      0       0      50        0.0%
BITBIGSFRhllhh       1      0       0      39        0.0%
BITBIGSFRhllhl       1      0       0      40        0.0%
BITBIGSFRlllhll      1      0       0      59        0.0%
BITBIGSFRlh          1      0       0      45        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12B      63        0.0%
DATA                 0      0     12B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Mar 02 21:42:37 2023

                       _color_read_Red 1D70                        _color_read_Blue 1E60  
                                   l21 20D0                                     l30 1E0E  
                                   l24 22DE                                     l33 1EAE  
                                   l42 1926                                     l27 1DBE  
                                   l36 1E5E                                     l44 1922  
                                   l39 1CC8                                     l58 1928  
                                   l91 222A                                     l85 21AE  
                                   l94 23F4                                     l88 2204  
                                   l97 23E0                                     bsr 000FE0  
                  ___wmul@multiplicand 000F                       _color_read_Clear 1E10  
                     _color_read_Green 1DC0                      ??_Interrupts_init 0012  
                                  l100 23EA                                    l103 23CA  
                                  l106 205C                                    l300 2336  
                                  l125 23BE                                    l311 22BE  
                                  l128 2410                                    l250 231C  
                                  l272 2158                                    l290 2382  
                                  l382 1EFC                                    l375 229E  
                                  l287 21D8                                    l279 239A  
                                  l447 1A2A                                    l296 2100  
                                  l385 2350                                    l457 2278  
                                  l571 1512                                    l584 1676  
                                  l955 1C6A                                    l948 1C62  
                                  u980 2214                                    u981 2210  
                                  u990 222A                                    u991 2226  
                                  _abs 205E                                    _pad 1AB2  
                  i2_color_writetoaddr 22E0                                    wreg 000FE8  
                                 l1211 10D2                                   ?_abs 001F  
                                 l1221 2094                                   l1135 1D6E  
                                 l3000 15B2                                   l1224 209C  
                                 l1217 1D1C                                   l3002 15C0  
                                 l3010 1626                                   l1162 1AF6  
                                 l1252 212C                                   l1260 1FD6  
                                 l3012 1636                                   l3004 15EE  
                                 l3020 1AC0                                   l3100 0E1A  
                                 l1165 1B38                                   l1173 1170  
                                 l2134 2204                                   l2150 23C2  
                                 l1246 17CC                                   l3014 1656  
                                 l3006 160E                                   l3030 1B16  
                                 l3022 1AD4                                   l3110 0E6E  
                                 l3102 0E42                                   l1167 1B5A  
                                 l1175 1178                                   l2136 2214  
                                 l2152 23C6                                   l2400 202A  
                                 l2160 2270                                   l3008 1620  
                                 l3032 1B1A                                   l3024 1AE2  
                                 l1176 11BE                                   l3040 10D4  
                                 l3112 0E70                                   l3120 0EC6  
                                 l3104 0E50                                   l3200 1A2E  
                                 l1249 17D4                                   l2146 23EC  
                                 l2154 23E2                                   l2410 1EB0  
                                 l2402 2032                                   l3034 1B46  
                                 l3026 1AEE                                   l3018 1AB2  
                                 l3050 1148                                   l3042 10F4  
                                 l3130 0F52                                   l3122 0ED8  
                                 l3114 0E82                                   l3106 0E5E  
                                 l3210 1A6E                                   l3202 1A3A  
                                 l1275 19F2                                   l1283 201A  
                                 l2148 23F0                                   l2156 23E6  
                                 l2420 1EE8                                   l2412 1EBA  
                                 l2404 2058                                   l2500 219A  
                                 l3036 205E                                   l3028 1B02  
                                 l3060 1196                                   l3052 114A  
                                 l3044 110A                                   l3140 0FCC  
                                 l3132 0F72                                   l3124 0F00  
                                 l3108 0E62                                   l3212 1A80  
                                 l3204 1A4A                                   l1189 138A  
                                 l2422 1EF2                                   l2414 1ECA  
                                 l2406 205A                                   l2510 1DC0  
                                 l2502 219C                                   l2158 2254  
                                 l2270 1F92                                   l2350 168C  
                                 l3038 2078                                   l1286 2414  
                                 l3070 11CE                                   l3062 11A6  
                                 l3054 1164                                   l3046 111A  
                                 l3150 1094                                   l3142 0FEC  
                                 l3126 0F36                                   l3118 0E8E  
                                 l3214 1A9A                                   l3206 1A52  
                                 l2416 1ED4                                   l2512 1E06  
                                 l2504 1D70                                   l2600 17D6  
                                 l2272 1F96                                   l2360 16F0  
                                 l3072 11D4                                   l3080 12C8  
                                 l3064 11B2                                   l3056 1180  
                                 l3048 113A                                   l3144 100C  
                                 l3136 0F80                                   l3128 0F44  
                                 l3216 1AA6                                   l3208 1A5A  
                                 l2418 1EDE                                   l2530 21C2  
                                 l2522 1E10                                   l2506 1DB6  
                                 l2610 191E                                   l2602 17DA  
                                 l2266 2102                                   l2274 1FAA  
                                 l2370 176A                                   l2362 16F8  
                                 l2354 1690                                   l3082 12E4  
                                 l3090 1344                                   l3074 1256  
                                 l3066 11BA                                   l3058 1190  
                                 l3146 1064                                   l3138 0FBC  
                                 l3154 10A6                                   l3170 1CD6  
                                 l3218 1AAA                                   l2540 2338  
                                 l2700 22A8                                   l2532 21C6  
                                 l2516 1E60                                   l2524 1E56  
                                 l2604 183E                                   l2276 1FCC  
                                 l2372 179E                                   l2364 1730  
                                 l2356 16B0                                   l2348 1678  
                                 l3092 1354                                   l3084 1302  
                                 l3076 125E                                   l3068 11C6  
                                 l3172 1CF2                                   l3180 1D30  
                                 l2286 22C2                                   l2710 2286  
                                 l2702 22B2                                   l2534 21D6  
                                 l2518 1EA6                                   l2630 240A  
                                 l2550 1C22                                   l2542 1BF8  
                                 l2606 18A6                                   l2278 1FD0  
                                 l2374 17B0                                   l2358 16E8  
                                 l3094 135A                                   l3086 131C  
                                 l3078 1264                                   l3174 1D12  
                                 l3182 1D38                                   l3190 19F4  
                                 l2720 2292                                   l2712 228A  
                                 l2704 22BC                                   l2528 21B2  
                                 l2392 23D8                                   l2560 1C56  
                                 l2552 1C30                                   l2544 1C00  
                                 l2608 190E                                   l2536 236C  
                                 l3096 136A                                   l3088 1336  
                                 l3280 0EB8                                   l3168 1CCA  
                                 l3184 1D40                                   l3192 1A16  
                                 l2722 2294                                   l2714 228C  
                                 l2706 227A                                   l2394 23DC  
                                 l2562 1C5C                                   l2554 1C36  
                                 l2546 1C12                                   l2650 230C  
                                 l3282 171A                                   l3186 1D5C  
                                 l3178 1D1E                                   l3194 1A1A  
                                 l2724 2298                                   l2716 228E  
                                 l2708 2280                                   l2628 23B4  
                                 l2396 201E                                   l2492 2186  
                                 l2556 1C4C                                   l2548 1C1A  
                                 l2660 213E                                   l2652 2316  
                                 l3196 1A1E                                   l2726 229A  
                                 l2718 2290                                   l2398 2022  
                                 l2494 2190                                   l2590 20A2  
                                 l2558 1C54                                   l2662 2142  
                                 l2654 2318                                   l2646 2300  
                                 l3198 1A2A                                   l2728 229C  
                                 l2496 2196                                   l2592 20AC  
                                 l2656 231A                                   l2648 230A  
                                 l2920 194E                                   l2690 20E4  
                                 l2498 2198                                   l2594 20BC  
                                 l2658 212E                                   l2674 2384  
                                 l2922 1958                                   l2930 1FD8  
                                 l2692 20E8                                   l2596 20C6  
                                 l2588 209E                                   l2940 1390  
                                 l2924 1976                                   l2916 192A  
                                 l2932 1FE4                                   l2686 20D2  
                                 l2598 1C6C                                   l2694 231E  
                                 l2950 13F0                                   l2942 139E  
                                 l2926 19AC                                   l2918 193C  
                                 l2934 1FF6                                   ?_pad 001D  
                                 l2688 20D6                                   l2696 2332  
                                 l2960 143A                                   l2952 13F4  
                                 l2944 13BE                                   l2936 1FFA  
                                 l2698 22A0                                   l2970 14AA  
                                 l2962 1448                                   l2954 1400  
                                 l2946 13C2                                   l2938 138C  
                                 l2972 14BC                                   l2964 145A  
                                 l2956 141E                                   l2948 13D0  
                                 l2966 1488                                   l2958 1426  
                                 l2974 14C2                                   l2990 154A  
                                 l2982 1514                                   l2976 14D2  
                                 l2968 14A8                                   l2992 1558  
                                 l2984 1518                                   l2978 14F2  
                                 l2994 1578                                   l2986 1526  
                                 l2996 1596                                   l2988 1546  
                                 l2998 159E                                   STR_1 0E01  
                                 u1200 2128                                   u2000 15EE  
                                 u2001 15EA                                   u1210 1FAA  
                                 u2010 1636                                   u1211 1FA6  
                                 u2011 1632                                   u1220 1FCC  
                                 u2020 1AC0                                   u2100 1148  
                                 u1221 1FC8                                   u2021 1ABC  
                                 u2101 1144                                   u2030 1AE2  
                                 u2110 1164                                   u2031 1ADE  
                                 u2111 1160                                   u1400 179E  
                                 u2040 1B38                                   u2120 1190  
                                 u2200 0E42                                   u1401 179A  
                                 u2041 1B34                                   u2121 118C  
                                 u2201 0E3E                                   u1410 17B0  
                                 u2050 1B46                                   u2130 11A6  
                                 u2210 0ED8                                   u1411 17AC  
                                 u2051 1B42                                   u2131 11A2  
                                 u2211 0ED4                                   u1420 2046  
                                 u2060 2078                                   u2140 12E4  
                                 u2220 0F00                                   u1421 203E  
                                 u2061 2074                                   u2141 12E0  
                                 u2221 0EFC                                   u1510 21C2  
                                 u1190 2126                                   u2150 1302  
                                 u2070 1106                                   u2230 0F44  
                                 u1511 21BE                                   u1191 2120  
                                 u2151 12FE                                   u2071 1100  
                                 u2231 0F40                                   u1600 213E  
                                 u1520 2380                                   u2160 131C  
                                 u2080 1108                                   u2240 0FBC  
                         _BAUD4CONbits 000EE9                                   u1601 213A  
                                 u1521 237A                                   u2161 1318  
                                 u2241 0FB8                                   u1530 2382  
                                 u2170 1336                                   u2090 111A  
                                 u2250 0FEC                                   u2307 20B2  
                                 u2171 1332                                   u2091 1116  
                                 u2251 0FE8                                   u1540 1C12  
                                 u1620 2398                                   u1380 16B0  
                                 u2180 1344                                   u2260 100C  
                                 u2317 1EC0                                   u1541 1C0E  
                                 u1621 2392                                   u1381 16AC  
                                 u2181 1340                                   u2261 1008  
                                 u1438 2048                                   u1550 1C30  
                                 u1630 239A                                   u1390 16E4  
                                 u2190 1354                                   u2270 1D12  
                                 u1551 1C2C                                   u1391 16E0  
                                 u2191 1350                                   u2271 1D0E  
                                 u1560 1C4C                                   u2280 1A6E  
                                 u1561 1C48                                   u2281 1A6A  
                                 u1650 2100                                   u2290 1A80  
                                 _T2PR 000FBC                                   u1651 20FC  
                                 u2291 1A7C                                   u1580 191E  
                                 u1660 2332                                   u1900 13D0  
                                 u1581 191A                                   u1661 232E  
                                 u1901 13CC                                   u1911 13FA  
                                 u1920 141E                                   u1840 193C  
                                 u1921 141A                                   u1841 1938  
                                 u1930 1448                                   u1850 194E  
                                 u1931 1444                                   u1851 194A  
                                 u1940 1488                                   u1860 1976  
                                 u1941 1484                                   u1861 1972  
                                 u1950 14D2                                   u1870 19AC  
                                 u1951 14CE                                   u1871 19A8  
                                 u1960 1526                                   u1880 201A  
                                 u1961 1522                                   u1881 2016  
                                 u1890 139E                                   u1970 1558  
                                 u1891 139A                                   u1971 1554  
                                 u1980 1596                                   u1981 1592  
                                 u1990 15C0                                   u1991 15BC  
                                 i2l24 22FE                                   i2l91 2252  
                                 i2l94 2408                                   i2l88 222C  
                                 abs@a 001F                                   _dbuf 00DF  
                                 _atoi 1678                                   _main 19F4  
                                 _dtoa 10D4                                   _prec 0045  
                                 pad@i 0024                                   pad@p 0021  
                                 fsr1h 000FE2                                   fsr2h 000FDA  
                                 indf2 000FDF                                   fsr1l 000FE1  
                                 pad@w 0026                                   fsr2l 000FD9  
                                 btemp 0051         ??i2_init_colorclick_interrupts 0005  
                    main@initial_color 00C0                                   prodh 000FF4  
                                 prodl 000FF3                                   start 0058  
                 ?i2_color_writetoaddr 0003                            main@string2 0096  
               __end_of_color_read_Red 1DC0                        __end_of_HighISR 1BF8  
                         ___param_bank 000000                                  ??_abs 0021  
                                ??_pad 0023                       __end_of_LED_init 23C0  
                      __end_of___aodiv 1514                                  ?_atoi 0013  
                                ?_main 0001                                  ?_dtoa 0028  
                      __end_of___aomod 1678                        __end_of___lwdiv 1C6C  
                                i2l100 23FE                                  i2l103 23D6  
                                i2l401 1B96                                  i1l393 0048  
                                i2l404 1BEC                                  i2l290 23B2  
                                i2l283 2184                                  i2l276 2202  
                                i2l382 1F4A                                  i2l385 236A  
                         vfpfcnvrt@fmt 003C                                  _TMR0H 000FD4  
                                _TMR0L 000FD3             __end_of_I2C_2_Master_Start 23F6  
           __end_of_I2C_2_Master_Write 23CC                                  _flags 0049  
                                _fputc 192A                                  _fputs 1FD8  
                      __end_of_isdigit 212E                     _int_threshold_high 004F  
                                atoi@n 001A                                  pad@fp 001D  
                                atoi@s 0013                                  _width 00DC  
                                _putch 2414                                  dtoa@d 002A  
                                dtoa@i 006F                                  dtoa@n 0066  
                                dtoa@p 0062                                  dtoa@s 006E  
                                dtoa@w 0064                        __end_of_isspace 1FD8  
                                tablat 000FF5                                  ttemp5 0052  
                                ttemp6 0055                                  ttemp7 0059  
                                status 000FD8                                  wtemp8 0052  
                      __end_of_sprintf 1D70                    detect_color@tempval 0014  
                ??i2_color_writetoaddr 0004                __end_of_color_read_Blue 1EB0  
                _I2C_2_Master_RepStart 23D8                     putCharToRxBuf@byte 0001  
                      ?_color_read_Red 0011                        __initialization 1F4C  
                         __end_of_atoi 17D6                           __end_of_main 1AB2  
                         __end_of_dtoa 138C                   __end_of_detect_color 192A  
                      i2_isDataInTxBuf 239C                     putCharToTxBuf@byte 000D  
  __end_of_interrupts_clear_colorclick 2352         ?i2_interrupts_clear_colorclick 0001  
          _interrupts_clear_colorclick 2338                                 ??_atoi 0015  
                               ??_main 0045                                 ??_dtoa 0032  
                        __activetblptr 000003                                 ?_fputc 000D  
                               ?_fputs 0016                                 _CCPR1H 000FAA  
                               _CCPR2H 000FA6                                 _CCPR3H 000F25  
                               _CCPR4H 000F21                                 ?_putch 0001  
                               _RC0PPS 000E62                                 _RC4REG 000EE3  
                               _RE2PPS 000E74                                 _RD5PPS 000E6F  
                               _RC7PPS 000E69                                 i1l2810 0036  
                               _RE4PPS 000E76                                 _RD6PPS 000E70  
                               i1l2812 0044                                 i1l2808 0026  
                               i2l2282 222C                                 i2l2284 223C  
                               i2l2380 2400                                 i2l2382 2404  
                               i2l2390 23D2                                 i2l2384 23F6  
                               i2l2386 23FA                                 i2l2490 22E2  
                               i2l2388 23CE                                 i2l2580 1F22  
                               i2l2820 1B7E                                 i2l2670 21F0  
                               i2l2582 1F2C                                 i2l2574 1EFE  
                               i2l2742 239C                                 i2l2830 1BC0  
                               i2l2822 1B92                                 i2l2814 1B64  
                               i2l2680 216A                                 i2l2672 2200  
                               i2l2584 1F36                                 i2l2576 1F08  
                               i2l2832 1BE4                                 i2l2824 1BA6  
                               i2l2816 1B74                                 i2l2682 216E  
                               i2l2666 21DC                                 i2l2586 1F40  
                               i2l2578 1F18                                 i2l2746 2352  
                               i2l2834 1BE8                                 i2l2826 1BAE  
                               i2l2818 1B78                                 i2l2668 21EC  
                               i2l2828 1BBC                                 i2l2678 215A  
                               _RG6PPS 000E88                          vfpfcnvrt@done 0079  
                            ??_HighISR 0006               __end_of_color_click_init 20D2  
                               _RX4PPS 000E15                                 _TX4REG 000EE4  
                               _LowISR 0018                          ??_Timer0_init 000D  
                         _CCPTMRS0bits 000FAD                           vfprintf@cfmt 0043  
                     _getCharFromRxBuf 212E                       _getCharFromTxBuf 215A  
                            ??___aodiv 001D                              ??___aomod 001D  
                               ___wmul 2254                              ??___lwdiv 0011  
                               clear_0 1F6A                                 clear_1 1F76  
                               clear_2 1F82                                 isa$std 000001  
                               pad@buf 001F                                 dtoa@fp 0028  
                               fputc@c 000D                      ?_TxBufferedString 000E  
                               fputs@c 001A                                 fputs@i 001B  
                         __pdataCOMRAM 004F                                 fputs@s 0016  
                            ??_isdigit 000F                             _WhiteLight 240A  
                         __mediumconst 0000                              ??_isspace 000F  
                               tblptrh 000FF7                                 tblptrl 000FF6  
                               tblptru 000FF8                     ??_TxBufferedString 0010  
                               putch@c 0001                       __end_of_vfprintf 1D1E  
                            ??_sprintf 0045             i2color_writetoaddr@address 0004  
                __end_of_isDataInRxBuf 239C                  __end_of_isDataInTxBuf 2384  
                        ??_Update_RGBC 001A                             __accesstop 0060  
              __end_of__initialization 1F88               __end_of_color_read_Clear 1E60  
             __end_of_color_read_Green 1E10                 ?_I2C_2_Master_RepStart 0001  
              __end_ofi2_isDataInTxBuf 23B4                          ___rparam_used 000001  
                            ?_LED_init 0001                       ?_color_read_Blue 0011  
                      _Interrupts_init 227A                         __pcstackCOMRAM 0001  
                        __end_of_fputc 19F4                      detect_color@color 001E  
                        __end_of_fputs 201C                          __end_of_putch 2416  
                  __end_of_Timer0_init 22C0           ??_init_colorclick_interrupts 0011  
                              ??_fputc 0011                                ??_fputs 001A  
                              ??_putch 000D                             __pbssBANK0 00C8  
                           __pbssBANK1 0100                             ??_LED_init 000D  
                              ?_LowISR 0001                      _color_writetoaddr 22C0  
                         _T2CLKCONbits 000FBF                    __end_of_Update_RGBC 1CCA  
                   ?_color_writetoaddr 000F                                ?___wmul 000D  
                  ??_color_writetoaddr 0010                                _INT1PPS 000DF1  
                          ?_WhiteLight 0001                                _SP4BRGH 000EE6  
                              _SP4BRGL 000EE5                                _SSP2ADD 000ED6  
                              _SSP2BUF 000ED5                             _color_flag 004E  
                         _detect_color 17D6                __end_of_Interrupts_init 22A0  
               color_writetoaddr@value 000F                       ??_color_read_Red 0013  
                              _HighISR 0008              __end_of_color_writetoaddr 22E0  
                     ?i2_isDataInTxBuf 0001                     _I2C_2_Master_Start 23EC  
                           _initUSART4 2300                    i2_I2C_2_Master_Idle 222C  
                   _I2C_2_Master_Write 23C0                                __Hparam 0000  
                  i2_I2C_2_Master_Stop 23F6                                __Lparam 0000  
                    color_read_Red@tmp 0016                            _Timer0_init 22A0  
                              ___aodiv 138C                                ___aomod 1514  
                  ?_I2C_2_Master_Start 0001                                ___lwdiv 1BF8  
                  ?_I2C_2_Master_Write 0001                              ?_vfprintf 007D  
                         __psmallconst 0E00                                __pcinit 1F4C  
                              __ramtop 0E00                                __ptext0 19F4  
                              __ptext1 1D1E                                __ptext2 1CCA  
                              __ptext3 0E1A                                __ptext4 10D4  
                              __ptext5 1AB2                                __ptext6 1FD8  
                              __ptext7 192A                                __ptext8 2414  
                              __ptext9 205E                   ?i2_I2C_2_Master_Idle 0001  
 __end_ofi2_init_colorclick_interrupts 1F4C           i2_init_colorclick_interrupts 1EFE  
                            _T2CONbits 000FBD                                _isdigit 2102  
                 ?i2_I2C_2_Master_Stop 0001                                _isspace 1F92  
                            _T2HLTbits 000FBE                          _RxBufWriteCnt 004D  
                              atoi@neg 0018               __end_of_getCharFromRxBuf 215A  
             __end_of_getCharFromTxBuf 2186                                _tmr_ovf 00DE  
                              _sprintf 1D1E                   ??_I2C_2_Master_Start 000E  
                 ??_I2C_2_Master_Write 000E                         __pintcode_body 1B5C  
                 end_of_initialization 1F88                      __end_of_sendTxBuf 2338  
          __end_ofi2_color_writetoaddr 2300                     main@color_detected 00BE  
                              fputc@fp 000F                                int_func 1B5C  
                              fputs@fp 0018                            _Update_RGBC 1C6C  
                    ?_color_click_init 0001                     ??_color_click_init 0011  
                    __end_of_vfpfcnvrt 10D4                                postdec2 000FDD  
                              postinc0 000FEE                                postinc1 000FE6  
                              postinc2 000FDE                       vfpfcnvrt@convarg 0071  
                           ??_vfprintf 0043                  ??i2_I2C_2_Master_Idle 0001  
                ??i2_I2C_2_Master_Stop 0002                              _TRISAbits 000F81  
                            _TRISBbits 000F82                              _TRISCbits 000F83  
                            _TRISDbits 000F84     __end_of_init_colorclick_interrupts 1EFE  
        ?i2_init_colorclick_interrupts 0001             _init_colorclick_interrupts 1EB0  
                            _TRISEbits 000F85                              _TRISFbits 000F86  
                            _TRISGbits 000F87                              _TRISHbits 000F88  
             color_writetoaddr@address 0010                ??_I2C_2_Master_RepStart 000E  
                     ?_Interrupts_init 0001                            _CCP1CONbits 000FAB  
                    ?_color_read_Clear 0011                           _EUSART4RXbuf 00C8  
                         _EUSART4TXbuf 0100                            _CCP2CONbits 000FA7  
                    ?_color_read_Green 0011                            _CCP3CONbits 000F26  
                          ?_initUSART4 0001                            _CCP4CONbits 000F22  
                   ??_color_read_Clear 0013                     ??_color_read_Green 0013  
                       __end_of_LowISR 0058                            vfpfcnvrt@ap 003E  
                          vfpfcnvrt@cp 007B                            vfpfcnvrt@fp 003A  
                       __end_of___wmul 227A                          __pidataCOMRAM 2412  
                    _int_threshold_low 0047                    color_read_Clear@tmp 0016  
                  start_initialization 1F4C                            __end_of_abs 209E  
                          __end_of_pad 1B5C                          _TxBufWriteCnt 004B  
                  color_read_Green@tmp 0016                               ??_LowISR 000A  
                          vfprintf@fmt 007F                               ??___wmul 0011  
                       _putCharToRxBuf 21DA                         _putCharToTxBuf 21B0  
        i2I2C_2_Master_Write@data_byte 0002                     Update_RGBC@tempval 0018  
         __end_ofi2_I2C_2_Master_Start 240A           __end_ofi2_I2C_2_Master_Write 23D8  
                          __pbssCOMRAM 0045                           ??_WhiteLight 000D  
                        __pcstackBANK0 0060                       ___aodiv@dividend 000D  
                             ?_HighISR 0001                       ___lwdiv@dividend 000D  
                            _dtoa$2428 0060                           ?_Timer0_init 0001  
               __end_of_putCharToRxBuf 2204                 __end_of_putCharToTxBuf 21DA  
                            __pintcode 0008                     __end_of_WhiteLight 2412  
                             ?___aodiv 000D                               ?___aomod 000D  
                     ___aodiv@quotient 001F                               ?___lwdiv 000D  
               TxBufferedString@string 000E                            __pintcodelo 0018  
         ?_interrupts_clear_colorclick 0001                   I2C_2_Master_Read@ack 000F  
                 I2C_2_Master_Read@tmp 0010                            __smallconst 0E00  
                             ?_isdigit 000D                      _I2C_2_Master_Idle 2204  
                    _I2C_2_Master_Init 2186                      _I2C_2_Master_Read 201C  
                    _I2C_2_Master_Stop 23E2                               ?_isspace 000D  
                         _RxBufReadCnt 004C                     ?_I2C_2_Master_Idle 0001  
                   ?_I2C_2_Master_Init 0001                     ?_I2C_2_Master_Read 0001  
                   ?_I2C_2_Master_Stop 0001                       ___lwdiv@quotient 0011  
                    ?_getCharFromRxBuf 0001                               ?_sprintf 0083  
                    ?_getCharFromTxBuf 0001                     ??_getCharFromRxBuf 000D  
                   ??_getCharFromTxBuf 0001                    ??_I2C_2_Master_Idle 000D  
                  ??_I2C_2_Master_Init 000D                           ?_Update_RGBC 0018  
                  ??_I2C_2_Master_Read 000E                         ___wmul@product 0011  
                             _LATAbits 000F79                          _isDataInRxBuf 2384  
                  ??_I2C_2_Master_Stop 000E                               _LATCbits 000F7B  
                        _isDataInTxBuf 236C                               _LATEbits 000F7D  
                             _LATFbits 000F7E                       _TxBufferedString 20D2  
                             _LATGbits 000F7F                               _LATHbits 000F80  
                            _sendTxBuf 231E                               _IPR0bits 000E1F  
                             _PIE0bits 000E29                               _LED_init 23B4  
                             _PIE4bits 000E2D                               i1u175_20 0036  
                             i1u175_21 0032                               i2u123_40 223C  
                             i2u123_41 2238                               i2u124_40 2252  
                             i2u124_41 224E                               i2u232_47 1F0E  
                             i2u161_40 21EC                               i2u161_41 21E8  
                             i2u164_40 216A                               i2u180_40 1BD2  
                             i2u164_41 2166                               i2u180_41 1BCA  
                             i2u181_48 1BD4                               i2u167_40 23B0  
                             i2u167_41 23AA                               _PIR0bits 000E33  
                             HighISR@a 0009                               i2u168_40 23B2  
                             i2u176_40 1B74                               i2u176_41 1B70  
                             i2u177_40 1B92                               i2u177_41 1B8E  
                             i2u178_40 1BA6                               i2u178_41 1BA2  
                             i2u179_40 1BBC                               i2u179_41 1BB8  
                             _PIR4bits 000E37                        ?_putCharToRxBuf 0001  
                      ?_putCharToTxBuf 0001                               _SSP2CON2 000EDA  
                             _SSP2STAT 000ED8                              _vfpfcnvrt 0E1A  
            __end_of_I2C_2_Master_Idle 222C              __end_of_I2C_2_Master_Init 21B0  
            __end_of_I2C_2_Master_Read 205E                      ___wmul@multiplier 000D  
            __end_of_I2C_2_Master_Stop 23EC            I2C_2_Master_Write@data_byte 000E  
        ??_interrupts_clear_colorclick 0012                      ??_color_read_Blue 0013  
                         _TxBufReadCnt 004A            ?_init_colorclick_interrupts 0001  
                         _isspace$2477 0011               i2color_writetoaddr@value 0003  
                       ?_isDataInRxBuf 0001                         ?_isDataInTxBuf 0001  
        __end_of_I2C_2_Master_RepStart 23E2                     color_read_Blue@tmp 0016  
                           ?_sendTxBuf 0001                           ??_initUSART4 000D  
                 i2_I2C_2_Master_Start 2400                   i2_I2C_2_Master_Write 23CC  
                             __Hrparam 0000                             vfprintf@ap 0081  
                             __Lrparam 0000                             vfprintf@fp 007D  
          __end_ofi2_I2C_2_Master_Idle 2254            __end_ofi2_I2C_2_Master_Stop 2400  
                           ?_vfpfcnvrt 003A                        ___aodiv@divisor 0015  
                      ___aodiv@counter 001D                             _ANSELBbits 000E9A  
                           _ANSELDbits 000EA7                             sprintf@fmt 0085  
                           _T0CON0bits 000FD5                             _T0CON1bits 000FD6  
                      ___lwdiv@divisor 000F                     __end_of_initUSART4 231E  
                      ___lwdiv@counter 0013                               __ptext10 1514  
                             __ptext11 138C                               __ptext20 212E  
                             __ptext12 1678                               __ptext21 17D6  
                             __ptext13 1F92                               __ptext30 1E60  
                             __ptext22 1BF8                               __ptext14 2102  
                             __ptext31 23D8                               __ptext23 209E  
                             __ptext15 2254                               __ptext40 22C0  
                             __ptext32 201C                               __ptext24 2186  
                             __ptext16 231E                               __ptext41 23C0  
                             __ptext33 20D2                               __ptext25 240A  
                             __ptext17 236C                               __ptext50 22E0  
                             __ptext42 23E2                               __ptext34 21B0  
                             __ptext26 1C6C                               __ptext18 2384  
                             __ptext51 23CC                               __ptext43 23EC  
                             __ptext35 22A0                               __ptext27 1D70  
                             __ptext19 2300                               __ptext52 23F6  
                             __ptext44 2204                               __ptext36 23B4  
                             __ptext28 1DC0                               __ptext53 2400  
                             __ptext37 227A                               __ptext29 1E10  
                             __ptext54 222C                               __ptext38 2338  
                             __ptext55 21DA                               __ptext47 239C  
                             __ptext39 1EB0                               __ptext56 215A  
                             __ptext48 2352                               __ptext49 1EFE  
                         _SSP2CON1bits 000ED9                           _SSP2CON2bits 000EDA  
      ??i2_interrupts_clear_colorclick 0006                  ?i2_I2C_2_Master_Start 0001  
                ?i2_I2C_2_Master_Write 0001                               isa$xinst 000000  
                           _RC4STAbits 000EE7                               int$flags 0051  
                             _vfprintf 1CCA                               main@cont 00BF  
                     ___aomod@dividend 000D                             _INTCONbits 000FF2  
                    ??i2_isDataInTxBuf 0001                               isdigit@c 000D  
                        ?_detect_color 0014                        ??_isDataInRxBuf 000D  
                      ??_isDataInTxBuf 000D                               intlevel1 0000  
                             intlevel2 0000                              sprintf@ap 0089  
                             isspace@c 000D                            ??_sendTxBuf 000D  
                      ___aomod@divisor 0015                            ??_vfpfcnvrt 0040  
                      ___aomod@counter 001D                       _color_click_init 209E  
             __end_of_TxBufferedString 2102                               sprintf@f 008B  
                             sprintf@s 0083                             _SSP2DATPPS 000E1D  
                           _SSP2CLKPPS 000E1C                         ??_detect_color 0016  
                           _TX4STAbits 000EE8                           ___aodiv@sign 001E  
               ??i2_I2C_2_Master_Start 0002                 ??i2_I2C_2_Master_Write 0002  
                     ??_putCharToRxBuf 0001                       ??_putCharToTxBuf 000D  
                         ___aomod@sign 001E  __end_ofi2_interrupts_clear_colorclick 236C  
        i2_interrupts_clear_colorclick 2352  
