

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Feb 25 13:12:02 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    62                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    63                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    64                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    65                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    66   000000                     
    67                           ; Generated 06/04/2022 GMT
    68                           ; 
    69                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    70                           ; All rights reserved.
    71                           ; 
    72                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    73                           ; 
    74                           ; Redistribution and use in source and binary forms, with or without modification, are
    75                           ; permitted provided that the following conditions are met:
    76                           ; 
    77                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    78                           ;        conditions and the following disclaimer.
    79                           ; 
    80                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    81                           ;        of conditions and the following disclaimer in the documentation and/or other
    82                           ;        materials provided with the distribution. Publication is not required when
    83                           ;        this file is used in an embedded application.
    84                           ; 
    85                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    86                           ;        software without specific prior written permission.
    87                           ; 
    88                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    89                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    90                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    91                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    92                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    93                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    94                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    95                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    96                           ; 
    97                           ; 
    98                           ; Code-generator required, PIC18F67K40 Definitions
    99                           ; 
   100                           ; SFR Addresses
   101   000000                     _LATHbits	set	3968
   102   000000                     _TX4REG	set	3812
   103   000000                     _RC4STAbits	set	3815
   104   000000                     _SP4BRGH	set	3814
   105   000000                     _TRISEbits	set	3973
   106   000000                     _TRISFbits	set	3974
   107   000000                     _TRISGbits	set	3975
   108   000000                     _SSP2CON2bits	set	3802
   109   000000                     _RX4PPS	set	3605
   110   000000                     _SSP2CLKPPS	set	3612
   111   000000                     _SSP2DATPPS	set	3613
   112   000000                     _ANSELDbits	set	3751
   113   000000                     _SSP2ADD	set	3798
   114   000000                     _SSP2CON1bits	set	3801
   115   000000                     _RC4REG	set	3811
   116   000000                     _SP4BRGL	set	3813
   117   000000                     _TX4STAbits	set	3816
   118   000000                     _BAUD4CONbits	set	3817
   119   000000                     _CCPR4H	set	3873
   120   000000                     _CCPR3H	set	3877
   121   000000                     _LATAbits	set	3961
   122   000000                     _LATGbits	set	3967
   123   000000                     _TRISAbits	set	3969
   124   000000                     _SSP2CON2	set	3802
   125   000000                     _TRISDbits	set	3972
   126   000000                     _SSP2STAT	set	3800
   127   000000                     _SSP2BUF	set	3797
   128   000000                     _IPR0bits	set	3615
   129   000000                     _PIE0bits	set	3625
   130   000000                     _PIE4bits	set	3629
   131   000000                     _PIR4bits	set	3639
   132   000000                     _RC0PPS	set	3682
   133   000000                     _RC7PPS	set	3689
   134   000000                     _RD5PPS	set	3695
   135   000000                     _RE2PPS	set	3700
   136   000000                     _RD6PPS	set	3696
   137   000000                     _CCPR2H	set	4006
   138   000000                     _CCPR1H	set	4010
   139   000000                     _T2PR	set	4028
   140   000000                     _T2CONbits	set	4029
   141   000000                     _TRISCbits	set	3971
   142   000000                     _LATCbits	set	3963
   143   000000                     _LATEbits	set	3965
   144   000000                     _LATFbits	set	3966
   145   000000                     _RE4PPS	set	3702
   146   000000                     _RG6PPS	set	3720
   147   000000                     _TMR0L	set	4051
   148   000000                     _TMR0H	set	4052
   149   000000                     _T0CON0bits	set	4053
   150   000000                     _T0CON1bits	set	4054
   151   000000                     _T2CLKCONbits	set	4031
   152   000000                     _T2HLTbits	set	4030
   153   000000                     _CCP1CONbits	set	4011
   154   000000                     _CCPTMRS0bits	set	4013
   155   000000                     _CCP2CONbits	set	4007
   156   000000                     _CCP3CONbits	set	3878
   157   000000                     _CCP4CONbits	set	3874
   158   000000                     _PIR0bits	set	3635
   159   000000                     _INTCONbits	set	4082
   160                           
   161                           	psect	smallconst
   162   000E00                     __psmallconst:
   163                           	callstack 0
   164   000E00  00                 	db	0
   165   000E01                     STR_1:
   166   000E01  0A                 	db	10
   167   000E02  52                 	db	82	;'R'
   168   000E03  47                 	db	71	;'G'
   169   000E04  42                 	db	66	;'B'
   170   000E05  43                 	db	67	;'C'
   171   000E06  20                 	db	32
   172   000E07  3D                 	db	61	;'='
   173   000E08  20                 	db	32
   174   000E09  25                 	db	37
   175   000E0A  30                 	db	48	;'0'
   176   000E0B  35                 	db	53	;'5'
   177   000E0C  64                 	db	100	;'d'
   178   000E0D  20                 	db	32
   179   000E0E  25                 	db	37
   180   000E0F  30                 	db	48	;'0'
   181   000E10  35                 	db	53	;'5'
   182   000E11  64                 	db	100	;'d'
   183   000E12  20                 	db	32
   184   000E13  25                 	db	37
   185   000E14  30                 	db	48	;'0'
   186   000E15  35                 	db	53	;'5'
   187   000E16  64                 	db	100	;'d'
   188   000E17  20                 	db	32
   189   000E18  25                 	db	37
   190   000E19  30                 	db	48	;'0'
   191   000E1A  35                 	db	53	;'5'
   192   000E1B  64                 	db	100	;'d'
   193   000E1C  00                 	db	0
   194   000E1D                     STR_2:
   195   000E1D  0A                 	db	10
   196   000E1E  52                 	db	82	;'R'
   197   000E1F  65                 	db	101	;'e'
   198   000E20  64                 	db	100	;'d'
   199   000E21  20                 	db	32
   200   000E22  3D                 	db	61	;'='
   201   000E23  20                 	db	32
   202   000E24  25                 	db	37
   203   000E25  30                 	db	48	;'0'
   204   000E26  35                 	db	53	;'5'
   205   000E27  64                 	db	100	;'d'
   206   000E28  00                 	db	0
   207   000E29  00                 	db	0	; dummy byte at the end
   208   000000                     
   209                           ; #config settings
   210                           
   211                           	psect	cinit
   212   002084                     __pcinit:
   213                           	callstack 0
   214   002084                     start_initialization:
   215                           	callstack 0
   216   002084                     __initialization:
   217                           	callstack 0
   218                           
   219                           ; Clear objects allocated to BANK2 (112 bytes)
   220   002084  EE02  F08C         	lfsr	0,__pbssBANK2
   221   002088  0E70               	movlw	112
   222   00208A                     clear_0:
   223   00208A  6AEE               	clrf	postinc0,c
   224   00208C  06E8               	decf	wreg,f,c
   225   00208E  E1FD               	bnz	clear_0
   226                           
   227                           ; Clear objects allocated to BANK0 (1 bytes)
   228   002090  0100               	movlb	0
   229   002092  6BFC               	clrf	__pbssBANK0& (0+255),b
   230                           
   231                           ; Clear objects allocated to COMRAM (9 bytes)
   232   002094  EE00  F04D         	lfsr	0,__pbssCOMRAM
   233   002098  0E09               	movlw	9
   234   00209A                     clear_1:
   235   00209A  6AEE               	clrf	postinc0,c
   236   00209C  06E8               	decf	wreg,f,c
   237   00209E  E1FD               	bnz	clear_1
   238   0020A0                     end_of_initialization:
   239                           	callstack 0
   240   0020A0                     __end_of__initialization:
   241                           	callstack 0
   242   0020A0  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   243   0020A2  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   244   0020A4  0100               	movlb	0
   245   0020A6  EFCC  F009         	goto	_main	;jump to C main() function
   246                           
   247                           	psect	bssCOMRAM
   248   00004D                     __pbssCOMRAM:
   249                           	callstack 0
   250   00004D                     _width:
   251                           	callstack 0
   252   00004D                     	ds	2
   253   00004F                     _prec:
   254                           	callstack 0
   255   00004F                     	ds	2
   256   000051                     _flags:
   257                           	callstack 0
   258   000051                     	ds	1
   259   000052                     _TxBufReadCnt:
   260                           	callstack 0
   261   000052                     	ds	1
   262   000053                     _TxBufWriteCnt:
   263                           	callstack 0
   264   000053                     	ds	1
   265   000054                     _RxBufReadCnt:
   266                           	callstack 0
   267   000054                     	ds	1
   268   000055                     _RxBufWriteCnt:
   269                           	callstack 0
   270   000055                     	ds	1
   271                           
   272                           	psect	bssBANK0
   273   0000FC                     __pbssBANK0:
   274                           	callstack 0
   275   0000FC                     _tmr_ovf:
   276                           	callstack 0
   277   0000FC                     	ds	1
   278                           
   279                           	psect	bssBANK2
   280   00028C                     __pbssBANK2:
   281                           	callstack 0
   282   00028C                     _EUSART4TXbuf:
   283                           	callstack 0
   284   00028C                     	ds	60
   285   0002C8                     _EUSART4RXbuf:
   286                           	callstack 0
   287   0002C8                     	ds	20
   288   0002DC                     _dbuf:
   289                           	callstack 0
   290   0002DC                     	ds	32
   291                           
   292                           	psect	cstackBANK2
   293   000200                     __pcstackBANK2:
   294                           	callstack 0
   295   000200                     main@readingsC:
   296                           	callstack 0
   297                           
   298                           ; 100 bytes @ 0x0
   299   000200                     	ds	100
   300   000264                     main@string2:
   301                           	callstack 0
   302                           
   303                           ; 40 bytes @ 0x64
   304   000264                     	ds	40
   305                           
   306                           	psect	cstackBANK1
   307   000100                     __pcstackBANK1:
   308                           	callstack 0
   309   000100                     main@readingsG:
   310                           	callstack 0
   311                           
   312                           ; 100 bytes @ 0x0
   313   000100                     	ds	100
   314   000164                     main@readingsB:
   315                           	callstack 0
   316                           
   317                           ; 100 bytes @ 0x64
   318   000164                     	ds	100
   319   0001C8                     main@string:
   320                           	callstack 0
   321                           
   322                           ; 40 bytes @ 0xC8
   323   0001C8                     	ds	40
   324   0001F0                     main@initial_color:
   325                           	callstack 0
   326                           
   327                           ; 8 bytes @ 0xF0
   328   0001F0                     	ds	8
   329                           
   330                           	psect	cstackBANK0
   331   000060                     __pcstackBANK0:
   332                           	callstack 0
   333   000060                     vfpfcnvrt@fp:
   334                           	callstack 0
   335                           
   336                           ; 2 bytes @ 0x0
   337   000060                     	ds	2
   338   000062                     vfpfcnvrt@fmt:
   339                           	callstack 0
   340                           
   341                           ; 2 bytes @ 0x2
   342   000062                     	ds	2
   343   000064                     vfpfcnvrt@ap:
   344                           	callstack 0
   345                           
   346                           ; 2 bytes @ 0x4
   347   000064                     	ds	2
   348   000066                     vfpfcnvrt@convarg:
   349                           	callstack 0
   350                           
   351                           ; 8 bytes @ 0x6
   352   000066                     	ds	8
   353   00006E                     vfpfcnvrt@done:
   354                           	callstack 0
   355                           
   356                           ; 2 bytes @ 0xE
   357   00006E                     	ds	2
   358   000070                     vfpfcnvrt@cp:
   359                           	callstack 0
   360                           
   361                           ; 2 bytes @ 0x10
   362   000070                     	ds	2
   363   000072                     ?_vfprintf:
   364                           	callstack 0
   365   000072                     vfprintf@fp:
   366                           	callstack 0
   367                           
   368                           ; 2 bytes @ 0x12
   369   000072                     	ds	2
   370   000074                     vfprintf@fmt:
   371                           	callstack 0
   372                           
   373                           ; 2 bytes @ 0x14
   374   000074                     	ds	2
   375   000076                     vfprintf@ap:
   376                           	callstack 0
   377                           
   378                           ; 2 bytes @ 0x16
   379   000076                     	ds	2
   380   000078                     ?_sprintf:
   381                           	callstack 0
   382   000078                     sprintf@s:
   383                           	callstack 0
   384                           
   385                           ; 2 bytes @ 0x18
   386   000078                     	ds	2
   387   00007A                     sprintf@fmt:
   388                           	callstack 0
   389                           
   390                           ; 2 bytes @ 0x1A
   391   00007A                     	ds	10
   392   000084                     sprintf@ap:
   393                           	callstack 0
   394                           
   395                           ; 2 bytes @ 0x24
   396   000084                     	ds	2
   397   000086                     sprintf@f:
   398                           	callstack 0
   399                           
   400                           ; 11 bytes @ 0x26
   401   000086                     	ds	11
   402   000091                     ??_main:
   403                           
   404                           ; 1 bytes @ 0x31
   405   000091                     	ds	4
   406   000095                     main@readingsR:
   407                           	callstack 0
   408                           
   409                           ; 100 bytes @ 0x35
   410   000095                     	ds	100
   411   0000F9                     main@cont:
   412                           	callstack 0
   413                           
   414                           ; 1 bytes @ 0x99
   415   0000F9                     	ds	1
   416   0000FA                     main@i:
   417                           	callstack 0
   418                           
   419                           ; 1 bytes @ 0x9A
   420   0000FA                     	ds	1
   421   0000FB                     main@a:
   422                           	callstack 0
   423                           
   424                           ; 1 bytes @ 0x9B
   425   0000FB                     	ds	1
   426                           
   427                           	psect	cstackCOMRAM
   428   000001                     __pcstackCOMRAM:
   429                           	callstack 0
   430   000001                     ??_getCharFromTxBuf:
   431   000001                     putCharToRxBuf@byte:
   432                           	callstack 0
   433   000001                     
   434                           ; 1 bytes @ 0x0
   435   000001                     	ds	2
   436   000003                     ??_HighISR:
   437                           
   438                           ; 1 bytes @ 0x2
   439   000003                     	ds	2
   440   000005                     HighISR@a:
   441                           	callstack 0
   442                           
   443                           ; 1 bytes @ 0x4
   444   000005                     	ds	1
   445   000006                     ??_LowISR:
   446                           
   447                           ; 1 bytes @ 0x5
   448   000006                     	ds	4
   449   00000A                     ??_I2C_2_Master_Idle:
   450   00000A                     ??_getCharFromRxBuf:
   451   00000A                     ?_isdigit:
   452                           	callstack 0
   453   00000A                     ?_isspace:
   454                           	callstack 0
   455   00000A                     ?___wmul:
   456                           	callstack 0
   457   00000A                     ?___aodiv:
   458                           	callstack 0
   459   00000A                     ?___aomod:
   460                           	callstack 0
   461   00000A                     putCharToTxBuf@byte:
   462                           	callstack 0
   463   00000A                     ___wmul@multiplier:
   464                           	callstack 0
   465   00000A                     isdigit@c:
   466                           	callstack 0
   467   00000A                     isspace@c:
   468                           	callstack 0
   469   00000A                     fputc@c:
   470                           	callstack 0
   471   00000A                     ___aodiv@dividend:
   472                           	callstack 0
   473   00000A                     ___aomod@dividend:
   474                           	callstack 0
   475                           
   476                           ; 8 bytes @ 0x9
   477   00000A                     	ds	1
   478   00000B                     ??_I2C_2_Master_Read:
   479   00000B                     I2C_2_Master_Write@data_byte:
   480                           	callstack 0
   481   00000B                     TxBufferedString@string:
   482                           	callstack 0
   483                           
   484                           ; 2 bytes @ 0xA
   485   00000B                     	ds	1
   486   00000C                     ??_isdigit:
   487   00000C                     ??_isspace:
   488   00000C                     color_writetoaddr@value:
   489                           	callstack 0
   490   00000C                     I2C_2_Master_Read@ack:
   491                           	callstack 0
   492   00000C                     ___wmul@multiplicand:
   493                           	callstack 0
   494   00000C                     fputc@fp:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0xB
   498   00000C                     	ds	1
   499   00000D                     color_writetoaddr@address:
   500                           	callstack 0
   501   00000D                     I2C_2_Master_Read@tmp:
   502                           	callstack 0
   503                           
   504                           ; 1 bytes @ 0xC
   505   00000D                     	ds	1
   506   00000E                     ??_fputc:
   507   00000E                     ??_color_click_init:
   508   00000E                     ?_color_read_Red:
   509                           	callstack 0
   510   00000E                     ?_color_read_Green:
   511                           	callstack 0
   512   00000E                     ?_color_read_Blue:
   513                           	callstack 0
   514   00000E                     ?_color_read_Clear:
   515                           	callstack 0
   516   00000E                     _isspace$2347:
   517                           	callstack 0
   518   00000E                     ___wmul@product:
   519                           	callstack 0
   520                           
   521                           ; 2 bytes @ 0xD
   522   00000E                     	ds	2
   523   000010                     ??_color_read_Red:
   524   000010                     ??_color_read_Green:
   525   000010                     ??_color_read_Blue:
   526   000010                     ??_color_read_Clear:
   527   000010                     ?_atoi:
   528                           	callstack 0
   529   000010                     atoi@s:
   530                           	callstack 0
   531                           
   532                           ; 2 bytes @ 0xF
   533   000010                     	ds	2
   534   000012                     ??_atoi:
   535   000012                     ___aodiv@divisor:
   536                           	callstack 0
   537   000012                     ___aomod@divisor:
   538                           	callstack 0
   539                           
   540                           ; 8 bytes @ 0x11
   541   000012                     	ds	1
   542   000013                     color_read_Red@tmp:
   543                           	callstack 0
   544   000013                     color_read_Green@tmp:
   545                           	callstack 0
   546   000013                     color_read_Blue@tmp:
   547                           	callstack 0
   548   000013                     color_read_Clear@tmp:
   549                           	callstack 0
   550   000013                     fputs@s:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0x12
   554   000013                     	ds	2
   555   000015                     Update_RGBC@tempval:
   556                           	callstack 0
   557   000015                     atoi@neg:
   558                           	callstack 0
   559   000015                     fputs@fp:
   560                           	callstack 0
   561                           
   562                           ; 2 bytes @ 0x14
   563   000015                     	ds	2
   564   000017                     fputs@c:
   565                           	callstack 0
   566   000017                     atoi@n:
   567                           	callstack 0
   568                           
   569                           ; 2 bytes @ 0x16
   570   000017                     	ds	1
   571   000018                     fputs@i:
   572                           	callstack 0
   573                           
   574                           ; 2 bytes @ 0x17
   575   000018                     	ds	2
   576   00001A                     ___aodiv@counter:
   577                           	callstack 0
   578   00001A                     ___aomod@counter:
   579                           	callstack 0
   580   00001A                     pad@fp:
   581                           	callstack 0
   582                           
   583                           ; 2 bytes @ 0x19
   584   00001A                     	ds	1
   585   00001B                     ___aodiv@sign:
   586                           	callstack 0
   587   00001B                     ___aomod@sign:
   588                           	callstack 0
   589                           
   590                           ; 1 bytes @ 0x1A
   591   00001B                     	ds	1
   592   00001C                     ?_abs:
   593                           	callstack 0
   594   00001C                     pad@buf:
   595                           	callstack 0
   596   00001C                     abs@a:
   597                           	callstack 0
   598   00001C                     ___aodiv@quotient:
   599                           	callstack 0
   600                           
   601                           ; 8 bytes @ 0x1B
   602   00001C                     	ds	2
   603   00001E                     ??_abs:
   604   00001E                     pad@p:
   605                           	callstack 0
   606                           
   607                           ; 2 bytes @ 0x1D
   608   00001E                     	ds	2
   609   000020                     ??_pad:
   610                           
   611                           ; 1 bytes @ 0x1F
   612   000020                     	ds	1
   613   000021                     pad@i:
   614                           	callstack 0
   615                           
   616                           ; 2 bytes @ 0x20
   617   000021                     	ds	2
   618   000023                     pad@w:
   619                           	callstack 0
   620                           
   621                           ; 2 bytes @ 0x22
   622   000023                     	ds	2
   623   000025                     dtoa@fp:
   624                           	callstack 0
   625                           
   626                           ; 2 bytes @ 0x24
   627   000025                     	ds	2
   628   000027                     dtoa@d:
   629                           	callstack 0
   630                           
   631                           ; 8 bytes @ 0x26
   632   000027                     	ds	8
   633   00002F                     ??_dtoa:
   634                           
   635                           ; 1 bytes @ 0x2E
   636   00002F                     	ds	8
   637   000037                     _dtoa$2298:
   638                           	callstack 0
   639                           
   640                           ; 2 bytes @ 0x36
   641   000037                     	ds	2
   642   000039                     dtoa@p:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0x38
   646   000039                     	ds	2
   647   00003B                     dtoa@w:
   648                           	callstack 0
   649                           
   650                           ; 2 bytes @ 0x3A
   651   00003B                     	ds	2
   652   00003D                     dtoa@n:
   653                           	callstack 0
   654                           
   655                           ; 8 bytes @ 0x3C
   656   00003D                     	ds	8
   657   000045                     dtoa@s:
   658                           	callstack 0
   659                           
   660                           ; 1 bytes @ 0x44
   661   000045                     	ds	1
   662   000046                     dtoa@i:
   663                           	callstack 0
   664                           
   665                           ; 2 bytes @ 0x45
   666   000046                     	ds	2
   667   000048                     ??_vfpfcnvrt:
   668                           
   669                           ; 1 bytes @ 0x47
   670   000048                     	ds	3
   671   00004B                     vfprintf@cfmt:
   672                           	callstack 0
   673                           
   674                           ; 2 bytes @ 0x4A
   675   00004B                     	ds	2
   676   00004D                     
   677                           ; 1 bytes @ 0x4C
   678 ;;
   679 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   680 ;;
   681 ;; *************** function _main *****************
   682 ;; Defined at:
   683 ;;		line 20 in file "main_calibration.c"
   684 ;; Parameters:    Size  Location     Type
   685 ;;		None
   686 ;; Auto vars:     Size  Location     Type
   687 ;;  string         40  200[BANK1 ] unsigned char [40]
   688 ;;  string2        40  100[BANK2 ] unsigned char [40]
   689 ;;  i               1  154[BANK0 ] unsigned char 
   690 ;;  cont            1  153[BANK0 ] unsigned char 
   691 ;;  readingsC     100    0[BANK2 ] unsigned char [100]
   692 ;;  readingsB     100  100[BANK1 ] unsigned char [100]
   693 ;;  readingsG     100    0[BANK1 ] unsigned char [100]
   694 ;;  readingsR     100   53[BANK0 ] unsigned char [100]
   695 ;;  initial_colo    8  240[BANK1 ] struct RGB_val
   696 ;;  a               1  155[BANK0 ] unsigned char 
   697 ;; Return value:  Size  Location     Type
   698 ;;                  1    wreg      void 
   699 ;; Registers used:
   700 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   701 ;; Tracked objects:
   702 ;;		On entry : 0/0
   703 ;;		On exit  : 0/0
   704 ;;		Unchanged: 0/0
   705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   707 ;;      Locals:         0     103     248     140       0       0       0       0       0       0       0       0       
      +0       0       0
   708 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   709 ;;      Totals:         0     107     248     140       0       0       0       0       0       0       0       0       
      +0       0       0
   710 ;;Total ram usage:      495 bytes
   711 ;; Hardware stack levels required when called: 11
   712 ;; This function calls:
   713 ;;		_Interrupts_init
   714 ;;		_LED_init
   715 ;;		_Timer0_init
   716 ;;		_TxBufferedString
   717 ;;		_Update_RGBC
   718 ;;		_WhiteLight
   719 ;;		_color_click_init
   720 ;;		_getCharFromRxBuf
   721 ;;		_initUSART4
   722 ;;		_isDataInRxBuf
   723 ;;		_sendTxBuf
   724 ;;		_sprintf
   725 ;; This function is called by:
   726 ;;		Startup code after reset
   727 ;; This function uses a non-reentrant model
   728 ;;
   729                           
   730                           	psect	text0
   731   001398                     __ptext0:
   732                           	callstack 0
   733   001398                     _main:
   734                           	callstack 20
   735   001398                     
   736                           ;main_calibration.c: 23:     RGB_val initial_color;;main_calibration.c: 24:     initial_
      +                          color.R = 0;
   737   001398  0E00               	movlw	0
   738   00139A  0101               	movlb	1	; () banked
   739   00139C  6FF1               	movwf	(main@initial_color+1)& (0+255),b
   740   00139E  0E00               	movlw	0
   741   0013A0  6FF0               	movwf	main@initial_color& (0+255),b
   742                           
   743                           ;main_calibration.c: 25:     initial_color.G = 0;
   744   0013A2  0E00               	movlw	0
   745   0013A4  6FF3               	movwf	(main@initial_color+3)& (0+255),b
   746   0013A6  0E00               	movlw	0
   747   0013A8  6FF2               	movwf	(main@initial_color+2)& (0+255),b
   748                           
   749                           ;main_calibration.c: 26:     initial_color.B = 0;
   750   0013AA  0E00               	movlw	0
   751   0013AC  6FF5               	movwf	(main@initial_color+5)& (0+255),b
   752   0013AE  0E00               	movlw	0
   753   0013B0  6FF4               	movwf	(main@initial_color+4)& (0+255),b
   754                           
   755                           ;main_calibration.c: 27:     initial_color.C = 0;
   756   0013B2  0E00               	movlw	0
   757   0013B4  6FF7               	movwf	(main@initial_color+7)& (0+255),b
   758   0013B6  0E00               	movlw	0
   759   0013B8  6FF6               	movwf	(main@initial_color+6)& (0+255),b
   760   0013BA                     
   761                           ; BSR set to: 1
   762                           ;main_calibration.c: 29:     LED_init();
   763   0013BA  ECE9  F010         	call	_LED_init	;wreg free
   764   0013BE                     
   765                           ;main_calibration.c: 30:     color_click_init();
   766   0013BE  EC7B  F00F         	call	_color_click_init	;wreg free
   767   0013C2                     
   768                           ;main_calibration.c: 31:     Interrupts_init();
   769   0013C2  ECC8  F010         	call	_Interrupts_init	;wreg free
   770   0013C6                     
   771                           ;main_calibration.c: 32:     initUSART4();
   772   0013C6  EC88  F010         	call	_initUSART4	;wreg free
   773   0013CA                     
   774                           ;main_calibration.c: 33:     Timer0_init();
   775   0013CA  EC78  F010         	call	_Timer0_init	;wreg free
   776   0013CE                     
   777                           ;main_calibration.c: 35:     char a = 0;
   778   0013CE  0E00               	movlw	0
   779   0013D0  0100               	movlb	0	; () banked
   780   0013D2  6FFB               	movwf	main@a& (0+255),b
   781   0013D4                     l3251:
   782                           
   783                           ;main_calibration.c: 42:         WhiteLight();
   784   0013D4  ECE5  F010         	call	_WhiteLight	;wreg free
   785   0013D8                     
   786                           ;main_calibration.c: 43:         Update_RGBC(&initial_color);
   787   0013D8  0EF0               	movlw	low main@initial_color
   788   0013DA  6E15               	movwf	Update_RGBC@tempval^0,c
   789   0013DC  0E01               	movlw	high main@initial_color
   790   0013DE  6E16               	movwf	(Update_RGBC@tempval+1)^0,c
   791   0013E0  ECA3  F00D         	call	_Update_RGBC	;wreg free
   792                           
   793                           ;main_calibration.c: 46:         while(tmr_ovf==1 && a<100){
   794   0013E4  EF17  F00A         	goto	l3261
   795   0013E8                     l3255:
   796                           
   797                           ; BSR set to: 0
   798                           ;main_calibration.c: 47:             readingsR[a] = initial_color.R;
   799   0013E8  0E95               	movlw	low main@readingsR
   800   0013EA  25FB               	addwf	main@a& (0+255),w,b
   801   0013EC  6ED9               	movwf	fsr2l,c
   802   0013EE  6ADA               	clrf	fsr2h,c
   803   0013F0  0E00               	movlw	high main@readingsR
   804   0013F2  22DA               	addwfc	fsr2h,f,c
   805   0013F4  C1F0  FFDF         	movff	main@initial_color,indf2
   806                           
   807                           ;main_calibration.c: 48:             readingsG[a] = initial_color.G;
   808   0013F8  0E00               	movlw	low main@readingsG
   809   0013FA  25FB               	addwf	main@a& (0+255),w,b
   810   0013FC  6ED9               	movwf	fsr2l,c
   811   0013FE  6ADA               	clrf	fsr2h,c
   812   001400  0E01               	movlw	high main@readingsG
   813   001402  22DA               	addwfc	fsr2h,f,c
   814   001404  C1F2  FFDF         	movff	main@initial_color+2,indf2
   815                           
   816                           ;main_calibration.c: 49:             readingsB[a] = initial_color.B;
   817   001408  0E64               	movlw	low main@readingsB
   818   00140A  25FB               	addwf	main@a& (0+255),w,b
   819   00140C  6ED9               	movwf	fsr2l,c
   820   00140E  6ADA               	clrf	fsr2h,c
   821   001410  0E01               	movlw	high main@readingsB
   822   001412  22DA               	addwfc	fsr2h,f,c
   823   001414  C1F4  FFDF         	movff	main@initial_color+4,indf2
   824                           
   825                           ;main_calibration.c: 50:             readingsC[a] = initial_color.C;
   826   001418  0E00               	movlw	low main@readingsC
   827   00141A  25FB               	addwf	main@a& (0+255),w,b
   828   00141C  6ED9               	movwf	fsr2l,c
   829   00141E  6ADA               	clrf	fsr2h,c
   830   001420  0E02               	movlw	high main@readingsC
   831   001422  22DA               	addwfc	fsr2h,f,c
   832   001424  C1F6  FFDF         	movff	main@initial_color+6,indf2
   833   001428                     
   834                           ; BSR set to: 0
   835                           ;main_calibration.c: 51:             a++;
   836   001428  2BFB               	incf	main@a& (0+255),f,b
   837   00142A                     
   838                           ; BSR set to: 0
   839                           ;main_calibration.c: 52:             tmr_ovf = 0;
   840   00142A  0E00               	movlw	0
   841   00142C  6FFC               	movwf	_tmr_ovf& (0+255),b
   842   00142E                     l3261:
   843                           
   844                           ;main_calibration.c: 46:         while(tmr_ovf==1 && a<100){
   845   00142E  0100               	movlb	0	; () banked
   846   001430  05FC               	decf	_tmr_ovf& (0+255),w,b
   847   001432  A4D8               	btfss	status,2,c
   848   001434  EF1E  F00A         	goto	u2471
   849   001438  EF20  F00A         	goto	u2470
   850   00143C                     u2471:
   851   00143C  EF28  F00A         	goto	l3265
   852   001440                     u2470:
   853   001440                     
   854                           ; BSR set to: 0
   855   001440  0E63               	movlw	99
   856   001442  65FB               	cpfsgt	main@a& (0+255),b
   857   001444  EF26  F00A         	goto	u2481
   858   001448  EF28  F00A         	goto	u2480
   859   00144C                     u2481:
   860   00144C  EFF4  F009         	goto	l3255
   861   001450                     u2480:
   862   001450                     l3265:
   863                           
   864                           ; BSR set to: 0
   865                           ;main_calibration.c: 56:         char cont = 0x00;
   866   001450  0E00               	movlw	0
   867   001452  6FF9               	movwf	main@cont& (0+255),b
   868                           
   869                           ;main_calibration.c: 58:         while(isDataInRxBuf()){
   870   001454  EF30  F00A         	goto	l3269
   871   001458                     l3267:
   872                           
   873                           ;main_calibration.c: 60:             cont = getCharFromRxBuf();
   874   001458  ECC3  F00F         	call	_getCharFromRxBuf	;wreg free
   875   00145C  0100               	movlb	0	; () banked
   876   00145E  6FF9               	movwf	main@cont& (0+255),b
   877   001460                     l3269:
   878                           
   879                           ; BSR set to: 0
   880                           ;main_calibration.c: 58:         while(isDataInRxBuf()){
   881   001460  ECB0  F010         	call	_isDataInRxBuf	;wreg free
   882   001464  0900               	iorlw	0
   883   001466  A4D8               	btfss	status,2,c
   884   001468  EF38  F00A         	goto	u2491
   885   00146C  EF3A  F00A         	goto	u2490
   886   001470                     u2491:
   887   001470  EF2C  F00A         	goto	l3267
   888   001474                     u2490:
   889   001474                     
   890                           ;main_calibration.c: 65:         if(cont == 0x10){
   891   001474  0E10               	movlw	16
   892   001476  0100               	movlb	0	; () banked
   893   001478  19F9               	xorwf	main@cont& (0+255),w,b
   894   00147A  A4D8               	btfss	status,2,c
   895   00147C  EF42  F00A         	goto	u2501
   896   001480  EF44  F00A         	goto	u2500
   897   001484                     u2501:
   898   001484  EFA2  F00A         	goto	l3289
   899   001488                     u2500:
   900   001488                     
   901                           ; BSR set to: 0
   902                           ;main_calibration.c: 66:             unsigned char i;;main_calibration.c: 67:           
      +                            for(i=0;i<a;i++){
   903   001488  0E00               	movlw	0
   904   00148A  6FFA               	movwf	main@i& (0+255),b
   905   00148C  EF95  F00A         	goto	l3285
   906   001490                     l3275:
   907                           
   908                           ; BSR set to: 0
   909                           ;main_calibration.c: 69:                 char string[40];;main_calibration.c: 70:       
      +                                    sprintf(string,"\nRGBC = %05d %05d %05d %05d",readingsR[i],readingsG[i],readin
      +                          gsB[i],readingsC[i]);
   910   001490  0EC8               	movlw	low main@string
   911   001492  6F78               	movwf	sprintf@s& (0+255),b
   912   001494  0E01               	movlw	high main@string
   913   001496  6F79               	movwf	(sprintf@s+1)& (0+255),b
   914   001498  0E01               	movlw	low STR_1
   915   00149A  6F7A               	movwf	sprintf@fmt& (0+255),b
   916   00149C  0E0E               	movlw	high STR_1
   917   00149E  6F7B               	movwf	(sprintf@fmt+1)& (0+255),b
   918   0014A0  0E95               	movlw	low main@readingsR
   919   0014A2  25FA               	addwf	main@i& (0+255),w,b
   920   0014A4  6ED9               	movwf	fsr2l,c
   921   0014A6  6ADA               	clrf	fsr2h,c
   922   0014A8  0E00               	movlw	high main@readingsR
   923   0014AA  22DA               	addwfc	fsr2h,f,c
   924   0014AC  50DF               	movf	indf2,w,c
   925   0014AE  6F91               	movwf	??_main& (0+255),b
   926   0014B0  5191               	movf	??_main& (0+255),w,b
   927   0014B2  6F7C               	movwf	(?_sprintf+4)& (0+255),b
   928   0014B4  6B7D               	clrf	(?_sprintf+5)& (0+255),b
   929   0014B6  0E00               	movlw	low main@readingsG
   930   0014B8  25FA               	addwf	main@i& (0+255),w,b
   931   0014BA  6ED9               	movwf	fsr2l,c
   932   0014BC  6ADA               	clrf	fsr2h,c
   933   0014BE  0E01               	movlw	high main@readingsG
   934   0014C0  22DA               	addwfc	fsr2h,f,c
   935   0014C2  50DF               	movf	indf2,w,c
   936   0014C4  6F92               	movwf	(??_main+1)& (0+255),b
   937   0014C6  5192               	movf	(??_main+1)& (0+255),w,b
   938   0014C8  6F7E               	movwf	(?_sprintf+6)& (0+255),b
   939   0014CA  6B7F               	clrf	(?_sprintf+7)& (0+255),b
   940   0014CC  0E64               	movlw	low main@readingsB
   941   0014CE  25FA               	addwf	main@i& (0+255),w,b
   942   0014D0  6ED9               	movwf	fsr2l,c
   943   0014D2  6ADA               	clrf	fsr2h,c
   944   0014D4  0E01               	movlw	high main@readingsB
   945   0014D6  22DA               	addwfc	fsr2h,f,c
   946   0014D8  50DF               	movf	indf2,w,c
   947   0014DA  6F93               	movwf	(??_main+2)& (0+255),b
   948   0014DC  5193               	movf	(??_main+2)& (0+255),w,b
   949   0014DE  6F80               	movwf	(?_sprintf+8)& (0+255),b
   950   0014E0  6B81               	clrf	(?_sprintf+9)& (0+255),b
   951   0014E2  0E00               	movlw	low main@readingsC
   952   0014E4  25FA               	addwf	main@i& (0+255),w,b
   953   0014E6  6ED9               	movwf	fsr2l,c
   954   0014E8  6ADA               	clrf	fsr2h,c
   955   0014EA  0E02               	movlw	high main@readingsC
   956   0014EC  22DA               	addwfc	fsr2h,f,c
   957   0014EE  50DF               	movf	indf2,w,c
   958   0014F0  6F94               	movwf	(??_main+3)& (0+255),b
   959   0014F2  5194               	movf	(??_main+3)& (0+255),w,b
   960   0014F4  6F82               	movwf	(?_sprintf+10)& (0+255),b
   961   0014F6  6B83               	clrf	(?_sprintf+11)& (0+255),b
   962   0014F8  EC2C  F00E         	call	_sprintf	;wreg free
   963   0014FC                     
   964                           ;main_calibration.c: 71:                 TxBufferedString(string);
   965   0014FC  0EC8               	movlw	low main@string
   966   0014FE  6E0B               	movwf	TxBufferedString@string^0,c
   967   001500  0E01               	movlw	high main@string
   968   001502  6E0C               	movwf	(TxBufferedString@string+1)^0,c
   969   001504  EC95  F00F         	call	_TxBufferedString	;wreg free
   970   001508                     
   971                           ;main_calibration.c: 73:                 sendTxBuf();
   972   001508  EC97  F010         	call	_sendTxBuf	;wreg free
   973   00150C                     
   974                           ;main_calibration.c: 74:                 _delay((unsigned long)((250)*(64000000/4000.0))
      +                          );
   975   00150C  0E15               	movlw	21
   976   00150E  0100               	movlb	0	; () banked
   977   001510  6F92               	movwf	(??_main+1)& (0+255),b
   978   001512  0E4B               	movlw	75
   979   001514  6F91               	movwf	??_main& (0+255),b
   980   001516  0EBE               	movlw	190
   981   001518                     u2537:
   982   001518  2EE8               	decfsz	wreg,f,c
   983   00151A  D7FE               	bra	u2537
   984   00151C  2F91               	decfsz	??_main& (0+255),f,b
   985   00151E  D7FC               	bra	u2537
   986   001520  2F92               	decfsz	(??_main+1)& (0+255),f,b
   987   001522  D7FA               	bra	u2537
   988   001524  F000               	nop	
   989   001526                     
   990                           ;main_calibration.c: 75:             }
   991   001526  0100               	movlb	0	; () banked
   992   001528  2BFA               	incf	main@i& (0+255),f,b
   993   00152A                     l3285:
   994                           
   995                           ; BSR set to: 0
   996   00152A  51FB               	movf	main@a& (0+255),w,b
   997   00152C  5DFA               	subwf	main@i& (0+255),w,b
   998   00152E  A0D8               	btfss	status,0,c
   999   001530  EF9C  F00A         	goto	u2511
  1000   001534  EF9E  F00A         	goto	u2510
  1001   001538                     u2511:
  1002   001538  EF48  F00A         	goto	l3275
  1003   00153C                     u2510:
  1004   00153C                     
  1005                           ; BSR set to: 0
  1006                           ;main_calibration.c: 76:             cont = 0x00;
  1007   00153C  0E00               	movlw	0
  1008   00153E  6FF9               	movwf	main@cont& (0+255),b
  1009                           
  1010                           ;main_calibration.c: 77:             a = 0;
  1011   001540  0E00               	movlw	0
  1012   001542  6FFB               	movwf	main@a& (0+255),b
  1013   001544                     l3289:
  1014                           
  1015                           ; BSR set to: 0
  1016                           ;main_calibration.c: 81:         if(cont == 0x01){
  1017   001544  05F9               	decf	main@cont& (0+255),w,b
  1018   001546  A4D8               	btfss	status,2,c
  1019   001548  EFA8  F00A         	goto	u2521
  1020   00154C  EFAA  F00A         	goto	u2520
  1021   001550                     u2521:
  1022   001550  EFEA  F009         	goto	l3251
  1023   001554                     u2520:
  1024   001554                     
  1025                           ; BSR set to: 0
  1026                           ;main_calibration.c: 83:             char string2[40];;main_calibration.c: 84:          
      +                             sprintf(string2,"\nRed = %05d",initial_color.R);
  1027   001554  0E64               	movlw	low main@string2
  1028   001556  6F78               	movwf	sprintf@s& (0+255),b
  1029   001558  0E02               	movlw	high main@string2
  1030   00155A  6F79               	movwf	(sprintf@s+1)& (0+255),b
  1031   00155C  0E1D               	movlw	low STR_2
  1032   00155E  6F7A               	movwf	sprintf@fmt& (0+255),b
  1033   001560  0E0E               	movlw	high STR_2
  1034   001562  6F7B               	movwf	(sprintf@fmt+1)& (0+255),b
  1035   001564  C1F0  F07C         	movff	main@initial_color,?_sprintf+4
  1036   001568  C1F1  F07D         	movff	main@initial_color+1,?_sprintf+5
  1037   00156C  EC2C  F00E         	call	_sprintf	;wreg free
  1038   001570                     
  1039                           ;main_calibration.c: 85:             TxBufferedString(string2);
  1040   001570  0E64               	movlw	low main@string2
  1041   001572  6E0B               	movwf	TxBufferedString@string^0,c
  1042   001574  0E02               	movlw	high main@string2
  1043   001576  6E0C               	movwf	(TxBufferedString@string+1)^0,c
  1044   001578  EC95  F00F         	call	_TxBufferedString	;wreg free
  1045   00157C                     
  1046                           ;main_calibration.c: 87:             sendTxBuf();
  1047   00157C  EC97  F010         	call	_sendTxBuf	;wreg free
  1048   001580  EFEA  F009         	goto	l3251
  1049   001584  EF3E  F000         	goto	start
  1050   001588                     __end_of_main:
  1051                           	callstack 0
  1052                           
  1053 ;; *************** function _sprintf *****************
  1054 ;; Defined at:
  1055 ;;		line 9 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\nf_sprintf.c"
  1056 ;; Parameters:    Size  Location     Type
  1057 ;;  s               2   24[BANK0 ] PTR unsigned char 
  1058 ;;		 -> main@string2(40), main@string(40), 
  1059 ;;  fmt             2   26[BANK0 ] PTR const unsigned char 
  1060 ;;		 -> STR_2(12), STR_1(28), 
  1061 ;; Auto vars:     Size  Location     Type
  1062 ;;  f              11   38[BANK0 ] struct _IO_FILE
  1063 ;;  ap              2   36[BANK0 ] PTR void [1]
  1064 ;;		 -> ?_sprintf(2), 
  1065 ;;  ret             2    0        int 
  1066 ;; Return value:  Size  Location     Type
  1067 ;;                  2   24[BANK0 ] int 
  1068 ;; Registers used:
  1069 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1070 ;; Tracked objects:
  1071 ;;		On entry : 0/0
  1072 ;;		On exit  : 0/0
  1073 ;;		Unchanged: 0/0
  1074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1075 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1076 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1078 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1079 ;;Total ram usage:       25 bytes
  1080 ;; Hardware stack levels used: 1
  1081 ;; Hardware stack levels required when called: 10
  1082 ;; This function calls:
  1083 ;;		_vfprintf
  1084 ;; This function is called by:
  1085 ;;		_main
  1086 ;; This function uses a non-reentrant model
  1087 ;;
  1088                           
  1089                           	psect	text1
  1090   001C58                     __ptext1:
  1091                           	callstack 0
  1092   001C58                     _sprintf:
  1093                           	callstack 20
  1094   001C58  0E7C               	movlw	low (?_sprintf+4)
  1095   001C5A  0100               	movlb	0	; () banked
  1096   001C5C  6F84               	movwf	sprintf@ap& (0+255),b
  1097   001C5E  0E00               	movlw	high (?_sprintf+4)
  1098   001C60  6F85               	movwf	(sprintf@ap+1)& (0+255),b
  1099   001C62  C078  F086         	movff	sprintf@s,sprintf@f
  1100   001C66  C079  F087         	movff	sprintf@s+1,sprintf@f+1
  1101   001C6A                     
  1102                           ; BSR set to: 0
  1103   001C6A  0E00               	movlw	0
  1104   001C6C  6F8A               	movwf	(sprintf@f+4)& (0+255),b
  1105   001C6E  0E00               	movlw	0
  1106   001C70  6F89               	movwf	(sprintf@f+3)& (0+255),b
  1107   001C72                     
  1108                           ; BSR set to: 0
  1109   001C72  0E00               	movlw	0
  1110   001C74  6F90               	movwf	(sprintf@f+10)& (0+255),b
  1111   001C76  0E00               	movlw	0
  1112   001C78  6F8F               	movwf	(sprintf@f+9)& (0+255),b
  1113   001C7A                     
  1114                           ; BSR set to: 0
  1115   001C7A  0E86               	movlw	low sprintf@f
  1116   001C7C  6F72               	movwf	vfprintf@fp& (0+255),b
  1117   001C7E  0E00               	movlw	high sprintf@f
  1118   001C80  6F73               	movwf	(vfprintf@fp+1)& (0+255),b
  1119   001C82  C07A  F074         	movff	sprintf@fmt,vfprintf@fmt
  1120   001C86  C07B  F075         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1121   001C8A  0E84               	movlw	low sprintf@ap
  1122   001C8C  6F76               	movwf	vfprintf@ap& (0+255),b
  1123   001C8E  0E00               	movlw	high sprintf@ap
  1124   001C90  6F77               	movwf	(vfprintf@ap+1)& (0+255),b
  1125   001C92  EC01  F00E         	call	_vfprintf	;wreg free
  1126   001C96  0100               	movlb	0	; () banked
  1127   001C98  5189               	movf	(sprintf@f+3)& (0+255),w,b
  1128   001C9A  2578               	addwf	sprintf@s& (0+255),w,b
  1129   001C9C  6ED9               	movwf	fsr2l,c
  1130   001C9E  518A               	movf	(sprintf@f+4)& (0+255),w,b
  1131   001CA0  2179               	addwfc	(sprintf@s+1)& (0+255),w,b
  1132   001CA2  6EDA               	movwf	fsr2h,c
  1133   001CA4  0E00               	movlw	0
  1134   001CA6  6EDF               	movwf	indf2,c
  1135   001CA8                     
  1136                           ; BSR set to: 0
  1137   001CA8  0012               	return		;funcret
  1138   001CAA                     __end_of_sprintf:
  1139                           	callstack 0
  1140                           
  1141 ;; *************** function _vfprintf *****************
  1142 ;; Defined at:
  1143 ;;		line 1520 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c"
  1144 ;; Parameters:    Size  Location     Type
  1145 ;;  fp              2   18[BANK0 ] PTR struct _IO_FILE
  1146 ;;		 -> sprintf@f(11), 
  1147 ;;  fmt             2   20[BANK0 ] PTR const unsigned char 
  1148 ;;		 -> STR_2(12), STR_1(28), 
  1149 ;;  ap              2   22[BANK0 ] PTR PTR void 
  1150 ;;		 -> sprintf@ap(2), 
  1151 ;; Auto vars:     Size  Location     Type
  1152 ;;  cfmt            2   74[COMRAM] PTR unsigned char 
  1153 ;;		 -> STR_2(12), STR_1(28), 
  1154 ;; Return value:  Size  Location     Type
  1155 ;;                  2   18[BANK0 ] int 
  1156 ;; Registers used:
  1157 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1158 ;; Tracked objects:
  1159 ;;		On entry : 0/0
  1160 ;;		On exit  : 0/0
  1161 ;;		Unchanged: 0/0
  1162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1163 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1164 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1166 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1167 ;;Total ram usage:        8 bytes
  1168 ;; Hardware stack levels used: 1
  1169 ;; Hardware stack levels required when called: 9
  1170 ;; This function calls:
  1171 ;;		_vfpfcnvrt
  1172 ;; This function is called by:
  1173 ;;		_sprintf
  1174 ;; This function uses a non-reentrant model
  1175 ;;
  1176                           
  1177                           	psect	text2
  1178   001C02                     __ptext2:
  1179                           	callstack 0
  1180   001C02                     _vfprintf:
  1181                           	callstack 20
  1182   001C02                     
  1183                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1520: int vfprintf(FILE *fp, const c
      +                          har *fmt, va_list ap);D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1521: {;D:\MPLA
      +                          B_COMPILER\pic\sources\c99\common\doprnt.c: 1523:     char *cfmt;;D:\MPLAB_COMPILER\pic\
      +                          sources\c99\common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1184   001C02  C074  F04B         	movff	vfprintf@fmt,vfprintf@cfmt
  1185   001C06  C075  F04C         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1186                           
  1187                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1529:     while (*cfmt) {
  1188   001C0A  EF16  F00E         	goto	l3083
  1189   001C0E                     l3081:
  1190                           
  1191                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvrt(fp, &cfmt, ap);
  1192   001C0E  C072  F060         	movff	vfprintf@fp,vfpfcnvrt@fp
  1193   001C12  C073  F061         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1194   001C16  0E4B               	movlw	low vfprintf@cfmt
  1195   001C18  0100               	movlb	0	; () banked
  1196   001C1A  6F62               	movwf	vfpfcnvrt@fmt& (0+255),b
  1197   001C1C  0E00               	movlw	high vfprintf@cfmt
  1198   001C1E  6F63               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1199   001C20  C076  F064         	movff	vfprintf@ap,vfpfcnvrt@ap
  1200   001C24  C077  F065         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1201   001C28  EC15  F007         	call	_vfpfcnvrt	;wreg free
  1202   001C2C                     l3083:
  1203                           
  1204                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1529:     while (*cfmt) {
  1205   001C2C  C04B  FFF6         	movff	vfprintf@cfmt,tblptrl
  1206   001C30  C04C  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1207   001C34                     	if	0	;tblptru may be non-zero
  1208   001C34                     	endif
  1209   001C34                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1210   001C34  0E00               	movlw	low (__mediumconst shr (0+16))
  1211   001C36  6EF8               	movwf	tblptru,c
  1212   001C38                     	endif
  1213   001C38  0008               	tblrd		*
  1214   001C3A  50F5               	movf	tablat,w,c
  1215   001C3C  0900               	iorlw	0
  1216   001C3E  A4D8               	btfss	status,2,c
  1217   001C40  EF24  F00E         	goto	u2341
  1218   001C44  EF26  F00E         	goto	u2340
  1219   001C48                     u2341:
  1220   001C48  EF07  F00E         	goto	l3081
  1221   001C4C                     u2340:
  1222   001C4C                     
  1223                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1224   001C4C  0E00               	movlw	0
  1225   001C4E  0100               	movlb	0	; () banked
  1226   001C50  6F73               	movwf	(?_vfprintf+1)& (0+255),b
  1227   001C52  0E00               	movlw	0
  1228   001C54  6F72               	movwf	?_vfprintf& (0+255),b
  1229   001C56                     
  1230                           ; BSR set to: 0
  1231   001C56  0012               	return		;funcret
  1232   001C58                     __end_of_vfprintf:
  1233                           	callstack 0
  1234                           
  1235 ;; *************** function _vfpfcnvrt *****************
  1236 ;; Defined at:
  1237 ;;		line 1007 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c"
  1238 ;; Parameters:    Size  Location     Type
  1239 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  1240 ;;		 -> sprintf@f(11), 
  1241 ;;  fmt             2    2[BANK0 ] PTR PTR unsigned char 
  1242 ;;		 -> vfprintf@cfmt(2), 
  1243 ;;  ap              2    4[BANK0 ] PTR PTR void 
  1244 ;;		 -> sprintf@ap(2), 
  1245 ;; Auto vars:     Size  Location     Type
  1246 ;;  convarg         8    6[BANK0 ] struct .
  1247 ;;  cp              2   16[BANK0 ] PTR unsigned char 
  1248 ;;		 -> STR_2(12), STR_1(28), 
  1249 ;;  done            2   14[BANK0 ] int 
  1250 ;;  i               2    0        int 
  1251 ;;  c               1    0        unsigned char 
  1252 ;; Return value:  Size  Location     Type
  1253 ;;                  1    wreg      void 
  1254 ;; Registers used:
  1255 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1256 ;; Tracked objects:
  1257 ;;		On entry : 0/0
  1258 ;;		On exit  : 0/0
  1259 ;;		Unchanged: 0/0
  1260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1261 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1262 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1263 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1264 ;;      Totals:         3      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1265 ;;Total ram usage:       21 bytes
  1266 ;; Hardware stack levels used: 1
  1267 ;; Hardware stack levels required when called: 8
  1268 ;; This function calls:
  1269 ;;		_atoi
  1270 ;;		_dtoa
  1271 ;;		_fputc
  1272 ;;		_isdigit
  1273 ;; This function is called by:
  1274 ;;		_vfprintf
  1275 ;; This function uses a non-reentrant model
  1276 ;;
  1277                           
  1278                           	psect	text3
  1279   000E2A                     __ptext3:
  1280                           	callstack 0
  1281   000E2A                     _vfpfcnvrt:
  1282                           	callstack 20
  1283   000E2A                     
  1284                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(FILE *fp, char *fmt[
      +                          ], va_list ap);D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1008: {;D:\MPLAB_COMPI
      +                          LER\pic\sources\c99\common\doprnt.c: 1009:     char c, *cp;;D:\MPLAB_COMPILER\pic\source
      +                          s\c99\common\doprnt.c: 1010:     int done, i;;D:\MPLAB_COMPILER\pic\sources\c99\common\d
      +                          oprnt.c: 1016:  } convarg;;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1019:     
      +                          if ((*fmt)[0] == '%') {
  1285   000E2A  C062  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1286   000E2E  C063  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1287   000E32  CFDE FFF6          	movff	postinc2,tblptrl
  1288   000E36  CFDD FFF7          	movff	postdec2,tblptrh
  1289   000E3A                     	if	0	;tblptru may be non-zero
  1290   000E3A                     	endif
  1291   000E3A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1292   000E3A  0E00               	movlw	low (__mediumconst shr (0+16))
  1293   000E3C  6EF8               	movwf	tblptru,c
  1294   000E3E                     	endif
  1295   000E3E  0008               	tblrd		*
  1296   000E40  50F5               	movf	tablat,w,c
  1297   000E42  0A25               	xorlw	37
  1298   000E44  A4D8               	btfss	status,2,c
  1299   000E46  EF27  F007         	goto	u2241
  1300   000E4A  EF29  F007         	goto	u2240
  1301   000E4E                     u2241:
  1302   000E4E  EF5B  F008         	goto	l3015
  1303   000E52                     u2240:
  1304   000E52                     
  1305                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1020:         ++*fmt;
  1306   000E52  C062  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1307   000E56  C063  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1308   000E5A  2ADE               	incf	postinc2,f,c
  1309   000E5C  0E00               	movlw	0
  1310   000E5E  22DD               	addwfc	postdec2,f,c
  1311   000E60                     
  1312                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1022:         flags = width = 0;
  1313   000E60  0E00               	movlw	0
  1314   000E62  6E4E               	movwf	(_width+1)^0,c
  1315   000E64  0E00               	movlw	0
  1316   000E66  6E4D               	movwf	_width^0,c
  1317   000E68  C04D  F051         	movff	_width,_flags
  1318   000E6C                     
  1319                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1023:         prec = -1;
  1320   000E6C  684F               	setf	_prec^0,c
  1321   000E6E  6850               	setf	(_prec+1)^0,c
  1322   000E70                     
  1323                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1027:         done = 0;
  1324   000E70  0E00               	movlw	0
  1325   000E72  0100               	movlb	0	; () banked
  1326   000E74  6F6F               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1327   000E76  0E00               	movlw	0
  1328   000E78  6F6E               	movwf	vfpfcnvrt@done& (0+255),b
  1329                           
  1330                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1028:         while (!done) {
  1331   000E7A  EF6B  F007         	goto	l2981
  1332   000E7E                     l2971:
  1333                           
  1334                           ; BSR set to: 0
  1335                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1038:                     flags |= (
      +                          1 << 1);
  1336   000E7E  8251               	bsf	_flags^0,1,c
  1337   000E80                     
  1338                           ; BSR set to: 0
  1339                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1039:                     ++*fmt;
  1340   000E80  C062  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1341   000E84  C063  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1342   000E88  2ADE               	incf	postinc2,f,c
  1343   000E8A  0E00               	movlw	0
  1344   000E8C  22DD               	addwfc	postdec2,f,c
  1345                           
  1346                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1040:                     break;
  1347   000E8E  EF6B  F007         	goto	l2981
  1348   000E92                     l2975:
  1349                           
  1350                           ; BSR set to: 0
  1351                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1061:                     done = 1;
  1352   000E92  0E00               	movlw	0
  1353   000E94  6F6F               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1354   000E96  0E01               	movlw	1
  1355   000E98  6F6E               	movwf	vfpfcnvrt@done& (0+255),b
  1356                           
  1357                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1062:                     break;
  1358   000E9A  EF6B  F007         	goto	l2981
  1359   000E9E                     l2979:
  1360                           
  1361                           ; BSR set to: 0
  1362   000E9E  C062  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1363   000EA2  C063  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1364   000EA6  CFDE FFF6          	movff	postinc2,tblptrl
  1365   000EAA  CFDD FFF7          	movff	postdec2,tblptrh
  1366   000EAE                     	if	0	;tblptru may be non-zero
  1367   000EAE                     	endif
  1368   000EAE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1369   000EAE  0E00               	movlw	low (__mediumconst shr (0+16))
  1370   000EB0  6EF8               	movwf	tblptru,c
  1371   000EB2                     	endif
  1372   000EB2  0008               	tblrd		*
  1373   000EB4  50F5               	movf	tablat,w,c
  1374   000EB6  6E48               	movwf	??_vfpfcnvrt^0,c
  1375   000EB8  6A49               	clrf	(??_vfpfcnvrt+1)^0,c
  1376                           
  1377                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1378                           ; Switch size 1, requested type "simple"
  1379                           ; Number of cases is 1, Range of values is 0 to 0
  1380                           ; switch strategies available:
  1381                           ; Name         Instructions Cycles
  1382                           ; simple_byte            4     3 (average)
  1383                           ;	Chosen strategy is simple_byte
  1384   000EBA  5049               	movf	(??_vfpfcnvrt+1)^0,w,c
  1385   000EBC  0A00               	xorlw	0	; case 0
  1386   000EBE  B4D8               	btfsc	status,2,c
  1387   000EC0  EF64  F007         	goto	l3359
  1388   000EC4  EF49  F007         	goto	l2975
  1389   000EC8                     l3359:
  1390                           
  1391                           ; BSR set to: 0
  1392                           ; Switch size 1, requested type "simple"
  1393                           ; Number of cases is 1, Range of values is 48 to 48
  1394                           ; switch strategies available:
  1395                           ; Name         Instructions Cycles
  1396                           ; simple_byte            4     3 (average)
  1397                           ;	Chosen strategy is simple_byte
  1398   000EC8  5048               	movf	??_vfpfcnvrt^0,w,c
  1399   000ECA  0A30               	xorlw	48	; case 48
  1400   000ECC  B4D8               	btfsc	status,2,c
  1401   000ECE  EF3F  F007         	goto	l2971
  1402   000ED2  EF49  F007         	goto	l2975
  1403   000ED6                     l2981:
  1404                           
  1405                           ; BSR set to: 0
  1406                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1028:         while (!done) {
  1407   000ED6  516E               	movf	vfpfcnvrt@done& (0+255),w,b
  1408   000ED8  116F               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  1409   000EDA  B4D8               	btfsc	status,2,c
  1410   000EDC  EF72  F007         	goto	u2251
  1411   000EE0  EF74  F007         	goto	u2250
  1412   000EE4                     u2251:
  1413   000EE4  EF4F  F007         	goto	l2979
  1414   000EE8                     u2250:
  1415   000EE8                     
  1416                           ; BSR set to: 0
  1417                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1074:         if ((*fmt)[0] == '*') 
      +                          {
  1418   000EE8  C062  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1419   000EEC  C063  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1420   000EF0  CFDE FFF6          	movff	postinc2,tblptrl
  1421   000EF4  CFDD FFF7          	movff	postdec2,tblptrh
  1422   000EF8                     	if	0	;tblptru may be non-zero
  1423   000EF8                     	endif
  1424   000EF8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1425   000EF8  0E00               	movlw	low (__mediumconst shr (0+16))
  1426   000EFA  6EF8               	movwf	tblptru,c
  1427   000EFC                     	endif
  1428   000EFC  0008               	tblrd		*
  1429   000EFE  50F5               	movf	tablat,w,c
  1430   000F00  0A2A               	xorlw	42
  1431   000F02  A4D8               	btfss	status,2,c
  1432   000F04  EF86  F007         	goto	u2261
  1433   000F08  EF88  F007         	goto	u2260
  1434   000F0C                     u2261:
  1435   000F0C  EFB1  F007         	goto	l2991
  1436   000F10                     u2260:
  1437   000F10                     
  1438                           ; BSR set to: 0
  1439                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1075:             ++*fmt;
  1440   000F10  C062  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1441   000F14  C063  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1442   000F18  2ADE               	incf	postinc2,f,c
  1443   000F1A  0E00               	movlw	0
  1444   000F1C  22DD               	addwfc	postdec2,f,c
  1445                           
  1446                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1076:             width = (*(int *)_
      +                          _va_arg(*(int **)ap, (int)0));
  1447   000F1E  C064  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1448   000F22  C065  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1449   000F26  CFDF F048          	movff	indf2,??_vfpfcnvrt
  1450   000F2A  0E02               	movlw	2
  1451   000F2C  26DE               	addwf	postinc2,f,c
  1452   000F2E  CFDF F049          	movff	indf2,??_vfpfcnvrt+1
  1453   000F32  0E00               	movlw	0
  1454   000F34  22DD               	addwfc	postdec2,f,c
  1455   000F36  C048  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1456   000F3A  C049  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1457   000F3E  CFDE F04D          	movff	postinc2,_width
  1458   000F42  CFDD F04E          	movff	postdec2,_width+1
  1459   000F46                     
  1460                           ; BSR set to: 0
  1461                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1077:             if (width < 0) {
  1462   000F46  BE4E               	btfsc	(_width+1)^0,7,c
  1463   000F48  EFAA  F007         	goto	u2270
  1464   000F4C  EFA8  F007         	goto	u2271
  1465   000F50                     u2271:
  1466   000F50  EFE6  F007         	goto	l2999
  1467   000F54                     u2270:
  1468   000F54                     
  1469                           ; BSR set to: 0
  1470                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1078:                 flags |= (1 <<
      +                           0);
  1471   000F54  8051               	bsf	_flags^0,0,c
  1472                           
  1473                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1079:                 width = -width
      +                          ;
  1474   000F56  6C4D               	negf	_width^0,c
  1475   000F58  1E4E               	comf	(_width+1)^0,f,c
  1476   000F5A  B0D8               	btfsc	status,0,c
  1477   000F5C  2A4E               	incf	(_width+1)^0,f,c
  1478   000F5E  EFE6  F007         	goto	l2999
  1479   000F62                     l2991:
  1480                           
  1481                           ; BSR set to: 0
  1482                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1082:             width = atoi(*fmt)
      +                          ;
  1483   000F62  C062  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1484   000F66  C063  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1485   000F6A  CFDE F010          	movff	postinc2,atoi@s
  1486   000F6E  CFDD F011          	movff	postdec2,atoi@s+1
  1487   000F72  EC3A  F00C         	call	_atoi	;wreg free
  1488   000F76  C010  F04D         	movff	?_atoi,_width
  1489   000F7A  C011  F04E         	movff	?_atoi+1,_width+1
  1490                           
  1491                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1083:             while ((0 && isdig
      +                          it((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  1492   000F7E  EFC8  F007         	goto	l2997
  1493   000F82                     l2993:
  1494                           
  1495                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1084:                 ++*fmt;
  1496   000F82  C062  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1497   000F86  C063  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1498   000F8A  2ADE               	incf	postinc2,f,c
  1499   000F8C  0E00               	movlw	0
  1500   000F8E  22DD               	addwfc	postdec2,f,c
  1501   000F90                     l2997:
  1502   000F90  C062  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1503   000F94  C063  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1504   000F98  CFDE FFF6          	movff	postinc2,tblptrl
  1505   000F9C  CFDD FFF7          	movff	postdec2,tblptrh
  1506   000FA0                     	if	0	;tblptru may be non-zero
  1507   000FA0                     	endif
  1508   000FA0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1509   000FA0  0E00               	movlw	low (__mediumconst shr (0+16))
  1510   000FA2  6EF8               	movwf	tblptru,c
  1511   000FA4                     	endif
  1512   000FA4  0008               	tblrd		*
  1513   000FA6  CFF5 F048          	movff	tablat,??_vfpfcnvrt
  1514   000FAA  0ED0               	movlw	208
  1515   000FAC  2448               	addwf	??_vfpfcnvrt^0,w,c
  1516   000FAE  6E49               	movwf	(??_vfpfcnvrt+1)^0,c
  1517   000FB0  6A4A               	clrf	(??_vfpfcnvrt+2)^0,c
  1518   000FB2  0EFF               	movlw	255
  1519   000FB4  224A               	addwfc	(??_vfpfcnvrt+2)^0,f,c
  1520   000FB6  504A               	movf	(??_vfpfcnvrt+2)^0,w,c
  1521   000FB8  E109               	bnz	u2280
  1522   000FBA  0E0A               	movlw	10
  1523   000FBC  5C49               	subwf	(??_vfpfcnvrt+1)^0,w,c
  1524   000FBE  A0D8               	btfss	status,0,c
  1525   000FC0  EFE4  F007         	goto	u2281
  1526   000FC4  EFE6  F007         	goto	u2280
  1527   000FC8                     u2281:
  1528   000FC8  EFC1  F007         	goto	l2993
  1529   000FCC                     u2280:
  1530   000FCC                     l2999:
  1531                           
  1532                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt;
  1533   000FCC  C062  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1534   000FD0  C063  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1535   000FD4  CFDE F070          	movff	postinc2,vfpfcnvrt@cp
  1536   000FD8  CFDD F071          	movff	postdec2,vfpfcnvrt@cp+1
  1537   000FDC                     
  1538                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1187:   if (*cp == 'd' || *cp == 'i'
      +                          ) {
  1539   000FDC  C070  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1540   000FE0  C071  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1541   000FE4                     	if	0	;tblptru may be non-zero
  1542   000FE4                     	endif
  1543   000FE4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1544   000FE4  0E00               	movlw	low (__mediumconst shr (0+16))
  1545   000FE6  6EF8               	movwf	tblptru,c
  1546   000FE8                     	endif
  1547   000FE8  0008               	tblrd		*
  1548   000FEA  50F5               	movf	tablat,w,c
  1549   000FEC  0A64               	xorlw	100
  1550   000FEE  B4D8               	btfsc	status,2,c
  1551   000FF0  EFFC  F007         	goto	u2291
  1552   000FF4  EFFE  F007         	goto	u2290
  1553   000FF8                     u2291:
  1554   000FF8  EF0E  F008         	goto	l3005
  1555   000FFC                     u2290:
  1556   000FFC  C070  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1557   001000  C071  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1558   001004                     	if	0	;tblptru may be non-zero
  1559   001004                     	endif
  1560   001004                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1561   001004  0E00               	movlw	low (__mediumconst shr (0+16))
  1562   001006  6EF8               	movwf	tblptru,c
  1563   001008                     	endif
  1564   001008  0008               	tblrd		*
  1565   00100A  50F5               	movf	tablat,w,c
  1566   00100C  0A69               	xorlw	105
  1567   00100E  A4D8               	btfss	status,2,c
  1568   001010  EF0C  F008         	goto	u2301
  1569   001014  EF0E  F008         	goto	u2300
  1570   001018                     u2301:
  1571   001018  EF52  F008         	goto	l3011
  1572   00101C                     u2300:
  1573   00101C                     l3005:
  1574                           
  1575                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1230:    convarg.ll = (long long)(in
      +                          t)(*(int *)__va_arg(*(int **)ap, (int)0));
  1576   00101C  C064  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1577   001020  C065  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1578   001024  CFDF F048          	movff	indf2,??_vfpfcnvrt
  1579   001028  0E02               	movlw	2
  1580   00102A  26DE               	addwf	postinc2,f,c
  1581   00102C  CFDF F049          	movff	indf2,??_vfpfcnvrt+1
  1582   001030  0E00               	movlw	0
  1583   001032  22DD               	addwfc	postdec2,f,c
  1584   001034  C048  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1585   001038  C049  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1586   00103C  CFDE F066          	movff	postinc2,vfpfcnvrt@convarg
  1587   001040  CFDD F067          	movff	postdec2,vfpfcnvrt@convarg+1
  1588   001044  0100               	movlb	0	; () banked
  1589   001046  0E00               	movlw	0
  1590   001048  BF67               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  1591   00104A  0EFF               	movlw	-1
  1592   00104C  6F68               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  1593   00104E  6F69               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  1594   001050  6F6A               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  1595   001052  6F6B               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  1596   001054  6F6C               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  1597   001056  6F6D               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  1598                           
  1599                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1232:    *fmt = cp+1;
  1600   001058  0E01               	movlw	1
  1601   00105A  2570               	addwf	vfpfcnvrt@cp& (0+255),w,b
  1602   00105C  6E48               	movwf	??_vfpfcnvrt^0,c
  1603   00105E  0E00               	movlw	0
  1604   001060  2171               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  1605   001062  6E49               	movwf	(??_vfpfcnvrt+1)^0,c
  1606   001064  C062  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1607   001068  C063  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1608   00106C  C048  FFDE         	movff	??_vfpfcnvrt,postinc2
  1609   001070  C049  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1610   001074                     
  1611                           ; BSR set to: 0
  1612                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1233:    return (void) dtoa(fp, conv
      +                          arg.ll);;	Return value of _vfpfcnvrt is never used
  1613   001074  C060  F025         	movff	vfpfcnvrt@fp,dtoa@fp
  1614   001078  C061  F026         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1615   00107C  C066  F027         	movff	vfpfcnvrt@convarg,dtoa@d
  1616   001080  C067  F028         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1617   001084  C068  F029         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1618   001088  C069  F02A         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1619   00108C  C06A  F02B         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1620   001090  C06B  F02C         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1621   001094  C06C  F02D         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1622   001098  C06D  F02E         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1623   00109C  EC72  F008         	call	_dtoa	;wreg free
  1624   0010A0  EF71  F008         	goto	l1166
  1625   0010A4                     l3011:
  1626                           
  1627                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1509:         ++*fmt;
  1628   0010A4  C062  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1629   0010A8  C063  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1630   0010AC  2ADE               	incf	postinc2,f,c
  1631   0010AE  0E00               	movlw	0
  1632   0010B0  22DD               	addwfc	postdec2,f,c
  1633   0010B2  EF71  F008         	goto	l1166
  1634   0010B6                     l3015:
  1635                           
  1636                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1514:     fputc((int)(*fmt)[0], fp);
  1637   0010B6  C062  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1638   0010BA  C063  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1639   0010BE  CFDE FFF6          	movff	postinc2,tblptrl
  1640   0010C2  CFDD FFF7          	movff	postdec2,tblptrh
  1641   0010C6                     	if	0	;tblptru may be non-zero
  1642   0010C6                     	endif
  1643   0010C6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1644   0010C6  0E00               	movlw	low (__mediumconst shr (0+16))
  1645   0010C8  6EF8               	movwf	tblptru,c
  1646   0010CA                     	endif
  1647   0010CA  0008               	tblrd		*
  1648   0010CC  50F5               	movf	tablat,w,c
  1649   0010CE  6E0A               	movwf	fputc@c^0,c
  1650   0010D0  6A0B               	clrf	(fputc@c+1)^0,c
  1651   0010D2  C060  F00C         	movff	vfpfcnvrt@fp,fputc@fp
  1652   0010D6  C061  F00D         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1653   0010DA  ECE9  F00C         	call	_fputc	;wreg free
  1654   0010DE  EF52  F008         	goto	l3011
  1655   0010E2                     l1166:
  1656   0010E2  0012               	return		;funcret
  1657   0010E4                     __end_of_vfpfcnvrt:
  1658                           	callstack 0
  1659                           
  1660 ;; *************** function _dtoa *****************
  1661 ;; Defined at:
  1662 ;;		line 443 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c"
  1663 ;; Parameters:    Size  Location     Type
  1664 ;;  fp              2   36[COMRAM] PTR struct _IO_FILE
  1665 ;;		 -> sprintf@f(11), 
  1666 ;;  d               8   38[COMRAM] long long 
  1667 ;; Auto vars:     Size  Location     Type
  1668 ;;  n               8   60[COMRAM] long long 
  1669 ;;  i               2   69[COMRAM] int 
  1670 ;;  w               2   58[COMRAM] int 
  1671 ;;  p               2   56[COMRAM] int 
  1672 ;;  s               1   68[COMRAM] unsigned char 
  1673 ;; Return value:  Size  Location     Type
  1674 ;;                  1    wreg      void 
  1675 ;; Registers used:
  1676 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1677 ;; Tracked objects:
  1678 ;;		On entry : 0/0
  1679 ;;		On exit  : 0/0
  1680 ;;		Unchanged: 0/0
  1681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1682 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1683 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1684 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1685 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1686 ;;Total ram usage:       35 bytes
  1687 ;; Hardware stack levels used: 1
  1688 ;; Hardware stack levels required when called: 7
  1689 ;; This function calls:
  1690 ;;		___aodiv
  1691 ;;		___aomod
  1692 ;;		_abs
  1693 ;;		_pad
  1694 ;; This function is called by:
  1695 ;;		_vfpfcnvrt
  1696 ;; This function uses a non-reentrant model
  1697 ;;
  1698                           
  1699                           	psect	text4
  1700   0010E4                     __ptext4:
  1701                           	callstack 0
  1702   0010E4                     _dtoa:
  1703                           	callstack 20
  1704   0010E4                     
  1705                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 443: static void dtoa(FILE *fp, long
      +                           long d);D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 444: {;D:\MPLAB_COMPILER\pic
      +                          \sources\c99\common\doprnt.c: 445:  char s;;D:\MPLAB_COMPILER\pic\sources\c99\common\dop
      +                          rnt.c: 446:     int i, p, w;;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 447:    
      +                           long long n;;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 450:     n = d;
  1706   0010E4  C027  F03D         	movff	dtoa@d,dtoa@n
  1707   0010E8  C028  F03E         	movff	dtoa@d+1,dtoa@n+1
  1708   0010EC  C029  F03F         	movff	dtoa@d+2,dtoa@n+2
  1709   0010F0  C02A  F040         	movff	dtoa@d+3,dtoa@n+3
  1710   0010F4  C02B  F041         	movff	dtoa@d+4,dtoa@n+4
  1711   0010F8  C02C  F042         	movff	dtoa@d+5,dtoa@n+5
  1712   0010FC  C02D  F043         	movff	dtoa@d+6,dtoa@n+6
  1713   001100  C02E  F044         	movff	dtoa@d+7,dtoa@n+7
  1714   001104                     
  1715                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 451:     s = n < 0 ? 1 : 0;
  1716   001104  BE44               	btfsc	(dtoa@n+7)^0,7,c
  1717   001106  EF87  F008         	goto	u2051
  1718   00110A  EF8A  F008         	goto	u2050
  1719   00110E                     u2051:
  1720   00110E  0E01               	movlw	1
  1721   001110  EF8B  F008         	goto	u2060
  1722   001114                     u2050:
  1723   001114  0E00               	movlw	0
  1724   001116                     u2060:
  1725   001116  6E45               	movwf	dtoa@s^0,c
  1726   001118                     
  1727                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  1728   001118  5045               	movf	dtoa@s^0,w,c
  1729   00111A  B4D8               	btfsc	status,2,c
  1730   00111C  EF92  F008         	goto	u2071
  1731   001120  EF94  F008         	goto	u2070
  1732   001124                     u2071:
  1733   001124  EFA4  F008         	goto	l2847
  1734   001128                     u2070:
  1735   001128                     
  1736                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 453:         n = -n;
  1737   001128  1E44               	comf	(dtoa@n+7)^0,f,c
  1738   00112A  1E43               	comf	(dtoa@n+6)^0,f,c
  1739   00112C  1E42               	comf	(dtoa@n+5)^0,f,c
  1740   00112E  1E41               	comf	(dtoa@n+4)^0,f,c
  1741   001130  1E40               	comf	(dtoa@n+3)^0,f,c
  1742   001132  1E3F               	comf	(dtoa@n+2)^0,f,c
  1743   001134  1E3E               	comf	(dtoa@n+1)^0,f,c
  1744   001136  6C3D               	negf	dtoa@n^0,c
  1745   001138  0E00               	movlw	0
  1746   00113A  223E               	addwfc	(dtoa@n+1)^0,f,c
  1747   00113C  223F               	addwfc	(dtoa@n+2)^0,f,c
  1748   00113E  2240               	addwfc	(dtoa@n+3)^0,f,c
  1749   001140  2241               	addwfc	(dtoa@n+4)^0,f,c
  1750   001142  2242               	addwfc	(dtoa@n+5)^0,f,c
  1751   001144  2243               	addwfc	(dtoa@n+6)^0,f,c
  1752   001146  2244               	addwfc	(dtoa@n+7)^0,f,c
  1753   001148                     l2847:
  1754                           
  1755                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 458:     if (!(prec < 0)) {
  1756   001148  BE50               	btfsc	(_prec+1)^0,7,c
  1757   00114A  EFA9  F008         	goto	u2081
  1758   00114E  EFAB  F008         	goto	u2080
  1759   001152                     u2081:
  1760   001152  EFAC  F008         	goto	l2851
  1761   001156                     u2080:
  1762   001156                     
  1763                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 459:         flags &= ~(1 << 1);
  1764   001156  9251               	bcf	_flags^0,1,c
  1765   001158                     l2851:
  1766                           
  1767                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 462:     p = (0 < prec) ? prec : 1;
  1768   001158  BE50               	btfsc	(_prec+1)^0,7,c
  1769   00115A  EFB9  F008         	goto	u2090
  1770   00115E  5050               	movf	(_prec+1)^0,w,c
  1771   001160  E106               	bnz	u2091
  1772   001162  044F               	decf	_prec^0,w,c
  1773   001164  B0D8               	btfsc	status,0,c
  1774   001166  EFB7  F008         	goto	u2091
  1775   00116A  EFB9  F008         	goto	u2090
  1776   00116E                     u2091:
  1777   00116E  EFBF  F008         	goto	l1128
  1778   001172                     u2090:
  1779   001172  0E00               	movlw	0
  1780   001174  6E3A               	movwf	(dtoa@p+1)^0,c
  1781   001176  0E01               	movlw	1
  1782   001178  6E39               	movwf	dtoa@p^0,c
  1783   00117A  EFC3  F008         	goto	l1130
  1784   00117E                     l1128:
  1785   00117E  C04F  F039         	movff	_prec,dtoa@p
  1786   001182  C050  F03A         	movff	_prec+1,dtoa@p+1
  1787   001186                     l1130:
  1788                           
  1789                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 463:     w = width;
  1790   001186  C04D  F03B         	movff	_width,dtoa@w
  1791   00118A  C04E  F03C         	movff	_width+1,dtoa@w+1
  1792   00118E                     
  1793                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 464:     if (s
  1794   00118E  5045               	movf	dtoa@s^0,w,c
  1795   001190  B4D8               	btfsc	status,2,c
  1796   001192  EFCD  F008         	goto	u2101
  1797   001196  EFCF  F008         	goto	u2100
  1798   00119A                     u2101:
  1799   00119A  EFE6  F008         	goto	l1131
  1800   00119E                     u2100:
  1801   00119E                     
  1802                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 468:     ) {;D:\MPLAB_COMPILER\pic\s
      +                          ources\c99\common\doprnt.c: 469:         --w;
  1803   00119E  063B               	decf	dtoa@w^0,f,c
  1804   0011A0  A0D8               	btfss	status,0,c
  1805   0011A2  063C               	decf	(dtoa@w+1)^0,f,c
  1806   0011A4                     
  1807                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-' : '+';
  1808   0011A4  5045               	movf	dtoa@s^0,w,c
  1809   0011A6  A4D8               	btfss	status,2,c
  1810   0011A8  EFD8  F008         	goto	u2111
  1811   0011AC  EFDA  F008         	goto	u2110
  1812   0011B0                     u2111:
  1813   0011B0  EFE0  F008         	goto	l2863
  1814   0011B4                     u2110:
  1815   0011B4  0E00               	movlw	0
  1816   0011B6  6E38               	movwf	(_dtoa$2298+1)^0,c
  1817   0011B8  0E2B               	movlw	43
  1818   0011BA  6E37               	movwf	_dtoa$2298^0,c
  1819   0011BC  EFE4  F008         	goto	l2865
  1820   0011C0                     l2863:
  1821   0011C0  0E00               	movlw	0
  1822   0011C2  6E38               	movwf	(_dtoa$2298+1)^0,c
  1823   0011C4  0E2D               	movlw	45
  1824   0011C6  6E37               	movwf	_dtoa$2298^0,c
  1825   0011C8                     l2865:
  1826   0011C8  C037  F045         	movff	_dtoa$2298,dtoa@s
  1827   0011CC                     l1131:
  1828                           
  1829                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 480:     i = sizeof(dbuf) - 1;
  1830   0011CC  0E00               	movlw	0
  1831   0011CE  6E47               	movwf	(dtoa@i+1)^0,c
  1832   0011D0  0E1F               	movlw	31
  1833   0011D2  6E46               	movwf	dtoa@i^0,c
  1834   0011D4                     
  1835                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] = '\0';
  1836   0011D4  0E00               	movlw	0
  1837   0011D6  0102               	movlb	2	; () banked
  1838   0011D8  6FFB               	movwf	(_dbuf+31)& (0+255),b
  1839                           
  1840                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 482:     while (!(i < 1) && (n || (0
      +                           < p)
  1841   0011DA  EF6B  F009         	goto	l2879
  1842   0011DE                     l2869:
  1843                           
  1844                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 486:     )) {;D:\MPLAB_COMPILER\pic\
      +                          sources\c99\common\doprnt.c: 487:         --i;
  1845   0011DE  0646               	decf	dtoa@i^0,f,c
  1846   0011E0  A0D8               	btfss	status,0,c
  1847   0011E2  0647               	decf	(dtoa@i+1)^0,f,c
  1848   0011E4                     
  1849                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 488:         dbuf[i] = (char)((int)'
      +                          0' + abs(n % 10));
  1850   0011E4  0EDC               	movlw	low _dbuf
  1851   0011E6  2446               	addwf	dtoa@i^0,w,c
  1852   0011E8  6ED9               	movwf	fsr2l,c
  1853   0011EA  0E02               	movlw	high _dbuf
  1854   0011EC  2047               	addwfc	(dtoa@i+1)^0,w,c
  1855   0011EE  6EDA               	movwf	fsr2h,c
  1856   0011F0  C03D  F00A         	movff	dtoa@n,___aomod@dividend
  1857   0011F4  C03E  F00B         	movff	dtoa@n+1,___aomod@dividend+1
  1858   0011F8  C03F  F00C         	movff	dtoa@n+2,___aomod@dividend+2
  1859   0011FC  C040  F00D         	movff	dtoa@n+3,___aomod@dividend+3
  1860   001200  C041  F00E         	movff	dtoa@n+4,___aomod@dividend+4
  1861   001204  C042  F00F         	movff	dtoa@n+5,___aomod@dividend+5
  1862   001208  C043  F010         	movff	dtoa@n+6,___aomod@dividend+6
  1863   00120C  C044  F011         	movff	dtoa@n+7,___aomod@dividend+7
  1864   001210  0E0A               	movlw	10
  1865   001212  6E12               	movwf	___aomod@divisor^0,c
  1866   001214  0E00               	movlw	0
  1867   001216  6E13               	movwf	(___aomod@divisor+1)^0,c
  1868   001218  0E00               	movlw	0
  1869   00121A  6E14               	movwf	(___aomod@divisor+2)^0,c
  1870   00121C  0E00               	movlw	0
  1871   00121E  6E15               	movwf	(___aomod@divisor+3)^0,c
  1872   001220  0E00               	movlw	0
  1873   001222  6E16               	movwf	(___aomod@divisor+4)^0,c
  1874   001224  0E00               	movlw	0
  1875   001226  6E17               	movwf	(___aomod@divisor+5)^0,c
  1876   001228  0E00               	movlw	0
  1877   00122A  6E18               	movwf	(___aomod@divisor+6)^0,c
  1878   00122C  0E00               	movlw	0
  1879   00122E  6E19               	movwf	(___aomod@divisor+7)^0,c
  1880   001230  EC88  F00B         	call	___aomod	;wreg free
  1881   001234  C00A  F02F         	movff	?___aomod,??_dtoa
  1882   001238  C00B  F030         	movff	?___aomod+1,??_dtoa+1
  1883   00123C  C00C  F031         	movff	?___aomod+2,??_dtoa+2
  1884   001240  C00D  F032         	movff	?___aomod+3,??_dtoa+3
  1885   001244  C00E  F033         	movff	?___aomod+4,??_dtoa+4
  1886   001248  C00F  F034         	movff	?___aomod+5,??_dtoa+5
  1887   00124C  C010  F035         	movff	?___aomod+6,??_dtoa+6
  1888   001250  C011  F036         	movff	?___aomod+7,??_dtoa+7
  1889   001254  C02F  F01C         	movff	??_dtoa,abs@a
  1890   001258  C030  F01D         	movff	??_dtoa+1,abs@a+1
  1891   00125C  EC5B  F00F         	call	_abs	;wreg free
  1892   001260  501C               	movf	?_abs^0,w,c
  1893   001262  0F30               	addlw	48
  1894   001264  6EDF               	movwf	indf2,c
  1895   001266                     
  1896                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 489:         --p;
  1897   001266  0639               	decf	dtoa@p^0,f,c
  1898   001268  A0D8               	btfss	status,0,c
  1899   00126A  063A               	decf	(dtoa@p+1)^0,f,c
  1900   00126C                     
  1901                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 490:         --w;
  1902   00126C  063B               	decf	dtoa@w^0,f,c
  1903   00126E  A0D8               	btfss	status,0,c
  1904   001270  063C               	decf	(dtoa@w+1)^0,f,c
  1905   001272                     
  1906                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 491:         n = n / 10;
  1907   001272  C03D  F00A         	movff	dtoa@n,___aodiv@dividend
  1908   001276  C03E  F00B         	movff	dtoa@n+1,___aodiv@dividend+1
  1909   00127A  C03F  F00C         	movff	dtoa@n+2,___aodiv@dividend+2
  1910   00127E  C040  F00D         	movff	dtoa@n+3,___aodiv@dividend+3
  1911   001282  C041  F00E         	movff	dtoa@n+4,___aodiv@dividend+4
  1912   001286  C042  F00F         	movff	dtoa@n+5,___aodiv@dividend+5
  1913   00128A  C043  F010         	movff	dtoa@n+6,___aodiv@dividend+6
  1914   00128E  C044  F011         	movff	dtoa@n+7,___aodiv@dividend+7
  1915   001292  0E0A               	movlw	10
  1916   001294  6E12               	movwf	___aodiv@divisor^0,c
  1917   001296  0E00               	movlw	0
  1918   001298  6E13               	movwf	(___aodiv@divisor+1)^0,c
  1919   00129A  0E00               	movlw	0
  1920   00129C  6E14               	movwf	(___aodiv@divisor+2)^0,c
  1921   00129E  0E00               	movlw	0
  1922   0012A0  6E15               	movwf	(___aodiv@divisor+3)^0,c
  1923   0012A2  0E00               	movlw	0
  1924   0012A4  6E16               	movwf	(___aodiv@divisor+4)^0,c
  1925   0012A6  0E00               	movlw	0
  1926   0012A8  6E17               	movwf	(___aodiv@divisor+5)^0,c
  1927   0012AA  0E00               	movlw	0
  1928   0012AC  6E18               	movwf	(___aodiv@divisor+6)^0,c
  1929   0012AE  0E00               	movlw	0
  1930   0012B0  6E19               	movwf	(___aodiv@divisor+7)^0,c
  1931   0012B2  ECC4  F00A         	call	___aodiv	;wreg free
  1932   0012B6  C00A  F03D         	movff	?___aodiv,dtoa@n
  1933   0012BA  C00B  F03E         	movff	?___aodiv+1,dtoa@n+1
  1934   0012BE  C00C  F03F         	movff	?___aodiv+2,dtoa@n+2
  1935   0012C2  C00D  F040         	movff	?___aodiv+3,dtoa@n+3
  1936   0012C6  C00E  F041         	movff	?___aodiv+4,dtoa@n+4
  1937   0012CA  C00F  F042         	movff	?___aodiv+5,dtoa@n+5
  1938   0012CE  C010  F043         	movff	?___aodiv+6,dtoa@n+6
  1939   0012D2  C011  F044         	movff	?___aodiv+7,dtoa@n+7
  1940   0012D6                     l2879:
  1941                           
  1942                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 482:     while (!(i < 1) && (n || (0
      +                           < p)
  1943   0012D6  BE47               	btfsc	(dtoa@i+1)^0,7,c
  1944   0012D8  EF76  F009         	goto	u2121
  1945   0012DC  5047               	movf	(dtoa@i+1)^0,w,c
  1946   0012DE  E108               	bnz	u2120
  1947   0012E0  0446               	decf	dtoa@i^0,w,c
  1948   0012E2  A0D8               	btfss	status,0,c
  1949   0012E4  EF76  F009         	goto	u2121
  1950   0012E8  EF78  F009         	goto	u2120
  1951   0012EC                     u2121:
  1952   0012EC  EFA8  F009         	goto	l2889
  1953   0012F0                     u2120:
  1954   0012F0  503D               	movf	dtoa@n^0,w,c
  1955   0012F2  103E               	iorwf	(dtoa@n+1)^0,w,c
  1956   0012F4  103F               	iorwf	(dtoa@n+2)^0,w,c
  1957   0012F6  1040               	iorwf	(dtoa@n+3)^0,w,c
  1958   0012F8  1041               	iorwf	(dtoa@n+4)^0,w,c
  1959   0012FA  1042               	iorwf	(dtoa@n+5)^0,w,c
  1960   0012FC  1043               	iorwf	(dtoa@n+6)^0,w,c
  1961   0012FE  1044               	iorwf	(dtoa@n+7)^0,w,c
  1962   001300  A4D8               	btfss	status,2,c
  1963   001302  EF85  F009         	goto	u2131
  1964   001306  EF87  F009         	goto	u2130
  1965   00130A                     u2131:
  1966   00130A  EFEF  F008         	goto	l2869
  1967   00130E                     u2130:
  1968   00130E  BE3A               	btfsc	(dtoa@p+1)^0,7,c
  1969   001310  EF94  F009         	goto	u2140
  1970   001314  503A               	movf	(dtoa@p+1)^0,w,c
  1971   001316  E106               	bnz	u2141
  1972   001318  0439               	decf	dtoa@p^0,w,c
  1973   00131A  B0D8               	btfsc	status,0,c
  1974   00131C  EF92  F009         	goto	u2141
  1975   001320  EF94  F009         	goto	u2140
  1976   001324                     u2141:
  1977   001324  EFEF  F008         	goto	l2869
  1978   001328                     u2140:
  1979   001328  BE3C               	btfsc	(dtoa@w+1)^0,7,c
  1980   00132A  EF9F  F009         	goto	u2151
  1981   00132E  503C               	movf	(dtoa@w+1)^0,w,c
  1982   001330  E108               	bnz	u2150
  1983   001332  043B               	decf	dtoa@w^0,w,c
  1984   001334  A0D8               	btfss	status,0,c
  1985   001336  EF9F  F009         	goto	u2151
  1986   00133A  EFA1  F009         	goto	u2150
  1987   00133E                     u2151:
  1988   00133E  EFA8  F009         	goto	l2889
  1989   001342                     u2150:
  1990   001342  B251               	btfsc	_flags^0,1,c
  1991   001344  EFA6  F009         	goto	u2161
  1992   001348  EFA8  F009         	goto	u2160
  1993   00134C                     u2161:
  1994   00134C  EFEF  F008         	goto	l2869
  1995   001350                     u2160:
  1996   001350                     l2889:
  1997                           
  1998                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 495:     if (s != 0) {
  1999   001350  5045               	movf	dtoa@s^0,w,c
  2000   001352  B4D8               	btfsc	status,2,c
  2001   001354  EFAE  F009         	goto	u2171
  2002   001358  EFB0  F009         	goto	u2170
  2003   00135C                     u2171:
  2004   00135C  EFBB  F009         	goto	l2895
  2005   001360                     u2170:
  2006   001360                     
  2007                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 496:         --i;
  2008   001360  0646               	decf	dtoa@i^0,f,c
  2009   001362  A0D8               	btfss	status,0,c
  2010   001364  0647               	decf	(dtoa@i+1)^0,f,c
  2011   001366                     
  2012                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 497:         dbuf[i] = s;
  2013   001366  0EDC               	movlw	low _dbuf
  2014   001368  2446               	addwf	dtoa@i^0,w,c
  2015   00136A  6ED9               	movwf	fsr2l,c
  2016   00136C  0E02               	movlw	high _dbuf
  2017   00136E  2047               	addwfc	(dtoa@i+1)^0,w,c
  2018   001370  6EDA               	movwf	fsr2h,c
  2019   001372  C045  FFDF         	movff	dtoa@s,indf2
  2020   001376                     l2895:
  2021                           
  2022                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 501:     return (void) pad(fp, &dbuf
      +                          [i], w);
  2023   001376  C025  F01A         	movff	dtoa@fp,pad@fp
  2024   00137A  C026  F01B         	movff	dtoa@fp+1,pad@fp+1
  2025   00137E  0EDC               	movlw	low _dbuf
  2026   001380  2446               	addwf	dtoa@i^0,w,c
  2027   001382  6E1C               	movwf	pad@buf^0,c
  2028   001384  0E02               	movlw	high _dbuf
  2029   001386  2047               	addwfc	(dtoa@i+1)^0,w,c
  2030   001388  6E1D               	movwf	(pad@buf+1)^0,c
  2031   00138A  C03B  F01E         	movff	dtoa@w,pad@p
  2032   00138E  C03C  F01F         	movff	dtoa@w+1,pad@p+1
  2033   001392  EC4E  F00D         	call	_pad	;wreg free
  2034   001396  0012               	return		;funcret
  2035   001398                     __end_of_dtoa:
  2036                           	callstack 0
  2037                           
  2038 ;; *************** function _pad *****************
  2039 ;; Defined at:
  2040 ;;		line 133 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c"
  2041 ;; Parameters:    Size  Location     Type
  2042 ;;  fp              2   25[COMRAM] PTR struct _IO_FILE
  2043 ;;		 -> sprintf@f(11), 
  2044 ;;  buf             2   27[COMRAM] PTR unsigned char 
  2045 ;;		 -> dbuf(32), 
  2046 ;;  p               2   29[COMRAM] int 
  2047 ;; Auto vars:     Size  Location     Type
  2048 ;;  w               2   34[COMRAM] int 
  2049 ;;  i               2   32[COMRAM] int 
  2050 ;; Return value:  Size  Location     Type
  2051 ;;                  1    wreg      void 
  2052 ;; Registers used:
  2053 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2054 ;; Tracked objects:
  2055 ;;		On entry : 0/0
  2056 ;;		On exit  : 0/0
  2057 ;;		Unchanged: 0/0
  2058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2059 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2060 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2061 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2062 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2063 ;;Total ram usage:       11 bytes
  2064 ;; Hardware stack levels used: 1
  2065 ;; Hardware stack levels required when called: 6
  2066 ;; This function calls:
  2067 ;;		_fputc
  2068 ;;		_fputs
  2069 ;; This function is called by:
  2070 ;;		_dtoa
  2071 ;; This function uses a non-reentrant model
  2072 ;;
  2073                           
  2074                           	psect	text5
  2075   001A9C                     __ptext5:
  2076                           	callstack 0
  2077   001A9C                     _pad:
  2078                           	callstack 20
  2079   001A9C                     
  2080                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 133: static void pad(FILE *fp, char 
      +                          *buf, int p);D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 134: {;D:\MPLAB_COMPILER
      +                          \pic\sources\c99\common\doprnt.c: 135:     int i, w;;D:\MPLAB_COMPILER\pic\sources\c99\c
      +                          ommon\doprnt.c: 139:     if (flags & (1 << 0)) {
  2081   001A9C  A051               	btfss	_flags^0,0,c
  2082   001A9E  EF53  F00D         	goto	u1941
  2083   001AA2  EF55  F00D         	goto	u1940
  2084   001AA6                     u1941:
  2085   001AA6  EF5F  F00D         	goto	l2801
  2086   001AAA                     u1940:
  2087   001AAA                     
  2088                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 140:         fputs((const char *)buf
      +                          , fp);
  2089   001AAA  C01C  F013         	movff	pad@buf,fputs@s
  2090   001AAE  C01D  F014         	movff	pad@buf+1,fputs@s+1
  2091   001AB2  C01A  F015         	movff	pad@fp,fputs@fp
  2092   001AB6  C01B  F016         	movff	pad@fp+1,fputs@fp+1
  2093   001ABA  EC18  F00F         	call	_fputs	;wreg free
  2094   001ABE                     l2801:
  2095                           
  2096                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 145:     w = (p < 0) ? 0 : p;
  2097   001ABE  BE1F               	btfsc	(pad@p+1)^0,7,c
  2098   001AC0  EF64  F00D         	goto	u1951
  2099   001AC4  EF66  F00D         	goto	u1950
  2100   001AC8                     u1951:
  2101   001AC8  EF6C  F00D         	goto	l2805
  2102   001ACC                     u1950:
  2103   001ACC  C01E  F023         	movff	pad@p,pad@w
  2104   001AD0  C01F  F024         	movff	pad@p+1,pad@w+1
  2105   001AD4  EF70  F00D         	goto	l1117
  2106   001AD8                     l2805:
  2107   001AD8  0E00               	movlw	0
  2108   001ADA  6E24               	movwf	(pad@w+1)^0,c
  2109   001ADC  0E00               	movlw	0
  2110   001ADE  6E23               	movwf	pad@w^0,c
  2111   001AE0                     l1117:
  2112                           
  2113                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  2114   001AE0  0E00               	movlw	0
  2115   001AE2  6E22               	movwf	(pad@i+1)^0,c
  2116   001AE4  0E00               	movlw	0
  2117   001AE6  6E21               	movwf	pad@i^0,c
  2118                           
  2119                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 147:     while (i < w) {
  2120   001AE8  EF82  F00D         	goto	l2811
  2121   001AEC                     l2807:
  2122                           
  2123                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 148:         fputc(' ', fp);
  2124   001AEC  0E00               	movlw	0
  2125   001AEE  6E0B               	movwf	(fputc@c+1)^0,c
  2126   001AF0  0E20               	movlw	32
  2127   001AF2  6E0A               	movwf	fputc@c^0,c
  2128   001AF4  C01A  F00C         	movff	pad@fp,fputc@fp
  2129   001AF8  C01B  F00D         	movff	pad@fp+1,fputc@fp+1
  2130   001AFC  ECE9  F00C         	call	_fputc	;wreg free
  2131   001B00                     
  2132                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 149:         ++i;
  2133   001B00  4A21               	infsnz	pad@i^0,f,c
  2134   001B02  2A22               	incf	(pad@i+1)^0,f,c
  2135   001B04                     l2811:
  2136                           
  2137                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 147:     while (i < w) {
  2138   001B04  5023               	movf	pad@w^0,w,c
  2139   001B06  5C21               	subwf	pad@i^0,w,c
  2140   001B08  5022               	movf	(pad@i+1)^0,w,c
  2141   001B0A  0A80               	xorlw	128
  2142   001B0C  6E20               	movwf	??_pad^0,c
  2143   001B0E  5024               	movf	(pad@w+1)^0,w,c
  2144   001B10  0A80               	xorlw	128
  2145   001B12  5820               	subwfb	??_pad^0,w,c
  2146   001B14  A0D8               	btfss	status,0,c
  2147   001B16  EF8F  F00D         	goto	u1961
  2148   001B1A  EF91  F00D         	goto	u1960
  2149   001B1E                     u1961:
  2150   001B1E  EF76  F00D         	goto	l2807
  2151   001B22                     u1960:
  2152   001B22                     
  2153                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 154:     if (!(flags & (1 << 0))) {
  2154   001B22  B051               	btfsc	_flags^0,0,c
  2155   001B24  EF96  F00D         	goto	u1971
  2156   001B28  EF98  F00D         	goto	u1970
  2157   001B2C                     u1971:
  2158   001B2C  EFA2  F00D         	goto	l1122
  2159   001B30                     u1970:
  2160   001B30                     
  2161                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 156:         fputs((const char *)buf
      +                          , fp);
  2162   001B30  C01C  F013         	movff	pad@buf,fputs@s
  2163   001B34  C01D  F014         	movff	pad@buf+1,fputs@s+1
  2164   001B38  C01A  F015         	movff	pad@fp,fputs@fp
  2165   001B3C  C01B  F016         	movff	pad@fp+1,fputs@fp+1
  2166   001B40  EC18  F00F         	call	_fputs	;wreg free
  2167   001B44                     l1122:
  2168   001B44  0012               	return		;funcret
  2169   001B46                     __end_of_pad:
  2170                           	callstack 0
  2171                           
  2172 ;; *************** function _fputs *****************
  2173 ;; Defined at:
  2174 ;;		line 8 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\nf_fputs.c"
  2175 ;; Parameters:    Size  Location     Type
  2176 ;;  s               2   18[COMRAM] PTR const unsigned char 
  2177 ;;		 -> dbuf(32), 
  2178 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  2179 ;;		 -> sprintf@f(11), 
  2180 ;; Auto vars:     Size  Location     Type
  2181 ;;  i               2   23[COMRAM] int 
  2182 ;;  c               1   22[COMRAM] unsigned char 
  2183 ;; Return value:  Size  Location     Type
  2184 ;;                  2   18[COMRAM] int 
  2185 ;; Registers used:
  2186 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2187 ;; Tracked objects:
  2188 ;;		On entry : 0/0
  2189 ;;		On exit  : 0/0
  2190 ;;		Unchanged: 0/0
  2191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2192 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2193 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2195 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2196 ;;Total ram usage:        7 bytes
  2197 ;; Hardware stack levels used: 1
  2198 ;; Hardware stack levels required when called: 5
  2199 ;; This function calls:
  2200 ;;		_fputc
  2201 ;; This function is called by:
  2202 ;;		_pad
  2203 ;; This function uses a non-reentrant model
  2204 ;;
  2205                           
  2206                           	psect	text6
  2207   001E30                     __ptext6:
  2208                           	callstack 0
  2209   001E30                     _fputs:
  2210                           	callstack 20
  2211   001E30  0E00               	movlw	0
  2212   001E32  6E19               	movwf	(fputs@i+1)^0,c
  2213   001E34  0E00               	movlw	0
  2214   001E36  6E18               	movwf	fputs@i^0,c
  2215   001E38  EF29  F00F         	goto	l2709
  2216   001E3C                     l2705:
  2217   001E3C  C017  F00A         	movff	fputs@c,fputc@c
  2218   001E40  6A0B               	clrf	(fputc@c+1)^0,c
  2219   001E42  C015  F00C         	movff	fputs@fp,fputc@fp
  2220   001E46  C016  F00D         	movff	fputs@fp+1,fputc@fp+1
  2221   001E4A  ECE9  F00C         	call	_fputc	;wreg free
  2222   001E4E  4A18               	infsnz	fputs@i^0,f,c
  2223   001E50  2A19               	incf	(fputs@i+1)^0,f,c
  2224   001E52                     l2709:
  2225   001E52  5018               	movf	fputs@i^0,w,c
  2226   001E54  2413               	addwf	fputs@s^0,w,c
  2227   001E56  6ED9               	movwf	fsr2l,c
  2228   001E58  5019               	movf	(fputs@i+1)^0,w,c
  2229   001E5A  2014               	addwfc	(fputs@s+1)^0,w,c
  2230   001E5C  6EDA               	movwf	fsr2h,c
  2231   001E5E  50DF               	movf	indf2,w,c
  2232   001E60  6E17               	movwf	fputs@c^0,c
  2233   001E62  5017               	movf	fputs@c^0,w,c
  2234   001E64  A4D8               	btfss	status,2,c
  2235   001E66  EF37  F00F         	goto	u1801
  2236   001E6A  EF39  F00F         	goto	u1800
  2237   001E6E                     u1801:
  2238   001E6E  EF1E  F00F         	goto	l2705
  2239   001E72                     u1800:
  2240   001E72  0012               	return		;funcret
  2241   001E74                     __end_of_fputs:
  2242                           	callstack 0
  2243                           
  2244 ;; *************** function _fputc *****************
  2245 ;; Defined at:
  2246 ;;		line 8 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\nf_fputc.c"
  2247 ;; Parameters:    Size  Location     Type
  2248 ;;  c               2    9[COMRAM] int 
  2249 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2250 ;;		 -> sprintf@f(11), 
  2251 ;; Auto vars:     Size  Location     Type
  2252 ;;		None
  2253 ;; Return value:  Size  Location     Type
  2254 ;;                  2    9[COMRAM] int 
  2255 ;; Registers used:
  2256 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2257 ;; Tracked objects:
  2258 ;;		On entry : 0/0
  2259 ;;		On exit  : 0/0
  2260 ;;		Unchanged: 0/0
  2261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2262 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2264 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2265 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2266 ;;Total ram usage:        9 bytes
  2267 ;; Hardware stack levels used: 1
  2268 ;; Hardware stack levels required when called: 4
  2269 ;; This function calls:
  2270 ;;		_putch
  2271 ;; This function is called by:
  2272 ;;		_pad
  2273 ;;		_vfpfcnvrt
  2274 ;;		_fputs
  2275 ;; This function uses a non-reentrant model
  2276 ;;
  2277                           
  2278                           	psect	text7
  2279   0019D2                     __ptext7:
  2280                           	callstack 0
  2281   0019D2                     _fputc:
  2282                           	callstack 23
  2283   0019D2  500C               	movf	fputc@fp^0,w,c
  2284   0019D4  100D               	iorwf	(fputc@fp+1)^0,w,c
  2285   0019D6  B4D8               	btfsc	status,2,c
  2286   0019D8  EFF0  F00C         	goto	u1761
  2287   0019DC  EFF2  F00C         	goto	u1760
  2288   0019E0                     u1761:
  2289   0019E0  EFFB  F00C         	goto	l2693
  2290   0019E4                     u1760:
  2291   0019E4  500C               	movf	fputc@fp^0,w,c
  2292   0019E6  100D               	iorwf	(fputc@fp+1)^0,w,c
  2293   0019E8  A4D8               	btfss	status,2,c
  2294   0019EA  EFF9  F00C         	goto	u1771
  2295   0019EE  EFFB  F00C         	goto	u1770
  2296   0019F2                     u1771:
  2297   0019F2  EF00  F00D         	goto	l2695
  2298   0019F6                     u1770:
  2299   0019F6                     l2693:
  2300   0019F6  500A               	movf	fputc@c^0,w,c
  2301   0019F8  ECED  F010         	call	_putch
  2302   0019FC  EF4D  F00D         	goto	l1230
  2303   001A00                     l2695:
  2304   001A00  EE20 F009          	lfsr	2,9
  2305   001A04  500C               	movf	fputc@fp^0,w,c
  2306   001A06  26D9               	addwf	fsr2l,f,c
  2307   001A08  500D               	movf	(fputc@fp+1)^0,w,c
  2308   001A0A  22DA               	addwfc	fsr2h,f,c
  2309   001A0C  50DE               	movf	postinc2,w,c
  2310   001A0E  10DE               	iorwf	postinc2,w,c
  2311   001A10  B4D8               	btfsc	status,2,c
  2312   001A12  EF0D  F00D         	goto	u1781
  2313   001A16  EF0F  F00D         	goto	u1780
  2314   001A1A                     u1781:
  2315   001A1A  EF2A  F00D         	goto	l2699
  2316   001A1E                     u1780:
  2317   001A1E  EE20 F009          	lfsr	2,9
  2318   001A22  500C               	movf	fputc@fp^0,w,c
  2319   001A24  26D9               	addwf	fsr2l,f,c
  2320   001A26  500D               	movf	(fputc@fp+1)^0,w,c
  2321   001A28  22DA               	addwfc	fsr2h,f,c
  2322   001A2A  EE10 F003          	lfsr	1,3
  2323   001A2E  500C               	movf	fputc@fp^0,w,c
  2324   001A30  26E1               	addwf	fsr1l,f,c
  2325   001A32  500D               	movf	(fputc@fp+1)^0,w,c
  2326   001A34  22E2               	addwfc	fsr1h,f,c
  2327   001A36  50DE               	movf	postinc2,w,c
  2328   001A38  5CE6               	subwf	postinc1,w,c
  2329   001A3A  50E6               	movf	postinc1,w,c
  2330   001A3C  0A80               	xorlw	128
  2331   001A3E  6E12               	movwf	(??_fputc+4)^0,c
  2332   001A40  50DE               	movf	postinc2,w,c
  2333   001A42  0A80               	xorlw	128
  2334   001A44  5812               	subwfb	(??_fputc+4)^0,w,c
  2335   001A46  B0D8               	btfsc	status,0,c
  2336   001A48  EF28  F00D         	goto	u1791
  2337   001A4C  EF2A  F00D         	goto	u1790
  2338   001A50                     u1791:
  2339   001A50  EF4D  F00D         	goto	l1230
  2340   001A54                     u1790:
  2341   001A54                     l2699:
  2342   001A54  EE20 F003          	lfsr	2,3
  2343   001A58  500C               	movf	fputc@fp^0,w,c
  2344   001A5A  26D9               	addwf	fsr2l,f,c
  2345   001A5C  500D               	movf	(fputc@fp+1)^0,w,c
  2346   001A5E  22DA               	addwfc	fsr2h,f,c
  2347   001A60  CFDE F00E          	movff	postinc2,??_fputc
  2348   001A64  CFDD F00F          	movff	postdec2,??_fputc+1
  2349   001A68  C00C  FFD9         	movff	fputc@fp,fsr2l
  2350   001A6C  C00D  FFDA         	movff	fputc@fp+1,fsr2h
  2351   001A70  CFDE F010          	movff	postinc2,??_fputc+2
  2352   001A74  CFDD F011          	movff	postdec2,??_fputc+3
  2353   001A78  500E               	movf	??_fputc^0,w,c
  2354   001A7A  2410               	addwf	(??_fputc+2)^0,w,c
  2355   001A7C  6ED9               	movwf	fsr2l,c
  2356   001A7E  500F               	movf	(??_fputc+1)^0,w,c
  2357   001A80  2011               	addwfc	(??_fputc+3)^0,w,c
  2358   001A82  6EDA               	movwf	fsr2h,c
  2359   001A84  C00A  FFDF         	movff	fputc@c,indf2
  2360   001A88  EE20 F003          	lfsr	2,3
  2361   001A8C  500C               	movf	fputc@fp^0,w,c
  2362   001A8E  26D9               	addwf	fsr2l,f,c
  2363   001A90  500D               	movf	(fputc@fp+1)^0,w,c
  2364   001A92  22DA               	addwfc	fsr2h,f,c
  2365   001A94  2ADE               	incf	postinc2,f,c
  2366   001A96  0E00               	movlw	0
  2367   001A98  22DD               	addwfc	postdec2,f,c
  2368   001A9A                     l1230:
  2369   001A9A  0012               	return		;funcret
  2370   001A9C                     __end_of_fputc:
  2371                           	callstack 0
  2372                           
  2373 ;; *************** function _putch *****************
  2374 ;; Defined at:
  2375 ;;		line 7 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\putch.c"
  2376 ;; Parameters:    Size  Location     Type
  2377 ;;  c               1    wreg     unsigned char 
  2378 ;; Auto vars:     Size  Location     Type
  2379 ;;  c               1    0[COMRAM] unsigned char 
  2380 ;; Return value:  Size  Location     Type
  2381 ;;                  1    wreg      void 
  2382 ;; Registers used:
  2383 ;;		wreg
  2384 ;; Tracked objects:
  2385 ;;		On entry : 0/0
  2386 ;;		On exit  : 0/0
  2387 ;;		Unchanged: 0/0
  2388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2393 ;;Total ram usage:        0 bytes
  2394 ;; Hardware stack levels used: 1
  2395 ;; Hardware stack levels required when called: 3
  2396 ;; This function calls:
  2397 ;;		Nothing
  2398 ;; This function is called by:
  2399 ;;		_fputc
  2400 ;; This function uses a non-reentrant model
  2401 ;;
  2402                           
  2403                           	psect	text8
  2404   0021DA                     __ptext8:
  2405                           	callstack 0
  2406   0021DA                     _putch:
  2407                           	callstack 23
  2408   0021DA  0012               	return		;funcret
  2409   0021DC                     __end_of_putch:
  2410                           	callstack 0
  2411                           
  2412 ;; *************** function _abs *****************
  2413 ;; Defined at:
  2414 ;;		line 1 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\abs.c"
  2415 ;; Parameters:    Size  Location     Type
  2416 ;;  a               2   27[COMRAM] int 
  2417 ;; Auto vars:     Size  Location     Type
  2418 ;;		None
  2419 ;; Return value:  Size  Location     Type
  2420 ;;                  2   27[COMRAM] int 
  2421 ;; Registers used:
  2422 ;;		wreg, status,2, status,0
  2423 ;; Tracked objects:
  2424 ;;		On entry : 0/0
  2425 ;;		On exit  : 0/0
  2426 ;;		Unchanged: 0/0
  2427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2428 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2430 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2431 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2432 ;;Total ram usage:        4 bytes
  2433 ;; Hardware stack levels used: 1
  2434 ;; Hardware stack levels required when called: 3
  2435 ;; This function calls:
  2436 ;;		Nothing
  2437 ;; This function is called by:
  2438 ;;		_dtoa
  2439 ;; This function uses a non-reentrant model
  2440 ;;
  2441                           
  2442                           	psect	text9
  2443   001EB6                     __ptext9:
  2444                           	callstack 0
  2445   001EB6                     _abs:
  2446                           	callstack 23
  2447   001EB6  BE1D               	btfsc	(abs@a+1)^0,7,c
  2448   001EB8  EF68  F00F         	goto	u1980
  2449   001EBC  501D               	movf	(abs@a+1)^0,w,c
  2450   001EBE  E106               	bnz	u1981
  2451   001EC0  041C               	decf	abs@a^0,w,c
  2452   001EC2  B0D8               	btfsc	status,0,c
  2453   001EC4  EF66  F00F         	goto	u1981
  2454   001EC8  EF68  F00F         	goto	u1980
  2455   001ECC                     u1981:
  2456   001ECC  EF76  F00F         	goto	l1176
  2457   001ED0                     u1980:
  2458   001ED0  C01C  F01E         	movff	abs@a,??_abs
  2459   001ED4  C01D  F01F         	movff	abs@a+1,??_abs+1
  2460   001ED8  1E1E               	comf	??_abs^0,f,c
  2461   001EDA  1E1F               	comf	(??_abs+1)^0,f,c
  2462   001EDC  4A1E               	infsnz	??_abs^0,f,c
  2463   001EDE  2A1F               	incf	(??_abs+1)^0,f,c
  2464   001EE0  C01E  F01C         	movff	??_abs,?_abs
  2465   001EE4  C01F  F01D         	movff	??_abs+1,?_abs+1
  2466   001EE8  EF7A  F00F         	goto	l1179
  2467   001EEC                     l1176:
  2468   001EEC  C01C  F01C         	movff	abs@a,?_abs
  2469   001EF0  C01D  F01D         	movff	abs@a+1,?_abs+1
  2470   001EF4                     l1179:
  2471   001EF4  0012               	return		;funcret
  2472   001EF6                     __end_of_abs:
  2473                           	callstack 0
  2474                           
  2475 ;; *************** function ___aomod *****************
  2476 ;; Defined at:
  2477 ;;		line 9 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\aomod.c"
  2478 ;; Parameters:    Size  Location     Type
  2479 ;;  dividend        8    9[COMRAM] long long 
  2480 ;;  divisor         8   17[COMRAM] long long 
  2481 ;; Auto vars:     Size  Location     Type
  2482 ;;  sign            1   26[COMRAM] unsigned char 
  2483 ;;  counter         1   25[COMRAM] unsigned char 
  2484 ;; Return value:  Size  Location     Type
  2485 ;;                  8    9[COMRAM] long long 
  2486 ;; Registers used:
  2487 ;;		wreg, status,2, status,0
  2488 ;; Tracked objects:
  2489 ;;		On entry : 0/0
  2490 ;;		On exit  : 0/0
  2491 ;;		Unchanged: 0/0
  2492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2493 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2494 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2496 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2497 ;;Total ram usage:       18 bytes
  2498 ;; Hardware stack levels used: 1
  2499 ;; Hardware stack levels required when called: 3
  2500 ;; This function calls:
  2501 ;;		Nothing
  2502 ;; This function is called by:
  2503 ;;		_dtoa
  2504 ;; This function uses a non-reentrant model
  2505 ;;
  2506                           
  2507                           	psect	text10
  2508   001710                     __ptext10:
  2509                           	callstack 0
  2510   001710                     ___aomod:
  2511                           	callstack 23
  2512   001710  0E00               	movlw	0
  2513   001712  6E1B               	movwf	___aomod@sign^0,c
  2514   001714  BE11               	btfsc	(___aomod@dividend+7)^0,7,c
  2515   001716  EF91  F00B         	goto	u1880
  2516   00171A  EF8F  F00B         	goto	u1881
  2517   00171E                     u1881:
  2518   00171E  EFA3  F00B         	goto	l2769
  2519   001722                     u1880:
  2520   001722  1E11               	comf	(___aomod@dividend+7)^0,f,c
  2521   001724  1E10               	comf	(___aomod@dividend+6)^0,f,c
  2522   001726  1E0F               	comf	(___aomod@dividend+5)^0,f,c
  2523   001728  1E0E               	comf	(___aomod@dividend+4)^0,f,c
  2524   00172A  1E0D               	comf	(___aomod@dividend+3)^0,f,c
  2525   00172C  1E0C               	comf	(___aomod@dividend+2)^0,f,c
  2526   00172E  1E0B               	comf	(___aomod@dividend+1)^0,f,c
  2527   001730  6C0A               	negf	___aomod@dividend^0,c
  2528   001732  0E00               	movlw	0
  2529   001734  220B               	addwfc	(___aomod@dividend+1)^0,f,c
  2530   001736  220C               	addwfc	(___aomod@dividend+2)^0,f,c
  2531   001738  220D               	addwfc	(___aomod@dividend+3)^0,f,c
  2532   00173A  220E               	addwfc	(___aomod@dividend+4)^0,f,c
  2533   00173C  220F               	addwfc	(___aomod@dividend+5)^0,f,c
  2534   00173E  2210               	addwfc	(___aomod@dividend+6)^0,f,c
  2535   001740  2211               	addwfc	(___aomod@dividend+7)^0,f,c
  2536   001742  0E01               	movlw	1
  2537   001744  6E1B               	movwf	___aomod@sign^0,c
  2538   001746                     l2769:
  2539   001746  BE19               	btfsc	(___aomod@divisor+7)^0,7,c
  2540   001748  EFAA  F00B         	goto	u1890
  2541   00174C  EFA8  F00B         	goto	u1891
  2542   001750                     u1891:
  2543   001750  EFBA  F00B         	goto	l2773
  2544   001754                     u1890:
  2545   001754  1E19               	comf	(___aomod@divisor+7)^0,f,c
  2546   001756  1E18               	comf	(___aomod@divisor+6)^0,f,c
  2547   001758  1E17               	comf	(___aomod@divisor+5)^0,f,c
  2548   00175A  1E16               	comf	(___aomod@divisor+4)^0,f,c
  2549   00175C  1E15               	comf	(___aomod@divisor+3)^0,f,c
  2550   00175E  1E14               	comf	(___aomod@divisor+2)^0,f,c
  2551   001760  1E13               	comf	(___aomod@divisor+1)^0,f,c
  2552   001762  6C12               	negf	___aomod@divisor^0,c
  2553   001764  0E00               	movlw	0
  2554   001766  2213               	addwfc	(___aomod@divisor+1)^0,f,c
  2555   001768  2214               	addwfc	(___aomod@divisor+2)^0,f,c
  2556   00176A  2215               	addwfc	(___aomod@divisor+3)^0,f,c
  2557   00176C  2216               	addwfc	(___aomod@divisor+4)^0,f,c
  2558   00176E  2217               	addwfc	(___aomod@divisor+5)^0,f,c
  2559   001770  2218               	addwfc	(___aomod@divisor+6)^0,f,c
  2560   001772  2219               	addwfc	(___aomod@divisor+7)^0,f,c
  2561   001774                     l2773:
  2562   001774  5012               	movf	___aomod@divisor^0,w,c
  2563   001776  1013               	iorwf	(___aomod@divisor+1)^0,w,c
  2564   001778  1014               	iorwf	(___aomod@divisor+2)^0,w,c
  2565   00177A  1015               	iorwf	(___aomod@divisor+3)^0,w,c
  2566   00177C  1016               	iorwf	(___aomod@divisor+4)^0,w,c
  2567   00177E  1017               	iorwf	(___aomod@divisor+5)^0,w,c
  2568   001780  1018               	iorwf	(___aomod@divisor+6)^0,w,c
  2569   001782  1019               	iorwf	(___aomod@divisor+7)^0,w,c
  2570   001784  B4D8               	btfsc	status,2,c
  2571   001786  EFC7  F00B         	goto	u1901
  2572   00178A  EFC9  F00B         	goto	u1900
  2573   00178E                     u1901:
  2574   00178E  EF11  F00C         	goto	l2789
  2575   001792                     u1900:
  2576   001792  0E01               	movlw	1
  2577   001794  6E1A               	movwf	___aomod@counter^0,c
  2578   001796  EFD7  F00B         	goto	l2779
  2579   00179A                     l2777:
  2580   00179A  90D8               	bcf	status,0,c
  2581   00179C  3612               	rlcf	___aomod@divisor^0,f,c
  2582   00179E  3613               	rlcf	(___aomod@divisor+1)^0,f,c
  2583   0017A0  3614               	rlcf	(___aomod@divisor+2)^0,f,c
  2584   0017A2  3615               	rlcf	(___aomod@divisor+3)^0,f,c
  2585   0017A4  3616               	rlcf	(___aomod@divisor+4)^0,f,c
  2586   0017A6  3617               	rlcf	(___aomod@divisor+5)^0,f,c
  2587   0017A8  3618               	rlcf	(___aomod@divisor+6)^0,f,c
  2588   0017AA  3619               	rlcf	(___aomod@divisor+7)^0,f,c
  2589   0017AC  2A1A               	incf	___aomod@counter^0,f,c
  2590   0017AE                     l2779:
  2591   0017AE  AE19               	btfss	(___aomod@divisor+7)^0,7,c
  2592   0017B0  EFDC  F00B         	goto	u1911
  2593   0017B4  EFDE  F00B         	goto	u1910
  2594   0017B8                     u1911:
  2595   0017B8  EFCD  F00B         	goto	l2777
  2596   0017BC                     u1910:
  2597   0017BC                     l2781:
  2598   0017BC  5012               	movf	___aomod@divisor^0,w,c
  2599   0017BE  5C0A               	subwf	___aomod@dividend^0,w,c
  2600   0017C0  5013               	movf	(___aomod@divisor+1)^0,w,c
  2601   0017C2  580B               	subwfb	(___aomod@dividend+1)^0,w,c
  2602   0017C4  5014               	movf	(___aomod@divisor+2)^0,w,c
  2603   0017C6  580C               	subwfb	(___aomod@dividend+2)^0,w,c
  2604   0017C8  5015               	movf	(___aomod@divisor+3)^0,w,c
  2605   0017CA  580D               	subwfb	(___aomod@dividend+3)^0,w,c
  2606   0017CC  5016               	movf	(___aomod@divisor+4)^0,w,c
  2607   0017CE  580E               	subwfb	(___aomod@dividend+4)^0,w,c
  2608   0017D0  5017               	movf	(___aomod@divisor+5)^0,w,c
  2609   0017D2  580F               	subwfb	(___aomod@dividend+5)^0,w,c
  2610   0017D4  5018               	movf	(___aomod@divisor+6)^0,w,c
  2611   0017D6  5810               	subwfb	(___aomod@dividend+6)^0,w,c
  2612   0017D8  5019               	movf	(___aomod@divisor+7)^0,w,c
  2613   0017DA  5811               	subwfb	(___aomod@dividend+7)^0,w,c
  2614   0017DC  A0D8               	btfss	status,0,c
  2615   0017DE  EFF3  F00B         	goto	u1921
  2616   0017E2  EFF5  F00B         	goto	u1920
  2617   0017E6                     u1921:
  2618   0017E6  EF05  F00C         	goto	l2785
  2619   0017EA                     u1920:
  2620   0017EA  5012               	movf	___aomod@divisor^0,w,c
  2621   0017EC  5E0A               	subwf	___aomod@dividend^0,f,c
  2622   0017EE  5013               	movf	(___aomod@divisor+1)^0,w,c
  2623   0017F0  5A0B               	subwfb	(___aomod@dividend+1)^0,f,c
  2624   0017F2  5014               	movf	(___aomod@divisor+2)^0,w,c
  2625   0017F4  5A0C               	subwfb	(___aomod@dividend+2)^0,f,c
  2626   0017F6  5015               	movf	(___aomod@divisor+3)^0,w,c
  2627   0017F8  5A0D               	subwfb	(___aomod@dividend+3)^0,f,c
  2628   0017FA  5016               	movf	(___aomod@divisor+4)^0,w,c
  2629   0017FC  5A0E               	subwfb	(___aomod@dividend+4)^0,f,c
  2630   0017FE  5017               	movf	(___aomod@divisor+5)^0,w,c
  2631   001800  5A0F               	subwfb	(___aomod@dividend+5)^0,f,c
  2632   001802  5018               	movf	(___aomod@divisor+6)^0,w,c
  2633   001804  5A10               	subwfb	(___aomod@dividend+6)^0,f,c
  2634   001806  5019               	movf	(___aomod@divisor+7)^0,w,c
  2635   001808  5A11               	subwfb	(___aomod@dividend+7)^0,f,c
  2636   00180A                     l2785:
  2637   00180A  90D8               	bcf	status,0,c
  2638   00180C  3219               	rrcf	(___aomod@divisor+7)^0,f,c
  2639   00180E  3218               	rrcf	(___aomod@divisor+6)^0,f,c
  2640   001810  3217               	rrcf	(___aomod@divisor+5)^0,f,c
  2641   001812  3216               	rrcf	(___aomod@divisor+4)^0,f,c
  2642   001814  3215               	rrcf	(___aomod@divisor+3)^0,f,c
  2643   001816  3214               	rrcf	(___aomod@divisor+2)^0,f,c
  2644   001818  3213               	rrcf	(___aomod@divisor+1)^0,f,c
  2645   00181A  3212               	rrcf	___aomod@divisor^0,f,c
  2646   00181C  2E1A               	decfsz	___aomod@counter^0,f,c
  2647   00181E  EFDE  F00B         	goto	l2781
  2648   001822                     l2789:
  2649   001822  501B               	movf	___aomod@sign^0,w,c
  2650   001824  B4D8               	btfsc	status,2,c
  2651   001826  EF17  F00C         	goto	u1931
  2652   00182A  EF19  F00C         	goto	u1930
  2653   00182E                     u1931:
  2654   00182E  EF29  F00C         	goto	l2793
  2655   001832                     u1930:
  2656   001832  1E11               	comf	(___aomod@dividend+7)^0,f,c
  2657   001834  1E10               	comf	(___aomod@dividend+6)^0,f,c
  2658   001836  1E0F               	comf	(___aomod@dividend+5)^0,f,c
  2659   001838  1E0E               	comf	(___aomod@dividend+4)^0,f,c
  2660   00183A  1E0D               	comf	(___aomod@dividend+3)^0,f,c
  2661   00183C  1E0C               	comf	(___aomod@dividend+2)^0,f,c
  2662   00183E  1E0B               	comf	(___aomod@dividend+1)^0,f,c
  2663   001840  6C0A               	negf	___aomod@dividend^0,c
  2664   001842  0E00               	movlw	0
  2665   001844  220B               	addwfc	(___aomod@dividend+1)^0,f,c
  2666   001846  220C               	addwfc	(___aomod@dividend+2)^0,f,c
  2667   001848  220D               	addwfc	(___aomod@dividend+3)^0,f,c
  2668   00184A  220E               	addwfc	(___aomod@dividend+4)^0,f,c
  2669   00184C  220F               	addwfc	(___aomod@dividend+5)^0,f,c
  2670   00184E  2210               	addwfc	(___aomod@dividend+6)^0,f,c
  2671   001850  2211               	addwfc	(___aomod@dividend+7)^0,f,c
  2672   001852                     l2793:
  2673   001852  C00A  F00A         	movff	___aomod@dividend,?___aomod
  2674   001856  C00B  F00B         	movff	___aomod@dividend+1,?___aomod+1
  2675   00185A  C00C  F00C         	movff	___aomod@dividend+2,?___aomod+2
  2676   00185E  C00D  F00D         	movff	___aomod@dividend+3,?___aomod+3
  2677   001862  C00E  F00E         	movff	___aomod@dividend+4,?___aomod+4
  2678   001866  C00F  F00F         	movff	___aomod@dividend+5,?___aomod+5
  2679   00186A  C010  F010         	movff	___aomod@dividend+6,?___aomod+6
  2680   00186E  C011  F011         	movff	___aomod@dividend+7,?___aomod+7
  2681   001872  0012               	return		;funcret
  2682   001874                     __end_of___aomod:
  2683                           	callstack 0
  2684                           
  2685 ;; *************** function ___aodiv *****************
  2686 ;; Defined at:
  2687 ;;		line 9 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\aodiv.c"
  2688 ;; Parameters:    Size  Location     Type
  2689 ;;  dividend        8    9[COMRAM] long long 
  2690 ;;  divisor         8   17[COMRAM] long long 
  2691 ;; Auto vars:     Size  Location     Type
  2692 ;;  quotient        8   27[COMRAM] long long 
  2693 ;;  sign            1   26[COMRAM] unsigned char 
  2694 ;;  counter         1   25[COMRAM] unsigned char 
  2695 ;; Return value:  Size  Location     Type
  2696 ;;                  8    9[COMRAM] long long 
  2697 ;; Registers used:
  2698 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2699 ;; Tracked objects:
  2700 ;;		On entry : 0/0
  2701 ;;		On exit  : 0/0
  2702 ;;		Unchanged: 0/0
  2703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2704 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2705 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2707 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2708 ;;Total ram usage:       26 bytes
  2709 ;; Hardware stack levels used: 1
  2710 ;; Hardware stack levels required when called: 3
  2711 ;; This function calls:
  2712 ;;		Nothing
  2713 ;; This function is called by:
  2714 ;;		_dtoa
  2715 ;; This function uses a non-reentrant model
  2716 ;;
  2717                           
  2718                           	psect	text11
  2719   001588                     __ptext11:
  2720                           	callstack 0
  2721   001588                     ___aodiv:
  2722                           	callstack 23
  2723   001588  0E00               	movlw	0
  2724   00158A  6E1B               	movwf	___aodiv@sign^0,c
  2725   00158C  BE19               	btfsc	(___aodiv@divisor+7)^0,7,c
  2726   00158E  EFCD  F00A         	goto	u1810
  2727   001592  EFCB  F00A         	goto	u1811
  2728   001596                     u1811:
  2729   001596  EFDF  F00A         	goto	l2725
  2730   00159A                     u1810:
  2731   00159A  1E19               	comf	(___aodiv@divisor+7)^0,f,c
  2732   00159C  1E18               	comf	(___aodiv@divisor+6)^0,f,c
  2733   00159E  1E17               	comf	(___aodiv@divisor+5)^0,f,c
  2734   0015A0  1E16               	comf	(___aodiv@divisor+4)^0,f,c
  2735   0015A2  1E15               	comf	(___aodiv@divisor+3)^0,f,c
  2736   0015A4  1E14               	comf	(___aodiv@divisor+2)^0,f,c
  2737   0015A6  1E13               	comf	(___aodiv@divisor+1)^0,f,c
  2738   0015A8  6C12               	negf	___aodiv@divisor^0,c
  2739   0015AA  0E00               	movlw	0
  2740   0015AC  2213               	addwfc	(___aodiv@divisor+1)^0,f,c
  2741   0015AE  2214               	addwfc	(___aodiv@divisor+2)^0,f,c
  2742   0015B0  2215               	addwfc	(___aodiv@divisor+3)^0,f,c
  2743   0015B2  2216               	addwfc	(___aodiv@divisor+4)^0,f,c
  2744   0015B4  2217               	addwfc	(___aodiv@divisor+5)^0,f,c
  2745   0015B6  2218               	addwfc	(___aodiv@divisor+6)^0,f,c
  2746   0015B8  2219               	addwfc	(___aodiv@divisor+7)^0,f,c
  2747   0015BA  0E01               	movlw	1
  2748   0015BC  6E1B               	movwf	___aodiv@sign^0,c
  2749   0015BE                     l2725:
  2750   0015BE  BE11               	btfsc	(___aodiv@dividend+7)^0,7,c
  2751   0015C0  EFE6  F00A         	goto	u1820
  2752   0015C4  EFE4  F00A         	goto	u1821
  2753   0015C8                     u1821:
  2754   0015C8  EFF8  F00A         	goto	l2731
  2755   0015CC                     u1820:
  2756   0015CC  1E11               	comf	(___aodiv@dividend+7)^0,f,c
  2757   0015CE  1E10               	comf	(___aodiv@dividend+6)^0,f,c
  2758   0015D0  1E0F               	comf	(___aodiv@dividend+5)^0,f,c
  2759   0015D2  1E0E               	comf	(___aodiv@dividend+4)^0,f,c
  2760   0015D4  1E0D               	comf	(___aodiv@dividend+3)^0,f,c
  2761   0015D6  1E0C               	comf	(___aodiv@dividend+2)^0,f,c
  2762   0015D8  1E0B               	comf	(___aodiv@dividend+1)^0,f,c
  2763   0015DA  6C0A               	negf	___aodiv@dividend^0,c
  2764   0015DC  0E00               	movlw	0
  2765   0015DE  220B               	addwfc	(___aodiv@dividend+1)^0,f,c
  2766   0015E0  220C               	addwfc	(___aodiv@dividend+2)^0,f,c
  2767   0015E2  220D               	addwfc	(___aodiv@dividend+3)^0,f,c
  2768   0015E4  220E               	addwfc	(___aodiv@dividend+4)^0,f,c
  2769   0015E6  220F               	addwfc	(___aodiv@dividend+5)^0,f,c
  2770   0015E8  2210               	addwfc	(___aodiv@dividend+6)^0,f,c
  2771   0015EA  2211               	addwfc	(___aodiv@dividend+7)^0,f,c
  2772   0015EC  0E01               	movlw	1
  2773   0015EE  1A1B               	xorwf	___aodiv@sign^0,f,c
  2774   0015F0                     l2731:
  2775   0015F0  EE20  F01C         	lfsr	2,___aodiv@quotient
  2776   0015F4  0E07               	movlw	7
  2777   0015F6                     u1831:
  2778   0015F6  6ADE               	clrf	postinc2,c
  2779   0015F8  06E8               	decf	wreg,f,c
  2780   0015FA  E2FD               	bc	u1831
  2781   0015FC  5012               	movf	___aodiv@divisor^0,w,c
  2782   0015FE  1013               	iorwf	(___aodiv@divisor+1)^0,w,c
  2783   001600  1014               	iorwf	(___aodiv@divisor+2)^0,w,c
  2784   001602  1015               	iorwf	(___aodiv@divisor+3)^0,w,c
  2785   001604  1016               	iorwf	(___aodiv@divisor+4)^0,w,c
  2786   001606  1017               	iorwf	(___aodiv@divisor+5)^0,w,c
  2787   001608  1018               	iorwf	(___aodiv@divisor+6)^0,w,c
  2788   00160A  1019               	iorwf	(___aodiv@divisor+7)^0,w,c
  2789   00160C  B4D8               	btfsc	status,2,c
  2790   00160E  EF0B  F00B         	goto	u1841
  2791   001612  EF0D  F00B         	goto	u1840
  2792   001616                     u1841:
  2793   001616  EF5F  F00B         	goto	l2753
  2794   00161A                     u1840:
  2795   00161A  0E01               	movlw	1
  2796   00161C  6E1A               	movwf	___aodiv@counter^0,c
  2797   00161E  EF1B  F00B         	goto	l2739
  2798   001622                     l2737:
  2799   001622  90D8               	bcf	status,0,c
  2800   001624  3612               	rlcf	___aodiv@divisor^0,f,c
  2801   001626  3613               	rlcf	(___aodiv@divisor+1)^0,f,c
  2802   001628  3614               	rlcf	(___aodiv@divisor+2)^0,f,c
  2803   00162A  3615               	rlcf	(___aodiv@divisor+3)^0,f,c
  2804   00162C  3616               	rlcf	(___aodiv@divisor+4)^0,f,c
  2805   00162E  3617               	rlcf	(___aodiv@divisor+5)^0,f,c
  2806   001630  3618               	rlcf	(___aodiv@divisor+6)^0,f,c
  2807   001632  3619               	rlcf	(___aodiv@divisor+7)^0,f,c
  2808   001634  2A1A               	incf	___aodiv@counter^0,f,c
  2809   001636                     l2739:
  2810   001636  AE19               	btfss	(___aodiv@divisor+7)^0,7,c
  2811   001638  EF20  F00B         	goto	u1851
  2812   00163C  EF22  F00B         	goto	u1850
  2813   001640                     u1851:
  2814   001640  EF11  F00B         	goto	l2737
  2815   001644                     u1850:
  2816   001644                     l2741:
  2817   001644  90D8               	bcf	status,0,c
  2818   001646  361C               	rlcf	___aodiv@quotient^0,f,c
  2819   001648  361D               	rlcf	(___aodiv@quotient+1)^0,f,c
  2820   00164A  361E               	rlcf	(___aodiv@quotient+2)^0,f,c
  2821   00164C  361F               	rlcf	(___aodiv@quotient+3)^0,f,c
  2822   00164E  3620               	rlcf	(___aodiv@quotient+4)^0,f,c
  2823   001650  3621               	rlcf	(___aodiv@quotient+5)^0,f,c
  2824   001652  3622               	rlcf	(___aodiv@quotient+6)^0,f,c
  2825   001654  3623               	rlcf	(___aodiv@quotient+7)^0,f,c
  2826   001656  5012               	movf	___aodiv@divisor^0,w,c
  2827   001658  5C0A               	subwf	___aodiv@dividend^0,w,c
  2828   00165A  5013               	movf	(___aodiv@divisor+1)^0,w,c
  2829   00165C  580B               	subwfb	(___aodiv@dividend+1)^0,w,c
  2830   00165E  5014               	movf	(___aodiv@divisor+2)^0,w,c
  2831   001660  580C               	subwfb	(___aodiv@dividend+2)^0,w,c
  2832   001662  5015               	movf	(___aodiv@divisor+3)^0,w,c
  2833   001664  580D               	subwfb	(___aodiv@dividend+3)^0,w,c
  2834   001666  5016               	movf	(___aodiv@divisor+4)^0,w,c
  2835   001668  580E               	subwfb	(___aodiv@dividend+4)^0,w,c
  2836   00166A  5017               	movf	(___aodiv@divisor+5)^0,w,c
  2837   00166C  580F               	subwfb	(___aodiv@dividend+5)^0,w,c
  2838   00166E  5018               	movf	(___aodiv@divisor+6)^0,w,c
  2839   001670  5810               	subwfb	(___aodiv@dividend+6)^0,w,c
  2840   001672  5019               	movf	(___aodiv@divisor+7)^0,w,c
  2841   001674  5811               	subwfb	(___aodiv@dividend+7)^0,w,c
  2842   001676  A0D8               	btfss	status,0,c
  2843   001678  EF40  F00B         	goto	u1861
  2844   00167C  EF42  F00B         	goto	u1860
  2845   001680                     u1861:
  2846   001680  EF53  F00B         	goto	l2749
  2847   001684                     u1860:
  2848   001684  5012               	movf	___aodiv@divisor^0,w,c
  2849   001686  5E0A               	subwf	___aodiv@dividend^0,f,c
  2850   001688  5013               	movf	(___aodiv@divisor+1)^0,w,c
  2851   00168A  5A0B               	subwfb	(___aodiv@dividend+1)^0,f,c
  2852   00168C  5014               	movf	(___aodiv@divisor+2)^0,w,c
  2853   00168E  5A0C               	subwfb	(___aodiv@dividend+2)^0,f,c
  2854   001690  5015               	movf	(___aodiv@divisor+3)^0,w,c
  2855   001692  5A0D               	subwfb	(___aodiv@dividend+3)^0,f,c
  2856   001694  5016               	movf	(___aodiv@divisor+4)^0,w,c
  2857   001696  5A0E               	subwfb	(___aodiv@dividend+4)^0,f,c
  2858   001698  5017               	movf	(___aodiv@divisor+5)^0,w,c
  2859   00169A  5A0F               	subwfb	(___aodiv@dividend+5)^0,f,c
  2860   00169C  5018               	movf	(___aodiv@divisor+6)^0,w,c
  2861   00169E  5A10               	subwfb	(___aodiv@dividend+6)^0,f,c
  2862   0016A0  5019               	movf	(___aodiv@divisor+7)^0,w,c
  2863   0016A2  5A11               	subwfb	(___aodiv@dividend+7)^0,f,c
  2864   0016A4  801C               	bsf	___aodiv@quotient^0,0,c
  2865   0016A6                     l2749:
  2866   0016A6  90D8               	bcf	status,0,c
  2867   0016A8  3219               	rrcf	(___aodiv@divisor+7)^0,f,c
  2868   0016AA  3218               	rrcf	(___aodiv@divisor+6)^0,f,c
  2869   0016AC  3217               	rrcf	(___aodiv@divisor+5)^0,f,c
  2870   0016AE  3216               	rrcf	(___aodiv@divisor+4)^0,f,c
  2871   0016B0  3215               	rrcf	(___aodiv@divisor+3)^0,f,c
  2872   0016B2  3214               	rrcf	(___aodiv@divisor+2)^0,f,c
  2873   0016B4  3213               	rrcf	(___aodiv@divisor+1)^0,f,c
  2874   0016B6  3212               	rrcf	___aodiv@divisor^0,f,c
  2875   0016B8  2E1A               	decfsz	___aodiv@counter^0,f,c
  2876   0016BA  EF22  F00B         	goto	l2741
  2877   0016BE                     l2753:
  2878   0016BE  501B               	movf	___aodiv@sign^0,w,c
  2879   0016C0  B4D8               	btfsc	status,2,c
  2880   0016C2  EF65  F00B         	goto	u1871
  2881   0016C6  EF67  F00B         	goto	u1870
  2882   0016CA                     u1871:
  2883   0016CA  EF77  F00B         	goto	l2757
  2884   0016CE                     u1870:
  2885   0016CE  1E23               	comf	(___aodiv@quotient+7)^0,f,c
  2886   0016D0  1E22               	comf	(___aodiv@quotient+6)^0,f,c
  2887   0016D2  1E21               	comf	(___aodiv@quotient+5)^0,f,c
  2888   0016D4  1E20               	comf	(___aodiv@quotient+4)^0,f,c
  2889   0016D6  1E1F               	comf	(___aodiv@quotient+3)^0,f,c
  2890   0016D8  1E1E               	comf	(___aodiv@quotient+2)^0,f,c
  2891   0016DA  1E1D               	comf	(___aodiv@quotient+1)^0,f,c
  2892   0016DC  6C1C               	negf	___aodiv@quotient^0,c
  2893   0016DE  0E00               	movlw	0
  2894   0016E0  221D               	addwfc	(___aodiv@quotient+1)^0,f,c
  2895   0016E2  221E               	addwfc	(___aodiv@quotient+2)^0,f,c
  2896   0016E4  221F               	addwfc	(___aodiv@quotient+3)^0,f,c
  2897   0016E6  2220               	addwfc	(___aodiv@quotient+4)^0,f,c
  2898   0016E8  2221               	addwfc	(___aodiv@quotient+5)^0,f,c
  2899   0016EA  2222               	addwfc	(___aodiv@quotient+6)^0,f,c
  2900   0016EC  2223               	addwfc	(___aodiv@quotient+7)^0,f,c
  2901   0016EE                     l2757:
  2902   0016EE  C01C  F00A         	movff	___aodiv@quotient,?___aodiv
  2903   0016F2  C01D  F00B         	movff	___aodiv@quotient+1,?___aodiv+1
  2904   0016F6  C01E  F00C         	movff	___aodiv@quotient+2,?___aodiv+2
  2905   0016FA  C01F  F00D         	movff	___aodiv@quotient+3,?___aodiv+3
  2906   0016FE  C020  F00E         	movff	___aodiv@quotient+4,?___aodiv+4
  2907   001702  C021  F00F         	movff	___aodiv@quotient+5,?___aodiv+5
  2908   001706  C022  F010         	movff	___aodiv@quotient+6,?___aodiv+6
  2909   00170A  C023  F011         	movff	___aodiv@quotient+7,?___aodiv+7
  2910   00170E  0012               	return		;funcret
  2911   001710                     __end_of___aodiv:
  2912                           	callstack 0
  2913                           
  2914 ;; *************** function _atoi *****************
  2915 ;; Defined at:
  2916 ;;		line 4 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\atoi.c"
  2917 ;; Parameters:    Size  Location     Type
  2918 ;;  s               2   15[COMRAM] PTR const unsigned char 
  2919 ;;		 -> STR_2(12), STR_1(28), 
  2920 ;; Auto vars:     Size  Location     Type
  2921 ;;  n               2   22[COMRAM] int 
  2922 ;;  neg             2   20[COMRAM] int 
  2923 ;; Return value:  Size  Location     Type
  2924 ;;                  2   15[COMRAM] int 
  2925 ;; Registers used:
  2926 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2927 ;; Tracked objects:
  2928 ;;		On entry : 0/0
  2929 ;;		On exit  : 0/0
  2930 ;;		Unchanged: 0/0
  2931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2932 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2933 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2934 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2935 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2936 ;;Total ram usage:        9 bytes
  2937 ;; Hardware stack levels used: 1
  2938 ;; Hardware stack levels required when called: 4
  2939 ;; This function calls:
  2940 ;;		___wmul
  2941 ;;		_isdigit
  2942 ;;		_isspace
  2943 ;; This function is called by:
  2944 ;;		_vfpfcnvrt
  2945 ;; This function uses a non-reentrant model
  2946 ;;
  2947                           
  2948                           	psect	text12
  2949   001874                     __ptext12:
  2950                           	callstack 0
  2951   001874                     _atoi:
  2952                           	callstack 23
  2953   001874  0E00               	movlw	0
  2954   001876  6E18               	movwf	(atoi@n+1)^0,c
  2955   001878  0E00               	movlw	0
  2956   00187A  6E17               	movwf	atoi@n^0,c
  2957   00187C  0E00               	movlw	0
  2958   00187E  6E16               	movwf	(atoi@neg+1)^0,c
  2959   001880  0E00               	movlw	0
  2960   001882  6E15               	movwf	atoi@neg^0,c
  2961   001884  EF46  F00C         	goto	l2905
  2962   001888                     l2901:
  2963   001888  4A10               	infsnz	atoi@s^0,f,c
  2964   00188A  2A11               	incf	(atoi@s+1)^0,f,c
  2965   00188C                     l2905:
  2966   00188C  C010  FFF6         	movff	atoi@s,tblptrl
  2967   001890  C011  FFF7         	movff	atoi@s+1,tblptrh
  2968   001894                     	if	0	;tblptru may be non-zero
  2969   001894                     	endif
  2970   001894                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2971   001894  0E00               	movlw	low (__mediumconst shr (0+16))
  2972   001896  6EF8               	movwf	tblptru,c
  2973   001898                     	endif
  2974   001898  0008               	tblrd		*
  2975   00189A  50F5               	movf	tablat,w,c
  2976   00189C  0A20               	xorlw	32
  2977   00189E  B4D8               	btfsc	status,2,c
  2978   0018A0  EF54  F00C         	goto	u2181
  2979   0018A4  EF56  F00C         	goto	u2180
  2980   0018A8                     u2181:
  2981   0018A8  EF44  F00C         	goto	l2901
  2982   0018AC                     u2180:
  2983   0018AC  C010  FFF6         	movff	atoi@s,tblptrl
  2984   0018B0  C011  FFF7         	movff	atoi@s+1,tblptrh
  2985   0018B4                     	if	0	;tblptru may be non-zero
  2986   0018B4                     	endif
  2987   0018B4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2988   0018B4  0E00               	movlw	low (__mediumconst shr (0+16))
  2989   0018B6  6EF8               	movwf	tblptru,c
  2990   0018B8                     	endif
  2991   0018B8  0008               	tblrd		*
  2992   0018BA  CFF5 F012          	movff	tablat,??_atoi
  2993   0018BE  0EF7               	movlw	247
  2994   0018C0  2412               	addwf	??_atoi^0,w,c
  2995   0018C2  6E13               	movwf	(??_atoi+1)^0,c
  2996   0018C4  6A14               	clrf	(??_atoi+2)^0,c
  2997   0018C6  0EFF               	movlw	255
  2998   0018C8  2214               	addwfc	(??_atoi+2)^0,f,c
  2999   0018CA  5014               	movf	(??_atoi+2)^0,w,c
  3000   0018CC  E109               	bnz	u2190
  3001   0018CE  0E05               	movlw	5
  3002   0018D0  5C13               	subwf	(??_atoi+1)^0,w,c
  3003   0018D2  A0D8               	btfss	status,0,c
  3004   0018D4  EF6E  F00C         	goto	u2191
  3005   0018D8  EF70  F00C         	goto	u2190
  3006   0018DC                     u2191:
  3007   0018DC  EF44  F00C         	goto	l2901
  3008   0018E0                     u2190:
  3009   0018E0  EF7A  F00C         	goto	l2913
  3010   0018E4                     l2909:
  3011   0018E4  0E00               	movlw	0
  3012   0018E6  6E16               	movwf	(atoi@neg+1)^0,c
  3013   0018E8  0E01               	movlw	1
  3014   0018EA  6E15               	movwf	atoi@neg^0,c
  3015   0018EC                     l2911:
  3016   0018EC  4A10               	infsnz	atoi@s^0,f,c
  3017   0018EE  2A11               	incf	(atoi@s+1)^0,f,c
  3018   0018F0  EFB3  F00C         	goto	l2921
  3019   0018F4                     l2913:
  3020   0018F4  C010  FFF6         	movff	atoi@s,tblptrl
  3021   0018F8  C011  FFF7         	movff	atoi@s+1,tblptrh
  3022   0018FC                     	if	0	;tblptru may be non-zero
  3023   0018FC                     	endif
  3024   0018FC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3025   0018FC  0E00               	movlw	low (__mediumconst shr (0+16))
  3026   0018FE  6EF8               	movwf	tblptru,c
  3027   001900                     	endif
  3028   001900  0008               	tblrd		*
  3029   001902  50F5               	movf	tablat,w,c
  3030   001904  6E12               	movwf	??_atoi^0,c
  3031   001906  6A13               	clrf	(??_atoi+1)^0,c
  3032                           
  3033                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3034                           ; Switch size 1, requested type "simple"
  3035                           ; Number of cases is 1, Range of values is 0 to 0
  3036                           ; switch strategies available:
  3037                           ; Name         Instructions Cycles
  3038                           ; simple_byte            4     3 (average)
  3039                           ;	Chosen strategy is simple_byte
  3040   001908  5013               	movf	(??_atoi+1)^0,w,c
  3041   00190A  0A00               	xorlw	0	; case 0
  3042   00190C  B4D8               	btfsc	status,2,c
  3043   00190E  EF8B  F00C         	goto	l3361
  3044   001912  EFB3  F00C         	goto	l2921
  3045   001916                     l3361:
  3046                           
  3047                           ; Switch size 1, requested type "simple"
  3048                           ; Number of cases is 2, Range of values is 43 to 45
  3049                           ; switch strategies available:
  3050                           ; Name         Instructions Cycles
  3051                           ; simple_byte            7     4 (average)
  3052                           ;	Chosen strategy is simple_byte
  3053   001916  5012               	movf	??_atoi^0,w,c
  3054   001918  0A2B               	xorlw	43	; case 43
  3055   00191A  B4D8               	btfsc	status,2,c
  3056   00191C  EF76  F00C         	goto	l2911
  3057   001920  0A06               	xorlw	6	; case 45
  3058   001922  B4D8               	btfsc	status,2,c
  3059   001924  EF72  F00C         	goto	l2909
  3060   001928  EFB3  F00C         	goto	l2921
  3061   00192C                     l2915:
  3062   00192C  C017  F00A         	movff	atoi@n,___wmul@multiplier
  3063   001930  C018  F00B         	movff	atoi@n+1,___wmul@multiplier+1
  3064   001934  0E00               	movlw	0
  3065   001936  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
  3066   001938  0E0A               	movlw	10
  3067   00193A  6E0C               	movwf	___wmul@multiplicand^0,c
  3068   00193C  EC55  F010         	call	___wmul	;wreg free
  3069   001940  C010  FFF6         	movff	atoi@s,tblptrl
  3070   001944  C011  FFF7         	movff	atoi@s+1,tblptrh
  3071   001948                     	if	0	;tblptru may be non-zero
  3072   001948                     	endif
  3073   001948                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3074   001948  0E00               	movlw	low (__mediumconst shr (0+16))
  3075   00194A  6EF8               	movwf	tblptru,c
  3076   00194C                     	endif
  3077   00194C  0008               	tblrd		*
  3078   00194E  50F5               	movf	tablat,w,c
  3079   001950  5E0A               	subwf	?___wmul^0,f,c
  3080   001952  0E00               	movlw	0
  3081   001954  5A0B               	subwfb	(?___wmul+1)^0,f,c
  3082   001956  0E30               	movlw	48
  3083   001958  240A               	addwf	?___wmul^0,w,c
  3084   00195A  6E17               	movwf	atoi@n^0,c
  3085   00195C  0E00               	movlw	0
  3086   00195E  200B               	addwfc	(?___wmul+1)^0,w,c
  3087   001960  6E18               	movwf	(atoi@n+1)^0,c
  3088   001962  EF76  F00C         	goto	l2911
  3089   001966                     l2921:
  3090   001966  C010  FFF6         	movff	atoi@s,tblptrl
  3091   00196A  C011  FFF7         	movff	atoi@s+1,tblptrh
  3092   00196E                     	if	0	;tblptru may be non-zero
  3093   00196E                     	endif
  3094   00196E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3095   00196E  0E00               	movlw	low (__mediumconst shr (0+16))
  3096   001970  6EF8               	movwf	tblptru,c
  3097   001972                     	endif
  3098   001972  0008               	tblrd		*
  3099   001974  CFF5 F012          	movff	tablat,??_atoi
  3100   001978  0ED0               	movlw	208
  3101   00197A  2412               	addwf	??_atoi^0,w,c
  3102   00197C  6E13               	movwf	(??_atoi+1)^0,c
  3103   00197E  6A14               	clrf	(??_atoi+2)^0,c
  3104   001980  0EFF               	movlw	255
  3105   001982  2214               	addwfc	(??_atoi+2)^0,f,c
  3106   001984  5014               	movf	(??_atoi+2)^0,w,c
  3107   001986  E109               	bnz	u2200
  3108   001988  0E0A               	movlw	10
  3109   00198A  5C13               	subwf	(??_atoi+1)^0,w,c
  3110   00198C  A0D8               	btfss	status,0,c
  3111   00198E  EFCB  F00C         	goto	u2201
  3112   001992  EFCD  F00C         	goto	u2200
  3113   001996                     u2201:
  3114   001996  EF96  F00C         	goto	l2915
  3115   00199A                     u2200:
  3116   00199A  5015               	movf	atoi@neg^0,w,c
  3117   00199C  1016               	iorwf	(atoi@neg+1)^0,w,c
  3118   00199E  A4D8               	btfss	status,2,c
  3119   0019A0  EFD4  F00C         	goto	u2211
  3120   0019A4  EFD6  F00C         	goto	u2210
  3121   0019A8                     u2211:
  3122   0019A8  EFE4  F00C         	goto	l1201
  3123   0019AC                     u2210:
  3124   0019AC  C017  F012         	movff	atoi@n,??_atoi
  3125   0019B0  C018  F013         	movff	atoi@n+1,??_atoi+1
  3126   0019B4  1E12               	comf	??_atoi^0,f,c
  3127   0019B6  1E13               	comf	(??_atoi+1)^0,f,c
  3128   0019B8  4A12               	infsnz	??_atoi^0,f,c
  3129   0019BA  2A13               	incf	(??_atoi+1)^0,f,c
  3130   0019BC  C012  F010         	movff	??_atoi,?_atoi
  3131   0019C0  C013  F011         	movff	??_atoi+1,?_atoi+1
  3132   0019C4  EFE8  F00C         	goto	l1204
  3133   0019C8                     l1201:
  3134   0019C8  C017  F010         	movff	atoi@n,?_atoi
  3135   0019CC  C018  F011         	movff	atoi@n+1,?_atoi+1
  3136   0019D0                     l1204:
  3137   0019D0  0012               	return		;funcret
  3138   0019D2                     __end_of_atoi:
  3139                           	callstack 0
  3140                           
  3141 ;; *************** function _isspace *****************
  3142 ;; Defined at:
  3143 ;;		line 5 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\isspace.c"
  3144 ;; Parameters:    Size  Location     Type
  3145 ;;  c               2    9[COMRAM] int 
  3146 ;; Auto vars:     Size  Location     Type
  3147 ;;		None
  3148 ;; Return value:  Size  Location     Type
  3149 ;;                  2    9[COMRAM] int 
  3150 ;; Registers used:
  3151 ;;		wreg, status,2, status,0
  3152 ;; Tracked objects:
  3153 ;;		On entry : 0/0
  3154 ;;		On exit  : 0/0
  3155 ;;		Unchanged: 0/0
  3156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3157 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3158 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3159 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3160 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3161 ;;Total ram usage:        5 bytes
  3162 ;; Hardware stack levels used: 1
  3163 ;; Hardware stack levels required when called: 3
  3164 ;; This function calls:
  3165 ;;		Nothing
  3166 ;; This function is called by:
  3167 ;;		_atoi
  3168 ;; This function uses a non-reentrant model
  3169 ;;
  3170                           
  3171                           	psect	text13
  3172   001DEA                     __ptext13:
  3173                           	callstack 0
  3174   001DEA                     _isspace:
  3175                           	callstack 23
  3176   001DEA  0E01               	movlw	1
  3177   001DEC  6E0E               	movwf	_isspace$2347^0,c
  3178   001DEE  0E20               	movlw	32
  3179   001DF0  180A               	xorwf	isspace@c^0,w,c
  3180   001DF2  100B               	iorwf	(isspace@c+1)^0,w,c
  3181   001DF4  B4D8               	btfsc	status,2,c
  3182   001DF6  EFFF  F00E         	goto	u2011
  3183   001DFA  EF01  F00F         	goto	u2010
  3184   001DFE                     u2011:
  3185   001DFE  EF14  F00F         	goto	l2831
  3186   001E02                     u2010:
  3187   001E02  0EF7               	movlw	247
  3188   001E04  240A               	addwf	isspace@c^0,w,c
  3189   001E06  6E0C               	movwf	??_isspace^0,c
  3190   001E08  0EFF               	movlw	255
  3191   001E0A  200B               	addwfc	(isspace@c+1)^0,w,c
  3192   001E0C  6E0D               	movwf	(??_isspace+1)^0,c
  3193   001E0E  500D               	movf	(??_isspace+1)^0,w,c
  3194   001E10  E109               	bnz	u2020
  3195   001E12  0E05               	movlw	5
  3196   001E14  5C0C               	subwf	??_isspace^0,w,c
  3197   001E16  A0D8               	btfss	status,0,c
  3198   001E18  EF10  F00F         	goto	u2021
  3199   001E1C  EF12  F00F         	goto	u2020
  3200   001E20                     u2021:
  3201   001E20  EF14  F00F         	goto	l2831
  3202   001E24                     u2020:
  3203   001E24  0E00               	movlw	0
  3204   001E26  6E0E               	movwf	_isspace$2347^0,c
  3205   001E28                     l2831:
  3206   001E28  C00E  F00A         	movff	_isspace$2347,?_isspace
  3207   001E2C  6A0B               	clrf	(?_isspace+1)^0,c
  3208   001E2E  0012               	return		;funcret
  3209   001E30                     __end_of_isspace:
  3210                           	callstack 0
  3211                           
  3212 ;; *************** function _isdigit *****************
  3213 ;; Defined at:
  3214 ;;		line 5 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\isdigit.c"
  3215 ;; Parameters:    Size  Location     Type
  3216 ;;  c               2    9[COMRAM] int 
  3217 ;; Auto vars:     Size  Location     Type
  3218 ;;		None
  3219 ;; Return value:  Size  Location     Type
  3220 ;;                  2    9[COMRAM] int 
  3221 ;; Registers used:
  3222 ;;		wreg, status,2, status,0
  3223 ;; Tracked objects:
  3224 ;;		On entry : 0/0
  3225 ;;		On exit  : 0/0
  3226 ;;		Unchanged: 0/0
  3227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3228 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3230 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3231 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3232 ;;Total ram usage:        4 bytes
  3233 ;; Hardware stack levels used: 1
  3234 ;; Hardware stack levels required when called: 3
  3235 ;; This function calls:
  3236 ;;		Nothing
  3237 ;; This function is called by:
  3238 ;;		_vfpfcnvrt
  3239 ;;		_atoi
  3240 ;; This function uses a non-reentrant model
  3241 ;;
  3242                           
  3243                           	psect	text14
  3244   001F5A                     __ptext14:
  3245                           	callstack 0
  3246   001F5A                     _isdigit:
  3247                           	callstack 24
  3248   001F5A  0ED0               	movlw	208
  3249   001F5C  240A               	addwf	isdigit@c^0,w,c
  3250   001F5E  6E0C               	movwf	??_isdigit^0,c
  3251   001F60  0EFF               	movlw	255
  3252   001F62  200B               	addwfc	(isdigit@c+1)^0,w,c
  3253   001F64  6E0D               	movwf	(??_isdigit+1)^0,c
  3254   001F66  500D               	movf	(??_isdigit+1)^0,w,c
  3255   001F68  E10A               	bnz	u1990
  3256   001F6A  0E0A               	movlw	10
  3257   001F6C  5C0C               	subwf	??_isdigit^0,w,c
  3258   001F6E  A0D8               	btfss	status,0,c
  3259   001F70  EFBC  F00F         	goto	u1991
  3260   001F74  EFBF  F00F         	goto	u1990
  3261   001F78                     u1991:
  3262   001F78  0E01               	movlw	1
  3263   001F7A  EFC0  F00F         	goto	u2000
  3264   001F7E                     u1990:
  3265   001F7E  0E00               	movlw	0
  3266   001F80                     u2000:
  3267   001F80  6E0A               	movwf	?_isdigit^0,c
  3268   001F82  6A0B               	clrf	(?_isdigit+1)^0,c
  3269   001F84  0012               	return		;funcret
  3270   001F86                     __end_of_isdigit:
  3271                           	callstack 0
  3272                           
  3273 ;; *************** function ___wmul *****************
  3274 ;; Defined at:
  3275 ;;		line 15 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\Umul16.c"
  3276 ;; Parameters:    Size  Location     Type
  3277 ;;  multiplier      2    9[COMRAM] unsigned int 
  3278 ;;  multiplicand    2   11[COMRAM] unsigned int 
  3279 ;; Auto vars:     Size  Location     Type
  3280 ;;  product         2   13[COMRAM] unsigned int 
  3281 ;; Return value:  Size  Location     Type
  3282 ;;                  2    9[COMRAM] unsigned int 
  3283 ;; Registers used:
  3284 ;;		wreg, status,2, status,0, prodl, prodh
  3285 ;; Tracked objects:
  3286 ;;		On entry : 0/0
  3287 ;;		On exit  : 0/0
  3288 ;;		Unchanged: 0/0
  3289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3290 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3291 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3293 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3294 ;;Total ram usage:        6 bytes
  3295 ;; Hardware stack levels used: 1
  3296 ;; Hardware stack levels required when called: 3
  3297 ;; This function calls:
  3298 ;;		Nothing
  3299 ;; This function is called by:
  3300 ;;		_atoi
  3301 ;;		_setMotorPWM
  3302 ;; This function uses a non-reentrant model
  3303 ;;
  3304                           
  3305                           	psect	text15
  3306   0020AA                     __ptext15:
  3307                           	callstack 0
  3308   0020AA                     ___wmul:
  3309                           	callstack 23
  3310   0020AA  500A               	movf	___wmul@multiplier^0,w,c
  3311   0020AC  020C               	mulwf	___wmul@multiplicand^0,c
  3312   0020AE  CFF3 F00E          	movff	prodl,___wmul@product
  3313   0020B2  CFF4 F00F          	movff	prodh,___wmul@product+1
  3314   0020B6  500A               	movf	___wmul@multiplier^0,w,c
  3315   0020B8  020D               	mulwf	(___wmul@multiplicand+1)^0,c
  3316   0020BA  50F3               	movf	243,w,c
  3317   0020BC  260F               	addwf	(___wmul@product+1)^0,f,c
  3318   0020BE  500B               	movf	(___wmul@multiplier+1)^0,w,c
  3319   0020C0  020C               	mulwf	___wmul@multiplicand^0,c
  3320   0020C2  50F3               	movf	243,w,c
  3321   0020C4  260F               	addwf	(___wmul@product+1)^0,f,c
  3322   0020C6  C00E  F00A         	movff	___wmul@product,?___wmul
  3323   0020CA  C00F  F00B         	movff	___wmul@product+1,?___wmul+1
  3324   0020CE  0012               	return		;funcret
  3325   0020D0                     __end_of___wmul:
  3326                           	callstack 0
  3327                           
  3328 ;; *************** function _sendTxBuf *****************
  3329 ;; Defined at:
  3330 ;;		line 97 in file "serial.c"
  3331 ;; Parameters:    Size  Location     Type
  3332 ;;		None
  3333 ;; Auto vars:     Size  Location     Type
  3334 ;;		None
  3335 ;; Return value:  Size  Location     Type
  3336 ;;                  1    wreg      void 
  3337 ;; Registers used:
  3338 ;;		wreg, status,2, status,0, cstack
  3339 ;; Tracked objects:
  3340 ;;		On entry : 0/0
  3341 ;;		On exit  : 0/0
  3342 ;;		Unchanged: 0/0
  3343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3348 ;;Total ram usage:        0 bytes
  3349 ;; Hardware stack levels used: 1
  3350 ;; Hardware stack levels required when called: 4
  3351 ;; This function calls:
  3352 ;;		_isDataInTxBuf
  3353 ;; This function is called by:
  3354 ;;		_main
  3355 ;; This function uses a non-reentrant model
  3356 ;;
  3357                           
  3358                           	psect	text16
  3359   00212E                     __ptext16:
  3360                           	callstack 0
  3361   00212E                     _sendTxBuf:
  3362                           	callstack 26
  3363   00212E                     
  3364                           ;serial.c: 98:     if (isDataInTxBuf()) {PIE4bits.TX4IE=1;}
  3365   00212E  ECA4  F010         	call	_isDataInTxBuf	;wreg free
  3366   002132  0900               	iorlw	0
  3367   002134  B4D8               	btfsc	status,2,c
  3368   002136  EF9F  F010         	goto	u2401
  3369   00213A  EFA1  F010         	goto	u2400
  3370   00213E                     u2401:
  3371   00213E  EFA3  F010         	goto	l275
  3372   002142                     u2400:
  3373   002142  010E               	movlb	14	; () banked
  3374   002144  852D               	bsf	45,2,b	;volatile
  3375   002146                     l275:
  3376   002146  0012               	return		;funcret
  3377   002148                     __end_of_sendTxBuf:
  3378                           	callstack 0
  3379                           
  3380 ;; *************** function _isDataInTxBuf *****************
  3381 ;; Defined at:
  3382 ;;		line 82 in file "serial.c"
  3383 ;; Parameters:    Size  Location     Type
  3384 ;;		None
  3385 ;; Auto vars:     Size  Location     Type
  3386 ;;		None
  3387 ;; Return value:  Size  Location     Type
  3388 ;;                  1    wreg      unsigned char 
  3389 ;; Registers used:
  3390 ;;		wreg, status,2, status,0
  3391 ;; Tracked objects:
  3392 ;;		On entry : 0/0
  3393 ;;		On exit  : 0/0
  3394 ;;		Unchanged: 0/0
  3395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3400 ;;Total ram usage:        0 bytes
  3401 ;; Hardware stack levels used: 1
  3402 ;; Hardware stack levels required when called: 3
  3403 ;; This function calls:
  3404 ;;		Nothing
  3405 ;; This function is called by:
  3406 ;;		_sendTxBuf
  3407 ;; This function uses a non-reentrant model
  3408 ;;
  3409                           
  3410                           	psect	text17
  3411   002148                     __ptext17:
  3412                           	callstack 0
  3413   002148                     _isDataInTxBuf:
  3414                           	callstack 26
  3415   002148                     
  3416                           ;serial.c: 83:     return (TxBufWriteCnt!=TxBufReadCnt);
  3417   002148  5052               	movf	_TxBufReadCnt^0,w,c	;volatile
  3418   00214A  1853               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  3419   00214C  A4D8               	btfss	status,2,c
  3420   00214E  EFAB  F010         	goto	u2321
  3421   002152  EFAE  F010         	goto	u2320
  3422   002156                     u2321:
  3423   002156  0E01               	movlw	1
  3424   002158  EFAF  F010         	goto	u2330
  3425   00215C                     u2320:
  3426   00215C  0E00               	movlw	0
  3427   00215E                     u2330:
  3428   00215E  0012               	return		;funcret
  3429   002160                     __end_of_isDataInTxBuf:
  3430                           	callstack 0
  3431                           
  3432 ;; *************** function _isDataInRxBuf *****************
  3433 ;; Defined at:
  3434 ;;		line 62 in file "serial.c"
  3435 ;; Parameters:    Size  Location     Type
  3436 ;;		None
  3437 ;; Auto vars:     Size  Location     Type
  3438 ;;		None
  3439 ;; Return value:  Size  Location     Type
  3440 ;;                  1    wreg      unsigned char 
  3441 ;; Registers used:
  3442 ;;		wreg, status,2, status,0
  3443 ;; Tracked objects:
  3444 ;;		On entry : 0/0
  3445 ;;		On exit  : 0/0
  3446 ;;		Unchanged: 0/0
  3447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3452 ;;Total ram usage:        0 bytes
  3453 ;; Hardware stack levels used: 1
  3454 ;; Hardware stack levels required when called: 3
  3455 ;; This function calls:
  3456 ;;		Nothing
  3457 ;; This function is called by:
  3458 ;;		_main
  3459 ;; This function uses a non-reentrant model
  3460 ;;
  3461                           
  3462                           	psect	text18
  3463   002160                     __ptext18:
  3464                           	callstack 0
  3465   002160                     _isDataInRxBuf:
  3466                           	callstack 27
  3467   002160                     
  3468                           ;serial.c: 63:     return (RxBufWriteCnt!=RxBufReadCnt);
  3469   002160  5054               	movf	_RxBufReadCnt^0,w,c	;volatile
  3470   002162  1855               	xorwf	_RxBufWriteCnt^0,w,c	;volatile
  3471   002164  A4D8               	btfss	status,2,c
  3472   002166  EFB7  F010         	goto	u2371
  3473   00216A  EFBA  F010         	goto	u2370
  3474   00216E                     u2371:
  3475   00216E  0E01               	movlw	1
  3476   002170  EFBB  F010         	goto	u2380
  3477   002174                     u2370:
  3478   002174  0E00               	movlw	0
  3479   002176                     u2380:
  3480   002176  0012               	return		;funcret
  3481   002178                     __end_of_isDataInRxBuf:
  3482                           	callstack 0
  3483                           
  3484 ;; *************** function _initUSART4 *****************
  3485 ;; Defined at:
  3486 ;;		line 5 in file "serial.c"
  3487 ;; Parameters:    Size  Location     Type
  3488 ;;		None
  3489 ;; Auto vars:     Size  Location     Type
  3490 ;;		None
  3491 ;; Return value:  Size  Location     Type
  3492 ;;                  1    wreg      void 
  3493 ;; Registers used:
  3494 ;;		wreg, status,2
  3495 ;; Tracked objects:
  3496 ;;		On entry : 0/0
  3497 ;;		On exit  : 0/0
  3498 ;;		Unchanged: 0/0
  3499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3504 ;;Total ram usage:        0 bytes
  3505 ;; Hardware stack levels used: 1
  3506 ;; Hardware stack levels required when called: 3
  3507 ;; This function calls:
  3508 ;;		Nothing
  3509 ;; This function is called by:
  3510 ;;		_main
  3511 ;; This function uses a non-reentrant model
  3512 ;;
  3513                           
  3514                           	psect	text19
  3515   002110                     __ptext19:
  3516                           	callstack 0
  3517   002110                     _initUSART4:
  3518                           	callstack 27
  3519   002110                     
  3520                           ;serial.c: 8:     RC0PPS = 0x12;
  3521   002110  0E12               	movlw	18
  3522   002112  010E               	movlb	14	; () banked
  3523   002114  6F62               	movwf	98,b	;volatile
  3524                           
  3525                           ;serial.c: 9:     RX4PPS = 0x11;
  3526   002116  0E11               	movlw	17
  3527   002118  6F15               	movwf	21,b	;volatile
  3528   00211A                     
  3529                           ; BSR set to: 14
  3530                           ;serial.c: 11:     BAUD4CONbits.BRG16 = 0;
  3531   00211A  97E9               	bcf	233,3,b	;volatile
  3532   00211C                     
  3533                           ; BSR set to: 14
  3534                           ;serial.c: 12:     TX4STAbits.BRGH = 0;
  3535   00211C  95E8               	bcf	232,2,b	;volatile
  3536                           
  3537                           ;serial.c: 13:     SP4BRGL = 51;
  3538   00211E  0E33               	movlw	51
  3539   002120  6FE5               	movwf	229,b	;volatile
  3540                           
  3541                           ;serial.c: 14:     SP4BRGH = 0;
  3542   002122  0E00               	movlw	0
  3543   002124  6FE6               	movwf	230,b	;volatile
  3544   002126                     
  3545                           ; BSR set to: 14
  3546                           ;serial.c: 16:     RC4STAbits.CREN = 1;
  3547   002126  89E7               	bsf	231,4,b	;volatile
  3548   002128                     
  3549                           ; BSR set to: 14
  3550                           ;serial.c: 17:     TX4STAbits.TXEN = 1;
  3551   002128  8BE8               	bsf	232,5,b	;volatile
  3552   00212A                     
  3553                           ; BSR set to: 14
  3554                           ;serial.c: 18:     RC4STAbits.SPEN = 1;
  3555   00212A  8FE7               	bsf	231,7,b	;volatile
  3556   00212C                     
  3557                           ; BSR set to: 14
  3558   00212C  0012               	return		;funcret
  3559   00212E                     __end_of_initUSART4:
  3560                           	callstack 0
  3561                           
  3562 ;; *************** function _getCharFromRxBuf *****************
  3563 ;; Defined at:
  3564 ;;		line 48 in file "serial.c"
  3565 ;; Parameters:    Size  Location     Type
  3566 ;;		None
  3567 ;; Auto vars:     Size  Location     Type
  3568 ;;		None
  3569 ;; Return value:  Size  Location     Type
  3570 ;;                  1    wreg      unsigned char 
  3571 ;; Registers used:
  3572 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3573 ;; Tracked objects:
  3574 ;;		On entry : 0/0
  3575 ;;		On exit  : 0/0
  3576 ;;		Unchanged: 0/0
  3577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3580 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3581 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3582 ;;Total ram usage:        2 bytes
  3583 ;; Hardware stack levels used: 1
  3584 ;; Hardware stack levels required when called: 3
  3585 ;; This function calls:
  3586 ;;		Nothing
  3587 ;; This function is called by:
  3588 ;;		_main
  3589 ;; This function uses a non-reentrant model
  3590 ;;
  3591                           
  3592                           	psect	text20
  3593   001F86                     __ptext20:
  3594                           	callstack 0
  3595   001F86                     _getCharFromRxBuf:
  3596                           	callstack 27
  3597   001F86                     
  3598                           ;serial.c: 49:     if (RxBufReadCnt>=20) {RxBufReadCnt=0;}
  3599   001F86  0E13               	movlw	19
  3600   001F88  6454               	cpfsgt	_RxBufReadCnt^0,c	;volatile
  3601   001F8A  EFC9  F00F         	goto	u2361
  3602   001F8E  EFCB  F00F         	goto	u2360
  3603   001F92                     u2361:
  3604   001F92  EFCD  F00F         	goto	l3135
  3605   001F96                     u2360:
  3606   001F96  0E00               	movlw	0
  3607   001F98  6E54               	movwf	_RxBufReadCnt^0,c	;volatile
  3608   001F9A                     l3135:
  3609                           
  3610                           ;serial.c: 50:     return EUSART4RXbuf[RxBufReadCnt++];
  3611   001F9A  2A54               	incf	_RxBufReadCnt^0,f,c	;volatile
  3612   001F9C  0454               	decf	_RxBufReadCnt^0,w,c	;volatile
  3613   001F9E  6E0A               	movwf	??_getCharFromRxBuf^0,c
  3614   001FA0  6A0B               	clrf	(??_getCharFromRxBuf+1)^0,c
  3615   001FA2  0EC8               	movlw	low _EUSART4RXbuf
  3616   001FA4  240A               	addwf	??_getCharFromRxBuf^0,w,c
  3617   001FA6  6ED9               	movwf	fsr2l,c
  3618   001FA8  0E02               	movlw	high _EUSART4RXbuf
  3619   001FAA  200B               	addwfc	(??_getCharFromRxBuf+1)^0,w,c
  3620   001FAC  6EDA               	movwf	fsr2h,c
  3621   001FAE  50DF               	movf	indf2,w,c
  3622   001FB0  0012               	return		;funcret
  3623   001FB2                     __end_of_getCharFromRxBuf:
  3624                           	callstack 0
  3625                           
  3626 ;; *************** function _color_click_init *****************
  3627 ;; Defined at:
  3628 ;;		line 5 in file "color.c"
  3629 ;; Parameters:    Size  Location     Type
  3630 ;;		None
  3631 ;; Auto vars:     Size  Location     Type
  3632 ;;		None
  3633 ;; Return value:  Size  Location     Type
  3634 ;;                  1    wreg      void 
  3635 ;; Registers used:
  3636 ;;		wreg, status,2, status,0, cstack
  3637 ;; Tracked objects:
  3638 ;;		On entry : 0/0
  3639 ;;		On exit  : 0/0
  3640 ;;		Unchanged: 0/0
  3641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3644 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3645 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3646 ;;Total ram usage:        1 bytes
  3647 ;; Hardware stack levels used: 1
  3648 ;; Hardware stack levels required when called: 6
  3649 ;; This function calls:
  3650 ;;		_I2C_2_Master_Init
  3651 ;;		_color_writetoaddr
  3652 ;; This function is called by:
  3653 ;;		_main
  3654 ;; This function uses a non-reentrant model
  3655 ;;
  3656                           
  3657                           	psect	text21
  3658   001EF6                     __ptext21:
  3659                           	callstack 0
  3660   001EF6                     _color_click_init:
  3661                           	callstack 24
  3662   001EF6                     
  3663                           ;color.c: 8:     I2C_2_Master_Init();
  3664   001EF6  ECEF  F00F         	call	_I2C_2_Master_Init	;wreg free
  3665   001EFA                     
  3666                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  3667   001EFA  0E01               	movlw	1
  3668   001EFC  6E0C               	movwf	color_writetoaddr@value^0,c
  3669   001EFE  0E00               	movlw	0
  3670   001F00  EC68  F010         	call	_color_writetoaddr
  3671   001F04                     
  3672                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3673   001F04  0E3F               	movlw	63
  3674   001F06  6E0E               	movwf	??_color_click_init^0,c
  3675   001F08  0E55               	movlw	85
  3676   001F0A                     u2547:
  3677   001F0A  2EE8               	decfsz	wreg,f,c
  3678   001F0C  D7FE               	bra	u2547
  3679   001F0E  2E0E               	decfsz	??_color_click_init^0,f,c
  3680   001F10  D7FC               	bra	u2547
  3681   001F12  F000               	nop	
  3682   001F14                     
  3683                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  3684   001F14  0E03               	movlw	3
  3685   001F16  6E0C               	movwf	color_writetoaddr@value^0,c
  3686   001F18  0E00               	movlw	0
  3687   001F1A  EC68  F010         	call	_color_writetoaddr
  3688   001F1E                     
  3689                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  3690   001F1E  0ED5               	movlw	213
  3691   001F20  6E0C               	movwf	color_writetoaddr@value^0,c
  3692   001F22  0E01               	movlw	1
  3693   001F24  EC68  F010         	call	_color_writetoaddr
  3694   001F28  0012               	return		;funcret
  3695   001F2A                     __end_of_color_click_init:
  3696                           	callstack 0
  3697                           
  3698 ;; *************** function _color_writetoaddr *****************
  3699 ;; Defined at:
  3700 ;;		line 21 in file "color.c"
  3701 ;; Parameters:    Size  Location     Type
  3702 ;;  address         1    wreg     unsigned char 
  3703 ;;  value           1   11[COMRAM] unsigned char 
  3704 ;; Auto vars:     Size  Location     Type
  3705 ;;  address         1   12[COMRAM] unsigned char 
  3706 ;; Return value:  Size  Location     Type
  3707 ;;                  1    wreg      void 
  3708 ;; Registers used:
  3709 ;;		wreg, status,2, status,0, cstack
  3710 ;; Tracked objects:
  3711 ;;		On entry : 0/0
  3712 ;;		On exit  : 0/0
  3713 ;;		Unchanged: 0/0
  3714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3715 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3716 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3718 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3719 ;;Total ram usage:        2 bytes
  3720 ;; Hardware stack levels used: 1
  3721 ;; Hardware stack levels required when called: 5
  3722 ;; This function calls:
  3723 ;;		_I2C_2_Master_Start
  3724 ;;		_I2C_2_Master_Stop
  3725 ;;		_I2C_2_Master_Write
  3726 ;; This function is called by:
  3727 ;;		_color_click_init
  3728 ;; This function uses a non-reentrant model
  3729 ;;
  3730                           
  3731                           	psect	text22
  3732   0020D0                     __ptext22:
  3733                           	callstack 0
  3734   0020D0                     _color_writetoaddr:
  3735                           	callstack 24
  3736                           
  3737                           ;incstack = 0
  3738                           ;color_writetoaddr@address stored from wreg
  3739   0020D0  6E0D               	movwf	color_writetoaddr@address^0,c
  3740   0020D2                     
  3741                           ;color.c: 22:     I2C_2_Master_Start();
  3742   0020D2  ECDB  F010         	call	_I2C_2_Master_Start	;wreg free
  3743                           
  3744                           ;color.c: 23:     I2C_2_Master_Write(0x52 | 0x00);
  3745   0020D6  0E52               	movlw	82
  3746   0020D8  ECD0  F010         	call	_I2C_2_Master_Write
  3747                           
  3748                           ;color.c: 24:     I2C_2_Master_Write(0x80 | address);
  3749   0020DC  500D               	movf	color_writetoaddr@address^0,w,c
  3750   0020DE  0980               	iorlw	128
  3751   0020E0  ECD0  F010         	call	_I2C_2_Master_Write
  3752                           
  3753                           ;color.c: 25:     I2C_2_Master_Write(value);
  3754   0020E4  500C               	movf	color_writetoaddr@value^0,w,c
  3755   0020E6  ECD0  F010         	call	_I2C_2_Master_Write
  3756                           
  3757                           ;color.c: 26:     I2C_2_Master_Stop();
  3758   0020EA  ECD6  F010         	call	_I2C_2_Master_Stop	;wreg free
  3759   0020EE  0012               	return		;funcret
  3760   0020F0                     __end_of_color_writetoaddr:
  3761                           	callstack 0
  3762                           
  3763 ;; *************** function _I2C_2_Master_Init *****************
  3764 ;; Defined at:
  3765 ;;		line 4 in file "i2c.c"
  3766 ;; Parameters:    Size  Location     Type
  3767 ;;		None
  3768 ;; Auto vars:     Size  Location     Type
  3769 ;;		None
  3770 ;; Return value:  Size  Location     Type
  3771 ;;                  1    wreg      void 
  3772 ;; Registers used:
  3773 ;;		wreg, status,2
  3774 ;; Tracked objects:
  3775 ;;		On entry : 0/0
  3776 ;;		On exit  : 0/0
  3777 ;;		Unchanged: 0/0
  3778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3783 ;;Total ram usage:        0 bytes
  3784 ;; Hardware stack levels used: 1
  3785 ;; Hardware stack levels required when called: 3
  3786 ;; This function calls:
  3787 ;;		Nothing
  3788 ;; This function is called by:
  3789 ;;		_color_click_init
  3790 ;; This function uses a non-reentrant model
  3791 ;;
  3792                           
  3793                           	psect	text23
  3794   001FDE                     __ptext23:
  3795                           	callstack 0
  3796   001FDE                     _I2C_2_Master_Init:
  3797                           	callstack 26
  3798   001FDE                     
  3799                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3800   001FDE  010E               	movlb	14	; () banked
  3801   001FE0  51D9               	movf	217,w,b	;volatile
  3802   001FE2  0BF0               	andlw	-16
  3803   001FE4  0908               	iorlw	8
  3804   001FE6  6FD9               	movwf	217,b	;volatile
  3805   001FE8                     
  3806                           ; BSR set to: 14
  3807                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3808   001FE8  8BD9               	bsf	217,5,b	;volatile
  3809                           
  3810                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3811   001FEA  0E9F               	movlw	159
  3812   001FEC  6FD6               	movwf	214,b	;volatile
  3813   001FEE                     
  3814                           ; BSR set to: 14
  3815                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3816   001FEE  8A84               	bsf	132,5,c	;volatile
  3817   001FF0                     
  3818                           ; BSR set to: 14
  3819                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3820   001FF0  8C84               	bsf	132,6,c	;volatile
  3821   001FF2                     
  3822                           ; BSR set to: 14
  3823                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3824   001FF2  9BA7               	bcf	167,5,b	;volatile
  3825   001FF4                     
  3826                           ; BSR set to: 14
  3827                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3828   001FF4  9DA7               	bcf	167,6,b	;volatile
  3829                           
  3830                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3831   001FF6  0E1D               	movlw	29
  3832   001FF8  6F1D               	movwf	29,b	;volatile
  3833                           
  3834                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3835   001FFA  0E1E               	movlw	30
  3836   001FFC  6F1C               	movwf	28,b	;volatile
  3837                           
  3838                           ;i2c.c: 18:   RD5PPS=0x1C;
  3839   001FFE  0E1C               	movlw	28
  3840   002000  6F6F               	movwf	111,b	;volatile
  3841                           
  3842                           ;i2c.c: 19:   RD6PPS=0x1B;
  3843   002002  0E1B               	movlw	27
  3844   002004  6F70               	movwf	112,b	;volatile
  3845   002006                     
  3846                           ; BSR set to: 14
  3847   002006  0012               	return		;funcret
  3848   002008                     __end_of_I2C_2_Master_Init:
  3849                           	callstack 0
  3850                           
  3851 ;; *************** function _WhiteLight *****************
  3852 ;; Defined at:
  3853 ;;		line 14 in file "LED_Buttons.c"
  3854 ;; Parameters:    Size  Location     Type
  3855 ;;		None
  3856 ;; Auto vars:     Size  Location     Type
  3857 ;;		None
  3858 ;; Return value:  Size  Location     Type
  3859 ;;                  1    wreg      void 
  3860 ;; Registers used:
  3861 ;;		None
  3862 ;; Tracked objects:
  3863 ;;		On entry : 0/0
  3864 ;;		On exit  : 0/0
  3865 ;;		Unchanged: 0/0
  3866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3871 ;;Total ram usage:        0 bytes
  3872 ;; Hardware stack levels used: 1
  3873 ;; Hardware stack levels required when called: 3
  3874 ;; This function calls:
  3875 ;;		Nothing
  3876 ;; This function is called by:
  3877 ;;		_main
  3878 ;; This function uses a non-reentrant model
  3879 ;;
  3880                           
  3881                           	psect	text24
  3882   0021CA                     __ptext24:
  3883                           	callstack 0
  3884   0021CA                     _WhiteLight:
  3885                           	callstack 27
  3886   0021CA                     
  3887                           ;LED_Buttons.c: 15:     LATGbits.LATG1 = 1;
  3888   0021CA  827F               	bsf	127,1,c	;volatile
  3889                           
  3890                           ;LED_Buttons.c: 16:     LATAbits.LATA4 = 1;
  3891   0021CC  8879               	bsf	121,4,c	;volatile
  3892                           
  3893                           ;LED_Buttons.c: 17:     LATFbits.LATF7 = 1;
  3894   0021CE  8E7E               	bsf	126,7,c	;volatile
  3895   0021D0  0012               	return		;funcret
  3896   0021D2                     __end_of_WhiteLight:
  3897                           	callstack 0
  3898                           
  3899 ;; *************** function _Update_RGBC *****************
  3900 ;; Defined at:
  3901 ;;		line 89 in file "color.c"
  3902 ;; Parameters:    Size  Location     Type
  3903 ;;  tempval         2   20[COMRAM] PTR struct RGB_val
  3904 ;;		 -> main@initial_color(8), 
  3905 ;; Auto vars:     Size  Location     Type
  3906 ;;		None
  3907 ;; Return value:  Size  Location     Type
  3908 ;;                  1    wreg      void 
  3909 ;; Registers used:
  3910 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3911 ;; Tracked objects:
  3912 ;;		On entry : 0/0
  3913 ;;		On exit  : 0/0
  3914 ;;		Unchanged: 0/0
  3915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3916 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3919 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3920 ;;Total ram usage:        2 bytes
  3921 ;; Hardware stack levels used: 1
  3922 ;; Hardware stack levels required when called: 6
  3923 ;; This function calls:
  3924 ;;		_color_read_Blue
  3925 ;;		_color_read_Clear
  3926 ;;		_color_read_Green
  3927 ;;		_color_read_Red
  3928 ;; This function is called by:
  3929 ;;		_main
  3930 ;; This function uses a non-reentrant model
  3931 ;;
  3932                           
  3933                           	psect	text25
  3934   001B46                     __ptext25:
  3935                           	callstack 0
  3936   001B46                     _Update_RGBC:
  3937                           	callstack 24
  3938   001B46                     
  3939                           ;color.c: 91:     tempval->R = color_read_Red();
  3940   001B46  EC55  F00E         	call	_color_read_Red	;wreg free
  3941   001B4A  C015  FFD9         	movff	Update_RGBC@tempval,fsr2l
  3942   001B4E  C016  FFDA         	movff	Update_RGBC@tempval+1,fsr2h
  3943   001B52  C00E  FFDE         	movff	?_color_read_Red,postinc2
  3944   001B56  C00F  FFDD         	movff	?_color_read_Red+1,postdec2
  3945                           
  3946                           ;color.c: 92:     tempval->G = color_read_Green();
  3947   001B5A  EC7D  F00E         	call	_color_read_Green	;wreg free
  3948   001B5E  EE20 F002          	lfsr	2,2
  3949   001B62  5015               	movf	Update_RGBC@tempval^0,w,c
  3950   001B64  26D9               	addwf	fsr2l,f,c
  3951   001B66  5016               	movf	(Update_RGBC@tempval+1)^0,w,c
  3952   001B68  22DA               	addwfc	fsr2h,f,c
  3953   001B6A  C00E  FFDE         	movff	?_color_read_Green,postinc2
  3954   001B6E  C00F  FFDD         	movff	?_color_read_Green+1,postdec2
  3955                           
  3956                           ;color.c: 93:     tempval->B = color_read_Blue();
  3957   001B72  ECCD  F00E         	call	_color_read_Blue	;wreg free
  3958   001B76  EE20 F004          	lfsr	2,4
  3959   001B7A  5015               	movf	Update_RGBC@tempval^0,w,c
  3960   001B7C  26D9               	addwf	fsr2l,f,c
  3961   001B7E  5016               	movf	(Update_RGBC@tempval+1)^0,w,c
  3962   001B80  22DA               	addwfc	fsr2h,f,c
  3963   001B82  C00E  FFDE         	movff	?_color_read_Blue,postinc2
  3964   001B86  C00F  FFDD         	movff	?_color_read_Blue+1,postdec2
  3965                           
  3966                           ;color.c: 94:     tempval->C = color_read_Clear();
  3967   001B8A  ECA5  F00E         	call	_color_read_Clear	;wreg free
  3968   001B8E  EE20 F006          	lfsr	2,6
  3969   001B92  5015               	movf	Update_RGBC@tempval^0,w,c
  3970   001B94  26D9               	addwf	fsr2l,f,c
  3971   001B96  5016               	movf	(Update_RGBC@tempval+1)^0,w,c
  3972   001B98  22DA               	addwfc	fsr2h,f,c
  3973   001B9A  C00E  FFDE         	movff	?_color_read_Clear,postinc2
  3974   001B9E  C00F  FFDD         	movff	?_color_read_Clear+1,postdec2
  3975   001BA2  0012               	return		;funcret
  3976   001BA4                     __end_of_Update_RGBC:
  3977                           	callstack 0
  3978                           
  3979 ;; *************** function _color_read_Red *****************
  3980 ;; Defined at:
  3981 ;;		line 31 in file "color.c"
  3982 ;; Parameters:    Size  Location     Type
  3983 ;;		None
  3984 ;; Auto vars:     Size  Location     Type
  3985 ;;  tmp             2   18[COMRAM] unsigned int 
  3986 ;; Return value:  Size  Location     Type
  3987 ;;                  2   13[COMRAM] unsigned int 
  3988 ;; Registers used:
  3989 ;;		wreg, status,2, status,0, cstack
  3990 ;; Tracked objects:
  3991 ;;		On entry : 0/0
  3992 ;;		On exit  : 0/0
  3993 ;;		Unchanged: 0/0
  3994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3995 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3996 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3997 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3998 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3999 ;;Total ram usage:        7 bytes
  4000 ;; Hardware stack levels used: 1
  4001 ;; Hardware stack levels required when called: 5
  4002 ;; This function calls:
  4003 ;;		_I2C_2_Master_Read
  4004 ;;		_I2C_2_Master_RepStart
  4005 ;;		_I2C_2_Master_Start
  4006 ;;		_I2C_2_Master_Stop
  4007 ;;		_I2C_2_Master_Write
  4008 ;; This function is called by:
  4009 ;;		_Update_RGBC
  4010 ;; This function uses a non-reentrant model
  4011 ;;
  4012                           
  4013                           	psect	text26
  4014   001CAA                     __ptext26:
  4015                           	callstack 0
  4016   001CAA                     _color_read_Red:
  4017                           	callstack 24
  4018   001CAA                     
  4019                           ;color.c: 33:  unsigned int tmp;;color.c: 34:  I2C_2_Master_Start();
  4020   001CAA  ECDB  F010         	call	_I2C_2_Master_Start	;wreg free
  4021                           
  4022                           ;color.c: 35:  I2C_2_Master_Write(0x52 | 0x00);
  4023   001CAE  0E52               	movlw	82
  4024   001CB0  ECD0  F010         	call	_I2C_2_Master_Write
  4025                           
  4026                           ;color.c: 36:  I2C_2_Master_Write(0xA0 | 0x16);
  4027   001CB4  0EB6               	movlw	182
  4028   001CB6  ECD0  F010         	call	_I2C_2_Master_Write
  4029                           
  4030                           ;color.c: 37:  I2C_2_Master_RepStart();
  4031   001CBA  ECE0  F010         	call	_I2C_2_Master_RepStart	;wreg free
  4032                           
  4033                           ;color.c: 38:  I2C_2_Master_Write(0x52 | 0x01);
  4034   001CBE  0E53               	movlw	83
  4035   001CC0  ECD0  F010         	call	_I2C_2_Master_Write
  4036                           
  4037                           ;color.c: 39:  tmp=I2C_2_Master_Read(1);
  4038   001CC4  0E01               	movlw	1
  4039   001CC6  EC3A  F00F         	call	_I2C_2_Master_Read
  4040   001CCA  6E10               	movwf	??_color_read_Red^0,c
  4041   001CCC  5010               	movf	??_color_read_Red^0,w,c
  4042   001CCE  6E13               	movwf	color_read_Red@tmp^0,c
  4043   001CD0  6A14               	clrf	(color_read_Red@tmp+1)^0,c
  4044                           
  4045                           ;color.c: 40:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4046   001CD2  0E00               	movlw	0
  4047   001CD4  EC3A  F00F         	call	_I2C_2_Master_Read
  4048   001CD8  6E10               	movwf	??_color_read_Red^0,c
  4049   001CDA  5010               	movf	??_color_read_Red^0,w,c
  4050   001CDC  6E12               	movwf	(??_color_read_Red+2)^0,c
  4051   001CDE  6A11               	clrf	(??_color_read_Red+1)^0,c
  4052   001CE0  5013               	movf	color_read_Red@tmp^0,w,c
  4053   001CE2  1011               	iorwf	(??_color_read_Red+1)^0,w,c
  4054   001CE4  6E13               	movwf	color_read_Red@tmp^0,c
  4055   001CE6  5014               	movf	(color_read_Red@tmp+1)^0,w,c
  4056   001CE8  1012               	iorwf	(??_color_read_Red+2)^0,w,c
  4057   001CEA  6E14               	movwf	(color_read_Red@tmp+1)^0,c
  4058                           
  4059                           ;color.c: 41:  I2C_2_Master_Stop();
  4060   001CEC  ECD6  F010         	call	_I2C_2_Master_Stop	;wreg free
  4061   001CF0                     
  4062                           ;color.c: 42:  return tmp;
  4063   001CF0  C013  F00E         	movff	color_read_Red@tmp,?_color_read_Red
  4064   001CF4  C014  F00F         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  4065   001CF8  0012               	return		;funcret
  4066   001CFA                     __end_of_color_read_Red:
  4067                           	callstack 0
  4068                           
  4069 ;; *************** function _color_read_Green *****************
  4070 ;; Defined at:
  4071 ;;		line 45 in file "color.c"
  4072 ;; Parameters:    Size  Location     Type
  4073 ;;		None
  4074 ;; Auto vars:     Size  Location     Type
  4075 ;;  tmp             2   18[COMRAM] unsigned int 
  4076 ;; Return value:  Size  Location     Type
  4077 ;;                  2   13[COMRAM] unsigned int 
  4078 ;; Registers used:
  4079 ;;		wreg, status,2, status,0, cstack
  4080 ;; Tracked objects:
  4081 ;;		On entry : 0/0
  4082 ;;		On exit  : 0/0
  4083 ;;		Unchanged: 0/0
  4084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4085 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4086 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4087 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4088 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4089 ;;Total ram usage:        7 bytes
  4090 ;; Hardware stack levels used: 1
  4091 ;; Hardware stack levels required when called: 5
  4092 ;; This function calls:
  4093 ;;		_I2C_2_Master_Read
  4094 ;;		_I2C_2_Master_RepStart
  4095 ;;		_I2C_2_Master_Start
  4096 ;;		_I2C_2_Master_Stop
  4097 ;;		_I2C_2_Master_Write
  4098 ;; This function is called by:
  4099 ;;		_Update_RGBC
  4100 ;; This function uses a non-reentrant model
  4101 ;;
  4102                           
  4103                           	psect	text27
  4104   001CFA                     __ptext27:
  4105                           	callstack 0
  4106   001CFA                     _color_read_Green:
  4107                           	callstack 24
  4108   001CFA                     
  4109                           ;color.c: 47:  unsigned int tmp;;color.c: 48:  I2C_2_Master_Start();
  4110   001CFA  ECDB  F010         	call	_I2C_2_Master_Start	;wreg free
  4111                           
  4112                           ;color.c: 49:  I2C_2_Master_Write(0x52 | 0x00);
  4113   001CFE  0E52               	movlw	82
  4114   001D00  ECD0  F010         	call	_I2C_2_Master_Write
  4115                           
  4116                           ;color.c: 50:  I2C_2_Master_Write(0xA0 | 0x18);
  4117   001D04  0EB8               	movlw	184
  4118   001D06  ECD0  F010         	call	_I2C_2_Master_Write
  4119                           
  4120                           ;color.c: 51:  I2C_2_Master_RepStart();
  4121   001D0A  ECE0  F010         	call	_I2C_2_Master_RepStart	;wreg free
  4122                           
  4123                           ;color.c: 52:  I2C_2_Master_Write(0x52 | 0x01);
  4124   001D0E  0E53               	movlw	83
  4125   001D10  ECD0  F010         	call	_I2C_2_Master_Write
  4126                           
  4127                           ;color.c: 53:  tmp=I2C_2_Master_Read(1);
  4128   001D14  0E01               	movlw	1
  4129   001D16  EC3A  F00F         	call	_I2C_2_Master_Read
  4130   001D1A  6E10               	movwf	??_color_read_Green^0,c
  4131   001D1C  5010               	movf	??_color_read_Green^0,w,c
  4132   001D1E  6E13               	movwf	color_read_Green@tmp^0,c
  4133   001D20  6A14               	clrf	(color_read_Green@tmp+1)^0,c
  4134                           
  4135                           ;color.c: 54:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4136   001D22  0E00               	movlw	0
  4137   001D24  EC3A  F00F         	call	_I2C_2_Master_Read
  4138   001D28  6E10               	movwf	??_color_read_Green^0,c
  4139   001D2A  5010               	movf	??_color_read_Green^0,w,c
  4140   001D2C  6E12               	movwf	(??_color_read_Green+2)^0,c
  4141   001D2E  6A11               	clrf	(??_color_read_Green+1)^0,c
  4142   001D30  5013               	movf	color_read_Green@tmp^0,w,c
  4143   001D32  1011               	iorwf	(??_color_read_Green+1)^0,w,c
  4144   001D34  6E13               	movwf	color_read_Green@tmp^0,c
  4145   001D36  5014               	movf	(color_read_Green@tmp+1)^0,w,c
  4146   001D38  1012               	iorwf	(??_color_read_Green+2)^0,w,c
  4147   001D3A  6E14               	movwf	(color_read_Green@tmp+1)^0,c
  4148                           
  4149                           ;color.c: 55:  I2C_2_Master_Stop();
  4150   001D3C  ECD6  F010         	call	_I2C_2_Master_Stop	;wreg free
  4151   001D40                     
  4152                           ;color.c: 56:  return tmp;
  4153   001D40  C013  F00E         	movff	color_read_Green@tmp,?_color_read_Green
  4154   001D44  C014  F00F         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  4155   001D48  0012               	return		;funcret
  4156   001D4A                     __end_of_color_read_Green:
  4157                           	callstack 0
  4158                           
  4159 ;; *************** function _color_read_Clear *****************
  4160 ;; Defined at:
  4161 ;;		line 73 in file "color.c"
  4162 ;; Parameters:    Size  Location     Type
  4163 ;;		None
  4164 ;; Auto vars:     Size  Location     Type
  4165 ;;  tmp             2   18[COMRAM] unsigned int 
  4166 ;; Return value:  Size  Location     Type
  4167 ;;                  2   13[COMRAM] unsigned int 
  4168 ;; Registers used:
  4169 ;;		wreg, status,2, status,0, cstack
  4170 ;; Tracked objects:
  4171 ;;		On entry : 0/0
  4172 ;;		On exit  : 0/0
  4173 ;;		Unchanged: 0/0
  4174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4175 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4176 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4177 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4178 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4179 ;;Total ram usage:        7 bytes
  4180 ;; Hardware stack levels used: 1
  4181 ;; Hardware stack levels required when called: 5
  4182 ;; This function calls:
  4183 ;;		_I2C_2_Master_Read
  4184 ;;		_I2C_2_Master_RepStart
  4185 ;;		_I2C_2_Master_Start
  4186 ;;		_I2C_2_Master_Stop
  4187 ;;		_I2C_2_Master_Write
  4188 ;; This function is called by:
  4189 ;;		_Update_RGBC
  4190 ;; This function uses a non-reentrant model
  4191 ;;
  4192                           
  4193                           	psect	text28
  4194   001D4A                     __ptext28:
  4195                           	callstack 0
  4196   001D4A                     _color_read_Clear:
  4197                           	callstack 24
  4198   001D4A                     
  4199                           ;color.c: 75:  unsigned int tmp;;color.c: 76:  I2C_2_Master_Start();
  4200   001D4A  ECDB  F010         	call	_I2C_2_Master_Start	;wreg free
  4201                           
  4202                           ;color.c: 77:  I2C_2_Master_Write(0x52 | 0x00);
  4203   001D4E  0E52               	movlw	82
  4204   001D50  ECD0  F010         	call	_I2C_2_Master_Write
  4205                           
  4206                           ;color.c: 78:  I2C_2_Master_Write(0xA0 | 0x14);
  4207   001D54  0EB4               	movlw	180
  4208   001D56  ECD0  F010         	call	_I2C_2_Master_Write
  4209                           
  4210                           ;color.c: 79:  I2C_2_Master_RepStart();
  4211   001D5A  ECE0  F010         	call	_I2C_2_Master_RepStart	;wreg free
  4212                           
  4213                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x01);
  4214   001D5E  0E53               	movlw	83
  4215   001D60  ECD0  F010         	call	_I2C_2_Master_Write
  4216                           
  4217                           ;color.c: 81:  tmp=I2C_2_Master_Read(1);
  4218   001D64  0E01               	movlw	1
  4219   001D66  EC3A  F00F         	call	_I2C_2_Master_Read
  4220   001D6A  6E10               	movwf	??_color_read_Clear^0,c
  4221   001D6C  5010               	movf	??_color_read_Clear^0,w,c
  4222   001D6E  6E13               	movwf	color_read_Clear@tmp^0,c
  4223   001D70  6A14               	clrf	(color_read_Clear@tmp+1)^0,c
  4224                           
  4225                           ;color.c: 82:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4226   001D72  0E00               	movlw	0
  4227   001D74  EC3A  F00F         	call	_I2C_2_Master_Read
  4228   001D78  6E10               	movwf	??_color_read_Clear^0,c
  4229   001D7A  5010               	movf	??_color_read_Clear^0,w,c
  4230   001D7C  6E12               	movwf	(??_color_read_Clear+2)^0,c
  4231   001D7E  6A11               	clrf	(??_color_read_Clear+1)^0,c
  4232   001D80  5013               	movf	color_read_Clear@tmp^0,w,c
  4233   001D82  1011               	iorwf	(??_color_read_Clear+1)^0,w,c
  4234   001D84  6E13               	movwf	color_read_Clear@tmp^0,c
  4235   001D86  5014               	movf	(color_read_Clear@tmp+1)^0,w,c
  4236   001D88  1012               	iorwf	(??_color_read_Clear+2)^0,w,c
  4237   001D8A  6E14               	movwf	(color_read_Clear@tmp+1)^0,c
  4238                           
  4239                           ;color.c: 83:  I2C_2_Master_Stop();
  4240   001D8C  ECD6  F010         	call	_I2C_2_Master_Stop	;wreg free
  4241   001D90                     
  4242                           ;color.c: 84:  return tmp;
  4243   001D90  C013  F00E         	movff	color_read_Clear@tmp,?_color_read_Clear
  4244   001D94  C014  F00F         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  4245   001D98  0012               	return		;funcret
  4246   001D9A                     __end_of_color_read_Clear:
  4247                           	callstack 0
  4248                           
  4249 ;; *************** function _color_read_Blue *****************
  4250 ;; Defined at:
  4251 ;;		line 59 in file "color.c"
  4252 ;; Parameters:    Size  Location     Type
  4253 ;;		None
  4254 ;; Auto vars:     Size  Location     Type
  4255 ;;  tmp             2   18[COMRAM] unsigned int 
  4256 ;; Return value:  Size  Location     Type
  4257 ;;                  2   13[COMRAM] unsigned int 
  4258 ;; Registers used:
  4259 ;;		wreg, status,2, status,0, cstack
  4260 ;; Tracked objects:
  4261 ;;		On entry : 0/0
  4262 ;;		On exit  : 0/0
  4263 ;;		Unchanged: 0/0
  4264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4265 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4266 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4267 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4268 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4269 ;;Total ram usage:        7 bytes
  4270 ;; Hardware stack levels used: 1
  4271 ;; Hardware stack levels required when called: 5
  4272 ;; This function calls:
  4273 ;;		_I2C_2_Master_Read
  4274 ;;		_I2C_2_Master_RepStart
  4275 ;;		_I2C_2_Master_Start
  4276 ;;		_I2C_2_Master_Stop
  4277 ;;		_I2C_2_Master_Write
  4278 ;; This function is called by:
  4279 ;;		_Update_RGBC
  4280 ;; This function uses a non-reentrant model
  4281 ;;
  4282                           
  4283                           	psect	text29
  4284   001D9A                     __ptext29:
  4285                           	callstack 0
  4286   001D9A                     _color_read_Blue:
  4287                           	callstack 24
  4288   001D9A                     
  4289                           ;color.c: 61:  unsigned int tmp;;color.c: 62:  I2C_2_Master_Start();
  4290   001D9A  ECDB  F010         	call	_I2C_2_Master_Start	;wreg free
  4291                           
  4292                           ;color.c: 63:  I2C_2_Master_Write(0x52 | 0x00);
  4293   001D9E  0E52               	movlw	82
  4294   001DA0  ECD0  F010         	call	_I2C_2_Master_Write
  4295                           
  4296                           ;color.c: 64:  I2C_2_Master_Write(0xA0 | 0x1A);
  4297   001DA4  0EBA               	movlw	186
  4298   001DA6  ECD0  F010         	call	_I2C_2_Master_Write
  4299                           
  4300                           ;color.c: 65:  I2C_2_Master_RepStart();
  4301   001DAA  ECE0  F010         	call	_I2C_2_Master_RepStart	;wreg free
  4302                           
  4303                           ;color.c: 66:  I2C_2_Master_Write(0x52 | 0x01);
  4304   001DAE  0E53               	movlw	83
  4305   001DB0  ECD0  F010         	call	_I2C_2_Master_Write
  4306                           
  4307                           ;color.c: 67:  tmp=I2C_2_Master_Read(1);
  4308   001DB4  0E01               	movlw	1
  4309   001DB6  EC3A  F00F         	call	_I2C_2_Master_Read
  4310   001DBA  6E10               	movwf	??_color_read_Blue^0,c
  4311   001DBC  5010               	movf	??_color_read_Blue^0,w,c
  4312   001DBE  6E13               	movwf	color_read_Blue@tmp^0,c
  4313   001DC0  6A14               	clrf	(color_read_Blue@tmp+1)^0,c
  4314                           
  4315                           ;color.c: 68:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4316   001DC2  0E00               	movlw	0
  4317   001DC4  EC3A  F00F         	call	_I2C_2_Master_Read
  4318   001DC8  6E10               	movwf	??_color_read_Blue^0,c
  4319   001DCA  5010               	movf	??_color_read_Blue^0,w,c
  4320   001DCC  6E12               	movwf	(??_color_read_Blue+2)^0,c
  4321   001DCE  6A11               	clrf	(??_color_read_Blue+1)^0,c
  4322   001DD0  5013               	movf	color_read_Blue@tmp^0,w,c
  4323   001DD2  1011               	iorwf	(??_color_read_Blue+1)^0,w,c
  4324   001DD4  6E13               	movwf	color_read_Blue@tmp^0,c
  4325   001DD6  5014               	movf	(color_read_Blue@tmp+1)^0,w,c
  4326   001DD8  1012               	iorwf	(??_color_read_Blue+2)^0,w,c
  4327   001DDA  6E14               	movwf	(color_read_Blue@tmp+1)^0,c
  4328                           
  4329                           ;color.c: 69:  I2C_2_Master_Stop();
  4330   001DDC  ECD6  F010         	call	_I2C_2_Master_Stop	;wreg free
  4331   001DE0                     
  4332                           ;color.c: 70:  return tmp;
  4333   001DE0  C013  F00E         	movff	color_read_Blue@tmp,?_color_read_Blue
  4334   001DE4  C014  F00F         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  4335   001DE8  0012               	return		;funcret
  4336   001DEA                     __end_of_color_read_Blue:
  4337                           	callstack 0
  4338                           
  4339 ;; *************** function _I2C_2_Master_Write *****************
  4340 ;; Defined at:
  4341 ;;		line 45 in file "i2c.c"
  4342 ;; Parameters:    Size  Location     Type
  4343 ;;  data_byte       1    wreg     unsigned char 
  4344 ;; Auto vars:     Size  Location     Type
  4345 ;;  data_byte       1   10[COMRAM] unsigned char 
  4346 ;; Return value:  Size  Location     Type
  4347 ;;                  1    wreg      void 
  4348 ;; Registers used:
  4349 ;;		wreg, status,2, status,0, cstack
  4350 ;; Tracked objects:
  4351 ;;		On entry : 0/0
  4352 ;;		On exit  : 0/0
  4353 ;;		Unchanged: 0/0
  4354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4356 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4358 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4359 ;;Total ram usage:        1 bytes
  4360 ;; Hardware stack levels used: 1
  4361 ;; Hardware stack levels required when called: 4
  4362 ;; This function calls:
  4363 ;;		_I2C_2_Master_Idle
  4364 ;; This function is called by:
  4365 ;;		_color_writetoaddr
  4366 ;;		_color_read_Red
  4367 ;;		_color_read_Green
  4368 ;;		_color_read_Blue
  4369 ;;		_color_read_Clear
  4370 ;; This function uses a non-reentrant model
  4371 ;;
  4372                           
  4373                           	psect	text30
  4374   0021A0                     __ptext30:
  4375                           	callstack 0
  4376   0021A0                     _I2C_2_Master_Write:
  4377                           	callstack 24
  4378                           
  4379                           ;incstack = 0
  4380                           ;I2C_2_Master_Write@data_byte stored from wreg
  4381   0021A0  6E0B               	movwf	I2C_2_Master_Write@data_byte^0,c
  4382   0021A2                     
  4383                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  4384   0021A2  EC2E  F010         	call	_I2C_2_Master_Idle	;wreg free
  4385   0021A6                     
  4386                           ;i2c.c: 48:   SSP2BUF = data_byte;
  4387   0021A6  C00B  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  4388   0021AA  0012               	return		;funcret
  4389   0021AC                     __end_of_I2C_2_Master_Write:
  4390                           	callstack 0
  4391                           
  4392 ;; *************** function _I2C_2_Master_Stop *****************
  4393 ;; Defined at:
  4394 ;;		line 39 in file "i2c.c"
  4395 ;; Parameters:    Size  Location     Type
  4396 ;;		None
  4397 ;; Auto vars:     Size  Location     Type
  4398 ;;		None
  4399 ;; Return value:  Size  Location     Type
  4400 ;;                  1    wreg      void 
  4401 ;; Registers used:
  4402 ;;		wreg, status,2, status,0, cstack
  4403 ;; Tracked objects:
  4404 ;;		On entry : 0/0
  4405 ;;		On exit  : 0/0
  4406 ;;		Unchanged: 0/0
  4407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4411 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4412 ;;Total ram usage:        0 bytes
  4413 ;; Hardware stack levels used: 1
  4414 ;; Hardware stack levels required when called: 4
  4415 ;; This function calls:
  4416 ;;		_I2C_2_Master_Idle
  4417 ;; This function is called by:
  4418 ;;		_color_writetoaddr
  4419 ;;		_color_read_Red
  4420 ;;		_color_read_Green
  4421 ;;		_color_read_Blue
  4422 ;;		_color_read_Clear
  4423 ;; This function uses a non-reentrant model
  4424 ;;
  4425                           
  4426                           	psect	text31
  4427   0021AC                     __ptext31:
  4428                           	callstack 0
  4429   0021AC                     _I2C_2_Master_Stop:
  4430                           	callstack 24
  4431   0021AC                     
  4432                           ;i2c.c: 41:   I2C_2_Master_Idle();
  4433   0021AC  EC2E  F010         	call	_I2C_2_Master_Idle	;wreg free
  4434   0021B0                     
  4435                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  4436   0021B0  010E               	movlb	14	; () banked
  4437   0021B2  85DA               	bsf	218,2,b	;volatile
  4438   0021B4                     
  4439                           ; BSR set to: 14
  4440   0021B4  0012               	return		;funcret
  4441   0021B6                     __end_of_I2C_2_Master_Stop:
  4442                           	callstack 0
  4443                           
  4444 ;; *************** function _I2C_2_Master_Start *****************
  4445 ;; Defined at:
  4446 ;;		line 27 in file "i2c.c"
  4447 ;; Parameters:    Size  Location     Type
  4448 ;;		None
  4449 ;; Auto vars:     Size  Location     Type
  4450 ;;		None
  4451 ;; Return value:  Size  Location     Type
  4452 ;;                  1    wreg      void 
  4453 ;; Registers used:
  4454 ;;		wreg, status,2, status,0, cstack
  4455 ;; Tracked objects:
  4456 ;;		On entry : 0/0
  4457 ;;		On exit  : 0/0
  4458 ;;		Unchanged: 0/0
  4459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4464 ;;Total ram usage:        0 bytes
  4465 ;; Hardware stack levels used: 1
  4466 ;; Hardware stack levels required when called: 4
  4467 ;; This function calls:
  4468 ;;		_I2C_2_Master_Idle
  4469 ;; This function is called by:
  4470 ;;		_color_writetoaddr
  4471 ;;		_color_read_Red
  4472 ;;		_color_read_Green
  4473 ;;		_color_read_Blue
  4474 ;;		_color_read_Clear
  4475 ;; This function uses a non-reentrant model
  4476 ;;
  4477                           
  4478                           	psect	text32
  4479   0021B6                     __ptext32:
  4480                           	callstack 0
  4481   0021B6                     _I2C_2_Master_Start:
  4482                           	callstack 24
  4483   0021B6                     
  4484                           ;i2c.c: 29:   I2C_2_Master_Idle();
  4485   0021B6  EC2E  F010         	call	_I2C_2_Master_Idle	;wreg free
  4486   0021BA                     
  4487                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  4488   0021BA  010E               	movlb	14	; () banked
  4489   0021BC  81DA               	bsf	218,0,b	;volatile
  4490   0021BE                     
  4491                           ; BSR set to: 14
  4492   0021BE  0012               	return		;funcret
  4493   0021C0                     __end_of_I2C_2_Master_Start:
  4494                           	callstack 0
  4495                           
  4496 ;; *************** function _I2C_2_Master_RepStart *****************
  4497 ;; Defined at:
  4498 ;;		line 33 in file "i2c.c"
  4499 ;; Parameters:    Size  Location     Type
  4500 ;;		None
  4501 ;; Auto vars:     Size  Location     Type
  4502 ;;		None
  4503 ;; Return value:  Size  Location     Type
  4504 ;;                  1    wreg      void 
  4505 ;; Registers used:
  4506 ;;		wreg, status,2, status,0, cstack
  4507 ;; Tracked objects:
  4508 ;;		On entry : 0/0
  4509 ;;		On exit  : 0/0
  4510 ;;		Unchanged: 0/0
  4511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4516 ;;Total ram usage:        0 bytes
  4517 ;; Hardware stack levels used: 1
  4518 ;; Hardware stack levels required when called: 4
  4519 ;; This function calls:
  4520 ;;		_I2C_2_Master_Idle
  4521 ;; This function is called by:
  4522 ;;		_color_read_Red
  4523 ;;		_color_read_Green
  4524 ;;		_color_read_Blue
  4525 ;;		_color_read_Clear
  4526 ;; This function uses a non-reentrant model
  4527 ;;
  4528                           
  4529                           	psect	text33
  4530   0021C0                     __ptext33:
  4531                           	callstack 0
  4532   0021C0                     _I2C_2_Master_RepStart:
  4533                           	callstack 24
  4534   0021C0                     
  4535                           ;i2c.c: 35:   I2C_2_Master_Idle();
  4536   0021C0  EC2E  F010         	call	_I2C_2_Master_Idle	;wreg free
  4537   0021C4                     
  4538                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  4539   0021C4  010E               	movlb	14	; () banked
  4540   0021C6  83DA               	bsf	218,1,b	;volatile
  4541   0021C8                     
  4542                           ; BSR set to: 14
  4543   0021C8  0012               	return		;funcret
  4544   0021CA                     __end_of_I2C_2_Master_RepStart:
  4545                           	callstack 0
  4546                           
  4547 ;; *************** function _I2C_2_Master_Read *****************
  4548 ;; Defined at:
  4549 ;;		line 51 in file "i2c.c"
  4550 ;; Parameters:    Size  Location     Type
  4551 ;;  ack             1    wreg     unsigned char 
  4552 ;; Auto vars:     Size  Location     Type
  4553 ;;  ack             1   11[COMRAM] unsigned char 
  4554 ;;  tmp             1   12[COMRAM] unsigned char 
  4555 ;; Return value:  Size  Location     Type
  4556 ;;                  1    wreg      unsigned char 
  4557 ;; Registers used:
  4558 ;;		wreg, status,2, status,0, cstack
  4559 ;; Tracked objects:
  4560 ;;		On entry : 0/0
  4561 ;;		On exit  : 0/0
  4562 ;;		Unchanged: 0/0
  4563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4565 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4566 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4567 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4568 ;;Total ram usage:        3 bytes
  4569 ;; Hardware stack levels used: 1
  4570 ;; Hardware stack levels required when called: 4
  4571 ;; This function calls:
  4572 ;;		_I2C_2_Master_Idle
  4573 ;; This function is called by:
  4574 ;;		_color_read_Red
  4575 ;;		_color_read_Green
  4576 ;;		_color_read_Blue
  4577 ;;		_color_read_Clear
  4578 ;; This function uses a non-reentrant model
  4579 ;;
  4580                           
  4581                           	psect	text34
  4582   001E74                     __ptext34:
  4583                           	callstack 0
  4584   001E74                     _I2C_2_Master_Read:
  4585                           	callstack 24
  4586                           
  4587                           ; BSR set to: 14
  4588                           ;incstack = 0
  4589                           ;I2C_2_Master_Read@ack stored from wreg
  4590   001E74  6E0C               	movwf	I2C_2_Master_Read@ack^0,c
  4591   001E76                     
  4592                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  4593   001E76  EC2E  F010         	call	_I2C_2_Master_Idle	;wreg free
  4594   001E7A                     
  4595                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  4596   001E7A  010E               	movlb	14	; () banked
  4597   001E7C  87DA               	bsf	218,3,b	;volatile
  4598                           
  4599                           ;i2c.c: 56:   I2C_2_Master_Idle();
  4600   001E7E  EC2E  F010         	call	_I2C_2_Master_Idle	;wreg free
  4601   001E82                     
  4602                           ;i2c.c: 57:   tmp = SSP2BUF;
  4603   001E82  CED5 F00D          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  4604                           
  4605                           ;i2c.c: 58:   I2C_2_Master_Idle();
  4606   001E86  EC2E  F010         	call	_I2C_2_Master_Idle	;wreg free
  4607   001E8A                     
  4608                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  4609   001E8A  500C               	movf	I2C_2_Master_Read@ack^0,w,c
  4610   001E8C  B4D8               	btfsc	status,2,c
  4611   001E8E  EF4B  F00F         	goto	u2221
  4612   001E92  EF4F  F00F         	goto	u2220
  4613   001E96                     u2221:
  4614   001E96  6A0B               	clrf	??_I2C_2_Master_Read^0,c
  4615   001E98  2A0B               	incf	??_I2C_2_Master_Read^0,f,c
  4616   001E9A  EF50  F00F         	goto	u2238
  4617   001E9E                     u2220:
  4618   001E9E  6A0B               	clrf	??_I2C_2_Master_Read^0,c
  4619   001EA0                     u2238:
  4620   001EA0  3A0B               	swapf	??_I2C_2_Master_Read^0,f,c
  4621   001EA2  460B               	rlncf	??_I2C_2_Master_Read^0,f,c
  4622   001EA4  010E               	movlb	14	; () banked
  4623   001EA6  51DA               	movf	218,w,b	;volatile
  4624   001EA8  180B               	xorwf	??_I2C_2_Master_Read^0,w,c
  4625   001EAA  0BDF               	andlw	-33
  4626   001EAC  180B               	xorwf	??_I2C_2_Master_Read^0,w,c
  4627   001EAE  6FDA               	movwf	218,b	;volatile
  4628   001EB0                     
  4629                           ; BSR set to: 14
  4630                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  4631   001EB0  89DA               	bsf	218,4,b	;volatile
  4632   001EB2                     
  4633                           ; BSR set to: 14
  4634                           ;i2c.c: 61:   return tmp;
  4635   001EB2  500D               	movf	I2C_2_Master_Read@tmp^0,w,c
  4636   001EB4                     
  4637                           ; BSR set to: 14
  4638   001EB4  0012               	return		;funcret
  4639   001EB6                     __end_of_I2C_2_Master_Read:
  4640                           	callstack 0
  4641                           
  4642 ;; *************** function _I2C_2_Master_Idle *****************
  4643 ;; Defined at:
  4644 ;;		line 22 in file "i2c.c"
  4645 ;; Parameters:    Size  Location     Type
  4646 ;;		None
  4647 ;; Auto vars:     Size  Location     Type
  4648 ;;		None
  4649 ;; Return value:  Size  Location     Type
  4650 ;;                  1    wreg      void 
  4651 ;; Registers used:
  4652 ;;		wreg, status,2, status,0
  4653 ;; Tracked objects:
  4654 ;;		On entry : 0/0
  4655 ;;		On exit  : 0/0
  4656 ;;		Unchanged: 0/0
  4657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4660 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4661 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4662 ;;Total ram usage:        1 bytes
  4663 ;; Hardware stack levels used: 1
  4664 ;; Hardware stack levels required when called: 3
  4665 ;; This function calls:
  4666 ;;		Nothing
  4667 ;; This function is called by:
  4668 ;;		_I2C_2_Master_Start
  4669 ;;		_I2C_2_Master_RepStart
  4670 ;;		_I2C_2_Master_Stop
  4671 ;;		_I2C_2_Master_Write
  4672 ;;		_I2C_2_Master_Read
  4673 ;; This function uses a non-reentrant model
  4674 ;;
  4675                           
  4676                           	psect	text35
  4677   00205C                     __ptext35:
  4678                           	callstack 0
  4679   00205C                     _I2C_2_Master_Idle:
  4680                           	callstack 24
  4681   00205C                     l67:
  4682   00205C  010E               	movlb	14	; () banked
  4683   00205E  B5D8               	btfsc	216,2,b	;volatile
  4684   002060  EF34  F010         	goto	u2031
  4685   002064  EF36  F010         	goto	u2030
  4686   002068                     u2031:
  4687   002068  EF2E  F010         	goto	l67
  4688   00206C                     u2030:
  4689   00206C                     
  4690                           ; BSR set to: 14
  4691   00206C  CEDA F00A          	movff	3802,??_I2C_2_Master_Idle	;volatile
  4692   002070  0E1F               	movlw	31
  4693   002072  160A               	andwf	??_I2C_2_Master_Idle^0,f,c
  4694   002074  A4D8               	btfss	status,2,c
  4695   002076  EF3F  F010         	goto	u2041
  4696   00207A  EF41  F010         	goto	u2040
  4697   00207E                     u2041:
  4698   00207E  EF2E  F010         	goto	l67
  4699   002082                     u2040:
  4700   002082                     
  4701                           ; BSR set to: 14
  4702   002082  0012               	return		;funcret
  4703   002084                     __end_of_I2C_2_Master_Idle:
  4704                           	callstack 0
  4705                           
  4706 ;; *************** function _TxBufferedString *****************
  4707 ;; Defined at:
  4708 ;;		line 87 in file "serial.c"
  4709 ;; Parameters:    Size  Location     Type
  4710 ;;  string          2   10[COMRAM] PTR unsigned char 
  4711 ;;		 -> main@string2(40), main@string(40), 
  4712 ;; Auto vars:     Size  Location     Type
  4713 ;;		None
  4714 ;; Return value:  Size  Location     Type
  4715 ;;                  1    wreg      void 
  4716 ;; Registers used:
  4717 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4718 ;; Tracked objects:
  4719 ;;		On entry : 0/0
  4720 ;;		On exit  : 0/0
  4721 ;;		Unchanged: 0/0
  4722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4723 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4726 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4727 ;;Total ram usage:        2 bytes
  4728 ;; Hardware stack levels used: 1
  4729 ;; Hardware stack levels required when called: 4
  4730 ;; This function calls:
  4731 ;;		_putCharToTxBuf
  4732 ;; This function is called by:
  4733 ;;		_main
  4734 ;; This function uses a non-reentrant model
  4735 ;;
  4736                           
  4737                           	psect	text36
  4738   001F2A                     __ptext36:
  4739                           	callstack 0
  4740   001F2A                     _TxBufferedString:
  4741                           	callstack 26
  4742   001F2A                     
  4743                           ;serial.c: 90:     while(*string != 0){
  4744   001F2A  EFA0  F00F         	goto	l3149
  4745   001F2E                     l3145:
  4746                           
  4747                           ;serial.c: 91:   putCharToTxBuf(*string++);
  4748   001F2E  C00B  FFD9         	movff	TxBufferedString@string,fsr2l
  4749   001F32  C00C  FFDA         	movff	TxBufferedString@string+1,fsr2h
  4750   001F36  50DF               	movf	indf2,w,c
  4751   001F38  EC04  F010         	call	_putCharToTxBuf
  4752   001F3C  4A0B               	infsnz	TxBufferedString@string^0,f,c
  4753   001F3E  2A0C               	incf	(TxBufferedString@string+1)^0,f,c
  4754   001F40                     l3149:
  4755                           
  4756                           ;serial.c: 90:     while(*string != 0){
  4757   001F40  C00B  FFD9         	movff	TxBufferedString@string,fsr2l
  4758   001F44  C00C  FFDA         	movff	TxBufferedString@string+1,fsr2h
  4759   001F48  50DF               	movf	indf2,w,c
  4760   001F4A  A4D8               	btfss	status,2,c
  4761   001F4C  EFAA  F00F         	goto	u2391
  4762   001F50  EFAC  F00F         	goto	u2390
  4763   001F54                     u2391:
  4764   001F54  EF97  F00F         	goto	l3145
  4765   001F58                     u2390:
  4766   001F58  0012               	return		;funcret
  4767   001F5A                     __end_of_TxBufferedString:
  4768                           	callstack 0
  4769                           
  4770 ;; *************** function _putCharToTxBuf *****************
  4771 ;; Defined at:
  4772 ;;		line 74 in file "serial.c"
  4773 ;; Parameters:    Size  Location     Type
  4774 ;;  byte            1    wreg     unsigned char 
  4775 ;; Auto vars:     Size  Location     Type
  4776 ;;  byte            1    9[COMRAM] unsigned char 
  4777 ;; Return value:  Size  Location     Type
  4778 ;;                  1    wreg      void 
  4779 ;; Registers used:
  4780 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4781 ;; Tracked objects:
  4782 ;;		On entry : 0/0
  4783 ;;		On exit  : 0/0
  4784 ;;		Unchanged: 0/0
  4785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4787 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4789 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4790 ;;Total ram usage:        1 bytes
  4791 ;; Hardware stack levels used: 1
  4792 ;; Hardware stack levels required when called: 3
  4793 ;; This function calls:
  4794 ;;		Nothing
  4795 ;; This function is called by:
  4796 ;;		_TxBufferedString
  4797 ;; This function uses a non-reentrant model
  4798 ;;
  4799                           
  4800                           	psect	text37
  4801   002008                     __ptext37:
  4802                           	callstack 0
  4803   002008                     _putCharToTxBuf:
  4804                           	callstack 26
  4805                           
  4806                           ;incstack = 0
  4807                           ;putCharToTxBuf@byte stored from wreg
  4808   002008  6E0A               	movwf	putCharToTxBuf@byte^0,c
  4809   00200A                     
  4810                           ;serial.c: 75:     if (TxBufWriteCnt>=60) {TxBufWriteCnt=0;}
  4811   00200A  0E3B               	movlw	59
  4812   00200C  6453               	cpfsgt	_TxBufWriteCnt^0,c	;volatile
  4813   00200E  EF0B  F010         	goto	u2311
  4814   002012  EF0D  F010         	goto	u2310
  4815   002016                     u2311:
  4816   002016  EF0F  F010         	goto	l3071
  4817   00201A                     u2310:
  4818   00201A  0E00               	movlw	0
  4819   00201C  6E53               	movwf	_TxBufWriteCnt^0,c	;volatile
  4820   00201E                     l3071:
  4821                           
  4822                           ;serial.c: 76:     EUSART4TXbuf[TxBufWriteCnt++]=byte;
  4823   00201E  0E8C               	movlw	low _EUSART4TXbuf
  4824   002020  2453               	addwf	_TxBufWriteCnt^0,w,c	;volatile
  4825   002022  6ED9               	movwf	fsr2l,c
  4826   002024  6ADA               	clrf	fsr2h,c
  4827   002026  0E02               	movlw	high _EUSART4TXbuf
  4828   002028  22DA               	addwfc	fsr2h,f,c
  4829   00202A  C00A  FFDF         	movff	putCharToTxBuf@byte,indf2
  4830   00202E  2A53               	incf	_TxBufWriteCnt^0,f,c	;volatile
  4831   002030  0012               	return		;funcret
  4832   002032                     __end_of_putCharToTxBuf:
  4833                           	callstack 0
  4834                           
  4835 ;; *************** function _Timer0_init *****************
  4836 ;; Defined at:
  4837 ;;		line 7 in file "timers.c"
  4838 ;; Parameters:    Size  Location     Type
  4839 ;;		None
  4840 ;; Auto vars:     Size  Location     Type
  4841 ;;		None
  4842 ;; Return value:  Size  Location     Type
  4843 ;;                  1    wreg      void 
  4844 ;; Registers used:
  4845 ;;		wreg, status,2
  4846 ;; Tracked objects:
  4847 ;;		On entry : 0/0
  4848 ;;		On exit  : 0/0
  4849 ;;		Unchanged: 0/0
  4850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4855 ;;Total ram usage:        0 bytes
  4856 ;; Hardware stack levels used: 1
  4857 ;; Hardware stack levels required when called: 3
  4858 ;; This function calls:
  4859 ;;		Nothing
  4860 ;; This function is called by:
  4861 ;;		_main
  4862 ;; This function uses a non-reentrant model
  4863 ;;
  4864                           
  4865                           	psect	text38
  4866   0020F0                     __ptext38:
  4867                           	callstack 0
  4868   0020F0                     _Timer0_init:
  4869                           	callstack 27
  4870   0020F0                     
  4871                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  4872   0020F0  50D6               	movf	214,w,c	;volatile
  4873   0020F2  0B1F               	andlw	-225
  4874   0020F4  0940               	iorlw	64
  4875   0020F6  6ED6               	movwf	214,c	;volatile
  4876   0020F8                     
  4877                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  4878   0020F8  88D6               	bsf	214,4,c	;volatile
  4879                           
  4880                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
  4881   0020FA  50D6               	movf	214,w,c	;volatile
  4882   0020FC  0BF0               	andlw	-16
  4883   0020FE  0908               	iorlw	8
  4884   002100  6ED6               	movwf	214,c	;volatile
  4885   002102                     
  4886                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
  4887   002102  88D5               	bsf	213,4,c	;volatile
  4888                           
  4889                           ;timers.c: 15:     TMR0H = 0b11000010;
  4890   002104  0EC2               	movlw	194
  4891   002106  6ED4               	movwf	212,c	;volatile
  4892                           
  4893                           ;timers.c: 16:     TMR0L = 0b11110110;
  4894   002108  0EF6               	movlw	246
  4895   00210A  6ED3               	movwf	211,c	;volatile
  4896   00210C                     
  4897                           ;timers.c: 17:     T0CON0bits.T0EN=1;
  4898   00210C  8ED5               	bsf	213,7,c	;volatile
  4899   00210E  0012               	return		;funcret
  4900   002110                     __end_of_Timer0_init:
  4901                           	callstack 0
  4902                           
  4903 ;; *************** function _LED_init *****************
  4904 ;; Defined at:
  4905 ;;		line 7 in file "LED_Buttons.c"
  4906 ;; Parameters:    Size  Location     Type
  4907 ;;		None
  4908 ;; Auto vars:     Size  Location     Type
  4909 ;;		None
  4910 ;; Return value:  Size  Location     Type
  4911 ;;                  1    wreg      void 
  4912 ;; Registers used:
  4913 ;;		None
  4914 ;; Tracked objects:
  4915 ;;		On entry : 0/0
  4916 ;;		On exit  : 0/0
  4917 ;;		Unchanged: 0/0
  4918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4923 ;;Total ram usage:        0 bytes
  4924 ;; Hardware stack levels used: 1
  4925 ;; Hardware stack levels required when called: 3
  4926 ;; This function calls:
  4927 ;;		Nothing
  4928 ;; This function is called by:
  4929 ;;		_main
  4930 ;; This function uses a non-reentrant model
  4931 ;;
  4932                           
  4933                           	psect	text39
  4934   0021D2                     __ptext39:
  4935                           	callstack 0
  4936   0021D2                     _LED_init:
  4937                           	callstack 27
  4938   0021D2                     
  4939                           ;LED_Buttons.c: 8:     TRISGbits.TRISG1 = 0;
  4940   0021D2  9287               	bcf	135,1,c	;volatile
  4941                           
  4942                           ;LED_Buttons.c: 9:     TRISAbits.TRISA4 = 0;
  4943   0021D4  9881               	bcf	129,4,c	;volatile
  4944                           
  4945                           ;LED_Buttons.c: 10:     TRISFbits.TRISF7 = 0;
  4946   0021D6  9E86               	bcf	134,7,c	;volatile
  4947   0021D8  0012               	return		;funcret
  4948   0021DA                     __end_of_LED_init:
  4949                           	callstack 0
  4950                           
  4951 ;; *************** function _Interrupts_init *****************
  4952 ;; Defined at:
  4953 ;;		line 9 in file "interrupts.c"
  4954 ;; Parameters:    Size  Location     Type
  4955 ;;		None
  4956 ;; Auto vars:     Size  Location     Type
  4957 ;;		None
  4958 ;; Return value:  Size  Location     Type
  4959 ;;                  1    wreg      void 
  4960 ;; Registers used:
  4961 ;;		None
  4962 ;; Tracked objects:
  4963 ;;		On entry : 0/0
  4964 ;;		On exit  : 0/0
  4965 ;;		Unchanged: 0/0
  4966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4971 ;;Total ram usage:        0 bytes
  4972 ;; Hardware stack levels used: 1
  4973 ;; Hardware stack levels required when called: 3
  4974 ;; This function calls:
  4975 ;;		Nothing
  4976 ;; This function is called by:
  4977 ;;		_main
  4978 ;; This function uses a non-reentrant model
  4979 ;;
  4980                           
  4981                           	psect	text40
  4982   002190                     __ptext40:
  4983                           	callstack 0
  4984   002190                     _Interrupts_init:
  4985                           	callstack 27
  4986   002190                     
  4987                           ;interrupts.c: 15:     PIE0bits.TMR0IE=1;
  4988   002190  010E               	movlb	14	; () banked
  4989   002192  8B29               	bsf	41,5,b	;volatile
  4990                           
  4991                           ;interrupts.c: 16:     IPR0bits.TMR0IP = 0;
  4992   002194  9B1F               	bcf	31,5,b	;volatile
  4993                           
  4994                           ;interrupts.c: 19:     PIE4bits.RC4IE=1;
  4995   002196  872D               	bsf	45,3,b	;volatile
  4996                           
  4997                           ;interrupts.c: 22:     INTCONbits.IPEN = 1;
  4998   002198  8AF2               	bsf	242,5,c	;volatile
  4999                           
  5000                           ;interrupts.c: 23:     INTCONbits.PEIE = 1;
  5001   00219A  8CF2               	bsf	242,6,c	;volatile
  5002                           
  5003                           ;interrupts.c: 24:     INTCONbits.GIE=1;
  5004   00219C  8EF2               	bsf	242,7,c	;volatile
  5005   00219E                     
  5006                           ; BSR set to: 14
  5007   00219E  0012               	return		;funcret
  5008   0021A0                     __end_of_Interrupts_init:
  5009                           	callstack 0
  5010                           
  5011 ;; *************** function _LowISR *****************
  5012 ;; Defined at:
  5013 ;;		line 34 in file "interrupts.c"
  5014 ;; Parameters:    Size  Location     Type
  5015 ;;		None
  5016 ;; Auto vars:     Size  Location     Type
  5017 ;;		None
  5018 ;; Return value:  Size  Location     Type
  5019 ;;                  1    wreg      void 
  5020 ;; Registers used:
  5021 ;;		wreg, status,2, status,0
  5022 ;; Tracked objects:
  5023 ;;		On entry : 0/0
  5024 ;;		On exit  : 0/0
  5025 ;;		Unchanged: 0/0
  5026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5029 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5030 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5031 ;;Total ram usage:        4 bytes
  5032 ;; Hardware stack levels used: 1
  5033 ;; Hardware stack levels required when called: 2
  5034 ;; This function calls:
  5035 ;;		Nothing
  5036 ;; This function is called by:
  5037 ;;		Interrupt level 1
  5038 ;; This function uses a non-reentrant model
  5039 ;;
  5040                           
  5041                           	psect	intcodelo
  5042   000018                     __pintcodelo:
  5043                           	callstack 0
  5044   000018                     _LowISR:
  5045                           	callstack 20
  5046                           
  5047                           ; BSR set to: 14
  5048                           ;incstack = 0
  5049   000018  8056               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  5050   00001A  CFD8 F007          	movff	status,??_LowISR+1
  5051   00001E  CFE8 F008          	movff	wreg,??_LowISR+2
  5052   000022  CFE0 F009          	movff	bsr,??_LowISR+3
  5053   000026                     
  5054                           ;interrupts.c: 37:     if(PIR0bits.TMR0IF){
  5055   000026  010E               	movlb	14	; () banked
  5056   000028  AB33               	btfss	51,5,b	;volatile
  5057   00002A  EF19  F000         	goto	i1u164_21
  5058   00002E  EF1B  F000         	goto	i1u164_20
  5059   000032                     i1u164_21:
  5060   000032  EF36  F000         	goto	i1l340
  5061   000036                     i1u164_20:
  5062   000036                     
  5063                           ; BSR set to: 14
  5064                           ;interrupts.c: 38:         LATHbits.LATH3 = !LATHbits.LATH3;
  5065   000036  A680               	btfss	128,3,c	;volatile
  5066   000038  EF20  F000         	goto	i1u165_21
  5067   00003C  EF24  F000         	goto	i1u165_20
  5068   000040                     i1u165_21:
  5069   000040  6A06               	clrf	??_LowISR^0,c
  5070   000042  2A06               	incf	??_LowISR^0,f,c
  5071   000044  EF25  F000         	goto	i1u166_28
  5072   000048                     i1u165_20:
  5073   000048  6A06               	clrf	??_LowISR^0,c
  5074   00004A                     i1u166_28:
  5075   00004A  4606               	rlncf	??_LowISR^0,f,c
  5076   00004C  4606               	rlncf	??_LowISR^0,f,c
  5077   00004E  4606               	rlncf	??_LowISR^0,f,c
  5078   000050  5080               	movf	128,w,c	;volatile
  5079   000052  1806               	xorwf	??_LowISR^0,w,c
  5080   000054  0BF7               	andlw	-9
  5081   000056  1806               	xorwf	??_LowISR^0,w,c
  5082   000058  6E80               	movwf	128,c	;volatile
  5083   00005A                     
  5084                           ;interrupts.c: 39:         TMR0H = 0b11000010;
  5085   00005A  0EC2               	movlw	194
  5086   00005C  6ED4               	movwf	212,c	;volatile
  5087   00005E                     
  5088                           ;interrupts.c: 40:         TMR0L = 0b11110110;
  5089   00005E  0EF6               	movlw	246
  5090   000060  6ED3               	movwf	211,c	;volatile
  5091   000062                     
  5092                           ;interrupts.c: 41:         tmr_ovf = 1;
  5093   000062  0E01               	movlw	1
  5094   000064  0100               	movlb	0	; () banked
  5095   000066  6FFC               	movwf	_tmr_ovf& (0+255),b
  5096   000068                     
  5097                           ; BSR set to: 0
  5098                           ;interrupts.c: 42:         PIR0bits.TMR0IF=0;
  5099   000068  010E               	movlb	14	; () banked
  5100   00006A  9B33               	bcf	51,5,b	;volatile
  5101   00006C                     i1l340:
  5102                           
  5103                           ; BSR set to: 14
  5104   00006C  C009  FFE0         	movff	??_LowISR+3,bsr
  5105   000070  C008  FFE8         	movff	??_LowISR+2,wreg
  5106   000074  C007  FFD8         	movff	??_LowISR+1,status
  5107   000078  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  5108   00007A  0010               	retfie	
  5109   00007C                     __end_of_LowISR:
  5110                           	callstack 0
  5111                           
  5112 ;; *************** function _HighISR *****************
  5113 ;; Defined at:
  5114 ;;		line 48 in file "interrupts.c"
  5115 ;; Parameters:    Size  Location     Type
  5116 ;;		None
  5117 ;; Auto vars:     Size  Location     Type
  5118 ;;  a               1    4[COMRAM] unsigned char 
  5119 ;; Return value:  Size  Location     Type
  5120 ;;                  1    wreg      void 
  5121 ;; Registers used:
  5122 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5123 ;; Tracked objects:
  5124 ;;		On entry : 0/0
  5125 ;;		On exit  : 0/0
  5126 ;;		Unchanged: 0/0
  5127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5129 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5130 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5131 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5132 ;;Total ram usage:        3 bytes
  5133 ;; Hardware stack levels used: 1
  5134 ;; Hardware stack levels required when called: 1
  5135 ;; This function calls:
  5136 ;;		_getCharFromTxBuf
  5137 ;;		_putCharToRxBuf
  5138 ;;		i2_isDataInTxBuf
  5139 ;; This function is called by:
  5140 ;;		Interrupt level 2
  5141 ;; This function uses a non-reentrant model
  5142 ;;
  5143                           
  5144                           	psect	intcode
  5145   000008                     __pintcode:
  5146                           	callstack 0
  5147   000008                     _HighISR:
  5148                           	callstack 20
  5149                           
  5150                           ; BSR set to: 14
  5151                           ;incstack = 0
  5152   000008  8256               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5153   00000A  EFD2  F00D         	goto	int_func
  5154                           
  5155                           	psect	intcode_body
  5156   001BA4                     __pintcode_body:
  5157                           	callstack 20
  5158   001BA4                     int_func:
  5159                           	callstack 20
  5160   001BA4  CFD9 F003          	movff	fsr2l,??_HighISR
  5161   001BA8  CFDA F004          	movff	fsr2h,??_HighISR+1
  5162   001BAC                     
  5163                           ;interrupts.c: 52:     if(PIR4bits.RC4IF){
  5164   001BAC  010E               	movlb	14	; () banked
  5165   001BAE  A737               	btfss	55,3,b	;volatile
  5166   001BB0  EFDC  F00D         	goto	i2u167_41
  5167   001BB4  EFDE  F00D         	goto	i2u167_40
  5168   001BB8                     i2u167_41:
  5169   001BB8  EFE3  F00D         	goto	i2l2561
  5170   001BBC                     i2u167_40:
  5171   001BBC                     
  5172                           ; BSR set to: 14
  5173                           ;interrupts.c: 53:         unsigned char a = RC4REG;
  5174   001BBC  CEE3 F005          	movff	3811,HighISR@a	;volatile
  5175   001BC0                     
  5176                           ; BSR set to: 14
  5177                           ;interrupts.c: 54:         putCharToRxBuf(a);
  5178   001BC0  5005               	movf	HighISR@a^0,w,c
  5179   001BC2  EC19  F010         	call	_putCharToRxBuf
  5180   001BC6                     i2l2561:
  5181                           
  5182                           ;interrupts.c: 58:     if(!isDataInTxBuf()){
  5183   001BC6  ECBC  F010         	call	i2_isDataInTxBuf	;wreg free
  5184   001BCA  0900               	iorlw	0
  5185   001BCC  A4D8               	btfss	status,2,c
  5186   001BCE  EFEB  F00D         	goto	i2u168_41
  5187   001BD2  EFED  F00D         	goto	i2u168_40
  5188   001BD6                     i2u168_41:
  5189   001BD6  EFEF  F00D         	goto	i2l346
  5190   001BDA                     i2u168_40:
  5191   001BDA                     
  5192                           ;interrupts.c: 59:         PIE4bits.TX4IE=0;
  5193   001BDA  010E               	movlb	14	; () banked
  5194   001BDC  952D               	bcf	45,2,b	;volatile
  5195   001BDE                     i2l346:
  5196                           
  5197                           ;interrupts.c: 61:     if(PIR4bits.TX4IF){
  5198   001BDE  010E               	movlb	14	; () banked
  5199   001BE0  A537               	btfss	55,2,b	;volatile
  5200   001BE2  EFF5  F00D         	goto	i2u169_41
  5201   001BE6  EFF7  F00D         	goto	i2u169_40
  5202   001BEA                     i2u169_41:
  5203   001BEA  EFFB  F00D         	goto	i2l348
  5204   001BEE                     i2u169_40:
  5205   001BEE                     
  5206                           ; BSR set to: 14
  5207                           ;interrupts.c: 62:         TX4REG = getCharFromTxBuf();
  5208   001BEE  ECD9  F00F         	call	_getCharFromTxBuf	;wreg free
  5209   001BF2  010E               	movlb	14	; () banked
  5210   001BF4  6FE4               	movwf	228,b	;volatile
  5211   001BF6                     i2l348:
  5212                           
  5213                           ; BSR set to: 14
  5214   001BF6  C004  FFDA         	movff	??_HighISR+1,fsr2h
  5215   001BFA  C003  FFD9         	movff	??_HighISR,fsr2l
  5216   001BFE  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5217   001C00  0011               	retfie		f
  5218   001C02                     __end_of_HighISR:
  5219                           	callstack 0
  5220                           
  5221 ;; *************** function i2_isDataInTxBuf *****************
  5222 ;; Defined at:
  5223 ;;		line 82 in file "serial.c"
  5224 ;; Parameters:    Size  Location     Type
  5225 ;;		None
  5226 ;; Auto vars:     Size  Location     Type
  5227 ;;		None
  5228 ;; Return value:  Size  Location     Type
  5229 ;;                  1    wreg      unsigned char 
  5230 ;; Registers used:
  5231 ;;		wreg, status,2, status,0
  5232 ;; Tracked objects:
  5233 ;;		On entry : 0/0
  5234 ;;		On exit  : 0/0
  5235 ;;		Unchanged: 0/0
  5236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5241 ;;Total ram usage:        0 bytes
  5242 ;; Hardware stack levels used: 1
  5243 ;; This function calls:
  5244 ;;		Nothing
  5245 ;; This function is called by:
  5246 ;;		_HighISR
  5247 ;; This function uses a non-reentrant model
  5248 ;;
  5249                           
  5250                           	psect	text43
  5251   002178                     __ptext43:
  5252                           	callstack 0
  5253   002178                     i2_isDataInTxBuf:
  5254                           	callstack 20
  5255   002178                     
  5256                           ;serial.c: 83:     return (TxBufWriteCnt!=TxBufReadCnt);
  5257   002178  5052               	movf	_TxBufReadCnt^0,w,c	;volatile
  5258   00217A  1853               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  5259   00217C  A4D8               	btfss	status,2,c
  5260   00217E  EFC3  F010         	goto	i2u69_41
  5261   002182  EFC6  F010         	goto	i2u69_40
  5262   002186                     i2u69_41:
  5263   002186  0E01               	movlw	1
  5264   002188  EFC7  F010         	goto	i2u70_40
  5265   00218C                     i2u69_40:
  5266   00218C  0E00               	movlw	0
  5267   00218E                     i2u70_40:
  5268   00218E  0012               	return		;funcret
  5269   002190                     __end_ofi2_isDataInTxBuf:
  5270                           	callstack 0
  5271                           
  5272 ;; *************** function _putCharToRxBuf *****************
  5273 ;; Defined at:
  5274 ;;		line 54 in file "serial.c"
  5275 ;; Parameters:    Size  Location     Type
  5276 ;;  byte            1    wreg     unsigned char 
  5277 ;; Auto vars:     Size  Location     Type
  5278 ;;  byte            1    0[COMRAM] unsigned char 
  5279 ;; Return value:  Size  Location     Type
  5280 ;;                  1    wreg      void 
  5281 ;; Registers used:
  5282 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5283 ;; Tracked objects:
  5284 ;;		On entry : 0/0
  5285 ;;		On exit  : 0/0
  5286 ;;		Unchanged: 0/0
  5287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5289 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5291 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5292 ;;Total ram usage:        1 bytes
  5293 ;; Hardware stack levels used: 1
  5294 ;; This function calls:
  5295 ;;		Nothing
  5296 ;; This function is called by:
  5297 ;;		_HighISR
  5298 ;; This function uses a non-reentrant model
  5299 ;;
  5300                           
  5301                           	psect	text44
  5302   002032                     __ptext44:
  5303                           	callstack 0
  5304   002032                     _putCharToRxBuf:
  5305                           	callstack 20
  5306                           
  5307                           ;incstack = 0
  5308                           ;putCharToRxBuf@byte stored from wreg
  5309   002032  6E01               	movwf	putCharToRxBuf@byte^0,c
  5310   002034                     
  5311                           ;serial.c: 55:     if (RxBufWriteCnt>=20) {RxBufWriteCnt=0;}
  5312   002034  0E13               	movlw	19
  5313   002036  6455               	cpfsgt	_RxBufWriteCnt^0,c	;volatile
  5314   002038  EF20  F010         	goto	i2u152_41
  5315   00203C  EF22  F010         	goto	i2u152_40
  5316   002040                     i2u152_41:
  5317   002040  EF24  F010         	goto	i2l2433
  5318   002044                     i2u152_40:
  5319   002044  0E00               	movlw	0
  5320   002046  6E55               	movwf	_RxBufWriteCnt^0,c	;volatile
  5321   002048                     i2l2433:
  5322                           
  5323                           ;serial.c: 56:     EUSART4RXbuf[RxBufWriteCnt++]=byte;
  5324   002048  0EC8               	movlw	low _EUSART4RXbuf
  5325   00204A  2455               	addwf	_RxBufWriteCnt^0,w,c	;volatile
  5326   00204C  6ED9               	movwf	fsr2l,c
  5327   00204E  6ADA               	clrf	fsr2h,c
  5328   002050  0E02               	movlw	high _EUSART4RXbuf
  5329   002052  22DA               	addwfc	fsr2h,f,c
  5330   002054  C001  FFDF         	movff	putCharToRxBuf@byte,indf2
  5331   002058  2A55               	incf	_RxBufWriteCnt^0,f,c	;volatile
  5332   00205A  0012               	return		;funcret
  5333   00205C                     __end_of_putCharToRxBuf:
  5334                           	callstack 0
  5335                           
  5336 ;; *************** function _getCharFromTxBuf *****************
  5337 ;; Defined at:
  5338 ;;		line 68 in file "serial.c"
  5339 ;; Parameters:    Size  Location     Type
  5340 ;;		None
  5341 ;; Auto vars:     Size  Location     Type
  5342 ;;		None
  5343 ;; Return value:  Size  Location     Type
  5344 ;;                  1    wreg      unsigned char 
  5345 ;; Registers used:
  5346 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5347 ;; Tracked objects:
  5348 ;;		On entry : 0/0
  5349 ;;		On exit  : 0/0
  5350 ;;		Unchanged: 0/0
  5351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5354 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5355 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5356 ;;Total ram usage:        2 bytes
  5357 ;; Hardware stack levels used: 1
  5358 ;; This function calls:
  5359 ;;		Nothing
  5360 ;; This function is called by:
  5361 ;;		_HighISR
  5362 ;; This function uses a non-reentrant model
  5363 ;;
  5364                           
  5365                           	psect	text45
  5366   001FB2                     __ptext45:
  5367                           	callstack 0
  5368   001FB2                     _getCharFromTxBuf:
  5369                           	callstack 20
  5370   001FB2                     
  5371                           ;serial.c: 69:     if (TxBufReadCnt>=60) {TxBufReadCnt=0;}
  5372   001FB2  0E3B               	movlw	59
  5373   001FB4  6452               	cpfsgt	_TxBufReadCnt^0,c	;volatile
  5374   001FB6  EFDF  F00F         	goto	i2u155_41
  5375   001FBA  EFE1  F00F         	goto	i2u155_40
  5376   001FBE                     i2u155_41:
  5377   001FBE  EFE3  F00F         	goto	i2l2445
  5378   001FC2                     i2u155_40:
  5379   001FC2  0E00               	movlw	0
  5380   001FC4  6E52               	movwf	_TxBufReadCnt^0,c	;volatile
  5381   001FC6                     i2l2445:
  5382                           
  5383                           ;serial.c: 70:     return EUSART4TXbuf[TxBufReadCnt++];
  5384   001FC6  2A52               	incf	_TxBufReadCnt^0,f,c	;volatile
  5385   001FC8  0452               	decf	_TxBufReadCnt^0,w,c	;volatile
  5386   001FCA  6E01               	movwf	??_getCharFromTxBuf^0,c
  5387   001FCC  6A02               	clrf	(??_getCharFromTxBuf+1)^0,c
  5388   001FCE  0E8C               	movlw	low _EUSART4TXbuf
  5389   001FD0  2401               	addwf	??_getCharFromTxBuf^0,w,c
  5390   001FD2  6ED9               	movwf	fsr2l,c
  5391   001FD4  0E02               	movlw	high _EUSART4TXbuf
  5392   001FD6  2002               	addwfc	(??_getCharFromTxBuf+1)^0,w,c
  5393   001FD8  6EDA               	movwf	fsr2h,c
  5394   001FDA  50DF               	movf	indf2,w,c
  5395   001FDC  0012               	return		;funcret
  5396   001FDE                     __end_of_getCharFromTxBuf:
  5397                           	callstack 0
  5398                           
  5399                           	psect	rparam
  5400   000000                     
  5401                           	psect	temp
  5402   000056                     btemp:
  5403                           	callstack 0
  5404   000056                     	ds	1
  5405   000000                     int$flags	set	btemp
  5406   000000                     wtemp8	set	btemp+1
  5407   000000                     ttemp5	set	btemp+1
  5408   000000                     ttemp6	set	btemp+4
  5409   000000                     ttemp7	set	btemp+8
  5410                           
  5411                           	psect	idloc
  5412                           
  5413                           ;Config register IDLOC0 @ 0x200000
  5414                           ;	unspecified, using default values
  5415   200000                     	org	2097152
  5416   200000  0FFF               	dw	4095
  5417                           
  5418                           ;Config register IDLOC1 @ 0x200002
  5419                           ;	unspecified, using default values
  5420   200002                     	org	2097154
  5421   200002  0FFF               	dw	4095
  5422                           
  5423                           ;Config register IDLOC2 @ 0x200004
  5424                           ;	unspecified, using default values
  5425   200004                     	org	2097156
  5426   200004  0FFF               	dw	4095
  5427                           
  5428                           ;Config register IDLOC3 @ 0x200006
  5429                           ;	unspecified, using default values
  5430   200006                     	org	2097158
  5431   200006  0FFF               	dw	4095
  5432                           
  5433                           ;Config register IDLOC4 @ 0x200008
  5434                           ;	unspecified, using default values
  5435   200008                     	org	2097160
  5436   200008  0FFF               	dw	4095
  5437                           
  5438                           ;Config register IDLOC5 @ 0x20000A
  5439                           ;	unspecified, using default values
  5440   20000A                     	org	2097162
  5441   20000A  0FFF               	dw	4095
  5442                           
  5443                           ;Config register IDLOC6 @ 0x20000C
  5444                           ;	unspecified, using default values
  5445   20000C                     	org	2097164
  5446   20000C  0FFF               	dw	4095
  5447                           
  5448                           ;Config register IDLOC7 @ 0x20000E
  5449                           ;	unspecified, using default values
  5450   20000E                     	org	2097166
  5451   20000E  0FFF               	dw	4095
  5452                           
  5453                           	psect	config
  5454                           
  5455                           ;Config register CONFIG1L @ 0x300000
  5456                           ;	External Oscillator mode Selection bits
  5457                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  5458                           ;	Power-up default value for COSC bits
  5459                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  5460   300000                     	org	3145728
  5461   300000  AA                 	db	170
  5462                           
  5463                           ;Config register CONFIG1H @ 0x300001
  5464                           ;	unspecified, using default values
  5465                           ;	Clock Out Enable bit
  5466                           ;	CLKOUTEN = 0x1, unprogrammed default
  5467                           ;	Clock Switch Enable bit
  5468                           ;	CSWEN = 0x1, unprogrammed default
  5469                           ;	Fail-Safe Clock Monitor Enable bit
  5470                           ;	FCMEN = 0x1, unprogrammed default
  5471   300001                     	org	3145729
  5472   300001  FF                 	db	255
  5473                           
  5474                           ;Config register CONFIG2L @ 0x300002
  5475                           ;	unspecified, using default values
  5476                           ;	Master Clear Enable bit
  5477                           ;	MCLRE = 0x1, unprogrammed default
  5478                           ;	Power-up Timer Enable bit
  5479                           ;	PWRTE = 0x1, unprogrammed default
  5480                           ;	Low-power BOR enable bit
  5481                           ;	LPBOREN = 0x1, unprogrammed default
  5482                           ;	Brown-out Reset Enable bits
  5483                           ;	BOREN = 0x3, unprogrammed default
  5484   300002                     	org	3145730
  5485   300002  FF                 	db	255
  5486                           
  5487                           ;Config register CONFIG2H @ 0x300003
  5488                           ;	unspecified, using default values
  5489                           ;	Brown Out Reset Voltage selection bits
  5490                           ;	BORV = 0x3, unprogrammed default
  5491                           ;	ZCD Disable bit
  5492                           ;	ZCD = 0x1, unprogrammed default
  5493                           ;	PPSLOCK bit One-Way Set Enable bit
  5494                           ;	PPS1WAY = 0x1, unprogrammed default
  5495                           ;	Stack Full/Underflow Reset Enable bit
  5496                           ;	STVREN = 0x1, unprogrammed default
  5497                           ;	Debugger Enable bit
  5498                           ;	DEBUG = 0x1, unprogrammed default
  5499                           ;	Extended Instruction Set Enable bit
  5500                           ;	XINST = 0x1, unprogrammed default
  5501   300003                     	org	3145731
  5502   300003  FF                 	db	255
  5503                           
  5504                           ;Config register CONFIG3L @ 0x300004
  5505                           ;	WDT Period Select bits
  5506                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  5507                           ;	WDT operating mode
  5508                           ;	WDTE = OFF, WDT Disabled
  5509   300004                     	org	3145732
  5510   300004  9F                 	db	159
  5511                           
  5512                           ;Config register CONFIG3H @ 0x300005
  5513                           ;	unspecified, using default values
  5514                           ;	WDT Window Select bits
  5515                           ;	WDTCWS = 0x7, unprogrammed default
  5516                           ;	WDT input clock selector
  5517                           ;	WDTCCS = 0x7, unprogrammed default
  5518   300005                     	org	3145733
  5519   300005  FF                 	db	255
  5520                           
  5521                           ;Config register CONFIG4L @ 0x300006
  5522                           ;	unspecified, using default values
  5523                           ;	Write Protection Block 0
  5524                           ;	WRT0 = 0x1, unprogrammed default
  5525                           ;	Write Protection Block 1
  5526                           ;	WRT1 = 0x1, unprogrammed default
  5527                           ;	Write Protection Block 2
  5528                           ;	WRT2 = 0x1, unprogrammed default
  5529                           ;	Write Protection Block 3
  5530                           ;	WRT3 = 0x1, unprogrammed default
  5531                           ;	Write Protection Block 3
  5532                           ;	WRT4 = 0x1, unprogrammed default
  5533                           ;	Write Protection Block 3
  5534                           ;	WRT5 = 0x1, unprogrammed default
  5535                           ;	Write Protection Block 3
  5536                           ;	WRT6 = 0x1, unprogrammed default
  5537                           ;	Write Protection Block 3
  5538                           ;	WRT7 = 0x1, unprogrammed default
  5539   300006                     	org	3145734
  5540   300006  FF                 	db	255
  5541                           
  5542                           ;Config register CONFIG4H @ 0x300007
  5543                           ;	unspecified, using default values
  5544                           ;	Configuration Register Write Protection bit
  5545                           ;	WRTC = 0x1, unprogrammed default
  5546                           ;	Boot Block Write Protection bit
  5547                           ;	WRTB = 0x1, unprogrammed default
  5548                           ;	Data EEPROM Write Protection bit
  5549                           ;	WRTD = 0x1, unprogrammed default
  5550                           ;	Scanner Enable bit
  5551                           ;	SCANE = 0x1, unprogrammed default
  5552                           ;	Low Voltage Programming Enable bit
  5553                           ;	LVP = 0x1, unprogrammed default
  5554   300007                     	org	3145735
  5555   300007  FF                 	db	255
  5556                           
  5557                           ;Config register CONFIG5L @ 0x300008
  5558                           ;	unspecified, using default values
  5559                           ;	UserNVM Program Memory Code Protection bit
  5560                           ;	CP = 0x1, unprogrammed default
  5561                           ;	DataNVM Memory Code Protection bit
  5562                           ;	CPD = 0x1, unprogrammed default
  5563   300008                     	org	3145736
  5564   300008  FF                 	db	255
  5565                           
  5566                           ;Config register CONFIG5H @ 0x300009
  5567                           ;	unspecified, using default values
  5568   300009                     	org	3145737
  5569   300009  FF                 	db	255
  5570                           
  5571                           ;Config register CONFIG6L @ 0x30000A
  5572                           ;	unspecified, using default values
  5573                           ;	Table Read Protection Block 0
  5574                           ;	EBTR0 = 0x1, unprogrammed default
  5575                           ;	Table Read Protection Block 1
  5576                           ;	EBTR1 = 0x1, unprogrammed default
  5577                           ;	Table Read Protection Block 2
  5578                           ;	EBTR2 = 0x1, unprogrammed default
  5579                           ;	Table Read Protection Block 3
  5580                           ;	EBTR3 = 0x1, unprogrammed default
  5581                           ;	Table Read Protection Block 4
  5582                           ;	EBTR4 = 0x1, unprogrammed default
  5583                           ;	Table Read Protection Block 5
  5584                           ;	EBTR5 = 0x1, unprogrammed default
  5585                           ;	Table Read Protection Block 6
  5586                           ;	EBTR6 = 0x1, unprogrammed default
  5587                           ;	Table Read Protection Block 7
  5588                           ;	EBTR7 = 0x1, unprogrammed default
  5589   30000A                     	org	3145738
  5590   30000A  FF                 	db	255
  5591                           
  5592                           ;Config register CONFIG6H @ 0x30000B
  5593                           ;	unspecified, using default values
  5594                           ;	Boot Block Table Read Protection bit
  5595                           ;	EBTRB = 0x1, unprogrammed default
  5596   30000B                     	org	3145739
  5597   30000B  FF                 	db	255
  5598                           tosu	equ	0xFFF
  5599                           tosh	equ	0xFFE
  5600                           tosl	equ	0xFFD
  5601                           stkptr	equ	0xFFC
  5602                           pclatu	equ	0xFFB
  5603                           pclath	equ	0xFFA
  5604                           pcl	equ	0xFF9
  5605                           tblptru	equ	0xFF8
  5606                           tblptrh	equ	0xFF7
  5607                           tblptrl	equ	0xFF6
  5608                           tablat	equ	0xFF5
  5609                           prodh	equ	0xFF4
  5610                           prodl	equ	0xFF3
  5611                           indf0	equ	0xFEF
  5612                           postinc0	equ	0xFEE
  5613                           postdec0	equ	0xFED
  5614                           preinc0	equ	0xFEC
  5615                           plusw0	equ	0xFEB
  5616                           fsr0h	equ	0xFEA
  5617                           fsr0l	equ	0xFE9
  5618                           wreg	equ	0xFE8
  5619                           indf1	equ	0xFE7
  5620                           postinc1	equ	0xFE6
  5621                           postdec1	equ	0xFE5
  5622                           preinc1	equ	0xFE4
  5623                           plusw1	equ	0xFE3
  5624                           fsr1h	equ	0xFE2
  5625                           fsr1l	equ	0xFE1
  5626                           bsr	equ	0xFE0
  5627                           indf2	equ	0xFDF
  5628                           postinc2	equ	0xFDE
  5629                           postdec2	equ	0xFDD
  5630                           preinc2	equ	0xFDC
  5631                           plusw2	equ	0xFDB
  5632                           fsr2h	equ	0xFDA
  5633                           fsr2l	equ	0xFD9
  5634                           status	equ	0xFD8

Data Sizes:
    Strings     40
    Constant    0
    Data        0
    BSS         122
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     76      85
    BANK0           160    156     157
    BANK1           256    248     248
    BANK2           256    140     252
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_2(CODE[12]), STR_1(CODE[28]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_2(CODE[12]), STR_1(CODE[28]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 28
		 -> STR_2(CODE[12]), STR_1(CODE[28]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 28
		 -> STR_2(CODE[12]), STR_1(CODE[28]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2260$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK2[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_2(CODE[12]), STR_1(CODE[28]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 40
		 -> main@string2(BANK2[40]), main@string(BANK1[40]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2207$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2207$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    TxBufferedString@string	PTR unsigned char  size(2) Largest target is 40
		 -> main@string2(BANK2[40]), main@string(BANK1[40]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    S1069DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    S1069DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    Update_RGBC@tempval	PTR struct RGB_val size(2) Largest target is 8
		 -> main@initial_color(BANK1[8]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->___wmul
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _Update_RGBC->_color_read_Blue
    _Update_RGBC->_color_read_Clear
    _Update_RGBC->_color_read_Green
    _Update_RGBC->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _TxBufferedString->_putCharToTxBuf

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    _HighISR->_getCharFromTxBuf

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               495   495      0   12885
                                             49 BANK0    107   107      0
                                              0 BANK1    248   248      0
                                              0 BANK2    140   140      0
                    _Interrupts_init
                           _LED_init
                        _Timer0_init
                   _TxBufferedString
                        _Update_RGBC
                         _WhiteLight
                   _color_click_init
                   _getCharFromRxBuf
                         _initUSART4
                      _isDataInRxBuf
                          _sendTxBuf
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    15     12   10169
                                             24 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    9497
                                             74 COMRAM     2     2      0
                                             18 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           24    18      6    9003
                                             71 COMRAM     3     3      0
                                              0 BANK0     18    12      6
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    5075
                                             36 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2775
                                             25 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1357
                                             18 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     857
                                              9 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             27 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              9 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              9 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 9     7      2    1764
                                             15 COMRAM     9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     259
                                              9 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              4     2      2     281
                                              9 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     772
                                              9 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _sendTxBuf                                            0     0      0       0
                      _isDataInTxBuf
 ---------------------------------------------------------------------------------
 (2) _isDataInTxBuf                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _isDataInRxBuf                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getCharFromRxBuf                                     2     2      0       0
                                              9 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     363
                                             13 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     363
                                             11 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WhiteLight                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Update_RGBC                                          2     0      2     870
                                             20 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     164
                                             13 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     164
                                             13 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     164
                                             13 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     164
                                             13 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      31
                                             10 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      65
                                             10 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TxBufferedString                                     2     0      2     276
                                             10 COMRAM     2     0      2
                     _putCharToTxBuf
 ---------------------------------------------------------------------------------
 (2) _putCharToTxBuf                                       1     1      0      31
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _LowISR                                               4     4      0       0
                                              5 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _HighISR                                             3     3      0      45
                                              2 COMRAM     3     3      0
                   _getCharFromTxBuf
                     _putCharToRxBuf
                    i2_isDataInTxBuf
 ---------------------------------------------------------------------------------
 (11) i2_isDataInTxBuf                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _putCharToRxBuf                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _getCharFromTxBuf                                    2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Interrupts_init
   _LED_init
   _Timer0_init
   _TxBufferedString
     _putCharToTxBuf
   _Update_RGBC
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _WhiteLight
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _getCharFromRxBuf
   _initUSART4
   _isDataInRxBuf
   _sendTxBuf
     _isDataInTxBuf
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
         _isdigit

 _LowISR (ROOT)

 _HighISR (ROOT)
   _getCharFromTxBuf
   _putCharToRxBuf
   i2_isDataInTxBuf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      63        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100     8C      FC       9       98.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100     F8      F8       7       96.9%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9C      9D       5       98.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4C      55       1       90.4%
BITBIGSFRhllllh     52      0       0      42        0.0%
BITBIGSFRhlllll     37      0       0      44        0.0%
BITBIGSFRllh        2D      0       0      47        0.0%
BITBIGSFRlllhll     2A      0       0      54        0.0%
BITBIGSFRlllll      26      0       0      61        0.0%
BITBIGSFRlllhhh     1E      0       0      48        0.0%
BITBIGSFRhhhlll     1E      0       0      38        0.0%
BITBIGSFRhhhhhl     1B      0       0      33        0.0%
BITBIGSFRhhhhl      13      0       0      34        0.0%
BITBIGSFRlllhhh     11      0       0      49        0.0%
BITBIGSFRhhhlhh      E      0       0      35        0.0%
BITBIGSFRhhhhhh      D      0       0      32        0.0%
BITBIGSFRlllhll      9      0       0      58        0.0%
BITBIGSFRhlllll      8      0       0      45        0.0%
BITBIGSFRllllh       6      0       0      60        0.0%
BITBIGSFRlllhll      6      0       0      53        0.0%
BITBIGSFRlllhll      5      0       0      56        0.0%
BITBIGSFRlllhlh      5      0       0      52        0.0%
BITBIGSFRlllhll      3      0       0      55        0.0%
BITBIGSFRlllhll      3      0       0      57        0.0%
BITBIGSFRlllhhl      3      0       0      51        0.0%
BITBIGSFRhlllll      2      0       0      43        0.0%
BITBIGSFRhhhllh      2      0       0      37        0.0%
BITBIGSFRhhhlhl      1      0       0      36        0.0%
BITBIGSFRlllhhh      1      0       0      50        0.0%
BITBIGSFRhlllhh      1      0       0      40        0.0%
BITBIGSFRhlllhl      1      0       0      41        0.0%
BITBIGSFRhlh         1      0       0      39        0.0%
BITBIGSFRlllhll      1      0       0      59        0.0%
BITBIGSFRlh          1      0       0      46        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2E6      62        0.0%
DATA                 0      0     2E6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Feb 25 13:12:02 2023

               _color_read_Red 1CAA                _color_read_Blue 1D9A                             l22 20EE  
                           l31 1DE8                             l25 1CF8                             l34 1D98  
                           l19 1F28                             l28 1D48                             l37 1BA2  
                           l70 2082                             l64 2006                             l73 21BE  
                           l82 21AA                             l67 205C                             l76 21C8  
                           l85 1EB4                             l79 21B4                             bsr 000FE0  
          ___wmul@multiplicand 000C               _color_read_Clear 1D4A               _color_read_Green 1CFA  
            ??_Interrupts_init 000A                            l100 21D8                            l103 21D0  
                          l225 212C                            l332 219E                            l412 20CE  
                          l262 2030                            l254 2176                            l271 1F58  
                          l247 1FB0                            l265 215E                            l275 2146  
                          l286 210E                            l526 170E                            l539 1872  
                          _abs 1EB6                            _pad 1A9C                            wreg 000FE8  
                         l1120 1B22                           l1201 19C8                           l1122 1B44  
                         l1130 1186                           l1131 11CC                           ?_abs 001C  
                         l1204 19D0                           l1117 1AE0                           l1230 1A9A  
                         l1207 1F84                           l1215 1E2E                           l1144 1396  
                         l1128 117E                           l1241 21DA                           l3001 0FDC  
                         l1090 1CA8                           l3011 10A4                           l3003 0FFC  
                         l1172 1C56                           l3101 21D2                           l3005 101C  
                         l1238 1E72                           l1166 10E2                           l3103 21CA  
                         l3031 1FE8                           l3007 1074                           l3015 10B6  
                         l1176 1EEC                           l3033 1FEE                           l3041 20D2  
                         l3121 211A                           l3051 1D40                           l3043 1CAA  
                         l3035 1FF0                           l3131 1F86                           l3123 211C  
                         l1179 1EF4                           l3061 1D4A                           l3045 1CF0  
                         l3037 1FF2                           l3029 1FDE                           l3133 1F96  
                         l3125 2126                           l3071 201E                           l3143 1F2A  
                         l3055 1D9A                           l3063 1D90                           l3039 1FF4  
                         l3135 1F9A                           l3127 2128                           l3119 2110  
                         l3151 212E                           l3161 210C                           l3073 202E  
                         l3145 1F2E                           l3057 1DE0                           l3049 1CFA  
                         l3129 212A                           l3153 2142                           l3081 1C0E  
                         l3241 13BE                           l3163 2190                           l3155 20F0  
                         l3067 200A                           l3147 1F3C                           l3091 1EFA  
                         l3139 2160                           l3075 2148                           l3083 1C2C  
                         l3171 1C7A                           l3251 13D4                           l3243 13C2  
                         l3157 20F8                           l3069 201A                           l3149 1F40  
                         l3093 1F04                           l3085 1C4C                           l3173 1C96  
                         l3165 1C58                           l3261 142E                           l3253 13D8  
                         l3245 13C6                           l3237 1398                           l3159 2102  
                         l3095 1F14                           l2711 20AA                           l2703 1E30  
                         l3079 1C02                           l3167 1C6A                           l3271 1474  
                         l3263 1440                           l3255 13E8                           l3247 13CA  
                         l3239 13BA                           l3097 1F1E                           l3089 1EF6  
                         l2713 20C6                           l3361 1916                           l2721 159A  
                         l2705 1E3C                           l2801 1ABE                           l3169 1C72  
                         l3281 150C                           l3273 1488                           l3265 1450  
                         l3257 1428                           l3249 13CE                           l3099 1B46  
                         l2731 15F0                           l2723 15BA                           l2707 1E4E  
                         l2811 1B04                           l2803 1ACC                           l3291 1554  
                         l3283 1526                           l3275 1490                           l3267 1458  
                         l3259 142A                           l2901 1888                           l2741 1644  
                         l2733 15FC                           l2725 15BE                           l2717 1588  
                         l2709 1E52                           l2813 1B30                           l2805 1AD8  
                         l3293 1570                           l3277 14FC                           l3285 152A  
                         l3269 1460                           l2831 1E28                           l2823 1DEA  
                         l2911 18EC                           l2751 16B8                           l2743 1656  
                         l2735 161A                           l2727 15CC                           l2719 158C  
                         l2815 1EB6                           l2807 1AEC                           l3359 0EC8  
                         l3295 157C                           l3287 153C                           l3279 1508  
                         l2825 1DEE                           l2921 1966                           l2913 18F4  
                         l2905 188C                           l2745 1684                           l2737 1622  
                         l2753 16BE                           l2729 15EC                           l2761 1710  
                         l2817 1ED0                           l2809 1B00                           l2841 1104  
                         l3297 1580                           l3289 1544                           l2835 205C  
                         l2931 21B6                           l2819 1F5A                           l2827 1E02  
                         l2923 199A                           l2915 192C                           l2907 18AC  
                         l2755 16CE                           l2747 16A4                           l2739 1636  
                         l2771 1754                           l2763 1714                           l2691 19E4  
                         l2851 1158                           l2843 1118                           l2837 206C  
                         l2933 21BA                           l2941 21B0                           l2829 1E24  
                         l2925 19AC                           l2909 18E4                           l2757 16EE  
                         l2749 16A6                           l2781 17BC                           l2773 1774  
                         l2765 1722                           l2693 19F6                           l2861 11B4  
                         l2853 1172                           l2845 1128                           ?_pad 001A  
                         l2951 1E82                           l2943 21C0                           l2935 21A2  
                         l2791 1832                           l2783 17EA                           l2775 1792  
                         l2767 1742                           l2695 1A00                           l2871 11E4  
                         l2863 11C0                           l2855 118E                           l2847 1148  
                         l2839 10E4                           l2953 1E8A                           l2945 21C4  
                         l2937 21A6                           l2793 1852                           l2785 180A  
                         l2777 179A                           l2769 1746                           l2697 1A1E  
                         l2689 19D2                           l2881 12F0                           l2873 1266  
                         l2865 11C8                           l2857 119E                           l2849 1156  
                         l2961 0E2A                           l2955 1EB0                           l2947 1E76  
                         l2939 21AC                           l2787 181C                           l2779 17AE  
                         l2699 1A54                           l2891 1360                           l2883 130E  
                         l2875 126C                           l2867 11D4                           l2859 11A4  
                         l2971 0E7E                           l2963 0E52                           l2957 1EB2  
                         l2949 1E7A                           l2789 1822                           l2797 1A9C  
                         l2893 1366                           l2885 1328                           l2877 1272  
                         l2869 11DE                           l2973 0E80                           l2981 0ED6  
                         l2965 0E60                           l2799 1AAA                           l2895 1376  
                         l2887 1342                           l2879 12D6                           l2991 0F62  
                         l2983 0EE8                           l2975 0E92                           l2967 0E6C  
                         l2889 1350                           l2993 0F82                           l2985 0F10  
                         l2969 0E70                           l2899 1874                           l2987 0F46  
                         l2979 0E9E                           l2997 0F90                           l2989 0F54  
                         l2999 0FCC                           STR_1 0E01                           STR_2 0E1D  
                         u2000 1F80                           u2010 1E02                           u2011 1DFE  
                         u2020 1E24                           u2100 119E                           u2021 1E20  
                         u2101 119A                           u2030 206C                           u2110 11B4  
                         u2031 2068                           u2111 11B0                           u2040 2082  
                         u2200 199A                           u2120 12F0                           u2041 207E  
                         u2201 1996                           u2121 12EC                           u2210 19AC  
                         u2130 130E                           u2050 1114                           u2211 19A8  
                         u2131 130A                           u2051 110E                           u2220 1E9E  
                         u2140 1328                           u2060 1116                           u2300 101C  
                         u2221 1E96                           u2141 1324                           u2301 1018  
                         u2310 201A                           u2150 1342                           u2070 1128  
                         u2311 2016                           u2151 133E                           u2071 1124  
                         u2320 215C                           u2400 2142                           u2160 1350  
                         u2080 1156                           u2240 0E52                   _BAUD4CONbits 000EE9  
                         u2321 2156                           u2401 213E                           u2161 134C  
                         u2081 1152                           u2241 0E4E                           u2330 215E  
                         u2170 1360                           u2090 1172                           u2250 0EE8  
                         u2171 135C                           u2091 116E                           u2251 0EE4  
                         u2180 18AC                           u2260 0F10                           u2340 1C4C  
                         u2500 1488                           u2181 18A8                           u2261 0F0C  
                         u2341 1C48                           u2501 1484                           u2238 1EA0  
                         u2190 18E0                           u2270 0F54                           u2510 153C  
                         u2191 18DC                           u2271 0F50                           u2511 1538  
                         u2360 1F96                           u1800 1E72                           u2280 0FCC  
                         u2520 1554                           u2361 1F92                           u1801 1E6E  
                         u2281 0FC8                           u2521 1550                           u2370 2174  
                         u1810 159A                           u2290 0FFC                           _T2PR 000FBC  
                         u2371 216E                           u1811 1596                           u2291 0FF8  
                         u2380 2176                           u1820 15CC                           u1900 1792  
                         u1821 15C8                           u1901 178E                           u2390 1F58  
                         u1910 17BC                           u2470 1440                           u2391 1F54  
                         u1831 15F6                           u1911 17B8                           u2471 143C  
                         u1840 161A                           u1920 17EA                           u1760 19E4  
                         u2480 1450                           u1841 1616                           u1921 17E6  
                         u1761 19E0                           u2537 1518                           u2481 144C  
                         u1850 1644                           u1930 1832                           u1770 19F6  
                         u2490 1474                           u2547 1F0A                           u1851 1640  
                         u1931 182E                           u1771 19F2                           u2491 1470  
                         u1860 1684                           u1780 1A1E                           u1940 1AAA  
                         u1861 1680                           u1781 1A1A                           u1941 1AA6  
                         u1870 16CE                           u1790 1A54                           u1950 1ACC  
                         u1871 16CA                           u1791 1A50                           u1951 1AC8  
                         u1880 1722                           u1960 1B22                           u1881 171E  
                         u1961 1B1E                           u1890 1754                           u1970 1B30  
                         u1891 1750                           u1971 1B2C                           u1980 1ED0  
                         u1981 1ECC                           u1990 1F7E                           u1991 1F78  
                         abs@a 001C                           _dbuf 02DC                           _atoi 1874  
                         _main 1398                           _dtoa 10E4                           _prec 004F  
                         pad@i 0021                           pad@p 001E                           fsr1h 000FE2  
                         fsr2h 000FDA                           indf2 000FDF                           fsr1l 000FE1  
                         pad@w 0023                           fsr2l 000FD9                           btemp 0056  
            main@initial_color 01F0                           prodh 000FF4                           prodl 000FF3  
                         start 007C                    main@string2 0264         __end_of_color_read_Red 1CFA  
              __end_of_HighISR 1C02                   ___param_bank 000000                          ??_abs 001E  
                        ??_pad 0020               __end_of_LED_init 21DA                __end_of___aodiv 1710  
                        ?_atoi 0010                          ?_main 0001                          ?_dtoa 0025  
              __end_of___aomod 1874                          i1l340 006C                          i2l251 205A  
                        i2l265 218E                          i2l258 1FDC                          i2l346 1BDE  
                        i2l348 1BF6                   vfpfcnvrt@fmt 0062                          _TMR0H 000FD4  
                        _TMR0L 000FD3     __end_of_I2C_2_Master_Start 21C0     __end_of_I2C_2_Master_Write 21AC  
                        _flags 0051                          _fputc 19D2                          _fputs 1E30  
              __end_of_isdigit 1F86                          atoi@n 0017                          pad@fp 001A  
                        atoi@s 0010                          _width 004D                          _putch 21DA  
                        main@a 00FB                          main@i 00FA                          dtoa@d 0027  
                        dtoa@i 0046                          dtoa@n 003D                          dtoa@p 0039  
                        dtoa@s 0045                          dtoa@w 003B                __end_of_isspace 1E30  
                        tablat 000FF5                          ttemp5 0057                          ttemp6 005A  
                        ttemp7 005E                          status 000FD8                          wtemp8 0057  
              __end_of_sprintf 1CAA        __end_of_color_read_Blue 1DEA          _I2C_2_Master_RepStart 21C0  
           putCharToRxBuf@byte 0001                ?_color_read_Red 000E                __initialization 2084  
                 __end_of_atoi 19D2                   __end_of_main 1588                   __end_of_dtoa 1398  
              i2_isDataInTxBuf 2178             putCharToTxBuf@byte 000A                         ??_atoi 0012  
                       ??_main 0091                         ??_dtoa 002F                  __activetblptr 000003  
                       ?_fputc 000A                         ?_fputs 0013                         _CCPR1H 000FAA  
                       _CCPR2H 000FA6                         _CCPR3H 000F25                         _CCPR4H 000F21  
                       ?_putch 0001                         _RC0PPS 000E62                         _RC4REG 000EE3  
                       _RE2PPS 000E74                         _RD5PPS 000E6F                         _RC7PPS 000E69  
                       i1l2551 0062                         i1l2543 0026                         i1l2553 0068  
                       i1l2545 0036                         i1l2547 005A                         _RE4PPS 000E76  
                       _RD6PPS 000E70                         i1l2549 005E                         i2l2431 2044  
                       i2l2441 1FB2                         i2l2433 2048                         i2l2443 1FC2  
                       i2l2435 2058                         i2l2445 1FC6                         i2l2429 2034  
                       i2l2561 1BC6                         i2l1747 2178                         i2l2563 1BDA  
                       i2l2555 1BAC                         i2l2565 1BEE                         i2l2557 1BBC  
                       i2l2559 1BC0                         _RG6PPS 000E88                  vfpfcnvrt@done 006E  
                    ??_HighISR 0003       __end_of_color_click_init 1F2A                         _RX4PPS 000E15  
                       _TX4REG 000EE4                  main@readingsB 0164                  main@readingsC 0200  
                main@readingsG 0100                  main@readingsR 0095                         _LowISR 0018  
                ??_Timer0_init 000A                   _CCPTMRS0bits 000FAD                   vfprintf@cfmt 004B  
             _getCharFromRxBuf 1F86               _getCharFromTxBuf 1FB2                      ??___aodiv 001A  
                    ??___aomod 001A                         ___wmul 20AA                         clear_0 208A  
                       clear_1 209A                         isa$std 000001                         pad@buf 001C  
                       dtoa@fp 0025                         fputc@c 000A              ?_TxBufferedString 000B  
                       fputs@c 0017                         fputs@i 0018                         fputs@s 0013  
                    ??_isdigit 000C                     _WhiteLight 21CA                   __mediumconst 0000  
                    ??_isspace 000C                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8             ??_TxBufferedString 000D                         putch@c 0001  
             __end_of_vfprintf 1C58                      ??_sprintf 004D          __end_of_isDataInRxBuf 2178  
        __end_of_isDataInTxBuf 2160                  ??_Update_RGBC 0017                     __accesstop 0060  
      __end_of__initialization 20A0       __end_of_color_read_Clear 1D9A       __end_of_color_read_Green 1D4A  
       ?_I2C_2_Master_RepStart 0001        __end_ofi2_isDataInTxBuf 2190                  ___rparam_used 000001  
                    ?_LED_init 0001               ?_color_read_Blue 000E                _Interrupts_init 2190  
               __pcstackCOMRAM 0001                  __end_of_fputc 1A9C                  __end_of_fputs 1E74  
                __end_of_putch 21DC            __end_of_Timer0_init 2110                        ??_fputc 000E  
                      ??_fputs 0017                        ??_putch 000A                     __pbssBANK0 00FC  
                   __pbssBANK2 028C                     ??_LED_init 000A                        ?_LowISR 0001  
            _color_writetoaddr 20D0                   _T2CLKCONbits 000FBF            __end_of_Update_RGBC 1BA4  
           ?_color_writetoaddr 000C                        ?___wmul 000A            ??_color_writetoaddr 000D  
                  ?_WhiteLight 0001                        _SP4BRGH 000EE6                        _SP4BRGL 000EE5  
                      i2u70_40 218E                        i2u69_40 218C                        i2u69_41 2186  
                      _SSP2ADD 000ED6                        _SSP2BUF 000ED5        __end_of_Interrupts_init 21A0  
       color_writetoaddr@value 000C               ??_color_read_Red 0010                        _HighISR 0008  
    __end_of_color_writetoaddr 20F0               ?i2_isDataInTxBuf 0001             _I2C_2_Master_Start 21B6  
                   _initUSART4 2110             _I2C_2_Master_Write 21A0                        __Hparam 0000  
                      __Lparam 0000              color_read_Red@tmp 0013                    _Timer0_init 20F0  
                      ___aodiv 1588                        ___aomod 1710            ?_I2C_2_Master_Start 0001  
          ?_I2C_2_Master_Write 0001                      ?_vfprintf 0072                   __psmallconst 0E00  
                      __pcinit 2084                        __ramtop 0E00                        __ptext0 1398  
                      __ptext1 1C58                        __ptext2 1C02                        __ptext3 0E2A  
                      __ptext4 10E4                        __ptext5 1A9C                        __ptext6 1E30  
                      __ptext7 19D2                        __ptext8 21DA                        __ptext9 1EB6  
                    _T2CONbits 000FBD                        _isdigit 1F5A                        _isspace 1DEA  
                    _T2HLTbits 000FBE                  _RxBufWriteCnt 0055                        atoi@neg 0015  
     __end_of_getCharFromRxBuf 1FB2       __end_of_getCharFromTxBuf 1FDE                        _tmr_ovf 00FC  
                      _sprintf 1C58           ??_I2C_2_Master_Start 000B           ??_I2C_2_Master_Write 000B  
               __pintcode_body 1BA4           end_of_initialization 20A0              __end_of_sendTxBuf 2148  
                      fputc@fp 000C                        int_func 1BA4                        fputs@fp 0015  
                  _Update_RGBC 1B46              ?_color_click_init 0001             ??_color_click_init 000E  
            __end_of_vfpfcnvrt 10E4                        postdec2 000FDD                        postinc0 000FEE  
                      postinc1 000FE6                        postinc2 000FDE               vfpfcnvrt@convarg 0066  
                   ??_vfprintf 004B                      _TRISAbits 000F81                      _TRISCbits 000F83  
                    _TRISDbits 000F84                      _TRISEbits 000F85                      _TRISFbits 000F86  
                    _TRISGbits 000F87       color_writetoaddr@address 000D        ??_I2C_2_Master_RepStart 000B  
             ?_Interrupts_init 0001                    _CCP1CONbits 000FAB              ?_color_read_Clear 000E  
                 _EUSART4RXbuf 02C8                   _EUSART4TXbuf 028C                    _CCP2CONbits 000FA7  
            ?_color_read_Green 000E                    _CCP3CONbits 000F26                    ?_initUSART4 0001  
                  _CCP4CONbits 000F22             ??_color_read_Clear 0010             ??_color_read_Green 0010  
                   main@string 01C8                 __end_of_LowISR 007C                    vfpfcnvrt@ap 0064  
                  vfpfcnvrt@cp 0070                    vfpfcnvrt@fp 0060                 __end_of___wmul 20D0  
          color_read_Clear@tmp 0013            start_initialization 2084                    __end_of_abs 1EF6  
                  __end_of_pad 1B46                  _TxBufWriteCnt 0053            color_read_Green@tmp 0013  
                     ??_LowISR 0006                    vfprintf@fmt 0074                       ??___wmul 000E  
               _putCharToRxBuf 2032                 _putCharToTxBuf 2008             Update_RGBC@tempval 0015  
                  __pbssCOMRAM 004D                   ??_WhiteLight 000A                  __pcstackBANK0 0060  
                __pcstackBANK1 0100                  __pcstackBANK2 0200               ___aodiv@dividend 000A  
                     ?_HighISR 0001                      _dtoa$2298 0037                   ?_Timer0_init 0001  
       __end_of_putCharToRxBuf 205C         __end_of_putCharToTxBuf 2032                      __pintcode 0008  
           __end_of_WhiteLight 21D2                       ?___aodiv 000A                       ?___aomod 000A  
             ___aodiv@quotient 001C         TxBufferedString@string 000B                    __pintcodelo 0018  
         I2C_2_Master_Read@ack 000C           I2C_2_Master_Read@tmp 000D                    __smallconst 0E00  
                     ?_isdigit 000A              _I2C_2_Master_Idle 205C              _I2C_2_Master_Init 1FDE  
            _I2C_2_Master_Read 1E74              _I2C_2_Master_Stop 21AC                       ?_isspace 000A  
                 _RxBufReadCnt 0054             ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001  
           ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001              ?_getCharFromRxBuf 0001  
                     ?_sprintf 0078              ?_getCharFromTxBuf 0001             ??_getCharFromRxBuf 000A  
           ??_getCharFromTxBuf 0001            ??_I2C_2_Master_Idle 000A            ??_I2C_2_Master_Init 000A  
                 ?_Update_RGBC 0015            ??_I2C_2_Master_Read 000B                 ___wmul@product 000E  
                     _LATAbits 000F79                  _isDataInRxBuf 2160            ??_I2C_2_Master_Stop 000B  
                     _LATCbits 000F7B                  _isDataInTxBuf 2148                       _LATEbits 000F7D  
                     _LATFbits 000F7E               _TxBufferedString 1F2A                       _LATGbits 000F7F  
                     _LATHbits 000F80                      _sendTxBuf 212E                       _IPR0bits 000E1F  
                     _PIE0bits 000E29                       _LED_init 21D2                       _PIE4bits 000E2D  
                     i1u164_20 0036                       i1u164_21 0032                       i1u165_20 0048  
                     i1u165_21 0040                       i1u166_28 004A                       i2u152_40 2044  
                     i2u152_41 2040                       i2u155_40 1FC2                       i2u155_41 1FBE  
                     i2u167_40 1BBC                       i2u167_41 1BB8                       _PIR0bits 000E33  
                     HighISR@a 0005                       i2u168_40 1BDA                       i2u168_41 1BD6  
                     i2u169_40 1BEE                       i2u169_41 1BEA                       _PIR4bits 000E37  
              ?_putCharToRxBuf 0001                ?_putCharToTxBuf 0001                       _SSP2CON2 000EDA  
                     _SSP2STAT 000ED8                      _vfpfcnvrt 0E2A      __end_of_I2C_2_Master_Idle 2084  
    __end_of_I2C_2_Master_Init 2008      __end_of_I2C_2_Master_Read 1EB6              ___wmul@multiplier 000A  
    __end_of_I2C_2_Master_Stop 21B6    I2C_2_Master_Write@data_byte 000B              ??_color_read_Blue 0010  
                 _TxBufReadCnt 0052                   _isspace$2347 000E                 ?_isDataInRxBuf 0001  
               ?_isDataInTxBuf 0001  __end_of_I2C_2_Master_RepStart 21CA             color_read_Blue@tmp 0013  
                   ?_sendTxBuf 0001                   ??_initUSART4 000A                       __Hrparam 0000  
                   vfprintf@ap 0076                       __Lrparam 0000                     vfprintf@fp 0072  
                   ?_vfpfcnvrt 0060                ___aodiv@divisor 0012                ___aodiv@counter 001A  
                   _ANSELDbits 000EA7                     sprintf@fmt 007A                     _T0CON0bits 000FD5  
                   _T0CON1bits 000FD6             __end_of_initUSART4 212E                       __ptext10 1710  
                     __ptext11 1588                       __ptext20 1F86                       __ptext12 1874  
                     __ptext21 1EF6                       __ptext13 1DEA                       __ptext30 21A0  
                     __ptext22 20D0                       __ptext14 1F5A                       __ptext31 21AC  
                     __ptext23 1FDE                       __ptext15 20AA                       __ptext40 2190  
                     __ptext32 21B6                       __ptext24 21CA                       __ptext16 212E  
                     __ptext33 21C0                       __ptext25 1B46                       __ptext17 2148  
                     __ptext34 1E74                       __ptext26 1CAA                       __ptext18 2160  
                     __ptext43 2178                       __ptext35 205C                       __ptext27 1CFA  
                     __ptext19 2110                       __ptext44 2032                       __ptext36 1F2A  
                     __ptext28 1D4A                       __ptext45 1FB2                       __ptext37 2008  
                     __ptext29 1D9A                       __ptext38 20F0                       __ptext39 21D2  
                 _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA                       isa$xinst 000000  
                   _RC4STAbits 000EE7                       int$flags 0056                       _vfprintf 1C02  
                     main@cont 00F9               ___aomod@dividend 000A                     _INTCONbits 000FF2  
            ??i2_isDataInTxBuf 0001                       isdigit@c 000A                ??_isDataInRxBuf 000A  
              ??_isDataInTxBuf 000A                       intlevel1 0000                       intlevel2 0000  
                    sprintf@ap 0084                       isspace@c 000A                    ??_sendTxBuf 000A  
              ___aomod@divisor 0012                    ??_vfpfcnvrt 0048                ___aomod@counter 001A  
             _color_click_init 1EF6       __end_of_TxBufferedString 1F5A                       sprintf@f 0086  
                     sprintf@s 0078                     _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C  
                   _TX4STAbits 000EE8                   ___aodiv@sign 001B               ??_putCharToRxBuf 0001  
             ??_putCharToTxBuf 000A                   ___aomod@sign 001B  
