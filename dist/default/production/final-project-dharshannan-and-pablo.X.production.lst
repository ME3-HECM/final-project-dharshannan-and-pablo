

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Mar 10 16:42:15 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    66                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    76                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    77                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    78                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    79                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    80   000000                     
    81                           ; Generated 06/04/2022 GMT
    82                           ; 
    83                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    84                           ; All rights reserved.
    85                           ; 
    86                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    87                           ; 
    88                           ; Redistribution and use in source and binary forms, with or without modification, are
    89                           ; permitted provided that the following conditions are met:
    90                           ; 
    91                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    92                           ;        conditions and the following disclaimer.
    93                           ; 
    94                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    95                           ;        of conditions and the following disclaimer in the documentation and/or other
    96                           ;        materials provided with the distribution. Publication is not required when
    97                           ;        this file is used in an embedded application.
    98                           ; 
    99                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   100                           ;        software without specific prior written permission.
   101                           ; 
   102                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   103                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   104                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   105                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   106                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   107                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   108                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   109                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   110                           ; 
   111                           ; 
   112                           ; Code-generator required, PIC18F67K40 Definitions
   113                           ; 
   114                           ; SFR Addresses
   115   000000                     
   116                           	psect	idataBANK0
   117   0027DE                     __pidataBANK0:
   118                           	callstack 0
   119                           
   120                           ;initializer for _int_threshold_high
   121   0027DE  09C4               	dw	2500
   122   000000                     _T0CON0bits	set	4053
   123   000000                     _T0CON1bits	set	4054
   124   000000                     _TX4REG	set	3812
   125   000000                     _RC4STAbits	set	3815
   126   000000                     _SP4BRGH	set	3814
   127   000000                     _TRISBbits	set	3970
   128   000000                     _TRISCbits	set	3971
   129   000000                     _TRISEbits	set	3973
   130   000000                     _LATEbits	set	3965
   131   000000                     _LATFbits	set	3966
   132   000000                     _LATGbits	set	3967
   133   000000                     _TRISFbits	set	3974
   134   000000                     _TRISGbits	set	3975
   135   000000                     _SSP2CON2bits	set	3802
   136   000000                     _INT1PPS	set	3569
   137   000000                     _SSP2CLKPPS	set	3612
   138   000000                     _SSP2DATPPS	set	3613
   139   000000                     _ANSELDbits	set	3751
   140   000000                     _SSP2ADD	set	3798
   141   000000                     _SSP2CON1bits	set	3801
   142   000000                     _RC4REG	set	3811
   143   000000                     _SP4BRGL	set	3813
   144   000000                     _TX4STAbits	set	3816
   145   000000                     _BAUD4CONbits	set	3817
   146   000000                     _LATAbits	set	3961
   147   000000                     _LATDbits	set	3964
   148   000000                     _LATHbits	set	3968
   149   000000                     _TRISAbits	set	3969
   150   000000                     _SSP2CON2	set	3802
   151   000000                     _TRISDbits	set	3972
   152   000000                     _CCPR4H	set	3873
   153   000000                     _CCPR3H	set	3877
   154   000000                     _SSP2STAT	set	3800
   155   000000                     _SSP2BUF	set	3797
   156   000000                     _IPR0bits	set	3615
   157   000000                     _PIE0bits	set	3625
   158   000000                     _RC7PPS	set	3689
   159   000000                     _RD5PPS	set	3695
   160   000000                     _RE2PPS	set	3700
   161   000000                     _RD6PPS	set	3696
   162   000000                     _T2PR	set	4028
   163   000000                     _T2CONbits	set	4029
   164   000000                     _TRISHbits	set	3976
   165   000000                     _CCPR2H	set	4006
   166   000000                     _CCPR1H	set	4010
   167   000000                     _LATCbits	set	3963
   168   000000                     _RE4PPS	set	3702
   169   000000                     _RG6PPS	set	3720
   170   000000                     _ANSELBbits	set	3738
   171   000000                     _TMR0L	set	4051
   172   000000                     _TMR0H	set	4052
   173   000000                     _INTCONbits	set	4082
   174   000000                     _T2CLKCONbits	set	4031
   175   000000                     _T2HLTbits	set	4030
   176   000000                     _CCP1CONbits	set	4011
   177   000000                     _CCPTMRS0bits	set	4013
   178   000000                     _CCP2CONbits	set	4007
   179   000000                     _CCP3CONbits	set	3878
   180   000000                     _CCP4CONbits	set	3874
   181   000000                     _RX4PPS	set	3605
   182   000000                     _PIE4bits	set	3629
   183   000000                     _PIR0bits	set	3635
   184   000000                     _PIR4bits	set	3639
   185   000000                     _RC0PPS	set	3682
   186                           
   187                           ; #config settings
   188                           
   189                           	psect	cinit
   190   002496                     __pcinit:
   191                           	callstack 0
   192   002496                     start_initialization:
   193                           	callstack 0
   194   002496                     __initialization:
   195                           	callstack 0
   196                           
   197                           ; Initialize objects allocated to BANK0 (2 bytes)
   198                           ; load TBLPTR registers with __pidataBANK0
   199   002496  0EDE               	movlw	low __pidataBANK0
   200   002498  6EF6               	movwf	tblptrl,c
   201   00249A  0E27               	movlw	high __pidataBANK0
   202   00249C  6EF7               	movwf	tblptrh,c
   203   00249E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   204   0024A0  6EF8               	movwf	tblptru,c
   205   0024A2  0009               	tblrd		*+	;fetch initializer
   206   0024A4  CFF5 F0D3          	movff	tablat,__pdataBANK0
   207   0024A8  0009               	tblrd		*+	;fetch initializer
   208   0024AA  CFF5 F0D4          	movff	tablat,__pdataBANK0+1
   209                           
   210                           ; Clear objects allocated to BANK1 (140 bytes)
   211   0024AE  EE01  F000         	lfsr	0,__pbssBANK1
   212   0024B2  0E8C               	movlw	140
   213   0024B4                     clear_0:
   214   0024B4  6AEE               	clrf	postinc0,c
   215   0024B6  06E8               	decf	wreg,f,c
   216   0024B8  E1FD               	bnz	clear_0
   217                           
   218                           ; Clear objects allocated to BANK0 (62 bytes)
   219   0024BA  EE00  F060         	lfsr	0,__pbssBANK0
   220   0024BE  0E3E               	movlw	62
   221   0024C0                     clear_1:
   222   0024C0  6AEE               	clrf	postinc0,c
   223   0024C2  06E8               	decf	wreg,f,c
   224   0024C4  E1FD               	bnz	clear_1
   225                           
   226                           ; Clear objects allocated to COMRAM (8 bytes)
   227   0024C6  EE00  F04F         	lfsr	0,__pbssCOMRAM
   228   0024CA  0E08               	movlw	8
   229   0024CC                     clear_2:
   230   0024CC  6AEE               	clrf	postinc0,c
   231   0024CE  06E8               	decf	wreg,f,c
   232   0024D0  E1FD               	bnz	clear_2
   233   0024D2                     end_of_initialization:
   234                           	callstack 0
   235   0024D2                     __end_of__initialization:
   236                           	callstack 0
   237   0024D2  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   238   0024D4  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   239   0024D6  0100               	movlb	0
   240   0024D8  EF1E  F007         	goto	_main	;jump to C main() function
   241                           
   242                           	psect	bssCOMRAM
   243   00004F                     __pbssCOMRAM:
   244                           	callstack 0
   245   00004F                     _int_threshold_low:
   246                           	callstack 0
   247   00004F                     	ds	2
   248   000051                     _TxBufReadCnt:
   249                           	callstack 0
   250   000051                     	ds	1
   251   000052                     _TxBufWriteCnt:
   252                           	callstack 0
   253   000052                     	ds	1
   254   000053                     _RxBufReadCnt:
   255                           	callstack 0
   256   000053                     	ds	1
   257   000054                     _RxBufWriteCnt:
   258                           	callstack 0
   259   000054                     	ds	1
   260   000055                     _color_flag:
   261                           	callstack 0
   262   000055                     	ds	1
   263   000056                     _moves_index:
   264                           	callstack 0
   265   000056                     	ds	1
   266                           
   267                           	psect	bssBANK0
   268   000060                     __pbssBANK0:
   269                           	callstack 0
   270   000060                     _EUSART4RXbuf:
   271                           	callstack 0
   272   000060                     	ds	20
   273   000074                     _tmr_ovf:
   274                           	callstack 0
   275   000074                     	ds	1
   276   000075                     _anti_moves_array:
   277                           	callstack 0
   278   000075                     	ds	40
   279   00009D                     _time_index:
   280                           	callstack 0
   281   00009D                     	ds	1
   282                           
   283                           	psect	dataBANK0
   284   0000D3                     __pdataBANK0:
   285                           	callstack 0
   286   0000D3                     _int_threshold_high:
   287                           	callstack 0
   288   0000D3                     	ds	2
   289                           
   290                           	psect	bssBANK1
   291   000100                     __pbssBANK1:
   292                           	callstack 0
   293   000100                     _EUSART4TXbuf:
   294                           	callstack 0
   295   000100                     	ds	60
   296   00013C                     _time_array:
   297                           	callstack 0
   298   00013C                     	ds	80
   299                           
   300                           	psect	cstackBANK0
   301   00009E                     __pcstackBANK0:
   302                           	callstack 0
   303   00009E                     ??___fltol:
   304                           
   305                           ; 1 bytes @ 0x0
   306   00009E                     	ds	4
   307   0000A2                     detect_color@tempval:
   308                           	callstack 0
   309                           
   310                           ; 2 bytes @ 0x4
   311   0000A2                     	ds	2
   312   0000A4                     ??_detect_color:
   313                           
   314                           ; 1 bytes @ 0x6
   315   0000A4                     	ds	12
   316   0000B0                     detect_color@color:
   317                           	callstack 0
   318                           
   319                           ; 1 bytes @ 0x12
   320   0000B0                     	ds	1
   321   0000B1                     detect_color@dist_R:
   322                           	callstack 0
   323                           
   324                           ; 1 bytes @ 0x13
   325   0000B1                     	ds	1
   326   0000B2                     detect_color@dist_G:
   327                           	callstack 0
   328                           
   329                           ; 1 bytes @ 0x14
   330   0000B2                     	ds	1
   331   0000B3                     detect_color@dist_B:
   332                           	callstack 0
   333                           
   334                           ; 1 bytes @ 0x15
   335   0000B3                     	ds	1
   336   0000B4                     ??_main:
   337                           
   338                           ; 1 bytes @ 0x16
   339   0000B4                     	ds	2
   340   0000B6                     main@b:
   341                           	callstack 0
   342                           
   343                           ; 2 bytes @ 0x18
   344   0000B6                     	ds	2
   345   0000B8                     main@color_detected:
   346                           	callstack 0
   347                           
   348                           ; 1 bytes @ 0x1A
   349   0000B8                     	ds	1
   350   0000B9                     main@initial_color:
   351                           	callstack 0
   352                           
   353                           ; 8 bytes @ 0x1B
   354   0000B9                     	ds	8
   355   0000C1                     main@motorL:
   356                           	callstack 0
   357                           
   358                           ; 9 bytes @ 0x23
   359   0000C1                     	ds	9
   360   0000CA                     main@motorR:
   361                           	callstack 0
   362                           
   363                           ; 9 bytes @ 0x2C
   364   0000CA                     	ds	9
   365                           
   366                           	psect	cstackCOMRAM
   367   000001                     __pcstackCOMRAM:
   368                           	callstack 0
   369   000001                     ??i2_I2C_2_Master_Idle:
   370   000001                     
   371                           ; 1 bytes @ 0x0
   372   000001                     	ds	1
   373   000002                     i2I2C_2_Master_Write@data_byte:
   374                           	callstack 0
   375                           
   376                           ; 1 bytes @ 0x1
   377   000002                     	ds	1
   378   000003                     i2color_writetoaddr@value:
   379                           	callstack 0
   380                           
   381                           ; 1 bytes @ 0x2
   382   000003                     	ds	1
   383   000004                     i2color_writetoaddr@address:
   384                           	callstack 0
   385                           
   386                           ; 1 bytes @ 0x3
   387   000004                     	ds	1
   388   000005                     ??i2_init_colorclick_interrupts:
   389                           
   390                           ; 1 bytes @ 0x4
   391   000005                     	ds	1
   392   000006                     ??_LowISR:
   393   000006                     
   394                           ; 1 bytes @ 0x5
   395   000006                     	ds	3
   396   000009                     ??_I2C_2_Master_Idle:
   397   000009                     ?_Return_Time:
   398                           	callstack 0
   399   000009                     ?___wmul:
   400                           	callstack 0
   401   000009                     ?___xxtofl:
   402                           	callstack 0
   403   000009                     initDCmotorsPWM@PWMperiod:
   404                           	callstack 0
   405   000009                     AppendMoves@moves_index:
   406                           	callstack 0
   407   000009                     AppendTime@temp:
   408                           	callstack 0
   409   000009                     Return_Anti_Moves@moves_index:
   410                           	callstack 0
   411   000009                     Return_Time@time_index:
   412                           	callstack 0
   413   000009                     ___wmul@multiplier:
   414                           	callstack 0
   415   000009                     ___xxtofl@val:
   416                           	callstack 0
   417                           
   418                           ; 4 bytes @ 0x8
   419   000009                     	ds	1
   420   00000A                     ??_I2C_2_Master_Read:
   421   00000A                     I2C_2_Master_Write@data_byte:
   422                           	callstack 0
   423                           
   424                           ; 1 bytes @ 0x9
   425   00000A                     	ds	1
   426   00000B                     color_writetoaddr@value:
   427                           	callstack 0
   428   00000B                     I2C_2_Master_Read@ack:
   429                           	callstack 0
   430   00000B                     AppendMoves@anti_moves_array:
   431                           	callstack 0
   432   00000B                     AppendTime@time_index:
   433                           	callstack 0
   434   00000B                     Return_Anti_Moves@anti_moves_array:
   435                           	callstack 0
   436   00000B                     Return_Time@time_array:
   437                           	callstack 0
   438   00000B                     ___wmul@multiplicand:
   439                           	callstack 0
   440                           
   441                           ; 2 bytes @ 0xA
   442   00000B                     	ds	1
   443   00000C                     color_writetoaddr@address:
   444                           	callstack 0
   445   00000C                     I2C_2_Master_Read@tmp:
   446                           	callstack 0
   447                           
   448                           ; 1 bytes @ 0xB
   449   00000C                     	ds	1
   450   00000D                     ??_Return_Time:
   451   00000D                     ??_Return_Anti_Moves:
   452   00000D                     ??_AppendMoves:
   453   00000D                     ??_color_click_init:
   454   00000D                     ??_init_colorclick_interrupts:
   455   00000D                     ??___xxtofl:
   456   00000D                     ?_color_read_Red:
   457                           	callstack 0
   458   00000D                     ?_color_read_Green:
   459                           	callstack 0
   460   00000D                     ?_color_read_Blue:
   461                           	callstack 0
   462   00000D                     ?_color_read_Clear:
   463                           	callstack 0
   464   00000D                     AppendTime@time_array:
   465                           	callstack 0
   466   00000D                     ___wmul@product:
   467                           	callstack 0
   468                           
   469                           ; 2 bytes @ 0xC
   470   00000D                     	ds	1
   471   00000E                     AppendMoves@temp:
   472                           	callstack 0
   473   00000E                     Return_Anti_Moves@temp:
   474                           	callstack 0
   475                           
   476                           ; 1 bytes @ 0xD
   477   00000E                     	ds	1
   478   00000F                     ??_AppendTime:
   479   00000F                     ??_color_read_Red:
   480   00000F                     ??_color_read_Green:
   481   00000F                     ??_color_read_Blue:
   482   00000F                     ??_color_read_Clear:
   483   00000F                     ?___lwdiv:
   484                           	callstack 0
   485   00000F                     ___lwdiv@dividend:
   486                           	callstack 0
   487                           
   488                           ; 2 bytes @ 0xE
   489   00000F                     	ds	1
   490   000010                     Return_Time@temp:
   491                           	callstack 0
   492                           
   493                           ; 2 bytes @ 0xF
   494   000010                     	ds	1
   495   000011                     ___xxtofl@sign:
   496                           	callstack 0
   497   000011                     ___lwdiv@divisor:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0x10
   501   000011                     	ds	1
   502   000012                     ___xxtofl@exp:
   503                           	callstack 0
   504   000012                     color_read_Red@tmp:
   505                           	callstack 0
   506   000012                     color_read_Green@tmp:
   507                           	callstack 0
   508   000012                     color_read_Blue@tmp:
   509                           	callstack 0
   510   000012                     color_read_Clear@tmp:
   511                           	callstack 0
   512                           
   513                           ; 2 bytes @ 0x11
   514   000012                     	ds	1
   515   000013                     ___lwdiv@quotient:
   516                           	callstack 0
   517   000013                     ___xxtofl@arg:
   518                           	callstack 0
   519                           
   520                           ; 4 bytes @ 0x12
   521   000013                     	ds	1
   522   000014                     Update_RGBC@tempval:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0x13
   526   000014                     	ds	1
   527   000015                     ___lwdiv@counter:
   528                           	callstack 0
   529                           
   530                           ; 1 bytes @ 0x14
   531   000015                     	ds	1
   532   000016                     setMotorPWM@m:
   533                           	callstack 0
   534                           
   535                           ; 2 bytes @ 0x15
   536   000016                     	ds	1
   537   000017                     ?___fldiv:
   538                           	callstack 0
   539   000017                     ___fldiv@b:
   540                           	callstack 0
   541                           
   542                           ; 4 bytes @ 0x16
   543   000017                     	ds	1
   544   000018                     ??_setMotorPWM:
   545                           
   546                           ; 1 bytes @ 0x17
   547   000018                     	ds	2
   548   00001A                     setMotorPWM@posDuty:
   549                           	callstack 0
   550                           
   551                           ; 1 bytes @ 0x19
   552   00001A                     	ds	1
   553   00001B                     setMotorPWM@negDuty:
   554                           	callstack 0
   555   00001B                     ___fldiv@a:
   556                           	callstack 0
   557                           
   558                           ; 4 bytes @ 0x1A
   559   00001B                     	ds	1
   560   00001C                     stop@mL:
   561                           	callstack 0
   562   00001C                     turnLeft@mL:
   563                           	callstack 0
   564   00001C                     turnRight@mL:
   565                           	callstack 0
   566   00001C                     fullSpeedAhead@mL:
   567                           	callstack 0
   568   00001C                     fullSpeedBackwards@mL:
   569                           	callstack 0
   570                           
   571                           ; 2 bytes @ 0x1B
   572   00001C                     	ds	2
   573   00001E                     stop@mR:
   574                           	callstack 0
   575   00001E                     turnLeft@mR:
   576                           	callstack 0
   577   00001E                     turnRight@mR:
   578                           	callstack 0
   579   00001E                     fullSpeedAhead@mR:
   580                           	callstack 0
   581   00001E                     fullSpeedBackwards@mR:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0x1D
   585   00001E                     	ds	1
   586   00001F                     ??___fldiv:
   587                           
   588                           ; 1 bytes @ 0x1E
   589   00001F                     	ds	1
   590   000020                     ??_stop:
   591   000020                     ??_turnLeft:
   592   000020                     ??_turnRight:
   593   000020                     ??_fullSpeedAhead:
   594   000020                     ??_fullSpeedBackwards:
   595                           
   596                           ; 1 bytes @ 0x1F
   597   000020                     	ds	2
   598   000022                     turnLeft90@mL:
   599                           	callstack 0
   600   000022                     turnRight90@mL:
   601                           	callstack 0
   602   000022                     turnRight135@mL:
   603                           	callstack 0
   604   000022                     turnLeft135@mL:
   605                           	callstack 0
   606                           
   607                           ; 2 bytes @ 0x21
   608   000022                     	ds	1
   609   000023                     ___fldiv@rem:
   610                           	callstack 0
   611                           
   612                           ; 4 bytes @ 0x22
   613   000023                     	ds	1
   614   000024                     turnLeft90@mR:
   615                           	callstack 0
   616   000024                     turnRight90@mR:
   617                           	callstack 0
   618   000024                     turnRight135@mR:
   619                           	callstack 0
   620   000024                     turnLeft135@mR:
   621                           	callstack 0
   622                           
   623                           ; 2 bytes @ 0x23
   624   000024                     	ds	2
   625   000026                     turnLeft90@a:
   626                           	callstack 0
   627   000026                     turnRight90@a:
   628                           	callstack 0
   629   000026                     turnRight135@a:
   630                           	callstack 0
   631   000026                     turnLeft135@a:
   632                           	callstack 0
   633                           
   634                           ; 1 bytes @ 0x25
   635   000026                     	ds	1
   636   000027                     ___fldiv@sign:
   637                           	callstack 0
   638   000027                     RedInstructions@mL:
   639                           	callstack 0
   640   000027                     GreenInstructions@mL:
   641                           	callstack 0
   642   000027                     BlueInstructions@mL:
   643                           	callstack 0
   644   000027                     YellowInstructions@mL:
   645                           	callstack 0
   646   000027                     PinkInstructions@mL:
   647                           	callstack 0
   648   000027                     OrangeInstructions@mL:
   649                           	callstack 0
   650   000027                     LightBlueInstructions@mL:
   651                           	callstack 0
   652                           
   653                           ; 2 bytes @ 0x26
   654   000027                     	ds	1
   655   000028                     ___fldiv@new_exp:
   656                           	callstack 0
   657                           
   658                           ; 2 bytes @ 0x27
   659   000028                     	ds	1
   660   000029                     RedInstructions@mR:
   661                           	callstack 0
   662   000029                     GreenInstructions@mR:
   663                           	callstack 0
   664   000029                     BlueInstructions@mR:
   665                           	callstack 0
   666   000029                     YellowInstructions@mR:
   667                           	callstack 0
   668   000029                     PinkInstructions@mR:
   669                           	callstack 0
   670   000029                     OrangeInstructions@mR:
   671                           	callstack 0
   672   000029                     LightBlueInstructions@mR:
   673                           	callstack 0
   674                           
   675                           ; 2 bytes @ 0x28
   676   000029                     	ds	1
   677   00002A                     ___fldiv@grs:
   678                           	callstack 0
   679                           
   680                           ; 4 bytes @ 0x29
   681   00002A                     	ds	1
   682   00002B                     ??_RedInstructions:
   683   00002B                     ??_GreenInstructions:
   684   00002B                     ??_BlueInstructions:
   685   00002B                     ??_YellowInstructions:
   686   00002B                     ??_PinkInstructions:
   687   00002B                     ??_OrangeInstructions:
   688   00002B                     ??_LightBlueInstructions:
   689                           
   690                           ; 1 bytes @ 0x2A
   691   00002B                     	ds	2
   692   00002D                     RedInstructions@a:
   693                           	callstack 0
   694   00002D                     GreenInstructions@a:
   695                           	callstack 0
   696   00002D                     BlueInstructions@a:
   697                           	callstack 0
   698   00002D                     YellowInstructions@a:
   699                           	callstack 0
   700   00002D                     PinkInstructions@a:
   701                           	callstack 0
   702   00002D                     OrangeInstructions@a:
   703                           	callstack 0
   704   00002D                     LightBlueInstructions@a:
   705                           	callstack 0
   706                           
   707                           ; 1 bytes @ 0x2C
   708   00002D                     	ds	1
   709   00002E                     ___fldiv@bexp:
   710                           	callstack 0
   711   00002E                     MoveBuggy@color_detected:
   712                           	callstack 0
   713                           
   714                           ; 2 bytes @ 0x2D
   715   00002E                     	ds	1
   716   00002F                     ___fldiv@aexp:
   717                           	callstack 0
   718                           
   719                           ; 1 bytes @ 0x2E
   720   00002F                     	ds	1
   721   000030                     ?___flmul:
   722                           	callstack 0
   723   000030                     MoveBuggy@mL:
   724                           	callstack 0
   725   000030                     ___flmul@b:
   726                           	callstack 0
   727                           
   728                           ; 4 bytes @ 0x2F
   729   000030                     	ds	2
   730   000032                     MoveBuggy@mR:
   731                           	callstack 0
   732                           
   733                           ; 2 bytes @ 0x31
   734   000032                     	ds	2
   735   000034                     WhiteInstructions@mL:
   736                           	callstack 0
   737   000034                     ___flmul@a:
   738                           	callstack 0
   739                           
   740                           ; 4 bytes @ 0x33
   741   000034                     	ds	2
   742   000036                     WhiteInstructions@mR:
   743                           	callstack 0
   744                           
   745                           ; 2 bytes @ 0x35
   746   000036                     	ds	2
   747   000038                     ??_WhiteInstructions:
   748   000038                     ??___flmul:
   749                           
   750                           ; 1 bytes @ 0x37
   751   000038                     	ds	2
   752   00003A                     WhiteInstructions@c:
   753                           	callstack 0
   754                           
   755                           ; 2 bytes @ 0x39
   756   00003A                     	ds	2
   757   00003C                     WhiteInstructions@anticolor:
   758                           	callstack 0
   759   00003C                     ___flmul@sign:
   760                           	callstack 0
   761                           
   762                           ; 1 bytes @ 0x3B
   763   00003C                     	ds	1
   764   00003D                     WhiteInstructions@a:
   765                           	callstack 0
   766   00003D                     ___flmul@grs:
   767                           	callstack 0
   768                           
   769                           ; 4 bytes @ 0x3C
   770   00003D                     	ds	4
   771   000041                     ___flmul@aexp:
   772                           	callstack 0
   773                           
   774                           ; 1 bytes @ 0x40
   775   000041                     	ds	1
   776   000042                     ___flmul@bexp:
   777                           	callstack 0
   778                           
   779                           ; 1 bytes @ 0x41
   780   000042                     	ds	1
   781   000043                     ___flmul@prod:
   782                           	callstack 0
   783                           
   784                           ; 4 bytes @ 0x42
   785   000043                     	ds	4
   786   000047                     ___flmul@temp:
   787                           	callstack 0
   788                           
   789                           ; 2 bytes @ 0x46
   790   000047                     	ds	2
   791   000049                     ?___fltol:
   792                           	callstack 0
   793   000049                     ___fltol@f1:
   794                           	callstack 0
   795                           
   796                           ; 4 bytes @ 0x48
   797   000049                     	ds	4
   798   00004D                     ___fltol@sign1:
   799                           	callstack 0
   800                           
   801                           ; 1 bytes @ 0x4C
   802   00004D                     	ds	1
   803   00004E                     ___fltol@exp1:
   804                           	callstack 0
   805                           
   806                           ; 1 bytes @ 0x4D
   807   00004E                     	ds	1
   808                           
   809 ;;
   810 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   811 ;;
   812 ;; *************** function _main *****************
   813 ;; Defined at:
   814 ;;		line 22 in file "main_motor.c"
   815 ;; Parameters:    Size  Location     Type
   816 ;;		None
   817 ;; Auto vars:     Size  Location     Type
   818 ;;  b               2   24[BANK0 ] unsigned int 
   819 ;;  motorR          9   44[BANK0 ] struct DC_motor
   820 ;;  motorL          9   35[BANK0 ] struct DC_motor
   821 ;;  initial_colo    8   27[BANK0 ] struct RGB_val
   822 ;;  color_detect    1   26[BANK0 ] unsigned char 
   823 ;; Return value:  Size  Location     Type
   824 ;;                  1    wreg      void 
   825 ;; Registers used:
   826 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   827 ;; Tracked objects:
   828 ;;		On entry : 0/0
   829 ;;		On exit  : 0/0
   830 ;;		Unchanged: 0/0
   831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   833 ;;      Locals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   834 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   835 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   836 ;;Total ram usage:       31 bytes
   837 ;; Hardware stack levels required when called: 14
   838 ;; This function calls:
   839 ;;		_AppendTime
   840 ;;		_Interrupts_init
   841 ;;		_LED_init
   842 ;;		_MoveBuggy
   843 ;;		_Timer0_init
   844 ;;		_Update_RGBC
   845 ;;		_WhiteInstructions
   846 ;;		_WhiteLight
   847 ;;		_color_click_init
   848 ;;		_detect_color
   849 ;;		_fullSpeedAhead
   850 ;;		_initDCmotorsPWM
   851 ;;		_stop
   852 ;; This function is called by:
   853 ;;		Startup code after reset
   854 ;; This function uses a non-reentrant model
   855 ;;
   856                           
   857                           	psect	text0
   858   000E3C                     __ptext0:
   859                           	callstack 0
   860   000E3C                     _main:
   861                           	callstack 17
   862   000E3C                     
   863                           ;main_motor.c: 25:     RGB_val initial_color;;main_motor.c: 26:     initial_color.R = 0;
   864   000E3C  0E00               	movlw	0
   865   000E3E  0100               	movlb	0	; () banked
   866   000E40  6FBA               	movwf	(main@initial_color+1)& (0+255),b
   867   000E42  0E00               	movlw	0
   868   000E44  6FB9               	movwf	main@initial_color& (0+255),b
   869                           
   870                           ;main_motor.c: 27:     initial_color.G = 0;
   871   000E46  0E00               	movlw	0
   872   000E48  6FBC               	movwf	(main@initial_color+3)& (0+255),b
   873   000E4A  0E00               	movlw	0
   874   000E4C  6FBB               	movwf	(main@initial_color+2)& (0+255),b
   875                           
   876                           ;main_motor.c: 28:     initial_color.B = 0;
   877   000E4E  0E00               	movlw	0
   878   000E50  6FBE               	movwf	(main@initial_color+5)& (0+255),b
   879   000E52  0E00               	movlw	0
   880   000E54  6FBD               	movwf	(main@initial_color+4)& (0+255),b
   881                           
   882                           ;main_motor.c: 29:     initial_color.C = 0;
   883   000E56  0E00               	movlw	0
   884   000E58  6FC0               	movwf	(main@initial_color+7)& (0+255),b
   885   000E5A  0E00               	movlw	0
   886   000E5C  6FBF               	movwf	(main@initial_color+6)& (0+255),b
   887   000E5E                     
   888                           ; BSR set to: 0
   889                           ;main_motor.c: 31:     LED_init();
   890   000E5E  ECBE  F013         	call	_LED_init	;wreg free
   891   000E62                     
   892                           ;main_motor.c: 32:     color_click_init();
   893   000E62  ECAB  F012         	call	_color_click_init	;wreg free
   894   000E66                     
   895                           ;main_motor.c: 33:     Interrupts_init();
   896   000E66  EC2E  F013         	call	_Interrupts_init	;wreg free
   897                           
   898                           ;main_motor.c: 35:     Timer0_init();
   899   000E6A  EC64  F013         	call	_Timer0_init	;wreg free
   900                           
   901                           ;main_motor.c: 38:     initDCmotorsPWM(99);
   902   000E6E  0E00               	movlw	0
   903   000E70  6E0A               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   904   000E72  0E63               	movlw	99
   905   000E74  6E09               	movwf	initDCmotorsPWM@PWMperiod^0,c
   906   000E76  EC64  F00E         	call	_initDCmotorsPWM	;wreg free
   907   000E7A                     
   908                           ;main_motor.c: 40:     struct DC_motor motorL, motorR;;main_motor.c: 42:     motorL.powe
      +                          r=0;
   909   000E7A  0E00               	movlw	0
   910   000E7C  0100               	movlb	0	; () banked
   911   000E7E  6FC1               	movwf	main@motorL& (0+255),b
   912   000E80                     
   913                           ; BSR set to: 0
   914                           ;main_motor.c: 43:     motorL.direction=1;
   915   000E80  0E01               	movlw	1
   916   000E82  6FC2               	movwf	(main@motorL+1)& (0+255),b
   917   000E84                     
   918                           ; BSR set to: 0
   919                           ;main_motor.c: 44:     motorL.brakemode=1;
   920   000E84  0E01               	movlw	1
   921   000E86  6FC3               	movwf	(main@motorL+2)& (0+255),b
   922   000E88                     
   923                           ; BSR set to: 0
   924                           ;main_motor.c: 45:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
   925   000E88  0EAA               	movlw	170
   926   000E8A  6FC6               	movwf	(main@motorL+5)& (0+255),b
   927   000E8C  0E0F               	movlw	15
   928   000E8E  6FC7               	movwf	(main@motorL+6)& (0+255),b
   929   000E90                     
   930                           ; BSR set to: 0
   931                           ;main_motor.c: 46:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
   932   000E90  0EA6               	movlw	166
   933   000E92  6FC8               	movwf	(main@motorL+7)& (0+255),b
   934   000E94  0E0F               	movlw	15
   935   000E96  6FC9               	movwf	(main@motorL+8)& (0+255),b
   936   000E98                     
   937                           ; BSR set to: 0
   938                           ;main_motor.c: 47:     motorL.PWMperiod= T2PR;
   939   000E98  CFBC F0C4          	movff	4028,main@motorL+3	;volatile
   940   000E9C  6BC5               	clrf	(main@motorL+4)& (0+255),b
   941   000E9E                     
   942                           ; BSR set to: 0
   943                           ;main_motor.c: 49:     motorR.power=0;
   944   000E9E  0E00               	movlw	0
   945   000EA0  6FCA               	movwf	main@motorR& (0+255),b
   946   000EA2                     
   947                           ; BSR set to: 0
   948                           ;main_motor.c: 50:     motorR.direction=1;
   949   000EA2  0E01               	movlw	1
   950   000EA4  6FCB               	movwf	(main@motorR+1)& (0+255),b
   951   000EA6                     
   952                           ; BSR set to: 0
   953                           ;main_motor.c: 51:     motorR.brakemode=1;
   954   000EA6  0E01               	movlw	1
   955   000EA8  6FCC               	movwf	(main@motorR+2)& (0+255),b
   956   000EAA                     
   957                           ; BSR set to: 0
   958                           ;main_motor.c: 52:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
   959   000EAA  0E25               	movlw	37
   960   000EAC  6FCF               	movwf	(main@motorR+5)& (0+255),b
   961   000EAE  0E0F               	movlw	15
   962   000EB0  6FD0               	movwf	(main@motorR+6)& (0+255),b
   963   000EB2                     
   964                           ; BSR set to: 0
   965                           ;main_motor.c: 53:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
   966   000EB2  0E21               	movlw	33
   967   000EB4  6FD1               	movwf	(main@motorR+7)& (0+255),b
   968   000EB6  0E0F               	movlw	15
   969   000EB8  6FD2               	movwf	(main@motorR+8)& (0+255),b
   970   000EBA                     
   971                           ; BSR set to: 0
   972                           ;main_motor.c: 54:     motorR.PWMperiod= T2PR;
   973   000EBA  CFBC F0CD          	movff	4028,main@motorR+3	;volatile
   974   000EBE  6BCE               	clrf	(main@motorR+4)& (0+255),b
   975   000EC0                     
   976                           ; BSR set to: 0
   977                           ;main_motor.c: 58:     WhiteLight();
   978   000EC0  ECEB  F013         	call	_WhiteLight	;wreg free
   979   000EC4                     l4082:
   980                           
   981                           ;main_motor.c: 60:         Update_RGBC(&initial_color);
   982   000EC4  0EB9               	movlw	low main@initial_color
   983   000EC6  6E14               	movwf	Update_RGBC@tempval^0,c
   984   000EC8  0E00               	movlw	high main@initial_color
   985   000ECA  6E15               	movwf	(Update_RGBC@tempval+1)^0,c
   986   000ECC  EC78  F010         	call	_Update_RGBC	;wreg free
   987   000ED0                     
   988                           ;main_motor.c: 61:         color_detected = detect_color(&initial_color);
   989   000ED0  0EB9               	movlw	low main@initial_color
   990   000ED2  0100               	movlb	0	; () banked
   991   000ED4  6FA2               	movwf	detect_color@tempval& (0+255),b
   992   000ED6  0E00               	movlw	high main@initial_color
   993   000ED8  6FA3               	movwf	(detect_color@tempval+1)& (0+255),b
   994   000EDA  EC2E  F000         	call	_detect_color	;wreg free
   995   000EDE  0100               	movlb	0	; () banked
   996   000EE0  6FB8               	movwf	main@color_detected& (0+255),b
   997   000EE2                     
   998                           ; BSR set to: 0
   999                           ;main_motor.c: 63:         unsigned int b = 0;
  1000   000EE2  0E00               	movlw	0
  1001   000EE4  6FB7               	movwf	(main@b+1)& (0+255),b
  1002   000EE6  0E00               	movlw	0
  1003   000EE8  6FB6               	movwf	main@b& (0+255),b
  1004                           
  1005                           ;main_motor.c: 64:         while(color_detected == 0){
  1006   000EEA  EF92  F007         	goto	l4096
  1007   000EEE                     l4088:
  1008                           
  1009                           ; BSR set to: 0
  1010                           ;main_motor.c: 65:             fullSpeedAhead(&motorL,&motorR);
  1011   000EEE  0EC1               	movlw	low main@motorL
  1012   000EF0  6E1C               	movwf	fullSpeedAhead@mL^0,c
  1013   000EF2  0E00               	movlw	high main@motorL
  1014   000EF4  6E1D               	movwf	(fullSpeedAhead@mL+1)^0,c
  1015   000EF6  0ECA               	movlw	low main@motorR
  1016   000EF8  6E1E               	movwf	fullSpeedAhead@mR^0,c
  1017   000EFA  0E00               	movlw	high main@motorR
  1018   000EFC  6E1F               	movwf	(fullSpeedAhead@mR+1)^0,c
  1019   000EFE  EC50  F00B         	call	_fullSpeedAhead	;wreg free
  1020   000F02                     
  1021                           ;main_motor.c: 66:             Update_RGBC(&initial_color);
  1022   000F02  0EB9               	movlw	low main@initial_color
  1023   000F04  6E14               	movwf	Update_RGBC@tempval^0,c
  1024   000F06  0E00               	movlw	high main@initial_color
  1025   000F08  6E15               	movwf	(Update_RGBC@tempval+1)^0,c
  1026   000F0A  EC78  F010         	call	_Update_RGBC	;wreg free
  1027   000F0E                     
  1028                           ;main_motor.c: 67:             color_detected = detect_color(&initial_color);
  1029   000F0E  0EB9               	movlw	low main@initial_color
  1030   000F10  0100               	movlb	0	; () banked
  1031   000F12  6FA2               	movwf	detect_color@tempval& (0+255),b
  1032   000F14  0E00               	movlw	high main@initial_color
  1033   000F16  6FA3               	movwf	(detect_color@tempval+1)& (0+255),b
  1034   000F18  EC2E  F000         	call	_detect_color	;wreg free
  1035   000F1C  0100               	movlb	0	; () banked
  1036   000F1E  6FB8               	movwf	main@color_detected& (0+255),b
  1037   000F20                     
  1038                           ; BSR set to: 0
  1039                           ;main_motor.c: 68:             b++;
  1040   000F20  4BB6               	infsnz	main@b& (0+255),f,b
  1041   000F22  2BB7               	incf	(main@b+1)& (0+255),f,b
  1042   000F24                     l4096:
  1043                           
  1044                           ; BSR set to: 0
  1045                           ;main_motor.c: 64:         while(color_detected == 0){
  1046   000F24  51B8               	movf	main@color_detected& (0+255),w,b
  1047   000F26  B4D8               	btfsc	status,2,c
  1048   000F28  EF98  F007         	goto	u4251
  1049   000F2C  EF9A  F007         	goto	u4250
  1050   000F30                     u4251:
  1051   000F30  EF77  F007         	goto	l4088
  1052   000F34                     u4250:
  1053   000F34                     
  1054                           ; BSR set to: 0
  1055                           ;main_motor.c: 71:         if(color_detected != 0 && color_detected != 8){
  1056   000F34  51B8               	movf	main@color_detected& (0+255),w,b
  1057   000F36  B4D8               	btfsc	status,2,c
  1058   000F38  EFA0  F007         	goto	u4261
  1059   000F3C  EFA2  F007         	goto	u4260
  1060   000F40                     u4261:
  1061   000F40  EFF8  F007         	goto	l4120
  1062   000F44                     u4260:
  1063   000F44                     
  1064                           ; BSR set to: 0
  1065   000F44  0E08               	movlw	8
  1066   000F46  19B8               	xorwf	main@color_detected& (0+255),w,b
  1067   000F48  B4D8               	btfsc	status,2,c
  1068   000F4A  EFA9  F007         	goto	u4271
  1069   000F4E  EFAB  F007         	goto	u4270
  1070   000F52                     u4271:
  1071   000F52  EFF8  F007         	goto	l4120
  1072   000F56                     u4270:
  1073   000F56                     
  1074                           ; BSR set to: 0
  1075                           ;main_motor.c: 72:             AppendTime((b-9),&time_index,time_array);
  1076   000F56  0EF7               	movlw	247
  1077   000F58  25B6               	addwf	main@b& (0+255),w,b
  1078   000F5A  6E09               	movwf	AppendTime@temp^0,c
  1079   000F5C  0EFF               	movlw	255
  1080   000F5E  21B7               	addwfc	(main@b+1)& (0+255),w,b
  1081   000F60  6E0A               	movwf	(AppendTime@temp+1)^0,c
  1082   000F62  0E9D               	movlw	low _time_index
  1083   000F64  6E0B               	movwf	AppendTime@time_index^0,c
  1084   000F66  0E00               	movlw	high _time_index
  1085   000F68  6E0C               	movwf	(AppendTime@time_index+1)^0,c
  1086   000F6A  0E3C               	movlw	low _time_array
  1087   000F6C  6E0D               	movwf	AppendTime@time_array^0,c
  1088   000F6E  0E01               	movlw	high _time_array
  1089   000F70  6E0E               	movwf	(AppendTime@time_array+1)^0,c
  1090   000F72  ECC5  F012         	call	_AppendTime	;wreg free
  1091   000F76                     
  1092                           ;main_motor.c: 73:             LATHbits.LATH3 = 1;
  1093   000F76  8680               	bsf	128,3,c	;volatile
  1094                           
  1095                           ;main_motor.c: 75:             while(b>0){
  1096   000F78  EFCC  F007         	goto	l4110
  1097   000F7C                     l4106:
  1098                           
  1099                           ; BSR set to: 0
  1100                           ;main_motor.c: 76:                 stop(&motorL,&motorR);
  1101   000F7C  0EC1               	movlw	low main@motorL
  1102   000F7E  6E1C               	movwf	stop@mL^0,c
  1103   000F80  0E00               	movlw	high main@motorL
  1104   000F82  6E1D               	movwf	(stop@mL+1)^0,c
  1105   000F84  0ECA               	movlw	low main@motorR
  1106   000F86  6E1E               	movwf	stop@mR^0,c
  1107   000F88  0E00               	movlw	high main@motorR
  1108   000F8A  6E1F               	movwf	(stop@mR+1)^0,c
  1109   000F8C  ECA1  F00D         	call	_stop	;wreg free
  1110   000F90                     
  1111                           ;main_motor.c: 77:                 b--;
  1112   000F90  0100               	movlb	0	; () banked
  1113   000F92  07B6               	decf	main@b& (0+255),f,b
  1114   000F94  A0D8               	btfss	status,0,c
  1115   000F96  07B7               	decf	(main@b+1)& (0+255),f,b
  1116   000F98                     l4110:
  1117                           
  1118                           ;main_motor.c: 75:             while(b>0){
  1119   000F98  0100               	movlb	0	; () banked
  1120   000F9A  51B6               	movf	main@b& (0+255),w,b
  1121   000F9C  11B7               	iorwf	(main@b+1)& (0+255),w,b
  1122   000F9E  A4D8               	btfss	status,2,c
  1123   000FA0  EFD4  F007         	goto	u4281
  1124   000FA4  EFD6  F007         	goto	u4280
  1125   000FA8                     u4281:
  1126   000FA8  EFBE  F007         	goto	l4106
  1127   000FAC                     u4280:
  1128   000FAC                     
  1129                           ; BSR set to: 0
  1130                           ;main_motor.c: 79:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1131   000FAC  0E09               	movlw	9
  1132   000FAE  0100               	movlb	0	; () banked
  1133   000FB0  6FB5               	movwf	(??_main+1)& (0+255),b
  1134   000FB2  0E1E               	movlw	30
  1135   000FB4  6FB4               	movwf	??_main& (0+255),b
  1136   000FB6  0EE4               	movlw	228
  1137   000FB8                     u4317:
  1138   000FB8  2EE8               	decfsz	wreg,f,c
  1139   000FBA  D7FE               	bra	u4317
  1140   000FBC  2FB4               	decfsz	??_main& (0+255),f,b
  1141   000FBE  D7FC               	bra	u4317
  1142   000FC0  2FB5               	decfsz	(??_main+1)& (0+255),f,b
  1143   000FC2  D7FA               	bra	u4317
  1144   000FC4  F000               	nop	
  1145   000FC6                     
  1146                           ;main_motor.c: 80:             LATHbits.LATH3 = 0;
  1147   000FC6  9680               	bcf	128,3,c	;volatile
  1148   000FC8                     
  1149                           ;main_motor.c: 82:             MoveBuggy(color_detected,&motorL,&motorR);
  1150   000FC8  0100               	movlb	0	; () banked
  1151   000FCA  51B8               	movf	main@color_detected& (0+255),w,b
  1152   000FCC  6FB4               	movwf	??_main& (0+255),b
  1153   000FCE  6BB5               	clrf	(??_main+1)& (0+255),b
  1154   000FD0  C0B4  F02E         	movff	??_main,MoveBuggy@color_detected
  1155   000FD4  C0B5  F02F         	movff	??_main+1,MoveBuggy@color_detected+1
  1156   000FD8  0EC1               	movlw	low main@motorL
  1157   000FDA  6E30               	movwf	MoveBuggy@mL^0,c
  1158   000FDC  0E00               	movlw	high main@motorL
  1159   000FDE  6E31               	movwf	(MoveBuggy@mL+1)^0,c
  1160   000FE0  0ECA               	movlw	low main@motorR
  1161   000FE2  6E32               	movwf	MoveBuggy@mR^0,c
  1162   000FE4  0E00               	movlw	high main@motorR
  1163   000FE6  6E33               	movwf	(MoveBuggy@mR+1)^0,c
  1164   000FE8  EC48  F008         	call	_MoveBuggy	;wreg free
  1165   000FEC                     
  1166                           ;main_motor.c: 84:         }
  1167   000FEC  EF62  F007         	goto	l4082
  1168   000FF0                     l4120:
  1169                           
  1170                           ; BSR set to: 0
  1171   000FF0  0E08               	movlw	8
  1172   000FF2  19B8               	xorwf	main@color_detected& (0+255),w,b
  1173   000FF4  A4D8               	btfss	status,2,c
  1174   000FF6  EFFF  F007         	goto	u4291
  1175   000FFA  EF01  F008         	goto	u4290
  1176   000FFE                     u4291:
  1177   000FFE  EF62  F007         	goto	l4082
  1178   001002                     u4290:
  1179   001002                     
  1180                           ; BSR set to: 0
  1181                           ;main_motor.c: 88:             AppendTime((b-9),&time_index,time_array);
  1182   001002  0EF7               	movlw	247
  1183   001004  25B6               	addwf	main@b& (0+255),w,b
  1184   001006  6E09               	movwf	AppendTime@temp^0,c
  1185   001008  0EFF               	movlw	255
  1186   00100A  21B7               	addwfc	(main@b+1)& (0+255),w,b
  1187   00100C  6E0A               	movwf	(AppendTime@temp+1)^0,c
  1188   00100E  0E9D               	movlw	low _time_index
  1189   001010  6E0B               	movwf	AppendTime@time_index^0,c
  1190   001012  0E00               	movlw	high _time_index
  1191   001014  6E0C               	movwf	(AppendTime@time_index+1)^0,c
  1192   001016  0E3C               	movlw	low _time_array
  1193   001018  6E0D               	movwf	AppendTime@time_array^0,c
  1194   00101A  0E01               	movlw	high _time_array
  1195   00101C  6E0E               	movwf	(AppendTime@time_array+1)^0,c
  1196   00101E  ECC5  F012         	call	_AppendTime	;wreg free
  1197   001022                     
  1198                           ;main_motor.c: 89:             LATDbits.LATD7 = 1;
  1199   001022  8E7C               	bsf	124,7,c	;volatile
  1200                           
  1201                           ;main_motor.c: 91:             while(b>0){
  1202   001024  EF22  F008         	goto	l4130
  1203   001028                     l4126:
  1204                           
  1205                           ; BSR set to: 0
  1206                           ;main_motor.c: 92:                 stop(&motorL,&motorR);
  1207   001028  0EC1               	movlw	low main@motorL
  1208   00102A  6E1C               	movwf	stop@mL^0,c
  1209   00102C  0E00               	movlw	high main@motorL
  1210   00102E  6E1D               	movwf	(stop@mL+1)^0,c
  1211   001030  0ECA               	movlw	low main@motorR
  1212   001032  6E1E               	movwf	stop@mR^0,c
  1213   001034  0E00               	movlw	high main@motorR
  1214   001036  6E1F               	movwf	(stop@mR+1)^0,c
  1215   001038  ECA1  F00D         	call	_stop	;wreg free
  1216   00103C                     
  1217                           ;main_motor.c: 93:                 b--;
  1218   00103C  0100               	movlb	0	; () banked
  1219   00103E  07B6               	decf	main@b& (0+255),f,b
  1220   001040  A0D8               	btfss	status,0,c
  1221   001042  07B7               	decf	(main@b+1)& (0+255),f,b
  1222   001044                     l4130:
  1223                           
  1224                           ;main_motor.c: 91:             while(b>0){
  1225   001044  0100               	movlb	0	; () banked
  1226   001046  51B6               	movf	main@b& (0+255),w,b
  1227   001048  11B7               	iorwf	(main@b+1)& (0+255),w,b
  1228   00104A  A4D8               	btfss	status,2,c
  1229   00104C  EF2A  F008         	goto	u4301
  1230   001050  EF2C  F008         	goto	u4300
  1231   001054                     u4301:
  1232   001054  EF14  F008         	goto	l4126
  1233   001058                     u4300:
  1234   001058                     
  1235                           ; BSR set to: 0
  1236                           ;main_motor.c: 95:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1237   001058  0E09               	movlw	9
  1238   00105A  0100               	movlb	0	; () banked
  1239   00105C  6FB5               	movwf	(??_main+1)& (0+255),b
  1240   00105E  0E1E               	movlw	30
  1241   001060  6FB4               	movwf	??_main& (0+255),b
  1242   001062  0EE4               	movlw	228
  1243   001064                     u4327:
  1244   001064  2EE8               	decfsz	wreg,f,c
  1245   001066  D7FE               	bra	u4327
  1246   001068  2FB4               	decfsz	??_main& (0+255),f,b
  1247   00106A  D7FC               	bra	u4327
  1248   00106C  2FB5               	decfsz	(??_main+1)& (0+255),f,b
  1249   00106E  D7FA               	bra	u4327
  1250   001070  F000               	nop	
  1251   001072                     
  1252                           ;main_motor.c: 96:             WhiteInstructions(&motorL,&motorR);
  1253   001072  0EC1               	movlw	low main@motorL
  1254   001074  6E34               	movwf	WhiteInstructions@mL^0,c
  1255   001076  0E00               	movlw	high main@motorL
  1256   001078  6E35               	movwf	(WhiteInstructions@mL+1)^0,c
  1257   00107A  0ECA               	movlw	low main@motorR
  1258   00107C  6E36               	movwf	WhiteInstructions@mR^0,c
  1259   00107E  0E00               	movlw	high main@motorR
  1260   001080  6E37               	movwf	(WhiteInstructions@mR+1)^0,c
  1261   001082  EC2C  F00D         	call	_WhiteInstructions	;wreg free
  1262   001086                     
  1263                           ;main_motor.c: 97:             LATDbits.LATD7 = 0;
  1264   001086  9E7C               	bcf	124,7,c	;volatile
  1265   001088  EF62  F007         	goto	l4082
  1266   00108C  EF2C  F000         	goto	start
  1267   001090                     __end_of_main:
  1268                           	callstack 0
  1269                           
  1270 ;; *************** function _initDCmotorsPWM *****************
  1271 ;; Defined at:
  1272 ;;		line 5 in file "dc_motor.c"
  1273 ;; Parameters:    Size  Location     Type
  1274 ;;  PWMperiod       2    8[COMRAM] unsigned int 
  1275 ;; Auto vars:     Size  Location     Type
  1276 ;;		None
  1277 ;; Return value:  Size  Location     Type
  1278 ;;                  1    wreg      void 
  1279 ;; Registers used:
  1280 ;;		wreg, status,2
  1281 ;; Tracked objects:
  1282 ;;		On entry : 0/0
  1283 ;;		On exit  : 0/0
  1284 ;;		Unchanged: 0/0
  1285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1286 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1289 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1290 ;;Total ram usage:        2 bytes
  1291 ;; Hardware stack levels used: 1
  1292 ;; Hardware stack levels required when called: 7
  1293 ;; This function calls:
  1294 ;;		Nothing
  1295 ;; This function is called by:
  1296 ;;		_main
  1297 ;; This function uses a non-reentrant model
  1298 ;;
  1299                           
  1300                           	psect	text1
  1301   001CC8                     __ptext1:
  1302                           	callstack 0
  1303   001CC8                     _initDCmotorsPWM:
  1304                           	callstack 23
  1305   001CC8                     
  1306                           ;dc_motor.c: 7:     LATEbits.LATE2 = 0;
  1307   001CC8  947D               	bcf	125,2,c	;volatile
  1308                           
  1309                           ;dc_motor.c: 8:     TRISEbits.TRISE2 = 0;
  1310   001CCA  9485               	bcf	133,2,c	;volatile
  1311                           
  1312                           ;dc_motor.c: 9:     LATEbits.LATE4 = 0;
  1313   001CCC  987D               	bcf	125,4,c	;volatile
  1314                           
  1315                           ;dc_motor.c: 10:     TRISEbits.TRISE4 = 0;
  1316   001CCE  9885               	bcf	133,4,c	;volatile
  1317                           
  1318                           ;dc_motor.c: 11:     LATCbits.LATC7 = 0;
  1319   001CD0  9E7B               	bcf	123,7,c	;volatile
  1320                           
  1321                           ;dc_motor.c: 12:     TRISCbits.TRISC7 = 0;
  1322   001CD2  9E83               	bcf	131,7,c	;volatile
  1323                           
  1324                           ;dc_motor.c: 13:     LATGbits.LATG6 = 0;
  1325   001CD4  9C7F               	bcf	127,6,c	;volatile
  1326                           
  1327                           ;dc_motor.c: 14:     TRISGbits.TRISG6 = 0;
  1328   001CD6  9C87               	bcf	135,6,c	;volatile
  1329   001CD8                     
  1330                           ;dc_motor.c: 17:     RE2PPS=0x05;
  1331   001CD8  0E05               	movlw	5
  1332   001CDA  010E               	movlb	14	; () banked
  1333   001CDC  6F74               	movwf	116,b	;volatile
  1334                           
  1335                           ;dc_motor.c: 18:     RE4PPS=0x06;
  1336   001CDE  0E06               	movlw	6
  1337   001CE0  6F76               	movwf	118,b	;volatile
  1338                           
  1339                           ;dc_motor.c: 19:     RC7PPS=0x07;
  1340   001CE2  0E07               	movlw	7
  1341   001CE4  6F69               	movwf	105,b	;volatile
  1342                           
  1343                           ;dc_motor.c: 20:     RG6PPS=0x08;
  1344   001CE6  0E08               	movlw	8
  1345   001CE8  6F88               	movwf	136,b	;volatile
  1346                           
  1347                           ;dc_motor.c: 23:     T2CONbits.CKPS=0b100;
  1348   001CEA  50BD               	movf	189,w,c	;volatile
  1349   001CEC  0B8F               	andlw	-113
  1350   001CEE  0940               	iorlw	64
  1351   001CF0  6EBD               	movwf	189,c	;volatile
  1352                           
  1353                           ;dc_motor.c: 24:     T2HLTbits.MODE=0b00000;
  1354   001CF2  0EE0               	movlw	-32
  1355   001CF4  16BE               	andwf	190,f,c	;volatile
  1356                           
  1357                           ;dc_motor.c: 25:     T2CLKCONbits.CS=0b0001;
  1358   001CF6  50BF               	movf	191,w,c	;volatile
  1359   001CF8  0BF0               	andlw	-16
  1360   001CFA  0901               	iorlw	1
  1361   001CFC  6EBF               	movwf	191,c	;volatile
  1362   001CFE                     
  1363                           ; BSR set to: 14
  1364                           ;dc_motor.c: 29:     T2PR=PWMperiod;
  1365   001CFE  C009  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  1366   001D02                     
  1367                           ; BSR set to: 14
  1368                           ;dc_motor.c: 30:     T2CONbits.ON=1;
  1369   001D02  8EBD               	bsf	189,7,c	;volatile
  1370                           
  1371                           ;dc_motor.c: 34:     CCPR1H=0;
  1372   001D04  0E00               	movlw	0
  1373   001D06  6EAA               	movwf	170,c	;volatile
  1374                           
  1375                           ;dc_motor.c: 35:     CCPR2H=0;
  1376   001D08  0E00               	movlw	0
  1377   001D0A  6EA6               	movwf	166,c	;volatile
  1378                           
  1379                           ;dc_motor.c: 36:     CCPR3H=0;
  1380   001D0C  0E00               	movlw	0
  1381   001D0E  010F               	movlb	15	; () banked
  1382   001D10  6F25               	movwf	37,b	;volatile
  1383                           
  1384                           ;dc_motor.c: 37:     CCPR4H=0;
  1385   001D12  0E00               	movlw	0
  1386   001D14  6F21               	movwf	33,b	;volatile
  1387                           
  1388                           ;dc_motor.c: 40:     CCPTMRS0bits.C1TSEL=0;
  1389   001D16  0EFC               	movlw	-4
  1390   001D18  16AD               	andwf	173,f,c	;volatile
  1391                           
  1392                           ;dc_motor.c: 41:     CCPTMRS0bits.C2TSEL=0;
  1393   001D1A  0EF3               	movlw	-13
  1394   001D1C  16AD               	andwf	173,f,c	;volatile
  1395                           
  1396                           ;dc_motor.c: 42:     CCPTMRS0bits.C3TSEL=0;
  1397   001D1E  0ECF               	movlw	-49
  1398   001D20  16AD               	andwf	173,f,c	;volatile
  1399                           
  1400                           ;dc_motor.c: 43:     CCPTMRS0bits.C4TSEL=0;
  1401   001D22  0E3F               	movlw	-193
  1402   001D24  16AD               	andwf	173,f,c	;volatile
  1403   001D26                     
  1404                           ; BSR set to: 15
  1405                           ;dc_motor.c: 46:     CCP1CONbits.FMT=1;
  1406   001D26  88AB               	bsf	171,4,c	;volatile
  1407                           
  1408                           ;dc_motor.c: 47:     CCP1CONbits.CCP1MODE=0b1100;
  1409   001D28  50AB               	movf	171,w,c	;volatile
  1410   001D2A  0BF0               	andlw	-16
  1411   001D2C  090C               	iorlw	12
  1412   001D2E  6EAB               	movwf	171,c	;volatile
  1413   001D30                     
  1414                           ; BSR set to: 15
  1415                           ;dc_motor.c: 48:     CCP1CONbits.EN=1;
  1416   001D30  8EAB               	bsf	171,7,c	;volatile
  1417   001D32                     
  1418                           ; BSR set to: 15
  1419                           ;dc_motor.c: 50:     CCP2CONbits.FMT=1;
  1420   001D32  88A7               	bsf	167,4,c	;volatile
  1421                           
  1422                           ;dc_motor.c: 51:     CCP2CONbits.CCP2MODE=0b1100;
  1423   001D34  50A7               	movf	167,w,c	;volatile
  1424   001D36  0BF0               	andlw	-16
  1425   001D38  090C               	iorlw	12
  1426   001D3A  6EA7               	movwf	167,c	;volatile
  1427   001D3C                     
  1428                           ; BSR set to: 15
  1429                           ;dc_motor.c: 52:     CCP2CONbits.EN=1;
  1430   001D3C  8EA7               	bsf	167,7,c	;volatile
  1431   001D3E                     
  1432                           ; BSR set to: 15
  1433                           ;dc_motor.c: 54:     CCP3CONbits.FMT=1;
  1434   001D3E  8926               	bsf	38,4,b	;volatile
  1435                           
  1436                           ;dc_motor.c: 55:     CCP3CONbits.CCP3MODE=0b1100;
  1437   001D40  5126               	movf	38,w,b	;volatile
  1438   001D42  0BF0               	andlw	-16
  1439   001D44  090C               	iorlw	12
  1440   001D46  6F26               	movwf	38,b	;volatile
  1441   001D48                     
  1442                           ; BSR set to: 15
  1443                           ;dc_motor.c: 56:     CCP3CONbits.EN=1;
  1444   001D48  8F26               	bsf	38,7,b	;volatile
  1445   001D4A                     
  1446                           ; BSR set to: 15
  1447                           ;dc_motor.c: 58:     CCP4CONbits.FMT=1;
  1448   001D4A  8922               	bsf	34,4,b	;volatile
  1449                           
  1450                           ;dc_motor.c: 59:     CCP4CONbits.CCP4MODE=0b1100;
  1451   001D4C  5122               	movf	34,w,b	;volatile
  1452   001D4E  0BF0               	andlw	-16
  1453   001D50  090C               	iorlw	12
  1454   001D52  6F22               	movwf	34,b	;volatile
  1455   001D54                     
  1456                           ; BSR set to: 15
  1457                           ;dc_motor.c: 60:     CCP4CONbits.EN=1;
  1458   001D54  8F22               	bsf	34,7,b	;volatile
  1459   001D56                     
  1460                           ; BSR set to: 15
  1461   001D56  0012               	return		;funcret
  1462   001D58                     __end_of_initDCmotorsPWM:
  1463                           	callstack 0
  1464                           
  1465 ;; *************** function _detect_color *****************
  1466 ;; Defined at:
  1467 ;;		line 99 in file "color.c"
  1468 ;; Parameters:    Size  Location     Type
  1469 ;;  tempval         2    4[BANK0 ] PTR struct RGB_val
  1470 ;;		 -> main@initial_color(8), 
  1471 ;; Auto vars:     Size  Location     Type
  1472 ;;  dist_B          1   21[BANK0 ] unsigned char 
  1473 ;;  dist_G          1   20[BANK0 ] unsigned char 
  1474 ;;  dist_R          1   19[BANK0 ] unsigned char 
  1475 ;;  color           1   18[BANK0 ] unsigned char 
  1476 ;; Return value:  Size  Location     Type
  1477 ;;                  1    wreg      unsigned char 
  1478 ;; Registers used:
  1479 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1480 ;; Tracked objects:
  1481 ;;		On entry : 0/0
  1482 ;;		On exit  : 0/0
  1483 ;;		Unchanged: 0/0
  1484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1485 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1486 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1487 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1488 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1489 ;;Total ram usage:       18 bytes
  1490 ;; Hardware stack levels used: 1
  1491 ;; Hardware stack levels required when called: 8
  1492 ;; This function calls:
  1493 ;;		___fldiv
  1494 ;;		___flmul
  1495 ;;		___fltol
  1496 ;;		___xxtofl
  1497 ;; This function is called by:
  1498 ;;		_main
  1499 ;; This function uses a non-reentrant model
  1500 ;;
  1501                           
  1502                           	psect	text2
  1503   00005C                     __ptext2:
  1504                           	callstack 0
  1505   00005C                     _detect_color:
  1506                           	callstack 22
  1507   00005C                     
  1508                           ;color.c: 99: unsigned char detect_color(RGB_val *tempval);color.c: 100: {;color.c: 101:
      +                               unsigned char color = 0;
  1509   00005C  0E00               	movlw	0
  1510   00005E  0100               	movlb	0	; () banked
  1511   000060  6FB0               	movwf	detect_color@color& (0+255),b
  1512   000062                     
  1513                           ; BSR set to: 0
  1514                           ;color.c: 104:     unsigned char dist_R, dist_G, dist_B;;color.c: 105:     dist_R = ((fl
      +                          oat)(tempval->R)/(float)(tempval->R + tempval->G + tempval->B))*100;
  1515   000062  0E00               	movlw	0
  1516   000064  6E34               	movwf	___flmul@a^0,c
  1517   000066  0E00               	movlw	0
  1518   000068  6E35               	movwf	(___flmul@a+1)^0,c
  1519   00006A  0EC8               	movlw	200
  1520   00006C  6E36               	movwf	(___flmul@a+2)^0,c
  1521   00006E  0E42               	movlw	66
  1522   000070  6E37               	movwf	(___flmul@a+3)^0,c
  1523   000072  EE20 F004          	lfsr	2,4
  1524   000076  51A2               	movf	detect_color@tempval& (0+255),w,b
  1525   000078  26D9               	addwf	fsr2l,f,c
  1526   00007A  51A3               	movf	(detect_color@tempval+1)& (0+255),w,b
  1527   00007C  22DA               	addwfc	fsr2h,f,c
  1528   00007E  CFDE F0A4          	movff	postinc2,??_detect_color
  1529   000082  CFDD F0A5          	movff	postdec2,??_detect_color+1
  1530   000086  EE20 F002          	lfsr	2,2
  1531   00008A  51A2               	movf	detect_color@tempval& (0+255),w,b
  1532   00008C  26D9               	addwf	fsr2l,f,c
  1533   00008E  51A3               	movf	(detect_color@tempval+1)& (0+255),w,b
  1534   000090  22DA               	addwfc	fsr2h,f,c
  1535   000092  CFDE F0A6          	movff	postinc2,??_detect_color+2
  1536   000096  CFDD F0A7          	movff	postdec2,??_detect_color+3
  1537   00009A  C0A2  FFD9         	movff	detect_color@tempval,fsr2l
  1538   00009E  C0A3  FFDA         	movff	detect_color@tempval+1,fsr2h
  1539   0000A2  CFDE F0A8          	movff	postinc2,??_detect_color+4
  1540   0000A6  CFDD F0A9          	movff	postdec2,??_detect_color+5
  1541   0000AA  51A6               	movf	(??_detect_color+2)& (0+255),w,b
  1542   0000AC  25A8               	addwf	(??_detect_color+4)& (0+255),w,b
  1543   0000AE  6FAA               	movwf	(??_detect_color+6)& (0+255),b
  1544   0000B0  51A7               	movf	(??_detect_color+3)& (0+255),w,b
  1545   0000B2  21A9               	addwfc	(??_detect_color+5)& (0+255),w,b
  1546   0000B4  6FAB               	movwf	(??_detect_color+7)& (0+255),b
  1547   0000B6  51A4               	movf	??_detect_color& (0+255),w,b
  1548   0000B8  25AA               	addwf	(??_detect_color+6)& (0+255),w,b
  1549   0000BA  6FAC               	movwf	(??_detect_color+8)& (0+255),b
  1550   0000BC  51A5               	movf	(??_detect_color+1)& (0+255),w,b
  1551   0000BE  21AB               	addwfc	(??_detect_color+7)& (0+255),w,b
  1552   0000C0  6FAD               	movwf	(??_detect_color+9)& (0+255),b
  1553   0000C2  C0AC  F009         	movff	??_detect_color+8,___xxtofl@val
  1554   0000C6  C0AD  F00A         	movff	??_detect_color+9,___xxtofl@val+1
  1555   0000CA  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1556   0000CC  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1557   0000CE  0E00               	movlw	0
  1558   0000D0  EC3C  F009         	call	___xxtofl
  1559   0000D4  C009  F01B         	movff	?___xxtofl,___fldiv@a
  1560   0000D8  C00A  F01C         	movff	?___xxtofl+1,___fldiv@a+1
  1561   0000DC  C00B  F01D         	movff	?___xxtofl+2,___fldiv@a+2
  1562   0000E0  C00C  F01E         	movff	?___xxtofl+3,___fldiv@a+3
  1563   0000E4  C0A2  FFD9         	movff	detect_color@tempval,fsr2l
  1564   0000E8  C0A3  FFDA         	movff	detect_color@tempval+1,fsr2h
  1565   0000EC  CFDE F0AE          	movff	postinc2,??_detect_color+10
  1566   0000F0  CFDD F0AF          	movff	postdec2,??_detect_color+11
  1567   0000F4  C0AE  F009         	movff	??_detect_color+10,___xxtofl@val
  1568   0000F8  C0AF  F00A         	movff	??_detect_color+11,___xxtofl@val+1
  1569   0000FC  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1570   0000FE  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1571   000100  0E00               	movlw	0
  1572   000102  EC3C  F009         	call	___xxtofl
  1573   000106  C009  F017         	movff	?___xxtofl,___fldiv@b
  1574   00010A  C00A  F018         	movff	?___xxtofl+1,___fldiv@b+1
  1575   00010E  C00B  F019         	movff	?___xxtofl+2,___fldiv@b+2
  1576   000112  C00C  F01A         	movff	?___xxtofl+3,___fldiv@b+3
  1577   000116  EC51  F005         	call	___fldiv	;wreg free
  1578   00011A  C017  F030         	movff	?___fldiv,___flmul@b
  1579   00011E  C018  F031         	movff	?___fldiv+1,___flmul@b+1
  1580   000122  C019  F032         	movff	?___fldiv+2,___flmul@b+2
  1581   000126  C01A  F033         	movff	?___fldiv+3,___flmul@b+3
  1582   00012A  EC3C  F003         	call	___flmul	;wreg free
  1583   00012E  C030  F049         	movff	?___flmul,___fltol@f1
  1584   000132  C031  F04A         	movff	?___flmul+1,___fltol@f1+1
  1585   000136  C032  F04B         	movff	?___flmul+2,___fltol@f1+2
  1586   00013A  C033  F04C         	movff	?___flmul+3,___fltol@f1+3
  1587   00013E  ECCC  F00A         	call	___fltol	;wreg free
  1588   000142  5049               	movf	?___fltol^0,w,c
  1589   000144  0100               	movlb	0	; () banked
  1590   000146  6FB1               	movwf	detect_color@dist_R& (0+255),b
  1591   000148                     
  1592                           ; BSR set to: 0
  1593                           ;color.c: 106:     dist_G = ((float)(tempval->G)/(float)(tempval->R + tempval->G + tempv
      +                          al->B))*100;
  1594   000148  0E00               	movlw	0
  1595   00014A  6E34               	movwf	___flmul@a^0,c
  1596   00014C  0E00               	movlw	0
  1597   00014E  6E35               	movwf	(___flmul@a+1)^0,c
  1598   000150  0EC8               	movlw	200
  1599   000152  6E36               	movwf	(___flmul@a+2)^0,c
  1600   000154  0E42               	movlw	66
  1601   000156  6E37               	movwf	(___flmul@a+3)^0,c
  1602   000158  EE20 F004          	lfsr	2,4
  1603   00015C  51A2               	movf	detect_color@tempval& (0+255),w,b
  1604   00015E  26D9               	addwf	fsr2l,f,c
  1605   000160  51A3               	movf	(detect_color@tempval+1)& (0+255),w,b
  1606   000162  22DA               	addwfc	fsr2h,f,c
  1607   000164  CFDE F0A4          	movff	postinc2,??_detect_color
  1608   000168  CFDD F0A5          	movff	postdec2,??_detect_color+1
  1609   00016C  EE20 F002          	lfsr	2,2
  1610   000170  51A2               	movf	detect_color@tempval& (0+255),w,b
  1611   000172  26D9               	addwf	fsr2l,f,c
  1612   000174  51A3               	movf	(detect_color@tempval+1)& (0+255),w,b
  1613   000176  22DA               	addwfc	fsr2h,f,c
  1614   000178  CFDE F0A6          	movff	postinc2,??_detect_color+2
  1615   00017C  CFDD F0A7          	movff	postdec2,??_detect_color+3
  1616   000180  C0A2  FFD9         	movff	detect_color@tempval,fsr2l
  1617   000184  C0A3  FFDA         	movff	detect_color@tempval+1,fsr2h
  1618   000188  CFDE F0A8          	movff	postinc2,??_detect_color+4
  1619   00018C  CFDD F0A9          	movff	postdec2,??_detect_color+5
  1620   000190  51A6               	movf	(??_detect_color+2)& (0+255),w,b
  1621   000192  25A8               	addwf	(??_detect_color+4)& (0+255),w,b
  1622   000194  6FAA               	movwf	(??_detect_color+6)& (0+255),b
  1623   000196  51A7               	movf	(??_detect_color+3)& (0+255),w,b
  1624   000198  21A9               	addwfc	(??_detect_color+5)& (0+255),w,b
  1625   00019A  6FAB               	movwf	(??_detect_color+7)& (0+255),b
  1626   00019C  51A4               	movf	??_detect_color& (0+255),w,b
  1627   00019E  25AA               	addwf	(??_detect_color+6)& (0+255),w,b
  1628   0001A0  6FAC               	movwf	(??_detect_color+8)& (0+255),b
  1629   0001A2  51A5               	movf	(??_detect_color+1)& (0+255),w,b
  1630   0001A4  21AB               	addwfc	(??_detect_color+7)& (0+255),w,b
  1631   0001A6  6FAD               	movwf	(??_detect_color+9)& (0+255),b
  1632   0001A8  C0AC  F009         	movff	??_detect_color+8,___xxtofl@val
  1633   0001AC  C0AD  F00A         	movff	??_detect_color+9,___xxtofl@val+1
  1634   0001B0  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1635   0001B2  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1636   0001B4  0E00               	movlw	0
  1637   0001B6  EC3C  F009         	call	___xxtofl
  1638   0001BA  C009  F01B         	movff	?___xxtofl,___fldiv@a
  1639   0001BE  C00A  F01C         	movff	?___xxtofl+1,___fldiv@a+1
  1640   0001C2  C00B  F01D         	movff	?___xxtofl+2,___fldiv@a+2
  1641   0001C6  C00C  F01E         	movff	?___xxtofl+3,___fldiv@a+3
  1642   0001CA  0100               	movlb	0	; () banked
  1643   0001CC  EE20 F002          	lfsr	2,2
  1644   0001D0  51A2               	movf	detect_color@tempval& (0+255),w,b
  1645   0001D2  26D9               	addwf	fsr2l,f,c
  1646   0001D4  51A3               	movf	(detect_color@tempval+1)& (0+255),w,b
  1647   0001D6  22DA               	addwfc	fsr2h,f,c
  1648   0001D8  CFDE F0AE          	movff	postinc2,??_detect_color+10
  1649   0001DC  CFDD F0AF          	movff	postdec2,??_detect_color+11
  1650   0001E0  C0AE  F009         	movff	??_detect_color+10,___xxtofl@val
  1651   0001E4  C0AF  F00A         	movff	??_detect_color+11,___xxtofl@val+1
  1652   0001E8  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1653   0001EA  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1654   0001EC  0E00               	movlw	0
  1655   0001EE  EC3C  F009         	call	___xxtofl
  1656   0001F2  C009  F017         	movff	?___xxtofl,___fldiv@b
  1657   0001F6  C00A  F018         	movff	?___xxtofl+1,___fldiv@b+1
  1658   0001FA  C00B  F019         	movff	?___xxtofl+2,___fldiv@b+2
  1659   0001FE  C00C  F01A         	movff	?___xxtofl+3,___fldiv@b+3
  1660   000202  EC51  F005         	call	___fldiv	;wreg free
  1661   000206  C017  F030         	movff	?___fldiv,___flmul@b
  1662   00020A  C018  F031         	movff	?___fldiv+1,___flmul@b+1
  1663   00020E  C019  F032         	movff	?___fldiv+2,___flmul@b+2
  1664   000212  C01A  F033         	movff	?___fldiv+3,___flmul@b+3
  1665   000216  EC3C  F003         	call	___flmul	;wreg free
  1666   00021A  C030  F049         	movff	?___flmul,___fltol@f1
  1667   00021E  C031  F04A         	movff	?___flmul+1,___fltol@f1+1
  1668   000222  C032  F04B         	movff	?___flmul+2,___fltol@f1+2
  1669   000226  C033  F04C         	movff	?___flmul+3,___fltol@f1+3
  1670   00022A  ECCC  F00A         	call	___fltol	;wreg free
  1671   00022E  5049               	movf	?___fltol^0,w,c
  1672   000230  0100               	movlb	0	; () banked
  1673   000232  6FB2               	movwf	detect_color@dist_G& (0+255),b
  1674   000234                     
  1675                           ; BSR set to: 0
  1676                           ;color.c: 107:     dist_B = ((float)(tempval->B)/(float)(tempval->R + tempval->G + tempv
      +                          al->B))*100;
  1677   000234  0E00               	movlw	0
  1678   000236  6E34               	movwf	___flmul@a^0,c
  1679   000238  0E00               	movlw	0
  1680   00023A  6E35               	movwf	(___flmul@a+1)^0,c
  1681   00023C  0EC8               	movlw	200
  1682   00023E  6E36               	movwf	(___flmul@a+2)^0,c
  1683   000240  0E42               	movlw	66
  1684   000242  6E37               	movwf	(___flmul@a+3)^0,c
  1685   000244  EE20 F004          	lfsr	2,4
  1686   000248  51A2               	movf	detect_color@tempval& (0+255),w,b
  1687   00024A  26D9               	addwf	fsr2l,f,c
  1688   00024C  51A3               	movf	(detect_color@tempval+1)& (0+255),w,b
  1689   00024E  22DA               	addwfc	fsr2h,f,c
  1690   000250  CFDE F0A4          	movff	postinc2,??_detect_color
  1691   000254  CFDD F0A5          	movff	postdec2,??_detect_color+1
  1692   000258  EE20 F002          	lfsr	2,2
  1693   00025C  51A2               	movf	detect_color@tempval& (0+255),w,b
  1694   00025E  26D9               	addwf	fsr2l,f,c
  1695   000260  51A3               	movf	(detect_color@tempval+1)& (0+255),w,b
  1696   000262  22DA               	addwfc	fsr2h,f,c
  1697   000264  CFDE F0A6          	movff	postinc2,??_detect_color+2
  1698   000268  CFDD F0A7          	movff	postdec2,??_detect_color+3
  1699   00026C  C0A2  FFD9         	movff	detect_color@tempval,fsr2l
  1700   000270  C0A3  FFDA         	movff	detect_color@tempval+1,fsr2h
  1701   000274  CFDE F0A8          	movff	postinc2,??_detect_color+4
  1702   000278  CFDD F0A9          	movff	postdec2,??_detect_color+5
  1703   00027C  51A6               	movf	(??_detect_color+2)& (0+255),w,b
  1704   00027E  25A8               	addwf	(??_detect_color+4)& (0+255),w,b
  1705   000280  6FAA               	movwf	(??_detect_color+6)& (0+255),b
  1706   000282  51A7               	movf	(??_detect_color+3)& (0+255),w,b
  1707   000284  21A9               	addwfc	(??_detect_color+5)& (0+255),w,b
  1708   000286  6FAB               	movwf	(??_detect_color+7)& (0+255),b
  1709   000288  51A4               	movf	??_detect_color& (0+255),w,b
  1710   00028A  25AA               	addwf	(??_detect_color+6)& (0+255),w,b
  1711   00028C  6FAC               	movwf	(??_detect_color+8)& (0+255),b
  1712   00028E  51A5               	movf	(??_detect_color+1)& (0+255),w,b
  1713   000290  21AB               	addwfc	(??_detect_color+7)& (0+255),w,b
  1714   000292  6FAD               	movwf	(??_detect_color+9)& (0+255),b
  1715   000294  C0AC  F009         	movff	??_detect_color+8,___xxtofl@val
  1716   000298  C0AD  F00A         	movff	??_detect_color+9,___xxtofl@val+1
  1717   00029C  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1718   00029E  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1719   0002A0  0E00               	movlw	0
  1720   0002A2  EC3C  F009         	call	___xxtofl
  1721   0002A6  C009  F01B         	movff	?___xxtofl,___fldiv@a
  1722   0002AA  C00A  F01C         	movff	?___xxtofl+1,___fldiv@a+1
  1723   0002AE  C00B  F01D         	movff	?___xxtofl+2,___fldiv@a+2
  1724   0002B2  C00C  F01E         	movff	?___xxtofl+3,___fldiv@a+3
  1725   0002B6  0100               	movlb	0	; () banked
  1726   0002B8  EE20 F004          	lfsr	2,4
  1727   0002BC  51A2               	movf	detect_color@tempval& (0+255),w,b
  1728   0002BE  26D9               	addwf	fsr2l,f,c
  1729   0002C0  51A3               	movf	(detect_color@tempval+1)& (0+255),w,b
  1730   0002C2  22DA               	addwfc	fsr2h,f,c
  1731   0002C4  CFDE F0AE          	movff	postinc2,??_detect_color+10
  1732   0002C8  CFDD F0AF          	movff	postdec2,??_detect_color+11
  1733   0002CC  C0AE  F009         	movff	??_detect_color+10,___xxtofl@val
  1734   0002D0  C0AF  F00A         	movff	??_detect_color+11,___xxtofl@val+1
  1735   0002D4  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1736   0002D6  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1737   0002D8  0E00               	movlw	0
  1738   0002DA  EC3C  F009         	call	___xxtofl
  1739   0002DE  C009  F017         	movff	?___xxtofl,___fldiv@b
  1740   0002E2  C00A  F018         	movff	?___xxtofl+1,___fldiv@b+1
  1741   0002E6  C00B  F019         	movff	?___xxtofl+2,___fldiv@b+2
  1742   0002EA  C00C  F01A         	movff	?___xxtofl+3,___fldiv@b+3
  1743   0002EE  EC51  F005         	call	___fldiv	;wreg free
  1744   0002F2  C017  F030         	movff	?___fldiv,___flmul@b
  1745   0002F6  C018  F031         	movff	?___fldiv+1,___flmul@b+1
  1746   0002FA  C019  F032         	movff	?___fldiv+2,___flmul@b+2
  1747   0002FE  C01A  F033         	movff	?___fldiv+3,___flmul@b+3
  1748   000302  EC3C  F003         	call	___flmul	;wreg free
  1749   000306  C030  F049         	movff	?___flmul,___fltol@f1
  1750   00030A  C031  F04A         	movff	?___flmul+1,___fltol@f1+1
  1751   00030E  C032  F04B         	movff	?___flmul+2,___fltol@f1+2
  1752   000312  C033  F04C         	movff	?___flmul+3,___fltol@f1+3
  1753   000316  ECCC  F00A         	call	___fltol	;wreg free
  1754   00031A  5049               	movf	?___fltol^0,w,c
  1755   00031C  0100               	movlb	0	; () banked
  1756   00031E  6FB3               	movwf	detect_color@dist_B& (0+255),b
  1757   000320                     
  1758                           ; BSR set to: 0
  1759                           ;color.c: 109:     if(color_flag){
  1760   000320  5055               	movf	_color_flag^0,w,c
  1761   000322  B4D8               	btfsc	status,2,c
  1762   000324  EF96  F001         	goto	u3761
  1763   000328  EF98  F001         	goto	u3760
  1764   00032C                     u3761:
  1765   00032C  EF38  F003         	goto	l42
  1766   000330                     u3760:
  1767   000330                     
  1768                           ; BSR set to: 0
  1769                           ;color.c: 110:         if((74<=dist_R) && (dist_R<=76) && (10<=dist_G) && (dist_G<=12) &
      +                          & (13<=dist_B) && (dist_B<=15)){
  1770   000330  0E49               	movlw	73
  1771   000332  65B1               	cpfsgt	detect_color@dist_R& (0+255),b
  1772   000334  EF9E  F001         	goto	u3771
  1773   000338  EFA0  F001         	goto	u3770
  1774   00033C                     u3771:
  1775   00033C  EFCC  F001         	goto	l3946
  1776   000340                     u3770:
  1777   000340                     
  1778                           ; BSR set to: 0
  1779   000340  0E4D               	movlw	77
  1780   000342  61B1               	cpfslt	detect_color@dist_R& (0+255),b
  1781   000344  EFA6  F001         	goto	u3781
  1782   000348  EFA8  F001         	goto	u3780
  1783   00034C                     u3781:
  1784   00034C  EFCC  F001         	goto	l3946
  1785   000350                     u3780:
  1786   000350                     
  1787                           ; BSR set to: 0
  1788   000350  0E09               	movlw	9
  1789   000352  65B2               	cpfsgt	detect_color@dist_G& (0+255),b
  1790   000354  EFAE  F001         	goto	u3791
  1791   000358  EFB0  F001         	goto	u3790
  1792   00035C                     u3791:
  1793   00035C  EFCC  F001         	goto	l3946
  1794   000360                     u3790:
  1795   000360                     
  1796                           ; BSR set to: 0
  1797   000360  0E0D               	movlw	13
  1798   000362  61B2               	cpfslt	detect_color@dist_G& (0+255),b
  1799   000364  EFB6  F001         	goto	u3801
  1800   000368  EFB8  F001         	goto	u3800
  1801   00036C                     u3801:
  1802   00036C  EFCC  F001         	goto	l3946
  1803   000370                     u3800:
  1804   000370                     
  1805                           ; BSR set to: 0
  1806   000370  0E0C               	movlw	12
  1807   000372  65B3               	cpfsgt	detect_color@dist_B& (0+255),b
  1808   000374  EFBE  F001         	goto	u3811
  1809   000378  EFC0  F001         	goto	u3810
  1810   00037C                     u3811:
  1811   00037C  EFCC  F001         	goto	l3946
  1812   000380                     u3810:
  1813   000380                     
  1814                           ; BSR set to: 0
  1815   000380  0E10               	movlw	16
  1816   000382  61B3               	cpfslt	detect_color@dist_B& (0+255),b
  1817   000384  EFC6  F001         	goto	u3821
  1818   000388  EFC8  F001         	goto	u3820
  1819   00038C                     u3821:
  1820   00038C  EFCC  F001         	goto	l3946
  1821   000390                     u3820:
  1822   000390                     
  1823                           ; BSR set to: 0
  1824                           ;color.c: 111:             color = 1;
  1825   000390  0E01               	movlw	1
  1826   000392  6FB0               	movwf	detect_color@color& (0+255),b
  1827                           
  1828                           ;color.c: 112:         }
  1829   000394  EF38  F003         	goto	l42
  1830   000398                     l3946:
  1831                           
  1832                           ; BSR set to: 0
  1833   000398  0E23               	movlw	35
  1834   00039A  65B1               	cpfsgt	detect_color@dist_R& (0+255),b
  1835   00039C  EFD2  F001         	goto	u3831
  1836   0003A0  EFD4  F001         	goto	u3830
  1837   0003A4                     u3831:
  1838   0003A4  EF00  F002         	goto	l3960
  1839   0003A8                     u3830:
  1840   0003A8                     
  1841                           ; BSR set to: 0
  1842   0003A8  0E27               	movlw	39
  1843   0003AA  61B1               	cpfslt	detect_color@dist_R& (0+255),b
  1844   0003AC  EFDA  F001         	goto	u3841
  1845   0003B0  EFDC  F001         	goto	u3840
  1846   0003B4                     u3841:
  1847   0003B4  EF00  F002         	goto	l3960
  1848   0003B8                     u3840:
  1849   0003B8                     
  1850                           ; BSR set to: 0
  1851   0003B8  0E28               	movlw	40
  1852   0003BA  65B2               	cpfsgt	detect_color@dist_G& (0+255),b
  1853   0003BC  EFE2  F001         	goto	u3851
  1854   0003C0  EFE4  F001         	goto	u3850
  1855   0003C4                     u3851:
  1856   0003C4  EF00  F002         	goto	l3960
  1857   0003C8                     u3850:
  1858   0003C8                     
  1859                           ; BSR set to: 0
  1860   0003C8  0E2C               	movlw	44
  1861   0003CA  61B2               	cpfslt	detect_color@dist_G& (0+255),b
  1862   0003CC  EFEA  F001         	goto	u3861
  1863   0003D0  EFEC  F001         	goto	u3860
  1864   0003D4                     u3861:
  1865   0003D4  EF00  F002         	goto	l3960
  1866   0003D8                     u3860:
  1867   0003D8                     
  1868                           ; BSR set to: 0
  1869   0003D8  0E13               	movlw	19
  1870   0003DA  65B3               	cpfsgt	detect_color@dist_B& (0+255),b
  1871   0003DC  EFF2  F001         	goto	u3871
  1872   0003E0  EFF4  F001         	goto	u3870
  1873   0003E4                     u3871:
  1874   0003E4  EF00  F002         	goto	l3960
  1875   0003E8                     u3870:
  1876   0003E8                     
  1877                           ; BSR set to: 0
  1878   0003E8  0E17               	movlw	23
  1879   0003EA  61B3               	cpfslt	detect_color@dist_B& (0+255),b
  1880   0003EC  EFFA  F001         	goto	u3881
  1881   0003F0  EFFC  F001         	goto	u3880
  1882   0003F4                     u3881:
  1883   0003F4  EF00  F002         	goto	l3960
  1884   0003F8                     u3880:
  1885   0003F8                     
  1886                           ; BSR set to: 0
  1887                           ;color.c: 114:             color = 2;
  1888   0003F8  0E02               	movlw	2
  1889   0003FA  6FB0               	movwf	detect_color@color& (0+255),b
  1890                           
  1891                           ;color.c: 115:         }
  1892   0003FC  EF38  F003         	goto	l42
  1893   000400                     l3960:
  1894                           
  1895                           ; BSR set to: 0
  1896   000400  0E1C               	movlw	28
  1897   000402  65B1               	cpfsgt	detect_color@dist_R& (0+255),b
  1898   000404  EF06  F002         	goto	u3891
  1899   000408  EF08  F002         	goto	u3890
  1900   00040C                     u3891:
  1901   00040C  EF34  F002         	goto	l3974
  1902   000410                     u3890:
  1903   000410                     
  1904                           ; BSR set to: 0
  1905   000410  0E23               	movlw	35
  1906   000412  61B1               	cpfslt	detect_color@dist_R& (0+255),b
  1907   000414  EF0E  F002         	goto	u3901
  1908   000418  EF10  F002         	goto	u3900
  1909   00041C                     u3901:
  1910   00041C  EF34  F002         	goto	l3974
  1911   000420                     u3900:
  1912   000420                     
  1913                           ; BSR set to: 0
  1914   000420  0E1F               	movlw	31
  1915   000422  65B2               	cpfsgt	detect_color@dist_G& (0+255),b
  1916   000424  EF16  F002         	goto	u3911
  1917   000428  EF18  F002         	goto	u3910
  1918   00042C                     u3911:
  1919   00042C  EF34  F002         	goto	l3974
  1920   000430                     u3910:
  1921   000430                     
  1922                           ; BSR set to: 0
  1923   000430  0E27               	movlw	39
  1924   000432  61B2               	cpfslt	detect_color@dist_G& (0+255),b
  1925   000434  EF1E  F002         	goto	u3921
  1926   000438  EF20  F002         	goto	u3920
  1927   00043C                     u3921:
  1928   00043C  EF34  F002         	goto	l3974
  1929   000440                     u3920:
  1930   000440                     
  1931                           ; BSR set to: 0
  1932   000440  0E1E               	movlw	30
  1933   000442  65B3               	cpfsgt	detect_color@dist_B& (0+255),b
  1934   000444  EF26  F002         	goto	u3931
  1935   000448  EF28  F002         	goto	u3930
  1936   00044C                     u3931:
  1937   00044C  EF34  F002         	goto	l3974
  1938   000450                     u3930:
  1939   000450                     
  1940                           ; BSR set to: 0
  1941   000450  0E26               	movlw	38
  1942   000452  61B3               	cpfslt	detect_color@dist_B& (0+255),b
  1943   000454  EF2E  F002         	goto	u3941
  1944   000458  EF30  F002         	goto	u3940
  1945   00045C                     u3941:
  1946   00045C  EF34  F002         	goto	l3974
  1947   000460                     u3940:
  1948   000460                     
  1949                           ; BSR set to: 0
  1950                           ;color.c: 117:             color = 3;
  1951   000460  0E03               	movlw	3
  1952   000462  6FB0               	movwf	detect_color@color& (0+255),b
  1953                           
  1954                           ;color.c: 118:         }
  1955   000464  EF38  F003         	goto	l42
  1956   000468                     l3974:
  1957                           
  1958                           ; BSR set to: 0
  1959   000468  0E31               	movlw	49
  1960   00046A  65B1               	cpfsgt	detect_color@dist_R& (0+255),b
  1961   00046C  EF3A  F002         	goto	u3951
  1962   000470  EF3C  F002         	goto	u3950
  1963   000474                     u3951:
  1964   000474  EF68  F002         	goto	l3988
  1965   000478                     u3950:
  1966   000478                     
  1967                           ; BSR set to: 0
  1968   000478  0E35               	movlw	53
  1969   00047A  61B1               	cpfslt	detect_color@dist_R& (0+255),b
  1970   00047C  EF42  F002         	goto	u3961
  1971   000480  EF44  F002         	goto	u3960
  1972   000484                     u3961:
  1973   000484  EF68  F002         	goto	l3988
  1974   000488                     u3960:
  1975   000488                     
  1976                           ; BSR set to: 0
  1977   000488  0E1D               	movlw	29
  1978   00048A  65B2               	cpfsgt	detect_color@dist_G& (0+255),b
  1979   00048C  EF4A  F002         	goto	u3971
  1980   000490  EF4C  F002         	goto	u3970
  1981   000494                     u3971:
  1982   000494  EF68  F002         	goto	l3988
  1983   000498                     u3970:
  1984   000498                     
  1985                           ; BSR set to: 0
  1986   000498  0E21               	movlw	33
  1987   00049A  61B2               	cpfslt	detect_color@dist_G& (0+255),b
  1988   00049C  EF52  F002         	goto	u3981
  1989   0004A0  EF54  F002         	goto	u3980
  1990   0004A4                     u3981:
  1991   0004A4  EF68  F002         	goto	l3988
  1992   0004A8                     u3980:
  1993   0004A8                     
  1994                           ; BSR set to: 0
  1995   0004A8  0E10               	movlw	16
  1996   0004AA  65B3               	cpfsgt	detect_color@dist_B& (0+255),b
  1997   0004AC  EF5A  F002         	goto	u3991
  1998   0004B0  EF5C  F002         	goto	u3990
  1999   0004B4                     u3991:
  2000   0004B4  EF68  F002         	goto	l3988
  2001   0004B8                     u3990:
  2002   0004B8                     
  2003                           ; BSR set to: 0
  2004   0004B8  0E14               	movlw	20
  2005   0004BA  61B3               	cpfslt	detect_color@dist_B& (0+255),b
  2006   0004BC  EF62  F002         	goto	u4001
  2007   0004C0  EF64  F002         	goto	u4000
  2008   0004C4                     u4001:
  2009   0004C4  EF68  F002         	goto	l3988
  2010   0004C8                     u4000:
  2011   0004C8                     
  2012                           ; BSR set to: 0
  2013                           ;color.c: 120:             color = 4;
  2014   0004C8  0E04               	movlw	4
  2015   0004CA  6FB0               	movwf	detect_color@color& (0+255),b
  2016                           
  2017                           ;color.c: 121:         }
  2018   0004CC  EF38  F003         	goto	l42
  2019   0004D0                     l3988:
  2020                           
  2021                           ; BSR set to: 0
  2022   0004D0  0E2F               	movlw	47
  2023   0004D2  65B1               	cpfsgt	detect_color@dist_R& (0+255),b
  2024   0004D4  EF6E  F002         	goto	u4011
  2025   0004D8  EF70  F002         	goto	u4010
  2026   0004DC                     u4011:
  2027   0004DC  EF9C  F002         	goto	l4002
  2028   0004E0                     u4010:
  2029   0004E0                     
  2030                           ; BSR set to: 0
  2031   0004E0  0E33               	movlw	51
  2032   0004E2  61B1               	cpfslt	detect_color@dist_R& (0+255),b
  2033   0004E4  EF76  F002         	goto	u4021
  2034   0004E8  EF78  F002         	goto	u4020
  2035   0004EC                     u4021:
  2036   0004EC  EF9C  F002         	goto	l4002
  2037   0004F0                     u4020:
  2038   0004F0                     
  2039                           ; BSR set to: 0
  2040   0004F0  0E1B               	movlw	27
  2041   0004F2  65B2               	cpfsgt	detect_color@dist_G& (0+255),b
  2042   0004F4  EF7E  F002         	goto	u4031
  2043   0004F8  EF80  F002         	goto	u4030
  2044   0004FC                     u4031:
  2045   0004FC  EF9C  F002         	goto	l4002
  2046   000500                     u4030:
  2047   000500                     
  2048                           ; BSR set to: 0
  2049   000500  0E1F               	movlw	31
  2050   000502  61B2               	cpfslt	detect_color@dist_G& (0+255),b
  2051   000504  EF86  F002         	goto	u4041
  2052   000508  EF88  F002         	goto	u4040
  2053   00050C                     u4041:
  2054   00050C  EF9C  F002         	goto	l4002
  2055   000510                     u4040:
  2056   000510                     
  2057                           ; BSR set to: 0
  2058   000510  0E14               	movlw	20
  2059   000512  65B3               	cpfsgt	detect_color@dist_B& (0+255),b
  2060   000514  EF8E  F002         	goto	u4051
  2061   000518  EF90  F002         	goto	u4050
  2062   00051C                     u4051:
  2063   00051C  EF9C  F002         	goto	l4002
  2064   000520                     u4050:
  2065   000520                     
  2066                           ; BSR set to: 0
  2067   000520  0E18               	movlw	24
  2068   000522  61B3               	cpfslt	detect_color@dist_B& (0+255),b
  2069   000524  EF96  F002         	goto	u4061
  2070   000528  EF98  F002         	goto	u4060
  2071   00052C                     u4061:
  2072   00052C  EF9C  F002         	goto	l4002
  2073   000530                     u4060:
  2074   000530                     
  2075                           ; BSR set to: 0
  2076                           ;color.c: 123:             color = 5;
  2077   000530  0E05               	movlw	5
  2078   000532  6FB0               	movwf	detect_color@color& (0+255),b
  2079                           
  2080                           ;color.c: 124:         }
  2081   000534  EF38  F003         	goto	l42
  2082   000538                     l4002:
  2083                           
  2084                           ; BSR set to: 0
  2085   000538  0E3A               	movlw	58
  2086   00053A  65B1               	cpfsgt	detect_color@dist_R& (0+255),b
  2087   00053C  EFA2  F002         	goto	u4071
  2088   000540  EFA4  F002         	goto	u4070
  2089   000544                     u4071:
  2090   000544  EFD0  F002         	goto	l4016
  2091   000548                     u4070:
  2092   000548                     
  2093                           ; BSR set to: 0
  2094   000548  0E3E               	movlw	62
  2095   00054A  61B1               	cpfslt	detect_color@dist_R& (0+255),b
  2096   00054C  EFAA  F002         	goto	u4081
  2097   000550  EFAC  F002         	goto	u4080
  2098   000554                     u4081:
  2099   000554  EFD0  F002         	goto	l4016
  2100   000558                     u4080:
  2101   000558                     
  2102                           ; BSR set to: 0
  2103   000558  0E15               	movlw	21
  2104   00055A  65B2               	cpfsgt	detect_color@dist_G& (0+255),b
  2105   00055C  EFB2  F002         	goto	u4091
  2106   000560  EFB4  F002         	goto	u4090
  2107   000564                     u4091:
  2108   000564  EFD0  F002         	goto	l4016
  2109   000568                     u4090:
  2110   000568                     
  2111                           ; BSR set to: 0
  2112   000568  0E19               	movlw	25
  2113   00056A  61B2               	cpfslt	detect_color@dist_G& (0+255),b
  2114   00056C  EFBA  F002         	goto	u4101
  2115   000570  EFBC  F002         	goto	u4100
  2116   000574                     u4101:
  2117   000574  EFD0  F002         	goto	l4016
  2118   000578                     u4100:
  2119   000578                     
  2120                           ; BSR set to: 0
  2121   000578  0E0F               	movlw	15
  2122   00057A  65B3               	cpfsgt	detect_color@dist_B& (0+255),b
  2123   00057C  EFC2  F002         	goto	u4111
  2124   000580  EFC4  F002         	goto	u4110
  2125   000584                     u4111:
  2126   000584  EFD0  F002         	goto	l4016
  2127   000588                     u4110:
  2128   000588                     
  2129                           ; BSR set to: 0
  2130   000588  0E13               	movlw	19
  2131   00058A  61B3               	cpfslt	detect_color@dist_B& (0+255),b
  2132   00058C  EFCA  F002         	goto	u4121
  2133   000590  EFCC  F002         	goto	u4120
  2134   000594                     u4121:
  2135   000594  EFD0  F002         	goto	l4016
  2136   000598                     u4120:
  2137   000598                     
  2138                           ; BSR set to: 0
  2139                           ;color.c: 126:             color = 6;
  2140   000598  0E06               	movlw	6
  2141   00059A  6FB0               	movwf	detect_color@color& (0+255),b
  2142                           
  2143                           ;color.c: 127:         }
  2144   00059C  EF38  F003         	goto	l42
  2145   0005A0                     l4016:
  2146                           
  2147                           ; BSR set to: 0
  2148   0005A0  0E20               	movlw	32
  2149   0005A2  65B1               	cpfsgt	detect_color@dist_R& (0+255),b
  2150   0005A4  EFD6  F002         	goto	u4131
  2151   0005A8  EFD8  F002         	goto	u4130
  2152   0005AC                     u4131:
  2153   0005AC  EF04  F003         	goto	l4030
  2154   0005B0                     u4130:
  2155   0005B0                     
  2156                           ; BSR set to: 0
  2157   0005B0  0E24               	movlw	36
  2158   0005B2  61B1               	cpfslt	detect_color@dist_R& (0+255),b
  2159   0005B4  EFDE  F002         	goto	u4141
  2160   0005B8  EFE0  F002         	goto	u4140
  2161   0005BC                     u4141:
  2162   0005BC  EF04  F003         	goto	l4030
  2163   0005C0                     u4140:
  2164   0005C0                     
  2165                           ; BSR set to: 0
  2166   0005C0  0E25               	movlw	37
  2167   0005C2  65B2               	cpfsgt	detect_color@dist_G& (0+255),b
  2168   0005C4  EFE6  F002         	goto	u4151
  2169   0005C8  EFE8  F002         	goto	u4150
  2170   0005CC                     u4151:
  2171   0005CC  EF04  F003         	goto	l4030
  2172   0005D0                     u4150:
  2173   0005D0                     
  2174                           ; BSR set to: 0
  2175   0005D0  0E29               	movlw	41
  2176   0005D2  61B2               	cpfslt	detect_color@dist_G& (0+255),b
  2177   0005D4  EFEE  F002         	goto	u4161
  2178   0005D8  EFF0  F002         	goto	u4160
  2179   0005DC                     u4161:
  2180   0005DC  EF04  F003         	goto	l4030
  2181   0005E0                     u4160:
  2182   0005E0                     
  2183                           ; BSR set to: 0
  2184   0005E0  0E19               	movlw	25
  2185   0005E2  65B3               	cpfsgt	detect_color@dist_B& (0+255),b
  2186   0005E4  EFF6  F002         	goto	u4171
  2187   0005E8  EFF8  F002         	goto	u4170
  2188   0005EC                     u4171:
  2189   0005EC  EF04  F003         	goto	l4030
  2190   0005F0                     u4170:
  2191   0005F0                     
  2192                           ; BSR set to: 0
  2193   0005F0  0E1D               	movlw	29
  2194   0005F2  61B3               	cpfslt	detect_color@dist_B& (0+255),b
  2195   0005F4  EFFE  F002         	goto	u4181
  2196   0005F8  EF00  F003         	goto	u4180
  2197   0005FC                     u4181:
  2198   0005FC  EF04  F003         	goto	l4030
  2199   000600                     u4180:
  2200   000600                     
  2201                           ; BSR set to: 0
  2202                           ;color.c: 129:             color = 7;
  2203   000600  0E07               	movlw	7
  2204   000602  6FB0               	movwf	detect_color@color& (0+255),b
  2205                           
  2206                           ;color.c: 130:         }
  2207   000604  EF38  F003         	goto	l42
  2208   000608                     l4030:
  2209                           
  2210                           ; BSR set to: 0
  2211   000608  0E2A               	movlw	42
  2212   00060A  65B1               	cpfsgt	detect_color@dist_R& (0+255),b
  2213   00060C  EF0A  F003         	goto	u4191
  2214   000610  EF0C  F003         	goto	u4190
  2215   000614                     u4191:
  2216   000614  EF38  F003         	goto	l56
  2217   000618                     u4190:
  2218   000618                     
  2219                           ; BSR set to: 0
  2220   000618  0E2E               	movlw	46
  2221   00061A  61B1               	cpfslt	detect_color@dist_R& (0+255),b
  2222   00061C  EF12  F003         	goto	u4201
  2223   000620  EF14  F003         	goto	u4200
  2224   000624                     u4201:
  2225   000624  EF38  F003         	goto	l56
  2226   000628                     u4200:
  2227   000628                     
  2228                           ; BSR set to: 0
  2229   000628  0E1F               	movlw	31
  2230   00062A  65B2               	cpfsgt	detect_color@dist_G& (0+255),b
  2231   00062C  EF1A  F003         	goto	u4211
  2232   000630  EF1C  F003         	goto	u4210
  2233   000634                     u4211:
  2234   000634  EF38  F003         	goto	l56
  2235   000638                     u4210:
  2236   000638                     
  2237                           ; BSR set to: 0
  2238   000638  0E23               	movlw	35
  2239   00063A  61B2               	cpfslt	detect_color@dist_G& (0+255),b
  2240   00063C  EF22  F003         	goto	u4221
  2241   000640  EF24  F003         	goto	u4220
  2242   000644                     u4221:
  2243   000644  EF38  F003         	goto	l56
  2244   000648                     u4220:
  2245   000648                     
  2246                           ; BSR set to: 0
  2247   000648  0E15               	movlw	21
  2248   00064A  65B3               	cpfsgt	detect_color@dist_B& (0+255),b
  2249   00064C  EF2A  F003         	goto	u4231
  2250   000650  EF2C  F003         	goto	u4230
  2251   000654                     u4231:
  2252   000654  EF38  F003         	goto	l56
  2253   000658                     u4230:
  2254   000658                     
  2255                           ; BSR set to: 0
  2256   000658  0E19               	movlw	25
  2257   00065A  61B3               	cpfslt	detect_color@dist_B& (0+255),b
  2258   00065C  EF32  F003         	goto	u4241
  2259   000660  EF34  F003         	goto	u4240
  2260   000664                     u4241:
  2261   000664  EF38  F003         	goto	l56
  2262   000668                     u4240:
  2263   000668                     
  2264                           ; BSR set to: 0
  2265                           ;color.c: 132:             color = 8;
  2266   000668  0E08               	movlw	8
  2267   00066A  6FB0               	movwf	detect_color@color& (0+255),b
  2268                           
  2269                           ;color.c: 133:         }
  2270   00066C  EF38  F003         	goto	l42
  2271   000670                     l56:
  2272   000670                     l42:
  2273                           
  2274                           ; BSR set to: 0
  2275                           ;color.c: 138:     color_flag = 0;
  2276   000670  0E00               	movlw	0
  2277   000672  6E55               	movwf	_color_flag^0,c
  2278                           
  2279                           ;color.c: 139:     return color;
  2280   000674  51B0               	movf	detect_color@color& (0+255),w,b
  2281   000676                     
  2282                           ; BSR set to: 0
  2283   000676  0012               	return		;funcret
  2284   000678                     __end_of_detect_color:
  2285                           	callstack 0
  2286                           
  2287 ;; *************** function ___xxtofl *****************
  2288 ;; Defined at:
  2289 ;;		line 10 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\xxtofl.c"
  2290 ;; Parameters:    Size  Location     Type
  2291 ;;  sign            1    wreg     unsigned char 
  2292 ;;  val             4    8[COMRAM] long 
  2293 ;; Auto vars:     Size  Location     Type
  2294 ;;  sign            1   16[COMRAM] unsigned char 
  2295 ;;  arg             4   18[COMRAM] unsigned long 
  2296 ;;  exp             1   17[COMRAM] unsigned char 
  2297 ;; Return value:  Size  Location     Type
  2298 ;;                  4    8[COMRAM] unsigned char 
  2299 ;; Registers used:
  2300 ;;		wreg, status,2, status,0
  2301 ;; Tracked objects:
  2302 ;;		On entry : 0/0
  2303 ;;		On exit  : 0/0
  2304 ;;		Unchanged: 0/0
  2305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2306 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2307 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2308 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2309 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2310 ;;Total ram usage:       14 bytes
  2311 ;; Hardware stack levels used: 1
  2312 ;; Hardware stack levels required when called: 7
  2313 ;; This function calls:
  2314 ;;		Nothing
  2315 ;; This function is called by:
  2316 ;;		_detect_color
  2317 ;; This function uses a non-reentrant model
  2318 ;;
  2319                           
  2320                           	psect	text3
  2321   001278                     __ptext3:
  2322                           	callstack 0
  2323   001278                     ___xxtofl:
  2324                           	callstack 22
  2325                           
  2326                           ; BSR set to: 0
  2327                           ;incstack = 0
  2328                           ;___xxtofl@sign stored from wreg
  2329   001278  6E11               	movwf	___xxtofl@sign^0,c
  2330   00127A  5011               	movf	___xxtofl@sign^0,w,c
  2331   00127C  B4D8               	btfsc	status,2,c
  2332   00127E  EF43  F009         	goto	u2921
  2333   001282  EF45  F009         	goto	u2920
  2334   001286                     u2921:
  2335   001286  EF67  F009         	goto	l1322
  2336   00128A                     u2920:
  2337   00128A  BE0C               	btfsc	(___xxtofl@val+3)^0,7,c
  2338   00128C  EF4C  F009         	goto	u2930
  2339   001290  EF4A  F009         	goto	u2931
  2340   001294                     u2931:
  2341   001294  EF67  F009         	goto	l1322
  2342   001298                     u2930:
  2343   001298  C009  F00D         	movff	___xxtofl@val,??___xxtofl
  2344   00129C  C00A  F00E         	movff	___xxtofl@val+1,??___xxtofl+1
  2345   0012A0  C00B  F00F         	movff	___xxtofl@val+2,??___xxtofl+2
  2346   0012A4  C00C  F010         	movff	___xxtofl@val+3,??___xxtofl+3
  2347   0012A8  1E0D               	comf	??___xxtofl^0,f,c
  2348   0012AA  1E0E               	comf	(??___xxtofl+1)^0,f,c
  2349   0012AC  1E0F               	comf	(??___xxtofl+2)^0,f,c
  2350   0012AE  1E10               	comf	(??___xxtofl+3)^0,f,c
  2351   0012B0  2A0D               	incf	??___xxtofl^0,f,c
  2352   0012B2  0E00               	movlw	0
  2353   0012B4  220E               	addwfc	(??___xxtofl+1)^0,f,c
  2354   0012B6  220F               	addwfc	(??___xxtofl+2)^0,f,c
  2355   0012B8  2210               	addwfc	(??___xxtofl+3)^0,f,c
  2356   0012BA  C00D  F013         	movff	??___xxtofl,___xxtofl@arg
  2357   0012BE  C00E  F014         	movff	??___xxtofl+1,___xxtofl@arg+1
  2358   0012C2  C00F  F015         	movff	??___xxtofl+2,___xxtofl@arg+2
  2359   0012C6  C010  F016         	movff	??___xxtofl+3,___xxtofl@arg+3
  2360   0012CA  EF6F  F009         	goto	l3436
  2361   0012CE                     l1322:
  2362   0012CE  C009  F013         	movff	___xxtofl@val,___xxtofl@arg
  2363   0012D2  C00A  F014         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2364   0012D6  C00B  F015         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2365   0012DA  C00C  F016         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2366   0012DE                     l3436:
  2367   0012DE  5009               	movf	___xxtofl@val^0,w,c
  2368   0012E0  100A               	iorwf	(___xxtofl@val+1)^0,w,c
  2369   0012E2  100B               	iorwf	(___xxtofl@val+2)^0,w,c
  2370   0012E4  100C               	iorwf	(___xxtofl@val+3)^0,w,c
  2371   0012E6  A4D8               	btfss	status,2,c
  2372   0012E8  EF78  F009         	goto	u2941
  2373   0012EC  EF7A  F009         	goto	u2940
  2374   0012F0                     u2941:
  2375   0012F0  EF84  F009         	goto	l3442
  2376   0012F4                     u2940:
  2377   0012F4  0E00               	movlw	0
  2378   0012F6  6E09               	movwf	?___xxtofl^0,c
  2379   0012F8  0E00               	movlw	0
  2380   0012FA  6E0A               	movwf	(?___xxtofl+1)^0,c
  2381   0012FC  0E00               	movlw	0
  2382   0012FE  6E0B               	movwf	(?___xxtofl+2)^0,c
  2383   001300  0E00               	movlw	0
  2384   001302  6E0C               	movwf	(?___xxtofl+3)^0,c
  2385   001304  EF15  F00A         	goto	l1325
  2386   001308                     l3442:
  2387   001308  0E96               	movlw	150
  2388   00130A  6E12               	movwf	___xxtofl@exp^0,c
  2389   00130C  EF8E  F009         	goto	l3446
  2390   001310                     l3444:
  2391   001310  2A12               	incf	___xxtofl@exp^0,f,c
  2392   001312  90D8               	bcf	status,0,c
  2393   001314  3216               	rrcf	(___xxtofl@arg+3)^0,f,c
  2394   001316  3215               	rrcf	(___xxtofl@arg+2)^0,f,c
  2395   001318  3214               	rrcf	(___xxtofl@arg+1)^0,f,c
  2396   00131A  3213               	rrcf	___xxtofl@arg^0,f,c
  2397   00131C                     l3446:
  2398   00131C  0E00               	movlw	0
  2399   00131E  1413               	andwf	___xxtofl@arg^0,w,c
  2400   001320  6E0D               	movwf	??___xxtofl^0,c
  2401   001322  0E00               	movlw	0
  2402   001324  1414               	andwf	(___xxtofl@arg+1)^0,w,c
  2403   001326  6E0E               	movwf	(??___xxtofl+1)^0,c
  2404   001328  0E00               	movlw	0
  2405   00132A  1415               	andwf	(___xxtofl@arg+2)^0,w,c
  2406   00132C  6E0F               	movwf	(??___xxtofl+2)^0,c
  2407   00132E  0EFE               	movlw	254
  2408   001330  1416               	andwf	(___xxtofl@arg+3)^0,w,c
  2409   001332  6E10               	movwf	(??___xxtofl+3)^0,c
  2410   001334  500D               	movf	??___xxtofl^0,w,c
  2411   001336  100E               	iorwf	(??___xxtofl+1)^0,w,c
  2412   001338  100F               	iorwf	(??___xxtofl+2)^0,w,c
  2413   00133A  1010               	iorwf	(??___xxtofl+3)^0,w,c
  2414   00133C  A4D8               	btfss	status,2,c
  2415   00133E  EFA3  F009         	goto	u2951
  2416   001342  EFA5  F009         	goto	u2950
  2417   001346                     u2951:
  2418   001346  EF88  F009         	goto	l3444
  2419   00134A                     u2950:
  2420   00134A  EFB3  F009         	goto	l1329
  2421   00134E                     l3448:
  2422   00134E  2A12               	incf	___xxtofl@exp^0,f,c
  2423   001350  0E01               	movlw	1
  2424   001352  2613               	addwf	___xxtofl@arg^0,f,c
  2425   001354  0E00               	movlw	0
  2426   001356  2214               	addwfc	(___xxtofl@arg+1)^0,f,c
  2427   001358  2215               	addwfc	(___xxtofl@arg+2)^0,f,c
  2428   00135A  2216               	addwfc	(___xxtofl@arg+3)^0,f,c
  2429   00135C  90D8               	bcf	status,0,c
  2430   00135E  3216               	rrcf	(___xxtofl@arg+3)^0,f,c
  2431   001360  3215               	rrcf	(___xxtofl@arg+2)^0,f,c
  2432   001362  3214               	rrcf	(___xxtofl@arg+1)^0,f,c
  2433   001364  3213               	rrcf	___xxtofl@arg^0,f,c
  2434   001366                     l1329:
  2435   001366  0E00               	movlw	0
  2436   001368  1413               	andwf	___xxtofl@arg^0,w,c
  2437   00136A  6E0D               	movwf	??___xxtofl^0,c
  2438   00136C  0E00               	movlw	0
  2439   00136E  1414               	andwf	(___xxtofl@arg+1)^0,w,c
  2440   001370  6E0E               	movwf	(??___xxtofl+1)^0,c
  2441   001372  0E00               	movlw	0
  2442   001374  1415               	andwf	(___xxtofl@arg+2)^0,w,c
  2443   001376  6E0F               	movwf	(??___xxtofl+2)^0,c
  2444   001378  0EFF               	movlw	255
  2445   00137A  1416               	andwf	(___xxtofl@arg+3)^0,w,c
  2446   00137C  6E10               	movwf	(??___xxtofl+3)^0,c
  2447   00137E  500D               	movf	??___xxtofl^0,w,c
  2448   001380  100E               	iorwf	(??___xxtofl+1)^0,w,c
  2449   001382  100F               	iorwf	(??___xxtofl+2)^0,w,c
  2450   001384  1010               	iorwf	(??___xxtofl+3)^0,w,c
  2451   001386  A4D8               	btfss	status,2,c
  2452   001388  EFC8  F009         	goto	u2961
  2453   00138C  EFCA  F009         	goto	u2960
  2454   001390                     u2961:
  2455   001390  EFA7  F009         	goto	l3448
  2456   001394                     u2960:
  2457   001394  EFD2  F009         	goto	l3456
  2458   001398                     l3454:
  2459   001398  0612               	decf	___xxtofl@exp^0,f,c
  2460   00139A  90D8               	bcf	status,0,c
  2461   00139C  3613               	rlcf	___xxtofl@arg^0,f,c
  2462   00139E  3614               	rlcf	(___xxtofl@arg+1)^0,f,c
  2463   0013A0  3615               	rlcf	(___xxtofl@arg+2)^0,f,c
  2464   0013A2  3616               	rlcf	(___xxtofl@arg+3)^0,f,c
  2465   0013A4                     l3456:
  2466   0013A4  BE15               	btfsc	(___xxtofl@arg+2)^0,7,c
  2467   0013A6  EFD7  F009         	goto	u2971
  2468   0013AA  EFD9  F009         	goto	u2970
  2469   0013AE                     u2971:
  2470   0013AE  EFE1  F009         	goto	l1336
  2471   0013B2                     u2970:
  2472   0013B2  0E02               	movlw	2
  2473   0013B4  6012               	cpfslt	___xxtofl@exp^0,c
  2474   0013B6  EFDF  F009         	goto	u2981
  2475   0013BA  EFE1  F009         	goto	u2980
  2476   0013BE                     u2981:
  2477   0013BE  EFCC  F009         	goto	l3454
  2478   0013C2                     u2980:
  2479   0013C2                     l1336:
  2480   0013C2  B012               	btfsc	___xxtofl@exp^0,0,c
  2481   0013C4  EFE6  F009         	goto	u2991
  2482   0013C8  EFE8  F009         	goto	u2990
  2483   0013CC                     u2991:
  2484   0013CC  EFE9  F009         	goto	l3462
  2485   0013D0                     u2990:
  2486   0013D0  9E15               	bcf	(___xxtofl@arg+2)^0,7,c
  2487   0013D2                     l3462:
  2488   0013D2  90D8               	bcf	status,0,c
  2489   0013D4  3212               	rrcf	___xxtofl@exp^0,f,c
  2490   0013D6  C012  F00D         	movff	___xxtofl@exp,??___xxtofl
  2491   0013DA  6A0E               	clrf	(??___xxtofl+1)^0,c
  2492   0013DC  6A0F               	clrf	(??___xxtofl+2)^0,c
  2493   0013DE  6A10               	clrf	(??___xxtofl+3)^0,c
  2494   0013E0  C00D  F010         	movff	??___xxtofl,??___xxtofl+3
  2495   0013E4  6A0F               	clrf	(??___xxtofl+2)^0,c
  2496   0013E6  6A0E               	clrf	(??___xxtofl+1)^0,c
  2497   0013E8  6A0D               	clrf	??___xxtofl^0,c
  2498   0013EA  500D               	movf	??___xxtofl^0,w,c
  2499   0013EC  1213               	iorwf	___xxtofl@arg^0,f,c
  2500   0013EE  500E               	movf	(??___xxtofl+1)^0,w,c
  2501   0013F0  1214               	iorwf	(___xxtofl@arg+1)^0,f,c
  2502   0013F2  500F               	movf	(??___xxtofl+2)^0,w,c
  2503   0013F4  1215               	iorwf	(___xxtofl@arg+2)^0,f,c
  2504   0013F6  5010               	movf	(??___xxtofl+3)^0,w,c
  2505   0013F8  1216               	iorwf	(___xxtofl@arg+3)^0,f,c
  2506   0013FA  5011               	movf	___xxtofl@sign^0,w,c
  2507   0013FC  B4D8               	btfsc	status,2,c
  2508   0013FE  EF03  F00A         	goto	u3001
  2509   001402  EF05  F00A         	goto	u3000
  2510   001406                     u3001:
  2511   001406  EF0D  F00A         	goto	l3472
  2512   00140A                     u3000:
  2513   00140A  BE0C               	btfsc	(___xxtofl@val+3)^0,7,c
  2514   00140C  EF0C  F00A         	goto	u3010
  2515   001410  EF0A  F00A         	goto	u3011
  2516   001414                     u3011:
  2517   001414  EF0D  F00A         	goto	l3472
  2518   001418                     u3010:
  2519   001418  8E16               	bsf	(___xxtofl@arg+3)^0,7,c
  2520   00141A                     l3472:
  2521   00141A  C013  F009         	movff	___xxtofl@arg,?___xxtofl
  2522   00141E  C014  F00A         	movff	___xxtofl@arg+1,?___xxtofl+1
  2523   001422  C015  F00B         	movff	___xxtofl@arg+2,?___xxtofl+2
  2524   001426  C016  F00C         	movff	___xxtofl@arg+3,?___xxtofl+3
  2525   00142A                     l1325:
  2526   00142A  0012               	return		;funcret
  2527   00142C                     __end_of___xxtofl:
  2528                           	callstack 0
  2529                           
  2530 ;; *************** function ___fltol *****************
  2531 ;; Defined at:
  2532 ;;		line 43 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\fltol.c"
  2533 ;; Parameters:    Size  Location     Type
  2534 ;;  f1              4   72[COMRAM] unsigned char 
  2535 ;; Auto vars:     Size  Location     Type
  2536 ;;  exp1            1   77[COMRAM] unsigned char 
  2537 ;;  sign1           1   76[COMRAM] unsigned char 
  2538 ;; Return value:  Size  Location     Type
  2539 ;;                  4   72[COMRAM] long 
  2540 ;; Registers used:
  2541 ;;		wreg, status,2, status,0
  2542 ;; Tracked objects:
  2543 ;;		On entry : 0/0
  2544 ;;		On exit  : 0/0
  2545 ;;		Unchanged: 0/0
  2546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2547 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2548 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2549 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2550 ;;      Totals:         6       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2551 ;;Total ram usage:       10 bytes
  2552 ;; Hardware stack levels used: 1
  2553 ;; Hardware stack levels required when called: 7
  2554 ;; This function calls:
  2555 ;;		Nothing
  2556 ;; This function is called by:
  2557 ;;		_detect_color
  2558 ;; This function uses a non-reentrant model
  2559 ;;
  2560                           
  2561                           	psect	text4
  2562   001598                     __ptext4:
  2563                           	callstack 0
  2564   001598                     ___fltol:
  2565                           	callstack 22
  2566   001598  344B               	rlcf	(___fltol@f1+2)^0,w,c
  2567   00159A  344C               	rlcf	(___fltol@f1+3)^0,w,c
  2568   00159C  6E4E               	movwf	___fltol@exp1^0,c
  2569   00159E  504E               	movf	___fltol@exp1^0,w,c
  2570   0015A0  A4D8               	btfss	status,2,c
  2571   0015A2  EFD5  F00A         	goto	u3691
  2572   0015A6  EFD7  F00A         	goto	u3690
  2573   0015AA                     u3691:
  2574   0015AA  EFE1  F00A         	goto	l3884
  2575   0015AE                     u3690:
  2576   0015AE                     l3880:
  2577   0015AE  0E00               	movlw	0
  2578   0015B0  6E49               	movwf	?___fltol^0,c
  2579   0015B2  0E00               	movlw	0
  2580   0015B4  6E4A               	movwf	(?___fltol+1)^0,c
  2581   0015B6  0E00               	movlw	0
  2582   0015B8  6E4B               	movwf	(?___fltol+2)^0,c
  2583   0015BA  0E00               	movlw	0
  2584   0015BC  6E4C               	movwf	(?___fltol+3)^0,c
  2585   0015BE  EF4F  F00B         	goto	l964
  2586   0015C2                     l3884:
  2587   0015C2  C049  F09E         	movff	___fltol@f1,??___fltol
  2588   0015C6  C04A  F09F         	movff	___fltol@f1+1,??___fltol+1
  2589   0015CA  C04B  F0A0         	movff	___fltol@f1+2,??___fltol+2
  2590   0015CE  C04C  F0A1         	movff	___fltol@f1+3,??___fltol+3
  2591   0015D2  0E20               	movlw	32
  2592   0015D4  EFF2  F00A         	goto	u3700
  2593   0015D8                     u3705:
  2594   0015D8  0100               	movlb	0	; () banked
  2595   0015DA  90D8               	bcf	status,0,c
  2596   0015DC  33A1               	rrcf	(??___fltol+3)& (0+255),f,b
  2597   0015DE  33A0               	rrcf	(??___fltol+2)& (0+255),f,b
  2598   0015E0  339F               	rrcf	(??___fltol+1)& (0+255),f,b
  2599   0015E2  339E               	rrcf	??___fltol& (0+255),f,b
  2600   0015E4                     u3700:
  2601   0015E4  2EE8               	decfsz	wreg,f,c
  2602   0015E6  EFEC  F00A         	goto	u3705
  2603   0015EA  519E               	movf	??___fltol& (0+255),w,b
  2604   0015EC  6E4D               	movwf	___fltol@sign1^0,c
  2605   0015EE                     
  2606                           ; BSR set to: 0
  2607   0015EE  8E4B               	bsf	(___fltol@f1+2)^0,7,c
  2608   0015F0                     
  2609                           ; BSR set to: 0
  2610   0015F0  0EFF               	movlw	255
  2611   0015F2  1649               	andwf	___fltol@f1^0,f,c
  2612   0015F4  0EFF               	movlw	255
  2613   0015F6  164A               	andwf	(___fltol@f1+1)^0,f,c
  2614   0015F8  0EFF               	movlw	255
  2615   0015FA  164B               	andwf	(___fltol@f1+2)^0,f,c
  2616   0015FC  0E00               	movlw	0
  2617   0015FE  164C               	andwf	(___fltol@f1+3)^0,f,c
  2618   001600                     
  2619                           ; BSR set to: 0
  2620   001600  0E96               	movlw	150
  2621   001602  5E4E               	subwf	___fltol@exp1^0,f,c
  2622   001604                     
  2623                           ; BSR set to: 0
  2624   001604  BE4E               	btfsc	___fltol@exp1^0,7,c
  2625   001606  EF09  F00B         	goto	u3710
  2626   00160A  EF07  F00B         	goto	u3711
  2627   00160E                     u3711:
  2628   00160E  EF1F  F00B         	goto	l3904
  2629   001612                     u3710:
  2630   001612                     
  2631                           ; BSR set to: 0
  2632   001612  504E               	movf	___fltol@exp1^0,w,c
  2633   001614  0A80               	xorlw	128
  2634   001616  0F97               	addlw	151
  2635   001618  B0D8               	btfsc	status,0,c
  2636   00161A  EF11  F00B         	goto	u3721
  2637   00161E  EF13  F00B         	goto	u3720
  2638   001622                     u3721:
  2639   001622  EF15  F00B         	goto	l3900
  2640   001626                     u3720:
  2641   001626  EFD7  F00A         	goto	l3880
  2642   00162A                     l3900:
  2643   00162A  90D8               	bcf	status,0,c
  2644   00162C  324C               	rrcf	(___fltol@f1+3)^0,f,c
  2645   00162E  324B               	rrcf	(___fltol@f1+2)^0,f,c
  2646   001630  324A               	rrcf	(___fltol@f1+1)^0,f,c
  2647   001632  3249               	rrcf	___fltol@f1^0,f,c
  2648   001634  3E4E               	incfsz	___fltol@exp1^0,f,c
  2649   001636  EF15  F00B         	goto	l3900
  2650   00163A  EF37  F00B         	goto	l3914
  2651   00163E                     l3904:
  2652                           
  2653                           ; BSR set to: 0
  2654   00163E  0E1F               	movlw	31
  2655   001640  644E               	cpfsgt	___fltol@exp1^0,c
  2656   001642  EF25  F00B         	goto	u3731
  2657   001646  EF27  F00B         	goto	u3730
  2658   00164A                     u3731:
  2659   00164A  EF2F  F00B         	goto	l3912
  2660   00164E                     u3730:
  2661   00164E  EFD7  F00A         	goto	l3880
  2662   001652                     l3910:
  2663   001652  90D8               	bcf	status,0,c
  2664   001654  3649               	rlcf	___fltol@f1^0,f,c
  2665   001656  364A               	rlcf	(___fltol@f1+1)^0,f,c
  2666   001658  364B               	rlcf	(___fltol@f1+2)^0,f,c
  2667   00165A  364C               	rlcf	(___fltol@f1+3)^0,f,c
  2668   00165C  064E               	decf	___fltol@exp1^0,f,c
  2669   00165E                     l3912:
  2670   00165E  504E               	movf	___fltol@exp1^0,w,c
  2671   001660  A4D8               	btfss	status,2,c
  2672   001662  EF35  F00B         	goto	u3741
  2673   001666  EF37  F00B         	goto	u3740
  2674   00166A                     u3741:
  2675   00166A  EF29  F00B         	goto	l3910
  2676   00166E                     u3740:
  2677   00166E                     l3914:
  2678   00166E  504D               	movf	___fltol@sign1^0,w,c
  2679   001670  B4D8               	btfsc	status,2,c
  2680   001672  EF3D  F00B         	goto	u3751
  2681   001676  EF3F  F00B         	goto	u3750
  2682   00167A                     u3751:
  2683   00167A  EF47  F00B         	goto	l3918
  2684   00167E                     u3750:
  2685   00167E  1E4C               	comf	(___fltol@f1+3)^0,f,c
  2686   001680  1E4B               	comf	(___fltol@f1+2)^0,f,c
  2687   001682  1E4A               	comf	(___fltol@f1+1)^0,f,c
  2688   001684  6C49               	negf	___fltol@f1^0,c
  2689   001686  0E00               	movlw	0
  2690   001688  224A               	addwfc	(___fltol@f1+1)^0,f,c
  2691   00168A  224B               	addwfc	(___fltol@f1+2)^0,f,c
  2692   00168C  224C               	addwfc	(___fltol@f1+3)^0,f,c
  2693   00168E                     l3918:
  2694   00168E  C049  F049         	movff	___fltol@f1,?___fltol
  2695   001692  C04A  F04A         	movff	___fltol@f1+1,?___fltol+1
  2696   001696  C04B  F04B         	movff	___fltol@f1+2,?___fltol+2
  2697   00169A  C04C  F04C         	movff	___fltol@f1+3,?___fltol+3
  2698   00169E                     l964:
  2699   00169E  0012               	return		;funcret
  2700   0016A0                     __end_of___fltol:
  2701                           	callstack 0
  2702                           
  2703 ;; *************** function ___flmul *****************
  2704 ;; Defined at:
  2705 ;;		line 8 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\sprcmul.c"
  2706 ;; Parameters:    Size  Location     Type
  2707 ;;  b               4   47[COMRAM] long 
  2708 ;;  a               4   51[COMRAM] long 
  2709 ;; Auto vars:     Size  Location     Type
  2710 ;;  prod            4   66[COMRAM] struct .
  2711 ;;  grs             4   60[COMRAM] unsigned long 
  2712 ;;  temp            2   70[COMRAM] struct .
  2713 ;;  bexp            1   65[COMRAM] unsigned char 
  2714 ;;  aexp            1   64[COMRAM] unsigned char 
  2715 ;;  sign            1   59[COMRAM] unsigned char 
  2716 ;; Return value:  Size  Location     Type
  2717 ;;                  4   47[COMRAM] unsigned char 
  2718 ;; Registers used:
  2719 ;;		wreg, status,2, status,0, prodl, prodh
  2720 ;; Tracked objects:
  2721 ;;		On entry : 0/0
  2722 ;;		On exit  : 0/0
  2723 ;;		Unchanged: 0/0
  2724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2725 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2726 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2727 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2728 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2729 ;;Total ram usage:       25 bytes
  2730 ;; Hardware stack levels used: 1
  2731 ;; Hardware stack levels required when called: 7
  2732 ;; This function calls:
  2733 ;;		Nothing
  2734 ;; This function is called by:
  2735 ;;		_detect_color
  2736 ;; This function uses a non-reentrant model
  2737 ;;
  2738                           
  2739                           	psect	text5
  2740   000678                     __ptext5:
  2741                           	callstack 0
  2742   000678                     ___flmul:
  2743                           	callstack 22
  2744   000678  5033               	movf	(___flmul@b+3)^0,w,c
  2745   00067A  0B80               	andlw	128
  2746   00067C  6E3C               	movwf	___flmul@sign^0,c
  2747   00067E  5033               	movf	(___flmul@b+3)^0,w,c
  2748   000680  2433               	addwf	(___flmul@b+3)^0,w,c
  2749   000682  6E42               	movwf	___flmul@bexp^0,c
  2750   000684  AE32               	btfss	(___flmul@b+2)^0,7,c
  2751   000686  EF47  F003         	goto	u2661
  2752   00068A  EF49  F003         	goto	u2660
  2753   00068E                     u2661:
  2754   00068E  EF4A  F003         	goto	l3262
  2755   000692                     u2660:
  2756   000692  8042               	bsf	___flmul@bexp^0,0,c
  2757   000694                     l3262:
  2758   000694  5042               	movf	___flmul@bexp^0,w,c
  2759   000696  B4D8               	btfsc	status,2,c
  2760   000698  EF50  F003         	goto	u2671
  2761   00069C  EF52  F003         	goto	u2670
  2762   0006A0                     u2671:
  2763   0006A0  EF65  F003         	goto	l3270
  2764   0006A4                     u2670:
  2765   0006A4  2842               	incf	___flmul@bexp^0,w,c
  2766   0006A6  A4D8               	btfss	status,2,c
  2767   0006A8  EF58  F003         	goto	u2681
  2768   0006AC  EF5A  F003         	goto	u2680
  2769   0006B0                     u2681:
  2770   0006B0  EF62  F003         	goto	l3268
  2771   0006B4                     u2680:
  2772   0006B4  0E00               	movlw	0
  2773   0006B6  6E30               	movwf	___flmul@b^0,c
  2774   0006B8  0E00               	movlw	0
  2775   0006BA  6E31               	movwf	(___flmul@b+1)^0,c
  2776   0006BC  0E00               	movlw	0
  2777   0006BE  6E32               	movwf	(___flmul@b+2)^0,c
  2778   0006C0  0E00               	movlw	0
  2779   0006C2  6E33               	movwf	(___flmul@b+3)^0,c
  2780   0006C4                     l3268:
  2781   0006C4  8E32               	bsf	(___flmul@b+2)^0,7,c
  2782   0006C6  EF6D  F003         	goto	l3272
  2783   0006CA                     l3270:
  2784   0006CA  0E00               	movlw	0
  2785   0006CC  6E30               	movwf	___flmul@b^0,c
  2786   0006CE  0E00               	movlw	0
  2787   0006D0  6E31               	movwf	(___flmul@b+1)^0,c
  2788   0006D2  0E00               	movlw	0
  2789   0006D4  6E32               	movwf	(___flmul@b+2)^0,c
  2790   0006D6  0E00               	movlw	0
  2791   0006D8  6E33               	movwf	(___flmul@b+3)^0,c
  2792   0006DA                     l3272:
  2793   0006DA  5037               	movf	(___flmul@a+3)^0,w,c
  2794   0006DC  0B80               	andlw	128
  2795   0006DE  1A3C               	xorwf	___flmul@sign^0,f,c
  2796   0006E0  5037               	movf	(___flmul@a+3)^0,w,c
  2797   0006E2  2437               	addwf	(___flmul@a+3)^0,w,c
  2798   0006E4  6E41               	movwf	___flmul@aexp^0,c
  2799   0006E6  AE36               	btfss	(___flmul@a+2)^0,7,c
  2800   0006E8  EF78  F003         	goto	u2691
  2801   0006EC  EF7A  F003         	goto	u2690
  2802   0006F0                     u2691:
  2803   0006F0  EF7B  F003         	goto	l3280
  2804   0006F4                     u2690:
  2805   0006F4  8041               	bsf	___flmul@aexp^0,0,c
  2806   0006F6                     l3280:
  2807   0006F6  5041               	movf	___flmul@aexp^0,w,c
  2808   0006F8  B4D8               	btfsc	status,2,c
  2809   0006FA  EF81  F003         	goto	u2701
  2810   0006FE  EF83  F003         	goto	u2700
  2811   000702                     u2701:
  2812   000702  EF96  F003         	goto	l3288
  2813   000706                     u2700:
  2814   000706  2841               	incf	___flmul@aexp^0,w,c
  2815   000708  A4D8               	btfss	status,2,c
  2816   00070A  EF89  F003         	goto	u2711
  2817   00070E  EF8B  F003         	goto	u2710
  2818   000712                     u2711:
  2819   000712  EF93  F003         	goto	l3286
  2820   000716                     u2710:
  2821   000716  0E00               	movlw	0
  2822   000718  6E34               	movwf	___flmul@a^0,c
  2823   00071A  0E00               	movlw	0
  2824   00071C  6E35               	movwf	(___flmul@a+1)^0,c
  2825   00071E  0E00               	movlw	0
  2826   000720  6E36               	movwf	(___flmul@a+2)^0,c
  2827   000722  0E00               	movlw	0
  2828   000724  6E37               	movwf	(___flmul@a+3)^0,c
  2829   000726                     l3286:
  2830   000726  8E36               	bsf	(___flmul@a+2)^0,7,c
  2831   000728  EF9E  F003         	goto	l1281
  2832   00072C                     l3288:
  2833   00072C  0E00               	movlw	0
  2834   00072E  6E34               	movwf	___flmul@a^0,c
  2835   000730  0E00               	movlw	0
  2836   000732  6E35               	movwf	(___flmul@a+1)^0,c
  2837   000734  0E00               	movlw	0
  2838   000736  6E36               	movwf	(___flmul@a+2)^0,c
  2839   000738  0E00               	movlw	0
  2840   00073A  6E37               	movwf	(___flmul@a+3)^0,c
  2841   00073C                     l1281:
  2842   00073C  5041               	movf	___flmul@aexp^0,w,c
  2843   00073E  B4D8               	btfsc	status,2,c
  2844   000740  EFA4  F003         	goto	u2721
  2845   000744  EFA6  F003         	goto	u2720
  2846   000748                     u2721:
  2847   000748  EFAE  F003         	goto	l3292
  2848   00074C                     u2720:
  2849   00074C  5042               	movf	___flmul@bexp^0,w,c
  2850   00074E  A4D8               	btfss	status,2,c
  2851   000750  EFAC  F003         	goto	u2731
  2852   000754  EFAE  F003         	goto	u2730
  2853   000758                     u2731:
  2854   000758  EFB8  F003         	goto	l3296
  2855   00075C                     u2730:
  2856   00075C                     l3292:
  2857   00075C  0E00               	movlw	0
  2858   00075E  6E30               	movwf	?___flmul^0,c
  2859   000760  0E00               	movlw	0
  2860   000762  6E31               	movwf	(?___flmul+1)^0,c
  2861   000764  0E00               	movlw	0
  2862   000766  6E32               	movwf	(?___flmul+2)^0,c
  2863   000768  0E00               	movlw	0
  2864   00076A  6E33               	movwf	(?___flmul+3)^0,c
  2865   00076C  EF50  F005         	goto	l1285
  2866   000770                     l3296:
  2867   000770  5036               	movf	(___flmul@a+2)^0,w,c
  2868   000772  0230               	mulwf	___flmul@b^0,c
  2869   000774  CFF3 F047          	movff	prodl,___flmul@temp
  2870   000778  CFF4 F048          	movff	prodh,___flmul@temp+1
  2871   00077C  5047               	movf	___flmul@temp^0,w,c
  2872   00077E  6E3D               	movwf	___flmul@grs^0,c
  2873   000780  6A3E               	clrf	(___flmul@grs+1)^0,c
  2874   000782  6A3F               	clrf	(___flmul@grs+2)^0,c
  2875   000784  6A40               	clrf	(___flmul@grs+3)^0,c
  2876   000786  5048               	movf	(___flmul@temp+1)^0,w,c
  2877   000788  6E43               	movwf	___flmul@prod^0,c
  2878   00078A  6A44               	clrf	(___flmul@prod+1)^0,c
  2879   00078C  6A45               	clrf	(___flmul@prod+2)^0,c
  2880   00078E  6A46               	clrf	(___flmul@prod+3)^0,c
  2881   000790  5035               	movf	(___flmul@a+1)^0,w,c
  2882   000792  0231               	mulwf	(___flmul@b+1)^0,c
  2883   000794  CFF3 F047          	movff	prodl,___flmul@temp
  2884   000798  CFF4 F048          	movff	prodh,___flmul@temp+1
  2885   00079C  5047               	movf	___flmul@temp^0,w,c
  2886   00079E  263D               	addwf	___flmul@grs^0,f,c
  2887   0007A0  0E00               	movlw	0
  2888   0007A2  223E               	addwfc	(___flmul@grs+1)^0,f,c
  2889   0007A4  223F               	addwfc	(___flmul@grs+2)^0,f,c
  2890   0007A6  2240               	addwfc	(___flmul@grs+3)^0,f,c
  2891   0007A8  5048               	movf	(___flmul@temp+1)^0,w,c
  2892   0007AA  2643               	addwf	___flmul@prod^0,f,c
  2893   0007AC  0E00               	movlw	0
  2894   0007AE  2244               	addwfc	(___flmul@prod+1)^0,f,c
  2895   0007B0  2245               	addwfc	(___flmul@prod+2)^0,f,c
  2896   0007B2  2246               	addwfc	(___flmul@prod+3)^0,f,c
  2897   0007B4  5034               	movf	___flmul@a^0,w,c
  2898   0007B6  0232               	mulwf	(___flmul@b+2)^0,c
  2899   0007B8  CFF3 F047          	movff	prodl,___flmul@temp
  2900   0007BC  CFF4 F048          	movff	prodh,___flmul@temp+1
  2901   0007C0  5047               	movf	___flmul@temp^0,w,c
  2902   0007C2  263D               	addwf	___flmul@grs^0,f,c
  2903   0007C4  0E00               	movlw	0
  2904   0007C6  223E               	addwfc	(___flmul@grs+1)^0,f,c
  2905   0007C8  223F               	addwfc	(___flmul@grs+2)^0,f,c
  2906   0007CA  2240               	addwfc	(___flmul@grs+3)^0,f,c
  2907   0007CC  5048               	movf	(___flmul@temp+1)^0,w,c
  2908   0007CE  2643               	addwf	___flmul@prod^0,f,c
  2909   0007D0  0E00               	movlw	0
  2910   0007D2  2244               	addwfc	(___flmul@prod+1)^0,f,c
  2911   0007D4  2245               	addwfc	(___flmul@prod+2)^0,f,c
  2912   0007D6  2246               	addwfc	(___flmul@prod+3)^0,f,c
  2913   0007D8  C03F  F040         	movff	___flmul@grs+2,___flmul@grs+3
  2914   0007DC  C03E  F03F         	movff	___flmul@grs+1,___flmul@grs+2
  2915   0007E0  C03D  F03E         	movff	___flmul@grs,___flmul@grs+1
  2916   0007E4  6A3D               	clrf	___flmul@grs^0,c
  2917   0007E6  5034               	movf	___flmul@a^0,w,c
  2918   0007E8  0231               	mulwf	(___flmul@b+1)^0,c
  2919   0007EA  CFF3 F047          	movff	prodl,___flmul@temp
  2920   0007EE  CFF4 F048          	movff	prodh,___flmul@temp+1
  2921   0007F2  5047               	movf	___flmul@temp^0,w,c
  2922   0007F4  263D               	addwf	___flmul@grs^0,f,c
  2923   0007F6  5048               	movf	(___flmul@temp+1)^0,w,c
  2924   0007F8  223E               	addwfc	(___flmul@grs+1)^0,f,c
  2925   0007FA  0E00               	movlw	0
  2926   0007FC  223F               	addwfc	(___flmul@grs+2)^0,f,c
  2927   0007FE  0E00               	movlw	0
  2928   000800  2240               	addwfc	(___flmul@grs+3)^0,f,c
  2929   000802  5035               	movf	(___flmul@a+1)^0,w,c
  2930   000804  0230               	mulwf	___flmul@b^0,c
  2931   000806  CFF3 F047          	movff	prodl,___flmul@temp
  2932   00080A  CFF4 F048          	movff	prodh,___flmul@temp+1
  2933   00080E  5047               	movf	___flmul@temp^0,w,c
  2934   000810  263D               	addwf	___flmul@grs^0,f,c
  2935   000812  5048               	movf	(___flmul@temp+1)^0,w,c
  2936   000814  223E               	addwfc	(___flmul@grs+1)^0,f,c
  2937   000816  0E00               	movlw	0
  2938   000818  223F               	addwfc	(___flmul@grs+2)^0,f,c
  2939   00081A  0E00               	movlw	0
  2940   00081C  2240               	addwfc	(___flmul@grs+3)^0,f,c
  2941   00081E  C03F  F040         	movff	___flmul@grs+2,___flmul@grs+3
  2942   000822  C03E  F03F         	movff	___flmul@grs+1,___flmul@grs+2
  2943   000826  C03D  F03E         	movff	___flmul@grs,___flmul@grs+1
  2944   00082A  6A3D               	clrf	___flmul@grs^0,c
  2945   00082C  5034               	movf	___flmul@a^0,w,c
  2946   00082E  0230               	mulwf	___flmul@b^0,c
  2947   000830  CFF3 F047          	movff	prodl,___flmul@temp
  2948   000834  CFF4 F048          	movff	prodh,___flmul@temp+1
  2949   000838  5047               	movf	___flmul@temp^0,w,c
  2950   00083A  263D               	addwf	___flmul@grs^0,f,c
  2951   00083C  5048               	movf	(___flmul@temp+1)^0,w,c
  2952   00083E  223E               	addwfc	(___flmul@grs+1)^0,f,c
  2953   000840  0E00               	movlw	0
  2954   000842  223F               	addwfc	(___flmul@grs+2)^0,f,c
  2955   000844  0E00               	movlw	0
  2956   000846  2240               	addwfc	(___flmul@grs+3)^0,f,c
  2957   000848  5036               	movf	(___flmul@a+2)^0,w,c
  2958   00084A  0231               	mulwf	(___flmul@b+1)^0,c
  2959   00084C  CFF3 F047          	movff	prodl,___flmul@temp
  2960   000850  CFF4 F048          	movff	prodh,___flmul@temp+1
  2961   000854  5047               	movf	___flmul@temp^0,w,c
  2962   000856  2643               	addwf	___flmul@prod^0,f,c
  2963   000858  5048               	movf	(___flmul@temp+1)^0,w,c
  2964   00085A  2244               	addwfc	(___flmul@prod+1)^0,f,c
  2965   00085C  0E00               	movlw	0
  2966   00085E  2245               	addwfc	(___flmul@prod+2)^0,f,c
  2967   000860  0E00               	movlw	0
  2968   000862  2246               	addwfc	(___flmul@prod+3)^0,f,c
  2969   000864  5035               	movf	(___flmul@a+1)^0,w,c
  2970   000866  0232               	mulwf	(___flmul@b+2)^0,c
  2971   000868  CFF3 F047          	movff	prodl,___flmul@temp
  2972   00086C  CFF4 F048          	movff	prodh,___flmul@temp+1
  2973   000870  5047               	movf	___flmul@temp^0,w,c
  2974   000872  2643               	addwf	___flmul@prod^0,f,c
  2975   000874  5048               	movf	(___flmul@temp+1)^0,w,c
  2976   000876  2244               	addwfc	(___flmul@prod+1)^0,f,c
  2977   000878  0E00               	movlw	0
  2978   00087A  2245               	addwfc	(___flmul@prod+2)^0,f,c
  2979   00087C  0E00               	movlw	0
  2980   00087E  2246               	addwfc	(___flmul@prod+3)^0,f,c
  2981   000880  5036               	movf	(___flmul@a+2)^0,w,c
  2982   000882  0232               	mulwf	(___flmul@b+2)^0,c
  2983   000884  CFF3 F047          	movff	prodl,___flmul@temp
  2984   000888  CFF4 F048          	movff	prodh,___flmul@temp+1
  2985   00088C  5047               	movf	___flmul@temp^0,w,c
  2986   00088E  6E38               	movwf	??___flmul^0,c
  2987   000890  5048               	movf	(___flmul@temp+1)^0,w,c
  2988   000892  6E39               	movwf	(??___flmul+1)^0,c
  2989   000894  6A3A               	clrf	(??___flmul+2)^0,c
  2990   000896  6A3B               	clrf	(??___flmul+3)^0,c
  2991   000898  C03A  F03B         	movff	??___flmul+2,??___flmul+3
  2992   00089C  C039  F03A         	movff	??___flmul+1,??___flmul+2
  2993   0008A0  C038  F039         	movff	??___flmul,??___flmul+1
  2994   0008A4  6A38               	clrf	??___flmul^0,c
  2995   0008A6  5038               	movf	??___flmul^0,w,c
  2996   0008A8  2643               	addwf	___flmul@prod^0,f,c
  2997   0008AA  5039               	movf	(??___flmul+1)^0,w,c
  2998   0008AC  2244               	addwfc	(___flmul@prod+1)^0,f,c
  2999   0008AE  503A               	movf	(??___flmul+2)^0,w,c
  3000   0008B0  2245               	addwfc	(___flmul@prod+2)^0,f,c
  3001   0008B2  503B               	movf	(??___flmul+3)^0,w,c
  3002   0008B4  2246               	addwfc	(___flmul@prod+3)^0,f,c
  3003   0008B6  C03D  F038         	movff	___flmul@grs,??___flmul
  3004   0008BA  C03E  F039         	movff	___flmul@grs+1,??___flmul+1
  3005   0008BE  C03F  F03A         	movff	___flmul@grs+2,??___flmul+2
  3006   0008C2  C040  F03B         	movff	___flmul@grs+3,??___flmul+3
  3007   0008C6  0E19               	movlw	25
  3008   0008C8  EF6B  F004         	goto	u2740
  3009   0008CC                     u2745:
  3010   0008CC  90D8               	bcf	status,0,c
  3011   0008CE  323B               	rrcf	(??___flmul+3)^0,f,c
  3012   0008D0  323A               	rrcf	(??___flmul+2)^0,f,c
  3013   0008D2  3239               	rrcf	(??___flmul+1)^0,f,c
  3014   0008D4  3238               	rrcf	??___flmul^0,f,c
  3015   0008D6                     u2740:
  3016   0008D6  2EE8               	decfsz	wreg,f,c
  3017   0008D8  EF66  F004         	goto	u2745
  3018   0008DC  5038               	movf	??___flmul^0,w,c
  3019   0008DE  2643               	addwf	___flmul@prod^0,f,c
  3020   0008E0  5039               	movf	(??___flmul+1)^0,w,c
  3021   0008E2  2244               	addwfc	(___flmul@prod+1)^0,f,c
  3022   0008E4  503A               	movf	(??___flmul+2)^0,w,c
  3023   0008E6  2245               	addwfc	(___flmul@prod+2)^0,f,c
  3024   0008E8  503B               	movf	(??___flmul+3)^0,w,c
  3025   0008EA  2246               	addwfc	(___flmul@prod+3)^0,f,c
  3026   0008EC  C03F  F040         	movff	___flmul@grs+2,___flmul@grs+3
  3027   0008F0  C03E  F03F         	movff	___flmul@grs+1,___flmul@grs+2
  3028   0008F4  C03D  F03E         	movff	___flmul@grs,___flmul@grs+1
  3029   0008F8  6A3D               	clrf	___flmul@grs^0,c
  3030   0008FA  5041               	movf	___flmul@aexp^0,w,c
  3031   0008FC  C042  F038         	movff	___flmul@bexp,??___flmul
  3032   000900  6A39               	clrf	(??___flmul+1)^0,c
  3033   000902  2638               	addwf	??___flmul^0,f,c
  3034   000904  0E00               	movlw	0
  3035   000906  2239               	addwfc	(??___flmul+1)^0,f,c
  3036   000908  0E82               	movlw	130
  3037   00090A  2438               	addwf	??___flmul^0,w,c
  3038   00090C  6E47               	movwf	___flmul@temp^0,c
  3039   00090E  0EFF               	movlw	255
  3040   000910  2039               	addwfc	(??___flmul+1)^0,w,c
  3041   000912  6E48               	movwf	(___flmul@temp+1)^0,c
  3042   000914  EFA1  F004         	goto	l3344
  3043   000918                     l3338:
  3044   000918  90D8               	bcf	status,0,c
  3045   00091A  3643               	rlcf	___flmul@prod^0,f,c
  3046   00091C  3644               	rlcf	(___flmul@prod+1)^0,f,c
  3047   00091E  3645               	rlcf	(___flmul@prod+2)^0,f,c
  3048   000920  3646               	rlcf	(___flmul@prod+3)^0,f,c
  3049   000922  AE40               	btfss	(___flmul@grs+3)^0,7,c
  3050   000924  EF96  F004         	goto	u2751
  3051   000928  EF98  F004         	goto	u2750
  3052   00092C                     u2751:
  3053   00092C  EF99  F004         	goto	l1288
  3054   000930                     u2750:
  3055   000930  8043               	bsf	___flmul@prod^0,0,c
  3056   000932                     l1288:
  3057   000932  90D8               	bcf	status,0,c
  3058   000934  363D               	rlcf	___flmul@grs^0,f,c
  3059   000936  363E               	rlcf	(___flmul@grs+1)^0,f,c
  3060   000938  363F               	rlcf	(___flmul@grs+2)^0,f,c
  3061   00093A  3640               	rlcf	(___flmul@grs+3)^0,f,c
  3062   00093C  0647               	decf	___flmul@temp^0,f,c
  3063   00093E  A0D8               	btfss	status,0,c
  3064   000940  0648               	decf	(___flmul@temp+1)^0,f,c
  3065   000942                     l3344:
  3066   000942  AE45               	btfss	(___flmul@prod+2)^0,7,c
  3067   000944  EFA6  F004         	goto	u2761
  3068   000948  EFA8  F004         	goto	u2760
  3069   00094C                     u2761:
  3070   00094C  EF8C  F004         	goto	l3338
  3071   000950                     u2760:
  3072   000950  0E00               	movlw	0
  3073   000952  6E41               	movwf	___flmul@aexp^0,c
  3074   000954  AE40               	btfss	(___flmul@grs+3)^0,7,c
  3075   000956  EFAF  F004         	goto	u2771
  3076   00095A  EFB1  F004         	goto	u2770
  3077   00095E                     u2771:
  3078   00095E  EFD5  F004         	goto	l1290
  3079   000962                     u2770:
  3080   000962  0EFF               	movlw	255
  3081   000964  143D               	andwf	___flmul@grs^0,w,c
  3082   000966  6E38               	movwf	??___flmul^0,c
  3083   000968  0EFF               	movlw	255
  3084   00096A  143E               	andwf	(___flmul@grs+1)^0,w,c
  3085   00096C  6E39               	movwf	(??___flmul+1)^0,c
  3086   00096E  0EFF               	movlw	255
  3087   000970  143F               	andwf	(___flmul@grs+2)^0,w,c
  3088   000972  6E3A               	movwf	(??___flmul+2)^0,c
  3089   000974  0E7F               	movlw	127
  3090   000976  1440               	andwf	(___flmul@grs+3)^0,w,c
  3091   000978  6E3B               	movwf	(??___flmul+3)^0,c
  3092   00097A  5038               	movf	??___flmul^0,w,c
  3093   00097C  1039               	iorwf	(??___flmul+1)^0,w,c
  3094   00097E  103A               	iorwf	(??___flmul+2)^0,w,c
  3095   000980  103B               	iorwf	(??___flmul+3)^0,w,c
  3096   000982  B4D8               	btfsc	status,2,c
  3097   000984  EFC6  F004         	goto	u2781
  3098   000988  EFC8  F004         	goto	u2780
  3099   00098C                     u2781:
  3100   00098C  EFCC  F004         	goto	l1291
  3101   000990                     u2780:
  3102   000990                     l3352:
  3103   000990  0E01               	movlw	1
  3104   000992  6E41               	movwf	___flmul@aexp^0,c
  3105   000994  EFD5  F004         	goto	l1290
  3106   000998                     l1291:
  3107   000998  A043               	btfss	___flmul@prod^0,0,c
  3108   00099A  EFD1  F004         	goto	u2791
  3109   00099E  EFD3  F004         	goto	u2790
  3110   0009A2                     u2791:
  3111   0009A2  EFD5  F004         	goto	l1290
  3112   0009A6                     u2790:
  3113   0009A6  EFC8  F004         	goto	l3352
  3114   0009AA                     l1290:
  3115   0009AA  5041               	movf	___flmul@aexp^0,w,c
  3116   0009AC  B4D8               	btfsc	status,2,c
  3117   0009AE  EFDB  F004         	goto	u2801
  3118   0009B2  EFDD  F004         	goto	u2800
  3119   0009B6                     u2801:
  3120   0009B6  EF01  F005         	goto	l3364
  3121   0009BA                     u2800:
  3122   0009BA  0E01               	movlw	1
  3123   0009BC  2643               	addwf	___flmul@prod^0,f,c
  3124   0009BE  0E00               	movlw	0
  3125   0009C0  2244               	addwfc	(___flmul@prod+1)^0,f,c
  3126   0009C2  2245               	addwfc	(___flmul@prod+2)^0,f,c
  3127   0009C4  2246               	addwfc	(___flmul@prod+3)^0,f,c
  3128   0009C6  A046               	btfss	(___flmul@prod+3)^0,0,c
  3129   0009C8  EFE8  F004         	goto	u2811
  3130   0009CC  EFEA  F004         	goto	u2810
  3131   0009D0                     u2811:
  3132   0009D0  EF01  F005         	goto	l3364
  3133   0009D4                     u2810:
  3134   0009D4  C043  F038         	movff	___flmul@prod,??___flmul
  3135   0009D8  C044  F039         	movff	___flmul@prod+1,??___flmul+1
  3136   0009DC  C045  F03A         	movff	___flmul@prod+2,??___flmul+2
  3137   0009E0  C046  F03B         	movff	___flmul@prod+3,??___flmul+3
  3138   0009E4  343B               	rlcf	(??___flmul+3)^0,w,c
  3139   0009E6  323B               	rrcf	(??___flmul+3)^0,f,c
  3140   0009E8  323A               	rrcf	(??___flmul+2)^0,f,c
  3141   0009EA  3239               	rrcf	(??___flmul+1)^0,f,c
  3142   0009EC  3238               	rrcf	??___flmul^0,f,c
  3143   0009EE  C038  F043         	movff	??___flmul,___flmul@prod
  3144   0009F2  C039  F044         	movff	??___flmul+1,___flmul@prod+1
  3145   0009F6  C03A  F045         	movff	??___flmul+2,___flmul@prod+2
  3146   0009FA  C03B  F046         	movff	??___flmul+3,___flmul@prod+3
  3147   0009FE  4A47               	infsnz	___flmul@temp^0,f,c
  3148   000A00  2A48               	incf	(___flmul@temp+1)^0,f,c
  3149   000A02                     l3364:
  3150   000A02  BE48               	btfsc	(___flmul@temp+1)^0,7,c
  3151   000A04  EF0C  F005         	goto	u2821
  3152   000A08  5048               	movf	(___flmul@temp+1)^0,w,c
  3153   000A0A  E108               	bnz	u2820
  3154   000A0C  2847               	incf	___flmul@temp^0,w,c
  3155   000A0E  A0D8               	btfss	status,0,c
  3156   000A10  EF0C  F005         	goto	u2821
  3157   000A14  EF0E  F005         	goto	u2820
  3158   000A18                     u2821:
  3159   000A18  EF18  F005         	goto	l3368
  3160   000A1C                     u2820:
  3161   000A1C  0E00               	movlw	0
  3162   000A1E  6E43               	movwf	___flmul@prod^0,c
  3163   000A20  0E00               	movlw	0
  3164   000A22  6E44               	movwf	(___flmul@prod+1)^0,c
  3165   000A24  0E80               	movlw	128
  3166   000A26  6E45               	movwf	(___flmul@prod+2)^0,c
  3167   000A28  0E7F               	movlw	127
  3168   000A2A  6E46               	movwf	(___flmul@prod+3)^0,c
  3169   000A2C  EF46  F005         	goto	l3380
  3170   000A30                     l3368:
  3171   000A30  BE48               	btfsc	(___flmul@temp+1)^0,7,c
  3172   000A32  EF25  F005         	goto	u2830
  3173   000A36  5048               	movf	(___flmul@temp+1)^0,w,c
  3174   000A38  E106               	bnz	u2831
  3175   000A3A  0447               	decf	___flmul@temp^0,w,c
  3176   000A3C  B0D8               	btfsc	status,0,c
  3177   000A3E  EF23  F005         	goto	u2831
  3178   000A42  EF25  F005         	goto	u2830
  3179   000A46                     u2831:
  3180   000A46  EF31  F005         	goto	l1298
  3181   000A4A                     u2830:
  3182   000A4A  0E00               	movlw	0
  3183   000A4C  6E43               	movwf	___flmul@prod^0,c
  3184   000A4E  0E00               	movlw	0
  3185   000A50  6E44               	movwf	(___flmul@prod+1)^0,c
  3186   000A52  0E00               	movlw	0
  3187   000A54  6E45               	movwf	(___flmul@prod+2)^0,c
  3188   000A56  0E00               	movlw	0
  3189   000A58  6E46               	movwf	(___flmul@prod+3)^0,c
  3190   000A5A  0E00               	movlw	0
  3191   000A5C  6E3C               	movwf	___flmul@sign^0,c
  3192   000A5E  EF46  F005         	goto	l3380
  3193   000A62                     l1298:
  3194   000A62  C047  F042         	movff	___flmul@temp,___flmul@bexp
  3195   000A66  0EFF               	movlw	255
  3196   000A68  1643               	andwf	___flmul@prod^0,f,c
  3197   000A6A  0EFF               	movlw	255
  3198   000A6C  1644               	andwf	(___flmul@prod+1)^0,f,c
  3199   000A6E  0E7F               	movlw	127
  3200   000A70  1645               	andwf	(___flmul@prod+2)^0,f,c
  3201   000A72  0E00               	movlw	0
  3202   000A74  1646               	andwf	(___flmul@prod+3)^0,f,c
  3203   000A76  A042               	btfss	___flmul@bexp^0,0,c
  3204   000A78  EF40  F005         	goto	u2841
  3205   000A7C  EF42  F005         	goto	u2840
  3206   000A80                     u2841:
  3207   000A80  EF43  F005         	goto	l3378
  3208   000A84                     u2840:
  3209   000A84  8E45               	bsf	(___flmul@prod+2)^0,7,c
  3210   000A86                     l3378:
  3211   000A86  90D8               	bcf	status,0,c
  3212   000A88  3042               	rrcf	___flmul@bexp^0,w,c
  3213   000A8A  6E46               	movwf	(___flmul@prod+3)^0,c
  3214   000A8C                     l3380:
  3215   000A8C  503C               	movf	___flmul@sign^0,w,c
  3216   000A8E  1246               	iorwf	(___flmul@prod+3)^0,f,c
  3217   000A90  C043  F030         	movff	___flmul@prod,?___flmul
  3218   000A94  C044  F031         	movff	___flmul@prod+1,?___flmul+1
  3219   000A98  C045  F032         	movff	___flmul@prod+2,?___flmul+2
  3220   000A9C  C046  F033         	movff	___flmul@prod+3,?___flmul+3
  3221   000AA0                     l1285:
  3222   000AA0  0012               	return		;funcret
  3223   000AA2                     __end_of___flmul:
  3224                           	callstack 0
  3225                           
  3226 ;; *************** function ___fldiv *****************
  3227 ;; Defined at:
  3228 ;;		line 11 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\sprcdiv.c"
  3229 ;; Parameters:    Size  Location     Type
  3230 ;;  b               4   22[COMRAM] unsigned char 
  3231 ;;  a               4   26[COMRAM] unsigned char 
  3232 ;; Auto vars:     Size  Location     Type
  3233 ;;  grs             4   41[COMRAM] unsigned long 
  3234 ;;  rem             4   34[COMRAM] unsigned long 
  3235 ;;  new_exp         2   39[COMRAM] short 
  3236 ;;  aexp            1   46[COMRAM] unsigned char 
  3237 ;;  bexp            1   45[COMRAM] unsigned char 
  3238 ;;  sign            1   38[COMRAM] unsigned char 
  3239 ;; Return value:  Size  Location     Type
  3240 ;;                  4   22[COMRAM] unsigned char 
  3241 ;; Registers used:
  3242 ;;		wreg, status,2, status,0
  3243 ;; Tracked objects:
  3244 ;;		On entry : 0/0
  3245 ;;		On exit  : 0/0
  3246 ;;		Unchanged: 0/0
  3247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3248 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3249 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3250 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3251 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3252 ;;Total ram usage:       25 bytes
  3253 ;; Hardware stack levels used: 1
  3254 ;; Hardware stack levels required when called: 7
  3255 ;; This function calls:
  3256 ;;		Nothing
  3257 ;; This function is called by:
  3258 ;;		_detect_color
  3259 ;; This function uses a non-reentrant model
  3260 ;;
  3261                           
  3262                           	psect	text6
  3263   000AA2                     __ptext6:
  3264                           	callstack 0
  3265   000AA2                     ___fldiv:
  3266                           	callstack 22
  3267   000AA2  501A               	movf	(___fldiv@b+3)^0,w,c
  3268   000AA4  0B80               	andlw	128
  3269   000AA6  6E27               	movwf	___fldiv@sign^0,c
  3270   000AA8  501A               	movf	(___fldiv@b+3)^0,w,c
  3271   000AAA  241A               	addwf	(___fldiv@b+3)^0,w,c
  3272   000AAC  6E2E               	movwf	___fldiv@bexp^0,c
  3273   000AAE  AE19               	btfss	(___fldiv@b+2)^0,7,c
  3274   000AB0  EF5C  F005         	goto	u2431
  3275   000AB4  EF5E  F005         	goto	u2430
  3276   000AB8                     u2431:
  3277   000AB8  EF5F  F005         	goto	l3124
  3278   000ABC                     u2430:
  3279   000ABC  802E               	bsf	___fldiv@bexp^0,0,c
  3280   000ABE                     l3124:
  3281   000ABE  502E               	movf	___fldiv@bexp^0,w,c
  3282   000AC0  B4D8               	btfsc	status,2,c
  3283   000AC2  EF65  F005         	goto	u2441
  3284   000AC6  EF67  F005         	goto	u2440
  3285   000ACA                     u2441:
  3286   000ACA  EF7C  F005         	goto	l3134
  3287   000ACE                     u2440:
  3288   000ACE  282E               	incf	___fldiv@bexp^0,w,c
  3289   000AD0  A4D8               	btfss	status,2,c
  3290   000AD2  EF6D  F005         	goto	u2451
  3291   000AD6  EF6F  F005         	goto	u2450
  3292   000ADA                     u2451:
  3293   000ADA  EF77  F005         	goto	l3130
  3294   000ADE                     u2450:
  3295   000ADE  0E00               	movlw	0
  3296   000AE0  6E17               	movwf	___fldiv@b^0,c
  3297   000AE2  0E00               	movlw	0
  3298   000AE4  6E18               	movwf	(___fldiv@b+1)^0,c
  3299   000AE6  0E00               	movlw	0
  3300   000AE8  6E19               	movwf	(___fldiv@b+2)^0,c
  3301   000AEA  0E00               	movlw	0
  3302   000AEC  6E1A               	movwf	(___fldiv@b+3)^0,c
  3303   000AEE                     l3130:
  3304   000AEE  8E19               	bsf	(___fldiv@b+2)^0,7,c
  3305   000AF0  0E00               	movlw	0
  3306   000AF2  6E1A               	movwf	(___fldiv@b+3)^0,c
  3307   000AF4  EF84  F005         	goto	l3136
  3308   000AF8                     l3134:
  3309   000AF8  0E00               	movlw	0
  3310   000AFA  6E17               	movwf	___fldiv@b^0,c
  3311   000AFC  0E00               	movlw	0
  3312   000AFE  6E18               	movwf	(___fldiv@b+1)^0,c
  3313   000B00  0E00               	movlw	0
  3314   000B02  6E19               	movwf	(___fldiv@b+2)^0,c
  3315   000B04  0E00               	movlw	0
  3316   000B06  6E1A               	movwf	(___fldiv@b+3)^0,c
  3317   000B08                     l3136:
  3318   000B08  501E               	movf	(___fldiv@a+3)^0,w,c
  3319   000B0A  0B80               	andlw	128
  3320   000B0C  1A27               	xorwf	___fldiv@sign^0,f,c
  3321   000B0E  501E               	movf	(___fldiv@a+3)^0,w,c
  3322   000B10  241E               	addwf	(___fldiv@a+3)^0,w,c
  3323   000B12  6E2F               	movwf	___fldiv@aexp^0,c
  3324   000B14  AE1D               	btfss	(___fldiv@a+2)^0,7,c
  3325   000B16  EF8F  F005         	goto	u2461
  3326   000B1A  EF91  F005         	goto	u2460
  3327   000B1E                     u2461:
  3328   000B1E  EF92  F005         	goto	l3144
  3329   000B22                     u2460:
  3330   000B22  802F               	bsf	___fldiv@aexp^0,0,c
  3331   000B24                     l3144:
  3332   000B24  502F               	movf	___fldiv@aexp^0,w,c
  3333   000B26  B4D8               	btfsc	status,2,c
  3334   000B28  EF98  F005         	goto	u2471
  3335   000B2C  EF9A  F005         	goto	u2470
  3336   000B30                     u2471:
  3337   000B30  EFAF  F005         	goto	l3154
  3338   000B34                     u2470:
  3339   000B34  282F               	incf	___fldiv@aexp^0,w,c
  3340   000B36  A4D8               	btfss	status,2,c
  3341   000B38  EFA0  F005         	goto	u2481
  3342   000B3C  EFA2  F005         	goto	u2480
  3343   000B40                     u2481:
  3344   000B40  EFAA  F005         	goto	l3150
  3345   000B44                     u2480:
  3346   000B44  0E00               	movlw	0
  3347   000B46  6E1B               	movwf	___fldiv@a^0,c
  3348   000B48  0E00               	movlw	0
  3349   000B4A  6E1C               	movwf	(___fldiv@a+1)^0,c
  3350   000B4C  0E00               	movlw	0
  3351   000B4E  6E1D               	movwf	(___fldiv@a+2)^0,c
  3352   000B50  0E00               	movlw	0
  3353   000B52  6E1E               	movwf	(___fldiv@a+3)^0,c
  3354   000B54                     l3150:
  3355   000B54  8E1D               	bsf	(___fldiv@a+2)^0,7,c
  3356   000B56  0E00               	movlw	0
  3357   000B58  6E1E               	movwf	(___fldiv@a+3)^0,c
  3358   000B5A  EFB7  F005         	goto	l3156
  3359   000B5E                     l3154:
  3360   000B5E  0E00               	movlw	0
  3361   000B60  6E1B               	movwf	___fldiv@a^0,c
  3362   000B62  0E00               	movlw	0
  3363   000B64  6E1C               	movwf	(___fldiv@a+1)^0,c
  3364   000B66  0E00               	movlw	0
  3365   000B68  6E1D               	movwf	(___fldiv@a+2)^0,c
  3366   000B6A  0E00               	movlw	0
  3367   000B6C  6E1E               	movwf	(___fldiv@a+3)^0,c
  3368   000B6E                     l3156:
  3369   000B6E  501B               	movf	___fldiv@a^0,w,c
  3370   000B70  101C               	iorwf	(___fldiv@a+1)^0,w,c
  3371   000B72  101D               	iorwf	(___fldiv@a+2)^0,w,c
  3372   000B74  101E               	iorwf	(___fldiv@a+3)^0,w,c
  3373   000B76  A4D8               	btfss	status,2,c
  3374   000B78  EFC0  F005         	goto	u2491
  3375   000B7C  EFC2  F005         	goto	u2490
  3376   000B80                     u2491:
  3377   000B80  EFDA  F005         	goto	l3168
  3378   000B84                     u2490:
  3379   000B84  0E00               	movlw	0
  3380   000B86  6E17               	movwf	___fldiv@b^0,c
  3381   000B88  0E00               	movlw	0
  3382   000B8A  6E18               	movwf	(___fldiv@b+1)^0,c
  3383   000B8C  0E00               	movlw	0
  3384   000B8E  6E19               	movwf	(___fldiv@b+2)^0,c
  3385   000B90  0E00               	movlw	0
  3386   000B92  6E1A               	movwf	(___fldiv@b+3)^0,c
  3387   000B94  0E80               	movlw	128
  3388   000B96  1219               	iorwf	(___fldiv@b+2)^0,f,c
  3389   000B98  0E7F               	movlw	127
  3390   000B9A  121A               	iorwf	(___fldiv@b+3)^0,f,c
  3391   000B9C                     l3162:
  3392   000B9C  5027               	movf	___fldiv@sign^0,w,c
  3393   000B9E  121A               	iorwf	(___fldiv@b+3)^0,f,c
  3394   000BA0  C017  F017         	movff	___fldiv@b,?___fldiv
  3395   000BA4  C018  F018         	movff	___fldiv@b+1,?___fldiv+1
  3396   000BA8  C019  F019         	movff	___fldiv@b+2,?___fldiv+2
  3397   000BAC  C01A  F01A         	movff	___fldiv@b+3,?___fldiv+3
  3398   000BB0  EF1D  F007         	goto	l1249
  3399   000BB4                     l3168:
  3400   000BB4  502E               	movf	___fldiv@bexp^0,w,c
  3401   000BB6  A4D8               	btfss	status,2,c
  3402   000BB8  EFE0  F005         	goto	u2501
  3403   000BBC  EFE2  F005         	goto	u2500
  3404   000BC0                     u2501:
  3405   000BC0  EFEC  F005         	goto	l3176
  3406   000BC4                     u2500:
  3407   000BC4  0E00               	movlw	0
  3408   000BC6  6E17               	movwf	?___fldiv^0,c
  3409   000BC8  0E00               	movlw	0
  3410   000BCA  6E18               	movwf	(?___fldiv+1)^0,c
  3411   000BCC  0E00               	movlw	0
  3412   000BCE  6E19               	movwf	(?___fldiv+2)^0,c
  3413   000BD0  0E00               	movlw	0
  3414   000BD2  6E1A               	movwf	(?___fldiv+3)^0,c
  3415   000BD4  EF1D  F007         	goto	l1249
  3416   000BD8                     l3176:
  3417   000BD8  502F               	movf	___fldiv@aexp^0,w,c
  3418   000BDA  C02E  F01F         	movff	___fldiv@bexp,??___fldiv
  3419   000BDE  6A20               	clrf	(??___fldiv+1)^0,c
  3420   000BE0  5E1F               	subwf	??___fldiv^0,f,c
  3421   000BE2  0E00               	movlw	0
  3422   000BE4  5A20               	subwfb	(??___fldiv+1)^0,f,c
  3423   000BE6  0E7F               	movlw	127
  3424   000BE8  241F               	addwf	??___fldiv^0,w,c
  3425   000BEA  6E28               	movwf	___fldiv@new_exp^0,c
  3426   000BEC  0E00               	movlw	0
  3427   000BEE  2020               	addwfc	(??___fldiv+1)^0,w,c
  3428   000BF0  6E29               	movwf	(___fldiv@new_exp+1)^0,c
  3429   000BF2  C017  F023         	movff	___fldiv@b,___fldiv@rem
  3430   000BF6  C018  F024         	movff	___fldiv@b+1,___fldiv@rem+1
  3431   000BFA  C019  F025         	movff	___fldiv@b+2,___fldiv@rem+2
  3432   000BFE  C01A  F026         	movff	___fldiv@b+3,___fldiv@rem+3
  3433   000C02  0E00               	movlw	0
  3434   000C04  6E17               	movwf	___fldiv@b^0,c
  3435   000C06  0E00               	movlw	0
  3436   000C08  6E18               	movwf	(___fldiv@b+1)^0,c
  3437   000C0A  0E00               	movlw	0
  3438   000C0C  6E19               	movwf	(___fldiv@b+2)^0,c
  3439   000C0E  0E00               	movlw	0
  3440   000C10  6E1A               	movwf	(___fldiv@b+3)^0,c
  3441   000C12  0E00               	movlw	0
  3442   000C14  6E2A               	movwf	___fldiv@grs^0,c
  3443   000C16  0E00               	movlw	0
  3444   000C18  6E2B               	movwf	(___fldiv@grs+1)^0,c
  3445   000C1A  0E00               	movlw	0
  3446   000C1C  6E2C               	movwf	(___fldiv@grs+2)^0,c
  3447   000C1E  0E00               	movlw	0
  3448   000C20  6E2D               	movwf	(___fldiv@grs+3)^0,c
  3449   000C22  0E00               	movlw	0
  3450   000C24  6E2F               	movwf	___fldiv@aexp^0,c
  3451   000C26  EF4D  F006         	goto	l1251
  3452   000C2A                     l3186:
  3453   000C2A  502F               	movf	___fldiv@aexp^0,w,c
  3454   000C2C  B4D8               	btfsc	status,2,c
  3455   000C2E  EF1B  F006         	goto	u2511
  3456   000C32  EF1D  F006         	goto	u2510
  3457   000C36                     u2511:
  3458   000C36  EF34  F006         	goto	l3194
  3459   000C3A                     u2510:
  3460   000C3A  90D8               	bcf	status,0,c
  3461   000C3C  3623               	rlcf	___fldiv@rem^0,f,c
  3462   000C3E  3624               	rlcf	(___fldiv@rem+1)^0,f,c
  3463   000C40  3625               	rlcf	(___fldiv@rem+2)^0,f,c
  3464   000C42  3626               	rlcf	(___fldiv@rem+3)^0,f,c
  3465   000C44  90D8               	bcf	status,0,c
  3466   000C46  3617               	rlcf	___fldiv@b^0,f,c
  3467   000C48  3618               	rlcf	(___fldiv@b+1)^0,f,c
  3468   000C4A  3619               	rlcf	(___fldiv@b+2)^0,f,c
  3469   000C4C  361A               	rlcf	(___fldiv@b+3)^0,f,c
  3470   000C4E  AE2D               	btfss	(___fldiv@grs+3)^0,7,c
  3471   000C50  EF2C  F006         	goto	u2521
  3472   000C54  EF2E  F006         	goto	u2520
  3473   000C58                     u2521:
  3474   000C58  EF2F  F006         	goto	l1254
  3475   000C5C                     u2520:
  3476   000C5C  8017               	bsf	___fldiv@b^0,0,c
  3477   000C5E                     l1254:
  3478   000C5E  90D8               	bcf	status,0,c
  3479   000C60  362A               	rlcf	___fldiv@grs^0,f,c
  3480   000C62  362B               	rlcf	(___fldiv@grs+1)^0,f,c
  3481   000C64  362C               	rlcf	(___fldiv@grs+2)^0,f,c
  3482   000C66  362D               	rlcf	(___fldiv@grs+3)^0,f,c
  3483   000C68                     l3194:
  3484   000C68  501B               	movf	___fldiv@a^0,w,c
  3485   000C6A  5C23               	subwf	___fldiv@rem^0,w,c
  3486   000C6C  501C               	movf	(___fldiv@a+1)^0,w,c
  3487   000C6E  5824               	subwfb	(___fldiv@rem+1)^0,w,c
  3488   000C70  501D               	movf	(___fldiv@a+2)^0,w,c
  3489   000C72  5825               	subwfb	(___fldiv@rem+2)^0,w,c
  3490   000C74  501E               	movf	(___fldiv@a+3)^0,w,c
  3491   000C76  5826               	subwfb	(___fldiv@rem+3)^0,w,c
  3492   000C78  A0D8               	btfss	status,0,c
  3493   000C7A  EF41  F006         	goto	u2531
  3494   000C7E  EF43  F006         	goto	u2530
  3495   000C82                     u2531:
  3496   000C82  EF4C  F006         	goto	l3200
  3497   000C86                     u2530:
  3498   000C86  8C2D               	bsf	(___fldiv@grs+3)^0,6,c
  3499   000C88  501B               	movf	___fldiv@a^0,w,c
  3500   000C8A  5E23               	subwf	___fldiv@rem^0,f,c
  3501   000C8C  501C               	movf	(___fldiv@a+1)^0,w,c
  3502   000C8E  5A24               	subwfb	(___fldiv@rem+1)^0,f,c
  3503   000C90  501D               	movf	(___fldiv@a+2)^0,w,c
  3504   000C92  5A25               	subwfb	(___fldiv@rem+2)^0,f,c
  3505   000C94  501E               	movf	(___fldiv@a+3)^0,w,c
  3506   000C96  5A26               	subwfb	(___fldiv@rem+3)^0,f,c
  3507   000C98                     l3200:
  3508   000C98  2A2F               	incf	___fldiv@aexp^0,f,c
  3509   000C9A                     l1251:
  3510   000C9A  0E19               	movlw	25
  3511   000C9C  642F               	cpfsgt	___fldiv@aexp^0,c
  3512   000C9E  EF53  F006         	goto	u2541
  3513   000CA2  EF55  F006         	goto	u2540
  3514   000CA6                     u2541:
  3515   000CA6  EF15  F006         	goto	l3186
  3516   000CAA                     u2540:
  3517   000CAA  5023               	movf	___fldiv@rem^0,w,c
  3518   000CAC  1024               	iorwf	(___fldiv@rem+1)^0,w,c
  3519   000CAE  1025               	iorwf	(___fldiv@rem+2)^0,w,c
  3520   000CB0  1026               	iorwf	(___fldiv@rem+3)^0,w,c
  3521   000CB2  B4D8               	btfsc	status,2,c
  3522   000CB4  EF5E  F006         	goto	u2551
  3523   000CB8  EF60  F006         	goto	u2550
  3524   000CBC                     u2551:
  3525   000CBC  EF78  F006         	goto	l3212
  3526   000CC0                     u2550:
  3527   000CC0  802A               	bsf	___fldiv@grs^0,0,c
  3528   000CC2  EF78  F006         	goto	l3212
  3529   000CC6                     l3206:
  3530   000CC6  90D8               	bcf	status,0,c
  3531   000CC8  3617               	rlcf	___fldiv@b^0,f,c
  3532   000CCA  3618               	rlcf	(___fldiv@b+1)^0,f,c
  3533   000CCC  3619               	rlcf	(___fldiv@b+2)^0,f,c
  3534   000CCE  361A               	rlcf	(___fldiv@b+3)^0,f,c
  3535   000CD0  AE2D               	btfss	(___fldiv@grs+3)^0,7,c
  3536   000CD2  EF6D  F006         	goto	u2561
  3537   000CD6  EF6F  F006         	goto	u2560
  3538   000CDA                     u2561:
  3539   000CDA  EF70  F006         	goto	l1260
  3540   000CDE                     u2560:
  3541   000CDE  8017               	bsf	___fldiv@b^0,0,c
  3542   000CE0                     l1260:
  3543   000CE0  90D8               	bcf	status,0,c
  3544   000CE2  362A               	rlcf	___fldiv@grs^0,f,c
  3545   000CE4  362B               	rlcf	(___fldiv@grs+1)^0,f,c
  3546   000CE6  362C               	rlcf	(___fldiv@grs+2)^0,f,c
  3547   000CE8  362D               	rlcf	(___fldiv@grs+3)^0,f,c
  3548   000CEA  0628               	decf	___fldiv@new_exp^0,f,c
  3549   000CEC  A0D8               	btfss	status,0,c
  3550   000CEE  0629               	decf	(___fldiv@new_exp+1)^0,f,c
  3551   000CF0                     l3212:
  3552   000CF0  AE19               	btfss	(___fldiv@b+2)^0,7,c
  3553   000CF2  EF7D  F006         	goto	u2571
  3554   000CF6  EF7F  F006         	goto	u2570
  3555   000CFA                     u2571:
  3556   000CFA  EF63  F006         	goto	l3206
  3557   000CFE                     u2570:
  3558   000CFE  0E00               	movlw	0
  3559   000D00  6E2F               	movwf	___fldiv@aexp^0,c
  3560   000D02  AE2D               	btfss	(___fldiv@grs+3)^0,7,c
  3561   000D04  EF86  F006         	goto	u2581
  3562   000D08  EF88  F006         	goto	u2580
  3563   000D0C                     u2581:
  3564   000D0C  EFAC  F006         	goto	l1262
  3565   000D10                     u2580:
  3566   000D10  0EFF               	movlw	255
  3567   000D12  142A               	andwf	___fldiv@grs^0,w,c
  3568   000D14  6E1F               	movwf	??___fldiv^0,c
  3569   000D16  0EFF               	movlw	255
  3570   000D18  142B               	andwf	(___fldiv@grs+1)^0,w,c
  3571   000D1A  6E20               	movwf	(??___fldiv+1)^0,c
  3572   000D1C  0EFF               	movlw	255
  3573   000D1E  142C               	andwf	(___fldiv@grs+2)^0,w,c
  3574   000D20  6E21               	movwf	(??___fldiv+2)^0,c
  3575   000D22  0E7F               	movlw	127
  3576   000D24  142D               	andwf	(___fldiv@grs+3)^0,w,c
  3577   000D26  6E22               	movwf	(??___fldiv+3)^0,c
  3578   000D28  501F               	movf	??___fldiv^0,w,c
  3579   000D2A  1020               	iorwf	(??___fldiv+1)^0,w,c
  3580   000D2C  1021               	iorwf	(??___fldiv+2)^0,w,c
  3581   000D2E  1022               	iorwf	(??___fldiv+3)^0,w,c
  3582   000D30  B4D8               	btfsc	status,2,c
  3583   000D32  EF9D  F006         	goto	u2591
  3584   000D36  EF9F  F006         	goto	u2590
  3585   000D3A                     u2591:
  3586   000D3A  EFA3  F006         	goto	l1263
  3587   000D3E                     u2590:
  3588   000D3E                     l3220:
  3589   000D3E  0E01               	movlw	1
  3590   000D40  6E2F               	movwf	___fldiv@aexp^0,c
  3591   000D42  EFAC  F006         	goto	l1262
  3592   000D46                     l1263:
  3593   000D46  A017               	btfss	___fldiv@b^0,0,c
  3594   000D48  EFA8  F006         	goto	u2601
  3595   000D4C  EFAA  F006         	goto	u2600
  3596   000D50                     u2601:
  3597   000D50  EFAC  F006         	goto	l1262
  3598   000D54                     u2600:
  3599   000D54  EF9F  F006         	goto	l3220
  3600   000D58                     l1262:
  3601   000D58  502F               	movf	___fldiv@aexp^0,w,c
  3602   000D5A  B4D8               	btfsc	status,2,c
  3603   000D5C  EFB2  F006         	goto	u2611
  3604   000D60  EFB4  F006         	goto	u2610
  3605   000D64                     u2611:
  3606   000D64  EFD8  F006         	goto	l3232
  3607   000D68                     u2610:
  3608   000D68  0E01               	movlw	1
  3609   000D6A  2617               	addwf	___fldiv@b^0,f,c
  3610   000D6C  0E00               	movlw	0
  3611   000D6E  2218               	addwfc	(___fldiv@b+1)^0,f,c
  3612   000D70  2219               	addwfc	(___fldiv@b+2)^0,f,c
  3613   000D72  221A               	addwfc	(___fldiv@b+3)^0,f,c
  3614   000D74  A01A               	btfss	(___fldiv@b+3)^0,0,c
  3615   000D76  EFBF  F006         	goto	u2621
  3616   000D7A  EFC1  F006         	goto	u2620
  3617   000D7E                     u2621:
  3618   000D7E  EFD8  F006         	goto	l3232
  3619   000D82                     u2620:
  3620   000D82  C017  F01F         	movff	___fldiv@b,??___fldiv
  3621   000D86  C018  F020         	movff	___fldiv@b+1,??___fldiv+1
  3622   000D8A  C019  F021         	movff	___fldiv@b+2,??___fldiv+2
  3623   000D8E  C01A  F022         	movff	___fldiv@b+3,??___fldiv+3
  3624   000D92  3422               	rlcf	(??___fldiv+3)^0,w,c
  3625   000D94  3222               	rrcf	(??___fldiv+3)^0,f,c
  3626   000D96  3221               	rrcf	(??___fldiv+2)^0,f,c
  3627   000D98  3220               	rrcf	(??___fldiv+1)^0,f,c
  3628   000D9A  321F               	rrcf	??___fldiv^0,f,c
  3629   000D9C  C01F  F017         	movff	??___fldiv,___fldiv@b
  3630   000DA0  C020  F018         	movff	??___fldiv+1,___fldiv@b+1
  3631   000DA4  C021  F019         	movff	??___fldiv+2,___fldiv@b+2
  3632   000DA8  C022  F01A         	movff	??___fldiv+3,___fldiv@b+3
  3633   000DAC  4A28               	infsnz	___fldiv@new_exp^0,f,c
  3634   000DAE  2A29               	incf	(___fldiv@new_exp+1)^0,f,c
  3635   000DB0                     l3232:
  3636   000DB0  BE29               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3637   000DB2  EFE3  F006         	goto	u2631
  3638   000DB6  5029               	movf	(___fldiv@new_exp+1)^0,w,c
  3639   000DB8  E108               	bnz	u2630
  3640   000DBA  2828               	incf	___fldiv@new_exp^0,w,c
  3641   000DBC  A0D8               	btfss	status,0,c
  3642   000DBE  EFE3  F006         	goto	u2631
  3643   000DC2  EFE5  F006         	goto	u2630
  3644   000DC6                     u2631:
  3645   000DC6  EFF0  F006         	goto	l3236
  3646   000DCA                     u2630:
  3647   000DCA  0E00               	movlw	0
  3648   000DCC  6E29               	movwf	(___fldiv@new_exp+1)^0,c
  3649   000DCE  6828               	setf	___fldiv@new_exp^0,c
  3650   000DD0  0E00               	movlw	0
  3651   000DD2  6E17               	movwf	___fldiv@b^0,c
  3652   000DD4  0E00               	movlw	0
  3653   000DD6  6E18               	movwf	(___fldiv@b+1)^0,c
  3654   000DD8  0E00               	movlw	0
  3655   000DDA  6E19               	movwf	(___fldiv@b+2)^0,c
  3656   000DDC  0E00               	movlw	0
  3657   000DDE  6E1A               	movwf	(___fldiv@b+3)^0,c
  3658   000DE0                     l3236:
  3659   000DE0  BE29               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3660   000DE2  EFFD  F006         	goto	u2640
  3661   000DE6  5029               	movf	(___fldiv@new_exp+1)^0,w,c
  3662   000DE8  E106               	bnz	u2641
  3663   000DEA  0428               	decf	___fldiv@new_exp^0,w,c
  3664   000DEC  B0D8               	btfsc	status,0,c
  3665   000DEE  EFFB  F006         	goto	u2641
  3666   000DF2  EFFD  F006         	goto	u2640
  3667   000DF6                     u2641:
  3668   000DF6  EF0B  F007         	goto	l3240
  3669   000DFA                     u2640:
  3670   000DFA  0E00               	movlw	0
  3671   000DFC  6E29               	movwf	(___fldiv@new_exp+1)^0,c
  3672   000DFE  0E00               	movlw	0
  3673   000E00  6E28               	movwf	___fldiv@new_exp^0,c
  3674   000E02  0E00               	movlw	0
  3675   000E04  6E17               	movwf	___fldiv@b^0,c
  3676   000E06  0E00               	movlw	0
  3677   000E08  6E18               	movwf	(___fldiv@b+1)^0,c
  3678   000E0A  0E00               	movlw	0
  3679   000E0C  6E19               	movwf	(___fldiv@b+2)^0,c
  3680   000E0E  0E00               	movlw	0
  3681   000E10  6E1A               	movwf	(___fldiv@b+3)^0,c
  3682   000E12  0E00               	movlw	0
  3683   000E14  6E27               	movwf	___fldiv@sign^0,c
  3684   000E16                     l3240:
  3685   000E16  C028  F02E         	movff	___fldiv@new_exp,___fldiv@bexp
  3686   000E1A  A02E               	btfss	___fldiv@bexp^0,0,c
  3687   000E1C  EF12  F007         	goto	u2651
  3688   000E20  EF14  F007         	goto	u2650
  3689   000E24                     u2651:
  3690   000E24  EF17  F007         	goto	l3246
  3691   000E28                     u2650:
  3692   000E28  8E19               	bsf	(___fldiv@b+2)^0,7,c
  3693   000E2A  EF18  F007         	goto	l3248
  3694   000E2E                     l3246:
  3695   000E2E  9E19               	bcf	(___fldiv@b+2)^0,7,c
  3696   000E30                     l3248:
  3697   000E30  90D8               	bcf	status,0,c
  3698   000E32  302E               	rrcf	___fldiv@bexp^0,w,c
  3699   000E34  6E1A               	movwf	(___fldiv@b+3)^0,c
  3700   000E36  EFCE  F005         	goto	l3162
  3701   000E3A                     l1249:
  3702   000E3A  0012               	return		;funcret
  3703   000E3C                     __end_of___fldiv:
  3704                           	callstack 0
  3705                           
  3706 ;; *************** function _color_click_init *****************
  3707 ;; Defined at:
  3708 ;;		line 6 in file "color.c"
  3709 ;; Parameters:    Size  Location     Type
  3710 ;;		None
  3711 ;; Auto vars:     Size  Location     Type
  3712 ;;		None
  3713 ;; Return value:  Size  Location     Type
  3714 ;;                  1    wreg      void 
  3715 ;; Registers used:
  3716 ;;		wreg, status,2, status,0, cstack
  3717 ;; Tracked objects:
  3718 ;;		On entry : 0/0
  3719 ;;		On exit  : 0/0
  3720 ;;		Unchanged: 0/0
  3721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3724 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3725 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3726 ;;Total ram usage:        1 bytes
  3727 ;; Hardware stack levels used: 1
  3728 ;; Hardware stack levels required when called: 10
  3729 ;; This function calls:
  3730 ;;		_I2C_2_Master_Init
  3731 ;;		_color_writetoaddr
  3732 ;; This function is called by:
  3733 ;;		_main
  3734 ;; This function uses a non-reentrant model
  3735 ;;
  3736                           
  3737                           	psect	text7
  3738   002556                     __ptext7:
  3739                           	callstack 0
  3740   002556                     _color_click_init:
  3741                           	callstack 20
  3742   002556                     
  3743                           ;color.c: 9:     I2C_2_Master_Init();
  3744   002556  ECDE  F012         	call	_I2C_2_Master_Init	;wreg free
  3745   00255A                     
  3746                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  3747   00255A  0E01               	movlw	1
  3748   00255C  6E0B               	movwf	color_writetoaddr@value^0,c
  3749   00255E  0E00               	movlw	0
  3750   002560  EC74  F013         	call	_color_writetoaddr
  3751   002564                     
  3752                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3753   002564  0E3F               	movlw	63
  3754   002566  6E0D               	movwf	??_color_click_init^0,c
  3755   002568  0E55               	movlw	85
  3756   00256A                     u4337:
  3757   00256A  2EE8               	decfsz	wreg,f,c
  3758   00256C  D7FE               	bra	u4337
  3759   00256E  2E0D               	decfsz	??_color_click_init^0,f,c
  3760   002570  D7FC               	bra	u4337
  3761   002572  F000               	nop	
  3762   002574                     
  3763                           ;color.c: 16:  color_writetoaddr(0x00, 0x03);
  3764   002574  0E03               	movlw	3
  3765   002576  6E0B               	movwf	color_writetoaddr@value^0,c
  3766   002578  0E00               	movlw	0
  3767   00257A  EC74  F013         	call	_color_writetoaddr
  3768   00257E                     
  3769                           ;color.c: 19:  color_writetoaddr(0x01, 0xD5);
  3770   00257E  0ED5               	movlw	213
  3771   002580  6E0B               	movwf	color_writetoaddr@value^0,c
  3772   002582  0E01               	movlw	1
  3773   002584  EC74  F013         	call	_color_writetoaddr
  3774   002588  0012               	return		;funcret
  3775   00258A                     __end_of_color_click_init:
  3776                           	callstack 0
  3777                           
  3778 ;; *************** function _I2C_2_Master_Init *****************
  3779 ;; Defined at:
  3780 ;;		line 4 in file "i2c.c"
  3781 ;; Parameters:    Size  Location     Type
  3782 ;;		None
  3783 ;; Auto vars:     Size  Location     Type
  3784 ;;		None
  3785 ;; Return value:  Size  Location     Type
  3786 ;;                  1    wreg      void 
  3787 ;; Registers used:
  3788 ;;		wreg, status,2
  3789 ;; Tracked objects:
  3790 ;;		On entry : 0/0
  3791 ;;		On exit  : 0/0
  3792 ;;		Unchanged: 0/0
  3793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3798 ;;Total ram usage:        0 bytes
  3799 ;; Hardware stack levels used: 1
  3800 ;; Hardware stack levels required when called: 7
  3801 ;; This function calls:
  3802 ;;		Nothing
  3803 ;; This function is called by:
  3804 ;;		_color_click_init
  3805 ;; This function uses a non-reentrant model
  3806 ;;
  3807                           
  3808                           	psect	text8
  3809   0025BC                     __ptext8:
  3810                           	callstack 0
  3811   0025BC                     _I2C_2_Master_Init:
  3812                           	callstack 22
  3813   0025BC                     
  3814                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3815   0025BC  010E               	movlb	14	; () banked
  3816   0025BE  51D9               	movf	217,w,b	;volatile
  3817   0025C0  0BF0               	andlw	-16
  3818   0025C2  0908               	iorlw	8
  3819   0025C4  6FD9               	movwf	217,b	;volatile
  3820   0025C6                     
  3821                           ; BSR set to: 14
  3822                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3823   0025C6  8BD9               	bsf	217,5,b	;volatile
  3824                           
  3825                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3826   0025C8  0E9F               	movlw	159
  3827   0025CA  6FD6               	movwf	214,b	;volatile
  3828   0025CC                     
  3829                           ; BSR set to: 14
  3830                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3831   0025CC  8A84               	bsf	132,5,c	;volatile
  3832   0025CE                     
  3833                           ; BSR set to: 14
  3834                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3835   0025CE  8C84               	bsf	132,6,c	;volatile
  3836   0025D0                     
  3837                           ; BSR set to: 14
  3838                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3839   0025D0  9BA7               	bcf	167,5,b	;volatile
  3840   0025D2                     
  3841                           ; BSR set to: 14
  3842                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3843   0025D2  9DA7               	bcf	167,6,b	;volatile
  3844                           
  3845                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3846   0025D4  0E1D               	movlw	29
  3847   0025D6  6F1D               	movwf	29,b	;volatile
  3848                           
  3849                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3850   0025D8  0E1E               	movlw	30
  3851   0025DA  6F1C               	movwf	28,b	;volatile
  3852                           
  3853                           ;i2c.c: 18:   RD5PPS=0x1C;
  3854   0025DC  0E1C               	movlw	28
  3855   0025DE  6F6F               	movwf	111,b	;volatile
  3856                           
  3857                           ;i2c.c: 19:   RD6PPS=0x1B;
  3858   0025E0  0E1B               	movlw	27
  3859   0025E2  6F70               	movwf	112,b	;volatile
  3860   0025E4                     
  3861                           ; BSR set to: 14
  3862   0025E4  0012               	return		;funcret
  3863   0025E6                     __end_of_I2C_2_Master_Init:
  3864                           	callstack 0
  3865                           
  3866 ;; *************** function _WhiteLight *****************
  3867 ;; Defined at:
  3868 ;;		line 20 in file "LED_Buttons.c"
  3869 ;; Parameters:    Size  Location     Type
  3870 ;;		None
  3871 ;; Auto vars:     Size  Location     Type
  3872 ;;		None
  3873 ;; Return value:  Size  Location     Type
  3874 ;;                  1    wreg      void 
  3875 ;; Registers used:
  3876 ;;		None
  3877 ;; Tracked objects:
  3878 ;;		On entry : 0/0
  3879 ;;		On exit  : 0/0
  3880 ;;		Unchanged: 0/0
  3881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3886 ;;Total ram usage:        0 bytes
  3887 ;; Hardware stack levels used: 1
  3888 ;; Hardware stack levels required when called: 7
  3889 ;; This function calls:
  3890 ;;		Nothing
  3891 ;; This function is called by:
  3892 ;;		_main
  3893 ;; This function uses a non-reentrant model
  3894 ;;
  3895                           
  3896                           	psect	text9
  3897   0027D6                     __ptext9:
  3898                           	callstack 0
  3899   0027D6                     _WhiteLight:
  3900                           	callstack 23
  3901   0027D6                     
  3902                           ;LED_Buttons.c: 21:     LATGbits.LATG1 = 1;
  3903   0027D6  827F               	bsf	127,1,c	;volatile
  3904                           
  3905                           ;LED_Buttons.c: 22:     LATAbits.LATA4 = 1;
  3906   0027D8  8879               	bsf	121,4,c	;volatile
  3907                           
  3908                           ;LED_Buttons.c: 23:     LATFbits.LATF7 = 1;
  3909   0027DA  8E7E               	bsf	126,7,c	;volatile
  3910   0027DC  0012               	return		;funcret
  3911   0027DE                     __end_of_WhiteLight:
  3912                           	callstack 0
  3913                           
  3914 ;; *************** function _WhiteInstructions *****************
  3915 ;; Defined at:
  3916 ;;		line 119 in file "color_instructions.c"
  3917 ;; Parameters:    Size  Location     Type
  3918 ;;  mL              2   51[COMRAM] PTR struct DC_motor
  3919 ;;		 -> main@motorL(9), 
  3920 ;;  mR              2   53[COMRAM] PTR struct DC_motor
  3921 ;;		 -> main@motorR(9), 
  3922 ;; Auto vars:     Size  Location     Type
  3923 ;;  a               2   60[COMRAM] unsigned int 
  3924 ;;  c               2   57[COMRAM] unsigned int 
  3925 ;;  anticolor       1   59[COMRAM] unsigned char 
  3926 ;; Return value:  Size  Location     Type
  3927 ;;                  1    wreg      void 
  3928 ;; Registers used:
  3929 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3930 ;; Tracked objects:
  3931 ;;		On entry : 0/0
  3932 ;;		On exit  : 0/0
  3933 ;;		Unchanged: 0/0
  3934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3935 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3936 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3937 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3938 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3939 ;;Total ram usage:       11 bytes
  3940 ;; Hardware stack levels used: 1
  3941 ;; Hardware stack levels required when called: 13
  3942 ;; This function calls:
  3943 ;;		_BlueInstructions
  3944 ;;		_MoveBuggy
  3945 ;;		_Return_Anti_Moves
  3946 ;;		_Return_Time
  3947 ;;		_fullSpeedAhead
  3948 ;;		_stop
  3949 ;; This function is called by:
  3950 ;;		_main
  3951 ;; This function uses a non-reentrant model
  3952 ;;
  3953                           
  3954                           	psect	text10
  3955   001A58                     __ptext10:
  3956                           	callstack 0
  3957   001A58                     _WhiteInstructions:
  3958                           	callstack 17
  3959   001A58                     
  3960                           ;color_instructions.c: 121:     BlueInstructions(mL,mR);
  3961   001A58  C034  F027         	movff	WhiteInstructions@mL,BlueInstructions@mL
  3962   001A5C  C035  F028         	movff	WhiteInstructions@mL+1,BlueInstructions@mL+1
  3963   001A60  C036  F029         	movff	WhiteInstructions@mR,BlueInstructions@mR
  3964   001A64  C037  F02A         	movff	WhiteInstructions@mR+1,BlueInstructions@mR+1
  3965   001A68  EC0B  F00E         	call	_BlueInstructions	;wreg free
  3966                           
  3967                           ;color_instructions.c: 123:     while(time_index>0){
  3968   001A6C  EF97  F00D         	goto	l3720
  3969   001A70                     l3700:
  3970                           
  3971                           ; BSR set to: 0
  3972                           ;color_instructions.c: 125:         unsigned int a = 0;
  3973   001A70  0E00               	movlw	0
  3974   001A72  6E3E               	movwf	(WhiteInstructions@a+1)^0,c
  3975   001A74  0E00               	movlw	0
  3976   001A76  6E3D               	movwf	WhiteInstructions@a^0,c
  3977   001A78                     
  3978                           ; BSR set to: 0
  3979                           ;color_instructions.c: 126:         unsigned int c = Return_Time(&time_index,time_array)
      +                          ;
  3980   001A78  0E9D               	movlw	low _time_index
  3981   001A7A  6E09               	movwf	Return_Time@time_index^0,c
  3982   001A7C  0E00               	movlw	high _time_index
  3983   001A7E  6E0A               	movwf	(Return_Time@time_index+1)^0,c
  3984   001A80  0E3C               	movlw	low _time_array
  3985   001A82  6E0B               	movwf	Return_Time@time_array^0,c
  3986   001A84  0E01               	movlw	high _time_array
  3987   001A86  6E0C               	movwf	(Return_Time@time_array+1)^0,c
  3988   001A88  EC8F  F012         	call	_Return_Time	;wreg free
  3989   001A8C  C009  F03A         	movff	?_Return_Time,WhiteInstructions@c
  3990   001A90  C00A  F03B         	movff	?_Return_Time+1,WhiteInstructions@c+1
  3991                           
  3992                           ;color_instructions.c: 127:         while(a<c){
  3993   001A94  EF58  F00D         	goto	l3708
  3994   001A98                     l3704:
  3995                           
  3996                           ;color_instructions.c: 128:             fullSpeedAhead(mL,mR);
  3997   001A98  C034  F01C         	movff	WhiteInstructions@mL,fullSpeedAhead@mL
  3998   001A9C  C035  F01D         	movff	WhiteInstructions@mL+1,fullSpeedAhead@mL+1
  3999   001AA0  C036  F01E         	movff	WhiteInstructions@mR,fullSpeedAhead@mR
  4000   001AA4  C037  F01F         	movff	WhiteInstructions@mR+1,fullSpeedAhead@mR+1
  4001   001AA8  EC50  F00B         	call	_fullSpeedAhead	;wreg free
  4002   001AAC                     
  4003                           ;color_instructions.c: 129:             a++;
  4004   001AAC  4A3D               	infsnz	WhiteInstructions@a^0,f,c
  4005   001AAE  2A3E               	incf	(WhiteInstructions@a+1)^0,f,c
  4006   001AB0                     l3708:
  4007                           
  4008                           ;color_instructions.c: 127:         while(a<c){
  4009   001AB0  503A               	movf	WhiteInstructions@c^0,w,c
  4010   001AB2  5C3D               	subwf	WhiteInstructions@a^0,w,c
  4011   001AB4  503B               	movf	(WhiteInstructions@c+1)^0,w,c
  4012   001AB6  583E               	subwfb	(WhiteInstructions@a+1)^0,w,c
  4013   001AB8  A0D8               	btfss	status,0,c
  4014   001ABA  EF61  F00D         	goto	u3521
  4015   001ABE  EF63  F00D         	goto	u3520
  4016   001AC2                     u3521:
  4017   001AC2  EF4C  F00D         	goto	l3704
  4018   001AC6                     u3520:
  4019   001AC6  EF72  F00D         	goto	l3714
  4020   001ACA                     l3710:
  4021                           
  4022                           ;color_instructions.c: 133:             stop(mL,mR);
  4023   001ACA  C034  F01C         	movff	WhiteInstructions@mL,stop@mL
  4024   001ACE  C035  F01D         	movff	WhiteInstructions@mL+1,stop@mL+1
  4025   001AD2  C036  F01E         	movff	WhiteInstructions@mR,stop@mR
  4026   001AD6  C037  F01F         	movff	WhiteInstructions@mR+1,stop@mR+1
  4027   001ADA  ECA1  F00D         	call	_stop	;wreg free
  4028   001ADE                     
  4029                           ;color_instructions.c: 134:             a--;
  4030   001ADE  063D               	decf	WhiteInstructions@a^0,f,c
  4031   001AE0  A0D8               	btfss	status,0,c
  4032   001AE2  063E               	decf	(WhiteInstructions@a+1)^0,f,c
  4033   001AE4                     l3714:
  4034                           
  4035                           ;color_instructions.c: 132:         while(a>0){
  4036   001AE4  503D               	movf	WhiteInstructions@a^0,w,c
  4037   001AE6  103E               	iorwf	(WhiteInstructions@a+1)^0,w,c
  4038   001AE8  A4D8               	btfss	status,2,c
  4039   001AEA  EF79  F00D         	goto	u3531
  4040   001AEE  EF7B  F00D         	goto	u3530
  4041   001AF2                     u3531:
  4042   001AF2  EF65  F00D         	goto	l3710
  4043   001AF6                     u3530:
  4044   001AF6                     
  4045                           ;color_instructions.c: 137:         unsigned char anticolor = Return_Anti_Moves(&moves_i
      +                          ndex, anti_moves_array);
  4046   001AF6  0E56               	movlw	low _moves_index
  4047   001AF8  6E09               	movwf	Return_Anti_Moves@moves_index^0,c
  4048   001AFA  0E00               	movlw	high _moves_index
  4049   001AFC  6E0A               	movwf	(Return_Anti_Moves@moves_index+1)^0,c
  4050   001AFE  0E75               	movlw	low _anti_moves_array
  4051   001B00  6E0B               	movwf	Return_Anti_Moves@anti_moves_array^0,c
  4052   001B02  0E00               	movlw	high _anti_moves_array
  4053   001B04  6E0C               	movwf	(Return_Anti_Moves@anti_moves_array+1)^0,c
  4054   001B06  EC53  F013         	call	_Return_Anti_Moves	;wreg free
  4055   001B0A  6E3C               	movwf	WhiteInstructions@anticolor^0,c
  4056   001B0C                     
  4057                           ;color_instructions.c: 138:         MoveBuggy(anticolor,mL,mR);
  4058   001B0C  503C               	movf	WhiteInstructions@anticolor^0,w,c
  4059   001B0E  6E38               	movwf	??_WhiteInstructions^0,c
  4060   001B10  6A39               	clrf	(??_WhiteInstructions+1)^0,c
  4061   001B12  C038  F02E         	movff	??_WhiteInstructions,MoveBuggy@color_detected
  4062   001B16  C039  F02F         	movff	??_WhiteInstructions+1,MoveBuggy@color_detected+1
  4063   001B1A  C034  F030         	movff	WhiteInstructions@mL,MoveBuggy@mL
  4064   001B1E  C035  F031         	movff	WhiteInstructions@mL+1,MoveBuggy@mL+1
  4065   001B22  C036  F032         	movff	WhiteInstructions@mR,MoveBuggy@mR
  4066   001B26  C037  F033         	movff	WhiteInstructions@mR+1,MoveBuggy@mR+1
  4067   001B2A  EC48  F008         	call	_MoveBuggy	;wreg free
  4068   001B2E                     l3720:
  4069                           
  4070                           ;color_instructions.c: 123:     while(time_index>0){
  4071   001B2E  0100               	movlb	0	; () banked
  4072   001B30  519D               	movf	_time_index& (0+255),w,b
  4073   001B32  A4D8               	btfss	status,2,c
  4074   001B34  EF9E  F00D         	goto	u3541
  4075   001B38  EFA0  F00D         	goto	u3540
  4076   001B3C                     u3541:
  4077   001B3C  EF38  F00D         	goto	l3700
  4078   001B40                     u3540:
  4079   001B40                     
  4080                           ; BSR set to: 0
  4081   001B40  0012               	return		;funcret
  4082   001B42                     __end_of_WhiteInstructions:
  4083                           	callstack 0
  4084                           
  4085 ;; *************** function _fullSpeedAhead *****************
  4086 ;; Defined at:
  4087 ;;		line 151 in file "dc_motor.c"
  4088 ;; Parameters:    Size  Location     Type
  4089 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  4090 ;;		 -> main@motorL(9), 
  4091 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  4092 ;;		 -> main@motorR(9), 
  4093 ;; Auto vars:     Size  Location     Type
  4094 ;;		None
  4095 ;; Return value:  Size  Location     Type
  4096 ;;                  1    wreg      void 
  4097 ;; Registers used:
  4098 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4099 ;; Tracked objects:
  4100 ;;		On entry : 0/0
  4101 ;;		On exit  : 0/0
  4102 ;;		Unchanged: 0/0
  4103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4104 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4106 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4107 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4108 ;;Total ram usage:        6 bytes
  4109 ;; Hardware stack levels used: 1
  4110 ;; Hardware stack levels required when called: 9
  4111 ;; This function calls:
  4112 ;;		_setMotorPWM
  4113 ;; This function is called by:
  4114 ;;		_main
  4115 ;;		_WhiteInstructions
  4116 ;; This function uses a non-reentrant model
  4117 ;;
  4118                           
  4119                           	psect	text11
  4120   0016A0                     __ptext11:
  4121                           	callstack 0
  4122   0016A0                     _fullSpeedAhead:
  4123                           	callstack 21
  4124   0016A0                     
  4125                           ;dc_motor.c: 151: void fullSpeedAhead(DC_motor *mL, DC_motor *mR);dc_motor.c: 152: {;dc_
      +                          motor.c: 154:     mL->direction = 1;
  4126   0016A0  EE20 F001          	lfsr	2,1
  4127   0016A4  501C               	movf	fullSpeedAhead@mL^0,w,c
  4128   0016A6  26D9               	addwf	fsr2l,f,c
  4129   0016A8  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  4130   0016AA  22DA               	addwfc	fsr2h,f,c
  4131   0016AC  0E01               	movlw	1
  4132   0016AE  6EDF               	movwf	indf2,c
  4133                           
  4134                           ;dc_motor.c: 155:     mL->brakemode = 0;
  4135   0016B0  EE20 F002          	lfsr	2,2
  4136   0016B4  501C               	movf	fullSpeedAhead@mL^0,w,c
  4137   0016B6  26D9               	addwf	fsr2l,f,c
  4138   0016B8  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  4139   0016BA  22DA               	addwfc	fsr2h,f,c
  4140   0016BC  0E00               	movlw	0
  4141   0016BE  6EDF               	movwf	indf2,c
  4142                           
  4143                           ;dc_motor.c: 157:     mR->direction = 1;
  4144   0016C0  EE20 F001          	lfsr	2,1
  4145   0016C4  501E               	movf	fullSpeedAhead@mR^0,w,c
  4146   0016C6  26D9               	addwf	fsr2l,f,c
  4147   0016C8  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  4148   0016CA  22DA               	addwfc	fsr2h,f,c
  4149   0016CC  0E01               	movlw	1
  4150   0016CE  6EDF               	movwf	indf2,c
  4151                           
  4152                           ;dc_motor.c: 158:     mR->brakemode = 0;
  4153   0016D0  EE20 F002          	lfsr	2,2
  4154   0016D4  501E               	movf	fullSpeedAhead@mR^0,w,c
  4155   0016D6  26D9               	addwf	fsr2l,f,c
  4156   0016D8  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  4157   0016DA  22DA               	addwfc	fsr2h,f,c
  4158   0016DC  0E00               	movlw	0
  4159   0016DE  6EDF               	movwf	indf2,c
  4160                           
  4161                           ;dc_motor.c: 162:     if(mL->power>50){mL->power=50;}
  4162   0016E0  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  4163   0016E4  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  4164   0016E8  50DF               	movf	indf2,w,c
  4165   0016EA  0A80               	xorlw	128
  4166   0016EC  0F4D               	addlw	-179
  4167   0016EE  A0D8               	btfss	status,0,c
  4168   0016F0  EF7C  F00B         	goto	u2291
  4169   0016F4  EF7E  F00B         	goto	u2290
  4170   0016F8                     u2291:
  4171   0016F8  EF84  F00B         	goto	l3042
  4172   0016FC                     u2290:
  4173   0016FC  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  4174   001700  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  4175   001704  0E32               	movlw	50
  4176   001706  6EDF               	movwf	indf2,c
  4177   001708                     l3042:
  4178                           
  4179                           ;dc_motor.c: 163:     if(mR->power>55){mR->power=55;}
  4180   001708  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  4181   00170C  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  4182   001710  50DF               	movf	indf2,w,c
  4183   001712  0A80               	xorlw	128
  4184   001714  0F48               	addlw	-184
  4185   001716  A0D8               	btfss	status,0,c
  4186   001718  EF90  F00B         	goto	u2301
  4187   00171C  EF92  F00B         	goto	u2300
  4188   001720                     u2301:
  4189   001720  EF98  F00B         	goto	l3046
  4190   001724                     u2300:
  4191   001724  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  4192   001728  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  4193   00172C  0E37               	movlw	55
  4194   00172E  6EDF               	movwf	indf2,c
  4195   001730                     l3046:
  4196                           
  4197                           ;dc_motor.c: 165:     mL->power = mL->power + 5 ;
  4198   001730  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  4199   001734  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  4200   001738  50DF               	movf	indf2,w,c
  4201   00173A  0F05               	addlw	5
  4202   00173C  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  4203   001740  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  4204   001744  6EDF               	movwf	indf2,c
  4205   001746                     
  4206                           ;dc_motor.c: 166:     mR->power = mR->power + 10;
  4207   001746  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  4208   00174A  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  4209   00174E  50DF               	movf	indf2,w,c
  4210   001750  0F0A               	addlw	10
  4211   001752  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  4212   001756  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  4213   00175A  6EDF               	movwf	indf2,c
  4214   00175C                     
  4215                           ;dc_motor.c: 168:     setMotorPWM(mL);
  4216   00175C  C01C  F016         	movff	fullSpeedAhead@mL,setMotorPWM@m
  4217   001760  C01D  F017         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  4218   001764  EC16  F00A         	call	_setMotorPWM	;wreg free
  4219   001768                     
  4220                           ;dc_motor.c: 169:     setMotorPWM(mR);
  4221   001768  C01E  F016         	movff	fullSpeedAhead@mR,setMotorPWM@m
  4222   00176C  C01F  F017         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  4223   001770  EC16  F00A         	call	_setMotorPWM	;wreg free
  4224   001774                     
  4225                           ;dc_motor.c: 170:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4226   001774  0E05               	movlw	5
  4227   001776  6E21               	movwf	(??_fullSpeedAhead+1)^0,c
  4228   001778  0E0F               	movlw	15
  4229   00177A  6E20               	movwf	??_fullSpeedAhead^0,c
  4230   00177C  0EF1               	movlw	241
  4231   00177E                     u4347:
  4232   00177E  2EE8               	decfsz	wreg,f,c
  4233   001780  D7FE               	bra	u4347
  4234   001782  2E20               	decfsz	??_fullSpeedAhead^0,f,c
  4235   001784  D7FC               	bra	u4347
  4236   001786  2E21               	decfsz	(??_fullSpeedAhead+1)^0,f,c
  4237   001788  D7FA               	bra	u4347
  4238   00178A  F000               	nop	
  4239   00178C  0012               	return		;funcret
  4240   00178E                     __end_of_fullSpeedAhead:
  4241                           	callstack 0
  4242                           
  4243 ;; *************** function _Return_Time *****************
  4244 ;; Defined at:
  4245 ;;		line 40 in file "Memorization.c"
  4246 ;; Parameters:    Size  Location     Type
  4247 ;;  time_index      2    8[COMRAM] PTR unsigned char 
  4248 ;;		 -> time_index(1), 
  4249 ;;  time_array      2   10[COMRAM] PTR unsigned int 
  4250 ;;		 -> time_array(80), 
  4251 ;; Auto vars:     Size  Location     Type
  4252 ;;  temp            2   15[COMRAM] unsigned int 
  4253 ;; Return value:  Size  Location     Type
  4254 ;;                  2    8[COMRAM] unsigned int 
  4255 ;; Registers used:
  4256 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4257 ;; Tracked objects:
  4258 ;;		On entry : 0/0
  4259 ;;		On exit  : 0/0
  4260 ;;		Unchanged: 0/0
  4261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4262 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4263 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4264 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4265 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4266 ;;Total ram usage:        9 bytes
  4267 ;; Hardware stack levels used: 1
  4268 ;; Hardware stack levels required when called: 7
  4269 ;; This function calls:
  4270 ;;		Nothing
  4271 ;; This function is called by:
  4272 ;;		_WhiteInstructions
  4273 ;; This function uses a non-reentrant model
  4274 ;;
  4275                           
  4276                           	psect	text12
  4277   00251E                     __ptext12:
  4278                           	callstack 0
  4279   00251E                     _Return_Time:
  4280                           	callstack 22
  4281   00251E                     
  4282                           ;Memorization.c: 41:     unsigned int temp;;Memorization.c: 43:     temp = time_array[--
      +                          (*time_index)];
  4283   00251E  C009  FFD9         	movff	Return_Time@time_index,fsr2l
  4284   002522  C00A  FFDA         	movff	Return_Time@time_index+1,fsr2h
  4285   002526  06DF               	decf	indf2,f,c
  4286   002528  50DF               	movf	indf2,w,c
  4287   00252A  6E0D               	movwf	??_Return_Time^0,c
  4288   00252C  500D               	movf	??_Return_Time^0,w,c
  4289   00252E  0D02               	mullw	2
  4290   002530  CFF3 F00E          	movff	prodl,??_Return_Time+1
  4291   002534  CFF4 F00F          	movff	prodh,??_Return_Time+2
  4292   002538  500E               	movf	(??_Return_Time+1)^0,w,c
  4293   00253A  240B               	addwf	Return_Time@time_array^0,w,c
  4294   00253C  6ED9               	movwf	fsr2l,c
  4295   00253E  500F               	movf	(??_Return_Time+2)^0,w,c
  4296   002540  200C               	addwfc	(Return_Time@time_array+1)^0,w,c
  4297   002542  6EDA               	movwf	fsr2h,c
  4298   002544  CFDE F010          	movff	postinc2,Return_Time@temp
  4299   002548  CFDD F011          	movff	postdec2,Return_Time@temp+1
  4300   00254C                     
  4301                           ;Memorization.c: 44:     return temp;
  4302   00254C  C010  F009         	movff	Return_Time@temp,?_Return_Time
  4303   002550  C011  F00A         	movff	Return_Time@temp+1,?_Return_Time+1
  4304   002554  0012               	return		;funcret
  4305   002556                     __end_of_Return_Time:
  4306                           	callstack 0
  4307                           
  4308 ;; *************** function _Return_Anti_Moves *****************
  4309 ;; Defined at:
  4310 ;;		line 32 in file "Memorization.c"
  4311 ;; Parameters:    Size  Location     Type
  4312 ;;  moves_index     2    8[COMRAM] PTR unsigned char 
  4313 ;;		 -> moves_index(1), 
  4314 ;;  anti_moves_a    2   10[COMRAM] PTR unsigned char 
  4315 ;;		 -> anti_moves_array(40), 
  4316 ;; Auto vars:     Size  Location     Type
  4317 ;;  temp            1   13[COMRAM] unsigned char 
  4318 ;; Return value:  Size  Location     Type
  4319 ;;                  1    wreg      unsigned char 
  4320 ;; Registers used:
  4321 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4322 ;; Tracked objects:
  4323 ;;		On entry : 0/0
  4324 ;;		On exit  : 0/0
  4325 ;;		Unchanged: 0/0
  4326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4327 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4328 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4329 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4330 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4331 ;;Total ram usage:        6 bytes
  4332 ;; Hardware stack levels used: 1
  4333 ;; Hardware stack levels required when called: 7
  4334 ;; This function calls:
  4335 ;;		Nothing
  4336 ;; This function is called by:
  4337 ;;		_WhiteInstructions
  4338 ;; This function uses a non-reentrant model
  4339 ;;
  4340                           
  4341                           	psect	text13
  4342   0026A6                     __ptext13:
  4343                           	callstack 0
  4344   0026A6                     _Return_Anti_Moves:
  4345                           	callstack 22
  4346   0026A6                     
  4347                           ;Memorization.c: 33:     unsigned char temp;;Memorization.c: 35:     temp = anti_moves_a
      +                          rray[--(*moves_index)];
  4348   0026A6  C009  FFD9         	movff	Return_Anti_Moves@moves_index,fsr2l
  4349   0026AA  C00A  FFDA         	movff	Return_Anti_Moves@moves_index+1,fsr2h
  4350   0026AE  06DF               	decf	indf2,f,c
  4351   0026B0  50DF               	movf	indf2,w,c
  4352   0026B2  6E0D               	movwf	??_Return_Anti_Moves^0,c
  4353   0026B4  500D               	movf	??_Return_Anti_Moves^0,w,c
  4354   0026B6  240B               	addwf	Return_Anti_Moves@anti_moves_array^0,w,c
  4355   0026B8  6ED9               	movwf	fsr2l,c
  4356   0026BA  0E00               	movlw	0
  4357   0026BC  200C               	addwfc	(Return_Anti_Moves@anti_moves_array+1)^0,w,c
  4358   0026BE  6EDA               	movwf	fsr2h,c
  4359   0026C0  50DF               	movf	indf2,w,c
  4360   0026C2  6E0E               	movwf	Return_Anti_Moves@temp^0,c
  4361   0026C4                     
  4362                           ;Memorization.c: 36:     return temp;
  4363   0026C4  500E               	movf	Return_Anti_Moves@temp^0,w,c
  4364   0026C6  0012               	return		;funcret
  4365   0026C8                     __end_of_Return_Anti_Moves:
  4366                           	callstack 0
  4367                           
  4368 ;; *************** function _MoveBuggy *****************
  4369 ;; Defined at:
  4370 ;;		line 144 in file "color_instructions.c"
  4371 ;; Parameters:    Size  Location     Type
  4372 ;;  color_detect    2   45[COMRAM] PTR unsigned char 
  4373 ;;		 -> RAM(3561), 
  4374 ;;  mL              2   47[COMRAM] PTR struct DC_motor
  4375 ;;		 -> main@motorL(9), 
  4376 ;;  mR              2   49[COMRAM] PTR struct DC_motor
  4377 ;;		 -> main@motorR(9), 
  4378 ;; Auto vars:     Size  Location     Type
  4379 ;;		None
  4380 ;; Return value:  Size  Location     Type
  4381 ;;                  1    wreg      void 
  4382 ;; Registers used:
  4383 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4384 ;; Tracked objects:
  4385 ;;		On entry : 0/0
  4386 ;;		On exit  : 0/0
  4387 ;;		Unchanged: 0/0
  4388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4389 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4392 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4393 ;;Total ram usage:        6 bytes
  4394 ;; Hardware stack levels used: 1
  4395 ;; Hardware stack levels required when called: 12
  4396 ;; This function calls:
  4397 ;;		_AppendMoves
  4398 ;;		_BlueInstructions
  4399 ;;		_GreenInstructions
  4400 ;;		_LightBlueInstructions
  4401 ;;		_OrangeInstructions
  4402 ;;		_PinkInstructions
  4403 ;;		_RedInstructions
  4404 ;;		_YellowInstructions
  4405 ;; This function is called by:
  4406 ;;		_main
  4407 ;;		_WhiteInstructions
  4408 ;; This function uses a non-reentrant model
  4409 ;;
  4410                           
  4411                           	psect	text14
  4412   001090                     __ptext14:
  4413                           	callstack 0
  4414   001090                     _MoveBuggy:
  4415                           	callstack 17
  4416   001090                     
  4417                           ;color_instructions.c: 145:     if (color_detected==1){
  4418   001090  042E               	decf	MoveBuggy@color_detected^0,w,c
  4419   001092  102F               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4420   001094  A4D8               	btfss	status,2,c
  4421   001096  EF4F  F008         	goto	u2311
  4422   00109A  EF51  F008         	goto	u2310
  4423   00109E                     u2311:
  4424   00109E  EF6F  F008         	goto	l3066
  4425   0010A2                     u2310:
  4426   0010A2                     
  4427                           ;color_instructions.c: 146:         RedInstructions(mL, mR);
  4428   0010A2  C030  F027         	movff	MoveBuggy@mL,RedInstructions@mL
  4429   0010A6  C031  F028         	movff	MoveBuggy@mL+1,RedInstructions@mL+1
  4430   0010AA  C032  F029         	movff	MoveBuggy@mR,RedInstructions@mR
  4431   0010AE  C033  F02A         	movff	MoveBuggy@mR+1,RedInstructions@mR+1
  4432   0010B2  ECEF  F00E         	call	_RedInstructions	;wreg free
  4433   0010B6                     
  4434                           ;color_instructions.c: 147:         if(LATDbits.LATD7 != 1){
  4435   0010B6  BE7C               	btfsc	124,7,c	;volatile
  4436   0010B8  EF60  F008         	goto	u2321
  4437   0010BC  EF62  F008         	goto	u2320
  4438   0010C0                     u2321:
  4439   0010C0  EF3B  F009         	goto	l644
  4440   0010C4                     u2320:
  4441   0010C4                     
  4442                           ;color_instructions.c: 148:             AppendMoves(2,&moves_index,anti_moves_array);
  4443   0010C4  0E56               	movlw	low _moves_index
  4444   0010C6  6E09               	movwf	AppendMoves@moves_index^0,c
  4445   0010C8  0E00               	movlw	high _moves_index
  4446   0010CA  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4447   0010CC  0E75               	movlw	low _anti_moves_array
  4448   0010CE  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4449   0010D0  0E00               	movlw	high _anti_moves_array
  4450   0010D2  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4451   0010D4  0E02               	movlw	2
  4452   0010D6  EC41  F013         	call	_AppendMoves
  4453   0010DA  EF3B  F009         	goto	l644
  4454   0010DE                     l3066:
  4455   0010DE  0E02               	movlw	2
  4456   0010E0  182E               	xorwf	MoveBuggy@color_detected^0,w,c
  4457   0010E2  102F               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4458   0010E4  A4D8               	btfss	status,2,c
  4459   0010E6  EF77  F008         	goto	u2331
  4460   0010EA  EF79  F008         	goto	u2330
  4461   0010EE                     u2331:
  4462   0010EE  EF97  F008         	goto	l3074
  4463   0010F2                     u2330:
  4464   0010F2                     
  4465                           ;color_instructions.c: 152:         GreenInstructions(mL, mR);
  4466   0010F2  C030  F027         	movff	MoveBuggy@mL,GreenInstructions@mL
  4467   0010F6  C031  F028         	movff	MoveBuggy@mL+1,GreenInstructions@mL+1
  4468   0010FA  C032  F029         	movff	MoveBuggy@mR,GreenInstructions@mR
  4469   0010FE  C033  F02A         	movff	MoveBuggy@mR+1,GreenInstructions@mR+1
  4470   001102  ECFB  F00F         	call	_GreenInstructions	;wreg free
  4471   001106                     
  4472                           ;color_instructions.c: 153:         if(LATDbits.LATD7 != 1){
  4473   001106  BE7C               	btfsc	124,7,c	;volatile
  4474   001108  EF88  F008         	goto	u2341
  4475   00110C  EF8A  F008         	goto	u2340
  4476   001110                     u2341:
  4477   001110  EF3B  F009         	goto	l644
  4478   001114                     u2340:
  4479   001114                     
  4480                           ;color_instructions.c: 154:             AppendMoves(1,&moves_index,anti_moves_array);
  4481   001114  0E56               	movlw	low _moves_index
  4482   001116  6E09               	movwf	AppendMoves@moves_index^0,c
  4483   001118  0E00               	movlw	high _moves_index
  4484   00111A  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4485   00111C  0E75               	movlw	low _anti_moves_array
  4486   00111E  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4487   001120  0E00               	movlw	high _anti_moves_array
  4488   001122  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4489   001124  0E01               	movlw	1
  4490   001126  EC41  F013         	call	_AppendMoves
  4491   00112A  EF3B  F009         	goto	l644
  4492   00112E                     l3074:
  4493   00112E  0E03               	movlw	3
  4494   001130  182E               	xorwf	MoveBuggy@color_detected^0,w,c
  4495   001132  102F               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4496   001134  A4D8               	btfss	status,2,c
  4497   001136  EF9F  F008         	goto	u2351
  4498   00113A  EFA1  F008         	goto	u2350
  4499   00113E                     u2351:
  4500   00113E  EFC1  F008         	goto	l3082
  4501   001142                     u2350:
  4502   001142                     
  4503                           ;color_instructions.c: 158:         BlueInstructions(mL, mR);
  4504   001142  C030  F027         	movff	MoveBuggy@mL,BlueInstructions@mL
  4505   001146  C031  F028         	movff	MoveBuggy@mL+1,BlueInstructions@mL+1
  4506   00114A  C032  F029         	movff	MoveBuggy@mR,BlueInstructions@mR
  4507   00114E  C033  F02A         	movff	MoveBuggy@mR+1,BlueInstructions@mR+1
  4508   001152  EC0B  F00E         	call	_BlueInstructions	;wreg free
  4509   001156                     
  4510                           ;color_instructions.c: 159:         if(LATDbits.LATD7 != 1){
  4511   001156  BE7C               	btfsc	124,7,c	;volatile
  4512   001158  EFB0  F008         	goto	u2361
  4513   00115C  EFB2  F008         	goto	u2360
  4514   001160                     u2361:
  4515   001160  EF3B  F009         	goto	l644
  4516   001164                     u2360:
  4517   001164                     
  4518                           ;color_instructions.c: 160:             AppendMoves(3,&moves_index,anti_moves_array);
  4519   001164  0E56               	movlw	low _moves_index
  4520   001166  6E09               	movwf	AppendMoves@moves_index^0,c
  4521   001168  0E00               	movlw	high _moves_index
  4522   00116A  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4523   00116C  0E75               	movlw	low _anti_moves_array
  4524   00116E  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4525   001170  0E00               	movlw	high _anti_moves_array
  4526   001172  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4527   001174  0E03               	movlw	3
  4528   001176  EC41  F013         	call	_AppendMoves
  4529   00117A  EF3B  F009         	goto	l644
  4530   00117E                     l633:
  4531                           
  4532                           ;color_instructions.c: 162:     }
  4533   00117E  EF3B  F009         	goto	l644
  4534   001182                     l3082:
  4535   001182  0E04               	movlw	4
  4536   001184  182E               	xorwf	MoveBuggy@color_detected^0,w,c
  4537   001186  102F               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4538   001188  A4D8               	btfss	status,2,c
  4539   00118A  EFC9  F008         	goto	u2371
  4540   00118E  EFCB  F008         	goto	u2370
  4541   001192                     u2371:
  4542   001192  EFD7  F008         	goto	l3086
  4543   001196                     u2370:
  4544   001196                     
  4545                           ;color_instructions.c: 164:         YellowInstructions(mL, mR);
  4546   001196  C030  F027         	movff	MoveBuggy@mL,YellowInstructions@mL
  4547   00119A  C031  F028         	movff	MoveBuggy@mL+1,YellowInstructions@mL+1
  4548   00119E  C032  F029         	movff	MoveBuggy@mR,YellowInstructions@mR
  4549   0011A2  C033  F02A         	movff	MoveBuggy@mR+1,YellowInstructions@mR+1
  4550   0011A6  ECAC  F00E         	call	_YellowInstructions	;wreg free
  4551                           
  4552                           ;color_instructions.c: 166:     }
  4553   0011AA  EF3B  F009         	goto	l644
  4554   0011AE                     l3086:
  4555   0011AE  0E05               	movlw	5
  4556   0011B0  182E               	xorwf	MoveBuggy@color_detected^0,w,c
  4557   0011B2  102F               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4558   0011B4  A4D8               	btfss	status,2,c
  4559   0011B6  EFDF  F008         	goto	u2381
  4560   0011BA  EFE1  F008         	goto	u2380
  4561   0011BE                     u2381:
  4562   0011BE  EFED  F008         	goto	l3090
  4563   0011C2                     u2380:
  4564   0011C2                     
  4565                           ;color_instructions.c: 168:         PinkInstructions(mL, mR);
  4566   0011C2  C030  F027         	movff	MoveBuggy@mL,PinkInstructions@mL
  4567   0011C6  C031  F028         	movff	MoveBuggy@mL+1,PinkInstructions@mL+1
  4568   0011CA  C032  F029         	movff	MoveBuggy@mR,PinkInstructions@mR
  4569   0011CE  C033  F02A         	movff	MoveBuggy@mR+1,PinkInstructions@mR+1
  4570   0011D2  EC32  F00F         	call	_PinkInstructions	;wreg free
  4571                           
  4572                           ;color_instructions.c: 170:     }
  4573   0011D6  EF3B  F009         	goto	l644
  4574   0011DA                     l3090:
  4575   0011DA  0E06               	movlw	6
  4576   0011DC  182E               	xorwf	MoveBuggy@color_detected^0,w,c
  4577   0011DE  102F               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4578   0011E0  A4D8               	btfss	status,2,c
  4579   0011E2  EFF5  F008         	goto	u2391
  4580   0011E6  EFF7  F008         	goto	u2390
  4581   0011EA                     u2391:
  4582   0011EA  EF15  F009         	goto	l3098
  4583   0011EE                     u2390:
  4584   0011EE                     
  4585                           ;color_instructions.c: 172:         OrangeInstructions(mL, mR);
  4586   0011EE  C030  F027         	movff	MoveBuggy@mL,OrangeInstructions@mL
  4587   0011F2  C031  F028         	movff	MoveBuggy@mL+1,OrangeInstructions@mL+1
  4588   0011F6  C032  F029         	movff	MoveBuggy@mR,OrangeInstructions@mR
  4589   0011FA  C033  F02A         	movff	MoveBuggy@mR+1,OrangeInstructions@mR+1
  4590   0011FE  EC75  F00F         	call	_OrangeInstructions	;wreg free
  4591   001202                     
  4592                           ;color_instructions.c: 173:         if(LATDbits.LATD7 != 1){
  4593   001202  BE7C               	btfsc	124,7,c	;volatile
  4594   001204  EF06  F009         	goto	u2401
  4595   001208  EF08  F009         	goto	u2400
  4596   00120C                     u2401:
  4597   00120C  EF3B  F009         	goto	l644
  4598   001210                     u2400:
  4599   001210                     
  4600                           ;color_instructions.c: 174:             AppendMoves(7,&moves_index,anti_moves_array);
  4601   001210  0E56               	movlw	low _moves_index
  4602   001212  6E09               	movwf	AppendMoves@moves_index^0,c
  4603   001214  0E00               	movlw	high _moves_index
  4604   001216  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4605   001218  0E75               	movlw	low _anti_moves_array
  4606   00121A  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4607   00121C  0E00               	movlw	high _anti_moves_array
  4608   00121E  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4609   001220  0E07               	movlw	7
  4610   001222  EC41  F013         	call	_AppendMoves
  4611   001226  EF3B  F009         	goto	l644
  4612   00122A                     l3098:
  4613   00122A  0E07               	movlw	7
  4614   00122C  182E               	xorwf	MoveBuggy@color_detected^0,w,c
  4615   00122E  102F               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4616   001230  A4D8               	btfss	status,2,c
  4617   001232  EF1D  F009         	goto	u2411
  4618   001236  EF1F  F009         	goto	u2410
  4619   00123A                     u2411:
  4620   00123A  EFBF  F008         	goto	l633
  4621   00123E                     u2410:
  4622   00123E                     
  4623                           ;color_instructions.c: 178:         LightBlueInstructions(mL, mR);
  4624   00123E  C030  F027         	movff	MoveBuggy@mL,LightBlueInstructions@mL
  4625   001242  C031  F028         	movff	MoveBuggy@mL+1,LightBlueInstructions@mL+1
  4626   001246  C032  F029         	movff	MoveBuggy@mR,LightBlueInstructions@mR
  4627   00124A  C033  F02A         	movff	MoveBuggy@mR+1,LightBlueInstructions@mR+1
  4628   00124E  ECB8  F00F         	call	_LightBlueInstructions	;wreg free
  4629   001252                     
  4630                           ;color_instructions.c: 179:         if(LATDbits.LATD7 != 1){
  4631   001252  BE7C               	btfsc	124,7,c	;volatile
  4632   001254  EF2E  F009         	goto	u2421
  4633   001258  EF30  F009         	goto	u2420
  4634   00125C                     u2421:
  4635   00125C  EFBF  F008         	goto	l633
  4636   001260                     u2420:
  4637   001260                     
  4638                           ;color_instructions.c: 180:             AppendMoves(6,&moves_index,anti_moves_array);
  4639   001260  0E56               	movlw	low _moves_index
  4640   001262  6E09               	movwf	AppendMoves@moves_index^0,c
  4641   001264  0E00               	movlw	high _moves_index
  4642   001266  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4643   001268  0E75               	movlw	low _anti_moves_array
  4644   00126A  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4645   00126C  0E00               	movlw	high _anti_moves_array
  4646   00126E  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4647   001270  0E06               	movlw	6
  4648   001272  EC41  F013         	call	_AppendMoves
  4649   001276                     l644:
  4650   001276  0012               	return		;funcret
  4651   001278                     __end_of_MoveBuggy:
  4652                           	callstack 0
  4653                           
  4654 ;; *************** function _YellowInstructions *****************
  4655 ;; Defined at:
  4656 ;;		line 58 in file "color_instructions.c"
  4657 ;; Parameters:    Size  Location     Type
  4658 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  4659 ;;		 -> main@motorL(9), 
  4660 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  4661 ;;		 -> main@motorR(9), 
  4662 ;; Auto vars:     Size  Location     Type
  4663 ;;  a               1   44[COMRAM] unsigned char 
  4664 ;; Return value:  Size  Location     Type
  4665 ;;                  1    wreg      void 
  4666 ;; Registers used:
  4667 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4668 ;; Tracked objects:
  4669 ;;		On entry : 0/0
  4670 ;;		On exit  : 0/0
  4671 ;;		Unchanged: 0/0
  4672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4673 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4674 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4675 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4676 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4677 ;;Total ram usage:        7 bytes
  4678 ;; Hardware stack levels used: 1
  4679 ;; Hardware stack levels required when called: 11
  4680 ;; This function calls:
  4681 ;;		_fullSpeedBackwards
  4682 ;;		_stop
  4683 ;;		_turnRight90
  4684 ;; This function is called by:
  4685 ;;		_MoveBuggy
  4686 ;; This function uses a non-reentrant model
  4687 ;;
  4688                           
  4689                           	psect	text15
  4690   001D58                     __ptext15:
  4691                           	callstack 0
  4692   001D58                     _YellowInstructions:
  4693                           	callstack 17
  4694   001D58                     
  4695                           ;color_instructions.c: 60:     unsigned char a=0;
  4696   001D58  0E00               	movlw	0
  4697   001D5A  6E2D               	movwf	YellowInstructions@a^0,c
  4698                           
  4699                           ;color_instructions.c: 61:     while (a<28){
  4700   001D5C  EFBB  F00E         	goto	l2932
  4701   001D60                     l2928:
  4702                           
  4703                           ;color_instructions.c: 62:         fullSpeedBackwards(mL, mR);
  4704   001D60  C027  F01C         	movff	YellowInstructions@mL,fullSpeedBackwards@mL
  4705   001D64  C028  F01D         	movff	YellowInstructions@mL+1,fullSpeedBackwards@mL+1
  4706   001D68  C029  F01E         	movff	YellowInstructions@mR,fullSpeedBackwards@mR
  4707   001D6C  C02A  F01F         	movff	YellowInstructions@mR+1,fullSpeedBackwards@mR+1
  4708   001D70  ECB5  F00C         	call	_fullSpeedBackwards	;wreg free
  4709   001D74                     
  4710                           ;color_instructions.c: 63:         a++;
  4711   001D74  2A2D               	incf	YellowInstructions@a^0,f,c
  4712   001D76                     l2932:
  4713                           
  4714                           ;color_instructions.c: 61:     while (a<28){
  4715   001D76  0E1B               	movlw	27
  4716   001D78  642D               	cpfsgt	YellowInstructions@a^0,c
  4717   001D7A  EFC1  F00E         	goto	u2211
  4718   001D7E  EFC3  F00E         	goto	u2210
  4719   001D82                     u2211:
  4720   001D82  EFB0  F00E         	goto	l2928
  4721   001D86                     u2210:
  4722   001D86  EFD0  F00E         	goto	l2938
  4723   001D8A                     l2934:
  4724                           
  4725                           ;color_instructions.c: 66:         stop(mL, mR);
  4726   001D8A  C027  F01C         	movff	YellowInstructions@mL,stop@mL
  4727   001D8E  C028  F01D         	movff	YellowInstructions@mL+1,stop@mL+1
  4728   001D92  C029  F01E         	movff	YellowInstructions@mR,stop@mR
  4729   001D96  C02A  F01F         	movff	YellowInstructions@mR+1,stop@mR+1
  4730   001D9A  ECA1  F00D         	call	_stop	;wreg free
  4731   001D9E                     
  4732                           ;color_instructions.c: 67:         a--;
  4733   001D9E  062D               	decf	YellowInstructions@a^0,f,c
  4734   001DA0                     l2938:
  4735                           
  4736                           ;color_instructions.c: 65:     while (a>0){
  4737   001DA0  502D               	movf	YellowInstructions@a^0,w,c
  4738   001DA2  A4D8               	btfss	status,2,c
  4739   001DA4  EFD6  F00E         	goto	u2221
  4740   001DA8  EFD8  F00E         	goto	u2220
  4741   001DAC                     u2221:
  4742   001DAC  EFC5  F00E         	goto	l2934
  4743   001DB0                     u2220:
  4744   001DB0                     
  4745                           ;color_instructions.c: 69:     _delay((unsigned long)((100)*(64000000/4000.0)));
  4746   001DB0  0E09               	movlw	9
  4747   001DB2  6E2C               	movwf	(??_YellowInstructions+1)^0,c
  4748   001DB4  0E1E               	movlw	30
  4749   001DB6  6E2B               	movwf	??_YellowInstructions^0,c
  4750   001DB8  0EE4               	movlw	228
  4751   001DBA                     u4357:
  4752   001DBA  2EE8               	decfsz	wreg,f,c
  4753   001DBC  D7FE               	bra	u4357
  4754   001DBE  2E2B               	decfsz	??_YellowInstructions^0,f,c
  4755   001DC0  D7FC               	bra	u4357
  4756   001DC2  2E2C               	decfsz	(??_YellowInstructions+1)^0,f,c
  4757   001DC4  D7FA               	bra	u4357
  4758   001DC6  D000               	nop2	
  4759   001DC8                     
  4760                           ;color_instructions.c: 70:     turnRight90(mL, mR);
  4761   001DC8  C027  F022         	movff	YellowInstructions@mL,turnRight90@mL
  4762   001DCC  C028  F023         	movff	YellowInstructions@mL+1,turnRight90@mL+1
  4763   001DD0  C029  F024         	movff	YellowInstructions@mR,turnRight90@mR
  4764   001DD4  C02A  F025         	movff	YellowInstructions@mR+1,turnRight90@mR+1
  4765   001DD8  ECA7  F010         	call	_turnRight90	;wreg free
  4766   001DDC  0012               	return		;funcret
  4767   001DDE                     __end_of_YellowInstructions:
  4768                           	callstack 0
  4769                           
  4770 ;; *************** function _RedInstructions *****************
  4771 ;; Defined at:
  4772 ;;		line 10 in file "color_instructions.c"
  4773 ;; Parameters:    Size  Location     Type
  4774 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  4775 ;;		 -> main@motorL(9), 
  4776 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  4777 ;;		 -> main@motorR(9), 
  4778 ;; Auto vars:     Size  Location     Type
  4779 ;;  a               1   44[COMRAM] unsigned char 
  4780 ;; Return value:  Size  Location     Type
  4781 ;;                  1    wreg      void 
  4782 ;; Registers used:
  4783 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4784 ;; Tracked objects:
  4785 ;;		On entry : 0/0
  4786 ;;		On exit  : 0/0
  4787 ;;		Unchanged: 0/0
  4788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4789 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4790 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4791 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4792 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4793 ;;Total ram usage:        7 bytes
  4794 ;; Hardware stack levels used: 1
  4795 ;; Hardware stack levels required when called: 11
  4796 ;; This function calls:
  4797 ;;		_fullSpeedBackwards
  4798 ;;		_stop
  4799 ;;		_turnRight90
  4800 ;; This function is called by:
  4801 ;;		_MoveBuggy
  4802 ;; This function uses a non-reentrant model
  4803 ;;
  4804                           
  4805                           	psect	text16
  4806   001DDE                     __ptext16:
  4807                           	callstack 0
  4808   001DDE                     _RedInstructions:
  4809                           	callstack 17
  4810   001DDE                     
  4811                           ;color_instructions.c: 12:     unsigned char a=0;
  4812   001DDE  0E00               	movlw	0
  4813   001DE0  6E2D               	movwf	RedInstructions@a^0,c
  4814                           
  4815                           ;color_instructions.c: 13:     while (a<15){
  4816   001DE2  EFFE  F00E         	goto	l2876
  4817   001DE6                     l2872:
  4818                           
  4819                           ;color_instructions.c: 14:         fullSpeedBackwards(mL, mR);
  4820   001DE6  C027  F01C         	movff	RedInstructions@mL,fullSpeedBackwards@mL
  4821   001DEA  C028  F01D         	movff	RedInstructions@mL+1,fullSpeedBackwards@mL+1
  4822   001DEE  C029  F01E         	movff	RedInstructions@mR,fullSpeedBackwards@mR
  4823   001DF2  C02A  F01F         	movff	RedInstructions@mR+1,fullSpeedBackwards@mR+1
  4824   001DF6  ECB5  F00C         	call	_fullSpeedBackwards	;wreg free
  4825   001DFA                     
  4826                           ;color_instructions.c: 15:         a++;
  4827   001DFA  2A2D               	incf	RedInstructions@a^0,f,c
  4828   001DFC                     l2876:
  4829                           
  4830                           ;color_instructions.c: 13:     while (a<15){
  4831   001DFC  0E0E               	movlw	14
  4832   001DFE  642D               	cpfsgt	RedInstructions@a^0,c
  4833   001E00  EF04  F00F         	goto	u2151
  4834   001E04  EF06  F00F         	goto	u2150
  4835   001E08                     u2151:
  4836   001E08  EFF3  F00E         	goto	l2872
  4837   001E0C                     u2150:
  4838   001E0C  EF13  F00F         	goto	l2882
  4839   001E10                     l2878:
  4840                           
  4841                           ;color_instructions.c: 18:         stop(mL, mR);
  4842   001E10  C027  F01C         	movff	RedInstructions@mL,stop@mL
  4843   001E14  C028  F01D         	movff	RedInstructions@mL+1,stop@mL+1
  4844   001E18  C029  F01E         	movff	RedInstructions@mR,stop@mR
  4845   001E1C  C02A  F01F         	movff	RedInstructions@mR+1,stop@mR+1
  4846   001E20  ECA1  F00D         	call	_stop	;wreg free
  4847   001E24                     
  4848                           ;color_instructions.c: 19:         a--;
  4849   001E24  062D               	decf	RedInstructions@a^0,f,c
  4850   001E26                     l2882:
  4851                           
  4852                           ;color_instructions.c: 17:     while (a>0){
  4853   001E26  502D               	movf	RedInstructions@a^0,w,c
  4854   001E28  A4D8               	btfss	status,2,c
  4855   001E2A  EF19  F00F         	goto	u2161
  4856   001E2E  EF1B  F00F         	goto	u2160
  4857   001E32                     u2161:
  4858   001E32  EF08  F00F         	goto	l2878
  4859   001E36                     u2160:
  4860   001E36                     
  4861                           ;color_instructions.c: 21:     _delay((unsigned long)((100)*(64000000/4000.0)));
  4862   001E36  0E09               	movlw	9
  4863   001E38  6E2C               	movwf	(??_RedInstructions+1)^0,c
  4864   001E3A  0E1E               	movlw	30
  4865   001E3C  6E2B               	movwf	??_RedInstructions^0,c
  4866   001E3E  0EE4               	movlw	228
  4867   001E40                     u4367:
  4868   001E40  2EE8               	decfsz	wreg,f,c
  4869   001E42  D7FE               	bra	u4367
  4870   001E44  2E2B               	decfsz	??_RedInstructions^0,f,c
  4871   001E46  D7FC               	bra	u4367
  4872   001E48  2E2C               	decfsz	(??_RedInstructions+1)^0,f,c
  4873   001E4A  D7FA               	bra	u4367
  4874   001E4C  D000               	nop2	
  4875   001E4E                     
  4876                           ;color_instructions.c: 22:     turnRight90(mL, mR);
  4877   001E4E  C027  F022         	movff	RedInstructions@mL,turnRight90@mL
  4878   001E52  C028  F023         	movff	RedInstructions@mL+1,turnRight90@mL+1
  4879   001E56  C029  F024         	movff	RedInstructions@mR,turnRight90@mR
  4880   001E5A  C02A  F025         	movff	RedInstructions@mR+1,turnRight90@mR+1
  4881   001E5E  ECA7  F010         	call	_turnRight90	;wreg free
  4882   001E62  0012               	return		;funcret
  4883   001E64                     __end_of_RedInstructions:
  4884                           	callstack 0
  4885                           
  4886 ;; *************** function _turnRight90 *****************
  4887 ;; Defined at:
  4888 ;;		line 213 in file "dc_motor.c"
  4889 ;; Parameters:    Size  Location     Type
  4890 ;;  mL              2   33[COMRAM] PTR struct DC_motor
  4891 ;;		 -> main@motorL(9), 
  4892 ;;  mR              2   35[COMRAM] PTR struct DC_motor
  4893 ;;		 -> main@motorR(9), 
  4894 ;; Auto vars:     Size  Location     Type
  4895 ;;  a               1   37[COMRAM] unsigned char 
  4896 ;; Return value:  Size  Location     Type
  4897 ;;                  1    wreg      void 
  4898 ;; Registers used:
  4899 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4900 ;; Tracked objects:
  4901 ;;		On entry : 0/0
  4902 ;;		On exit  : 0/0
  4903 ;;		Unchanged: 0/0
  4904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4905 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4906 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4908 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4909 ;;Total ram usage:        5 bytes
  4910 ;; Hardware stack levels used: 1
  4911 ;; Hardware stack levels required when called: 10
  4912 ;; This function calls:
  4913 ;;		_stop
  4914 ;;		_turnRight
  4915 ;; This function is called by:
  4916 ;;		_RedInstructions
  4917 ;;		_YellowInstructions
  4918 ;; This function uses a non-reentrant model
  4919 ;;
  4920                           
  4921                           	psect	text17
  4922   00214E                     __ptext17:
  4923                           	callstack 0
  4924   00214E                     _turnRight90:
  4925                           	callstack 17
  4926   00214E                     
  4927                           ;dc_motor.c: 215:     unsigned char a=0;
  4928   00214E  0E00               	movlw	0
  4929   002150  6E26               	movwf	turnRight90@a^0,c
  4930                           
  4931                           ;dc_motor.c: 216:     while(a<19){
  4932   002152  EFB6  F010         	goto	l2790
  4933   002156                     l2786:
  4934                           
  4935                           ;dc_motor.c: 217:         turnRight(mL, mR);
  4936   002156  C022  F01C         	movff	turnRight90@mL,turnRight@mL
  4937   00215A  C023  F01D         	movff	turnRight90@mL+1,turnRight@mL+1
  4938   00215E  C024  F01E         	movff	turnRight90@mR,turnRight@mR
  4939   002162  C025  F01F         	movff	turnRight90@mR+1,turnRight@mR+1
  4940   002166  ECC7  F00B         	call	_turnRight	;wreg free
  4941   00216A                     
  4942                           ;dc_motor.c: 218:         a++;
  4943   00216A  2A26               	incf	turnRight90@a^0,f,c
  4944   00216C                     l2790:
  4945                           
  4946                           ;dc_motor.c: 216:     while(a<19){
  4947   00216C  0E12               	movlw	18
  4948   00216E  6426               	cpfsgt	turnRight90@a^0,c
  4949   002170  EFBC  F010         	goto	u2071
  4950   002174  EFBE  F010         	goto	u2070
  4951   002178                     u2071:
  4952   002178  EFAB  F010         	goto	l2786
  4953   00217C                     u2070:
  4954   00217C  EFCB  F010         	goto	l2796
  4955   002180                     l2792:
  4956                           
  4957                           ;dc_motor.c: 221:         stop(mL, mR);
  4958   002180  C022  F01C         	movff	turnRight90@mL,stop@mL
  4959   002184  C023  F01D         	movff	turnRight90@mL+1,stop@mL+1
  4960   002188  C024  F01E         	movff	turnRight90@mR,stop@mR
  4961   00218C  C025  F01F         	movff	turnRight90@mR+1,stop@mR+1
  4962   002190  ECA1  F00D         	call	_stop	;wreg free
  4963   002194                     
  4964                           ;dc_motor.c: 222:         a--;
  4965   002194  0626               	decf	turnRight90@a^0,f,c
  4966   002196                     l2796:
  4967                           
  4968                           ;dc_motor.c: 220:     while(a>0){
  4969   002196  5026               	movf	turnRight90@a^0,w,c
  4970   002198  A4D8               	btfss	status,2,c
  4971   00219A  EFD1  F010         	goto	u2081
  4972   00219E  EFD3  F010         	goto	u2080
  4973   0021A2                     u2081:
  4974   0021A2  EFC0  F010         	goto	l2792
  4975   0021A6                     u2080:
  4976   0021A6  0012               	return		;funcret
  4977   0021A8                     __end_of_turnRight90:
  4978                           	callstack 0
  4979                           
  4980 ;; *************** function _PinkInstructions *****************
  4981 ;; Defined at:
  4982 ;;		line 73 in file "color_instructions.c"
  4983 ;; Parameters:    Size  Location     Type
  4984 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  4985 ;;		 -> main@motorL(9), 
  4986 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  4987 ;;		 -> main@motorR(9), 
  4988 ;; Auto vars:     Size  Location     Type
  4989 ;;  a               1   44[COMRAM] unsigned char 
  4990 ;; Return value:  Size  Location     Type
  4991 ;;                  1    wreg      void 
  4992 ;; Registers used:
  4993 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4994 ;; Tracked objects:
  4995 ;;		On entry : 0/0
  4996 ;;		On exit  : 0/0
  4997 ;;		Unchanged: 0/0
  4998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4999 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5000 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5001 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5002 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5003 ;;Total ram usage:        7 bytes
  5004 ;; Hardware stack levels used: 1
  5005 ;; Hardware stack levels required when called: 11
  5006 ;; This function calls:
  5007 ;;		_fullSpeedBackwards
  5008 ;;		_stop
  5009 ;;		_turnLeft90
  5010 ;; This function is called by:
  5011 ;;		_MoveBuggy
  5012 ;; This function uses a non-reentrant model
  5013 ;;
  5014                           
  5015                           	psect	text18
  5016   001E64                     __ptext18:
  5017                           	callstack 0
  5018   001E64                     _PinkInstructions:
  5019                           	callstack 17
  5020   001E64                     
  5021                           ;color_instructions.c: 74:     unsigned char a=0;
  5022   001E64  0E00               	movlw	0
  5023   001E66  6E2D               	movwf	PinkInstructions@a^0,c
  5024                           
  5025                           ;color_instructions.c: 75:     while (a<28){
  5026   001E68  EF41  F00F         	goto	l2950
  5027   001E6C                     l2946:
  5028                           
  5029                           ;color_instructions.c: 76:         fullSpeedBackwards(mL, mR);
  5030   001E6C  C027  F01C         	movff	PinkInstructions@mL,fullSpeedBackwards@mL
  5031   001E70  C028  F01D         	movff	PinkInstructions@mL+1,fullSpeedBackwards@mL+1
  5032   001E74  C029  F01E         	movff	PinkInstructions@mR,fullSpeedBackwards@mR
  5033   001E78  C02A  F01F         	movff	PinkInstructions@mR+1,fullSpeedBackwards@mR+1
  5034   001E7C  ECB5  F00C         	call	_fullSpeedBackwards	;wreg free
  5035   001E80                     
  5036                           ;color_instructions.c: 77:         a++;
  5037   001E80  2A2D               	incf	PinkInstructions@a^0,f,c
  5038   001E82                     l2950:
  5039                           
  5040                           ;color_instructions.c: 75:     while (a<28){
  5041   001E82  0E1B               	movlw	27
  5042   001E84  642D               	cpfsgt	PinkInstructions@a^0,c
  5043   001E86  EF47  F00F         	goto	u2231
  5044   001E8A  EF49  F00F         	goto	u2230
  5045   001E8E                     u2231:
  5046   001E8E  EF36  F00F         	goto	l2946
  5047   001E92                     u2230:
  5048   001E92  EF56  F00F         	goto	l2956
  5049   001E96                     l2952:
  5050                           
  5051                           ;color_instructions.c: 80:         stop(mL, mR);
  5052   001E96  C027  F01C         	movff	PinkInstructions@mL,stop@mL
  5053   001E9A  C028  F01D         	movff	PinkInstructions@mL+1,stop@mL+1
  5054   001E9E  C029  F01E         	movff	PinkInstructions@mR,stop@mR
  5055   001EA2  C02A  F01F         	movff	PinkInstructions@mR+1,stop@mR+1
  5056   001EA6  ECA1  F00D         	call	_stop	;wreg free
  5057   001EAA                     
  5058                           ;color_instructions.c: 81:         a--;
  5059   001EAA  062D               	decf	PinkInstructions@a^0,f,c
  5060   001EAC                     l2956:
  5061                           
  5062                           ;color_instructions.c: 79:     while (a>0){
  5063   001EAC  502D               	movf	PinkInstructions@a^0,w,c
  5064   001EAE  A4D8               	btfss	status,2,c
  5065   001EB0  EF5C  F00F         	goto	u2241
  5066   001EB4  EF5E  F00F         	goto	u2240
  5067   001EB8                     u2241:
  5068   001EB8  EF4B  F00F         	goto	l2952
  5069   001EBC                     u2240:
  5070   001EBC                     
  5071                           ;color_instructions.c: 83:     _delay((unsigned long)((100)*(64000000/4000.0)));
  5072   001EBC  0E09               	movlw	9
  5073   001EBE  6E2C               	movwf	(??_PinkInstructions+1)^0,c
  5074   001EC0  0E1E               	movlw	30
  5075   001EC2  6E2B               	movwf	??_PinkInstructions^0,c
  5076   001EC4  0EE4               	movlw	228
  5077   001EC6                     u4377:
  5078   001EC6  2EE8               	decfsz	wreg,f,c
  5079   001EC8  D7FE               	bra	u4377
  5080   001ECA  2E2B               	decfsz	??_PinkInstructions^0,f,c
  5081   001ECC  D7FC               	bra	u4377
  5082   001ECE  2E2C               	decfsz	(??_PinkInstructions+1)^0,f,c
  5083   001ED0  D7FA               	bra	u4377
  5084   001ED2  D000               	nop2	
  5085   001ED4                     
  5086                           ;color_instructions.c: 84:     turnLeft90(mL, mR);
  5087   001ED4  C027  F022         	movff	PinkInstructions@mL,turnLeft90@mL
  5088   001ED8  C028  F023         	movff	PinkInstructions@mL+1,turnLeft90@mL+1
  5089   001EDC  C029  F024         	movff	PinkInstructions@mR,turnLeft90@mR
  5090   001EE0  C02A  F025         	movff	PinkInstructions@mR+1,turnLeft90@mR+1
  5091   001EE4  EC2E  F011         	call	_turnLeft90	;wreg free
  5092   001EE8  0012               	return		;funcret
  5093   001EEA                     __end_of_PinkInstructions:
  5094                           	callstack 0
  5095                           
  5096 ;; *************** function _OrangeInstructions *****************
  5097 ;; Defined at:
  5098 ;;		line 88 in file "color_instructions.c"
  5099 ;; Parameters:    Size  Location     Type
  5100 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  5101 ;;		 -> main@motorL(9), 
  5102 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  5103 ;;		 -> main@motorR(9), 
  5104 ;; Auto vars:     Size  Location     Type
  5105 ;;  a               1   44[COMRAM] unsigned char 
  5106 ;; Return value:  Size  Location     Type
  5107 ;;                  1    wreg      void 
  5108 ;; Registers used:
  5109 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5110 ;; Tracked objects:
  5111 ;;		On entry : 0/0
  5112 ;;		On exit  : 0/0
  5113 ;;		Unchanged: 0/0
  5114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5115 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5116 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5117 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5118 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5119 ;;Total ram usage:        7 bytes
  5120 ;; Hardware stack levels used: 1
  5121 ;; Hardware stack levels required when called: 11
  5122 ;; This function calls:
  5123 ;;		_fullSpeedBackwards
  5124 ;;		_stop
  5125 ;;		_turnRight135
  5126 ;; This function is called by:
  5127 ;;		_MoveBuggy
  5128 ;; This function uses a non-reentrant model
  5129 ;;
  5130                           
  5131                           	psect	text19
  5132   001EEA                     __ptext19:
  5133                           	callstack 0
  5134   001EEA                     _OrangeInstructions:
  5135                           	callstack 17
  5136   001EEA                     
  5137                           ;color_instructions.c: 89:     unsigned char a=0;
  5138   001EEA  0E00               	movlw	0
  5139   001EEC  6E2D               	movwf	OrangeInstructions@a^0,c
  5140                           
  5141                           ;color_instructions.c: 90:     while (a<15){
  5142   001EEE  EF84  F00F         	goto	l2968
  5143   001EF2                     l2964:
  5144                           
  5145                           ;color_instructions.c: 91:         fullSpeedBackwards(mL, mR);
  5146   001EF2  C027  F01C         	movff	OrangeInstructions@mL,fullSpeedBackwards@mL
  5147   001EF6  C028  F01D         	movff	OrangeInstructions@mL+1,fullSpeedBackwards@mL+1
  5148   001EFA  C029  F01E         	movff	OrangeInstructions@mR,fullSpeedBackwards@mR
  5149   001EFE  C02A  F01F         	movff	OrangeInstructions@mR+1,fullSpeedBackwards@mR+1
  5150   001F02  ECB5  F00C         	call	_fullSpeedBackwards	;wreg free
  5151   001F06                     
  5152                           ;color_instructions.c: 92:         a++;
  5153   001F06  2A2D               	incf	OrangeInstructions@a^0,f,c
  5154   001F08                     l2968:
  5155                           
  5156                           ;color_instructions.c: 90:     while (a<15){
  5157   001F08  0E0E               	movlw	14
  5158   001F0A  642D               	cpfsgt	OrangeInstructions@a^0,c
  5159   001F0C  EF8A  F00F         	goto	u2251
  5160   001F10  EF8C  F00F         	goto	u2250
  5161   001F14                     u2251:
  5162   001F14  EF79  F00F         	goto	l2964
  5163   001F18                     u2250:
  5164   001F18  EF99  F00F         	goto	l2974
  5165   001F1C                     l2970:
  5166                           
  5167                           ;color_instructions.c: 95:         stop(mL, mR);
  5168   001F1C  C027  F01C         	movff	OrangeInstructions@mL,stop@mL
  5169   001F20  C028  F01D         	movff	OrangeInstructions@mL+1,stop@mL+1
  5170   001F24  C029  F01E         	movff	OrangeInstructions@mR,stop@mR
  5171   001F28  C02A  F01F         	movff	OrangeInstructions@mR+1,stop@mR+1
  5172   001F2C  ECA1  F00D         	call	_stop	;wreg free
  5173   001F30                     
  5174                           ;color_instructions.c: 96:         a--;
  5175   001F30  062D               	decf	OrangeInstructions@a^0,f,c
  5176   001F32                     l2974:
  5177                           
  5178                           ;color_instructions.c: 94:     while (a>0){
  5179   001F32  502D               	movf	OrangeInstructions@a^0,w,c
  5180   001F34  A4D8               	btfss	status,2,c
  5181   001F36  EF9F  F00F         	goto	u2261
  5182   001F3A  EFA1  F00F         	goto	u2260
  5183   001F3E                     u2261:
  5184   001F3E  EF8E  F00F         	goto	l2970
  5185   001F42                     u2260:
  5186   001F42                     
  5187                           ;color_instructions.c: 98:     _delay((unsigned long)((100)*(64000000/4000.0)));
  5188   001F42  0E09               	movlw	9
  5189   001F44  6E2C               	movwf	(??_OrangeInstructions+1)^0,c
  5190   001F46  0E1E               	movlw	30
  5191   001F48  6E2B               	movwf	??_OrangeInstructions^0,c
  5192   001F4A  0EE4               	movlw	228
  5193   001F4C                     u4387:
  5194   001F4C  2EE8               	decfsz	wreg,f,c
  5195   001F4E  D7FE               	bra	u4387
  5196   001F50  2E2B               	decfsz	??_OrangeInstructions^0,f,c
  5197   001F52  D7FC               	bra	u4387
  5198   001F54  2E2C               	decfsz	(??_OrangeInstructions+1)^0,f,c
  5199   001F56  D7FA               	bra	u4387
  5200   001F58  D000               	nop2	
  5201   001F5A                     
  5202                           ;color_instructions.c: 100:     turnRight135(mL, mR);
  5203   001F5A  C027  F022         	movff	OrangeInstructions@mL,turnRight135@mL
  5204   001F5E  C028  F023         	movff	OrangeInstructions@mL+1,turnRight135@mL+1
  5205   001F62  C029  F024         	movff	OrangeInstructions@mR,turnRight135@mR
  5206   001F66  C02A  F025         	movff	OrangeInstructions@mR+1,turnRight135@mR+1
  5207   001F6A  ECD4  F010         	call	_turnRight135	;wreg free
  5208   001F6E  0012               	return		;funcret
  5209   001F70                     __end_of_OrangeInstructions:
  5210                           	callstack 0
  5211                           
  5212 ;; *************** function _turnRight135 *****************
  5213 ;; Defined at:
  5214 ;;		line 240 in file "dc_motor.c"
  5215 ;; Parameters:    Size  Location     Type
  5216 ;;  mL              2   33[COMRAM] PTR struct DC_motor
  5217 ;;		 -> main@motorL(9), 
  5218 ;;  mR              2   35[COMRAM] PTR struct DC_motor
  5219 ;;		 -> main@motorR(9), 
  5220 ;; Auto vars:     Size  Location     Type
  5221 ;;  a               1   37[COMRAM] unsigned char 
  5222 ;; Return value:  Size  Location     Type
  5223 ;;                  1    wreg      void 
  5224 ;; Registers used:
  5225 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5226 ;; Tracked objects:
  5227 ;;		On entry : 0/0
  5228 ;;		On exit  : 0/0
  5229 ;;		Unchanged: 0/0
  5230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5231 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5232 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5234 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5235 ;;Total ram usage:        5 bytes
  5236 ;; Hardware stack levels used: 1
  5237 ;; Hardware stack levels required when called: 10
  5238 ;; This function calls:
  5239 ;;		_stop
  5240 ;;		_turnRight
  5241 ;; This function is called by:
  5242 ;;		_OrangeInstructions
  5243 ;; This function uses a non-reentrant model
  5244 ;;
  5245                           
  5246                           	psect	text20
  5247   0021A8                     __ptext20:
  5248                           	callstack 0
  5249   0021A8                     _turnRight135:
  5250                           	callstack 17
  5251   0021A8                     
  5252                           ;dc_motor.c: 242:     unsigned char a=0;
  5253   0021A8  0E00               	movlw	0
  5254   0021AA  6E26               	movwf	turnRight135@a^0,c
  5255                           
  5256                           ;dc_motor.c: 243:     while(a<21){
  5257   0021AC  EFE3  F010         	goto	l2804
  5258   0021B0                     l2800:
  5259                           
  5260                           ;dc_motor.c: 244:         turnRight(mL, mR);
  5261   0021B0  C022  F01C         	movff	turnRight135@mL,turnRight@mL
  5262   0021B4  C023  F01D         	movff	turnRight135@mL+1,turnRight@mL+1
  5263   0021B8  C024  F01E         	movff	turnRight135@mR,turnRight@mR
  5264   0021BC  C025  F01F         	movff	turnRight135@mR+1,turnRight@mR+1
  5265   0021C0  ECC7  F00B         	call	_turnRight	;wreg free
  5266   0021C4                     
  5267                           ;dc_motor.c: 245:         a++;
  5268   0021C4  2A26               	incf	turnRight135@a^0,f,c
  5269   0021C6                     l2804:
  5270                           
  5271                           ;dc_motor.c: 243:     while(a<21){
  5272   0021C6  0E14               	movlw	20
  5273   0021C8  6426               	cpfsgt	turnRight135@a^0,c
  5274   0021CA  EFE9  F010         	goto	u2091
  5275   0021CE  EFEB  F010         	goto	u2090
  5276   0021D2                     u2091:
  5277   0021D2  EFD8  F010         	goto	l2800
  5278   0021D6                     u2090:
  5279   0021D6  EFF8  F010         	goto	l2810
  5280   0021DA                     l2806:
  5281                           
  5282                           ;dc_motor.c: 248:         stop(mL, mR);
  5283   0021DA  C022  F01C         	movff	turnRight135@mL,stop@mL
  5284   0021DE  C023  F01D         	movff	turnRight135@mL+1,stop@mL+1
  5285   0021E2  C024  F01E         	movff	turnRight135@mR,stop@mR
  5286   0021E6  C025  F01F         	movff	turnRight135@mR+1,stop@mR+1
  5287   0021EA  ECA1  F00D         	call	_stop	;wreg free
  5288   0021EE                     
  5289                           ;dc_motor.c: 249:         a--;
  5290   0021EE  0626               	decf	turnRight135@a^0,f,c
  5291   0021F0                     l2810:
  5292                           
  5293                           ;dc_motor.c: 247:     while(a>0){
  5294   0021F0  5026               	movf	turnRight135@a^0,w,c
  5295   0021F2  A4D8               	btfss	status,2,c
  5296   0021F4  EFFE  F010         	goto	u2101
  5297   0021F8  EF00  F011         	goto	u2100
  5298   0021FC                     u2101:
  5299   0021FC  EFED  F010         	goto	l2806
  5300   002200                     u2100:
  5301   002200  0012               	return		;funcret
  5302   002202                     __end_of_turnRight135:
  5303                           	callstack 0
  5304                           
  5305 ;; *************** function _turnRight *****************
  5306 ;; Defined at:
  5307 ;;		line 129 in file "dc_motor.c"
  5308 ;; Parameters:    Size  Location     Type
  5309 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  5310 ;;		 -> main@motorL(9), 
  5311 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  5312 ;;		 -> main@motorR(9), 
  5313 ;; Auto vars:     Size  Location     Type
  5314 ;;		None
  5315 ;; Return value:  Size  Location     Type
  5316 ;;                  1    wreg      void 
  5317 ;; Registers used:
  5318 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5319 ;; Tracked objects:
  5320 ;;		On entry : 0/0
  5321 ;;		On exit  : 0/0
  5322 ;;		Unchanged: 0/0
  5323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5324 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5326 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5327 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5328 ;;Total ram usage:        6 bytes
  5329 ;; Hardware stack levels used: 1
  5330 ;; Hardware stack levels required when called: 9
  5331 ;; This function calls:
  5332 ;;		_setMotorPWM
  5333 ;; This function is called by:
  5334 ;;		_turnRight90
  5335 ;;		_turnRight135
  5336 ;;		_turn180
  5337 ;; This function uses a non-reentrant model
  5338 ;;
  5339                           
  5340                           	psect	text21
  5341   00178E                     __ptext21:
  5342                           	callstack 0
  5343   00178E                     _turnRight:
  5344                           	callstack 17
  5345   00178E                     
  5346                           ;dc_motor.c: 129: void turnRight(DC_motor *mL, DC_motor *mR);dc_motor.c: 130: {;dc_motor
      +                          .c: 132:     mL->direction = 1;
  5347   00178E  EE20 F001          	lfsr	2,1
  5348   001792  501C               	movf	turnRight@mL^0,w,c
  5349   001794  26D9               	addwf	fsr2l,f,c
  5350   001796  501D               	movf	(turnRight@mL+1)^0,w,c
  5351   001798  22DA               	addwfc	fsr2h,f,c
  5352   00179A  0E01               	movlw	1
  5353   00179C  6EDF               	movwf	indf2,c
  5354                           
  5355                           ;dc_motor.c: 133:     mL->brakemode = 0;
  5356   00179E  EE20 F002          	lfsr	2,2
  5357   0017A2  501C               	movf	turnRight@mL^0,w,c
  5358   0017A4  26D9               	addwf	fsr2l,f,c
  5359   0017A6  501D               	movf	(turnRight@mL+1)^0,w,c
  5360   0017A8  22DA               	addwfc	fsr2h,f,c
  5361   0017AA  0E00               	movlw	0
  5362   0017AC  6EDF               	movwf	indf2,c
  5363                           
  5364                           ;dc_motor.c: 135:     mR->direction = 0;
  5365   0017AE  EE20 F001          	lfsr	2,1
  5366   0017B2  501E               	movf	turnRight@mR^0,w,c
  5367   0017B4  26D9               	addwf	fsr2l,f,c
  5368   0017B6  501F               	movf	(turnRight@mR+1)^0,w,c
  5369   0017B8  22DA               	addwfc	fsr2h,f,c
  5370   0017BA  0E00               	movlw	0
  5371   0017BC  6EDF               	movwf	indf2,c
  5372                           
  5373                           ;dc_motor.c: 136:     mR->brakemode = 0;
  5374   0017BE  EE20 F002          	lfsr	2,2
  5375   0017C2  501E               	movf	turnRight@mR^0,w,c
  5376   0017C4  26D9               	addwf	fsr2l,f,c
  5377   0017C6  501F               	movf	(turnRight@mR+1)^0,w,c
  5378   0017C8  22DA               	addwfc	fsr2h,f,c
  5379   0017CA  0E00               	movlw	0
  5380   0017CC  6EDF               	movwf	indf2,c
  5381                           
  5382                           ;dc_motor.c: 139:     if(mL->power>75){mL->power=75;}
  5383   0017CE  C01C  FFD9         	movff	turnRight@mL,fsr2l
  5384   0017D2  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  5385   0017D6  50DF               	movf	indf2,w,c
  5386   0017D8  0A80               	xorlw	128
  5387   0017DA  0F34               	addlw	-204
  5388   0017DC  A0D8               	btfss	status,0,c
  5389   0017DE  EFF3  F00B         	goto	u1991
  5390   0017E2  EFF5  F00B         	goto	u1990
  5391   0017E6                     u1991:
  5392   0017E6  EFFB  F00B         	goto	l2732
  5393   0017EA                     u1990:
  5394   0017EA  C01C  FFD9         	movff	turnRight@mL,fsr2l
  5395   0017EE  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  5396   0017F2  0E4B               	movlw	75
  5397   0017F4  6EDF               	movwf	indf2,c
  5398   0017F6                     l2732:
  5399                           
  5400                           ;dc_motor.c: 140:     if(mR->power>75){mR->power=75;}
  5401   0017F6  C01E  FFD9         	movff	turnRight@mR,fsr2l
  5402   0017FA  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  5403   0017FE  50DF               	movf	indf2,w,c
  5404   001800  0A80               	xorlw	128
  5405   001802  0F34               	addlw	-204
  5406   001804  A0D8               	btfss	status,0,c
  5407   001806  EF07  F00C         	goto	u2001
  5408   00180A  EF09  F00C         	goto	u2000
  5409   00180E                     u2001:
  5410   00180E  EF0F  F00C         	goto	l2736
  5411   001812                     u2000:
  5412   001812  C01E  FFD9         	movff	turnRight@mR,fsr2l
  5413   001816  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  5414   00181A  0E4B               	movlw	75
  5415   00181C  6EDF               	movwf	indf2,c
  5416   00181E                     l2736:
  5417                           
  5418                           ;dc_motor.c: 142:     mL->power = mL->power + 5 ;
  5419   00181E  C01C  FFD9         	movff	turnRight@mL,fsr2l
  5420   001822  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  5421   001826  50DF               	movf	indf2,w,c
  5422   001828  0F05               	addlw	5
  5423   00182A  C01C  FFD9         	movff	turnRight@mL,fsr2l
  5424   00182E  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  5425   001832  6EDF               	movwf	indf2,c
  5426   001834                     
  5427                           ;dc_motor.c: 143:     mR->power = mR->power + 5;
  5428   001834  C01E  FFD9         	movff	turnRight@mR,fsr2l
  5429   001838  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  5430   00183C  50DF               	movf	indf2,w,c
  5431   00183E  0F05               	addlw	5
  5432   001840  C01E  FFD9         	movff	turnRight@mR,fsr2l
  5433   001844  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  5434   001848  6EDF               	movwf	indf2,c
  5435   00184A                     
  5436                           ;dc_motor.c: 145:     setMotorPWM(mL);
  5437   00184A  C01C  F016         	movff	turnRight@mL,setMotorPWM@m
  5438   00184E  C01D  F017         	movff	turnRight@mL+1,setMotorPWM@m+1
  5439   001852  EC16  F00A         	call	_setMotorPWM	;wreg free
  5440   001856                     
  5441                           ;dc_motor.c: 146:     setMotorPWM(mR);
  5442   001856  C01E  F016         	movff	turnRight@mR,setMotorPWM@m
  5443   00185A  C01F  F017         	movff	turnRight@mR+1,setMotorPWM@m+1
  5444   00185E  EC16  F00A         	call	_setMotorPWM	;wreg free
  5445   001862                     
  5446                           ;dc_motor.c: 147:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5447   001862  0E05               	movlw	5
  5448   001864  6E21               	movwf	(??_turnRight+1)^0,c
  5449   001866  0E0F               	movlw	15
  5450   001868  6E20               	movwf	??_turnRight^0,c
  5451   00186A  0EF1               	movlw	241
  5452   00186C                     u4397:
  5453   00186C  2EE8               	decfsz	wreg,f,c
  5454   00186E  D7FE               	bra	u4397
  5455   001870  2E20               	decfsz	??_turnRight^0,f,c
  5456   001872  D7FC               	bra	u4397
  5457   001874  2E21               	decfsz	(??_turnRight+1)^0,f,c
  5458   001876  D7FA               	bra	u4397
  5459   001878  F000               	nop	
  5460   00187A  0012               	return		;funcret
  5461   00187C                     __end_of_turnRight:
  5462                           	callstack 0
  5463                           
  5464 ;; *************** function _LightBlueInstructions *****************
  5465 ;; Defined at:
  5466 ;;		line 103 in file "color_instructions.c"
  5467 ;; Parameters:    Size  Location     Type
  5468 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  5469 ;;		 -> main@motorL(9), 
  5470 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  5471 ;;		 -> main@motorR(9), 
  5472 ;; Auto vars:     Size  Location     Type
  5473 ;;  a               1   44[COMRAM] unsigned char 
  5474 ;; Return value:  Size  Location     Type
  5475 ;;                  1    wreg      void 
  5476 ;; Registers used:
  5477 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5478 ;; Tracked objects:
  5479 ;;		On entry : 0/0
  5480 ;;		On exit  : 0/0
  5481 ;;		Unchanged: 0/0
  5482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5483 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5484 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5485 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5486 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5487 ;;Total ram usage:        7 bytes
  5488 ;; Hardware stack levels used: 1
  5489 ;; Hardware stack levels required when called: 11
  5490 ;; This function calls:
  5491 ;;		_fullSpeedBackwards
  5492 ;;		_stop
  5493 ;;		_turnLeft135
  5494 ;; This function is called by:
  5495 ;;		_MoveBuggy
  5496 ;; This function uses a non-reentrant model
  5497 ;;
  5498                           
  5499                           	psect	text22
  5500   001F70                     __ptext22:
  5501                           	callstack 0
  5502   001F70                     _LightBlueInstructions:
  5503                           	callstack 17
  5504   001F70                     
  5505                           ;color_instructions.c: 104:     unsigned char a=0;
  5506   001F70  0E00               	movlw	0
  5507   001F72  6E2D               	movwf	LightBlueInstructions@a^0,c
  5508                           
  5509                           ;color_instructions.c: 105:     while (a<15){
  5510   001F74  EFC7  F00F         	goto	l2986
  5511   001F78                     l2982:
  5512                           
  5513                           ;color_instructions.c: 106:         fullSpeedBackwards(mL, mR);
  5514   001F78  C027  F01C         	movff	LightBlueInstructions@mL,fullSpeedBackwards@mL
  5515   001F7C  C028  F01D         	movff	LightBlueInstructions@mL+1,fullSpeedBackwards@mL+1
  5516   001F80  C029  F01E         	movff	LightBlueInstructions@mR,fullSpeedBackwards@mR
  5517   001F84  C02A  F01F         	movff	LightBlueInstructions@mR+1,fullSpeedBackwards@mR+1
  5518   001F88  ECB5  F00C         	call	_fullSpeedBackwards	;wreg free
  5519   001F8C                     
  5520                           ;color_instructions.c: 107:         a++;
  5521   001F8C  2A2D               	incf	LightBlueInstructions@a^0,f,c
  5522   001F8E                     l2986:
  5523                           
  5524                           ;color_instructions.c: 105:     while (a<15){
  5525   001F8E  0E0E               	movlw	14
  5526   001F90  642D               	cpfsgt	LightBlueInstructions@a^0,c
  5527   001F92  EFCD  F00F         	goto	u2271
  5528   001F96  EFCF  F00F         	goto	u2270
  5529   001F9A                     u2271:
  5530   001F9A  EFBC  F00F         	goto	l2982
  5531   001F9E                     u2270:
  5532   001F9E  EFDC  F00F         	goto	l2992
  5533   001FA2                     l2988:
  5534                           
  5535                           ;color_instructions.c: 110:         stop(mL, mR);
  5536   001FA2  C027  F01C         	movff	LightBlueInstructions@mL,stop@mL
  5537   001FA6  C028  F01D         	movff	LightBlueInstructions@mL+1,stop@mL+1
  5538   001FAA  C029  F01E         	movff	LightBlueInstructions@mR,stop@mR
  5539   001FAE  C02A  F01F         	movff	LightBlueInstructions@mR+1,stop@mR+1
  5540   001FB2  ECA1  F00D         	call	_stop	;wreg free
  5541   001FB6                     
  5542                           ;color_instructions.c: 111:         a--;
  5543   001FB6  062D               	decf	LightBlueInstructions@a^0,f,c
  5544   001FB8                     l2992:
  5545                           
  5546                           ;color_instructions.c: 109:     while (a>0){
  5547   001FB8  502D               	movf	LightBlueInstructions@a^0,w,c
  5548   001FBA  A4D8               	btfss	status,2,c
  5549   001FBC  EFE2  F00F         	goto	u2281
  5550   001FC0  EFE4  F00F         	goto	u2280
  5551   001FC4                     u2281:
  5552   001FC4  EFD1  F00F         	goto	l2988
  5553   001FC8                     u2280:
  5554   001FC8                     
  5555                           ;color_instructions.c: 113:     _delay((unsigned long)((100)*(64000000/4000.0)));
  5556   001FC8  0E09               	movlw	9
  5557   001FCA  6E2C               	movwf	(??_LightBlueInstructions+1)^0,c
  5558   001FCC  0E1E               	movlw	30
  5559   001FCE  6E2B               	movwf	??_LightBlueInstructions^0,c
  5560   001FD0  0EE4               	movlw	228
  5561   001FD2                     u4407:
  5562   001FD2  2EE8               	decfsz	wreg,f,c
  5563   001FD4  D7FE               	bra	u4407
  5564   001FD6  2E2B               	decfsz	??_LightBlueInstructions^0,f,c
  5565   001FD8  D7FC               	bra	u4407
  5566   001FDA  2E2C               	decfsz	(??_LightBlueInstructions+1)^0,f,c
  5567   001FDC  D7FA               	bra	u4407
  5568   001FDE  D000               	nop2	
  5569   001FE0                     
  5570                           ;color_instructions.c: 115:     turnLeft135(mL, mR);
  5571   001FE0  C027  F022         	movff	LightBlueInstructions@mL,turnLeft135@mL
  5572   001FE4  C028  F023         	movff	LightBlueInstructions@mL+1,turnLeft135@mL+1
  5573   001FE8  C029  F024         	movff	LightBlueInstructions@mR,turnLeft135@mR
  5574   001FEC  C02A  F025         	movff	LightBlueInstructions@mR+1,turnLeft135@mR+1
  5575   001FF0  EC01  F011         	call	_turnLeft135	;wreg free
  5576   001FF4  0012               	return		;funcret
  5577   001FF6                     __end_of_LightBlueInstructions:
  5578                           	callstack 0
  5579                           
  5580 ;; *************** function _turnLeft135 *****************
  5581 ;; Defined at:
  5582 ;;		line 253 in file "dc_motor.c"
  5583 ;; Parameters:    Size  Location     Type
  5584 ;;  mL              2   33[COMRAM] PTR struct DC_motor
  5585 ;;		 -> main@motorL(9), 
  5586 ;;  mR              2   35[COMRAM] PTR struct DC_motor
  5587 ;;		 -> main@motorR(9), 
  5588 ;; Auto vars:     Size  Location     Type
  5589 ;;  a               1   37[COMRAM] unsigned char 
  5590 ;; Return value:  Size  Location     Type
  5591 ;;                  1    wreg      void 
  5592 ;; Registers used:
  5593 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5594 ;; Tracked objects:
  5595 ;;		On entry : 0/0
  5596 ;;		On exit  : 0/0
  5597 ;;		Unchanged: 0/0
  5598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5599 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5600 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5602 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5603 ;;Total ram usage:        5 bytes
  5604 ;; Hardware stack levels used: 1
  5605 ;; Hardware stack levels required when called: 10
  5606 ;; This function calls:
  5607 ;;		_stop
  5608 ;;		_turnLeft
  5609 ;; This function is called by:
  5610 ;;		_LightBlueInstructions
  5611 ;; This function uses a non-reentrant model
  5612 ;;
  5613                           
  5614                           	psect	text23
  5615   002202                     __ptext23:
  5616                           	callstack 0
  5617   002202                     _turnLeft135:
  5618                           	callstack 17
  5619   002202                     
  5620                           ;dc_motor.c: 255:     unsigned char a=0;
  5621   002202  0E00               	movlw	0
  5622   002204  6E26               	movwf	turnLeft135@a^0,c
  5623                           
  5624                           ;dc_motor.c: 256:     while(a<21){
  5625   002206  EF10  F011         	goto	l2818
  5626   00220A                     l2814:
  5627                           
  5628                           ;dc_motor.c: 257:         turnLeft(mL, mR);
  5629   00220A  C022  F01C         	movff	turnLeft135@mL,turnLeft@mL
  5630   00220E  C023  F01D         	movff	turnLeft135@mL+1,turnLeft@mL+1
  5631   002212  C024  F01E         	movff	turnLeft135@mR,turnLeft@mR
  5632   002216  C025  F01F         	movff	turnLeft135@mR+1,turnLeft@mR+1
  5633   00221A  EC3E  F00C         	call	_turnLeft	;wreg free
  5634   00221E                     
  5635                           ;dc_motor.c: 258:         a++;
  5636   00221E  2A26               	incf	turnLeft135@a^0,f,c
  5637   002220                     l2818:
  5638                           
  5639                           ;dc_motor.c: 256:     while(a<21){
  5640   002220  0E14               	movlw	20
  5641   002222  6426               	cpfsgt	turnLeft135@a^0,c
  5642   002224  EF16  F011         	goto	u2111
  5643   002228  EF18  F011         	goto	u2110
  5644   00222C                     u2111:
  5645   00222C  EF05  F011         	goto	l2814
  5646   002230                     u2110:
  5647   002230  EF25  F011         	goto	l2824
  5648   002234                     l2820:
  5649                           
  5650                           ;dc_motor.c: 261:         stop(mL, mR);
  5651   002234  C022  F01C         	movff	turnLeft135@mL,stop@mL
  5652   002238  C023  F01D         	movff	turnLeft135@mL+1,stop@mL+1
  5653   00223C  C024  F01E         	movff	turnLeft135@mR,stop@mR
  5654   002240  C025  F01F         	movff	turnLeft135@mR+1,stop@mR+1
  5655   002244  ECA1  F00D         	call	_stop	;wreg free
  5656   002248                     
  5657                           ;dc_motor.c: 262:         a--;
  5658   002248  0626               	decf	turnLeft135@a^0,f,c
  5659   00224A                     l2824:
  5660                           
  5661                           ;dc_motor.c: 260:     while(a>0){
  5662   00224A  5026               	movf	turnLeft135@a^0,w,c
  5663   00224C  A4D8               	btfss	status,2,c
  5664   00224E  EF2B  F011         	goto	u2121
  5665   002252  EF2D  F011         	goto	u2120
  5666   002256                     u2121:
  5667   002256  EF1A  F011         	goto	l2820
  5668   00225A                     u2120:
  5669   00225A  0012               	return		;funcret
  5670   00225C                     __end_of_turnLeft135:
  5671                           	callstack 0
  5672                           
  5673 ;; *************** function _GreenInstructions *****************
  5674 ;; Defined at:
  5675 ;;		line 25 in file "color_instructions.c"
  5676 ;; Parameters:    Size  Location     Type
  5677 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  5678 ;;		 -> main@motorL(9), 
  5679 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  5680 ;;		 -> main@motorR(9), 
  5681 ;; Auto vars:     Size  Location     Type
  5682 ;;  a               1   44[COMRAM] unsigned char 
  5683 ;; Return value:  Size  Location     Type
  5684 ;;                  1    wreg      void 
  5685 ;; Registers used:
  5686 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5687 ;; Tracked objects:
  5688 ;;		On entry : 0/0
  5689 ;;		On exit  : 0/0
  5690 ;;		Unchanged: 0/0
  5691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5692 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5693 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5694 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5695 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5696 ;;Total ram usage:        7 bytes
  5697 ;; Hardware stack levels used: 1
  5698 ;; Hardware stack levels required when called: 11
  5699 ;; This function calls:
  5700 ;;		_fullSpeedBackwards
  5701 ;;		_stop
  5702 ;;		_turnLeft90
  5703 ;; This function is called by:
  5704 ;;		_MoveBuggy
  5705 ;; This function uses a non-reentrant model
  5706 ;;
  5707                           
  5708                           	psect	text24
  5709   001FF6                     __ptext24:
  5710                           	callstack 0
  5711   001FF6                     _GreenInstructions:
  5712                           	callstack 17
  5713   001FF6                     
  5714                           ;color_instructions.c: 26:     unsigned char a=0;
  5715   001FF6  0E00               	movlw	0
  5716   001FF8  6E2D               	movwf	GreenInstructions@a^0,c
  5717                           
  5718                           ;color_instructions.c: 27:     while (a<15){
  5719   001FFA  EF0A  F010         	goto	l2894
  5720   001FFE                     l2890:
  5721                           
  5722                           ;color_instructions.c: 28:         fullSpeedBackwards(mL, mR);
  5723   001FFE  C027  F01C         	movff	GreenInstructions@mL,fullSpeedBackwards@mL
  5724   002002  C028  F01D         	movff	GreenInstructions@mL+1,fullSpeedBackwards@mL+1
  5725   002006  C029  F01E         	movff	GreenInstructions@mR,fullSpeedBackwards@mR
  5726   00200A  C02A  F01F         	movff	GreenInstructions@mR+1,fullSpeedBackwards@mR+1
  5727   00200E  ECB5  F00C         	call	_fullSpeedBackwards	;wreg free
  5728   002012                     
  5729                           ;color_instructions.c: 29:         a++;
  5730   002012  2A2D               	incf	GreenInstructions@a^0,f,c
  5731   002014                     l2894:
  5732                           
  5733                           ;color_instructions.c: 27:     while (a<15){
  5734   002014  0E0E               	movlw	14
  5735   002016  642D               	cpfsgt	GreenInstructions@a^0,c
  5736   002018  EF10  F010         	goto	u2171
  5737   00201C  EF12  F010         	goto	u2170
  5738   002020                     u2171:
  5739   002020  EFFF  F00F         	goto	l2890
  5740   002024                     u2170:
  5741   002024  EF1F  F010         	goto	l2900
  5742   002028                     l2896:
  5743                           
  5744                           ;color_instructions.c: 32:         stop(mL, mR);
  5745   002028  C027  F01C         	movff	GreenInstructions@mL,stop@mL
  5746   00202C  C028  F01D         	movff	GreenInstructions@mL+1,stop@mL+1
  5747   002030  C029  F01E         	movff	GreenInstructions@mR,stop@mR
  5748   002034  C02A  F01F         	movff	GreenInstructions@mR+1,stop@mR+1
  5749   002038  ECA1  F00D         	call	_stop	;wreg free
  5750   00203C                     
  5751                           ;color_instructions.c: 33:         a--;
  5752   00203C  062D               	decf	GreenInstructions@a^0,f,c
  5753   00203E                     l2900:
  5754                           
  5755                           ;color_instructions.c: 31:     while (a>0){
  5756   00203E  502D               	movf	GreenInstructions@a^0,w,c
  5757   002040  A4D8               	btfss	status,2,c
  5758   002042  EF25  F010         	goto	u2181
  5759   002046  EF27  F010         	goto	u2180
  5760   00204A                     u2181:
  5761   00204A  EF14  F010         	goto	l2896
  5762   00204E                     u2180:
  5763   00204E                     
  5764                           ;color_instructions.c: 35:     _delay((unsigned long)((100)*(64000000/4000.0)));
  5765   00204E  0E09               	movlw	9
  5766   002050  6E2C               	movwf	(??_GreenInstructions+1)^0,c
  5767   002052  0E1E               	movlw	30
  5768   002054  6E2B               	movwf	??_GreenInstructions^0,c
  5769   002056  0EE4               	movlw	228
  5770   002058                     u4417:
  5771   002058  2EE8               	decfsz	wreg,f,c
  5772   00205A  D7FE               	bra	u4417
  5773   00205C  2E2B               	decfsz	??_GreenInstructions^0,f,c
  5774   00205E  D7FC               	bra	u4417
  5775   002060  2E2C               	decfsz	(??_GreenInstructions+1)^0,f,c
  5776   002062  D7FA               	bra	u4417
  5777   002064  D000               	nop2	
  5778   002066                     
  5779                           ;color_instructions.c: 36:     turnLeft90(mL, mR);
  5780   002066  C027  F022         	movff	GreenInstructions@mL,turnLeft90@mL
  5781   00206A  C028  F023         	movff	GreenInstructions@mL+1,turnLeft90@mL+1
  5782   00206E  C029  F024         	movff	GreenInstructions@mR,turnLeft90@mR
  5783   002072  C02A  F025         	movff	GreenInstructions@mR+1,turnLeft90@mR+1
  5784   002076  EC2E  F011         	call	_turnLeft90	;wreg free
  5785   00207A  0012               	return		;funcret
  5786   00207C                     __end_of_GreenInstructions:
  5787                           	callstack 0
  5788                           
  5789 ;; *************** function _BlueInstructions *****************
  5790 ;; Defined at:
  5791 ;;		line 39 in file "color_instructions.c"
  5792 ;; Parameters:    Size  Location     Type
  5793 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  5794 ;;		 -> main@motorL(9), 
  5795 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  5796 ;;		 -> main@motorR(9), 
  5797 ;; Auto vars:     Size  Location     Type
  5798 ;;  a               1   44[COMRAM] unsigned char 
  5799 ;; Return value:  Size  Location     Type
  5800 ;;                  1    wreg      void 
  5801 ;; Registers used:
  5802 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5803 ;; Tracked objects:
  5804 ;;		On entry : 0/0
  5805 ;;		On exit  : 0/0
  5806 ;;		Unchanged: 0/0
  5807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5808 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5809 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5810 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5811 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5812 ;;Total ram usage:        7 bytes
  5813 ;; Hardware stack levels used: 1
  5814 ;; Hardware stack levels required when called: 11
  5815 ;; This function calls:
  5816 ;;		_fullSpeedBackwards
  5817 ;;		_stop
  5818 ;;		_turnLeft90
  5819 ;; This function is called by:
  5820 ;;		_WhiteInstructions
  5821 ;;		_MoveBuggy
  5822 ;; This function uses a non-reentrant model
  5823 ;;
  5824                           
  5825                           	psect	text25
  5826   001C16                     __ptext25:
  5827                           	callstack 0
  5828   001C16                     _BlueInstructions:
  5829                           	callstack 17
  5830   001C16                     
  5831                           ;color_instructions.c: 40:     unsigned char a=0;
  5832   001C16  0E00               	movlw	0
  5833   001C18  6E2D               	movwf	BlueInstructions@a^0,c
  5834                           
  5835                           ;color_instructions.c: 41:     while (a<15){
  5836   001C1A  EF1A  F00E         	goto	l2912
  5837   001C1E                     l2908:
  5838                           
  5839                           ;color_instructions.c: 42:         fullSpeedBackwards(mL, mR);
  5840   001C1E  C027  F01C         	movff	BlueInstructions@mL,fullSpeedBackwards@mL
  5841   001C22  C028  F01D         	movff	BlueInstructions@mL+1,fullSpeedBackwards@mL+1
  5842   001C26  C029  F01E         	movff	BlueInstructions@mR,fullSpeedBackwards@mR
  5843   001C2A  C02A  F01F         	movff	BlueInstructions@mR+1,fullSpeedBackwards@mR+1
  5844   001C2E  ECB5  F00C         	call	_fullSpeedBackwards	;wreg free
  5845   001C32                     
  5846                           ;color_instructions.c: 43:         a++;
  5847   001C32  2A2D               	incf	BlueInstructions@a^0,f,c
  5848   001C34                     l2912:
  5849                           
  5850                           ;color_instructions.c: 41:     while (a<15){
  5851   001C34  0E0E               	movlw	14
  5852   001C36  642D               	cpfsgt	BlueInstructions@a^0,c
  5853   001C38  EF20  F00E         	goto	u2191
  5854   001C3C  EF22  F00E         	goto	u2190
  5855   001C40                     u2191:
  5856   001C40  EF0F  F00E         	goto	l2908
  5857   001C44                     u2190:
  5858   001C44  EF2F  F00E         	goto	l2918
  5859   001C48                     l2914:
  5860                           
  5861                           ;color_instructions.c: 46:         stop(mL, mR);
  5862   001C48  C027  F01C         	movff	BlueInstructions@mL,stop@mL
  5863   001C4C  C028  F01D         	movff	BlueInstructions@mL+1,stop@mL+1
  5864   001C50  C029  F01E         	movff	BlueInstructions@mR,stop@mR
  5865   001C54  C02A  F01F         	movff	BlueInstructions@mR+1,stop@mR+1
  5866   001C58  ECA1  F00D         	call	_stop	;wreg free
  5867   001C5C                     
  5868                           ;color_instructions.c: 47:         a--;
  5869   001C5C  062D               	decf	BlueInstructions@a^0,f,c
  5870   001C5E                     l2918:
  5871                           
  5872                           ;color_instructions.c: 45:     while (a>0){
  5873   001C5E  502D               	movf	BlueInstructions@a^0,w,c
  5874   001C60  A4D8               	btfss	status,2,c
  5875   001C62  EF35  F00E         	goto	u2201
  5876   001C66  EF37  F00E         	goto	u2200
  5877   001C6A                     u2201:
  5878   001C6A  EF24  F00E         	goto	l2914
  5879   001C6E                     u2200:
  5880   001C6E                     
  5881                           ;color_instructions.c: 49:     _delay((unsigned long)((100)*(64000000/4000.0)));
  5882   001C6E  0E09               	movlw	9
  5883   001C70  6E2C               	movwf	(??_BlueInstructions+1)^0,c
  5884   001C72  0E1E               	movlw	30
  5885   001C74  6E2B               	movwf	??_BlueInstructions^0,c
  5886   001C76  0EE4               	movlw	228
  5887   001C78                     u4427:
  5888   001C78  2EE8               	decfsz	wreg,f,c
  5889   001C7A  D7FE               	bra	u4427
  5890   001C7C  2E2B               	decfsz	??_BlueInstructions^0,f,c
  5891   001C7E  D7FC               	bra	u4427
  5892   001C80  2E2C               	decfsz	(??_BlueInstructions+1)^0,f,c
  5893   001C82  D7FA               	bra	u4427
  5894   001C84  D000               	nop2	
  5895   001C86                     
  5896                           ;color_instructions.c: 52:     turnLeft90(mL, mR);
  5897   001C86  C027  F022         	movff	BlueInstructions@mL,turnLeft90@mL
  5898   001C8A  C028  F023         	movff	BlueInstructions@mL+1,turnLeft90@mL+1
  5899   001C8E  C029  F024         	movff	BlueInstructions@mR,turnLeft90@mR
  5900   001C92  C02A  F025         	movff	BlueInstructions@mR+1,turnLeft90@mR+1
  5901   001C96  EC2E  F011         	call	_turnLeft90	;wreg free
  5902   001C9A                     
  5903                           ;color_instructions.c: 53:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5904   001C9A  0E05               	movlw	5
  5905   001C9C  6E2C               	movwf	(??_BlueInstructions+1)^0,c
  5906   001C9E  0E0F               	movlw	15
  5907   001CA0  6E2B               	movwf	??_BlueInstructions^0,c
  5908   001CA2  0EF1               	movlw	241
  5909   001CA4                     u4437:
  5910   001CA4  2EE8               	decfsz	wreg,f,c
  5911   001CA6  D7FE               	bra	u4437
  5912   001CA8  2E2B               	decfsz	??_BlueInstructions^0,f,c
  5913   001CAA  D7FC               	bra	u4437
  5914   001CAC  2E2C               	decfsz	(??_BlueInstructions+1)^0,f,c
  5915   001CAE  D7FA               	bra	u4437
  5916   001CB0  F000               	nop	
  5917                           
  5918                           ;color_instructions.c: 54:     turnLeft90(mL, mR);
  5919   001CB2  C027  F022         	movff	BlueInstructions@mL,turnLeft90@mL
  5920   001CB6  C028  F023         	movff	BlueInstructions@mL+1,turnLeft90@mL+1
  5921   001CBA  C029  F024         	movff	BlueInstructions@mR,turnLeft90@mR
  5922   001CBE  C02A  F025         	movff	BlueInstructions@mR+1,turnLeft90@mR+1
  5923   001CC2  EC2E  F011         	call	_turnLeft90	;wreg free
  5924   001CC6  0012               	return		;funcret
  5925   001CC8                     __end_of_BlueInstructions:
  5926                           	callstack 0
  5927                           
  5928 ;; *************** function _turnLeft90 *****************
  5929 ;; Defined at:
  5930 ;;		line 200 in file "dc_motor.c"
  5931 ;; Parameters:    Size  Location     Type
  5932 ;;  mL              2   33[COMRAM] PTR struct DC_motor
  5933 ;;		 -> main@motorL(9), 
  5934 ;;  mR              2   35[COMRAM] PTR struct DC_motor
  5935 ;;		 -> main@motorR(9), 
  5936 ;; Auto vars:     Size  Location     Type
  5937 ;;  a               1   37[COMRAM] unsigned char 
  5938 ;; Return value:  Size  Location     Type
  5939 ;;                  1    wreg      void 
  5940 ;; Registers used:
  5941 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5942 ;; Tracked objects:
  5943 ;;		On entry : 0/0
  5944 ;;		On exit  : 0/0
  5945 ;;		Unchanged: 0/0
  5946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5947 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5948 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5950 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5951 ;;Total ram usage:        5 bytes
  5952 ;; Hardware stack levels used: 1
  5953 ;; Hardware stack levels required when called: 10
  5954 ;; This function calls:
  5955 ;;		_stop
  5956 ;;		_turnLeft
  5957 ;; This function is called by:
  5958 ;;		_GreenInstructions
  5959 ;;		_BlueInstructions
  5960 ;;		_PinkInstructions
  5961 ;; This function uses a non-reentrant model
  5962 ;;
  5963                           
  5964                           	psect	text26
  5965   00225C                     __ptext26:
  5966                           	callstack 0
  5967   00225C                     _turnLeft90:
  5968                           	callstack 17
  5969   00225C                     
  5970                           ;dc_motor.c: 202:     unsigned char a=0;
  5971   00225C  0E00               	movlw	0
  5972   00225E  6E26               	movwf	turnLeft90@a^0,c
  5973                           
  5974                           ;dc_motor.c: 203:     while(a<19){
  5975   002260  EF3D  F011         	goto	l2776
  5976   002264                     l2772:
  5977                           
  5978                           ;dc_motor.c: 204:         turnLeft(mL, mR);
  5979   002264  C022  F01C         	movff	turnLeft90@mL,turnLeft@mL
  5980   002268  C023  F01D         	movff	turnLeft90@mL+1,turnLeft@mL+1
  5981   00226C  C024  F01E         	movff	turnLeft90@mR,turnLeft@mR
  5982   002270  C025  F01F         	movff	turnLeft90@mR+1,turnLeft@mR+1
  5983   002274  EC3E  F00C         	call	_turnLeft	;wreg free
  5984   002278                     
  5985                           ;dc_motor.c: 205:         a++;
  5986   002278  2A26               	incf	turnLeft90@a^0,f,c
  5987   00227A                     l2776:
  5988                           
  5989                           ;dc_motor.c: 203:     while(a<19){
  5990   00227A  0E12               	movlw	18
  5991   00227C  6426               	cpfsgt	turnLeft90@a^0,c
  5992   00227E  EF43  F011         	goto	u2051
  5993   002282  EF45  F011         	goto	u2050
  5994   002286                     u2051:
  5995   002286  EF32  F011         	goto	l2772
  5996   00228A                     u2050:
  5997   00228A  EF52  F011         	goto	l2782
  5998   00228E                     l2778:
  5999                           
  6000                           ;dc_motor.c: 208:         stop(mL, mR);
  6001   00228E  C022  F01C         	movff	turnLeft90@mL,stop@mL
  6002   002292  C023  F01D         	movff	turnLeft90@mL+1,stop@mL+1
  6003   002296  C024  F01E         	movff	turnLeft90@mR,stop@mR
  6004   00229A  C025  F01F         	movff	turnLeft90@mR+1,stop@mR+1
  6005   00229E  ECA1  F00D         	call	_stop	;wreg free
  6006   0022A2                     
  6007                           ;dc_motor.c: 209:         a--;
  6008   0022A2  0626               	decf	turnLeft90@a^0,f,c
  6009   0022A4                     l2782:
  6010                           
  6011                           ;dc_motor.c: 207:     while(a>0){
  6012   0022A4  5026               	movf	turnLeft90@a^0,w,c
  6013   0022A6  A4D8               	btfss	status,2,c
  6014   0022A8  EF58  F011         	goto	u2061
  6015   0022AC  EF5A  F011         	goto	u2060
  6016   0022B0                     u2061:
  6017   0022B0  EF47  F011         	goto	l2778
  6018   0022B4                     u2060:
  6019   0022B4  0012               	return		;funcret
  6020   0022B6                     __end_of_turnLeft90:
  6021                           	callstack 0
  6022                           
  6023 ;; *************** function _turnLeft *****************
  6024 ;; Defined at:
  6025 ;;		line 107 in file "dc_motor.c"
  6026 ;; Parameters:    Size  Location     Type
  6027 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6028 ;;		 -> main@motorL(9), 
  6029 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6030 ;;		 -> main@motorR(9), 
  6031 ;; Auto vars:     Size  Location     Type
  6032 ;;		None
  6033 ;; Return value:  Size  Location     Type
  6034 ;;                  1    wreg      void 
  6035 ;; Registers used:
  6036 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6037 ;; Tracked objects:
  6038 ;;		On entry : 0/0
  6039 ;;		On exit  : 0/0
  6040 ;;		Unchanged: 0/0
  6041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6042 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6044 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6045 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6046 ;;Total ram usage:        6 bytes
  6047 ;; Hardware stack levels used: 1
  6048 ;; Hardware stack levels required when called: 9
  6049 ;; This function calls:
  6050 ;;		_setMotorPWM
  6051 ;; This function is called by:
  6052 ;;		_turnLeft90
  6053 ;;		_turnLeft135
  6054 ;; This function uses a non-reentrant model
  6055 ;;
  6056                           
  6057                           	psect	text27
  6058   00187C                     __ptext27:
  6059                           	callstack 0
  6060   00187C                     _turnLeft:
  6061                           	callstack 17
  6062   00187C                     
  6063                           ;dc_motor.c: 107: void turnLeft(DC_motor *mL, DC_motor *mR);dc_motor.c: 108: {;dc_motor.
      +                          c: 110:     mL->direction = 0;
  6064   00187C  EE20 F001          	lfsr	2,1
  6065   001880  501C               	movf	turnLeft@mL^0,w,c
  6066   001882  26D9               	addwf	fsr2l,f,c
  6067   001884  501D               	movf	(turnLeft@mL+1)^0,w,c
  6068   001886  22DA               	addwfc	fsr2h,f,c
  6069   001888  0E00               	movlw	0
  6070   00188A  6EDF               	movwf	indf2,c
  6071                           
  6072                           ;dc_motor.c: 111:     mL->brakemode = 0;
  6073   00188C  EE20 F002          	lfsr	2,2
  6074   001890  501C               	movf	turnLeft@mL^0,w,c
  6075   001892  26D9               	addwf	fsr2l,f,c
  6076   001894  501D               	movf	(turnLeft@mL+1)^0,w,c
  6077   001896  22DA               	addwfc	fsr2h,f,c
  6078   001898  0E00               	movlw	0
  6079   00189A  6EDF               	movwf	indf2,c
  6080                           
  6081                           ;dc_motor.c: 113:     mR->direction = 1;
  6082   00189C  EE20 F001          	lfsr	2,1
  6083   0018A0  501E               	movf	turnLeft@mR^0,w,c
  6084   0018A2  26D9               	addwf	fsr2l,f,c
  6085   0018A4  501F               	movf	(turnLeft@mR+1)^0,w,c
  6086   0018A6  22DA               	addwfc	fsr2h,f,c
  6087   0018A8  0E01               	movlw	1
  6088   0018AA  6EDF               	movwf	indf2,c
  6089                           
  6090                           ;dc_motor.c: 114:     mR->brakemode = 0;
  6091   0018AC  EE20 F002          	lfsr	2,2
  6092   0018B0  501E               	movf	turnLeft@mR^0,w,c
  6093   0018B2  26D9               	addwf	fsr2l,f,c
  6094   0018B4  501F               	movf	(turnLeft@mR+1)^0,w,c
  6095   0018B6  22DA               	addwfc	fsr2h,f,c
  6096   0018B8  0E00               	movlw	0
  6097   0018BA  6EDF               	movwf	indf2,c
  6098                           
  6099                           ;dc_motor.c: 117:     if(mL->power>75){mL->power=75;}
  6100   0018BC  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6101   0018C0  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6102   0018C4  50DF               	movf	indf2,w,c
  6103   0018C6  0A80               	xorlw	128
  6104   0018C8  0F34               	addlw	-204
  6105   0018CA  A0D8               	btfss	status,0,c
  6106   0018CC  EF6A  F00C         	goto	u1971
  6107   0018D0  EF6C  F00C         	goto	u1970
  6108   0018D4                     u1971:
  6109   0018D4  EF72  F00C         	goto	l2714
  6110   0018D8                     u1970:
  6111   0018D8  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6112   0018DC  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6113   0018E0  0E4B               	movlw	75
  6114   0018E2  6EDF               	movwf	indf2,c
  6115   0018E4                     l2714:
  6116                           
  6117                           ;dc_motor.c: 118:     if(mR->power>75){mR->power=75;}
  6118   0018E4  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6119   0018E8  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6120   0018EC  50DF               	movf	indf2,w,c
  6121   0018EE  0A80               	xorlw	128
  6122   0018F0  0F34               	addlw	-204
  6123   0018F2  A0D8               	btfss	status,0,c
  6124   0018F4  EF7E  F00C         	goto	u1981
  6125   0018F8  EF80  F00C         	goto	u1980
  6126   0018FC                     u1981:
  6127   0018FC  EF86  F00C         	goto	l2718
  6128   001900                     u1980:
  6129   001900  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6130   001904  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6131   001908  0E4B               	movlw	75
  6132   00190A  6EDF               	movwf	indf2,c
  6133   00190C                     l2718:
  6134                           
  6135                           ;dc_motor.c: 120:     mL->power = mL->power + 5 ;
  6136   00190C  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6137   001910  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6138   001914  50DF               	movf	indf2,w,c
  6139   001916  0F05               	addlw	5
  6140   001918  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6141   00191C  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6142   001920  6EDF               	movwf	indf2,c
  6143   001922                     
  6144                           ;dc_motor.c: 121:     mR->power = mR->power + 5;
  6145   001922  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6146   001926  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6147   00192A  50DF               	movf	indf2,w,c
  6148   00192C  0F05               	addlw	5
  6149   00192E  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6150   001932  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6151   001936  6EDF               	movwf	indf2,c
  6152   001938                     
  6153                           ;dc_motor.c: 123:     setMotorPWM(mL);
  6154   001938  C01C  F016         	movff	turnLeft@mL,setMotorPWM@m
  6155   00193C  C01D  F017         	movff	turnLeft@mL+1,setMotorPWM@m+1
  6156   001940  EC16  F00A         	call	_setMotorPWM	;wreg free
  6157   001944                     
  6158                           ;dc_motor.c: 124:     setMotorPWM(mR);
  6159   001944  C01E  F016         	movff	turnLeft@mR,setMotorPWM@m
  6160   001948  C01F  F017         	movff	turnLeft@mR+1,setMotorPWM@m+1
  6161   00194C  EC16  F00A         	call	_setMotorPWM	;wreg free
  6162   001950                     
  6163                           ;dc_motor.c: 125:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6164   001950  0E05               	movlw	5
  6165   001952  6E21               	movwf	(??_turnLeft+1)^0,c
  6166   001954  0E0F               	movlw	15
  6167   001956  6E20               	movwf	??_turnLeft^0,c
  6168   001958  0EF1               	movlw	241
  6169   00195A                     u4447:
  6170   00195A  2EE8               	decfsz	wreg,f,c
  6171   00195C  D7FE               	bra	u4447
  6172   00195E  2E20               	decfsz	??_turnLeft^0,f,c
  6173   001960  D7FC               	bra	u4447
  6174   001962  2E21               	decfsz	(??_turnLeft+1)^0,f,c
  6175   001964  D7FA               	bra	u4447
  6176   001966  F000               	nop	
  6177   001968  0012               	return		;funcret
  6178   00196A                     __end_of_turnLeft:
  6179                           	callstack 0
  6180                           
  6181 ;; *************** function _stop *****************
  6182 ;; Defined at:
  6183 ;;		line 87 in file "dc_motor.c"
  6184 ;; Parameters:    Size  Location     Type
  6185 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6186 ;;		 -> main@motorL(9), 
  6187 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6188 ;;		 -> main@motorR(9), 
  6189 ;; Auto vars:     Size  Location     Type
  6190 ;;		None
  6191 ;; Return value:  Size  Location     Type
  6192 ;;                  1    wreg      void 
  6193 ;; Registers used:
  6194 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6195 ;; Tracked objects:
  6196 ;;		On entry : 0/0
  6197 ;;		On exit  : 0/0
  6198 ;;		Unchanged: 0/0
  6199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6200 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6202 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6203 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6204 ;;Total ram usage:        5 bytes
  6205 ;; Hardware stack levels used: 1
  6206 ;; Hardware stack levels required when called: 9
  6207 ;; This function calls:
  6208 ;;		_setMotorPWM
  6209 ;; This function is called by:
  6210 ;;		_turnLeft90
  6211 ;;		_turnRight90
  6212 ;;		_turnRight135
  6213 ;;		_turnLeft135
  6214 ;;		_main
  6215 ;;		_RedInstructions
  6216 ;;		_GreenInstructions
  6217 ;;		_BlueInstructions
  6218 ;;		_YellowInstructions
  6219 ;;		_PinkInstructions
  6220 ;;		_OrangeInstructions
  6221 ;;		_LightBlueInstructions
  6222 ;;		_WhiteInstructions
  6223 ;;		_turn180
  6224 ;; This function uses a non-reentrant model
  6225 ;;
  6226                           
  6227                           	psect	text28
  6228   001B42                     __ptext28:
  6229                           	callstack 0
  6230   001B42                     _stop:
  6231                           	callstack 21
  6232   001B42                     
  6233                           ;dc_motor.c: 87: void stop(DC_motor *mL, DC_motor *mR);dc_motor.c: 88: {;dc_motor.c: 90:
      +                               mL->brakemode = 1;
  6234   001B42  EE20 F002          	lfsr	2,2
  6235   001B46  501C               	movf	stop@mL^0,w,c
  6236   001B48  26D9               	addwf	fsr2l,f,c
  6237   001B4A  501D               	movf	(stop@mL+1)^0,w,c
  6238   001B4C  22DA               	addwfc	fsr2h,f,c
  6239   001B4E  0E01               	movlw	1
  6240   001B50  6EDF               	movwf	indf2,c
  6241                           
  6242                           ;dc_motor.c: 91:     mR->brakemode = 1;
  6243   001B52  EE20 F002          	lfsr	2,2
  6244   001B56  501E               	movf	stop@mR^0,w,c
  6245   001B58  26D9               	addwf	fsr2l,f,c
  6246   001B5A  501F               	movf	(stop@mR+1)^0,w,c
  6247   001B5C  22DA               	addwfc	fsr2h,f,c
  6248   001B5E  0E01               	movlw	1
  6249   001B60  6EDF               	movwf	indf2,c
  6250                           
  6251                           ;dc_motor.c: 93:     if(mL->power<0){mL->power=0;}
  6252   001B62  C01C  FFD9         	movff	stop@mL,fsr2l
  6253   001B66  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6254   001B6A  0E00               	movlw	0
  6255   001B6C  BEDB               	btfsc	plusw2,7,c
  6256   001B6E  EFBD  F00D         	goto	u1950
  6257   001B72  EFBB  F00D         	goto	u1951
  6258   001B76                     u1951:
  6259   001B76  EFC3  F00D         	goto	l2696
  6260   001B7A                     u1950:
  6261   001B7A  C01C  FFD9         	movff	stop@mL,fsr2l
  6262   001B7E  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6263   001B82  0E00               	movlw	0
  6264   001B84  6EDF               	movwf	indf2,c
  6265   001B86                     l2696:
  6266                           
  6267                           ;dc_motor.c: 94:     if(mR->power<0){mR->power=0;}
  6268   001B86  C01E  FFD9         	movff	stop@mR,fsr2l
  6269   001B8A  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6270   001B8E  0E00               	movlw	0
  6271   001B90  BEDB               	btfsc	plusw2,7,c
  6272   001B92  EFCF  F00D         	goto	u1960
  6273   001B96  EFCD  F00D         	goto	u1961
  6274   001B9A                     u1961:
  6275   001B9A  EFD5  F00D         	goto	l2700
  6276   001B9E                     u1960:
  6277   001B9E  C01E  FFD9         	movff	stop@mR,fsr2l
  6278   001BA2  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6279   001BA6  0E00               	movlw	0
  6280   001BA8  6EDF               	movwf	indf2,c
  6281   001BAA                     l2700:
  6282                           
  6283                           ;dc_motor.c: 96:     mL->power = mL->power - 5 ;
  6284   001BAA  C01C  FFD9         	movff	stop@mL,fsr2l
  6285   001BAE  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6286   001BB2  50DF               	movf	indf2,w,c
  6287   001BB4  0FFB               	addlw	251
  6288   001BB6  C01C  FFD9         	movff	stop@mL,fsr2l
  6289   001BBA  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6290   001BBE  6EDF               	movwf	indf2,c
  6291   001BC0                     
  6292                           ;dc_motor.c: 97:     mR->power = mR->power - 5;
  6293   001BC0  C01E  FFD9         	movff	stop@mR,fsr2l
  6294   001BC4  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6295   001BC8  50DF               	movf	indf2,w,c
  6296   001BCA  0FFB               	addlw	251
  6297   001BCC  C01E  FFD9         	movff	stop@mR,fsr2l
  6298   001BD0  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6299   001BD4  6EDF               	movwf	indf2,c
  6300                           
  6301                           ;dc_motor.c: 99:     mL->power = 0;
  6302   001BD6  C01C  FFD9         	movff	stop@mL,fsr2l
  6303   001BDA  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6304   001BDE  0E00               	movlw	0
  6305   001BE0  6EDF               	movwf	indf2,c
  6306                           
  6307                           ;dc_motor.c: 100:     mR->power = 0;
  6308   001BE2  C01E  FFD9         	movff	stop@mR,fsr2l
  6309   001BE6  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6310   001BEA  0E00               	movlw	0
  6311   001BEC  6EDF               	movwf	indf2,c
  6312   001BEE                     
  6313                           ;dc_motor.c: 101:     setMotorPWM(mL);
  6314   001BEE  C01C  F016         	movff	stop@mL,setMotorPWM@m
  6315   001BF2  C01D  F017         	movff	stop@mL+1,setMotorPWM@m+1
  6316   001BF6  EC16  F00A         	call	_setMotorPWM	;wreg free
  6317   001BFA                     
  6318                           ;dc_motor.c: 102:     setMotorPWM(mR);
  6319   001BFA  C01E  F016         	movff	stop@mR,setMotorPWM@m
  6320   001BFE  C01F  F017         	movff	stop@mR+1,setMotorPWM@m+1
  6321   001C02  EC16  F00A         	call	_setMotorPWM	;wreg free
  6322   001C06                     
  6323                           ;dc_motor.c: 103:     _delay((unsigned long)((10)*(64000000/4000.0)));
  6324   001C06  0ED0               	movlw	208
  6325   001C08  6E20               	movwf	??_stop^0,c
  6326   001C0A  0ECA               	movlw	202
  6327   001C0C                     u4457:
  6328   001C0C  2EE8               	decfsz	wreg,f,c
  6329   001C0E  D7FE               	bra	u4457
  6330   001C10  2E20               	decfsz	??_stop^0,f,c
  6331   001C12  D7FC               	bra	u4457
  6332   001C14  0012               	return		;funcret
  6333   001C16                     __end_of_stop:
  6334                           	callstack 0
  6335                           
  6336 ;; *************** function _fullSpeedBackwards *****************
  6337 ;; Defined at:
  6338 ;;		line 174 in file "dc_motor.c"
  6339 ;; Parameters:    Size  Location     Type
  6340 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6341 ;;		 -> main@motorL(9), 
  6342 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6343 ;;		 -> main@motorR(9), 
  6344 ;; Auto vars:     Size  Location     Type
  6345 ;;		None
  6346 ;; Return value:  Size  Location     Type
  6347 ;;                  1    wreg      void 
  6348 ;; Registers used:
  6349 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6350 ;; Tracked objects:
  6351 ;;		On entry : 0/0
  6352 ;;		On exit  : 0/0
  6353 ;;		Unchanged: 0/0
  6354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6355 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6357 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6358 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6359 ;;Total ram usage:        6 bytes
  6360 ;; Hardware stack levels used: 1
  6361 ;; Hardware stack levels required when called: 9
  6362 ;; This function calls:
  6363 ;;		_setMotorPWM
  6364 ;; This function is called by:
  6365 ;;		_RedInstructions
  6366 ;;		_GreenInstructions
  6367 ;;		_BlueInstructions
  6368 ;;		_YellowInstructions
  6369 ;;		_PinkInstructions
  6370 ;;		_OrangeInstructions
  6371 ;;		_LightBlueInstructions
  6372 ;; This function uses a non-reentrant model
  6373 ;;
  6374                           
  6375                           	psect	text29
  6376   00196A                     __ptext29:
  6377                           	callstack 0
  6378   00196A                     _fullSpeedBackwards:
  6379                           	callstack 18
  6380   00196A                     
  6381                           ;dc_motor.c: 177:     mL->direction = 0;
  6382   00196A  EE20 F001          	lfsr	2,1
  6383   00196E  501C               	movf	fullSpeedBackwards@mL^0,w,c
  6384   001970  26D9               	addwf	fsr2l,f,c
  6385   001972  501D               	movf	(fullSpeedBackwards@mL+1)^0,w,c
  6386   001974  22DA               	addwfc	fsr2h,f,c
  6387   001976  0E00               	movlw	0
  6388   001978  6EDF               	movwf	indf2,c
  6389                           
  6390                           ;dc_motor.c: 178:     mL->brakemode = 0;
  6391   00197A  EE20 F002          	lfsr	2,2
  6392   00197E  501C               	movf	fullSpeedBackwards@mL^0,w,c
  6393   001980  26D9               	addwf	fsr2l,f,c
  6394   001982  501D               	movf	(fullSpeedBackwards@mL+1)^0,w,c
  6395   001984  22DA               	addwfc	fsr2h,f,c
  6396   001986  0E00               	movlw	0
  6397   001988  6EDF               	movwf	indf2,c
  6398                           
  6399                           ;dc_motor.c: 180:     mR->direction = 0;
  6400   00198A  EE20 F001          	lfsr	2,1
  6401   00198E  501E               	movf	fullSpeedBackwards@mR^0,w,c
  6402   001990  26D9               	addwf	fsr2l,f,c
  6403   001992  501F               	movf	(fullSpeedBackwards@mR+1)^0,w,c
  6404   001994  22DA               	addwfc	fsr2h,f,c
  6405   001996  0E00               	movlw	0
  6406   001998  6EDF               	movwf	indf2,c
  6407                           
  6408                           ;dc_motor.c: 181:     mR->brakemode = 0;
  6409   00199A  EE20 F002          	lfsr	2,2
  6410   00199E  501E               	movf	fullSpeedBackwards@mR^0,w,c
  6411   0019A0  26D9               	addwf	fsr2l,f,c
  6412   0019A2  501F               	movf	(fullSpeedBackwards@mR+1)^0,w,c
  6413   0019A4  22DA               	addwfc	fsr2h,f,c
  6414   0019A6  0E00               	movlw	0
  6415   0019A8  6EDF               	movwf	indf2,c
  6416                           
  6417                           ;dc_motor.c: 184:     if(mL->power>50){mL->power=50;}
  6418   0019AA  C01C  FFD9         	movff	fullSpeedBackwards@mL,fsr2l
  6419   0019AE  C01D  FFDA         	movff	fullSpeedBackwards@mL+1,fsr2h
  6420   0019B2  50DF               	movf	indf2,w,c
  6421   0019B4  0A80               	xorlw	128
  6422   0019B6  0F4D               	addlw	-179
  6423   0019B8  A0D8               	btfss	status,0,c
  6424   0019BA  EFE1  F00C         	goto	u2031
  6425   0019BE  EFE3  F00C         	goto	u2030
  6426   0019C2                     u2031:
  6427   0019C2  EFE9  F00C         	goto	l2756
  6428   0019C6                     u2030:
  6429   0019C6  C01C  FFD9         	movff	fullSpeedBackwards@mL,fsr2l
  6430   0019CA  C01D  FFDA         	movff	fullSpeedBackwards@mL+1,fsr2h
  6431   0019CE  0E32               	movlw	50
  6432   0019D0  6EDF               	movwf	indf2,c
  6433   0019D2                     l2756:
  6434                           
  6435                           ;dc_motor.c: 185:     if(mR->power>50){mR->power=50;}
  6436   0019D2  C01E  FFD9         	movff	fullSpeedBackwards@mR,fsr2l
  6437   0019D6  C01F  FFDA         	movff	fullSpeedBackwards@mR+1,fsr2h
  6438   0019DA  50DF               	movf	indf2,w,c
  6439   0019DC  0A80               	xorlw	128
  6440   0019DE  0F4D               	addlw	-179
  6441   0019E0  A0D8               	btfss	status,0,c
  6442   0019E2  EFF5  F00C         	goto	u2041
  6443   0019E6  EFF7  F00C         	goto	u2040
  6444   0019EA                     u2041:
  6445   0019EA  EFFD  F00C         	goto	l2760
  6446   0019EE                     u2040:
  6447   0019EE  C01E  FFD9         	movff	fullSpeedBackwards@mR,fsr2l
  6448   0019F2  C01F  FFDA         	movff	fullSpeedBackwards@mR+1,fsr2h
  6449   0019F6  0E32               	movlw	50
  6450   0019F8  6EDF               	movwf	indf2,c
  6451   0019FA                     l2760:
  6452                           
  6453                           ;dc_motor.c: 187:     mL->power = mL->power + 5 ;
  6454   0019FA  C01C  FFD9         	movff	fullSpeedBackwards@mL,fsr2l
  6455   0019FE  C01D  FFDA         	movff	fullSpeedBackwards@mL+1,fsr2h
  6456   001A02  50DF               	movf	indf2,w,c
  6457   001A04  0F05               	addlw	5
  6458   001A06  C01C  FFD9         	movff	fullSpeedBackwards@mL,fsr2l
  6459   001A0A  C01D  FFDA         	movff	fullSpeedBackwards@mL+1,fsr2h
  6460   001A0E  6EDF               	movwf	indf2,c
  6461   001A10                     
  6462                           ;dc_motor.c: 188:     mR->power = mR->power + 5;
  6463   001A10  C01E  FFD9         	movff	fullSpeedBackwards@mR,fsr2l
  6464   001A14  C01F  FFDA         	movff	fullSpeedBackwards@mR+1,fsr2h
  6465   001A18  50DF               	movf	indf2,w,c
  6466   001A1A  0F05               	addlw	5
  6467   001A1C  C01E  FFD9         	movff	fullSpeedBackwards@mR,fsr2l
  6468   001A20  C01F  FFDA         	movff	fullSpeedBackwards@mR+1,fsr2h
  6469   001A24  6EDF               	movwf	indf2,c
  6470   001A26                     
  6471                           ;dc_motor.c: 190:     setMotorPWM(mL);
  6472   001A26  C01C  F016         	movff	fullSpeedBackwards@mL,setMotorPWM@m
  6473   001A2A  C01D  F017         	movff	fullSpeedBackwards@mL+1,setMotorPWM@m+1
  6474   001A2E  EC16  F00A         	call	_setMotorPWM	;wreg free
  6475   001A32                     
  6476                           ;dc_motor.c: 191:     setMotorPWM(mR);
  6477   001A32  C01E  F016         	movff	fullSpeedBackwards@mR,setMotorPWM@m
  6478   001A36  C01F  F017         	movff	fullSpeedBackwards@mR+1,setMotorPWM@m+1
  6479   001A3A  EC16  F00A         	call	_setMotorPWM	;wreg free
  6480   001A3E                     
  6481                           ;dc_motor.c: 192:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6482   001A3E  0E05               	movlw	5
  6483   001A40  6E21               	movwf	(??_fullSpeedBackwards+1)^0,c
  6484   001A42  0E0F               	movlw	15
  6485   001A44  6E20               	movwf	??_fullSpeedBackwards^0,c
  6486   001A46  0EF1               	movlw	241
  6487   001A48                     u4467:
  6488   001A48  2EE8               	decfsz	wreg,f,c
  6489   001A4A  D7FE               	bra	u4467
  6490   001A4C  2E20               	decfsz	??_fullSpeedBackwards^0,f,c
  6491   001A4E  D7FC               	bra	u4467
  6492   001A50  2E21               	decfsz	(??_fullSpeedBackwards+1)^0,f,c
  6493   001A52  D7FA               	bra	u4467
  6494   001A54  F000               	nop	
  6495   001A56  0012               	return		;funcret
  6496   001A58                     __end_of_fullSpeedBackwards:
  6497                           	callstack 0
  6498                           
  6499 ;; *************** function _setMotorPWM *****************
  6500 ;; Defined at:
  6501 ;;		line 64 in file "dc_motor.c"
  6502 ;; Parameters:    Size  Location     Type
  6503 ;;  m               2   21[COMRAM] PTR struct DC_motor
  6504 ;;		 -> main@motorR(9), main@motorL(9), 
  6505 ;; Auto vars:     Size  Location     Type
  6506 ;;  negDuty         1   26[COMRAM] unsigned char 
  6507 ;;  posDuty         1   25[COMRAM] unsigned char 
  6508 ;; Return value:  Size  Location     Type
  6509 ;;                  1    wreg      void 
  6510 ;; Registers used:
  6511 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6512 ;; Tracked objects:
  6513 ;;		On entry : 0/0
  6514 ;;		On exit  : 0/0
  6515 ;;		Unchanged: 0/0
  6516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6517 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6518 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6519 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6520 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6521 ;;Total ram usage:        6 bytes
  6522 ;; Hardware stack levels used: 1
  6523 ;; Hardware stack levels required when called: 8
  6524 ;; This function calls:
  6525 ;;		___lwdiv
  6526 ;;		___wmul
  6527 ;; This function is called by:
  6528 ;;		_stop
  6529 ;;		_turnLeft
  6530 ;;		_turnRight
  6531 ;;		_fullSpeedAhead
  6532 ;;		_fullSpeedBackwards
  6533 ;; This function uses a non-reentrant model
  6534 ;;
  6535                           
  6536                           	psect	text30
  6537   00142C                     __ptext30:
  6538                           	callstack 0
  6539   00142C                     _setMotorPWM:
  6540                           	callstack 21
  6541   00142C                     
  6542                           ;dc_motor.c: 64: void setMotorPWM(DC_motor *m);dc_motor.c: 65: {;dc_motor.c: 66:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 68:     if(m->brakemode) {
  6543   00142C  EE20 F002          	lfsr	2,2
  6544   001430  5016               	movf	setMotorPWM@m^0,w,c
  6545   001432  26D9               	addwf	fsr2l,f,c
  6546   001434  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6547   001436  22DA               	addwfc	fsr2h,f,c
  6548   001438  50DF               	movf	indf2,w,c
  6549   00143A  B4D8               	btfsc	status,2,c
  6550   00143C  EF22  F00A         	goto	u1931
  6551   001440  EF24  F00A         	goto	u1930
  6552   001444                     u1931:
  6553   001444  EF58  F00A         	goto	l2670
  6554   001448                     u1930:
  6555   001448                     
  6556                           ;dc_motor.c: 69:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  6557   001448  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  6558   00144C  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  6559   001450  50DF               	movf	indf2,w,c
  6560   001452  6E09               	movwf	___wmul@multiplier^0,c
  6561   001454  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  6562   001456  BE09               	btfsc	___wmul@multiplier^0,7,c
  6563   001458  060A               	decf	(___wmul@multiplier+1)^0,f,c
  6564   00145A  EE20 F003          	lfsr	2,3
  6565   00145E  5016               	movf	setMotorPWM@m^0,w,c
  6566   001460  26D9               	addwf	fsr2l,f,c
  6567   001462  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6568   001464  22DA               	addwfc	fsr2h,f,c
  6569   001466  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  6570   00146A  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  6571   00146E  EC1B  F013         	call	___wmul	;wreg free
  6572   001472  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  6573   001476  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  6574   00147A  0E00               	movlw	0
  6575   00147C  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  6576   00147E  0E64               	movlw	100
  6577   001480  6E11               	movwf	___lwdiv@divisor^0,c
  6578   001482  EC3E  F010         	call	___lwdiv	;wreg free
  6579   001486  EE20 F003          	lfsr	2,3
  6580   00148A  5016               	movf	setMotorPWM@m^0,w,c
  6581   00148C  26D9               	addwf	fsr2l,f,c
  6582   00148E  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6583   001490  22DA               	addwfc	fsr2h,f,c
  6584   001492  50DF               	movf	indf2,w,c
  6585   001494  6E18               	movwf	??_setMotorPWM^0,c
  6586   001496  500F               	movf	?___lwdiv^0,w,c
  6587   001498  5C18               	subwf	??_setMotorPWM^0,w,c
  6588   00149A  6E1A               	movwf	setMotorPWM@posDuty^0,c
  6589   00149C                     
  6590                           ;dc_motor.c: 70:         negDuty=m->PWMperiod;
  6591   00149C  EE20 F003          	lfsr	2,3
  6592   0014A0  5016               	movf	setMotorPWM@m^0,w,c
  6593   0014A2  26D9               	addwf	fsr2l,f,c
  6594   0014A4  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6595   0014A6  22DA               	addwfc	fsr2h,f,c
  6596   0014A8  50DF               	movf	indf2,w,c
  6597   0014AA  6E1B               	movwf	setMotorPWM@negDuty^0,c
  6598                           
  6599                           ;dc_motor.c: 71:     }
  6600   0014AC  EF7B  F00A         	goto	l2674
  6601   0014B0                     l2670:
  6602                           
  6603                           ;dc_motor.c: 73:         posDuty=0;
  6604   0014B0  0E00               	movlw	0
  6605   0014B2  6E1A               	movwf	setMotorPWM@posDuty^0,c
  6606   0014B4                     
  6607                           ;dc_motor.c: 74:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  6608   0014B4  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  6609   0014B8  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  6610   0014BC  50DF               	movf	indf2,w,c
  6611   0014BE  6E09               	movwf	___wmul@multiplier^0,c
  6612   0014C0  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  6613   0014C2  BE09               	btfsc	___wmul@multiplier^0,7,c
  6614   0014C4  060A               	decf	(___wmul@multiplier+1)^0,f,c
  6615   0014C6  EE20 F003          	lfsr	2,3
  6616   0014CA  5016               	movf	setMotorPWM@m^0,w,c
  6617   0014CC  26D9               	addwf	fsr2l,f,c
  6618   0014CE  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6619   0014D0  22DA               	addwfc	fsr2h,f,c
  6620   0014D2  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  6621   0014D6  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  6622   0014DA  EC1B  F013         	call	___wmul	;wreg free
  6623   0014DE  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  6624   0014E2  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  6625   0014E6  0E00               	movlw	0
  6626   0014E8  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  6627   0014EA  0E64               	movlw	100
  6628   0014EC  6E11               	movwf	___lwdiv@divisor^0,c
  6629   0014EE  EC3E  F010         	call	___lwdiv	;wreg free
  6630   0014F2  500F               	movf	?___lwdiv^0,w,c
  6631   0014F4  6E1B               	movwf	setMotorPWM@negDuty^0,c
  6632   0014F6                     l2674:
  6633                           
  6634                           ;dc_motor.c: 77:     if (m->direction) {
  6635   0014F6  EE20 F001          	lfsr	2,1
  6636   0014FA  5016               	movf	setMotorPWM@m^0,w,c
  6637   0014FC  26D9               	addwf	fsr2l,f,c
  6638   0014FE  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6639   001500  22DA               	addwfc	fsr2h,f,c
  6640   001502  50DF               	movf	indf2,w,c
  6641   001504  B4D8               	btfsc	status,2,c
  6642   001506  EF87  F00A         	goto	u1941
  6643   00150A  EF89  F00A         	goto	u1940
  6644   00150E                     u1941:
  6645   00150E  EFAB  F00A         	goto	l2678
  6646   001512                     u1940:
  6647   001512                     
  6648                           ;dc_motor.c: 78:         *(m->posDutyHighByte)=posDuty;
  6649   001512  EE20 F005          	lfsr	2,5
  6650   001516  5016               	movf	setMotorPWM@m^0,w,c
  6651   001518  26D9               	addwf	fsr2l,f,c
  6652   00151A  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6653   00151C  22DA               	addwfc	fsr2h,f,c
  6654   00151E  CFDE F018          	movff	postinc2,??_setMotorPWM
  6655   001522  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  6656   001526  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  6657   00152A  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  6658   00152E  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  6659                           
  6660                           ;dc_motor.c: 79:         *(m->negDutyHighByte)=negDuty;
  6661   001532  EE20 F007          	lfsr	2,7
  6662   001536  5016               	movf	setMotorPWM@m^0,w,c
  6663   001538  26D9               	addwf	fsr2l,f,c
  6664   00153A  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6665   00153C  22DA               	addwfc	fsr2h,f,c
  6666   00153E  CFDE F018          	movff	postinc2,??_setMotorPWM
  6667   001542  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  6668   001546  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  6669   00154A  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  6670   00154E  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  6671                           
  6672                           ;dc_motor.c: 80:     } else {
  6673   001552  EFCB  F00A         	goto	l192
  6674   001556                     l2678:
  6675                           
  6676                           ;dc_motor.c: 81:         *(m->posDutyHighByte)=negDuty;
  6677   001556  EE20 F005          	lfsr	2,5
  6678   00155A  5016               	movf	setMotorPWM@m^0,w,c
  6679   00155C  26D9               	addwf	fsr2l,f,c
  6680   00155E  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6681   001560  22DA               	addwfc	fsr2h,f,c
  6682   001562  CFDE F018          	movff	postinc2,??_setMotorPWM
  6683   001566  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  6684   00156A  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  6685   00156E  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  6686   001572  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  6687                           
  6688                           ;dc_motor.c: 82:         *(m->negDutyHighByte)=posDuty;
  6689   001576  EE20 F007          	lfsr	2,7
  6690   00157A  5016               	movf	setMotorPWM@m^0,w,c
  6691   00157C  26D9               	addwf	fsr2l,f,c
  6692   00157E  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6693   001580  22DA               	addwfc	fsr2h,f,c
  6694   001582  CFDE F018          	movff	postinc2,??_setMotorPWM
  6695   001586  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  6696   00158A  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  6697   00158E  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  6698   001592  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  6699   001596                     l192:
  6700   001596  0012               	return		;funcret
  6701   001598                     __end_of_setMotorPWM:
  6702                           	callstack 0
  6703                           
  6704 ;; *************** function ___wmul *****************
  6705 ;; Defined at:
  6706 ;;		line 15 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\Umul16.c"
  6707 ;; Parameters:    Size  Location     Type
  6708 ;;  multiplier      2    8[COMRAM] unsigned int 
  6709 ;;  multiplicand    2   10[COMRAM] unsigned int 
  6710 ;; Auto vars:     Size  Location     Type
  6711 ;;  product         2   12[COMRAM] unsigned int 
  6712 ;; Return value:  Size  Location     Type
  6713 ;;                  2    8[COMRAM] unsigned int 
  6714 ;; Registers used:
  6715 ;;		wreg, status,2, status,0, prodl, prodh
  6716 ;; Tracked objects:
  6717 ;;		On entry : 0/0
  6718 ;;		On exit  : 0/0
  6719 ;;		Unchanged: 0/0
  6720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6721 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6722 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6724 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6725 ;;Total ram usage:        6 bytes
  6726 ;; Hardware stack levels used: 1
  6727 ;; Hardware stack levels required when called: 7
  6728 ;; This function calls:
  6729 ;;		Nothing
  6730 ;; This function is called by:
  6731 ;;		_setMotorPWM
  6732 ;; This function uses a non-reentrant model
  6733 ;;
  6734                           
  6735                           	psect	text31
  6736   002636                     __ptext31:
  6737                           	callstack 0
  6738   002636                     ___wmul:
  6739                           	callstack 21
  6740   002636  5009               	movf	___wmul@multiplier^0,w,c
  6741   002638  020B               	mulwf	___wmul@multiplicand^0,c
  6742   00263A  CFF3 F00D          	movff	prodl,___wmul@product
  6743   00263E  CFF4 F00E          	movff	prodh,___wmul@product+1
  6744   002642  5009               	movf	___wmul@multiplier^0,w,c
  6745   002644  020C               	mulwf	(___wmul@multiplicand+1)^0,c
  6746   002646  50F3               	movf	243,w,c
  6747   002648  260E               	addwf	(___wmul@product+1)^0,f,c
  6748   00264A  500A               	movf	(___wmul@multiplier+1)^0,w,c
  6749   00264C  020B               	mulwf	___wmul@multiplicand^0,c
  6750   00264E  50F3               	movf	243,w,c
  6751   002650  260E               	addwf	(___wmul@product+1)^0,f,c
  6752   002652  C00D  F009         	movff	___wmul@product,?___wmul
  6753   002656  C00E  F00A         	movff	___wmul@product+1,?___wmul+1
  6754   00265A  0012               	return		;funcret
  6755   00265C                     __end_of___wmul:
  6756                           	callstack 0
  6757                           
  6758 ;; *************** function ___lwdiv *****************
  6759 ;; Defined at:
  6760 ;;		line 7 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\lwdiv.c"
  6761 ;; Parameters:    Size  Location     Type
  6762 ;;  dividend        2   14[COMRAM] unsigned int 
  6763 ;;  divisor         2   16[COMRAM] unsigned int 
  6764 ;; Auto vars:     Size  Location     Type
  6765 ;;  quotient        2   18[COMRAM] unsigned int 
  6766 ;;  counter         1   20[COMRAM] unsigned char 
  6767 ;; Return value:  Size  Location     Type
  6768 ;;                  2   14[COMRAM] unsigned int 
  6769 ;; Registers used:
  6770 ;;		wreg, status,2, status,0
  6771 ;; Tracked objects:
  6772 ;;		On entry : 0/0
  6773 ;;		On exit  : 0/0
  6774 ;;		Unchanged: 0/0
  6775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6776 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6777 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6779 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6780 ;;Total ram usage:        7 bytes
  6781 ;; Hardware stack levels used: 1
  6782 ;; Hardware stack levels required when called: 7
  6783 ;; This function calls:
  6784 ;;		Nothing
  6785 ;; This function is called by:
  6786 ;;		_setMotorPWM
  6787 ;; This function uses a non-reentrant model
  6788 ;;
  6789                           
  6790                           	psect	text32
  6791   00207C                     __ptext32:
  6792                           	callstack 0
  6793   00207C                     ___lwdiv:
  6794                           	callstack 21
  6795   00207C  0E00               	movlw	0
  6796   00207E  6E14               	movwf	(___lwdiv@quotient+1)^0,c
  6797   002080  0E00               	movlw	0
  6798   002082  6E13               	movwf	___lwdiv@quotient^0,c
  6799   002084  5011               	movf	___lwdiv@divisor^0,w,c
  6800   002086  1012               	iorwf	(___lwdiv@divisor+1)^0,w,c
  6801   002088  B4D8               	btfsc	status,2,c
  6802   00208A  EF49  F010         	goto	u1881
  6803   00208E  EF4B  F010         	goto	u1880
  6804   002092                     u1881:
  6805   002092  EF73  F010         	goto	l1158
  6806   002096                     u1880:
  6807   002096  0E01               	movlw	1
  6808   002098  6E15               	movwf	___lwdiv@counter^0,c
  6809   00209A  EF53  F010         	goto	l2646
  6810   00209E                     l2644:
  6811   00209E  90D8               	bcf	status,0,c
  6812   0020A0  3611               	rlcf	___lwdiv@divisor^0,f,c
  6813   0020A2  3612               	rlcf	(___lwdiv@divisor+1)^0,f,c
  6814   0020A4  2A15               	incf	___lwdiv@counter^0,f,c
  6815   0020A6                     l2646:
  6816   0020A6  AE12               	btfss	(___lwdiv@divisor+1)^0,7,c
  6817   0020A8  EF58  F010         	goto	u1891
  6818   0020AC  EF5A  F010         	goto	u1890
  6819   0020B0                     u1891:
  6820   0020B0  EF4F  F010         	goto	l2644
  6821   0020B4                     u1890:
  6822   0020B4                     l2648:
  6823   0020B4  90D8               	bcf	status,0,c
  6824   0020B6  3613               	rlcf	___lwdiv@quotient^0,f,c
  6825   0020B8  3614               	rlcf	(___lwdiv@quotient+1)^0,f,c
  6826   0020BA  5011               	movf	___lwdiv@divisor^0,w,c
  6827   0020BC  5C0F               	subwf	___lwdiv@dividend^0,w,c
  6828   0020BE  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  6829   0020C0  5810               	subwfb	(___lwdiv@dividend+1)^0,w,c
  6830   0020C2  A0D8               	btfss	status,0,c
  6831   0020C4  EF66  F010         	goto	u1901
  6832   0020C8  EF68  F010         	goto	u1900
  6833   0020CC                     u1901:
  6834   0020CC  EF6D  F010         	goto	l2656
  6835   0020D0                     u1900:
  6836   0020D0  5011               	movf	___lwdiv@divisor^0,w,c
  6837   0020D2  5E0F               	subwf	___lwdiv@dividend^0,f,c
  6838   0020D4  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  6839   0020D6  5A10               	subwfb	(___lwdiv@dividend+1)^0,f,c
  6840   0020D8  8013               	bsf	___lwdiv@quotient^0,0,c
  6841   0020DA                     l2656:
  6842   0020DA  90D8               	bcf	status,0,c
  6843   0020DC  3212               	rrcf	(___lwdiv@divisor+1)^0,f,c
  6844   0020DE  3211               	rrcf	___lwdiv@divisor^0,f,c
  6845   0020E0  2E15               	decfsz	___lwdiv@counter^0,f,c
  6846   0020E2  EF5A  F010         	goto	l2648
  6847   0020E6                     l1158:
  6848   0020E6  C013  F00F         	movff	___lwdiv@quotient,?___lwdiv
  6849   0020EA  C014  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6850   0020EE  0012               	return		;funcret
  6851   0020F0                     __end_of___lwdiv:
  6852                           	callstack 0
  6853                           
  6854 ;; *************** function _AppendMoves *****************
  6855 ;; Defined at:
  6856 ;;		line 17 in file "Memorization.c"
  6857 ;; Parameters:    Size  Location     Type
  6858 ;;  temp            1    wreg     unsigned char 
  6859 ;;  moves_index     2    8[COMRAM] PTR unsigned char 
  6860 ;;		 -> moves_index(1), 
  6861 ;;  anti_moves_a    2   10[COMRAM] PTR unsigned char 
  6862 ;;		 -> anti_moves_array(40), 
  6863 ;; Auto vars:     Size  Location     Type
  6864 ;;  temp            1   13[COMRAM] unsigned char 
  6865 ;; Return value:  Size  Location     Type
  6866 ;;                  1    wreg      void 
  6867 ;; Registers used:
  6868 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6869 ;; Tracked objects:
  6870 ;;		On entry : 0/0
  6871 ;;		On exit  : 0/0
  6872 ;;		Unchanged: 0/0
  6873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6874 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6875 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6876 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6877 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6878 ;;Total ram usage:        6 bytes
  6879 ;; Hardware stack levels used: 1
  6880 ;; Hardware stack levels required when called: 7
  6881 ;; This function calls:
  6882 ;;		Nothing
  6883 ;; This function is called by:
  6884 ;;		_MoveBuggy
  6885 ;; This function uses a non-reentrant model
  6886 ;;
  6887                           
  6888                           	psect	text33
  6889   002682                     __ptext33:
  6890                           	callstack 0
  6891   002682                     _AppendMoves:
  6892                           	callstack 21
  6893                           
  6894                           ;incstack = 0
  6895                           ;AppendMoves@temp stored from wreg
  6896   002682  6E0E               	movwf	AppendMoves@temp^0,c
  6897   002684                     
  6898                           ;Memorization.c: 19:     anti_moves_array[(*moves_index)++] = temp;
  6899   002684  C009  FFD9         	movff	AppendMoves@moves_index,fsr2l
  6900   002688  C00A  FFDA         	movff	AppendMoves@moves_index+1,fsr2h
  6901   00268C  CFDF F00D          	movff	indf2,??_AppendMoves
  6902   002690  0E01               	movlw	1
  6903   002692  26DF               	addwf	indf2,f,c
  6904   002694  500D               	movf	??_AppendMoves^0,w,c
  6905   002696  240B               	addwf	AppendMoves@anti_moves_array^0,w,c
  6906   002698  6ED9               	movwf	fsr2l,c
  6907   00269A  0E00               	movlw	0
  6908   00269C  200C               	addwfc	(AppendMoves@anti_moves_array+1)^0,w,c
  6909   00269E  6EDA               	movwf	fsr2h,c
  6910   0026A0  C00E  FFDF         	movff	AppendMoves@temp,indf2
  6911   0026A4  0012               	return		;funcret
  6912   0026A6                     __end_of_AppendMoves:
  6913                           	callstack 0
  6914                           
  6915 ;; *************** function _Update_RGBC *****************
  6916 ;; Defined at:
  6917 ;;		line 90 in file "color.c"
  6918 ;; Parameters:    Size  Location     Type
  6919 ;;  tempval         2   19[COMRAM] PTR struct RGB_val
  6920 ;;		 -> main@initial_color(8), 
  6921 ;; Auto vars:     Size  Location     Type
  6922 ;;		None
  6923 ;; Return value:  Size  Location     Type
  6924 ;;                  1    wreg      void 
  6925 ;; Registers used:
  6926 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6927 ;; Tracked objects:
  6928 ;;		On entry : 0/0
  6929 ;;		On exit  : 0/0
  6930 ;;		Unchanged: 0/0
  6931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6932 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6935 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6936 ;;Total ram usage:        2 bytes
  6937 ;; Hardware stack levels used: 1
  6938 ;; Hardware stack levels required when called: 10
  6939 ;; This function calls:
  6940 ;;		_color_read_Blue
  6941 ;;		_color_read_Clear
  6942 ;;		_color_read_Green
  6943 ;;		_color_read_Red
  6944 ;; This function is called by:
  6945 ;;		_main
  6946 ;; This function uses a non-reentrant model
  6947 ;;
  6948                           
  6949                           	psect	text34
  6950   0020F0                     __ptext34:
  6951                           	callstack 0
  6952   0020F0                     _Update_RGBC:
  6953                           	callstack 20
  6954   0020F0                     
  6955                           ;color.c: 92:     tempval->R = color_read_Red();
  6956   0020F0  EC5B  F011         	call	_color_read_Red	;wreg free
  6957   0020F4  C014  FFD9         	movff	Update_RGBC@tempval,fsr2l
  6958   0020F8  C015  FFDA         	movff	Update_RGBC@tempval+1,fsr2h
  6959   0020FC  C00D  FFDE         	movff	?_color_read_Red,postinc2
  6960   002100  C00E  FFDD         	movff	?_color_read_Red+1,postdec2
  6961                           
  6962                           ;color.c: 93:     tempval->G = color_read_Green();
  6963   002104  EC83  F011         	call	_color_read_Green	;wreg free
  6964   002108  EE20 F002          	lfsr	2,2
  6965   00210C  5014               	movf	Update_RGBC@tempval^0,w,c
  6966   00210E  26D9               	addwf	fsr2l,f,c
  6967   002110  5015               	movf	(Update_RGBC@tempval+1)^0,w,c
  6968   002112  22DA               	addwfc	fsr2h,f,c
  6969   002114  C00D  FFDE         	movff	?_color_read_Green,postinc2
  6970   002118  C00E  FFDD         	movff	?_color_read_Green+1,postdec2
  6971                           
  6972                           ;color.c: 94:     tempval->B = color_read_Blue();
  6973   00211C  ECD3  F011         	call	_color_read_Blue	;wreg free
  6974   002120  EE20 F004          	lfsr	2,4
  6975   002124  5014               	movf	Update_RGBC@tempval^0,w,c
  6976   002126  26D9               	addwf	fsr2l,f,c
  6977   002128  5015               	movf	(Update_RGBC@tempval+1)^0,w,c
  6978   00212A  22DA               	addwfc	fsr2h,f,c
  6979   00212C  C00D  FFDE         	movff	?_color_read_Blue,postinc2
  6980   002130  C00E  FFDD         	movff	?_color_read_Blue+1,postdec2
  6981                           
  6982                           ;color.c: 95:     tempval->C = color_read_Clear();
  6983   002134  ECAB  F011         	call	_color_read_Clear	;wreg free
  6984   002138  EE20 F006          	lfsr	2,6
  6985   00213C  5014               	movf	Update_RGBC@tempval^0,w,c
  6986   00213E  26D9               	addwf	fsr2l,f,c
  6987   002140  5015               	movf	(Update_RGBC@tempval+1)^0,w,c
  6988   002142  22DA               	addwfc	fsr2h,f,c
  6989   002144  C00D  FFDE         	movff	?_color_read_Clear,postinc2
  6990   002148  C00E  FFDD         	movff	?_color_read_Clear+1,postdec2
  6991   00214C  0012               	return		;funcret
  6992   00214E                     __end_of_Update_RGBC:
  6993                           	callstack 0
  6994                           
  6995 ;; *************** function _color_read_Red *****************
  6996 ;; Defined at:
  6997 ;;		line 32 in file "color.c"
  6998 ;; Parameters:    Size  Location     Type
  6999 ;;		None
  7000 ;; Auto vars:     Size  Location     Type
  7001 ;;  tmp             2   17[COMRAM] unsigned int 
  7002 ;; Return value:  Size  Location     Type
  7003 ;;                  2   12[COMRAM] unsigned int 
  7004 ;; Registers used:
  7005 ;;		wreg, status,2, status,0, cstack
  7006 ;; Tracked objects:
  7007 ;;		On entry : 0/0
  7008 ;;		On exit  : 0/0
  7009 ;;		Unchanged: 0/0
  7010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7011 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7012 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7013 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7014 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7015 ;;Total ram usage:        7 bytes
  7016 ;; Hardware stack levels used: 1
  7017 ;; Hardware stack levels required when called: 9
  7018 ;; This function calls:
  7019 ;;		_I2C_2_Master_Read
  7020 ;;		_I2C_2_Master_RepStart
  7021 ;;		_I2C_2_Master_Start
  7022 ;;		_I2C_2_Master_Stop
  7023 ;;		_I2C_2_Master_Write
  7024 ;; This function is called by:
  7025 ;;		_Update_RGBC
  7026 ;; This function uses a non-reentrant model
  7027 ;;
  7028                           
  7029                           	psect	text35
  7030   0022B6                     __ptext35:
  7031                           	callstack 0
  7032   0022B6                     _color_read_Red:
  7033                           	callstack 20
  7034   0022B6                     
  7035                           ;color.c: 34:  unsigned int tmp;;color.c: 35:  I2C_2_Master_Start();
  7036   0022B6  ECDC  F013         	call	_I2C_2_Master_Start	;wreg free
  7037                           
  7038                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x00);
  7039   0022BA  0E52               	movlw	82
  7040   0022BC  ECC6  F013         	call	_I2C_2_Master_Write
  7041                           
  7042                           ;color.c: 37:  I2C_2_Master_Write(0xA0 | 0x16);
  7043   0022C0  0EB6               	movlw	182
  7044   0022C2  ECC6  F013         	call	_I2C_2_Master_Write
  7045                           
  7046                           ;color.c: 38:  I2C_2_Master_RepStart();
  7047   0022C6  ECD2  F013         	call	_I2C_2_Master_RepStart	;wreg free
  7048                           
  7049                           ;color.c: 39:  I2C_2_Master_Write(0x52 | 0x01);
  7050   0022CA  0E53               	movlw	83
  7051   0022CC  ECC6  F013         	call	_I2C_2_Master_Write
  7052                           
  7053                           ;color.c: 40:  tmp=I2C_2_Master_Read(1);
  7054   0022D0  0E01               	movlw	1
  7055   0022D2  EC6E  F012         	call	_I2C_2_Master_Read
  7056   0022D6  6E0F               	movwf	??_color_read_Red^0,c
  7057   0022D8  500F               	movf	??_color_read_Red^0,w,c
  7058   0022DA  6E12               	movwf	color_read_Red@tmp^0,c
  7059   0022DC  6A13               	clrf	(color_read_Red@tmp+1)^0,c
  7060                           
  7061                           ;color.c: 41:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7062   0022DE  0E00               	movlw	0
  7063   0022E0  EC6E  F012         	call	_I2C_2_Master_Read
  7064   0022E4  6E0F               	movwf	??_color_read_Red^0,c
  7065   0022E6  500F               	movf	??_color_read_Red^0,w,c
  7066   0022E8  6E11               	movwf	(??_color_read_Red+2)^0,c
  7067   0022EA  6A10               	clrf	(??_color_read_Red+1)^0,c
  7068   0022EC  5012               	movf	color_read_Red@tmp^0,w,c
  7069   0022EE  1010               	iorwf	(??_color_read_Red+1)^0,w,c
  7070   0022F0  6E12               	movwf	color_read_Red@tmp^0,c
  7071   0022F2  5013               	movf	(color_read_Red@tmp+1)^0,w,c
  7072   0022F4  1011               	iorwf	(??_color_read_Red+2)^0,w,c
  7073   0022F6  6E13               	movwf	(color_read_Red@tmp+1)^0,c
  7074                           
  7075                           ;color.c: 42:  I2C_2_Master_Stop();
  7076   0022F8  ECD7  F013         	call	_I2C_2_Master_Stop	;wreg free
  7077   0022FC                     
  7078                           ;color.c: 43:  return tmp;
  7079   0022FC  C012  F00D         	movff	color_read_Red@tmp,?_color_read_Red
  7080   002300  C013  F00E         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  7081   002304  0012               	return		;funcret
  7082   002306                     __end_of_color_read_Red:
  7083                           	callstack 0
  7084                           
  7085 ;; *************** function _color_read_Green *****************
  7086 ;; Defined at:
  7087 ;;		line 46 in file "color.c"
  7088 ;; Parameters:    Size  Location     Type
  7089 ;;		None
  7090 ;; Auto vars:     Size  Location     Type
  7091 ;;  tmp             2   17[COMRAM] unsigned int 
  7092 ;; Return value:  Size  Location     Type
  7093 ;;                  2   12[COMRAM] unsigned int 
  7094 ;; Registers used:
  7095 ;;		wreg, status,2, status,0, cstack
  7096 ;; Tracked objects:
  7097 ;;		On entry : 0/0
  7098 ;;		On exit  : 0/0
  7099 ;;		Unchanged: 0/0
  7100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7101 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7102 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7103 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7104 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7105 ;;Total ram usage:        7 bytes
  7106 ;; Hardware stack levels used: 1
  7107 ;; Hardware stack levels required when called: 9
  7108 ;; This function calls:
  7109 ;;		_I2C_2_Master_Read
  7110 ;;		_I2C_2_Master_RepStart
  7111 ;;		_I2C_2_Master_Start
  7112 ;;		_I2C_2_Master_Stop
  7113 ;;		_I2C_2_Master_Write
  7114 ;; This function is called by:
  7115 ;;		_Update_RGBC
  7116 ;; This function uses a non-reentrant model
  7117 ;;
  7118                           
  7119                           	psect	text36
  7120   002306                     __ptext36:
  7121                           	callstack 0
  7122   002306                     _color_read_Green:
  7123                           	callstack 20
  7124   002306                     
  7125                           ;color.c: 48:  unsigned int tmp;;color.c: 49:  I2C_2_Master_Start();
  7126   002306  ECDC  F013         	call	_I2C_2_Master_Start	;wreg free
  7127                           
  7128                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x00);
  7129   00230A  0E52               	movlw	82
  7130   00230C  ECC6  F013         	call	_I2C_2_Master_Write
  7131                           
  7132                           ;color.c: 51:  I2C_2_Master_Write(0xA0 | 0x18);
  7133   002310  0EB8               	movlw	184
  7134   002312  ECC6  F013         	call	_I2C_2_Master_Write
  7135                           
  7136                           ;color.c: 52:  I2C_2_Master_RepStart();
  7137   002316  ECD2  F013         	call	_I2C_2_Master_RepStart	;wreg free
  7138                           
  7139                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x01);
  7140   00231A  0E53               	movlw	83
  7141   00231C  ECC6  F013         	call	_I2C_2_Master_Write
  7142                           
  7143                           ;color.c: 54:  tmp=I2C_2_Master_Read(1);
  7144   002320  0E01               	movlw	1
  7145   002322  EC6E  F012         	call	_I2C_2_Master_Read
  7146   002326  6E0F               	movwf	??_color_read_Green^0,c
  7147   002328  500F               	movf	??_color_read_Green^0,w,c
  7148   00232A  6E12               	movwf	color_read_Green@tmp^0,c
  7149   00232C  6A13               	clrf	(color_read_Green@tmp+1)^0,c
  7150                           
  7151                           ;color.c: 55:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7152   00232E  0E00               	movlw	0
  7153   002330  EC6E  F012         	call	_I2C_2_Master_Read
  7154   002334  6E0F               	movwf	??_color_read_Green^0,c
  7155   002336  500F               	movf	??_color_read_Green^0,w,c
  7156   002338  6E11               	movwf	(??_color_read_Green+2)^0,c
  7157   00233A  6A10               	clrf	(??_color_read_Green+1)^0,c
  7158   00233C  5012               	movf	color_read_Green@tmp^0,w,c
  7159   00233E  1010               	iorwf	(??_color_read_Green+1)^0,w,c
  7160   002340  6E12               	movwf	color_read_Green@tmp^0,c
  7161   002342  5013               	movf	(color_read_Green@tmp+1)^0,w,c
  7162   002344  1011               	iorwf	(??_color_read_Green+2)^0,w,c
  7163   002346  6E13               	movwf	(color_read_Green@tmp+1)^0,c
  7164                           
  7165                           ;color.c: 56:  I2C_2_Master_Stop();
  7166   002348  ECD7  F013         	call	_I2C_2_Master_Stop	;wreg free
  7167   00234C                     
  7168                           ;color.c: 57:  return tmp;
  7169   00234C  C012  F00D         	movff	color_read_Green@tmp,?_color_read_Green
  7170   002350  C013  F00E         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  7171   002354  0012               	return		;funcret
  7172   002356                     __end_of_color_read_Green:
  7173                           	callstack 0
  7174                           
  7175 ;; *************** function _color_read_Clear *****************
  7176 ;; Defined at:
  7177 ;;		line 74 in file "color.c"
  7178 ;; Parameters:    Size  Location     Type
  7179 ;;		None
  7180 ;; Auto vars:     Size  Location     Type
  7181 ;;  tmp             2   17[COMRAM] unsigned int 
  7182 ;; Return value:  Size  Location     Type
  7183 ;;                  2   12[COMRAM] unsigned int 
  7184 ;; Registers used:
  7185 ;;		wreg, status,2, status,0, cstack
  7186 ;; Tracked objects:
  7187 ;;		On entry : 0/0
  7188 ;;		On exit  : 0/0
  7189 ;;		Unchanged: 0/0
  7190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7191 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7192 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7193 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7194 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7195 ;;Total ram usage:        7 bytes
  7196 ;; Hardware stack levels used: 1
  7197 ;; Hardware stack levels required when called: 9
  7198 ;; This function calls:
  7199 ;;		_I2C_2_Master_Read
  7200 ;;		_I2C_2_Master_RepStart
  7201 ;;		_I2C_2_Master_Start
  7202 ;;		_I2C_2_Master_Stop
  7203 ;;		_I2C_2_Master_Write
  7204 ;; This function is called by:
  7205 ;;		_Update_RGBC
  7206 ;; This function uses a non-reentrant model
  7207 ;;
  7208                           
  7209                           	psect	text37
  7210   002356                     __ptext37:
  7211                           	callstack 0
  7212   002356                     _color_read_Clear:
  7213                           	callstack 20
  7214   002356                     
  7215                           ;color.c: 76:  unsigned int tmp;;color.c: 77:  I2C_2_Master_Start();
  7216   002356  ECDC  F013         	call	_I2C_2_Master_Start	;wreg free
  7217                           
  7218                           ;color.c: 78:  I2C_2_Master_Write(0x52 | 0x00);
  7219   00235A  0E52               	movlw	82
  7220   00235C  ECC6  F013         	call	_I2C_2_Master_Write
  7221                           
  7222                           ;color.c: 79:  I2C_2_Master_Write(0xA0 | 0x14);
  7223   002360  0EB4               	movlw	180
  7224   002362  ECC6  F013         	call	_I2C_2_Master_Write
  7225                           
  7226                           ;color.c: 80:  I2C_2_Master_RepStart();
  7227   002366  ECD2  F013         	call	_I2C_2_Master_RepStart	;wreg free
  7228                           
  7229                           ;color.c: 81:  I2C_2_Master_Write(0x52 | 0x01);
  7230   00236A  0E53               	movlw	83
  7231   00236C  ECC6  F013         	call	_I2C_2_Master_Write
  7232                           
  7233                           ;color.c: 82:  tmp=I2C_2_Master_Read(1);
  7234   002370  0E01               	movlw	1
  7235   002372  EC6E  F012         	call	_I2C_2_Master_Read
  7236   002376  6E0F               	movwf	??_color_read_Clear^0,c
  7237   002378  500F               	movf	??_color_read_Clear^0,w,c
  7238   00237A  6E12               	movwf	color_read_Clear@tmp^0,c
  7239   00237C  6A13               	clrf	(color_read_Clear@tmp+1)^0,c
  7240                           
  7241                           ;color.c: 83:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7242   00237E  0E00               	movlw	0
  7243   002380  EC6E  F012         	call	_I2C_2_Master_Read
  7244   002384  6E0F               	movwf	??_color_read_Clear^0,c
  7245   002386  500F               	movf	??_color_read_Clear^0,w,c
  7246   002388  6E11               	movwf	(??_color_read_Clear+2)^0,c
  7247   00238A  6A10               	clrf	(??_color_read_Clear+1)^0,c
  7248   00238C  5012               	movf	color_read_Clear@tmp^0,w,c
  7249   00238E  1010               	iorwf	(??_color_read_Clear+1)^0,w,c
  7250   002390  6E12               	movwf	color_read_Clear@tmp^0,c
  7251   002392  5013               	movf	(color_read_Clear@tmp+1)^0,w,c
  7252   002394  1011               	iorwf	(??_color_read_Clear+2)^0,w,c
  7253   002396  6E13               	movwf	(color_read_Clear@tmp+1)^0,c
  7254                           
  7255                           ;color.c: 84:  I2C_2_Master_Stop();
  7256   002398  ECD7  F013         	call	_I2C_2_Master_Stop	;wreg free
  7257   00239C                     
  7258                           ;color.c: 85:  return tmp;
  7259   00239C  C012  F00D         	movff	color_read_Clear@tmp,?_color_read_Clear
  7260   0023A0  C013  F00E         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  7261   0023A4  0012               	return		;funcret
  7262   0023A6                     __end_of_color_read_Clear:
  7263                           	callstack 0
  7264                           
  7265 ;; *************** function _color_read_Blue *****************
  7266 ;; Defined at:
  7267 ;;		line 60 in file "color.c"
  7268 ;; Parameters:    Size  Location     Type
  7269 ;;		None
  7270 ;; Auto vars:     Size  Location     Type
  7271 ;;  tmp             2   17[COMRAM] unsigned int 
  7272 ;; Return value:  Size  Location     Type
  7273 ;;                  2   12[COMRAM] unsigned int 
  7274 ;; Registers used:
  7275 ;;		wreg, status,2, status,0, cstack
  7276 ;; Tracked objects:
  7277 ;;		On entry : 0/0
  7278 ;;		On exit  : 0/0
  7279 ;;		Unchanged: 0/0
  7280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7281 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7282 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7283 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7284 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7285 ;;Total ram usage:        7 bytes
  7286 ;; Hardware stack levels used: 1
  7287 ;; Hardware stack levels required when called: 9
  7288 ;; This function calls:
  7289 ;;		_I2C_2_Master_Read
  7290 ;;		_I2C_2_Master_RepStart
  7291 ;;		_I2C_2_Master_Start
  7292 ;;		_I2C_2_Master_Stop
  7293 ;;		_I2C_2_Master_Write
  7294 ;; This function is called by:
  7295 ;;		_Update_RGBC
  7296 ;; This function uses a non-reentrant model
  7297 ;;
  7298                           
  7299                           	psect	text38
  7300   0023A6                     __ptext38:
  7301                           	callstack 0
  7302   0023A6                     _color_read_Blue:
  7303                           	callstack 20
  7304   0023A6                     
  7305                           ;color.c: 62:  unsigned int tmp;;color.c: 63:  I2C_2_Master_Start();
  7306   0023A6  ECDC  F013         	call	_I2C_2_Master_Start	;wreg free
  7307                           
  7308                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x00);
  7309   0023AA  0E52               	movlw	82
  7310   0023AC  ECC6  F013         	call	_I2C_2_Master_Write
  7311                           
  7312                           ;color.c: 65:  I2C_2_Master_Write(0xA0 | 0x1A);
  7313   0023B0  0EBA               	movlw	186
  7314   0023B2  ECC6  F013         	call	_I2C_2_Master_Write
  7315                           
  7316                           ;color.c: 66:  I2C_2_Master_RepStart();
  7317   0023B6  ECD2  F013         	call	_I2C_2_Master_RepStart	;wreg free
  7318                           
  7319                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x01);
  7320   0023BA  0E53               	movlw	83
  7321   0023BC  ECC6  F013         	call	_I2C_2_Master_Write
  7322                           
  7323                           ;color.c: 68:  tmp=I2C_2_Master_Read(1);
  7324   0023C0  0E01               	movlw	1
  7325   0023C2  EC6E  F012         	call	_I2C_2_Master_Read
  7326   0023C6  6E0F               	movwf	??_color_read_Blue^0,c
  7327   0023C8  500F               	movf	??_color_read_Blue^0,w,c
  7328   0023CA  6E12               	movwf	color_read_Blue@tmp^0,c
  7329   0023CC  6A13               	clrf	(color_read_Blue@tmp+1)^0,c
  7330                           
  7331                           ;color.c: 69:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7332   0023CE  0E00               	movlw	0
  7333   0023D0  EC6E  F012         	call	_I2C_2_Master_Read
  7334   0023D4  6E0F               	movwf	??_color_read_Blue^0,c
  7335   0023D6  500F               	movf	??_color_read_Blue^0,w,c
  7336   0023D8  6E11               	movwf	(??_color_read_Blue+2)^0,c
  7337   0023DA  6A10               	clrf	(??_color_read_Blue+1)^0,c
  7338   0023DC  5012               	movf	color_read_Blue@tmp^0,w,c
  7339   0023DE  1010               	iorwf	(??_color_read_Blue+1)^0,w,c
  7340   0023E0  6E12               	movwf	color_read_Blue@tmp^0,c
  7341   0023E2  5013               	movf	(color_read_Blue@tmp+1)^0,w,c
  7342   0023E4  1011               	iorwf	(??_color_read_Blue+2)^0,w,c
  7343   0023E6  6E13               	movwf	(color_read_Blue@tmp+1)^0,c
  7344                           
  7345                           ;color.c: 70:  I2C_2_Master_Stop();
  7346   0023E8  ECD7  F013         	call	_I2C_2_Master_Stop	;wreg free
  7347   0023EC                     
  7348                           ;color.c: 71:  return tmp;
  7349   0023EC  C012  F00D         	movff	color_read_Blue@tmp,?_color_read_Blue
  7350   0023F0  C013  F00E         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  7351   0023F4  0012               	return		;funcret
  7352   0023F6                     __end_of_color_read_Blue:
  7353                           	callstack 0
  7354                           
  7355 ;; *************** function _I2C_2_Master_RepStart *****************
  7356 ;; Defined at:
  7357 ;;		line 33 in file "i2c.c"
  7358 ;; Parameters:    Size  Location     Type
  7359 ;;		None
  7360 ;; Auto vars:     Size  Location     Type
  7361 ;;		None
  7362 ;; Return value:  Size  Location     Type
  7363 ;;                  1    wreg      void 
  7364 ;; Registers used:
  7365 ;;		wreg, status,2, status,0, cstack
  7366 ;; Tracked objects:
  7367 ;;		On entry : 0/0
  7368 ;;		On exit  : 0/0
  7369 ;;		Unchanged: 0/0
  7370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7375 ;;Total ram usage:        0 bytes
  7376 ;; Hardware stack levels used: 1
  7377 ;; Hardware stack levels required when called: 8
  7378 ;; This function calls:
  7379 ;;		_I2C_2_Master_Idle
  7380 ;; This function is called by:
  7381 ;;		_color_read_Red
  7382 ;;		_color_read_Green
  7383 ;;		_color_read_Blue
  7384 ;;		_color_read_Clear
  7385 ;; This function uses a non-reentrant model
  7386 ;;
  7387                           
  7388                           	psect	text39
  7389   0027A4                     __ptext39:
  7390                           	callstack 0
  7391   0027A4                     _I2C_2_Master_RepStart:
  7392                           	callstack 20
  7393   0027A4                     
  7394                           ;i2c.c: 35:   I2C_2_Master_Idle();
  7395   0027A4  ECF3  F012         	call	_I2C_2_Master_Idle	;wreg free
  7396   0027A8                     
  7397                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  7398   0027A8  010E               	movlb	14	; () banked
  7399   0027AA  83DA               	bsf	218,1,b	;volatile
  7400   0027AC                     
  7401                           ; BSR set to: 14
  7402   0027AC  0012               	return		;funcret
  7403   0027AE                     __end_of_I2C_2_Master_RepStart:
  7404                           	callstack 0
  7405                           
  7406 ;; *************** function _I2C_2_Master_Read *****************
  7407 ;; Defined at:
  7408 ;;		line 51 in file "i2c.c"
  7409 ;; Parameters:    Size  Location     Type
  7410 ;;  ack             1    wreg     unsigned char 
  7411 ;; Auto vars:     Size  Location     Type
  7412 ;;  ack             1   10[COMRAM] unsigned char 
  7413 ;;  tmp             1   11[COMRAM] unsigned char 
  7414 ;; Return value:  Size  Location     Type
  7415 ;;                  1    wreg      unsigned char 
  7416 ;; Registers used:
  7417 ;;		wreg, status,2, status,0, cstack
  7418 ;; Tracked objects:
  7419 ;;		On entry : 0/0
  7420 ;;		On exit  : 0/0
  7421 ;;		Unchanged: 0/0
  7422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7424 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7425 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7426 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7427 ;;Total ram usage:        3 bytes
  7428 ;; Hardware stack levels used: 1
  7429 ;; Hardware stack levels required when called: 8
  7430 ;; This function calls:
  7431 ;;		_I2C_2_Master_Idle
  7432 ;; This function is called by:
  7433 ;;		_color_read_Red
  7434 ;;		_color_read_Green
  7435 ;;		_color_read_Blue
  7436 ;;		_color_read_Clear
  7437 ;; This function uses a non-reentrant model
  7438 ;;
  7439                           
  7440                           	psect	text40
  7441   0024DC                     __ptext40:
  7442                           	callstack 0
  7443   0024DC                     _I2C_2_Master_Read:
  7444                           	callstack 20
  7445                           
  7446                           ; BSR set to: 14
  7447                           ;incstack = 0
  7448                           ;I2C_2_Master_Read@ack stored from wreg
  7449   0024DC  6E0B               	movwf	I2C_2_Master_Read@ack^0,c
  7450   0024DE                     
  7451                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  7452   0024DE  ECF3  F012         	call	_I2C_2_Master_Idle	;wreg free
  7453   0024E2                     
  7454                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  7455   0024E2  010E               	movlb	14	; () banked
  7456   0024E4  87DA               	bsf	218,3,b	;volatile
  7457                           
  7458                           ;i2c.c: 56:   I2C_2_Master_Idle();
  7459   0024E6  ECF3  F012         	call	_I2C_2_Master_Idle	;wreg free
  7460   0024EA                     
  7461                           ;i2c.c: 57:   tmp = SSP2BUF;
  7462   0024EA  CED5 F00C          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  7463                           
  7464                           ;i2c.c: 58:   I2C_2_Master_Idle();
  7465   0024EE  ECF3  F012         	call	_I2C_2_Master_Idle	;wreg free
  7466   0024F2                     
  7467                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  7468   0024F2  500B               	movf	I2C_2_Master_Read@ack^0,w,c
  7469   0024F4  B4D8               	btfsc	status,2,c
  7470   0024F6  EF7F  F012         	goto	u2131
  7471   0024FA  EF83  F012         	goto	u2130
  7472   0024FE                     u2131:
  7473   0024FE  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  7474   002500  2A0A               	incf	??_I2C_2_Master_Read^0,f,c
  7475   002502  EF84  F012         	goto	u2148
  7476   002506                     u2130:
  7477   002506  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  7478   002508                     u2148:
  7479   002508  3A0A               	swapf	??_I2C_2_Master_Read^0,f,c
  7480   00250A  460A               	rlncf	??_I2C_2_Master_Read^0,f,c
  7481   00250C  010E               	movlb	14	; () banked
  7482   00250E  51DA               	movf	218,w,b	;volatile
  7483   002510  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  7484   002512  0BDF               	andlw	-33
  7485   002514  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  7486   002516  6FDA               	movwf	218,b	;volatile
  7487   002518                     
  7488                           ; BSR set to: 14
  7489                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  7490   002518  89DA               	bsf	218,4,b	;volatile
  7491   00251A                     
  7492                           ; BSR set to: 14
  7493                           ;i2c.c: 61:   return tmp;
  7494   00251A  500C               	movf	I2C_2_Master_Read@tmp^0,w,c
  7495   00251C                     
  7496                           ; BSR set to: 14
  7497   00251C  0012               	return		;funcret
  7498   00251E                     __end_of_I2C_2_Master_Read:
  7499                           	callstack 0
  7500                           
  7501 ;; *************** function _Timer0_init *****************
  7502 ;; Defined at:
  7503 ;;		line 7 in file "timers.c"
  7504 ;; Parameters:    Size  Location     Type
  7505 ;;		None
  7506 ;; Auto vars:     Size  Location     Type
  7507 ;;		None
  7508 ;; Return value:  Size  Location     Type
  7509 ;;                  1    wreg      void 
  7510 ;; Registers used:
  7511 ;;		wreg, status,2
  7512 ;; Tracked objects:
  7513 ;;		On entry : 0/0
  7514 ;;		On exit  : 0/0
  7515 ;;		Unchanged: 0/0
  7516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7521 ;;Total ram usage:        0 bytes
  7522 ;; Hardware stack levels used: 1
  7523 ;; Hardware stack levels required when called: 7
  7524 ;; This function calls:
  7525 ;;		Nothing
  7526 ;; This function is called by:
  7527 ;;		_main
  7528 ;; This function uses a non-reentrant model
  7529 ;;
  7530                           
  7531                           	psect	text41
  7532   0026C8                     __ptext41:
  7533                           	callstack 0
  7534   0026C8                     _Timer0_init:
  7535                           	callstack 23
  7536   0026C8                     
  7537                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  7538   0026C8  50D6               	movf	214,w,c	;volatile
  7539   0026CA  0B1F               	andlw	-225
  7540   0026CC  0940               	iorlw	64
  7541   0026CE  6ED6               	movwf	214,c	;volatile
  7542   0026D0                     
  7543                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  7544   0026D0  88D6               	bsf	214,4,c	;volatile
  7545                           
  7546                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
  7547   0026D2  50D6               	movf	214,w,c	;volatile
  7548   0026D4  0BF0               	andlw	-16
  7549   0026D6  0908               	iorlw	8
  7550   0026D8  6ED6               	movwf	214,c	;volatile
  7551   0026DA                     
  7552                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
  7553   0026DA  88D5               	bsf	213,4,c	;volatile
  7554                           
  7555                           ;timers.c: 15:     TMR0H = 0b11000010;
  7556   0026DC  0EC2               	movlw	194
  7557   0026DE  6ED4               	movwf	212,c	;volatile
  7558                           
  7559                           ;timers.c: 16:     TMR0L = 0b11110110;
  7560   0026E0  0EF6               	movlw	246
  7561   0026E2  6ED3               	movwf	211,c	;volatile
  7562   0026E4                     
  7563                           ;timers.c: 17:     T0CON0bits.T0EN=1;
  7564   0026E4  8ED5               	bsf	213,7,c	;volatile
  7565   0026E6  0012               	return		;funcret
  7566   0026E8                     __end_of_Timer0_init:
  7567                           	callstack 0
  7568                           
  7569 ;; *************** function _LED_init *****************
  7570 ;; Defined at:
  7571 ;;		line 7 in file "LED_Buttons.c"
  7572 ;; Parameters:    Size  Location     Type
  7573 ;;		None
  7574 ;; Auto vars:     Size  Location     Type
  7575 ;;		None
  7576 ;; Return value:  Size  Location     Type
  7577 ;;                  1    wreg      void 
  7578 ;; Registers used:
  7579 ;;		None
  7580 ;; Tracked objects:
  7581 ;;		On entry : 0/0
  7582 ;;		On exit  : 0/0
  7583 ;;		Unchanged: 0/0
  7584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7589 ;;Total ram usage:        0 bytes
  7590 ;; Hardware stack levels used: 1
  7591 ;; Hardware stack levels required when called: 7
  7592 ;; This function calls:
  7593 ;;		Nothing
  7594 ;; This function is called by:
  7595 ;;		_main
  7596 ;; This function uses a non-reentrant model
  7597 ;;
  7598                           
  7599                           	psect	text42
  7600   00277C                     __ptext42:
  7601                           	callstack 0
  7602   00277C                     _LED_init:
  7603                           	callstack 23
  7604   00277C                     
  7605                           ;LED_Buttons.c: 8:     TRISGbits.TRISG1 = 0;
  7606   00277C  9287               	bcf	135,1,c	;volatile
  7607                           
  7608                           ;LED_Buttons.c: 9:     TRISAbits.TRISA4 = 0;
  7609   00277E  9881               	bcf	129,4,c	;volatile
  7610                           
  7611                           ;LED_Buttons.c: 10:     TRISFbits.TRISF7 = 0;
  7612   002780  9E86               	bcf	134,7,c	;volatile
  7613                           
  7614                           ;LED_Buttons.c: 12:     LATHbits.LATH3 = 0;
  7615   002782  9680               	bcf	128,3,c	;volatile
  7616                           
  7617                           ;LED_Buttons.c: 13:     TRISHbits.TRISH3 = 0;
  7618   002784  9688               	bcf	136,3,c	;volatile
  7619                           
  7620                           ;LED_Buttons.c: 15:     LATDbits.LATD7 = 0;
  7621   002786  9E7C               	bcf	124,7,c	;volatile
  7622                           
  7623                           ;LED_Buttons.c: 16:     TRISDbits.TRISD7 = 0;
  7624   002788  9E84               	bcf	132,7,c	;volatile
  7625   00278A  0012               	return		;funcret
  7626   00278C                     __end_of_LED_init:
  7627                           	callstack 0
  7628                           
  7629 ;; *************** function _Interrupts_init *****************
  7630 ;; Defined at:
  7631 ;;		line 12 in file "interrupts.c"
  7632 ;; Parameters:    Size  Location     Type
  7633 ;;		None
  7634 ;; Auto vars:     Size  Location     Type
  7635 ;;		None
  7636 ;; Return value:  Size  Location     Type
  7637 ;;                  1    wreg      void 
  7638 ;; Registers used:
  7639 ;;		wreg, status,2, status,0, cstack
  7640 ;; Tracked objects:
  7641 ;;		On entry : 0/0
  7642 ;;		On exit  : 0/0
  7643 ;;		Unchanged: 0/0
  7644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7649 ;;Total ram usage:        0 bytes
  7650 ;; Hardware stack levels used: 1
  7651 ;; Hardware stack levels required when called: 12
  7652 ;; This function calls:
  7653 ;;		_interrupts_clear_colorclick
  7654 ;; This function is called by:
  7655 ;;		_main
  7656 ;; This function uses a non-reentrant model
  7657 ;;
  7658                           
  7659                           	psect	text43
  7660   00265C                     __ptext43:
  7661                           	callstack 0
  7662   00265C                     _Interrupts_init:
  7663                           	callstack 18
  7664   00265C                     
  7665                           ;interrupts.c: 18:     TRISBbits.TRISB1 = 1;
  7666   00265C  8282               	bsf	130,1,c	;volatile
  7667                           
  7668                           ;interrupts.c: 19:     ANSELBbits.ANSELB1 = 0;
  7669   00265E  010E               	movlb	14	; () banked
  7670   002660  939A               	bcf	154,1,b	;volatile
  7671   002662                     
  7672                           ; BSR set to: 14
  7673                           ;interrupts.c: 20:     INT1PPS = 0x09;
  7674   002662  0E09               	movlw	9
  7675   002664  010D               	movlb	13	; () banked
  7676   002666  6FF1               	movwf	241,b	;volatile
  7677   002668                     
  7678                           ; BSR set to: 13
  7679                           ;interrupts.c: 21:     PIE0bits.INT1IE = 1;
  7680   002668  010E               	movlb	14	; () banked
  7681   00266A  8329               	bsf	41,1,b	;volatile
  7682   00266C                     
  7683                           ; BSR set to: 14
  7684                           ;interrupts.c: 22:     IPR0bits.INT1IP = 1;
  7685   00266C  831F               	bsf	31,1,b	;volatile
  7686   00266E                     
  7687                           ; BSR set to: 14
  7688                           ;interrupts.c: 23:     INTCONbits.INT1EDG = 0;
  7689   00266E  92F2               	bcf	242,1,c	;volatile
  7690   002670                     
  7691                           ; BSR set to: 14
  7692                           ;interrupts.c: 26:     PIE0bits.TMR0IE=1;
  7693   002670  8B29               	bsf	41,5,b	;volatile
  7694   002672                     
  7695                           ; BSR set to: 14
  7696                           ;interrupts.c: 27:     IPR0bits.TMR0IP = 0;
  7697   002672  9B1F               	bcf	31,5,b	;volatile
  7698   002674                     
  7699                           ; BSR set to: 14
  7700                           ;interrupts.c: 30:     PIE4bits.RC4IE=1;
  7701   002674  872D               	bsf	45,3,b	;volatile
  7702   002676                     
  7703                           ; BSR set to: 14
  7704                           ;interrupts.c: 32:     interrupts_clear_colorclick();
  7705   002676  ECA4  F013         	call	_interrupts_clear_colorclick	;wreg free
  7706   00267A                     
  7707                           ;interrupts.c: 34:     INTCONbits.IPEN = 1;
  7708   00267A  8AF2               	bsf	242,5,c	;volatile
  7709   00267C                     
  7710                           ;interrupts.c: 35:     INTCONbits.PEIE = 1;
  7711   00267C  8CF2               	bsf	242,6,c	;volatile
  7712   00267E                     
  7713                           ;interrupts.c: 36:     INTCONbits.GIE=1;
  7714   00267E  8EF2               	bsf	242,7,c	;volatile
  7715   002680  0012               	return		;funcret
  7716   002682                     __end_of_Interrupts_init:
  7717                           	callstack 0
  7718                           
  7719 ;; *************** function _interrupts_clear_colorclick *****************
  7720 ;; Defined at:
  7721 ;;		line 57 in file "interrupts.c"
  7722 ;; Parameters:    Size  Location     Type
  7723 ;;		None
  7724 ;; Auto vars:     Size  Location     Type
  7725 ;;		None
  7726 ;; Return value:  Size  Location     Type
  7727 ;;                  1    wreg      void 
  7728 ;; Registers used:
  7729 ;;		wreg, status,2, status,0, cstack
  7730 ;; Tracked objects:
  7731 ;;		On entry : 0/0
  7732 ;;		On exit  : 0/0
  7733 ;;		Unchanged: 0/0
  7734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7739 ;;Total ram usage:        0 bytes
  7740 ;; Hardware stack levels used: 1
  7741 ;; Hardware stack levels required when called: 11
  7742 ;; This function calls:
  7743 ;;		_I2C_2_Master_Start
  7744 ;;		_I2C_2_Master_Stop
  7745 ;;		_I2C_2_Master_Write
  7746 ;;		_init_colorclick_interrupts
  7747 ;; This function is called by:
  7748 ;;		_Interrupts_init
  7749 ;; This function uses a non-reentrant model
  7750 ;;
  7751                           
  7752                           	psect	text44
  7753   002748                     __ptext44:
  7754                           	callstack 0
  7755   002748                     _interrupts_clear_colorclick:
  7756                           	callstack 18
  7757   002748                     
  7758                           ;interrupts.c: 59:     I2C_2_Master_Start();
  7759   002748  ECDC  F013         	call	_I2C_2_Master_Start	;wreg free
  7760                           
  7761                           ;interrupts.c: 60:     I2C_2_Master_Write(0x52 | 0x00);
  7762   00274C  0E52               	movlw	82
  7763   00274E  ECC6  F013         	call	_I2C_2_Master_Write
  7764                           
  7765                           ;interrupts.c: 61:     I2C_2_Master_Write(0b11100110);
  7766   002752  0EE6               	movlw	230
  7767   002754  ECC6  F013         	call	_I2C_2_Master_Write
  7768                           
  7769                           ;interrupts.c: 62:     I2C_2_Master_Stop();
  7770   002758  ECD7  F013         	call	_I2C_2_Master_Stop	;wreg free
  7771                           
  7772                           ;interrupts.c: 64:     init_colorclick_interrupts();
  7773   00275C  ECFB  F011         	call	_init_colorclick_interrupts	;wreg free
  7774   002760  0012               	return		;funcret
  7775   002762                     __end_of_interrupts_clear_colorclick:
  7776                           	callstack 0
  7777                           
  7778 ;; *************** function _init_colorclick_interrupts *****************
  7779 ;; Defined at:
  7780 ;;		line 43 in file "interrupts.c"
  7781 ;; Parameters:    Size  Location     Type
  7782 ;;		None
  7783 ;; Auto vars:     Size  Location     Type
  7784 ;;		None
  7785 ;; Return value:  Size  Location     Type
  7786 ;;                  1    wreg      void 
  7787 ;; Registers used:
  7788 ;;		wreg, status,2, status,0, cstack
  7789 ;; Tracked objects:
  7790 ;;		On entry : 0/0
  7791 ;;		On exit  : 0/0
  7792 ;;		Unchanged: 0/0
  7793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7796 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7797 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7798 ;;Total ram usage:        1 bytes
  7799 ;; Hardware stack levels used: 1
  7800 ;; Hardware stack levels required when called: 10
  7801 ;; This function calls:
  7802 ;;		_color_writetoaddr
  7803 ;; This function is called by:
  7804 ;;		_interrupts_clear_colorclick
  7805 ;; This function uses a non-reentrant model
  7806 ;;
  7807                           
  7808                           	psect	text45
  7809   0023F6                     __ptext45:
  7810                           	callstack 0
  7811   0023F6                     _init_colorclick_interrupts:
  7812                           	callstack 18
  7813   0023F6                     
  7814                           ;interrupts.c: 45:     color_writetoaddr(0x00,0b10011);
  7815   0023F6  0E13               	movlw	19
  7816   0023F8  6E0B               	movwf	color_writetoaddr@value^0,c
  7817   0023FA  0E00               	movlw	0
  7818   0023FC  EC74  F013         	call	_color_writetoaddr
  7819   002400                     
  7820                           ;interrupts.c: 46:     _delay((unsigned long)((3)*(64000000/4000.0)));
  7821   002400  0E3F               	movlw	63
  7822   002402  6E0D               	movwf	??_init_colorclick_interrupts^0,c
  7823   002404  0E55               	movlw	85
  7824   002406                     u4477:
  7825   002406  2EE8               	decfsz	wreg,f,c
  7826   002408  D7FE               	bra	u4477
  7827   00240A  2E0D               	decfsz	??_init_colorclick_interrupts^0,f,c
  7828   00240C  D7FC               	bra	u4477
  7829   00240E  F000               	nop	
  7830   002410                     
  7831                           ;interrupts.c: 48:     color_writetoaddr(0x0C,0b0100);
  7832   002410  0E04               	movlw	4
  7833   002412  6E0B               	movwf	color_writetoaddr@value^0,c
  7834   002414  0E0C               	movlw	12
  7835   002416  EC74  F013         	call	_color_writetoaddr
  7836   00241A                     
  7837                           ;interrupts.c: 49:     color_writetoaddr(0x04,(int_threshold_low & 0xFF));
  7838   00241A  C04F  F00B         	movff	_int_threshold_low,color_writetoaddr@value
  7839   00241E  0E04               	movlw	4
  7840   002420  EC74  F013         	call	_color_writetoaddr
  7841   002424                     
  7842                           ;interrupts.c: 50:     color_writetoaddr(0x05,(int_threshold_low >> 8));
  7843   002424  5050               	movf	(_int_threshold_low+1)^0,w,c
  7844   002426  6E0B               	movwf	color_writetoaddr@value^0,c
  7845   002428  0E05               	movlw	5
  7846   00242A  EC74  F013         	call	_color_writetoaddr
  7847   00242E                     
  7848                           ;interrupts.c: 51:     color_writetoaddr(0x06,(int_threshold_high & 0xFF));
  7849   00242E  C0D3  F00B         	movff	_int_threshold_high,color_writetoaddr@value
  7850   002432  0E06               	movlw	6
  7851   002434  EC74  F013         	call	_color_writetoaddr
  7852   002438                     
  7853                           ;interrupts.c: 52:     color_writetoaddr(0x07,(int_threshold_high >> 8));
  7854   002438  0100               	movlb	0	; () banked
  7855   00243A  51D4               	movf	(_int_threshold_high+1)& (0+255),w,b
  7856   00243C  6E0B               	movwf	color_writetoaddr@value^0,c
  7857   00243E  0E07               	movlw	7
  7858   002440  EC74  F013         	call	_color_writetoaddr
  7859   002444  0012               	return		;funcret
  7860   002446                     __end_of_init_colorclick_interrupts:
  7861                           	callstack 0
  7862                           
  7863 ;; *************** function _color_writetoaddr *****************
  7864 ;; Defined at:
  7865 ;;		line 22 in file "color.c"
  7866 ;; Parameters:    Size  Location     Type
  7867 ;;  address         1    wreg     unsigned char 
  7868 ;;  value           1   10[COMRAM] unsigned char 
  7869 ;; Auto vars:     Size  Location     Type
  7870 ;;  address         1   11[COMRAM] unsigned char 
  7871 ;; Return value:  Size  Location     Type
  7872 ;;                  1    wreg      void 
  7873 ;; Registers used:
  7874 ;;		wreg, status,2, status,0, cstack
  7875 ;; Tracked objects:
  7876 ;;		On entry : 0/0
  7877 ;;		On exit  : 0/0
  7878 ;;		Unchanged: 0/0
  7879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7880 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7881 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7883 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7884 ;;Total ram usage:        2 bytes
  7885 ;; Hardware stack levels used: 1
  7886 ;; Hardware stack levels required when called: 9
  7887 ;; This function calls:
  7888 ;;		_I2C_2_Master_Start
  7889 ;;		_I2C_2_Master_Stop
  7890 ;;		_I2C_2_Master_Write
  7891 ;; This function is called by:
  7892 ;;		_color_click_init
  7893 ;;		_init_colorclick_interrupts
  7894 ;; This function uses a non-reentrant model
  7895 ;;
  7896                           
  7897                           	psect	text46
  7898   0026E8                     __ptext46:
  7899                           	callstack 0
  7900   0026E8                     _color_writetoaddr:
  7901                           	callstack 20
  7902                           
  7903                           ;incstack = 0
  7904                           ;color_writetoaddr@address stored from wreg
  7905   0026E8  6E0C               	movwf	color_writetoaddr@address^0,c
  7906   0026EA                     
  7907                           ;color.c: 23:     I2C_2_Master_Start();
  7908   0026EA  ECDC  F013         	call	_I2C_2_Master_Start	;wreg free
  7909                           
  7910                           ;color.c: 24:     I2C_2_Master_Write(0x52 | 0x00);
  7911   0026EE  0E52               	movlw	82
  7912   0026F0  ECC6  F013         	call	_I2C_2_Master_Write
  7913                           
  7914                           ;color.c: 25:     I2C_2_Master_Write(0x80 | address);
  7915   0026F4  500C               	movf	color_writetoaddr@address^0,w,c
  7916   0026F6  0980               	iorlw	128
  7917   0026F8  ECC6  F013         	call	_I2C_2_Master_Write
  7918                           
  7919                           ;color.c: 26:     I2C_2_Master_Write(value);
  7920   0026FC  500B               	movf	color_writetoaddr@value^0,w,c
  7921   0026FE  ECC6  F013         	call	_I2C_2_Master_Write
  7922                           
  7923                           ;color.c: 27:     I2C_2_Master_Stop();
  7924   002702  ECD7  F013         	call	_I2C_2_Master_Stop	;wreg free
  7925   002706  0012               	return		;funcret
  7926   002708                     __end_of_color_writetoaddr:
  7927                           	callstack 0
  7928                           
  7929 ;; *************** function _I2C_2_Master_Write *****************
  7930 ;; Defined at:
  7931 ;;		line 45 in file "i2c.c"
  7932 ;; Parameters:    Size  Location     Type
  7933 ;;  data_byte       1    wreg     unsigned char 
  7934 ;; Auto vars:     Size  Location     Type
  7935 ;;  data_byte       1    9[COMRAM] unsigned char 
  7936 ;; Return value:  Size  Location     Type
  7937 ;;                  1    wreg      void 
  7938 ;; Registers used:
  7939 ;;		wreg, status,2, status,0, cstack
  7940 ;; Tracked objects:
  7941 ;;		On entry : 0/0
  7942 ;;		On exit  : 0/0
  7943 ;;		Unchanged: 0/0
  7944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7946 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7948 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7949 ;;Total ram usage:        1 bytes
  7950 ;; Hardware stack levels used: 1
  7951 ;; Hardware stack levels required when called: 8
  7952 ;; This function calls:
  7953 ;;		_I2C_2_Master_Idle
  7954 ;; This function is called by:
  7955 ;;		_color_writetoaddr
  7956 ;;		_color_read_Red
  7957 ;;		_color_read_Green
  7958 ;;		_color_read_Blue
  7959 ;;		_color_read_Clear
  7960 ;;		_interrupts_clear_colorclick
  7961 ;; This function uses a non-reentrant model
  7962 ;;
  7963                           
  7964                           	psect	text47
  7965   00278C                     __ptext47:
  7966                           	callstack 0
  7967   00278C                     _I2C_2_Master_Write:
  7968                           	callstack 20
  7969                           
  7970                           ;incstack = 0
  7971                           ;I2C_2_Master_Write@data_byte stored from wreg
  7972   00278C  6E0A               	movwf	I2C_2_Master_Write@data_byte^0,c
  7973   00278E                     
  7974                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  7975   00278E  ECF3  F012         	call	_I2C_2_Master_Idle	;wreg free
  7976   002792                     
  7977                           ;i2c.c: 48:   SSP2BUF = data_byte;
  7978   002792  C00A  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  7979   002796  0012               	return		;funcret
  7980   002798                     __end_of_I2C_2_Master_Write:
  7981                           	callstack 0
  7982                           
  7983 ;; *************** function _I2C_2_Master_Stop *****************
  7984 ;; Defined at:
  7985 ;;		line 39 in file "i2c.c"
  7986 ;; Parameters:    Size  Location     Type
  7987 ;;		None
  7988 ;; Auto vars:     Size  Location     Type
  7989 ;;		None
  7990 ;; Return value:  Size  Location     Type
  7991 ;;                  1    wreg      void 
  7992 ;; Registers used:
  7993 ;;		wreg, status,2, status,0, cstack
  7994 ;; Tracked objects:
  7995 ;;		On entry : 0/0
  7996 ;;		On exit  : 0/0
  7997 ;;		Unchanged: 0/0
  7998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8003 ;;Total ram usage:        0 bytes
  8004 ;; Hardware stack levels used: 1
  8005 ;; Hardware stack levels required when called: 8
  8006 ;; This function calls:
  8007 ;;		_I2C_2_Master_Idle
  8008 ;; This function is called by:
  8009 ;;		_color_writetoaddr
  8010 ;;		_color_read_Red
  8011 ;;		_color_read_Green
  8012 ;;		_color_read_Blue
  8013 ;;		_color_read_Clear
  8014 ;;		_interrupts_clear_colorclick
  8015 ;; This function uses a non-reentrant model
  8016 ;;
  8017                           
  8018                           	psect	text48
  8019   0027AE                     __ptext48:
  8020                           	callstack 0
  8021   0027AE                     _I2C_2_Master_Stop:
  8022                           	callstack 20
  8023   0027AE                     
  8024                           ;i2c.c: 41:   I2C_2_Master_Idle();
  8025   0027AE  ECF3  F012         	call	_I2C_2_Master_Idle	;wreg free
  8026   0027B2                     
  8027                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  8028   0027B2  010E               	movlb	14	; () banked
  8029   0027B4  85DA               	bsf	218,2,b	;volatile
  8030   0027B6                     
  8031                           ; BSR set to: 14
  8032   0027B6  0012               	return		;funcret
  8033   0027B8                     __end_of_I2C_2_Master_Stop:
  8034                           	callstack 0
  8035                           
  8036 ;; *************** function _I2C_2_Master_Start *****************
  8037 ;; Defined at:
  8038 ;;		line 27 in file "i2c.c"
  8039 ;; Parameters:    Size  Location     Type
  8040 ;;		None
  8041 ;; Auto vars:     Size  Location     Type
  8042 ;;		None
  8043 ;; Return value:  Size  Location     Type
  8044 ;;                  1    wreg      void 
  8045 ;; Registers used:
  8046 ;;		wreg, status,2, status,0, cstack
  8047 ;; Tracked objects:
  8048 ;;		On entry : 0/0
  8049 ;;		On exit  : 0/0
  8050 ;;		Unchanged: 0/0
  8051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8055 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8056 ;;Total ram usage:        0 bytes
  8057 ;; Hardware stack levels used: 1
  8058 ;; Hardware stack levels required when called: 8
  8059 ;; This function calls:
  8060 ;;		_I2C_2_Master_Idle
  8061 ;; This function is called by:
  8062 ;;		_color_writetoaddr
  8063 ;;		_color_read_Red
  8064 ;;		_color_read_Green
  8065 ;;		_color_read_Blue
  8066 ;;		_color_read_Clear
  8067 ;;		_interrupts_clear_colorclick
  8068 ;; This function uses a non-reentrant model
  8069 ;;
  8070                           
  8071                           	psect	text49
  8072   0027B8                     __ptext49:
  8073                           	callstack 0
  8074   0027B8                     _I2C_2_Master_Start:
  8075                           	callstack 20
  8076   0027B8                     
  8077                           ;i2c.c: 29:   I2C_2_Master_Idle();
  8078   0027B8  ECF3  F012         	call	_I2C_2_Master_Idle	;wreg free
  8079   0027BC                     
  8080                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  8081   0027BC  010E               	movlb	14	; () banked
  8082   0027BE  81DA               	bsf	218,0,b	;volatile
  8083   0027C0                     
  8084                           ; BSR set to: 14
  8085   0027C0  0012               	return		;funcret
  8086   0027C2                     __end_of_I2C_2_Master_Start:
  8087                           	callstack 0
  8088                           
  8089 ;; *************** function _I2C_2_Master_Idle *****************
  8090 ;; Defined at:
  8091 ;;		line 22 in file "i2c.c"
  8092 ;; Parameters:    Size  Location     Type
  8093 ;;		None
  8094 ;; Auto vars:     Size  Location     Type
  8095 ;;		None
  8096 ;; Return value:  Size  Location     Type
  8097 ;;                  1    wreg      void 
  8098 ;; Registers used:
  8099 ;;		wreg, status,2, status,0
  8100 ;; Tracked objects:
  8101 ;;		On entry : 0/0
  8102 ;;		On exit  : 0/0
  8103 ;;		Unchanged: 0/0
  8104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8107 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8108 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8109 ;;Total ram usage:        1 bytes
  8110 ;; Hardware stack levels used: 1
  8111 ;; Hardware stack levels required when called: 7
  8112 ;; This function calls:
  8113 ;;		Nothing
  8114 ;; This function is called by:
  8115 ;;		_I2C_2_Master_Start
  8116 ;;		_I2C_2_Master_RepStart
  8117 ;;		_I2C_2_Master_Stop
  8118 ;;		_I2C_2_Master_Write
  8119 ;;		_I2C_2_Master_Read
  8120 ;; This function uses a non-reentrant model
  8121 ;;
  8122                           
  8123                           	psect	text50
  8124   0025E6                     __ptext50:
  8125                           	callstack 0
  8126   0025E6                     _I2C_2_Master_Idle:
  8127                           	callstack 20
  8128   0025E6                     l90:
  8129   0025E6  010E               	movlb	14	; () banked
  8130   0025E8  B5D8               	btfsc	216,2,b	;volatile
  8131   0025EA  EFF9  F012         	goto	u1911
  8132   0025EE  EFFB  F012         	goto	u1910
  8133   0025F2                     u1911:
  8134   0025F2  EFF3  F012         	goto	l90
  8135   0025F6                     u1910:
  8136   0025F6                     
  8137                           ; BSR set to: 14
  8138   0025F6  CEDA F009          	movff	3802,??_I2C_2_Master_Idle	;volatile
  8139   0025FA  0E1F               	movlw	31
  8140   0025FC  1609               	andwf	??_I2C_2_Master_Idle^0,f,c
  8141   0025FE  A4D8               	btfss	status,2,c
  8142   002600  EF04  F013         	goto	u1921
  8143   002604  EF06  F013         	goto	u1920
  8144   002608                     u1921:
  8145   002608  EFF3  F012         	goto	l90
  8146   00260C                     u1920:
  8147   00260C                     
  8148                           ; BSR set to: 14
  8149   00260C  0012               	return		;funcret
  8150   00260E                     __end_of_I2C_2_Master_Idle:
  8151                           	callstack 0
  8152                           
  8153 ;; *************** function _AppendTime *****************
  8154 ;; Defined at:
  8155 ;;		line 23 in file "Memorization.c"
  8156 ;; Parameters:    Size  Location     Type
  8157 ;;  temp            2    8[COMRAM] unsigned int 
  8158 ;;  time_index      2   10[COMRAM] PTR unsigned char 
  8159 ;;		 -> time_index(1), 
  8160 ;;  time_array      2   12[COMRAM] PTR unsigned int 
  8161 ;;		 -> time_array(80), 
  8162 ;; Auto vars:     Size  Location     Type
  8163 ;;		None
  8164 ;; Return value:  Size  Location     Type
  8165 ;;                  1    wreg      void 
  8166 ;; Registers used:
  8167 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8168 ;; Tracked objects:
  8169 ;;		On entry : 0/0
  8170 ;;		On exit  : 0/0
  8171 ;;		Unchanged: 0/0
  8172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8173 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8175 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8176 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8177 ;;Total ram usage:        9 bytes
  8178 ;; Hardware stack levels used: 1
  8179 ;; Hardware stack levels required when called: 7
  8180 ;; This function calls:
  8181 ;;		Nothing
  8182 ;; This function is called by:
  8183 ;;		_main
  8184 ;; This function uses a non-reentrant model
  8185 ;;
  8186                           
  8187                           	psect	text51
  8188   00258A                     __ptext51:
  8189                           	callstack 0
  8190   00258A                     _AppendTime:
  8191                           	callstack 23
  8192   00258A                     
  8193                           ;Memorization.c: 25:     time_array[(*time_index)++] = temp;
  8194   00258A  C00B  FFD9         	movff	AppendTime@time_index,fsr2l
  8195   00258E  C00C  FFDA         	movff	AppendTime@time_index+1,fsr2h
  8196   002592  CFDF F00F          	movff	indf2,??_AppendTime
  8197   002596  0E01               	movlw	1
  8198   002598  26DF               	addwf	indf2,f,c
  8199   00259A  500F               	movf	??_AppendTime^0,w,c
  8200   00259C  0D02               	mullw	2
  8201   00259E  CFF3 F010          	movff	prodl,??_AppendTime+1
  8202   0025A2  CFF4 F011          	movff	prodh,??_AppendTime+2
  8203   0025A6  5010               	movf	(??_AppendTime+1)^0,w,c
  8204   0025A8  240D               	addwf	AppendTime@time_array^0,w,c
  8205   0025AA  6ED9               	movwf	fsr2l,c
  8206   0025AC  5011               	movf	(??_AppendTime+2)^0,w,c
  8207   0025AE  200E               	addwfc	(AppendTime@time_array+1)^0,w,c
  8208   0025B0  6EDA               	movwf	fsr2h,c
  8209   0025B2  C009  FFDE         	movff	AppendTime@temp,postinc2
  8210   0025B6  C00A  FFDD         	movff	AppendTime@temp+1,postdec2
  8211   0025BA  0012               	return		;funcret
  8212   0025BC                     __end_of_AppendTime:
  8213                           	callstack 0
  8214                           
  8215 ;; *************** function _LowISR *****************
  8216 ;; Defined at:
  8217 ;;		line 74 in file "interrupts.c"
  8218 ;; Parameters:    Size  Location     Type
  8219 ;;		None
  8220 ;; Auto vars:     Size  Location     Type
  8221 ;;		None
  8222 ;; Return value:  Size  Location     Type
  8223 ;;                  1    wreg      void 
  8224 ;; Registers used:
  8225 ;;		wreg, status,2
  8226 ;; Tracked objects:
  8227 ;;		On entry : 0/0
  8228 ;;		On exit  : 0/0
  8229 ;;		Unchanged: 0/0
  8230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8233 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8234 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8235 ;;Total ram usage:        3 bytes
  8236 ;; Hardware stack levels used: 1
  8237 ;; Hardware stack levels required when called: 6
  8238 ;; This function calls:
  8239 ;;		Nothing
  8240 ;; This function is called by:
  8241 ;;		Interrupt level 1
  8242 ;; This function uses a non-reentrant model
  8243 ;;
  8244                           
  8245                           	psect	intcodelo
  8246   000018                     __pintcodelo:
  8247                           	callstack 0
  8248   000018                     _LowISR:
  8249                           	callstack 17
  8250                           
  8251                           ;incstack = 0
  8252   000018  8057               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  8253   00001A  CFD8 F006          	movff	status,??_LowISR
  8254   00001E  CFE8 F007          	movff	wreg,??_LowISR+1
  8255   000022  CFE0 F008          	movff	bsr,??_LowISR+2
  8256   000026                     
  8257                           ;interrupts.c: 77:     if(PIR0bits.TMR0IF){
  8258   000026  010E               	movlb	14	; () banked
  8259   000028  AB33               	btfss	51,5,b	;volatile
  8260   00002A  EF19  F000         	goto	i1u357_21
  8261   00002E  EF1B  F000         	goto	i1u357_20
  8262   000032                     i1u357_21:
  8263   000032  EF24  F000         	goto	i1l327
  8264   000036                     i1u357_20:
  8265   000036                     
  8266                           ; BSR set to: 14
  8267                           ;interrupts.c: 78:         TMR0H = 0b11000010;
  8268   000036  0EC2               	movlw	194
  8269   000038  6ED4               	movwf	212,c	;volatile
  8270                           
  8271                           ;interrupts.c: 79:         TMR0L = 0b11110110;
  8272   00003A  0EF6               	movlw	246
  8273   00003C  6ED3               	movwf	211,c	;volatile
  8274                           
  8275                           ;interrupts.c: 80:         tmr_ovf = 1;
  8276   00003E  0E01               	movlw	1
  8277   000040  0100               	movlb	0	; () banked
  8278   000042  6F74               	movwf	_tmr_ovf& (0+255),b
  8279   000044                     
  8280                           ; BSR set to: 0
  8281                           ;interrupts.c: 81:         PIR0bits.TMR0IF=0;
  8282   000044  010E               	movlb	14	; () banked
  8283   000046  9B33               	bcf	51,5,b	;volatile
  8284   000048                     i1l327:
  8285                           
  8286                           ; BSR set to: 14
  8287   000048  C008  FFE0         	movff	??_LowISR+2,bsr
  8288   00004C  C007  FFE8         	movff	??_LowISR+1,wreg
  8289   000050  C006  FFD8         	movff	??_LowISR,status
  8290   000054  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  8291   000056  0010               	retfie	
  8292   000058                     __end_of_LowISR:
  8293                           	callstack 0
  8294                           
  8295 ;; *************** function _HighISR *****************
  8296 ;; Defined at:
  8297 ;;		line 88 in file "interrupts.c"
  8298 ;; Parameters:    Size  Location     Type
  8299 ;;		None
  8300 ;; Auto vars:     Size  Location     Type
  8301 ;;		None
  8302 ;; Return value:  Size  Location     Type
  8303 ;;                  1    wreg      void 
  8304 ;; Registers used:
  8305 ;;		wreg, status,2, status,0, cstack
  8306 ;; Tracked objects:
  8307 ;;		On entry : 0/0
  8308 ;;		On exit  : 0/0
  8309 ;;		Unchanged: 0/0
  8310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8315 ;;Total ram usage:        0 bytes
  8316 ;; Hardware stack levels used: 1
  8317 ;; Hardware stack levels required when called: 5
  8318 ;; This function calls:
  8319 ;;		i2_interrupts_clear_colorclick
  8320 ;; This function is called by:
  8321 ;;		Interrupt level 2
  8322 ;; This function uses a non-reentrant model
  8323 ;;
  8324                           
  8325                           	psect	intcode
  8326   000008                     __pintcode:
  8327                           	callstack 0
  8328   000008                     _HighISR:
  8329                           	callstack 17
  8330                           
  8331                           ; BSR set to: 14
  8332                           ;incstack = 0
  8333   000008  8257               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8334   00000A  EF84  F013         	goto	int_func
  8335                           
  8336                           	psect	intcode_body
  8337   002708                     __pintcode_body:
  8338                           	callstack 17
  8339   002708                     int_func:
  8340                           	callstack 17
  8341   002708                     
  8342                           ;interrupts.c: 115:     if(PIR0bits.INT1IF){
  8343   002708  010E               	movlb	14	; () banked
  8344   00270A  A333               	btfss	51,1,b	;volatile
  8345   00270C  EF8A  F013         	goto	i2u358_41
  8346   002710  EF8C  F013         	goto	i2u358_40
  8347   002714                     i2u358_41:
  8348   002714  EF92  F013         	goto	i2l335
  8349   002718                     i2u358_40:
  8350   002718                     
  8351                           ; BSR set to: 14
  8352                           ;interrupts.c: 116:         color_flag = 1;
  8353   002718  0E01               	movlw	1
  8354   00271A  6E55               	movwf	_color_flag^0,c
  8355   00271C                     
  8356                           ; BSR set to: 14
  8357                           ;interrupts.c: 118:         interrupts_clear_colorclick();
  8358   00271C  ECB1  F013         	call	i2_interrupts_clear_colorclick	;wreg free
  8359   002720                     
  8360                           ;interrupts.c: 119:         PIR0bits.INT1IF = 0;
  8361   002720  010E               	movlb	14	; () banked
  8362   002722  9333               	bcf	51,1,b	;volatile
  8363   002724                     i2l335:
  8364                           
  8365                           ; BSR set to: 14
  8366   002724  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8367   002726  0011               	retfie		f
  8368   002728                     __end_of_HighISR:
  8369                           	callstack 0
  8370                           
  8371 ;; *************** function i2_interrupts_clear_colorclick *****************
  8372 ;; Defined at:
  8373 ;;		line 57 in file "interrupts.c"
  8374 ;; Parameters:    Size  Location     Type
  8375 ;;		None
  8376 ;; Auto vars:     Size  Location     Type
  8377 ;;		None
  8378 ;; Return value:  Size  Location     Type
  8379 ;;                  1    wreg      void 
  8380 ;; Registers used:
  8381 ;;		wreg, status,2, status,0, cstack
  8382 ;; Tracked objects:
  8383 ;;		On entry : 0/0
  8384 ;;		On exit  : 0/0
  8385 ;;		Unchanged: 0/0
  8386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8391 ;;Total ram usage:        0 bytes
  8392 ;; Hardware stack levels used: 1
  8393 ;; Hardware stack levels required when called: 4
  8394 ;; This function calls:
  8395 ;;		i2_I2C_2_Master_Start
  8396 ;;		i2_I2C_2_Master_Stop
  8397 ;;		i2_I2C_2_Master_Write
  8398 ;;		i2_init_colorclick_interrupts
  8399 ;; This function is called by:
  8400 ;;		_HighISR
  8401 ;; This function uses a non-reentrant model
  8402 ;;
  8403                           
  8404                           	psect	text54
  8405   002762                     __ptext54:
  8406                           	callstack 0
  8407   002762                     i2_interrupts_clear_colorclick:
  8408                           	callstack 17
  8409   002762                     
  8410                           ;interrupts.c: 59:     I2C_2_Master_Start();
  8411   002762  ECE6  F013         	call	i2_I2C_2_Master_Start	;wreg free
  8412                           
  8413                           ;interrupts.c: 60:     I2C_2_Master_Write(0x52 | 0x00);
  8414   002766  0E52               	movlw	82
  8415   002768  ECCC  F013         	call	i2_I2C_2_Master_Write
  8416                           
  8417                           ;interrupts.c: 61:     I2C_2_Master_Write(0b11100110);
  8418   00276C  0EE6               	movlw	230
  8419   00276E  ECCC  F013         	call	i2_I2C_2_Master_Write
  8420                           
  8421                           ;interrupts.c: 62:     I2C_2_Master_Stop();
  8422   002772  ECE1  F013         	call	i2_I2C_2_Master_Stop	;wreg free
  8423                           
  8424                           ;interrupts.c: 64:     init_colorclick_interrupts();
  8425   002776  EC23  F012         	call	i2_init_colorclick_interrupts	;wreg free
  8426   00277A  0012               	return		;funcret
  8427   00277C                     __end_ofi2_interrupts_clear_colorclick:
  8428                           	callstack 0
  8429                           
  8430 ;; *************** function i2_init_colorclick_interrupts *****************
  8431 ;; Defined at:
  8432 ;;		line 43 in file "interrupts.c"
  8433 ;; Parameters:    Size  Location     Type
  8434 ;;		None
  8435 ;; Auto vars:     Size  Location     Type
  8436 ;;		None
  8437 ;; Return value:  Size  Location     Type
  8438 ;;                  1    wreg      void 
  8439 ;; Registers used:
  8440 ;;		wreg, status,2, status,0, cstack
  8441 ;; Tracked objects:
  8442 ;;		On entry : 0/0
  8443 ;;		On exit  : 0/0
  8444 ;;		Unchanged: 0/0
  8445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8448 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8449 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8450 ;;Total ram usage:        1 bytes
  8451 ;; Hardware stack levels used: 1
  8452 ;; Hardware stack levels required when called: 3
  8453 ;; This function calls:
  8454 ;;		i2_color_writetoaddr
  8455 ;; This function is called by:
  8456 ;;		i2_interrupts_clear_colorclick
  8457 ;; This function uses a non-reentrant model
  8458 ;;
  8459                           
  8460                           	psect	text55
  8461   002446                     __ptext55:
  8462                           	callstack 0
  8463   002446                     i2_init_colorclick_interrupts:
  8464                           	callstack 17
  8465   002446                     
  8466                           ;interrupts.c: 45:     color_writetoaddr(0x00,0b10011);
  8467   002446  0E13               	movlw	19
  8468   002448  6E03               	movwf	i2color_writetoaddr@value^0,c
  8469   00244A  0E00               	movlw	0
  8470   00244C  EC94  F013         	call	i2_color_writetoaddr
  8471   002450                     
  8472                           ;interrupts.c: 46:     _delay((unsigned long)((3)*(64000000/4000.0)));
  8473   002450  0E3F               	movlw	63
  8474   002452  6E05               	movwf	??i2_init_colorclick_interrupts^0,c
  8475   002454  0E55               	movlw	85
  8476   002456                     i2u448_47:
  8477   002456  2EE8               	decfsz	wreg,f,c
  8478   002458  D7FE               	bra	i2u448_47
  8479   00245A  2E05               	decfsz	??i2_init_colorclick_interrupts^0,f,c
  8480   00245C  D7FC               	bra	i2u448_47
  8481   00245E  F000               	nop	
  8482   002460                     
  8483                           ;interrupts.c: 48:     color_writetoaddr(0x0C,0b0100);
  8484   002460  0E04               	movlw	4
  8485   002462  6E03               	movwf	i2color_writetoaddr@value^0,c
  8486   002464  0E0C               	movlw	12
  8487   002466  EC94  F013         	call	i2_color_writetoaddr
  8488   00246A                     
  8489                           ;interrupts.c: 49:     color_writetoaddr(0x04,(int_threshold_low & 0xFF));
  8490   00246A  C04F  F003         	movff	_int_threshold_low,i2color_writetoaddr@value
  8491   00246E  0E04               	movlw	4
  8492   002470  EC94  F013         	call	i2_color_writetoaddr
  8493   002474                     
  8494                           ;interrupts.c: 50:     color_writetoaddr(0x05,(int_threshold_low >> 8));
  8495   002474  5050               	movf	(_int_threshold_low+1)^0,w,c
  8496   002476  6E03               	movwf	i2color_writetoaddr@value^0,c
  8497   002478  0E05               	movlw	5
  8498   00247A  EC94  F013         	call	i2_color_writetoaddr
  8499   00247E                     
  8500                           ;interrupts.c: 51:     color_writetoaddr(0x06,(int_threshold_high & 0xFF));
  8501   00247E  C0D3  F003         	movff	_int_threshold_high,i2color_writetoaddr@value
  8502   002482  0E06               	movlw	6
  8503   002484  EC94  F013         	call	i2_color_writetoaddr
  8504   002488                     
  8505                           ;interrupts.c: 52:     color_writetoaddr(0x07,(int_threshold_high >> 8));
  8506   002488  0100               	movlb	0	; () banked
  8507   00248A  51D4               	movf	(_int_threshold_high+1)& (0+255),w,b
  8508   00248C  6E03               	movwf	i2color_writetoaddr@value^0,c
  8509   00248E  0E07               	movlw	7
  8510   002490  EC94  F013         	call	i2_color_writetoaddr
  8511   002494  0012               	return		;funcret
  8512   002496                     __end_ofi2_init_colorclick_interrupts:
  8513                           	callstack 0
  8514                           
  8515 ;; *************** function i2_color_writetoaddr *****************
  8516 ;; Defined at:
  8517 ;;		line 22 in file "color.c"
  8518 ;; Parameters:    Size  Location     Type
  8519 ;;  address         1    wreg     unsigned char 
  8520 ;;  value           1    2[COMRAM] unsigned char 
  8521 ;; Auto vars:     Size  Location     Type
  8522 ;;  address         1    3[COMRAM] unsigned char 
  8523 ;; Return value:  Size  Location     Type
  8524 ;;                  1    wreg      void 
  8525 ;; Registers used:
  8526 ;;		wreg, status,2, status,0, cstack
  8527 ;; Tracked objects:
  8528 ;;		On entry : 0/0
  8529 ;;		On exit  : 0/0
  8530 ;;		Unchanged: 0/0
  8531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8532 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8533 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8535 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8536 ;;Total ram usage:        2 bytes
  8537 ;; Hardware stack levels used: 1
  8538 ;; Hardware stack levels required when called: 2
  8539 ;; This function calls:
  8540 ;;		i2_I2C_2_Master_Start
  8541 ;;		i2_I2C_2_Master_Stop
  8542 ;;		i2_I2C_2_Master_Write
  8543 ;; This function is called by:
  8544 ;;		i2_init_colorclick_interrupts
  8545 ;; This function uses a non-reentrant model
  8546 ;;
  8547                           
  8548                           	psect	text56
  8549   002728                     __ptext56:
  8550                           	callstack 0
  8551   002728                     i2_color_writetoaddr:
  8552                           	callstack 17
  8553                           
  8554                           ;incstack = 0
  8555                           ;i2color_writetoaddr@address stored from wreg
  8556   002728  6E04               	movwf	i2color_writetoaddr@address^0,c
  8557   00272A                     
  8558                           ;color.c: 23:     I2C_2_Master_Start();
  8559   00272A  ECE6  F013         	call	i2_I2C_2_Master_Start	;wreg free
  8560                           
  8561                           ;color.c: 24:     I2C_2_Master_Write(0x52 | 0x00);
  8562   00272E  0E52               	movlw	82
  8563   002730  ECCC  F013         	call	i2_I2C_2_Master_Write
  8564                           
  8565                           ;color.c: 25:     I2C_2_Master_Write(0x80 | address);
  8566   002734  5004               	movf	i2color_writetoaddr@address^0,w,c
  8567   002736  0980               	iorlw	128
  8568   002738  ECCC  F013         	call	i2_I2C_2_Master_Write
  8569                           
  8570                           ;color.c: 26:     I2C_2_Master_Write(value);
  8571   00273C  5003               	movf	i2color_writetoaddr@value^0,w,c
  8572   00273E  ECCC  F013         	call	i2_I2C_2_Master_Write
  8573                           
  8574                           ;color.c: 27:     I2C_2_Master_Stop();
  8575   002742  ECE1  F013         	call	i2_I2C_2_Master_Stop	;wreg free
  8576   002746  0012               	return		;funcret
  8577   002748                     __end_ofi2_color_writetoaddr:
  8578                           	callstack 0
  8579                           
  8580 ;; *************** function i2_I2C_2_Master_Write *****************
  8581 ;; Defined at:
  8582 ;;		line 45 in file "i2c.c"
  8583 ;; Parameters:    Size  Location     Type
  8584 ;;  data_byte       1    wreg     unsigned char 
  8585 ;; Auto vars:     Size  Location     Type
  8586 ;;  data_byte       1    1[COMRAM] unsigned char 
  8587 ;; Return value:  Size  Location     Type
  8588 ;;                  1    wreg      void 
  8589 ;; Registers used:
  8590 ;;		wreg, status,2, status,0, cstack
  8591 ;; Tracked objects:
  8592 ;;		On entry : 0/0
  8593 ;;		On exit  : 0/0
  8594 ;;		Unchanged: 0/0
  8595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8597 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8599 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8600 ;;Total ram usage:        1 bytes
  8601 ;; Hardware stack levels used: 1
  8602 ;; Hardware stack levels required when called: 1
  8603 ;; This function calls:
  8604 ;;		i2_I2C_2_Master_Idle
  8605 ;; This function is called by:
  8606 ;;		i2_color_writetoaddr
  8607 ;;		i2_interrupts_clear_colorclick
  8608 ;; This function uses a non-reentrant model
  8609 ;;
  8610                           
  8611                           	psect	text57
  8612   002798                     __ptext57:
  8613                           	callstack 0
  8614   002798                     i2_I2C_2_Master_Write:
  8615                           	callstack 17
  8616                           
  8617                           ;incstack = 0
  8618                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  8619   002798  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  8620   00279A                     
  8621                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  8622   00279A  EC07  F013         	call	i2_I2C_2_Master_Idle	;wreg free
  8623   00279E                     
  8624                           ;i2c.c: 48:   SSP2BUF = data_byte;
  8625   00279E  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  8626   0027A2  0012               	return		;funcret
  8627   0027A4                     __end_ofi2_I2C_2_Master_Write:
  8628                           	callstack 0
  8629                           
  8630 ;; *************** function i2_I2C_2_Master_Stop *****************
  8631 ;; Defined at:
  8632 ;;		line 39 in file "i2c.c"
  8633 ;; Parameters:    Size  Location     Type
  8634 ;;		None
  8635 ;; Auto vars:     Size  Location     Type
  8636 ;;		None
  8637 ;; Return value:  Size  Location     Type
  8638 ;;                  1    wreg      void 
  8639 ;; Registers used:
  8640 ;;		wreg, status,2, status,0, cstack
  8641 ;; Tracked objects:
  8642 ;;		On entry : 0/0
  8643 ;;		On exit  : 0/0
  8644 ;;		Unchanged: 0/0
  8645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8650 ;;Total ram usage:        0 bytes
  8651 ;; Hardware stack levels used: 1
  8652 ;; Hardware stack levels required when called: 1
  8653 ;; This function calls:
  8654 ;;		i2_I2C_2_Master_Idle
  8655 ;; This function is called by:
  8656 ;;		i2_color_writetoaddr
  8657 ;;		i2_interrupts_clear_colorclick
  8658 ;; This function uses a non-reentrant model
  8659 ;;
  8660                           
  8661                           	psect	text58
  8662   0027C2                     __ptext58:
  8663                           	callstack 0
  8664   0027C2                     i2_I2C_2_Master_Stop:
  8665                           	callstack 17
  8666   0027C2                     
  8667                           ;i2c.c: 41:   I2C_2_Master_Idle();
  8668   0027C2  EC07  F013         	call	i2_I2C_2_Master_Idle	;wreg free
  8669   0027C6                     
  8670                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  8671   0027C6  010E               	movlb	14	; () banked
  8672   0027C8  85DA               	bsf	218,2,b	;volatile
  8673   0027CA                     
  8674                           ; BSR set to: 14
  8675   0027CA  0012               	return		;funcret
  8676   0027CC                     __end_ofi2_I2C_2_Master_Stop:
  8677                           	callstack 0
  8678                           
  8679 ;; *************** function i2_I2C_2_Master_Start *****************
  8680 ;; Defined at:
  8681 ;;		line 27 in file "i2c.c"
  8682 ;; Parameters:    Size  Location     Type
  8683 ;;		None
  8684 ;; Auto vars:     Size  Location     Type
  8685 ;;		None
  8686 ;; Return value:  Size  Location     Type
  8687 ;;                  1    wreg      void 
  8688 ;; Registers used:
  8689 ;;		wreg, status,2, status,0, cstack
  8690 ;; Tracked objects:
  8691 ;;		On entry : 0/0
  8692 ;;		On exit  : 0/0
  8693 ;;		Unchanged: 0/0
  8694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8699 ;;Total ram usage:        0 bytes
  8700 ;; Hardware stack levels used: 1
  8701 ;; Hardware stack levels required when called: 1
  8702 ;; This function calls:
  8703 ;;		i2_I2C_2_Master_Idle
  8704 ;; This function is called by:
  8705 ;;		i2_color_writetoaddr
  8706 ;;		i2_interrupts_clear_colorclick
  8707 ;; This function uses a non-reentrant model
  8708 ;;
  8709                           
  8710                           	psect	text59
  8711   0027CC                     __ptext59:
  8712                           	callstack 0
  8713   0027CC                     i2_I2C_2_Master_Start:
  8714                           	callstack 17
  8715   0027CC                     
  8716                           ;i2c.c: 29:   I2C_2_Master_Idle();
  8717   0027CC  EC07  F013         	call	i2_I2C_2_Master_Idle	;wreg free
  8718   0027D0                     
  8719                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  8720   0027D0  010E               	movlb	14	; () banked
  8721   0027D2  81DA               	bsf	218,0,b	;volatile
  8722   0027D4                     
  8723                           ; BSR set to: 14
  8724   0027D4  0012               	return		;funcret
  8725   0027D6                     __end_ofi2_I2C_2_Master_Start:
  8726                           	callstack 0
  8727                           
  8728 ;; *************** function i2_I2C_2_Master_Idle *****************
  8729 ;; Defined at:
  8730 ;;		line 22 in file "i2c.c"
  8731 ;; Parameters:    Size  Location     Type
  8732 ;;		None
  8733 ;; Auto vars:     Size  Location     Type
  8734 ;;		None
  8735 ;; Return value:  Size  Location     Type
  8736 ;;                  1    wreg      void 
  8737 ;; Registers used:
  8738 ;;		wreg, status,2, status,0
  8739 ;; Tracked objects:
  8740 ;;		On entry : 0/0
  8741 ;;		On exit  : 0/0
  8742 ;;		Unchanged: 0/0
  8743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8746 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8747 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8748 ;;Total ram usage:        1 bytes
  8749 ;; Hardware stack levels used: 1
  8750 ;; This function calls:
  8751 ;;		Nothing
  8752 ;; This function is called by:
  8753 ;;		i2_I2C_2_Master_Start
  8754 ;;		i2_I2C_2_Master_Stop
  8755 ;;		i2_I2C_2_Master_Write
  8756 ;; This function uses a non-reentrant model
  8757 ;;
  8758                           
  8759                           	psect	text60
  8760   00260E                     __ptext60:
  8761                           	callstack 0
  8762   00260E                     i2_I2C_2_Master_Idle:
  8763                           	callstack 17
  8764   00260E                     i2l90:
  8765   00260E  010E               	movlb	14	; () banked
  8766   002610  B5D8               	btfsc	216,2,b	;volatile
  8767   002612  EF0D  F013         	goto	i2u201_41
  8768   002616  EF0F  F013         	goto	i2u201_40
  8769   00261A                     i2u201_41:
  8770   00261A  EF07  F013         	goto	i2l90
  8771   00261E                     i2u201_40:
  8772   00261E                     
  8773                           ; BSR set to: 14
  8774   00261E  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  8775   002622  0E1F               	movlw	31
  8776   002624  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  8777   002626  A4D8               	btfss	status,2,c
  8778   002628  EF18  F013         	goto	i2u202_41
  8779   00262C  EF1A  F013         	goto	i2u202_40
  8780   002630                     i2u202_41:
  8781   002630  EF07  F013         	goto	i2l90
  8782   002634                     i2u202_40:
  8783   002634                     
  8784                           ; BSR set to: 14
  8785   002634  0012               	return		;funcret
  8786   002636                     __end_ofi2_I2C_2_Master_Idle:
  8787                           	callstack 0
  8788   000000                     
  8789                           	psect	rparam
  8790   000000                     
  8791                           	psect	temp
  8792   000057                     btemp:
  8793                           	callstack 0
  8794   000057                     	ds	1
  8795   000000                     int$flags	set	btemp
  8796   000000                     wtemp8	set	btemp+1
  8797   000000                     ttemp5	set	btemp+1
  8798   000000                     ttemp6	set	btemp+4
  8799   000000                     ttemp7	set	btemp+8
  8800                           
  8801                           	psect	idloc
  8802                           
  8803                           ;Config register IDLOC0 @ 0x200000
  8804                           ;	unspecified, using default values
  8805   200000                     	org	2097152
  8806   200000  0FFF               	dw	4095
  8807                           
  8808                           ;Config register IDLOC1 @ 0x200002
  8809                           ;	unspecified, using default values
  8810   200002                     	org	2097154
  8811   200002  0FFF               	dw	4095
  8812                           
  8813                           ;Config register IDLOC2 @ 0x200004
  8814                           ;	unspecified, using default values
  8815   200004                     	org	2097156
  8816   200004  0FFF               	dw	4095
  8817                           
  8818                           ;Config register IDLOC3 @ 0x200006
  8819                           ;	unspecified, using default values
  8820   200006                     	org	2097158
  8821   200006  0FFF               	dw	4095
  8822                           
  8823                           ;Config register IDLOC4 @ 0x200008
  8824                           ;	unspecified, using default values
  8825   200008                     	org	2097160
  8826   200008  0FFF               	dw	4095
  8827                           
  8828                           ;Config register IDLOC5 @ 0x20000A
  8829                           ;	unspecified, using default values
  8830   20000A                     	org	2097162
  8831   20000A  0FFF               	dw	4095
  8832                           
  8833                           ;Config register IDLOC6 @ 0x20000C
  8834                           ;	unspecified, using default values
  8835   20000C                     	org	2097164
  8836   20000C  0FFF               	dw	4095
  8837                           
  8838                           ;Config register IDLOC7 @ 0x20000E
  8839                           ;	unspecified, using default values
  8840   20000E                     	org	2097166
  8841   20000E  0FFF               	dw	4095
  8842                           
  8843                           	psect	config
  8844                           
  8845                           ;Config register CONFIG1L @ 0x300000
  8846                           ;	External Oscillator mode Selection bits
  8847                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  8848                           ;	Power-up default value for COSC bits
  8849                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  8850   300000                     	org	3145728
  8851   300000  AA                 	db	170
  8852                           
  8853                           ;Config register CONFIG1H @ 0x300001
  8854                           ;	unspecified, using default values
  8855                           ;	Clock Out Enable bit
  8856                           ;	CLKOUTEN = 0x1, unprogrammed default
  8857                           ;	Clock Switch Enable bit
  8858                           ;	CSWEN = 0x1, unprogrammed default
  8859                           ;	Fail-Safe Clock Monitor Enable bit
  8860                           ;	FCMEN = 0x1, unprogrammed default
  8861   300001                     	org	3145729
  8862   300001  FF                 	db	255
  8863                           
  8864                           ;Config register CONFIG2L @ 0x300002
  8865                           ;	unspecified, using default values
  8866                           ;	Master Clear Enable bit
  8867                           ;	MCLRE = 0x1, unprogrammed default
  8868                           ;	Power-up Timer Enable bit
  8869                           ;	PWRTE = 0x1, unprogrammed default
  8870                           ;	Low-power BOR enable bit
  8871                           ;	LPBOREN = 0x1, unprogrammed default
  8872                           ;	Brown-out Reset Enable bits
  8873                           ;	BOREN = 0x3, unprogrammed default
  8874   300002                     	org	3145730
  8875   300002  FF                 	db	255
  8876                           
  8877                           ;Config register CONFIG2H @ 0x300003
  8878                           ;	unspecified, using default values
  8879                           ;	Brown Out Reset Voltage selection bits
  8880                           ;	BORV = 0x3, unprogrammed default
  8881                           ;	ZCD Disable bit
  8882                           ;	ZCD = 0x1, unprogrammed default
  8883                           ;	PPSLOCK bit One-Way Set Enable bit
  8884                           ;	PPS1WAY = 0x1, unprogrammed default
  8885                           ;	Stack Full/Underflow Reset Enable bit
  8886                           ;	STVREN = 0x1, unprogrammed default
  8887                           ;	Debugger Enable bit
  8888                           ;	DEBUG = 0x1, unprogrammed default
  8889                           ;	Extended Instruction Set Enable bit
  8890                           ;	XINST = 0x1, unprogrammed default
  8891   300003                     	org	3145731
  8892   300003  FF                 	db	255
  8893                           
  8894                           ;Config register CONFIG3L @ 0x300004
  8895                           ;	WDT Period Select bits
  8896                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  8897                           ;	WDT operating mode
  8898                           ;	WDTE = OFF, WDT Disabled
  8899   300004                     	org	3145732
  8900   300004  9F                 	db	159
  8901                           
  8902                           ;Config register CONFIG3H @ 0x300005
  8903                           ;	unspecified, using default values
  8904                           ;	WDT Window Select bits
  8905                           ;	WDTCWS = 0x7, unprogrammed default
  8906                           ;	WDT input clock selector
  8907                           ;	WDTCCS = 0x7, unprogrammed default
  8908   300005                     	org	3145733
  8909   300005  FF                 	db	255
  8910                           
  8911                           ;Config register CONFIG4L @ 0x300006
  8912                           ;	unspecified, using default values
  8913                           ;	Write Protection Block 0
  8914                           ;	WRT0 = 0x1, unprogrammed default
  8915                           ;	Write Protection Block 1
  8916                           ;	WRT1 = 0x1, unprogrammed default
  8917                           ;	Write Protection Block 2
  8918                           ;	WRT2 = 0x1, unprogrammed default
  8919                           ;	Write Protection Block 3
  8920                           ;	WRT3 = 0x1, unprogrammed default
  8921                           ;	Write Protection Block 3
  8922                           ;	WRT4 = 0x1, unprogrammed default
  8923                           ;	Write Protection Block 3
  8924                           ;	WRT5 = 0x1, unprogrammed default
  8925                           ;	Write Protection Block 3
  8926                           ;	WRT6 = 0x1, unprogrammed default
  8927                           ;	Write Protection Block 3
  8928                           ;	WRT7 = 0x1, unprogrammed default
  8929   300006                     	org	3145734
  8930   300006  FF                 	db	255
  8931                           
  8932                           ;Config register CONFIG4H @ 0x300007
  8933                           ;	unspecified, using default values
  8934                           ;	Configuration Register Write Protection bit
  8935                           ;	WRTC = 0x1, unprogrammed default
  8936                           ;	Boot Block Write Protection bit
  8937                           ;	WRTB = 0x1, unprogrammed default
  8938                           ;	Data EEPROM Write Protection bit
  8939                           ;	WRTD = 0x1, unprogrammed default
  8940                           ;	Scanner Enable bit
  8941                           ;	SCANE = 0x1, unprogrammed default
  8942                           ;	Low Voltage Programming Enable bit
  8943                           ;	LVP = 0x1, unprogrammed default
  8944   300007                     	org	3145735
  8945   300007  FF                 	db	255
  8946                           
  8947                           ;Config register CONFIG5L @ 0x300008
  8948                           ;	unspecified, using default values
  8949                           ;	UserNVM Program Memory Code Protection bit
  8950                           ;	CP = 0x1, unprogrammed default
  8951                           ;	DataNVM Memory Code Protection bit
  8952                           ;	CPD = 0x1, unprogrammed default
  8953   300008                     	org	3145736
  8954   300008  FF                 	db	255
  8955                           
  8956                           ;Config register CONFIG5H @ 0x300009
  8957                           ;	unspecified, using default values
  8958   300009                     	org	3145737
  8959   300009  FF                 	db	255
  8960                           
  8961                           ;Config register CONFIG6L @ 0x30000A
  8962                           ;	unspecified, using default values
  8963                           ;	Table Read Protection Block 0
  8964                           ;	EBTR0 = 0x1, unprogrammed default
  8965                           ;	Table Read Protection Block 1
  8966                           ;	EBTR1 = 0x1, unprogrammed default
  8967                           ;	Table Read Protection Block 2
  8968                           ;	EBTR2 = 0x1, unprogrammed default
  8969                           ;	Table Read Protection Block 3
  8970                           ;	EBTR3 = 0x1, unprogrammed default
  8971                           ;	Table Read Protection Block 4
  8972                           ;	EBTR4 = 0x1, unprogrammed default
  8973                           ;	Table Read Protection Block 5
  8974                           ;	EBTR5 = 0x1, unprogrammed default
  8975                           ;	Table Read Protection Block 6
  8976                           ;	EBTR6 = 0x1, unprogrammed default
  8977                           ;	Table Read Protection Block 7
  8978                           ;	EBTR7 = 0x1, unprogrammed default
  8979   30000A                     	org	3145738
  8980   30000A  FF                 	db	255
  8981                           
  8982                           ;Config register CONFIG6H @ 0x30000B
  8983                           ;	unspecified, using default values
  8984                           ;	Boot Block Table Read Protection bit
  8985                           ;	EBTRB = 0x1, unprogrammed default
  8986   30000B                     	org	3145739
  8987   30000B  FF                 	db	255
  8988                           tosu	equ	0xFFF
  8989                           tosh	equ	0xFFE
  8990                           tosl	equ	0xFFD
  8991                           stkptr	equ	0xFFC
  8992                           pclatu	equ	0xFFB
  8993                           pclath	equ	0xFFA
  8994                           pcl	equ	0xFF9
  8995                           tblptru	equ	0xFF8
  8996                           tblptrh	equ	0xFF7
  8997                           tblptrl	equ	0xFF6
  8998                           tablat	equ	0xFF5
  8999                           prodh	equ	0xFF4
  9000                           prodl	equ	0xFF3
  9001                           indf0	equ	0xFEF
  9002                           postinc0	equ	0xFEE
  9003                           postdec0	equ	0xFED
  9004                           preinc0	equ	0xFEC
  9005                           plusw0	equ	0xFEB
  9006                           fsr0h	equ	0xFEA
  9007                           fsr0l	equ	0xFE9
  9008                           wreg	equ	0xFE8
  9009                           indf1	equ	0xFE7
  9010                           postinc1	equ	0xFE6
  9011                           postdec1	equ	0xFE5
  9012                           preinc1	equ	0xFE4
  9013                           plusw1	equ	0xFE3
  9014                           fsr1h	equ	0xFE2
  9015                           fsr1l	equ	0xFE1
  9016                           bsr	equ	0xFE0
  9017                           indf2	equ	0xFDF
  9018                           postinc2	equ	0xFDE
  9019                           postdec2	equ	0xFDD
  9020                           preinc2	equ	0xFDC
  9021                           plusw2	equ	0xFDB
  9022                           fsr2h	equ	0xFDA
  9023                           fsr2l	equ	0xFD9
  9024                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         210
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     78      86
    BANK0           160     53     117
    BANK1           256      0     140
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    Return_Time@time_index	PTR unsigned char  size(2) Largest target is 1
		 -> time_index(BANK0[1]), 

    Return_Time@time_array	PTR unsigned int  size(2) Largest target is 80
		 -> time_array(BANK1[80]), 

    Return_Anti_Moves@moves_index	PTR unsigned char  size(2) Largest target is 1
		 -> moves_index(COMRAM[1]), 

    Return_Anti_Moves@anti_moves_array	PTR unsigned char  size(2) Largest target is 40
		 -> anti_moves_array(BANK0[40]), 

    AppendTime@time_index	PTR unsigned char  size(2) Largest target is 1
		 -> time_index(BANK0[1]), 

    AppendTime@time_array	PTR unsigned int  size(2) Largest target is 80
		 -> time_array(BANK1[80]), 

    AppendMoves@moves_index	PTR unsigned char  size(2) Largest target is 1
		 -> moves_index(COMRAM[1]), 

    AppendMoves@anti_moves_array	PTR unsigned char  size(2) Largest target is 40
		 -> anti_moves_array(BANK0[40]), 

    MoveBuggy@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    MoveBuggy@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    MoveBuggy@color_detected	PTR unsigned char  size(2) Largest target is 3561
		 -> RAM(DATA[3561]), 

    WhiteInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    WhiteInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    LightBlueInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    LightBlueInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    OrangeInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    OrangeInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    PinkInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    PinkInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    YellowInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    YellowInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    BlueInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    BlueInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    GreenInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    GreenInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    RedInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    RedInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnLeft135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnLeft90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    fullSpeedBackwards@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    fullSpeedBackwards@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    fullSpeedBackwards@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    fullSpeedBackwards@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    fullSpeedBackwards@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    fullSpeedBackwards@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    S1213DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    S1213DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), main@motorL(BANK0[9]), 

    detect_color@tempval	PTR struct RGB_val size(2) Largest target is 8
		 -> main@initial_color(BANK0[8]), 

    Update_RGBC@tempval	PTR struct RGB_val size(2) Largest target is 8
		 -> main@initial_color(BANK0[8]), 


Critical Paths under _main in COMRAM

    _detect_color->___fltol
    ___fltol->___flmul
    ___flmul->___fldiv
    ___fldiv->___xxtofl
    _color_click_init->_color_writetoaddr
    _WhiteInstructions->_MoveBuggy
    _fullSpeedAhead->_setMotorPWM
    _MoveBuggy->_BlueInstructions
    _MoveBuggy->_GreenInstructions
    _MoveBuggy->_LightBlueInstructions
    _MoveBuggy->_OrangeInstructions
    _MoveBuggy->_PinkInstructions
    _MoveBuggy->_RedInstructions
    _MoveBuggy->_YellowInstructions
    _YellowInstructions->_turnRight90
    _RedInstructions->_turnRight90
    _turnRight90->_turnRight
    _PinkInstructions->_turnLeft90
    _OrangeInstructions->_turnRight135
    _turnRight135->_turnRight
    _turnRight->_setMotorPWM
    _LightBlueInstructions->_turnLeft135
    _turnLeft135->_turnLeft
    _GreenInstructions->_turnLeft90
    _BlueInstructions->_turnLeft90
    _turnLeft90->_turnLeft
    _turnLeft->_setMotorPWM
    _stop->_setMotorPWM
    _fullSpeedBackwards->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _Update_RGBC->_color_read_Blue
    _Update_RGBC->_color_read_Clear
    _Update_RGBC->_color_read_Green
    _Update_RGBC->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _interrupts_clear_colorclick->_init_colorclick_interrupts
    _init_colorclick_interrupts->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    i2_interrupts_clear_colorclick->i2_init_colorclick_interrupts
    i2_init_colorclick_interrupts->i2_color_writetoaddr
    i2_color_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_detect_color
    _detect_color->___fltol

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                31    31      0  260936
                                             22 BANK0     31    31      0
                         _AppendTime
                    _Interrupts_init
                           _LED_init
                          _MoveBuggy
                        _Timer0_init
                        _Update_RGBC
                  _WhiteInstructions
                         _WhiteLight
                   _color_click_init
                       _detect_color
                     _fullSpeedAhead
                    _initDCmotorsPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _detect_color                                        18    16      2    6670
                                              4 BANK0     18    16      2
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     616
                                              8 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     517
                                             72 COMRAM     6     2      4
                                              0 BANK0      4     4      0
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    1886
                                             47 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1541
                                             22 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     750
                                             12 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WhiteLight                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WhiteInstructions                                   11     7      4  133189
                                             51 COMRAM    11     7      4
                   _BlueInstructions
                          _MoveBuggy
                  _Return_Anti_Moves
                        _Return_Time
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (1) _fullSpeedAhead                                       6     2      4    2441
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _Return_Time                                          9     5      4     219
                                              8 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (2) _Return_Anti_Moves                                    6     2      4     219
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _MoveBuggy                                            6     0      6  109726
                                             45 COMRAM     6     0      6
                        _AppendMoves
                   _BlueInstructions
                  _GreenInstructions
              _LightBlueInstructions
                 _OrangeInstructions
                   _PinkInstructions
                    _RedInstructions
                 _YellowInstructions
 ---------------------------------------------------------------------------------
 (3) _YellowInstructions                                   7     3      4   15398
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                        _turnRight90
 ---------------------------------------------------------------------------------
 (3) _RedInstructions                                      7     3      4   15398
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                        _turnRight90
 ---------------------------------------------------------------------------------
 (4) _turnRight90                                          5     1      4    7449
                                             33 COMRAM     5     1      4
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (3) _PinkInstructions                                     7     3      4   15550
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                         _turnLeft90
 ---------------------------------------------------------------------------------
 (3) _OrangeInstructions                                   7     3      4   15246
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                       _turnRight135
 ---------------------------------------------------------------------------------
 (4) _turnRight135                                         5     1      4    7297
                                             33 COMRAM     5     1      4
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (5) _turnRight                                            6     2      4    2593
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _LightBlueInstructions                                7     3      4   15094
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                        _turnLeft135
 ---------------------------------------------------------------------------------
 (4) _turnLeft135                                          5     1      4    7145
                                             33 COMRAM     5     1      4
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (3) _GreenInstructions                                    7     3      4   15550
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                         _turnLeft90
 ---------------------------------------------------------------------------------
 (3) _BlueInstructions                                     7     3      4   15746
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                         _turnLeft90
 ---------------------------------------------------------------------------------
 (4) _turnLeft90                                           5     1      4    7601
                                             33 COMRAM     5     1      4
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (5) _turnLeft                                             6     2      4    2441
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _stop                                                 5     1      4    4417
                                             27 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _fullSpeedBackwards                                   6     2      4    3201
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    1829
                                             21 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                             14 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _AppendMoves                                          6     2      4     826
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Update_RGBC                                          2     0      2     692
                                             19 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              9 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0     772
        _interrupts_clear_colorclick
 ---------------------------------------------------------------------------------
 (2) _interrupts_clear_colorclick                          0     0      0     772
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
         _init_colorclick_interrupts
 ---------------------------------------------------------------------------------
 (3) _init_colorclick_interrupts                           1     1      0     750
                                             12 COMRAM     1     1      0
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     750
                                             10 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              9 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _AppendTime                                           9     3      6     522
                                              8 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _LowISR                                               3     3      0       0
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _HighISR                                              0     0      0     244
      i2_interrupts_clear_colorclick
 ---------------------------------------------------------------------------------
 (10) i2_interrupts_clear_colorclick                       0     0      0     244
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
       i2_init_colorclick_interrupts
 ---------------------------------------------------------------------------------
 (11) i2_init_colorclick_interrupts                        1     1      0     222
                                              4 COMRAM     1     1      0
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (12) i2_color_writetoaddr                                 2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (13) i2_I2C_2_Master_Write                                1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (13) i2_I2C_2_Master_Stop                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (13) i2_I2C_2_Master_Start                                0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (14) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AppendTime
   _Interrupts_init
     _interrupts_clear_colorclick
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
       _init_colorclick_interrupts
         _color_writetoaddr
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
   _LED_init
   _MoveBuggy
     _AppendMoves
     _BlueInstructions
       _fullSpeedBackwards
         _setMotorPWM
           ___lwdiv
             ___wmul (ARG)
           ___wmul
       _stop
         _setMotorPWM
       _turnLeft90
         _stop
         _turnLeft
           _setMotorPWM
     _GreenInstructions
       _fullSpeedBackwards
       _stop
       _turnLeft90
     _LightBlueInstructions
       _fullSpeedBackwards
       _stop
       _turnLeft135
         _stop
         _turnLeft
     _OrangeInstructions
       _fullSpeedBackwards
       _stop
       _turnRight135
         _stop
         _turnRight
           _setMotorPWM
     _PinkInstructions
       _fullSpeedBackwards
       _stop
       _turnLeft90
     _RedInstructions
       _fullSpeedBackwards
       _stop
       _turnRight90
         _stop
         _turnRight
     _YellowInstructions
       _fullSpeedBackwards
       _stop
       _turnRight90
   _Timer0_init
   _Update_RGBC
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _WhiteInstructions
     _BlueInstructions
     _MoveBuggy
     _Return_Anti_Moves
     _Return_Time
     _fullSpeedAhead
       _setMotorPWM
     _stop
   _WhiteLight
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
   _detect_color
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       ___fldiv (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _fullSpeedAhead
   _initDCmotorsPWM
   _stop

 _LowISR (ROOT)

 _HighISR (ROOT)
   i2_interrupts_clear_colorclick
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle
     i2_init_colorclick_interrupts
       i2_color_writetoaddr
         i2_I2C_2_Master_Start
         i2_I2C_2_Master_Stop
         i2_I2C_2_Master_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      63        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      8C       7       54.7%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     35      75       5       73.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4E      56       1       91.5%
BITBIGSFRhllllh     52      0       0      40        0.0%
BITBIGSFRhlllll     37      0       0      42        0.0%
BITBIGSFRllh        2D      0       0      45        0.0%
BITBIGSFRlllhll     2A      0       0      53        0.0%
BITBIGSFRllllhl     23      0       0      60        0.0%
BITBIGSFRhhhlll     1D      0       0      38        0.0%
BITBIGSFRhhhhlh     1B      0       0      33        0.0%
BITBIGSFRhhhhll     13      0       0      34        0.0%
BITBIGSFRlllhhh     11      0       0      47        0.0%
BITBIGSFRlllhhh     11      0       0      48        0.0%
BITBIGSFRhhhlhh      E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRlllhhh      C      0       0      46        0.0%
BITBIGSFRlllhll      9      0       0      57        0.0%
BITBIGSFRhlllll      8      0       0      43        0.0%
BITBIGSFRllllhh      6      0       0      59        0.0%
BITBIGSFRlllhll      6      0       0      52        0.0%
BITBIGSFRlllhll      5      0       0      55        0.0%
BITBIGSFRlllhlh      5      0       0      51        0.0%
BITBIGSFRlllhll      3      0       0      54        0.0%
BITBIGSFRlllhll      3      0       0      56        0.0%
BITBIGSFRlllhhl      3      0       0      50        0.0%
BITBIGSFRhlllll      2      0       0      41        0.0%
BITBIGSFRhhhllh      2      0       0      37        0.0%
BITBIGSFRlllll       2      0       0      61        0.0%
BITBIGSFRhhhlhl      1      0       0      36        0.0%
BITBIGSFRlllhhh      1      0       0      49        0.0%
BITBIGSFRhlllh       1      0       0      39        0.0%
BITBIGSFRlllhll      1      0       0      58        0.0%
BITBIGSFRlh          1      0       0      44        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     157      62        0.0%
DATA                 0      0     157       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Mar 10 16:42:15 2023

                       _color_read_Red 22B6                           ___fldiv@aexp 002F  
                         ___fldiv@bexp 002E                           ___fldiv@sign 0027  
                      _color_read_Blue 23A6                                     l21 2588  
                                   l30 2354                                     l24 2706  
                                   l33 23F4                                     l42 0670  
                                   l27 2304                                     l36 23A4  
                                   l60 0676                                     l39 214C  
                                   l56 0670                                     l90 25E6  
                                   l93 260C                                     l87 25E4  
                                   l96 27C0                                     l99 27AC  
                                   bsr 000FE0                    ___wmul@multiplicand 000B  
                     _anti_moves_array 0075                       _color_read_Clear 2356  
                     _color_read_Green 2306             WhiteInstructions@anticolor 003C  
                    ??_Interrupts_init 000E                                    l102 27B6  
                                  l105 2796                                    l202 1968  
                                  l131 278A                                    l108 251C  
                                  l212 178C                                    l134 27DC  
                                  l207 187A                                    l217 1A56  
                                  l226 22B4                                    l235 21A6  
                                  l316 2444                                    l309 2680  
                                  l253 2200                                    l262 225A  
                                  l319 2760                                    l192 1596  
                                  l433 26E6                                    l185 1D56  
                                  l602 1F6E                                    l611 1FF4  
                                  l197 1C14                                    l623 1B40  
                                  l633 117E                                    l644 1276  
                                  l557 1E62                                    l661 26C6  
                                  l566 207A                                    l655 26A4  
                                  l575 1CC6                                    l584 1DDC  
                                  l664 2554                                    l593 1EE8  
                                  l658 25BA                                    l667 265A  
                                  l964 169E                    i2_color_writetoaddr 2728  
                                  wreg 000FE8                           ___flmul@aexp 0041  
                         ___flmul@bexp 0042                           ___flmul@sign 003C  
                         ___flmul@temp 0047                           ___flmul@prod 0043  
                         ___fltol@exp1 004E                                   l3010 25D0  
                                 l3002 25BC                                   l1322 12CE  
                                 l1251 0C9A                                   l3020 2306  
                                 l3100 123E                                   l3012 25D2  
                                 l3004 25C6                                   l1260 0CE0  
                                 l1165 20EE                                   l1325 142A  
                                 l3022 234C                                   l3014 22B6  
                                 l1158 20E6                                   l3102 1252  
                                 l3006 25CC                                   l1262 0D58  
                                 l1254 0C5E                                   l1263 0D46  
                                 l3032 2356                                   l3016 22FC  
                                 l3104 1260                                   l3112 26A6  
                                 l3040 16FC                                   l3008 25CE  
                                 l3200 0C98                                   l3120 0AAE  
                                 l1336 13C2                                   l4000 0530  
                                 l1249 0E3A                                   l1281 073C  
                                 l1329 1366                                   l3026 23A6  
                                 l3034 239C                                   l3114 26C4  
                                 l3106 251E                                   l3050 175C  
                                 l3042 1708                                   l3210 0CDE  
                                 l3202 0CAA                                   l3130 0AEE  
                                 l3122 0ABC                                   l1290 09AA  
                                 l4010 0578                                   l4002 0538  
                                 l1291 0998                                   l3028 23EC  
                                 l3060 10A2                                   l3108 254C  
                                 l3052 1768                                   l3044 1724  
                                 l3220 0D3E                                   l3204 0CC0  
                                 l3212 0CF0                                   l3140 0B14  
                                 l3132 0AF0                                   l3124 0ABE  
                                 l3300 0786                                   l4020 05C0  
                                 l4012 0588                                   l4004 0548  
                                 l4100 0F44                                   l1285 0AA0  
                                 l3070 1106                                   l3062 10B6  
                                 l3054 1774                                   l3046 1730  
                                 l3038 16A0                                   l3230 0DAC  
                                 l3214 0CFE                                   l3206 0CC6  
                                 l3150 0B54                                   l3142 0B22  
                                 l3126 0ACE                                   l3134 0AF8  
                                 l3118 0AA2                                   l3310 07D8  
                                 l3302 079C                                   l4022 05D0  
                                 l4030 0608                                   l4014 0598  
                                 l4006 0558                                   l4110 0F98  
                                 l4102 0F56                                   l3056 2748  
                                 l3080 1164                                   l3072 1114  
                                 l3064 10C4                                   l3048 1746  
                                 l3240 0E16                                   l3224 0D68  
                                 l3232 0DB0                                   l3216 0D02  
                                 l3208 0CD0                                   l3160 0B94  
                                 l3152 0B56                                   l3144 0B24  
                                 l3136 0B08                                   l3128 0ADE  
                                 l1288 0932                                   l3320 081E  
                                 l3312 07E6                                   l3304 07A8  
                                 l4040 0658                                   l4032 0618  
                                 l4024 05E0                                   l4008 0568  
                                 l4016 05A0                                   l4112 0FAC  
                                 l4104 0F76                                   l4120 0FF0  
                                 l3090 11DA                                   l3082 1182  
                                 l3074 112E                                   l3066 10DE  
                                 l3058 1090                                   l3242 0E1A  
                                 l3234 0DCA                                   l3226 0D74  
                                 l3218 0D10                                   l3170 0BC4  
                                 l3162 0B9C                                   l3146 0B34  
                                 l3154 0B5E                                   l3138 0B0E  
                                 l1298 0A62                                   l3330 088C  
                                 l3322 0838                                   l3314 07F2  
                                 l3306 07C0                                   l4042 0668  
                                 l4034 0628                                   l4026 05F0  
                                 l4018 05B0                                   l4130 1044  
                                 l4122 1002                                   l4114 0FC6  
                                 l4106 0F7C                                   l4050 0E5E  
                                 l3500 20F0                                   l2700 1BAA  
                                 l3092 11EE                                   l3084 1196  
                                 l3076 1142                                   l3068 10F2  
                                 l3244 0E28                                   l3236 0DE0  
                                 l3228 0D82                                   l3180 0C02  
                                 l3172 0BC4                                   l3164 0BA0  
                                 l3156 0B6E                                   l3148 0B44  
                                 l3340 0922                                   l3332 08B6  
                                 l3324 0848                                   l3316 0802  
                                 l3308 07CC                                   l3260 0692  
                                 l4036 0638                                   l4028 0600  
                                 l4132 1058                                   l4124 1022  
                                 l4116 0FC8                                   l4108 0F90  
                                 l4060 0E84                                   l4052 0E62  
                                 l2702 1BC0                                   l2710 187C  
                                 l3094 1202                                   l3086 11AE  
                                 l3078 1156                                   l3246 0E2E  
                                 l3238 0DFA                                   l3190 0C4E  
                                 l3182 0C12                                   l3158 0B84  
                                 l3350 0962                                   l3342 0930  
                                 l3334 08EC                                   l3326 0864  
                                 l3318 080E                                   l3270 06CA  
                                 l3262 0694                                   l3430 127A  
                                 l4038 0648                                   l4134 1072  
                                 l4126 1028                                   l4118 0FEC  
                                 l4070 0EA2                                   l4062 0E88  
                                 l4054 0E66                                   l2640 2084  
                                 l2632 2636                                   l2704 1BEE  
                                 l2720 1922                                   l2712 18D8  
                                 l2800 21B0                                   l3096 1210  
                                 l3088 11C2                                   l3248 0E30  
                                 l3192 0C5C                                   l3184 0C22  
                                 l3176 0BD8                                   l3168 0BB4  
                                 l3360 09D4                                   l3352 0990  
                                 l3344 0942                                   l3336 08FA  
                                 l3328 0870                                   l3280 06F6  
                                 l3272 06DA                                   l3264 06A4  
                                 l3256 0678                                   l3432 128A  
                                 l4136 1086                                   l4128 103C  
                                 l4080 0EC0                                   l4072 0EA6  
                                 l4064 0E90                                   l4056 0E7A  
                                 l4048 0E3C                                   l2650 20BA  
                                 l2642 2096                                   l2634 2652  
                                 l2706 1BFA                                   l2722 1938  
                                 l2714 18E4                                   l2730 17EA  
                                 l2810 21F0                                   l2802 21C4  
                                 l3098 122A                                   l3194 0C68  
                                 l3186 0C2A                                   l3178 0BF2  
                                 l3370 0A4A                                   l3362 09FE  
                                 l3346 0950                                   l3338 0918  
                                 l3290 074C                                   l3282 0706  
                                 l3274 06E0                                   l3266 06B4  
                                 l3258 0684                                   l3450 1350  
                                 l3442 1308                                   l3434 1298  
                                 l4090 0F02                                   l4082 0EC4  
                                 l4074 0EAA                                   l4066 0E98  
                                 l4058 0E80                                   l2660 25E6  
                                 l2652 20D0                                   l2644 209E  
                                 l2708 1C06                                   l2724 1944  
                                 l2716 1900                                   l2900 203E  
                                 l2820 2234                                   l2812 2202  
                                 l2740 184A                                   l2732 17F6  
                                 l2804 21C6                                   l3700 1A70  
                                 l3196 0C86                                   l3188 0C3A  
                                 l3372 0A66                                   l3380 0A8C  
                                 l3356 09BA                                   l3364 0A02  
                                 l3348 0954                                   l3292 075C  
                                 l3284 0716                                   l3276 06E6  
                                 l3268 06C4                                   l3460 13D0  
                                 l3452 135C                                   l3444 1310  
                                 l3436 12DE                                   l4092 0F0E  
                                 l4084 0ED0                                   l4076 0EB2  
                                 l4068 0E9E                                   l2662 25F6  
                                 l2750 26EA                                   l2654 20D8  
                                 l2646 20A6                                   l2638 207C  
                                 l2670 14B0                                   l2726 1950  
                                 l2718 190C                                   l2910 1C32  
                                 l2902 204E                                   l2822 2248  
                                 l2814 220A                                   l2742 1856  
                                 l2734 1812                                   l2806 21DA  
                                 l3710 1ACA                                   l3702 1A78  
                                 l3630 27D6                                   l3198 0C88  
                                 l3382 0A90                                   l3374 0A76  
                                 l3366 0A1C                                   l3358 09C6  
                                 l3286 0726                                   l3278 06F4  
                                 l3470 1418                                   l3462 13D2  
                                 l3454 1398                                   l3446 131C  
                                 l3438 12F4                                   l4094 0F20  
                                 l4086 0EE2                                   l4078 0EBA  
                                 l2680 27B8                                   l2840 27A8  
                                 l2656 20DA                                   l2648 20B4  
                                 l2672 14B4                                   l2664 142C  
                                 l2760 19FA                                   l2752 196A  
                                 l2920 1C6E                                   l2912 1C34  
                                 l2904 2066                                   l2824 224A  
                                 l2816 221E                                   l2744 1862  
                                 l2736 181E                                   l2728 178E  
                                 l2808 21EE                                   l3712 1ADE  
                                 l3704 1A98                                   l3720 1B2E  
                                 l3376 0A84                                   l3368 0A30  
                                 l3296 0770                                   l3288 072C  
                                 l3472 141A                                   l3464 13D6  
                                 l3456 13A4                                   l3448 134E  
                                 l3640 1D26                                   l3632 1CC8  
                                 l4088 0EEE                                   l4096 0F24  
                                 l2682 27BC                                   l2690 27B2  
                                 l2850 2518                                   l2842 24DE  
                                 l2658 20E0                                   l2674 14F6  
                                 l2666 1448                                   l2762 1A10  
                                 l2754 19C6                                   l2770 225C  
                                 l2922 1C86                                   l2914 1C48  
                                 l2906 1C16                                   l2818 2220  
                                 l2738 1834                                   l2930 1D74  
                                 l3714 1AE4                                   l3706 1AAC  
                                 l3490 2556                                   l3378 0A86  
                                 l3298 077C                                   l3466 13FA  
                                 l3458 13B2                                   l3650 1D48  
                                 l3642 1D30                                   l3634 1CD8  
                                 l4098 0F34                                   l2684 278E  
                                 l2860 2410                                   l3660 2668  
                                 l3628 277C                                   l2852 251A  
                                 l2844 24E2                                   l2676 1512  
                                 l2668 149C                                   l2764 1A26  
                                 l2756 19D2                                   l2692 1B42  
                                 l2780 22A2                                   l2772 2264  
                                 l2924 1C9A                                   l2916 1C5C  
                                 l2908 1C1E                                   l2940 1DB0  
                                 l2932 1D76                                   l3716 1AF6  
                                 l3708 1AB0                                   l3492 255A  
                                 l3900 162A                                   l3468 140A  
                                 l3652 1D4A                                   l3644 1D32  
                                 l3636 1CFE                                   l2686 2792  
                                 l2862 241A                                   l3670 2674  
                                 l3662 266C                                   l2846 24EA  
                                 l2838 27A4                                   l2678 1556  
                                 l2766 1A32                                   l2758 19EE  
                                 l2694 1B7A                                   l2782 22A4  
                                 l2774 2278                                   l2918 1C5E  
                                 l2950 1E82                                   l2790 216C  
                                 l2870 1DDE                                   l2942 1DC8  
                                 l2934 1D8A                                   l2926 1D58  
                                 l3718 1B0C                                   l3494 2564  
                                 l3910 1652                                   l3902 1634  
                                 l3654 1D54                                   l3646 1D3C  
                                 l3638 1D02                                   l2688 27AE  
                                 l2864 2424                                   l2856 23F6  
                                 l3672 2676                                   l3664 266E  
                                 l3656 265C                                   l2848 24F2  
                                 l2768 1A3E                                   l2696 1B86  
                                 l2776 227A                                   l2960 1ED4  
                                 l2952 1E96                                   l2944 1E64  
                                 l2792 2180                                   l2784 214E  
                                 l2880 1E24                                   l2872 1DE6  
                                 l2936 1D9E                                   l2928 1D60  
                                 l3496 2574                                   l3912 165E  
                                 l3904 163E                                   l3648 1D3E  
                                 l2866 242E                                   l2858 2400  
                                 l3674 267A                                   l3666 2670  
                                 l3658 2662                                   l3690 26D0  
                                 l2698 1B9E                                   l2778 228E  
                                 l2890 1FFE                                   l2970 1F1C  
                                 l2962 1EEA                                   l2954 1EAA  
                                 l2946 1E6C                                   l2794 2194  
                                 l2786 2156                                   l2882 1E26  
                                 l2874 1DFA                                   l2938 1DA0  
                                 l3498 257E                                   l3914 166E  
                                 l3930 0320                                   l3922 005C  
                                 l2868 2438                                   l3676 267C  
                                 l3668 2672                                   l3692 26DA  
                                 l2892 2012                                   l2980 1F70  
                                 l2972 1F30                                   l2964 1EF2  
                                 l2956 1EAC                                   l2948 1E80  
                                 l2796 2196                                   l2788 216A  
                                 l2884 1E36                                   l2876 1DFC  
                                 l3916 167E                                   l3940 0370  
                                 l3932 0330                                   l3924 0062  
                                 l3678 267E                                   l3694 26E4  
                                 l2894 2014                                   l2990 1FB6  
                                 l2982 1F78                                   l2798 21A8  
                                 l2974 1F32                                   l2966 1F06  
                                 l2958 1EBC                                   l2886 1E4E  
                                 l2878 1E10                                   l3918 168E  
                                 l3950 03B8                                   l3942 0380  
                                 l3934 0340                                   l3926 0148  
                                 l3696 258A                                   l3688 26C8  
                                 l2896 2028                                   l2888 1FF6  
                                 l2992 1FB8                                   l2984 1F8C  
                                 l2976 1F42                                   l2968 1F08  
                                 l3880 15AE                                   l3952 03C8  
                                 l3960 0400                                   l3944 0390  
                                 l3936 0350                                   l3928 0234  
                                 l2898 203C                                   l2994 1FC8  
                                 l2986 1F8E                                   l2978 1F5A  
                                 l3698 1A58                                   l3890 1600  
                                 l3970 0450                                   l3962 0410  
                                 l3954 03D8                                   l3938 0360  
                                 l3946 0398                                   l2996 1FE0  
                                 l2988 1FA2                                   l3892 1604  
                                 l3884 15C2                                   l3980 0498  
                                 l3972 0460                                   l3964 0420  
                                 l3956 03E8                                   l3948 03A8  
                                 l2998 2684                                   l3894 1612  
                                 l3886 15EE                                   l3878 1598  
                                 l3990 04E0                                   l3982 04A8  
                                 l3966 0430                                   l3974 0468  
                                 l3958 03F8                                   l3888 15F0  
                                 l3992 04F0                                   l3984 04B8  
                                 l3976 0478                                   l3968 0440  
                                 l3994 0500                                   l3986 04C8  
                                 l3978 0488                                   l3996 0510  
                                 l3988 04D0                                   l3998 0520  
                                 u2000 1812                                   u2001 180E  
                                 u2100 2200                                   u2101 21FC  
                                 u2030 19C6                                   u2110 2230  
                                 u2031 19C2                                   u2111 222C  
                                 u2040 19EE                                   u2200 1C6E  
                                 u2120 225A                                   u3000 140A  
                                 u2041 19EA                                   u2201 1C6A  
                                 u2121 2256                                   u3001 1406  
                                 u2130 2506                                   u2050 228A  
                                 u2210 1D86                                   u3010 1418  
                                 u2131 24FE                                   u2051 2286  
                                 u2211 1D82                                   u3011 1414  
                                 u2060 22B4                                   u2220 1DB0  
                                 u2300 1724                                   u2061 22B0  
                                 u2221 1DAC                                   u2301 1720  
                                 u2230 1E92                                   u2070 217C  
                                 u2150 1E0C                                   u2310 10A2  
                                 u2231 1E8E                                   u2071 2178  
                                 u2151 1E08                                   u2311 109E  
                                 u2240 1EBC                                   u2080 21A6  
                                 u2160 1E36                                   u2400 1210  
                                 u2320 10C4                                   u4000 04C8  
                         _BAUD4CONbits 000EE9                                   u2241 1EB8  
                                 u2081 21A2                                   u2161 1E32  
                                 u2401 120C                                   u2321 10C0  
                                 u4001 04C4                                   u2170 2024  
                                 u2090 21D6                                   u2250 1F18  
                                 u2410 123E                                   u2330 10F2  
                                 u4010 04E0                                   u2171 2020  
                                 u2091 21D2                                   u2251 1F14  
                                 u2411 123A                                   u2331 10EE  
                                 u4011 04DC                                   u2148 2508  
                                 u2180 204E                                   u2260 1F42  
                                 u2420 1260                                   u2340 1114  
                                 u2500 0BC4                                   u4100 0578  
                                 u4020 04F0                                   u2181 204A  
                                 u2261 1F3E                                   u2421 125C  
                                 u2341 1110                                   u2501 0BC0  
                                 u4101 0574                                   u4021 04EC  
                                 u2190 1C44                                   u2270 1F9E  
                                 u2350 1142                                   u2510 0C3A  
                                 u2430 0ABC                                   u4110 0588  
                                 u4030 0500                                   u2191 1C40  
                                 u2271 1F9A                                   u2351 113E  
                                 u2511 0C36                                   u2431 0AB8  
                                 u4111 0584                                   u4031 04FC  
                                 u2280 1FC8                                   u2360 1164  
                                 u2600 0D54                                   u2520 0C5C  
                                 u2440 0ACE                                   u4200 0628  
                                 u4120 0598                                   u4040 0510  
                                 u2281 1FC4                                   u2361 1160  
                                 u2601 0D50                                   u2521 0C58  
                                 u2441 0ACA                                   u4201 0624  
                                 u4121 0594                                   u4041 050C  
                                 u2370 1196                                   u2290 16FC  
                                 u2610 0D68                                   u2530 0C86  
                                 u2450 0ADE                                   u4210 0638  
                                 u4130 05B0                                   u4050 0520  
                                 _T2PR 000FBC                                   u2371 1192  
                                 u2291 16F8                                   u2611 0D64  
                                 u2531 0C82                                   u2451 0ADA  
                                 u4211 0634                                   u4131 05AC  
                                 u4051 051C                                   u1900 20D0  
                                 u2380 11C2                                   u2620 0D82  
                                 u2540 0CAA                                   u2460 0B22  
                                 u2700 0706                                   u4220 0648  
                                 u4140 05C0                                   u4060 0530  
                                 u4300 1058                                   u1901 20CC  
                                 u2381 11BE                                   u2621 0D7E  
                                 u2541 0CA6                                   u2461 0B1E  
                                 u2701 0702                                   u4221 0644  
                                 u4141 05BC                                   u4061 052C  
                                 u4301 1054                                   u1910 25F6  
                                 u2390 11EE                                   u2630 0DCA  
                                 u2550 0CC0                                   u2470 0B34  
                                 u2710 0716                                   u4230 0658  
                                 u4150 05D0                                   u4070 0548  
                                 u1911 25F2                                   u2391 11EA  
                                 u2631 0DC6                                   u2551 0CBC  
                                 u2471 0B30                                   u2711 0712  
                                 u4231 0654                                   u4151 05CC  
                                 u4071 0544                                   u1920 260C  
                                 u3520 1AC6                                   u2640 0DFA  
                                 u2560 0CDE                                   u2480 0B44  
                                 u2800 09BA                                   u2720 074C  
                                 u4240 0668                                   u4160 05E0  
                                 u4080 0558                                   u1921 2608  
                                 u3521 1AC2                                   u2641 0DF6  
                                 u2561 0CDA                                   u2481 0B40  
                                 u2801 09B6                                   u2721 0748  
                                 u4241 0664                                   u4161 05DC  
                                 u4081 0554                                   u1930 1448  
                                 u3530 1AF6                                   u2650 0E28  
                                 u2570 0CFE                                   u2490 0B84  
                                 u2810 09D4                                   u2730 075C  
                                 u4170 05F0                                   u4090 0568  
                                 u4250 0F34                                   u1931 1444  
                                 u3531 1AF2                                   u2651 0E24  
                                 u2571 0CFA                                   u2491 0B80  
                                 u2811 09D0                                   u2731 0758  
                                 u4171 05EC                                   u4091 0564  
                                 u4251 0F30                                   u1940 1512  
                                 u3540 1B40                                   u2580 0D10  
                                 u2820 0A1C                                   u2740 08D6  
                                 u2660 0692                                   u3700 15E4  
                                 u4180 0600                                   u4260 0F44  
                                 u1941 150E                                   u3541 1B3C  
                                 u2581 0D0C                                   u2821 0A18  
                                 u2661 068E                                   u4181 05FC  
                                 u4317 0FB8                                   u4261 0F40  
                                 u1950 1B7A                                   u2590 0D3E  
                                 u2830 0A4A                                   u2750 0930  
                                 u2670 06A4                                   u3710 1612  
                                 u4190 0618                                   u4270 0F56  
                                 u1951 1B76                                   u4407 1FD2  
                                 u2591 0D3A                                   u2831 0A46  
                                 u2751 092C                                   u2671 06A0  
                                 u3711 160E                                   u4191 0614  
                                 u4327 1064                                   u4271 0F52  
                                 u1880 2096                                   u1960 1B9E  
                                 u2840 0A84                                   u2760 0950  
                                 u2680 06B4                                   u3720 1626  
                                 u2920 128A                                   u3800 0370  
                                 u4280 0FAC                                   u1881 2092  
                                 u1961 1B9A                                   u4417 2058  
                                 u4337 256A                                   u2841 0A80  
                                 u2761 094C                                   u2745 08CC  
                                 u2681 06B0                                   u3721 1622  
                                 u3705 15D8                                   u2921 1286  
                                 u3801 036C                                   u4281 0FA8  
                                 u1890 20B4                                   u1970 18D8  
                                 u2770 0962                                   u2690 06F4  
                                 u3730 164E                                   u2930 1298  
                                 u3810 0380                                   u4290 1002  
                                 u1891 20B0                                   u1971 18D4  
                                 u4427 1C78                                   u4347 177E  
                                 u2771 095E                                   u2691 06F0  
                                 u3731 164A                                   u2931 1294  
                                 u3811 037C                                   u4291 0FFE  
                                 u1980 1900                                   u2780 0990  
                                 u3740 166E                                   u2940 12F4  
                                 u3900 0420                                   u3820 0390  
                                 u1981 18FC                                   u4437 1CA4  
                                 u4357 1DBA                                   u2781 098C  
                                 u3741 166A                                   u2941 12F0  
                                 u3901 041C                                   u3821 038C  
                                 u1990 17EA                                   u2790 09A6  
                                 u3750 167E                                   u2950 134A  
                                 u3910 0430                                   u3830 03A8  
                                 u4447 195A                                   u1991 17E6  
                                 u4367 1E40                                   u2791 09A2  
                                 u3751 167A                                   u2951 1346  
                                 u3911 042C                                   u3831 03A4  
                                 u2960 1394                                   u3920 0440  
                                 u3840 03B8                                   u3760 0330  
                                 u4457 1C0C                                   u4377 1EC6  
                                 u2961 1390                                   u3921 043C  
                                 u3841 03B4                                   u3761 032C  
                                 u3690 15AE                                   u2970 13B2  
                                 u3930 0450                                   u3850 03C8  
                                 u3770 0340                                   u4467 1A48  
                                 u4387 1F4C                                   u3691 15AA  
                                 u2971 13AE                                   u3931 044C  
                                 u3851 03C4                                   u3771 033C  
                                 u2980 13C2                                   u3940 0460  
                                 u3860 03D8                                   u3780 0350  
                                 u4477 2406                                   u4397 186C  
                                 u2981 13BE                                   u3941 045C  
                                 u3861 03D4                                   u3781 034C  
                                 u2990 13D0                                   u3950 0478  
                                 u3870 03E8                                   u3790 0360  
                                 u2991 13CC                                   u3951 0474  
                                 u3871 03E4                                   u3791 035C  
                                 i2l24 2746                                   u3960 0488  
                                 u3880 03F8                                   u3961 0484  
                                 u3881 03F4                                   u3970 0498  
                                 u3890 0410                                   u3971 0494  
                                 u3891 040C                                   u3980 04A8  
                                 u3981 04A4                                   u3990 04B8  
                                 u3991 04B4                                   i2l90 260E  
                                 i2l93 2634                                   i2l96 27D4  
    Return_Anti_Moves@anti_moves_array 000B                                   _main 0E3C  
                  __end_of_AppendMoves 26A6                     _YellowInstructions 1D58  
                                 fsr2h 000FDA                                   indf2 000FDF  
                                 fsr2l 000FD9                                   btemp 0057  
                                 _stop 1B42         ??i2_init_colorclick_interrupts 0005  
                    main@initial_color 00B9                                   prodh 000FF4  
                                 prodl 000FF3                                   start 0058  
                 ?i2_color_writetoaddr 0003                        ___fldiv@new_exp 0028  
               __end_of_color_read_Red 2306                        __end_of_HighISR 2728  
                         ___param_bank 000000                            _turnLeft135 2202  
                  ?_YellowInstructions 0027                            _turnRight90 214E  
                     __end_of_LED_init 278C                          ___fltol@sign1 004D  
                           _AppendTime 258A                                  ?_main 0001  
                      __end_of___fldiv 0E3C                        __end_of___flmul 0AA2  
                      __end_of___fltol 16A0                                  ?_stop 001C  
                      __end_of___lwdiv 20F0                                  i2l102 27CA  
                                i1l327 0048                                  i2l105 27A2  
                                i2l316 2494                                  i2l319 277A  
                                i2l335 2724                                  _TMR0H 000FD4  
                                _TMR0L 000FD3             __end_of_I2C_2_Master_Start 27C2  
                 ??_YellowInstructions 002B             __end_of_I2C_2_Master_Write 2798  
                     _PinkInstructions 1E64                     _int_threshold_high 00D3  
                                main@b 00B6               __end_of_BlueInstructions 1CC8  
                                tablat 000FF5                                  plusw2 000FDB  
                                ttemp5 0058                                  ttemp6 005B  
                                ttemp7 005F                                  status 000FD8  
                                wtemp8 0058                    detect_color@tempval 00A2  
                ??i2_color_writetoaddr 0004                __end_of_color_read_Blue 23F6  
                _I2C_2_Master_RepStart 27A4                   fullSpeedBackwards@mL 001C  
                 fullSpeedBackwards@mR 001E                        ?_color_read_Red 000D  
                      __initialization 2496                           __end_of_main 1090  
                 __end_of_detect_color 0678                           __end_of_stop 1C16  
                _LightBlueInstructions 1F70                      ??_RedInstructions 002B  
  __end_of_interrupts_clear_colorclick 2762         ?i2_interrupts_clear_colorclick 0001  
          _interrupts_clear_colorclick 2748                                 ??_main 00B4  
                               ??_stop 0020                          __activetblptr 000000  
                         _turnRight135 21A8                      _Return_Anti_Moves 26A6  
                          _AppendMoves 2682                           ?_setMotorPWM 0016  
                               _CCPR1H 000FAA                                 _CCPR2H 000FA6  
                               _CCPR3H 000F25                                 _CCPR4H 000F21  
                   ?_Return_Anti_Moves 0009                                 _RC0PPS 000E62  
                               _RC4REG 000EE3                                 _RE2PPS 000E74  
                               _RD5PPS 000E6F                                 _RC7PPS 000E69  
                               _RE4PPS 000E76                                 _RD6PPS 000E70  
                               i2l3000 272A                                 i1l3740 0036  
                               i1l3742 0044                                 i1l3738 0026  
                               i2l2830 27C2                                 i2l2832 27C6  
                               i2l3480 2460                                 i2l2746 260E  
                               i2l2826 27CC                                 i2l2834 279A  
                               i2l3482 246A                                 i2l3722 2762  
                               i2l2748 261E                                 i2l2828 27D0  
                               i2l2836 279E                                 i2l3484 2474  
                               i2l3476 2446                                 i2l3486 247E  
                               i2l3478 2450                                 i2l3750 2720  
                               i2l3488 2488                                 i2l3744 2708  
                               i2l3746 2718                                 _RG6PPS 000E88  
                               i2l3748 271C                              ??_HighISR 0006  
             __end_of_color_click_init 258A                                 _RX4PPS 000E15  
                               _TX4REG 000EE4                       __end_of___xxtofl 142C  
                  ??_Return_Anti_Moves 000D                                 _LowISR 0018  
                        ??_Timer0_init 0009                           _CCPTMRS0bits 000FAD  
          AppendMoves@anti_moves_array 000B                  Return_Time@time_array 000B  
                Return_Time@time_index 0009                                 ___wmul 2636  
                            ??___fldiv 001F                              ??___flmul 0038  
                            ??___fltol 009E                              ??___lwdiv 0013  
                               clear_0 24B4                                 clear_1 24C0  
                               clear_2 24CC                                 isa$std 000001  
                          ?_AppendTime 0009                          ??_Return_Time 000D  
            __end_of_Return_Anti_Moves 26C8                             _WhiteLight 27D6  
                               tblptrh 000FF7                                 tblptrl 000FF6  
                               tblptru 000FF8                                 stop@mL 001C  
                               stop@mR 001E                      ??_initDCmotorsPWM 000B  
           i2color_writetoaddr@address 0004                       __end_of_turnLeft 196A  
                         ___xxtofl@arg 0013                           ___xxtofl@exp 0012  
                         ___xxtofl@val 0009                          ??_Update_RGBC 0016  
                           __accesstop 0060                __end_of__initialization 24D2  
             __end_of_color_read_Clear 23A6               __end_of_color_read_Green 2356  
               ?_I2C_2_Master_RepStart 0001                          ___rparam_used 000001  
                            ?_LED_init 0001                             ___fltol@f1 0049  
                     ?_color_read_Blue 000D                      _GreenInstructions 1FF6  
                      _Interrupts_init 265C                         __pcstackCOMRAM 0001  
               ?_LightBlueInstructions 0027                           __pidataBANK0 27DE  
                   ?_GreenInstructions 0027                         AppendTime@temp 0009  
                    detect_color@color 00B0                    __end_of_Timer0_init 26E8  
                          MoveBuggy@mL 0030                            MoveBuggy@mR 0032  
                  OrangeInstructions@a 002D                    ??_GreenInstructions 002B  
              MoveBuggy@color_detected 002E           ??_init_colorclick_interrupts 000D  
                  __end_of_Return_Time 2556                      __end_of_MoveBuggy 1278  
                           __pbssBANK0 0060                             __pbssBANK1 0100  
            __end_of_GreenInstructions 207C                             ??_LED_init 0009  
                              ?_LowISR 0001                      _color_writetoaddr 26E8  
                         _T2CLKCONbits 000FBF                           ?_turnLeft135 0022  
                  __end_of_Update_RGBC 214E                     ?_color_writetoaddr 000B  
                              ?___wmul 0009               __end_of_PinkInstructions 1EEA  
                         ?_turnRight90 0022                    ??_color_writetoaddr 000C  
                              _INT1PPS 000DF1                              ?___xxtofl 0009  
                          ?_WhiteLight 0001                                _SP4BRGH 000EE6  
                              _SP4BRGL 000EE5                                _SSP2ADD 000ED6  
                              _SSP2BUF 000ED5                             _color_flag 0055  
                         _detect_color 005C                __end_of_Interrupts_init 2682  
                    ?_BlueInstructions 0027                 color_writetoaddr@value 000B  
                     ??_color_read_Red 000F                                _HighISR 0008  
            __end_of_color_writetoaddr 2708                     WhiteInstructions@a 003D  
                   WhiteInstructions@c 003A                     ??_BlueInstructions 002B  
                      _RedInstructions 1DDE                     _I2C_2_Master_Start 27B8  
                  i2_I2C_2_Master_Idle 260E                     _I2C_2_Master_Write 278C  
                              __Hparam 0000                    i2_I2C_2_Master_Stop 27C2  
                              __Lparam 0000                      color_read_Red@tmp 0012  
                          _Timer0_init 26C8                    GreenInstructions@mL 0027  
                  GreenInstructions@mR 0029             __end_of_fullSpeedBackwards 1A58  
                              ___fldiv 0AA2                                ___flmul 0678  
                              ___fltol 1598                    ?_I2C_2_Master_Start 0001  
                         turnLeft135@a 0026                                ___lwdiv 207C  
                  ?_I2C_2_Master_Write 0001                           turnLeft90@mL 0022  
                         turnLeft90@mR 0024                                __pcinit 2496  
                              __ramtop 0E00                              ?_turnLeft 001C  
                              __ptext0 0E3C                                __ptext1 1CC8  
                              __ptext2 005C                                __ptext3 1278  
                              __ptext4 1598                                __ptext5 0678  
                              __ptext6 0AA2                                __ptext7 2556  
                              __ptext8 25BC                                __ptext9 27D6  
                 ?i2_I2C_2_Master_Idle 0001   __end_ofi2_init_colorclick_interrupts 2496  
         i2_init_colorclick_interrupts 2446                              _T2CONbits 000FBD  
                          _Return_Time 251E                             ??___xxtofl 000D  
                 ?i2_I2C_2_Master_Stop 0001                              _T2HLTbits 000FBE  
                        _RxBufWriteCnt 0054                           ?_AppendMoves 0009  
                              _tmr_ovf 0074                   ??_I2C_2_Master_Start 000A  
                 ??_I2C_2_Master_Write 000A                         __pintcode_body 2708  
                 end_of_initialization 24D2            __end_ofi2_color_writetoaddr 2748  
         Return_Anti_Moves@moves_index 0009                      RedInstructions@mL 0027  
                   main@color_detected 00B8                      RedInstructions@mR 0029  
                              int_func 2708                            _Update_RGBC 20F0  
                    ?_color_click_init 0001                           turnRight90@a 0026  
           __end_of_OrangeInstructions 1F70                     ??_color_click_init 000D  
                              postdec2 000FDD                                postinc0 000FEE  
                              postinc2 000FDE                             _time_array 013C  
                           _time_index 009D                        _initDCmotorsPWM 1CC8  
                           ??_turnLeft 0020                           ??_AppendTime 000F  
                   setMotorPWM@negDuty 001B                  ??i2_I2C_2_Master_Idle 0001  
                    __end_of_turnRight 187C                  ??i2_I2C_2_Master_Stop 0002  
                        ___xxtofl@sign 0011                    YellowInstructions@a 002D  
                            _TRISAbits 000F81                     setMotorPWM@posDuty 001A  
                            _TRISBbits 000F82                              _TRISCbits 000F83  
                            _TRISDbits 000F84     __end_of_init_colorclick_interrupts 2446  
        ?i2_init_colorclick_interrupts 0001             _init_colorclick_interrupts 23F6  
                            _TRISEbits 000F85                              _TRISFbits 000F86  
                            _TRISGbits 000F87                              _TRISHbits 000F88  
                          ___fldiv@grs 002A                            ___fldiv@rem 0023  
                   PinkInstructions@mL 0027                     PinkInstructions@mR 0029  
                     fullSpeedAhead@mL 001C                       fullSpeedAhead@mR 001E  
              __end_of_RedInstructions 1E64               color_writetoaddr@address 000C  
              ??_I2C_2_Master_RepStart 000A                       ?_Interrupts_init 0001  
                          ___flmul@grs 003D                            _CCP1CONbits 000FAB  
                    ?_color_read_Clear 000D                           _EUSART4RXbuf 0060  
                         _EUSART4TXbuf 0100                            _CCP2CONbits 000FA7  
                    ?_color_read_Green 000D                            _CCP3CONbits 000F26  
                          _CCP4CONbits 000F22                     __end_of_AppendTime 25BC  
              ??_LightBlueInstructions 002B                             main@motorL 00C1  
                           main@motorR 00CA                     ??_color_read_Clear 000F  
                   ??_color_read_Green 000F                             _turnLeft90 225C  
                       __end_of_LowISR 0058                 AppendMoves@moves_index 0009  
                       _fullSpeedAhead 16A0                         __end_of___wmul 265C  
                      AppendMoves@temp 000E                     detect_color@dist_B 00B3  
                   detect_color@dist_G 00B2                     detect_color@dist_R 00B1  
                    _int_threshold_low 004F                    color_read_Clear@tmp 0012  
                  start_initialization 2496                          _TxBufWriteCnt 0052  
                 OrangeInstructions@mL 0027                   OrangeInstructions@mR 0029  
                Return_Anti_Moves@temp 000E                              _MoveBuggy 1090  
                  color_read_Green@tmp 0012                               ??_LowISR 0006  
              __end_of_initDCmotorsPWM 1D58                 __end_of_fullSpeedAhead 178E  
                             ??___wmul 000D                            __pdataBANK0 00D3  
        i2I2C_2_Master_Write@data_byte 0002                      ?_PinkInstructions 0027  
                   Update_RGBC@tempval 0014                     ??_PinkInstructions 002B  
         __end_ofi2_I2C_2_Master_Start 27D6           __end_ofi2_I2C_2_Master_Write 27A4  
                            ___fldiv@a 001B                              ___fldiv@b 0017  
                            ___flmul@a 0034                              ___flmul@b 0030  
                          __pbssCOMRAM 004F                           ??_WhiteLight 0009  
                        __pcstackBANK0 009E                   AppendTime@time_array 000D  
                 AppendTime@time_index 000B                       ?_RedInstructions 0027  
                             ?_HighISR 0001                             ?_MoveBuggy 002E  
                     ___lwdiv@dividend 000F                           ?_Timer0_init 0001  
                          ?_turnLeft90 0022                        ?_fullSpeedAhead 001C  
                   BlueInstructions@mL 0027                     BlueInstructions@mR 0029  
                            __pintcode 0008                     __end_of_WhiteLight 27DE  
                             ?___fldiv 0017                               ?___flmul 0030  
                             ?___fltol 0049                               ?___lwdiv 000F  
                          __pintcodelo 0018           ?_interrupts_clear_colorclick 0001  
                 I2C_2_Master_Read@ack 000B                      _WhiteInstructions 1A58  
                 I2C_2_Master_Read@tmp 000C                          ?_turnRight135 0022  
                         ?_Return_Time 0009                      _I2C_2_Master_Idle 25E6  
                   _fullSpeedBackwards 196A                      _I2C_2_Master_Init 25BC  
                    _I2C_2_Master_Read 24DC                     ?_WhiteInstructions 0034  
                    _I2C_2_Master_Stop 27AE                           _RxBufReadCnt 0053  
                   GreenInstructions@a 002D                     ?_I2C_2_Master_Idle 0001  
                   ?_I2C_2_Master_Init 0001                     ?_I2C_2_Master_Read 0001  
                        ??_setMotorPWM 0018                     ?_I2C_2_Master_Stop 0001  
                     ___lwdiv@quotient 0013                            turnLeft90@a 0026  
             initDCmotorsPWM@PWMperiod 0009                LightBlueInstructions@mL 0027  
              LightBlueInstructions@mR 0029                    ?_fullSpeedBackwards 001C  
                  ??_WhiteInstructions 0038                    ??_I2C_2_Master_Idle 0009  
                  ??_I2C_2_Master_Init 0009                           ?_Update_RGBC 0014  
                  ??_I2C_2_Master_Read 000A                         ___wmul@product 000D  
                             _LATAbits 000F79                    ??_I2C_2_Master_Stop 000A  
                             _LATCbits 000F7B                               _LATDbits 000F7C  
                             _LATEbits 000F7D                               _LATFbits 000F7E  
                      Return_Time@temp 0010                               _LATGbits 000F7F  
                             _LATHbits 000F80                               _IPR0bits 000E1F  
                             _PIE0bits 000E29                               _LED_init 277C  
                     RedInstructions@a 002D                               _PIE4bits 000E2D  
                             i2u201_40 261E                               i2u201_41 261A  
                             i2u202_40 2634                               i2u202_41 2630  
                             i1u357_20 0036                               i1u357_21 0032  
                          turnRight@mL 001C                            turnRight@mR 001E  
                             _PIR0bits 000E33                               i2u358_40 2718  
                             i2u358_41 2714                               _PIR4bits 000E37  
                             i2u448_47 2456                       ?_initDCmotorsPWM 0009  
                             _SSP2CON2 000EDA                               _SSP2STAT 000ED8  
                 ??_fullSpeedBackwards 0020              __end_of_WhiteInstructions 1B42  
                   _OrangeInstructions 1EEA                      PinkInstructions@a 002D  
            __end_of_I2C_2_Master_Idle 260E              __end_of_I2C_2_Master_Init 25E6  
            __end_of_I2C_2_Master_Read 251E                      ___wmul@multiplier 0009  
                       ??_turnRight135 0026              __end_of_I2C_2_Master_Stop 27B8  
                         setMotorPWM@m 0016            I2C_2_Master_Write@data_byte 000A  
        ??_interrupts_clear_colorclick 000E             __end_of_YellowInstructions 1DDE  
                    ??_color_read_Blue 000F                    ?_OrangeInstructions 0027  
                         _TxBufReadCnt 0051            ?_init_colorclick_interrupts 0001  
             i2color_writetoaddr@value 0003                              _turnRight 178E  
                  WhiteInstructions@mL 0034                    WhiteInstructions@mR 0036  
        __end_of_I2C_2_Master_RepStart 27AE                     color_read_Blue@tmp 0012  
                  __end_of_setMotorPWM 1598                            ??_MoveBuggy 0034  
                 i2_I2C_2_Master_Start 27CC                   i2_I2C_2_Master_Write 2798  
                             __Hrparam 0000                   ??_OrangeInstructions 002B  
                             __Lrparam 0000          __end_of_LightBlueInstructions 1FF6  
          __end_ofi2_I2C_2_Master_Idle 2636            __end_ofi2_I2C_2_Master_Stop 27CC  
                       turnRight135@mL 0022                         turnRight135@mR 0024  
                        turnLeft135@mL 0022                          turnLeft135@mR 0024  
                           _ANSELBbits 000E9A                             _ANSELDbits 000EA7  
                             ___xxtofl 1278                             _T0CON0bits 000FD5  
                           _T0CON1bits 000FD6                        ___lwdiv@divisor 0011  
                    BlueInstructions@a 002D                        ___lwdiv@counter 0015  
                           ?_turnRight 001C                               __ptext10 1A58  
                             __ptext11 16A0                               __ptext20 21A8  
                             __ptext12 251E                               __ptext21 178E  
                             __ptext13 26A6                               __ptext30 142C  
                             __ptext22 1F70                               __ptext14 1090  
                             __ptext31 2636                               __ptext23 2202  
                             __ptext15 1D58                               __ptext40 24DC  
                             __ptext32 207C                               __ptext24 1FF6  
                             __ptext16 1DDE                               __ptext41 26C8  
                             __ptext33 2682                               __ptext25 1C16  
                             __ptext17 214E                               __ptext50 25E6  
                             __ptext42 277C                               __ptext34 20F0  
                             __ptext26 225C                               __ptext18 1E64  
                             __ptext51 258A                               __ptext43 265C  
                             __ptext35 22B6                               __ptext27 187C  
                             __ptext19 1EEA                               __ptext60 260E  
                             __ptext44 2748                               __ptext36 2306  
                             __ptext28 1B42                               __ptext45 23F6  
                             __ptext37 2356                               __ptext29 196A  
                             __ptext54 2762                               __ptext46 26E8  
                             __ptext38 23A6                               __ptext55 2446  
                             __ptext47 278C                               __ptext39 27A4  
                             __ptext56 2728                               __ptext48 27AE  
                             __ptext57 2798                               __ptext49 27B8  
                             __ptext58 27C2                               __ptext59 27CC  
                         _SSP2CON1bits 000ED9                           _SSP2CON2bits 000EDA  
      ??i2_interrupts_clear_colorclick 0006                 LightBlueInstructions@a 002D  
                           turnLeft@mL 001C                             turnLeft@mR 001E  
                ?i2_I2C_2_Master_Start 0001                  ?i2_I2C_2_Master_Write 0001  
                        ??_turnLeft135 0026                               isa$xinst 000000  
                           _RC4STAbits 000EE7                               int$flags 0057  
                        ??_turnRight90 0026                       _BlueInstructions 1C16  
                             _turnLeft 187C                             _INTCONbits 000FF2  
                          _setMotorPWM 142C                          ?_detect_color 00A2  
                        turnRight135@a 0026                               intlevel1 0000  
                             intlevel2 0000                          turnRight90@mL 0022  
                        turnRight90@mR 0024                       ??_fullSpeedAhead 0020  
                 __end_of_turnRight135 2202                           ??_turnLeft90 0026  
                          _moves_index 0056                       _color_click_init 2556  
                  __end_of_turnLeft135 225C                             _SSP2DATPPS 000E1D  
                           _SSP2CLKPPS 000E1C                    __end_of_turnRight90 21A8  
                        ??_AppendMoves 000D                         ??_detect_color 00A4  
                          ??_turnRight 0020                     __end_of_turnLeft90 22B6  
                           _TX4STAbits 000EE8                 ??i2_I2C_2_Master_Start 0002  
               ??i2_I2C_2_Master_Write 0002                   YellowInstructions@mL 0027  
                 YellowInstructions@mR 0029  __end_ofi2_interrupts_clear_colorclick 277C  
        i2_interrupts_clear_colorclick 2762  
