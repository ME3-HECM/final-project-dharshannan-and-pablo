

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Mar 07 17:03:45 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1
    59                           	psect	text47,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    61                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    62                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	text54,global,reloc=2,class=CODE,delta=1
    68                           	psect	text55,global,reloc=2,class=CODE,delta=1
    69                           	psect	text56,global,reloc=2,class=CODE,delta=1
    70                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    71                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    72                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    73                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    74                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    75   000000                     
    76                           ; Generated 06/04/2022 GMT
    77                           ; 
    78                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    79                           ; All rights reserved.
    80                           ; 
    81                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    82                           ; 
    83                           ; Redistribution and use in source and binary forms, with or without modification, are
    84                           ; permitted provided that the following conditions are met:
    85                           ; 
    86                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    87                           ;        conditions and the following disclaimer.
    88                           ; 
    89                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    90                           ;        of conditions and the following disclaimer in the documentation and/or other
    91                           ;        materials provided with the distribution. Publication is not required when
    92                           ;        this file is used in an embedded application.
    93                           ; 
    94                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    95                           ;        software without specific prior written permission.
    96                           ; 
    97                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    98                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    99                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   100                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   101                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   102                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   103                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   104                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   105                           ; 
   106                           ; 
   107                           ; Code-generator required, PIC18F67K40 Definitions
   108                           ; 
   109                           ; SFR Addresses
   110   000000                     
   111                           	psect	idataCOMRAM
   112   002484                     __pidataCOMRAM:
   113                           	callstack 0
   114                           
   115                           ;initializer for _int_threshold_high
   116   002484  09C4               	dw	2500
   117   000000                     _T0CON0bits	set	4053
   118   000000                     _T0CON1bits	set	4054
   119   000000                     _TX4REG	set	3812
   120   000000                     _RC4STAbits	set	3815
   121   000000                     _SP4BRGH	set	3814
   122   000000                     _TRISBbits	set	3970
   123   000000                     _TRISCbits	set	3971
   124   000000                     _TRISEbits	set	3973
   125   000000                     _TRISFbits	set	3974
   126   000000                     _TRISGbits	set	3975
   127   000000                     _SSP2CON2bits	set	3802
   128   000000                     _INT1PPS	set	3569
   129   000000                     _SSP2CLKPPS	set	3612
   130   000000                     _SSP2DATPPS	set	3613
   131   000000                     _ANSELDbits	set	3751
   132   000000                     _SSP2ADD	set	3798
   133   000000                     _SSP2CON1bits	set	3801
   134   000000                     _RC4REG	set	3811
   135   000000                     _SP4BRGL	set	3813
   136   000000                     _TX4STAbits	set	3816
   137   000000                     _BAUD4CONbits	set	3817
   138   000000                     _LATAbits	set	3961
   139   000000                     _LATGbits	set	3967
   140   000000                     _LATHbits	set	3968
   141   000000                     _TRISAbits	set	3969
   142   000000                     _SSP2CON2	set	3802
   143   000000                     _TRISDbits	set	3972
   144   000000                     _CCPR4H	set	3873
   145   000000                     _CCPR3H	set	3877
   146   000000                     _SSP2STAT	set	3800
   147   000000                     _SSP2BUF	set	3797
   148   000000                     _IPR0bits	set	3615
   149   000000                     _PIE0bits	set	3625
   150   000000                     _RC7PPS	set	3689
   151   000000                     _RD5PPS	set	3695
   152   000000                     _RE2PPS	set	3700
   153   000000                     _RD6PPS	set	3696
   154   000000                     _T2PR	set	4028
   155   000000                     _T2CONbits	set	4029
   156   000000                     _TRISHbits	set	3976
   157   000000                     _CCPR2H	set	4006
   158   000000                     _CCPR1H	set	4010
   159   000000                     _LATCbits	set	3963
   160   000000                     _LATEbits	set	3965
   161   000000                     _LATFbits	set	3966
   162   000000                     _RE4PPS	set	3702
   163   000000                     _RG6PPS	set	3720
   164   000000                     _ANSELBbits	set	3738
   165   000000                     _TMR0L	set	4051
   166   000000                     _TMR0H	set	4052
   167   000000                     _INTCONbits	set	4082
   168   000000                     _T2CLKCONbits	set	4031
   169   000000                     _T2HLTbits	set	4030
   170   000000                     _CCP1CONbits	set	4011
   171   000000                     _CCPTMRS0bits	set	4013
   172   000000                     _CCP2CONbits	set	4007
   173   000000                     _CCP3CONbits	set	3878
   174   000000                     _CCP4CONbits	set	3874
   175   000000                     _RX4PPS	set	3605
   176   000000                     _PIE4bits	set	3629
   177   000000                     _PIR0bits	set	3635
   178   000000                     _PIR4bits	set	3639
   179   000000                     _RC0PPS	set	3682
   180                           
   181                           ; #config settings
   182                           
   183                           	psect	cinit
   184   00223C                     __pcinit:
   185                           	callstack 0
   186   00223C                     start_initialization:
   187                           	callstack 0
   188   00223C                     __initialization:
   189                           	callstack 0
   190                           
   191                           ; Initialize objects allocated to COMRAM (2 bytes)
   192                           ; load TBLPTR registers with __pidataCOMRAM
   193   00223C  0E84               	movlw	low __pidataCOMRAM
   194   00223E  6EF6               	movwf	tblptrl,c
   195   002240  0E24               	movlw	high __pidataCOMRAM
   196   002242  6EF7               	movwf	tblptrh,c
   197   002244  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   198   002246  6EF8               	movwf	tblptru,c
   199   002248  0009               	tblrd		*+	;fetch initializer
   200   00224A  CFF5 F055          	movff	tablat,__pdataCOMRAM
   201   00224E  0009               	tblrd		*+	;fetch initializer
   202   002250  CFF5 F056          	movff	tablat,__pdataCOMRAM+1
   203                           
   204                           ; Clear objects allocated to BANK0 (82 bytes)
   205   002254  EE00  F060         	lfsr	0,__pbssBANK0
   206   002258  0E52               	movlw	82
   207   00225A                     clear_0:
   208   00225A  6AEE               	clrf	postinc0,c
   209   00225C  06E8               	decf	wreg,f,c
   210   00225E  E1FD               	bnz	clear_0
   211                           
   212                           ; Clear objects allocated to COMRAM (6 bytes)
   213   002260  6A54               	clrf	(__pbssCOMRAM+5)& (0+255),c
   214   002262  6A53               	clrf	(__pbssCOMRAM+4)& (0+255),c
   215   002264  6A52               	clrf	(__pbssCOMRAM+3)& (0+255),c
   216   002266  6A51               	clrf	(__pbssCOMRAM+2)& (0+255),c
   217   002268  6A50               	clrf	(__pbssCOMRAM+1)& (0+255),c
   218   00226A  6A4F               	clrf	__pbssCOMRAM& (0+255),c
   219   00226C                     end_of_initialization:
   220                           	callstack 0
   221   00226C                     __end_of__initialization:
   222                           	callstack 0
   223   00226C  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   224   00226E  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   225   002270  0100               	movlb	0
   226   002272  EFBB  F008         	goto	_main	;jump to C main() function
   227                           
   228                           	psect	bssCOMRAM
   229   00004F                     __pbssCOMRAM:
   230                           	callstack 0
   231   00004F                     _int_threshold_low:
   232                           	callstack 0
   233   00004F                     	ds	2
   234   000051                     _TxBufReadCnt:
   235                           	callstack 0
   236   000051                     	ds	1
   237   000052                     _TxBufWriteCnt:
   238                           	callstack 0
   239   000052                     	ds	1
   240   000053                     _RxBufReadCnt:
   241                           	callstack 0
   242   000053                     	ds	1
   243   000054                     _RxBufWriteCnt:
   244                           	callstack 0
   245   000054                     	ds	1
   246                           
   247                           	psect	dataCOMRAM
   248   000055                     __pdataCOMRAM:
   249                           	callstack 0
   250   000055                     _int_threshold_high:
   251                           	callstack 0
   252   000055                     	ds	2
   253                           
   254                           	psect	bssBANK0
   255   000060                     __pbssBANK0:
   256                           	callstack 0
   257   000060                     _EUSART4TXbuf:
   258                           	callstack 0
   259   000060                     	ds	60
   260   00009C                     _EUSART4RXbuf:
   261                           	callstack 0
   262   00009C                     	ds	20
   263   0000B0                     _tmr_ovf:
   264                           	callstack 0
   265   0000B0                     	ds	1
   266   0000B1                     _color_flag:
   267                           	callstack 0
   268   0000B1                     	ds	1
   269                           
   270                           	psect	cstackBANK0
   271   0000B2                     __pcstackBANK0:
   272                           	callstack 0
   273   0000B2                     ??___fltol:
   274                           
   275                           ; 1 bytes @ 0x0
   276   0000B2                     	ds	4
   277   0000B6                     detect_color@tempval:
   278                           	callstack 0
   279                           
   280                           ; 2 bytes @ 0x4
   281   0000B6                     	ds	2
   282   0000B8                     ??_detect_color:
   283                           
   284                           ; 1 bytes @ 0x6
   285   0000B8                     	ds	12
   286   0000C4                     detect_color@color:
   287                           	callstack 0
   288                           
   289                           ; 1 bytes @ 0x12
   290   0000C4                     	ds	1
   291   0000C5                     detect_color@dist_R:
   292                           	callstack 0
   293                           
   294                           ; 1 bytes @ 0x13
   295   0000C5                     	ds	1
   296   0000C6                     detect_color@dist_G:
   297                           	callstack 0
   298                           
   299                           ; 1 bytes @ 0x14
   300   0000C6                     	ds	1
   301   0000C7                     detect_color@dist_B:
   302                           	callstack 0
   303                           
   304                           ; 1 bytes @ 0x15
   305   0000C7                     	ds	1
   306   0000C8                     ??_main:
   307                           
   308                           ; 1 bytes @ 0x16
   309   0000C8                     	ds	2
   310   0000CA                     main@b:
   311                           	callstack 0
   312                           
   313                           ; 1 bytes @ 0x18
   314   0000CA                     	ds	1
   315   0000CB                     main@color_detected:
   316                           	callstack 0
   317                           
   318                           ; 1 bytes @ 0x19
   319   0000CB                     	ds	1
   320   0000CC                     main@initial_color:
   321                           	callstack 0
   322                           
   323                           ; 8 bytes @ 0x1A
   324   0000CC                     	ds	8
   325   0000D4                     main@motorL:
   326                           	callstack 0
   327                           
   328                           ; 9 bytes @ 0x22
   329   0000D4                     	ds	9
   330   0000DD                     main@motorR:
   331                           	callstack 0
   332                           
   333                           ; 9 bytes @ 0x2B
   334   0000DD                     	ds	9
   335                           
   336                           	psect	cstackCOMRAM
   337   000001                     __pcstackCOMRAM:
   338                           	callstack 0
   339   000001                     ??i2_I2C_2_Master_Idle:
   340   000001                     
   341                           ; 1 bytes @ 0x0
   342   000001                     	ds	1
   343   000002                     i2I2C_2_Master_Write@data_byte:
   344                           	callstack 0
   345                           
   346                           ; 1 bytes @ 0x1
   347   000002                     	ds	1
   348   000003                     i2color_writetoaddr@value:
   349                           	callstack 0
   350                           
   351                           ; 1 bytes @ 0x2
   352   000003                     	ds	1
   353   000004                     i2color_writetoaddr@address:
   354                           	callstack 0
   355                           
   356                           ; 1 bytes @ 0x3
   357   000004                     	ds	1
   358   000005                     ??i2_init_colorclick_interrupts:
   359                           
   360                           ; 1 bytes @ 0x4
   361   000005                     	ds	1
   362   000006                     ??_LowISR:
   363   000006                     
   364                           ; 1 bytes @ 0x5
   365   000006                     	ds	3
   366   000009                     ??_I2C_2_Master_Idle:
   367   000009                     ?___wmul:
   368                           	callstack 0
   369   000009                     ?___xxtofl:
   370                           	callstack 0
   371   000009                     initDCmotorsPWM@PWMperiod:
   372                           	callstack 0
   373   000009                     ___wmul@multiplier:
   374                           	callstack 0
   375   000009                     ___xxtofl@val:
   376                           	callstack 0
   377                           
   378                           ; 4 bytes @ 0x8
   379   000009                     	ds	1
   380   00000A                     ??_I2C_2_Master_Read:
   381   00000A                     I2C_2_Master_Write@data_byte:
   382                           	callstack 0
   383                           
   384                           ; 1 bytes @ 0x9
   385   00000A                     	ds	1
   386   00000B                     color_writetoaddr@value:
   387                           	callstack 0
   388   00000B                     I2C_2_Master_Read@ack:
   389                           	callstack 0
   390   00000B                     ___wmul@multiplicand:
   391                           	callstack 0
   392                           
   393                           ; 2 bytes @ 0xA
   394   00000B                     	ds	1
   395   00000C                     color_writetoaddr@address:
   396                           	callstack 0
   397   00000C                     I2C_2_Master_Read@tmp:
   398                           	callstack 0
   399                           
   400                           ; 1 bytes @ 0xB
   401   00000C                     	ds	1
   402   00000D                     ??_color_click_init:
   403   00000D                     ??_init_colorclick_interrupts:
   404   00000D                     ??___xxtofl:
   405   00000D                     ?_color_read_Red:
   406                           	callstack 0
   407   00000D                     ?_color_read_Green:
   408                           	callstack 0
   409   00000D                     ?_color_read_Blue:
   410                           	callstack 0
   411   00000D                     ?_color_read_Clear:
   412                           	callstack 0
   413   00000D                     ___wmul@product:
   414                           	callstack 0
   415                           
   416                           ; 2 bytes @ 0xC
   417   00000D                     	ds	1
   418   00000E                     
   419                           ; 1 bytes @ 0xD
   420   00000E                     	ds	1
   421   00000F                     ??_color_read_Red:
   422   00000F                     ??_color_read_Green:
   423   00000F                     ??_color_read_Blue:
   424   00000F                     ??_color_read_Clear:
   425   00000F                     ?___lwdiv:
   426                           	callstack 0
   427   00000F                     ___lwdiv@dividend:
   428                           	callstack 0
   429                           
   430                           ; 2 bytes @ 0xE
   431   00000F                     	ds	2
   432   000011                     ___xxtofl@sign:
   433                           	callstack 0
   434   000011                     ___lwdiv@divisor:
   435                           	callstack 0
   436                           
   437                           ; 2 bytes @ 0x10
   438   000011                     	ds	1
   439   000012                     ___xxtofl@exp:
   440                           	callstack 0
   441   000012                     color_read_Red@tmp:
   442                           	callstack 0
   443   000012                     color_read_Green@tmp:
   444                           	callstack 0
   445   000012                     color_read_Blue@tmp:
   446                           	callstack 0
   447   000012                     color_read_Clear@tmp:
   448                           	callstack 0
   449                           
   450                           ; 2 bytes @ 0x11
   451   000012                     	ds	1
   452   000013                     ___lwdiv@quotient:
   453                           	callstack 0
   454   000013                     ___xxtofl@arg:
   455                           	callstack 0
   456                           
   457                           ; 4 bytes @ 0x12
   458   000013                     	ds	1
   459   000014                     Update_RGBC@tempval:
   460                           	callstack 0
   461                           
   462                           ; 2 bytes @ 0x13
   463   000014                     	ds	1
   464   000015                     ___lwdiv@counter:
   465                           	callstack 0
   466                           
   467                           ; 1 bytes @ 0x14
   468   000015                     	ds	1
   469   000016                     setMotorPWM@m:
   470                           	callstack 0
   471                           
   472                           ; 2 bytes @ 0x15
   473   000016                     	ds	1
   474   000017                     ?___fldiv:
   475                           	callstack 0
   476   000017                     ___fldiv@b:
   477                           	callstack 0
   478                           
   479                           ; 4 bytes @ 0x16
   480   000017                     	ds	1
   481   000018                     ??_setMotorPWM:
   482                           
   483                           ; 1 bytes @ 0x17
   484   000018                     	ds	2
   485   00001A                     setMotorPWM@posDuty:
   486                           	callstack 0
   487                           
   488                           ; 1 bytes @ 0x19
   489   00001A                     	ds	1
   490   00001B                     setMotorPWM@negDuty:
   491                           	callstack 0
   492   00001B                     ___fldiv@a:
   493                           	callstack 0
   494                           
   495                           ; 4 bytes @ 0x1A
   496   00001B                     	ds	1
   497   00001C                     stop@mL:
   498                           	callstack 0
   499   00001C                     turnLeft@mL:
   500                           	callstack 0
   501   00001C                     turnRight@mL:
   502                           	callstack 0
   503   00001C                     fullSpeedAhead@mL:
   504                           	callstack 0
   505   00001C                     fullSpeedBackwards@mL:
   506                           	callstack 0
   507                           
   508                           ; 2 bytes @ 0x1B
   509   00001C                     	ds	2
   510   00001E                     stop@mR:
   511                           	callstack 0
   512   00001E                     turnLeft@mR:
   513                           	callstack 0
   514   00001E                     turnRight@mR:
   515                           	callstack 0
   516   00001E                     fullSpeedAhead@mR:
   517                           	callstack 0
   518   00001E                     fullSpeedBackwards@mR:
   519                           	callstack 0
   520                           
   521                           ; 2 bytes @ 0x1D
   522   00001E                     	ds	1
   523   00001F                     ??___fldiv:
   524                           
   525                           ; 1 bytes @ 0x1E
   526   00001F                     	ds	1
   527   000020                     ??_stop:
   528   000020                     ??_turnLeft:
   529   000020                     ??_turnRight:
   530   000020                     ??_fullSpeedAhead:
   531   000020                     ??_fullSpeedBackwards:
   532                           
   533                           ; 1 bytes @ 0x1F
   534   000020                     	ds	2
   535   000022                     turnLeft90@mL:
   536                           	callstack 0
   537   000022                     turnRight90@mL:
   538                           	callstack 0
   539   000022                     turn180@mL:
   540                           	callstack 0
   541   000022                     turnRight135@mL:
   542                           	callstack 0
   543   000022                     turnLeft135@mL:
   544                           	callstack 0
   545                           
   546                           ; 2 bytes @ 0x21
   547   000022                     	ds	1
   548   000023                     ___fldiv@rem:
   549                           	callstack 0
   550                           
   551                           ; 4 bytes @ 0x22
   552   000023                     	ds	1
   553   000024                     turnLeft90@mR:
   554                           	callstack 0
   555   000024                     turnRight90@mR:
   556                           	callstack 0
   557   000024                     turn180@mR:
   558                           	callstack 0
   559   000024                     turnRight135@mR:
   560                           	callstack 0
   561   000024                     turnLeft135@mR:
   562                           	callstack 0
   563                           
   564                           ; 2 bytes @ 0x23
   565   000024                     	ds	2
   566   000026                     turnLeft90@a:
   567                           	callstack 0
   568   000026                     turnRight90@a:
   569                           	callstack 0
   570   000026                     turn180@a:
   571                           	callstack 0
   572   000026                     turnRight135@a:
   573                           	callstack 0
   574   000026                     turnLeft135@a:
   575                           	callstack 0
   576                           
   577                           ; 1 bytes @ 0x25
   578   000026                     	ds	1
   579   000027                     ___fldiv@sign:
   580                           	callstack 0
   581   000027                     RedInstructions@mL:
   582                           	callstack 0
   583   000027                     GreenInstructions@mL:
   584                           	callstack 0
   585   000027                     BlueInstructions@mL:
   586                           	callstack 0
   587   000027                     YellowInstructions@mL:
   588                           	callstack 0
   589   000027                     PinkInstructions@mL:
   590                           	callstack 0
   591   000027                     OrangeInstructions@mL:
   592                           	callstack 0
   593   000027                     LightBlueInstructions@mL:
   594                           	callstack 0
   595                           
   596                           ; 2 bytes @ 0x26
   597   000027                     	ds	1
   598   000028                     ___fldiv@new_exp:
   599                           	callstack 0
   600                           
   601                           ; 2 bytes @ 0x27
   602   000028                     	ds	1
   603   000029                     RedInstructions@mR:
   604                           	callstack 0
   605   000029                     GreenInstructions@mR:
   606                           	callstack 0
   607   000029                     BlueInstructions@mR:
   608                           	callstack 0
   609   000029                     YellowInstructions@mR:
   610                           	callstack 0
   611   000029                     PinkInstructions@mR:
   612                           	callstack 0
   613   000029                     OrangeInstructions@mR:
   614                           	callstack 0
   615   000029                     LightBlueInstructions@mR:
   616                           	callstack 0
   617                           
   618                           ; 2 bytes @ 0x28
   619   000029                     	ds	1
   620   00002A                     ___fldiv@grs:
   621                           	callstack 0
   622                           
   623                           ; 4 bytes @ 0x29
   624   00002A                     	ds	1
   625   00002B                     ??_RedInstructions:
   626   00002B                     ??_GreenInstructions:
   627   00002B                     ??_BlueInstructions:
   628   00002B                     ??_YellowInstructions:
   629   00002B                     ??_PinkInstructions:
   630   00002B                     ??_OrangeInstructions:
   631   00002B                     ??_LightBlueInstructions:
   632                           
   633                           ; 1 bytes @ 0x2A
   634   00002B                     	ds	2
   635   00002D                     RedInstructions@a:
   636                           	callstack 0
   637   00002D                     GreenInstructions@a:
   638                           	callstack 0
   639   00002D                     BlueInstructions@a:
   640                           	callstack 0
   641   00002D                     YellowInstructions@a:
   642                           	callstack 0
   643   00002D                     PinkInstructions@a:
   644                           	callstack 0
   645   00002D                     OrangeInstructions@a:
   646                           	callstack 0
   647   00002D                     LightBlueInstructions@a:
   648                           	callstack 0
   649                           
   650                           ; 1 bytes @ 0x2C
   651   00002D                     	ds	1
   652   00002E                     ___fldiv@bexp:
   653                           	callstack 0
   654   00002E                     MoveBuggy@mL:
   655                           	callstack 0
   656                           
   657                           ; 2 bytes @ 0x2D
   658   00002E                     	ds	1
   659   00002F                     ___fldiv@aexp:
   660                           	callstack 0
   661                           
   662                           ; 1 bytes @ 0x2E
   663   00002F                     	ds	1
   664   000030                     ?___flmul:
   665                           	callstack 0
   666   000030                     MoveBuggy@mR:
   667                           	callstack 0
   668   000030                     ___flmul@b:
   669                           	callstack 0
   670                           
   671                           ; 4 bytes @ 0x2F
   672   000030                     	ds	2
   673   000032                     MoveBuggy@color_detected:
   674                           	callstack 0
   675                           
   676                           ; 1 bytes @ 0x31
   677   000032                     	ds	2
   678   000034                     ___flmul@a:
   679                           	callstack 0
   680                           
   681                           ; 4 bytes @ 0x33
   682   000034                     	ds	4
   683   000038                     ??___flmul:
   684                           
   685                           ; 1 bytes @ 0x37
   686   000038                     	ds	4
   687   00003C                     ___flmul@sign:
   688                           	callstack 0
   689                           
   690                           ; 1 bytes @ 0x3B
   691   00003C                     	ds	1
   692   00003D                     ___flmul@grs:
   693                           	callstack 0
   694                           
   695                           ; 4 bytes @ 0x3C
   696   00003D                     	ds	4
   697   000041                     ___flmul@aexp:
   698                           	callstack 0
   699                           
   700                           ; 1 bytes @ 0x40
   701   000041                     	ds	1
   702   000042                     ___flmul@bexp:
   703                           	callstack 0
   704                           
   705                           ; 1 bytes @ 0x41
   706   000042                     	ds	1
   707   000043                     ___flmul@prod:
   708                           	callstack 0
   709                           
   710                           ; 4 bytes @ 0x42
   711   000043                     	ds	4
   712   000047                     ___flmul@temp:
   713                           	callstack 0
   714                           
   715                           ; 2 bytes @ 0x46
   716   000047                     	ds	2
   717   000049                     ?___fltol:
   718                           	callstack 0
   719   000049                     ___fltol@f1:
   720                           	callstack 0
   721                           
   722                           ; 4 bytes @ 0x48
   723   000049                     	ds	4
   724   00004D                     ___fltol@sign1:
   725                           	callstack 0
   726                           
   727                           ; 1 bytes @ 0x4C
   728   00004D                     	ds	1
   729   00004E                     ___fltol@exp1:
   730                           	callstack 0
   731                           
   732                           ; 1 bytes @ 0x4D
   733   00004E                     	ds	1
   734                           
   735 ;;
   736 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   737 ;;
   738 ;; *************** function _main *****************
   739 ;; Defined at:
   740 ;;		line 21 in file "main_motor.c"
   741 ;; Parameters:    Size  Location     Type
   742 ;;		None
   743 ;; Auto vars:     Size  Location     Type
   744 ;;  b               1   24[BANK0 ] unsigned char 
   745 ;;  motorR          9   43[BANK0 ] struct DC_motor
   746 ;;  motorL          9   34[BANK0 ] struct DC_motor
   747 ;;  initial_colo    8   26[BANK0 ] struct RGB_val
   748 ;;  color_detect    1   25[BANK0 ] unsigned char 
   749 ;; Return value:  Size  Location     Type
   750 ;;                  1    wreg      void 
   751 ;; Registers used:
   752 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   753 ;; Tracked objects:
   754 ;;		On entry : 0/0
   755 ;;		On exit  : 0/0
   756 ;;		Unchanged: 0/0
   757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   759 ;;      Locals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   760 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   761 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   762 ;;Total ram usage:       30 bytes
   763 ;; Hardware stack levels required when called: 13
   764 ;; This function calls:
   765 ;;		_Interrupts_init
   766 ;;		_LED_init
   767 ;;		_MoveBuggy
   768 ;;		_Timer0_init
   769 ;;		_Update_RGBC
   770 ;;		_WhiteLight
   771 ;;		_color_click_init
   772 ;;		_detect_color
   773 ;;		_fullSpeedAhead
   774 ;;		_initDCmotorsPWM
   775 ;;		_stop
   776 ;; This function is called by:
   777 ;;		Startup code after reset
   778 ;; This function uses a non-reentrant model
   779 ;;
   780                           
   781                           	psect	text0
   782   001176                     __ptext0:
   783                           	callstack 0
   784   001176                     _main:
   785                           	callstack 18
   786   001176                     
   787                           ;main_motor.c: 24:     RGB_val initial_color;;main_motor.c: 25:     initial_color.R = 0;
   788   001176  0E00               	movlw	0
   789   001178  0100               	movlb	0	; () banked
   790   00117A  6FCD               	movwf	(main@initial_color+1)& (0+255),b
   791   00117C  0E00               	movlw	0
   792   00117E  6FCC               	movwf	main@initial_color& (0+255),b
   793                           
   794                           ;main_motor.c: 26:     initial_color.G = 0;
   795   001180  0E00               	movlw	0
   796   001182  6FCF               	movwf	(main@initial_color+3)& (0+255),b
   797   001184  0E00               	movlw	0
   798   001186  6FCE               	movwf	(main@initial_color+2)& (0+255),b
   799                           
   800                           ;main_motor.c: 27:     initial_color.B = 0;
   801   001188  0E00               	movlw	0
   802   00118A  6FD1               	movwf	(main@initial_color+5)& (0+255),b
   803   00118C  0E00               	movlw	0
   804   00118E  6FD0               	movwf	(main@initial_color+4)& (0+255),b
   805                           
   806                           ;main_motor.c: 28:     initial_color.C = 0;
   807   001190  0E00               	movlw	0
   808   001192  6FD3               	movwf	(main@initial_color+7)& (0+255),b
   809   001194  0E00               	movlw	0
   810   001196  6FD2               	movwf	(main@initial_color+6)& (0+255),b
   811   001198                     
   812                           ; BSR set to: 0
   813                           ;main_motor.c: 30:     LED_init();
   814   001198  EC13  F012         	call	_LED_init	;wreg free
   815   00119C                     
   816                           ;main_motor.c: 31:     color_click_init();
   817   00119C  EC3B  F011         	call	_color_click_init	;wreg free
   818   0011A0                     
   819                           ;main_motor.c: 32:     Interrupts_init();
   820   0011A0  ECA5  F011         	call	_Interrupts_init	;wreg free
   821                           
   822                           ;main_motor.c: 34:     Timer0_init();
   823   0011A4  ECC9  F011         	call	_Timer0_init	;wreg free
   824                           
   825                           ;main_motor.c: 37:     initDCmotorsPWM(99);
   826   0011A8  0E00               	movlw	0
   827   0011AA  6E0A               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   828   0011AC  0E63               	movlw	99
   829   0011AE  6E09               	movwf	initDCmotorsPWM@PWMperiod^0,c
   830   0011B0  ECA8  F00C         	call	_initDCmotorsPWM	;wreg free
   831   0011B4                     
   832                           ;main_motor.c: 39:     struct DC_motor motorL, motorR;;main_motor.c: 41:     motorL.powe
      +                          r=0;
   833   0011B4  0E00               	movlw	0
   834   0011B6  0100               	movlb	0	; () banked
   835   0011B8  6FD4               	movwf	main@motorL& (0+255),b
   836   0011BA                     
   837                           ; BSR set to: 0
   838                           ;main_motor.c: 42:     motorL.direction=1;
   839   0011BA  0E01               	movlw	1
   840   0011BC  6FD5               	movwf	(main@motorL+1)& (0+255),b
   841   0011BE                     
   842                           ; BSR set to: 0
   843                           ;main_motor.c: 43:     motorL.brakemode=1;
   844   0011BE  0E01               	movlw	1
   845   0011C0  6FD6               	movwf	(main@motorL+2)& (0+255),b
   846   0011C2                     
   847                           ; BSR set to: 0
   848                           ;main_motor.c: 44:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
   849   0011C2  0EAA               	movlw	170
   850   0011C4  6FD9               	movwf	(main@motorL+5)& (0+255),b
   851   0011C6  0E0F               	movlw	15
   852   0011C8  6FDA               	movwf	(main@motorL+6)& (0+255),b
   853   0011CA                     
   854                           ; BSR set to: 0
   855                           ;main_motor.c: 45:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
   856   0011CA  0EA6               	movlw	166
   857   0011CC  6FDB               	movwf	(main@motorL+7)& (0+255),b
   858   0011CE  0E0F               	movlw	15
   859   0011D0  6FDC               	movwf	(main@motorL+8)& (0+255),b
   860   0011D2                     
   861                           ; BSR set to: 0
   862                           ;main_motor.c: 46:     motorL.PWMperiod= T2PR;
   863   0011D2  CFBC F0D7          	movff	4028,main@motorL+3	;volatile
   864   0011D6  6BD8               	clrf	(main@motorL+4)& (0+255),b
   865   0011D8                     
   866                           ; BSR set to: 0
   867                           ;main_motor.c: 48:     motorR.power=0;
   868   0011D8  0E00               	movlw	0
   869   0011DA  6FDD               	movwf	main@motorR& (0+255),b
   870   0011DC                     
   871                           ; BSR set to: 0
   872                           ;main_motor.c: 49:     motorR.direction=1;
   873   0011DC  0E01               	movlw	1
   874   0011DE  6FDE               	movwf	(main@motorR+1)& (0+255),b
   875   0011E0                     
   876                           ; BSR set to: 0
   877                           ;main_motor.c: 50:     motorR.brakemode=1;
   878   0011E0  0E01               	movlw	1
   879   0011E2  6FDF               	movwf	(main@motorR+2)& (0+255),b
   880   0011E4                     
   881                           ; BSR set to: 0
   882                           ;main_motor.c: 51:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
   883   0011E4  0E25               	movlw	37
   884   0011E6  6FE2               	movwf	(main@motorR+5)& (0+255),b
   885   0011E8  0E0F               	movlw	15
   886   0011EA  6FE3               	movwf	(main@motorR+6)& (0+255),b
   887   0011EC                     
   888                           ; BSR set to: 0
   889                           ;main_motor.c: 52:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
   890   0011EC  0E21               	movlw	33
   891   0011EE  6FE4               	movwf	(main@motorR+7)& (0+255),b
   892   0011F0  0E0F               	movlw	15
   893   0011F2  6FE5               	movwf	(main@motorR+8)& (0+255),b
   894   0011F4                     
   895                           ; BSR set to: 0
   896                           ;main_motor.c: 53:     motorR.PWMperiod= T2PR;
   897   0011F4  CFBC F0E0          	movff	4028,main@motorR+3	;volatile
   898   0011F8  6BE1               	clrf	(main@motorR+4)& (0+255),b
   899   0011FA                     l3827:
   900   0011FA                     l483:
   901                           
   902                           ;main_motor.c: 59:         WhiteLight();
   903   0011FA  EC3E  F012         	call	_WhiteLight	;wreg free
   904   0011FE                     
   905                           ;main_motor.c: 60:         Update_RGBC(&initial_color);
   906   0011FE  0ECC               	movlw	low main@initial_color
   907   001200  6E14               	movwf	Update_RGBC@tempval^0,c
   908   001202  0E00               	movlw	high main@initial_color
   909   001204  6E15               	movwf	(Update_RGBC@tempval+1)^0,c
   910   001206  ECFF  F00E         	call	_Update_RGBC	;wreg free
   911   00120A                     
   912                           ;main_motor.c: 62:         color_detected = detect_color(&initial_color);
   913   00120A  0ECC               	movlw	low main@initial_color
   914   00120C  0100               	movlb	0	; () banked
   915   00120E  6FB6               	movwf	detect_color@tempval& (0+255),b
   916   001210  0E00               	movlw	high main@initial_color
   917   001212  6FB7               	movwf	(detect_color@tempval+1)& (0+255),b
   918   001214  EC2E  F000         	call	_detect_color	;wreg free
   919   001218  0100               	movlb	0	; () banked
   920   00121A  6FCB               	movwf	main@color_detected& (0+255),b
   921   00121C                     
   922                           ; BSR set to: 0
   923                           ;main_motor.c: 65:         unsigned char b = 0;
   924   00121C  0E00               	movlw	0
   925   00121E  6FCA               	movwf	main@b& (0+255),b
   926   001220                     
   927                           ; BSR set to: 0
   928                           ;main_motor.c: 66:         if(color_detected == 0){
   929   001220  51CB               	movf	main@color_detected& (0+255),w,b
   930   001222  A4D8               	btfss	status,2,c
   931   001224  EF16  F009         	goto	u4031
   932   001228  EF18  F009         	goto	u4030
   933   00122C                     u4031:
   934   00122C  EF26  F009         	goto	l3841
   935   001230                     u4030:
   936   001230                     
   937                           ; BSR set to: 0
   938                           ;main_motor.c: 67:             fullSpeedAhead(&motorL,&motorR);
   939   001230  0ED4               	movlw	low main@motorL
   940   001232  6E1C               	movwf	fullSpeedAhead@mL^0,c
   941   001234  0E00               	movlw	high main@motorL
   942   001236  6E1D               	movwf	(fullSpeedAhead@mL+1)^0,c
   943   001238  0EDD               	movlw	low main@motorR
   944   00123A  6E1E               	movwf	fullSpeedAhead@mR^0,c
   945   00123C  0E00               	movlw	high main@motorR
   946   00123E  6E1F               	movwf	(fullSpeedAhead@mR+1)^0,c
   947   001240  EC68  F00B         	call	_fullSpeedAhead	;wreg free
   948   001244                     
   949                           ;main_motor.c: 68:             b++;
   950   001244  0100               	movlb	0	; () banked
   951   001246  2BCA               	incf	main@b& (0+255),f,b
   952                           
   953                           ;main_motor.c: 69:         }
   954   001248  EFFD  F008         	goto	l483
   955   00124C                     l3841:
   956                           
   957                           ; BSR set to: 0
   958   00124C  51CB               	movf	main@color_detected& (0+255),w,b
   959   00124E  B4D8               	btfsc	status,2,c
   960   001250  EF2C  F009         	goto	u4041
   961   001254  EF2E  F009         	goto	u4040
   962   001258                     u4041:
   963   001258  EFFD  F008         	goto	l483
   964   00125C                     u4040:
   965   00125C                     
   966                           ; BSR set to: 0
   967                           ;main_motor.c: 72:             LATHbits.LATH3 = 1;
   968   00125C  8680               	bsf	128,3,c	;volatile
   969                           
   970                           ;main_motor.c: 73:             while(b>0){
   971   00125E  EF3D  F009         	goto	l3849
   972   001262                     l3845:
   973                           
   974                           ; BSR set to: 0
   975                           ;main_motor.c: 74:                 stop(&motorL,&motorR);
   976   001262  0ED4               	movlw	low main@motorL
   977   001264  6E1C               	movwf	stop@mL^0,c
   978   001266  0E00               	movlw	high main@motorL
   979   001268  6E1D               	movwf	(stop@mL+1)^0,c
   980   00126A  0EDD               	movlw	low main@motorR
   981   00126C  6E1E               	movwf	stop@mR^0,c
   982   00126E  0E00               	movlw	high main@motorR
   983   001270  6E1F               	movwf	(stop@mR+1)^0,c
   984   001272  EC3E  F00C         	call	_stop	;wreg free
   985   001276                     
   986                           ;main_motor.c: 75:                 b--;
   987   001276  0100               	movlb	0	; () banked
   988   001278  07CA               	decf	main@b& (0+255),f,b
   989   00127A                     l3849:
   990                           
   991                           ; BSR set to: 0
   992                           ;main_motor.c: 73:             while(b>0){
   993   00127A  51CA               	movf	main@b& (0+255),w,b
   994   00127C  A4D8               	btfss	status,2,c
   995   00127E  EF43  F009         	goto	u4051
   996   001282  EF45  F009         	goto	u4050
   997   001286                     u4051:
   998   001286  EF31  F009         	goto	l3845
   999   00128A                     u4050:
  1000   00128A                     
  1001                           ; BSR set to: 0
  1002                           ;main_motor.c: 77:             _delay((unsigned long)((500)*(64000000/4000.0)));
  1003   00128A  0E29               	movlw	41
  1004   00128C  0100               	movlb	0	; () banked
  1005   00128E  6FC9               	movwf	(??_main+1)& (0+255),b
  1006   001290  0E96               	movlw	150
  1007   001292  6FC8               	movwf	??_main& (0+255),b
  1008   001294  0E7F               	movlw	127
  1009   001296                     u4067:
  1010   001296  2EE8               	decfsz	wreg,f,c
  1011   001298  D7FE               	bra	u4067
  1012   00129A  2FC8               	decfsz	??_main& (0+255),f,b
  1013   00129C  D7FC               	bra	u4067
  1014   00129E  2FC9               	decfsz	(??_main+1)& (0+255),f,b
  1015   0012A0  D7FA               	bra	u4067
  1016   0012A2                     
  1017                           ;main_motor.c: 78:             LATHbits.LATH3 = 0;
  1018   0012A2  9680               	bcf	128,3,c	;volatile
  1019   0012A4                     
  1020                           ;main_motor.c: 80:             MoveBuggy(color_detected,&motorL,&motorR);
  1021   0012A4  0ED4               	movlw	low main@motorL
  1022   0012A6  6E2E               	movwf	MoveBuggy@mL^0,c
  1023   0012A8  0E00               	movlw	high main@motorL
  1024   0012AA  6E2F               	movwf	(MoveBuggy@mL+1)^0,c
  1025   0012AC  0EDD               	movlw	low main@motorR
  1026   0012AE  6E30               	movwf	MoveBuggy@mR^0,c
  1027   0012B0  0E00               	movlw	high main@motorR
  1028   0012B2  6E31               	movwf	(MoveBuggy@mR+1)^0,c
  1029   0012B4  0100               	movlb	0	; () banked
  1030   0012B6  51CB               	movf	main@color_detected& (0+255),w,b
  1031   0012B8  EC62  F009         	call	_MoveBuggy
  1032   0012BC  EFFD  F008         	goto	l3827
  1033   0012C0  EF2C  F000         	goto	start
  1034   0012C4                     __end_of_main:
  1035                           	callstack 0
  1036                           
  1037 ;; *************** function _initDCmotorsPWM *****************
  1038 ;; Defined at:
  1039 ;;		line 5 in file "dc_motor.c"
  1040 ;; Parameters:    Size  Location     Type
  1041 ;;  PWMperiod       2    8[COMRAM] unsigned int 
  1042 ;; Auto vars:     Size  Location     Type
  1043 ;;		None
  1044 ;; Return value:  Size  Location     Type
  1045 ;;                  1    wreg      void 
  1046 ;; Registers used:
  1047 ;;		wreg, status,2
  1048 ;; Tracked objects:
  1049 ;;		On entry : 0/0
  1050 ;;		On exit  : 0/0
  1051 ;;		Unchanged: 0/0
  1052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1053 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1056 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1057 ;;Total ram usage:        2 bytes
  1058 ;; Hardware stack levels used: 1
  1059 ;; Hardware stack levels required when called: 7
  1060 ;; This function calls:
  1061 ;;		Nothing
  1062 ;; This function is called by:
  1063 ;;		_main
  1064 ;; This function uses a non-reentrant model
  1065 ;;
  1066                           
  1067                           	psect	text1
  1068   001950                     __ptext1:
  1069                           	callstack 0
  1070   001950                     _initDCmotorsPWM:
  1071                           	callstack 23
  1072   001950                     
  1073                           ;dc_motor.c: 7:     LATEbits.LATE2 = 0;
  1074   001950  947D               	bcf	125,2,c	;volatile
  1075                           
  1076                           ;dc_motor.c: 8:     TRISEbits.TRISE2 = 0;
  1077   001952  9485               	bcf	133,2,c	;volatile
  1078                           
  1079                           ;dc_motor.c: 9:     LATEbits.LATE4 = 0;
  1080   001954  987D               	bcf	125,4,c	;volatile
  1081                           
  1082                           ;dc_motor.c: 10:     TRISEbits.TRISE4 = 0;
  1083   001956  9885               	bcf	133,4,c	;volatile
  1084                           
  1085                           ;dc_motor.c: 11:     LATCbits.LATC7 = 0;
  1086   001958  9E7B               	bcf	123,7,c	;volatile
  1087                           
  1088                           ;dc_motor.c: 12:     TRISCbits.TRISC7 = 0;
  1089   00195A  9E83               	bcf	131,7,c	;volatile
  1090                           
  1091                           ;dc_motor.c: 13:     LATGbits.LATG6 = 0;
  1092   00195C  9C7F               	bcf	127,6,c	;volatile
  1093                           
  1094                           ;dc_motor.c: 14:     TRISGbits.TRISG6 = 0;
  1095   00195E  9C87               	bcf	135,6,c	;volatile
  1096   001960                     
  1097                           ;dc_motor.c: 17:     RE2PPS=0x05;
  1098   001960  0E05               	movlw	5
  1099   001962  010E               	movlb	14	; () banked
  1100   001964  6F74               	movwf	116,b	;volatile
  1101                           
  1102                           ;dc_motor.c: 18:     RE4PPS=0x06;
  1103   001966  0E06               	movlw	6
  1104   001968  6F76               	movwf	118,b	;volatile
  1105                           
  1106                           ;dc_motor.c: 19:     RC7PPS=0x07;
  1107   00196A  0E07               	movlw	7
  1108   00196C  6F69               	movwf	105,b	;volatile
  1109                           
  1110                           ;dc_motor.c: 20:     RG6PPS=0x08;
  1111   00196E  0E08               	movlw	8
  1112   001970  6F88               	movwf	136,b	;volatile
  1113                           
  1114                           ;dc_motor.c: 23:     T2CONbits.CKPS=0b100;
  1115   001972  50BD               	movf	189,w,c	;volatile
  1116   001974  0B8F               	andlw	-113
  1117   001976  0940               	iorlw	64
  1118   001978  6EBD               	movwf	189,c	;volatile
  1119                           
  1120                           ;dc_motor.c: 24:     T2HLTbits.MODE=0b00000;
  1121   00197A  0EE0               	movlw	-32
  1122   00197C  16BE               	andwf	190,f,c	;volatile
  1123                           
  1124                           ;dc_motor.c: 25:     T2CLKCONbits.CS=0b0001;
  1125   00197E  50BF               	movf	191,w,c	;volatile
  1126   001980  0BF0               	andlw	-16
  1127   001982  0901               	iorlw	1
  1128   001984  6EBF               	movwf	191,c	;volatile
  1129   001986                     
  1130                           ; BSR set to: 14
  1131                           ;dc_motor.c: 29:     T2PR=PWMperiod;
  1132   001986  C009  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  1133   00198A                     
  1134                           ; BSR set to: 14
  1135                           ;dc_motor.c: 30:     T2CONbits.ON=1;
  1136   00198A  8EBD               	bsf	189,7,c	;volatile
  1137                           
  1138                           ;dc_motor.c: 34:     CCPR1H=0;
  1139   00198C  0E00               	movlw	0
  1140   00198E  6EAA               	movwf	170,c	;volatile
  1141                           
  1142                           ;dc_motor.c: 35:     CCPR2H=0;
  1143   001990  0E00               	movlw	0
  1144   001992  6EA6               	movwf	166,c	;volatile
  1145                           
  1146                           ;dc_motor.c: 36:     CCPR3H=0;
  1147   001994  0E00               	movlw	0
  1148   001996  010F               	movlb	15	; () banked
  1149   001998  6F25               	movwf	37,b	;volatile
  1150                           
  1151                           ;dc_motor.c: 37:     CCPR4H=0;
  1152   00199A  0E00               	movlw	0
  1153   00199C  6F21               	movwf	33,b	;volatile
  1154                           
  1155                           ;dc_motor.c: 40:     CCPTMRS0bits.C1TSEL=0;
  1156   00199E  0EFC               	movlw	-4
  1157   0019A0  16AD               	andwf	173,f,c	;volatile
  1158                           
  1159                           ;dc_motor.c: 41:     CCPTMRS0bits.C2TSEL=0;
  1160   0019A2  0EF3               	movlw	-13
  1161   0019A4  16AD               	andwf	173,f,c	;volatile
  1162                           
  1163                           ;dc_motor.c: 42:     CCPTMRS0bits.C3TSEL=0;
  1164   0019A6  0ECF               	movlw	-49
  1165   0019A8  16AD               	andwf	173,f,c	;volatile
  1166                           
  1167                           ;dc_motor.c: 43:     CCPTMRS0bits.C4TSEL=0;
  1168   0019AA  0E3F               	movlw	-193
  1169   0019AC  16AD               	andwf	173,f,c	;volatile
  1170   0019AE                     
  1171                           ; BSR set to: 15
  1172                           ;dc_motor.c: 46:     CCP1CONbits.FMT=1;
  1173   0019AE  88AB               	bsf	171,4,c	;volatile
  1174                           
  1175                           ;dc_motor.c: 47:     CCP1CONbits.CCP1MODE=0b1100;
  1176   0019B0  50AB               	movf	171,w,c	;volatile
  1177   0019B2  0BF0               	andlw	-16
  1178   0019B4  090C               	iorlw	12
  1179   0019B6  6EAB               	movwf	171,c	;volatile
  1180   0019B8                     
  1181                           ; BSR set to: 15
  1182                           ;dc_motor.c: 48:     CCP1CONbits.EN=1;
  1183   0019B8  8EAB               	bsf	171,7,c	;volatile
  1184   0019BA                     
  1185                           ; BSR set to: 15
  1186                           ;dc_motor.c: 50:     CCP2CONbits.FMT=1;
  1187   0019BA  88A7               	bsf	167,4,c	;volatile
  1188                           
  1189                           ;dc_motor.c: 51:     CCP2CONbits.CCP2MODE=0b1100;
  1190   0019BC  50A7               	movf	167,w,c	;volatile
  1191   0019BE  0BF0               	andlw	-16
  1192   0019C0  090C               	iorlw	12
  1193   0019C2  6EA7               	movwf	167,c	;volatile
  1194   0019C4                     
  1195                           ; BSR set to: 15
  1196                           ;dc_motor.c: 52:     CCP2CONbits.EN=1;
  1197   0019C4  8EA7               	bsf	167,7,c	;volatile
  1198   0019C6                     
  1199                           ; BSR set to: 15
  1200                           ;dc_motor.c: 54:     CCP3CONbits.FMT=1;
  1201   0019C6  8926               	bsf	38,4,b	;volatile
  1202                           
  1203                           ;dc_motor.c: 55:     CCP3CONbits.CCP3MODE=0b1100;
  1204   0019C8  5126               	movf	38,w,b	;volatile
  1205   0019CA  0BF0               	andlw	-16
  1206   0019CC  090C               	iorlw	12
  1207   0019CE  6F26               	movwf	38,b	;volatile
  1208   0019D0                     
  1209                           ; BSR set to: 15
  1210                           ;dc_motor.c: 56:     CCP3CONbits.EN=1;
  1211   0019D0  8F26               	bsf	38,7,b	;volatile
  1212   0019D2                     
  1213                           ; BSR set to: 15
  1214                           ;dc_motor.c: 58:     CCP4CONbits.FMT=1;
  1215   0019D2  8922               	bsf	34,4,b	;volatile
  1216                           
  1217                           ;dc_motor.c: 59:     CCP4CONbits.CCP4MODE=0b1100;
  1218   0019D4  5122               	movf	34,w,b	;volatile
  1219   0019D6  0BF0               	andlw	-16
  1220   0019D8  090C               	iorlw	12
  1221   0019DA  6F22               	movwf	34,b	;volatile
  1222   0019DC                     
  1223                           ; BSR set to: 15
  1224                           ;dc_motor.c: 60:     CCP4CONbits.EN=1;
  1225   0019DC  8F22               	bsf	34,7,b	;volatile
  1226   0019DE                     
  1227                           ; BSR set to: 15
  1228   0019DE  0012               	return		;funcret
  1229   0019E0                     __end_of_initDCmotorsPWM:
  1230                           	callstack 0
  1231                           
  1232 ;; *************** function _fullSpeedAhead *****************
  1233 ;; Defined at:
  1234 ;;		line 215 in file "dc_motor.c"
  1235 ;; Parameters:    Size  Location     Type
  1236 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  1237 ;;		 -> main@motorL(9), 
  1238 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  1239 ;;		 -> main@motorR(9), 
  1240 ;; Auto vars:     Size  Location     Type
  1241 ;;		None
  1242 ;; Return value:  Size  Location     Type
  1243 ;;                  1    wreg      void 
  1244 ;; Registers used:
  1245 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1246 ;; Tracked objects:
  1247 ;;		On entry : 0/0
  1248 ;;		On exit  : 0/0
  1249 ;;		Unchanged: 0/0
  1250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1251 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1253 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1254 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1255 ;;Total ram usage:        6 bytes
  1256 ;; Hardware stack levels used: 1
  1257 ;; Hardware stack levels required when called: 9
  1258 ;; This function calls:
  1259 ;;		_setMotorPWM
  1260 ;; This function is called by:
  1261 ;;		_main
  1262 ;; This function uses a non-reentrant model
  1263 ;;
  1264                           
  1265                           	psect	text2
  1266   0016D0                     __ptext2:
  1267                           	callstack 0
  1268   0016D0                     _fullSpeedAhead:
  1269                           	callstack 21
  1270   0016D0                     
  1271                           ;dc_motor.c: 215: void fullSpeedAhead(DC_motor *mL, DC_motor *mR);dc_motor.c: 216: {;dc_
      +                          motor.c: 218:     mL->direction = 1;
  1272   0016D0  EE20 F001          	lfsr	2,1
  1273   0016D4  501C               	movf	fullSpeedAhead@mL^0,w,c
  1274   0016D6  26D9               	addwf	fsr2l,f,c
  1275   0016D8  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  1276   0016DA  22DA               	addwfc	fsr2h,f,c
  1277   0016DC  0E01               	movlw	1
  1278   0016DE  6EDF               	movwf	indf2,c
  1279                           
  1280                           ;dc_motor.c: 219:     mL->brakemode = 0;
  1281   0016E0  EE20 F002          	lfsr	2,2
  1282   0016E4  501C               	movf	fullSpeedAhead@mL^0,w,c
  1283   0016E6  26D9               	addwf	fsr2l,f,c
  1284   0016E8  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  1285   0016EA  22DA               	addwfc	fsr2h,f,c
  1286   0016EC  0E00               	movlw	0
  1287   0016EE  6EDF               	movwf	indf2,c
  1288                           
  1289                           ;dc_motor.c: 221:     mR->direction = 1;
  1290   0016F0  EE20 F001          	lfsr	2,1
  1291   0016F4  501E               	movf	fullSpeedAhead@mR^0,w,c
  1292   0016F6  26D9               	addwf	fsr2l,f,c
  1293   0016F8  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  1294   0016FA  22DA               	addwfc	fsr2h,f,c
  1295   0016FC  0E01               	movlw	1
  1296   0016FE  6EDF               	movwf	indf2,c
  1297                           
  1298                           ;dc_motor.c: 222:     mR->brakemode = 0;
  1299   001700  EE20 F002          	lfsr	2,2
  1300   001704  501E               	movf	fullSpeedAhead@mR^0,w,c
  1301   001706  26D9               	addwf	fsr2l,f,c
  1302   001708  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  1303   00170A  22DA               	addwfc	fsr2h,f,c
  1304   00170C  0E00               	movlw	0
  1305   00170E  6EDF               	movwf	indf2,c
  1306                           
  1307                           ;dc_motor.c: 226:     if(mL->power>50){mL->power=50;}
  1308   001710  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  1309   001714  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  1310   001718  50DF               	movf	indf2,w,c
  1311   00171A  0A80               	xorlw	128
  1312   00171C  0F4D               	addlw	-179
  1313   00171E  A0D8               	btfss	status,0,c
  1314   001720  EF94  F00B         	goto	u3281
  1315   001724  EF96  F00B         	goto	u3280
  1316   001728                     u3281:
  1317   001728  EF9C  F00B         	goto	l3427
  1318   00172C                     u3280:
  1319   00172C  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  1320   001730  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  1321   001734  0E32               	movlw	50
  1322   001736  6EDF               	movwf	indf2,c
  1323   001738                     l3427:
  1324                           
  1325                           ;dc_motor.c: 227:     if(mR->power>50){mR->power=50;}
  1326   001738  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  1327   00173C  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  1328   001740  50DF               	movf	indf2,w,c
  1329   001742  0A80               	xorlw	128
  1330   001744  0F4D               	addlw	-179
  1331   001746  A0D8               	btfss	status,0,c
  1332   001748  EFA8  F00B         	goto	u3291
  1333   00174C  EFAA  F00B         	goto	u3290
  1334   001750                     u3291:
  1335   001750  EFB0  F00B         	goto	l3431
  1336   001754                     u3290:
  1337   001754  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  1338   001758  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  1339   00175C  0E32               	movlw	50
  1340   00175E  6EDF               	movwf	indf2,c
  1341   001760                     l3431:
  1342                           
  1343                           ;dc_motor.c: 229:     ++mL->power;
  1344   001760  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  1345   001764  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  1346   001768  2ADF               	incf	indf2,f,c
  1347   00176A                     
  1348                           ;dc_motor.c: 230:     ++mR->power;
  1349   00176A  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  1350   00176E  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  1351   001772  2ADF               	incf	indf2,f,c
  1352   001774                     
  1353                           ;dc_motor.c: 232:     setMotorPWM(mL);
  1354   001774  C01C  F016         	movff	fullSpeedAhead@mL,setMotorPWM@m
  1355   001778  C01D  F017         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  1356   00177C  EC05  F008         	call	_setMotorPWM	;wreg free
  1357   001780                     
  1358                           ;dc_motor.c: 233:     setMotorPWM(mR);
  1359   001780  C01E  F016         	movff	fullSpeedAhead@mR,setMotorPWM@m
  1360   001784  C01F  F017         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  1361   001788  EC05  F008         	call	_setMotorPWM	;wreg free
  1362   00178C                     
  1363                           ;dc_motor.c: 234:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1364   00178C  0E05               	movlw	5
  1365   00178E  6E21               	movwf	(??_fullSpeedAhead+1)^0,c
  1366   001790  0E0F               	movlw	15
  1367   001792  6E20               	movwf	??_fullSpeedAhead^0,c
  1368   001794  0EF1               	movlw	241
  1369   001796                     u4077:
  1370   001796  2EE8               	decfsz	wreg,f,c
  1371   001798  D7FE               	bra	u4077
  1372   00179A  2E20               	decfsz	??_fullSpeedAhead^0,f,c
  1373   00179C  D7FC               	bra	u4077
  1374   00179E  2E21               	decfsz	(??_fullSpeedAhead+1)^0,f,c
  1375   0017A0  D7FA               	bra	u4077
  1376   0017A2  F000               	nop	
  1377   0017A4  0012               	return		;funcret
  1378   0017A6                     __end_of_fullSpeedAhead:
  1379                           	callstack 0
  1380                           
  1381 ;; *************** function _detect_color *****************
  1382 ;; Defined at:
  1383 ;;		line 99 in file "color.c"
  1384 ;; Parameters:    Size  Location     Type
  1385 ;;  tempval         2    4[BANK0 ] PTR struct RGB_val
  1386 ;;		 -> main@initial_color(8), 
  1387 ;; Auto vars:     Size  Location     Type
  1388 ;;  dist_B          1   21[BANK0 ] unsigned char 
  1389 ;;  dist_G          1   20[BANK0 ] unsigned char 
  1390 ;;  dist_R          1   19[BANK0 ] unsigned char 
  1391 ;;  color           1   18[BANK0 ] unsigned char 
  1392 ;; Return value:  Size  Location     Type
  1393 ;;                  1    wreg      unsigned char 
  1394 ;; Registers used:
  1395 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1396 ;; Tracked objects:
  1397 ;;		On entry : 0/0
  1398 ;;		On exit  : 0/0
  1399 ;;		Unchanged: 0/0
  1400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1401 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1402 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1403 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1404 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1405 ;;Total ram usage:       18 bytes
  1406 ;; Hardware stack levels used: 1
  1407 ;; Hardware stack levels required when called: 8
  1408 ;; This function calls:
  1409 ;;		___fldiv
  1410 ;;		___flmul
  1411 ;;		___fltol
  1412 ;;		___xxtofl
  1413 ;; This function is called by:
  1414 ;;		_main
  1415 ;; This function uses a non-reentrant model
  1416 ;;
  1417                           
  1418                           	psect	text3
  1419   00005C                     __ptext3:
  1420                           	callstack 0
  1421   00005C                     _detect_color:
  1422                           	callstack 22
  1423   00005C                     
  1424                           ;color.c: 99: unsigned char detect_color(RGB_val *tempval);color.c: 100: {;color.c: 101:
      +                               unsigned char color = 0;
  1425   00005C  0E00               	movlw	0
  1426   00005E  0100               	movlb	0	; () banked
  1427   000060  6FC4               	movwf	detect_color@color& (0+255),b
  1428   000062                     
  1429                           ; BSR set to: 0
  1430                           ;color.c: 104:     unsigned char dist_R, dist_G, dist_B;;color.c: 105:     dist_R = ((fl
      +                          oat)(tempval->R)/(float)(tempval->R + tempval->G + tempval->B))*100;
  1431   000062  0E00               	movlw	0
  1432   000064  6E34               	movwf	___flmul@a^0,c
  1433   000066  0E00               	movlw	0
  1434   000068  6E35               	movwf	(___flmul@a+1)^0,c
  1435   00006A  0EC8               	movlw	200
  1436   00006C  6E36               	movwf	(___flmul@a+2)^0,c
  1437   00006E  0E42               	movlw	66
  1438   000070  6E37               	movwf	(___flmul@a+3)^0,c
  1439   000072  EE20 F004          	lfsr	2,4
  1440   000076  51B6               	movf	detect_color@tempval& (0+255),w,b
  1441   000078  26D9               	addwf	fsr2l,f,c
  1442   00007A  51B7               	movf	(detect_color@tempval+1)& (0+255),w,b
  1443   00007C  22DA               	addwfc	fsr2h,f,c
  1444   00007E  CFDE F0B8          	movff	postinc2,??_detect_color
  1445   000082  CFDD F0B9          	movff	postdec2,??_detect_color+1
  1446   000086  EE20 F002          	lfsr	2,2
  1447   00008A  51B6               	movf	detect_color@tempval& (0+255),w,b
  1448   00008C  26D9               	addwf	fsr2l,f,c
  1449   00008E  51B7               	movf	(detect_color@tempval+1)& (0+255),w,b
  1450   000090  22DA               	addwfc	fsr2h,f,c
  1451   000092  CFDE F0BA          	movff	postinc2,??_detect_color+2
  1452   000096  CFDD F0BB          	movff	postdec2,??_detect_color+3
  1453   00009A  C0B6  FFD9         	movff	detect_color@tempval,fsr2l
  1454   00009E  C0B7  FFDA         	movff	detect_color@tempval+1,fsr2h
  1455   0000A2  CFDE F0BC          	movff	postinc2,??_detect_color+4
  1456   0000A6  CFDD F0BD          	movff	postdec2,??_detect_color+5
  1457   0000AA  51BA               	movf	(??_detect_color+2)& (0+255),w,b
  1458   0000AC  25BC               	addwf	(??_detect_color+4)& (0+255),w,b
  1459   0000AE  6FBE               	movwf	(??_detect_color+6)& (0+255),b
  1460   0000B0  51BB               	movf	(??_detect_color+3)& (0+255),w,b
  1461   0000B2  21BD               	addwfc	(??_detect_color+5)& (0+255),w,b
  1462   0000B4  6FBF               	movwf	(??_detect_color+7)& (0+255),b
  1463   0000B6  51B8               	movf	??_detect_color& (0+255),w,b
  1464   0000B8  25BE               	addwf	(??_detect_color+6)& (0+255),w,b
  1465   0000BA  6FC0               	movwf	(??_detect_color+8)& (0+255),b
  1466   0000BC  51B9               	movf	(??_detect_color+1)& (0+255),w,b
  1467   0000BE  21BF               	addwfc	(??_detect_color+7)& (0+255),w,b
  1468   0000C0  6FC1               	movwf	(??_detect_color+9)& (0+255),b
  1469   0000C2  C0C0  F009         	movff	??_detect_color+8,___xxtofl@val
  1470   0000C6  C0C1  F00A         	movff	??_detect_color+9,___xxtofl@val+1
  1471   0000CA  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1472   0000CC  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1473   0000CE  0E00               	movlw	0
  1474   0000D0  EC2B  F007         	call	___xxtofl
  1475   0000D4  C009  F01B         	movff	?___xxtofl,___fldiv@a
  1476   0000D8  C00A  F01C         	movff	?___xxtofl+1,___fldiv@a+1
  1477   0000DC  C00B  F01D         	movff	?___xxtofl+2,___fldiv@a+2
  1478   0000E0  C00C  F01E         	movff	?___xxtofl+3,___fldiv@a+3
  1479   0000E4  C0B6  FFD9         	movff	detect_color@tempval,fsr2l
  1480   0000E8  C0B7  FFDA         	movff	detect_color@tempval+1,fsr2h
  1481   0000EC  CFDE F0C2          	movff	postinc2,??_detect_color+10
  1482   0000F0  CFDD F0C3          	movff	postdec2,??_detect_color+11
  1483   0000F4  C0C2  F009         	movff	??_detect_color+10,___xxtofl@val
  1484   0000F8  C0C3  F00A         	movff	??_detect_color+11,___xxtofl@val+1
  1485   0000FC  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1486   0000FE  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1487   000100  0E00               	movlw	0
  1488   000102  EC2B  F007         	call	___xxtofl
  1489   000106  C009  F017         	movff	?___xxtofl,___fldiv@b
  1490   00010A  C00A  F018         	movff	?___xxtofl+1,___fldiv@b+1
  1491   00010E  C00B  F019         	movff	?___xxtofl+2,___fldiv@b+2
  1492   000112  C00C  F01A         	movff	?___xxtofl+3,___fldiv@b+3
  1493   000116  EC5E  F005         	call	___fldiv	;wreg free
  1494   00011A  C017  F030         	movff	?___fldiv,___flmul@b
  1495   00011E  C018  F031         	movff	?___fldiv+1,___flmul@b+1
  1496   000122  C019  F032         	movff	?___fldiv+2,___flmul@b+2
  1497   000126  C01A  F033         	movff	?___fldiv+3,___flmul@b+3
  1498   00012A  EC49  F003         	call	___flmul	;wreg free
  1499   00012E  C030  F049         	movff	?___flmul,___fltol@f1
  1500   000132  C031  F04A         	movff	?___flmul+1,___fltol@f1+1
  1501   000136  C032  F04B         	movff	?___flmul+2,___fltol@f1+2
  1502   00013A  C033  F04C         	movff	?___flmul+3,___fltol@f1+3
  1503   00013E  ECF6  F009         	call	___fltol	;wreg free
  1504   000142  5049               	movf	?___fltol^0,w,c
  1505   000144  0100               	movlb	0	; () banked
  1506   000146  6FC5               	movwf	detect_color@dist_R& (0+255),b
  1507   000148                     
  1508                           ; BSR set to: 0
  1509                           ;color.c: 106:     dist_G = ((float)(tempval->G)/(float)(tempval->R + tempval->G + tempv
      +                          al->B))*100;
  1510   000148  0E00               	movlw	0
  1511   00014A  6E34               	movwf	___flmul@a^0,c
  1512   00014C  0E00               	movlw	0
  1513   00014E  6E35               	movwf	(___flmul@a+1)^0,c
  1514   000150  0EC8               	movlw	200
  1515   000152  6E36               	movwf	(___flmul@a+2)^0,c
  1516   000154  0E42               	movlw	66
  1517   000156  6E37               	movwf	(___flmul@a+3)^0,c
  1518   000158  EE20 F004          	lfsr	2,4
  1519   00015C  51B6               	movf	detect_color@tempval& (0+255),w,b
  1520   00015E  26D9               	addwf	fsr2l,f,c
  1521   000160  51B7               	movf	(detect_color@tempval+1)& (0+255),w,b
  1522   000162  22DA               	addwfc	fsr2h,f,c
  1523   000164  CFDE F0B8          	movff	postinc2,??_detect_color
  1524   000168  CFDD F0B9          	movff	postdec2,??_detect_color+1
  1525   00016C  EE20 F002          	lfsr	2,2
  1526   000170  51B6               	movf	detect_color@tempval& (0+255),w,b
  1527   000172  26D9               	addwf	fsr2l,f,c
  1528   000174  51B7               	movf	(detect_color@tempval+1)& (0+255),w,b
  1529   000176  22DA               	addwfc	fsr2h,f,c
  1530   000178  CFDE F0BA          	movff	postinc2,??_detect_color+2
  1531   00017C  CFDD F0BB          	movff	postdec2,??_detect_color+3
  1532   000180  C0B6  FFD9         	movff	detect_color@tempval,fsr2l
  1533   000184  C0B7  FFDA         	movff	detect_color@tempval+1,fsr2h
  1534   000188  CFDE F0BC          	movff	postinc2,??_detect_color+4
  1535   00018C  CFDD F0BD          	movff	postdec2,??_detect_color+5
  1536   000190  51BA               	movf	(??_detect_color+2)& (0+255),w,b
  1537   000192  25BC               	addwf	(??_detect_color+4)& (0+255),w,b
  1538   000194  6FBE               	movwf	(??_detect_color+6)& (0+255),b
  1539   000196  51BB               	movf	(??_detect_color+3)& (0+255),w,b
  1540   000198  21BD               	addwfc	(??_detect_color+5)& (0+255),w,b
  1541   00019A  6FBF               	movwf	(??_detect_color+7)& (0+255),b
  1542   00019C  51B8               	movf	??_detect_color& (0+255),w,b
  1543   00019E  25BE               	addwf	(??_detect_color+6)& (0+255),w,b
  1544   0001A0  6FC0               	movwf	(??_detect_color+8)& (0+255),b
  1545   0001A2  51B9               	movf	(??_detect_color+1)& (0+255),w,b
  1546   0001A4  21BF               	addwfc	(??_detect_color+7)& (0+255),w,b
  1547   0001A6  6FC1               	movwf	(??_detect_color+9)& (0+255),b
  1548   0001A8  C0C0  F009         	movff	??_detect_color+8,___xxtofl@val
  1549   0001AC  C0C1  F00A         	movff	??_detect_color+9,___xxtofl@val+1
  1550   0001B0  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1551   0001B2  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1552   0001B4  0E00               	movlw	0
  1553   0001B6  EC2B  F007         	call	___xxtofl
  1554   0001BA  C009  F01B         	movff	?___xxtofl,___fldiv@a
  1555   0001BE  C00A  F01C         	movff	?___xxtofl+1,___fldiv@a+1
  1556   0001C2  C00B  F01D         	movff	?___xxtofl+2,___fldiv@a+2
  1557   0001C6  C00C  F01E         	movff	?___xxtofl+3,___fldiv@a+3
  1558   0001CA  0100               	movlb	0	; () banked
  1559   0001CC  EE20 F002          	lfsr	2,2
  1560   0001D0  51B6               	movf	detect_color@tempval& (0+255),w,b
  1561   0001D2  26D9               	addwf	fsr2l,f,c
  1562   0001D4  51B7               	movf	(detect_color@tempval+1)& (0+255),w,b
  1563   0001D6  22DA               	addwfc	fsr2h,f,c
  1564   0001D8  CFDE F0C2          	movff	postinc2,??_detect_color+10
  1565   0001DC  CFDD F0C3          	movff	postdec2,??_detect_color+11
  1566   0001E0  C0C2  F009         	movff	??_detect_color+10,___xxtofl@val
  1567   0001E4  C0C3  F00A         	movff	??_detect_color+11,___xxtofl@val+1
  1568   0001E8  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1569   0001EA  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1570   0001EC  0E00               	movlw	0
  1571   0001EE  EC2B  F007         	call	___xxtofl
  1572   0001F2  C009  F017         	movff	?___xxtofl,___fldiv@b
  1573   0001F6  C00A  F018         	movff	?___xxtofl+1,___fldiv@b+1
  1574   0001FA  C00B  F019         	movff	?___xxtofl+2,___fldiv@b+2
  1575   0001FE  C00C  F01A         	movff	?___xxtofl+3,___fldiv@b+3
  1576   000202  EC5E  F005         	call	___fldiv	;wreg free
  1577   000206  C017  F030         	movff	?___fldiv,___flmul@b
  1578   00020A  C018  F031         	movff	?___fldiv+1,___flmul@b+1
  1579   00020E  C019  F032         	movff	?___fldiv+2,___flmul@b+2
  1580   000212  C01A  F033         	movff	?___fldiv+3,___flmul@b+3
  1581   000216  EC49  F003         	call	___flmul	;wreg free
  1582   00021A  C030  F049         	movff	?___flmul,___fltol@f1
  1583   00021E  C031  F04A         	movff	?___flmul+1,___fltol@f1+1
  1584   000222  C032  F04B         	movff	?___flmul+2,___fltol@f1+2
  1585   000226  C033  F04C         	movff	?___flmul+3,___fltol@f1+3
  1586   00022A  ECF6  F009         	call	___fltol	;wreg free
  1587   00022E  5049               	movf	?___fltol^0,w,c
  1588   000230  0100               	movlb	0	; () banked
  1589   000232  6FC6               	movwf	detect_color@dist_G& (0+255),b
  1590   000234                     
  1591                           ; BSR set to: 0
  1592                           ;color.c: 107:     dist_B = ((float)(tempval->B)/(float)(tempval->R + tempval->G + tempv
      +                          al->B))*100;
  1593   000234  0E00               	movlw	0
  1594   000236  6E34               	movwf	___flmul@a^0,c
  1595   000238  0E00               	movlw	0
  1596   00023A  6E35               	movwf	(___flmul@a+1)^0,c
  1597   00023C  0EC8               	movlw	200
  1598   00023E  6E36               	movwf	(___flmul@a+2)^0,c
  1599   000240  0E42               	movlw	66
  1600   000242  6E37               	movwf	(___flmul@a+3)^0,c
  1601   000244  EE20 F004          	lfsr	2,4
  1602   000248  51B6               	movf	detect_color@tempval& (0+255),w,b
  1603   00024A  26D9               	addwf	fsr2l,f,c
  1604   00024C  51B7               	movf	(detect_color@tempval+1)& (0+255),w,b
  1605   00024E  22DA               	addwfc	fsr2h,f,c
  1606   000250  CFDE F0B8          	movff	postinc2,??_detect_color
  1607   000254  CFDD F0B9          	movff	postdec2,??_detect_color+1
  1608   000258  EE20 F002          	lfsr	2,2
  1609   00025C  51B6               	movf	detect_color@tempval& (0+255),w,b
  1610   00025E  26D9               	addwf	fsr2l,f,c
  1611   000260  51B7               	movf	(detect_color@tempval+1)& (0+255),w,b
  1612   000262  22DA               	addwfc	fsr2h,f,c
  1613   000264  CFDE F0BA          	movff	postinc2,??_detect_color+2
  1614   000268  CFDD F0BB          	movff	postdec2,??_detect_color+3
  1615   00026C  C0B6  FFD9         	movff	detect_color@tempval,fsr2l
  1616   000270  C0B7  FFDA         	movff	detect_color@tempval+1,fsr2h
  1617   000274  CFDE F0BC          	movff	postinc2,??_detect_color+4
  1618   000278  CFDD F0BD          	movff	postdec2,??_detect_color+5
  1619   00027C  51BA               	movf	(??_detect_color+2)& (0+255),w,b
  1620   00027E  25BC               	addwf	(??_detect_color+4)& (0+255),w,b
  1621   000280  6FBE               	movwf	(??_detect_color+6)& (0+255),b
  1622   000282  51BB               	movf	(??_detect_color+3)& (0+255),w,b
  1623   000284  21BD               	addwfc	(??_detect_color+5)& (0+255),w,b
  1624   000286  6FBF               	movwf	(??_detect_color+7)& (0+255),b
  1625   000288  51B8               	movf	??_detect_color& (0+255),w,b
  1626   00028A  25BE               	addwf	(??_detect_color+6)& (0+255),w,b
  1627   00028C  6FC0               	movwf	(??_detect_color+8)& (0+255),b
  1628   00028E  51B9               	movf	(??_detect_color+1)& (0+255),w,b
  1629   000290  21BF               	addwfc	(??_detect_color+7)& (0+255),w,b
  1630   000292  6FC1               	movwf	(??_detect_color+9)& (0+255),b
  1631   000294  C0C0  F009         	movff	??_detect_color+8,___xxtofl@val
  1632   000298  C0C1  F00A         	movff	??_detect_color+9,___xxtofl@val+1
  1633   00029C  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1634   00029E  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1635   0002A0  0E00               	movlw	0
  1636   0002A2  EC2B  F007         	call	___xxtofl
  1637   0002A6  C009  F01B         	movff	?___xxtofl,___fldiv@a
  1638   0002AA  C00A  F01C         	movff	?___xxtofl+1,___fldiv@a+1
  1639   0002AE  C00B  F01D         	movff	?___xxtofl+2,___fldiv@a+2
  1640   0002B2  C00C  F01E         	movff	?___xxtofl+3,___fldiv@a+3
  1641   0002B6  0100               	movlb	0	; () banked
  1642   0002B8  EE20 F004          	lfsr	2,4
  1643   0002BC  51B6               	movf	detect_color@tempval& (0+255),w,b
  1644   0002BE  26D9               	addwf	fsr2l,f,c
  1645   0002C0  51B7               	movf	(detect_color@tempval+1)& (0+255),w,b
  1646   0002C2  22DA               	addwfc	fsr2h,f,c
  1647   0002C4  CFDE F0C2          	movff	postinc2,??_detect_color+10
  1648   0002C8  CFDD F0C3          	movff	postdec2,??_detect_color+11
  1649   0002CC  C0C2  F009         	movff	??_detect_color+10,___xxtofl@val
  1650   0002D0  C0C3  F00A         	movff	??_detect_color+11,___xxtofl@val+1
  1651   0002D4  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1652   0002D6  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1653   0002D8  0E00               	movlw	0
  1654   0002DA  EC2B  F007         	call	___xxtofl
  1655   0002DE  C009  F017         	movff	?___xxtofl,___fldiv@b
  1656   0002E2  C00A  F018         	movff	?___xxtofl+1,___fldiv@b+1
  1657   0002E6  C00B  F019         	movff	?___xxtofl+2,___fldiv@b+2
  1658   0002EA  C00C  F01A         	movff	?___xxtofl+3,___fldiv@b+3
  1659   0002EE  EC5E  F005         	call	___fldiv	;wreg free
  1660   0002F2  C017  F030         	movff	?___fldiv,___flmul@b
  1661   0002F6  C018  F031         	movff	?___fldiv+1,___flmul@b+1
  1662   0002FA  C019  F032         	movff	?___fldiv+2,___flmul@b+2
  1663   0002FE  C01A  F033         	movff	?___fldiv+3,___flmul@b+3
  1664   000302  EC49  F003         	call	___flmul	;wreg free
  1665   000306  C030  F049         	movff	?___flmul,___fltol@f1
  1666   00030A  C031  F04A         	movff	?___flmul+1,___fltol@f1+1
  1667   00030E  C032  F04B         	movff	?___flmul+2,___fltol@f1+2
  1668   000312  C033  F04C         	movff	?___flmul+3,___fltol@f1+3
  1669   000316  ECF6  F009         	call	___fltol	;wreg free
  1670   00031A  5049               	movf	?___fltol^0,w,c
  1671   00031C  0100               	movlb	0	; () banked
  1672   00031E  6FC7               	movwf	detect_color@dist_B& (0+255),b
  1673   000320                     
  1674                           ; BSR set to: 0
  1675                           ;color.c: 109:     if(color_flag){
  1676   000320  51B1               	movf	_color_flag& (0+255),w,b
  1677   000322  B4D8               	btfsc	status,2,c
  1678   000324  EF96  F001         	goto	u3541
  1679   000328  EF98  F001         	goto	u3540
  1680   00032C                     u3541:
  1681   00032C  EF47  F003         	goto	l42
  1682   000330                     u3540:
  1683   000330                     
  1684                           ; BSR set to: 0
  1685                           ;color.c: 110:         _delay((unsigned long)((500)*(64000000/4000.0)));
  1686   000330  0E29               	movlw	41
  1687   000332  0100               	movlb	0	; () banked
  1688   000334  6FB9               	movwf	(??_detect_color+1)& (0+255),b
  1689   000336  0E96               	movlw	150
  1690   000338  6FB8               	movwf	??_detect_color& (0+255),b
  1691   00033A  0E7F               	movlw	127
  1692   00033C                     u4087:
  1693   00033C  2EE8               	decfsz	wreg,f,c
  1694   00033E  D7FE               	bra	u4087
  1695   000340  2FB8               	decfsz	??_detect_color& (0+255),f,b
  1696   000342  D7FC               	bra	u4087
  1697   000344  2FB9               	decfsz	(??_detect_color+1)& (0+255),f,b
  1698   000346  D7FA               	bra	u4087
  1699   000348                     
  1700                           ;color.c: 111:         if((74<=dist_R) && (dist_R<=76) && (10<=dist_G) && (dist_G<=12) &
      +                          & (13<=dist_B) && (dist_B<=15)){
  1701   000348  0E49               	movlw	73
  1702   00034A  0100               	movlb	0	; () banked
  1703   00034C  65C5               	cpfsgt	detect_color@dist_R& (0+255),b
  1704   00034E  EFAB  F001         	goto	u3551
  1705   000352  EFAD  F001         	goto	u3550
  1706   000356                     u3551:
  1707   000356  EFD9  F001         	goto	l3695
  1708   00035A                     u3550:
  1709   00035A                     
  1710                           ; BSR set to: 0
  1711   00035A  0E4D               	movlw	77
  1712   00035C  61C5               	cpfslt	detect_color@dist_R& (0+255),b
  1713   00035E  EFB3  F001         	goto	u3561
  1714   000362  EFB5  F001         	goto	u3560
  1715   000366                     u3561:
  1716   000366  EFD9  F001         	goto	l3695
  1717   00036A                     u3560:
  1718   00036A                     
  1719                           ; BSR set to: 0
  1720   00036A  0E09               	movlw	9
  1721   00036C  65C6               	cpfsgt	detect_color@dist_G& (0+255),b
  1722   00036E  EFBB  F001         	goto	u3571
  1723   000372  EFBD  F001         	goto	u3570
  1724   000376                     u3571:
  1725   000376  EFD9  F001         	goto	l3695
  1726   00037A                     u3570:
  1727   00037A                     
  1728                           ; BSR set to: 0
  1729   00037A  0E0D               	movlw	13
  1730   00037C  61C6               	cpfslt	detect_color@dist_G& (0+255),b
  1731   00037E  EFC3  F001         	goto	u3581
  1732   000382  EFC5  F001         	goto	u3580
  1733   000386                     u3581:
  1734   000386  EFD9  F001         	goto	l3695
  1735   00038A                     u3580:
  1736   00038A                     
  1737                           ; BSR set to: 0
  1738   00038A  0E0C               	movlw	12
  1739   00038C  65C7               	cpfsgt	detect_color@dist_B& (0+255),b
  1740   00038E  EFCB  F001         	goto	u3591
  1741   000392  EFCD  F001         	goto	u3590
  1742   000396                     u3591:
  1743   000396  EFD9  F001         	goto	l3695
  1744   00039A                     u3590:
  1745   00039A                     
  1746                           ; BSR set to: 0
  1747   00039A  0E10               	movlw	16
  1748   00039C  61C7               	cpfslt	detect_color@dist_B& (0+255),b
  1749   00039E  EFD3  F001         	goto	u3601
  1750   0003A2  EFD5  F001         	goto	u3600
  1751   0003A6                     u3601:
  1752   0003A6  EFD9  F001         	goto	l3695
  1753   0003AA                     u3600:
  1754   0003AA                     
  1755                           ; BSR set to: 0
  1756                           ;color.c: 112:             color = 1;
  1757   0003AA  0E01               	movlw	1
  1758   0003AC  6FC4               	movwf	detect_color@color& (0+255),b
  1759                           
  1760                           ;color.c: 113:         }
  1761   0003AE  EF45  F003         	goto	l44
  1762   0003B2                     l3695:
  1763                           
  1764                           ; BSR set to: 0
  1765   0003B2  0E23               	movlw	35
  1766   0003B4  65C5               	cpfsgt	detect_color@dist_R& (0+255),b
  1767   0003B6  EFDF  F001         	goto	u3611
  1768   0003BA  EFE1  F001         	goto	u3610
  1769   0003BE                     u3611:
  1770   0003BE  EF0D  F002         	goto	l3709
  1771   0003C2                     u3610:
  1772   0003C2                     
  1773                           ; BSR set to: 0
  1774   0003C2  0E27               	movlw	39
  1775   0003C4  61C5               	cpfslt	detect_color@dist_R& (0+255),b
  1776   0003C6  EFE7  F001         	goto	u3621
  1777   0003CA  EFE9  F001         	goto	u3620
  1778   0003CE                     u3621:
  1779   0003CE  EF0D  F002         	goto	l3709
  1780   0003D2                     u3620:
  1781   0003D2                     
  1782                           ; BSR set to: 0
  1783   0003D2  0E28               	movlw	40
  1784   0003D4  65C6               	cpfsgt	detect_color@dist_G& (0+255),b
  1785   0003D6  EFEF  F001         	goto	u3631
  1786   0003DA  EFF1  F001         	goto	u3630
  1787   0003DE                     u3631:
  1788   0003DE  EF0D  F002         	goto	l3709
  1789   0003E2                     u3630:
  1790   0003E2                     
  1791                           ; BSR set to: 0
  1792   0003E2  0E2C               	movlw	44
  1793   0003E4  61C6               	cpfslt	detect_color@dist_G& (0+255),b
  1794   0003E6  EFF7  F001         	goto	u3641
  1795   0003EA  EFF9  F001         	goto	u3640
  1796   0003EE                     u3641:
  1797   0003EE  EF0D  F002         	goto	l3709
  1798   0003F2                     u3640:
  1799   0003F2                     
  1800                           ; BSR set to: 0
  1801   0003F2  0E13               	movlw	19
  1802   0003F4  65C7               	cpfsgt	detect_color@dist_B& (0+255),b
  1803   0003F6  EFFF  F001         	goto	u3651
  1804   0003FA  EF01  F002         	goto	u3650
  1805   0003FE                     u3651:
  1806   0003FE  EF0D  F002         	goto	l3709
  1807   000402                     u3650:
  1808   000402                     
  1809                           ; BSR set to: 0
  1810   000402  0E17               	movlw	23
  1811   000404  61C7               	cpfslt	detect_color@dist_B& (0+255),b
  1812   000406  EF07  F002         	goto	u3661
  1813   00040A  EF09  F002         	goto	u3660
  1814   00040E                     u3661:
  1815   00040E  EF0D  F002         	goto	l3709
  1816   000412                     u3660:
  1817   000412                     
  1818                           ; BSR set to: 0
  1819                           ;color.c: 115:             color = 2;
  1820   000412  0E02               	movlw	2
  1821   000414  6FC4               	movwf	detect_color@color& (0+255),b
  1822                           
  1823                           ;color.c: 116:         }
  1824   000416  EF45  F003         	goto	l44
  1825   00041A                     l3709:
  1826                           
  1827                           ; BSR set to: 0
  1828   00041A  0E1D               	movlw	29
  1829   00041C  65C5               	cpfsgt	detect_color@dist_R& (0+255),b
  1830   00041E  EF13  F002         	goto	u3671
  1831   000422  EF15  F002         	goto	u3670
  1832   000426                     u3671:
  1833   000426  EF41  F002         	goto	l3723
  1834   00042A                     u3670:
  1835   00042A                     
  1836                           ; BSR set to: 0
  1837   00042A  0E21               	movlw	33
  1838   00042C  61C5               	cpfslt	detect_color@dist_R& (0+255),b
  1839   00042E  EF1B  F002         	goto	u3681
  1840   000432  EF1D  F002         	goto	u3680
  1841   000436                     u3681:
  1842   000436  EF41  F002         	goto	l3723
  1843   00043A                     u3680:
  1844   00043A                     
  1845                           ; BSR set to: 0
  1846   00043A  0E21               	movlw	33
  1847   00043C  65C6               	cpfsgt	detect_color@dist_G& (0+255),b
  1848   00043E  EF23  F002         	goto	u3691
  1849   000442  EF25  F002         	goto	u3690
  1850   000446                     u3691:
  1851   000446  EF41  F002         	goto	l3723
  1852   00044A                     u3690:
  1853   00044A                     
  1854                           ; BSR set to: 0
  1855   00044A  0E25               	movlw	37
  1856   00044C  61C6               	cpfslt	detect_color@dist_G& (0+255),b
  1857   00044E  EF2B  F002         	goto	u3701
  1858   000452  EF2D  F002         	goto	u3700
  1859   000456                     u3701:
  1860   000456  EF41  F002         	goto	l3723
  1861   00045A                     u3700:
  1862   00045A                     
  1863                           ; BSR set to: 0
  1864   00045A  0E20               	movlw	32
  1865   00045C  65C7               	cpfsgt	detect_color@dist_B& (0+255),b
  1866   00045E  EF33  F002         	goto	u3711
  1867   000462  EF35  F002         	goto	u3710
  1868   000466                     u3711:
  1869   000466  EF41  F002         	goto	l3723
  1870   00046A                     u3710:
  1871   00046A                     
  1872                           ; BSR set to: 0
  1873   00046A  0E24               	movlw	36
  1874   00046C  61C7               	cpfslt	detect_color@dist_B& (0+255),b
  1875   00046E  EF3B  F002         	goto	u3721
  1876   000472  EF3D  F002         	goto	u3720
  1877   000476                     u3721:
  1878   000476  EF41  F002         	goto	l3723
  1879   00047A                     u3720:
  1880   00047A                     
  1881                           ; BSR set to: 0
  1882                           ;color.c: 118:             color = 3;
  1883   00047A  0E03               	movlw	3
  1884   00047C  6FC4               	movwf	detect_color@color& (0+255),b
  1885                           
  1886                           ;color.c: 119:         }
  1887   00047E  EF45  F003         	goto	l44
  1888   000482                     l3723:
  1889                           
  1890                           ; BSR set to: 0
  1891   000482  0E31               	movlw	49
  1892   000484  65C5               	cpfsgt	detect_color@dist_R& (0+255),b
  1893   000486  EF47  F002         	goto	u3731
  1894   00048A  EF49  F002         	goto	u3730
  1895   00048E                     u3731:
  1896   00048E  EF75  F002         	goto	l3737
  1897   000492                     u3730:
  1898   000492                     
  1899                           ; BSR set to: 0
  1900   000492  0E35               	movlw	53
  1901   000494  61C5               	cpfslt	detect_color@dist_R& (0+255),b
  1902   000496  EF4F  F002         	goto	u3741
  1903   00049A  EF51  F002         	goto	u3740
  1904   00049E                     u3741:
  1905   00049E  EF75  F002         	goto	l3737
  1906   0004A2                     u3740:
  1907   0004A2                     
  1908                           ; BSR set to: 0
  1909   0004A2  0E1D               	movlw	29
  1910   0004A4  65C6               	cpfsgt	detect_color@dist_G& (0+255),b
  1911   0004A6  EF57  F002         	goto	u3751
  1912   0004AA  EF59  F002         	goto	u3750
  1913   0004AE                     u3751:
  1914   0004AE  EF75  F002         	goto	l3737
  1915   0004B2                     u3750:
  1916   0004B2                     
  1917                           ; BSR set to: 0
  1918   0004B2  0E21               	movlw	33
  1919   0004B4  61C6               	cpfslt	detect_color@dist_G& (0+255),b
  1920   0004B6  EF5F  F002         	goto	u3761
  1921   0004BA  EF61  F002         	goto	u3760
  1922   0004BE                     u3761:
  1923   0004BE  EF75  F002         	goto	l3737
  1924   0004C2                     u3760:
  1925   0004C2                     
  1926                           ; BSR set to: 0
  1927   0004C2  0E10               	movlw	16
  1928   0004C4  65C7               	cpfsgt	detect_color@dist_B& (0+255),b
  1929   0004C6  EF67  F002         	goto	u3771
  1930   0004CA  EF69  F002         	goto	u3770
  1931   0004CE                     u3771:
  1932   0004CE  EF75  F002         	goto	l3737
  1933   0004D2                     u3770:
  1934   0004D2                     
  1935                           ; BSR set to: 0
  1936   0004D2  0E14               	movlw	20
  1937   0004D4  61C7               	cpfslt	detect_color@dist_B& (0+255),b
  1938   0004D6  EF6F  F002         	goto	u3781
  1939   0004DA  EF71  F002         	goto	u3780
  1940   0004DE                     u3781:
  1941   0004DE  EF75  F002         	goto	l3737
  1942   0004E2                     u3780:
  1943   0004E2                     
  1944                           ; BSR set to: 0
  1945                           ;color.c: 121:             color = 4;
  1946   0004E2  0E04               	movlw	4
  1947   0004E4  6FC4               	movwf	detect_color@color& (0+255),b
  1948                           
  1949                           ;color.c: 122:         }
  1950   0004E6  EF45  F003         	goto	l44
  1951   0004EA                     l3737:
  1952                           
  1953                           ; BSR set to: 0
  1954   0004EA  0E2F               	movlw	47
  1955   0004EC  65C5               	cpfsgt	detect_color@dist_R& (0+255),b
  1956   0004EE  EF7B  F002         	goto	u3791
  1957   0004F2  EF7D  F002         	goto	u3790
  1958   0004F6                     u3791:
  1959   0004F6  EFA9  F002         	goto	l3751
  1960   0004FA                     u3790:
  1961   0004FA                     
  1962                           ; BSR set to: 0
  1963   0004FA  0E33               	movlw	51
  1964   0004FC  61C5               	cpfslt	detect_color@dist_R& (0+255),b
  1965   0004FE  EF83  F002         	goto	u3801
  1966   000502  EF85  F002         	goto	u3800
  1967   000506                     u3801:
  1968   000506  EFA9  F002         	goto	l3751
  1969   00050A                     u3800:
  1970   00050A                     
  1971                           ; BSR set to: 0
  1972   00050A  0E1B               	movlw	27
  1973   00050C  65C6               	cpfsgt	detect_color@dist_G& (0+255),b
  1974   00050E  EF8B  F002         	goto	u3811
  1975   000512  EF8D  F002         	goto	u3810
  1976   000516                     u3811:
  1977   000516  EFA9  F002         	goto	l3751
  1978   00051A                     u3810:
  1979   00051A                     
  1980                           ; BSR set to: 0
  1981   00051A  0E1F               	movlw	31
  1982   00051C  61C6               	cpfslt	detect_color@dist_G& (0+255),b
  1983   00051E  EF93  F002         	goto	u3821
  1984   000522  EF95  F002         	goto	u3820
  1985   000526                     u3821:
  1986   000526  EFA9  F002         	goto	l3751
  1987   00052A                     u3820:
  1988   00052A                     
  1989                           ; BSR set to: 0
  1990   00052A  0E14               	movlw	20
  1991   00052C  65C7               	cpfsgt	detect_color@dist_B& (0+255),b
  1992   00052E  EF9B  F002         	goto	u3831
  1993   000532  EF9D  F002         	goto	u3830
  1994   000536                     u3831:
  1995   000536  EFA9  F002         	goto	l3751
  1996   00053A                     u3830:
  1997   00053A                     
  1998                           ; BSR set to: 0
  1999   00053A  0E18               	movlw	24
  2000   00053C  61C7               	cpfslt	detect_color@dist_B& (0+255),b
  2001   00053E  EFA3  F002         	goto	u3841
  2002   000542  EFA5  F002         	goto	u3840
  2003   000546                     u3841:
  2004   000546  EFA9  F002         	goto	l3751
  2005   00054A                     u3840:
  2006   00054A                     
  2007                           ; BSR set to: 0
  2008                           ;color.c: 124:             color = 5;
  2009   00054A  0E05               	movlw	5
  2010   00054C  6FC4               	movwf	detect_color@color& (0+255),b
  2011                           
  2012                           ;color.c: 125:         }
  2013   00054E  EF45  F003         	goto	l44
  2014   000552                     l3751:
  2015                           
  2016                           ; BSR set to: 0
  2017   000552  0E3A               	movlw	58
  2018   000554  65C5               	cpfsgt	detect_color@dist_R& (0+255),b
  2019   000556  EFAF  F002         	goto	u3851
  2020   00055A  EFB1  F002         	goto	u3850
  2021   00055E                     u3851:
  2022   00055E  EFDD  F002         	goto	l3765
  2023   000562                     u3850:
  2024   000562                     
  2025                           ; BSR set to: 0
  2026   000562  0E3E               	movlw	62
  2027   000564  61C5               	cpfslt	detect_color@dist_R& (0+255),b
  2028   000566  EFB7  F002         	goto	u3861
  2029   00056A  EFB9  F002         	goto	u3860
  2030   00056E                     u3861:
  2031   00056E  EFDD  F002         	goto	l3765
  2032   000572                     u3860:
  2033   000572                     
  2034                           ; BSR set to: 0
  2035   000572  0E15               	movlw	21
  2036   000574  65C6               	cpfsgt	detect_color@dist_G& (0+255),b
  2037   000576  EFBF  F002         	goto	u3871
  2038   00057A  EFC1  F002         	goto	u3870
  2039   00057E                     u3871:
  2040   00057E  EFDD  F002         	goto	l3765
  2041   000582                     u3870:
  2042   000582                     
  2043                           ; BSR set to: 0
  2044   000582  0E19               	movlw	25
  2045   000584  61C6               	cpfslt	detect_color@dist_G& (0+255),b
  2046   000586  EFC7  F002         	goto	u3881
  2047   00058A  EFC9  F002         	goto	u3880
  2048   00058E                     u3881:
  2049   00058E  EFDD  F002         	goto	l3765
  2050   000592                     u3880:
  2051   000592                     
  2052                           ; BSR set to: 0
  2053   000592  0E0F               	movlw	15
  2054   000594  65C7               	cpfsgt	detect_color@dist_B& (0+255),b
  2055   000596  EFCF  F002         	goto	u3891
  2056   00059A  EFD1  F002         	goto	u3890
  2057   00059E                     u3891:
  2058   00059E  EFDD  F002         	goto	l3765
  2059   0005A2                     u3890:
  2060   0005A2                     
  2061                           ; BSR set to: 0
  2062   0005A2  0E13               	movlw	19
  2063   0005A4  61C7               	cpfslt	detect_color@dist_B& (0+255),b
  2064   0005A6  EFD7  F002         	goto	u3901
  2065   0005AA  EFD9  F002         	goto	u3900
  2066   0005AE                     u3901:
  2067   0005AE  EFDD  F002         	goto	l3765
  2068   0005B2                     u3900:
  2069   0005B2                     
  2070                           ; BSR set to: 0
  2071                           ;color.c: 127:             color = 6;
  2072   0005B2  0E06               	movlw	6
  2073   0005B4  6FC4               	movwf	detect_color@color& (0+255),b
  2074                           
  2075                           ;color.c: 128:         }
  2076   0005B6  EF45  F003         	goto	l44
  2077   0005BA                     l3765:
  2078                           
  2079                           ; BSR set to: 0
  2080   0005BA  0E20               	movlw	32
  2081   0005BC  65C5               	cpfsgt	detect_color@dist_R& (0+255),b
  2082   0005BE  EFE3  F002         	goto	u3911
  2083   0005C2  EFE5  F002         	goto	u3910
  2084   0005C6                     u3911:
  2085   0005C6  EF11  F003         	goto	l3779
  2086   0005CA                     u3910:
  2087   0005CA                     
  2088                           ; BSR set to: 0
  2089   0005CA  0E24               	movlw	36
  2090   0005CC  61C5               	cpfslt	detect_color@dist_R& (0+255),b
  2091   0005CE  EFEB  F002         	goto	u3921
  2092   0005D2  EFED  F002         	goto	u3920
  2093   0005D6                     u3921:
  2094   0005D6  EF11  F003         	goto	l3779
  2095   0005DA                     u3920:
  2096   0005DA                     
  2097                           ; BSR set to: 0
  2098   0005DA  0E25               	movlw	37
  2099   0005DC  65C6               	cpfsgt	detect_color@dist_G& (0+255),b
  2100   0005DE  EFF3  F002         	goto	u3931
  2101   0005E2  EFF5  F002         	goto	u3930
  2102   0005E6                     u3931:
  2103   0005E6  EF11  F003         	goto	l3779
  2104   0005EA                     u3930:
  2105   0005EA                     
  2106                           ; BSR set to: 0
  2107   0005EA  0E29               	movlw	41
  2108   0005EC  61C6               	cpfslt	detect_color@dist_G& (0+255),b
  2109   0005EE  EFFB  F002         	goto	u3941
  2110   0005F2  EFFD  F002         	goto	u3940
  2111   0005F6                     u3941:
  2112   0005F6  EF11  F003         	goto	l3779
  2113   0005FA                     u3940:
  2114   0005FA                     
  2115                           ; BSR set to: 0
  2116   0005FA  0E19               	movlw	25
  2117   0005FC  65C7               	cpfsgt	detect_color@dist_B& (0+255),b
  2118   0005FE  EF03  F003         	goto	u3951
  2119   000602  EF05  F003         	goto	u3950
  2120   000606                     u3951:
  2121   000606  EF11  F003         	goto	l3779
  2122   00060A                     u3950:
  2123   00060A                     
  2124                           ; BSR set to: 0
  2125   00060A  0E1D               	movlw	29
  2126   00060C  61C7               	cpfslt	detect_color@dist_B& (0+255),b
  2127   00060E  EF0B  F003         	goto	u3961
  2128   000612  EF0D  F003         	goto	u3960
  2129   000616                     u3961:
  2130   000616  EF11  F003         	goto	l3779
  2131   00061A                     u3960:
  2132   00061A                     
  2133                           ; BSR set to: 0
  2134                           ;color.c: 130:             color = 7;
  2135   00061A  0E07               	movlw	7
  2136   00061C  6FC4               	movwf	detect_color@color& (0+255),b
  2137                           
  2138                           ;color.c: 131:         }
  2139   00061E  EF45  F003         	goto	l44
  2140   000622                     l3779:
  2141                           
  2142                           ; BSR set to: 0
  2143   000622  0E2A               	movlw	42
  2144   000624  65C5               	cpfsgt	detect_color@dist_R& (0+255),b
  2145   000626  EF17  F003         	goto	u3971
  2146   00062A  EF19  F003         	goto	u3970
  2147   00062E                     u3971:
  2148   00062E  EF45  F003         	goto	l52
  2149   000632                     u3970:
  2150   000632                     
  2151                           ; BSR set to: 0
  2152   000632  0E2E               	movlw	46
  2153   000634  61C5               	cpfslt	detect_color@dist_R& (0+255),b
  2154   000636  EF1F  F003         	goto	u3981
  2155   00063A  EF21  F003         	goto	u3980
  2156   00063E                     u3981:
  2157   00063E  EF45  F003         	goto	l52
  2158   000642                     u3980:
  2159   000642                     
  2160                           ; BSR set to: 0
  2161   000642  0E1F               	movlw	31
  2162   000644  65C6               	cpfsgt	detect_color@dist_G& (0+255),b
  2163   000646  EF27  F003         	goto	u3991
  2164   00064A  EF29  F003         	goto	u3990
  2165   00064E                     u3991:
  2166   00064E  EF45  F003         	goto	l52
  2167   000652                     u3990:
  2168   000652                     
  2169                           ; BSR set to: 0
  2170   000652  0E23               	movlw	35
  2171   000654  61C6               	cpfslt	detect_color@dist_G& (0+255),b
  2172   000656  EF2F  F003         	goto	u4001
  2173   00065A  EF31  F003         	goto	u4000
  2174   00065E                     u4001:
  2175   00065E  EF45  F003         	goto	l52
  2176   000662                     u4000:
  2177   000662                     
  2178                           ; BSR set to: 0
  2179   000662  0E15               	movlw	21
  2180   000664  65C7               	cpfsgt	detect_color@dist_B& (0+255),b
  2181   000666  EF37  F003         	goto	u4011
  2182   00066A  EF39  F003         	goto	u4010
  2183   00066E                     u4011:
  2184   00066E  EF45  F003         	goto	l52
  2185   000672                     u4010:
  2186   000672                     
  2187                           ; BSR set to: 0
  2188   000672  0E19               	movlw	25
  2189   000674  61C7               	cpfslt	detect_color@dist_B& (0+255),b
  2190   000676  EF3F  F003         	goto	u4021
  2191   00067A  EF41  F003         	goto	u4020
  2192   00067E                     u4021:
  2193   00067E  EF45  F003         	goto	l52
  2194   000682                     u4020:
  2195   000682                     
  2196                           ; BSR set to: 0
  2197                           ;color.c: 133:             color = 8;
  2198   000682  0E08               	movlw	8
  2199   000684  6FC4               	movwf	detect_color@color& (0+255),b
  2200   000686  EF45  F003         	goto	l44
  2201   00068A                     l52:
  2202   00068A                     l44:
  2203                           
  2204                           ; BSR set to: 0
  2205                           ;color.c: 136:         color_flag = 0;
  2206   00068A  0E00               	movlw	0
  2207   00068C  6FB1               	movwf	_color_flag& (0+255),b
  2208   00068E                     l42:
  2209                           
  2210                           ; BSR set to: 0
  2211                           ;color.c: 138:     return color;
  2212   00068E  51C4               	movf	detect_color@color& (0+255),w,b
  2213   000690                     
  2214                           ; BSR set to: 0
  2215   000690  0012               	return		;funcret
  2216   000692                     __end_of_detect_color:
  2217                           	callstack 0
  2218                           
  2219 ;; *************** function ___xxtofl *****************
  2220 ;; Defined at:
  2221 ;;		line 10 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\xxtofl.c"
  2222 ;; Parameters:    Size  Location     Type
  2223 ;;  sign            1    wreg     unsigned char 
  2224 ;;  val             4    8[COMRAM] long 
  2225 ;; Auto vars:     Size  Location     Type
  2226 ;;  sign            1   16[COMRAM] unsigned char 
  2227 ;;  arg             4   18[COMRAM] unsigned long 
  2228 ;;  exp             1   17[COMRAM] unsigned char 
  2229 ;; Return value:  Size  Location     Type
  2230 ;;                  4    8[COMRAM] unsigned char 
  2231 ;; Registers used:
  2232 ;;		wreg, status,2, status,0
  2233 ;; Tracked objects:
  2234 ;;		On entry : 0/0
  2235 ;;		On exit  : 0/0
  2236 ;;		Unchanged: 0/0
  2237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2238 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2239 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2240 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2241 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2242 ;;Total ram usage:       14 bytes
  2243 ;; Hardware stack levels used: 1
  2244 ;; Hardware stack levels required when called: 7
  2245 ;; This function calls:
  2246 ;;		Nothing
  2247 ;; This function is called by:
  2248 ;;		_detect_color
  2249 ;; This function uses a non-reentrant model
  2250 ;;
  2251                           
  2252                           	psect	text4
  2253   000E56                     __ptext4:
  2254                           	callstack 0
  2255   000E56                     ___xxtofl:
  2256                           	callstack 22
  2257                           
  2258                           ; BSR set to: 0
  2259                           ;incstack = 0
  2260                           ;___xxtofl@sign stored from wreg
  2261   000E56  6E11               	movwf	___xxtofl@sign^0,c
  2262   000E58  5011               	movf	___xxtofl@sign^0,w,c
  2263   000E5A  B4D8               	btfsc	status,2,c
  2264   000E5C  EF32  F007         	goto	u2691
  2265   000E60  EF34  F007         	goto	u2690
  2266   000E64                     u2691:
  2267   000E64  EF56  F007         	goto	l1245
  2268   000E68                     u2690:
  2269   000E68  BE0C               	btfsc	(___xxtofl@val+3)^0,7,c
  2270   000E6A  EF3B  F007         	goto	u2700
  2271   000E6E  EF39  F007         	goto	u2701
  2272   000E72                     u2701:
  2273   000E72  EF56  F007         	goto	l1245
  2274   000E76                     u2700:
  2275   000E76  C009  F00D         	movff	___xxtofl@val,??___xxtofl
  2276   000E7A  C00A  F00E         	movff	___xxtofl@val+1,??___xxtofl+1
  2277   000E7E  C00B  F00F         	movff	___xxtofl@val+2,??___xxtofl+2
  2278   000E82  C00C  F010         	movff	___xxtofl@val+3,??___xxtofl+3
  2279   000E86  1E0D               	comf	??___xxtofl^0,f,c
  2280   000E88  1E0E               	comf	(??___xxtofl+1)^0,f,c
  2281   000E8A  1E0F               	comf	(??___xxtofl+2)^0,f,c
  2282   000E8C  1E10               	comf	(??___xxtofl+3)^0,f,c
  2283   000E8E  2A0D               	incf	??___xxtofl^0,f,c
  2284   000E90  0E00               	movlw	0
  2285   000E92  220E               	addwfc	(??___xxtofl+1)^0,f,c
  2286   000E94  220F               	addwfc	(??___xxtofl+2)^0,f,c
  2287   000E96  2210               	addwfc	(??___xxtofl+3)^0,f,c
  2288   000E98  C00D  F013         	movff	??___xxtofl,___xxtofl@arg
  2289   000E9C  C00E  F014         	movff	??___xxtofl+1,___xxtofl@arg+1
  2290   000EA0  C00F  F015         	movff	??___xxtofl+2,___xxtofl@arg+2
  2291   000EA4  C010  F016         	movff	??___xxtofl+3,___xxtofl@arg+3
  2292   000EA8  EF5E  F007         	goto	l3203
  2293   000EAC                     l1245:
  2294   000EAC  C009  F013         	movff	___xxtofl@val,___xxtofl@arg
  2295   000EB0  C00A  F014         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2296   000EB4  C00B  F015         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2297   000EB8  C00C  F016         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2298   000EBC                     l3203:
  2299   000EBC  5009               	movf	___xxtofl@val^0,w,c
  2300   000EBE  100A               	iorwf	(___xxtofl@val+1)^0,w,c
  2301   000EC0  100B               	iorwf	(___xxtofl@val+2)^0,w,c
  2302   000EC2  100C               	iorwf	(___xxtofl@val+3)^0,w,c
  2303   000EC4  A4D8               	btfss	status,2,c
  2304   000EC6  EF67  F007         	goto	u2711
  2305   000ECA  EF69  F007         	goto	u2710
  2306   000ECE                     u2711:
  2307   000ECE  EF73  F007         	goto	l3209
  2308   000ED2                     u2710:
  2309   000ED2  0E00               	movlw	0
  2310   000ED4  6E09               	movwf	?___xxtofl^0,c
  2311   000ED6  0E00               	movlw	0
  2312   000ED8  6E0A               	movwf	(?___xxtofl+1)^0,c
  2313   000EDA  0E00               	movlw	0
  2314   000EDC  6E0B               	movwf	(?___xxtofl+2)^0,c
  2315   000EDE  0E00               	movlw	0
  2316   000EE0  6E0C               	movwf	(?___xxtofl+3)^0,c
  2317   000EE2  EF04  F008         	goto	l1248
  2318   000EE6                     l3209:
  2319   000EE6  0E96               	movlw	150
  2320   000EE8  6E12               	movwf	___xxtofl@exp^0,c
  2321   000EEA  EF7D  F007         	goto	l3213
  2322   000EEE                     l3211:
  2323   000EEE  2A12               	incf	___xxtofl@exp^0,f,c
  2324   000EF0  90D8               	bcf	status,0,c
  2325   000EF2  3216               	rrcf	(___xxtofl@arg+3)^0,f,c
  2326   000EF4  3215               	rrcf	(___xxtofl@arg+2)^0,f,c
  2327   000EF6  3214               	rrcf	(___xxtofl@arg+1)^0,f,c
  2328   000EF8  3213               	rrcf	___xxtofl@arg^0,f,c
  2329   000EFA                     l3213:
  2330   000EFA  0E00               	movlw	0
  2331   000EFC  1413               	andwf	___xxtofl@arg^0,w,c
  2332   000EFE  6E0D               	movwf	??___xxtofl^0,c
  2333   000F00  0E00               	movlw	0
  2334   000F02  1414               	andwf	(___xxtofl@arg+1)^0,w,c
  2335   000F04  6E0E               	movwf	(??___xxtofl+1)^0,c
  2336   000F06  0E00               	movlw	0
  2337   000F08  1415               	andwf	(___xxtofl@arg+2)^0,w,c
  2338   000F0A  6E0F               	movwf	(??___xxtofl+2)^0,c
  2339   000F0C  0EFE               	movlw	254
  2340   000F0E  1416               	andwf	(___xxtofl@arg+3)^0,w,c
  2341   000F10  6E10               	movwf	(??___xxtofl+3)^0,c
  2342   000F12  500D               	movf	??___xxtofl^0,w,c
  2343   000F14  100E               	iorwf	(??___xxtofl+1)^0,w,c
  2344   000F16  100F               	iorwf	(??___xxtofl+2)^0,w,c
  2345   000F18  1010               	iorwf	(??___xxtofl+3)^0,w,c
  2346   000F1A  A4D8               	btfss	status,2,c
  2347   000F1C  EF92  F007         	goto	u2721
  2348   000F20  EF94  F007         	goto	u2720
  2349   000F24                     u2721:
  2350   000F24  EF77  F007         	goto	l3211
  2351   000F28                     u2720:
  2352   000F28  EFA2  F007         	goto	l1252
  2353   000F2C                     l3215:
  2354   000F2C  2A12               	incf	___xxtofl@exp^0,f,c
  2355   000F2E  0E01               	movlw	1
  2356   000F30  2613               	addwf	___xxtofl@arg^0,f,c
  2357   000F32  0E00               	movlw	0
  2358   000F34  2214               	addwfc	(___xxtofl@arg+1)^0,f,c
  2359   000F36  2215               	addwfc	(___xxtofl@arg+2)^0,f,c
  2360   000F38  2216               	addwfc	(___xxtofl@arg+3)^0,f,c
  2361   000F3A  90D8               	bcf	status,0,c
  2362   000F3C  3216               	rrcf	(___xxtofl@arg+3)^0,f,c
  2363   000F3E  3215               	rrcf	(___xxtofl@arg+2)^0,f,c
  2364   000F40  3214               	rrcf	(___xxtofl@arg+1)^0,f,c
  2365   000F42  3213               	rrcf	___xxtofl@arg^0,f,c
  2366   000F44                     l1252:
  2367   000F44  0E00               	movlw	0
  2368   000F46  1413               	andwf	___xxtofl@arg^0,w,c
  2369   000F48  6E0D               	movwf	??___xxtofl^0,c
  2370   000F4A  0E00               	movlw	0
  2371   000F4C  1414               	andwf	(___xxtofl@arg+1)^0,w,c
  2372   000F4E  6E0E               	movwf	(??___xxtofl+1)^0,c
  2373   000F50  0E00               	movlw	0
  2374   000F52  1415               	andwf	(___xxtofl@arg+2)^0,w,c
  2375   000F54  6E0F               	movwf	(??___xxtofl+2)^0,c
  2376   000F56  0EFF               	movlw	255
  2377   000F58  1416               	andwf	(___xxtofl@arg+3)^0,w,c
  2378   000F5A  6E10               	movwf	(??___xxtofl+3)^0,c
  2379   000F5C  500D               	movf	??___xxtofl^0,w,c
  2380   000F5E  100E               	iorwf	(??___xxtofl+1)^0,w,c
  2381   000F60  100F               	iorwf	(??___xxtofl+2)^0,w,c
  2382   000F62  1010               	iorwf	(??___xxtofl+3)^0,w,c
  2383   000F64  A4D8               	btfss	status,2,c
  2384   000F66  EFB7  F007         	goto	u2731
  2385   000F6A  EFB9  F007         	goto	u2730
  2386   000F6E                     u2731:
  2387   000F6E  EF96  F007         	goto	l3215
  2388   000F72                     u2730:
  2389   000F72  EFC1  F007         	goto	l3223
  2390   000F76                     l3221:
  2391   000F76  0612               	decf	___xxtofl@exp^0,f,c
  2392   000F78  90D8               	bcf	status,0,c
  2393   000F7A  3613               	rlcf	___xxtofl@arg^0,f,c
  2394   000F7C  3614               	rlcf	(___xxtofl@arg+1)^0,f,c
  2395   000F7E  3615               	rlcf	(___xxtofl@arg+2)^0,f,c
  2396   000F80  3616               	rlcf	(___xxtofl@arg+3)^0,f,c
  2397   000F82                     l3223:
  2398   000F82  BE15               	btfsc	(___xxtofl@arg+2)^0,7,c
  2399   000F84  EFC6  F007         	goto	u2741
  2400   000F88  EFC8  F007         	goto	u2740
  2401   000F8C                     u2741:
  2402   000F8C  EFD0  F007         	goto	l1259
  2403   000F90                     u2740:
  2404   000F90  0E02               	movlw	2
  2405   000F92  6012               	cpfslt	___xxtofl@exp^0,c
  2406   000F94  EFCE  F007         	goto	u2751
  2407   000F98  EFD0  F007         	goto	u2750
  2408   000F9C                     u2751:
  2409   000F9C  EFBB  F007         	goto	l3221
  2410   000FA0                     u2750:
  2411   000FA0                     l1259:
  2412   000FA0  B012               	btfsc	___xxtofl@exp^0,0,c
  2413   000FA2  EFD5  F007         	goto	u2761
  2414   000FA6  EFD7  F007         	goto	u2760
  2415   000FAA                     u2761:
  2416   000FAA  EFD8  F007         	goto	l3229
  2417   000FAE                     u2760:
  2418   000FAE  9E15               	bcf	(___xxtofl@arg+2)^0,7,c
  2419   000FB0                     l3229:
  2420   000FB0  90D8               	bcf	status,0,c
  2421   000FB2  3212               	rrcf	___xxtofl@exp^0,f,c
  2422   000FB4  C012  F00D         	movff	___xxtofl@exp,??___xxtofl
  2423   000FB8  6A0E               	clrf	(??___xxtofl+1)^0,c
  2424   000FBA  6A0F               	clrf	(??___xxtofl+2)^0,c
  2425   000FBC  6A10               	clrf	(??___xxtofl+3)^0,c
  2426   000FBE  C00D  F010         	movff	??___xxtofl,??___xxtofl+3
  2427   000FC2  6A0F               	clrf	(??___xxtofl+2)^0,c
  2428   000FC4  6A0E               	clrf	(??___xxtofl+1)^0,c
  2429   000FC6  6A0D               	clrf	??___xxtofl^0,c
  2430   000FC8  500D               	movf	??___xxtofl^0,w,c
  2431   000FCA  1213               	iorwf	___xxtofl@arg^0,f,c
  2432   000FCC  500E               	movf	(??___xxtofl+1)^0,w,c
  2433   000FCE  1214               	iorwf	(___xxtofl@arg+1)^0,f,c
  2434   000FD0  500F               	movf	(??___xxtofl+2)^0,w,c
  2435   000FD2  1215               	iorwf	(___xxtofl@arg+2)^0,f,c
  2436   000FD4  5010               	movf	(??___xxtofl+3)^0,w,c
  2437   000FD6  1216               	iorwf	(___xxtofl@arg+3)^0,f,c
  2438   000FD8  5011               	movf	___xxtofl@sign^0,w,c
  2439   000FDA  B4D8               	btfsc	status,2,c
  2440   000FDC  EFF2  F007         	goto	u2771
  2441   000FE0  EFF4  F007         	goto	u2770
  2442   000FE4                     u2771:
  2443   000FE4  EFFC  F007         	goto	l3239
  2444   000FE8                     u2770:
  2445   000FE8  BE0C               	btfsc	(___xxtofl@val+3)^0,7,c
  2446   000FEA  EFFB  F007         	goto	u2780
  2447   000FEE  EFF9  F007         	goto	u2781
  2448   000FF2                     u2781:
  2449   000FF2  EFFC  F007         	goto	l3239
  2450   000FF6                     u2780:
  2451   000FF6  8E16               	bsf	(___xxtofl@arg+3)^0,7,c
  2452   000FF8                     l3239:
  2453   000FF8  C013  F009         	movff	___xxtofl@arg,?___xxtofl
  2454   000FFC  C014  F00A         	movff	___xxtofl@arg+1,?___xxtofl+1
  2455   001000  C015  F00B         	movff	___xxtofl@arg+2,?___xxtofl+2
  2456   001004  C016  F00C         	movff	___xxtofl@arg+3,?___xxtofl+3
  2457   001008                     l1248:
  2458   001008  0012               	return		;funcret
  2459   00100A                     __end_of___xxtofl:
  2460                           	callstack 0
  2461                           
  2462 ;; *************** function ___fltol *****************
  2463 ;; Defined at:
  2464 ;;		line 43 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\fltol.c"
  2465 ;; Parameters:    Size  Location     Type
  2466 ;;  f1              4   72[COMRAM] unsigned char 
  2467 ;; Auto vars:     Size  Location     Type
  2468 ;;  exp1            1   77[COMRAM] unsigned char 
  2469 ;;  sign1           1   76[COMRAM] unsigned char 
  2470 ;; Return value:  Size  Location     Type
  2471 ;;                  4   72[COMRAM] long 
  2472 ;; Registers used:
  2473 ;;		wreg, status,2, status,0
  2474 ;; Tracked objects:
  2475 ;;		On entry : 0/0
  2476 ;;		On exit  : 0/0
  2477 ;;		Unchanged: 0/0
  2478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2479 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2480 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2481 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2482 ;;      Totals:         6       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2483 ;;Total ram usage:       10 bytes
  2484 ;; Hardware stack levels used: 1
  2485 ;; Hardware stack levels required when called: 7
  2486 ;; This function calls:
  2487 ;;		Nothing
  2488 ;; This function is called by:
  2489 ;;		_detect_color
  2490 ;; This function uses a non-reentrant model
  2491 ;;
  2492                           
  2493                           	psect	text5
  2494   0013EC                     __ptext5:
  2495                           	callstack 0
  2496   0013EC                     ___fltol:
  2497                           	callstack 22
  2498   0013EC  344B               	rlcf	(___fltol@f1+2)^0,w,c
  2499   0013EE  344C               	rlcf	(___fltol@f1+3)^0,w,c
  2500   0013F0  6E4E               	movwf	___fltol@exp1^0,c
  2501   0013F2  504E               	movf	___fltol@exp1^0,w,c
  2502   0013F4  A4D8               	btfss	status,2,c
  2503   0013F6  EFFF  F009         	goto	u3471
  2504   0013FA  EF01  F00A         	goto	u3470
  2505   0013FE                     u3471:
  2506   0013FE  EF0B  F00A         	goto	l3631
  2507   001402                     u3470:
  2508   001402                     l3627:
  2509   001402  0E00               	movlw	0
  2510   001404  6E49               	movwf	?___fltol^0,c
  2511   001406  0E00               	movlw	0
  2512   001408  6E4A               	movwf	(?___fltol+1)^0,c
  2513   00140A  0E00               	movlw	0
  2514   00140C  6E4B               	movwf	(?___fltol+2)^0,c
  2515   00140E  0E00               	movlw	0
  2516   001410  6E4C               	movwf	(?___fltol+3)^0,c
  2517   001412  EF79  F00A         	goto	l887
  2518   001416                     l3631:
  2519   001416  C049  F0B2         	movff	___fltol@f1,??___fltol
  2520   00141A  C04A  F0B3         	movff	___fltol@f1+1,??___fltol+1
  2521   00141E  C04B  F0B4         	movff	___fltol@f1+2,??___fltol+2
  2522   001422  C04C  F0B5         	movff	___fltol@f1+3,??___fltol+3
  2523   001426  0E20               	movlw	32
  2524   001428  EF1C  F00A         	goto	u3480
  2525   00142C                     u3485:
  2526   00142C  0100               	movlb	0	; () banked
  2527   00142E  90D8               	bcf	status,0,c
  2528   001430  33B5               	rrcf	(??___fltol+3)& (0+255),f,b
  2529   001432  33B4               	rrcf	(??___fltol+2)& (0+255),f,b
  2530   001434  33B3               	rrcf	(??___fltol+1)& (0+255),f,b
  2531   001436  33B2               	rrcf	??___fltol& (0+255),f,b
  2532   001438                     u3480:
  2533   001438  2EE8               	decfsz	wreg,f,c
  2534   00143A  EF16  F00A         	goto	u3485
  2535   00143E  51B2               	movf	??___fltol& (0+255),w,b
  2536   001440  6E4D               	movwf	___fltol@sign1^0,c
  2537   001442                     
  2538                           ; BSR set to: 0
  2539   001442  8E4B               	bsf	(___fltol@f1+2)^0,7,c
  2540   001444                     
  2541                           ; BSR set to: 0
  2542   001444  0EFF               	movlw	255
  2543   001446  1649               	andwf	___fltol@f1^0,f,c
  2544   001448  0EFF               	movlw	255
  2545   00144A  164A               	andwf	(___fltol@f1+1)^0,f,c
  2546   00144C  0EFF               	movlw	255
  2547   00144E  164B               	andwf	(___fltol@f1+2)^0,f,c
  2548   001450  0E00               	movlw	0
  2549   001452  164C               	andwf	(___fltol@f1+3)^0,f,c
  2550   001454                     
  2551                           ; BSR set to: 0
  2552   001454  0E96               	movlw	150
  2553   001456  5E4E               	subwf	___fltol@exp1^0,f,c
  2554   001458                     
  2555                           ; BSR set to: 0
  2556   001458  BE4E               	btfsc	___fltol@exp1^0,7,c
  2557   00145A  EF33  F00A         	goto	u3490
  2558   00145E  EF31  F00A         	goto	u3491
  2559   001462                     u3491:
  2560   001462  EF49  F00A         	goto	l3651
  2561   001466                     u3490:
  2562   001466                     
  2563                           ; BSR set to: 0
  2564   001466  504E               	movf	___fltol@exp1^0,w,c
  2565   001468  0A80               	xorlw	128
  2566   00146A  0F97               	addlw	151
  2567   00146C  B0D8               	btfsc	status,0,c
  2568   00146E  EF3B  F00A         	goto	u3501
  2569   001472  EF3D  F00A         	goto	u3500
  2570   001476                     u3501:
  2571   001476  EF3F  F00A         	goto	l3647
  2572   00147A                     u3500:
  2573   00147A  EF01  F00A         	goto	l3627
  2574   00147E                     l3647:
  2575   00147E  90D8               	bcf	status,0,c
  2576   001480  324C               	rrcf	(___fltol@f1+3)^0,f,c
  2577   001482  324B               	rrcf	(___fltol@f1+2)^0,f,c
  2578   001484  324A               	rrcf	(___fltol@f1+1)^0,f,c
  2579   001486  3249               	rrcf	___fltol@f1^0,f,c
  2580   001488  3E4E               	incfsz	___fltol@exp1^0,f,c
  2581   00148A  EF3F  F00A         	goto	l3647
  2582   00148E  EF61  F00A         	goto	l3661
  2583   001492                     l3651:
  2584                           
  2585                           ; BSR set to: 0
  2586   001492  0E1F               	movlw	31
  2587   001494  644E               	cpfsgt	___fltol@exp1^0,c
  2588   001496  EF4F  F00A         	goto	u3511
  2589   00149A  EF51  F00A         	goto	u3510
  2590   00149E                     u3511:
  2591   00149E  EF59  F00A         	goto	l3659
  2592   0014A2                     u3510:
  2593   0014A2  EF01  F00A         	goto	l3627
  2594   0014A6                     l3657:
  2595   0014A6  90D8               	bcf	status,0,c
  2596   0014A8  3649               	rlcf	___fltol@f1^0,f,c
  2597   0014AA  364A               	rlcf	(___fltol@f1+1)^0,f,c
  2598   0014AC  364B               	rlcf	(___fltol@f1+2)^0,f,c
  2599   0014AE  364C               	rlcf	(___fltol@f1+3)^0,f,c
  2600   0014B0  064E               	decf	___fltol@exp1^0,f,c
  2601   0014B2                     l3659:
  2602   0014B2  504E               	movf	___fltol@exp1^0,w,c
  2603   0014B4  A4D8               	btfss	status,2,c
  2604   0014B6  EF5F  F00A         	goto	u3521
  2605   0014BA  EF61  F00A         	goto	u3520
  2606   0014BE                     u3521:
  2607   0014BE  EF53  F00A         	goto	l3657
  2608   0014C2                     u3520:
  2609   0014C2                     l3661:
  2610   0014C2  504D               	movf	___fltol@sign1^0,w,c
  2611   0014C4  B4D8               	btfsc	status,2,c
  2612   0014C6  EF67  F00A         	goto	u3531
  2613   0014CA  EF69  F00A         	goto	u3530
  2614   0014CE                     u3531:
  2615   0014CE  EF71  F00A         	goto	l3665
  2616   0014D2                     u3530:
  2617   0014D2  1E4C               	comf	(___fltol@f1+3)^0,f,c
  2618   0014D4  1E4B               	comf	(___fltol@f1+2)^0,f,c
  2619   0014D6  1E4A               	comf	(___fltol@f1+1)^0,f,c
  2620   0014D8  6C49               	negf	___fltol@f1^0,c
  2621   0014DA  0E00               	movlw	0
  2622   0014DC  224A               	addwfc	(___fltol@f1+1)^0,f,c
  2623   0014DE  224B               	addwfc	(___fltol@f1+2)^0,f,c
  2624   0014E0  224C               	addwfc	(___fltol@f1+3)^0,f,c
  2625   0014E2                     l3665:
  2626   0014E2  C049  F049         	movff	___fltol@f1,?___fltol
  2627   0014E6  C04A  F04A         	movff	___fltol@f1+1,?___fltol+1
  2628   0014EA  C04B  F04B         	movff	___fltol@f1+2,?___fltol+2
  2629   0014EE  C04C  F04C         	movff	___fltol@f1+3,?___fltol+3
  2630   0014F2                     l887:
  2631   0014F2  0012               	return		;funcret
  2632   0014F4                     __end_of___fltol:
  2633                           	callstack 0
  2634                           
  2635 ;; *************** function ___flmul *****************
  2636 ;; Defined at:
  2637 ;;		line 8 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\sprcmul.c"
  2638 ;; Parameters:    Size  Location     Type
  2639 ;;  b               4   47[COMRAM] long 
  2640 ;;  a               4   51[COMRAM] long 
  2641 ;; Auto vars:     Size  Location     Type
  2642 ;;  prod            4   66[COMRAM] struct .
  2643 ;;  grs             4   60[COMRAM] unsigned long 
  2644 ;;  temp            2   70[COMRAM] struct .
  2645 ;;  bexp            1   65[COMRAM] unsigned char 
  2646 ;;  aexp            1   64[COMRAM] unsigned char 
  2647 ;;  sign            1   59[COMRAM] unsigned char 
  2648 ;; Return value:  Size  Location     Type
  2649 ;;                  4   47[COMRAM] unsigned char 
  2650 ;; Registers used:
  2651 ;;		wreg, status,2, status,0, prodl, prodh
  2652 ;; Tracked objects:
  2653 ;;		On entry : 0/0
  2654 ;;		On exit  : 0/0
  2655 ;;		Unchanged: 0/0
  2656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2657 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2658 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2659 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2660 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2661 ;;Total ram usage:       25 bytes
  2662 ;; Hardware stack levels used: 1
  2663 ;; Hardware stack levels required when called: 7
  2664 ;; This function calls:
  2665 ;;		Nothing
  2666 ;; This function is called by:
  2667 ;;		_detect_color
  2668 ;; This function uses a non-reentrant model
  2669 ;;
  2670                           
  2671                           	psect	text6
  2672   000692                     __ptext6:
  2673                           	callstack 0
  2674   000692                     ___flmul:
  2675                           	callstack 22
  2676   000692  5033               	movf	(___flmul@b+3)^0,w,c
  2677   000694  0B80               	andlw	128
  2678   000696  6E3C               	movwf	___flmul@sign^0,c
  2679   000698  5033               	movf	(___flmul@b+3)^0,w,c
  2680   00069A  2433               	addwf	(___flmul@b+3)^0,w,c
  2681   00069C  6E42               	movwf	___flmul@bexp^0,c
  2682   00069E  AE32               	btfss	(___flmul@b+2)^0,7,c
  2683   0006A0  EF54  F003         	goto	u2431
  2684   0006A4  EF56  F003         	goto	u2430
  2685   0006A8                     u2431:
  2686   0006A8  EF57  F003         	goto	l3029
  2687   0006AC                     u2430:
  2688   0006AC  8042               	bsf	___flmul@bexp^0,0,c
  2689   0006AE                     l3029:
  2690   0006AE  5042               	movf	___flmul@bexp^0,w,c
  2691   0006B0  B4D8               	btfsc	status,2,c
  2692   0006B2  EF5D  F003         	goto	u2441
  2693   0006B6  EF5F  F003         	goto	u2440
  2694   0006BA                     u2441:
  2695   0006BA  EF72  F003         	goto	l3037
  2696   0006BE                     u2440:
  2697   0006BE  2842               	incf	___flmul@bexp^0,w,c
  2698   0006C0  A4D8               	btfss	status,2,c
  2699   0006C2  EF65  F003         	goto	u2451
  2700   0006C6  EF67  F003         	goto	u2450
  2701   0006CA                     u2451:
  2702   0006CA  EF6F  F003         	goto	l3035
  2703   0006CE                     u2450:
  2704   0006CE  0E00               	movlw	0
  2705   0006D0  6E30               	movwf	___flmul@b^0,c
  2706   0006D2  0E00               	movlw	0
  2707   0006D4  6E31               	movwf	(___flmul@b+1)^0,c
  2708   0006D6  0E00               	movlw	0
  2709   0006D8  6E32               	movwf	(___flmul@b+2)^0,c
  2710   0006DA  0E00               	movlw	0
  2711   0006DC  6E33               	movwf	(___flmul@b+3)^0,c
  2712   0006DE                     l3035:
  2713   0006DE  8E32               	bsf	(___flmul@b+2)^0,7,c
  2714   0006E0  EF7A  F003         	goto	l3039
  2715   0006E4                     l3037:
  2716   0006E4  0E00               	movlw	0
  2717   0006E6  6E30               	movwf	___flmul@b^0,c
  2718   0006E8  0E00               	movlw	0
  2719   0006EA  6E31               	movwf	(___flmul@b+1)^0,c
  2720   0006EC  0E00               	movlw	0
  2721   0006EE  6E32               	movwf	(___flmul@b+2)^0,c
  2722   0006F0  0E00               	movlw	0
  2723   0006F2  6E33               	movwf	(___flmul@b+3)^0,c
  2724   0006F4                     l3039:
  2725   0006F4  5037               	movf	(___flmul@a+3)^0,w,c
  2726   0006F6  0B80               	andlw	128
  2727   0006F8  1A3C               	xorwf	___flmul@sign^0,f,c
  2728   0006FA  5037               	movf	(___flmul@a+3)^0,w,c
  2729   0006FC  2437               	addwf	(___flmul@a+3)^0,w,c
  2730   0006FE  6E41               	movwf	___flmul@aexp^0,c
  2731   000700  AE36               	btfss	(___flmul@a+2)^0,7,c
  2732   000702  EF85  F003         	goto	u2461
  2733   000706  EF87  F003         	goto	u2460
  2734   00070A                     u2461:
  2735   00070A  EF88  F003         	goto	l3047
  2736   00070E                     u2460:
  2737   00070E  8041               	bsf	___flmul@aexp^0,0,c
  2738   000710                     l3047:
  2739   000710  5041               	movf	___flmul@aexp^0,w,c
  2740   000712  B4D8               	btfsc	status,2,c
  2741   000714  EF8E  F003         	goto	u2471
  2742   000718  EF90  F003         	goto	u2470
  2743   00071C                     u2471:
  2744   00071C  EFA3  F003         	goto	l3055
  2745   000720                     u2470:
  2746   000720  2841               	incf	___flmul@aexp^0,w,c
  2747   000722  A4D8               	btfss	status,2,c
  2748   000724  EF96  F003         	goto	u2481
  2749   000728  EF98  F003         	goto	u2480
  2750   00072C                     u2481:
  2751   00072C  EFA0  F003         	goto	l3053
  2752   000730                     u2480:
  2753   000730  0E00               	movlw	0
  2754   000732  6E34               	movwf	___flmul@a^0,c
  2755   000734  0E00               	movlw	0
  2756   000736  6E35               	movwf	(___flmul@a+1)^0,c
  2757   000738  0E00               	movlw	0
  2758   00073A  6E36               	movwf	(___flmul@a+2)^0,c
  2759   00073C  0E00               	movlw	0
  2760   00073E  6E37               	movwf	(___flmul@a+3)^0,c
  2761   000740                     l3053:
  2762   000740  8E36               	bsf	(___flmul@a+2)^0,7,c
  2763   000742  EFAB  F003         	goto	l1204
  2764   000746                     l3055:
  2765   000746  0E00               	movlw	0
  2766   000748  6E34               	movwf	___flmul@a^0,c
  2767   00074A  0E00               	movlw	0
  2768   00074C  6E35               	movwf	(___flmul@a+1)^0,c
  2769   00074E  0E00               	movlw	0
  2770   000750  6E36               	movwf	(___flmul@a+2)^0,c
  2771   000752  0E00               	movlw	0
  2772   000754  6E37               	movwf	(___flmul@a+3)^0,c
  2773   000756                     l1204:
  2774   000756  5041               	movf	___flmul@aexp^0,w,c
  2775   000758  B4D8               	btfsc	status,2,c
  2776   00075A  EFB1  F003         	goto	u2491
  2777   00075E  EFB3  F003         	goto	u2490
  2778   000762                     u2491:
  2779   000762  EFBB  F003         	goto	l3059
  2780   000766                     u2490:
  2781   000766  5042               	movf	___flmul@bexp^0,w,c
  2782   000768  A4D8               	btfss	status,2,c
  2783   00076A  EFB9  F003         	goto	u2501
  2784   00076E  EFBB  F003         	goto	u2500
  2785   000772                     u2501:
  2786   000772  EFC5  F003         	goto	l3063
  2787   000776                     u2500:
  2788   000776                     l3059:
  2789   000776  0E00               	movlw	0
  2790   000778  6E30               	movwf	?___flmul^0,c
  2791   00077A  0E00               	movlw	0
  2792   00077C  6E31               	movwf	(?___flmul+1)^0,c
  2793   00077E  0E00               	movlw	0
  2794   000780  6E32               	movwf	(?___flmul+2)^0,c
  2795   000782  0E00               	movlw	0
  2796   000784  6E33               	movwf	(?___flmul+3)^0,c
  2797   000786  EF5D  F005         	goto	l1208
  2798   00078A                     l3063:
  2799   00078A  5036               	movf	(___flmul@a+2)^0,w,c
  2800   00078C  0230               	mulwf	___flmul@b^0,c
  2801   00078E  CFF3 F047          	movff	prodl,___flmul@temp
  2802   000792  CFF4 F048          	movff	prodh,___flmul@temp+1
  2803   000796  5047               	movf	___flmul@temp^0,w,c
  2804   000798  6E3D               	movwf	___flmul@grs^0,c
  2805   00079A  6A3E               	clrf	(___flmul@grs+1)^0,c
  2806   00079C  6A3F               	clrf	(___flmul@grs+2)^0,c
  2807   00079E  6A40               	clrf	(___flmul@grs+3)^0,c
  2808   0007A0  5048               	movf	(___flmul@temp+1)^0,w,c
  2809   0007A2  6E43               	movwf	___flmul@prod^0,c
  2810   0007A4  6A44               	clrf	(___flmul@prod+1)^0,c
  2811   0007A6  6A45               	clrf	(___flmul@prod+2)^0,c
  2812   0007A8  6A46               	clrf	(___flmul@prod+3)^0,c
  2813   0007AA  5035               	movf	(___flmul@a+1)^0,w,c
  2814   0007AC  0231               	mulwf	(___flmul@b+1)^0,c
  2815   0007AE  CFF3 F047          	movff	prodl,___flmul@temp
  2816   0007B2  CFF4 F048          	movff	prodh,___flmul@temp+1
  2817   0007B6  5047               	movf	___flmul@temp^0,w,c
  2818   0007B8  263D               	addwf	___flmul@grs^0,f,c
  2819   0007BA  0E00               	movlw	0
  2820   0007BC  223E               	addwfc	(___flmul@grs+1)^0,f,c
  2821   0007BE  223F               	addwfc	(___flmul@grs+2)^0,f,c
  2822   0007C0  2240               	addwfc	(___flmul@grs+3)^0,f,c
  2823   0007C2  5048               	movf	(___flmul@temp+1)^0,w,c
  2824   0007C4  2643               	addwf	___flmul@prod^0,f,c
  2825   0007C6  0E00               	movlw	0
  2826   0007C8  2244               	addwfc	(___flmul@prod+1)^0,f,c
  2827   0007CA  2245               	addwfc	(___flmul@prod+2)^0,f,c
  2828   0007CC  2246               	addwfc	(___flmul@prod+3)^0,f,c
  2829   0007CE  5034               	movf	___flmul@a^0,w,c
  2830   0007D0  0232               	mulwf	(___flmul@b+2)^0,c
  2831   0007D2  CFF3 F047          	movff	prodl,___flmul@temp
  2832   0007D6  CFF4 F048          	movff	prodh,___flmul@temp+1
  2833   0007DA  5047               	movf	___flmul@temp^0,w,c
  2834   0007DC  263D               	addwf	___flmul@grs^0,f,c
  2835   0007DE  0E00               	movlw	0
  2836   0007E0  223E               	addwfc	(___flmul@grs+1)^0,f,c
  2837   0007E2  223F               	addwfc	(___flmul@grs+2)^0,f,c
  2838   0007E4  2240               	addwfc	(___flmul@grs+3)^0,f,c
  2839   0007E6  5048               	movf	(___flmul@temp+1)^0,w,c
  2840   0007E8  2643               	addwf	___flmul@prod^0,f,c
  2841   0007EA  0E00               	movlw	0
  2842   0007EC  2244               	addwfc	(___flmul@prod+1)^0,f,c
  2843   0007EE  2245               	addwfc	(___flmul@prod+2)^0,f,c
  2844   0007F0  2246               	addwfc	(___flmul@prod+3)^0,f,c
  2845   0007F2  C03F  F040         	movff	___flmul@grs+2,___flmul@grs+3
  2846   0007F6  C03E  F03F         	movff	___flmul@grs+1,___flmul@grs+2
  2847   0007FA  C03D  F03E         	movff	___flmul@grs,___flmul@grs+1
  2848   0007FE  6A3D               	clrf	___flmul@grs^0,c
  2849   000800  5034               	movf	___flmul@a^0,w,c
  2850   000802  0231               	mulwf	(___flmul@b+1)^0,c
  2851   000804  CFF3 F047          	movff	prodl,___flmul@temp
  2852   000808  CFF4 F048          	movff	prodh,___flmul@temp+1
  2853   00080C  5047               	movf	___flmul@temp^0,w,c
  2854   00080E  263D               	addwf	___flmul@grs^0,f,c
  2855   000810  5048               	movf	(___flmul@temp+1)^0,w,c
  2856   000812  223E               	addwfc	(___flmul@grs+1)^0,f,c
  2857   000814  0E00               	movlw	0
  2858   000816  223F               	addwfc	(___flmul@grs+2)^0,f,c
  2859   000818  0E00               	movlw	0
  2860   00081A  2240               	addwfc	(___flmul@grs+3)^0,f,c
  2861   00081C  5035               	movf	(___flmul@a+1)^0,w,c
  2862   00081E  0230               	mulwf	___flmul@b^0,c
  2863   000820  CFF3 F047          	movff	prodl,___flmul@temp
  2864   000824  CFF4 F048          	movff	prodh,___flmul@temp+1
  2865   000828  5047               	movf	___flmul@temp^0,w,c
  2866   00082A  263D               	addwf	___flmul@grs^0,f,c
  2867   00082C  5048               	movf	(___flmul@temp+1)^0,w,c
  2868   00082E  223E               	addwfc	(___flmul@grs+1)^0,f,c
  2869   000830  0E00               	movlw	0
  2870   000832  223F               	addwfc	(___flmul@grs+2)^0,f,c
  2871   000834  0E00               	movlw	0
  2872   000836  2240               	addwfc	(___flmul@grs+3)^0,f,c
  2873   000838  C03F  F040         	movff	___flmul@grs+2,___flmul@grs+3
  2874   00083C  C03E  F03F         	movff	___flmul@grs+1,___flmul@grs+2
  2875   000840  C03D  F03E         	movff	___flmul@grs,___flmul@grs+1
  2876   000844  6A3D               	clrf	___flmul@grs^0,c
  2877   000846  5034               	movf	___flmul@a^0,w,c
  2878   000848  0230               	mulwf	___flmul@b^0,c
  2879   00084A  CFF3 F047          	movff	prodl,___flmul@temp
  2880   00084E  CFF4 F048          	movff	prodh,___flmul@temp+1
  2881   000852  5047               	movf	___flmul@temp^0,w,c
  2882   000854  263D               	addwf	___flmul@grs^0,f,c
  2883   000856  5048               	movf	(___flmul@temp+1)^0,w,c
  2884   000858  223E               	addwfc	(___flmul@grs+1)^0,f,c
  2885   00085A  0E00               	movlw	0
  2886   00085C  223F               	addwfc	(___flmul@grs+2)^0,f,c
  2887   00085E  0E00               	movlw	0
  2888   000860  2240               	addwfc	(___flmul@grs+3)^0,f,c
  2889   000862  5036               	movf	(___flmul@a+2)^0,w,c
  2890   000864  0231               	mulwf	(___flmul@b+1)^0,c
  2891   000866  CFF3 F047          	movff	prodl,___flmul@temp
  2892   00086A  CFF4 F048          	movff	prodh,___flmul@temp+1
  2893   00086E  5047               	movf	___flmul@temp^0,w,c
  2894   000870  2643               	addwf	___flmul@prod^0,f,c
  2895   000872  5048               	movf	(___flmul@temp+1)^0,w,c
  2896   000874  2244               	addwfc	(___flmul@prod+1)^0,f,c
  2897   000876  0E00               	movlw	0
  2898   000878  2245               	addwfc	(___flmul@prod+2)^0,f,c
  2899   00087A  0E00               	movlw	0
  2900   00087C  2246               	addwfc	(___flmul@prod+3)^0,f,c
  2901   00087E  5035               	movf	(___flmul@a+1)^0,w,c
  2902   000880  0232               	mulwf	(___flmul@b+2)^0,c
  2903   000882  CFF3 F047          	movff	prodl,___flmul@temp
  2904   000886  CFF4 F048          	movff	prodh,___flmul@temp+1
  2905   00088A  5047               	movf	___flmul@temp^0,w,c
  2906   00088C  2643               	addwf	___flmul@prod^0,f,c
  2907   00088E  5048               	movf	(___flmul@temp+1)^0,w,c
  2908   000890  2244               	addwfc	(___flmul@prod+1)^0,f,c
  2909   000892  0E00               	movlw	0
  2910   000894  2245               	addwfc	(___flmul@prod+2)^0,f,c
  2911   000896  0E00               	movlw	0
  2912   000898  2246               	addwfc	(___flmul@prod+3)^0,f,c
  2913   00089A  5036               	movf	(___flmul@a+2)^0,w,c
  2914   00089C  0232               	mulwf	(___flmul@b+2)^0,c
  2915   00089E  CFF3 F047          	movff	prodl,___flmul@temp
  2916   0008A2  CFF4 F048          	movff	prodh,___flmul@temp+1
  2917   0008A6  5047               	movf	___flmul@temp^0,w,c
  2918   0008A8  6E38               	movwf	??___flmul^0,c
  2919   0008AA  5048               	movf	(___flmul@temp+1)^0,w,c
  2920   0008AC  6E39               	movwf	(??___flmul+1)^0,c
  2921   0008AE  6A3A               	clrf	(??___flmul+2)^0,c
  2922   0008B0  6A3B               	clrf	(??___flmul+3)^0,c
  2923   0008B2  C03A  F03B         	movff	??___flmul+2,??___flmul+3
  2924   0008B6  C039  F03A         	movff	??___flmul+1,??___flmul+2
  2925   0008BA  C038  F039         	movff	??___flmul,??___flmul+1
  2926   0008BE  6A38               	clrf	??___flmul^0,c
  2927   0008C0  5038               	movf	??___flmul^0,w,c
  2928   0008C2  2643               	addwf	___flmul@prod^0,f,c
  2929   0008C4  5039               	movf	(??___flmul+1)^0,w,c
  2930   0008C6  2244               	addwfc	(___flmul@prod+1)^0,f,c
  2931   0008C8  503A               	movf	(??___flmul+2)^0,w,c
  2932   0008CA  2245               	addwfc	(___flmul@prod+2)^0,f,c
  2933   0008CC  503B               	movf	(??___flmul+3)^0,w,c
  2934   0008CE  2246               	addwfc	(___flmul@prod+3)^0,f,c
  2935   0008D0  C03D  F038         	movff	___flmul@grs,??___flmul
  2936   0008D4  C03E  F039         	movff	___flmul@grs+1,??___flmul+1
  2937   0008D8  C03F  F03A         	movff	___flmul@grs+2,??___flmul+2
  2938   0008DC  C040  F03B         	movff	___flmul@grs+3,??___flmul+3
  2939   0008E0  0E19               	movlw	25
  2940   0008E2  EF78  F004         	goto	u2510
  2941   0008E6                     u2515:
  2942   0008E6  90D8               	bcf	status,0,c
  2943   0008E8  323B               	rrcf	(??___flmul+3)^0,f,c
  2944   0008EA  323A               	rrcf	(??___flmul+2)^0,f,c
  2945   0008EC  3239               	rrcf	(??___flmul+1)^0,f,c
  2946   0008EE  3238               	rrcf	??___flmul^0,f,c
  2947   0008F0                     u2510:
  2948   0008F0  2EE8               	decfsz	wreg,f,c
  2949   0008F2  EF73  F004         	goto	u2515
  2950   0008F6  5038               	movf	??___flmul^0,w,c
  2951   0008F8  2643               	addwf	___flmul@prod^0,f,c
  2952   0008FA  5039               	movf	(??___flmul+1)^0,w,c
  2953   0008FC  2244               	addwfc	(___flmul@prod+1)^0,f,c
  2954   0008FE  503A               	movf	(??___flmul+2)^0,w,c
  2955   000900  2245               	addwfc	(___flmul@prod+2)^0,f,c
  2956   000902  503B               	movf	(??___flmul+3)^0,w,c
  2957   000904  2246               	addwfc	(___flmul@prod+3)^0,f,c
  2958   000906  C03F  F040         	movff	___flmul@grs+2,___flmul@grs+3
  2959   00090A  C03E  F03F         	movff	___flmul@grs+1,___flmul@grs+2
  2960   00090E  C03D  F03E         	movff	___flmul@grs,___flmul@grs+1
  2961   000912  6A3D               	clrf	___flmul@grs^0,c
  2962   000914  5041               	movf	___flmul@aexp^0,w,c
  2963   000916  C042  F038         	movff	___flmul@bexp,??___flmul
  2964   00091A  6A39               	clrf	(??___flmul+1)^0,c
  2965   00091C  2638               	addwf	??___flmul^0,f,c
  2966   00091E  0E00               	movlw	0
  2967   000920  2239               	addwfc	(??___flmul+1)^0,f,c
  2968   000922  0E82               	movlw	130
  2969   000924  2438               	addwf	??___flmul^0,w,c
  2970   000926  6E47               	movwf	___flmul@temp^0,c
  2971   000928  0EFF               	movlw	255
  2972   00092A  2039               	addwfc	(??___flmul+1)^0,w,c
  2973   00092C  6E48               	movwf	(___flmul@temp+1)^0,c
  2974   00092E  EFAE  F004         	goto	l3111
  2975   000932                     l3105:
  2976   000932  90D8               	bcf	status,0,c
  2977   000934  3643               	rlcf	___flmul@prod^0,f,c
  2978   000936  3644               	rlcf	(___flmul@prod+1)^0,f,c
  2979   000938  3645               	rlcf	(___flmul@prod+2)^0,f,c
  2980   00093A  3646               	rlcf	(___flmul@prod+3)^0,f,c
  2981   00093C  AE40               	btfss	(___flmul@grs+3)^0,7,c
  2982   00093E  EFA3  F004         	goto	u2521
  2983   000942  EFA5  F004         	goto	u2520
  2984   000946                     u2521:
  2985   000946  EFA6  F004         	goto	l1211
  2986   00094A                     u2520:
  2987   00094A  8043               	bsf	___flmul@prod^0,0,c
  2988   00094C                     l1211:
  2989   00094C  90D8               	bcf	status,0,c
  2990   00094E  363D               	rlcf	___flmul@grs^0,f,c
  2991   000950  363E               	rlcf	(___flmul@grs+1)^0,f,c
  2992   000952  363F               	rlcf	(___flmul@grs+2)^0,f,c
  2993   000954  3640               	rlcf	(___flmul@grs+3)^0,f,c
  2994   000956  0647               	decf	___flmul@temp^0,f,c
  2995   000958  A0D8               	btfss	status,0,c
  2996   00095A  0648               	decf	(___flmul@temp+1)^0,f,c
  2997   00095C                     l3111:
  2998   00095C  AE45               	btfss	(___flmul@prod+2)^0,7,c
  2999   00095E  EFB3  F004         	goto	u2531
  3000   000962  EFB5  F004         	goto	u2530
  3001   000966                     u2531:
  3002   000966  EF99  F004         	goto	l3105
  3003   00096A                     u2530:
  3004   00096A  0E00               	movlw	0
  3005   00096C  6E41               	movwf	___flmul@aexp^0,c
  3006   00096E  AE40               	btfss	(___flmul@grs+3)^0,7,c
  3007   000970  EFBC  F004         	goto	u2541
  3008   000974  EFBE  F004         	goto	u2540
  3009   000978                     u2541:
  3010   000978  EFE2  F004         	goto	l1213
  3011   00097C                     u2540:
  3012   00097C  0EFF               	movlw	255
  3013   00097E  143D               	andwf	___flmul@grs^0,w,c
  3014   000980  6E38               	movwf	??___flmul^0,c
  3015   000982  0EFF               	movlw	255
  3016   000984  143E               	andwf	(___flmul@grs+1)^0,w,c
  3017   000986  6E39               	movwf	(??___flmul+1)^0,c
  3018   000988  0EFF               	movlw	255
  3019   00098A  143F               	andwf	(___flmul@grs+2)^0,w,c
  3020   00098C  6E3A               	movwf	(??___flmul+2)^0,c
  3021   00098E  0E7F               	movlw	127
  3022   000990  1440               	andwf	(___flmul@grs+3)^0,w,c
  3023   000992  6E3B               	movwf	(??___flmul+3)^0,c
  3024   000994  5038               	movf	??___flmul^0,w,c
  3025   000996  1039               	iorwf	(??___flmul+1)^0,w,c
  3026   000998  103A               	iorwf	(??___flmul+2)^0,w,c
  3027   00099A  103B               	iorwf	(??___flmul+3)^0,w,c
  3028   00099C  B4D8               	btfsc	status,2,c
  3029   00099E  EFD3  F004         	goto	u2551
  3030   0009A2  EFD5  F004         	goto	u2550
  3031   0009A6                     u2551:
  3032   0009A6  EFD9  F004         	goto	l1214
  3033   0009AA                     u2550:
  3034   0009AA                     l3119:
  3035   0009AA  0E01               	movlw	1
  3036   0009AC  6E41               	movwf	___flmul@aexp^0,c
  3037   0009AE  EFE2  F004         	goto	l1213
  3038   0009B2                     l1214:
  3039   0009B2  A043               	btfss	___flmul@prod^0,0,c
  3040   0009B4  EFDE  F004         	goto	u2561
  3041   0009B8  EFE0  F004         	goto	u2560
  3042   0009BC                     u2561:
  3043   0009BC  EFE2  F004         	goto	l1213
  3044   0009C0                     u2560:
  3045   0009C0  EFD5  F004         	goto	l3119
  3046   0009C4                     l1213:
  3047   0009C4  5041               	movf	___flmul@aexp^0,w,c
  3048   0009C6  B4D8               	btfsc	status,2,c
  3049   0009C8  EFE8  F004         	goto	u2571
  3050   0009CC  EFEA  F004         	goto	u2570
  3051   0009D0                     u2571:
  3052   0009D0  EF0E  F005         	goto	l3131
  3053   0009D4                     u2570:
  3054   0009D4  0E01               	movlw	1
  3055   0009D6  2643               	addwf	___flmul@prod^0,f,c
  3056   0009D8  0E00               	movlw	0
  3057   0009DA  2244               	addwfc	(___flmul@prod+1)^0,f,c
  3058   0009DC  2245               	addwfc	(___flmul@prod+2)^0,f,c
  3059   0009DE  2246               	addwfc	(___flmul@prod+3)^0,f,c
  3060   0009E0  A046               	btfss	(___flmul@prod+3)^0,0,c
  3061   0009E2  EFF5  F004         	goto	u2581
  3062   0009E6  EFF7  F004         	goto	u2580
  3063   0009EA                     u2581:
  3064   0009EA  EF0E  F005         	goto	l3131
  3065   0009EE                     u2580:
  3066   0009EE  C043  F038         	movff	___flmul@prod,??___flmul
  3067   0009F2  C044  F039         	movff	___flmul@prod+1,??___flmul+1
  3068   0009F6  C045  F03A         	movff	___flmul@prod+2,??___flmul+2
  3069   0009FA  C046  F03B         	movff	___flmul@prod+3,??___flmul+3
  3070   0009FE  343B               	rlcf	(??___flmul+3)^0,w,c
  3071   000A00  323B               	rrcf	(??___flmul+3)^0,f,c
  3072   000A02  323A               	rrcf	(??___flmul+2)^0,f,c
  3073   000A04  3239               	rrcf	(??___flmul+1)^0,f,c
  3074   000A06  3238               	rrcf	??___flmul^0,f,c
  3075   000A08  C038  F043         	movff	??___flmul,___flmul@prod
  3076   000A0C  C039  F044         	movff	??___flmul+1,___flmul@prod+1
  3077   000A10  C03A  F045         	movff	??___flmul+2,___flmul@prod+2
  3078   000A14  C03B  F046         	movff	??___flmul+3,___flmul@prod+3
  3079   000A18  4A47               	infsnz	___flmul@temp^0,f,c
  3080   000A1A  2A48               	incf	(___flmul@temp+1)^0,f,c
  3081   000A1C                     l3131:
  3082   000A1C  BE48               	btfsc	(___flmul@temp+1)^0,7,c
  3083   000A1E  EF19  F005         	goto	u2591
  3084   000A22  5048               	movf	(___flmul@temp+1)^0,w,c
  3085   000A24  E108               	bnz	u2590
  3086   000A26  2847               	incf	___flmul@temp^0,w,c
  3087   000A28  A0D8               	btfss	status,0,c
  3088   000A2A  EF19  F005         	goto	u2591
  3089   000A2E  EF1B  F005         	goto	u2590
  3090   000A32                     u2591:
  3091   000A32  EF25  F005         	goto	l3135
  3092   000A36                     u2590:
  3093   000A36  0E00               	movlw	0
  3094   000A38  6E43               	movwf	___flmul@prod^0,c
  3095   000A3A  0E00               	movlw	0
  3096   000A3C  6E44               	movwf	(___flmul@prod+1)^0,c
  3097   000A3E  0E80               	movlw	128
  3098   000A40  6E45               	movwf	(___flmul@prod+2)^0,c
  3099   000A42  0E7F               	movlw	127
  3100   000A44  6E46               	movwf	(___flmul@prod+3)^0,c
  3101   000A46  EF53  F005         	goto	l3147
  3102   000A4A                     l3135:
  3103   000A4A  BE48               	btfsc	(___flmul@temp+1)^0,7,c
  3104   000A4C  EF32  F005         	goto	u2600
  3105   000A50  5048               	movf	(___flmul@temp+1)^0,w,c
  3106   000A52  E106               	bnz	u2601
  3107   000A54  0447               	decf	___flmul@temp^0,w,c
  3108   000A56  B0D8               	btfsc	status,0,c
  3109   000A58  EF30  F005         	goto	u2601
  3110   000A5C  EF32  F005         	goto	u2600
  3111   000A60                     u2601:
  3112   000A60  EF3E  F005         	goto	l1221
  3113   000A64                     u2600:
  3114   000A64  0E00               	movlw	0
  3115   000A66  6E43               	movwf	___flmul@prod^0,c
  3116   000A68  0E00               	movlw	0
  3117   000A6A  6E44               	movwf	(___flmul@prod+1)^0,c
  3118   000A6C  0E00               	movlw	0
  3119   000A6E  6E45               	movwf	(___flmul@prod+2)^0,c
  3120   000A70  0E00               	movlw	0
  3121   000A72  6E46               	movwf	(___flmul@prod+3)^0,c
  3122   000A74  0E00               	movlw	0
  3123   000A76  6E3C               	movwf	___flmul@sign^0,c
  3124   000A78  EF53  F005         	goto	l3147
  3125   000A7C                     l1221:
  3126   000A7C  C047  F042         	movff	___flmul@temp,___flmul@bexp
  3127   000A80  0EFF               	movlw	255
  3128   000A82  1643               	andwf	___flmul@prod^0,f,c
  3129   000A84  0EFF               	movlw	255
  3130   000A86  1644               	andwf	(___flmul@prod+1)^0,f,c
  3131   000A88  0E7F               	movlw	127
  3132   000A8A  1645               	andwf	(___flmul@prod+2)^0,f,c
  3133   000A8C  0E00               	movlw	0
  3134   000A8E  1646               	andwf	(___flmul@prod+3)^0,f,c
  3135   000A90  A042               	btfss	___flmul@bexp^0,0,c
  3136   000A92  EF4D  F005         	goto	u2611
  3137   000A96  EF4F  F005         	goto	u2610
  3138   000A9A                     u2611:
  3139   000A9A  EF50  F005         	goto	l3145
  3140   000A9E                     u2610:
  3141   000A9E  8E45               	bsf	(___flmul@prod+2)^0,7,c
  3142   000AA0                     l3145:
  3143   000AA0  90D8               	bcf	status,0,c
  3144   000AA2  3042               	rrcf	___flmul@bexp^0,w,c
  3145   000AA4  6E46               	movwf	(___flmul@prod+3)^0,c
  3146   000AA6                     l3147:
  3147   000AA6  503C               	movf	___flmul@sign^0,w,c
  3148   000AA8  1246               	iorwf	(___flmul@prod+3)^0,f,c
  3149   000AAA  C043  F030         	movff	___flmul@prod,?___flmul
  3150   000AAE  C044  F031         	movff	___flmul@prod+1,?___flmul+1
  3151   000AB2  C045  F032         	movff	___flmul@prod+2,?___flmul+2
  3152   000AB6  C046  F033         	movff	___flmul@prod+3,?___flmul+3
  3153   000ABA                     l1208:
  3154   000ABA  0012               	return		;funcret
  3155   000ABC                     __end_of___flmul:
  3156                           	callstack 0
  3157                           
  3158 ;; *************** function ___fldiv *****************
  3159 ;; Defined at:
  3160 ;;		line 11 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\sprcdiv.c"
  3161 ;; Parameters:    Size  Location     Type
  3162 ;;  b               4   22[COMRAM] unsigned char 
  3163 ;;  a               4   26[COMRAM] unsigned char 
  3164 ;; Auto vars:     Size  Location     Type
  3165 ;;  grs             4   41[COMRAM] unsigned long 
  3166 ;;  rem             4   34[COMRAM] unsigned long 
  3167 ;;  new_exp         2   39[COMRAM] short 
  3168 ;;  aexp            1   46[COMRAM] unsigned char 
  3169 ;;  bexp            1   45[COMRAM] unsigned char 
  3170 ;;  sign            1   38[COMRAM] unsigned char 
  3171 ;; Return value:  Size  Location     Type
  3172 ;;                  4   22[COMRAM] unsigned char 
  3173 ;; Registers used:
  3174 ;;		wreg, status,2, status,0
  3175 ;; Tracked objects:
  3176 ;;		On entry : 0/0
  3177 ;;		On exit  : 0/0
  3178 ;;		Unchanged: 0/0
  3179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3180 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3181 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3182 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3183 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3184 ;;Total ram usage:       25 bytes
  3185 ;; Hardware stack levels used: 1
  3186 ;; Hardware stack levels required when called: 7
  3187 ;; This function calls:
  3188 ;;		Nothing
  3189 ;; This function is called by:
  3190 ;;		_detect_color
  3191 ;; This function uses a non-reentrant model
  3192 ;;
  3193                           
  3194                           	psect	text7
  3195   000ABC                     __ptext7:
  3196                           	callstack 0
  3197   000ABC                     ___fldiv:
  3198                           	callstack 22
  3199   000ABC  501A               	movf	(___fldiv@b+3)^0,w,c
  3200   000ABE  0B80               	andlw	128
  3201   000AC0  6E27               	movwf	___fldiv@sign^0,c
  3202   000AC2  501A               	movf	(___fldiv@b+3)^0,w,c
  3203   000AC4  241A               	addwf	(___fldiv@b+3)^0,w,c
  3204   000AC6  6E2E               	movwf	___fldiv@bexp^0,c
  3205   000AC8  AE19               	btfss	(___fldiv@b+2)^0,7,c
  3206   000ACA  EF69  F005         	goto	u2201
  3207   000ACE  EF6B  F005         	goto	u2200
  3208   000AD2                     u2201:
  3209   000AD2  EF6C  F005         	goto	l2891
  3210   000AD6                     u2200:
  3211   000AD6  802E               	bsf	___fldiv@bexp^0,0,c
  3212   000AD8                     l2891:
  3213   000AD8  502E               	movf	___fldiv@bexp^0,w,c
  3214   000ADA  B4D8               	btfsc	status,2,c
  3215   000ADC  EF72  F005         	goto	u2211
  3216   000AE0  EF74  F005         	goto	u2210
  3217   000AE4                     u2211:
  3218   000AE4  EF89  F005         	goto	l2901
  3219   000AE8                     u2210:
  3220   000AE8  282E               	incf	___fldiv@bexp^0,w,c
  3221   000AEA  A4D8               	btfss	status,2,c
  3222   000AEC  EF7A  F005         	goto	u2221
  3223   000AF0  EF7C  F005         	goto	u2220
  3224   000AF4                     u2221:
  3225   000AF4  EF84  F005         	goto	l2897
  3226   000AF8                     u2220:
  3227   000AF8  0E00               	movlw	0
  3228   000AFA  6E17               	movwf	___fldiv@b^0,c
  3229   000AFC  0E00               	movlw	0
  3230   000AFE  6E18               	movwf	(___fldiv@b+1)^0,c
  3231   000B00  0E00               	movlw	0
  3232   000B02  6E19               	movwf	(___fldiv@b+2)^0,c
  3233   000B04  0E00               	movlw	0
  3234   000B06  6E1A               	movwf	(___fldiv@b+3)^0,c
  3235   000B08                     l2897:
  3236   000B08  8E19               	bsf	(___fldiv@b+2)^0,7,c
  3237   000B0A  0E00               	movlw	0
  3238   000B0C  6E1A               	movwf	(___fldiv@b+3)^0,c
  3239   000B0E  EF91  F005         	goto	l2903
  3240   000B12                     l2901:
  3241   000B12  0E00               	movlw	0
  3242   000B14  6E17               	movwf	___fldiv@b^0,c
  3243   000B16  0E00               	movlw	0
  3244   000B18  6E18               	movwf	(___fldiv@b+1)^0,c
  3245   000B1A  0E00               	movlw	0
  3246   000B1C  6E19               	movwf	(___fldiv@b+2)^0,c
  3247   000B1E  0E00               	movlw	0
  3248   000B20  6E1A               	movwf	(___fldiv@b+3)^0,c
  3249   000B22                     l2903:
  3250   000B22  501E               	movf	(___fldiv@a+3)^0,w,c
  3251   000B24  0B80               	andlw	128
  3252   000B26  1A27               	xorwf	___fldiv@sign^0,f,c
  3253   000B28  501E               	movf	(___fldiv@a+3)^0,w,c
  3254   000B2A  241E               	addwf	(___fldiv@a+3)^0,w,c
  3255   000B2C  6E2F               	movwf	___fldiv@aexp^0,c
  3256   000B2E  AE1D               	btfss	(___fldiv@a+2)^0,7,c
  3257   000B30  EF9C  F005         	goto	u2231
  3258   000B34  EF9E  F005         	goto	u2230
  3259   000B38                     u2231:
  3260   000B38  EF9F  F005         	goto	l2911
  3261   000B3C                     u2230:
  3262   000B3C  802F               	bsf	___fldiv@aexp^0,0,c
  3263   000B3E                     l2911:
  3264   000B3E  502F               	movf	___fldiv@aexp^0,w,c
  3265   000B40  B4D8               	btfsc	status,2,c
  3266   000B42  EFA5  F005         	goto	u2241
  3267   000B46  EFA7  F005         	goto	u2240
  3268   000B4A                     u2241:
  3269   000B4A  EFBC  F005         	goto	l2921
  3270   000B4E                     u2240:
  3271   000B4E  282F               	incf	___fldiv@aexp^0,w,c
  3272   000B50  A4D8               	btfss	status,2,c
  3273   000B52  EFAD  F005         	goto	u2251
  3274   000B56  EFAF  F005         	goto	u2250
  3275   000B5A                     u2251:
  3276   000B5A  EFB7  F005         	goto	l2917
  3277   000B5E                     u2250:
  3278   000B5E  0E00               	movlw	0
  3279   000B60  6E1B               	movwf	___fldiv@a^0,c
  3280   000B62  0E00               	movlw	0
  3281   000B64  6E1C               	movwf	(___fldiv@a+1)^0,c
  3282   000B66  0E00               	movlw	0
  3283   000B68  6E1D               	movwf	(___fldiv@a+2)^0,c
  3284   000B6A  0E00               	movlw	0
  3285   000B6C  6E1E               	movwf	(___fldiv@a+3)^0,c
  3286   000B6E                     l2917:
  3287   000B6E  8E1D               	bsf	(___fldiv@a+2)^0,7,c
  3288   000B70  0E00               	movlw	0
  3289   000B72  6E1E               	movwf	(___fldiv@a+3)^0,c
  3290   000B74  EFC4  F005         	goto	l2923
  3291   000B78                     l2921:
  3292   000B78  0E00               	movlw	0
  3293   000B7A  6E1B               	movwf	___fldiv@a^0,c
  3294   000B7C  0E00               	movlw	0
  3295   000B7E  6E1C               	movwf	(___fldiv@a+1)^0,c
  3296   000B80  0E00               	movlw	0
  3297   000B82  6E1D               	movwf	(___fldiv@a+2)^0,c
  3298   000B84  0E00               	movlw	0
  3299   000B86  6E1E               	movwf	(___fldiv@a+3)^0,c
  3300   000B88                     l2923:
  3301   000B88  501B               	movf	___fldiv@a^0,w,c
  3302   000B8A  101C               	iorwf	(___fldiv@a+1)^0,w,c
  3303   000B8C  101D               	iorwf	(___fldiv@a+2)^0,w,c
  3304   000B8E  101E               	iorwf	(___fldiv@a+3)^0,w,c
  3305   000B90  A4D8               	btfss	status,2,c
  3306   000B92  EFCD  F005         	goto	u2261
  3307   000B96  EFCF  F005         	goto	u2260
  3308   000B9A                     u2261:
  3309   000B9A  EFE7  F005         	goto	l2935
  3310   000B9E                     u2260:
  3311   000B9E  0E00               	movlw	0
  3312   000BA0  6E17               	movwf	___fldiv@b^0,c
  3313   000BA2  0E00               	movlw	0
  3314   000BA4  6E18               	movwf	(___fldiv@b+1)^0,c
  3315   000BA6  0E00               	movlw	0
  3316   000BA8  6E19               	movwf	(___fldiv@b+2)^0,c
  3317   000BAA  0E00               	movlw	0
  3318   000BAC  6E1A               	movwf	(___fldiv@b+3)^0,c
  3319   000BAE  0E80               	movlw	128
  3320   000BB0  1219               	iorwf	(___fldiv@b+2)^0,f,c
  3321   000BB2  0E7F               	movlw	127
  3322   000BB4  121A               	iorwf	(___fldiv@b+3)^0,f,c
  3323   000BB6                     l2929:
  3324   000BB6  5027               	movf	___fldiv@sign^0,w,c
  3325   000BB8  121A               	iorwf	(___fldiv@b+3)^0,f,c
  3326   000BBA  C017  F017         	movff	___fldiv@b,?___fldiv
  3327   000BBE  C018  F018         	movff	___fldiv@b+1,?___fldiv+1
  3328   000BC2  C019  F019         	movff	___fldiv@b+2,?___fldiv+2
  3329   000BC6  C01A  F01A         	movff	___fldiv@b+3,?___fldiv+3
  3330   000BCA  EF2A  F007         	goto	l1172
  3331   000BCE                     l2935:
  3332   000BCE  502E               	movf	___fldiv@bexp^0,w,c
  3333   000BD0  A4D8               	btfss	status,2,c
  3334   000BD2  EFED  F005         	goto	u2271
  3335   000BD6  EFEF  F005         	goto	u2270
  3336   000BDA                     u2271:
  3337   000BDA  EFF9  F005         	goto	l2943
  3338   000BDE                     u2270:
  3339   000BDE  0E00               	movlw	0
  3340   000BE0  6E17               	movwf	?___fldiv^0,c
  3341   000BE2  0E00               	movlw	0
  3342   000BE4  6E18               	movwf	(?___fldiv+1)^0,c
  3343   000BE6  0E00               	movlw	0
  3344   000BE8  6E19               	movwf	(?___fldiv+2)^0,c
  3345   000BEA  0E00               	movlw	0
  3346   000BEC  6E1A               	movwf	(?___fldiv+3)^0,c
  3347   000BEE  EF2A  F007         	goto	l1172
  3348   000BF2                     l2943:
  3349   000BF2  502F               	movf	___fldiv@aexp^0,w,c
  3350   000BF4  C02E  F01F         	movff	___fldiv@bexp,??___fldiv
  3351   000BF8  6A20               	clrf	(??___fldiv+1)^0,c
  3352   000BFA  5E1F               	subwf	??___fldiv^0,f,c
  3353   000BFC  0E00               	movlw	0
  3354   000BFE  5A20               	subwfb	(??___fldiv+1)^0,f,c
  3355   000C00  0E7F               	movlw	127
  3356   000C02  241F               	addwf	??___fldiv^0,w,c
  3357   000C04  6E28               	movwf	___fldiv@new_exp^0,c
  3358   000C06  0E00               	movlw	0
  3359   000C08  2020               	addwfc	(??___fldiv+1)^0,w,c
  3360   000C0A  6E29               	movwf	(___fldiv@new_exp+1)^0,c
  3361   000C0C  C017  F023         	movff	___fldiv@b,___fldiv@rem
  3362   000C10  C018  F024         	movff	___fldiv@b+1,___fldiv@rem+1
  3363   000C14  C019  F025         	movff	___fldiv@b+2,___fldiv@rem+2
  3364   000C18  C01A  F026         	movff	___fldiv@b+3,___fldiv@rem+3
  3365   000C1C  0E00               	movlw	0
  3366   000C1E  6E17               	movwf	___fldiv@b^0,c
  3367   000C20  0E00               	movlw	0
  3368   000C22  6E18               	movwf	(___fldiv@b+1)^0,c
  3369   000C24  0E00               	movlw	0
  3370   000C26  6E19               	movwf	(___fldiv@b+2)^0,c
  3371   000C28  0E00               	movlw	0
  3372   000C2A  6E1A               	movwf	(___fldiv@b+3)^0,c
  3373   000C2C  0E00               	movlw	0
  3374   000C2E  6E2A               	movwf	___fldiv@grs^0,c
  3375   000C30  0E00               	movlw	0
  3376   000C32  6E2B               	movwf	(___fldiv@grs+1)^0,c
  3377   000C34  0E00               	movlw	0
  3378   000C36  6E2C               	movwf	(___fldiv@grs+2)^0,c
  3379   000C38  0E00               	movlw	0
  3380   000C3A  6E2D               	movwf	(___fldiv@grs+3)^0,c
  3381   000C3C  0E00               	movlw	0
  3382   000C3E  6E2F               	movwf	___fldiv@aexp^0,c
  3383   000C40  EF5A  F006         	goto	l1174
  3384   000C44                     l2953:
  3385   000C44  502F               	movf	___fldiv@aexp^0,w,c
  3386   000C46  B4D8               	btfsc	status,2,c
  3387   000C48  EF28  F006         	goto	u2281
  3388   000C4C  EF2A  F006         	goto	u2280
  3389   000C50                     u2281:
  3390   000C50  EF41  F006         	goto	l2961
  3391   000C54                     u2280:
  3392   000C54  90D8               	bcf	status,0,c
  3393   000C56  3623               	rlcf	___fldiv@rem^0,f,c
  3394   000C58  3624               	rlcf	(___fldiv@rem+1)^0,f,c
  3395   000C5A  3625               	rlcf	(___fldiv@rem+2)^0,f,c
  3396   000C5C  3626               	rlcf	(___fldiv@rem+3)^0,f,c
  3397   000C5E  90D8               	bcf	status,0,c
  3398   000C60  3617               	rlcf	___fldiv@b^0,f,c
  3399   000C62  3618               	rlcf	(___fldiv@b+1)^0,f,c
  3400   000C64  3619               	rlcf	(___fldiv@b+2)^0,f,c
  3401   000C66  361A               	rlcf	(___fldiv@b+3)^0,f,c
  3402   000C68  AE2D               	btfss	(___fldiv@grs+3)^0,7,c
  3403   000C6A  EF39  F006         	goto	u2291
  3404   000C6E  EF3B  F006         	goto	u2290
  3405   000C72                     u2291:
  3406   000C72  EF3C  F006         	goto	l1177
  3407   000C76                     u2290:
  3408   000C76  8017               	bsf	___fldiv@b^0,0,c
  3409   000C78                     l1177:
  3410   000C78  90D8               	bcf	status,0,c
  3411   000C7A  362A               	rlcf	___fldiv@grs^0,f,c
  3412   000C7C  362B               	rlcf	(___fldiv@grs+1)^0,f,c
  3413   000C7E  362C               	rlcf	(___fldiv@grs+2)^0,f,c
  3414   000C80  362D               	rlcf	(___fldiv@grs+3)^0,f,c
  3415   000C82                     l2961:
  3416   000C82  501B               	movf	___fldiv@a^0,w,c
  3417   000C84  5C23               	subwf	___fldiv@rem^0,w,c
  3418   000C86  501C               	movf	(___fldiv@a+1)^0,w,c
  3419   000C88  5824               	subwfb	(___fldiv@rem+1)^0,w,c
  3420   000C8A  501D               	movf	(___fldiv@a+2)^0,w,c
  3421   000C8C  5825               	subwfb	(___fldiv@rem+2)^0,w,c
  3422   000C8E  501E               	movf	(___fldiv@a+3)^0,w,c
  3423   000C90  5826               	subwfb	(___fldiv@rem+3)^0,w,c
  3424   000C92  A0D8               	btfss	status,0,c
  3425   000C94  EF4E  F006         	goto	u2301
  3426   000C98  EF50  F006         	goto	u2300
  3427   000C9C                     u2301:
  3428   000C9C  EF59  F006         	goto	l2967
  3429   000CA0                     u2300:
  3430   000CA0  8C2D               	bsf	(___fldiv@grs+3)^0,6,c
  3431   000CA2  501B               	movf	___fldiv@a^0,w,c
  3432   000CA4  5E23               	subwf	___fldiv@rem^0,f,c
  3433   000CA6  501C               	movf	(___fldiv@a+1)^0,w,c
  3434   000CA8  5A24               	subwfb	(___fldiv@rem+1)^0,f,c
  3435   000CAA  501D               	movf	(___fldiv@a+2)^0,w,c
  3436   000CAC  5A25               	subwfb	(___fldiv@rem+2)^0,f,c
  3437   000CAE  501E               	movf	(___fldiv@a+3)^0,w,c
  3438   000CB0  5A26               	subwfb	(___fldiv@rem+3)^0,f,c
  3439   000CB2                     l2967:
  3440   000CB2  2A2F               	incf	___fldiv@aexp^0,f,c
  3441   000CB4                     l1174:
  3442   000CB4  0E19               	movlw	25
  3443   000CB6  642F               	cpfsgt	___fldiv@aexp^0,c
  3444   000CB8  EF60  F006         	goto	u2311
  3445   000CBC  EF62  F006         	goto	u2310
  3446   000CC0                     u2311:
  3447   000CC0  EF22  F006         	goto	l2953
  3448   000CC4                     u2310:
  3449   000CC4  5023               	movf	___fldiv@rem^0,w,c
  3450   000CC6  1024               	iorwf	(___fldiv@rem+1)^0,w,c
  3451   000CC8  1025               	iorwf	(___fldiv@rem+2)^0,w,c
  3452   000CCA  1026               	iorwf	(___fldiv@rem+3)^0,w,c
  3453   000CCC  B4D8               	btfsc	status,2,c
  3454   000CCE  EF6B  F006         	goto	u2321
  3455   000CD2  EF6D  F006         	goto	u2320
  3456   000CD6                     u2321:
  3457   000CD6  EF85  F006         	goto	l2979
  3458   000CDA                     u2320:
  3459   000CDA  802A               	bsf	___fldiv@grs^0,0,c
  3460   000CDC  EF85  F006         	goto	l2979
  3461   000CE0                     l2973:
  3462   000CE0  90D8               	bcf	status,0,c
  3463   000CE2  3617               	rlcf	___fldiv@b^0,f,c
  3464   000CE4  3618               	rlcf	(___fldiv@b+1)^0,f,c
  3465   000CE6  3619               	rlcf	(___fldiv@b+2)^0,f,c
  3466   000CE8  361A               	rlcf	(___fldiv@b+3)^0,f,c
  3467   000CEA  AE2D               	btfss	(___fldiv@grs+3)^0,7,c
  3468   000CEC  EF7A  F006         	goto	u2331
  3469   000CF0  EF7C  F006         	goto	u2330
  3470   000CF4                     u2331:
  3471   000CF4  EF7D  F006         	goto	l1183
  3472   000CF8                     u2330:
  3473   000CF8  8017               	bsf	___fldiv@b^0,0,c
  3474   000CFA                     l1183:
  3475   000CFA  90D8               	bcf	status,0,c
  3476   000CFC  362A               	rlcf	___fldiv@grs^0,f,c
  3477   000CFE  362B               	rlcf	(___fldiv@grs+1)^0,f,c
  3478   000D00  362C               	rlcf	(___fldiv@grs+2)^0,f,c
  3479   000D02  362D               	rlcf	(___fldiv@grs+3)^0,f,c
  3480   000D04  0628               	decf	___fldiv@new_exp^0,f,c
  3481   000D06  A0D8               	btfss	status,0,c
  3482   000D08  0629               	decf	(___fldiv@new_exp+1)^0,f,c
  3483   000D0A                     l2979:
  3484   000D0A  AE19               	btfss	(___fldiv@b+2)^0,7,c
  3485   000D0C  EF8A  F006         	goto	u2341
  3486   000D10  EF8C  F006         	goto	u2340
  3487   000D14                     u2341:
  3488   000D14  EF70  F006         	goto	l2973
  3489   000D18                     u2340:
  3490   000D18  0E00               	movlw	0
  3491   000D1A  6E2F               	movwf	___fldiv@aexp^0,c
  3492   000D1C  AE2D               	btfss	(___fldiv@grs+3)^0,7,c
  3493   000D1E  EF93  F006         	goto	u2351
  3494   000D22  EF95  F006         	goto	u2350
  3495   000D26                     u2351:
  3496   000D26  EFB9  F006         	goto	l1185
  3497   000D2A                     u2350:
  3498   000D2A  0EFF               	movlw	255
  3499   000D2C  142A               	andwf	___fldiv@grs^0,w,c
  3500   000D2E  6E1F               	movwf	??___fldiv^0,c
  3501   000D30  0EFF               	movlw	255
  3502   000D32  142B               	andwf	(___fldiv@grs+1)^0,w,c
  3503   000D34  6E20               	movwf	(??___fldiv+1)^0,c
  3504   000D36  0EFF               	movlw	255
  3505   000D38  142C               	andwf	(___fldiv@grs+2)^0,w,c
  3506   000D3A  6E21               	movwf	(??___fldiv+2)^0,c
  3507   000D3C  0E7F               	movlw	127
  3508   000D3E  142D               	andwf	(___fldiv@grs+3)^0,w,c
  3509   000D40  6E22               	movwf	(??___fldiv+3)^0,c
  3510   000D42  501F               	movf	??___fldiv^0,w,c
  3511   000D44  1020               	iorwf	(??___fldiv+1)^0,w,c
  3512   000D46  1021               	iorwf	(??___fldiv+2)^0,w,c
  3513   000D48  1022               	iorwf	(??___fldiv+3)^0,w,c
  3514   000D4A  B4D8               	btfsc	status,2,c
  3515   000D4C  EFAA  F006         	goto	u2361
  3516   000D50  EFAC  F006         	goto	u2360
  3517   000D54                     u2361:
  3518   000D54  EFB0  F006         	goto	l1186
  3519   000D58                     u2360:
  3520   000D58                     l2987:
  3521   000D58  0E01               	movlw	1
  3522   000D5A  6E2F               	movwf	___fldiv@aexp^0,c
  3523   000D5C  EFB9  F006         	goto	l1185
  3524   000D60                     l1186:
  3525   000D60  A017               	btfss	___fldiv@b^0,0,c
  3526   000D62  EFB5  F006         	goto	u2371
  3527   000D66  EFB7  F006         	goto	u2370
  3528   000D6A                     u2371:
  3529   000D6A  EFB9  F006         	goto	l1185
  3530   000D6E                     u2370:
  3531   000D6E  EFAC  F006         	goto	l2987
  3532   000D72                     l1185:
  3533   000D72  502F               	movf	___fldiv@aexp^0,w,c
  3534   000D74  B4D8               	btfsc	status,2,c
  3535   000D76  EFBF  F006         	goto	u2381
  3536   000D7A  EFC1  F006         	goto	u2380
  3537   000D7E                     u2381:
  3538   000D7E  EFE5  F006         	goto	l2999
  3539   000D82                     u2380:
  3540   000D82  0E01               	movlw	1
  3541   000D84  2617               	addwf	___fldiv@b^0,f,c
  3542   000D86  0E00               	movlw	0
  3543   000D88  2218               	addwfc	(___fldiv@b+1)^0,f,c
  3544   000D8A  2219               	addwfc	(___fldiv@b+2)^0,f,c
  3545   000D8C  221A               	addwfc	(___fldiv@b+3)^0,f,c
  3546   000D8E  A01A               	btfss	(___fldiv@b+3)^0,0,c
  3547   000D90  EFCC  F006         	goto	u2391
  3548   000D94  EFCE  F006         	goto	u2390
  3549   000D98                     u2391:
  3550   000D98  EFE5  F006         	goto	l2999
  3551   000D9C                     u2390:
  3552   000D9C  C017  F01F         	movff	___fldiv@b,??___fldiv
  3553   000DA0  C018  F020         	movff	___fldiv@b+1,??___fldiv+1
  3554   000DA4  C019  F021         	movff	___fldiv@b+2,??___fldiv+2
  3555   000DA8  C01A  F022         	movff	___fldiv@b+3,??___fldiv+3
  3556   000DAC  3422               	rlcf	(??___fldiv+3)^0,w,c
  3557   000DAE  3222               	rrcf	(??___fldiv+3)^0,f,c
  3558   000DB0  3221               	rrcf	(??___fldiv+2)^0,f,c
  3559   000DB2  3220               	rrcf	(??___fldiv+1)^0,f,c
  3560   000DB4  321F               	rrcf	??___fldiv^0,f,c
  3561   000DB6  C01F  F017         	movff	??___fldiv,___fldiv@b
  3562   000DBA  C020  F018         	movff	??___fldiv+1,___fldiv@b+1
  3563   000DBE  C021  F019         	movff	??___fldiv+2,___fldiv@b+2
  3564   000DC2  C022  F01A         	movff	??___fldiv+3,___fldiv@b+3
  3565   000DC6  4A28               	infsnz	___fldiv@new_exp^0,f,c
  3566   000DC8  2A29               	incf	(___fldiv@new_exp+1)^0,f,c
  3567   000DCA                     l2999:
  3568   000DCA  BE29               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3569   000DCC  EFF0  F006         	goto	u2401
  3570   000DD0  5029               	movf	(___fldiv@new_exp+1)^0,w,c
  3571   000DD2  E108               	bnz	u2400
  3572   000DD4  2828               	incf	___fldiv@new_exp^0,w,c
  3573   000DD6  A0D8               	btfss	status,0,c
  3574   000DD8  EFF0  F006         	goto	u2401
  3575   000DDC  EFF2  F006         	goto	u2400
  3576   000DE0                     u2401:
  3577   000DE0  EFFD  F006         	goto	l3003
  3578   000DE4                     u2400:
  3579   000DE4  0E00               	movlw	0
  3580   000DE6  6E29               	movwf	(___fldiv@new_exp+1)^0,c
  3581   000DE8  6828               	setf	___fldiv@new_exp^0,c
  3582   000DEA  0E00               	movlw	0
  3583   000DEC  6E17               	movwf	___fldiv@b^0,c
  3584   000DEE  0E00               	movlw	0
  3585   000DF0  6E18               	movwf	(___fldiv@b+1)^0,c
  3586   000DF2  0E00               	movlw	0
  3587   000DF4  6E19               	movwf	(___fldiv@b+2)^0,c
  3588   000DF6  0E00               	movlw	0
  3589   000DF8  6E1A               	movwf	(___fldiv@b+3)^0,c
  3590   000DFA                     l3003:
  3591   000DFA  BE29               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3592   000DFC  EF0A  F007         	goto	u2410
  3593   000E00  5029               	movf	(___fldiv@new_exp+1)^0,w,c
  3594   000E02  E106               	bnz	u2411
  3595   000E04  0428               	decf	___fldiv@new_exp^0,w,c
  3596   000E06  B0D8               	btfsc	status,0,c
  3597   000E08  EF08  F007         	goto	u2411
  3598   000E0C  EF0A  F007         	goto	u2410
  3599   000E10                     u2411:
  3600   000E10  EF18  F007         	goto	l3007
  3601   000E14                     u2410:
  3602   000E14  0E00               	movlw	0
  3603   000E16  6E29               	movwf	(___fldiv@new_exp+1)^0,c
  3604   000E18  0E00               	movlw	0
  3605   000E1A  6E28               	movwf	___fldiv@new_exp^0,c
  3606   000E1C  0E00               	movlw	0
  3607   000E1E  6E17               	movwf	___fldiv@b^0,c
  3608   000E20  0E00               	movlw	0
  3609   000E22  6E18               	movwf	(___fldiv@b+1)^0,c
  3610   000E24  0E00               	movlw	0
  3611   000E26  6E19               	movwf	(___fldiv@b+2)^0,c
  3612   000E28  0E00               	movlw	0
  3613   000E2A  6E1A               	movwf	(___fldiv@b+3)^0,c
  3614   000E2C  0E00               	movlw	0
  3615   000E2E  6E27               	movwf	___fldiv@sign^0,c
  3616   000E30                     l3007:
  3617   000E30  C028  F02E         	movff	___fldiv@new_exp,___fldiv@bexp
  3618   000E34  A02E               	btfss	___fldiv@bexp^0,0,c
  3619   000E36  EF1F  F007         	goto	u2421
  3620   000E3A  EF21  F007         	goto	u2420
  3621   000E3E                     u2421:
  3622   000E3E  EF24  F007         	goto	l3013
  3623   000E42                     u2420:
  3624   000E42  8E19               	bsf	(___fldiv@b+2)^0,7,c
  3625   000E44  EF25  F007         	goto	l3015
  3626   000E48                     l3013:
  3627   000E48  9E19               	bcf	(___fldiv@b+2)^0,7,c
  3628   000E4A                     l3015:
  3629   000E4A  90D8               	bcf	status,0,c
  3630   000E4C  302E               	rrcf	___fldiv@bexp^0,w,c
  3631   000E4E  6E1A               	movwf	(___fldiv@b+3)^0,c
  3632   000E50  EFDB  F005         	goto	l2929
  3633   000E54                     l1172:
  3634   000E54  0012               	return		;funcret
  3635   000E56                     __end_of___fldiv:
  3636                           	callstack 0
  3637                           
  3638 ;; *************** function _color_click_init *****************
  3639 ;; Defined at:
  3640 ;;		line 6 in file "color.c"
  3641 ;; Parameters:    Size  Location     Type
  3642 ;;		None
  3643 ;; Auto vars:     Size  Location     Type
  3644 ;;		None
  3645 ;; Return value:  Size  Location     Type
  3646 ;;                  1    wreg      void 
  3647 ;; Registers used:
  3648 ;;		wreg, status,2, status,0, cstack
  3649 ;; Tracked objects:
  3650 ;;		On entry : 0/0
  3651 ;;		On exit  : 0/0
  3652 ;;		Unchanged: 0/0
  3653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3656 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3657 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3658 ;;Total ram usage:        1 bytes
  3659 ;; Hardware stack levels used: 1
  3660 ;; Hardware stack levels required when called: 10
  3661 ;; This function calls:
  3662 ;;		_I2C_2_Master_Init
  3663 ;;		_color_writetoaddr
  3664 ;; This function is called by:
  3665 ;;		_main
  3666 ;; This function uses a non-reentrant model
  3667 ;;
  3668                           
  3669                           	psect	text8
  3670   002276                     __ptext8:
  3671                           	callstack 0
  3672   002276                     _color_click_init:
  3673                           	callstack 20
  3674   002276                     
  3675                           ;color.c: 9:     I2C_2_Master_Init();
  3676   002276  EC55  F011         	call	_I2C_2_Master_Init	;wreg free
  3677   00227A                     
  3678                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  3679   00227A  0E01               	movlw	1
  3680   00227C  6E0B               	movwf	color_writetoaddr@value^0,c
  3681   00227E  0E00               	movlw	0
  3682   002280  ECD9  F011         	call	_color_writetoaddr
  3683   002284                     
  3684                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3685   002284  0E3F               	movlw	63
  3686   002286  6E0D               	movwf	??_color_click_init^0,c
  3687   002288  0E55               	movlw	85
  3688   00228A                     u4097:
  3689   00228A  2EE8               	decfsz	wreg,f,c
  3690   00228C  D7FE               	bra	u4097
  3691   00228E  2E0D               	decfsz	??_color_click_init^0,f,c
  3692   002290  D7FC               	bra	u4097
  3693   002292  F000               	nop	
  3694   002294                     
  3695                           ;color.c: 16:  color_writetoaddr(0x00, 0x03);
  3696   002294  0E03               	movlw	3
  3697   002296  6E0B               	movwf	color_writetoaddr@value^0,c
  3698   002298  0E00               	movlw	0
  3699   00229A  ECD9  F011         	call	_color_writetoaddr
  3700   00229E                     
  3701                           ;color.c: 19:  color_writetoaddr(0x01, 0xD5);
  3702   00229E  0ED5               	movlw	213
  3703   0022A0  6E0B               	movwf	color_writetoaddr@value^0,c
  3704   0022A2  0E01               	movlw	1
  3705   0022A4  ECD9  F011         	call	_color_writetoaddr
  3706   0022A8  0012               	return		;funcret
  3707   0022AA                     __end_of_color_click_init:
  3708                           	callstack 0
  3709                           
  3710 ;; *************** function _I2C_2_Master_Init *****************
  3711 ;; Defined at:
  3712 ;;		line 4 in file "i2c.c"
  3713 ;; Parameters:    Size  Location     Type
  3714 ;;		None
  3715 ;; Auto vars:     Size  Location     Type
  3716 ;;		None
  3717 ;; Return value:  Size  Location     Type
  3718 ;;                  1    wreg      void 
  3719 ;; Registers used:
  3720 ;;		wreg, status,2
  3721 ;; Tracked objects:
  3722 ;;		On entry : 0/0
  3723 ;;		On exit  : 0/0
  3724 ;;		Unchanged: 0/0
  3725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3729 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3730 ;;Total ram usage:        0 bytes
  3731 ;; Hardware stack levels used: 1
  3732 ;; Hardware stack levels required when called: 7
  3733 ;; This function calls:
  3734 ;;		Nothing
  3735 ;; This function is called by:
  3736 ;;		_color_click_init
  3737 ;; This function uses a non-reentrant model
  3738 ;;
  3739                           
  3740                           	psect	text9
  3741   0022AA                     __ptext9:
  3742                           	callstack 0
  3743   0022AA                     _I2C_2_Master_Init:
  3744                           	callstack 22
  3745   0022AA                     
  3746                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3747   0022AA  010E               	movlb	14	; () banked
  3748   0022AC  51D9               	movf	217,w,b	;volatile
  3749   0022AE  0BF0               	andlw	-16
  3750   0022B0  0908               	iorlw	8
  3751   0022B2  6FD9               	movwf	217,b	;volatile
  3752   0022B4                     
  3753                           ; BSR set to: 14
  3754                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3755   0022B4  8BD9               	bsf	217,5,b	;volatile
  3756                           
  3757                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3758   0022B6  0E9F               	movlw	159
  3759   0022B8  6FD6               	movwf	214,b	;volatile
  3760   0022BA                     
  3761                           ; BSR set to: 14
  3762                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3763   0022BA  8A84               	bsf	132,5,c	;volatile
  3764   0022BC                     
  3765                           ; BSR set to: 14
  3766                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3767   0022BC  8C84               	bsf	132,6,c	;volatile
  3768   0022BE                     
  3769                           ; BSR set to: 14
  3770                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3771   0022BE  9BA7               	bcf	167,5,b	;volatile
  3772   0022C0                     
  3773                           ; BSR set to: 14
  3774                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3775   0022C0  9DA7               	bcf	167,6,b	;volatile
  3776                           
  3777                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3778   0022C2  0E1D               	movlw	29
  3779   0022C4  6F1D               	movwf	29,b	;volatile
  3780                           
  3781                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3782   0022C6  0E1E               	movlw	30
  3783   0022C8  6F1C               	movwf	28,b	;volatile
  3784                           
  3785                           ;i2c.c: 18:   RD5PPS=0x1C;
  3786   0022CA  0E1C               	movlw	28
  3787   0022CC  6F6F               	movwf	111,b	;volatile
  3788                           
  3789                           ;i2c.c: 19:   RD6PPS=0x1B;
  3790   0022CE  0E1B               	movlw	27
  3791   0022D0  6F70               	movwf	112,b	;volatile
  3792   0022D2                     
  3793                           ; BSR set to: 14
  3794   0022D2  0012               	return		;funcret
  3795   0022D4                     __end_of_I2C_2_Master_Init:
  3796                           	callstack 0
  3797                           
  3798 ;; *************** function _WhiteLight *****************
  3799 ;; Defined at:
  3800 ;;		line 17 in file "LED_Buttons.c"
  3801 ;; Parameters:    Size  Location     Type
  3802 ;;		None
  3803 ;; Auto vars:     Size  Location     Type
  3804 ;;		None
  3805 ;; Return value:  Size  Location     Type
  3806 ;;                  1    wreg      void 
  3807 ;; Registers used:
  3808 ;;		None
  3809 ;; Tracked objects:
  3810 ;;		On entry : 0/0
  3811 ;;		On exit  : 0/0
  3812 ;;		Unchanged: 0/0
  3813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3818 ;;Total ram usage:        0 bytes
  3819 ;; Hardware stack levels used: 1
  3820 ;; Hardware stack levels required when called: 7
  3821 ;; This function calls:
  3822 ;;		Nothing
  3823 ;; This function is called by:
  3824 ;;		_main
  3825 ;; This function uses a non-reentrant model
  3826 ;;
  3827                           
  3828                           	psect	text10
  3829   00247C                     __ptext10:
  3830                           	callstack 0
  3831   00247C                     _WhiteLight:
  3832                           	callstack 23
  3833   00247C                     
  3834                           ;LED_Buttons.c: 18:     LATGbits.LATG1 = 1;
  3835   00247C  827F               	bsf	127,1,c	;volatile
  3836                           
  3837                           ;LED_Buttons.c: 19:     LATAbits.LATA4 = 1;
  3838   00247E  8879               	bsf	121,4,c	;volatile
  3839                           
  3840                           ;LED_Buttons.c: 20:     LATFbits.LATF7 = 1;
  3841   002480  8E7E               	bsf	126,7,c	;volatile
  3842   002482  0012               	return		;funcret
  3843   002484                     __end_of_WhiteLight:
  3844                           	callstack 0
  3845                           
  3846 ;; *************** function _Update_RGBC *****************
  3847 ;; Defined at:
  3848 ;;		line 90 in file "color.c"
  3849 ;; Parameters:    Size  Location     Type
  3850 ;;  tempval         2   19[COMRAM] PTR struct RGB_val
  3851 ;;		 -> main@initial_color(8), 
  3852 ;; Auto vars:     Size  Location     Type
  3853 ;;		None
  3854 ;; Return value:  Size  Location     Type
  3855 ;;                  1    wreg      void 
  3856 ;; Registers used:
  3857 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3858 ;; Tracked objects:
  3859 ;;		On entry : 0/0
  3860 ;;		On exit  : 0/0
  3861 ;;		Unchanged: 0/0
  3862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3863 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3866 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3867 ;;Total ram usage:        2 bytes
  3868 ;; Hardware stack levels used: 1
  3869 ;; Hardware stack levels required when called: 10
  3870 ;; This function calls:
  3871 ;;		_color_read_Blue
  3872 ;;		_color_read_Clear
  3873 ;;		_color_read_Green
  3874 ;;		_color_read_Red
  3875 ;; This function is called by:
  3876 ;;		_main
  3877 ;; This function uses a non-reentrant model
  3878 ;;
  3879                           
  3880                           	psect	text11
  3881   001DFE                     __ptext11:
  3882                           	callstack 0
  3883   001DFE                     _Update_RGBC:
  3884                           	callstack 20
  3885   001DFE                     
  3886                           ;color.c: 92:     tempval->R = color_read_Red();
  3887   001DFE  EC0F  F010         	call	_color_read_Red	;wreg free
  3888   001E02  C014  FFD9         	movff	Update_RGBC@tempval,fsr2l
  3889   001E06  C015  FFDA         	movff	Update_RGBC@tempval+1,fsr2h
  3890   001E0A  C00D  FFDE         	movff	?_color_read_Red,postinc2
  3891   001E0E  C00E  FFDD         	movff	?_color_read_Red+1,postdec2
  3892                           
  3893                           ;color.c: 93:     tempval->G = color_read_Green();
  3894   001E12  EC37  F010         	call	_color_read_Green	;wreg free
  3895   001E16  EE20 F002          	lfsr	2,2
  3896   001E1A  5014               	movf	Update_RGBC@tempval^0,w,c
  3897   001E1C  26D9               	addwf	fsr2l,f,c
  3898   001E1E  5015               	movf	(Update_RGBC@tempval+1)^0,w,c
  3899   001E20  22DA               	addwfc	fsr2h,f,c
  3900   001E22  C00D  FFDE         	movff	?_color_read_Green,postinc2
  3901   001E26  C00E  FFDD         	movff	?_color_read_Green+1,postdec2
  3902                           
  3903                           ;color.c: 94:     tempval->B = color_read_Blue();
  3904   001E2A  EC87  F010         	call	_color_read_Blue	;wreg free
  3905   001E2E  EE20 F004          	lfsr	2,4
  3906   001E32  5014               	movf	Update_RGBC@tempval^0,w,c
  3907   001E34  26D9               	addwf	fsr2l,f,c
  3908   001E36  5015               	movf	(Update_RGBC@tempval+1)^0,w,c
  3909   001E38  22DA               	addwfc	fsr2h,f,c
  3910   001E3A  C00D  FFDE         	movff	?_color_read_Blue,postinc2
  3911   001E3E  C00E  FFDD         	movff	?_color_read_Blue+1,postdec2
  3912                           
  3913                           ;color.c: 95:     tempval->C = color_read_Clear();
  3914   001E42  EC5F  F010         	call	_color_read_Clear	;wreg free
  3915   001E46  EE20 F006          	lfsr	2,6
  3916   001E4A  5014               	movf	Update_RGBC@tempval^0,w,c
  3917   001E4C  26D9               	addwf	fsr2l,f,c
  3918   001E4E  5015               	movf	(Update_RGBC@tempval+1)^0,w,c
  3919   001E50  22DA               	addwfc	fsr2h,f,c
  3920   001E52  C00D  FFDE         	movff	?_color_read_Clear,postinc2
  3921   001E56  C00E  FFDD         	movff	?_color_read_Clear+1,postdec2
  3922   001E5A  0012               	return		;funcret
  3923   001E5C                     __end_of_Update_RGBC:
  3924                           	callstack 0
  3925                           
  3926 ;; *************** function _color_read_Red *****************
  3927 ;; Defined at:
  3928 ;;		line 32 in file "color.c"
  3929 ;; Parameters:    Size  Location     Type
  3930 ;;		None
  3931 ;; Auto vars:     Size  Location     Type
  3932 ;;  tmp             2   17[COMRAM] unsigned int 
  3933 ;; Return value:  Size  Location     Type
  3934 ;;                  2   12[COMRAM] unsigned int 
  3935 ;; Registers used:
  3936 ;;		wreg, status,2, status,0, cstack
  3937 ;; Tracked objects:
  3938 ;;		On entry : 0/0
  3939 ;;		On exit  : 0/0
  3940 ;;		Unchanged: 0/0
  3941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3942 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3943 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3944 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3945 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3946 ;;Total ram usage:        7 bytes
  3947 ;; Hardware stack levels used: 1
  3948 ;; Hardware stack levels required when called: 9
  3949 ;; This function calls:
  3950 ;;		_I2C_2_Master_Read
  3951 ;;		_I2C_2_Master_RepStart
  3952 ;;		_I2C_2_Master_Start
  3953 ;;		_I2C_2_Master_Stop
  3954 ;;		_I2C_2_Master_Write
  3955 ;; This function is called by:
  3956 ;;		_Update_RGBC
  3957 ;; This function uses a non-reentrant model
  3958 ;;
  3959                           
  3960                           	psect	text12
  3961   00201E                     __ptext12:
  3962                           	callstack 0
  3963   00201E                     _color_read_Red:
  3964                           	callstack 20
  3965   00201E                     
  3966                           ;color.c: 34:  unsigned int tmp;;color.c: 35:  I2C_2_Master_Start();
  3967   00201E  EC2F  F012         	call	_I2C_2_Master_Start	;wreg free
  3968                           
  3969                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x00);
  3970   002022  0E52               	movlw	82
  3971   002024  EC19  F012         	call	_I2C_2_Master_Write
  3972                           
  3973                           ;color.c: 37:  I2C_2_Master_Write(0xA0 | 0x16);
  3974   002028  0EB6               	movlw	182
  3975   00202A  EC19  F012         	call	_I2C_2_Master_Write
  3976                           
  3977                           ;color.c: 38:  I2C_2_Master_RepStart();
  3978   00202E  EC25  F012         	call	_I2C_2_Master_RepStart	;wreg free
  3979                           
  3980                           ;color.c: 39:  I2C_2_Master_Write(0x52 | 0x01);
  3981   002032  0E53               	movlw	83
  3982   002034  EC19  F012         	call	_I2C_2_Master_Write
  3983                           
  3984                           ;color.c: 40:  tmp=I2C_2_Master_Read(1);
  3985   002038  0E01               	movlw	1
  3986   00203A  ECFD  F010         	call	_I2C_2_Master_Read
  3987   00203E  6E0F               	movwf	??_color_read_Red^0,c
  3988   002040  500F               	movf	??_color_read_Red^0,w,c
  3989   002042  6E12               	movwf	color_read_Red@tmp^0,c
  3990   002044  6A13               	clrf	(color_read_Red@tmp+1)^0,c
  3991                           
  3992                           ;color.c: 41:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3993   002046  0E00               	movlw	0
  3994   002048  ECFD  F010         	call	_I2C_2_Master_Read
  3995   00204C  6E0F               	movwf	??_color_read_Red^0,c
  3996   00204E  500F               	movf	??_color_read_Red^0,w,c
  3997   002050  6E11               	movwf	(??_color_read_Red+2)^0,c
  3998   002052  6A10               	clrf	(??_color_read_Red+1)^0,c
  3999   002054  5012               	movf	color_read_Red@tmp^0,w,c
  4000   002056  1010               	iorwf	(??_color_read_Red+1)^0,w,c
  4001   002058  6E12               	movwf	color_read_Red@tmp^0,c
  4002   00205A  5013               	movf	(color_read_Red@tmp+1)^0,w,c
  4003   00205C  1011               	iorwf	(??_color_read_Red+2)^0,w,c
  4004   00205E  6E13               	movwf	(color_read_Red@tmp+1)^0,c
  4005                           
  4006                           ;color.c: 42:  I2C_2_Master_Stop();
  4007   002060  EC2A  F012         	call	_I2C_2_Master_Stop	;wreg free
  4008   002064                     
  4009                           ;color.c: 43:  return tmp;
  4010   002064  C012  F00D         	movff	color_read_Red@tmp,?_color_read_Red
  4011   002068  C013  F00E         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  4012   00206C  0012               	return		;funcret
  4013   00206E                     __end_of_color_read_Red:
  4014                           	callstack 0
  4015                           
  4016 ;; *************** function _color_read_Green *****************
  4017 ;; Defined at:
  4018 ;;		line 46 in file "color.c"
  4019 ;; Parameters:    Size  Location     Type
  4020 ;;		None
  4021 ;; Auto vars:     Size  Location     Type
  4022 ;;  tmp             2   17[COMRAM] unsigned int 
  4023 ;; Return value:  Size  Location     Type
  4024 ;;                  2   12[COMRAM] unsigned int 
  4025 ;; Registers used:
  4026 ;;		wreg, status,2, status,0, cstack
  4027 ;; Tracked objects:
  4028 ;;		On entry : 0/0
  4029 ;;		On exit  : 0/0
  4030 ;;		Unchanged: 0/0
  4031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4032 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4033 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4034 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4035 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4036 ;;Total ram usage:        7 bytes
  4037 ;; Hardware stack levels used: 1
  4038 ;; Hardware stack levels required when called: 9
  4039 ;; This function calls:
  4040 ;;		_I2C_2_Master_Read
  4041 ;;		_I2C_2_Master_RepStart
  4042 ;;		_I2C_2_Master_Start
  4043 ;;		_I2C_2_Master_Stop
  4044 ;;		_I2C_2_Master_Write
  4045 ;; This function is called by:
  4046 ;;		_Update_RGBC
  4047 ;; This function uses a non-reentrant model
  4048 ;;
  4049                           
  4050                           	psect	text13
  4051   00206E                     __ptext13:
  4052                           	callstack 0
  4053   00206E                     _color_read_Green:
  4054                           	callstack 20
  4055   00206E                     
  4056                           ;color.c: 48:  unsigned int tmp;;color.c: 49:  I2C_2_Master_Start();
  4057   00206E  EC2F  F012         	call	_I2C_2_Master_Start	;wreg free
  4058                           
  4059                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x00);
  4060   002072  0E52               	movlw	82
  4061   002074  EC19  F012         	call	_I2C_2_Master_Write
  4062                           
  4063                           ;color.c: 51:  I2C_2_Master_Write(0xA0 | 0x18);
  4064   002078  0EB8               	movlw	184
  4065   00207A  EC19  F012         	call	_I2C_2_Master_Write
  4066                           
  4067                           ;color.c: 52:  I2C_2_Master_RepStart();
  4068   00207E  EC25  F012         	call	_I2C_2_Master_RepStart	;wreg free
  4069                           
  4070                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x01);
  4071   002082  0E53               	movlw	83
  4072   002084  EC19  F012         	call	_I2C_2_Master_Write
  4073                           
  4074                           ;color.c: 54:  tmp=I2C_2_Master_Read(1);
  4075   002088  0E01               	movlw	1
  4076   00208A  ECFD  F010         	call	_I2C_2_Master_Read
  4077   00208E  6E0F               	movwf	??_color_read_Green^0,c
  4078   002090  500F               	movf	??_color_read_Green^0,w,c
  4079   002092  6E12               	movwf	color_read_Green@tmp^0,c
  4080   002094  6A13               	clrf	(color_read_Green@tmp+1)^0,c
  4081                           
  4082                           ;color.c: 55:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4083   002096  0E00               	movlw	0
  4084   002098  ECFD  F010         	call	_I2C_2_Master_Read
  4085   00209C  6E0F               	movwf	??_color_read_Green^0,c
  4086   00209E  500F               	movf	??_color_read_Green^0,w,c
  4087   0020A0  6E11               	movwf	(??_color_read_Green+2)^0,c
  4088   0020A2  6A10               	clrf	(??_color_read_Green+1)^0,c
  4089   0020A4  5012               	movf	color_read_Green@tmp^0,w,c
  4090   0020A6  1010               	iorwf	(??_color_read_Green+1)^0,w,c
  4091   0020A8  6E12               	movwf	color_read_Green@tmp^0,c
  4092   0020AA  5013               	movf	(color_read_Green@tmp+1)^0,w,c
  4093   0020AC  1011               	iorwf	(??_color_read_Green+2)^0,w,c
  4094   0020AE  6E13               	movwf	(color_read_Green@tmp+1)^0,c
  4095                           
  4096                           ;color.c: 56:  I2C_2_Master_Stop();
  4097   0020B0  EC2A  F012         	call	_I2C_2_Master_Stop	;wreg free
  4098   0020B4                     
  4099                           ;color.c: 57:  return tmp;
  4100   0020B4  C012  F00D         	movff	color_read_Green@tmp,?_color_read_Green
  4101   0020B8  C013  F00E         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  4102   0020BC  0012               	return		;funcret
  4103   0020BE                     __end_of_color_read_Green:
  4104                           	callstack 0
  4105                           
  4106 ;; *************** function _color_read_Clear *****************
  4107 ;; Defined at:
  4108 ;;		line 74 in file "color.c"
  4109 ;; Parameters:    Size  Location     Type
  4110 ;;		None
  4111 ;; Auto vars:     Size  Location     Type
  4112 ;;  tmp             2   17[COMRAM] unsigned int 
  4113 ;; Return value:  Size  Location     Type
  4114 ;;                  2   12[COMRAM] unsigned int 
  4115 ;; Registers used:
  4116 ;;		wreg, status,2, status,0, cstack
  4117 ;; Tracked objects:
  4118 ;;		On entry : 0/0
  4119 ;;		On exit  : 0/0
  4120 ;;		Unchanged: 0/0
  4121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4122 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4123 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4124 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4125 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4126 ;;Total ram usage:        7 bytes
  4127 ;; Hardware stack levels used: 1
  4128 ;; Hardware stack levels required when called: 9
  4129 ;; This function calls:
  4130 ;;		_I2C_2_Master_Read
  4131 ;;		_I2C_2_Master_RepStart
  4132 ;;		_I2C_2_Master_Start
  4133 ;;		_I2C_2_Master_Stop
  4134 ;;		_I2C_2_Master_Write
  4135 ;; This function is called by:
  4136 ;;		_Update_RGBC
  4137 ;; This function uses a non-reentrant model
  4138 ;;
  4139                           
  4140                           	psect	text14
  4141   0020BE                     __ptext14:
  4142                           	callstack 0
  4143   0020BE                     _color_read_Clear:
  4144                           	callstack 20
  4145   0020BE                     
  4146                           ;color.c: 76:  unsigned int tmp;;color.c: 77:  I2C_2_Master_Start();
  4147   0020BE  EC2F  F012         	call	_I2C_2_Master_Start	;wreg free
  4148                           
  4149                           ;color.c: 78:  I2C_2_Master_Write(0x52 | 0x00);
  4150   0020C2  0E52               	movlw	82
  4151   0020C4  EC19  F012         	call	_I2C_2_Master_Write
  4152                           
  4153                           ;color.c: 79:  I2C_2_Master_Write(0xA0 | 0x14);
  4154   0020C8  0EB4               	movlw	180
  4155   0020CA  EC19  F012         	call	_I2C_2_Master_Write
  4156                           
  4157                           ;color.c: 80:  I2C_2_Master_RepStart();
  4158   0020CE  EC25  F012         	call	_I2C_2_Master_RepStart	;wreg free
  4159                           
  4160                           ;color.c: 81:  I2C_2_Master_Write(0x52 | 0x01);
  4161   0020D2  0E53               	movlw	83
  4162   0020D4  EC19  F012         	call	_I2C_2_Master_Write
  4163                           
  4164                           ;color.c: 82:  tmp=I2C_2_Master_Read(1);
  4165   0020D8  0E01               	movlw	1
  4166   0020DA  ECFD  F010         	call	_I2C_2_Master_Read
  4167   0020DE  6E0F               	movwf	??_color_read_Clear^0,c
  4168   0020E0  500F               	movf	??_color_read_Clear^0,w,c
  4169   0020E2  6E12               	movwf	color_read_Clear@tmp^0,c
  4170   0020E4  6A13               	clrf	(color_read_Clear@tmp+1)^0,c
  4171                           
  4172                           ;color.c: 83:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4173   0020E6  0E00               	movlw	0
  4174   0020E8  ECFD  F010         	call	_I2C_2_Master_Read
  4175   0020EC  6E0F               	movwf	??_color_read_Clear^0,c
  4176   0020EE  500F               	movf	??_color_read_Clear^0,w,c
  4177   0020F0  6E11               	movwf	(??_color_read_Clear+2)^0,c
  4178   0020F2  6A10               	clrf	(??_color_read_Clear+1)^0,c
  4179   0020F4  5012               	movf	color_read_Clear@tmp^0,w,c
  4180   0020F6  1010               	iorwf	(??_color_read_Clear+1)^0,w,c
  4181   0020F8  6E12               	movwf	color_read_Clear@tmp^0,c
  4182   0020FA  5013               	movf	(color_read_Clear@tmp+1)^0,w,c
  4183   0020FC  1011               	iorwf	(??_color_read_Clear+2)^0,w,c
  4184   0020FE  6E13               	movwf	(color_read_Clear@tmp+1)^0,c
  4185                           
  4186                           ;color.c: 84:  I2C_2_Master_Stop();
  4187   002100  EC2A  F012         	call	_I2C_2_Master_Stop	;wreg free
  4188   002104                     
  4189                           ;color.c: 85:  return tmp;
  4190   002104  C012  F00D         	movff	color_read_Clear@tmp,?_color_read_Clear
  4191   002108  C013  F00E         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  4192   00210C  0012               	return		;funcret
  4193   00210E                     __end_of_color_read_Clear:
  4194                           	callstack 0
  4195                           
  4196 ;; *************** function _color_read_Blue *****************
  4197 ;; Defined at:
  4198 ;;		line 60 in file "color.c"
  4199 ;; Parameters:    Size  Location     Type
  4200 ;;		None
  4201 ;; Auto vars:     Size  Location     Type
  4202 ;;  tmp             2   17[COMRAM] unsigned int 
  4203 ;; Return value:  Size  Location     Type
  4204 ;;                  2   12[COMRAM] unsigned int 
  4205 ;; Registers used:
  4206 ;;		wreg, status,2, status,0, cstack
  4207 ;; Tracked objects:
  4208 ;;		On entry : 0/0
  4209 ;;		On exit  : 0/0
  4210 ;;		Unchanged: 0/0
  4211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4212 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4213 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4214 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4215 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4216 ;;Total ram usage:        7 bytes
  4217 ;; Hardware stack levels used: 1
  4218 ;; Hardware stack levels required when called: 9
  4219 ;; This function calls:
  4220 ;;		_I2C_2_Master_Read
  4221 ;;		_I2C_2_Master_RepStart
  4222 ;;		_I2C_2_Master_Start
  4223 ;;		_I2C_2_Master_Stop
  4224 ;;		_I2C_2_Master_Write
  4225 ;; This function is called by:
  4226 ;;		_Update_RGBC
  4227 ;; This function uses a non-reentrant model
  4228 ;;
  4229                           
  4230                           	psect	text15
  4231   00210E                     __ptext15:
  4232                           	callstack 0
  4233   00210E                     _color_read_Blue:
  4234                           	callstack 20
  4235   00210E                     
  4236                           ;color.c: 62:  unsigned int tmp;;color.c: 63:  I2C_2_Master_Start();
  4237   00210E  EC2F  F012         	call	_I2C_2_Master_Start	;wreg free
  4238                           
  4239                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x00);
  4240   002112  0E52               	movlw	82
  4241   002114  EC19  F012         	call	_I2C_2_Master_Write
  4242                           
  4243                           ;color.c: 65:  I2C_2_Master_Write(0xA0 | 0x1A);
  4244   002118  0EBA               	movlw	186
  4245   00211A  EC19  F012         	call	_I2C_2_Master_Write
  4246                           
  4247                           ;color.c: 66:  I2C_2_Master_RepStart();
  4248   00211E  EC25  F012         	call	_I2C_2_Master_RepStart	;wreg free
  4249                           
  4250                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x01);
  4251   002122  0E53               	movlw	83
  4252   002124  EC19  F012         	call	_I2C_2_Master_Write
  4253                           
  4254                           ;color.c: 68:  tmp=I2C_2_Master_Read(1);
  4255   002128  0E01               	movlw	1
  4256   00212A  ECFD  F010         	call	_I2C_2_Master_Read
  4257   00212E  6E0F               	movwf	??_color_read_Blue^0,c
  4258   002130  500F               	movf	??_color_read_Blue^0,w,c
  4259   002132  6E12               	movwf	color_read_Blue@tmp^0,c
  4260   002134  6A13               	clrf	(color_read_Blue@tmp+1)^0,c
  4261                           
  4262                           ;color.c: 69:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4263   002136  0E00               	movlw	0
  4264   002138  ECFD  F010         	call	_I2C_2_Master_Read
  4265   00213C  6E0F               	movwf	??_color_read_Blue^0,c
  4266   00213E  500F               	movf	??_color_read_Blue^0,w,c
  4267   002140  6E11               	movwf	(??_color_read_Blue+2)^0,c
  4268   002142  6A10               	clrf	(??_color_read_Blue+1)^0,c
  4269   002144  5012               	movf	color_read_Blue@tmp^0,w,c
  4270   002146  1010               	iorwf	(??_color_read_Blue+1)^0,w,c
  4271   002148  6E12               	movwf	color_read_Blue@tmp^0,c
  4272   00214A  5013               	movf	(color_read_Blue@tmp+1)^0,w,c
  4273   00214C  1011               	iorwf	(??_color_read_Blue+2)^0,w,c
  4274   00214E  6E13               	movwf	(color_read_Blue@tmp+1)^0,c
  4275                           
  4276                           ;color.c: 70:  I2C_2_Master_Stop();
  4277   002150  EC2A  F012         	call	_I2C_2_Master_Stop	;wreg free
  4278   002154                     
  4279                           ;color.c: 71:  return tmp;
  4280   002154  C012  F00D         	movff	color_read_Blue@tmp,?_color_read_Blue
  4281   002158  C013  F00E         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  4282   00215C  0012               	return		;funcret
  4283   00215E                     __end_of_color_read_Blue:
  4284                           	callstack 0
  4285                           
  4286 ;; *************** function _I2C_2_Master_RepStart *****************
  4287 ;; Defined at:
  4288 ;;		line 33 in file "i2c.c"
  4289 ;; Parameters:    Size  Location     Type
  4290 ;;		None
  4291 ;; Auto vars:     Size  Location     Type
  4292 ;;		None
  4293 ;; Return value:  Size  Location     Type
  4294 ;;                  1    wreg      void 
  4295 ;; Registers used:
  4296 ;;		wreg, status,2, status,0, cstack
  4297 ;; Tracked objects:
  4298 ;;		On entry : 0/0
  4299 ;;		On exit  : 0/0
  4300 ;;		Unchanged: 0/0
  4301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4306 ;;Total ram usage:        0 bytes
  4307 ;; Hardware stack levels used: 1
  4308 ;; Hardware stack levels required when called: 8
  4309 ;; This function calls:
  4310 ;;		_I2C_2_Master_Idle
  4311 ;; This function is called by:
  4312 ;;		_color_read_Red
  4313 ;;		_color_read_Green
  4314 ;;		_color_read_Blue
  4315 ;;		_color_read_Clear
  4316 ;; This function uses a non-reentrant model
  4317 ;;
  4318                           
  4319                           	psect	text16
  4320   00244A                     __ptext16:
  4321                           	callstack 0
  4322   00244A                     _I2C_2_Master_RepStart:
  4323                           	callstack 20
  4324   00244A                     
  4325                           ;i2c.c: 35:   I2C_2_Master_Idle();
  4326   00244A  EC6A  F011         	call	_I2C_2_Master_Idle	;wreg free
  4327   00244E                     
  4328                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  4329   00244E  010E               	movlb	14	; () banked
  4330   002450  83DA               	bsf	218,1,b	;volatile
  4331   002452                     
  4332                           ; BSR set to: 14
  4333   002452  0012               	return		;funcret
  4334   002454                     __end_of_I2C_2_Master_RepStart:
  4335                           	callstack 0
  4336                           
  4337 ;; *************** function _I2C_2_Master_Read *****************
  4338 ;; Defined at:
  4339 ;;		line 51 in file "i2c.c"
  4340 ;; Parameters:    Size  Location     Type
  4341 ;;  ack             1    wreg     unsigned char 
  4342 ;; Auto vars:     Size  Location     Type
  4343 ;;  ack             1   10[COMRAM] unsigned char 
  4344 ;;  tmp             1   11[COMRAM] unsigned char 
  4345 ;; Return value:  Size  Location     Type
  4346 ;;                  1    wreg      unsigned char 
  4347 ;; Registers used:
  4348 ;;		wreg, status,2, status,0, cstack
  4349 ;; Tracked objects:
  4350 ;;		On entry : 0/0
  4351 ;;		On exit  : 0/0
  4352 ;;		Unchanged: 0/0
  4353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4355 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4356 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4357 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4358 ;;Total ram usage:        3 bytes
  4359 ;; Hardware stack levels used: 1
  4360 ;; Hardware stack levels required when called: 8
  4361 ;; This function calls:
  4362 ;;		_I2C_2_Master_Idle
  4363 ;; This function is called by:
  4364 ;;		_color_read_Red
  4365 ;;		_color_read_Green
  4366 ;;		_color_read_Blue
  4367 ;;		_color_read_Clear
  4368 ;; This function uses a non-reentrant model
  4369 ;;
  4370                           
  4371                           	psect	text17
  4372   0021FA                     __ptext17:
  4373                           	callstack 0
  4374   0021FA                     _I2C_2_Master_Read:
  4375                           	callstack 20
  4376                           
  4377                           ; BSR set to: 14
  4378                           ;incstack = 0
  4379                           ;I2C_2_Master_Read@ack stored from wreg
  4380   0021FA  6E0B               	movwf	I2C_2_Master_Read@ack^0,c
  4381   0021FC                     
  4382                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  4383   0021FC  EC6A  F011         	call	_I2C_2_Master_Idle	;wreg free
  4384   002200                     
  4385                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  4386   002200  010E               	movlb	14	; () banked
  4387   002202  87DA               	bsf	218,3,b	;volatile
  4388                           
  4389                           ;i2c.c: 56:   I2C_2_Master_Idle();
  4390   002204  EC6A  F011         	call	_I2C_2_Master_Idle	;wreg free
  4391   002208                     
  4392                           ;i2c.c: 57:   tmp = SSP2BUF;
  4393   002208  CED5 F00C          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  4394                           
  4395                           ;i2c.c: 58:   I2C_2_Master_Idle();
  4396   00220C  EC6A  F011         	call	_I2C_2_Master_Idle	;wreg free
  4397   002210                     
  4398                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  4399   002210  500B               	movf	I2C_2_Master_Read@ack^0,w,c
  4400   002212  B4D8               	btfsc	status,2,c
  4401   002214  EF0E  F011         	goto	u1921
  4402   002218  EF12  F011         	goto	u1920
  4403   00221C                     u1921:
  4404   00221C  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  4405   00221E  2A0A               	incf	??_I2C_2_Master_Read^0,f,c
  4406   002220  EF13  F011         	goto	u1938
  4407   002224                     u1920:
  4408   002224  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  4409   002226                     u1938:
  4410   002226  3A0A               	swapf	??_I2C_2_Master_Read^0,f,c
  4411   002228  460A               	rlncf	??_I2C_2_Master_Read^0,f,c
  4412   00222A  010E               	movlb	14	; () banked
  4413   00222C  51DA               	movf	218,w,b	;volatile
  4414   00222E  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  4415   002230  0BDF               	andlw	-33
  4416   002232  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  4417   002234  6FDA               	movwf	218,b	;volatile
  4418   002236                     
  4419                           ; BSR set to: 14
  4420                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  4421   002236  89DA               	bsf	218,4,b	;volatile
  4422   002238                     
  4423                           ; BSR set to: 14
  4424                           ;i2c.c: 61:   return tmp;
  4425   002238  500C               	movf	I2C_2_Master_Read@tmp^0,w,c
  4426   00223A                     
  4427                           ; BSR set to: 14
  4428   00223A  0012               	return		;funcret
  4429   00223C                     __end_of_I2C_2_Master_Read:
  4430                           	callstack 0
  4431                           
  4432 ;; *************** function _Timer0_init *****************
  4433 ;; Defined at:
  4434 ;;		line 7 in file "timers.c"
  4435 ;; Parameters:    Size  Location     Type
  4436 ;;		None
  4437 ;; Auto vars:     Size  Location     Type
  4438 ;;		None
  4439 ;; Return value:  Size  Location     Type
  4440 ;;                  1    wreg      void 
  4441 ;; Registers used:
  4442 ;;		wreg, status,2
  4443 ;; Tracked objects:
  4444 ;;		On entry : 0/0
  4445 ;;		On exit  : 0/0
  4446 ;;		Unchanged: 0/0
  4447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4452 ;;Total ram usage:        0 bytes
  4453 ;; Hardware stack levels used: 1
  4454 ;; Hardware stack levels required when called: 7
  4455 ;; This function calls:
  4456 ;;		Nothing
  4457 ;; This function is called by:
  4458 ;;		_main
  4459 ;; This function uses a non-reentrant model
  4460 ;;
  4461                           
  4462                           	psect	text18
  4463   002392                     __ptext18:
  4464                           	callstack 0
  4465   002392                     _Timer0_init:
  4466                           	callstack 23
  4467   002392                     
  4468                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  4469   002392  50D6               	movf	214,w,c	;volatile
  4470   002394  0B1F               	andlw	-225
  4471   002396  0940               	iorlw	64
  4472   002398  6ED6               	movwf	214,c	;volatile
  4473   00239A                     
  4474                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  4475   00239A  88D6               	bsf	214,4,c	;volatile
  4476                           
  4477                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
  4478   00239C  50D6               	movf	214,w,c	;volatile
  4479   00239E  0BF0               	andlw	-16
  4480   0023A0  0908               	iorlw	8
  4481   0023A2  6ED6               	movwf	214,c	;volatile
  4482   0023A4                     
  4483                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
  4484   0023A4  88D5               	bsf	213,4,c	;volatile
  4485                           
  4486                           ;timers.c: 15:     TMR0H = 0b11000010;
  4487   0023A6  0EC2               	movlw	194
  4488   0023A8  6ED4               	movwf	212,c	;volatile
  4489                           
  4490                           ;timers.c: 16:     TMR0L = 0b11110110;
  4491   0023AA  0EF6               	movlw	246
  4492   0023AC  6ED3               	movwf	211,c	;volatile
  4493   0023AE                     
  4494                           ;timers.c: 17:     T0CON0bits.T0EN=1;
  4495   0023AE  8ED5               	bsf	213,7,c	;volatile
  4496   0023B0  0012               	return		;funcret
  4497   0023B2                     __end_of_Timer0_init:
  4498                           	callstack 0
  4499                           
  4500 ;; *************** function _MoveBuggy *****************
  4501 ;; Defined at:
  4502 ;;		line 114 in file "color_instructions.c"
  4503 ;; Parameters:    Size  Location     Type
  4504 ;;  color_detect    1    wreg     unsigned char 
  4505 ;;  mL              2   45[COMRAM] PTR struct DC_motor
  4506 ;;		 -> main@motorL(9), 
  4507 ;;  mR              2   47[COMRAM] PTR struct DC_motor
  4508 ;;		 -> main@motorR(9), 
  4509 ;; Auto vars:     Size  Location     Type
  4510 ;;  color_detect    1   49[COMRAM] unsigned char 
  4511 ;; Return value:  Size  Location     Type
  4512 ;;                  1    wreg      void 
  4513 ;; Registers used:
  4514 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4515 ;; Tracked objects:
  4516 ;;		On entry : 0/0
  4517 ;;		On exit  : 0/0
  4518 ;;		Unchanged: 0/0
  4519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4520 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4521 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4523 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4524 ;;Total ram usage:        5 bytes
  4525 ;; Hardware stack levels used: 1
  4526 ;; Hardware stack levels required when called: 12
  4527 ;; This function calls:
  4528 ;;		_BlueInstructions
  4529 ;;		_GreenInstructions
  4530 ;;		_LightBlueInstructions
  4531 ;;		_OrangeInstructions
  4532 ;;		_PinkInstructions
  4533 ;;		_RedInstructions
  4534 ;;		_YellowInstructions
  4535 ;; This function is called by:
  4536 ;;		_main
  4537 ;; This function uses a non-reentrant model
  4538 ;;
  4539                           
  4540                           	psect	text19
  4541   0012C4                     __ptext19:
  4542                           	callstack 0
  4543   0012C4                     _MoveBuggy:
  4544                           	callstack 18
  4545                           
  4546                           ;incstack = 0
  4547                           ;MoveBuggy@color_detected stored from wreg
  4548   0012C4  6E32               	movwf	MoveBuggy@color_detected^0,c
  4549   0012C6                     
  4550                           ;color_instructions.c: 115:     if (color_detected==1){
  4551   0012C6  0432               	decf	MoveBuggy@color_detected^0,w,c
  4552   0012C8  A4D8               	btfss	status,2,c
  4553   0012CA  EF69  F009         	goto	u3311
  4554   0012CE  EF6B  F009         	goto	u3310
  4555   0012D2                     u3311:
  4556   0012D2  EF77  F009         	goto	l3485
  4557   0012D6                     u3310:
  4558   0012D6                     
  4559                           ;color_instructions.c: 116:         RedInstructions(mL, mR);
  4560   0012D6  C02E  F027         	movff	MoveBuggy@mL,RedInstructions@mL
  4561   0012DA  C02F  F028         	movff	MoveBuggy@mL+1,RedInstructions@mL+1
  4562   0012DE  C030  F029         	movff	MoveBuggy@mR,RedInstructions@mR
  4563   0012E2  C031  F02A         	movff	MoveBuggy@mR+1,RedInstructions@mR+1
  4564   0012E6  EC33  F00D         	call	_RedInstructions	;wreg free
  4565                           
  4566                           ;color_instructions.c: 117:     }
  4567   0012EA  EFF5  F009         	goto	l587
  4568   0012EE                     l3485:
  4569   0012EE  0E02               	movlw	2
  4570   0012F0  1832               	xorwf	MoveBuggy@color_detected^0,w,c
  4571   0012F2  A4D8               	btfss	status,2,c
  4572   0012F4  EF7E  F009         	goto	u3321
  4573   0012F8  EF80  F009         	goto	u3320
  4574   0012FC                     u3321:
  4575   0012FC  EF8C  F009         	goto	l3489
  4576   001300                     u3320:
  4577   001300                     
  4578                           ;color_instructions.c: 119:         GreenInstructions(mL, mR);
  4579   001300  C02E  F027         	movff	MoveBuggy@mL,GreenInstructions@mL
  4580   001304  C02F  F028         	movff	MoveBuggy@mL+1,GreenInstructions@mL+1
  4581   001308  C030  F029         	movff	MoveBuggy@mR,GreenInstructions@mR
  4582   00130C  C031  F02A         	movff	MoveBuggy@mR+1,GreenInstructions@mR+1
  4583   001310  EC3F  F00E         	call	_GreenInstructions	;wreg free
  4584                           
  4585                           ;color_instructions.c: 120:     }
  4586   001314  EFF5  F009         	goto	l587
  4587   001318                     l3489:
  4588   001318  0E03               	movlw	3
  4589   00131A  1832               	xorwf	MoveBuggy@color_detected^0,w,c
  4590   00131C  A4D8               	btfss	status,2,c
  4591   00131E  EF93  F009         	goto	u3331
  4592   001322  EF95  F009         	goto	u3330
  4593   001326                     u3331:
  4594   001326  EFA1  F009         	goto	l3493
  4595   00132A                     u3330:
  4596   00132A                     
  4597                           ;color_instructions.c: 122:         BlueInstructions(mL, mR);
  4598   00132A  C02E  F027         	movff	MoveBuggy@mL,BlueInstructions@mL
  4599   00132E  C02F  F028         	movff	MoveBuggy@mL+1,BlueInstructions@mL+1
  4600   001332  C030  F029         	movff	MoveBuggy@mR,BlueInstructions@mR
  4601   001336  C031  F02A         	movff	MoveBuggy@mR+1,BlueInstructions@mR+1
  4602   00133A  EC82  F00E         	call	_BlueInstructions	;wreg free
  4603                           
  4604                           ;color_instructions.c: 123:     }
  4605   00133E  EFF5  F009         	goto	l587
  4606   001342                     l3493:
  4607   001342  0E04               	movlw	4
  4608   001344  1832               	xorwf	MoveBuggy@color_detected^0,w,c
  4609   001346  A4D8               	btfss	status,2,c
  4610   001348  EFA8  F009         	goto	u3341
  4611   00134C  EFAA  F009         	goto	u3340
  4612   001350                     u3341:
  4613   001350  EFB6  F009         	goto	l3497
  4614   001354                     u3340:
  4615   001354                     
  4616                           ;color_instructions.c: 125:         YellowInstructions(mL, mR);
  4617   001354  C02E  F027         	movff	MoveBuggy@mL,YellowInstructions@mL
  4618   001358  C02F  F028         	movff	MoveBuggy@mL+1,YellowInstructions@mL+1
  4619   00135C  C030  F029         	movff	MoveBuggy@mR,YellowInstructions@mR
  4620   001360  C031  F02A         	movff	MoveBuggy@mR+1,YellowInstructions@mR+1
  4621   001364  ECF0  F00C         	call	_YellowInstructions	;wreg free
  4622                           
  4623                           ;color_instructions.c: 126:     }
  4624   001368  EFF5  F009         	goto	l587
  4625   00136C                     l3497:
  4626   00136C  0E05               	movlw	5
  4627   00136E  1832               	xorwf	MoveBuggy@color_detected^0,w,c
  4628   001370  A4D8               	btfss	status,2,c
  4629   001372  EFBD  F009         	goto	u3351
  4630   001376  EFBF  F009         	goto	u3350
  4631   00137A                     u3351:
  4632   00137A  EFCB  F009         	goto	l3501
  4633   00137E                     u3350:
  4634   00137E                     
  4635                           ;color_instructions.c: 128:         PinkInstructions(mL, mR);
  4636   00137E  C02E  F027         	movff	MoveBuggy@mL,PinkInstructions@mL
  4637   001382  C02F  F028         	movff	MoveBuggy@mL+1,PinkInstructions@mL+1
  4638   001386  C030  F029         	movff	MoveBuggy@mR,PinkInstructions@mR
  4639   00138A  C031  F02A         	movff	MoveBuggy@mR+1,PinkInstructions@mR+1
  4640   00138E  EC76  F00D         	call	_PinkInstructions	;wreg free
  4641                           
  4642                           ;color_instructions.c: 129:     }
  4643   001392  EFF5  F009         	goto	l587
  4644   001396                     l3501:
  4645   001396  0E06               	movlw	6
  4646   001398  1832               	xorwf	MoveBuggy@color_detected^0,w,c
  4647   00139A  A4D8               	btfss	status,2,c
  4648   00139C  EFD2  F009         	goto	u3361
  4649   0013A0  EFD4  F009         	goto	u3360
  4650   0013A4                     u3361:
  4651   0013A4  EFE0  F009         	goto	l3505
  4652   0013A8                     u3360:
  4653   0013A8                     
  4654                           ;color_instructions.c: 131:         OrangeInstructions(mL, mR);
  4655   0013A8  C02E  F027         	movff	MoveBuggy@mL,OrangeInstructions@mL
  4656   0013AC  C02F  F028         	movff	MoveBuggy@mL+1,OrangeInstructions@mL+1
  4657   0013B0  C030  F029         	movff	MoveBuggy@mR,OrangeInstructions@mR
  4658   0013B4  C031  F02A         	movff	MoveBuggy@mR+1,OrangeInstructions@mR+1
  4659   0013B8  ECB9  F00D         	call	_OrangeInstructions	;wreg free
  4660                           
  4661                           ;color_instructions.c: 132:     }
  4662   0013BC  EFF5  F009         	goto	l587
  4663   0013C0                     l3505:
  4664   0013C0  0E07               	movlw	7
  4665   0013C2  1832               	xorwf	MoveBuggy@color_detected^0,w,c
  4666   0013C4  A4D8               	btfss	status,2,c
  4667   0013C6  EFE7  F009         	goto	u3371
  4668   0013CA  EFE9  F009         	goto	u3370
  4669   0013CE                     u3371:
  4670   0013CE  EFF5  F009         	goto	l581
  4671   0013D2                     u3370:
  4672   0013D2                     
  4673                           ;color_instructions.c: 134:         LightBlueInstructions(mL, mR);
  4674   0013D2  C02E  F027         	movff	MoveBuggy@mL,LightBlueInstructions@mL
  4675   0013D6  C02F  F028         	movff	MoveBuggy@mL+1,LightBlueInstructions@mL+1
  4676   0013DA  C030  F029         	movff	MoveBuggy@mR,LightBlueInstructions@mR
  4677   0013DE  C031  F02A         	movff	MoveBuggy@mR+1,LightBlueInstructions@mR+1
  4678   0013E2  ECFC  F00D         	call	_LightBlueInstructions	;wreg free
  4679   0013E6  EFF5  F009         	goto	l587
  4680   0013EA                     l581:
  4681   0013EA                     l587:
  4682   0013EA  0012               	return		;funcret
  4683   0013EC                     __end_of_MoveBuggy:
  4684                           	callstack 0
  4685                           
  4686 ;; *************** function _YellowInstructions *****************
  4687 ;; Defined at:
  4688 ;;		line 53 in file "color_instructions.c"
  4689 ;; Parameters:    Size  Location     Type
  4690 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  4691 ;;		 -> main@motorL(9), 
  4692 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  4693 ;;		 -> main@motorR(9), 
  4694 ;; Auto vars:     Size  Location     Type
  4695 ;;  a               1   44[COMRAM] unsigned char 
  4696 ;; Return value:  Size  Location     Type
  4697 ;;                  1    wreg      void 
  4698 ;; Registers used:
  4699 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4700 ;; Tracked objects:
  4701 ;;		On entry : 0/0
  4702 ;;		On exit  : 0/0
  4703 ;;		Unchanged: 0/0
  4704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4705 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4706 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4707 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4708 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4709 ;;Total ram usage:        7 bytes
  4710 ;; Hardware stack levels used: 1
  4711 ;; Hardware stack levels required when called: 11
  4712 ;; This function calls:
  4713 ;;		_fullSpeedBackwards
  4714 ;;		_stop
  4715 ;;		_turnRight90
  4716 ;; This function is called by:
  4717 ;;		_MoveBuggy
  4718 ;; This function uses a non-reentrant model
  4719 ;;
  4720                           
  4721                           	psect	text20
  4722   0019E0                     __ptext20:
  4723                           	callstack 0
  4724   0019E0                     _YellowInstructions:
  4725                           	callstack 18
  4726   0019E0                     
  4727                           ;color_instructions.c: 55:     unsigned char a=0;
  4728   0019E0  0E00               	movlw	0
  4729   0019E2  6E2D               	movwf	YellowInstructions@a^0,c
  4730                           
  4731                           ;color_instructions.c: 56:     while (a<20){
  4732   0019E4  EFFF  F00C         	goto	l2819
  4733   0019E8                     l2815:
  4734                           
  4735                           ;color_instructions.c: 57:         fullSpeedBackwards(mL, mR);
  4736   0019E8  C027  F01C         	movff	YellowInstructions@mL,fullSpeedBackwards@mL
  4737   0019EC  C028  F01D         	movff	YellowInstructions@mL+1,fullSpeedBackwards@mL+1
  4738   0019F0  C029  F01E         	movff	YellowInstructions@mR,fullSpeedBackwards@mR
  4739   0019F4  C02A  F01F         	movff	YellowInstructions@mR+1,fullSpeedBackwards@mR+1
  4740   0019F8  ECD3  F00B         	call	_fullSpeedBackwards	;wreg free
  4741   0019FC                     
  4742                           ;color_instructions.c: 58:         a++;
  4743   0019FC  2A2D               	incf	YellowInstructions@a^0,f,c
  4744   0019FE                     l2819:
  4745                           
  4746                           ;color_instructions.c: 56:     while (a<20){
  4747   0019FE  0E13               	movlw	19
  4748   001A00  642D               	cpfsgt	YellowInstructions@a^0,c
  4749   001A02  EF05  F00D         	goto	u2121
  4750   001A06  EF07  F00D         	goto	u2120
  4751   001A0A                     u2121:
  4752   001A0A  EFF4  F00C         	goto	l2815
  4753   001A0E                     u2120:
  4754   001A0E  EF14  F00D         	goto	l2825
  4755   001A12                     l2821:
  4756                           
  4757                           ;color_instructions.c: 61:         stop(mL, mR);
  4758   001A12  C027  F01C         	movff	YellowInstructions@mL,stop@mL
  4759   001A16  C028  F01D         	movff	YellowInstructions@mL+1,stop@mL+1
  4760   001A1A  C029  F01E         	movff	YellowInstructions@mR,stop@mR
  4761   001A1E  C02A  F01F         	movff	YellowInstructions@mR+1,stop@mR+1
  4762   001A22  EC3E  F00C         	call	_stop	;wreg free
  4763   001A26                     
  4764                           ;color_instructions.c: 62:         a--;
  4765   001A26  062D               	decf	YellowInstructions@a^0,f,c
  4766   001A28                     l2825:
  4767                           
  4768                           ;color_instructions.c: 60:     while (a>0){
  4769   001A28  502D               	movf	YellowInstructions@a^0,w,c
  4770   001A2A  A4D8               	btfss	status,2,c
  4771   001A2C  EF1A  F00D         	goto	u2131
  4772   001A30  EF1C  F00D         	goto	u2130
  4773   001A34                     u2131:
  4774   001A34  EF09  F00D         	goto	l2821
  4775   001A38                     u2130:
  4776   001A38                     
  4777                           ;color_instructions.c: 64:     _delay((unsigned long)((500)*(64000000/4000.0)));
  4778   001A38  0E29               	movlw	41
  4779   001A3A  6E2C               	movwf	(??_YellowInstructions+1)^0,c
  4780   001A3C  0E96               	movlw	150
  4781   001A3E  6E2B               	movwf	??_YellowInstructions^0,c
  4782   001A40  0E7F               	movlw	127
  4783   001A42                     u4107:
  4784   001A42  2EE8               	decfsz	wreg,f,c
  4785   001A44  D7FE               	bra	u4107
  4786   001A46  2E2B               	decfsz	??_YellowInstructions^0,f,c
  4787   001A48  D7FC               	bra	u4107
  4788   001A4A  2E2C               	decfsz	(??_YellowInstructions+1)^0,f,c
  4789   001A4C  D7FA               	bra	u4107
  4790   001A4E  F000               	nop	
  4791   001A50                     
  4792                           ;color_instructions.c: 65:     turnRight90(mL, mR);
  4793   001A50  C027  F022         	movff	YellowInstructions@mL,turnRight90@mL
  4794   001A54  C028  F023         	movff	YellowInstructions@mL+1,turnRight90@mL+1
  4795   001A58  C029  F024         	movff	YellowInstructions@mR,turnRight90@mR
  4796   001A5C  C02A  F025         	movff	YellowInstructions@mR+1,turnRight90@mR+1
  4797   001A60  EC2E  F00F         	call	_turnRight90	;wreg free
  4798   001A64  0012               	return		;funcret
  4799   001A66                     __end_of_YellowInstructions:
  4800                           	callstack 0
  4801                           
  4802 ;; *************** function _RedInstructions *****************
  4803 ;; Defined at:
  4804 ;;		line 8 in file "color_instructions.c"
  4805 ;; Parameters:    Size  Location     Type
  4806 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  4807 ;;		 -> main@motorL(9), 
  4808 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  4809 ;;		 -> main@motorR(9), 
  4810 ;; Auto vars:     Size  Location     Type
  4811 ;;  a               1   44[COMRAM] unsigned char 
  4812 ;; Return value:  Size  Location     Type
  4813 ;;                  1    wreg      void 
  4814 ;; Registers used:
  4815 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4816 ;; Tracked objects:
  4817 ;;		On entry : 0/0
  4818 ;;		On exit  : 0/0
  4819 ;;		Unchanged: 0/0
  4820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4821 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4822 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4823 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4824 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4825 ;;Total ram usage:        7 bytes
  4826 ;; Hardware stack levels used: 1
  4827 ;; Hardware stack levels required when called: 11
  4828 ;; This function calls:
  4829 ;;		_fullSpeedBackwards
  4830 ;;		_stop
  4831 ;;		_turnRight90
  4832 ;; This function is called by:
  4833 ;;		_MoveBuggy
  4834 ;; This function uses a non-reentrant model
  4835 ;;
  4836                           
  4837                           	psect	text21
  4838   001A66                     __ptext21:
  4839                           	callstack 0
  4840   001A66                     _RedInstructions:
  4841                           	callstack 18
  4842   001A66                     
  4843                           ;color_instructions.c: 10:     unsigned char a=0;
  4844   001A66  0E00               	movlw	0
  4845   001A68  6E2D               	movwf	RedInstructions@a^0,c
  4846                           
  4847                           ;color_instructions.c: 11:     while (a<8){
  4848   001A6A  EF42  F00D         	goto	l2765
  4849   001A6E                     l2761:
  4850                           
  4851                           ;color_instructions.c: 12:         fullSpeedBackwards(mL, mR);
  4852   001A6E  C027  F01C         	movff	RedInstructions@mL,fullSpeedBackwards@mL
  4853   001A72  C028  F01D         	movff	RedInstructions@mL+1,fullSpeedBackwards@mL+1
  4854   001A76  C029  F01E         	movff	RedInstructions@mR,fullSpeedBackwards@mR
  4855   001A7A  C02A  F01F         	movff	RedInstructions@mR+1,fullSpeedBackwards@mR+1
  4856   001A7E  ECD3  F00B         	call	_fullSpeedBackwards	;wreg free
  4857   001A82                     
  4858                           ;color_instructions.c: 13:         a++;
  4859   001A82  2A2D               	incf	RedInstructions@a^0,f,c
  4860   001A84                     l2765:
  4861                           
  4862                           ;color_instructions.c: 11:     while (a<8){
  4863   001A84  0E07               	movlw	7
  4864   001A86  642D               	cpfsgt	RedInstructions@a^0,c
  4865   001A88  EF48  F00D         	goto	u2061
  4866   001A8C  EF4A  F00D         	goto	u2060
  4867   001A90                     u2061:
  4868   001A90  EF37  F00D         	goto	l2761
  4869   001A94                     u2060:
  4870   001A94  EF57  F00D         	goto	l2771
  4871   001A98                     l2767:
  4872                           
  4873                           ;color_instructions.c: 16:         stop(mL, mR);
  4874   001A98  C027  F01C         	movff	RedInstructions@mL,stop@mL
  4875   001A9C  C028  F01D         	movff	RedInstructions@mL+1,stop@mL+1
  4876   001AA0  C029  F01E         	movff	RedInstructions@mR,stop@mR
  4877   001AA4  C02A  F01F         	movff	RedInstructions@mR+1,stop@mR+1
  4878   001AA8  EC3E  F00C         	call	_stop	;wreg free
  4879   001AAC                     
  4880                           ;color_instructions.c: 17:         a--;
  4881   001AAC  062D               	decf	RedInstructions@a^0,f,c
  4882   001AAE                     l2771:
  4883                           
  4884                           ;color_instructions.c: 15:     while (a>0){
  4885   001AAE  502D               	movf	RedInstructions@a^0,w,c
  4886   001AB0  A4D8               	btfss	status,2,c
  4887   001AB2  EF5D  F00D         	goto	u2071
  4888   001AB6  EF5F  F00D         	goto	u2070
  4889   001ABA                     u2071:
  4890   001ABA  EF4C  F00D         	goto	l2767
  4891   001ABE                     u2070:
  4892   001ABE                     
  4893                           ;color_instructions.c: 19:     _delay((unsigned long)((250)*(64000000/4000.0)));
  4894   001ABE  0E15               	movlw	21
  4895   001AC0  6E2C               	movwf	(??_RedInstructions+1)^0,c
  4896   001AC2  0E4B               	movlw	75
  4897   001AC4  6E2B               	movwf	??_RedInstructions^0,c
  4898   001AC6  0EBE               	movlw	190
  4899   001AC8                     u4117:
  4900   001AC8  2EE8               	decfsz	wreg,f,c
  4901   001ACA  D7FE               	bra	u4117
  4902   001ACC  2E2B               	decfsz	??_RedInstructions^0,f,c
  4903   001ACE  D7FC               	bra	u4117
  4904   001AD0  2E2C               	decfsz	(??_RedInstructions+1)^0,f,c
  4905   001AD2  D7FA               	bra	u4117
  4906   001AD4  D000               	nop2	
  4907   001AD6                     
  4908                           ;color_instructions.c: 20:     turnRight90(mL, mR);
  4909   001AD6  C027  F022         	movff	RedInstructions@mL,turnRight90@mL
  4910   001ADA  C028  F023         	movff	RedInstructions@mL+1,turnRight90@mL+1
  4911   001ADE  C029  F024         	movff	RedInstructions@mR,turnRight90@mR
  4912   001AE2  C02A  F025         	movff	RedInstructions@mR+1,turnRight90@mR+1
  4913   001AE6  EC2E  F00F         	call	_turnRight90	;wreg free
  4914   001AEA  0012               	return		;funcret
  4915   001AEC                     __end_of_RedInstructions:
  4916                           	callstack 0
  4917                           
  4918 ;; *************** function _turnRight90 *****************
  4919 ;; Defined at:
  4920 ;;		line 272 in file "dc_motor.c"
  4921 ;; Parameters:    Size  Location     Type
  4922 ;;  mL              2   33[COMRAM] PTR struct DC_motor
  4923 ;;		 -> main@motorL(9), 
  4924 ;;  mR              2   35[COMRAM] PTR struct DC_motor
  4925 ;;		 -> main@motorR(9), 
  4926 ;; Auto vars:     Size  Location     Type
  4927 ;;  a               1   37[COMRAM] unsigned char 
  4928 ;; Return value:  Size  Location     Type
  4929 ;;                  1    wreg      void 
  4930 ;; Registers used:
  4931 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4932 ;; Tracked objects:
  4933 ;;		On entry : 0/0
  4934 ;;		On exit  : 0/0
  4935 ;;		Unchanged: 0/0
  4936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4937 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4938 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4940 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4941 ;;Total ram usage:        5 bytes
  4942 ;; Hardware stack levels used: 1
  4943 ;; Hardware stack levels required when called: 10
  4944 ;; This function calls:
  4945 ;;		_stop
  4946 ;;		_turnRight
  4947 ;; This function is called by:
  4948 ;;		_RedInstructions
  4949 ;;		_YellowInstructions
  4950 ;; This function uses a non-reentrant model
  4951 ;;
  4952                           
  4953                           	psect	text22
  4954   001E5C                     __ptext22:
  4955                           	callstack 0
  4956   001E5C                     _turnRight90:
  4957                           	callstack 18
  4958   001E5C                     
  4959                           ;dc_motor.c: 274:     unsigned char a=0;
  4960   001E5C  0E00               	movlw	0
  4961   001E5E  6E26               	movwf	turnRight90@a^0,c
  4962                           
  4963                           ;dc_motor.c: 275:     while(a<19){
  4964   001E60  EF3D  F00F         	goto	l2655
  4965   001E64                     l2651:
  4966                           
  4967                           ;dc_motor.c: 276:         turnRight(mL, mR);
  4968   001E64  C022  F01C         	movff	turnRight90@mL,turnRight@mL
  4969   001E68  C023  F01D         	movff	turnRight90@mL+1,turnRight@mL+1
  4970   001E6C  C024  F01E         	movff	turnRight90@mR,turnRight@mR
  4971   001E70  C025  F01F         	movff	turnRight90@mR+1,turnRight@mR+1
  4972   001E74  ECF1  F00A         	call	_turnRight	;wreg free
  4973   001E78                     
  4974                           ;dc_motor.c: 277:         a++;
  4975   001E78  2A26               	incf	turnRight90@a^0,f,c
  4976   001E7A                     l2655:
  4977                           
  4978                           ;dc_motor.c: 275:     while(a<19){
  4979   001E7A  0E12               	movlw	18
  4980   001E7C  6426               	cpfsgt	turnRight90@a^0,c
  4981   001E7E  EF43  F00F         	goto	u1981
  4982   001E82  EF45  F00F         	goto	u1980
  4983   001E86                     u1981:
  4984   001E86  EF32  F00F         	goto	l2651
  4985   001E8A                     u1980:
  4986   001E8A  EF52  F00F         	goto	l2661
  4987   001E8E                     l2657:
  4988                           
  4989                           ;dc_motor.c: 280:         stop(mL, mR);
  4990   001E8E  C022  F01C         	movff	turnRight90@mL,stop@mL
  4991   001E92  C023  F01D         	movff	turnRight90@mL+1,stop@mL+1
  4992   001E96  C024  F01E         	movff	turnRight90@mR,stop@mR
  4993   001E9A  C025  F01F         	movff	turnRight90@mR+1,stop@mR+1
  4994   001E9E  EC3E  F00C         	call	_stop	;wreg free
  4995   001EA2                     
  4996                           ;dc_motor.c: 281:         a--;
  4997   001EA2  0626               	decf	turnRight90@a^0,f,c
  4998   001EA4                     l2661:
  4999                           
  5000                           ;dc_motor.c: 279:     while(a>0){
  5001   001EA4  5026               	movf	turnRight90@a^0,w,c
  5002   001EA6  A4D8               	btfss	status,2,c
  5003   001EA8  EF58  F00F         	goto	u1991
  5004   001EAC  EF5A  F00F         	goto	u1990
  5005   001EB0                     u1991:
  5006   001EB0  EF47  F00F         	goto	l2657
  5007   001EB4                     u1990:
  5008   001EB4  0012               	return		;funcret
  5009   001EB6                     __end_of_turnRight90:
  5010                           	callstack 0
  5011                           
  5012 ;; *************** function _PinkInstructions *****************
  5013 ;; Defined at:
  5014 ;;		line 68 in file "color_instructions.c"
  5015 ;; Parameters:    Size  Location     Type
  5016 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  5017 ;;		 -> main@motorL(9), 
  5018 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  5019 ;;		 -> main@motorR(9), 
  5020 ;; Auto vars:     Size  Location     Type
  5021 ;;  a               1   44[COMRAM] unsigned char 
  5022 ;; Return value:  Size  Location     Type
  5023 ;;                  1    wreg      void 
  5024 ;; Registers used:
  5025 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5026 ;; Tracked objects:
  5027 ;;		On entry : 0/0
  5028 ;;		On exit  : 0/0
  5029 ;;		Unchanged: 0/0
  5030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5031 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5032 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5033 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5034 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5035 ;;Total ram usage:        7 bytes
  5036 ;; Hardware stack levels used: 1
  5037 ;; Hardware stack levels required when called: 11
  5038 ;; This function calls:
  5039 ;;		_fullSpeedBackwards
  5040 ;;		_stop
  5041 ;;		_turnLeft90
  5042 ;; This function is called by:
  5043 ;;		_MoveBuggy
  5044 ;; This function uses a non-reentrant model
  5045 ;;
  5046                           
  5047                           	psect	text23
  5048   001AEC                     __ptext23:
  5049                           	callstack 0
  5050   001AEC                     _PinkInstructions:
  5051                           	callstack 18
  5052   001AEC                     
  5053                           ;color_instructions.c: 69:     unsigned char a=0;
  5054   001AEC  0E00               	movlw	0
  5055   001AEE  6E2D               	movwf	PinkInstructions@a^0,c
  5056                           
  5057                           ;color_instructions.c: 70:     while (a<20){
  5058   001AF0  EF85  F00D         	goto	l2837
  5059   001AF4                     l2833:
  5060                           
  5061                           ;color_instructions.c: 71:         fullSpeedBackwards(mL, mR);
  5062   001AF4  C027  F01C         	movff	PinkInstructions@mL,fullSpeedBackwards@mL
  5063   001AF8  C028  F01D         	movff	PinkInstructions@mL+1,fullSpeedBackwards@mL+1
  5064   001AFC  C029  F01E         	movff	PinkInstructions@mR,fullSpeedBackwards@mR
  5065   001B00  C02A  F01F         	movff	PinkInstructions@mR+1,fullSpeedBackwards@mR+1
  5066   001B04  ECD3  F00B         	call	_fullSpeedBackwards	;wreg free
  5067   001B08                     
  5068                           ;color_instructions.c: 72:         a++;
  5069   001B08  2A2D               	incf	PinkInstructions@a^0,f,c
  5070   001B0A                     l2837:
  5071                           
  5072                           ;color_instructions.c: 70:     while (a<20){
  5073   001B0A  0E13               	movlw	19
  5074   001B0C  642D               	cpfsgt	PinkInstructions@a^0,c
  5075   001B0E  EF8B  F00D         	goto	u2141
  5076   001B12  EF8D  F00D         	goto	u2140
  5077   001B16                     u2141:
  5078   001B16  EF7A  F00D         	goto	l2833
  5079   001B1A                     u2140:
  5080   001B1A  EF9A  F00D         	goto	l2843
  5081   001B1E                     l2839:
  5082                           
  5083                           ;color_instructions.c: 75:         stop(mL, mR);
  5084   001B1E  C027  F01C         	movff	PinkInstructions@mL,stop@mL
  5085   001B22  C028  F01D         	movff	PinkInstructions@mL+1,stop@mL+1
  5086   001B26  C029  F01E         	movff	PinkInstructions@mR,stop@mR
  5087   001B2A  C02A  F01F         	movff	PinkInstructions@mR+1,stop@mR+1
  5088   001B2E  EC3E  F00C         	call	_stop	;wreg free
  5089   001B32                     
  5090                           ;color_instructions.c: 76:         a--;
  5091   001B32  062D               	decf	PinkInstructions@a^0,f,c
  5092   001B34                     l2843:
  5093                           
  5094                           ;color_instructions.c: 74:     while (a>0){
  5095   001B34  502D               	movf	PinkInstructions@a^0,w,c
  5096   001B36  A4D8               	btfss	status,2,c
  5097   001B38  EFA0  F00D         	goto	u2151
  5098   001B3C  EFA2  F00D         	goto	u2150
  5099   001B40                     u2151:
  5100   001B40  EF8F  F00D         	goto	l2839
  5101   001B44                     u2150:
  5102   001B44                     
  5103                           ;color_instructions.c: 78:     _delay((unsigned long)((500)*(64000000/4000.0)));
  5104   001B44  0E29               	movlw	41
  5105   001B46  6E2C               	movwf	(??_PinkInstructions+1)^0,c
  5106   001B48  0E96               	movlw	150
  5107   001B4A  6E2B               	movwf	??_PinkInstructions^0,c
  5108   001B4C  0E7F               	movlw	127
  5109   001B4E                     u4127:
  5110   001B4E  2EE8               	decfsz	wreg,f,c
  5111   001B50  D7FE               	bra	u4127
  5112   001B52  2E2B               	decfsz	??_PinkInstructions^0,f,c
  5113   001B54  D7FC               	bra	u4127
  5114   001B56  2E2C               	decfsz	(??_PinkInstructions+1)^0,f,c
  5115   001B58  D7FA               	bra	u4127
  5116   001B5A  F000               	nop	
  5117   001B5C                     
  5118                           ;color_instructions.c: 79:     turnLeft90(mL, mR);
  5119   001B5C  C027  F022         	movff	PinkInstructions@mL,turnLeft90@mL
  5120   001B60  C028  F023         	movff	PinkInstructions@mL+1,turnLeft90@mL+1
  5121   001B64  C029  F024         	movff	PinkInstructions@mR,turnLeft90@mR
  5122   001B68  C02A  F025         	movff	PinkInstructions@mR+1,turnLeft90@mR+1
  5123   001B6C  ECB5  F00F         	call	_turnLeft90	;wreg free
  5124   001B70  0012               	return		;funcret
  5125   001B72                     __end_of_PinkInstructions:
  5126                           	callstack 0
  5127                           
  5128 ;; *************** function _OrangeInstructions *****************
  5129 ;; Defined at:
  5130 ;;		line 83 in file "color_instructions.c"
  5131 ;; Parameters:    Size  Location     Type
  5132 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  5133 ;;		 -> main@motorL(9), 
  5134 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  5135 ;;		 -> main@motorR(9), 
  5136 ;; Auto vars:     Size  Location     Type
  5137 ;;  a               1   44[COMRAM] unsigned char 
  5138 ;; Return value:  Size  Location     Type
  5139 ;;                  1    wreg      void 
  5140 ;; Registers used:
  5141 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5142 ;; Tracked objects:
  5143 ;;		On entry : 0/0
  5144 ;;		On exit  : 0/0
  5145 ;;		Unchanged: 0/0
  5146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5147 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5148 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5149 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5150 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5151 ;;Total ram usage:        7 bytes
  5152 ;; Hardware stack levels used: 1
  5153 ;; Hardware stack levels required when called: 11
  5154 ;; This function calls:
  5155 ;;		_fullSpeedBackwards
  5156 ;;		_stop
  5157 ;;		_turnRight135
  5158 ;; This function is called by:
  5159 ;;		_MoveBuggy
  5160 ;; This function uses a non-reentrant model
  5161 ;;
  5162                           
  5163                           	psect	text24
  5164   001B72                     __ptext24:
  5165                           	callstack 0
  5166   001B72                     _OrangeInstructions:
  5167                           	callstack 18
  5168   001B72                     
  5169                           ;color_instructions.c: 84:     unsigned char a=0;
  5170   001B72  0E00               	movlw	0
  5171   001B74  6E2D               	movwf	OrangeInstructions@a^0,c
  5172                           
  5173                           ;color_instructions.c: 85:     while (a<30){
  5174   001B76  EFC8  F00D         	goto	l2855
  5175   001B7A                     l2851:
  5176                           
  5177                           ;color_instructions.c: 86:         fullSpeedBackwards(mL, mR);
  5178   001B7A  C027  F01C         	movff	OrangeInstructions@mL,fullSpeedBackwards@mL
  5179   001B7E  C028  F01D         	movff	OrangeInstructions@mL+1,fullSpeedBackwards@mL+1
  5180   001B82  C029  F01E         	movff	OrangeInstructions@mR,fullSpeedBackwards@mR
  5181   001B86  C02A  F01F         	movff	OrangeInstructions@mR+1,fullSpeedBackwards@mR+1
  5182   001B8A  ECD3  F00B         	call	_fullSpeedBackwards	;wreg free
  5183   001B8E                     
  5184                           ;color_instructions.c: 87:         a++;
  5185   001B8E  2A2D               	incf	OrangeInstructions@a^0,f,c
  5186   001B90                     l2855:
  5187                           
  5188                           ;color_instructions.c: 85:     while (a<30){
  5189   001B90  0E1D               	movlw	29
  5190   001B92  642D               	cpfsgt	OrangeInstructions@a^0,c
  5191   001B94  EFCE  F00D         	goto	u2161
  5192   001B98  EFD0  F00D         	goto	u2160
  5193   001B9C                     u2161:
  5194   001B9C  EFBD  F00D         	goto	l2851
  5195   001BA0                     u2160:
  5196   001BA0  EFDD  F00D         	goto	l2861
  5197   001BA4                     l2857:
  5198                           
  5199                           ;color_instructions.c: 90:         stop(mL, mR);
  5200   001BA4  C027  F01C         	movff	OrangeInstructions@mL,stop@mL
  5201   001BA8  C028  F01D         	movff	OrangeInstructions@mL+1,stop@mL+1
  5202   001BAC  C029  F01E         	movff	OrangeInstructions@mR,stop@mR
  5203   001BB0  C02A  F01F         	movff	OrangeInstructions@mR+1,stop@mR+1
  5204   001BB4  EC3E  F00C         	call	_stop	;wreg free
  5205   001BB8                     
  5206                           ;color_instructions.c: 91:         a--;
  5207   001BB8  062D               	decf	OrangeInstructions@a^0,f,c
  5208   001BBA                     l2861:
  5209                           
  5210                           ;color_instructions.c: 89:     while (a>0){
  5211   001BBA  502D               	movf	OrangeInstructions@a^0,w,c
  5212   001BBC  A4D8               	btfss	status,2,c
  5213   001BBE  EFE3  F00D         	goto	u2171
  5214   001BC2  EFE5  F00D         	goto	u2170
  5215   001BC6                     u2171:
  5216   001BC6  EFD2  F00D         	goto	l2857
  5217   001BCA                     u2170:
  5218   001BCA                     
  5219                           ;color_instructions.c: 93:     _delay((unsigned long)((500)*(64000000/4000.0)));
  5220   001BCA  0E29               	movlw	41
  5221   001BCC  6E2C               	movwf	(??_OrangeInstructions+1)^0,c
  5222   001BCE  0E96               	movlw	150
  5223   001BD0  6E2B               	movwf	??_OrangeInstructions^0,c
  5224   001BD2  0E7F               	movlw	127
  5225   001BD4                     u4137:
  5226   001BD4  2EE8               	decfsz	wreg,f,c
  5227   001BD6  D7FE               	bra	u4137
  5228   001BD8  2E2B               	decfsz	??_OrangeInstructions^0,f,c
  5229   001BDA  D7FC               	bra	u4137
  5230   001BDC  2E2C               	decfsz	(??_OrangeInstructions+1)^0,f,c
  5231   001BDE  D7FA               	bra	u4137
  5232   001BE0  F000               	nop	
  5233   001BE2                     
  5234                           ;color_instructions.c: 95:     turnRight135(mL, mR);
  5235   001BE2  C027  F022         	movff	OrangeInstructions@mL,turnRight135@mL
  5236   001BE6  C028  F023         	movff	OrangeInstructions@mL+1,turnRight135@mL+1
  5237   001BEA  C029  F024         	movff	OrangeInstructions@mR,turnRight135@mR
  5238   001BEE  C02A  F025         	movff	OrangeInstructions@mR+1,turnRight135@mR+1
  5239   001BF2  EC5B  F00F         	call	_turnRight135	;wreg free
  5240   001BF6  0012               	return		;funcret
  5241   001BF8                     __end_of_OrangeInstructions:
  5242                           	callstack 0
  5243                           
  5244 ;; *************** function _turnRight135 *****************
  5245 ;; Defined at:
  5246 ;;		line 298 in file "dc_motor.c"
  5247 ;; Parameters:    Size  Location     Type
  5248 ;;  mL              2   33[COMRAM] PTR struct DC_motor
  5249 ;;		 -> main@motorL(9), 
  5250 ;;  mR              2   35[COMRAM] PTR struct DC_motor
  5251 ;;		 -> main@motorR(9), 
  5252 ;; Auto vars:     Size  Location     Type
  5253 ;;  a               1   37[COMRAM] unsigned char 
  5254 ;; Return value:  Size  Location     Type
  5255 ;;                  1    wreg      void 
  5256 ;; Registers used:
  5257 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5258 ;; Tracked objects:
  5259 ;;		On entry : 0/0
  5260 ;;		On exit  : 0/0
  5261 ;;		Unchanged: 0/0
  5262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5263 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5264 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5266 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5267 ;;Total ram usage:        5 bytes
  5268 ;; Hardware stack levels used: 1
  5269 ;; Hardware stack levels required when called: 10
  5270 ;; This function calls:
  5271 ;;		_stop
  5272 ;;		_turnRight
  5273 ;; This function is called by:
  5274 ;;		_OrangeInstructions
  5275 ;; This function uses a non-reentrant model
  5276 ;;
  5277                           
  5278                           	psect	text25
  5279   001EB6                     __ptext25:
  5280                           	callstack 0
  5281   001EB6                     _turnRight135:
  5282                           	callstack 18
  5283   001EB6                     
  5284                           ;dc_motor.c: 300:     unsigned char a=0;
  5285   001EB6  0E00               	movlw	0
  5286   001EB8  6E26               	movwf	turnRight135@a^0,c
  5287                           
  5288                           ;dc_motor.c: 301:     while(a<69){
  5289   001EBA  EF6A  F00F         	goto	l2683
  5290   001EBE                     l2679:
  5291                           
  5292                           ;dc_motor.c: 302:         turnRight(mL, mR);
  5293   001EBE  C022  F01C         	movff	turnRight135@mL,turnRight@mL
  5294   001EC2  C023  F01D         	movff	turnRight135@mL+1,turnRight@mL+1
  5295   001EC6  C024  F01E         	movff	turnRight135@mR,turnRight@mR
  5296   001ECA  C025  F01F         	movff	turnRight135@mR+1,turnRight@mR+1
  5297   001ECE  ECF1  F00A         	call	_turnRight	;wreg free
  5298   001ED2                     
  5299                           ;dc_motor.c: 303:         a++;
  5300   001ED2  2A26               	incf	turnRight135@a^0,f,c
  5301   001ED4                     l2683:
  5302                           
  5303                           ;dc_motor.c: 301:     while(a<69){
  5304   001ED4  0E44               	movlw	68
  5305   001ED6  6426               	cpfsgt	turnRight135@a^0,c
  5306   001ED8  EF70  F00F         	goto	u2021
  5307   001EDC  EF72  F00F         	goto	u2020
  5308   001EE0                     u2021:
  5309   001EE0  EF5F  F00F         	goto	l2679
  5310   001EE4                     u2020:
  5311   001EE4  EF7F  F00F         	goto	l2689
  5312   001EE8                     l2685:
  5313                           
  5314                           ;dc_motor.c: 306:         stop(mL, mR);
  5315   001EE8  C022  F01C         	movff	turnRight135@mL,stop@mL
  5316   001EEC  C023  F01D         	movff	turnRight135@mL+1,stop@mL+1
  5317   001EF0  C024  F01E         	movff	turnRight135@mR,stop@mR
  5318   001EF4  C025  F01F         	movff	turnRight135@mR+1,stop@mR+1
  5319   001EF8  EC3E  F00C         	call	_stop	;wreg free
  5320   001EFC                     
  5321                           ;dc_motor.c: 307:         a--;
  5322   001EFC  0626               	decf	turnRight135@a^0,f,c
  5323   001EFE                     l2689:
  5324                           
  5325                           ;dc_motor.c: 305:     while(a>0){
  5326   001EFE  5026               	movf	turnRight135@a^0,w,c
  5327   001F00  A4D8               	btfss	status,2,c
  5328   001F02  EF85  F00F         	goto	u2031
  5329   001F06  EF87  F00F         	goto	u2030
  5330   001F0A                     u2031:
  5331   001F0A  EF74  F00F         	goto	l2685
  5332   001F0E                     u2030:
  5333   001F0E  0012               	return		;funcret
  5334   001F10                     __end_of_turnRight135:
  5335                           	callstack 0
  5336                           
  5337 ;; *************** function _LightBlueInstructions *****************
  5338 ;; Defined at:
  5339 ;;		line 98 in file "color_instructions.c"
  5340 ;; Parameters:    Size  Location     Type
  5341 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  5342 ;;		 -> main@motorL(9), 
  5343 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  5344 ;;		 -> main@motorR(9), 
  5345 ;; Auto vars:     Size  Location     Type
  5346 ;;  a               1   44[COMRAM] unsigned char 
  5347 ;; Return value:  Size  Location     Type
  5348 ;;                  1    wreg      void 
  5349 ;; Registers used:
  5350 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5351 ;; Tracked objects:
  5352 ;;		On entry : 0/0
  5353 ;;		On exit  : 0/0
  5354 ;;		Unchanged: 0/0
  5355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5356 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5357 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5358 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5359 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5360 ;;Total ram usage:        7 bytes
  5361 ;; Hardware stack levels used: 1
  5362 ;; Hardware stack levels required when called: 11
  5363 ;; This function calls:
  5364 ;;		_fullSpeedBackwards
  5365 ;;		_stop
  5366 ;;		_turnLeft135
  5367 ;; This function is called by:
  5368 ;;		_MoveBuggy
  5369 ;; This function uses a non-reentrant model
  5370 ;;
  5371                           
  5372                           	psect	text26
  5373   001BF8                     __ptext26:
  5374                           	callstack 0
  5375   001BF8                     _LightBlueInstructions:
  5376                           	callstack 18
  5377   001BF8                     
  5378                           ;color_instructions.c: 99:     unsigned char a=0;
  5379   001BF8  0E00               	movlw	0
  5380   001BFA  6E2D               	movwf	LightBlueInstructions@a^0,c
  5381                           
  5382                           ;color_instructions.c: 100:     while (a<30){
  5383   001BFC  EF0B  F00E         	goto	l2873
  5384   001C00                     l2869:
  5385                           
  5386                           ;color_instructions.c: 101:         fullSpeedBackwards(mL, mR);
  5387   001C00  C027  F01C         	movff	LightBlueInstructions@mL,fullSpeedBackwards@mL
  5388   001C04  C028  F01D         	movff	LightBlueInstructions@mL+1,fullSpeedBackwards@mL+1
  5389   001C08  C029  F01E         	movff	LightBlueInstructions@mR,fullSpeedBackwards@mR
  5390   001C0C  C02A  F01F         	movff	LightBlueInstructions@mR+1,fullSpeedBackwards@mR+1
  5391   001C10  ECD3  F00B         	call	_fullSpeedBackwards	;wreg free
  5392   001C14                     
  5393                           ;color_instructions.c: 102:         a++;
  5394   001C14  2A2D               	incf	LightBlueInstructions@a^0,f,c
  5395   001C16                     l2873:
  5396                           
  5397                           ;color_instructions.c: 100:     while (a<30){
  5398   001C16  0E1D               	movlw	29
  5399   001C18  642D               	cpfsgt	LightBlueInstructions@a^0,c
  5400   001C1A  EF11  F00E         	goto	u2181
  5401   001C1E  EF13  F00E         	goto	u2180
  5402   001C22                     u2181:
  5403   001C22  EF00  F00E         	goto	l2869
  5404   001C26                     u2180:
  5405   001C26  EF20  F00E         	goto	l2879
  5406   001C2A                     l2875:
  5407                           
  5408                           ;color_instructions.c: 105:         stop(mL, mR);
  5409   001C2A  C027  F01C         	movff	LightBlueInstructions@mL,stop@mL
  5410   001C2E  C028  F01D         	movff	LightBlueInstructions@mL+1,stop@mL+1
  5411   001C32  C029  F01E         	movff	LightBlueInstructions@mR,stop@mR
  5412   001C36  C02A  F01F         	movff	LightBlueInstructions@mR+1,stop@mR+1
  5413   001C3A  EC3E  F00C         	call	_stop	;wreg free
  5414   001C3E                     
  5415                           ;color_instructions.c: 106:         a--;
  5416   001C3E  062D               	decf	LightBlueInstructions@a^0,f,c
  5417   001C40                     l2879:
  5418                           
  5419                           ;color_instructions.c: 104:     while (a>0){
  5420   001C40  502D               	movf	LightBlueInstructions@a^0,w,c
  5421   001C42  A4D8               	btfss	status,2,c
  5422   001C44  EF26  F00E         	goto	u2191
  5423   001C48  EF28  F00E         	goto	u2190
  5424   001C4C                     u2191:
  5425   001C4C  EF15  F00E         	goto	l2875
  5426   001C50                     u2190:
  5427   001C50                     
  5428                           ;color_instructions.c: 108:     _delay((unsigned long)((500)*(64000000/4000.0)));
  5429   001C50  0E29               	movlw	41
  5430   001C52  6E2C               	movwf	(??_LightBlueInstructions+1)^0,c
  5431   001C54  0E96               	movlw	150
  5432   001C56  6E2B               	movwf	??_LightBlueInstructions^0,c
  5433   001C58  0E7F               	movlw	127
  5434   001C5A                     u4147:
  5435   001C5A  2EE8               	decfsz	wreg,f,c
  5436   001C5C  D7FE               	bra	u4147
  5437   001C5E  2E2B               	decfsz	??_LightBlueInstructions^0,f,c
  5438   001C60  D7FC               	bra	u4147
  5439   001C62  2E2C               	decfsz	(??_LightBlueInstructions+1)^0,f,c
  5440   001C64  D7FA               	bra	u4147
  5441   001C66  F000               	nop	
  5442   001C68                     
  5443                           ;color_instructions.c: 110:     turnLeft135(mL, mR);
  5444   001C68  C027  F022         	movff	LightBlueInstructions@mL,turnLeft135@mL
  5445   001C6C  C028  F023         	movff	LightBlueInstructions@mL+1,turnLeft135@mL+1
  5446   001C70  C029  F024         	movff	LightBlueInstructions@mR,turnLeft135@mR
  5447   001C74  C02A  F025         	movff	LightBlueInstructions@mR+1,turnLeft135@mR+1
  5448   001C78  EC88  F00F         	call	_turnLeft135	;wreg free
  5449   001C7C  0012               	return		;funcret
  5450   001C7E                     __end_of_LightBlueInstructions:
  5451                           	callstack 0
  5452                           
  5453 ;; *************** function _turnLeft135 *****************
  5454 ;; Defined at:
  5455 ;;		line 311 in file "dc_motor.c"
  5456 ;; Parameters:    Size  Location     Type
  5457 ;;  mL              2   33[COMRAM] PTR struct DC_motor
  5458 ;;		 -> main@motorL(9), 
  5459 ;;  mR              2   35[COMRAM] PTR struct DC_motor
  5460 ;;		 -> main@motorR(9), 
  5461 ;; Auto vars:     Size  Location     Type
  5462 ;;  a               1   37[COMRAM] unsigned char 
  5463 ;; Return value:  Size  Location     Type
  5464 ;;                  1    wreg      void 
  5465 ;; Registers used:
  5466 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5467 ;; Tracked objects:
  5468 ;;		On entry : 0/0
  5469 ;;		On exit  : 0/0
  5470 ;;		Unchanged: 0/0
  5471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5472 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5473 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5475 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5476 ;;Total ram usage:        5 bytes
  5477 ;; Hardware stack levels used: 1
  5478 ;; Hardware stack levels required when called: 10
  5479 ;; This function calls:
  5480 ;;		_stop
  5481 ;;		_turnLeft
  5482 ;; This function is called by:
  5483 ;;		_LightBlueInstructions
  5484 ;; This function uses a non-reentrant model
  5485 ;;
  5486                           
  5487                           	psect	text27
  5488   001F10                     __ptext27:
  5489                           	callstack 0
  5490   001F10                     _turnLeft135:
  5491                           	callstack 18
  5492   001F10                     
  5493                           ;dc_motor.c: 313:     unsigned char a=0;
  5494   001F10  0E00               	movlw	0
  5495   001F12  6E26               	movwf	turnLeft135@a^0,c
  5496                           
  5497                           ;dc_motor.c: 314:     while(a<69){
  5498   001F14  EF97  F00F         	goto	l2697
  5499   001F18                     l2693:
  5500                           
  5501                           ;dc_motor.c: 315:         turnLeft(mL, mR);
  5502   001F18  C022  F01C         	movff	turnLeft135@mL,turnLeft@mL
  5503   001F1C  C023  F01D         	movff	turnLeft135@mL+1,turnLeft@mL+1
  5504   001F20  C024  F01E         	movff	turnLeft135@mR,turnLeft@mR
  5505   001F24  C025  F01F         	movff	turnLeft135@mR+1,turnLeft@mR+1
  5506   001F28  EC7A  F00A         	call	_turnLeft	;wreg free
  5507   001F2C                     
  5508                           ;dc_motor.c: 316:         a++;
  5509   001F2C  2A26               	incf	turnLeft135@a^0,f,c
  5510   001F2E                     l2697:
  5511                           
  5512                           ;dc_motor.c: 314:     while(a<69){
  5513   001F2E  0E44               	movlw	68
  5514   001F30  6426               	cpfsgt	turnLeft135@a^0,c
  5515   001F32  EF9D  F00F         	goto	u2041
  5516   001F36  EF9F  F00F         	goto	u2040
  5517   001F3A                     u2041:
  5518   001F3A  EF8C  F00F         	goto	l2693
  5519   001F3E                     u2040:
  5520   001F3E  EFAC  F00F         	goto	l2703
  5521   001F42                     l2699:
  5522                           
  5523                           ;dc_motor.c: 319:         stop(mL, mR);
  5524   001F42  C022  F01C         	movff	turnLeft135@mL,stop@mL
  5525   001F46  C023  F01D         	movff	turnLeft135@mL+1,stop@mL+1
  5526   001F4A  C024  F01E         	movff	turnLeft135@mR,stop@mR
  5527   001F4E  C025  F01F         	movff	turnLeft135@mR+1,stop@mR+1
  5528   001F52  EC3E  F00C         	call	_stop	;wreg free
  5529   001F56                     
  5530                           ;dc_motor.c: 320:         a--;
  5531   001F56  0626               	decf	turnLeft135@a^0,f,c
  5532   001F58                     l2703:
  5533                           
  5534                           ;dc_motor.c: 318:     while(a>0){
  5535   001F58  5026               	movf	turnLeft135@a^0,w,c
  5536   001F5A  A4D8               	btfss	status,2,c
  5537   001F5C  EFB2  F00F         	goto	u2051
  5538   001F60  EFB4  F00F         	goto	u2050
  5539   001F64                     u2051:
  5540   001F64  EFA1  F00F         	goto	l2699
  5541   001F68                     u2050:
  5542   001F68  0012               	return		;funcret
  5543   001F6A                     __end_of_turnLeft135:
  5544                           	callstack 0
  5545                           
  5546 ;; *************** function _GreenInstructions *****************
  5547 ;; Defined at:
  5548 ;;		line 23 in file "color_instructions.c"
  5549 ;; Parameters:    Size  Location     Type
  5550 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  5551 ;;		 -> main@motorL(9), 
  5552 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  5553 ;;		 -> main@motorR(9), 
  5554 ;; Auto vars:     Size  Location     Type
  5555 ;;  a               1   44[COMRAM] unsigned char 
  5556 ;; Return value:  Size  Location     Type
  5557 ;;                  1    wreg      void 
  5558 ;; Registers used:
  5559 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5560 ;; Tracked objects:
  5561 ;;		On entry : 0/0
  5562 ;;		On exit  : 0/0
  5563 ;;		Unchanged: 0/0
  5564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5565 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5566 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5567 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5568 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5569 ;;Total ram usage:        7 bytes
  5570 ;; Hardware stack levels used: 1
  5571 ;; Hardware stack levels required when called: 11
  5572 ;; This function calls:
  5573 ;;		_fullSpeedBackwards
  5574 ;;		_stop
  5575 ;;		_turnLeft90
  5576 ;; This function is called by:
  5577 ;;		_MoveBuggy
  5578 ;; This function uses a non-reentrant model
  5579 ;;
  5580                           
  5581                           	psect	text28
  5582   001C7E                     __ptext28:
  5583                           	callstack 0
  5584   001C7E                     _GreenInstructions:
  5585                           	callstack 18
  5586   001C7E                     
  5587                           ;color_instructions.c: 24:     unsigned char a=0;
  5588   001C7E  0E00               	movlw	0
  5589   001C80  6E2D               	movwf	GreenInstructions@a^0,c
  5590                           
  5591                           ;color_instructions.c: 25:     while (a<8){
  5592   001C82  EF4E  F00E         	goto	l2783
  5593   001C86                     l2779:
  5594                           
  5595                           ;color_instructions.c: 26:         fullSpeedBackwards(mL, mR);
  5596   001C86  C027  F01C         	movff	GreenInstructions@mL,fullSpeedBackwards@mL
  5597   001C8A  C028  F01D         	movff	GreenInstructions@mL+1,fullSpeedBackwards@mL+1
  5598   001C8E  C029  F01E         	movff	GreenInstructions@mR,fullSpeedBackwards@mR
  5599   001C92  C02A  F01F         	movff	GreenInstructions@mR+1,fullSpeedBackwards@mR+1
  5600   001C96  ECD3  F00B         	call	_fullSpeedBackwards	;wreg free
  5601   001C9A                     
  5602                           ;color_instructions.c: 27:         a++;
  5603   001C9A  2A2D               	incf	GreenInstructions@a^0,f,c
  5604   001C9C                     l2783:
  5605                           
  5606                           ;color_instructions.c: 25:     while (a<8){
  5607   001C9C  0E07               	movlw	7
  5608   001C9E  642D               	cpfsgt	GreenInstructions@a^0,c
  5609   001CA0  EF54  F00E         	goto	u2081
  5610   001CA4  EF56  F00E         	goto	u2080
  5611   001CA8                     u2081:
  5612   001CA8  EF43  F00E         	goto	l2779
  5613   001CAC                     u2080:
  5614   001CAC  EF63  F00E         	goto	l2789
  5615   001CB0                     l2785:
  5616                           
  5617                           ;color_instructions.c: 30:         stop(mL, mR);
  5618   001CB0  C027  F01C         	movff	GreenInstructions@mL,stop@mL
  5619   001CB4  C028  F01D         	movff	GreenInstructions@mL+1,stop@mL+1
  5620   001CB8  C029  F01E         	movff	GreenInstructions@mR,stop@mR
  5621   001CBC  C02A  F01F         	movff	GreenInstructions@mR+1,stop@mR+1
  5622   001CC0  EC3E  F00C         	call	_stop	;wreg free
  5623   001CC4                     
  5624                           ;color_instructions.c: 31:         a--;
  5625   001CC4  062D               	decf	GreenInstructions@a^0,f,c
  5626   001CC6                     l2789:
  5627                           
  5628                           ;color_instructions.c: 29:     while (a>0){
  5629   001CC6  502D               	movf	GreenInstructions@a^0,w,c
  5630   001CC8  A4D8               	btfss	status,2,c
  5631   001CCA  EF69  F00E         	goto	u2091
  5632   001CCE  EF6B  F00E         	goto	u2090
  5633   001CD2                     u2091:
  5634   001CD2  EF58  F00E         	goto	l2785
  5635   001CD6                     u2090:
  5636   001CD6                     
  5637                           ;color_instructions.c: 33:     _delay((unsigned long)((250)*(64000000/4000.0)));
  5638   001CD6  0E15               	movlw	21
  5639   001CD8  6E2C               	movwf	(??_GreenInstructions+1)^0,c
  5640   001CDA  0E4B               	movlw	75
  5641   001CDC  6E2B               	movwf	??_GreenInstructions^0,c
  5642   001CDE  0EBE               	movlw	190
  5643   001CE0                     u4157:
  5644   001CE0  2EE8               	decfsz	wreg,f,c
  5645   001CE2  D7FE               	bra	u4157
  5646   001CE4  2E2B               	decfsz	??_GreenInstructions^0,f,c
  5647   001CE6  D7FC               	bra	u4157
  5648   001CE8  2E2C               	decfsz	(??_GreenInstructions+1)^0,f,c
  5649   001CEA  D7FA               	bra	u4157
  5650   001CEC  D000               	nop2	
  5651   001CEE                     
  5652                           ;color_instructions.c: 34:     turnLeft90(mL, mR);
  5653   001CEE  C027  F022         	movff	GreenInstructions@mL,turnLeft90@mL
  5654   001CF2  C028  F023         	movff	GreenInstructions@mL+1,turnLeft90@mL+1
  5655   001CF6  C029  F024         	movff	GreenInstructions@mR,turnLeft90@mR
  5656   001CFA  C02A  F025         	movff	GreenInstructions@mR+1,turnLeft90@mR+1
  5657   001CFE  ECB5  F00F         	call	_turnLeft90	;wreg free
  5658   001D02  0012               	return		;funcret
  5659   001D04                     __end_of_GreenInstructions:
  5660                           	callstack 0
  5661                           
  5662 ;; *************** function _turnLeft90 *****************
  5663 ;; Defined at:
  5664 ;;		line 259 in file "dc_motor.c"
  5665 ;; Parameters:    Size  Location     Type
  5666 ;;  mL              2   33[COMRAM] PTR struct DC_motor
  5667 ;;		 -> main@motorL(9), 
  5668 ;;  mR              2   35[COMRAM] PTR struct DC_motor
  5669 ;;		 -> main@motorR(9), 
  5670 ;; Auto vars:     Size  Location     Type
  5671 ;;  a               1   37[COMRAM] unsigned char 
  5672 ;; Return value:  Size  Location     Type
  5673 ;;                  1    wreg      void 
  5674 ;; Registers used:
  5675 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5676 ;; Tracked objects:
  5677 ;;		On entry : 0/0
  5678 ;;		On exit  : 0/0
  5679 ;;		Unchanged: 0/0
  5680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5681 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5682 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5684 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5685 ;;Total ram usage:        5 bytes
  5686 ;; Hardware stack levels used: 1
  5687 ;; Hardware stack levels required when called: 10
  5688 ;; This function calls:
  5689 ;;		_stop
  5690 ;;		_turnLeft
  5691 ;; This function is called by:
  5692 ;;		_GreenInstructions
  5693 ;;		_PinkInstructions
  5694 ;; This function uses a non-reentrant model
  5695 ;;
  5696                           
  5697                           	psect	text29
  5698   001F6A                     __ptext29:
  5699                           	callstack 0
  5700   001F6A                     _turnLeft90:
  5701                           	callstack 18
  5702   001F6A                     
  5703                           ;dc_motor.c: 261:     unsigned char a=0;
  5704   001F6A  0E00               	movlw	0
  5705   001F6C  6E26               	movwf	turnLeft90@a^0,c
  5706                           
  5707                           ;dc_motor.c: 262:     while(a<19){
  5708   001F6E  EFC4  F00F         	goto	l2641
  5709   001F72                     l2637:
  5710                           
  5711                           ;dc_motor.c: 263:         turnLeft(mL, mR);
  5712   001F72  C022  F01C         	movff	turnLeft90@mL,turnLeft@mL
  5713   001F76  C023  F01D         	movff	turnLeft90@mL+1,turnLeft@mL+1
  5714   001F7A  C024  F01E         	movff	turnLeft90@mR,turnLeft@mR
  5715   001F7E  C025  F01F         	movff	turnLeft90@mR+1,turnLeft@mR+1
  5716   001F82  EC7A  F00A         	call	_turnLeft	;wreg free
  5717   001F86                     
  5718                           ;dc_motor.c: 264:         a++;
  5719   001F86  2A26               	incf	turnLeft90@a^0,f,c
  5720   001F88                     l2641:
  5721                           
  5722                           ;dc_motor.c: 262:     while(a<19){
  5723   001F88  0E12               	movlw	18
  5724   001F8A  6426               	cpfsgt	turnLeft90@a^0,c
  5725   001F8C  EFCA  F00F         	goto	u1961
  5726   001F90  EFCC  F00F         	goto	u1960
  5727   001F94                     u1961:
  5728   001F94  EFB9  F00F         	goto	l2637
  5729   001F98                     u1960:
  5730   001F98  EFD9  F00F         	goto	l2647
  5731   001F9C                     l2643:
  5732                           
  5733                           ;dc_motor.c: 267:         stop(mL, mR);
  5734   001F9C  C022  F01C         	movff	turnLeft90@mL,stop@mL
  5735   001FA0  C023  F01D         	movff	turnLeft90@mL+1,stop@mL+1
  5736   001FA4  C024  F01E         	movff	turnLeft90@mR,stop@mR
  5737   001FA8  C025  F01F         	movff	turnLeft90@mR+1,stop@mR+1
  5738   001FAC  EC3E  F00C         	call	_stop	;wreg free
  5739   001FB0                     
  5740                           ;dc_motor.c: 268:         a--;
  5741   001FB0  0626               	decf	turnLeft90@a^0,f,c
  5742   001FB2                     l2647:
  5743                           
  5744                           ;dc_motor.c: 266:     while(a>0){
  5745   001FB2  5026               	movf	turnLeft90@a^0,w,c
  5746   001FB4  A4D8               	btfss	status,2,c
  5747   001FB6  EFDF  F00F         	goto	u1971
  5748   001FBA  EFE1  F00F         	goto	u1970
  5749   001FBE                     u1971:
  5750   001FBE  EFCE  F00F         	goto	l2643
  5751   001FC2                     u1970:
  5752   001FC2  0012               	return		;funcret
  5753   001FC4                     __end_of_turnLeft90:
  5754                           	callstack 0
  5755                           
  5756 ;; *************** function _turnLeft *****************
  5757 ;; Defined at:
  5758 ;;		line 171 in file "dc_motor.c"
  5759 ;; Parameters:    Size  Location     Type
  5760 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  5761 ;;		 -> main@motorL(9), 
  5762 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  5763 ;;		 -> main@motorR(9), 
  5764 ;; Auto vars:     Size  Location     Type
  5765 ;;		None
  5766 ;; Return value:  Size  Location     Type
  5767 ;;                  1    wreg      void 
  5768 ;; Registers used:
  5769 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5770 ;; Tracked objects:
  5771 ;;		On entry : 0/0
  5772 ;;		On exit  : 0/0
  5773 ;;		Unchanged: 0/0
  5774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5775 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5777 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5778 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5779 ;;Total ram usage:        6 bytes
  5780 ;; Hardware stack levels used: 1
  5781 ;; Hardware stack levels required when called: 9
  5782 ;; This function calls:
  5783 ;;		_setMotorPWM
  5784 ;; This function is called by:
  5785 ;;		_turnLeft90
  5786 ;;		_turnLeft135
  5787 ;; This function uses a non-reentrant model
  5788 ;;
  5789                           
  5790                           	psect	text30
  5791   0014F4                     __ptext30:
  5792                           	callstack 0
  5793   0014F4                     _turnLeft:
  5794                           	callstack 18
  5795   0014F4                     
  5796                           ;dc_motor.c: 171: void turnLeft(DC_motor *mL, DC_motor *mR);dc_motor.c: 172: {;dc_motor.
      +                          c: 174:     mL->direction = 0;
  5797   0014F4  EE20 F001          	lfsr	2,1
  5798   0014F8  501C               	movf	turnLeft@mL^0,w,c
  5799   0014FA  26D9               	addwf	fsr2l,f,c
  5800   0014FC  501D               	movf	(turnLeft@mL+1)^0,w,c
  5801   0014FE  22DA               	addwfc	fsr2h,f,c
  5802   001500  0E00               	movlw	0
  5803   001502  6EDF               	movwf	indf2,c
  5804                           
  5805                           ;dc_motor.c: 175:     mL->brakemode = 0;
  5806   001504  EE20 F002          	lfsr	2,2
  5807   001508  501C               	movf	turnLeft@mL^0,w,c
  5808   00150A  26D9               	addwf	fsr2l,f,c
  5809   00150C  501D               	movf	(turnLeft@mL+1)^0,w,c
  5810   00150E  22DA               	addwfc	fsr2h,f,c
  5811   001510  0E00               	movlw	0
  5812   001512  6EDF               	movwf	indf2,c
  5813                           
  5814                           ;dc_motor.c: 177:     mR->direction = 1;
  5815   001514  EE20 F001          	lfsr	2,1
  5816   001518  501E               	movf	turnLeft@mR^0,w,c
  5817   00151A  26D9               	addwf	fsr2l,f,c
  5818   00151C  501F               	movf	(turnLeft@mR+1)^0,w,c
  5819   00151E  22DA               	addwfc	fsr2h,f,c
  5820   001520  0E01               	movlw	1
  5821   001522  6EDF               	movwf	indf2,c
  5822                           
  5823                           ;dc_motor.c: 178:     mR->brakemode = 0;
  5824   001524  EE20 F002          	lfsr	2,2
  5825   001528  501E               	movf	turnLeft@mR^0,w,c
  5826   00152A  26D9               	addwf	fsr2l,f,c
  5827   00152C  501F               	movf	(turnLeft@mR+1)^0,w,c
  5828   00152E  22DA               	addwfc	fsr2h,f,c
  5829   001530  0E00               	movlw	0
  5830   001532  6EDF               	movwf	indf2,c
  5831                           
  5832                           ;dc_motor.c: 181:     if(mL->power>75){mL->power=75;}
  5833   001534  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  5834   001538  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  5835   00153C  50DF               	movf	indf2,w,c
  5836   00153E  0A80               	xorlw	128
  5837   001540  0F34               	addlw	-204
  5838   001542  A0D8               	btfss	status,0,c
  5839   001544  EFA6  F00A         	goto	u1881
  5840   001548  EFA8  F00A         	goto	u1880
  5841   00154C                     u1881:
  5842   00154C  EFAE  F00A         	goto	l2555
  5843   001550                     u1880:
  5844   001550  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  5845   001554  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  5846   001558  0E4B               	movlw	75
  5847   00155A  6EDF               	movwf	indf2,c
  5848   00155C                     l2555:
  5849                           
  5850                           ;dc_motor.c: 182:     if(mR->power>75){mR->power=75;}
  5851   00155C  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  5852   001560  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  5853   001564  50DF               	movf	indf2,w,c
  5854   001566  0A80               	xorlw	128
  5855   001568  0F34               	addlw	-204
  5856   00156A  A0D8               	btfss	status,0,c
  5857   00156C  EFBA  F00A         	goto	u1891
  5858   001570  EFBC  F00A         	goto	u1890
  5859   001574                     u1891:
  5860   001574  EFC2  F00A         	goto	l2559
  5861   001578                     u1890:
  5862   001578  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  5863   00157C  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  5864   001580  0E4B               	movlw	75
  5865   001582  6EDF               	movwf	indf2,c
  5866   001584                     l2559:
  5867                           
  5868                           ;dc_motor.c: 184:     mL->power = mL->power + 5 ;
  5869   001584  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  5870   001588  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  5871   00158C  50DF               	movf	indf2,w,c
  5872   00158E  0F05               	addlw	5
  5873   001590  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  5874   001594  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  5875   001598  6EDF               	movwf	indf2,c
  5876   00159A                     
  5877                           ;dc_motor.c: 185:     mR->power = mR->power + 5;
  5878   00159A  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  5879   00159E  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  5880   0015A2  50DF               	movf	indf2,w,c
  5881   0015A4  0F05               	addlw	5
  5882   0015A6  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  5883   0015AA  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  5884   0015AE  6EDF               	movwf	indf2,c
  5885   0015B0                     
  5886                           ;dc_motor.c: 187:     setMotorPWM(mL);
  5887   0015B0  C01C  F016         	movff	turnLeft@mL,setMotorPWM@m
  5888   0015B4  C01D  F017         	movff	turnLeft@mL+1,setMotorPWM@m+1
  5889   0015B8  EC05  F008         	call	_setMotorPWM	;wreg free
  5890   0015BC                     
  5891                           ;dc_motor.c: 188:     setMotorPWM(mR);
  5892   0015BC  C01E  F016         	movff	turnLeft@mR,setMotorPWM@m
  5893   0015C0  C01F  F017         	movff	turnLeft@mR+1,setMotorPWM@m+1
  5894   0015C4  EC05  F008         	call	_setMotorPWM	;wreg free
  5895   0015C8                     
  5896                           ;dc_motor.c: 189:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5897   0015C8  0E05               	movlw	5
  5898   0015CA  6E21               	movwf	(??_turnLeft+1)^0,c
  5899   0015CC  0E0F               	movlw	15
  5900   0015CE  6E20               	movwf	??_turnLeft^0,c
  5901   0015D0  0EF1               	movlw	241
  5902   0015D2                     u4167:
  5903   0015D2  2EE8               	decfsz	wreg,f,c
  5904   0015D4  D7FE               	bra	u4167
  5905   0015D6  2E20               	decfsz	??_turnLeft^0,f,c
  5906   0015D8  D7FC               	bra	u4167
  5907   0015DA  2E21               	decfsz	(??_turnLeft+1)^0,f,c
  5908   0015DC  D7FA               	bra	u4167
  5909   0015DE  F000               	nop	
  5910   0015E0  0012               	return		;funcret
  5911   0015E2                     __end_of_turnLeft:
  5912                           	callstack 0
  5913                           
  5914 ;; *************** function _BlueInstructions *****************
  5915 ;; Defined at:
  5916 ;;		line 37 in file "color_instructions.c"
  5917 ;; Parameters:    Size  Location     Type
  5918 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  5919 ;;		 -> main@motorL(9), 
  5920 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  5921 ;;		 -> main@motorR(9), 
  5922 ;; Auto vars:     Size  Location     Type
  5923 ;;  a               1   44[COMRAM] unsigned char 
  5924 ;; Return value:  Size  Location     Type
  5925 ;;                  1    wreg      void 
  5926 ;; Registers used:
  5927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5928 ;; Tracked objects:
  5929 ;;		On entry : 0/0
  5930 ;;		On exit  : 0/0
  5931 ;;		Unchanged: 0/0
  5932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5933 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5934 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5935 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5936 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5937 ;;Total ram usage:        7 bytes
  5938 ;; Hardware stack levels used: 1
  5939 ;; Hardware stack levels required when called: 11
  5940 ;; This function calls:
  5941 ;;		_fullSpeedBackwards
  5942 ;;		_stop
  5943 ;;		_turn180
  5944 ;; This function is called by:
  5945 ;;		_MoveBuggy
  5946 ;; This function uses a non-reentrant model
  5947 ;;
  5948                           
  5949                           	psect	text31
  5950   001D04                     __ptext31:
  5951                           	callstack 0
  5952   001D04                     _BlueInstructions:
  5953                           	callstack 18
  5954   001D04                     
  5955                           ;color_instructions.c: 38:     unsigned char a=0;
  5956   001D04  0E00               	movlw	0
  5957   001D06  6E2D               	movwf	BlueInstructions@a^0,c
  5958                           
  5959                           ;color_instructions.c: 39:     while (a<2){
  5960   001D08  EF91  F00E         	goto	l2801
  5961   001D0C                     l2797:
  5962                           
  5963                           ;color_instructions.c: 40:         fullSpeedBackwards(mL, mR);
  5964   001D0C  C027  F01C         	movff	BlueInstructions@mL,fullSpeedBackwards@mL
  5965   001D10  C028  F01D         	movff	BlueInstructions@mL+1,fullSpeedBackwards@mL+1
  5966   001D14  C029  F01E         	movff	BlueInstructions@mR,fullSpeedBackwards@mR
  5967   001D18  C02A  F01F         	movff	BlueInstructions@mR+1,fullSpeedBackwards@mR+1
  5968   001D1C  ECD3  F00B         	call	_fullSpeedBackwards	;wreg free
  5969   001D20                     
  5970                           ;color_instructions.c: 41:         a++;
  5971   001D20  2A2D               	incf	BlueInstructions@a^0,f,c
  5972   001D22                     l2801:
  5973                           
  5974                           ;color_instructions.c: 39:     while (a<2){
  5975   001D22  0E01               	movlw	1
  5976   001D24  642D               	cpfsgt	BlueInstructions@a^0,c
  5977   001D26  EF97  F00E         	goto	u2101
  5978   001D2A  EF99  F00E         	goto	u2100
  5979   001D2E                     u2101:
  5980   001D2E  EF86  F00E         	goto	l2797
  5981   001D32                     u2100:
  5982   001D32  EFA6  F00E         	goto	l2807
  5983   001D36                     l2803:
  5984                           
  5985                           ;color_instructions.c: 44:         stop(mL, mR);
  5986   001D36  C027  F01C         	movff	BlueInstructions@mL,stop@mL
  5987   001D3A  C028  F01D         	movff	BlueInstructions@mL+1,stop@mL+1
  5988   001D3E  C029  F01E         	movff	BlueInstructions@mR,stop@mR
  5989   001D42  C02A  F01F         	movff	BlueInstructions@mR+1,stop@mR+1
  5990   001D46  EC3E  F00C         	call	_stop	;wreg free
  5991   001D4A                     
  5992                           ;color_instructions.c: 45:         a--;
  5993   001D4A  062D               	decf	BlueInstructions@a^0,f,c
  5994   001D4C                     l2807:
  5995                           
  5996                           ;color_instructions.c: 43:     while (a>0){
  5997   001D4C  502D               	movf	BlueInstructions@a^0,w,c
  5998   001D4E  A4D8               	btfss	status,2,c
  5999   001D50  EFAC  F00E         	goto	u2111
  6000   001D54  EFAE  F00E         	goto	u2110
  6001   001D58                     u2111:
  6002   001D58  EF9B  F00E         	goto	l2803
  6003   001D5C                     u2110:
  6004   001D5C                     
  6005                           ;color_instructions.c: 47:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6006   001D5C  0E29               	movlw	41
  6007   001D5E  6E2C               	movwf	(??_BlueInstructions+1)^0,c
  6008   001D60  0E96               	movlw	150
  6009   001D62  6E2B               	movwf	??_BlueInstructions^0,c
  6010   001D64  0E7F               	movlw	127
  6011   001D66                     u4177:
  6012   001D66  2EE8               	decfsz	wreg,f,c
  6013   001D68  D7FE               	bra	u4177
  6014   001D6A  2E2B               	decfsz	??_BlueInstructions^0,f,c
  6015   001D6C  D7FC               	bra	u4177
  6016   001D6E  2E2C               	decfsz	(??_BlueInstructions+1)^0,f,c
  6017   001D70  D7FA               	bra	u4177
  6018   001D72  F000               	nop	
  6019   001D74                     
  6020                           ;color_instructions.c: 49:     turn180(mL, mR);
  6021   001D74  C027  F022         	movff	BlueInstructions@mL,turn180@mL
  6022   001D78  C028  F023         	movff	BlueInstructions@mL+1,turn180@mL+1
  6023   001D7C  C029  F024         	movff	BlueInstructions@mR,turn180@mR
  6024   001D80  C02A  F025         	movff	BlueInstructions@mR+1,turn180@mR+1
  6025   001D84  ECE2  F00F         	call	_turn180	;wreg free
  6026   001D88  0012               	return		;funcret
  6027   001D8A                     __end_of_BlueInstructions:
  6028                           	callstack 0
  6029                           
  6030 ;; *************** function _turn180 *****************
  6031 ;; Defined at:
  6032 ;;		line 285 in file "dc_motor.c"
  6033 ;; Parameters:    Size  Location     Type
  6034 ;;  mL              2   33[COMRAM] PTR struct DC_motor
  6035 ;;		 -> main@motorL(9), 
  6036 ;;  mR              2   35[COMRAM] PTR struct DC_motor
  6037 ;;		 -> main@motorR(9), 
  6038 ;; Auto vars:     Size  Location     Type
  6039 ;;  a               1   37[COMRAM] unsigned char 
  6040 ;; Return value:  Size  Location     Type
  6041 ;;                  1    wreg      void 
  6042 ;; Registers used:
  6043 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6044 ;; Tracked objects:
  6045 ;;		On entry : 0/0
  6046 ;;		On exit  : 0/0
  6047 ;;		Unchanged: 0/0
  6048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6049 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6050 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6052 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6053 ;;Total ram usage:        5 bytes
  6054 ;; Hardware stack levels used: 1
  6055 ;; Hardware stack levels required when called: 10
  6056 ;; This function calls:
  6057 ;;		_stop
  6058 ;;		_turnRight
  6059 ;; This function is called by:
  6060 ;;		_BlueInstructions
  6061 ;; This function uses a non-reentrant model
  6062 ;;
  6063                           
  6064                           	psect	text32
  6065   001FC4                     __ptext32:
  6066                           	callstack 0
  6067   001FC4                     _turn180:
  6068                           	callstack 18
  6069   001FC4                     
  6070                           ;dc_motor.c: 287:     unsigned char a=0;
  6071   001FC4  0E00               	movlw	0
  6072   001FC6  6E26               	movwf	turn180@a^0,c
  6073                           
  6074                           ;dc_motor.c: 288:     while(a<17){
  6075   001FC8  EFF1  F00F         	goto	l2669
  6076   001FCC                     l2665:
  6077                           
  6078                           ;dc_motor.c: 289:         turnRight(mL, mR);
  6079   001FCC  C022  F01C         	movff	turn180@mL,turnRight@mL
  6080   001FD0  C023  F01D         	movff	turn180@mL+1,turnRight@mL+1
  6081   001FD4  C024  F01E         	movff	turn180@mR,turnRight@mR
  6082   001FD8  C025  F01F         	movff	turn180@mR+1,turnRight@mR+1
  6083   001FDC  ECF1  F00A         	call	_turnRight	;wreg free
  6084   001FE0                     
  6085                           ;dc_motor.c: 290:         a++;
  6086   001FE0  2A26               	incf	turn180@a^0,f,c
  6087   001FE2                     l2669:
  6088                           
  6089                           ;dc_motor.c: 288:     while(a<17){
  6090   001FE2  0E10               	movlw	16
  6091   001FE4  6426               	cpfsgt	turn180@a^0,c
  6092   001FE6  EFF7  F00F         	goto	u2001
  6093   001FEA  EFF9  F00F         	goto	u2000
  6094   001FEE                     u2001:
  6095   001FEE  EFE6  F00F         	goto	l2665
  6096   001FF2                     u2000:
  6097   001FF2  EF06  F010         	goto	l2675
  6098   001FF6                     l2671:
  6099                           
  6100                           ;dc_motor.c: 293:         stop(mL, mR);
  6101   001FF6  C022  F01C         	movff	turn180@mL,stop@mL
  6102   001FFA  C023  F01D         	movff	turn180@mL+1,stop@mL+1
  6103   001FFE  C024  F01E         	movff	turn180@mR,stop@mR
  6104   002002  C025  F01F         	movff	turn180@mR+1,stop@mR+1
  6105   002006  EC3E  F00C         	call	_stop	;wreg free
  6106   00200A                     
  6107                           ;dc_motor.c: 294:         a--;
  6108   00200A  0626               	decf	turn180@a^0,f,c
  6109   00200C                     l2675:
  6110                           
  6111                           ;dc_motor.c: 292:     while(a>0){
  6112   00200C  5026               	movf	turn180@a^0,w,c
  6113   00200E  A4D8               	btfss	status,2,c
  6114   002010  EF0C  F010         	goto	u2011
  6115   002014  EF0E  F010         	goto	u2010
  6116   002018                     u2011:
  6117   002018  EFFB  F00F         	goto	l2671
  6118   00201C                     u2010:
  6119   00201C  0012               	return		;funcret
  6120   00201E                     __end_of_turn180:
  6121                           	callstack 0
  6122                           
  6123 ;; *************** function _turnRight *****************
  6124 ;; Defined at:
  6125 ;;		line 193 in file "dc_motor.c"
  6126 ;; Parameters:    Size  Location     Type
  6127 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6128 ;;		 -> main@motorL(9), 
  6129 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6130 ;;		 -> main@motorR(9), 
  6131 ;; Auto vars:     Size  Location     Type
  6132 ;;		None
  6133 ;; Return value:  Size  Location     Type
  6134 ;;                  1    wreg      void 
  6135 ;; Registers used:
  6136 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6137 ;; Tracked objects:
  6138 ;;		On entry : 0/0
  6139 ;;		On exit  : 0/0
  6140 ;;		Unchanged: 0/0
  6141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6142 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6144 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6145 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6146 ;;Total ram usage:        6 bytes
  6147 ;; Hardware stack levels used: 1
  6148 ;; Hardware stack levels required when called: 9
  6149 ;; This function calls:
  6150 ;;		_setMotorPWM
  6151 ;; This function is called by:
  6152 ;;		_turnRight90
  6153 ;;		_turn180
  6154 ;;		_turnRight135
  6155 ;; This function uses a non-reentrant model
  6156 ;;
  6157                           
  6158                           	psect	text33
  6159   0015E2                     __ptext33:
  6160                           	callstack 0
  6161   0015E2                     _turnRight:
  6162                           	callstack 18
  6163   0015E2                     
  6164                           ;dc_motor.c: 193: void turnRight(DC_motor *mL, DC_motor *mR);dc_motor.c: 194: {;dc_motor
      +                          .c: 196:     mL->direction = 1;
  6165   0015E2  EE20 F001          	lfsr	2,1
  6166   0015E6  501C               	movf	turnRight@mL^0,w,c
  6167   0015E8  26D9               	addwf	fsr2l,f,c
  6168   0015EA  501D               	movf	(turnRight@mL+1)^0,w,c
  6169   0015EC  22DA               	addwfc	fsr2h,f,c
  6170   0015EE  0E01               	movlw	1
  6171   0015F0  6EDF               	movwf	indf2,c
  6172                           
  6173                           ;dc_motor.c: 197:     mL->brakemode = 0;
  6174   0015F2  EE20 F002          	lfsr	2,2
  6175   0015F6  501C               	movf	turnRight@mL^0,w,c
  6176   0015F8  26D9               	addwf	fsr2l,f,c
  6177   0015FA  501D               	movf	(turnRight@mL+1)^0,w,c
  6178   0015FC  22DA               	addwfc	fsr2h,f,c
  6179   0015FE  0E00               	movlw	0
  6180   001600  6EDF               	movwf	indf2,c
  6181                           
  6182                           ;dc_motor.c: 199:     mR->direction = 0;
  6183   001602  EE20 F001          	lfsr	2,1
  6184   001606  501E               	movf	turnRight@mR^0,w,c
  6185   001608  26D9               	addwf	fsr2l,f,c
  6186   00160A  501F               	movf	(turnRight@mR+1)^0,w,c
  6187   00160C  22DA               	addwfc	fsr2h,f,c
  6188   00160E  0E00               	movlw	0
  6189   001610  6EDF               	movwf	indf2,c
  6190                           
  6191                           ;dc_motor.c: 200:     mR->brakemode = 0;
  6192   001612  EE20 F002          	lfsr	2,2
  6193   001616  501E               	movf	turnRight@mR^0,w,c
  6194   001618  26D9               	addwf	fsr2l,f,c
  6195   00161A  501F               	movf	(turnRight@mR+1)^0,w,c
  6196   00161C  22DA               	addwfc	fsr2h,f,c
  6197   00161E  0E00               	movlw	0
  6198   001620  6EDF               	movwf	indf2,c
  6199                           
  6200                           ;dc_motor.c: 203:     if(mL->power>75){mL->power=75;}
  6201   001622  C01C  FFD9         	movff	turnRight@mL,fsr2l
  6202   001626  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  6203   00162A  50DF               	movf	indf2,w,c
  6204   00162C  0A80               	xorlw	128
  6205   00162E  0F34               	addlw	-204
  6206   001630  A0D8               	btfss	status,0,c
  6207   001632  EF1D  F00B         	goto	u1901
  6208   001636  EF1F  F00B         	goto	u1900
  6209   00163A                     u1901:
  6210   00163A  EF25  F00B         	goto	l2573
  6211   00163E                     u1900:
  6212   00163E  C01C  FFD9         	movff	turnRight@mL,fsr2l
  6213   001642  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  6214   001646  0E4B               	movlw	75
  6215   001648  6EDF               	movwf	indf2,c
  6216   00164A                     l2573:
  6217                           
  6218                           ;dc_motor.c: 204:     if(mR->power>75){mR->power=75;}
  6219   00164A  C01E  FFD9         	movff	turnRight@mR,fsr2l
  6220   00164E  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  6221   001652  50DF               	movf	indf2,w,c
  6222   001654  0A80               	xorlw	128
  6223   001656  0F34               	addlw	-204
  6224   001658  A0D8               	btfss	status,0,c
  6225   00165A  EF31  F00B         	goto	u1911
  6226   00165E  EF33  F00B         	goto	u1910
  6227   001662                     u1911:
  6228   001662  EF39  F00B         	goto	l2577
  6229   001666                     u1910:
  6230   001666  C01E  FFD9         	movff	turnRight@mR,fsr2l
  6231   00166A  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  6232   00166E  0E4B               	movlw	75
  6233   001670  6EDF               	movwf	indf2,c
  6234   001672                     l2577:
  6235                           
  6236                           ;dc_motor.c: 206:     mL->power = mL->power + 5 ;
  6237   001672  C01C  FFD9         	movff	turnRight@mL,fsr2l
  6238   001676  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  6239   00167A  50DF               	movf	indf2,w,c
  6240   00167C  0F05               	addlw	5
  6241   00167E  C01C  FFD9         	movff	turnRight@mL,fsr2l
  6242   001682  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  6243   001686  6EDF               	movwf	indf2,c
  6244   001688                     
  6245                           ;dc_motor.c: 207:     mR->power = mR->power + 5;
  6246   001688  C01E  FFD9         	movff	turnRight@mR,fsr2l
  6247   00168C  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  6248   001690  50DF               	movf	indf2,w,c
  6249   001692  0F05               	addlw	5
  6250   001694  C01E  FFD9         	movff	turnRight@mR,fsr2l
  6251   001698  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  6252   00169C  6EDF               	movwf	indf2,c
  6253   00169E                     
  6254                           ;dc_motor.c: 209:     setMotorPWM(mL);
  6255   00169E  C01C  F016         	movff	turnRight@mL,setMotorPWM@m
  6256   0016A2  C01D  F017         	movff	turnRight@mL+1,setMotorPWM@m+1
  6257   0016A6  EC05  F008         	call	_setMotorPWM	;wreg free
  6258   0016AA                     
  6259                           ;dc_motor.c: 210:     setMotorPWM(mR);
  6260   0016AA  C01E  F016         	movff	turnRight@mR,setMotorPWM@m
  6261   0016AE  C01F  F017         	movff	turnRight@mR+1,setMotorPWM@m+1
  6262   0016B2  EC05  F008         	call	_setMotorPWM	;wreg free
  6263   0016B6                     
  6264                           ;dc_motor.c: 211:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6265   0016B6  0E05               	movlw	5
  6266   0016B8  6E21               	movwf	(??_turnRight+1)^0,c
  6267   0016BA  0E0F               	movlw	15
  6268   0016BC  6E20               	movwf	??_turnRight^0,c
  6269   0016BE  0EF1               	movlw	241
  6270   0016C0                     u4187:
  6271   0016C0  2EE8               	decfsz	wreg,f,c
  6272   0016C2  D7FE               	bra	u4187
  6273   0016C4  2E20               	decfsz	??_turnRight^0,f,c
  6274   0016C6  D7FC               	bra	u4187
  6275   0016C8  2E21               	decfsz	(??_turnRight+1)^0,f,c
  6276   0016CA  D7FA               	bra	u4187
  6277   0016CC  F000               	nop	
  6278   0016CE  0012               	return		;funcret
  6279   0016D0                     __end_of_turnRight:
  6280                           	callstack 0
  6281                           
  6282 ;; *************** function _stop *****************
  6283 ;; Defined at:
  6284 ;;		line 87 in file "dc_motor.c"
  6285 ;; Parameters:    Size  Location     Type
  6286 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6287 ;;		 -> main@motorL(9), 
  6288 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6289 ;;		 -> main@motorR(9), 
  6290 ;; Auto vars:     Size  Location     Type
  6291 ;;		None
  6292 ;; Return value:  Size  Location     Type
  6293 ;;                  1    wreg      void 
  6294 ;; Registers used:
  6295 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6296 ;; Tracked objects:
  6297 ;;		On entry : 0/0
  6298 ;;		On exit  : 0/0
  6299 ;;		Unchanged: 0/0
  6300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6301 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6303 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6304 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6305 ;;Total ram usage:        5 bytes
  6306 ;; Hardware stack levels used: 1
  6307 ;; Hardware stack levels required when called: 9
  6308 ;; This function calls:
  6309 ;;		_setMotorPWM
  6310 ;; This function is called by:
  6311 ;;		_turnLeft90
  6312 ;;		_turnRight90
  6313 ;;		_turn180
  6314 ;;		_turnRight135
  6315 ;;		_turnLeft135
  6316 ;;		_main
  6317 ;;		_RedInstructions
  6318 ;;		_GreenInstructions
  6319 ;;		_BlueInstructions
  6320 ;;		_YellowInstructions
  6321 ;;		_PinkInstructions
  6322 ;;		_OrangeInstructions
  6323 ;;		_LightBlueInstructions
  6324 ;; This function uses a non-reentrant model
  6325 ;;
  6326                           
  6327                           	psect	text34
  6328   00187C                     __ptext34:
  6329                           	callstack 0
  6330   00187C                     _stop:
  6331                           	callstack 21
  6332   00187C                     
  6333                           ;dc_motor.c: 87: void stop(DC_motor *mL, DC_motor *mR);dc_motor.c: 88: {;dc_motor.c: 154
      +                          :     mL->brakemode = 1;
  6334   00187C  EE20 F002          	lfsr	2,2
  6335   001880  501C               	movf	stop@mL^0,w,c
  6336   001882  26D9               	addwf	fsr2l,f,c
  6337   001884  501D               	movf	(stop@mL+1)^0,w,c
  6338   001886  22DA               	addwfc	fsr2h,f,c
  6339   001888  0E01               	movlw	1
  6340   00188A  6EDF               	movwf	indf2,c
  6341                           
  6342                           ;dc_motor.c: 155:     mR->brakemode = 1;
  6343   00188C  EE20 F002          	lfsr	2,2
  6344   001890  501E               	movf	stop@mR^0,w,c
  6345   001892  26D9               	addwf	fsr2l,f,c
  6346   001894  501F               	movf	(stop@mR+1)^0,w,c
  6347   001896  22DA               	addwfc	fsr2h,f,c
  6348   001898  0E01               	movlw	1
  6349   00189A  6EDF               	movwf	indf2,c
  6350                           
  6351                           ;dc_motor.c: 157:     if(mL->power<0){mL->power=0;}
  6352   00189C  C01C  FFD9         	movff	stop@mL,fsr2l
  6353   0018A0  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6354   0018A4  0E00               	movlw	0
  6355   0018A6  BEDB               	btfsc	plusw2,7,c
  6356   0018A8  EF5A  F00C         	goto	u1860
  6357   0018AC  EF58  F00C         	goto	u1861
  6358   0018B0                     u1861:
  6359   0018B0  EF60  F00C         	goto	l2537
  6360   0018B4                     u1860:
  6361   0018B4  C01C  FFD9         	movff	stop@mL,fsr2l
  6362   0018B8  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6363   0018BC  0E00               	movlw	0
  6364   0018BE  6EDF               	movwf	indf2,c
  6365   0018C0                     l2537:
  6366                           
  6367                           ;dc_motor.c: 158:     if(mR->power<0){mR->power=0;}
  6368   0018C0  C01E  FFD9         	movff	stop@mR,fsr2l
  6369   0018C4  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6370   0018C8  0E00               	movlw	0
  6371   0018CA  BEDB               	btfsc	plusw2,7,c
  6372   0018CC  EF6C  F00C         	goto	u1870
  6373   0018D0  EF6A  F00C         	goto	u1871
  6374   0018D4                     u1871:
  6375   0018D4  EF72  F00C         	goto	l2541
  6376   0018D8                     u1870:
  6377   0018D8  C01E  FFD9         	movff	stop@mR,fsr2l
  6378   0018DC  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6379   0018E0  0E00               	movlw	0
  6380   0018E2  6EDF               	movwf	indf2,c
  6381   0018E4                     l2541:
  6382                           
  6383                           ;dc_motor.c: 160:     mL->power = mL->power - 5 ;
  6384   0018E4  C01C  FFD9         	movff	stop@mL,fsr2l
  6385   0018E8  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6386   0018EC  50DF               	movf	indf2,w,c
  6387   0018EE  0FFB               	addlw	251
  6388   0018F0  C01C  FFD9         	movff	stop@mL,fsr2l
  6389   0018F4  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6390   0018F8  6EDF               	movwf	indf2,c
  6391   0018FA                     
  6392                           ;dc_motor.c: 161:     mR->power = mR->power - 5;
  6393   0018FA  C01E  FFD9         	movff	stop@mR,fsr2l
  6394   0018FE  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6395   001902  50DF               	movf	indf2,w,c
  6396   001904  0FFB               	addlw	251
  6397   001906  C01E  FFD9         	movff	stop@mR,fsr2l
  6398   00190A  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6399   00190E  6EDF               	movwf	indf2,c
  6400                           
  6401                           ;dc_motor.c: 163:     mL->power = 0;
  6402   001910  C01C  FFD9         	movff	stop@mL,fsr2l
  6403   001914  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6404   001918  0E00               	movlw	0
  6405   00191A  6EDF               	movwf	indf2,c
  6406                           
  6407                           ;dc_motor.c: 164:     mR->power = 0;
  6408   00191C  C01E  FFD9         	movff	stop@mR,fsr2l
  6409   001920  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6410   001924  0E00               	movlw	0
  6411   001926  6EDF               	movwf	indf2,c
  6412   001928                     
  6413                           ;dc_motor.c: 165:     setMotorPWM(mL);
  6414   001928  C01C  F016         	movff	stop@mL,setMotorPWM@m
  6415   00192C  C01D  F017         	movff	stop@mL+1,setMotorPWM@m+1
  6416   001930  EC05  F008         	call	_setMotorPWM	;wreg free
  6417   001934                     
  6418                           ;dc_motor.c: 166:     setMotorPWM(mR);
  6419   001934  C01E  F016         	movff	stop@mR,setMotorPWM@m
  6420   001938  C01F  F017         	movff	stop@mR+1,setMotorPWM@m+1
  6421   00193C  EC05  F008         	call	_setMotorPWM	;wreg free
  6422   001940                     
  6423                           ;dc_motor.c: 167:     _delay((unsigned long)((10)*(64000000/4000.0)));
  6424   001940  0ED0               	movlw	208
  6425   001942  6E20               	movwf	??_stop^0,c
  6426   001944  0ECA               	movlw	202
  6427   001946                     u4197:
  6428   001946  2EE8               	decfsz	wreg,f,c
  6429   001948  D7FE               	bra	u4197
  6430   00194A  2E20               	decfsz	??_stop^0,f,c
  6431   00194C  D7FC               	bra	u4197
  6432   00194E  0012               	return		;funcret
  6433   001950                     __end_of_stop:
  6434                           	callstack 0
  6435                           
  6436 ;; *************** function _fullSpeedBackwards *****************
  6437 ;; Defined at:
  6438 ;;		line 238 in file "dc_motor.c"
  6439 ;; Parameters:    Size  Location     Type
  6440 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6441 ;;		 -> main@motorL(9), 
  6442 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6443 ;;		 -> main@motorR(9), 
  6444 ;; Auto vars:     Size  Location     Type
  6445 ;;		None
  6446 ;; Return value:  Size  Location     Type
  6447 ;;                  1    wreg      void 
  6448 ;; Registers used:
  6449 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6450 ;; Tracked objects:
  6451 ;;		On entry : 0/0
  6452 ;;		On exit  : 0/0
  6453 ;;		Unchanged: 0/0
  6454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6455 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6457 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6458 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6459 ;;Total ram usage:        6 bytes
  6460 ;; Hardware stack levels used: 1
  6461 ;; Hardware stack levels required when called: 9
  6462 ;; This function calls:
  6463 ;;		_setMotorPWM
  6464 ;; This function is called by:
  6465 ;;		_RedInstructions
  6466 ;;		_GreenInstructions
  6467 ;;		_BlueInstructions
  6468 ;;		_YellowInstructions
  6469 ;;		_PinkInstructions
  6470 ;;		_OrangeInstructions
  6471 ;;		_LightBlueInstructions
  6472 ;; This function uses a non-reentrant model
  6473 ;;
  6474                           
  6475                           	psect	text35
  6476   0017A6                     __ptext35:
  6477                           	callstack 0
  6478   0017A6                     _fullSpeedBackwards:
  6479                           	callstack 19
  6480   0017A6                     
  6481                           ;dc_motor.c: 241:     mL->direction = 0;
  6482   0017A6  EE20 F001          	lfsr	2,1
  6483   0017AA  501C               	movf	fullSpeedBackwards@mL^0,w,c
  6484   0017AC  26D9               	addwf	fsr2l,f,c
  6485   0017AE  501D               	movf	(fullSpeedBackwards@mL+1)^0,w,c
  6486   0017B0  22DA               	addwfc	fsr2h,f,c
  6487   0017B2  0E00               	movlw	0
  6488   0017B4  6EDF               	movwf	indf2,c
  6489                           
  6490                           ;dc_motor.c: 242:     mL->brakemode = 0;
  6491   0017B6  EE20 F002          	lfsr	2,2
  6492   0017BA  501C               	movf	fullSpeedBackwards@mL^0,w,c
  6493   0017BC  26D9               	addwf	fsr2l,f,c
  6494   0017BE  501D               	movf	(fullSpeedBackwards@mL+1)^0,w,c
  6495   0017C0  22DA               	addwfc	fsr2h,f,c
  6496   0017C2  0E00               	movlw	0
  6497   0017C4  6EDF               	movwf	indf2,c
  6498                           
  6499                           ;dc_motor.c: 244:     mR->direction = 0;
  6500   0017C6  EE20 F001          	lfsr	2,1
  6501   0017CA  501E               	movf	fullSpeedBackwards@mR^0,w,c
  6502   0017CC  26D9               	addwf	fsr2l,f,c
  6503   0017CE  501F               	movf	(fullSpeedBackwards@mR+1)^0,w,c
  6504   0017D0  22DA               	addwfc	fsr2h,f,c
  6505   0017D2  0E00               	movlw	0
  6506   0017D4  6EDF               	movwf	indf2,c
  6507                           
  6508                           ;dc_motor.c: 245:     mR->brakemode = 0;
  6509   0017D6  EE20 F002          	lfsr	2,2
  6510   0017DA  501E               	movf	fullSpeedBackwards@mR^0,w,c
  6511   0017DC  26D9               	addwf	fsr2l,f,c
  6512   0017DE  501F               	movf	(fullSpeedBackwards@mR+1)^0,w,c
  6513   0017E0  22DA               	addwfc	fsr2h,f,c
  6514   0017E2  0E00               	movlw	0
  6515   0017E4  6EDF               	movwf	indf2,c
  6516                           
  6517                           ;dc_motor.c: 248:     if(mL->power>50){mL->power=50;}
  6518   0017E6  C01C  FFD9         	movff	fullSpeedBackwards@mL,fsr2l
  6519   0017EA  C01D  FFDA         	movff	fullSpeedBackwards@mL+1,fsr2h
  6520   0017EE  50DF               	movf	indf2,w,c
  6521   0017F0  0A80               	xorlw	128
  6522   0017F2  0F4D               	addlw	-179
  6523   0017F4  A0D8               	btfss	status,0,c
  6524   0017F6  EFFF  F00B         	goto	u1941
  6525   0017FA  EF01  F00C         	goto	u1940
  6526   0017FE                     u1941:
  6527   0017FE  EF07  F00C         	goto	l2621
  6528   001802                     u1940:
  6529   001802  C01C  FFD9         	movff	fullSpeedBackwards@mL,fsr2l
  6530   001806  C01D  FFDA         	movff	fullSpeedBackwards@mL+1,fsr2h
  6531   00180A  0E32               	movlw	50
  6532   00180C  6EDF               	movwf	indf2,c
  6533   00180E                     l2621:
  6534                           
  6535                           ;dc_motor.c: 249:     if(mR->power>50){mR->power=50;}
  6536   00180E  C01E  FFD9         	movff	fullSpeedBackwards@mR,fsr2l
  6537   001812  C01F  FFDA         	movff	fullSpeedBackwards@mR+1,fsr2h
  6538   001816  50DF               	movf	indf2,w,c
  6539   001818  0A80               	xorlw	128
  6540   00181A  0F4D               	addlw	-179
  6541   00181C  A0D8               	btfss	status,0,c
  6542   00181E  EF13  F00C         	goto	u1951
  6543   001822  EF15  F00C         	goto	u1950
  6544   001826                     u1951:
  6545   001826  EF1B  F00C         	goto	l2625
  6546   00182A                     u1950:
  6547   00182A  C01E  FFD9         	movff	fullSpeedBackwards@mR,fsr2l
  6548   00182E  C01F  FFDA         	movff	fullSpeedBackwards@mR+1,fsr2h
  6549   001832  0E32               	movlw	50
  6550   001834  6EDF               	movwf	indf2,c
  6551   001836                     l2625:
  6552                           
  6553                           ;dc_motor.c: 251:     ++mL->power;
  6554   001836  C01C  FFD9         	movff	fullSpeedBackwards@mL,fsr2l
  6555   00183A  C01D  FFDA         	movff	fullSpeedBackwards@mL+1,fsr2h
  6556   00183E  2ADF               	incf	indf2,f,c
  6557   001840                     
  6558                           ;dc_motor.c: 252:     ++mR->power;
  6559   001840  C01E  FFD9         	movff	fullSpeedBackwards@mR,fsr2l
  6560   001844  C01F  FFDA         	movff	fullSpeedBackwards@mR+1,fsr2h
  6561   001848  2ADF               	incf	indf2,f,c
  6562   00184A                     
  6563                           ;dc_motor.c: 254:     setMotorPWM(mL);
  6564   00184A  C01C  F016         	movff	fullSpeedBackwards@mL,setMotorPWM@m
  6565   00184E  C01D  F017         	movff	fullSpeedBackwards@mL+1,setMotorPWM@m+1
  6566   001852  EC05  F008         	call	_setMotorPWM	;wreg free
  6567   001856                     
  6568                           ;dc_motor.c: 255:     setMotorPWM(mR);
  6569   001856  C01E  F016         	movff	fullSpeedBackwards@mR,setMotorPWM@m
  6570   00185A  C01F  F017         	movff	fullSpeedBackwards@mR+1,setMotorPWM@m+1
  6571   00185E  EC05  F008         	call	_setMotorPWM	;wreg free
  6572   001862                     
  6573                           ;dc_motor.c: 256:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6574   001862  0E05               	movlw	5
  6575   001864  6E21               	movwf	(??_fullSpeedBackwards+1)^0,c
  6576   001866  0E0F               	movlw	15
  6577   001868  6E20               	movwf	??_fullSpeedBackwards^0,c
  6578   00186A  0EF1               	movlw	241
  6579   00186C                     u4207:
  6580   00186C  2EE8               	decfsz	wreg,f,c
  6581   00186E  D7FE               	bra	u4207
  6582   001870  2E20               	decfsz	??_fullSpeedBackwards^0,f,c
  6583   001872  D7FC               	bra	u4207
  6584   001874  2E21               	decfsz	(??_fullSpeedBackwards+1)^0,f,c
  6585   001876  D7FA               	bra	u4207
  6586   001878  F000               	nop	
  6587   00187A  0012               	return		;funcret
  6588   00187C                     __end_of_fullSpeedBackwards:
  6589                           	callstack 0
  6590                           
  6591 ;; *************** function _setMotorPWM *****************
  6592 ;; Defined at:
  6593 ;;		line 64 in file "dc_motor.c"
  6594 ;; Parameters:    Size  Location     Type
  6595 ;;  m               2   21[COMRAM] PTR struct DC_motor
  6596 ;;		 -> main@motorR(9), main@motorL(9), 
  6597 ;; Auto vars:     Size  Location     Type
  6598 ;;  negDuty         1   26[COMRAM] unsigned char 
  6599 ;;  posDuty         1   25[COMRAM] unsigned char 
  6600 ;; Return value:  Size  Location     Type
  6601 ;;                  1    wreg      void 
  6602 ;; Registers used:
  6603 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6604 ;; Tracked objects:
  6605 ;;		On entry : 0/0
  6606 ;;		On exit  : 0/0
  6607 ;;		Unchanged: 0/0
  6608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6609 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6610 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6611 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6612 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6613 ;;Total ram usage:        6 bytes
  6614 ;; Hardware stack levels used: 1
  6615 ;; Hardware stack levels required when called: 8
  6616 ;; This function calls:
  6617 ;;		___lwdiv
  6618 ;;		___wmul
  6619 ;; This function is called by:
  6620 ;;		_stop
  6621 ;;		_turnLeft
  6622 ;;		_turnRight
  6623 ;;		_fullSpeedAhead
  6624 ;;		_fullSpeedBackwards
  6625 ;; This function uses a non-reentrant model
  6626 ;;
  6627                           
  6628                           	psect	text36
  6629   00100A                     __ptext36:
  6630                           	callstack 0
  6631   00100A                     _setMotorPWM:
  6632                           	callstack 21
  6633   00100A                     
  6634                           ;dc_motor.c: 64: void setMotorPWM(DC_motor *m);dc_motor.c: 65: {;dc_motor.c: 66:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 68:     if(m->brakemode) {
  6635   00100A  EE20 F002          	lfsr	2,2
  6636   00100E  5016               	movf	setMotorPWM@m^0,w,c
  6637   001010  26D9               	addwf	fsr2l,f,c
  6638   001012  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6639   001014  22DA               	addwfc	fsr2h,f,c
  6640   001016  50DF               	movf	indf2,w,c
  6641   001018  B4D8               	btfsc	status,2,c
  6642   00101A  EF11  F008         	goto	u1821
  6643   00101E  EF13  F008         	goto	u1820
  6644   001022                     u1821:
  6645   001022  EF47  F008         	goto	l2517
  6646   001026                     u1820:
  6647   001026                     
  6648                           ;dc_motor.c: 69:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  6649   001026  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  6650   00102A  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  6651   00102E  50DF               	movf	indf2,w,c
  6652   001030  6E09               	movwf	___wmul@multiplier^0,c
  6653   001032  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  6654   001034  BE09               	btfsc	___wmul@multiplier^0,7,c
  6655   001036  060A               	decf	(___wmul@multiplier+1)^0,f,c
  6656   001038  EE20 F003          	lfsr	2,3
  6657   00103C  5016               	movf	setMotorPWM@m^0,w,c
  6658   00103E  26D9               	addwf	fsr2l,f,c
  6659   001040  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6660   001042  22DA               	addwfc	fsr2h,f,c
  6661   001044  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  6662   001048  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  6663   00104C  EC92  F011         	call	___wmul	;wreg free
  6664   001050  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  6665   001054  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  6666   001058  0E00               	movlw	0
  6667   00105A  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  6668   00105C  0E64               	movlw	100
  6669   00105E  6E11               	movwf	___lwdiv@divisor^0,c
  6670   001060  ECC5  F00E         	call	___lwdiv	;wreg free
  6671   001064  EE20 F003          	lfsr	2,3
  6672   001068  5016               	movf	setMotorPWM@m^0,w,c
  6673   00106A  26D9               	addwf	fsr2l,f,c
  6674   00106C  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6675   00106E  22DA               	addwfc	fsr2h,f,c
  6676   001070  50DF               	movf	indf2,w,c
  6677   001072  6E18               	movwf	??_setMotorPWM^0,c
  6678   001074  500F               	movf	?___lwdiv^0,w,c
  6679   001076  5C18               	subwf	??_setMotorPWM^0,w,c
  6680   001078  6E1A               	movwf	setMotorPWM@posDuty^0,c
  6681   00107A                     
  6682                           ;dc_motor.c: 70:         negDuty=m->PWMperiod;
  6683   00107A  EE20 F003          	lfsr	2,3
  6684   00107E  5016               	movf	setMotorPWM@m^0,w,c
  6685   001080  26D9               	addwf	fsr2l,f,c
  6686   001082  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6687   001084  22DA               	addwfc	fsr2h,f,c
  6688   001086  50DF               	movf	indf2,w,c
  6689   001088  6E1B               	movwf	setMotorPWM@negDuty^0,c
  6690                           
  6691                           ;dc_motor.c: 71:     }
  6692   00108A  EF6A  F008         	goto	l2521
  6693   00108E                     l2517:
  6694                           
  6695                           ;dc_motor.c: 73:         posDuty=0;
  6696   00108E  0E00               	movlw	0
  6697   001090  6E1A               	movwf	setMotorPWM@posDuty^0,c
  6698   001092                     
  6699                           ;dc_motor.c: 74:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  6700   001092  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  6701   001096  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  6702   00109A  50DF               	movf	indf2,w,c
  6703   00109C  6E09               	movwf	___wmul@multiplier^0,c
  6704   00109E  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  6705   0010A0  BE09               	btfsc	___wmul@multiplier^0,7,c
  6706   0010A2  060A               	decf	(___wmul@multiplier+1)^0,f,c
  6707   0010A4  EE20 F003          	lfsr	2,3
  6708   0010A8  5016               	movf	setMotorPWM@m^0,w,c
  6709   0010AA  26D9               	addwf	fsr2l,f,c
  6710   0010AC  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6711   0010AE  22DA               	addwfc	fsr2h,f,c
  6712   0010B0  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  6713   0010B4  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  6714   0010B8  EC92  F011         	call	___wmul	;wreg free
  6715   0010BC  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  6716   0010C0  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  6717   0010C4  0E00               	movlw	0
  6718   0010C6  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  6719   0010C8  0E64               	movlw	100
  6720   0010CA  6E11               	movwf	___lwdiv@divisor^0,c
  6721   0010CC  ECC5  F00E         	call	___lwdiv	;wreg free
  6722   0010D0  500F               	movf	?___lwdiv^0,w,c
  6723   0010D2  6E1B               	movwf	setMotorPWM@negDuty^0,c
  6724   0010D4                     l2521:
  6725                           
  6726                           ;dc_motor.c: 77:     if (m->direction) {
  6727   0010D4  EE20 F001          	lfsr	2,1
  6728   0010D8  5016               	movf	setMotorPWM@m^0,w,c
  6729   0010DA  26D9               	addwf	fsr2l,f,c
  6730   0010DC  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6731   0010DE  22DA               	addwfc	fsr2h,f,c
  6732   0010E0  50DF               	movf	indf2,w,c
  6733   0010E2  B4D8               	btfsc	status,2,c
  6734   0010E4  EF76  F008         	goto	u1831
  6735   0010E8  EF78  F008         	goto	u1830
  6736   0010EC                     u1831:
  6737   0010EC  EF9A  F008         	goto	l2525
  6738   0010F0                     u1830:
  6739   0010F0                     
  6740                           ;dc_motor.c: 78:         *(m->posDutyHighByte)=posDuty;
  6741   0010F0  EE20 F005          	lfsr	2,5
  6742   0010F4  5016               	movf	setMotorPWM@m^0,w,c
  6743   0010F6  26D9               	addwf	fsr2l,f,c
  6744   0010F8  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6745   0010FA  22DA               	addwfc	fsr2h,f,c
  6746   0010FC  CFDE F018          	movff	postinc2,??_setMotorPWM
  6747   001100  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  6748   001104  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  6749   001108  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  6750   00110C  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  6751                           
  6752                           ;dc_motor.c: 79:         *(m->negDutyHighByte)=negDuty;
  6753   001110  EE20 F007          	lfsr	2,7
  6754   001114  5016               	movf	setMotorPWM@m^0,w,c
  6755   001116  26D9               	addwf	fsr2l,f,c
  6756   001118  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6757   00111A  22DA               	addwfc	fsr2h,f,c
  6758   00111C  CFDE F018          	movff	postinc2,??_setMotorPWM
  6759   001120  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  6760   001124  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  6761   001128  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  6762   00112C  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  6763                           
  6764                           ;dc_motor.c: 80:     } else {
  6765   001130  EFBA  F008         	goto	l186
  6766   001134                     l2525:
  6767                           
  6768                           ;dc_motor.c: 81:         *(m->posDutyHighByte)=negDuty;
  6769   001134  EE20 F005          	lfsr	2,5
  6770   001138  5016               	movf	setMotorPWM@m^0,w,c
  6771   00113A  26D9               	addwf	fsr2l,f,c
  6772   00113C  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6773   00113E  22DA               	addwfc	fsr2h,f,c
  6774   001140  CFDE F018          	movff	postinc2,??_setMotorPWM
  6775   001144  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  6776   001148  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  6777   00114C  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  6778   001150  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  6779                           
  6780                           ;dc_motor.c: 82:         *(m->negDutyHighByte)=posDuty;
  6781   001154  EE20 F007          	lfsr	2,7
  6782   001158  5016               	movf	setMotorPWM@m^0,w,c
  6783   00115A  26D9               	addwf	fsr2l,f,c
  6784   00115C  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6785   00115E  22DA               	addwfc	fsr2h,f,c
  6786   001160  CFDE F018          	movff	postinc2,??_setMotorPWM
  6787   001164  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  6788   001168  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  6789   00116C  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  6790   001170  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  6791   001174                     l186:
  6792   001174  0012               	return		;funcret
  6793   001176                     __end_of_setMotorPWM:
  6794                           	callstack 0
  6795                           
  6796 ;; *************** function ___wmul *****************
  6797 ;; Defined at:
  6798 ;;		line 15 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\Umul16.c"
  6799 ;; Parameters:    Size  Location     Type
  6800 ;;  multiplier      2    8[COMRAM] unsigned int 
  6801 ;;  multiplicand    2   10[COMRAM] unsigned int 
  6802 ;; Auto vars:     Size  Location     Type
  6803 ;;  product         2   12[COMRAM] unsigned int 
  6804 ;; Return value:  Size  Location     Type
  6805 ;;                  2    8[COMRAM] unsigned int 
  6806 ;; Registers used:
  6807 ;;		wreg, status,2, status,0, prodl, prodh
  6808 ;; Tracked objects:
  6809 ;;		On entry : 0/0
  6810 ;;		On exit  : 0/0
  6811 ;;		Unchanged: 0/0
  6812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6813 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6814 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6816 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6817 ;;Total ram usage:        6 bytes
  6818 ;; Hardware stack levels used: 1
  6819 ;; Hardware stack levels required when called: 7
  6820 ;; This function calls:
  6821 ;;		Nothing
  6822 ;; This function is called by:
  6823 ;;		_setMotorPWM
  6824 ;; This function uses a non-reentrant model
  6825 ;;
  6826                           
  6827                           	psect	text37
  6828   002324                     __ptext37:
  6829                           	callstack 0
  6830   002324                     ___wmul:
  6831                           	callstack 21
  6832   002324  5009               	movf	___wmul@multiplier^0,w,c
  6833   002326  020B               	mulwf	___wmul@multiplicand^0,c
  6834   002328  CFF3 F00D          	movff	prodl,___wmul@product
  6835   00232C  CFF4 F00E          	movff	prodh,___wmul@product+1
  6836   002330  5009               	movf	___wmul@multiplier^0,w,c
  6837   002332  020C               	mulwf	(___wmul@multiplicand+1)^0,c
  6838   002334  50F3               	movf	243,w,c
  6839   002336  260E               	addwf	(___wmul@product+1)^0,f,c
  6840   002338  500A               	movf	(___wmul@multiplier+1)^0,w,c
  6841   00233A  020B               	mulwf	___wmul@multiplicand^0,c
  6842   00233C  50F3               	movf	243,w,c
  6843   00233E  260E               	addwf	(___wmul@product+1)^0,f,c
  6844   002340  C00D  F009         	movff	___wmul@product,?___wmul
  6845   002344  C00E  F00A         	movff	___wmul@product+1,?___wmul+1
  6846   002348  0012               	return		;funcret
  6847   00234A                     __end_of___wmul:
  6848                           	callstack 0
  6849                           
  6850 ;; *************** function ___lwdiv *****************
  6851 ;; Defined at:
  6852 ;;		line 7 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\lwdiv.c"
  6853 ;; Parameters:    Size  Location     Type
  6854 ;;  dividend        2   14[COMRAM] unsigned int 
  6855 ;;  divisor         2   16[COMRAM] unsigned int 
  6856 ;; Auto vars:     Size  Location     Type
  6857 ;;  quotient        2   18[COMRAM] unsigned int 
  6858 ;;  counter         1   20[COMRAM] unsigned char 
  6859 ;; Return value:  Size  Location     Type
  6860 ;;                  2   14[COMRAM] unsigned int 
  6861 ;; Registers used:
  6862 ;;		wreg, status,2, status,0
  6863 ;; Tracked objects:
  6864 ;;		On entry : 0/0
  6865 ;;		On exit  : 0/0
  6866 ;;		Unchanged: 0/0
  6867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6868 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6869 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6871 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6872 ;;Total ram usage:        7 bytes
  6873 ;; Hardware stack levels used: 1
  6874 ;; Hardware stack levels required when called: 7
  6875 ;; This function calls:
  6876 ;;		Nothing
  6877 ;; This function is called by:
  6878 ;;		_setMotorPWM
  6879 ;; This function uses a non-reentrant model
  6880 ;;
  6881                           
  6882                           	psect	text38
  6883   001D8A                     __ptext38:
  6884                           	callstack 0
  6885   001D8A                     ___lwdiv:
  6886                           	callstack 21
  6887   001D8A  0E00               	movlw	0
  6888   001D8C  6E14               	movwf	(___lwdiv@quotient+1)^0,c
  6889   001D8E  0E00               	movlw	0
  6890   001D90  6E13               	movwf	___lwdiv@quotient^0,c
  6891   001D92  5011               	movf	___lwdiv@divisor^0,w,c
  6892   001D94  1012               	iorwf	(___lwdiv@divisor+1)^0,w,c
  6893   001D96  B4D8               	btfsc	status,2,c
  6894   001D98  EFD0  F00E         	goto	u1791
  6895   001D9C  EFD2  F00E         	goto	u1790
  6896   001DA0                     u1791:
  6897   001DA0  EFFA  F00E         	goto	l1081
  6898   001DA4                     u1790:
  6899   001DA4  0E01               	movlw	1
  6900   001DA6  6E15               	movwf	___lwdiv@counter^0,c
  6901   001DA8  EFDA  F00E         	goto	l2485
  6902   001DAC                     l2483:
  6903   001DAC  90D8               	bcf	status,0,c
  6904   001DAE  3611               	rlcf	___lwdiv@divisor^0,f,c
  6905   001DB0  3612               	rlcf	(___lwdiv@divisor+1)^0,f,c
  6906   001DB2  2A15               	incf	___lwdiv@counter^0,f,c
  6907   001DB4                     l2485:
  6908   001DB4  AE12               	btfss	(___lwdiv@divisor+1)^0,7,c
  6909   001DB6  EFDF  F00E         	goto	u1801
  6910   001DBA  EFE1  F00E         	goto	u1800
  6911   001DBE                     u1801:
  6912   001DBE  EFD6  F00E         	goto	l2483
  6913   001DC2                     u1800:
  6914   001DC2                     l2487:
  6915   001DC2  90D8               	bcf	status,0,c
  6916   001DC4  3613               	rlcf	___lwdiv@quotient^0,f,c
  6917   001DC6  3614               	rlcf	(___lwdiv@quotient+1)^0,f,c
  6918   001DC8  5011               	movf	___lwdiv@divisor^0,w,c
  6919   001DCA  5C0F               	subwf	___lwdiv@dividend^0,w,c
  6920   001DCC  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  6921   001DCE  5810               	subwfb	(___lwdiv@dividend+1)^0,w,c
  6922   001DD0  A0D8               	btfss	status,0,c
  6923   001DD2  EFED  F00E         	goto	u1811
  6924   001DD6  EFEF  F00E         	goto	u1810
  6925   001DDA                     u1811:
  6926   001DDA  EFF4  F00E         	goto	l2495
  6927   001DDE                     u1810:
  6928   001DDE  5011               	movf	___lwdiv@divisor^0,w,c
  6929   001DE0  5E0F               	subwf	___lwdiv@dividend^0,f,c
  6930   001DE2  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  6931   001DE4  5A10               	subwfb	(___lwdiv@dividend+1)^0,f,c
  6932   001DE6  8013               	bsf	___lwdiv@quotient^0,0,c
  6933   001DE8                     l2495:
  6934   001DE8  90D8               	bcf	status,0,c
  6935   001DEA  3212               	rrcf	(___lwdiv@divisor+1)^0,f,c
  6936   001DEC  3211               	rrcf	___lwdiv@divisor^0,f,c
  6937   001DEE  2E15               	decfsz	___lwdiv@counter^0,f,c
  6938   001DF0  EFE1  F00E         	goto	l2487
  6939   001DF4                     l1081:
  6940   001DF4  C013  F00F         	movff	___lwdiv@quotient,?___lwdiv
  6941   001DF8  C014  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6942   001DFC  0012               	return		;funcret
  6943   001DFE                     __end_of___lwdiv:
  6944                           	callstack 0
  6945                           
  6946 ;; *************** function _LED_init *****************
  6947 ;; Defined at:
  6948 ;;		line 7 in file "LED_Buttons.c"
  6949 ;; Parameters:    Size  Location     Type
  6950 ;;		None
  6951 ;; Auto vars:     Size  Location     Type
  6952 ;;		None
  6953 ;; Return value:  Size  Location     Type
  6954 ;;                  1    wreg      void 
  6955 ;; Registers used:
  6956 ;;		None
  6957 ;; Tracked objects:
  6958 ;;		On entry : 0/0
  6959 ;;		On exit  : 0/0
  6960 ;;		Unchanged: 0/0
  6961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6966 ;;Total ram usage:        0 bytes
  6967 ;; Hardware stack levels used: 1
  6968 ;; Hardware stack levels required when called: 7
  6969 ;; This function calls:
  6970 ;;		Nothing
  6971 ;; This function is called by:
  6972 ;;		_main
  6973 ;; This function uses a non-reentrant model
  6974 ;;
  6975                           
  6976                           	psect	text39
  6977   002426                     __ptext39:
  6978                           	callstack 0
  6979   002426                     _LED_init:
  6980                           	callstack 23
  6981   002426                     
  6982                           ;LED_Buttons.c: 8:     TRISGbits.TRISG1 = 0;
  6983   002426  9287               	bcf	135,1,c	;volatile
  6984                           
  6985                           ;LED_Buttons.c: 9:     TRISAbits.TRISA4 = 0;
  6986   002428  9881               	bcf	129,4,c	;volatile
  6987                           
  6988                           ;LED_Buttons.c: 10:     TRISFbits.TRISF7 = 0;
  6989   00242A  9E86               	bcf	134,7,c	;volatile
  6990                           
  6991                           ;LED_Buttons.c: 12:     LATHbits.LATH3 = 0;
  6992   00242C  9680               	bcf	128,3,c	;volatile
  6993                           
  6994                           ;LED_Buttons.c: 13:     TRISHbits.TRISH3 = 0;
  6995   00242E  9688               	bcf	136,3,c	;volatile
  6996   002430  0012               	return		;funcret
  6997   002432                     __end_of_LED_init:
  6998                           	callstack 0
  6999                           
  7000 ;; *************** function _Interrupts_init *****************
  7001 ;; Defined at:
  7002 ;;		line 12 in file "interrupts.c"
  7003 ;; Parameters:    Size  Location     Type
  7004 ;;		None
  7005 ;; Auto vars:     Size  Location     Type
  7006 ;;		None
  7007 ;; Return value:  Size  Location     Type
  7008 ;;                  1    wreg      void 
  7009 ;; Registers used:
  7010 ;;		wreg, status,2, status,0, cstack
  7011 ;; Tracked objects:
  7012 ;;		On entry : 0/0
  7013 ;;		On exit  : 0/0
  7014 ;;		Unchanged: 0/0
  7015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7020 ;;Total ram usage:        0 bytes
  7021 ;; Hardware stack levels used: 1
  7022 ;; Hardware stack levels required when called: 12
  7023 ;; This function calls:
  7024 ;;		_interrupts_clear_colorclick
  7025 ;; This function is called by:
  7026 ;;		_main
  7027 ;; This function uses a non-reentrant model
  7028 ;;
  7029                           
  7030                           	psect	text40
  7031   00234A                     __ptext40:
  7032                           	callstack 0
  7033   00234A                     _Interrupts_init:
  7034                           	callstack 18
  7035   00234A                     
  7036                           ;interrupts.c: 18:     TRISBbits.TRISB1 = 1;
  7037   00234A  8282               	bsf	130,1,c	;volatile
  7038                           
  7039                           ;interrupts.c: 19:     ANSELBbits.ANSELB1 = 0;
  7040   00234C  010E               	movlb	14	; () banked
  7041   00234E  939A               	bcf	154,1,b	;volatile
  7042   002350                     
  7043                           ; BSR set to: 14
  7044                           ;interrupts.c: 20:     INT1PPS = 0x09;
  7045   002350  0E09               	movlw	9
  7046   002352  010D               	movlb	13	; () banked
  7047   002354  6FF1               	movwf	241,b	;volatile
  7048   002356                     
  7049                           ; BSR set to: 13
  7050                           ;interrupts.c: 21:     PIE0bits.INT1IE = 1;
  7051   002356  010E               	movlb	14	; () banked
  7052   002358  8329               	bsf	41,1,b	;volatile
  7053   00235A                     
  7054                           ; BSR set to: 14
  7055                           ;interrupts.c: 22:     IPR0bits.INT1IP = 1;
  7056   00235A  831F               	bsf	31,1,b	;volatile
  7057   00235C                     
  7058                           ; BSR set to: 14
  7059                           ;interrupts.c: 23:     INTCONbits.INT1EDG = 0;
  7060   00235C  92F2               	bcf	242,1,c	;volatile
  7061   00235E                     
  7062                           ; BSR set to: 14
  7063                           ;interrupts.c: 26:     PIE0bits.TMR0IE=1;
  7064   00235E  8B29               	bsf	41,5,b	;volatile
  7065   002360                     
  7066                           ; BSR set to: 14
  7067                           ;interrupts.c: 27:     IPR0bits.TMR0IP = 0;
  7068   002360  9B1F               	bcf	31,5,b	;volatile
  7069   002362                     
  7070                           ; BSR set to: 14
  7071                           ;interrupts.c: 30:     PIE4bits.RC4IE=1;
  7072   002362  872D               	bsf	45,3,b	;volatile
  7073   002364                     
  7074                           ; BSR set to: 14
  7075                           ;interrupts.c: 32:     interrupts_clear_colorclick();
  7076   002364  ECF9  F011         	call	_interrupts_clear_colorclick	;wreg free
  7077   002368                     
  7078                           ;interrupts.c: 34:     INTCONbits.IPEN = 1;
  7079   002368  8AF2               	bsf	242,5,c	;volatile
  7080   00236A                     
  7081                           ;interrupts.c: 35:     INTCONbits.PEIE = 1;
  7082   00236A  8CF2               	bsf	242,6,c	;volatile
  7083   00236C                     
  7084                           ;interrupts.c: 36:     INTCONbits.GIE=1;
  7085   00236C  8EF2               	bsf	242,7,c	;volatile
  7086   00236E  0012               	return		;funcret
  7087   002370                     __end_of_Interrupts_init:
  7088                           	callstack 0
  7089                           
  7090 ;; *************** function _interrupts_clear_colorclick *****************
  7091 ;; Defined at:
  7092 ;;		line 57 in file "interrupts.c"
  7093 ;; Parameters:    Size  Location     Type
  7094 ;;		None
  7095 ;; Auto vars:     Size  Location     Type
  7096 ;;		None
  7097 ;; Return value:  Size  Location     Type
  7098 ;;                  1    wreg      void 
  7099 ;; Registers used:
  7100 ;;		wreg, status,2, status,0, cstack
  7101 ;; Tracked objects:
  7102 ;;		On entry : 0/0
  7103 ;;		On exit  : 0/0
  7104 ;;		Unchanged: 0/0
  7105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7110 ;;Total ram usage:        0 bytes
  7111 ;; Hardware stack levels used: 1
  7112 ;; Hardware stack levels required when called: 11
  7113 ;; This function calls:
  7114 ;;		_I2C_2_Master_Start
  7115 ;;		_I2C_2_Master_Stop
  7116 ;;		_I2C_2_Master_Write
  7117 ;;		_init_colorclick_interrupts
  7118 ;; This function is called by:
  7119 ;;		_Interrupts_init
  7120 ;; This function uses a non-reentrant model
  7121 ;;
  7122                           
  7123                           	psect	text41
  7124   0023F2                     __ptext41:
  7125                           	callstack 0
  7126   0023F2                     _interrupts_clear_colorclick:
  7127                           	callstack 18
  7128   0023F2                     
  7129                           ;interrupts.c: 59:     I2C_2_Master_Start();
  7130   0023F2  EC2F  F012         	call	_I2C_2_Master_Start	;wreg free
  7131                           
  7132                           ;interrupts.c: 60:     I2C_2_Master_Write(0x52 | 0x00);
  7133   0023F6  0E52               	movlw	82
  7134   0023F8  EC19  F012         	call	_I2C_2_Master_Write
  7135                           
  7136                           ;interrupts.c: 61:     I2C_2_Master_Write(0b11100110);
  7137   0023FC  0EE6               	movlw	230
  7138   0023FE  EC19  F012         	call	_I2C_2_Master_Write
  7139                           
  7140                           ;interrupts.c: 62:     I2C_2_Master_Stop();
  7141   002402  EC2A  F012         	call	_I2C_2_Master_Stop	;wreg free
  7142                           
  7143                           ;interrupts.c: 64:     init_colorclick_interrupts();
  7144   002406  ECAF  F010         	call	_init_colorclick_interrupts	;wreg free
  7145   00240A  0012               	return		;funcret
  7146   00240C                     __end_of_interrupts_clear_colorclick:
  7147                           	callstack 0
  7148                           
  7149 ;; *************** function _init_colorclick_interrupts *****************
  7150 ;; Defined at:
  7151 ;;		line 43 in file "interrupts.c"
  7152 ;; Parameters:    Size  Location     Type
  7153 ;;		None
  7154 ;; Auto vars:     Size  Location     Type
  7155 ;;		None
  7156 ;; Return value:  Size  Location     Type
  7157 ;;                  1    wreg      void 
  7158 ;; Registers used:
  7159 ;;		wreg, status,2, status,0, cstack
  7160 ;; Tracked objects:
  7161 ;;		On entry : 0/0
  7162 ;;		On exit  : 0/0
  7163 ;;		Unchanged: 0/0
  7164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7167 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7168 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7169 ;;Total ram usage:        1 bytes
  7170 ;; Hardware stack levels used: 1
  7171 ;; Hardware stack levels required when called: 10
  7172 ;; This function calls:
  7173 ;;		_color_writetoaddr
  7174 ;; This function is called by:
  7175 ;;		_interrupts_clear_colorclick
  7176 ;; This function uses a non-reentrant model
  7177 ;;
  7178                           
  7179                           	psect	text42
  7180   00215E                     __ptext42:
  7181                           	callstack 0
  7182   00215E                     _init_colorclick_interrupts:
  7183                           	callstack 18
  7184   00215E                     
  7185                           ;interrupts.c: 45:     color_writetoaddr(0x00,0b10011);
  7186   00215E  0E13               	movlw	19
  7187   002160  6E0B               	movwf	color_writetoaddr@value^0,c
  7188   002162  0E00               	movlw	0
  7189   002164  ECD9  F011         	call	_color_writetoaddr
  7190   002168                     
  7191                           ;interrupts.c: 46:     _delay((unsigned long)((3)*(64000000/4000.0)));
  7192   002168  0E3F               	movlw	63
  7193   00216A  6E0D               	movwf	??_init_colorclick_interrupts^0,c
  7194   00216C  0E55               	movlw	85
  7195   00216E                     u4217:
  7196   00216E  2EE8               	decfsz	wreg,f,c
  7197   002170  D7FE               	bra	u4217
  7198   002172  2E0D               	decfsz	??_init_colorclick_interrupts^0,f,c
  7199   002174  D7FC               	bra	u4217
  7200   002176  F000               	nop	
  7201   002178                     
  7202                           ;interrupts.c: 48:     color_writetoaddr(0x0C,0b0100);
  7203   002178  0E04               	movlw	4
  7204   00217A  6E0B               	movwf	color_writetoaddr@value^0,c
  7205   00217C  0E0C               	movlw	12
  7206   00217E  ECD9  F011         	call	_color_writetoaddr
  7207   002182                     
  7208                           ;interrupts.c: 49:     color_writetoaddr(0x04,(int_threshold_low & 0xFF));
  7209   002182  C04F  F00B         	movff	_int_threshold_low,color_writetoaddr@value
  7210   002186  0E04               	movlw	4
  7211   002188  ECD9  F011         	call	_color_writetoaddr
  7212   00218C                     
  7213                           ;interrupts.c: 50:     color_writetoaddr(0x05,(int_threshold_low >> 8));
  7214   00218C  5050               	movf	(_int_threshold_low+1)^0,w,c
  7215   00218E  6E0B               	movwf	color_writetoaddr@value^0,c
  7216   002190  0E05               	movlw	5
  7217   002192  ECD9  F011         	call	_color_writetoaddr
  7218   002196                     
  7219                           ;interrupts.c: 51:     color_writetoaddr(0x06,(int_threshold_high & 0xFF));
  7220   002196  C055  F00B         	movff	_int_threshold_high,color_writetoaddr@value
  7221   00219A  0E06               	movlw	6
  7222   00219C  ECD9  F011         	call	_color_writetoaddr
  7223   0021A0                     
  7224                           ;interrupts.c: 52:     color_writetoaddr(0x07,(int_threshold_high >> 8));
  7225   0021A0  5056               	movf	(_int_threshold_high+1)^0,w,c
  7226   0021A2  6E0B               	movwf	color_writetoaddr@value^0,c
  7227   0021A4  0E07               	movlw	7
  7228   0021A6  ECD9  F011         	call	_color_writetoaddr
  7229   0021AA  0012               	return		;funcret
  7230   0021AC                     __end_of_init_colorclick_interrupts:
  7231                           	callstack 0
  7232                           
  7233 ;; *************** function _color_writetoaddr *****************
  7234 ;; Defined at:
  7235 ;;		line 22 in file "color.c"
  7236 ;; Parameters:    Size  Location     Type
  7237 ;;  address         1    wreg     unsigned char 
  7238 ;;  value           1   10[COMRAM] unsigned char 
  7239 ;; Auto vars:     Size  Location     Type
  7240 ;;  address         1   11[COMRAM] unsigned char 
  7241 ;; Return value:  Size  Location     Type
  7242 ;;                  1    wreg      void 
  7243 ;; Registers used:
  7244 ;;		wreg, status,2, status,0, cstack
  7245 ;; Tracked objects:
  7246 ;;		On entry : 0/0
  7247 ;;		On exit  : 0/0
  7248 ;;		Unchanged: 0/0
  7249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7250 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7251 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7253 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7254 ;;Total ram usage:        2 bytes
  7255 ;; Hardware stack levels used: 1
  7256 ;; Hardware stack levels required when called: 9
  7257 ;; This function calls:
  7258 ;;		_I2C_2_Master_Start
  7259 ;;		_I2C_2_Master_Stop
  7260 ;;		_I2C_2_Master_Write
  7261 ;; This function is called by:
  7262 ;;		_color_click_init
  7263 ;;		_init_colorclick_interrupts
  7264 ;; This function uses a non-reentrant model
  7265 ;;
  7266                           
  7267                           	psect	text43
  7268   0023B2                     __ptext43:
  7269                           	callstack 0
  7270   0023B2                     _color_writetoaddr:
  7271                           	callstack 20
  7272                           
  7273                           ;incstack = 0
  7274                           ;color_writetoaddr@address stored from wreg
  7275   0023B2  6E0C               	movwf	color_writetoaddr@address^0,c
  7276   0023B4                     
  7277                           ;color.c: 23:     I2C_2_Master_Start();
  7278   0023B4  EC2F  F012         	call	_I2C_2_Master_Start	;wreg free
  7279                           
  7280                           ;color.c: 24:     I2C_2_Master_Write(0x52 | 0x00);
  7281   0023B8  0E52               	movlw	82
  7282   0023BA  EC19  F012         	call	_I2C_2_Master_Write
  7283                           
  7284                           ;color.c: 25:     I2C_2_Master_Write(0x80 | address);
  7285   0023BE  500C               	movf	color_writetoaddr@address^0,w,c
  7286   0023C0  0980               	iorlw	128
  7287   0023C2  EC19  F012         	call	_I2C_2_Master_Write
  7288                           
  7289                           ;color.c: 26:     I2C_2_Master_Write(value);
  7290   0023C6  500B               	movf	color_writetoaddr@value^0,w,c
  7291   0023C8  EC19  F012         	call	_I2C_2_Master_Write
  7292                           
  7293                           ;color.c: 27:     I2C_2_Master_Stop();
  7294   0023CC  EC2A  F012         	call	_I2C_2_Master_Stop	;wreg free
  7295   0023D0  0012               	return		;funcret
  7296   0023D2                     __end_of_color_writetoaddr:
  7297                           	callstack 0
  7298                           
  7299 ;; *************** function _I2C_2_Master_Write *****************
  7300 ;; Defined at:
  7301 ;;		line 45 in file "i2c.c"
  7302 ;; Parameters:    Size  Location     Type
  7303 ;;  data_byte       1    wreg     unsigned char 
  7304 ;; Auto vars:     Size  Location     Type
  7305 ;;  data_byte       1    9[COMRAM] unsigned char 
  7306 ;; Return value:  Size  Location     Type
  7307 ;;                  1    wreg      void 
  7308 ;; Registers used:
  7309 ;;		wreg, status,2, status,0, cstack
  7310 ;; Tracked objects:
  7311 ;;		On entry : 0/0
  7312 ;;		On exit  : 0/0
  7313 ;;		Unchanged: 0/0
  7314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7316 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7318 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7319 ;;Total ram usage:        1 bytes
  7320 ;; Hardware stack levels used: 1
  7321 ;; Hardware stack levels required when called: 8
  7322 ;; This function calls:
  7323 ;;		_I2C_2_Master_Idle
  7324 ;; This function is called by:
  7325 ;;		_color_writetoaddr
  7326 ;;		_color_read_Red
  7327 ;;		_color_read_Green
  7328 ;;		_color_read_Blue
  7329 ;;		_color_read_Clear
  7330 ;;		_interrupts_clear_colorclick
  7331 ;; This function uses a non-reentrant model
  7332 ;;
  7333                           
  7334                           	psect	text44
  7335   002432                     __ptext44:
  7336                           	callstack 0
  7337   002432                     _I2C_2_Master_Write:
  7338                           	callstack 20
  7339                           
  7340                           ;incstack = 0
  7341                           ;I2C_2_Master_Write@data_byte stored from wreg
  7342   002432  6E0A               	movwf	I2C_2_Master_Write@data_byte^0,c
  7343   002434                     
  7344                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  7345   002434  EC6A  F011         	call	_I2C_2_Master_Idle	;wreg free
  7346   002438                     
  7347                           ;i2c.c: 48:   SSP2BUF = data_byte;
  7348   002438  C00A  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  7349   00243C  0012               	return		;funcret
  7350   00243E                     __end_of_I2C_2_Master_Write:
  7351                           	callstack 0
  7352                           
  7353 ;; *************** function _I2C_2_Master_Stop *****************
  7354 ;; Defined at:
  7355 ;;		line 39 in file "i2c.c"
  7356 ;; Parameters:    Size  Location     Type
  7357 ;;		None
  7358 ;; Auto vars:     Size  Location     Type
  7359 ;;		None
  7360 ;; Return value:  Size  Location     Type
  7361 ;;                  1    wreg      void 
  7362 ;; Registers used:
  7363 ;;		wreg, status,2, status,0, cstack
  7364 ;; Tracked objects:
  7365 ;;		On entry : 0/0
  7366 ;;		On exit  : 0/0
  7367 ;;		Unchanged: 0/0
  7368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7373 ;;Total ram usage:        0 bytes
  7374 ;; Hardware stack levels used: 1
  7375 ;; Hardware stack levels required when called: 8
  7376 ;; This function calls:
  7377 ;;		_I2C_2_Master_Idle
  7378 ;; This function is called by:
  7379 ;;		_color_writetoaddr
  7380 ;;		_color_read_Red
  7381 ;;		_color_read_Green
  7382 ;;		_color_read_Blue
  7383 ;;		_color_read_Clear
  7384 ;;		_interrupts_clear_colorclick
  7385 ;; This function uses a non-reentrant model
  7386 ;;
  7387                           
  7388                           	psect	text45
  7389   002454                     __ptext45:
  7390                           	callstack 0
  7391   002454                     _I2C_2_Master_Stop:
  7392                           	callstack 20
  7393   002454                     
  7394                           ;i2c.c: 41:   I2C_2_Master_Idle();
  7395   002454  EC6A  F011         	call	_I2C_2_Master_Idle	;wreg free
  7396   002458                     
  7397                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  7398   002458  010E               	movlb	14	; () banked
  7399   00245A  85DA               	bsf	218,2,b	;volatile
  7400   00245C                     
  7401                           ; BSR set to: 14
  7402   00245C  0012               	return		;funcret
  7403   00245E                     __end_of_I2C_2_Master_Stop:
  7404                           	callstack 0
  7405                           
  7406 ;; *************** function _I2C_2_Master_Start *****************
  7407 ;; Defined at:
  7408 ;;		line 27 in file "i2c.c"
  7409 ;; Parameters:    Size  Location     Type
  7410 ;;		None
  7411 ;; Auto vars:     Size  Location     Type
  7412 ;;		None
  7413 ;; Return value:  Size  Location     Type
  7414 ;;                  1    wreg      void 
  7415 ;; Registers used:
  7416 ;;		wreg, status,2, status,0, cstack
  7417 ;; Tracked objects:
  7418 ;;		On entry : 0/0
  7419 ;;		On exit  : 0/0
  7420 ;;		Unchanged: 0/0
  7421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7426 ;;Total ram usage:        0 bytes
  7427 ;; Hardware stack levels used: 1
  7428 ;; Hardware stack levels required when called: 8
  7429 ;; This function calls:
  7430 ;;		_I2C_2_Master_Idle
  7431 ;; This function is called by:
  7432 ;;		_color_writetoaddr
  7433 ;;		_color_read_Red
  7434 ;;		_color_read_Green
  7435 ;;		_color_read_Blue
  7436 ;;		_color_read_Clear
  7437 ;;		_interrupts_clear_colorclick
  7438 ;; This function uses a non-reentrant model
  7439 ;;
  7440                           
  7441                           	psect	text46
  7442   00245E                     __ptext46:
  7443                           	callstack 0
  7444   00245E                     _I2C_2_Master_Start:
  7445                           	callstack 20
  7446   00245E                     
  7447                           ;i2c.c: 29:   I2C_2_Master_Idle();
  7448   00245E  EC6A  F011         	call	_I2C_2_Master_Idle	;wreg free
  7449   002462                     
  7450                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  7451   002462  010E               	movlb	14	; () banked
  7452   002464  81DA               	bsf	218,0,b	;volatile
  7453   002466                     
  7454                           ; BSR set to: 14
  7455   002466  0012               	return		;funcret
  7456   002468                     __end_of_I2C_2_Master_Start:
  7457                           	callstack 0
  7458                           
  7459 ;; *************** function _I2C_2_Master_Idle *****************
  7460 ;; Defined at:
  7461 ;;		line 22 in file "i2c.c"
  7462 ;; Parameters:    Size  Location     Type
  7463 ;;		None
  7464 ;; Auto vars:     Size  Location     Type
  7465 ;;		None
  7466 ;; Return value:  Size  Location     Type
  7467 ;;                  1    wreg      void 
  7468 ;; Registers used:
  7469 ;;		wreg, status,2, status,0
  7470 ;; Tracked objects:
  7471 ;;		On entry : 0/0
  7472 ;;		On exit  : 0/0
  7473 ;;		Unchanged: 0/0
  7474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7477 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7478 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7479 ;;Total ram usage:        1 bytes
  7480 ;; Hardware stack levels used: 1
  7481 ;; Hardware stack levels required when called: 7
  7482 ;; This function calls:
  7483 ;;		Nothing
  7484 ;; This function is called by:
  7485 ;;		_I2C_2_Master_Start
  7486 ;;		_I2C_2_Master_RepStart
  7487 ;;		_I2C_2_Master_Stop
  7488 ;;		_I2C_2_Master_Write
  7489 ;;		_I2C_2_Master_Read
  7490 ;; This function uses a non-reentrant model
  7491 ;;
  7492                           
  7493                           	psect	text47
  7494   0022D4                     __ptext47:
  7495                           	callstack 0
  7496   0022D4                     _I2C_2_Master_Idle:
  7497                           	callstack 20
  7498   0022D4                     l88:
  7499   0022D4  010E               	movlb	14	; () banked
  7500   0022D6  B5D8               	btfsc	216,2,b	;volatile
  7501   0022D8  EF70  F011         	goto	u1771
  7502   0022DC  EF72  F011         	goto	u1770
  7503   0022E0                     u1771:
  7504   0022E0  EF6A  F011         	goto	l88
  7505   0022E4                     u1770:
  7506   0022E4                     
  7507                           ; BSR set to: 14
  7508   0022E4  CEDA F009          	movff	3802,??_I2C_2_Master_Idle	;volatile
  7509   0022E8  0E1F               	movlw	31
  7510   0022EA  1609               	andwf	??_I2C_2_Master_Idle^0,f,c
  7511   0022EC  A4D8               	btfss	status,2,c
  7512   0022EE  EF7B  F011         	goto	u1781
  7513   0022F2  EF7D  F011         	goto	u1780
  7514   0022F6                     u1781:
  7515   0022F6  EF6A  F011         	goto	l88
  7516   0022FA                     u1780:
  7517   0022FA                     
  7518                           ; BSR set to: 14
  7519   0022FA  0012               	return		;funcret
  7520   0022FC                     __end_of_I2C_2_Master_Idle:
  7521                           	callstack 0
  7522                           
  7523 ;; *************** function _LowISR *****************
  7524 ;; Defined at:
  7525 ;;		line 74 in file "interrupts.c"
  7526 ;; Parameters:    Size  Location     Type
  7527 ;;		None
  7528 ;; Auto vars:     Size  Location     Type
  7529 ;;		None
  7530 ;; Return value:  Size  Location     Type
  7531 ;;                  1    wreg      void 
  7532 ;; Registers used:
  7533 ;;		wreg, status,2
  7534 ;; Tracked objects:
  7535 ;;		On entry : 0/0
  7536 ;;		On exit  : 0/0
  7537 ;;		Unchanged: 0/0
  7538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7541 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7542 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7543 ;;Total ram usage:        3 bytes
  7544 ;; Hardware stack levels used: 1
  7545 ;; Hardware stack levels required when called: 6
  7546 ;; This function calls:
  7547 ;;		Nothing
  7548 ;; This function is called by:
  7549 ;;		Interrupt level 1
  7550 ;; This function uses a non-reentrant model
  7551 ;;
  7552                           
  7553                           	psect	intcodelo
  7554   000018                     __pintcodelo:
  7555                           	callstack 0
  7556   000018                     _LowISR:
  7557                           	callstack 18
  7558                           
  7559                           ; BSR set to: 14
  7560                           ;incstack = 0
  7561   000018  8057               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  7562   00001A  CFD8 F006          	movff	status,??_LowISR
  7563   00001E  CFE8 F007          	movff	wreg,??_LowISR+1
  7564   000022  CFE0 F008          	movff	bsr,??_LowISR+2
  7565   000026                     
  7566                           ;interrupts.c: 77:     if(PIR0bits.TMR0IF){
  7567   000026  010E               	movlb	14	; () banked
  7568   000028  AB33               	btfss	51,5,b	;volatile
  7569   00002A  EF19  F000         	goto	i1u338_21
  7570   00002E  EF1B  F000         	goto	i1u338_20
  7571   000032                     i1u338_21:
  7572   000032  EF24  F000         	goto	i1l321
  7573   000036                     i1u338_20:
  7574   000036                     
  7575                           ; BSR set to: 14
  7576                           ;interrupts.c: 78:         TMR0H = 0b11000010;
  7577   000036  0EC2               	movlw	194
  7578   000038  6ED4               	movwf	212,c	;volatile
  7579                           
  7580                           ;interrupts.c: 79:         TMR0L = 0b11110110;
  7581   00003A  0EF6               	movlw	246
  7582   00003C  6ED3               	movwf	211,c	;volatile
  7583                           
  7584                           ;interrupts.c: 80:         tmr_ovf = 1;
  7585   00003E  0E01               	movlw	1
  7586   000040  0100               	movlb	0	; () banked
  7587   000042  6FB0               	movwf	_tmr_ovf& (0+255),b
  7588   000044                     
  7589                           ; BSR set to: 0
  7590                           ;interrupts.c: 81:         PIR0bits.TMR0IF=0;
  7591   000044  010E               	movlb	14	; () banked
  7592   000046  9B33               	bcf	51,5,b	;volatile
  7593   000048                     i1l321:
  7594                           
  7595                           ; BSR set to: 14
  7596   000048  C008  FFE0         	movff	??_LowISR+2,bsr
  7597   00004C  C007  FFE8         	movff	??_LowISR+1,wreg
  7598   000050  C006  FFD8         	movff	??_LowISR,status
  7599   000054  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  7600   000056  0010               	retfie	
  7601   000058                     __end_of_LowISR:
  7602                           	callstack 0
  7603                           
  7604 ;; *************** function _HighISR *****************
  7605 ;; Defined at:
  7606 ;;		line 88 in file "interrupts.c"
  7607 ;; Parameters:    Size  Location     Type
  7608 ;;		None
  7609 ;; Auto vars:     Size  Location     Type
  7610 ;;		None
  7611 ;; Return value:  Size  Location     Type
  7612 ;;                  1    wreg      void 
  7613 ;; Registers used:
  7614 ;;		wreg, status,2, status,0, cstack
  7615 ;; Tracked objects:
  7616 ;;		On entry : 0/0
  7617 ;;		On exit  : 0/0
  7618 ;;		Unchanged: 0/0
  7619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7624 ;;Total ram usage:        0 bytes
  7625 ;; Hardware stack levels used: 1
  7626 ;; Hardware stack levels required when called: 5
  7627 ;; This function calls:
  7628 ;;		i2_interrupts_clear_colorclick
  7629 ;; This function is called by:
  7630 ;;		Interrupt level 2
  7631 ;; This function uses a non-reentrant model
  7632 ;;
  7633                           
  7634                           	psect	intcode
  7635   000008                     __pintcode:
  7636                           	callstack 0
  7637   000008                     _HighISR:
  7638                           	callstack 18
  7639                           
  7640                           ; BSR set to: 14
  7641                           ;incstack = 0
  7642   000008  8257               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7643   00000A  EFB8  F011         	goto	int_func
  7644                           
  7645                           	psect	intcode_body
  7646   002370                     __pintcode_body:
  7647                           	callstack 18
  7648   002370                     int_func:
  7649                           	callstack 18
  7650   002370                     
  7651                           ;interrupts.c: 115:     if(PIR0bits.INT1IF){
  7652   002370  010E               	movlb	14	; () banked
  7653   002372  A333               	btfss	51,1,b	;volatile
  7654   002374  EFBE  F011         	goto	i2u339_41
  7655   002378  EFC0  F011         	goto	i2u339_40
  7656   00237C                     i2u339_41:
  7657   00237C  EFC7  F011         	goto	i2l329
  7658   002380                     i2u339_40:
  7659   002380                     
  7660                           ; BSR set to: 14
  7661                           ;interrupts.c: 116:         color_flag = 1;
  7662   002380  0E01               	movlw	1
  7663   002382  0100               	movlb	0	; () banked
  7664   002384  6FB1               	movwf	_color_flag& (0+255),b
  7665   002386                     
  7666                           ; BSR set to: 0
  7667                           ;interrupts.c: 118:         interrupts_clear_colorclick();
  7668   002386  EC06  F012         	call	i2_interrupts_clear_colorclick	;wreg free
  7669   00238A                     
  7670                           ;interrupts.c: 119:         PIR0bits.INT1IF = 0;
  7671   00238A  010E               	movlb	14	; () banked
  7672   00238C  9333               	bcf	51,1,b	;volatile
  7673   00238E                     i2l329:
  7674                           
  7675                           ; BSR set to: 14
  7676   00238E  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7677   002390  0011               	retfie		f
  7678   002392                     __end_of_HighISR:
  7679                           	callstack 0
  7680                           
  7681 ;; *************** function i2_interrupts_clear_colorclick *****************
  7682 ;; Defined at:
  7683 ;;		line 57 in file "interrupts.c"
  7684 ;; Parameters:    Size  Location     Type
  7685 ;;		None
  7686 ;; Auto vars:     Size  Location     Type
  7687 ;;		None
  7688 ;; Return value:  Size  Location     Type
  7689 ;;                  1    wreg      void 
  7690 ;; Registers used:
  7691 ;;		wreg, status,2, status,0, cstack
  7692 ;; Tracked objects:
  7693 ;;		On entry : 0/0
  7694 ;;		On exit  : 0/0
  7695 ;;		Unchanged: 0/0
  7696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7701 ;;Total ram usage:        0 bytes
  7702 ;; Hardware stack levels used: 1
  7703 ;; Hardware stack levels required when called: 4
  7704 ;; This function calls:
  7705 ;;		i2_I2C_2_Master_Start
  7706 ;;		i2_I2C_2_Master_Stop
  7707 ;;		i2_I2C_2_Master_Write
  7708 ;;		i2_init_colorclick_interrupts
  7709 ;; This function is called by:
  7710 ;;		_HighISR
  7711 ;; This function uses a non-reentrant model
  7712 ;;
  7713                           
  7714                           	psect	text50
  7715   00240C                     __ptext50:
  7716                           	callstack 0
  7717   00240C                     i2_interrupts_clear_colorclick:
  7718                           	callstack 18
  7719   00240C                     
  7720                           ;interrupts.c: 59:     I2C_2_Master_Start();
  7721   00240C  EC39  F012         	call	i2_I2C_2_Master_Start	;wreg free
  7722                           
  7723                           ;interrupts.c: 60:     I2C_2_Master_Write(0x52 | 0x00);
  7724   002410  0E52               	movlw	82
  7725   002412  EC1F  F012         	call	i2_I2C_2_Master_Write
  7726                           
  7727                           ;interrupts.c: 61:     I2C_2_Master_Write(0b11100110);
  7728   002416  0EE6               	movlw	230
  7729   002418  EC1F  F012         	call	i2_I2C_2_Master_Write
  7730                           
  7731                           ;interrupts.c: 62:     I2C_2_Master_Stop();
  7732   00241C  EC34  F012         	call	i2_I2C_2_Master_Stop	;wreg free
  7733                           
  7734                           ;interrupts.c: 64:     init_colorclick_interrupts();
  7735   002420  ECD6  F010         	call	i2_init_colorclick_interrupts	;wreg free
  7736   002424  0012               	return		;funcret
  7737   002426                     __end_ofi2_interrupts_clear_colorclick:
  7738                           	callstack 0
  7739                           
  7740 ;; *************** function i2_init_colorclick_interrupts *****************
  7741 ;; Defined at:
  7742 ;;		line 43 in file "interrupts.c"
  7743 ;; Parameters:    Size  Location     Type
  7744 ;;		None
  7745 ;; Auto vars:     Size  Location     Type
  7746 ;;		None
  7747 ;; Return value:  Size  Location     Type
  7748 ;;                  1    wreg      void 
  7749 ;; Registers used:
  7750 ;;		wreg, status,2, status,0, cstack
  7751 ;; Tracked objects:
  7752 ;;		On entry : 0/0
  7753 ;;		On exit  : 0/0
  7754 ;;		Unchanged: 0/0
  7755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7758 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7759 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7760 ;;Total ram usage:        1 bytes
  7761 ;; Hardware stack levels used: 1
  7762 ;; Hardware stack levels required when called: 3
  7763 ;; This function calls:
  7764 ;;		i2_color_writetoaddr
  7765 ;; This function is called by:
  7766 ;;		i2_interrupts_clear_colorclick
  7767 ;; This function uses a non-reentrant model
  7768 ;;
  7769                           
  7770                           	psect	text51
  7771   0021AC                     __ptext51:
  7772                           	callstack 0
  7773   0021AC                     i2_init_colorclick_interrupts:
  7774                           	callstack 18
  7775   0021AC                     
  7776                           ;interrupts.c: 45:     color_writetoaddr(0x00,0b10011);
  7777   0021AC  0E13               	movlw	19
  7778   0021AE  6E03               	movwf	i2color_writetoaddr@value^0,c
  7779   0021B0  0E00               	movlw	0
  7780   0021B2  ECE9  F011         	call	i2_color_writetoaddr
  7781   0021B6                     
  7782                           ;interrupts.c: 46:     _delay((unsigned long)((3)*(64000000/4000.0)));
  7783   0021B6  0E3F               	movlw	63
  7784   0021B8  6E05               	movwf	??i2_init_colorclick_interrupts^0,c
  7785   0021BA  0E55               	movlw	85
  7786   0021BC                     i2u422_47:
  7787   0021BC  2EE8               	decfsz	wreg,f,c
  7788   0021BE  D7FE               	bra	i2u422_47
  7789   0021C0  2E05               	decfsz	??i2_init_colorclick_interrupts^0,f,c
  7790   0021C2  D7FC               	bra	i2u422_47
  7791   0021C4  F000               	nop	
  7792   0021C6                     
  7793                           ;interrupts.c: 48:     color_writetoaddr(0x0C,0b0100);
  7794   0021C6  0E04               	movlw	4
  7795   0021C8  6E03               	movwf	i2color_writetoaddr@value^0,c
  7796   0021CA  0E0C               	movlw	12
  7797   0021CC  ECE9  F011         	call	i2_color_writetoaddr
  7798   0021D0                     
  7799                           ;interrupts.c: 49:     color_writetoaddr(0x04,(int_threshold_low & 0xFF));
  7800   0021D0  C04F  F003         	movff	_int_threshold_low,i2color_writetoaddr@value
  7801   0021D4  0E04               	movlw	4
  7802   0021D6  ECE9  F011         	call	i2_color_writetoaddr
  7803   0021DA                     
  7804                           ;interrupts.c: 50:     color_writetoaddr(0x05,(int_threshold_low >> 8));
  7805   0021DA  5050               	movf	(_int_threshold_low+1)^0,w,c
  7806   0021DC  6E03               	movwf	i2color_writetoaddr@value^0,c
  7807   0021DE  0E05               	movlw	5
  7808   0021E0  ECE9  F011         	call	i2_color_writetoaddr
  7809   0021E4                     
  7810                           ;interrupts.c: 51:     color_writetoaddr(0x06,(int_threshold_high & 0xFF));
  7811   0021E4  C055  F003         	movff	_int_threshold_high,i2color_writetoaddr@value
  7812   0021E8  0E06               	movlw	6
  7813   0021EA  ECE9  F011         	call	i2_color_writetoaddr
  7814   0021EE                     
  7815                           ;interrupts.c: 52:     color_writetoaddr(0x07,(int_threshold_high >> 8));
  7816   0021EE  5056               	movf	(_int_threshold_high+1)^0,w,c
  7817   0021F0  6E03               	movwf	i2color_writetoaddr@value^0,c
  7818   0021F2  0E07               	movlw	7
  7819   0021F4  ECE9  F011         	call	i2_color_writetoaddr
  7820   0021F8  0012               	return		;funcret
  7821   0021FA                     __end_ofi2_init_colorclick_interrupts:
  7822                           	callstack 0
  7823                           
  7824 ;; *************** function i2_color_writetoaddr *****************
  7825 ;; Defined at:
  7826 ;;		line 22 in file "color.c"
  7827 ;; Parameters:    Size  Location     Type
  7828 ;;  address         1    wreg     unsigned char 
  7829 ;;  value           1    2[COMRAM] unsigned char 
  7830 ;; Auto vars:     Size  Location     Type
  7831 ;;  address         1    3[COMRAM] unsigned char 
  7832 ;; Return value:  Size  Location     Type
  7833 ;;                  1    wreg      void 
  7834 ;; Registers used:
  7835 ;;		wreg, status,2, status,0, cstack
  7836 ;; Tracked objects:
  7837 ;;		On entry : 0/0
  7838 ;;		On exit  : 0/0
  7839 ;;		Unchanged: 0/0
  7840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7841 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7842 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7844 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7845 ;;Total ram usage:        2 bytes
  7846 ;; Hardware stack levels used: 1
  7847 ;; Hardware stack levels required when called: 2
  7848 ;; This function calls:
  7849 ;;		i2_I2C_2_Master_Start
  7850 ;;		i2_I2C_2_Master_Stop
  7851 ;;		i2_I2C_2_Master_Write
  7852 ;; This function is called by:
  7853 ;;		i2_init_colorclick_interrupts
  7854 ;; This function uses a non-reentrant model
  7855 ;;
  7856                           
  7857                           	psect	text52
  7858   0023D2                     __ptext52:
  7859                           	callstack 0
  7860   0023D2                     i2_color_writetoaddr:
  7861                           	callstack 18
  7862                           
  7863                           ;incstack = 0
  7864                           ;i2color_writetoaddr@address stored from wreg
  7865   0023D2  6E04               	movwf	i2color_writetoaddr@address^0,c
  7866   0023D4                     
  7867                           ;color.c: 23:     I2C_2_Master_Start();
  7868   0023D4  EC39  F012         	call	i2_I2C_2_Master_Start	;wreg free
  7869                           
  7870                           ;color.c: 24:     I2C_2_Master_Write(0x52 | 0x00);
  7871   0023D8  0E52               	movlw	82
  7872   0023DA  EC1F  F012         	call	i2_I2C_2_Master_Write
  7873                           
  7874                           ;color.c: 25:     I2C_2_Master_Write(0x80 | address);
  7875   0023DE  5004               	movf	i2color_writetoaddr@address^0,w,c
  7876   0023E0  0980               	iorlw	128
  7877   0023E2  EC1F  F012         	call	i2_I2C_2_Master_Write
  7878                           
  7879                           ;color.c: 26:     I2C_2_Master_Write(value);
  7880   0023E6  5003               	movf	i2color_writetoaddr@value^0,w,c
  7881   0023E8  EC1F  F012         	call	i2_I2C_2_Master_Write
  7882                           
  7883                           ;color.c: 27:     I2C_2_Master_Stop();
  7884   0023EC  EC34  F012         	call	i2_I2C_2_Master_Stop	;wreg free
  7885   0023F0  0012               	return		;funcret
  7886   0023F2                     __end_ofi2_color_writetoaddr:
  7887                           	callstack 0
  7888                           
  7889 ;; *************** function i2_I2C_2_Master_Write *****************
  7890 ;; Defined at:
  7891 ;;		line 45 in file "i2c.c"
  7892 ;; Parameters:    Size  Location     Type
  7893 ;;  data_byte       1    wreg     unsigned char 
  7894 ;; Auto vars:     Size  Location     Type
  7895 ;;  data_byte       1    1[COMRAM] unsigned char 
  7896 ;; Return value:  Size  Location     Type
  7897 ;;                  1    wreg      void 
  7898 ;; Registers used:
  7899 ;;		wreg, status,2, status,0, cstack
  7900 ;; Tracked objects:
  7901 ;;		On entry : 0/0
  7902 ;;		On exit  : 0/0
  7903 ;;		Unchanged: 0/0
  7904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7906 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7908 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7909 ;;Total ram usage:        1 bytes
  7910 ;; Hardware stack levels used: 1
  7911 ;; Hardware stack levels required when called: 1
  7912 ;; This function calls:
  7913 ;;		i2_I2C_2_Master_Idle
  7914 ;; This function is called by:
  7915 ;;		i2_color_writetoaddr
  7916 ;;		i2_interrupts_clear_colorclick
  7917 ;; This function uses a non-reentrant model
  7918 ;;
  7919                           
  7920                           	psect	text53
  7921   00243E                     __ptext53:
  7922                           	callstack 0
  7923   00243E                     i2_I2C_2_Master_Write:
  7924                           	callstack 18
  7925                           
  7926                           ;incstack = 0
  7927                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  7928   00243E  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  7929   002440                     
  7930                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  7931   002440  EC7E  F011         	call	i2_I2C_2_Master_Idle	;wreg free
  7932   002444                     
  7933                           ;i2c.c: 48:   SSP2BUF = data_byte;
  7934   002444  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  7935   002448  0012               	return		;funcret
  7936   00244A                     __end_ofi2_I2C_2_Master_Write:
  7937                           	callstack 0
  7938                           
  7939 ;; *************** function i2_I2C_2_Master_Stop *****************
  7940 ;; Defined at:
  7941 ;;		line 39 in file "i2c.c"
  7942 ;; Parameters:    Size  Location     Type
  7943 ;;		None
  7944 ;; Auto vars:     Size  Location     Type
  7945 ;;		None
  7946 ;; Return value:  Size  Location     Type
  7947 ;;                  1    wreg      void 
  7948 ;; Registers used:
  7949 ;;		wreg, status,2, status,0, cstack
  7950 ;; Tracked objects:
  7951 ;;		On entry : 0/0
  7952 ;;		On exit  : 0/0
  7953 ;;		Unchanged: 0/0
  7954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7959 ;;Total ram usage:        0 bytes
  7960 ;; Hardware stack levels used: 1
  7961 ;; Hardware stack levels required when called: 1
  7962 ;; This function calls:
  7963 ;;		i2_I2C_2_Master_Idle
  7964 ;; This function is called by:
  7965 ;;		i2_color_writetoaddr
  7966 ;;		i2_interrupts_clear_colorclick
  7967 ;; This function uses a non-reentrant model
  7968 ;;
  7969                           
  7970                           	psect	text54
  7971   002468                     __ptext54:
  7972                           	callstack 0
  7973   002468                     i2_I2C_2_Master_Stop:
  7974                           	callstack 18
  7975   002468                     
  7976                           ;i2c.c: 41:   I2C_2_Master_Idle();
  7977   002468  EC7E  F011         	call	i2_I2C_2_Master_Idle	;wreg free
  7978   00246C                     
  7979                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  7980   00246C  010E               	movlb	14	; () banked
  7981   00246E  85DA               	bsf	218,2,b	;volatile
  7982   002470                     
  7983                           ; BSR set to: 14
  7984   002470  0012               	return		;funcret
  7985   002472                     __end_ofi2_I2C_2_Master_Stop:
  7986                           	callstack 0
  7987                           
  7988 ;; *************** function i2_I2C_2_Master_Start *****************
  7989 ;; Defined at:
  7990 ;;		line 27 in file "i2c.c"
  7991 ;; Parameters:    Size  Location     Type
  7992 ;;		None
  7993 ;; Auto vars:     Size  Location     Type
  7994 ;;		None
  7995 ;; Return value:  Size  Location     Type
  7996 ;;                  1    wreg      void 
  7997 ;; Registers used:
  7998 ;;		wreg, status,2, status,0, cstack
  7999 ;; Tracked objects:
  8000 ;;		On entry : 0/0
  8001 ;;		On exit  : 0/0
  8002 ;;		Unchanged: 0/0
  8003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8008 ;;Total ram usage:        0 bytes
  8009 ;; Hardware stack levels used: 1
  8010 ;; Hardware stack levels required when called: 1
  8011 ;; This function calls:
  8012 ;;		i2_I2C_2_Master_Idle
  8013 ;; This function is called by:
  8014 ;;		i2_color_writetoaddr
  8015 ;;		i2_interrupts_clear_colorclick
  8016 ;; This function uses a non-reentrant model
  8017 ;;
  8018                           
  8019                           	psect	text55
  8020   002472                     __ptext55:
  8021                           	callstack 0
  8022   002472                     i2_I2C_2_Master_Start:
  8023                           	callstack 18
  8024   002472                     
  8025                           ;i2c.c: 29:   I2C_2_Master_Idle();
  8026   002472  EC7E  F011         	call	i2_I2C_2_Master_Idle	;wreg free
  8027   002476                     
  8028                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  8029   002476  010E               	movlb	14	; () banked
  8030   002478  81DA               	bsf	218,0,b	;volatile
  8031   00247A                     
  8032                           ; BSR set to: 14
  8033   00247A  0012               	return		;funcret
  8034   00247C                     __end_ofi2_I2C_2_Master_Start:
  8035                           	callstack 0
  8036                           
  8037 ;; *************** function i2_I2C_2_Master_Idle *****************
  8038 ;; Defined at:
  8039 ;;		line 22 in file "i2c.c"
  8040 ;; Parameters:    Size  Location     Type
  8041 ;;		None
  8042 ;; Auto vars:     Size  Location     Type
  8043 ;;		None
  8044 ;; Return value:  Size  Location     Type
  8045 ;;                  1    wreg      void 
  8046 ;; Registers used:
  8047 ;;		wreg, status,2, status,0
  8048 ;; Tracked objects:
  8049 ;;		On entry : 0/0
  8050 ;;		On exit  : 0/0
  8051 ;;		Unchanged: 0/0
  8052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8055 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8056 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8057 ;;Total ram usage:        1 bytes
  8058 ;; Hardware stack levels used: 1
  8059 ;; This function calls:
  8060 ;;		Nothing
  8061 ;; This function is called by:
  8062 ;;		i2_I2C_2_Master_Start
  8063 ;;		i2_I2C_2_Master_Stop
  8064 ;;		i2_I2C_2_Master_Write
  8065 ;; This function uses a non-reentrant model
  8066 ;;
  8067                           
  8068                           	psect	text56
  8069   0022FC                     __ptext56:
  8070                           	callstack 0
  8071   0022FC                     i2_I2C_2_Master_Idle:
  8072                           	callstack 18
  8073   0022FC                     i2l88:
  8074   0022FC  010E               	movlb	14	; () banked
  8075   0022FE  B5D8               	btfsc	216,2,b	;volatile
  8076   002300  EF84  F011         	goto	i2u184_41
  8077   002304  EF86  F011         	goto	i2u184_40
  8078   002308                     i2u184_41:
  8079   002308  EF7E  F011         	goto	i2l88
  8080   00230C                     i2u184_40:
  8081   00230C                     
  8082                           ; BSR set to: 14
  8083   00230C  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  8084   002310  0E1F               	movlw	31
  8085   002312  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  8086   002314  A4D8               	btfss	status,2,c
  8087   002316  EF8F  F011         	goto	i2u185_41
  8088   00231A  EF91  F011         	goto	i2u185_40
  8089   00231E                     i2u185_41:
  8090   00231E  EF7E  F011         	goto	i2l88
  8091   002322                     i2u185_40:
  8092   002322                     
  8093                           ; BSR set to: 14
  8094   002322  0012               	return		;funcret
  8095   002324                     __end_ofi2_I2C_2_Master_Idle:
  8096                           	callstack 0
  8097   000000                     
  8098                           	psect	rparam
  8099   000000                     
  8100                           	psect	temp
  8101   000057                     btemp:
  8102                           	callstack 0
  8103   000057                     	ds	1
  8104   000000                     int$flags	set	btemp
  8105   000000                     wtemp8	set	btemp+1
  8106   000000                     ttemp5	set	btemp+1
  8107   000000                     ttemp6	set	btemp+4
  8108   000000                     ttemp7	set	btemp+8
  8109                           
  8110                           	psect	idloc
  8111                           
  8112                           ;Config register IDLOC0 @ 0x200000
  8113                           ;	unspecified, using default values
  8114   200000                     	org	2097152
  8115   200000  0FFF               	dw	4095
  8116                           
  8117                           ;Config register IDLOC1 @ 0x200002
  8118                           ;	unspecified, using default values
  8119   200002                     	org	2097154
  8120   200002  0FFF               	dw	4095
  8121                           
  8122                           ;Config register IDLOC2 @ 0x200004
  8123                           ;	unspecified, using default values
  8124   200004                     	org	2097156
  8125   200004  0FFF               	dw	4095
  8126                           
  8127                           ;Config register IDLOC3 @ 0x200006
  8128                           ;	unspecified, using default values
  8129   200006                     	org	2097158
  8130   200006  0FFF               	dw	4095
  8131                           
  8132                           ;Config register IDLOC4 @ 0x200008
  8133                           ;	unspecified, using default values
  8134   200008                     	org	2097160
  8135   200008  0FFF               	dw	4095
  8136                           
  8137                           ;Config register IDLOC5 @ 0x20000A
  8138                           ;	unspecified, using default values
  8139   20000A                     	org	2097162
  8140   20000A  0FFF               	dw	4095
  8141                           
  8142                           ;Config register IDLOC6 @ 0x20000C
  8143                           ;	unspecified, using default values
  8144   20000C                     	org	2097164
  8145   20000C  0FFF               	dw	4095
  8146                           
  8147                           ;Config register IDLOC7 @ 0x20000E
  8148                           ;	unspecified, using default values
  8149   20000E                     	org	2097166
  8150   20000E  0FFF               	dw	4095
  8151                           
  8152                           	psect	config
  8153                           
  8154                           ;Config register CONFIG1L @ 0x300000
  8155                           ;	External Oscillator mode Selection bits
  8156                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  8157                           ;	Power-up default value for COSC bits
  8158                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  8159   300000                     	org	3145728
  8160   300000  AA                 	db	170
  8161                           
  8162                           ;Config register CONFIG1H @ 0x300001
  8163                           ;	unspecified, using default values
  8164                           ;	Clock Out Enable bit
  8165                           ;	CLKOUTEN = 0x1, unprogrammed default
  8166                           ;	Clock Switch Enable bit
  8167                           ;	CSWEN = 0x1, unprogrammed default
  8168                           ;	Fail-Safe Clock Monitor Enable bit
  8169                           ;	FCMEN = 0x1, unprogrammed default
  8170   300001                     	org	3145729
  8171   300001  FF                 	db	255
  8172                           
  8173                           ;Config register CONFIG2L @ 0x300002
  8174                           ;	unspecified, using default values
  8175                           ;	Master Clear Enable bit
  8176                           ;	MCLRE = 0x1, unprogrammed default
  8177                           ;	Power-up Timer Enable bit
  8178                           ;	PWRTE = 0x1, unprogrammed default
  8179                           ;	Low-power BOR enable bit
  8180                           ;	LPBOREN = 0x1, unprogrammed default
  8181                           ;	Brown-out Reset Enable bits
  8182                           ;	BOREN = 0x3, unprogrammed default
  8183   300002                     	org	3145730
  8184   300002  FF                 	db	255
  8185                           
  8186                           ;Config register CONFIG2H @ 0x300003
  8187                           ;	unspecified, using default values
  8188                           ;	Brown Out Reset Voltage selection bits
  8189                           ;	BORV = 0x3, unprogrammed default
  8190                           ;	ZCD Disable bit
  8191                           ;	ZCD = 0x1, unprogrammed default
  8192                           ;	PPSLOCK bit One-Way Set Enable bit
  8193                           ;	PPS1WAY = 0x1, unprogrammed default
  8194                           ;	Stack Full/Underflow Reset Enable bit
  8195                           ;	STVREN = 0x1, unprogrammed default
  8196                           ;	Debugger Enable bit
  8197                           ;	DEBUG = 0x1, unprogrammed default
  8198                           ;	Extended Instruction Set Enable bit
  8199                           ;	XINST = 0x1, unprogrammed default
  8200   300003                     	org	3145731
  8201   300003  FF                 	db	255
  8202                           
  8203                           ;Config register CONFIG3L @ 0x300004
  8204                           ;	WDT Period Select bits
  8205                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  8206                           ;	WDT operating mode
  8207                           ;	WDTE = OFF, WDT Disabled
  8208   300004                     	org	3145732
  8209   300004  9F                 	db	159
  8210                           
  8211                           ;Config register CONFIG3H @ 0x300005
  8212                           ;	unspecified, using default values
  8213                           ;	WDT Window Select bits
  8214                           ;	WDTCWS = 0x7, unprogrammed default
  8215                           ;	WDT input clock selector
  8216                           ;	WDTCCS = 0x7, unprogrammed default
  8217   300005                     	org	3145733
  8218   300005  FF                 	db	255
  8219                           
  8220                           ;Config register CONFIG4L @ 0x300006
  8221                           ;	unspecified, using default values
  8222                           ;	Write Protection Block 0
  8223                           ;	WRT0 = 0x1, unprogrammed default
  8224                           ;	Write Protection Block 1
  8225                           ;	WRT1 = 0x1, unprogrammed default
  8226                           ;	Write Protection Block 2
  8227                           ;	WRT2 = 0x1, unprogrammed default
  8228                           ;	Write Protection Block 3
  8229                           ;	WRT3 = 0x1, unprogrammed default
  8230                           ;	Write Protection Block 3
  8231                           ;	WRT4 = 0x1, unprogrammed default
  8232                           ;	Write Protection Block 3
  8233                           ;	WRT5 = 0x1, unprogrammed default
  8234                           ;	Write Protection Block 3
  8235                           ;	WRT6 = 0x1, unprogrammed default
  8236                           ;	Write Protection Block 3
  8237                           ;	WRT7 = 0x1, unprogrammed default
  8238   300006                     	org	3145734
  8239   300006  FF                 	db	255
  8240                           
  8241                           ;Config register CONFIG4H @ 0x300007
  8242                           ;	unspecified, using default values
  8243                           ;	Configuration Register Write Protection bit
  8244                           ;	WRTC = 0x1, unprogrammed default
  8245                           ;	Boot Block Write Protection bit
  8246                           ;	WRTB = 0x1, unprogrammed default
  8247                           ;	Data EEPROM Write Protection bit
  8248                           ;	WRTD = 0x1, unprogrammed default
  8249                           ;	Scanner Enable bit
  8250                           ;	SCANE = 0x1, unprogrammed default
  8251                           ;	Low Voltage Programming Enable bit
  8252                           ;	LVP = 0x1, unprogrammed default
  8253   300007                     	org	3145735
  8254   300007  FF                 	db	255
  8255                           
  8256                           ;Config register CONFIG5L @ 0x300008
  8257                           ;	unspecified, using default values
  8258                           ;	UserNVM Program Memory Code Protection bit
  8259                           ;	CP = 0x1, unprogrammed default
  8260                           ;	DataNVM Memory Code Protection bit
  8261                           ;	CPD = 0x1, unprogrammed default
  8262   300008                     	org	3145736
  8263   300008  FF                 	db	255
  8264                           
  8265                           ;Config register CONFIG5H @ 0x300009
  8266                           ;	unspecified, using default values
  8267   300009                     	org	3145737
  8268   300009  FF                 	db	255
  8269                           
  8270                           ;Config register CONFIG6L @ 0x30000A
  8271                           ;	unspecified, using default values
  8272                           ;	Table Read Protection Block 0
  8273                           ;	EBTR0 = 0x1, unprogrammed default
  8274                           ;	Table Read Protection Block 1
  8275                           ;	EBTR1 = 0x1, unprogrammed default
  8276                           ;	Table Read Protection Block 2
  8277                           ;	EBTR2 = 0x1, unprogrammed default
  8278                           ;	Table Read Protection Block 3
  8279                           ;	EBTR3 = 0x1, unprogrammed default
  8280                           ;	Table Read Protection Block 4
  8281                           ;	EBTR4 = 0x1, unprogrammed default
  8282                           ;	Table Read Protection Block 5
  8283                           ;	EBTR5 = 0x1, unprogrammed default
  8284                           ;	Table Read Protection Block 6
  8285                           ;	EBTR6 = 0x1, unprogrammed default
  8286                           ;	Table Read Protection Block 7
  8287                           ;	EBTR7 = 0x1, unprogrammed default
  8288   30000A                     	org	3145738
  8289   30000A  FF                 	db	255
  8290                           
  8291                           ;Config register CONFIG6H @ 0x30000B
  8292                           ;	unspecified, using default values
  8293                           ;	Boot Block Table Read Protection bit
  8294                           ;	EBTRB = 0x1, unprogrammed default
  8295   30000B                     	org	3145739
  8296   30000B  FF                 	db	255
  8297                           tosu	equ	0xFFF
  8298                           tosh	equ	0xFFE
  8299                           tosl	equ	0xFFD
  8300                           stkptr	equ	0xFFC
  8301                           pclatu	equ	0xFFB
  8302                           pclath	equ	0xFFA
  8303                           pcl	equ	0xFF9
  8304                           tblptru	equ	0xFF8
  8305                           tblptrh	equ	0xFF7
  8306                           tblptrl	equ	0xFF6
  8307                           tablat	equ	0xFF5
  8308                           prodh	equ	0xFF4
  8309                           prodl	equ	0xFF3
  8310                           indf0	equ	0xFEF
  8311                           postinc0	equ	0xFEE
  8312                           postdec0	equ	0xFED
  8313                           preinc0	equ	0xFEC
  8314                           plusw0	equ	0xFEB
  8315                           fsr0h	equ	0xFEA
  8316                           fsr0l	equ	0xFE9
  8317                           wreg	equ	0xFE8
  8318                           indf1	equ	0xFE7
  8319                           postinc1	equ	0xFE6
  8320                           postdec1	equ	0xFE5
  8321                           preinc1	equ	0xFE4
  8322                           plusw1	equ	0xFE3
  8323                           fsr1h	equ	0xFE2
  8324                           fsr1l	equ	0xFE1
  8325                           bsr	equ	0xFE0
  8326                           indf2	equ	0xFDF
  8327                           postinc2	equ	0xFDE
  8328                           postdec2	equ	0xFDD
  8329                           preinc2	equ	0xFDC
  8330                           plusw2	equ	0xFDB
  8331                           fsr2h	equ	0xFDA
  8332                           fsr2l	equ	0xFD9
  8333                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         88
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     78      86
    BANK0           160     52     134
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    MoveBuggy@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    MoveBuggy@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    LightBlueInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    LightBlueInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    OrangeInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    OrangeInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    PinkInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    PinkInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    YellowInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    YellowInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    BlueInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    BlueInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    GreenInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    GreenInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    RedInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    RedInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnLeft135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turn180@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turn180@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnLeft90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    fullSpeedBackwards@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    fullSpeedBackwards@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    fullSpeedBackwards@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    fullSpeedBackwards@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    fullSpeedBackwards@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    fullSpeedBackwards@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    S1153DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    S1153DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), main@motorL(BANK0[9]), 

    detect_color@tempval	PTR struct RGB_val size(2) Largest target is 8
		 -> main@initial_color(BANK0[8]), 

    Update_RGBC@tempval	PTR struct RGB_val size(2) Largest target is 8
		 -> main@initial_color(BANK0[8]), 


Critical Paths under _main in COMRAM

    _fullSpeedAhead->_setMotorPWM
    _detect_color->___fltol
    ___fltol->___flmul
    ___flmul->___fldiv
    ___fldiv->___xxtofl
    _color_click_init->_color_writetoaddr
    _Update_RGBC->_color_read_Blue
    _Update_RGBC->_color_read_Clear
    _Update_RGBC->_color_read_Green
    _Update_RGBC->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _MoveBuggy->_BlueInstructions
    _MoveBuggy->_GreenInstructions
    _MoveBuggy->_LightBlueInstructions
    _MoveBuggy->_OrangeInstructions
    _MoveBuggy->_PinkInstructions
    _MoveBuggy->_RedInstructions
    _MoveBuggy->_YellowInstructions
    _YellowInstructions->_turnRight90
    _RedInstructions->_turnRight90
    _turnRight90->_turnRight
    _PinkInstructions->_turnLeft90
    _OrangeInstructions->_turnRight135
    _turnRight135->_turnRight
    _LightBlueInstructions->_turnLeft135
    _turnLeft135->_turnLeft
    _GreenInstructions->_turnLeft90
    _turnLeft90->_turnLeft
    _turnLeft->_setMotorPWM
    _BlueInstructions->_turn180
    _turn180->_turnRight
    _turnRight->_setMotorPWM
    _stop->_setMotorPWM
    _fullSpeedBackwards->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _interrupts_clear_colorclick->_init_colorclick_interrupts
    _init_colorclick_interrupts->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    i2_interrupts_clear_colorclick->i2_init_colorclick_interrupts
    i2_init_colorclick_interrupts->i2_color_writetoaddr
    i2_color_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_detect_color
    _detect_color->___fltol

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0  119395
                                             22 BANK0     30    30      0
                    _Interrupts_init
                           _LED_init
                          _MoveBuggy
                        _Timer0_init
                        _Update_RGBC
                         _WhiteLight
                   _color_click_init
                       _detect_color
                     _fullSpeedAhead
                    _initDCmotorsPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _fullSpeedAhead                                       6     2      4    2245
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _detect_color                                        18    16      2    6577
                                              4 BANK0     18    16      2
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     616
                                              8 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     517
                                             72 COMRAM     6     2      4
                                              0 BANK0      4     4      0
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    1886
                                             47 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1541
                                             22 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     750
                                             12 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WhiteLight                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Update_RGBC                                          2     0      2     616
                                             19 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              9 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MoveBuggy                                            5     1      4  102924
                                             45 COMRAM     5     1      4
                   _BlueInstructions
                  _GreenInstructions
              _LightBlueInstructions
                 _OrangeInstructions
                   _PinkInstructions
                    _RedInstructions
                 _YellowInstructions
 ---------------------------------------------------------------------------------
 (2) _YellowInstructions                                   7     3      4   14746
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                        _turnRight90
 ---------------------------------------------------------------------------------
 (2) _RedInstructions                                      7     3      4   14746
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                        _turnRight90
 ---------------------------------------------------------------------------------
 (3) _turnRight90                                          5     1      4    7145
                                             33 COMRAM     5     1      4
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _PinkInstructions                                     7     3      4   14594
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                         _turnLeft90
 ---------------------------------------------------------------------------------
 (2) _OrangeInstructions                                   7     3      4   14594
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                       _turnRight135
 ---------------------------------------------------------------------------------
 (3) _turnRight135                                         5     1      4    6993
                                             33 COMRAM     5     1      4
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _LightBlueInstructions                                7     3      4   14442
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                        _turnLeft135
 ---------------------------------------------------------------------------------
 (3) _turnLeft135                                          5     1      4    6841
                                             33 COMRAM     5     1      4
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (2) _GreenInstructions                                    7     3      4   14594
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                         _turnLeft90
 ---------------------------------------------------------------------------------
 (3) _turnLeft90                                           5     1      4    6993
                                             33 COMRAM     5     1      4
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (4) _turnLeft                                             6     2      4    2441
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _BlueInstructions                                     7     3      4   14594
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                            _turn180
 ---------------------------------------------------------------------------------
 (3) _turn180                                              5     1      4    6993
                                             33 COMRAM     5     1      4
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (4) _turnRight                                            6     2      4    2593
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _stop                                                 5     1      4    4113
                                             27 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _fullSpeedBackwards                                   6     2      4    3157
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    1829
                                             21 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                             14 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _LED_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0     772
        _interrupts_clear_colorclick
 ---------------------------------------------------------------------------------
 (2) _interrupts_clear_colorclick                          0     0      0     772
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
         _init_colorclick_interrupts
 ---------------------------------------------------------------------------------
 (3) _init_colorclick_interrupts                           1     1      0     750
                                             12 COMRAM     1     1      0
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     750
                                             10 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              9 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _LowISR                                               3     3      0       0
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _HighISR                                              0     0      0     244
      i2_interrupts_clear_colorclick
 ---------------------------------------------------------------------------------
 (9) i2_interrupts_clear_colorclick                        0     0      0     244
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
       i2_init_colorclick_interrupts
 ---------------------------------------------------------------------------------
 (10) i2_init_colorclick_interrupts                        1     1      0     222
                                              4 COMRAM     1     1      0
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (11) i2_color_writetoaddr                                 2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (12) i2_I2C_2_Master_Write                                1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (12) i2_I2C_2_Master_Stop                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (12) i2_I2C_2_Master_Start                                0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (13) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Interrupts_init
     _interrupts_clear_colorclick
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
       _init_colorclick_interrupts
         _color_writetoaddr
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
   _LED_init
   _MoveBuggy
     _BlueInstructions
       _fullSpeedBackwards
         _setMotorPWM
           ___lwdiv
             ___wmul (ARG)
           ___wmul
       _stop
         _setMotorPWM
       _turn180
         _stop
         _turnRight
           _setMotorPWM
     _GreenInstructions
       _fullSpeedBackwards
       _stop
       _turnLeft90
         _stop
         _turnLeft
           _setMotorPWM
     _LightBlueInstructions
       _fullSpeedBackwards
       _stop
       _turnLeft135
         _stop
         _turnLeft
     _OrangeInstructions
       _fullSpeedBackwards
       _stop
       _turnRight135
         _stop
         _turnRight
     _PinkInstructions
       _fullSpeedBackwards
       _stop
       _turnLeft90
     _RedInstructions
       _fullSpeedBackwards
       _stop
       _turnRight90
         _stop
         _turnRight
     _YellowInstructions
       _fullSpeedBackwards
       _stop
       _turnRight90
   _Timer0_init
   _Update_RGBC
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _WhiteLight
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
   _detect_color
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       ___fldiv (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _fullSpeedAhead
     _setMotorPWM
   _initDCmotorsPWM
   _stop

 _LowISR (ROOT)

 _HighISR (ROOT)
   i2_interrupts_clear_colorclick
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle
     i2_init_colorclick_interrupts
       i2_color_writetoaddr
         i2_I2C_2_Master_Start
         i2_I2C_2_Master_Stop
         i2_I2C_2_Master_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      64        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     34      86       5       83.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4E      56       1       91.5%
BITBIGSFRhlllh      52      0       0      41        0.0%
BITBIGSFRhlllll     37      0       0      43        0.0%
BITBIGSFRllh        2D      0       0      46        0.0%
BITBIGSFRlllhll     2A      0       0      54        0.0%
BITBIGSFRllllhl     23      0       0      61        0.0%
BITBIGSFRhhhlll     1D      0       0      38        0.0%
BITBIGSFRhhhhlh     1B      0       0      33        0.0%
BITBIGSFRhhhhll     13      0       0      34        0.0%
BITBIGSFRlllhhh     11      0       0      48        0.0%
BITBIGSFRlllhhh     11      0       0      49        0.0%
BITBIGSFRhhhlhh      E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRlllhhh      C      0       0      47        0.0%
BITBIGSFRlllhll      9      0       0      58        0.0%
BITBIGSFRhlllll      8      0       0      44        0.0%
BITBIGSFRllllhh      6      0       0      60        0.0%
BITBIGSFRlllhll      6      0       0      53        0.0%
BITBIGSFRlllhll      5      0       0      56        0.0%
BITBIGSFRlllhlh      5      0       0      52        0.0%
BITBIGSFRlllhll      3      0       0      55        0.0%
BITBIGSFRlllhll      3      0       0      57        0.0%
BITBIGSFRlllhhl      3      0       0      51        0.0%
BITBIGSFRhllllh      2      0       0      42        0.0%
BITBIGSFRhhhllh      2      0       0      37        0.0%
BITBIGSFRlllll       2      0       0      62        0.0%
BITBIGSFRhhhlhl      1      0       0      36        0.0%
BITBIGSFRlllhhh      1      0       0      50        0.0%
BITBIGSFRhllhh       1      0       0      39        0.0%
BITBIGSFRhllhl       1      0       0      40        0.0%
BITBIGSFRlllhll      1      0       0      59        0.0%
BITBIGSFRlh          1      0       0      45        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      DC      63        0.0%
DATA                 0      0      DC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Mar 07 17:03:45 2023

                       _color_read_Red 201E                           ___fldiv@aexp 002F  
                         ___fldiv@bexp 002E                           ___fldiv@sign 0027  
                      _color_read_Blue 210E                                     l21 22A8  
                                   l30 20BC                                     l24 23D0  
                                   l33 215C                                     l42 068E  
                                   l27 206C                                     l36 210C  
                                   l52 068A                                     l44 068A  
                                   l39 1E5A                                     l58 0690  
                                   l91 22FA                                     l85 22D2  
                                   l94 2466                                     l88 22D4  
                                   l97 2452                                     bsr 000FE0  
                  ___wmul@multiplicand 000B                       _color_read_Clear 20BE  
                     _color_read_Green 206E                      ??_Interrupts_init 000E  
                                  l100 245C                                    l103 243C  
                                  l201 16CE                                    l106 223A  
                                  l211 187A                                    l220 1FC2  
                                  l125 2430                                    l310 21AA  
                                  l206 17A4                                    l303 236E  
                                  l128 2482                                    l313 240A  
                                  l229 1EB4                                    l238 201C  
                                  l191 194E                                    l247 1F0E  
                                  l256 1F68                                    l186 1174  
                                  l427 23B0                                    l179 19DE  
                                  l196 15E0                                    l517 1AEA  
                                  l526 1D02                                    l535 1D88  
                                  l544 1A64                                    l553 1B70  
                                  l562 1BF6                                    l571 1C7C  
                                  l483 11FA                                    l581 13EA  
                                  l590 2348                                    l587 13EA  
                                  l887 14F2                    i2_color_writetoaddr 23D2  
                                  wreg 000FE8                           ___flmul@aexp 0041  
                         ___flmul@bexp 0042                           ___flmul@sign 003C  
                         ___flmul@temp 0047                           ___flmul@prod 0043  
                         ___fltol@exp1 004E                                   l1211 094C  
                                 l1204 0756                                   l1221 0A7C  
                                 l1213 09C4                                   l1214 09B2  
                                 l1208 0ABA                                   l1081 1DF4  
                                 l3001 0DE4                                   l3011 0E42  
                                 l3003 0DFA                                   l1172 0E54  
                                 l1252 0F44                                   l3013 0E48  
                                 l3005 0E14                                   l3101 0906  
                                 l1245 0EAC                                   l1174 0CB4  
                                 l3015 0E4A                                   l3007 0E30  
                                 l1183 0CFA                                   l3111 095C  
                                 l3103 0914                                   l3031 06BE  
                                 l3023 0692                                   l1088 1DFC  
                                 l1248 1008                                   l3009 0E34  
                                 l1185 0D72                                   l1177 0C78  
                                 l3113 096A                                   l3105 0932  
                                 l3041 06FA                                   l3033 06CE  
                                 l3025 069E                                   l3201 0E76  
                                 l1186 0D60                                   l3123 09D4  
                                 l3131 0A1C                                   l3115 096E  
                                 l3107 093C                                   l3051 0730  
                                 l3043 0700                                   l3035 06DE  
                                 l3027 06AC                                   l1259 0FA0  
                                 l3211 0EEE                                   l3203 0EBC  
                                 l2501 2462                                   l3141 0A90  
                                 l3133 0A36                                   l3125 09E0  
                                 l3117 097C                                   l3109 094A  
                                 l3053 0740                                   l3045 070E  
                                 l3037 06E4                                   l3029 06AE  
                                 l3221 0F76                                   l3213 0EFA  
                                 l3205 0ED2                                   l2503 2434  
                                 l2511 100A                                   l3143 0A9E  
                                 l3135 0A4A                                   l3127 09EE  
                                 l3119 09AA                                   l3071 07C2  
                                 l3063 078A                                   l3055 0746  
                                 l3047 0710                                   l3039 06F4  
                                 l3231 0FB4                                   l3223 0F82  
                                 l3215 0F2C                                   l2505 2438  
                                 l2521 10D4                                   l2513 1026  
                                 l2601 244E                                   l3145 0AA0  
                                 l3137 0A64                                   l3129 0A18  
                                 l3081 080C                                   l3073 07DA  
                                 l3065 0796                                   l3057 0766  
                                 l3049 0720                                   l3233 0FD8  
                                 l3225 0F90                                   l3217 0F2E  
                                 l3209 0EE6                                   l3401 1960  
                                 l2507 2454                                   l2531 23B4  
                                 l2523 10F0                                   l2515 107A  
                                 l2611 2236                                   l2603 21FC  
                                 l3139 0A80                                   l3147 0AA6  
                                 l3091 0862                                   l3083 081C  
                                 l3075 07E6                                   l3067 07A0  
                                 l3059 0776                                   l3235 0FE8  
                                 l3227 0FAE                                   l3219 0F3A  
                                 l3411 19BA                                   l3403 1986  
                                 l2509 2458                                   l2525 1134  
                                 l2517 108E                                   l2621 180E  
                                 l2541 18E4                                   l2533 187C  
                                 l2701 1F56                                   l3501 1396  
                                 l2613 2238                                   l2605 2200  
                                 l3261 2284                                   l3149 0AAA  
                                 l3093 087E                                   l3085 0828  
                                 l3077 07F2                                   l3069 07B6  
                                 l3237 0FF6                                   l3229 0FB0  
                                 l3421 19DC                                   l3413 19C4  
                                 l3405 198A                                   l2711 2182  
                                 l2471 2324                                   l2519 1092  
                                 l2631 1856                                   l2623 182A  
                                 l2543 18FA                                   l2535 18B4  
                                 l2551 14F4                                   l2703 1F58  
                                 l3503 13A8                                   l2607 2208  
                                 l3263 2294                                   l3095 088A  
                                 l3087 0838                                   l3079 0800  
                                 l3239 0FF8                                   l3431 1760  
                                 l3423 16D0                                   l3415 19C6  
                                 l3407 19AE                                   l2713 218C  
                                 l2705 215E                                   l3441 234A  
                                 l2481 1DA4                                   l2473 2340  
                                 l2633 1862                                   l2625 1836  
                                 l2617 17A6                                   l2545 1928  
                                 l2537 18C0                                   l2801 1D22  
                                 l2561 159A                                   l2553 1550  
                                 l2641 1F88                                   l3505 13C0  
                                 l2609 2210                                   l2721 22AA  
                                 l3265 229E                                   l3257 2276  
                                 l3097 08A6                                   l3089 0852  
                                 l3433 176A                                   l3425 172C  
                                 l3417 19D0                                   l3409 19B8  
                                 l2467 22D4                                   l2715 2196  
                                 l2707 2168                                   l3451 235E  
                                 l3443 2350                                   l2491 1DDE  
                                 l2483 1DAC                                   l2627 1840  
                                 l2619 1802                                   l2547 1934  
                                 l2539 18D8                                   l2571 163E  
                                 l2811 1D74                                   l2803 1D36  
                                 l2563 15B0                                   l2555 155C  
                                 l2643 1F9C                                   l2635 1F6A  
                                 l2651 1E64                                   l3507 13D2  
                                 l3267 1DFE                                   l2731 22C0  
                                 l2723 22B4                                   l3259 227A  
                                 l3099 08D0                                   l3435 1774  
                                 l3427 1738                                   l3419 19D2  
                                 l2469 22E4                                   l2717 21A0  
                                 l2709 2178                                   l3461 236A  
                                 l3453 2360                                   l3445 2356  
                                 l2493 1DE6                                   l2485 1DB4  
                                 l2477 1D8A                                   l2629 184A  
                                 l2549 1940                                   l2581 169E  
                                 l2573 164A                                   l2805 1D4A  
                                 l2565 15BC                                   l2557 1578  
                                 l2645 1FB0                                   l2637 1F72  
                                 l2661 1EA4                                   l2653 1E78  
                                 l2821 1A12                                   l2813 19E0  
                                 l2741 20B4                                   l2733 201E  
                                 l2725 22BA                                   l2901 0B12  
                                 l3197 0E58                                   l3701 03E2  
                                 l3437 1780                                   l3429 1754  
                                 l3463 236C                                   l3455 2362  
                                 l3447 235A                                   l2495 1DE8  
                                 l2487 1DC2                                   l2479 1D92  
                                 l2583 16AA                                   l2575 1666  
                                 l2671 1FF6                                   l2663 1FC4  
                                 l2807 1D4C                                   l2567 15C8  
                                 l2559 1584                                   l2647 1FB2  
                                 l2639 1F86                                   l2831 1AEC  
                                 l2655 1E7A                                   l2823 1A26  
                                 l2815 19E8                                   l2751 20BE  
                                 l2735 2064                                   l2727 22BC  
                                 l2911 0B3E                                   l2903 0B22  
                                 l3631 1416                                   l3199 0E68  
                                 l3711 042A                                   l3703 03F2  
                                 l3439 178C                                   l3457 2364  
                                 l3449 235C                                   l2497 1DEE  
                                 l2489 1DC8                                   l2585 16B6  
                                 l2577 1672                                   l2569 15E2  
                                 l2673 200A                                   l2665 1FCC  
                                 l2809 1D5C                                   l2681 1ED2  
                                 l2841 1B32                                   l2833 1AF4  
                                 l2657 1E8E                                   l2649 1E5C  
                                 l2761 1A6E                                   l2825 1A28  
                                 l2817 19FC                                   l3481 12C6  
                                 l3473 2392                                   l2745 210E  
                                 l2753 2104                                   l2729 22BE  
                                 l2913 0B4E                                   l2921 0B78  
                                 l2905 0B28                                   l3641 1466  
                                 l3633 1442                                   l3625 13EC  
                                 l3721 047A                                   l3713 043A  
                                 l3705 0402                                   l3801 11A0  
                                 l2499 245E                                   l3459 2368  
                                 l3395 2426                                   l2579 1688  
                                 l2675 200C                                   l2667 1FE0  
                                 l2691 1F10                                   l2683 1ED4  
                                 l2851 1B7A                                   l2843 1B34  
                                 l2835 1B08                                   l2659 1EA2  
                                 l2771 1AAE                                   l2763 1A82  
                                 l2827 1A38                                   l2819 19FE  
                                 l3491 132A                                   l3483 12D6  
                                 l3475 239A                                   l2747 2154  
                                 l2739 206E                                   l2931 0BBA  
                                 l2923 0B88                                   l2915 0B5E  
                                 l2907 0B2E                                   l3651 1492  
                                 l3635 1444                                   l3627 1402  
                                 l3731 04C2                                   l3715 044A  
                                 l3723 0482                                   l3707 0412  
                                 l3811 11CA                                   l3803 11B4  
                                 l2757 23F2                                   l2669 1FE2  
                                 l2781 1C9A                                   l2693 1F18  
                                 l2685 1EE8                                   l2677 1EB6  
                                 l2861 1BBA                                   l2853 1B8E  
                                 l2845 1B44                                   l2837 1B0A  
                                 l2773 1ABE                                   l2765 1A84  
                                 l2829 1A50                                   l3493 1342  
                                 l3485 12EE                                   l3477 23A4  
                                 l3397 247C                                   l2925 0B9E  
                                 l2917 0B6E                                   l2909 0B3C  
                                 l3661 14C2                                   l3637 1454  
                                 l3741 050A                                   l3733 04D2  
                                 l3725 0492                                   l3717 045A  
                                 l3709 041A                                   l3821 11E4  
                                 l3813 11D2                                   l3805 11BA  
                                 l2791 1CD6                                   l2783 1C9C  
                                 l2695 1F2C                                   l2871 1C14  
                                 l2687 1EFC                                   l2679 1EBE  
                                 l2863 1BCA                                   l2855 1B90  
                                 l2847 1B5C                                   l2839 1B1E  
                                 l2775 1AD6                                   l2767 1A98  
                                 l2759 1A66                                   l3495 1354  
                                 l3487 1300                                   l3479 23AE  
                                 l2599 244A                                   l2951 0C3C  
                                 l2943 0BF2                                   l2927 0BAE  
                                 l2935 0BCE                                   l2919 0B70  
                                 l3663 14D2                                   l3647 147E  
                                 l3639 1458                                   l3743 051A  
                                 l3751 0552                                   l3735 04E2  
                                 l3727 04A2                                   l3719 046A  
                                 l3671 0062                                   l3399 1950  
                                 l3831 120A                                   l3823 11EC  
                                 l3815 11D8                                   l3807 11BE  
                                 l2793 1CEE                                   l2785 1CB0  
                                 l2777 1C7E                                   l2697 1F2E  
                                 l2881 1C50                                   l2873 1C16  
                                 l2689 1EFE                                   l2865 1BE2  
                                 l2857 1BA4                                   l2849 1B72  
                                 l2769 1AAC                                   l3497 136C  
                                 l3489 1318                                   l2961 0C82  
                                 l2953 0C44                                   l2945 0C0C  
                                 l2937 0BDE                                   l2929 0BB6  
                                 l3665 14E2                                   l3657 14A6  
                                 l3649 1488                                   l3761 05A2  
                                 l3753 0562                                   l3745 052A  
                                 l3729 04B2                                   l3737 04EA  
                                 l3681 0348                                   l3673 0148  
                                 l3841 124C                                   l3833 121C  
                                 l3825 11F4                                   l3817 11DC  
                                 l3809 11C2                                   l2795 1D04  
                                 l2787 1CC4                                   l2779 1C86  
                                 l2699 1F42                                   l2883 1C68  
                                 l2875 1C2A                                   l2867 1BF8  
                                 l2859 1BB8                                   l3499 137E  
                                 l2971 0CDA                                   l2963 0CA0  
                                 l2955 0C54                                   l2947 0C1C  
                                 l2939 0BDE                                   l2891 0AD8  
                                 l3659 14B2                                   l3771 05EA  
                                 l3763 05B2                                   l3755 0572  
                                 l3747 053A                                   l3739 04FA  
                                 l3691 039A                                   l3683 035A  
                                 l3675 0234                                   l3851 128A  
                                 l3843 125C                                   l3835 1220  
                                 l3827 11FA                                   l3819 11E0  
                                 l2797 1D0C                                   l2789 1CC6  
                                 l2877 1C3E                                   l2869 1C00  
                                 l2981 0D18                                   l2973 0CE0  
                                 l2965 0CA2                                   l2957 0C68  
                                 l2949 0C2C                                   l2893 0AE8  
                                 l2885 0ABC                                   l3781 0632  
                                 l3773 05FA                                   l3757 0582  
                                 l3765 05BA                                   l3749 054A  
                                 l3693 03AA                                   l3685 036A  
                                 l3677 0320                                   l3669 005C  
                                 l3853 12A2                                   l3845 1262  
                                 l3837 1230                                   l3829 11FE  
                                 l2799 1D20                                   l2879 1C40  
                                 l2991 0D82                                   l2983 0D1C  
                                 l2975 0CEA                                   l2967 0CB2  
                                 l2959 0C76                                   l2895 0AF8  
                                 l2887 0AC8                                   l3791 0682  
                                 l3783 0642                                   l3775 060A  
                                 l3767 05CA                                   l3759 0592  
                                 l3687 037A                                   l3695 03B2  
                                 l3679 0330                                   l3855 12A4  
                                 l3847 1276                                   l3839 1244  
                                 l2993 0D8E                                   l2985 0D2A  
                                 l2977 0CF8                                   l2969 0CC4  
                                 l2897 0B08                                   l2889 0AD6  
                                 l3785 0652                                   l3777 061A  
                                 l3769 05DA                                   l3697 03C2  
                                 l3689 038A                                   l3849 127A  
                                 l2995 0D9C                                   l2987 0D58  
                                 l2979 0D0A                                   l2899 0B0A  
                                 l3787 0662                                   l3779 0622  
                                 l3699 03D2                                   l3795 1176  
                                 l2997 0DC6                                   l3789 0672  
                                 l3797 1198                                   l2999 0DCA  
                                 l3799 119C                                   u2000 1FF2  
                                 u2001 1FEE                                   u2010 201C  
                                 u2011 2018                                   u2100 1D32  
                                 u2020 1EE4                                   u2101 1D2E  
                                 u2021 1EE0                                   u2110 1D5C  
                                 u2030 1F0E                                   u2111 1D58  
                                 u2031 1F0A                                   u2040 1F3E  
                                 u2120 1A0E                                   u2200 0AD6  
                                 u2041 1F3A                                   u2121 1A0A  
                                 u2201 0AD2                                   u2050 1F68  
                                 u2130 1A38                                   u2210 0AE8  
                                 u2051 1F64                                   u2131 1A34  
                                 u2211 0AE4                                   u2140 1B1A  
                                 u2060 1A94                                   u2300 0CA0  
                                 u2220 0AF8                                   u2141 1B16  
                                 u2061 1A90                                   u2301 0C9C  
                                 u2221 0AF4                                   u2150 1B44  
                                 u2070 1ABE                                   u2310 0CC4  
                                 u2230 0B3C                                   u2151 1B40  
                                 u2071 1ABA                                   u2311 0CC0  
                                 u2231 0B38                                   u2080 1CAC  
                                 u2160 1BA0                                   u2400 0DE4  
                                 u2320 0CDA                                   u2240 0B4E  
                                 u4000 0662                           _BAUD4CONbits 000EE9  
                                 u2081 1CA8                                   u2161 1B9C  
                                 u2401 0DE0                                   u2321 0CD6  
                                 u2241 0B4A                                   u4001 065E  
                                 u2090 1CD6                                   u2170 1BCA  
                                 u2410 0E14                                   u2330 0CF8  
                                 u2250 0B5E                                   u4010 0672  
                                 u2091 1CD2                                   u2171 1BC6  
                                 u2411 0E10                                   u2331 0CF4  
                                 u2251 0B5A                                   u4011 066E  
                                 u2180 1C26                                   u2420 0E42  
                                 u2340 0D18                                   u2260 0B9E  
                                 u2500 0776                                   u4020 0682  
                                 u2181 1C22                                   u2421 0E3E  
                                 u2341 0D14                                   u2261 0B9A  
                                 u2501 0772                                   u4021 067E  
                                 u2190 1C50                                   u3310 12D6  
                                 u2350 0D2A                                   u2270 0BDE  
                                 u2510 08F0                                   u2430 06AC  
                                 u4030 1230                                   u2191 1C4C  
                                 u3311 12D2                                   u2351 0D26  
                                 u2271 0BDA                                   u2431 06A8  
                                 u4031 122C                                   u1800 1DC2  
                                 u3320 1300                                   u2360 0D58  
                                 u2280 0C54                                   u2600 0A64  
                                 u2520 094A                                   u2440 06BE  
                                 u4040 125C                                   u1801 1DBE  
                                 u3321 12FC                                   u2361 0D54  
                                 u2281 0C50                                   u2601 0A60  
                                 u2521 0946                                   u2441 06BA  
                                 u4041 1258                                   u1810 1DDE  
                                 u3330 132A                                   u2370 0D6E  
                                 u2290 0C76                                   u2610 0A9E  
                                 u2530 096A                                   u2450 06CE  
                                 u4050 128A                                   _T2PR 000FBC  
                                 u1811 1DDA                                   u4107 1A42  
                                 u3331 1326                                   u2371 0D6A  
                                 u2291 0C72                                   u2611 0A9A  
                                 u2531 0966                                   u2515 08E6  
                                 u2451 06CA                                   u4051 1286  
                                 u1820 1026                                   u1900 163E  
                                 u3340 1354                                   u2380 0D82  
                                 u2540 097C                                   u2460 070E  
                                 u3500 147A                                   u2700 0E76  
                                 u1821 1022                                   u1901 163A  
                                 u4117 1AC8                                   u3341 1350  
                                 u2381 0D7E                                   u2541 0978  
                                 u2461 070A                                   u3501 1476  
                                 u2701 0E72                                   u1830 10F0  
                                 u1910 1666                                   u3350 137E  
                                 u2390 0D9C                                   u2550 09AA  
                                 u2470 0720                                   u3510 14A2  
                                 u2710 0ED2                                   u1831 10EC  
                                 u4207 186C                                   u1911 1662  
                                 u4127 1B4E                                   u3351 137A  
                                 u2391 0D98                                   u2551 09A6  
                                 u2471 071C                                   u3511 149E  
                                 u2711 0ECE                                   u3360 13A8  
                                 u1920 2224                                   u2560 09C0  
                                 u2480 0730                                   u3520 14C2  
                                 u2720 0F28                                   u3600 03AA  
                                 u3280 172C                                   u4217 216E  
                                 u4137 1BD4                                   u3361 13A4  
                                 u1921 221C                                   u2561 09BC  
                                 u2481 072C                                   u3521 14BE  
                                 u2721 0F24                                   u3601 03A6  
                                 u3281 1728                                   u1770 22E4  
                                 u3370 13D2                                   u2570 09D4  
                                 u2490 0766                                   u3530 14D2  
                                 u2730 0F72                                   u3610 03C2  
                                 u3290 1754                                   u1771 22E0  
                                 u4147 1C5A                                   u3371 13CE  
                                 u2571 09D0                                   u2491 0762  
                                 u3531 14CE                                   u2731 0F6E  
                                 u3611 03BE                                   u3291 1750  
                                 u4067 1296                                   u1780 22FA  
                                 u1940 1802                                   u1860 18B4  
                                 u2580 09EE                                   u2740 0F90  
                                 u3700 045A                                   u3620 03D2  
                                 u3540 0330                                   u1781 22F6  
                                 u1941 17FE                                   u1861 18B0  
                                 u4157 1CE0                                   u2581 09EA  
                                 u2741 0F8C                                   u3701 0456  
                                 u3621 03CE                                   u3541 032C  
                                 u4077 1796                                   u1790 1DA4  
                                 u1950 182A                                   u1870 18D8  
                                 u2590 0A36                                   u3470 1402  
                                 u2750 0FA0                                   u3710 046A  
                                 u3630 03E2                                   u3550 035A  
                                 u1791 1DA0                                   u1951 1826  
                                 u1871 18D4                                   u4167 15D2  
                                 u2591 0A32                                   u3471 13FE  
                                 u2751 0F9C                                   u3711 0466  
                                 u3631 03DE                                   u3551 0356  
                                 u4087 033C                                   u1880 1550  
                                 u1960 1F98                                   u3480 1438  
                                 u2760 0FAE                                   u3800 050A  
                                 u3720 047A                                   u3640 03F2  
                                 u3560 036A                                   u4177 1D66  
                                 u1881 154C                                   u1961 1F94  
                                 u4097 228A                                   u2761 0FAA  
                                 u3801 0506                                   u3721 0476  
                                 u3641 03EE                                   u3561 0366  
                                 u1890 1578                                   u1970 1FC2  
                                 u1938 2226                                   u3490 1466  
                                 u2770 0FE8                                   u2690 0E68  
                                 u3810 051A                                   u3730 0492  
                                 u3650 0402                                   u3570 037A  
                                 u4187 16C0                                   u1891 1574  
                                 u1971 1FBE                                   u3491 1462  
                                 u2771 0FE4                                   u2691 0E64  
                                 u3811 0516                                   u3731 048E  
                                 u3651 03FE                                   u3571 0376  
                                 u1980 1E8A                                   u2780 0FF6  
                                 u3900 05B2                                   u3820 052A  
                                 u3740 04A2                                   u3660 0412  
                                 u3580 038A                                   u4197 1946  
                                 u1981 1E86                                   u3485 142C  
                                 u2781 0FF2                                   u3901 05AE  
                                 u3821 0526                                   u3741 049E  
                                 u3661 040E                                   u3581 0386  
                                 u1990 1EB4                                   u3910 05CA  
                                 u3830 053A                                   u3750 04B2  
                                 u3670 042A                                   u3590 039A  
                                 u1991 1EB0                                   u3911 05C6  
                                 u3831 0536                                   u3751 04AE  
                                 u3671 0426                                   u3591 0396  
                                 u3920 05DA                                   u3840 054A  
                                 u3760 04C2                                   u3680 043A  
                                 u3921 05D6                                   u3841 0546  
                                 u3761 04BE                                   u3681 0436  
                                 u3930 05EA                                   u3850 0562  
                                 u3770 04D2                                   u3690 044A  
                                 u3931 05E6                                   u3851 055E  
                                 u3771 04CE                                   u3691 0446  
                                 u3940 05FA                                   u3860 0572  
                                 u3780 04E2                                   u3941 05F6  
                                 u3861 056E                                   u3781 04DE  
                                 u3950 060A                                   u3870 0582  
                                 u3790 04FA                                   u3951 0606  
                                 u3871 057E                                   u3791 04F6  
                                 i2l24 23F0                                   u3960 061A  
                                 u3880 0592                                   u3961 0616  
                                 u3881 058E                                   u3970 0632  
                                 u3890 05A2                                   u3971 062E  
                                 u3891 059E                                   u3980 0642  
                                 u3981 063E                                   u3990 0652  
                                 u3991 064E                                   i2l91 2322  
                                 i2l94 247A                                   i2l88 22FC  
                                 _main 1176                     _YellowInstructions 19E0  
                                 fsr2h 000FDA                                   indf2 000FDF  
                                 fsr2l 000FD9                                   btemp 0057  
                                 _stop 187C         ??i2_init_colorclick_interrupts 0005  
                    main@initial_color 00CC                                   prodh 000FF4  
                                 prodl 000FF3                                   start 0058  
                 ?i2_color_writetoaddr 0003                        ___fldiv@new_exp 0028  
               __end_of_color_read_Red 206E                        __end_of_HighISR 2392  
                         ___param_bank 000000                            _turnLeft135 1F10  
                  ?_YellowInstructions 0027                            _turnRight90 1E5C  
                     __end_of_LED_init 2432                          ___fltol@sign1 004D  
                                ?_main 0001                        __end_of___fldiv 0E56  
                      __end_of___flmul 0ABC                        __end_of___fltol 14F4  
                                ?_stop 001C                        __end_of___lwdiv 1DFE  
                                i1l321 0048                                  i2l100 2470  
                                i2l103 2448                                  i2l310 21F8  
                                i2l313 2424                                  i2l329 238E  
                                _TMR0H 000FD4                                  _TMR0L 000FD3  
           __end_of_I2C_2_Master_Start 2468                   ??_YellowInstructions 002B  
           __end_of_I2C_2_Master_Write 243E                       _PinkInstructions 1AEC  
                   _int_threshold_high 0055                                  main@b 00CA  
             __end_of_BlueInstructions 1D8A                                  tablat 000FF5  
                                plusw2 000FDB                        __end_of_turn180 201E  
                                ttemp5 0058                                  ttemp6 005B  
                                ttemp7 005F                                  status 000FD8  
                                wtemp8 0058                    detect_color@tempval 00B6  
                ??i2_color_writetoaddr 0004                __end_of_color_read_Blue 215E  
                _I2C_2_Master_RepStart 244A                   fullSpeedBackwards@mL 001C  
                 fullSpeedBackwards@mR 001E                        ?_color_read_Red 000D  
                      __initialization 223C                           __end_of_main 12C4  
                 __end_of_detect_color 0692                           __end_of_stop 1950  
                _LightBlueInstructions 1BF8                      ??_RedInstructions 002B  
  __end_of_interrupts_clear_colorclick 240C         ?i2_interrupts_clear_colorclick 0001  
          _interrupts_clear_colorclick 23F2                                 ??_main 00C8  
                               ??_stop 0020                          __activetblptr 000000  
                         _turnRight135 1EB6                           ?_setMotorPWM 0016  
                               _CCPR1H 000FAA                                 _CCPR2H 000FA6  
                               _CCPR3H 000F25                                 _CCPR4H 000F21  
                               _RC0PPS 000E62                                 _RC4REG 000EE3  
                               _RE2PPS 000E74                                 _RD5PPS 000E6F  
                               _RC7PPS 000E69                                 i1l3511 0026  
                               i1l3513 0036                                 i1l3515 0044  
                               _RE4PPS 000E76                                 _RD6PPS 000E70  
                               i2l3251 21DA                                 i2l3243 21AC  
                               i2l3253 21E4                                 i2l3245 21B6  
                               i2l2527 22FC                                 i2l3255 21EE  
                               i2l3247 21C6                                 i2l2529 230C  
                               i2l3249 21D0                                 i2l3521 2386  
                               i2l3523 238A                                 i2l3509 240C  
                               i2l3517 2370                                 i2l2591 2468  
                               i2l2719 23D4                                 i2l3519 2380  
                               i2l2593 246C                                 i2l2587 2472  
                               i2l2595 2440                                 i2l2589 2476  
                               i2l2597 2444                                 _RG6PPS 000E88  
                            ??_HighISR 0006               __end_of_color_click_init 22AA  
                               _RX4PPS 000E15                                 _TX4REG 000EE4  
                     __end_of___xxtofl 100A                                 _LowISR 0018  
                        ??_Timer0_init 0009                           _CCPTMRS0bits 000FAD  
                               ___wmul 2324                              ??___fldiv 001F  
                            ??___flmul 0038                              ??___fltol 00B2  
                            ??___lwdiv 0013                                 clear_0 225A  
                               isa$std 000001                           __pdataCOMRAM 0055  
                           _WhiteLight 247C                                 tblptrh 000FF7  
                               tblptrl 000FF6                                 tblptru 000FF8  
                            ??_turn180 0026                                 stop@mL 001C  
                               stop@mR 001E                      ??_initDCmotorsPWM 000B  
           i2color_writetoaddr@address 0004                       __end_of_turnLeft 15E2  
                         ___xxtofl@arg 0013                           ___xxtofl@exp 0012  
                         ___xxtofl@val 0009                          ??_Update_RGBC 0016  
                           __accesstop 0060                __end_of__initialization 226C  
             __end_of_color_read_Clear 210E               __end_of_color_read_Green 20BE  
               ?_I2C_2_Master_RepStart 0001                          ___rparam_used 000001  
                            ?_LED_init 0001                             ___fltol@f1 0049  
                     ?_color_read_Blue 000D                      _GreenInstructions 1C7E  
                      _Interrupts_init 234A                         __pcstackCOMRAM 0001  
               ?_LightBlueInstructions 0027                     ?_GreenInstructions 0027  
                    detect_color@color 00C4                    __end_of_Timer0_init 23B2  
                          MoveBuggy@mL 002E                            MoveBuggy@mR 0030  
                  OrangeInstructions@a 002D                    ??_GreenInstructions 002B  
              MoveBuggy@color_detected 0032           ??_init_colorclick_interrupts 000D  
                    __end_of_MoveBuggy 13EC                             __pbssBANK0 0060  
            __end_of_GreenInstructions 1D04                             ??_LED_init 0009  
                              ?_LowISR 0001                      _color_writetoaddr 23B2  
                         _T2CLKCONbits 000FBF                           ?_turnLeft135 0022  
                  __end_of_Update_RGBC 1E5C                     ?_color_writetoaddr 000B  
                              ?___wmul 0009               __end_of_PinkInstructions 1B72  
                         ?_turnRight90 0022                    ??_color_writetoaddr 000C  
                              _INT1PPS 000DF1                              ?___xxtofl 0009  
                          ?_WhiteLight 0001                                _SP4BRGH 000EE6  
                              _SP4BRGL 000EE5                                _SSP2ADD 000ED6  
                              _SSP2BUF 000ED5                             _color_flag 00B1  
                         _detect_color 005C                __end_of_Interrupts_init 2370  
                    ?_BlueInstructions 0027                 color_writetoaddr@value 000B  
                     ??_color_read_Red 000F                                _HighISR 0008  
            __end_of_color_writetoaddr 23D2                     ??_BlueInstructions 002B  
                      _RedInstructions 1A66                     _I2C_2_Master_Start 245E  
                  i2_I2C_2_Master_Idle 22FC                     _I2C_2_Master_Write 2432  
                              __Hparam 0000                    i2_I2C_2_Master_Stop 2468  
                              __Lparam 0000                      color_read_Red@tmp 0012  
                          _Timer0_init 2392                    GreenInstructions@mL 0027  
                  GreenInstructions@mR 0029             __end_of_fullSpeedBackwards 187C  
                              ___fldiv 0ABC                                ___flmul 0692  
                              ___fltol 13EC                    ?_I2C_2_Master_Start 0001  
                         turnLeft135@a 0026                                ___lwdiv 1D8A  
                  ?_I2C_2_Master_Write 0001                           turnLeft90@mL 0022  
                         turnLeft90@mR 0024                                __pcinit 223C  
                              __ramtop 0E00                              ?_turnLeft 001C  
                              __ptext0 1176                                __ptext1 1950  
                              __ptext2 16D0                                __ptext3 005C  
                              __ptext4 0E56                                __ptext5 13EC  
                              __ptext6 0692                                __ptext7 0ABC  
                              __ptext8 2276                                __ptext9 22AA  
                 ?i2_I2C_2_Master_Idle 0001   __end_ofi2_init_colorclick_interrupts 21FA  
         i2_init_colorclick_interrupts 21AC                              _T2CONbits 000FBD  
                           ??___xxtofl 000D                   ?i2_I2C_2_Master_Stop 0001  
                            _T2HLTbits 000FBE                          _RxBufWriteCnt 0054  
                              _turn180 1FC4                                _tmr_ovf 00B0  
                 ??_I2C_2_Master_Start 000A                   ??_I2C_2_Master_Write 000A  
                       __pintcode_body 2370                   end_of_initialization 226C  
          __end_ofi2_color_writetoaddr 23F2                      RedInstructions@mL 0027  
                   main@color_detected 00CB                      RedInstructions@mR 0029  
                              int_func 2370                            _Update_RGBC 1DFE  
                    ?_color_click_init 0001                           turnRight90@a 0026  
           __end_of_OrangeInstructions 1BF8                     ??_color_click_init 000D  
                              postdec2 000FDD                                postinc0 000FEE  
                              postinc2 000FDE                        _initDCmotorsPWM 1950  
                           ??_turnLeft 0020                     setMotorPWM@negDuty 001B  
                ??i2_I2C_2_Master_Idle 0001                      __end_of_turnRight 16D0  
                ??i2_I2C_2_Master_Stop 0002                          ___xxtofl@sign 0011  
                  YellowInstructions@a 002D                              _TRISAbits 000F81  
                   setMotorPWM@posDuty 001A                              _TRISBbits 000F82  
                            _TRISCbits 000F83                              _TRISDbits 000F84  
   __end_of_init_colorclick_interrupts 21AC          ?i2_init_colorclick_interrupts 0001  
           _init_colorclick_interrupts 215E                              _TRISEbits 000F85  
                            _TRISFbits 000F86                              _TRISGbits 000F87  
                            _TRISHbits 000F88                            ___fldiv@grs 002A  
                          ___fldiv@rem 0023                     PinkInstructions@mL 0027  
                   PinkInstructions@mR 0029                       fullSpeedAhead@mL 001C  
                     fullSpeedAhead@mR 001E                __end_of_RedInstructions 1AEC  
             color_writetoaddr@address 000C                ??_I2C_2_Master_RepStart 000A  
                     ?_Interrupts_init 0001                            ___flmul@grs 003D  
                          _CCP1CONbits 000FAB                      ?_color_read_Clear 000D  
                         _EUSART4RXbuf 009C                           _EUSART4TXbuf 0060  
                          _CCP2CONbits 000FA7                      ?_color_read_Green 000D  
                          _CCP3CONbits 000F26                            _CCP4CONbits 000F22  
              ??_LightBlueInstructions 002B                             main@motorL 00D4  
                           main@motorR 00DD                     ??_color_read_Clear 000F  
                   ??_color_read_Green 000F                             _turnLeft90 1F6A  
                       __end_of_LowISR 0058                         _fullSpeedAhead 16D0  
                       __end_of___wmul 234A                          __pidataCOMRAM 2484  
                   detect_color@dist_B 00C7                     detect_color@dist_G 00C6  
                   detect_color@dist_R 00C5                      _int_threshold_low 004F  
                  color_read_Clear@tmp 0012                    start_initialization 223C  
                        _TxBufWriteCnt 0052                   OrangeInstructions@mL 0027  
                 OrangeInstructions@mR 0029                              _MoveBuggy 12C4  
                  color_read_Green@tmp 0012                               ??_LowISR 0006  
              __end_of_initDCmotorsPWM 19E0                 __end_of_fullSpeedAhead 17A6  
                             ??___wmul 000D          i2I2C_2_Master_Write@data_byte 0002  
                    ?_PinkInstructions 0027                     Update_RGBC@tempval 0014  
                   ??_PinkInstructions 002B           __end_ofi2_I2C_2_Master_Start 247C  
         __end_ofi2_I2C_2_Master_Write 244A                              ___fldiv@a 001B  
                            ___fldiv@b 0017                              ___flmul@a 0034  
                            ___flmul@b 0030                            __pbssCOMRAM 004F  
                         ??_WhiteLight 0009                          __pcstackBANK0 00B2  
                     ?_RedInstructions 0027                               ?_HighISR 0001  
                           ?_MoveBuggy 002E                       ___lwdiv@dividend 000F  
                         ?_Timer0_init 0001                            ?_turnLeft90 0022  
                      ?_fullSpeedAhead 001C                     BlueInstructions@mL 0027  
                   BlueInstructions@mR 0029                              __pintcode 0008  
                   __end_of_WhiteLight 2484                               ?___fldiv 0017  
                             ?___flmul 0030                               ?___fltol 0049  
                             ?___lwdiv 000F                            __pintcodelo 0018  
         ?_interrupts_clear_colorclick 0001                   I2C_2_Master_Read@ack 000B  
                 I2C_2_Master_Read@tmp 000C                          ?_turnRight135 0022  
                    _I2C_2_Master_Idle 22D4                     _fullSpeedBackwards 17A6  
                    _I2C_2_Master_Init 22AA                      _I2C_2_Master_Read 21FA  
                    _I2C_2_Master_Stop 2454                           _RxBufReadCnt 0053  
                   GreenInstructions@a 002D                     ?_I2C_2_Master_Idle 0001  
                   ?_I2C_2_Master_Init 0001                     ?_I2C_2_Master_Read 0001  
                        ??_setMotorPWM 0018                               ?_turn180 0022  
                   ?_I2C_2_Master_Stop 0001                       ___lwdiv@quotient 0013  
                          turnLeft90@a 0026               initDCmotorsPWM@PWMperiod 0009  
              LightBlueInstructions@mL 0027                LightBlueInstructions@mR 0029  
                  ?_fullSpeedBackwards 001C                    ??_I2C_2_Master_Idle 0009  
                  ??_I2C_2_Master_Init 0009                           ?_Update_RGBC 0014  
                  ??_I2C_2_Master_Read 000A                         ___wmul@product 000D  
                             _LATAbits 000F79                    ??_I2C_2_Master_Stop 000A  
                             _LATCbits 000F7B                               _LATEbits 000F7D  
                             _LATFbits 000F7E                               _LATGbits 000F7F  
                             _LATHbits 000F80                               _IPR0bits 000E1F  
                             _PIE0bits 000E29                               _LED_init 2426  
                     RedInstructions@a 002D                               _PIE4bits 000E2D  
                             i1u338_20 0036                               i1u338_21 0032  
                          turnRight@mL 001C                            turnRight@mR 001E  
                             i2u422_47 21BC                               _PIR0bits 000E33  
                             i2u184_40 230C                               i2u184_41 2308  
                             i2u185_40 2322                               i2u185_41 231E  
                             i2u339_40 2380                               i2u339_41 237C  
                             _PIR4bits 000E37                       ?_initDCmotorsPWM 0009  
                             _SSP2CON2 000EDA                               _SSP2STAT 000ED8  
                 ??_fullSpeedBackwards 0020                     _OrangeInstructions 1B72  
                    PinkInstructions@a 002D              __end_of_I2C_2_Master_Idle 22FC  
            __end_of_I2C_2_Master_Init 22D4              __end_of_I2C_2_Master_Read 223C  
                    ___wmul@multiplier 0009                         ??_turnRight135 0026  
            __end_of_I2C_2_Master_Stop 245E                           setMotorPWM@m 0016  
          I2C_2_Master_Write@data_byte 000A          ??_interrupts_clear_colorclick 000E  
           __end_of_YellowInstructions 1A66                      ??_color_read_Blue 000F  
                  ?_OrangeInstructions 0027                           _TxBufReadCnt 0051  
          ?_init_colorclick_interrupts 0001               i2color_writetoaddr@value 0003  
                            _turnRight 15E2          __end_of_I2C_2_Master_RepStart 2454  
                   color_read_Blue@tmp 0012                    __end_of_setMotorPWM 1176  
                          ??_MoveBuggy 0032                   i2_I2C_2_Master_Start 2472  
                 i2_I2C_2_Master_Write 243E                               __Hrparam 0000  
                 ??_OrangeInstructions 002B                               __Lrparam 0000  
        __end_of_LightBlueInstructions 1C7E            __end_ofi2_I2C_2_Master_Idle 2324  
          __end_ofi2_I2C_2_Master_Stop 2472                         turnRight135@mL 0022  
                       turnRight135@mR 0024                          turnLeft135@mL 0022  
                        turnLeft135@mR 0024                             _ANSELBbits 000E9A  
                           _ANSELDbits 000EA7                               ___xxtofl 0E56  
                           _T0CON0bits 000FD5                             _T0CON1bits 000FD6  
                      ___lwdiv@divisor 0011                      BlueInstructions@a 002D  
                      ___lwdiv@counter 0015                             ?_turnRight 001C  
                             __ptext10 247C                               __ptext11 1DFE  
                             __ptext20 19E0                               __ptext12 201E  
                             __ptext21 1A66                               __ptext13 206E  
                             __ptext30 14F4                               __ptext22 1E5C  
                             __ptext14 20BE                               __ptext31 1D04  
                             __ptext23 1AEC                               __ptext15 210E  
                             __ptext40 234A                               __ptext32 1FC4  
                             __ptext24 1B72                               __ptext16 244A  
                             __ptext41 23F2                               __ptext33 15E2  
                             __ptext25 1EB6                               __ptext17 21FA  
                             __ptext50 240C                               __ptext42 215E  
                             __ptext34 187C                               __ptext26 1BF8  
                             __ptext18 2392                               __ptext51 21AC  
                             __ptext43 23B2                               __ptext35 17A6  
                             __ptext27 1F10                               __ptext19 12C4  
                             __ptext52 23D2                               __ptext44 2432  
                             __ptext36 100A                               __ptext28 1C7E  
                             __ptext53 243E                               __ptext45 2454  
                             __ptext37 2324                               __ptext29 1F6A  
                             __ptext54 2468                               __ptext46 245E  
                             __ptext38 1D8A                               __ptext55 2472  
                             __ptext47 22D4                               __ptext39 2426  
                             __ptext56 22FC                           _SSP2CON1bits 000ED9  
                         _SSP2CON2bits 000EDA        ??i2_interrupts_clear_colorclick 0006  
               LightBlueInstructions@a 002D                             turnLeft@mL 001C  
                           turnLeft@mR 001E                  ?i2_I2C_2_Master_Start 0001  
                ?i2_I2C_2_Master_Write 0001                          ??_turnLeft135 0026  
                             isa$xinst 000000                             _RC4STAbits 000EE7  
                             int$flags 0057                          ??_turnRight90 0026  
                     _BlueInstructions 1D04                               _turnLeft 14F4  
                            turn180@mL 0022                              turn180@mR 0024  
                           _INTCONbits 000FF2                            _setMotorPWM 100A  
                        ?_detect_color 00B6                          turnRight135@a 0026  
                             intlevel1 0000                               intlevel2 0000  
                        turnRight90@mL 0022                          turnRight90@mR 0024  
                     ??_fullSpeedAhead 0020                   __end_of_turnRight135 1F10  
                         ??_turnLeft90 0026                               turn180@a 0026  
                     _color_click_init 2276                    __end_of_turnLeft135 1F6A  
                           _SSP2DATPPS 000E1D                             _SSP2CLKPPS 000E1C  
                  __end_of_turnRight90 1EB6                         ??_detect_color 00B8  
                          ??_turnRight 0020                     __end_of_turnLeft90 1FC4  
                           _TX4STAbits 000EE8                 ??i2_I2C_2_Master_Start 0002  
               ??i2_I2C_2_Master_Write 0002                   YellowInstructions@mL 0027  
                 YellowInstructions@mR 0029  __end_ofi2_interrupts_clear_colorclick 2426  
        i2_interrupts_clear_colorclick 240C  
