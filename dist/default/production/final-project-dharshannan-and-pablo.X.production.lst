

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Mar 13 20:49:36 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    68                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    69                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    78                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    79                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    80                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    81                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    82   000000                     
    83                           ; Generated 06/04/2022 GMT
    84                           ; 
    85                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    86                           ; All rights reserved.
    87                           ; 
    88                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    89                           ; 
    90                           ; Redistribution and use in source and binary forms, with or without modification, are
    91                           ; permitted provided that the following conditions are met:
    92                           ; 
    93                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    94                           ;        conditions and the following disclaimer.
    95                           ; 
    96                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    97                           ;        of conditions and the following disclaimer in the documentation and/or other
    98                           ;        materials provided with the distribution. Publication is not required when
    99                           ;        this file is used in an embedded application.
   100                           ; 
   101                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   102                           ;        software without specific prior written permission.
   103                           ; 
   104                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   105                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   106                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   107                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   108                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   109                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   110                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   111                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   112                           ; 
   113                           ; 
   114                           ; Code-generator required, PIC18F67K40 Definitions
   115                           ; 
   116                           ; SFR Addresses
   117   000000                     
   118                           	psect	idataBANK0
   119   002B58                     __pidataBANK0:
   120                           	callstack 0
   121                           
   122                           ;initializer for _int_threshold_high
   123   002B58  0B54               	dw	2900
   124   000000                     _T0CON0bits	set	4053
   125   000000                     _T0CON1bits	set	4054
   126   000000                     _TX4REG	set	3812
   127   000000                     _RC4STAbits	set	3815
   128   000000                     _SP4BRGH	set	3814
   129   000000                     _TRISBbits	set	3970
   130   000000                     _TRISCbits	set	3971
   131   000000                     _TRISEbits	set	3973
   132   000000                     _LATEbits	set	3965
   133   000000                     _LATFbits	set	3966
   134   000000                     _LATGbits	set	3967
   135   000000                     _TRISFbits	set	3974
   136   000000                     _TRISGbits	set	3975
   137   000000                     _SSP2CON2bits	set	3802
   138   000000                     _RX4PPS	set	3605
   139   000000                     _SSP2CLKPPS	set	3612
   140   000000                     _SSP2DATPPS	set	3613
   141   000000                     _ANSELDbits	set	3751
   142   000000                     _SSP2ADD	set	3798
   143   000000                     _SSP2CON1bits	set	3801
   144   000000                     _RC4REG	set	3811
   145   000000                     _SP4BRGL	set	3813
   146   000000                     _TX4STAbits	set	3816
   147   000000                     _BAUD4CONbits	set	3817
   148   000000                     _LATAbits	set	3961
   149   000000                     _LATDbits	set	3964
   150   000000                     _LATHbits	set	3968
   151   000000                     _TRISAbits	set	3969
   152   000000                     _SSP2CON2	set	3802
   153   000000                     _TRISDbits	set	3972
   154   000000                     _CCPR4H	set	3873
   155   000000                     _CCPR3H	set	3877
   156   000000                     _SSP2STAT	set	3800
   157   000000                     _ANSELFbits	set	3764
   158   000000                     _SSP2BUF	set	3797
   159   000000                     _IPR0bits	set	3615
   160   000000                     _PIE0bits	set	3625
   161   000000                     _RC7PPS	set	3689
   162   000000                     _RD5PPS	set	3695
   163   000000                     _RE2PPS	set	3700
   164   000000                     _RD6PPS	set	3696
   165   000000                     _PORTFbits	set	3982
   166   000000                     _T2PR	set	4028
   167   000000                     _T2CONbits	set	4029
   168   000000                     _TRISHbits	set	3976
   169   000000                     _CCPR2H	set	4006
   170   000000                     _CCPR1H	set	4010
   171   000000                     _LATCbits	set	3963
   172   000000                     _RE4PPS	set	3702
   173   000000                     _RG6PPS	set	3720
   174   000000                     _ANSELBbits	set	3738
   175   000000                     _TMR0L	set	4051
   176   000000                     _TMR0H	set	4052
   177   000000                     _INTCONbits	set	4082
   178   000000                     _T2CLKCONbits	set	4031
   179   000000                     _T2HLTbits	set	4030
   180   000000                     _CCP1CONbits	set	4011
   181   000000                     _CCPTMRS0bits	set	4013
   182   000000                     _CCP2CONbits	set	4007
   183   000000                     _CCP3CONbits	set	3878
   184   000000                     _CCP4CONbits	set	3874
   185   000000                     _PIE4bits	set	3629
   186   000000                     _PIR0bits	set	3635
   187   000000                     _PIR4bits	set	3639
   188   000000                     _RC0PPS	set	3682
   189                           
   190                           ; #config settings
   191                           
   192                           	psect	cinit
   193   00280C                     __pcinit:
   194                           	callstack 0
   195   00280C                     start_initialization:
   196                           	callstack 0
   197   00280C                     __initialization:
   198                           	callstack 0
   199                           
   200                           ; Initialize objects allocated to BANK0 (2 bytes)
   201                           ; load TBLPTR registers with __pidataBANK0
   202   00280C  0E58               	movlw	low __pidataBANK0
   203   00280E  6EF6               	movwf	tblptrl,c
   204   002810  0E2B               	movlw	high __pidataBANK0
   205   002812  6EF7               	movwf	tblptrh,c
   206   002814  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   207   002816  6EF8               	movwf	tblptru,c
   208   002818  0009               	tblrd		*+	;fetch initializer
   209   00281A  CFF5 F0D5          	movff	tablat,__pdataBANK0
   210   00281E  0009               	tblrd		*+	;fetch initializer
   211   002820  CFF5 F0D6          	movff	tablat,__pdataBANK0+1
   212                           
   213                           ; Clear objects allocated to BANK1 (140 bytes)
   214   002824  EE01  F000         	lfsr	0,__pbssBANK1
   215   002828  0E8C               	movlw	140
   216   00282A                     clear_0:
   217   00282A  6AEE               	clrf	postinc0,c
   218   00282C  06E8               	decf	wreg,f,c
   219   00282E  E1FD               	bnz	clear_0
   220                           
   221                           ; Clear objects allocated to BANK0 (63 bytes)
   222   002830  EE00  F060         	lfsr	0,__pbssBANK0
   223   002834  0E3F               	movlw	63
   224   002836                     clear_1:
   225   002836  6AEE               	clrf	postinc0,c
   226   002838  06E8               	decf	wreg,f,c
   227   00283A  E1FD               	bnz	clear_1
   228                           
   229                           ; Clear objects allocated to COMRAM (8 bytes)
   230   00283C  EE00  F04F         	lfsr	0,__pbssCOMRAM
   231   002840  0E08               	movlw	8
   232   002842                     clear_2:
   233   002842  6AEE               	clrf	postinc0,c
   234   002844  06E8               	decf	wreg,f,c
   235   002846  E1FD               	bnz	clear_2
   236   002848                     end_of_initialization:
   237                           	callstack 0
   238   002848                     __end_of__initialization:
   239                           	callstack 0
   240   002848  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   241   00284A  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   242   00284C  0100               	movlb	0
   243   00284E  EF20  F007         	goto	_main	;jump to C main() function
   244                           
   245                           	psect	bssCOMRAM
   246   00004F                     __pbssCOMRAM:
   247                           	callstack 0
   248   00004F                     _int_threshold_low:
   249                           	callstack 0
   250   00004F                     	ds	2
   251   000051                     _TxBufReadCnt:
   252                           	callstack 0
   253   000051                     	ds	1
   254   000052                     _TxBufWriteCnt:
   255                           	callstack 0
   256   000052                     	ds	1
   257   000053                     _RxBufReadCnt:
   258                           	callstack 0
   259   000053                     	ds	1
   260   000054                     _RxBufWriteCnt:
   261                           	callstack 0
   262   000054                     	ds	1
   263   000055                     _time_index:
   264                           	callstack 0
   265   000055                     	ds	1
   266   000056                     _moves_index:
   267                           	callstack 0
   268   000056                     	ds	1
   269                           
   270                           	psect	bssBANK0
   271   000060                     __pbssBANK0:
   272                           	callstack 0
   273   000060                     _EUSART4RXbuf:
   274                           	callstack 0
   275   000060                     	ds	20
   276   000074                     _lost_flag:
   277                           	callstack 0
   278   000074                     	ds	1
   279   000075                     _tmr_ovf:
   280                           	callstack 0
   281   000075                     	ds	1
   282   000076                     _color_flag:
   283                           	callstack 0
   284   000076                     	ds	1
   285   000077                     _anti_moves_array:
   286                           	callstack 0
   287   000077                     	ds	40
   288                           
   289                           	psect	dataBANK0
   290   0000D5                     __pdataBANK0:
   291                           	callstack 0
   292   0000D5                     _int_threshold_high:
   293                           	callstack 0
   294   0000D5                     	ds	2
   295                           
   296                           	psect	bssBANK1
   297   000100                     __pbssBANK1:
   298                           	callstack 0
   299   000100                     _EUSART4TXbuf:
   300                           	callstack 0
   301   000100                     	ds	60
   302   00013C                     _time_array:
   303                           	callstack 0
   304   00013C                     	ds	80
   305                           
   306                           	psect	cstackBANK0
   307   00009F                     __pcstackBANK0:
   308                           	callstack 0
   309   00009F                     ??___fltol:
   310                           
   311                           ; 1 bytes @ 0x0
   312   00009F                     	ds	4
   313   0000A3                     detect_color@tempval:
   314                           	callstack 0
   315                           
   316                           ; 2 bytes @ 0x4
   317   0000A3                     	ds	2
   318   0000A5                     ??_detect_color:
   319                           
   320                           ; 1 bytes @ 0x6
   321   0000A5                     	ds	12
   322   0000B1                     detect_color@color:
   323                           	callstack 0
   324                           
   325                           ; 1 bytes @ 0x12
   326   0000B1                     	ds	1
   327   0000B2                     detect_color@dist_R:
   328                           	callstack 0
   329                           
   330                           ; 1 bytes @ 0x13
   331   0000B2                     	ds	1
   332   0000B3                     detect_color@dist_G:
   333                           	callstack 0
   334                           
   335                           ; 1 bytes @ 0x14
   336   0000B3                     	ds	1
   337   0000B4                     detect_color@dist_B:
   338                           	callstack 0
   339                           
   340                           ; 1 bytes @ 0x15
   341   0000B4                     	ds	1
   342   0000B5                     ??_main:
   343                           
   344                           ; 1 bytes @ 0x16
   345   0000B5                     	ds	2
   346   0000B7                     main@lost_timer:
   347                           	callstack 0
   348                           
   349                           ; 1 bytes @ 0x18
   350   0000B7                     	ds	1
   351   0000B8                     main@b:
   352                           	callstack 0
   353                           
   354                           ; 2 bytes @ 0x19
   355   0000B8                     	ds	2
   356   0000BA                     main@color_detected:
   357                           	callstack 0
   358                           
   359                           ; 1 bytes @ 0x1B
   360   0000BA                     	ds	1
   361   0000BB                     main@initial_color:
   362                           	callstack 0
   363                           
   364                           ; 8 bytes @ 0x1C
   365   0000BB                     	ds	8
   366   0000C3                     main@motorL:
   367                           	callstack 0
   368                           
   369                           ; 9 bytes @ 0x24
   370   0000C3                     	ds	9
   371   0000CC                     main@motorR:
   372                           	callstack 0
   373                           
   374                           ; 9 bytes @ 0x2D
   375   0000CC                     	ds	9
   376                           
   377                           	psect	cstackCOMRAM
   378   000001                     __pcstackCOMRAM:
   379                           	callstack 0
   380   000001                     ??i2_I2C_2_Master_Idle:
   381   000001                     
   382                           ; 1 bytes @ 0x0
   383   000001                     	ds	1
   384   000002                     i2I2C_2_Master_Write@data_byte:
   385                           	callstack 0
   386                           
   387                           ; 1 bytes @ 0x1
   388   000002                     	ds	1
   389   000003                     i2color_writetoaddr@value:
   390                           	callstack 0
   391                           
   392                           ; 1 bytes @ 0x2
   393   000003                     	ds	1
   394   000004                     i2color_writetoaddr@address:
   395                           	callstack 0
   396                           
   397                           ; 1 bytes @ 0x3
   398   000004                     	ds	1
   399   000005                     ??i2_init_colorclick_interrupts:
   400                           
   401                           ; 1 bytes @ 0x4
   402   000005                     	ds	1
   403   000006                     ??_LowISR:
   404   000006                     
   405                           ; 1 bytes @ 0x5
   406   000006                     	ds	3
   407   000009                     ??_I2C_2_Master_Idle:
   408   000009                     ?_Return_Time:
   409                           	callstack 0
   410   000009                     ?___wmul:
   411                           	callstack 0
   412   000009                     ?___xxtofl:
   413                           	callstack 0
   414   000009                     initDCmotorsPWM@PWMperiod:
   415                           	callstack 0
   416   000009                     AppendMoves@moves_index:
   417                           	callstack 0
   418   000009                     AppendTime@temp:
   419                           	callstack 0
   420   000009                     Return_Anti_Moves@moves_index:
   421                           	callstack 0
   422   000009                     Return_Time@time_index:
   423                           	callstack 0
   424   000009                     ___wmul@multiplier:
   425                           	callstack 0
   426   000009                     ___xxtofl@val:
   427                           	callstack 0
   428                           
   429                           ; 4 bytes @ 0x8
   430   000009                     	ds	1
   431   00000A                     ??_I2C_2_Master_Read:
   432   00000A                     I2C_2_Master_Write@data_byte:
   433                           	callstack 0
   434                           
   435                           ; 1 bytes @ 0x9
   436   00000A                     	ds	1
   437   00000B                     color_writetoaddr@value:
   438                           	callstack 0
   439   00000B                     I2C_2_Master_Read@ack:
   440                           	callstack 0
   441   00000B                     AppendMoves@anti_moves_array:
   442                           	callstack 0
   443   00000B                     AppendTime@time_index:
   444                           	callstack 0
   445   00000B                     Return_Anti_Moves@anti_moves_array:
   446                           	callstack 0
   447   00000B                     Return_Time@time_array:
   448                           	callstack 0
   449   00000B                     ___wmul@multiplicand:
   450                           	callstack 0
   451                           
   452                           ; 2 bytes @ 0xA
   453   00000B                     	ds	1
   454   00000C                     color_writetoaddr@address:
   455                           	callstack 0
   456   00000C                     I2C_2_Master_Read@tmp:
   457                           	callstack 0
   458                           
   459                           ; 1 bytes @ 0xB
   460   00000C                     	ds	1
   461   00000D                     ??_color_click_init:
   462   00000D                     ??_init_colorclick_interrupts:
   463   00000D                     ??_AppendMoves:
   464   00000D                     ??_Return_Anti_Moves:
   465   00000D                     ??_Return_Time:
   466   00000D                     ??___xxtofl:
   467   00000D                     ?_color_read_Red:
   468                           	callstack 0
   469   00000D                     ?_color_read_Green:
   470                           	callstack 0
   471   00000D                     ?_color_read_Blue:
   472                           	callstack 0
   473   00000D                     ?_color_read_Clear:
   474                           	callstack 0
   475   00000D                     AppendTime@time_array:
   476                           	callstack 0
   477   00000D                     ___wmul@product:
   478                           	callstack 0
   479                           
   480                           ; 2 bytes @ 0xC
   481   00000D                     	ds	1
   482   00000E                     AppendMoves@temp:
   483                           	callstack 0
   484   00000E                     Return_Anti_Moves@temp:
   485                           	callstack 0
   486                           
   487                           ; 1 bytes @ 0xD
   488   00000E                     	ds	1
   489   00000F                     ??_color_read_Red:
   490   00000F                     ??_color_read_Green:
   491   00000F                     ??_color_read_Blue:
   492   00000F                     ??_color_read_Clear:
   493   00000F                     ??_AppendTime:
   494   00000F                     ?___lwdiv:
   495                           	callstack 0
   496   00000F                     ___lwdiv@dividend:
   497                           	callstack 0
   498                           
   499                           ; 2 bytes @ 0xE
   500   00000F                     	ds	1
   501   000010                     Return_Time@temp:
   502                           	callstack 0
   503                           
   504                           ; 2 bytes @ 0xF
   505   000010                     	ds	1
   506   000011                     ___xxtofl@sign:
   507                           	callstack 0
   508   000011                     ___lwdiv@divisor:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0x10
   512   000011                     	ds	1
   513   000012                     ___xxtofl@exp:
   514                           	callstack 0
   515   000012                     color_read_Red@tmp:
   516                           	callstack 0
   517   000012                     color_read_Green@tmp:
   518                           	callstack 0
   519   000012                     color_read_Blue@tmp:
   520                           	callstack 0
   521   000012                     color_read_Clear@tmp:
   522                           	callstack 0
   523                           
   524                           ; 2 bytes @ 0x11
   525   000012                     	ds	1
   526   000013                     ___lwdiv@quotient:
   527                           	callstack 0
   528   000013                     ___xxtofl@arg:
   529                           	callstack 0
   530                           
   531                           ; 4 bytes @ 0x12
   532   000013                     	ds	1
   533   000014                     Update_RGBC@tempval:
   534                           	callstack 0
   535                           
   536                           ; 2 bytes @ 0x13
   537   000014                     	ds	1
   538   000015                     ___lwdiv@counter:
   539                           	callstack 0
   540                           
   541                           ; 1 bytes @ 0x14
   542   000015                     	ds	1
   543   000016                     setMotorPWM@m:
   544                           	callstack 0
   545                           
   546                           ; 2 bytes @ 0x15
   547   000016                     	ds	1
   548   000017                     ?___fldiv:
   549                           	callstack 0
   550   000017                     ___fldiv@b:
   551                           	callstack 0
   552                           
   553                           ; 4 bytes @ 0x16
   554   000017                     	ds	1
   555   000018                     ??_setMotorPWM:
   556                           
   557                           ; 1 bytes @ 0x17
   558   000018                     	ds	2
   559   00001A                     setMotorPWM@posDuty:
   560                           	callstack 0
   561                           
   562                           ; 1 bytes @ 0x19
   563   00001A                     	ds	1
   564   00001B                     setMotorPWM@negDuty:
   565                           	callstack 0
   566   00001B                     ___fldiv@a:
   567                           	callstack 0
   568                           
   569                           ; 4 bytes @ 0x1A
   570   00001B                     	ds	1
   571   00001C                     stop@mL:
   572                           	callstack 0
   573   00001C                     turnLeft@mL:
   574                           	callstack 0
   575   00001C                     turnRight@mL:
   576                           	callstack 0
   577   00001C                     fullSpeedAhead@mL:
   578                           	callstack 0
   579   00001C                     fullSpeedBackwards@mL:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0x1B
   583   00001C                     	ds	2
   584   00001E                     stop@mR:
   585                           	callstack 0
   586   00001E                     turnLeft@mR:
   587                           	callstack 0
   588   00001E                     turnRight@mR:
   589                           	callstack 0
   590   00001E                     fullSpeedAhead@mR:
   591                           	callstack 0
   592   00001E                     fullSpeedBackwards@mR:
   593                           	callstack 0
   594                           
   595                           ; 2 bytes @ 0x1D
   596   00001E                     	ds	1
   597   00001F                     ??___fldiv:
   598                           
   599                           ; 1 bytes @ 0x1E
   600   00001F                     	ds	1
   601   000020                     ??_stop:
   602   000020                     ??_turnLeft:
   603   000020                     ??_turnRight:
   604   000020                     ??_fullSpeedAhead:
   605   000020                     ??_fullSpeedBackwards:
   606                           
   607                           ; 1 bytes @ 0x1F
   608   000020                     	ds	2
   609   000022                     turnLeft90@mL:
   610                           	callstack 0
   611   000022                     turnRight90@mL:
   612                           	callstack 0
   613                           
   614                           ; 2 bytes @ 0x21
   615   000022                     	ds	1
   616   000023                     ___fldiv@rem:
   617                           	callstack 0
   618                           
   619                           ; 4 bytes @ 0x22
   620   000023                     	ds	1
   621   000024                     turnLeft90@mR:
   622                           	callstack 0
   623   000024                     turnRight90@mR:
   624                           	callstack 0
   625                           
   626                           ; 2 bytes @ 0x23
   627   000024                     	ds	2
   628   000026                     turnLeft90@a:
   629                           	callstack 0
   630   000026                     turnRight90@a:
   631                           	callstack 0
   632                           
   633                           ; 1 bytes @ 0x25
   634   000026                     	ds	1
   635   000027                     ___fldiv@sign:
   636                           	callstack 0
   637   000027                     turnRight135@mL:
   638                           	callstack 0
   639   000027                     turnLeft135@mL:
   640                           	callstack 0
   641   000027                     RedInstructions@mL:
   642                           	callstack 0
   643   000027                     GreenInstructions@mL:
   644                           	callstack 0
   645   000027                     BlueInstructions@mL:
   646                           	callstack 0
   647   000027                     YellowInstructions@mL:
   648                           	callstack 0
   649   000027                     PinkInstructions@mL:
   650                           	callstack 0
   651                           
   652                           ; 2 bytes @ 0x26
   653   000027                     	ds	1
   654   000028                     ___fldiv@new_exp:
   655                           	callstack 0
   656                           
   657                           ; 2 bytes @ 0x27
   658   000028                     	ds	1
   659   000029                     turnRight135@mR:
   660                           	callstack 0
   661   000029                     turnLeft135@mR:
   662                           	callstack 0
   663   000029                     RedInstructions@mR:
   664                           	callstack 0
   665   000029                     GreenInstructions@mR:
   666                           	callstack 0
   667   000029                     BlueInstructions@mR:
   668                           	callstack 0
   669   000029                     YellowInstructions@mR:
   670                           	callstack 0
   671   000029                     PinkInstructions@mR:
   672                           	callstack 0
   673                           
   674                           ; 2 bytes @ 0x28
   675   000029                     	ds	1
   676   00002A                     ___fldiv@grs:
   677                           	callstack 0
   678                           
   679                           ; 4 bytes @ 0x29
   680   00002A                     	ds	1
   681   00002B                     ??_RedInstructions:
   682   00002B                     ??_GreenInstructions:
   683   00002B                     ??_BlueInstructions:
   684   00002B                     ??_YellowInstructions:
   685   00002B                     ??_PinkInstructions:
   686   00002B                     turnRight135@a:
   687                           	callstack 0
   688   00002B                     turnLeft135@a:
   689                           	callstack 0
   690                           
   691                           ; 1 bytes @ 0x2A
   692   00002B                     	ds	1
   693   00002C                     OrangeInstructions@mL:
   694                           	callstack 0
   695   00002C                     LightBlueInstructions@mL:
   696                           	callstack 0
   697                           
   698                           ; 2 bytes @ 0x2B
   699   00002C                     	ds	1
   700   00002D                     RedInstructions@a:
   701                           	callstack 0
   702   00002D                     GreenInstructions@a:
   703                           	callstack 0
   704   00002D                     BlueInstructions@a:
   705                           	callstack 0
   706   00002D                     YellowInstructions@a:
   707                           	callstack 0
   708   00002D                     PinkInstructions@a:
   709                           	callstack 0
   710                           
   711                           ; 1 bytes @ 0x2C
   712   00002D                     	ds	1
   713   00002E                     ___fldiv@bexp:
   714                           	callstack 0
   715   00002E                     OrangeInstructions@mR:
   716                           	callstack 0
   717   00002E                     LightBlueInstructions@mR:
   718                           	callstack 0
   719   00002E                     AntiYellow@mL:
   720                           	callstack 0
   721   00002E                     AntiPink@mL:
   722                           	callstack 0
   723                           
   724                           ; 2 bytes @ 0x2D
   725   00002E                     	ds	1
   726   00002F                     ___fldiv@aexp:
   727                           	callstack 0
   728                           
   729                           ; 1 bytes @ 0x2E
   730   00002F                     	ds	1
   731   000030                     ??_OrangeInstructions:
   732   000030                     ??_LightBlueInstructions:
   733   000030                     ?___flmul:
   734                           	callstack 0
   735   000030                     AntiYellow@mR:
   736                           	callstack 0
   737   000030                     AntiPink@mR:
   738                           	callstack 0
   739   000030                     ___flmul@b:
   740                           	callstack 0
   741                           
   742                           ; 4 bytes @ 0x2F
   743   000030                     	ds	2
   744   000032                     ??_AntiYellow:
   745   000032                     ??_AntiPink:
   746   000032                     OrangeInstructions@a:
   747                           	callstack 0
   748   000032                     LightBlueInstructions@a:
   749                           	callstack 0
   750                           
   751                           ; 1 bytes @ 0x31
   752   000032                     	ds	2
   753   000034                     AntiYellow@a:
   754                           	callstack 0
   755   000034                     AntiPink@a:
   756                           	callstack 0
   757   000034                     ___flmul@a:
   758                           	callstack 0
   759                           
   760                           ; 4 bytes @ 0x33
   761   000034                     	ds	1
   762   000035                     MoveBuggy@color_detected:
   763                           	callstack 0
   764                           
   765                           ; 2 bytes @ 0x34
   766   000035                     	ds	2
   767   000037                     MoveBuggy@mL:
   768                           	callstack 0
   769                           
   770                           ; 2 bytes @ 0x36
   771   000037                     	ds	1
   772   000038                     ??___flmul:
   773                           
   774                           ; 1 bytes @ 0x37
   775   000038                     	ds	1
   776   000039                     MoveBuggy@mR:
   777                           	callstack 0
   778                           
   779                           ; 2 bytes @ 0x38
   780   000039                     	ds	2
   781   00003B                     WhiteInstructions@mL:
   782                           	callstack 0
   783                           
   784                           ; 2 bytes @ 0x3A
   785   00003B                     	ds	1
   786   00003C                     ___flmul@sign:
   787                           	callstack 0
   788                           
   789                           ; 1 bytes @ 0x3B
   790   00003C                     	ds	1
   791   00003D                     WhiteInstructions@mR:
   792                           	callstack 0
   793   00003D                     ___flmul@grs:
   794                           	callstack 0
   795                           
   796                           ; 4 bytes @ 0x3C
   797   00003D                     	ds	2
   798   00003F                     ??_WhiteInstructions:
   799                           
   800                           ; 1 bytes @ 0x3E
   801   00003F                     	ds	2
   802   000041                     ___flmul@aexp:
   803                           	callstack 0
   804   000041                     WhiteInstructions@c:
   805                           	callstack 0
   806                           
   807                           ; 2 bytes @ 0x40
   808   000041                     	ds	1
   809   000042                     ___flmul@bexp:
   810                           	callstack 0
   811                           
   812                           ; 1 bytes @ 0x41
   813   000042                     	ds	1
   814   000043                     WhiteInstructions@anticolor:
   815                           	callstack 0
   816   000043                     ___flmul@prod:
   817                           	callstack 0
   818                           
   819                           ; 4 bytes @ 0x42
   820   000043                     	ds	1
   821   000044                     WhiteInstructions@a:
   822                           	callstack 0
   823                           
   824                           ; 2 bytes @ 0x43
   825   000044                     	ds	3
   826   000047                     ___flmul@temp:
   827                           	callstack 0
   828                           
   829                           ; 2 bytes @ 0x46
   830   000047                     	ds	2
   831   000049                     ?___fltol:
   832                           	callstack 0
   833   000049                     ___fltol@f1:
   834                           	callstack 0
   835                           
   836                           ; 4 bytes @ 0x48
   837   000049                     	ds	4
   838   00004D                     ___fltol@sign1:
   839                           	callstack 0
   840                           
   841                           ; 1 bytes @ 0x4C
   842   00004D                     	ds	1
   843   00004E                     ___fltol@exp1:
   844                           	callstack 0
   845                           
   846                           ; 1 bytes @ 0x4D
   847   00004E                     	ds	1
   848                           
   849 ;;
   850 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   851 ;;
   852 ;; *************** function _main *****************
   853 ;; Defined at:
   854 ;;		line 22 in file "main_motor.c"
   855 ;; Parameters:    Size  Location     Type
   856 ;;		None
   857 ;; Auto vars:     Size  Location     Type
   858 ;;  b               2   25[BANK0 ] unsigned int 
   859 ;;  motorR          9   45[BANK0 ] struct DC_motor
   860 ;;  motorL          9   36[BANK0 ] struct DC_motor
   861 ;;  initial_colo    8   28[BANK0 ] struct RGB_val
   862 ;;  color_detect    1   27[BANK0 ] unsigned char 
   863 ;;  lost_timer      1   24[BANK0 ] unsigned char 
   864 ;; Return value:  Size  Location     Type
   865 ;;                  1    wreg      void 
   866 ;; Registers used:
   867 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   868 ;; Tracked objects:
   869 ;;		On entry : 0/0
   870 ;;		On exit  : 0/0
   871 ;;		Unchanged: 0/0
   872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   874 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   875 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   876 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   877 ;;Total ram usage:       32 bytes
   878 ;; Hardware stack levels required when called: 15
   879 ;; This function calls:
   880 ;;		_AppendTime
   881 ;;		_Interrupts_init
   882 ;;		_LED_init
   883 ;;		_MoveBuggy
   884 ;;		_Timer0_init
   885 ;;		_Update_RGBC
   886 ;;		_WhiteInstructions
   887 ;;		_WhiteLight
   888 ;;		_color_click_init
   889 ;;		_detect_color
   890 ;;		_fullSpeedAhead
   891 ;;		_initDCmotorsPWM
   892 ;;		_stop
   893 ;; This function is called by:
   894 ;;		Startup code after reset
   895 ;; This function uses a non-reentrant model
   896 ;;
   897                           
   898                           	psect	text0
   899   000E40                     __ptext0:
   900                           	callstack 0
   901   000E40                     _main:
   902                           	callstack 16
   903   000E40                     
   904                           ;main_motor.c: 25:     RGB_val initial_color;;main_motor.c: 26:     initial_color.R = 0;
   905   000E40  0E00               	movlw	0
   906   000E42  0100               	movlb	0	; () banked
   907   000E44  6FBC               	movwf	(main@initial_color+1)& (0+255),b
   908   000E46  0E00               	movlw	0
   909   000E48  6FBB               	movwf	main@initial_color& (0+255),b
   910                           
   911                           ;main_motor.c: 27:     initial_color.G = 0;
   912   000E4A  0E00               	movlw	0
   913   000E4C  6FBE               	movwf	(main@initial_color+3)& (0+255),b
   914   000E4E  0E00               	movlw	0
   915   000E50  6FBD               	movwf	(main@initial_color+2)& (0+255),b
   916                           
   917                           ;main_motor.c: 28:     initial_color.B = 0;
   918   000E52  0E00               	movlw	0
   919   000E54  6FC0               	movwf	(main@initial_color+5)& (0+255),b
   920   000E56  0E00               	movlw	0
   921   000E58  6FBF               	movwf	(main@initial_color+4)& (0+255),b
   922                           
   923                           ;main_motor.c: 29:     initial_color.C = 0;
   924   000E5A  0E00               	movlw	0
   925   000E5C  6FC2               	movwf	(main@initial_color+7)& (0+255),b
   926   000E5E  0E00               	movlw	0
   927   000E60  6FC1               	movwf	(main@initial_color+6)& (0+255),b
   928   000E62                     
   929                           ; BSR set to: 0
   930                           ;main_motor.c: 31:     LED_init();
   931   000E62  EC5C  F015         	call	_LED_init	;wreg free
   932   000E66                     
   933                           ;main_motor.c: 32:     color_click_init();
   934   000E66  EC66  F014         	call	_color_click_init	;wreg free
   935   000E6A                     
   936                           ;main_motor.c: 33:     Interrupts_init();
   937   000E6A  EC4D  F015         	call	_Interrupts_init	;wreg free
   938                           
   939                           ;main_motor.c: 35:     Timer0_init();
   940   000E6E  EC1D  F015         	call	_Timer0_init	;wreg free
   941                           
   942                           ;main_motor.c: 38:     initDCmotorsPWM(99);
   943   000E72  0E00               	movlw	0
   944   000E74  6E0A               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   945   000E76  0E63               	movlw	99
   946   000E78  6E09               	movwf	initDCmotorsPWM@PWMperiod^0,c
   947   000E7A  EC65  F010         	call	_initDCmotorsPWM	;wreg free
   948   000E7E                     
   949                           ;main_motor.c: 40:     struct DC_motor motorL, motorR;;main_motor.c: 42:     motorL.powe
      +                          r=0;
   950   000E7E  0E00               	movlw	0
   951   000E80  0100               	movlb	0	; () banked
   952   000E82  6FC3               	movwf	main@motorL& (0+255),b
   953   000E84                     
   954                           ; BSR set to: 0
   955                           ;main_motor.c: 43:     motorL.direction=1;
   956   000E84  0E01               	movlw	1
   957   000E86  6FC4               	movwf	(main@motorL+1)& (0+255),b
   958   000E88                     
   959                           ; BSR set to: 0
   960                           ;main_motor.c: 44:     motorL.brakemode=1;
   961   000E88  0E01               	movlw	1
   962   000E8A  6FC5               	movwf	(main@motorL+2)& (0+255),b
   963   000E8C                     
   964                           ; BSR set to: 0
   965                           ;main_motor.c: 45:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
   966   000E8C  0EAA               	movlw	170
   967   000E8E  6FC8               	movwf	(main@motorL+5)& (0+255),b
   968   000E90  0E0F               	movlw	15
   969   000E92  6FC9               	movwf	(main@motorL+6)& (0+255),b
   970   000E94                     
   971                           ; BSR set to: 0
   972                           ;main_motor.c: 46:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
   973   000E94  0EA6               	movlw	166
   974   000E96  6FCA               	movwf	(main@motorL+7)& (0+255),b
   975   000E98  0E0F               	movlw	15
   976   000E9A  6FCB               	movwf	(main@motorL+8)& (0+255),b
   977   000E9C                     
   978                           ; BSR set to: 0
   979                           ;main_motor.c: 47:     motorL.PWMperiod= T2PR;
   980   000E9C  CFBC F0C6          	movff	4028,main@motorL+3	;volatile
   981   000EA0  6BC7               	clrf	(main@motorL+4)& (0+255),b
   982   000EA2                     
   983                           ; BSR set to: 0
   984                           ;main_motor.c: 49:     motorR.power=0;
   985   000EA2  0E00               	movlw	0
   986   000EA4  6FCC               	movwf	main@motorR& (0+255),b
   987   000EA6                     
   988                           ; BSR set to: 0
   989                           ;main_motor.c: 50:     motorR.direction=1;
   990   000EA6  0E01               	movlw	1
   991   000EA8  6FCD               	movwf	(main@motorR+1)& (0+255),b
   992   000EAA                     
   993                           ; BSR set to: 0
   994                           ;main_motor.c: 51:     motorR.brakemode=1;
   995   000EAA  0E01               	movlw	1
   996   000EAC  6FCE               	movwf	(main@motorR+2)& (0+255),b
   997   000EAE                     
   998                           ; BSR set to: 0
   999                           ;main_motor.c: 52:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1000   000EAE  0E25               	movlw	37
  1001   000EB0  6FD1               	movwf	(main@motorR+5)& (0+255),b
  1002   000EB2  0E0F               	movlw	15
  1003   000EB4  6FD2               	movwf	(main@motorR+6)& (0+255),b
  1004   000EB6                     
  1005                           ; BSR set to: 0
  1006                           ;main_motor.c: 53:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1007   000EB6  0E21               	movlw	33
  1008   000EB8  6FD3               	movwf	(main@motorR+7)& (0+255),b
  1009   000EBA  0E0F               	movlw	15
  1010   000EBC  6FD4               	movwf	(main@motorR+8)& (0+255),b
  1011   000EBE                     
  1012                           ; BSR set to: 0
  1013                           ;main_motor.c: 54:     motorR.PWMperiod= T2PR;
  1014   000EBE  CFBC F0CF          	movff	4028,main@motorR+3	;volatile
  1015   000EC2  6BD0               	clrf	(main@motorR+4)& (0+255),b
  1016   000EC4                     
  1017                           ; BSR set to: 0
  1018                           ;main_motor.c: 57:     unsigned char color_detected = 0;
  1019   000EC4  0E00               	movlw	0
  1020   000EC6  6FBA               	movwf	main@color_detected& (0+255),b
  1021   000EC8                     
  1022                           ; BSR set to: 0
  1023                           ;main_motor.c: 58:     unsigned char lost_timer = 0;
  1024   000EC8  0E00               	movlw	0
  1025   000ECA  6FB7               	movwf	main@lost_timer& (0+255),b
  1026   000ECC                     l688:
  1027   000ECC  B48E               	btfsc	142,2,c	;volatile
  1028   000ECE  EF6B  F007         	goto	u4551
  1029   000ED2  EF6D  F007         	goto	u4550
  1030   000ED6                     u4551:
  1031   000ED6  EF66  F007         	goto	l688
  1032   000EDA                     u4550:
  1033   000EDA                     
  1034                           ;main_motor.c: 61:     color_flag = 0;
  1035   000EDA  0E00               	movlw	0
  1036   000EDC  0100               	movlb	0	; () banked
  1037   000EDE  6F76               	movwf	_color_flag& (0+255),b
  1038   000EE0                     
  1039                           ; BSR set to: 0
  1040                           ;main_motor.c: 62:     WhiteLight();
  1041   000EE0  ECA8  F015         	call	_WhiteLight	;wreg free
  1042   000EE4                     l4304:
  1043                           
  1044                           ;main_motor.c: 67:         unsigned int b = 0;
  1045   000EE4  0E00               	movlw	0
  1046   000EE6  0100               	movlb	0	; () banked
  1047   000EE8  6FB9               	movwf	(main@b+1)& (0+255),b
  1048   000EEA  0E00               	movlw	0
  1049   000EEC  6FB8               	movwf	main@b& (0+255),b
  1050                           
  1051                           ;main_motor.c: 68:         while(color_detected == 0){
  1052   000EEE  EFB7  F007         	goto	l692
  1053   000EF2                     l4306:
  1054                           
  1055                           ; BSR set to: 0
  1056                           ;main_motor.c: 69:             fullSpeedAhead(&motorL,&motorR);
  1057   000EF2  0EC3               	movlw	low main@motorL
  1058   000EF4  6E1C               	movwf	fullSpeedAhead@mL^0,c
  1059   000EF6  0E00               	movlw	high main@motorL
  1060   000EF8  6E1D               	movwf	(fullSpeedAhead@mL+1)^0,c
  1061   000EFA  0ECC               	movlw	low main@motorR
  1062   000EFC  6E1E               	movwf	fullSpeedAhead@mR^0,c
  1063   000EFE  0E00               	movlw	high main@motorR
  1064   000F00  6E1F               	movwf	(fullSpeedAhead@mR+1)^0,c
  1065   000F02  EC67  F00C         	call	_fullSpeedAhead	;wreg free
  1066   000F06                     
  1067                           ;main_motor.c: 70:             Update_RGBC(&initial_color);
  1068   000F06  0EBB               	movlw	low main@initial_color
  1069   000F08  6E14               	movwf	Update_RGBC@tempval^0,c
  1070   000F0A  0E00               	movlw	high main@initial_color
  1071   000F0C  6E15               	movwf	(Update_RGBC@tempval+1)^0,c
  1072   000F0E  ECE7  F012         	call	_Update_RGBC	;wreg free
  1073   000F12                     
  1074                           ;main_motor.c: 71:             color_detected = detect_color(&initial_color);
  1075   000F12  0EBB               	movlw	low main@initial_color
  1076   000F14  0100               	movlb	0	; () banked
  1077   000F16  6FA3               	movwf	detect_color@tempval& (0+255),b
  1078   000F18  0E00               	movlw	high main@initial_color
  1079   000F1A  6FA4               	movwf	(detect_color@tempval+1)& (0+255),b
  1080   000F1C  EC2E  F000         	call	_detect_color	;wreg free
  1081   000F20  0100               	movlb	0	; () banked
  1082   000F22  6FBA               	movwf	main@color_detected& (0+255),b
  1083   000F24                     
  1084                           ; BSR set to: 0
  1085                           ;main_motor.c: 72:             b++;
  1086   000F24  4BB8               	infsnz	main@b& (0+255),f,b
  1087   000F26  2BB9               	incf	(main@b+1)& (0+255),f,b
  1088   000F28                     
  1089                           ; BSR set to: 0
  1090                           ;main_motor.c: 74:             if(initial_color.C > 1900 && initial_color.C < 2200){
  1091   000F28  0E6D               	movlw	109
  1092   000F2A  5DC1               	subwf	(main@initial_color+6)& (0+255),w,b
  1093   000F2C  0E07               	movlw	7
  1094   000F2E  59C2               	subwfb	(main@initial_color+7)& (0+255),w,b
  1095   000F30  A0D8               	btfss	status,0,c
  1096   000F32  EF9D  F007         	goto	u4561
  1097   000F36  EF9F  F007         	goto	u4560
  1098   000F3A                     u4561:
  1099   000F3A  EFAB  F007         	goto	l4320
  1100   000F3E                     u4560:
  1101   000F3E                     
  1102                           ; BSR set to: 0
  1103   000F3E  0E98               	movlw	152
  1104   000F40  5DC1               	subwf	(main@initial_color+6)& (0+255),w,b
  1105   000F42  0E08               	movlw	8
  1106   000F44  59C2               	subwfb	(main@initial_color+7)& (0+255),w,b
  1107   000F46  B0D8               	btfsc	status,0,c
  1108   000F48  EFA8  F007         	goto	u4571
  1109   000F4C  EFAA  F007         	goto	u4570
  1110   000F50                     u4571:
  1111   000F50  EFAB  F007         	goto	l4320
  1112   000F54                     u4570:
  1113   000F54                     
  1114                           ; BSR set to: 0
  1115                           ;main_motor.c: 75:                 lost_timer++;
  1116   000F54  2BB7               	incf	main@lost_timer& (0+255),f,b
  1117   000F56                     l4320:
  1118                           
  1119                           ; BSR set to: 0
  1120                           ;main_motor.c: 78:             if(lost_timer>100){
  1121   000F56  0E64               	movlw	100
  1122   000F58  65B7               	cpfsgt	main@lost_timer& (0+255),b
  1123   000F5A  EFB1  F007         	goto	u4581
  1124   000F5E  EFB3  F007         	goto	u4580
  1125   000F62                     u4581:
  1126   000F62  EFB7  F007         	goto	l692
  1127   000F66                     u4580:
  1128   000F66                     
  1129                           ; BSR set to: 0
  1130                           ;main_motor.c: 79:                 lost_flag = 1;
  1131   000F66  0E01               	movlw	1
  1132   000F68  6F74               	movwf	_lost_flag& (0+255),b
  1133                           
  1134                           ;main_motor.c: 80:                 color_detected = 8;
  1135   000F6A  0E08               	movlw	8
  1136   000F6C  6FBA               	movwf	main@color_detected& (0+255),b
  1137   000F6E                     l692:
  1138                           
  1139                           ; BSR set to: 0
  1140                           ;main_motor.c: 68:         while(color_detected == 0){
  1141   000F6E  51BA               	movf	main@color_detected& (0+255),w,b
  1142   000F70  B4D8               	btfsc	status,2,c
  1143   000F72  EFBD  F007         	goto	u4591
  1144   000F76  EFBF  F007         	goto	u4590
  1145   000F7A                     u4591:
  1146   000F7A  EF79  F007         	goto	l4306
  1147   000F7E                     u4590:
  1148   000F7E                     
  1149                           ; BSR set to: 0
  1150                           ;main_motor.c: 84:         if(color_detected != 0 && color_detected != 8){
  1151   000F7E  51BA               	movf	main@color_detected& (0+255),w,b
  1152   000F80  B4D8               	btfsc	status,2,c
  1153   000F82  EFC5  F007         	goto	u4601
  1154   000F86  EFC7  F007         	goto	u4600
  1155   000F8A                     u4601:
  1156   000F8A  EF24  F008         	goto	l4350
  1157   000F8E                     u4600:
  1158   000F8E                     
  1159                           ; BSR set to: 0
  1160   000F8E  0E08               	movlw	8
  1161   000F90  19BA               	xorwf	main@color_detected& (0+255),w,b
  1162   000F92  B4D8               	btfsc	status,2,c
  1163   000F94  EFCE  F007         	goto	u4611
  1164   000F98  EFD0  F007         	goto	u4610
  1165   000F9C                     u4611:
  1166   000F9C  EF24  F008         	goto	l4350
  1167   000FA0                     u4610:
  1168   000FA0                     
  1169                           ; BSR set to: 0
  1170                           ;main_motor.c: 85:             AppendTime((b-6),&time_index,time_array);
  1171   000FA0  0EFA               	movlw	250
  1172   000FA2  25B8               	addwf	main@b& (0+255),w,b
  1173   000FA4  6E09               	movwf	AppendTime@temp^0,c
  1174   000FA6  0EFF               	movlw	255
  1175   000FA8  21B9               	addwfc	(main@b+1)& (0+255),w,b
  1176   000FAA  6E0A               	movwf	(AppendTime@temp+1)^0,c
  1177   000FAC  0E55               	movlw	low _time_index
  1178   000FAE  6E0B               	movwf	AppendTime@time_index^0,c
  1179   000FB0  0E00               	movlw	high _time_index
  1180   000FB2  6E0C               	movwf	(AppendTime@time_index+1)^0,c
  1181   000FB4  0E3C               	movlw	low _time_array
  1182   000FB6  6E0D               	movwf	AppendTime@time_array^0,c
  1183   000FB8  0E01               	movlw	high _time_array
  1184   000FBA  6E0E               	movwf	(AppendTime@time_array+1)^0,c
  1185   000FBC  EC80  F014         	call	_AppendTime	;wreg free
  1186   000FC0                     
  1187                           ;main_motor.c: 86:             LATHbits.LATH3 = 1;
  1188   000FC0  8680               	bsf	128,3,c	;volatile
  1189                           
  1190                           ;main_motor.c: 88:             while(b>0){
  1191   000FC2  EFF1  F007         	goto	l4336
  1192   000FC6                     l4332:
  1193                           
  1194                           ; BSR set to: 0
  1195                           ;main_motor.c: 89:                 stop(&motorL,&motorR);
  1196   000FC6  0EC3               	movlw	low main@motorL
  1197   000FC8  6E1C               	movwf	stop@mL^0,c
  1198   000FCA  0E00               	movlw	high main@motorL
  1199   000FCC  6E1D               	movwf	(stop@mL+1)^0,c
  1200   000FCE  0ECC               	movlw	low main@motorR
  1201   000FD0  6E1E               	movwf	stop@mR^0,c
  1202   000FD2  0E00               	movlw	high main@motorR
  1203   000FD4  6E1F               	movwf	(stop@mR+1)^0,c
  1204   000FD6  EC42  F00E         	call	_stop	;wreg free
  1205   000FDA                     
  1206                           ;main_motor.c: 90:                 b--;
  1207   000FDA  0100               	movlb	0	; () banked
  1208   000FDC  07B8               	decf	main@b& (0+255),f,b
  1209   000FDE  A0D8               	btfss	status,0,c
  1210   000FE0  07B9               	decf	(main@b+1)& (0+255),f,b
  1211   000FE2                     l4336:
  1212                           
  1213                           ;main_motor.c: 88:             while(b>0){
  1214   000FE2  0100               	movlb	0	; () banked
  1215   000FE4  51B8               	movf	main@b& (0+255),w,b
  1216   000FE6  11B9               	iorwf	(main@b+1)& (0+255),w,b
  1217   000FE8  A4D8               	btfss	status,2,c
  1218   000FEA  EFF9  F007         	goto	u4621
  1219   000FEE  EFFB  F007         	goto	u4620
  1220   000FF2                     u4621:
  1221   000FF2  EFE3  F007         	goto	l4332
  1222   000FF6                     u4620:
  1223   000FF6                     
  1224                           ; BSR set to: 0
  1225                           ;main_motor.c: 92:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1226   000FF6  0E09               	movlw	9
  1227   000FF8  0100               	movlb	0	; () banked
  1228   000FFA  6FB6               	movwf	(??_main+1)& (0+255),b
  1229   000FFC  0E1E               	movlw	30
  1230   000FFE  6FB5               	movwf	??_main& (0+255),b
  1231   001000  0EE4               	movlw	228
  1232   001002                     u4667:
  1233   001002  2EE8               	decfsz	wreg,f,c
  1234   001004  D7FE               	bra	u4667
  1235   001006  2FB5               	decfsz	??_main& (0+255),f,b
  1236   001008  D7FC               	bra	u4667
  1237   00100A  2FB6               	decfsz	(??_main+1)& (0+255),f,b
  1238   00100C  D7FA               	bra	u4667
  1239   00100E  F000               	nop	
  1240   001010                     
  1241                           ;main_motor.c: 93:             LATHbits.LATH3 = 0;
  1242   001010  9680               	bcf	128,3,c	;volatile
  1243   001012                     
  1244                           ;main_motor.c: 95:             MoveBuggy(color_detected,&motorL,&motorR);
  1245   001012  0100               	movlb	0	; () banked
  1246   001014  51BA               	movf	main@color_detected& (0+255),w,b
  1247   001016  6FB5               	movwf	??_main& (0+255),b
  1248   001018  6BB6               	clrf	(??_main+1)& (0+255),b
  1249   00101A  C0B5  F035         	movff	??_main,MoveBuggy@color_detected
  1250   00101E  C0B6  F036         	movff	??_main+1,MoveBuggy@color_detected+1
  1251   001022  0EC3               	movlw	low main@motorL
  1252   001024  6E37               	movwf	MoveBuggy@mL^0,c
  1253   001026  0E00               	movlw	high main@motorL
  1254   001028  6E38               	movwf	(MoveBuggy@mL+1)^0,c
  1255   00102A  0ECC               	movlw	low main@motorR
  1256   00102C  6E39               	movwf	MoveBuggy@mR^0,c
  1257   00102E  0E00               	movlw	high main@motorR
  1258   001030  6E3A               	movwf	(MoveBuggy@mR+1)^0,c
  1259   001032  EC9A  F008         	call	_MoveBuggy	;wreg free
  1260   001036                     
  1261                           ;main_motor.c: 96:             color_detected = 0;
  1262   001036  0E00               	movlw	0
  1263   001038  0100               	movlb	0	; () banked
  1264   00103A  6FBA               	movwf	main@color_detected& (0+255),b
  1265   00103C                     
  1266                           ; BSR set to: 0
  1267                           ;main_motor.c: 97:             color_flag = 0;
  1268   00103C  0E00               	movlw	0
  1269   00103E  6F76               	movwf	_color_flag& (0+255),b
  1270   001040                     
  1271                           ; BSR set to: 0
  1272                           ;main_motor.c: 98:             lost_timer = 0;
  1273   001040  0E00               	movlw	0
  1274   001042  6FB7               	movwf	main@lost_timer& (0+255),b
  1275                           
  1276                           ;main_motor.c: 99:         }
  1277   001044  EF72  F007         	goto	l4304
  1278   001048                     l4350:
  1279                           
  1280                           ; BSR set to: 0
  1281   001048  0E08               	movlw	8
  1282   00104A  19BA               	xorwf	main@color_detected& (0+255),w,b
  1283   00104C  A4D8               	btfss	status,2,c
  1284   00104E  EF2B  F008         	goto	u4631
  1285   001052  EF2D  F008         	goto	u4630
  1286   001056                     u4631:
  1287   001056  EF72  F007         	goto	l4304
  1288   00105A                     u4630:
  1289   00105A                     
  1290                           ; BSR set to: 0
  1291                           ;main_motor.c: 104:             if(lost_flag){AppendTime((b-lost_timer-6),&time_index,ti
      +                          me_array);}
  1292   00105A  5174               	movf	_lost_flag& (0+255),w,b
  1293   00105C  B4D8               	btfsc	status,2,c
  1294   00105E  EF33  F008         	goto	u4641
  1295   001062  EF35  F008         	goto	u4640
  1296   001066                     u4641:
  1297   001066  EF4D  F008         	goto	l4356
  1298   00106A                     u4640:
  1299   00106A                     
  1300                           ; BSR set to: 0
  1301   00106A  51B7               	movf	main@lost_timer& (0+255),w,b
  1302   00106C  5DB8               	subwf	main@b& (0+255),w,b
  1303   00106E  6FB5               	movwf	??_main& (0+255),b
  1304   001070  0E00               	movlw	0
  1305   001072  59B9               	subwfb	(main@b+1)& (0+255),w,b
  1306   001074  6FB6               	movwf	(??_main+1)& (0+255),b
  1307   001076  0EFA               	movlw	250
  1308   001078  25B5               	addwf	??_main& (0+255),w,b
  1309   00107A  6E09               	movwf	AppendTime@temp^0,c
  1310   00107C  0EFF               	movlw	255
  1311   00107E  21B6               	addwfc	(??_main+1)& (0+255),w,b
  1312   001080  6E0A               	movwf	(AppendTime@temp+1)^0,c
  1313   001082  0E55               	movlw	low _time_index
  1314   001084  6E0B               	movwf	AppendTime@time_index^0,c
  1315   001086  0E00               	movlw	high _time_index
  1316   001088  6E0C               	movwf	(AppendTime@time_index+1)^0,c
  1317   00108A  0E3C               	movlw	low _time_array
  1318   00108C  6E0D               	movwf	AppendTime@time_array^0,c
  1319   00108E  0E01               	movlw	high _time_array
  1320   001090  6E0E               	movwf	(AppendTime@time_array+1)^0,c
  1321   001092  EC80  F014         	call	_AppendTime	;wreg free
  1322   001096  EF5D  F008         	goto	l4358
  1323   00109A                     l4356:
  1324                           
  1325                           ; BSR set to: 0
  1326   00109A  0EFA               	movlw	250
  1327   00109C  25B8               	addwf	main@b& (0+255),w,b
  1328   00109E  6E09               	movwf	AppendTime@temp^0,c
  1329   0010A0  0EFF               	movlw	255
  1330   0010A2  21B9               	addwfc	(main@b+1)& (0+255),w,b
  1331   0010A4  6E0A               	movwf	(AppendTime@temp+1)^0,c
  1332   0010A6  0E55               	movlw	low _time_index
  1333   0010A8  6E0B               	movwf	AppendTime@time_index^0,c
  1334   0010AA  0E00               	movlw	high _time_index
  1335   0010AC  6E0C               	movwf	(AppendTime@time_index+1)^0,c
  1336   0010AE  0E3C               	movlw	low _time_array
  1337   0010B0  6E0D               	movwf	AppendTime@time_array^0,c
  1338   0010B2  0E01               	movlw	high _time_array
  1339   0010B4  6E0E               	movwf	(AppendTime@time_array+1)^0,c
  1340   0010B6  EC80  F014         	call	_AppendTime	;wreg free
  1341   0010BA                     l4358:
  1342                           
  1343                           ;main_motor.c: 106:             LATDbits.LATD7 = 1;
  1344   0010BA  8E7C               	bsf	124,7,c	;volatile
  1345                           
  1346                           ;main_motor.c: 108:             while(b>0){
  1347   0010BC  EF6E  F008         	goto	l4364
  1348   0010C0                     l4360:
  1349                           
  1350                           ; BSR set to: 0
  1351                           ;main_motor.c: 109:                 stop(&motorL,&motorR);
  1352   0010C0  0EC3               	movlw	low main@motorL
  1353   0010C2  6E1C               	movwf	stop@mL^0,c
  1354   0010C4  0E00               	movlw	high main@motorL
  1355   0010C6  6E1D               	movwf	(stop@mL+1)^0,c
  1356   0010C8  0ECC               	movlw	low main@motorR
  1357   0010CA  6E1E               	movwf	stop@mR^0,c
  1358   0010CC  0E00               	movlw	high main@motorR
  1359   0010CE  6E1F               	movwf	(stop@mR+1)^0,c
  1360   0010D0  EC42  F00E         	call	_stop	;wreg free
  1361   0010D4                     
  1362                           ;main_motor.c: 110:                 b--;
  1363   0010D4  0100               	movlb	0	; () banked
  1364   0010D6  07B8               	decf	main@b& (0+255),f,b
  1365   0010D8  A0D8               	btfss	status,0,c
  1366   0010DA  07B9               	decf	(main@b+1)& (0+255),f,b
  1367   0010DC                     l4364:
  1368                           
  1369                           ;main_motor.c: 108:             while(b>0){
  1370   0010DC  0100               	movlb	0	; () banked
  1371   0010DE  51B8               	movf	main@b& (0+255),w,b
  1372   0010E0  11B9               	iorwf	(main@b+1)& (0+255),w,b
  1373   0010E2  A4D8               	btfss	status,2,c
  1374   0010E4  EF76  F008         	goto	u4651
  1375   0010E8  EF78  F008         	goto	u4650
  1376   0010EC                     u4651:
  1377   0010EC  EF60  F008         	goto	l4360
  1378   0010F0                     u4650:
  1379   0010F0                     
  1380                           ; BSR set to: 0
  1381                           ;main_motor.c: 112:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1382   0010F0  0E09               	movlw	9
  1383   0010F2  0100               	movlb	0	; () banked
  1384   0010F4  6FB6               	movwf	(??_main+1)& (0+255),b
  1385   0010F6  0E1E               	movlw	30
  1386   0010F8  6FB5               	movwf	??_main& (0+255),b
  1387   0010FA  0EE4               	movlw	228
  1388   0010FC                     u4677:
  1389   0010FC  2EE8               	decfsz	wreg,f,c
  1390   0010FE  D7FE               	bra	u4677
  1391   001100  2FB5               	decfsz	??_main& (0+255),f,b
  1392   001102  D7FC               	bra	u4677
  1393   001104  2FB6               	decfsz	(??_main+1)& (0+255),f,b
  1394   001106  D7FA               	bra	u4677
  1395   001108  F000               	nop	
  1396   00110A                     
  1397                           ;main_motor.c: 113:             WhiteInstructions(&motorL,&motorR);
  1398   00110A  0EC3               	movlw	low main@motorL
  1399   00110C  6E3B               	movwf	WhiteInstructions@mL^0,c
  1400   00110E  0E00               	movlw	high main@motorL
  1401   001110  6E3C               	movwf	(WhiteInstructions@mL+1)^0,c
  1402   001112  0ECC               	movlw	low main@motorR
  1403   001114  6E3D               	movwf	WhiteInstructions@mR^0,c
  1404   001116  0E00               	movlw	high main@motorR
  1405   001118  6E3E               	movwf	(WhiteInstructions@mR+1)^0,c
  1406   00111A  ECCC  F00D         	call	_WhiteInstructions	;wreg free
  1407   00111E                     
  1408                           ;main_motor.c: 114:             LATDbits.LATD7 = 0;
  1409   00111E  9E7C               	bcf	124,7,c	;volatile
  1410   001120                     
  1411                           ;main_motor.c: 115:             color_detected = 0;
  1412   001120  0E00               	movlw	0
  1413   001122  0100               	movlb	0	; () banked
  1414   001124  6FBA               	movwf	main@color_detected& (0+255),b
  1415   001126                     
  1416                           ; BSR set to: 0
  1417                           ;main_motor.c: 116:             lost_timer = 0;
  1418   001126  0E00               	movlw	0
  1419   001128  6FB7               	movwf	main@lost_timer& (0+255),b
  1420   00112A  0003               	sleep		;# 
  1421   00112C  EF72  F007         	goto	l4304
  1422   001130  EF2C  F000         	goto	start
  1423   001134                     __end_of_main:
  1424                           	callstack 0
  1425                           
  1426 ;; *************** function _initDCmotorsPWM *****************
  1427 ;; Defined at:
  1428 ;;		line 5 in file "dc_motor.c"
  1429 ;; Parameters:    Size  Location     Type
  1430 ;;  PWMperiod       2    8[COMRAM] unsigned int 
  1431 ;; Auto vars:     Size  Location     Type
  1432 ;;		None
  1433 ;; Return value:  Size  Location     Type
  1434 ;;                  1    wreg      void 
  1435 ;; Registers used:
  1436 ;;		wreg, status,2
  1437 ;; Tracked objects:
  1438 ;;		On entry : 0/0
  1439 ;;		On exit  : 0/0
  1440 ;;		Unchanged: 0/0
  1441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1442 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1445 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1446 ;;Total ram usage:        2 bytes
  1447 ;; Hardware stack levels used: 1
  1448 ;; Hardware stack levels required when called: 7
  1449 ;; This function calls:
  1450 ;;		Nothing
  1451 ;; This function is called by:
  1452 ;;		_main
  1453 ;; This function uses a non-reentrant model
  1454 ;;
  1455                           
  1456                           	psect	text1
  1457   0020CA                     __ptext1:
  1458                           	callstack 0
  1459   0020CA                     _initDCmotorsPWM:
  1460                           	callstack 23
  1461   0020CA                     
  1462                           ;dc_motor.c: 7:     LATEbits.LATE2 = 0;
  1463   0020CA  947D               	bcf	125,2,c	;volatile
  1464                           
  1465                           ;dc_motor.c: 8:     TRISEbits.TRISE2 = 0;
  1466   0020CC  9485               	bcf	133,2,c	;volatile
  1467                           
  1468                           ;dc_motor.c: 9:     LATEbits.LATE4 = 0;
  1469   0020CE  987D               	bcf	125,4,c	;volatile
  1470                           
  1471                           ;dc_motor.c: 10:     TRISEbits.TRISE4 = 0;
  1472   0020D0  9885               	bcf	133,4,c	;volatile
  1473                           
  1474                           ;dc_motor.c: 11:     LATCbits.LATC7 = 0;
  1475   0020D2  9E7B               	bcf	123,7,c	;volatile
  1476                           
  1477                           ;dc_motor.c: 12:     TRISCbits.TRISC7 = 0;
  1478   0020D4  9E83               	bcf	131,7,c	;volatile
  1479                           
  1480                           ;dc_motor.c: 13:     LATGbits.LATG6 = 0;
  1481   0020D6  9C7F               	bcf	127,6,c	;volatile
  1482                           
  1483                           ;dc_motor.c: 14:     TRISGbits.TRISG6 = 0;
  1484   0020D8  9C87               	bcf	135,6,c	;volatile
  1485   0020DA                     
  1486                           ;dc_motor.c: 17:     RE2PPS=0x05;
  1487   0020DA  0E05               	movlw	5
  1488   0020DC  010E               	movlb	14	; () banked
  1489   0020DE  6F74               	movwf	116,b	;volatile
  1490                           
  1491                           ;dc_motor.c: 18:     RE4PPS=0x06;
  1492   0020E0  0E06               	movlw	6
  1493   0020E2  6F76               	movwf	118,b	;volatile
  1494                           
  1495                           ;dc_motor.c: 19:     RC7PPS=0x07;
  1496   0020E4  0E07               	movlw	7
  1497   0020E6  6F69               	movwf	105,b	;volatile
  1498                           
  1499                           ;dc_motor.c: 20:     RG6PPS=0x08;
  1500   0020E8  0E08               	movlw	8
  1501   0020EA  6F88               	movwf	136,b	;volatile
  1502                           
  1503                           ;dc_motor.c: 23:     T2CONbits.CKPS=0b100;
  1504   0020EC  50BD               	movf	189,w,c	;volatile
  1505   0020EE  0B8F               	andlw	-113
  1506   0020F0  0940               	iorlw	64
  1507   0020F2  6EBD               	movwf	189,c	;volatile
  1508                           
  1509                           ;dc_motor.c: 24:     T2HLTbits.MODE=0b00000;
  1510   0020F4  0EE0               	movlw	-32
  1511   0020F6  16BE               	andwf	190,f,c	;volatile
  1512                           
  1513                           ;dc_motor.c: 25:     T2CLKCONbits.CS=0b0001;
  1514   0020F8  50BF               	movf	191,w,c	;volatile
  1515   0020FA  0BF0               	andlw	-16
  1516   0020FC  0901               	iorlw	1
  1517   0020FE  6EBF               	movwf	191,c	;volatile
  1518   002100                     
  1519                           ; BSR set to: 14
  1520                           ;dc_motor.c: 29:     T2PR=PWMperiod;
  1521   002100  C009  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  1522   002104                     
  1523                           ; BSR set to: 14
  1524                           ;dc_motor.c: 30:     T2CONbits.ON=1;
  1525   002104  8EBD               	bsf	189,7,c	;volatile
  1526                           
  1527                           ;dc_motor.c: 34:     CCPR1H=0;
  1528   002106  0E00               	movlw	0
  1529   002108  6EAA               	movwf	170,c	;volatile
  1530                           
  1531                           ;dc_motor.c: 35:     CCPR2H=0;
  1532   00210A  0E00               	movlw	0
  1533   00210C  6EA6               	movwf	166,c	;volatile
  1534                           
  1535                           ;dc_motor.c: 36:     CCPR3H=0;
  1536   00210E  0E00               	movlw	0
  1537   002110  010F               	movlb	15	; () banked
  1538   002112  6F25               	movwf	37,b	;volatile
  1539                           
  1540                           ;dc_motor.c: 37:     CCPR4H=0;
  1541   002114  0E00               	movlw	0
  1542   002116  6F21               	movwf	33,b	;volatile
  1543                           
  1544                           ;dc_motor.c: 40:     CCPTMRS0bits.C1TSEL=0;
  1545   002118  0EFC               	movlw	-4
  1546   00211A  16AD               	andwf	173,f,c	;volatile
  1547                           
  1548                           ;dc_motor.c: 41:     CCPTMRS0bits.C2TSEL=0;
  1549   00211C  0EF3               	movlw	-13
  1550   00211E  16AD               	andwf	173,f,c	;volatile
  1551                           
  1552                           ;dc_motor.c: 42:     CCPTMRS0bits.C3TSEL=0;
  1553   002120  0ECF               	movlw	-49
  1554   002122  16AD               	andwf	173,f,c	;volatile
  1555                           
  1556                           ;dc_motor.c: 43:     CCPTMRS0bits.C4TSEL=0;
  1557   002124  0E3F               	movlw	-193
  1558   002126  16AD               	andwf	173,f,c	;volatile
  1559   002128                     
  1560                           ; BSR set to: 15
  1561                           ;dc_motor.c: 46:     CCP1CONbits.FMT=1;
  1562   002128  88AB               	bsf	171,4,c	;volatile
  1563                           
  1564                           ;dc_motor.c: 47:     CCP1CONbits.CCP1MODE=0b1100;
  1565   00212A  50AB               	movf	171,w,c	;volatile
  1566   00212C  0BF0               	andlw	-16
  1567   00212E  090C               	iorlw	12
  1568   002130  6EAB               	movwf	171,c	;volatile
  1569   002132                     
  1570                           ; BSR set to: 15
  1571                           ;dc_motor.c: 48:     CCP1CONbits.EN=1;
  1572   002132  8EAB               	bsf	171,7,c	;volatile
  1573   002134                     
  1574                           ; BSR set to: 15
  1575                           ;dc_motor.c: 50:     CCP2CONbits.FMT=1;
  1576   002134  88A7               	bsf	167,4,c	;volatile
  1577                           
  1578                           ;dc_motor.c: 51:     CCP2CONbits.CCP2MODE=0b1100;
  1579   002136  50A7               	movf	167,w,c	;volatile
  1580   002138  0BF0               	andlw	-16
  1581   00213A  090C               	iorlw	12
  1582   00213C  6EA7               	movwf	167,c	;volatile
  1583   00213E                     
  1584                           ; BSR set to: 15
  1585                           ;dc_motor.c: 52:     CCP2CONbits.EN=1;
  1586   00213E  8EA7               	bsf	167,7,c	;volatile
  1587   002140                     
  1588                           ; BSR set to: 15
  1589                           ;dc_motor.c: 54:     CCP3CONbits.FMT=1;
  1590   002140  8926               	bsf	38,4,b	;volatile
  1591                           
  1592                           ;dc_motor.c: 55:     CCP3CONbits.CCP3MODE=0b1100;
  1593   002142  5126               	movf	38,w,b	;volatile
  1594   002144  0BF0               	andlw	-16
  1595   002146  090C               	iorlw	12
  1596   002148  6F26               	movwf	38,b	;volatile
  1597   00214A                     
  1598                           ; BSR set to: 15
  1599                           ;dc_motor.c: 56:     CCP3CONbits.EN=1;
  1600   00214A  8F26               	bsf	38,7,b	;volatile
  1601   00214C                     
  1602                           ; BSR set to: 15
  1603                           ;dc_motor.c: 58:     CCP4CONbits.FMT=1;
  1604   00214C  8922               	bsf	34,4,b	;volatile
  1605                           
  1606                           ;dc_motor.c: 59:     CCP4CONbits.CCP4MODE=0b1100;
  1607   00214E  5122               	movf	34,w,b	;volatile
  1608   002150  0BF0               	andlw	-16
  1609   002152  090C               	iorlw	12
  1610   002154  6F22               	movwf	34,b	;volatile
  1611   002156                     
  1612                           ; BSR set to: 15
  1613                           ;dc_motor.c: 60:     CCP4CONbits.EN=1;
  1614   002156  8F22               	bsf	34,7,b	;volatile
  1615   002158                     
  1616                           ; BSR set to: 15
  1617   002158  0012               	return		;funcret
  1618   00215A                     __end_of_initDCmotorsPWM:
  1619                           	callstack 0
  1620                           
  1621 ;; *************** function _detect_color *****************
  1622 ;; Defined at:
  1623 ;;		line 99 in file "color.c"
  1624 ;; Parameters:    Size  Location     Type
  1625 ;;  tempval         2    4[BANK0 ] PTR struct RGB_val
  1626 ;;		 -> main@initial_color(8), 
  1627 ;; Auto vars:     Size  Location     Type
  1628 ;;  dist_B          1   21[BANK0 ] unsigned char 
  1629 ;;  dist_G          1   20[BANK0 ] unsigned char 
  1630 ;;  dist_R          1   19[BANK0 ] unsigned char 
  1631 ;;  color           1   18[BANK0 ] unsigned char 
  1632 ;; Return value:  Size  Location     Type
  1633 ;;                  1    wreg      unsigned char 
  1634 ;; Registers used:
  1635 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1636 ;; Tracked objects:
  1637 ;;		On entry : 0/0
  1638 ;;		On exit  : 0/0
  1639 ;;		Unchanged: 0/0
  1640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1641 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1642 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1643 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1644 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1645 ;;Total ram usage:       18 bytes
  1646 ;; Hardware stack levels used: 1
  1647 ;; Hardware stack levels required when called: 8
  1648 ;; This function calls:
  1649 ;;		___fldiv
  1650 ;;		___flmul
  1651 ;;		___fltol
  1652 ;;		___xxtofl
  1653 ;; This function is called by:
  1654 ;;		_main
  1655 ;; This function uses a non-reentrant model
  1656 ;;
  1657                           
  1658                           	psect	text2
  1659   00005C                     __ptext2:
  1660                           	callstack 0
  1661   00005C                     _detect_color:
  1662                           	callstack 22
  1663   00005C                     
  1664                           ;color.c: 99: unsigned char detect_color(RGB_val *tempval);color.c: 100: {;color.c: 101:
      +                               unsigned char color = 0;
  1665   00005C  0E00               	movlw	0
  1666   00005E  0100               	movlb	0	; () banked
  1667   000060  6FB1               	movwf	detect_color@color& (0+255),b
  1668   000062                     
  1669                           ; BSR set to: 0
  1670                           ;color.c: 104:     unsigned char dist_R, dist_G, dist_B;;color.c: 105:     dist_R = ((fl
      +                          oat)(tempval->R)/(float)(tempval->R + tempval->G + tempval->B))*100;
  1671   000062  0E00               	movlw	0
  1672   000064  6E34               	movwf	___flmul@a^0,c
  1673   000066  0E00               	movlw	0
  1674   000068  6E35               	movwf	(___flmul@a+1)^0,c
  1675   00006A  0EC8               	movlw	200
  1676   00006C  6E36               	movwf	(___flmul@a+2)^0,c
  1677   00006E  0E42               	movlw	66
  1678   000070  6E37               	movwf	(___flmul@a+3)^0,c
  1679   000072  EE20 F004          	lfsr	2,4
  1680   000076  51A3               	movf	detect_color@tempval& (0+255),w,b
  1681   000078  26D9               	addwf	fsr2l,f,c
  1682   00007A  51A4               	movf	(detect_color@tempval+1)& (0+255),w,b
  1683   00007C  22DA               	addwfc	fsr2h,f,c
  1684   00007E  CFDE F0A5          	movff	postinc2,??_detect_color
  1685   000082  CFDD F0A6          	movff	postdec2,??_detect_color+1
  1686   000086  EE20 F002          	lfsr	2,2
  1687   00008A  51A3               	movf	detect_color@tempval& (0+255),w,b
  1688   00008C  26D9               	addwf	fsr2l,f,c
  1689   00008E  51A4               	movf	(detect_color@tempval+1)& (0+255),w,b
  1690   000090  22DA               	addwfc	fsr2h,f,c
  1691   000092  CFDE F0A7          	movff	postinc2,??_detect_color+2
  1692   000096  CFDD F0A8          	movff	postdec2,??_detect_color+3
  1693   00009A  C0A3  FFD9         	movff	detect_color@tempval,fsr2l
  1694   00009E  C0A4  FFDA         	movff	detect_color@tempval+1,fsr2h
  1695   0000A2  CFDE F0A9          	movff	postinc2,??_detect_color+4
  1696   0000A6  CFDD F0AA          	movff	postdec2,??_detect_color+5
  1697   0000AA  51A7               	movf	(??_detect_color+2)& (0+255),w,b
  1698   0000AC  25A9               	addwf	(??_detect_color+4)& (0+255),w,b
  1699   0000AE  6FAB               	movwf	(??_detect_color+6)& (0+255),b
  1700   0000B0  51A8               	movf	(??_detect_color+3)& (0+255),w,b
  1701   0000B2  21AA               	addwfc	(??_detect_color+5)& (0+255),w,b
  1702   0000B4  6FAC               	movwf	(??_detect_color+7)& (0+255),b
  1703   0000B6  51A5               	movf	??_detect_color& (0+255),w,b
  1704   0000B8  25AB               	addwf	(??_detect_color+6)& (0+255),w,b
  1705   0000BA  6FAD               	movwf	(??_detect_color+8)& (0+255),b
  1706   0000BC  51A6               	movf	(??_detect_color+1)& (0+255),w,b
  1707   0000BE  21AC               	addwfc	(??_detect_color+7)& (0+255),w,b
  1708   0000C0  6FAE               	movwf	(??_detect_color+9)& (0+255),b
  1709   0000C2  C0AD  F009         	movff	??_detect_color+8,___xxtofl@val
  1710   0000C6  C0AE  F00A         	movff	??_detect_color+9,___xxtofl@val+1
  1711   0000CA  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1712   0000CC  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1713   0000CE  0E00               	movlw	0
  1714   0000D0  ECDC  F009         	call	___xxtofl
  1715   0000D4  C009  F01B         	movff	?___xxtofl,___fldiv@a
  1716   0000D8  C00A  F01C         	movff	?___xxtofl+1,___fldiv@a+1
  1717   0000DC  C00B  F01D         	movff	?___xxtofl+2,___fldiv@a+2
  1718   0000E0  C00C  F01E         	movff	?___xxtofl+3,___fldiv@a+3
  1719   0000E4  C0A3  FFD9         	movff	detect_color@tempval,fsr2l
  1720   0000E8  C0A4  FFDA         	movff	detect_color@tempval+1,fsr2h
  1721   0000EC  CFDE F0AF          	movff	postinc2,??_detect_color+10
  1722   0000F0  CFDD F0B0          	movff	postdec2,??_detect_color+11
  1723   0000F4  C0AF  F009         	movff	??_detect_color+10,___xxtofl@val
  1724   0000F8  C0B0  F00A         	movff	??_detect_color+11,___xxtofl@val+1
  1725   0000FC  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1726   0000FE  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1727   000100  0E00               	movlw	0
  1728   000102  ECDC  F009         	call	___xxtofl
  1729   000106  C009  F017         	movff	?___xxtofl,___fldiv@b
  1730   00010A  C00A  F018         	movff	?___xxtofl+1,___fldiv@b+1
  1731   00010E  C00B  F019         	movff	?___xxtofl+2,___fldiv@b+2
  1732   000112  C00C  F01A         	movff	?___xxtofl+3,___fldiv@b+3
  1733   000116  EC53  F005         	call	___fldiv	;wreg free
  1734   00011A  C017  F030         	movff	?___fldiv,___flmul@b
  1735   00011E  C018  F031         	movff	?___fldiv+1,___flmul@b+1
  1736   000122  C019  F032         	movff	?___fldiv+2,___flmul@b+2
  1737   000126  C01A  F033         	movff	?___fldiv+3,___flmul@b+3
  1738   00012A  EC3E  F003         	call	___flmul	;wreg free
  1739   00012E  C030  F049         	movff	?___flmul,___fltol@f1
  1740   000132  C031  F04A         	movff	?___flmul+1,___fltol@f1+1
  1741   000136  C032  F04B         	movff	?___flmul+2,___fltol@f1+2
  1742   00013A  C033  F04C         	movff	?___flmul+3,___fltol@f1+3
  1743   00013E  EC6C  F00B         	call	___fltol	;wreg free
  1744   000142  5049               	movf	?___fltol^0,w,c
  1745   000144  0100               	movlb	0	; () banked
  1746   000146  6FB2               	movwf	detect_color@dist_R& (0+255),b
  1747   000148                     
  1748                           ; BSR set to: 0
  1749                           ;color.c: 106:     dist_G = ((float)(tempval->G)/(float)(tempval->R + tempval->G + tempv
      +                          al->B))*100;
  1750   000148  0E00               	movlw	0
  1751   00014A  6E34               	movwf	___flmul@a^0,c
  1752   00014C  0E00               	movlw	0
  1753   00014E  6E35               	movwf	(___flmul@a+1)^0,c
  1754   000150  0EC8               	movlw	200
  1755   000152  6E36               	movwf	(___flmul@a+2)^0,c
  1756   000154  0E42               	movlw	66
  1757   000156  6E37               	movwf	(___flmul@a+3)^0,c
  1758   000158  EE20 F004          	lfsr	2,4
  1759   00015C  51A3               	movf	detect_color@tempval& (0+255),w,b
  1760   00015E  26D9               	addwf	fsr2l,f,c
  1761   000160  51A4               	movf	(detect_color@tempval+1)& (0+255),w,b
  1762   000162  22DA               	addwfc	fsr2h,f,c
  1763   000164  CFDE F0A5          	movff	postinc2,??_detect_color
  1764   000168  CFDD F0A6          	movff	postdec2,??_detect_color+1
  1765   00016C  EE20 F002          	lfsr	2,2
  1766   000170  51A3               	movf	detect_color@tempval& (0+255),w,b
  1767   000172  26D9               	addwf	fsr2l,f,c
  1768   000174  51A4               	movf	(detect_color@tempval+1)& (0+255),w,b
  1769   000176  22DA               	addwfc	fsr2h,f,c
  1770   000178  CFDE F0A7          	movff	postinc2,??_detect_color+2
  1771   00017C  CFDD F0A8          	movff	postdec2,??_detect_color+3
  1772   000180  C0A3  FFD9         	movff	detect_color@tempval,fsr2l
  1773   000184  C0A4  FFDA         	movff	detect_color@tempval+1,fsr2h
  1774   000188  CFDE F0A9          	movff	postinc2,??_detect_color+4
  1775   00018C  CFDD F0AA          	movff	postdec2,??_detect_color+5
  1776   000190  51A7               	movf	(??_detect_color+2)& (0+255),w,b
  1777   000192  25A9               	addwf	(??_detect_color+4)& (0+255),w,b
  1778   000194  6FAB               	movwf	(??_detect_color+6)& (0+255),b
  1779   000196  51A8               	movf	(??_detect_color+3)& (0+255),w,b
  1780   000198  21AA               	addwfc	(??_detect_color+5)& (0+255),w,b
  1781   00019A  6FAC               	movwf	(??_detect_color+7)& (0+255),b
  1782   00019C  51A5               	movf	??_detect_color& (0+255),w,b
  1783   00019E  25AB               	addwf	(??_detect_color+6)& (0+255),w,b
  1784   0001A0  6FAD               	movwf	(??_detect_color+8)& (0+255),b
  1785   0001A2  51A6               	movf	(??_detect_color+1)& (0+255),w,b
  1786   0001A4  21AC               	addwfc	(??_detect_color+7)& (0+255),w,b
  1787   0001A6  6FAE               	movwf	(??_detect_color+9)& (0+255),b
  1788   0001A8  C0AD  F009         	movff	??_detect_color+8,___xxtofl@val
  1789   0001AC  C0AE  F00A         	movff	??_detect_color+9,___xxtofl@val+1
  1790   0001B0  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1791   0001B2  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1792   0001B4  0E00               	movlw	0
  1793   0001B6  ECDC  F009         	call	___xxtofl
  1794   0001BA  C009  F01B         	movff	?___xxtofl,___fldiv@a
  1795   0001BE  C00A  F01C         	movff	?___xxtofl+1,___fldiv@a+1
  1796   0001C2  C00B  F01D         	movff	?___xxtofl+2,___fldiv@a+2
  1797   0001C6  C00C  F01E         	movff	?___xxtofl+3,___fldiv@a+3
  1798   0001CA  0100               	movlb	0	; () banked
  1799   0001CC  EE20 F002          	lfsr	2,2
  1800   0001D0  51A3               	movf	detect_color@tempval& (0+255),w,b
  1801   0001D2  26D9               	addwf	fsr2l,f,c
  1802   0001D4  51A4               	movf	(detect_color@tempval+1)& (0+255),w,b
  1803   0001D6  22DA               	addwfc	fsr2h,f,c
  1804   0001D8  CFDE F0AF          	movff	postinc2,??_detect_color+10
  1805   0001DC  CFDD F0B0          	movff	postdec2,??_detect_color+11
  1806   0001E0  C0AF  F009         	movff	??_detect_color+10,___xxtofl@val
  1807   0001E4  C0B0  F00A         	movff	??_detect_color+11,___xxtofl@val+1
  1808   0001E8  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1809   0001EA  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1810   0001EC  0E00               	movlw	0
  1811   0001EE  ECDC  F009         	call	___xxtofl
  1812   0001F2  C009  F017         	movff	?___xxtofl,___fldiv@b
  1813   0001F6  C00A  F018         	movff	?___xxtofl+1,___fldiv@b+1
  1814   0001FA  C00B  F019         	movff	?___xxtofl+2,___fldiv@b+2
  1815   0001FE  C00C  F01A         	movff	?___xxtofl+3,___fldiv@b+3
  1816   000202  EC53  F005         	call	___fldiv	;wreg free
  1817   000206  C017  F030         	movff	?___fldiv,___flmul@b
  1818   00020A  C018  F031         	movff	?___fldiv+1,___flmul@b+1
  1819   00020E  C019  F032         	movff	?___fldiv+2,___flmul@b+2
  1820   000212  C01A  F033         	movff	?___fldiv+3,___flmul@b+3
  1821   000216  EC3E  F003         	call	___flmul	;wreg free
  1822   00021A  C030  F049         	movff	?___flmul,___fltol@f1
  1823   00021E  C031  F04A         	movff	?___flmul+1,___fltol@f1+1
  1824   000222  C032  F04B         	movff	?___flmul+2,___fltol@f1+2
  1825   000226  C033  F04C         	movff	?___flmul+3,___fltol@f1+3
  1826   00022A  EC6C  F00B         	call	___fltol	;wreg free
  1827   00022E  5049               	movf	?___fltol^0,w,c
  1828   000230  0100               	movlb	0	; () banked
  1829   000232  6FB3               	movwf	detect_color@dist_G& (0+255),b
  1830   000234                     
  1831                           ; BSR set to: 0
  1832                           ;color.c: 107:     dist_B = ((float)(tempval->B)/(float)(tempval->R + tempval->G + tempv
      +                          al->B))*100;
  1833   000234  0E00               	movlw	0
  1834   000236  6E34               	movwf	___flmul@a^0,c
  1835   000238  0E00               	movlw	0
  1836   00023A  6E35               	movwf	(___flmul@a+1)^0,c
  1837   00023C  0EC8               	movlw	200
  1838   00023E  6E36               	movwf	(___flmul@a+2)^0,c
  1839   000240  0E42               	movlw	66
  1840   000242  6E37               	movwf	(___flmul@a+3)^0,c
  1841   000244  EE20 F004          	lfsr	2,4
  1842   000248  51A3               	movf	detect_color@tempval& (0+255),w,b
  1843   00024A  26D9               	addwf	fsr2l,f,c
  1844   00024C  51A4               	movf	(detect_color@tempval+1)& (0+255),w,b
  1845   00024E  22DA               	addwfc	fsr2h,f,c
  1846   000250  CFDE F0A5          	movff	postinc2,??_detect_color
  1847   000254  CFDD F0A6          	movff	postdec2,??_detect_color+1
  1848   000258  EE20 F002          	lfsr	2,2
  1849   00025C  51A3               	movf	detect_color@tempval& (0+255),w,b
  1850   00025E  26D9               	addwf	fsr2l,f,c
  1851   000260  51A4               	movf	(detect_color@tempval+1)& (0+255),w,b
  1852   000262  22DA               	addwfc	fsr2h,f,c
  1853   000264  CFDE F0A7          	movff	postinc2,??_detect_color+2
  1854   000268  CFDD F0A8          	movff	postdec2,??_detect_color+3
  1855   00026C  C0A3  FFD9         	movff	detect_color@tempval,fsr2l
  1856   000270  C0A4  FFDA         	movff	detect_color@tempval+1,fsr2h
  1857   000274  CFDE F0A9          	movff	postinc2,??_detect_color+4
  1858   000278  CFDD F0AA          	movff	postdec2,??_detect_color+5
  1859   00027C  51A7               	movf	(??_detect_color+2)& (0+255),w,b
  1860   00027E  25A9               	addwf	(??_detect_color+4)& (0+255),w,b
  1861   000280  6FAB               	movwf	(??_detect_color+6)& (0+255),b
  1862   000282  51A8               	movf	(??_detect_color+3)& (0+255),w,b
  1863   000284  21AA               	addwfc	(??_detect_color+5)& (0+255),w,b
  1864   000286  6FAC               	movwf	(??_detect_color+7)& (0+255),b
  1865   000288  51A5               	movf	??_detect_color& (0+255),w,b
  1866   00028A  25AB               	addwf	(??_detect_color+6)& (0+255),w,b
  1867   00028C  6FAD               	movwf	(??_detect_color+8)& (0+255),b
  1868   00028E  51A6               	movf	(??_detect_color+1)& (0+255),w,b
  1869   000290  21AC               	addwfc	(??_detect_color+7)& (0+255),w,b
  1870   000292  6FAE               	movwf	(??_detect_color+9)& (0+255),b
  1871   000294  C0AD  F009         	movff	??_detect_color+8,___xxtofl@val
  1872   000298  C0AE  F00A         	movff	??_detect_color+9,___xxtofl@val+1
  1873   00029C  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1874   00029E  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1875   0002A0  0E00               	movlw	0
  1876   0002A2  ECDC  F009         	call	___xxtofl
  1877   0002A6  C009  F01B         	movff	?___xxtofl,___fldiv@a
  1878   0002AA  C00A  F01C         	movff	?___xxtofl+1,___fldiv@a+1
  1879   0002AE  C00B  F01D         	movff	?___xxtofl+2,___fldiv@a+2
  1880   0002B2  C00C  F01E         	movff	?___xxtofl+3,___fldiv@a+3
  1881   0002B6  0100               	movlb	0	; () banked
  1882   0002B8  EE20 F004          	lfsr	2,4
  1883   0002BC  51A3               	movf	detect_color@tempval& (0+255),w,b
  1884   0002BE  26D9               	addwf	fsr2l,f,c
  1885   0002C0  51A4               	movf	(detect_color@tempval+1)& (0+255),w,b
  1886   0002C2  22DA               	addwfc	fsr2h,f,c
  1887   0002C4  CFDE F0AF          	movff	postinc2,??_detect_color+10
  1888   0002C8  CFDD F0B0          	movff	postdec2,??_detect_color+11
  1889   0002CC  C0AF  F009         	movff	??_detect_color+10,___xxtofl@val
  1890   0002D0  C0B0  F00A         	movff	??_detect_color+11,___xxtofl@val+1
  1891   0002D4  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1892   0002D6  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1893   0002D8  0E00               	movlw	0
  1894   0002DA  ECDC  F009         	call	___xxtofl
  1895   0002DE  C009  F017         	movff	?___xxtofl,___fldiv@b
  1896   0002E2  C00A  F018         	movff	?___xxtofl+1,___fldiv@b+1
  1897   0002E6  C00B  F019         	movff	?___xxtofl+2,___fldiv@b+2
  1898   0002EA  C00C  F01A         	movff	?___xxtofl+3,___fldiv@b+3
  1899   0002EE  EC53  F005         	call	___fldiv	;wreg free
  1900   0002F2  C017  F030         	movff	?___fldiv,___flmul@b
  1901   0002F6  C018  F031         	movff	?___fldiv+1,___flmul@b+1
  1902   0002FA  C019  F032         	movff	?___fldiv+2,___flmul@b+2
  1903   0002FE  C01A  F033         	movff	?___fldiv+3,___flmul@b+3
  1904   000302  EC3E  F003         	call	___flmul	;wreg free
  1905   000306  C030  F049         	movff	?___flmul,___fltol@f1
  1906   00030A  C031  F04A         	movff	?___flmul+1,___fltol@f1+1
  1907   00030E  C032  F04B         	movff	?___flmul+2,___fltol@f1+2
  1908   000312  C033  F04C         	movff	?___flmul+3,___fltol@f1+3
  1909   000316  EC6C  F00B         	call	___fltol	;wreg free
  1910   00031A  5049               	movf	?___fltol^0,w,c
  1911   00031C  0100               	movlb	0	; () banked
  1912   00031E  6FB4               	movwf	detect_color@dist_B& (0+255),b
  1913   000320                     
  1914                           ; BSR set to: 0
  1915                           ;color.c: 109:     if(color_flag){
  1916   000320  5176               	movf	_color_flag& (0+255),w,b
  1917   000322  B4D8               	btfsc	status,2,c
  1918   000324  EF96  F001         	goto	u4061
  1919   000328  EF98  F001         	goto	u4060
  1920   00032C                     u4061:
  1921   00032C  EF3A  F003         	goto	l42
  1922   000330                     u4060:
  1923   000330                     
  1924                           ; BSR set to: 0
  1925                           ;color.c: 110:         if((74<=dist_R) && (dist_R<=76) && (10<=dist_G) && (dist_G<=12) &
      +                          & (13<=dist_B) && (dist_B<=15)){
  1926   000330  0E49               	movlw	73
  1927   000332  65B2               	cpfsgt	detect_color@dist_R& (0+255),b
  1928   000334  EF9E  F001         	goto	u4071
  1929   000338  EFA0  F001         	goto	u4070
  1930   00033C                     u4071:
  1931   00033C  EFCC  F001         	goto	l4162
  1932   000340                     u4070:
  1933   000340                     
  1934                           ; BSR set to: 0
  1935   000340  0E4D               	movlw	77
  1936   000342  61B2               	cpfslt	detect_color@dist_R& (0+255),b
  1937   000344  EFA6  F001         	goto	u4081
  1938   000348  EFA8  F001         	goto	u4080
  1939   00034C                     u4081:
  1940   00034C  EFCC  F001         	goto	l4162
  1941   000350                     u4080:
  1942   000350                     
  1943                           ; BSR set to: 0
  1944   000350  0E09               	movlw	9
  1945   000352  65B3               	cpfsgt	detect_color@dist_G& (0+255),b
  1946   000354  EFAE  F001         	goto	u4091
  1947   000358  EFB0  F001         	goto	u4090
  1948   00035C                     u4091:
  1949   00035C  EFCC  F001         	goto	l4162
  1950   000360                     u4090:
  1951   000360                     
  1952                           ; BSR set to: 0
  1953   000360  0E0D               	movlw	13
  1954   000362  61B3               	cpfslt	detect_color@dist_G& (0+255),b
  1955   000364  EFB6  F001         	goto	u4101
  1956   000368  EFB8  F001         	goto	u4100
  1957   00036C                     u4101:
  1958   00036C  EFCC  F001         	goto	l4162
  1959   000370                     u4100:
  1960   000370                     
  1961                           ; BSR set to: 0
  1962   000370  0E0C               	movlw	12
  1963   000372  65B4               	cpfsgt	detect_color@dist_B& (0+255),b
  1964   000374  EFBE  F001         	goto	u4111
  1965   000378  EFC0  F001         	goto	u4110
  1966   00037C                     u4111:
  1967   00037C  EFCC  F001         	goto	l4162
  1968   000380                     u4110:
  1969   000380                     
  1970                           ; BSR set to: 0
  1971   000380  0E10               	movlw	16
  1972   000382  61B4               	cpfslt	detect_color@dist_B& (0+255),b
  1973   000384  EFC6  F001         	goto	u4121
  1974   000388  EFC8  F001         	goto	u4120
  1975   00038C                     u4121:
  1976   00038C  EFCC  F001         	goto	l4162
  1977   000390                     u4120:
  1978   000390                     
  1979                           ; BSR set to: 0
  1980                           ;color.c: 111:             color = 1;
  1981   000390  0E01               	movlw	1
  1982   000392  6FB1               	movwf	detect_color@color& (0+255),b
  1983                           
  1984                           ;color.c: 112:         }
  1985   000394  EF3A  F003         	goto	l42
  1986   000398                     l4162:
  1987                           
  1988                           ; BSR set to: 0
  1989   000398  0E23               	movlw	35
  1990   00039A  65B2               	cpfsgt	detect_color@dist_R& (0+255),b
  1991   00039C  EFD2  F001         	goto	u4131
  1992   0003A0  EFD4  F001         	goto	u4130
  1993   0003A4                     u4131:
  1994   0003A4  EF00  F002         	goto	l4176
  1995   0003A8                     u4130:
  1996   0003A8                     
  1997                           ; BSR set to: 0
  1998   0003A8  0E27               	movlw	39
  1999   0003AA  61B2               	cpfslt	detect_color@dist_R& (0+255),b
  2000   0003AC  EFDA  F001         	goto	u4141
  2001   0003B0  EFDC  F001         	goto	u4140
  2002   0003B4                     u4141:
  2003   0003B4  EF00  F002         	goto	l4176
  2004   0003B8                     u4140:
  2005   0003B8                     
  2006                           ; BSR set to: 0
  2007   0003B8  0E28               	movlw	40
  2008   0003BA  65B3               	cpfsgt	detect_color@dist_G& (0+255),b
  2009   0003BC  EFE2  F001         	goto	u4151
  2010   0003C0  EFE4  F001         	goto	u4150
  2011   0003C4                     u4151:
  2012   0003C4  EF00  F002         	goto	l4176
  2013   0003C8                     u4150:
  2014   0003C8                     
  2015                           ; BSR set to: 0
  2016   0003C8  0E2C               	movlw	44
  2017   0003CA  61B3               	cpfslt	detect_color@dist_G& (0+255),b
  2018   0003CC  EFEA  F001         	goto	u4161
  2019   0003D0  EFEC  F001         	goto	u4160
  2020   0003D4                     u4161:
  2021   0003D4  EF00  F002         	goto	l4176
  2022   0003D8                     u4160:
  2023   0003D8                     
  2024                           ; BSR set to: 0
  2025   0003D8  0E13               	movlw	19
  2026   0003DA  65B4               	cpfsgt	detect_color@dist_B& (0+255),b
  2027   0003DC  EFF2  F001         	goto	u4171
  2028   0003E0  EFF4  F001         	goto	u4170
  2029   0003E4                     u4171:
  2030   0003E4  EF00  F002         	goto	l4176
  2031   0003E8                     u4170:
  2032   0003E8                     
  2033                           ; BSR set to: 0
  2034   0003E8  0E17               	movlw	23
  2035   0003EA  61B4               	cpfslt	detect_color@dist_B& (0+255),b
  2036   0003EC  EFFA  F001         	goto	u4181
  2037   0003F0  EFFC  F001         	goto	u4180
  2038   0003F4                     u4181:
  2039   0003F4  EF00  F002         	goto	l4176
  2040   0003F8                     u4180:
  2041   0003F8                     
  2042                           ; BSR set to: 0
  2043                           ;color.c: 114:             color = 2;
  2044   0003F8  0E02               	movlw	2
  2045   0003FA  6FB1               	movwf	detect_color@color& (0+255),b
  2046                           
  2047                           ;color.c: 115:         }
  2048   0003FC  EF3A  F003         	goto	l42
  2049   000400                     l4176:
  2050                           
  2051                           ; BSR set to: 0
  2052   000400  0E1C               	movlw	28
  2053   000402  65B2               	cpfsgt	detect_color@dist_R& (0+255),b
  2054   000404  EF06  F002         	goto	u4191
  2055   000408  EF08  F002         	goto	u4190
  2056   00040C                     u4191:
  2057   00040C  EF34  F002         	goto	l4190
  2058   000410                     u4190:
  2059   000410                     
  2060                           ; BSR set to: 0
  2061   000410  0E23               	movlw	35
  2062   000412  61B2               	cpfslt	detect_color@dist_R& (0+255),b
  2063   000414  EF0E  F002         	goto	u4201
  2064   000418  EF10  F002         	goto	u4200
  2065   00041C                     u4201:
  2066   00041C  EF34  F002         	goto	l4190
  2067   000420                     u4200:
  2068   000420                     
  2069                           ; BSR set to: 0
  2070   000420  0E1F               	movlw	31
  2071   000422  65B3               	cpfsgt	detect_color@dist_G& (0+255),b
  2072   000424  EF16  F002         	goto	u4211
  2073   000428  EF18  F002         	goto	u4210
  2074   00042C                     u4211:
  2075   00042C  EF34  F002         	goto	l4190
  2076   000430                     u4210:
  2077   000430                     
  2078                           ; BSR set to: 0
  2079   000430  0E27               	movlw	39
  2080   000432  61B3               	cpfslt	detect_color@dist_G& (0+255),b
  2081   000434  EF1E  F002         	goto	u4221
  2082   000438  EF20  F002         	goto	u4220
  2083   00043C                     u4221:
  2084   00043C  EF34  F002         	goto	l4190
  2085   000440                     u4220:
  2086   000440                     
  2087                           ; BSR set to: 0
  2088   000440  0E1E               	movlw	30
  2089   000442  65B4               	cpfsgt	detect_color@dist_B& (0+255),b
  2090   000444  EF26  F002         	goto	u4231
  2091   000448  EF28  F002         	goto	u4230
  2092   00044C                     u4231:
  2093   00044C  EF34  F002         	goto	l4190
  2094   000450                     u4230:
  2095   000450                     
  2096                           ; BSR set to: 0
  2097   000450  0E26               	movlw	38
  2098   000452  61B4               	cpfslt	detect_color@dist_B& (0+255),b
  2099   000454  EF2E  F002         	goto	u4241
  2100   000458  EF30  F002         	goto	u4240
  2101   00045C                     u4241:
  2102   00045C  EF34  F002         	goto	l4190
  2103   000460                     u4240:
  2104   000460                     
  2105                           ; BSR set to: 0
  2106                           ;color.c: 117:             color = 3;
  2107   000460  0E03               	movlw	3
  2108   000462  6FB1               	movwf	detect_color@color& (0+255),b
  2109                           
  2110                           ;color.c: 118:         }
  2111   000464  EF3A  F003         	goto	l42
  2112   000468                     l4190:
  2113                           
  2114                           ; BSR set to: 0
  2115   000468  0E31               	movlw	49
  2116   00046A  65B2               	cpfsgt	detect_color@dist_R& (0+255),b
  2117   00046C  EF3A  F002         	goto	u4251
  2118   000470  EF3C  F002         	goto	u4250
  2119   000474                     u4251:
  2120   000474  EF68  F002         	goto	l4204
  2121   000478                     u4250:
  2122   000478                     
  2123                           ; BSR set to: 0
  2124   000478  0E35               	movlw	53
  2125   00047A  61B2               	cpfslt	detect_color@dist_R& (0+255),b
  2126   00047C  EF42  F002         	goto	u4261
  2127   000480  EF44  F002         	goto	u4260
  2128   000484                     u4261:
  2129   000484  EF68  F002         	goto	l4204
  2130   000488                     u4260:
  2131   000488                     
  2132                           ; BSR set to: 0
  2133   000488  0E1D               	movlw	29
  2134   00048A  65B3               	cpfsgt	detect_color@dist_G& (0+255),b
  2135   00048C  EF4A  F002         	goto	u4271
  2136   000490  EF4C  F002         	goto	u4270
  2137   000494                     u4271:
  2138   000494  EF68  F002         	goto	l4204
  2139   000498                     u4270:
  2140   000498                     
  2141                           ; BSR set to: 0
  2142   000498  0E21               	movlw	33
  2143   00049A  61B3               	cpfslt	detect_color@dist_G& (0+255),b
  2144   00049C  EF52  F002         	goto	u4281
  2145   0004A0  EF54  F002         	goto	u4280
  2146   0004A4                     u4281:
  2147   0004A4  EF68  F002         	goto	l4204
  2148   0004A8                     u4280:
  2149   0004A8                     
  2150                           ; BSR set to: 0
  2151   0004A8  0E10               	movlw	16
  2152   0004AA  65B4               	cpfsgt	detect_color@dist_B& (0+255),b
  2153   0004AC  EF5A  F002         	goto	u4291
  2154   0004B0  EF5C  F002         	goto	u4290
  2155   0004B4                     u4291:
  2156   0004B4  EF68  F002         	goto	l4204
  2157   0004B8                     u4290:
  2158   0004B8                     
  2159                           ; BSR set to: 0
  2160   0004B8  0E14               	movlw	20
  2161   0004BA  61B4               	cpfslt	detect_color@dist_B& (0+255),b
  2162   0004BC  EF62  F002         	goto	u4301
  2163   0004C0  EF64  F002         	goto	u4300
  2164   0004C4                     u4301:
  2165   0004C4  EF68  F002         	goto	l4204
  2166   0004C8                     u4300:
  2167   0004C8                     
  2168                           ; BSR set to: 0
  2169                           ;color.c: 120:             color = 4;
  2170   0004C8  0E04               	movlw	4
  2171   0004CA  6FB1               	movwf	detect_color@color& (0+255),b
  2172                           
  2173                           ;color.c: 121:         }
  2174   0004CC  EF3A  F003         	goto	l42
  2175   0004D0                     l4204:
  2176                           
  2177                           ; BSR set to: 0
  2178   0004D0  0E2F               	movlw	47
  2179   0004D2  65B2               	cpfsgt	detect_color@dist_R& (0+255),b
  2180   0004D4  EF6E  F002         	goto	u4311
  2181   0004D8  EF70  F002         	goto	u4310
  2182   0004DC                     u4311:
  2183   0004DC  EF9C  F002         	goto	l4218
  2184   0004E0                     u4310:
  2185   0004E0                     
  2186                           ; BSR set to: 0
  2187   0004E0  0E33               	movlw	51
  2188   0004E2  61B2               	cpfslt	detect_color@dist_R& (0+255),b
  2189   0004E4  EF76  F002         	goto	u4321
  2190   0004E8  EF78  F002         	goto	u4320
  2191   0004EC                     u4321:
  2192   0004EC  EF9C  F002         	goto	l4218
  2193   0004F0                     u4320:
  2194   0004F0                     
  2195                           ; BSR set to: 0
  2196   0004F0  0E1B               	movlw	27
  2197   0004F2  65B3               	cpfsgt	detect_color@dist_G& (0+255),b
  2198   0004F4  EF7E  F002         	goto	u4331
  2199   0004F8  EF80  F002         	goto	u4330
  2200   0004FC                     u4331:
  2201   0004FC  EF9C  F002         	goto	l4218
  2202   000500                     u4330:
  2203   000500                     
  2204                           ; BSR set to: 0
  2205   000500  0E1F               	movlw	31
  2206   000502  61B3               	cpfslt	detect_color@dist_G& (0+255),b
  2207   000504  EF86  F002         	goto	u4341
  2208   000508  EF88  F002         	goto	u4340
  2209   00050C                     u4341:
  2210   00050C  EF9C  F002         	goto	l4218
  2211   000510                     u4340:
  2212   000510                     
  2213                           ; BSR set to: 0
  2214   000510  0E14               	movlw	20
  2215   000512  65B4               	cpfsgt	detect_color@dist_B& (0+255),b
  2216   000514  EF8E  F002         	goto	u4351
  2217   000518  EF90  F002         	goto	u4350
  2218   00051C                     u4351:
  2219   00051C  EF9C  F002         	goto	l4218
  2220   000520                     u4350:
  2221   000520                     
  2222                           ; BSR set to: 0
  2223   000520  0E18               	movlw	24
  2224   000522  61B4               	cpfslt	detect_color@dist_B& (0+255),b
  2225   000524  EF96  F002         	goto	u4361
  2226   000528  EF98  F002         	goto	u4360
  2227   00052C                     u4361:
  2228   00052C  EF9C  F002         	goto	l4218
  2229   000530                     u4360:
  2230   000530                     
  2231                           ; BSR set to: 0
  2232                           ;color.c: 123:             color = 5;
  2233   000530  0E05               	movlw	5
  2234   000532  6FB1               	movwf	detect_color@color& (0+255),b
  2235                           
  2236                           ;color.c: 124:         }
  2237   000534  EF3A  F003         	goto	l42
  2238   000538                     l4218:
  2239                           
  2240                           ; BSR set to: 0
  2241   000538  0E3A               	movlw	58
  2242   00053A  65B2               	cpfsgt	detect_color@dist_R& (0+255),b
  2243   00053C  EFA2  F002         	goto	u4371
  2244   000540  EFA4  F002         	goto	u4370
  2245   000544                     u4371:
  2246   000544  EFD0  F002         	goto	l4232
  2247   000548                     u4370:
  2248   000548                     
  2249                           ; BSR set to: 0
  2250   000548  0E3E               	movlw	62
  2251   00054A  61B2               	cpfslt	detect_color@dist_R& (0+255),b
  2252   00054C  EFAA  F002         	goto	u4381
  2253   000550  EFAC  F002         	goto	u4380
  2254   000554                     u4381:
  2255   000554  EFD0  F002         	goto	l4232
  2256   000558                     u4380:
  2257   000558                     
  2258                           ; BSR set to: 0
  2259   000558  0E15               	movlw	21
  2260   00055A  65B3               	cpfsgt	detect_color@dist_G& (0+255),b
  2261   00055C  EFB2  F002         	goto	u4391
  2262   000560  EFB4  F002         	goto	u4390
  2263   000564                     u4391:
  2264   000564  EFD0  F002         	goto	l4232
  2265   000568                     u4390:
  2266   000568                     
  2267                           ; BSR set to: 0
  2268   000568  0E19               	movlw	25
  2269   00056A  61B3               	cpfslt	detect_color@dist_G& (0+255),b
  2270   00056C  EFBA  F002         	goto	u4401
  2271   000570  EFBC  F002         	goto	u4400
  2272   000574                     u4401:
  2273   000574  EFD0  F002         	goto	l4232
  2274   000578                     u4400:
  2275   000578                     
  2276                           ; BSR set to: 0
  2277   000578  0E0F               	movlw	15
  2278   00057A  65B4               	cpfsgt	detect_color@dist_B& (0+255),b
  2279   00057C  EFC2  F002         	goto	u4411
  2280   000580  EFC4  F002         	goto	u4410
  2281   000584                     u4411:
  2282   000584  EFD0  F002         	goto	l4232
  2283   000588                     u4410:
  2284   000588                     
  2285                           ; BSR set to: 0
  2286   000588  0E13               	movlw	19
  2287   00058A  61B4               	cpfslt	detect_color@dist_B& (0+255),b
  2288   00058C  EFCA  F002         	goto	u4421
  2289   000590  EFCC  F002         	goto	u4420
  2290   000594                     u4421:
  2291   000594  EFD0  F002         	goto	l4232
  2292   000598                     u4420:
  2293   000598                     
  2294                           ; BSR set to: 0
  2295                           ;color.c: 126:             color = 6;
  2296   000598  0E06               	movlw	6
  2297   00059A  6FB1               	movwf	detect_color@color& (0+255),b
  2298                           
  2299                           ;color.c: 127:         }
  2300   00059C  EF3A  F003         	goto	l42
  2301   0005A0                     l4232:
  2302                           
  2303                           ; BSR set to: 0
  2304   0005A0  0E20               	movlw	32
  2305   0005A2  65B2               	cpfsgt	detect_color@dist_R& (0+255),b
  2306   0005A4  EFD6  F002         	goto	u4431
  2307   0005A8  EFD8  F002         	goto	u4430
  2308   0005AC                     u4431:
  2309   0005AC  EF04  F003         	goto	l4246
  2310   0005B0                     u4430:
  2311   0005B0                     
  2312                           ; BSR set to: 0
  2313   0005B0  0E24               	movlw	36
  2314   0005B2  61B2               	cpfslt	detect_color@dist_R& (0+255),b
  2315   0005B4  EFDE  F002         	goto	u4441
  2316   0005B8  EFE0  F002         	goto	u4440
  2317   0005BC                     u4441:
  2318   0005BC  EF04  F003         	goto	l4246
  2319   0005C0                     u4440:
  2320   0005C0                     
  2321                           ; BSR set to: 0
  2322   0005C0  0E25               	movlw	37
  2323   0005C2  65B3               	cpfsgt	detect_color@dist_G& (0+255),b
  2324   0005C4  EFE6  F002         	goto	u4451
  2325   0005C8  EFE8  F002         	goto	u4450
  2326   0005CC                     u4451:
  2327   0005CC  EF04  F003         	goto	l4246
  2328   0005D0                     u4450:
  2329   0005D0                     
  2330                           ; BSR set to: 0
  2331   0005D0  0E29               	movlw	41
  2332   0005D2  61B3               	cpfslt	detect_color@dist_G& (0+255),b
  2333   0005D4  EFEE  F002         	goto	u4461
  2334   0005D8  EFF0  F002         	goto	u4460
  2335   0005DC                     u4461:
  2336   0005DC  EF04  F003         	goto	l4246
  2337   0005E0                     u4460:
  2338   0005E0                     
  2339                           ; BSR set to: 0
  2340   0005E0  0E19               	movlw	25
  2341   0005E2  65B4               	cpfsgt	detect_color@dist_B& (0+255),b
  2342   0005E4  EFF6  F002         	goto	u4471
  2343   0005E8  EFF8  F002         	goto	u4470
  2344   0005EC                     u4471:
  2345   0005EC  EF04  F003         	goto	l4246
  2346   0005F0                     u4470:
  2347   0005F0                     
  2348                           ; BSR set to: 0
  2349   0005F0  0E1D               	movlw	29
  2350   0005F2  61B4               	cpfslt	detect_color@dist_B& (0+255),b
  2351   0005F4  EFFE  F002         	goto	u4481
  2352   0005F8  EF00  F003         	goto	u4480
  2353   0005FC                     u4481:
  2354   0005FC  EF04  F003         	goto	l4246
  2355   000600                     u4480:
  2356   000600                     
  2357                           ; BSR set to: 0
  2358                           ;color.c: 129:             color = 7;
  2359   000600  0E07               	movlw	7
  2360   000602  6FB1               	movwf	detect_color@color& (0+255),b
  2361                           
  2362                           ;color.c: 130:         }
  2363   000604  EF3A  F003         	goto	l42
  2364   000608                     l4246:
  2365                           
  2366                           ; BSR set to: 0
  2367   000608  0E2A               	movlw	42
  2368   00060A  65B2               	cpfsgt	detect_color@dist_R& (0+255),b
  2369   00060C  EF0A  F003         	goto	u4491
  2370   000610  EF0C  F003         	goto	u4490
  2371   000614                     u4491:
  2372   000614  EF38  F003         	goto	l4260
  2373   000618                     u4490:
  2374   000618                     
  2375                           ; BSR set to: 0
  2376   000618  0E2E               	movlw	46
  2377   00061A  61B2               	cpfslt	detect_color@dist_R& (0+255),b
  2378   00061C  EF12  F003         	goto	u4501
  2379   000620  EF14  F003         	goto	u4500
  2380   000624                     u4501:
  2381   000624  EF38  F003         	goto	l4260
  2382   000628                     u4500:
  2383   000628                     
  2384                           ; BSR set to: 0
  2385   000628  0E1F               	movlw	31
  2386   00062A  65B3               	cpfsgt	detect_color@dist_G& (0+255),b
  2387   00062C  EF1A  F003         	goto	u4511
  2388   000630  EF1C  F003         	goto	u4510
  2389   000634                     u4511:
  2390   000634  EF38  F003         	goto	l4260
  2391   000638                     u4510:
  2392   000638                     
  2393                           ; BSR set to: 0
  2394   000638  0E23               	movlw	35
  2395   00063A  61B3               	cpfslt	detect_color@dist_G& (0+255),b
  2396   00063C  EF22  F003         	goto	u4521
  2397   000640  EF24  F003         	goto	u4520
  2398   000644                     u4521:
  2399   000644  EF38  F003         	goto	l4260
  2400   000648                     u4520:
  2401   000648                     
  2402                           ; BSR set to: 0
  2403   000648  0E15               	movlw	21
  2404   00064A  65B4               	cpfsgt	detect_color@dist_B& (0+255),b
  2405   00064C  EF2A  F003         	goto	u4531
  2406   000650  EF2C  F003         	goto	u4530
  2407   000654                     u4531:
  2408   000654  EF38  F003         	goto	l4260
  2409   000658                     u4530:
  2410   000658                     
  2411                           ; BSR set to: 0
  2412   000658  0E19               	movlw	25
  2413   00065A  61B4               	cpfslt	detect_color@dist_B& (0+255),b
  2414   00065C  EF32  F003         	goto	u4541
  2415   000660  EF34  F003         	goto	u4540
  2416   000664                     u4541:
  2417   000664  EF38  F003         	goto	l4260
  2418   000668                     u4540:
  2419   000668                     
  2420                           ; BSR set to: 0
  2421                           ;color.c: 132:             color = 8;
  2422   000668  0E08               	movlw	8
  2423   00066A  6FB1               	movwf	detect_color@color& (0+255),b
  2424                           
  2425                           ;color.c: 133:         }
  2426   00066C  EF3A  F003         	goto	l42
  2427   000670                     l4260:
  2428                           
  2429                           ; BSR set to: 0
  2430                           ;color.c: 135:             color = 0;
  2431   000670  0E00               	movlw	0
  2432   000672  6FB1               	movwf	detect_color@color& (0+255),b
  2433   000674                     l42:
  2434                           
  2435                           ; BSR set to: 0
  2436                           ;color.c: 138:     color_flag = 0;
  2437   000674  0E00               	movlw	0
  2438   000676  6F76               	movwf	_color_flag& (0+255),b
  2439                           
  2440                           ;color.c: 139:     return color;
  2441   000678  51B1               	movf	detect_color@color& (0+255),w,b
  2442   00067A                     
  2443                           ; BSR set to: 0
  2444   00067A  0012               	return		;funcret
  2445   00067C                     __end_of_detect_color:
  2446                           	callstack 0
  2447                           
  2448 ;; *************** function ___xxtofl *****************
  2449 ;; Defined at:
  2450 ;;		line 10 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\xxtofl.c"
  2451 ;; Parameters:    Size  Location     Type
  2452 ;;  sign            1    wreg     unsigned char 
  2453 ;;  val             4    8[COMRAM] long 
  2454 ;; Auto vars:     Size  Location     Type
  2455 ;;  sign            1   16[COMRAM] unsigned char 
  2456 ;;  arg             4   18[COMRAM] unsigned long 
  2457 ;;  exp             1   17[COMRAM] unsigned char 
  2458 ;; Return value:  Size  Location     Type
  2459 ;;                  4    8[COMRAM] unsigned char 
  2460 ;; Registers used:
  2461 ;;		wreg, status,2, status,0
  2462 ;; Tracked objects:
  2463 ;;		On entry : 0/0
  2464 ;;		On exit  : 0/0
  2465 ;;		Unchanged: 0/0
  2466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2467 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2468 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2469 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2470 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2471 ;;Total ram usage:       14 bytes
  2472 ;; Hardware stack levels used: 1
  2473 ;; Hardware stack levels required when called: 7
  2474 ;; This function calls:
  2475 ;;		Nothing
  2476 ;; This function is called by:
  2477 ;;		_detect_color
  2478 ;; This function uses a non-reentrant model
  2479 ;;
  2480                           
  2481                           	psect	text3
  2482   0013B8                     __ptext3:
  2483                           	callstack 0
  2484   0013B8                     ___xxtofl:
  2485                           	callstack 22
  2486                           
  2487                           ; BSR set to: 0
  2488                           ;incstack = 0
  2489                           ;___xxtofl@sign stored from wreg
  2490   0013B8  6E11               	movwf	___xxtofl@sign^0,c
  2491   0013BA  5011               	movf	___xxtofl@sign^0,w,c
  2492   0013BC  B4D8               	btfsc	status,2,c
  2493   0013BE  EFE3  F009         	goto	u3191
  2494   0013C2  EFE5  F009         	goto	u3190
  2495   0013C6                     u3191:
  2496   0013C6  EF07  F00A         	goto	l1368
  2497   0013CA                     u3190:
  2498   0013CA  BE0C               	btfsc	(___xxtofl@val+3)^0,7,c
  2499   0013CC  EFEC  F009         	goto	u3200
  2500   0013D0  EFEA  F009         	goto	u3201
  2501   0013D4                     u3201:
  2502   0013D4  EF07  F00A         	goto	l1368
  2503   0013D8                     u3200:
  2504   0013D8  C009  F00D         	movff	___xxtofl@val,??___xxtofl
  2505   0013DC  C00A  F00E         	movff	___xxtofl@val+1,??___xxtofl+1
  2506   0013E0  C00B  F00F         	movff	___xxtofl@val+2,??___xxtofl+2
  2507   0013E4  C00C  F010         	movff	___xxtofl@val+3,??___xxtofl+3
  2508   0013E8  1E0D               	comf	??___xxtofl^0,f,c
  2509   0013EA  1E0E               	comf	(??___xxtofl+1)^0,f,c
  2510   0013EC  1E0F               	comf	(??___xxtofl+2)^0,f,c
  2511   0013EE  1E10               	comf	(??___xxtofl+3)^0,f,c
  2512   0013F0  2A0D               	incf	??___xxtofl^0,f,c
  2513   0013F2  0E00               	movlw	0
  2514   0013F4  220E               	addwfc	(??___xxtofl+1)^0,f,c
  2515   0013F6  220F               	addwfc	(??___xxtofl+2)^0,f,c
  2516   0013F8  2210               	addwfc	(??___xxtofl+3)^0,f,c
  2517   0013FA  C00D  F013         	movff	??___xxtofl,___xxtofl@arg
  2518   0013FE  C00E  F014         	movff	??___xxtofl+1,___xxtofl@arg+1
  2519   001402  C00F  F015         	movff	??___xxtofl+2,___xxtofl@arg+2
  2520   001406  C010  F016         	movff	??___xxtofl+3,___xxtofl@arg+3
  2521   00140A  EF0F  F00A         	goto	l3654
  2522   00140E                     l1368:
  2523   00140E  C009  F013         	movff	___xxtofl@val,___xxtofl@arg
  2524   001412  C00A  F014         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2525   001416  C00B  F015         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2526   00141A  C00C  F016         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2527   00141E                     l3654:
  2528   00141E  5009               	movf	___xxtofl@val^0,w,c
  2529   001420  100A               	iorwf	(___xxtofl@val+1)^0,w,c
  2530   001422  100B               	iorwf	(___xxtofl@val+2)^0,w,c
  2531   001424  100C               	iorwf	(___xxtofl@val+3)^0,w,c
  2532   001426  A4D8               	btfss	status,2,c
  2533   001428  EF18  F00A         	goto	u3211
  2534   00142C  EF1A  F00A         	goto	u3210
  2535   001430                     u3211:
  2536   001430  EF24  F00A         	goto	l3660
  2537   001434                     u3210:
  2538   001434  0E00               	movlw	0
  2539   001436  6E09               	movwf	?___xxtofl^0,c
  2540   001438  0E00               	movlw	0
  2541   00143A  6E0A               	movwf	(?___xxtofl+1)^0,c
  2542   00143C  0E00               	movlw	0
  2543   00143E  6E0B               	movwf	(?___xxtofl+2)^0,c
  2544   001440  0E00               	movlw	0
  2545   001442  6E0C               	movwf	(?___xxtofl+3)^0,c
  2546   001444  EFB5  F00A         	goto	l1371
  2547   001448                     l3660:
  2548   001448  0E96               	movlw	150
  2549   00144A  6E12               	movwf	___xxtofl@exp^0,c
  2550   00144C  EF2E  F00A         	goto	l3664
  2551   001450                     l3662:
  2552   001450  2A12               	incf	___xxtofl@exp^0,f,c
  2553   001452  90D8               	bcf	status,0,c
  2554   001454  3216               	rrcf	(___xxtofl@arg+3)^0,f,c
  2555   001456  3215               	rrcf	(___xxtofl@arg+2)^0,f,c
  2556   001458  3214               	rrcf	(___xxtofl@arg+1)^0,f,c
  2557   00145A  3213               	rrcf	___xxtofl@arg^0,f,c
  2558   00145C                     l3664:
  2559   00145C  0E00               	movlw	0
  2560   00145E  1413               	andwf	___xxtofl@arg^0,w,c
  2561   001460  6E0D               	movwf	??___xxtofl^0,c
  2562   001462  0E00               	movlw	0
  2563   001464  1414               	andwf	(___xxtofl@arg+1)^0,w,c
  2564   001466  6E0E               	movwf	(??___xxtofl+1)^0,c
  2565   001468  0E00               	movlw	0
  2566   00146A  1415               	andwf	(___xxtofl@arg+2)^0,w,c
  2567   00146C  6E0F               	movwf	(??___xxtofl+2)^0,c
  2568   00146E  0EFE               	movlw	254
  2569   001470  1416               	andwf	(___xxtofl@arg+3)^0,w,c
  2570   001472  6E10               	movwf	(??___xxtofl+3)^0,c
  2571   001474  500D               	movf	??___xxtofl^0,w,c
  2572   001476  100E               	iorwf	(??___xxtofl+1)^0,w,c
  2573   001478  100F               	iorwf	(??___xxtofl+2)^0,w,c
  2574   00147A  1010               	iorwf	(??___xxtofl+3)^0,w,c
  2575   00147C  A4D8               	btfss	status,2,c
  2576   00147E  EF43  F00A         	goto	u3221
  2577   001482  EF45  F00A         	goto	u3220
  2578   001486                     u3221:
  2579   001486  EF28  F00A         	goto	l3662
  2580   00148A                     u3220:
  2581   00148A  EF53  F00A         	goto	l1375
  2582   00148E                     l3666:
  2583   00148E  2A12               	incf	___xxtofl@exp^0,f,c
  2584   001490  0E01               	movlw	1
  2585   001492  2613               	addwf	___xxtofl@arg^0,f,c
  2586   001494  0E00               	movlw	0
  2587   001496  2214               	addwfc	(___xxtofl@arg+1)^0,f,c
  2588   001498  2215               	addwfc	(___xxtofl@arg+2)^0,f,c
  2589   00149A  2216               	addwfc	(___xxtofl@arg+3)^0,f,c
  2590   00149C  90D8               	bcf	status,0,c
  2591   00149E  3216               	rrcf	(___xxtofl@arg+3)^0,f,c
  2592   0014A0  3215               	rrcf	(___xxtofl@arg+2)^0,f,c
  2593   0014A2  3214               	rrcf	(___xxtofl@arg+1)^0,f,c
  2594   0014A4  3213               	rrcf	___xxtofl@arg^0,f,c
  2595   0014A6                     l1375:
  2596   0014A6  0E00               	movlw	0
  2597   0014A8  1413               	andwf	___xxtofl@arg^0,w,c
  2598   0014AA  6E0D               	movwf	??___xxtofl^0,c
  2599   0014AC  0E00               	movlw	0
  2600   0014AE  1414               	andwf	(___xxtofl@arg+1)^0,w,c
  2601   0014B0  6E0E               	movwf	(??___xxtofl+1)^0,c
  2602   0014B2  0E00               	movlw	0
  2603   0014B4  1415               	andwf	(___xxtofl@arg+2)^0,w,c
  2604   0014B6  6E0F               	movwf	(??___xxtofl+2)^0,c
  2605   0014B8  0EFF               	movlw	255
  2606   0014BA  1416               	andwf	(___xxtofl@arg+3)^0,w,c
  2607   0014BC  6E10               	movwf	(??___xxtofl+3)^0,c
  2608   0014BE  500D               	movf	??___xxtofl^0,w,c
  2609   0014C0  100E               	iorwf	(??___xxtofl+1)^0,w,c
  2610   0014C2  100F               	iorwf	(??___xxtofl+2)^0,w,c
  2611   0014C4  1010               	iorwf	(??___xxtofl+3)^0,w,c
  2612   0014C6  A4D8               	btfss	status,2,c
  2613   0014C8  EF68  F00A         	goto	u3231
  2614   0014CC  EF6A  F00A         	goto	u3230
  2615   0014D0                     u3231:
  2616   0014D0  EF47  F00A         	goto	l3666
  2617   0014D4                     u3230:
  2618   0014D4  EF72  F00A         	goto	l3674
  2619   0014D8                     l3672:
  2620   0014D8  0612               	decf	___xxtofl@exp^0,f,c
  2621   0014DA  90D8               	bcf	status,0,c
  2622   0014DC  3613               	rlcf	___xxtofl@arg^0,f,c
  2623   0014DE  3614               	rlcf	(___xxtofl@arg+1)^0,f,c
  2624   0014E0  3615               	rlcf	(___xxtofl@arg+2)^0,f,c
  2625   0014E2  3616               	rlcf	(___xxtofl@arg+3)^0,f,c
  2626   0014E4                     l3674:
  2627   0014E4  BE15               	btfsc	(___xxtofl@arg+2)^0,7,c
  2628   0014E6  EF77  F00A         	goto	u3241
  2629   0014EA  EF79  F00A         	goto	u3240
  2630   0014EE                     u3241:
  2631   0014EE  EF81  F00A         	goto	l1382
  2632   0014F2                     u3240:
  2633   0014F2  0E02               	movlw	2
  2634   0014F4  6012               	cpfslt	___xxtofl@exp^0,c
  2635   0014F6  EF7F  F00A         	goto	u3251
  2636   0014FA  EF81  F00A         	goto	u3250
  2637   0014FE                     u3251:
  2638   0014FE  EF6C  F00A         	goto	l3672
  2639   001502                     u3250:
  2640   001502                     l1382:
  2641   001502  B012               	btfsc	___xxtofl@exp^0,0,c
  2642   001504  EF86  F00A         	goto	u3261
  2643   001508  EF88  F00A         	goto	u3260
  2644   00150C                     u3261:
  2645   00150C  EF89  F00A         	goto	l3680
  2646   001510                     u3260:
  2647   001510  9E15               	bcf	(___xxtofl@arg+2)^0,7,c
  2648   001512                     l3680:
  2649   001512  90D8               	bcf	status,0,c
  2650   001514  3212               	rrcf	___xxtofl@exp^0,f,c
  2651   001516  C012  F00D         	movff	___xxtofl@exp,??___xxtofl
  2652   00151A  6A0E               	clrf	(??___xxtofl+1)^0,c
  2653   00151C  6A0F               	clrf	(??___xxtofl+2)^0,c
  2654   00151E  6A10               	clrf	(??___xxtofl+3)^0,c
  2655   001520  C00D  F010         	movff	??___xxtofl,??___xxtofl+3
  2656   001524  6A0F               	clrf	(??___xxtofl+2)^0,c
  2657   001526  6A0E               	clrf	(??___xxtofl+1)^0,c
  2658   001528  6A0D               	clrf	??___xxtofl^0,c
  2659   00152A  500D               	movf	??___xxtofl^0,w,c
  2660   00152C  1213               	iorwf	___xxtofl@arg^0,f,c
  2661   00152E  500E               	movf	(??___xxtofl+1)^0,w,c
  2662   001530  1214               	iorwf	(___xxtofl@arg+1)^0,f,c
  2663   001532  500F               	movf	(??___xxtofl+2)^0,w,c
  2664   001534  1215               	iorwf	(___xxtofl@arg+2)^0,f,c
  2665   001536  5010               	movf	(??___xxtofl+3)^0,w,c
  2666   001538  1216               	iorwf	(___xxtofl@arg+3)^0,f,c
  2667   00153A  5011               	movf	___xxtofl@sign^0,w,c
  2668   00153C  B4D8               	btfsc	status,2,c
  2669   00153E  EFA3  F00A         	goto	u3271
  2670   001542  EFA5  F00A         	goto	u3270
  2671   001546                     u3271:
  2672   001546  EFAD  F00A         	goto	l3690
  2673   00154A                     u3270:
  2674   00154A  BE0C               	btfsc	(___xxtofl@val+3)^0,7,c
  2675   00154C  EFAC  F00A         	goto	u3280
  2676   001550  EFAA  F00A         	goto	u3281
  2677   001554                     u3281:
  2678   001554  EFAD  F00A         	goto	l3690
  2679   001558                     u3280:
  2680   001558  8E16               	bsf	(___xxtofl@arg+3)^0,7,c
  2681   00155A                     l3690:
  2682   00155A  C013  F009         	movff	___xxtofl@arg,?___xxtofl
  2683   00155E  C014  F00A         	movff	___xxtofl@arg+1,?___xxtofl+1
  2684   001562  C015  F00B         	movff	___xxtofl@arg+2,?___xxtofl+2
  2685   001566  C016  F00C         	movff	___xxtofl@arg+3,?___xxtofl+3
  2686   00156A                     l1371:
  2687   00156A  0012               	return		;funcret
  2688   00156C                     __end_of___xxtofl:
  2689                           	callstack 0
  2690                           
  2691 ;; *************** function ___fltol *****************
  2692 ;; Defined at:
  2693 ;;		line 43 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\fltol.c"
  2694 ;; Parameters:    Size  Location     Type
  2695 ;;  f1              4   72[COMRAM] unsigned char 
  2696 ;; Auto vars:     Size  Location     Type
  2697 ;;  exp1            1   77[COMRAM] unsigned char 
  2698 ;;  sign1           1   76[COMRAM] unsigned char 
  2699 ;; Return value:  Size  Location     Type
  2700 ;;                  4   72[COMRAM] long 
  2701 ;; Registers used:
  2702 ;;		wreg, status,2, status,0
  2703 ;; Tracked objects:
  2704 ;;		On entry : 0/0
  2705 ;;		On exit  : 0/0
  2706 ;;		Unchanged: 0/0
  2707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2708 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2709 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2710 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2711 ;;      Totals:         6       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2712 ;;Total ram usage:       10 bytes
  2713 ;; Hardware stack levels used: 1
  2714 ;; Hardware stack levels required when called: 7
  2715 ;; This function calls:
  2716 ;;		Nothing
  2717 ;; This function is called by:
  2718 ;;		_detect_color
  2719 ;; This function uses a non-reentrant model
  2720 ;;
  2721                           
  2722                           	psect	text4
  2723   0016D8                     __ptext4:
  2724                           	callstack 0
  2725   0016D8                     ___fltol:
  2726                           	callstack 22
  2727   0016D8  344B               	rlcf	(___fltol@f1+2)^0,w,c
  2728   0016DA  344C               	rlcf	(___fltol@f1+3)^0,w,c
  2729   0016DC  6E4E               	movwf	___fltol@exp1^0,c
  2730   0016DE  504E               	movf	___fltol@exp1^0,w,c
  2731   0016E0  A4D8               	btfss	status,2,c
  2732   0016E2  EF75  F00B         	goto	u3991
  2733   0016E6  EF77  F00B         	goto	u3990
  2734   0016EA                     u3991:
  2735   0016EA  EF81  F00B         	goto	l4100
  2736   0016EE                     u3990:
  2737   0016EE                     l4096:
  2738   0016EE  0E00               	movlw	0
  2739   0016F0  6E49               	movwf	?___fltol^0,c
  2740   0016F2  0E00               	movlw	0
  2741   0016F4  6E4A               	movwf	(?___fltol+1)^0,c
  2742   0016F6  0E00               	movlw	0
  2743   0016F8  6E4B               	movwf	(?___fltol+2)^0,c
  2744   0016FA  0E00               	movlw	0
  2745   0016FC  6E4C               	movwf	(?___fltol+3)^0,c
  2746   0016FE  EFEF  F00B         	goto	l1010
  2747   001702                     l4100:
  2748   001702  C049  F09F         	movff	___fltol@f1,??___fltol
  2749   001706  C04A  F0A0         	movff	___fltol@f1+1,??___fltol+1
  2750   00170A  C04B  F0A1         	movff	___fltol@f1+2,??___fltol+2
  2751   00170E  C04C  F0A2         	movff	___fltol@f1+3,??___fltol+3
  2752   001712  0E20               	movlw	32
  2753   001714  EF92  F00B         	goto	u4000
  2754   001718                     u4005:
  2755   001718  0100               	movlb	0	; () banked
  2756   00171A  90D8               	bcf	status,0,c
  2757   00171C  33A2               	rrcf	(??___fltol+3)& (0+255),f,b
  2758   00171E  33A1               	rrcf	(??___fltol+2)& (0+255),f,b
  2759   001720  33A0               	rrcf	(??___fltol+1)& (0+255),f,b
  2760   001722  339F               	rrcf	??___fltol& (0+255),f,b
  2761   001724                     u4000:
  2762   001724  2EE8               	decfsz	wreg,f,c
  2763   001726  EF8C  F00B         	goto	u4005
  2764   00172A  519F               	movf	??___fltol& (0+255),w,b
  2765   00172C  6E4D               	movwf	___fltol@sign1^0,c
  2766   00172E                     
  2767                           ; BSR set to: 0
  2768   00172E  8E4B               	bsf	(___fltol@f1+2)^0,7,c
  2769   001730                     
  2770                           ; BSR set to: 0
  2771   001730  0EFF               	movlw	255
  2772   001732  1649               	andwf	___fltol@f1^0,f,c
  2773   001734  0EFF               	movlw	255
  2774   001736  164A               	andwf	(___fltol@f1+1)^0,f,c
  2775   001738  0EFF               	movlw	255
  2776   00173A  164B               	andwf	(___fltol@f1+2)^0,f,c
  2777   00173C  0E00               	movlw	0
  2778   00173E  164C               	andwf	(___fltol@f1+3)^0,f,c
  2779   001740                     
  2780                           ; BSR set to: 0
  2781   001740  0E96               	movlw	150
  2782   001742  5E4E               	subwf	___fltol@exp1^0,f,c
  2783   001744                     
  2784                           ; BSR set to: 0
  2785   001744  BE4E               	btfsc	___fltol@exp1^0,7,c
  2786   001746  EFA9  F00B         	goto	u4010
  2787   00174A  EFA7  F00B         	goto	u4011
  2788   00174E                     u4011:
  2789   00174E  EFBF  F00B         	goto	l4120
  2790   001752                     u4010:
  2791   001752                     
  2792                           ; BSR set to: 0
  2793   001752  504E               	movf	___fltol@exp1^0,w,c
  2794   001754  0A80               	xorlw	128
  2795   001756  0F97               	addlw	151
  2796   001758  B0D8               	btfsc	status,0,c
  2797   00175A  EFB1  F00B         	goto	u4021
  2798   00175E  EFB3  F00B         	goto	u4020
  2799   001762                     u4021:
  2800   001762  EFB5  F00B         	goto	l4116
  2801   001766                     u4020:
  2802   001766  EF77  F00B         	goto	l4096
  2803   00176A                     l4116:
  2804   00176A  90D8               	bcf	status,0,c
  2805   00176C  324C               	rrcf	(___fltol@f1+3)^0,f,c
  2806   00176E  324B               	rrcf	(___fltol@f1+2)^0,f,c
  2807   001770  324A               	rrcf	(___fltol@f1+1)^0,f,c
  2808   001772  3249               	rrcf	___fltol@f1^0,f,c
  2809   001774  3E4E               	incfsz	___fltol@exp1^0,f,c
  2810   001776  EFB5  F00B         	goto	l4116
  2811   00177A  EFD7  F00B         	goto	l4130
  2812   00177E                     l4120:
  2813                           
  2814                           ; BSR set to: 0
  2815   00177E  0E1F               	movlw	31
  2816   001780  644E               	cpfsgt	___fltol@exp1^0,c
  2817   001782  EFC5  F00B         	goto	u4031
  2818   001786  EFC7  F00B         	goto	u4030
  2819   00178A                     u4031:
  2820   00178A  EFCF  F00B         	goto	l4128
  2821   00178E                     u4030:
  2822   00178E  EF77  F00B         	goto	l4096
  2823   001792                     l4126:
  2824   001792  90D8               	bcf	status,0,c
  2825   001794  3649               	rlcf	___fltol@f1^0,f,c
  2826   001796  364A               	rlcf	(___fltol@f1+1)^0,f,c
  2827   001798  364B               	rlcf	(___fltol@f1+2)^0,f,c
  2828   00179A  364C               	rlcf	(___fltol@f1+3)^0,f,c
  2829   00179C  064E               	decf	___fltol@exp1^0,f,c
  2830   00179E                     l4128:
  2831   00179E  504E               	movf	___fltol@exp1^0,w,c
  2832   0017A0  A4D8               	btfss	status,2,c
  2833   0017A2  EFD5  F00B         	goto	u4041
  2834   0017A6  EFD7  F00B         	goto	u4040
  2835   0017AA                     u4041:
  2836   0017AA  EFC9  F00B         	goto	l4126
  2837   0017AE                     u4040:
  2838   0017AE                     l4130:
  2839   0017AE  504D               	movf	___fltol@sign1^0,w,c
  2840   0017B0  B4D8               	btfsc	status,2,c
  2841   0017B2  EFDD  F00B         	goto	u4051
  2842   0017B6  EFDF  F00B         	goto	u4050
  2843   0017BA                     u4051:
  2844   0017BA  EFE7  F00B         	goto	l4134
  2845   0017BE                     u4050:
  2846   0017BE  1E4C               	comf	(___fltol@f1+3)^0,f,c
  2847   0017C0  1E4B               	comf	(___fltol@f1+2)^0,f,c
  2848   0017C2  1E4A               	comf	(___fltol@f1+1)^0,f,c
  2849   0017C4  6C49               	negf	___fltol@f1^0,c
  2850   0017C6  0E00               	movlw	0
  2851   0017C8  224A               	addwfc	(___fltol@f1+1)^0,f,c
  2852   0017CA  224B               	addwfc	(___fltol@f1+2)^0,f,c
  2853   0017CC  224C               	addwfc	(___fltol@f1+3)^0,f,c
  2854   0017CE                     l4134:
  2855   0017CE  C049  F049         	movff	___fltol@f1,?___fltol
  2856   0017D2  C04A  F04A         	movff	___fltol@f1+1,?___fltol+1
  2857   0017D6  C04B  F04B         	movff	___fltol@f1+2,?___fltol+2
  2858   0017DA  C04C  F04C         	movff	___fltol@f1+3,?___fltol+3
  2859   0017DE                     l1010:
  2860   0017DE  0012               	return		;funcret
  2861   0017E0                     __end_of___fltol:
  2862                           	callstack 0
  2863                           
  2864 ;; *************** function ___flmul *****************
  2865 ;; Defined at:
  2866 ;;		line 8 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\sprcmul.c"
  2867 ;; Parameters:    Size  Location     Type
  2868 ;;  b               4   47[COMRAM] long 
  2869 ;;  a               4   51[COMRAM] long 
  2870 ;; Auto vars:     Size  Location     Type
  2871 ;;  prod            4   66[COMRAM] struct .
  2872 ;;  grs             4   60[COMRAM] unsigned long 
  2873 ;;  temp            2   70[COMRAM] struct .
  2874 ;;  bexp            1   65[COMRAM] unsigned char 
  2875 ;;  aexp            1   64[COMRAM] unsigned char 
  2876 ;;  sign            1   59[COMRAM] unsigned char 
  2877 ;; Return value:  Size  Location     Type
  2878 ;;                  4   47[COMRAM] unsigned char 
  2879 ;; Registers used:
  2880 ;;		wreg, status,2, status,0, prodl, prodh
  2881 ;; Tracked objects:
  2882 ;;		On entry : 0/0
  2883 ;;		On exit  : 0/0
  2884 ;;		Unchanged: 0/0
  2885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2886 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2887 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2888 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2889 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2890 ;;Total ram usage:       25 bytes
  2891 ;; Hardware stack levels used: 1
  2892 ;; Hardware stack levels required when called: 7
  2893 ;; This function calls:
  2894 ;;		Nothing
  2895 ;; This function is called by:
  2896 ;;		_detect_color
  2897 ;; This function uses a non-reentrant model
  2898 ;;
  2899                           
  2900                           	psect	text5
  2901   00067C                     __ptext5:
  2902                           	callstack 0
  2903   00067C                     ___flmul:
  2904                           	callstack 22
  2905   00067C  5033               	movf	(___flmul@b+3)^0,w,c
  2906   00067E  0B80               	andlw	128
  2907   000680  6E3C               	movwf	___flmul@sign^0,c
  2908   000682  5033               	movf	(___flmul@b+3)^0,w,c
  2909   000684  2433               	addwf	(___flmul@b+3)^0,w,c
  2910   000686  6E42               	movwf	___flmul@bexp^0,c
  2911   000688  AE32               	btfss	(___flmul@b+2)^0,7,c
  2912   00068A  EF49  F003         	goto	u2931
  2913   00068E  EF4B  F003         	goto	u2930
  2914   000692                     u2931:
  2915   000692  EF4C  F003         	goto	l3480
  2916   000696                     u2930:
  2917   000696  8042               	bsf	___flmul@bexp^0,0,c
  2918   000698                     l3480:
  2919   000698  5042               	movf	___flmul@bexp^0,w,c
  2920   00069A  B4D8               	btfsc	status,2,c
  2921   00069C  EF52  F003         	goto	u2941
  2922   0006A0  EF54  F003         	goto	u2940
  2923   0006A4                     u2941:
  2924   0006A4  EF67  F003         	goto	l3488
  2925   0006A8                     u2940:
  2926   0006A8  2842               	incf	___flmul@bexp^0,w,c
  2927   0006AA  A4D8               	btfss	status,2,c
  2928   0006AC  EF5A  F003         	goto	u2951
  2929   0006B0  EF5C  F003         	goto	u2950
  2930   0006B4                     u2951:
  2931   0006B4  EF64  F003         	goto	l3486
  2932   0006B8                     u2950:
  2933   0006B8  0E00               	movlw	0
  2934   0006BA  6E30               	movwf	___flmul@b^0,c
  2935   0006BC  0E00               	movlw	0
  2936   0006BE  6E31               	movwf	(___flmul@b+1)^0,c
  2937   0006C0  0E00               	movlw	0
  2938   0006C2  6E32               	movwf	(___flmul@b+2)^0,c
  2939   0006C4  0E00               	movlw	0
  2940   0006C6  6E33               	movwf	(___flmul@b+3)^0,c
  2941   0006C8                     l3486:
  2942   0006C8  8E32               	bsf	(___flmul@b+2)^0,7,c
  2943   0006CA  EF6F  F003         	goto	l3490
  2944   0006CE                     l3488:
  2945   0006CE  0E00               	movlw	0
  2946   0006D0  6E30               	movwf	___flmul@b^0,c
  2947   0006D2  0E00               	movlw	0
  2948   0006D4  6E31               	movwf	(___flmul@b+1)^0,c
  2949   0006D6  0E00               	movlw	0
  2950   0006D8  6E32               	movwf	(___flmul@b+2)^0,c
  2951   0006DA  0E00               	movlw	0
  2952   0006DC  6E33               	movwf	(___flmul@b+3)^0,c
  2953   0006DE                     l3490:
  2954   0006DE  5037               	movf	(___flmul@a+3)^0,w,c
  2955   0006E0  0B80               	andlw	128
  2956   0006E2  1A3C               	xorwf	___flmul@sign^0,f,c
  2957   0006E4  5037               	movf	(___flmul@a+3)^0,w,c
  2958   0006E6  2437               	addwf	(___flmul@a+3)^0,w,c
  2959   0006E8  6E41               	movwf	___flmul@aexp^0,c
  2960   0006EA  AE36               	btfss	(___flmul@a+2)^0,7,c
  2961   0006EC  EF7A  F003         	goto	u2961
  2962   0006F0  EF7C  F003         	goto	u2960
  2963   0006F4                     u2961:
  2964   0006F4  EF7D  F003         	goto	l3498
  2965   0006F8                     u2960:
  2966   0006F8  8041               	bsf	___flmul@aexp^0,0,c
  2967   0006FA                     l3498:
  2968   0006FA  5041               	movf	___flmul@aexp^0,w,c
  2969   0006FC  B4D8               	btfsc	status,2,c
  2970   0006FE  EF83  F003         	goto	u2971
  2971   000702  EF85  F003         	goto	u2970
  2972   000706                     u2971:
  2973   000706  EF98  F003         	goto	l3506
  2974   00070A                     u2970:
  2975   00070A  2841               	incf	___flmul@aexp^0,w,c
  2976   00070C  A4D8               	btfss	status,2,c
  2977   00070E  EF8B  F003         	goto	u2981
  2978   000712  EF8D  F003         	goto	u2980
  2979   000716                     u2981:
  2980   000716  EF95  F003         	goto	l3504
  2981   00071A                     u2980:
  2982   00071A  0E00               	movlw	0
  2983   00071C  6E34               	movwf	___flmul@a^0,c
  2984   00071E  0E00               	movlw	0
  2985   000720  6E35               	movwf	(___flmul@a+1)^0,c
  2986   000722  0E00               	movlw	0
  2987   000724  6E36               	movwf	(___flmul@a+2)^0,c
  2988   000726  0E00               	movlw	0
  2989   000728  6E37               	movwf	(___flmul@a+3)^0,c
  2990   00072A                     l3504:
  2991   00072A  8E36               	bsf	(___flmul@a+2)^0,7,c
  2992   00072C  EFA0  F003         	goto	l1327
  2993   000730                     l3506:
  2994   000730  0E00               	movlw	0
  2995   000732  6E34               	movwf	___flmul@a^0,c
  2996   000734  0E00               	movlw	0
  2997   000736  6E35               	movwf	(___flmul@a+1)^0,c
  2998   000738  0E00               	movlw	0
  2999   00073A  6E36               	movwf	(___flmul@a+2)^0,c
  3000   00073C  0E00               	movlw	0
  3001   00073E  6E37               	movwf	(___flmul@a+3)^0,c
  3002   000740                     l1327:
  3003   000740  5041               	movf	___flmul@aexp^0,w,c
  3004   000742  B4D8               	btfsc	status,2,c
  3005   000744  EFA6  F003         	goto	u2991
  3006   000748  EFA8  F003         	goto	u2990
  3007   00074C                     u2991:
  3008   00074C  EFB0  F003         	goto	l3510
  3009   000750                     u2990:
  3010   000750  5042               	movf	___flmul@bexp^0,w,c
  3011   000752  A4D8               	btfss	status,2,c
  3012   000754  EFAE  F003         	goto	u3001
  3013   000758  EFB0  F003         	goto	u3000
  3014   00075C                     u3001:
  3015   00075C  EFBA  F003         	goto	l3514
  3016   000760                     u3000:
  3017   000760                     l3510:
  3018   000760  0E00               	movlw	0
  3019   000762  6E30               	movwf	?___flmul^0,c
  3020   000764  0E00               	movlw	0
  3021   000766  6E31               	movwf	(?___flmul+1)^0,c
  3022   000768  0E00               	movlw	0
  3023   00076A  6E32               	movwf	(?___flmul+2)^0,c
  3024   00076C  0E00               	movlw	0
  3025   00076E  6E33               	movwf	(?___flmul+3)^0,c
  3026   000770  EF52  F005         	goto	l1331
  3027   000774                     l3514:
  3028   000774  5036               	movf	(___flmul@a+2)^0,w,c
  3029   000776  0230               	mulwf	___flmul@b^0,c
  3030   000778  CFF3 F047          	movff	prodl,___flmul@temp
  3031   00077C  CFF4 F048          	movff	prodh,___flmul@temp+1
  3032   000780  5047               	movf	___flmul@temp^0,w,c
  3033   000782  6E3D               	movwf	___flmul@grs^0,c
  3034   000784  6A3E               	clrf	(___flmul@grs+1)^0,c
  3035   000786  6A3F               	clrf	(___flmul@grs+2)^0,c
  3036   000788  6A40               	clrf	(___flmul@grs+3)^0,c
  3037   00078A  5048               	movf	(___flmul@temp+1)^0,w,c
  3038   00078C  6E43               	movwf	___flmul@prod^0,c
  3039   00078E  6A44               	clrf	(___flmul@prod+1)^0,c
  3040   000790  6A45               	clrf	(___flmul@prod+2)^0,c
  3041   000792  6A46               	clrf	(___flmul@prod+3)^0,c
  3042   000794  5035               	movf	(___flmul@a+1)^0,w,c
  3043   000796  0231               	mulwf	(___flmul@b+1)^0,c
  3044   000798  CFF3 F047          	movff	prodl,___flmul@temp
  3045   00079C  CFF4 F048          	movff	prodh,___flmul@temp+1
  3046   0007A0  5047               	movf	___flmul@temp^0,w,c
  3047   0007A2  263D               	addwf	___flmul@grs^0,f,c
  3048   0007A4  0E00               	movlw	0
  3049   0007A6  223E               	addwfc	(___flmul@grs+1)^0,f,c
  3050   0007A8  223F               	addwfc	(___flmul@grs+2)^0,f,c
  3051   0007AA  2240               	addwfc	(___flmul@grs+3)^0,f,c
  3052   0007AC  5048               	movf	(___flmul@temp+1)^0,w,c
  3053   0007AE  2643               	addwf	___flmul@prod^0,f,c
  3054   0007B0  0E00               	movlw	0
  3055   0007B2  2244               	addwfc	(___flmul@prod+1)^0,f,c
  3056   0007B4  2245               	addwfc	(___flmul@prod+2)^0,f,c
  3057   0007B6  2246               	addwfc	(___flmul@prod+3)^0,f,c
  3058   0007B8  5034               	movf	___flmul@a^0,w,c
  3059   0007BA  0232               	mulwf	(___flmul@b+2)^0,c
  3060   0007BC  CFF3 F047          	movff	prodl,___flmul@temp
  3061   0007C0  CFF4 F048          	movff	prodh,___flmul@temp+1
  3062   0007C4  5047               	movf	___flmul@temp^0,w,c
  3063   0007C6  263D               	addwf	___flmul@grs^0,f,c
  3064   0007C8  0E00               	movlw	0
  3065   0007CA  223E               	addwfc	(___flmul@grs+1)^0,f,c
  3066   0007CC  223F               	addwfc	(___flmul@grs+2)^0,f,c
  3067   0007CE  2240               	addwfc	(___flmul@grs+3)^0,f,c
  3068   0007D0  5048               	movf	(___flmul@temp+1)^0,w,c
  3069   0007D2  2643               	addwf	___flmul@prod^0,f,c
  3070   0007D4  0E00               	movlw	0
  3071   0007D6  2244               	addwfc	(___flmul@prod+1)^0,f,c
  3072   0007D8  2245               	addwfc	(___flmul@prod+2)^0,f,c
  3073   0007DA  2246               	addwfc	(___flmul@prod+3)^0,f,c
  3074   0007DC  C03F  F040         	movff	___flmul@grs+2,___flmul@grs+3
  3075   0007E0  C03E  F03F         	movff	___flmul@grs+1,___flmul@grs+2
  3076   0007E4  C03D  F03E         	movff	___flmul@grs,___flmul@grs+1
  3077   0007E8  6A3D               	clrf	___flmul@grs^0,c
  3078   0007EA  5034               	movf	___flmul@a^0,w,c
  3079   0007EC  0231               	mulwf	(___flmul@b+1)^0,c
  3080   0007EE  CFF3 F047          	movff	prodl,___flmul@temp
  3081   0007F2  CFF4 F048          	movff	prodh,___flmul@temp+1
  3082   0007F6  5047               	movf	___flmul@temp^0,w,c
  3083   0007F8  263D               	addwf	___flmul@grs^0,f,c
  3084   0007FA  5048               	movf	(___flmul@temp+1)^0,w,c
  3085   0007FC  223E               	addwfc	(___flmul@grs+1)^0,f,c
  3086   0007FE  0E00               	movlw	0
  3087   000800  223F               	addwfc	(___flmul@grs+2)^0,f,c
  3088   000802  0E00               	movlw	0
  3089   000804  2240               	addwfc	(___flmul@grs+3)^0,f,c
  3090   000806  5035               	movf	(___flmul@a+1)^0,w,c
  3091   000808  0230               	mulwf	___flmul@b^0,c
  3092   00080A  CFF3 F047          	movff	prodl,___flmul@temp
  3093   00080E  CFF4 F048          	movff	prodh,___flmul@temp+1
  3094   000812  5047               	movf	___flmul@temp^0,w,c
  3095   000814  263D               	addwf	___flmul@grs^0,f,c
  3096   000816  5048               	movf	(___flmul@temp+1)^0,w,c
  3097   000818  223E               	addwfc	(___flmul@grs+1)^0,f,c
  3098   00081A  0E00               	movlw	0
  3099   00081C  223F               	addwfc	(___flmul@grs+2)^0,f,c
  3100   00081E  0E00               	movlw	0
  3101   000820  2240               	addwfc	(___flmul@grs+3)^0,f,c
  3102   000822  C03F  F040         	movff	___flmul@grs+2,___flmul@grs+3
  3103   000826  C03E  F03F         	movff	___flmul@grs+1,___flmul@grs+2
  3104   00082A  C03D  F03E         	movff	___flmul@grs,___flmul@grs+1
  3105   00082E  6A3D               	clrf	___flmul@grs^0,c
  3106   000830  5034               	movf	___flmul@a^0,w,c
  3107   000832  0230               	mulwf	___flmul@b^0,c
  3108   000834  CFF3 F047          	movff	prodl,___flmul@temp
  3109   000838  CFF4 F048          	movff	prodh,___flmul@temp+1
  3110   00083C  5047               	movf	___flmul@temp^0,w,c
  3111   00083E  263D               	addwf	___flmul@grs^0,f,c
  3112   000840  5048               	movf	(___flmul@temp+1)^0,w,c
  3113   000842  223E               	addwfc	(___flmul@grs+1)^0,f,c
  3114   000844  0E00               	movlw	0
  3115   000846  223F               	addwfc	(___flmul@grs+2)^0,f,c
  3116   000848  0E00               	movlw	0
  3117   00084A  2240               	addwfc	(___flmul@grs+3)^0,f,c
  3118   00084C  5036               	movf	(___flmul@a+2)^0,w,c
  3119   00084E  0231               	mulwf	(___flmul@b+1)^0,c
  3120   000850  CFF3 F047          	movff	prodl,___flmul@temp
  3121   000854  CFF4 F048          	movff	prodh,___flmul@temp+1
  3122   000858  5047               	movf	___flmul@temp^0,w,c
  3123   00085A  2643               	addwf	___flmul@prod^0,f,c
  3124   00085C  5048               	movf	(___flmul@temp+1)^0,w,c
  3125   00085E  2244               	addwfc	(___flmul@prod+1)^0,f,c
  3126   000860  0E00               	movlw	0
  3127   000862  2245               	addwfc	(___flmul@prod+2)^0,f,c
  3128   000864  0E00               	movlw	0
  3129   000866  2246               	addwfc	(___flmul@prod+3)^0,f,c
  3130   000868  5035               	movf	(___flmul@a+1)^0,w,c
  3131   00086A  0232               	mulwf	(___flmul@b+2)^0,c
  3132   00086C  CFF3 F047          	movff	prodl,___flmul@temp
  3133   000870  CFF4 F048          	movff	prodh,___flmul@temp+1
  3134   000874  5047               	movf	___flmul@temp^0,w,c
  3135   000876  2643               	addwf	___flmul@prod^0,f,c
  3136   000878  5048               	movf	(___flmul@temp+1)^0,w,c
  3137   00087A  2244               	addwfc	(___flmul@prod+1)^0,f,c
  3138   00087C  0E00               	movlw	0
  3139   00087E  2245               	addwfc	(___flmul@prod+2)^0,f,c
  3140   000880  0E00               	movlw	0
  3141   000882  2246               	addwfc	(___flmul@prod+3)^0,f,c
  3142   000884  5036               	movf	(___flmul@a+2)^0,w,c
  3143   000886  0232               	mulwf	(___flmul@b+2)^0,c
  3144   000888  CFF3 F047          	movff	prodl,___flmul@temp
  3145   00088C  CFF4 F048          	movff	prodh,___flmul@temp+1
  3146   000890  5047               	movf	___flmul@temp^0,w,c
  3147   000892  6E38               	movwf	??___flmul^0,c
  3148   000894  5048               	movf	(___flmul@temp+1)^0,w,c
  3149   000896  6E39               	movwf	(??___flmul+1)^0,c
  3150   000898  6A3A               	clrf	(??___flmul+2)^0,c
  3151   00089A  6A3B               	clrf	(??___flmul+3)^0,c
  3152   00089C  C03A  F03B         	movff	??___flmul+2,??___flmul+3
  3153   0008A0  C039  F03A         	movff	??___flmul+1,??___flmul+2
  3154   0008A4  C038  F039         	movff	??___flmul,??___flmul+1
  3155   0008A8  6A38               	clrf	??___flmul^0,c
  3156   0008AA  5038               	movf	??___flmul^0,w,c
  3157   0008AC  2643               	addwf	___flmul@prod^0,f,c
  3158   0008AE  5039               	movf	(??___flmul+1)^0,w,c
  3159   0008B0  2244               	addwfc	(___flmul@prod+1)^0,f,c
  3160   0008B2  503A               	movf	(??___flmul+2)^0,w,c
  3161   0008B4  2245               	addwfc	(___flmul@prod+2)^0,f,c
  3162   0008B6  503B               	movf	(??___flmul+3)^0,w,c
  3163   0008B8  2246               	addwfc	(___flmul@prod+3)^0,f,c
  3164   0008BA  C03D  F038         	movff	___flmul@grs,??___flmul
  3165   0008BE  C03E  F039         	movff	___flmul@grs+1,??___flmul+1
  3166   0008C2  C03F  F03A         	movff	___flmul@grs+2,??___flmul+2
  3167   0008C6  C040  F03B         	movff	___flmul@grs+3,??___flmul+3
  3168   0008CA  0E19               	movlw	25
  3169   0008CC  EF6D  F004         	goto	u3010
  3170   0008D0                     u3015:
  3171   0008D0  90D8               	bcf	status,0,c
  3172   0008D2  323B               	rrcf	(??___flmul+3)^0,f,c
  3173   0008D4  323A               	rrcf	(??___flmul+2)^0,f,c
  3174   0008D6  3239               	rrcf	(??___flmul+1)^0,f,c
  3175   0008D8  3238               	rrcf	??___flmul^0,f,c
  3176   0008DA                     u3010:
  3177   0008DA  2EE8               	decfsz	wreg,f,c
  3178   0008DC  EF68  F004         	goto	u3015
  3179   0008E0  5038               	movf	??___flmul^0,w,c
  3180   0008E2  2643               	addwf	___flmul@prod^0,f,c
  3181   0008E4  5039               	movf	(??___flmul+1)^0,w,c
  3182   0008E6  2244               	addwfc	(___flmul@prod+1)^0,f,c
  3183   0008E8  503A               	movf	(??___flmul+2)^0,w,c
  3184   0008EA  2245               	addwfc	(___flmul@prod+2)^0,f,c
  3185   0008EC  503B               	movf	(??___flmul+3)^0,w,c
  3186   0008EE  2246               	addwfc	(___flmul@prod+3)^0,f,c
  3187   0008F0  C03F  F040         	movff	___flmul@grs+2,___flmul@grs+3
  3188   0008F4  C03E  F03F         	movff	___flmul@grs+1,___flmul@grs+2
  3189   0008F8  C03D  F03E         	movff	___flmul@grs,___flmul@grs+1
  3190   0008FC  6A3D               	clrf	___flmul@grs^0,c
  3191   0008FE  5041               	movf	___flmul@aexp^0,w,c
  3192   000900  C042  F038         	movff	___flmul@bexp,??___flmul
  3193   000904  6A39               	clrf	(??___flmul+1)^0,c
  3194   000906  2638               	addwf	??___flmul^0,f,c
  3195   000908  0E00               	movlw	0
  3196   00090A  2239               	addwfc	(??___flmul+1)^0,f,c
  3197   00090C  0E82               	movlw	130
  3198   00090E  2438               	addwf	??___flmul^0,w,c
  3199   000910  6E47               	movwf	___flmul@temp^0,c
  3200   000912  0EFF               	movlw	255
  3201   000914  2039               	addwfc	(??___flmul+1)^0,w,c
  3202   000916  6E48               	movwf	(___flmul@temp+1)^0,c
  3203   000918  EFA3  F004         	goto	l3562
  3204   00091C                     l3556:
  3205   00091C  90D8               	bcf	status,0,c
  3206   00091E  3643               	rlcf	___flmul@prod^0,f,c
  3207   000920  3644               	rlcf	(___flmul@prod+1)^0,f,c
  3208   000922  3645               	rlcf	(___flmul@prod+2)^0,f,c
  3209   000924  3646               	rlcf	(___flmul@prod+3)^0,f,c
  3210   000926  AE40               	btfss	(___flmul@grs+3)^0,7,c
  3211   000928  EF98  F004         	goto	u3021
  3212   00092C  EF9A  F004         	goto	u3020
  3213   000930                     u3021:
  3214   000930  EF9B  F004         	goto	l1334
  3215   000934                     u3020:
  3216   000934  8043               	bsf	___flmul@prod^0,0,c
  3217   000936                     l1334:
  3218   000936  90D8               	bcf	status,0,c
  3219   000938  363D               	rlcf	___flmul@grs^0,f,c
  3220   00093A  363E               	rlcf	(___flmul@grs+1)^0,f,c
  3221   00093C  363F               	rlcf	(___flmul@grs+2)^0,f,c
  3222   00093E  3640               	rlcf	(___flmul@grs+3)^0,f,c
  3223   000940  0647               	decf	___flmul@temp^0,f,c
  3224   000942  A0D8               	btfss	status,0,c
  3225   000944  0648               	decf	(___flmul@temp+1)^0,f,c
  3226   000946                     l3562:
  3227   000946  AE45               	btfss	(___flmul@prod+2)^0,7,c
  3228   000948  EFA8  F004         	goto	u3031
  3229   00094C  EFAA  F004         	goto	u3030
  3230   000950                     u3031:
  3231   000950  EF8E  F004         	goto	l3556
  3232   000954                     u3030:
  3233   000954  0E00               	movlw	0
  3234   000956  6E41               	movwf	___flmul@aexp^0,c
  3235   000958  AE40               	btfss	(___flmul@grs+3)^0,7,c
  3236   00095A  EFB1  F004         	goto	u3041
  3237   00095E  EFB3  F004         	goto	u3040
  3238   000962                     u3041:
  3239   000962  EFD7  F004         	goto	l1336
  3240   000966                     u3040:
  3241   000966  0EFF               	movlw	255
  3242   000968  143D               	andwf	___flmul@grs^0,w,c
  3243   00096A  6E38               	movwf	??___flmul^0,c
  3244   00096C  0EFF               	movlw	255
  3245   00096E  143E               	andwf	(___flmul@grs+1)^0,w,c
  3246   000970  6E39               	movwf	(??___flmul+1)^0,c
  3247   000972  0EFF               	movlw	255
  3248   000974  143F               	andwf	(___flmul@grs+2)^0,w,c
  3249   000976  6E3A               	movwf	(??___flmul+2)^0,c
  3250   000978  0E7F               	movlw	127
  3251   00097A  1440               	andwf	(___flmul@grs+3)^0,w,c
  3252   00097C  6E3B               	movwf	(??___flmul+3)^0,c
  3253   00097E  5038               	movf	??___flmul^0,w,c
  3254   000980  1039               	iorwf	(??___flmul+1)^0,w,c
  3255   000982  103A               	iorwf	(??___flmul+2)^0,w,c
  3256   000984  103B               	iorwf	(??___flmul+3)^0,w,c
  3257   000986  B4D8               	btfsc	status,2,c
  3258   000988  EFC8  F004         	goto	u3051
  3259   00098C  EFCA  F004         	goto	u3050
  3260   000990                     u3051:
  3261   000990  EFCE  F004         	goto	l1337
  3262   000994                     u3050:
  3263   000994                     l3570:
  3264   000994  0E01               	movlw	1
  3265   000996  6E41               	movwf	___flmul@aexp^0,c
  3266   000998  EFD7  F004         	goto	l1336
  3267   00099C                     l1337:
  3268   00099C  A043               	btfss	___flmul@prod^0,0,c
  3269   00099E  EFD3  F004         	goto	u3061
  3270   0009A2  EFD5  F004         	goto	u3060
  3271   0009A6                     u3061:
  3272   0009A6  EFD7  F004         	goto	l1336
  3273   0009AA                     u3060:
  3274   0009AA  EFCA  F004         	goto	l3570
  3275   0009AE                     l1336:
  3276   0009AE  5041               	movf	___flmul@aexp^0,w,c
  3277   0009B0  B4D8               	btfsc	status,2,c
  3278   0009B2  EFDD  F004         	goto	u3071
  3279   0009B6  EFDF  F004         	goto	u3070
  3280   0009BA                     u3071:
  3281   0009BA  EF03  F005         	goto	l3582
  3282   0009BE                     u3070:
  3283   0009BE  0E01               	movlw	1
  3284   0009C0  2643               	addwf	___flmul@prod^0,f,c
  3285   0009C2  0E00               	movlw	0
  3286   0009C4  2244               	addwfc	(___flmul@prod+1)^0,f,c
  3287   0009C6  2245               	addwfc	(___flmul@prod+2)^0,f,c
  3288   0009C8  2246               	addwfc	(___flmul@prod+3)^0,f,c
  3289   0009CA  A046               	btfss	(___flmul@prod+3)^0,0,c
  3290   0009CC  EFEA  F004         	goto	u3081
  3291   0009D0  EFEC  F004         	goto	u3080
  3292   0009D4                     u3081:
  3293   0009D4  EF03  F005         	goto	l3582
  3294   0009D8                     u3080:
  3295   0009D8  C043  F038         	movff	___flmul@prod,??___flmul
  3296   0009DC  C044  F039         	movff	___flmul@prod+1,??___flmul+1
  3297   0009E0  C045  F03A         	movff	___flmul@prod+2,??___flmul+2
  3298   0009E4  C046  F03B         	movff	___flmul@prod+3,??___flmul+3
  3299   0009E8  343B               	rlcf	(??___flmul+3)^0,w,c
  3300   0009EA  323B               	rrcf	(??___flmul+3)^0,f,c
  3301   0009EC  323A               	rrcf	(??___flmul+2)^0,f,c
  3302   0009EE  3239               	rrcf	(??___flmul+1)^0,f,c
  3303   0009F0  3238               	rrcf	??___flmul^0,f,c
  3304   0009F2  C038  F043         	movff	??___flmul,___flmul@prod
  3305   0009F6  C039  F044         	movff	??___flmul+1,___flmul@prod+1
  3306   0009FA  C03A  F045         	movff	??___flmul+2,___flmul@prod+2
  3307   0009FE  C03B  F046         	movff	??___flmul+3,___flmul@prod+3
  3308   000A02  4A47               	infsnz	___flmul@temp^0,f,c
  3309   000A04  2A48               	incf	(___flmul@temp+1)^0,f,c
  3310   000A06                     l3582:
  3311   000A06  BE48               	btfsc	(___flmul@temp+1)^0,7,c
  3312   000A08  EF0E  F005         	goto	u3091
  3313   000A0C  5048               	movf	(___flmul@temp+1)^0,w,c
  3314   000A0E  E108               	bnz	u3090
  3315   000A10  2847               	incf	___flmul@temp^0,w,c
  3316   000A12  A0D8               	btfss	status,0,c
  3317   000A14  EF0E  F005         	goto	u3091
  3318   000A18  EF10  F005         	goto	u3090
  3319   000A1C                     u3091:
  3320   000A1C  EF1A  F005         	goto	l3586
  3321   000A20                     u3090:
  3322   000A20  0E00               	movlw	0
  3323   000A22  6E43               	movwf	___flmul@prod^0,c
  3324   000A24  0E00               	movlw	0
  3325   000A26  6E44               	movwf	(___flmul@prod+1)^0,c
  3326   000A28  0E80               	movlw	128
  3327   000A2A  6E45               	movwf	(___flmul@prod+2)^0,c
  3328   000A2C  0E7F               	movlw	127
  3329   000A2E  6E46               	movwf	(___flmul@prod+3)^0,c
  3330   000A30  EF48  F005         	goto	l3598
  3331   000A34                     l3586:
  3332   000A34  BE48               	btfsc	(___flmul@temp+1)^0,7,c
  3333   000A36  EF27  F005         	goto	u3100
  3334   000A3A  5048               	movf	(___flmul@temp+1)^0,w,c
  3335   000A3C  E106               	bnz	u3101
  3336   000A3E  0447               	decf	___flmul@temp^0,w,c
  3337   000A40  B0D8               	btfsc	status,0,c
  3338   000A42  EF25  F005         	goto	u3101
  3339   000A46  EF27  F005         	goto	u3100
  3340   000A4A                     u3101:
  3341   000A4A  EF33  F005         	goto	l1344
  3342   000A4E                     u3100:
  3343   000A4E  0E00               	movlw	0
  3344   000A50  6E43               	movwf	___flmul@prod^0,c
  3345   000A52  0E00               	movlw	0
  3346   000A54  6E44               	movwf	(___flmul@prod+1)^0,c
  3347   000A56  0E00               	movlw	0
  3348   000A58  6E45               	movwf	(___flmul@prod+2)^0,c
  3349   000A5A  0E00               	movlw	0
  3350   000A5C  6E46               	movwf	(___flmul@prod+3)^0,c
  3351   000A5E  0E00               	movlw	0
  3352   000A60  6E3C               	movwf	___flmul@sign^0,c
  3353   000A62  EF48  F005         	goto	l3598
  3354   000A66                     l1344:
  3355   000A66  C047  F042         	movff	___flmul@temp,___flmul@bexp
  3356   000A6A  0EFF               	movlw	255
  3357   000A6C  1643               	andwf	___flmul@prod^0,f,c
  3358   000A6E  0EFF               	movlw	255
  3359   000A70  1644               	andwf	(___flmul@prod+1)^0,f,c
  3360   000A72  0E7F               	movlw	127
  3361   000A74  1645               	andwf	(___flmul@prod+2)^0,f,c
  3362   000A76  0E00               	movlw	0
  3363   000A78  1646               	andwf	(___flmul@prod+3)^0,f,c
  3364   000A7A  A042               	btfss	___flmul@bexp^0,0,c
  3365   000A7C  EF42  F005         	goto	u3111
  3366   000A80  EF44  F005         	goto	u3110
  3367   000A84                     u3111:
  3368   000A84  EF45  F005         	goto	l3596
  3369   000A88                     u3110:
  3370   000A88  8E45               	bsf	(___flmul@prod+2)^0,7,c
  3371   000A8A                     l3596:
  3372   000A8A  90D8               	bcf	status,0,c
  3373   000A8C  3042               	rrcf	___flmul@bexp^0,w,c
  3374   000A8E  6E46               	movwf	(___flmul@prod+3)^0,c
  3375   000A90                     l3598:
  3376   000A90  503C               	movf	___flmul@sign^0,w,c
  3377   000A92  1246               	iorwf	(___flmul@prod+3)^0,f,c
  3378   000A94  C043  F030         	movff	___flmul@prod,?___flmul
  3379   000A98  C044  F031         	movff	___flmul@prod+1,?___flmul+1
  3380   000A9C  C045  F032         	movff	___flmul@prod+2,?___flmul+2
  3381   000AA0  C046  F033         	movff	___flmul@prod+3,?___flmul+3
  3382   000AA4                     l1331:
  3383   000AA4  0012               	return		;funcret
  3384   000AA6                     __end_of___flmul:
  3385                           	callstack 0
  3386                           
  3387 ;; *************** function ___fldiv *****************
  3388 ;; Defined at:
  3389 ;;		line 11 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\sprcdiv.c"
  3390 ;; Parameters:    Size  Location     Type
  3391 ;;  b               4   22[COMRAM] unsigned char 
  3392 ;;  a               4   26[COMRAM] unsigned char 
  3393 ;; Auto vars:     Size  Location     Type
  3394 ;;  grs             4   41[COMRAM] unsigned long 
  3395 ;;  rem             4   34[COMRAM] unsigned long 
  3396 ;;  new_exp         2   39[COMRAM] short 
  3397 ;;  aexp            1   46[COMRAM] unsigned char 
  3398 ;;  bexp            1   45[COMRAM] unsigned char 
  3399 ;;  sign            1   38[COMRAM] unsigned char 
  3400 ;; Return value:  Size  Location     Type
  3401 ;;                  4   22[COMRAM] unsigned char 
  3402 ;; Registers used:
  3403 ;;		wreg, status,2, status,0
  3404 ;; Tracked objects:
  3405 ;;		On entry : 0/0
  3406 ;;		On exit  : 0/0
  3407 ;;		Unchanged: 0/0
  3408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3409 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3410 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3411 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3412 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3413 ;;Total ram usage:       25 bytes
  3414 ;; Hardware stack levels used: 1
  3415 ;; Hardware stack levels required when called: 7
  3416 ;; This function calls:
  3417 ;;		Nothing
  3418 ;; This function is called by:
  3419 ;;		_detect_color
  3420 ;; This function uses a non-reentrant model
  3421 ;;
  3422                           
  3423                           	psect	text6
  3424   000AA6                     __ptext6:
  3425                           	callstack 0
  3426   000AA6                     ___fldiv:
  3427                           	callstack 22
  3428   000AA6  501A               	movf	(___fldiv@b+3)^0,w,c
  3429   000AA8  0B80               	andlw	128
  3430   000AAA  6E27               	movwf	___fldiv@sign^0,c
  3431   000AAC  501A               	movf	(___fldiv@b+3)^0,w,c
  3432   000AAE  241A               	addwf	(___fldiv@b+3)^0,w,c
  3433   000AB0  6E2E               	movwf	___fldiv@bexp^0,c
  3434   000AB2  AE19               	btfss	(___fldiv@b+2)^0,7,c
  3435   000AB4  EF5E  F005         	goto	u2701
  3436   000AB8  EF60  F005         	goto	u2700
  3437   000ABC                     u2701:
  3438   000ABC  EF61  F005         	goto	l3342
  3439   000AC0                     u2700:
  3440   000AC0  802E               	bsf	___fldiv@bexp^0,0,c
  3441   000AC2                     l3342:
  3442   000AC2  502E               	movf	___fldiv@bexp^0,w,c
  3443   000AC4  B4D8               	btfsc	status,2,c
  3444   000AC6  EF67  F005         	goto	u2711
  3445   000ACA  EF69  F005         	goto	u2710
  3446   000ACE                     u2711:
  3447   000ACE  EF7E  F005         	goto	l3352
  3448   000AD2                     u2710:
  3449   000AD2  282E               	incf	___fldiv@bexp^0,w,c
  3450   000AD4  A4D8               	btfss	status,2,c
  3451   000AD6  EF6F  F005         	goto	u2721
  3452   000ADA  EF71  F005         	goto	u2720
  3453   000ADE                     u2721:
  3454   000ADE  EF79  F005         	goto	l3348
  3455   000AE2                     u2720:
  3456   000AE2  0E00               	movlw	0
  3457   000AE4  6E17               	movwf	___fldiv@b^0,c
  3458   000AE6  0E00               	movlw	0
  3459   000AE8  6E18               	movwf	(___fldiv@b+1)^0,c
  3460   000AEA  0E00               	movlw	0
  3461   000AEC  6E19               	movwf	(___fldiv@b+2)^0,c
  3462   000AEE  0E00               	movlw	0
  3463   000AF0  6E1A               	movwf	(___fldiv@b+3)^0,c
  3464   000AF2                     l3348:
  3465   000AF2  8E19               	bsf	(___fldiv@b+2)^0,7,c
  3466   000AF4  0E00               	movlw	0
  3467   000AF6  6E1A               	movwf	(___fldiv@b+3)^0,c
  3468   000AF8  EF86  F005         	goto	l3354
  3469   000AFC                     l3352:
  3470   000AFC  0E00               	movlw	0
  3471   000AFE  6E17               	movwf	___fldiv@b^0,c
  3472   000B00  0E00               	movlw	0
  3473   000B02  6E18               	movwf	(___fldiv@b+1)^0,c
  3474   000B04  0E00               	movlw	0
  3475   000B06  6E19               	movwf	(___fldiv@b+2)^0,c
  3476   000B08  0E00               	movlw	0
  3477   000B0A  6E1A               	movwf	(___fldiv@b+3)^0,c
  3478   000B0C                     l3354:
  3479   000B0C  501E               	movf	(___fldiv@a+3)^0,w,c
  3480   000B0E  0B80               	andlw	128
  3481   000B10  1A27               	xorwf	___fldiv@sign^0,f,c
  3482   000B12  501E               	movf	(___fldiv@a+3)^0,w,c
  3483   000B14  241E               	addwf	(___fldiv@a+3)^0,w,c
  3484   000B16  6E2F               	movwf	___fldiv@aexp^0,c
  3485   000B18  AE1D               	btfss	(___fldiv@a+2)^0,7,c
  3486   000B1A  EF91  F005         	goto	u2731
  3487   000B1E  EF93  F005         	goto	u2730
  3488   000B22                     u2731:
  3489   000B22  EF94  F005         	goto	l3362
  3490   000B26                     u2730:
  3491   000B26  802F               	bsf	___fldiv@aexp^0,0,c
  3492   000B28                     l3362:
  3493   000B28  502F               	movf	___fldiv@aexp^0,w,c
  3494   000B2A  B4D8               	btfsc	status,2,c
  3495   000B2C  EF9A  F005         	goto	u2741
  3496   000B30  EF9C  F005         	goto	u2740
  3497   000B34                     u2741:
  3498   000B34  EFB1  F005         	goto	l3372
  3499   000B38                     u2740:
  3500   000B38  282F               	incf	___fldiv@aexp^0,w,c
  3501   000B3A  A4D8               	btfss	status,2,c
  3502   000B3C  EFA2  F005         	goto	u2751
  3503   000B40  EFA4  F005         	goto	u2750
  3504   000B44                     u2751:
  3505   000B44  EFAC  F005         	goto	l3368
  3506   000B48                     u2750:
  3507   000B48  0E00               	movlw	0
  3508   000B4A  6E1B               	movwf	___fldiv@a^0,c
  3509   000B4C  0E00               	movlw	0
  3510   000B4E  6E1C               	movwf	(___fldiv@a+1)^0,c
  3511   000B50  0E00               	movlw	0
  3512   000B52  6E1D               	movwf	(___fldiv@a+2)^0,c
  3513   000B54  0E00               	movlw	0
  3514   000B56  6E1E               	movwf	(___fldiv@a+3)^0,c
  3515   000B58                     l3368:
  3516   000B58  8E1D               	bsf	(___fldiv@a+2)^0,7,c
  3517   000B5A  0E00               	movlw	0
  3518   000B5C  6E1E               	movwf	(___fldiv@a+3)^0,c
  3519   000B5E  EFB9  F005         	goto	l3374
  3520   000B62                     l3372:
  3521   000B62  0E00               	movlw	0
  3522   000B64  6E1B               	movwf	___fldiv@a^0,c
  3523   000B66  0E00               	movlw	0
  3524   000B68  6E1C               	movwf	(___fldiv@a+1)^0,c
  3525   000B6A  0E00               	movlw	0
  3526   000B6C  6E1D               	movwf	(___fldiv@a+2)^0,c
  3527   000B6E  0E00               	movlw	0
  3528   000B70  6E1E               	movwf	(___fldiv@a+3)^0,c
  3529   000B72                     l3374:
  3530   000B72  501B               	movf	___fldiv@a^0,w,c
  3531   000B74  101C               	iorwf	(___fldiv@a+1)^0,w,c
  3532   000B76  101D               	iorwf	(___fldiv@a+2)^0,w,c
  3533   000B78  101E               	iorwf	(___fldiv@a+3)^0,w,c
  3534   000B7A  A4D8               	btfss	status,2,c
  3535   000B7C  EFC2  F005         	goto	u2761
  3536   000B80  EFC4  F005         	goto	u2760
  3537   000B84                     u2761:
  3538   000B84  EFDC  F005         	goto	l3386
  3539   000B88                     u2760:
  3540   000B88  0E00               	movlw	0
  3541   000B8A  6E17               	movwf	___fldiv@b^0,c
  3542   000B8C  0E00               	movlw	0
  3543   000B8E  6E18               	movwf	(___fldiv@b+1)^0,c
  3544   000B90  0E00               	movlw	0
  3545   000B92  6E19               	movwf	(___fldiv@b+2)^0,c
  3546   000B94  0E00               	movlw	0
  3547   000B96  6E1A               	movwf	(___fldiv@b+3)^0,c
  3548   000B98  0E80               	movlw	128
  3549   000B9A  1219               	iorwf	(___fldiv@b+2)^0,f,c
  3550   000B9C  0E7F               	movlw	127
  3551   000B9E  121A               	iorwf	(___fldiv@b+3)^0,f,c
  3552   000BA0                     l3380:
  3553   000BA0  5027               	movf	___fldiv@sign^0,w,c
  3554   000BA2  121A               	iorwf	(___fldiv@b+3)^0,f,c
  3555   000BA4  C017  F017         	movff	___fldiv@b,?___fldiv
  3556   000BA8  C018  F018         	movff	___fldiv@b+1,?___fldiv+1
  3557   000BAC  C019  F019         	movff	___fldiv@b+2,?___fldiv+2
  3558   000BB0  C01A  F01A         	movff	___fldiv@b+3,?___fldiv+3
  3559   000BB4  EF1F  F007         	goto	l1295
  3560   000BB8                     l3386:
  3561   000BB8  502E               	movf	___fldiv@bexp^0,w,c
  3562   000BBA  A4D8               	btfss	status,2,c
  3563   000BBC  EFE2  F005         	goto	u2771
  3564   000BC0  EFE4  F005         	goto	u2770
  3565   000BC4                     u2771:
  3566   000BC4  EFEE  F005         	goto	l3394
  3567   000BC8                     u2770:
  3568   000BC8  0E00               	movlw	0
  3569   000BCA  6E17               	movwf	?___fldiv^0,c
  3570   000BCC  0E00               	movlw	0
  3571   000BCE  6E18               	movwf	(?___fldiv+1)^0,c
  3572   000BD0  0E00               	movlw	0
  3573   000BD2  6E19               	movwf	(?___fldiv+2)^0,c
  3574   000BD4  0E00               	movlw	0
  3575   000BD6  6E1A               	movwf	(?___fldiv+3)^0,c
  3576   000BD8  EF1F  F007         	goto	l1295
  3577   000BDC                     l3394:
  3578   000BDC  502F               	movf	___fldiv@aexp^0,w,c
  3579   000BDE  C02E  F01F         	movff	___fldiv@bexp,??___fldiv
  3580   000BE2  6A20               	clrf	(??___fldiv+1)^0,c
  3581   000BE4  5E1F               	subwf	??___fldiv^0,f,c
  3582   000BE6  0E00               	movlw	0
  3583   000BE8  5A20               	subwfb	(??___fldiv+1)^0,f,c
  3584   000BEA  0E7F               	movlw	127
  3585   000BEC  241F               	addwf	??___fldiv^0,w,c
  3586   000BEE  6E28               	movwf	___fldiv@new_exp^0,c
  3587   000BF0  0E00               	movlw	0
  3588   000BF2  2020               	addwfc	(??___fldiv+1)^0,w,c
  3589   000BF4  6E29               	movwf	(___fldiv@new_exp+1)^0,c
  3590   000BF6  C017  F023         	movff	___fldiv@b,___fldiv@rem
  3591   000BFA  C018  F024         	movff	___fldiv@b+1,___fldiv@rem+1
  3592   000BFE  C019  F025         	movff	___fldiv@b+2,___fldiv@rem+2
  3593   000C02  C01A  F026         	movff	___fldiv@b+3,___fldiv@rem+3
  3594   000C06  0E00               	movlw	0
  3595   000C08  6E17               	movwf	___fldiv@b^0,c
  3596   000C0A  0E00               	movlw	0
  3597   000C0C  6E18               	movwf	(___fldiv@b+1)^0,c
  3598   000C0E  0E00               	movlw	0
  3599   000C10  6E19               	movwf	(___fldiv@b+2)^0,c
  3600   000C12  0E00               	movlw	0
  3601   000C14  6E1A               	movwf	(___fldiv@b+3)^0,c
  3602   000C16  0E00               	movlw	0
  3603   000C18  6E2A               	movwf	___fldiv@grs^0,c
  3604   000C1A  0E00               	movlw	0
  3605   000C1C  6E2B               	movwf	(___fldiv@grs+1)^0,c
  3606   000C1E  0E00               	movlw	0
  3607   000C20  6E2C               	movwf	(___fldiv@grs+2)^0,c
  3608   000C22  0E00               	movlw	0
  3609   000C24  6E2D               	movwf	(___fldiv@grs+3)^0,c
  3610   000C26  0E00               	movlw	0
  3611   000C28  6E2F               	movwf	___fldiv@aexp^0,c
  3612   000C2A  EF4F  F006         	goto	l1297
  3613   000C2E                     l3404:
  3614   000C2E  502F               	movf	___fldiv@aexp^0,w,c
  3615   000C30  B4D8               	btfsc	status,2,c
  3616   000C32  EF1D  F006         	goto	u2781
  3617   000C36  EF1F  F006         	goto	u2780
  3618   000C3A                     u2781:
  3619   000C3A  EF36  F006         	goto	l3412
  3620   000C3E                     u2780:
  3621   000C3E  90D8               	bcf	status,0,c
  3622   000C40  3623               	rlcf	___fldiv@rem^0,f,c
  3623   000C42  3624               	rlcf	(___fldiv@rem+1)^0,f,c
  3624   000C44  3625               	rlcf	(___fldiv@rem+2)^0,f,c
  3625   000C46  3626               	rlcf	(___fldiv@rem+3)^0,f,c
  3626   000C48  90D8               	bcf	status,0,c
  3627   000C4A  3617               	rlcf	___fldiv@b^0,f,c
  3628   000C4C  3618               	rlcf	(___fldiv@b+1)^0,f,c
  3629   000C4E  3619               	rlcf	(___fldiv@b+2)^0,f,c
  3630   000C50  361A               	rlcf	(___fldiv@b+3)^0,f,c
  3631   000C52  AE2D               	btfss	(___fldiv@grs+3)^0,7,c
  3632   000C54  EF2E  F006         	goto	u2791
  3633   000C58  EF30  F006         	goto	u2790
  3634   000C5C                     u2791:
  3635   000C5C  EF31  F006         	goto	l1300
  3636   000C60                     u2790:
  3637   000C60  8017               	bsf	___fldiv@b^0,0,c
  3638   000C62                     l1300:
  3639   000C62  90D8               	bcf	status,0,c
  3640   000C64  362A               	rlcf	___fldiv@grs^0,f,c
  3641   000C66  362B               	rlcf	(___fldiv@grs+1)^0,f,c
  3642   000C68  362C               	rlcf	(___fldiv@grs+2)^0,f,c
  3643   000C6A  362D               	rlcf	(___fldiv@grs+3)^0,f,c
  3644   000C6C                     l3412:
  3645   000C6C  501B               	movf	___fldiv@a^0,w,c
  3646   000C6E  5C23               	subwf	___fldiv@rem^0,w,c
  3647   000C70  501C               	movf	(___fldiv@a+1)^0,w,c
  3648   000C72  5824               	subwfb	(___fldiv@rem+1)^0,w,c
  3649   000C74  501D               	movf	(___fldiv@a+2)^0,w,c
  3650   000C76  5825               	subwfb	(___fldiv@rem+2)^0,w,c
  3651   000C78  501E               	movf	(___fldiv@a+3)^0,w,c
  3652   000C7A  5826               	subwfb	(___fldiv@rem+3)^0,w,c
  3653   000C7C  A0D8               	btfss	status,0,c
  3654   000C7E  EF43  F006         	goto	u2801
  3655   000C82  EF45  F006         	goto	u2800
  3656   000C86                     u2801:
  3657   000C86  EF4E  F006         	goto	l3418
  3658   000C8A                     u2800:
  3659   000C8A  8C2D               	bsf	(___fldiv@grs+3)^0,6,c
  3660   000C8C  501B               	movf	___fldiv@a^0,w,c
  3661   000C8E  5E23               	subwf	___fldiv@rem^0,f,c
  3662   000C90  501C               	movf	(___fldiv@a+1)^0,w,c
  3663   000C92  5A24               	subwfb	(___fldiv@rem+1)^0,f,c
  3664   000C94  501D               	movf	(___fldiv@a+2)^0,w,c
  3665   000C96  5A25               	subwfb	(___fldiv@rem+2)^0,f,c
  3666   000C98  501E               	movf	(___fldiv@a+3)^0,w,c
  3667   000C9A  5A26               	subwfb	(___fldiv@rem+3)^0,f,c
  3668   000C9C                     l3418:
  3669   000C9C  2A2F               	incf	___fldiv@aexp^0,f,c
  3670   000C9E                     l1297:
  3671   000C9E  0E19               	movlw	25
  3672   000CA0  642F               	cpfsgt	___fldiv@aexp^0,c
  3673   000CA2  EF55  F006         	goto	u2811
  3674   000CA6  EF57  F006         	goto	u2810
  3675   000CAA                     u2811:
  3676   000CAA  EF17  F006         	goto	l3404
  3677   000CAE                     u2810:
  3678   000CAE  5023               	movf	___fldiv@rem^0,w,c
  3679   000CB0  1024               	iorwf	(___fldiv@rem+1)^0,w,c
  3680   000CB2  1025               	iorwf	(___fldiv@rem+2)^0,w,c
  3681   000CB4  1026               	iorwf	(___fldiv@rem+3)^0,w,c
  3682   000CB6  B4D8               	btfsc	status,2,c
  3683   000CB8  EF60  F006         	goto	u2821
  3684   000CBC  EF62  F006         	goto	u2820
  3685   000CC0                     u2821:
  3686   000CC0  EF7A  F006         	goto	l3430
  3687   000CC4                     u2820:
  3688   000CC4  802A               	bsf	___fldiv@grs^0,0,c
  3689   000CC6  EF7A  F006         	goto	l3430
  3690   000CCA                     l3424:
  3691   000CCA  90D8               	bcf	status,0,c
  3692   000CCC  3617               	rlcf	___fldiv@b^0,f,c
  3693   000CCE  3618               	rlcf	(___fldiv@b+1)^0,f,c
  3694   000CD0  3619               	rlcf	(___fldiv@b+2)^0,f,c
  3695   000CD2  361A               	rlcf	(___fldiv@b+3)^0,f,c
  3696   000CD4  AE2D               	btfss	(___fldiv@grs+3)^0,7,c
  3697   000CD6  EF6F  F006         	goto	u2831
  3698   000CDA  EF71  F006         	goto	u2830
  3699   000CDE                     u2831:
  3700   000CDE  EF72  F006         	goto	l1306
  3701   000CE2                     u2830:
  3702   000CE2  8017               	bsf	___fldiv@b^0,0,c
  3703   000CE4                     l1306:
  3704   000CE4  90D8               	bcf	status,0,c
  3705   000CE6  362A               	rlcf	___fldiv@grs^0,f,c
  3706   000CE8  362B               	rlcf	(___fldiv@grs+1)^0,f,c
  3707   000CEA  362C               	rlcf	(___fldiv@grs+2)^0,f,c
  3708   000CEC  362D               	rlcf	(___fldiv@grs+3)^0,f,c
  3709   000CEE  0628               	decf	___fldiv@new_exp^0,f,c
  3710   000CF0  A0D8               	btfss	status,0,c
  3711   000CF2  0629               	decf	(___fldiv@new_exp+1)^0,f,c
  3712   000CF4                     l3430:
  3713   000CF4  AE19               	btfss	(___fldiv@b+2)^0,7,c
  3714   000CF6  EF7F  F006         	goto	u2841
  3715   000CFA  EF81  F006         	goto	u2840
  3716   000CFE                     u2841:
  3717   000CFE  EF65  F006         	goto	l3424
  3718   000D02                     u2840:
  3719   000D02  0E00               	movlw	0
  3720   000D04  6E2F               	movwf	___fldiv@aexp^0,c
  3721   000D06  AE2D               	btfss	(___fldiv@grs+3)^0,7,c
  3722   000D08  EF88  F006         	goto	u2851
  3723   000D0C  EF8A  F006         	goto	u2850
  3724   000D10                     u2851:
  3725   000D10  EFAE  F006         	goto	l1308
  3726   000D14                     u2850:
  3727   000D14  0EFF               	movlw	255
  3728   000D16  142A               	andwf	___fldiv@grs^0,w,c
  3729   000D18  6E1F               	movwf	??___fldiv^0,c
  3730   000D1A  0EFF               	movlw	255
  3731   000D1C  142B               	andwf	(___fldiv@grs+1)^0,w,c
  3732   000D1E  6E20               	movwf	(??___fldiv+1)^0,c
  3733   000D20  0EFF               	movlw	255
  3734   000D22  142C               	andwf	(___fldiv@grs+2)^0,w,c
  3735   000D24  6E21               	movwf	(??___fldiv+2)^0,c
  3736   000D26  0E7F               	movlw	127
  3737   000D28  142D               	andwf	(___fldiv@grs+3)^0,w,c
  3738   000D2A  6E22               	movwf	(??___fldiv+3)^0,c
  3739   000D2C  501F               	movf	??___fldiv^0,w,c
  3740   000D2E  1020               	iorwf	(??___fldiv+1)^0,w,c
  3741   000D30  1021               	iorwf	(??___fldiv+2)^0,w,c
  3742   000D32  1022               	iorwf	(??___fldiv+3)^0,w,c
  3743   000D34  B4D8               	btfsc	status,2,c
  3744   000D36  EF9F  F006         	goto	u2861
  3745   000D3A  EFA1  F006         	goto	u2860
  3746   000D3E                     u2861:
  3747   000D3E  EFA5  F006         	goto	l1309
  3748   000D42                     u2860:
  3749   000D42                     l3438:
  3750   000D42  0E01               	movlw	1
  3751   000D44  6E2F               	movwf	___fldiv@aexp^0,c
  3752   000D46  EFAE  F006         	goto	l1308
  3753   000D4A                     l1309:
  3754   000D4A  A017               	btfss	___fldiv@b^0,0,c
  3755   000D4C  EFAA  F006         	goto	u2871
  3756   000D50  EFAC  F006         	goto	u2870
  3757   000D54                     u2871:
  3758   000D54  EFAE  F006         	goto	l1308
  3759   000D58                     u2870:
  3760   000D58  EFA1  F006         	goto	l3438
  3761   000D5C                     l1308:
  3762   000D5C  502F               	movf	___fldiv@aexp^0,w,c
  3763   000D5E  B4D8               	btfsc	status,2,c
  3764   000D60  EFB4  F006         	goto	u2881
  3765   000D64  EFB6  F006         	goto	u2880
  3766   000D68                     u2881:
  3767   000D68  EFDA  F006         	goto	l3450
  3768   000D6C                     u2880:
  3769   000D6C  0E01               	movlw	1
  3770   000D6E  2617               	addwf	___fldiv@b^0,f,c
  3771   000D70  0E00               	movlw	0
  3772   000D72  2218               	addwfc	(___fldiv@b+1)^0,f,c
  3773   000D74  2219               	addwfc	(___fldiv@b+2)^0,f,c
  3774   000D76  221A               	addwfc	(___fldiv@b+3)^0,f,c
  3775   000D78  A01A               	btfss	(___fldiv@b+3)^0,0,c
  3776   000D7A  EFC1  F006         	goto	u2891
  3777   000D7E  EFC3  F006         	goto	u2890
  3778   000D82                     u2891:
  3779   000D82  EFDA  F006         	goto	l3450
  3780   000D86                     u2890:
  3781   000D86  C017  F01F         	movff	___fldiv@b,??___fldiv
  3782   000D8A  C018  F020         	movff	___fldiv@b+1,??___fldiv+1
  3783   000D8E  C019  F021         	movff	___fldiv@b+2,??___fldiv+2
  3784   000D92  C01A  F022         	movff	___fldiv@b+3,??___fldiv+3
  3785   000D96  3422               	rlcf	(??___fldiv+3)^0,w,c
  3786   000D98  3222               	rrcf	(??___fldiv+3)^0,f,c
  3787   000D9A  3221               	rrcf	(??___fldiv+2)^0,f,c
  3788   000D9C  3220               	rrcf	(??___fldiv+1)^0,f,c
  3789   000D9E  321F               	rrcf	??___fldiv^0,f,c
  3790   000DA0  C01F  F017         	movff	??___fldiv,___fldiv@b
  3791   000DA4  C020  F018         	movff	??___fldiv+1,___fldiv@b+1
  3792   000DA8  C021  F019         	movff	??___fldiv+2,___fldiv@b+2
  3793   000DAC  C022  F01A         	movff	??___fldiv+3,___fldiv@b+3
  3794   000DB0  4A28               	infsnz	___fldiv@new_exp^0,f,c
  3795   000DB2  2A29               	incf	(___fldiv@new_exp+1)^0,f,c
  3796   000DB4                     l3450:
  3797   000DB4  BE29               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3798   000DB6  EFE5  F006         	goto	u2901
  3799   000DBA  5029               	movf	(___fldiv@new_exp+1)^0,w,c
  3800   000DBC  E108               	bnz	u2900
  3801   000DBE  2828               	incf	___fldiv@new_exp^0,w,c
  3802   000DC0  A0D8               	btfss	status,0,c
  3803   000DC2  EFE5  F006         	goto	u2901
  3804   000DC6  EFE7  F006         	goto	u2900
  3805   000DCA                     u2901:
  3806   000DCA  EFF2  F006         	goto	l3454
  3807   000DCE                     u2900:
  3808   000DCE  0E00               	movlw	0
  3809   000DD0  6E29               	movwf	(___fldiv@new_exp+1)^0,c
  3810   000DD2  6828               	setf	___fldiv@new_exp^0,c
  3811   000DD4  0E00               	movlw	0
  3812   000DD6  6E17               	movwf	___fldiv@b^0,c
  3813   000DD8  0E00               	movlw	0
  3814   000DDA  6E18               	movwf	(___fldiv@b+1)^0,c
  3815   000DDC  0E00               	movlw	0
  3816   000DDE  6E19               	movwf	(___fldiv@b+2)^0,c
  3817   000DE0  0E00               	movlw	0
  3818   000DE2  6E1A               	movwf	(___fldiv@b+3)^0,c
  3819   000DE4                     l3454:
  3820   000DE4  BE29               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3821   000DE6  EFFF  F006         	goto	u2910
  3822   000DEA  5029               	movf	(___fldiv@new_exp+1)^0,w,c
  3823   000DEC  E106               	bnz	u2911
  3824   000DEE  0428               	decf	___fldiv@new_exp^0,w,c
  3825   000DF0  B0D8               	btfsc	status,0,c
  3826   000DF2  EFFD  F006         	goto	u2911
  3827   000DF6  EFFF  F006         	goto	u2910
  3828   000DFA                     u2911:
  3829   000DFA  EF0D  F007         	goto	l3458
  3830   000DFE                     u2910:
  3831   000DFE  0E00               	movlw	0
  3832   000E00  6E29               	movwf	(___fldiv@new_exp+1)^0,c
  3833   000E02  0E00               	movlw	0
  3834   000E04  6E28               	movwf	___fldiv@new_exp^0,c
  3835   000E06  0E00               	movlw	0
  3836   000E08  6E17               	movwf	___fldiv@b^0,c
  3837   000E0A  0E00               	movlw	0
  3838   000E0C  6E18               	movwf	(___fldiv@b+1)^0,c
  3839   000E0E  0E00               	movlw	0
  3840   000E10  6E19               	movwf	(___fldiv@b+2)^0,c
  3841   000E12  0E00               	movlw	0
  3842   000E14  6E1A               	movwf	(___fldiv@b+3)^0,c
  3843   000E16  0E00               	movlw	0
  3844   000E18  6E27               	movwf	___fldiv@sign^0,c
  3845   000E1A                     l3458:
  3846   000E1A  C028  F02E         	movff	___fldiv@new_exp,___fldiv@bexp
  3847   000E1E  A02E               	btfss	___fldiv@bexp^0,0,c
  3848   000E20  EF14  F007         	goto	u2921
  3849   000E24  EF16  F007         	goto	u2920
  3850   000E28                     u2921:
  3851   000E28  EF19  F007         	goto	l3464
  3852   000E2C                     u2920:
  3853   000E2C  8E19               	bsf	(___fldiv@b+2)^0,7,c
  3854   000E2E  EF1A  F007         	goto	l3466
  3855   000E32                     l3464:
  3856   000E32  9E19               	bcf	(___fldiv@b+2)^0,7,c
  3857   000E34                     l3466:
  3858   000E34  90D8               	bcf	status,0,c
  3859   000E36  302E               	rrcf	___fldiv@bexp^0,w,c
  3860   000E38  6E1A               	movwf	(___fldiv@b+3)^0,c
  3861   000E3A  EFD0  F005         	goto	l3380
  3862   000E3E                     l1295:
  3863   000E3E  0012               	return		;funcret
  3864   000E40                     __end_of___fldiv:
  3865                           	callstack 0
  3866                           
  3867 ;; *************** function _color_click_init *****************
  3868 ;; Defined at:
  3869 ;;		line 6 in file "color.c"
  3870 ;; Parameters:    Size  Location     Type
  3871 ;;		None
  3872 ;; Auto vars:     Size  Location     Type
  3873 ;;		None
  3874 ;; Return value:  Size  Location     Type
  3875 ;;                  1    wreg      void 
  3876 ;; Registers used:
  3877 ;;		wreg, status,2, status,0, cstack
  3878 ;; Tracked objects:
  3879 ;;		On entry : 0/0
  3880 ;;		On exit  : 0/0
  3881 ;;		Unchanged: 0/0
  3882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3885 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3886 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3887 ;;Total ram usage:        1 bytes
  3888 ;; Hardware stack levels used: 1
  3889 ;; Hardware stack levels required when called: 10
  3890 ;; This function calls:
  3891 ;;		_I2C_2_Master_Init
  3892 ;;		_color_writetoaddr
  3893 ;; This function is called by:
  3894 ;;		_main
  3895 ;; This function uses a non-reentrant model
  3896 ;;
  3897                           
  3898                           	psect	text7
  3899   0028CC                     __ptext7:
  3900                           	callstack 0
  3901   0028CC                     _color_click_init:
  3902                           	callstack 20
  3903   0028CC                     
  3904                           ;color.c: 9:     I2C_2_Master_Init();
  3905   0028CC  EC99  F014         	call	_I2C_2_Master_Init	;wreg free
  3906   0028D0                     
  3907                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  3908   0028D0  0E01               	movlw	1
  3909   0028D2  6E0B               	movwf	color_writetoaddr@value^0,c
  3910   0028D4  0E00               	movlw	0
  3911   0028D6  EC2D  F015         	call	_color_writetoaddr
  3912   0028DA                     
  3913                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3914   0028DA  0E3F               	movlw	63
  3915   0028DC  6E0D               	movwf	??_color_click_init^0,c
  3916   0028DE  0E55               	movlw	85
  3917   0028E0                     u4687:
  3918   0028E0  2EE8               	decfsz	wreg,f,c
  3919   0028E2  D7FE               	bra	u4687
  3920   0028E4  2E0D               	decfsz	??_color_click_init^0,f,c
  3921   0028E6  D7FC               	bra	u4687
  3922   0028E8  F000               	nop	
  3923   0028EA                     
  3924                           ;color.c: 16:  color_writetoaddr(0x00, 0x03);
  3925   0028EA  0E03               	movlw	3
  3926   0028EC  6E0B               	movwf	color_writetoaddr@value^0,c
  3927   0028EE  0E00               	movlw	0
  3928   0028F0  EC2D  F015         	call	_color_writetoaddr
  3929   0028F4                     
  3930                           ;color.c: 19:  color_writetoaddr(0x01, 0xD5);
  3931   0028F4  0ED5               	movlw	213
  3932   0028F6  6E0B               	movwf	color_writetoaddr@value^0,c
  3933   0028F8  0E01               	movlw	1
  3934   0028FA  EC2D  F015         	call	_color_writetoaddr
  3935   0028FE  0012               	return		;funcret
  3936   002900                     __end_of_color_click_init:
  3937                           	callstack 0
  3938                           
  3939 ;; *************** function _I2C_2_Master_Init *****************
  3940 ;; Defined at:
  3941 ;;		line 4 in file "i2c.c"
  3942 ;; Parameters:    Size  Location     Type
  3943 ;;		None
  3944 ;; Auto vars:     Size  Location     Type
  3945 ;;		None
  3946 ;; Return value:  Size  Location     Type
  3947 ;;                  1    wreg      void 
  3948 ;; Registers used:
  3949 ;;		wreg, status,2
  3950 ;; Tracked objects:
  3951 ;;		On entry : 0/0
  3952 ;;		On exit  : 0/0
  3953 ;;		Unchanged: 0/0
  3954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3959 ;;Total ram usage:        0 bytes
  3960 ;; Hardware stack levels used: 1
  3961 ;; Hardware stack levels required when called: 7
  3962 ;; This function calls:
  3963 ;;		Nothing
  3964 ;; This function is called by:
  3965 ;;		_color_click_init
  3966 ;; This function uses a non-reentrant model
  3967 ;;
  3968                           
  3969                           	psect	text8
  3970   002932                     __ptext8:
  3971                           	callstack 0
  3972   002932                     _I2C_2_Master_Init:
  3973                           	callstack 22
  3974   002932                     
  3975                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3976   002932  010E               	movlb	14	; () banked
  3977   002934  51D9               	movf	217,w,b	;volatile
  3978   002936  0BF0               	andlw	-16
  3979   002938  0908               	iorlw	8
  3980   00293A  6FD9               	movwf	217,b	;volatile
  3981   00293C                     
  3982                           ; BSR set to: 14
  3983                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3984   00293C  8BD9               	bsf	217,5,b	;volatile
  3985                           
  3986                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3987   00293E  0E9F               	movlw	159
  3988   002940  6FD6               	movwf	214,b	;volatile
  3989   002942                     
  3990                           ; BSR set to: 14
  3991                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3992   002942  8A84               	bsf	132,5,c	;volatile
  3993   002944                     
  3994                           ; BSR set to: 14
  3995                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3996   002944  8C84               	bsf	132,6,c	;volatile
  3997   002946                     
  3998                           ; BSR set to: 14
  3999                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  4000   002946  9BA7               	bcf	167,5,b	;volatile
  4001   002948                     
  4002                           ; BSR set to: 14
  4003                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  4004   002948  9DA7               	bcf	167,6,b	;volatile
  4005                           
  4006                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  4007   00294A  0E1D               	movlw	29
  4008   00294C  6F1D               	movwf	29,b	;volatile
  4009                           
  4010                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  4011   00294E  0E1E               	movlw	30
  4012   002950  6F1C               	movwf	28,b	;volatile
  4013                           
  4014                           ;i2c.c: 18:   RD5PPS=0x1C;
  4015   002952  0E1C               	movlw	28
  4016   002954  6F6F               	movwf	111,b	;volatile
  4017                           
  4018                           ;i2c.c: 19:   RD6PPS=0x1B;
  4019   002956  0E1B               	movlw	27
  4020   002958  6F70               	movwf	112,b	;volatile
  4021   00295A                     
  4022                           ; BSR set to: 14
  4023   00295A  0012               	return		;funcret
  4024   00295C                     __end_of_I2C_2_Master_Init:
  4025                           	callstack 0
  4026                           
  4027 ;; *************** function _WhiteLight *****************
  4028 ;; Defined at:
  4029 ;;		line 26 in file "LED_Buttons.c"
  4030 ;; Parameters:    Size  Location     Type
  4031 ;;		None
  4032 ;; Auto vars:     Size  Location     Type
  4033 ;;		None
  4034 ;; Return value:  Size  Location     Type
  4035 ;;                  1    wreg      void 
  4036 ;; Registers used:
  4037 ;;		None
  4038 ;; Tracked objects:
  4039 ;;		On entry : 0/0
  4040 ;;		On exit  : 0/0
  4041 ;;		Unchanged: 0/0
  4042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4047 ;;Total ram usage:        0 bytes
  4048 ;; Hardware stack levels used: 1
  4049 ;; Hardware stack levels required when called: 7
  4050 ;; This function calls:
  4051 ;;		Nothing
  4052 ;; This function is called by:
  4053 ;;		_main
  4054 ;; This function uses a non-reentrant model
  4055 ;;
  4056                           
  4057                           	psect	text9
  4058   002B50                     __ptext9:
  4059                           	callstack 0
  4060   002B50                     _WhiteLight:
  4061                           	callstack 23
  4062   002B50                     
  4063                           ;LED_Buttons.c: 27:     LATGbits.LATG1 = 1;
  4064   002B50  827F               	bsf	127,1,c	;volatile
  4065                           
  4066                           ;LED_Buttons.c: 28:     LATAbits.LATA4 = 1;
  4067   002B52  8879               	bsf	121,4,c	;volatile
  4068                           
  4069                           ;LED_Buttons.c: 29:     LATFbits.LATF7 = 1;
  4070   002B54  8E7E               	bsf	126,7,c	;volatile
  4071   002B56  0012               	return		;funcret
  4072   002B58                     __end_of_WhiteLight:
  4073                           	callstack 0
  4074                           
  4075 ;; *************** function _WhiteInstructions *****************
  4076 ;; Defined at:
  4077 ;;		line 154 in file "color_instructions.c"
  4078 ;; Parameters:    Size  Location     Type
  4079 ;;  mL              2   58[COMRAM] PTR struct DC_motor
  4080 ;;		 -> main@motorL(9), 
  4081 ;;  mR              2   60[COMRAM] PTR struct DC_motor
  4082 ;;		 -> main@motorR(9), 
  4083 ;; Auto vars:     Size  Location     Type
  4084 ;;  a               2   67[COMRAM] unsigned int 
  4085 ;;  c               2   64[COMRAM] unsigned int 
  4086 ;;  anticolor       1   66[COMRAM] unsigned char 
  4087 ;; Return value:  Size  Location     Type
  4088 ;;                  1    wreg      void 
  4089 ;; Registers used:
  4090 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4091 ;; Tracked objects:
  4092 ;;		On entry : 0/0
  4093 ;;		On exit  : 0/0
  4094 ;;		Unchanged: 0/0
  4095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4096 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4097 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4098 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4099 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4100 ;;Total ram usage:       11 bytes
  4101 ;; Hardware stack levels used: 1
  4102 ;; Hardware stack levels required when called: 14
  4103 ;; This function calls:
  4104 ;;		_BlueInstructions
  4105 ;;		_MoveBuggy
  4106 ;;		_Return_Anti_Moves
  4107 ;;		_Return_Time
  4108 ;;		_fullSpeedAhead
  4109 ;;		_stop
  4110 ;; This function is called by:
  4111 ;;		_main
  4112 ;; This function uses a non-reentrant model
  4113 ;;
  4114                           
  4115                           	psect	text10
  4116   001B98                     __ptext10:
  4117                           	callstack 0
  4118   001B98                     _WhiteInstructions:
  4119                           	callstack 16
  4120   001B98                     
  4121                           ;color_instructions.c: 155:     PIE0bits.INT1IE = 0;
  4122   001B98  010E               	movlb	14	; () banked
  4123   001B9A  9329               	bcf	41,1,b	;volatile
  4124   001B9C                     
  4125                           ; BSR set to: 14
  4126                           ;color_instructions.c: 157:     BlueInstructions(mL,mR);
  4127   001B9C  C03B  F027         	movff	WhiteInstructions@mL,BlueInstructions@mL
  4128   001BA0  C03C  F028         	movff	WhiteInstructions@mL+1,BlueInstructions@mL+1
  4129   001BA4  C03D  F029         	movff	WhiteInstructions@mR,BlueInstructions@mR
  4130   001BA8  C03E  F02A         	movff	WhiteInstructions@mR+1,BlueInstructions@mR+1
  4131   001BAC  EC5E  F00F         	call	_BlueInstructions	;wreg free
  4132                           
  4133                           ;color_instructions.c: 159:     while(time_index>0){
  4134   001BB0  EF39  F00E         	goto	l3926
  4135   001BB4                     l3906:
  4136                           
  4137                           ;color_instructions.c: 161:         unsigned int a = 0;
  4138   001BB4  0E00               	movlw	0
  4139   001BB6  6E45               	movwf	(WhiteInstructions@a+1)^0,c
  4140   001BB8  0E00               	movlw	0
  4141   001BBA  6E44               	movwf	WhiteInstructions@a^0,c
  4142   001BBC                     
  4143                           ;color_instructions.c: 162:         unsigned int c = Return_Time(&time_index,time_array)
      +                          ;
  4144   001BBC  0E55               	movlw	low _time_index
  4145   001BBE  6E09               	movwf	Return_Time@time_index^0,c
  4146   001BC0  0E00               	movlw	high _time_index
  4147   001BC2  6E0A               	movwf	(Return_Time@time_index+1)^0,c
  4148   001BC4  0E3C               	movlw	low _time_array
  4149   001BC6  6E0B               	movwf	Return_Time@time_array^0,c
  4150   001BC8  0E01               	movlw	high _time_array
  4151   001BCA  6E0C               	movwf	(Return_Time@time_array+1)^0,c
  4152   001BCC  EC4A  F014         	call	_Return_Time	;wreg free
  4153   001BD0  C009  F041         	movff	?_Return_Time,WhiteInstructions@c
  4154   001BD4  C00A  F042         	movff	?_Return_Time+1,WhiteInstructions@c+1
  4155                           
  4156                           ;color_instructions.c: 163:         while(a<c){
  4157   001BD8  EFFA  F00D         	goto	l3914
  4158   001BDC                     l3910:
  4159                           
  4160                           ;color_instructions.c: 164:             fullSpeedAhead(mL,mR);
  4161   001BDC  C03B  F01C         	movff	WhiteInstructions@mL,fullSpeedAhead@mL
  4162   001BE0  C03C  F01D         	movff	WhiteInstructions@mL+1,fullSpeedAhead@mL+1
  4163   001BE4  C03D  F01E         	movff	WhiteInstructions@mR,fullSpeedAhead@mR
  4164   001BE8  C03E  F01F         	movff	WhiteInstructions@mR+1,fullSpeedAhead@mR+1
  4165   001BEC  EC67  F00C         	call	_fullSpeedAhead	;wreg free
  4166   001BF0                     
  4167                           ;color_instructions.c: 165:             a++;
  4168   001BF0  4A44               	infsnz	WhiteInstructions@a^0,f,c
  4169   001BF2  2A45               	incf	(WhiteInstructions@a+1)^0,f,c
  4170   001BF4                     l3914:
  4171                           
  4172                           ;color_instructions.c: 163:         while(a<c){
  4173   001BF4  5041               	movf	WhiteInstructions@c^0,w,c
  4174   001BF6  5C44               	subwf	WhiteInstructions@a^0,w,c
  4175   001BF8  5042               	movf	(WhiteInstructions@c+1)^0,w,c
  4176   001BFA  5845               	subwfb	(WhiteInstructions@a+1)^0,w,c
  4177   001BFC  A0D8               	btfss	status,0,c
  4178   001BFE  EF03  F00E         	goto	u3791
  4179   001C02  EF05  F00E         	goto	u3790
  4180   001C06                     u3791:
  4181   001C06  EFEE  F00D         	goto	l3910
  4182   001C0A                     u3790:
  4183   001C0A  EF14  F00E         	goto	l3920
  4184   001C0E                     l3916:
  4185                           
  4186                           ;color_instructions.c: 169:             stop(mL,mR);
  4187   001C0E  C03B  F01C         	movff	WhiteInstructions@mL,stop@mL
  4188   001C12  C03C  F01D         	movff	WhiteInstructions@mL+1,stop@mL+1
  4189   001C16  C03D  F01E         	movff	WhiteInstructions@mR,stop@mR
  4190   001C1A  C03E  F01F         	movff	WhiteInstructions@mR+1,stop@mR+1
  4191   001C1E  EC42  F00E         	call	_stop	;wreg free
  4192   001C22                     
  4193                           ;color_instructions.c: 170:             a--;
  4194   001C22  0644               	decf	WhiteInstructions@a^0,f,c
  4195   001C24  A0D8               	btfss	status,0,c
  4196   001C26  0645               	decf	(WhiteInstructions@a+1)^0,f,c
  4197   001C28                     l3920:
  4198                           
  4199                           ;color_instructions.c: 168:         while(a>0){
  4200   001C28  5044               	movf	WhiteInstructions@a^0,w,c
  4201   001C2A  1045               	iorwf	(WhiteInstructions@a+1)^0,w,c
  4202   001C2C  A4D8               	btfss	status,2,c
  4203   001C2E  EF1B  F00E         	goto	u3801
  4204   001C32  EF1D  F00E         	goto	u3800
  4205   001C36                     u3801:
  4206   001C36  EF07  F00E         	goto	l3916
  4207   001C3A                     u3800:
  4208   001C3A                     
  4209                           ;color_instructions.c: 173:         unsigned char anticolor = Return_Anti_Moves(&moves_i
      +                          ndex, anti_moves_array);
  4210   001C3A  0E56               	movlw	low _moves_index
  4211   001C3C  6E09               	movwf	Return_Anti_Moves@moves_index^0,c
  4212   001C3E  0E00               	movlw	high _moves_index
  4213   001C40  6E0A               	movwf	(Return_Anti_Moves@moves_index+1)^0,c
  4214   001C42  0E77               	movlw	low _anti_moves_array
  4215   001C44  6E0B               	movwf	Return_Anti_Moves@anti_moves_array^0,c
  4216   001C46  0E00               	movlw	high _anti_moves_array
  4217   001C48  6E0C               	movwf	(Return_Anti_Moves@anti_moves_array+1)^0,c
  4218   001C4A  ECFB  F014         	call	_Return_Anti_Moves	;wreg free
  4219   001C4E  6E43               	movwf	WhiteInstructions@anticolor^0,c
  4220   001C50                     
  4221                           ;color_instructions.c: 174:         MoveBuggy(anticolor,mL,mR);
  4222   001C50  5043               	movf	WhiteInstructions@anticolor^0,w,c
  4223   001C52  6E3F               	movwf	??_WhiteInstructions^0,c
  4224   001C54  6A40               	clrf	(??_WhiteInstructions+1)^0,c
  4225   001C56  C03F  F035         	movff	??_WhiteInstructions,MoveBuggy@color_detected
  4226   001C5A  C040  F036         	movff	??_WhiteInstructions+1,MoveBuggy@color_detected+1
  4227   001C5E  C03B  F037         	movff	WhiteInstructions@mL,MoveBuggy@mL
  4228   001C62  C03C  F038         	movff	WhiteInstructions@mL+1,MoveBuggy@mL+1
  4229   001C66  C03D  F039         	movff	WhiteInstructions@mR,MoveBuggy@mR
  4230   001C6A  C03E  F03A         	movff	WhiteInstructions@mR+1,MoveBuggy@mR+1
  4231   001C6E  EC9A  F008         	call	_MoveBuggy	;wreg free
  4232   001C72                     l3926:
  4233                           
  4234                           ;color_instructions.c: 159:     while(time_index>0){
  4235   001C72  5055               	movf	_time_index^0,w,c
  4236   001C74  A4D8               	btfss	status,2,c
  4237   001C76  EF3F  F00E         	goto	u3811
  4238   001C7A  EF41  F00E         	goto	u3810
  4239   001C7E                     u3811:
  4240   001C7E  EFDA  F00D         	goto	l3906
  4241   001C82                     u3810:
  4242   001C82  0012               	return		;funcret
  4243   001C84                     __end_of_WhiteInstructions:
  4244                           	callstack 0
  4245                           
  4246 ;; *************** function _Return_Time *****************
  4247 ;; Defined at:
  4248 ;;		line 40 in file "Memorization.c"
  4249 ;; Parameters:    Size  Location     Type
  4250 ;;  time_index      2    8[COMRAM] PTR unsigned char 
  4251 ;;		 -> time_index(1), 
  4252 ;;  time_array      2   10[COMRAM] PTR unsigned int 
  4253 ;;		 -> time_array(80), 
  4254 ;; Auto vars:     Size  Location     Type
  4255 ;;  temp            2   15[COMRAM] unsigned int 
  4256 ;; Return value:  Size  Location     Type
  4257 ;;                  2    8[COMRAM] unsigned int 
  4258 ;; Registers used:
  4259 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4260 ;; Tracked objects:
  4261 ;;		On entry : 0/0
  4262 ;;		On exit  : 0/0
  4263 ;;		Unchanged: 0/0
  4264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4265 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4266 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4267 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4268 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4269 ;;Total ram usage:        9 bytes
  4270 ;; Hardware stack levels used: 1
  4271 ;; Hardware stack levels required when called: 7
  4272 ;; This function calls:
  4273 ;;		Nothing
  4274 ;; This function is called by:
  4275 ;;		_WhiteInstructions
  4276 ;; This function uses a non-reentrant model
  4277 ;;
  4278                           
  4279                           	psect	text11
  4280   002894                     __ptext11:
  4281                           	callstack 0
  4282   002894                     _Return_Time:
  4283                           	callstack 22
  4284   002894                     
  4285                           ;Memorization.c: 41:     unsigned int temp;;Memorization.c: 43:     temp = time_array[--
      +                          (*time_index)];
  4286   002894  C009  FFD9         	movff	Return_Time@time_index,fsr2l
  4287   002898  C00A  FFDA         	movff	Return_Time@time_index+1,fsr2h
  4288   00289C  06DF               	decf	indf2,f,c
  4289   00289E  50DF               	movf	indf2,w,c
  4290   0028A0  6E0D               	movwf	??_Return_Time^0,c
  4291   0028A2  500D               	movf	??_Return_Time^0,w,c
  4292   0028A4  0D02               	mullw	2
  4293   0028A6  CFF3 F00E          	movff	prodl,??_Return_Time+1
  4294   0028AA  CFF4 F00F          	movff	prodh,??_Return_Time+2
  4295   0028AE  500E               	movf	(??_Return_Time+1)^0,w,c
  4296   0028B0  240B               	addwf	Return_Time@time_array^0,w,c
  4297   0028B2  6ED9               	movwf	fsr2l,c
  4298   0028B4  500F               	movf	(??_Return_Time+2)^0,w,c
  4299   0028B6  200C               	addwfc	(Return_Time@time_array+1)^0,w,c
  4300   0028B8  6EDA               	movwf	fsr2h,c
  4301   0028BA  CFDE F010          	movff	postinc2,Return_Time@temp
  4302   0028BE  CFDD F011          	movff	postdec2,Return_Time@temp+1
  4303   0028C2                     
  4304                           ;Memorization.c: 44:     return temp;
  4305   0028C2  C010  F009         	movff	Return_Time@temp,?_Return_Time
  4306   0028C6  C011  F00A         	movff	Return_Time@temp+1,?_Return_Time+1
  4307   0028CA  0012               	return		;funcret
  4308   0028CC                     __end_of_Return_Time:
  4309                           	callstack 0
  4310                           
  4311 ;; *************** function _Return_Anti_Moves *****************
  4312 ;; Defined at:
  4313 ;;		line 32 in file "Memorization.c"
  4314 ;; Parameters:    Size  Location     Type
  4315 ;;  moves_index     2    8[COMRAM] PTR unsigned char 
  4316 ;;		 -> moves_index(1), 
  4317 ;;  anti_moves_a    2   10[COMRAM] PTR unsigned char 
  4318 ;;		 -> anti_moves_array(40), 
  4319 ;; Auto vars:     Size  Location     Type
  4320 ;;  temp            1   13[COMRAM] unsigned char 
  4321 ;; Return value:  Size  Location     Type
  4322 ;;                  1    wreg      unsigned char 
  4323 ;; Registers used:
  4324 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4325 ;; Tracked objects:
  4326 ;;		On entry : 0/0
  4327 ;;		On exit  : 0/0
  4328 ;;		Unchanged: 0/0
  4329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4330 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4331 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4332 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4333 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4334 ;;Total ram usage:        6 bytes
  4335 ;; Hardware stack levels used: 1
  4336 ;; Hardware stack levels required when called: 7
  4337 ;; This function calls:
  4338 ;;		Nothing
  4339 ;; This function is called by:
  4340 ;;		_WhiteInstructions
  4341 ;; This function uses a non-reentrant model
  4342 ;;
  4343                           
  4344                           	psect	text12
  4345   0029F6                     __ptext12:
  4346                           	callstack 0
  4347   0029F6                     _Return_Anti_Moves:
  4348                           	callstack 22
  4349   0029F6                     
  4350                           ;Memorization.c: 33:     unsigned char temp;;Memorization.c: 35:     temp = anti_moves_a
      +                          rray[--(*moves_index)];
  4351   0029F6  C009  FFD9         	movff	Return_Anti_Moves@moves_index,fsr2l
  4352   0029FA  C00A  FFDA         	movff	Return_Anti_Moves@moves_index+1,fsr2h
  4353   0029FE  06DF               	decf	indf2,f,c
  4354   002A00  50DF               	movf	indf2,w,c
  4355   002A02  6E0D               	movwf	??_Return_Anti_Moves^0,c
  4356   002A04  500D               	movf	??_Return_Anti_Moves^0,w,c
  4357   002A06  240B               	addwf	Return_Anti_Moves@anti_moves_array^0,w,c
  4358   002A08  6ED9               	movwf	fsr2l,c
  4359   002A0A  0E00               	movlw	0
  4360   002A0C  200C               	addwfc	(Return_Anti_Moves@anti_moves_array+1)^0,w,c
  4361   002A0E  6EDA               	movwf	fsr2h,c
  4362   002A10  50DF               	movf	indf2,w,c
  4363   002A12  6E0E               	movwf	Return_Anti_Moves@temp^0,c
  4364   002A14                     
  4365                           ;Memorization.c: 36:     return temp;
  4366   002A14  500E               	movf	Return_Anti_Moves@temp^0,w,c
  4367   002A16  0012               	return		;funcret
  4368   002A18                     __end_of_Return_Anti_Moves:
  4369                           	callstack 0
  4370                           
  4371 ;; *************** function _MoveBuggy *****************
  4372 ;; Defined at:
  4373 ;;		line 180 in file "color_instructions.c"
  4374 ;; Parameters:    Size  Location     Type
  4375 ;;  color_detect    2   52[COMRAM] PTR unsigned char 
  4376 ;;		 -> RAM(3561), 
  4377 ;;  mL              2   54[COMRAM] PTR struct DC_motor
  4378 ;;		 -> main@motorL(9), 
  4379 ;;  mR              2   56[COMRAM] PTR struct DC_motor
  4380 ;;		 -> main@motorR(9), 
  4381 ;; Auto vars:     Size  Location     Type
  4382 ;;		None
  4383 ;; Return value:  Size  Location     Type
  4384 ;;                  1    wreg      void 
  4385 ;; Registers used:
  4386 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4387 ;; Tracked objects:
  4388 ;;		On entry : 0/0
  4389 ;;		On exit  : 0/0
  4390 ;;		Unchanged: 0/0
  4391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4392 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4395 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4396 ;;Total ram usage:        6 bytes
  4397 ;; Hardware stack levels used: 1
  4398 ;; Hardware stack levels required when called: 13
  4399 ;; This function calls:
  4400 ;;		_AntiPink
  4401 ;;		_AntiYellow
  4402 ;;		_AppendMoves
  4403 ;;		_BlueInstructions
  4404 ;;		_GreenInstructions
  4405 ;;		_LightBlueInstructions
  4406 ;;		_OrangeInstructions
  4407 ;;		_PinkInstructions
  4408 ;;		_RedInstructions
  4409 ;;		_YellowInstructions
  4410 ;; This function is called by:
  4411 ;;		_WhiteInstructions
  4412 ;;		_main
  4413 ;; This function uses a non-reentrant model
  4414 ;;
  4415                           
  4416                           	psect	text13
  4417   001134                     __ptext13:
  4418                           	callstack 0
  4419   001134                     _MoveBuggy:
  4420                           	callstack 16
  4421   001134                     
  4422                           ;color_instructions.c: 181:     if (color_detected==1){
  4423   001134  0435               	decf	MoveBuggy@color_detected^0,w,c
  4424   001136  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4425   001138  A4D8               	btfss	status,2,c
  4426   00113A  EFA1  F008         	goto	u2541
  4427   00113E  EFA3  F008         	goto	u2540
  4428   001142                     u2541:
  4429   001142  EFC1  F008         	goto	l3280
  4430   001146                     u2540:
  4431   001146                     
  4432                           ;color_instructions.c: 182:         RedInstructions(mL, mR);
  4433   001146  C037  F027         	movff	MoveBuggy@mL,RedInstructions@mL
  4434   00114A  C038  F028         	movff	MoveBuggy@mL+1,RedInstructions@mL+1
  4435   00114E  C039  F029         	movff	MoveBuggy@mR,RedInstructions@mR
  4436   001152  C03A  F02A         	movff	MoveBuggy@mR+1,RedInstructions@mR+1
  4437   001156  ECB9  F011         	call	_RedInstructions	;wreg free
  4438   00115A                     
  4439                           ;color_instructions.c: 183:         if(LATDbits.LATD7 != 1){
  4440   00115A  BE7C               	btfsc	124,7,c	;volatile
  4441   00115C  EFB2  F008         	goto	u2551
  4442   001160  EFB4  F008         	goto	u2550
  4443   001164                     u2551:
  4444   001164  EFDB  F009         	goto	l619
  4445   001168                     u2550:
  4446   001168                     
  4447                           ;color_instructions.c: 184:             AppendMoves(2,&moves_index,anti_moves_array);
  4448   001168  0E56               	movlw	low _moves_index
  4449   00116A  6E09               	movwf	AppendMoves@moves_index^0,c
  4450   00116C  0E00               	movlw	high _moves_index
  4451   00116E  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4452   001170  0E77               	movlw	low _anti_moves_array
  4453   001172  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4454   001174  0E00               	movlw	high _anti_moves_array
  4455   001176  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4456   001178  0E02               	movlw	2
  4457   00117A  ECE9  F014         	call	_AppendMoves
  4458   00117E  EFDB  F009         	goto	l619
  4459   001182                     l3280:
  4460   001182  0E02               	movlw	2
  4461   001184  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4462   001186  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4463   001188  A4D8               	btfss	status,2,c
  4464   00118A  EFC9  F008         	goto	u2561
  4465   00118E  EFCB  F008         	goto	u2560
  4466   001192                     u2561:
  4467   001192  EFE9  F008         	goto	l3288
  4468   001196                     u2560:
  4469   001196                     
  4470                           ;color_instructions.c: 188:         GreenInstructions(mL, mR);
  4471   001196  C037  F027         	movff	MoveBuggy@mL,GreenInstructions@mL
  4472   00119A  C038  F028         	movff	MoveBuggy@mL+1,GreenInstructions@mL+1
  4473   00119E  C039  F029         	movff	MoveBuggy@mR,GreenInstructions@mR
  4474   0011A2  C03A  F02A         	movff	MoveBuggy@mR+1,GreenInstructions@mR+1
  4475   0011A6  ECFC  F011         	call	_GreenInstructions	;wreg free
  4476   0011AA                     
  4477                           ;color_instructions.c: 189:         if(LATDbits.LATD7 != 1){
  4478   0011AA  BE7C               	btfsc	124,7,c	;volatile
  4479   0011AC  EFDA  F008         	goto	u2571
  4480   0011B0  EFDC  F008         	goto	u2570
  4481   0011B4                     u2571:
  4482   0011B4  EFDB  F009         	goto	l619
  4483   0011B8                     u2570:
  4484   0011B8                     
  4485                           ;color_instructions.c: 190:             AppendMoves(1,&moves_index,anti_moves_array);
  4486   0011B8  0E56               	movlw	low _moves_index
  4487   0011BA  6E09               	movwf	AppendMoves@moves_index^0,c
  4488   0011BC  0E00               	movlw	high _moves_index
  4489   0011BE  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4490   0011C0  0E77               	movlw	low _anti_moves_array
  4491   0011C2  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4492   0011C4  0E00               	movlw	high _anti_moves_array
  4493   0011C6  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4494   0011C8  0E01               	movlw	1
  4495   0011CA  ECE9  F014         	call	_AppendMoves
  4496   0011CE  EFDB  F009         	goto	l619
  4497   0011D2                     l3288:
  4498   0011D2  0E03               	movlw	3
  4499   0011D4  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4500   0011D6  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4501   0011D8  A4D8               	btfss	status,2,c
  4502   0011DA  EFF1  F008         	goto	u2581
  4503   0011DE  EFF3  F008         	goto	u2580
  4504   0011E2                     u2581:
  4505   0011E2  EF11  F009         	goto	l3296
  4506   0011E6                     u2580:
  4507   0011E6                     
  4508                           ;color_instructions.c: 194:         BlueInstructions(mL, mR);
  4509   0011E6  C037  F027         	movff	MoveBuggy@mL,BlueInstructions@mL
  4510   0011EA  C038  F028         	movff	MoveBuggy@mL+1,BlueInstructions@mL+1
  4511   0011EE  C039  F029         	movff	MoveBuggy@mR,BlueInstructions@mR
  4512   0011F2  C03A  F02A         	movff	MoveBuggy@mR+1,BlueInstructions@mR+1
  4513   0011F6  EC5E  F00F         	call	_BlueInstructions	;wreg free
  4514   0011FA                     
  4515                           ;color_instructions.c: 195:         if(LATDbits.LATD7 != 1){
  4516   0011FA  BE7C               	btfsc	124,7,c	;volatile
  4517   0011FC  EF02  F009         	goto	u2591
  4518   001200  EF04  F009         	goto	u2590
  4519   001204                     u2591:
  4520   001204  EFDB  F009         	goto	l619
  4521   001208                     u2590:
  4522   001208                     
  4523                           ;color_instructions.c: 196:             AppendMoves(3,&moves_index,anti_moves_array);
  4524   001208  0E56               	movlw	low _moves_index
  4525   00120A  6E09               	movwf	AppendMoves@moves_index^0,c
  4526   00120C  0E00               	movlw	high _moves_index
  4527   00120E  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4528   001210  0E77               	movlw	low _anti_moves_array
  4529   001212  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4530   001214  0E00               	movlw	high _anti_moves_array
  4531   001216  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4532   001218  0E03               	movlw	3
  4533   00121A  ECE9  F014         	call	_AppendMoves
  4534   00121E  EFDB  F009         	goto	l619
  4535   001222                     l3296:
  4536   001222  0E04               	movlw	4
  4537   001224  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4538   001226  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4539   001228  A4D8               	btfss	status,2,c
  4540   00122A  EF19  F009         	goto	u2601
  4541   00122E  EF1B  F009         	goto	u2600
  4542   001232                     u2601:
  4543   001232  EF39  F009         	goto	l3304
  4544   001236                     u2600:
  4545   001236                     
  4546                           ;color_instructions.c: 200:         YellowInstructions(mL, mR);
  4547   001236  C037  F027         	movff	MoveBuggy@mL,YellowInstructions@mL
  4548   00123A  C038  F028         	movff	MoveBuggy@mL+1,YellowInstructions@mL+1
  4549   00123E  C039  F029         	movff	MoveBuggy@mR,YellowInstructions@mR
  4550   001242  C03A  F02A         	movff	MoveBuggy@mR+1,YellowInstructions@mR+1
  4551   001246  ECAD  F010         	call	_YellowInstructions	;wreg free
  4552   00124A                     
  4553                           ;color_instructions.c: 202:         if(LATDbits.LATD7 != 1){
  4554   00124A  BE7C               	btfsc	124,7,c	;volatile
  4555   00124C  EF2A  F009         	goto	u2611
  4556   001250  EF2C  F009         	goto	u2610
  4557   001254                     u2611:
  4558   001254  EFDB  F009         	goto	l619
  4559   001258                     u2610:
  4560   001258                     
  4561                           ;color_instructions.c: 203:             AppendMoves(9,&moves_index,anti_moves_array);
  4562   001258  0E56               	movlw	low _moves_index
  4563   00125A  6E09               	movwf	AppendMoves@moves_index^0,c
  4564   00125C  0E00               	movlw	high _moves_index
  4565   00125E  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4566   001260  0E77               	movlw	low _anti_moves_array
  4567   001262  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4568   001264  0E00               	movlw	high _anti_moves_array
  4569   001266  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4570   001268  0E09               	movlw	9
  4571   00126A  ECE9  F014         	call	_AppendMoves
  4572   00126E  EFDB  F009         	goto	l619
  4573   001272                     l3304:
  4574   001272  0E05               	movlw	5
  4575   001274  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4576   001276  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4577   001278  A4D8               	btfss	status,2,c
  4578   00127A  EF41  F009         	goto	u2621
  4579   00127E  EF43  F009         	goto	u2620
  4580   001282                     u2621:
  4581   001282  EF61  F009         	goto	l3312
  4582   001286                     u2620:
  4583   001286                     
  4584                           ;color_instructions.c: 207:         PinkInstructions(mL, mR);
  4585   001286  C037  F027         	movff	MoveBuggy@mL,PinkInstructions@mL
  4586   00128A  C038  F028         	movff	MoveBuggy@mL+1,PinkInstructions@mL+1
  4587   00128E  C039  F029         	movff	MoveBuggy@mR,PinkInstructions@mR
  4588   001292  C03A  F02A         	movff	MoveBuggy@mR+1,PinkInstructions@mR+1
  4589   001296  ECF0  F010         	call	_PinkInstructions	;wreg free
  4590   00129A                     
  4591                           ;color_instructions.c: 209:         if(LATDbits.LATD7 != 1){
  4592   00129A  BE7C               	btfsc	124,7,c	;volatile
  4593   00129C  EF52  F009         	goto	u2631
  4594   0012A0  EF54  F009         	goto	u2630
  4595   0012A4                     u2631:
  4596   0012A4  EFDB  F009         	goto	l619
  4597   0012A8                     u2630:
  4598   0012A8                     
  4599                           ;color_instructions.c: 210:             AppendMoves(10,&moves_index,anti_moves_array);
  4600   0012A8  0E56               	movlw	low _moves_index
  4601   0012AA  6E09               	movwf	AppendMoves@moves_index^0,c
  4602   0012AC  0E00               	movlw	high _moves_index
  4603   0012AE  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4604   0012B0  0E77               	movlw	low _anti_moves_array
  4605   0012B2  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4606   0012B4  0E00               	movlw	high _anti_moves_array
  4607   0012B6  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4608   0012B8  0E0A               	movlw	10
  4609   0012BA  ECE9  F014         	call	_AppendMoves
  4610   0012BE  EFDB  F009         	goto	l619
  4611   0012C2                     l3312:
  4612   0012C2  0E06               	movlw	6
  4613   0012C4  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4614   0012C6  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4615   0012C8  A4D8               	btfss	status,2,c
  4616   0012CA  EF69  F009         	goto	u2641
  4617   0012CE  EF6B  F009         	goto	u2640
  4618   0012D2                     u2641:
  4619   0012D2  EF89  F009         	goto	l3320
  4620   0012D6                     u2640:
  4621   0012D6                     
  4622                           ;color_instructions.c: 214:         OrangeInstructions(mL, mR);
  4623   0012D6  C037  F02C         	movff	MoveBuggy@mL,OrangeInstructions@mL
  4624   0012DA  C038  F02D         	movff	MoveBuggy@mL+1,OrangeInstructions@mL+1
  4625   0012DE  C039  F02E         	movff	MoveBuggy@mR,OrangeInstructions@mR
  4626   0012E2  C03A  F02F         	movff	MoveBuggy@mR+1,OrangeInstructions@mR+1
  4627   0012E6  EC33  F011         	call	_OrangeInstructions	;wreg free
  4628   0012EA                     
  4629                           ;color_instructions.c: 215:         if(LATDbits.LATD7 != 1){
  4630   0012EA  BE7C               	btfsc	124,7,c	;volatile
  4631   0012EC  EF7A  F009         	goto	u2651
  4632   0012F0  EF7C  F009         	goto	u2650
  4633   0012F4                     u2651:
  4634   0012F4  EFDB  F009         	goto	l619
  4635   0012F8                     u2650:
  4636   0012F8                     
  4637                           ;color_instructions.c: 216:             AppendMoves(7,&moves_index,anti_moves_array);
  4638   0012F8  0E56               	movlw	low _moves_index
  4639   0012FA  6E09               	movwf	AppendMoves@moves_index^0,c
  4640   0012FC  0E00               	movlw	high _moves_index
  4641   0012FE  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4642   001300  0E77               	movlw	low _anti_moves_array
  4643   001302  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4644   001304  0E00               	movlw	high _anti_moves_array
  4645   001306  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4646   001308  0E07               	movlw	7
  4647   00130A  ECE9  F014         	call	_AppendMoves
  4648   00130E  EFDB  F009         	goto	l619
  4649   001312                     l3320:
  4650   001312  0E07               	movlw	7
  4651   001314  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4652   001316  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4653   001318  A4D8               	btfss	status,2,c
  4654   00131A  EF91  F009         	goto	u2661
  4655   00131E  EF93  F009         	goto	u2660
  4656   001322                     u2661:
  4657   001322  EFB1  F009         	goto	l3328
  4658   001326                     u2660:
  4659   001326                     
  4660                           ;color_instructions.c: 220:         LightBlueInstructions(mL, mR);
  4661   001326  C037  F02C         	movff	MoveBuggy@mL,LightBlueInstructions@mL
  4662   00132A  C038  F02D         	movff	MoveBuggy@mL+1,LightBlueInstructions@mL+1
  4663   00132E  C039  F02E         	movff	MoveBuggy@mR,LightBlueInstructions@mR
  4664   001332  C03A  F02F         	movff	MoveBuggy@mR+1,LightBlueInstructions@mR+1
  4665   001336  EC76  F011         	call	_LightBlueInstructions	;wreg free
  4666   00133A                     
  4667                           ;color_instructions.c: 221:         if(LATDbits.LATD7 != 1){
  4668   00133A  BE7C               	btfsc	124,7,c	;volatile
  4669   00133C  EFA2  F009         	goto	u2671
  4670   001340  EFA4  F009         	goto	u2670
  4671   001344                     u2671:
  4672   001344  EFDB  F009         	goto	l619
  4673   001348                     u2670:
  4674   001348                     
  4675                           ;color_instructions.c: 222:             AppendMoves(6,&moves_index,anti_moves_array);
  4676   001348  0E56               	movlw	low _moves_index
  4677   00134A  6E09               	movwf	AppendMoves@moves_index^0,c
  4678   00134C  0E00               	movlw	high _moves_index
  4679   00134E  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4680   001350  0E77               	movlw	low _anti_moves_array
  4681   001352  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4682   001354  0E00               	movlw	high _anti_moves_array
  4683   001356  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4684   001358  0E06               	movlw	6
  4685   00135A  ECE9  F014         	call	_AppendMoves
  4686   00135E  EFDB  F009         	goto	l619
  4687   001362                     l3328:
  4688   001362  0E09               	movlw	9
  4689   001364  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4690   001366  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4691   001368  A4D8               	btfss	status,2,c
  4692   00136A  EFB9  F009         	goto	u2681
  4693   00136E  EFBB  F009         	goto	u2680
  4694   001372                     u2681:
  4695   001372  EFC7  F009         	goto	l3332
  4696   001376                     u2680:
  4697   001376                     
  4698                           ;color_instructions.c: 228:         AntiYellow(mL, mR);
  4699   001376  C037  F02E         	movff	MoveBuggy@mL,AntiYellow@mL
  4700   00137A  C038  F02F         	movff	MoveBuggy@mL+1,AntiYellow@mL+1
  4701   00137E  C039  F030         	movff	MoveBuggy@mR,AntiYellow@mR
  4702   001382  C03A  F031         	movff	MoveBuggy@mR+1,AntiYellow@mR+1
  4703   001386  ECAC  F00E         	call	_AntiYellow	;wreg free
  4704                           
  4705                           ;color_instructions.c: 229:     }
  4706   00138A  EFDB  F009         	goto	l619
  4707   00138E                     l3332:
  4708   00138E  0E0A               	movlw	10
  4709   001390  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4710   001392  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4711   001394  A4D8               	btfss	status,2,c
  4712   001396  EFCF  F009         	goto	u2691
  4713   00139A  EFD1  F009         	goto	u2690
  4714   00139E                     u2691:
  4715   00139E  EFDB  F009         	goto	l619
  4716   0013A2                     u2690:
  4717   0013A2                     
  4718                           ;color_instructions.c: 231:         AntiPink(mL, mR);
  4719   0013A2  C037  F02E         	movff	MoveBuggy@mL,AntiPink@mL
  4720   0013A6  C038  F02F         	movff	MoveBuggy@mL+1,AntiPink@mL+1
  4721   0013AA  C039  F030         	movff	MoveBuggy@mR,AntiPink@mR
  4722   0013AE  C03A  F031         	movff	MoveBuggy@mR+1,AntiPink@mR+1
  4723   0013B2  EC05  F00F         	call	_AntiPink	;wreg free
  4724   0013B6                     l619:
  4725   0013B6  0012               	return		;funcret
  4726   0013B8                     __end_of_MoveBuggy:
  4727                           	callstack 0
  4728                           
  4729 ;; *************** function _YellowInstructions *****************
  4730 ;; Defined at:
  4731 ;;		line 57 in file "color_instructions.c"
  4732 ;; Parameters:    Size  Location     Type
  4733 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  4734 ;;		 -> main@motorL(9), 
  4735 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  4736 ;;		 -> main@motorR(9), 
  4737 ;; Auto vars:     Size  Location     Type
  4738 ;;  a               1   44[COMRAM] unsigned char 
  4739 ;; Return value:  Size  Location     Type
  4740 ;;                  1    wreg      void 
  4741 ;; Registers used:
  4742 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4743 ;; Tracked objects:
  4744 ;;		On entry : 0/0
  4745 ;;		On exit  : 0/0
  4746 ;;		Unchanged: 0/0
  4747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4748 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4749 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4750 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4751 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4752 ;;Total ram usage:        7 bytes
  4753 ;; Hardware stack levels used: 1
  4754 ;; Hardware stack levels required when called: 11
  4755 ;; This function calls:
  4756 ;;		_fullSpeedBackwards
  4757 ;;		_stop
  4758 ;;		_turnRight90
  4759 ;; This function is called by:
  4760 ;;		_MoveBuggy
  4761 ;; This function uses a non-reentrant model
  4762 ;;
  4763                           
  4764                           	psect	text14
  4765   00215A                     __ptext14:
  4766                           	callstack 0
  4767   00215A                     _YellowInstructions:
  4768                           	callstack 17
  4769   00215A                     
  4770                           ;color_instructions.c: 59:     unsigned char a=0;
  4771   00215A  0E00               	movlw	0
  4772   00215C  6E2D               	movwf	YellowInstructions@a^0,c
  4773                           
  4774                           ;color_instructions.c: 60:     while (a<45){
  4775   00215E  EFBC  F010         	goto	l3110
  4776   002162                     l3106:
  4777                           
  4778                           ;color_instructions.c: 61:         fullSpeedBackwards(mL, mR);
  4779   002162  C027  F01C         	movff	YellowInstructions@mL,fullSpeedBackwards@mL
  4780   002166  C028  F01D         	movff	YellowInstructions@mL+1,fullSpeedBackwards@mL+1
  4781   00216A  C029  F01E         	movff	YellowInstructions@mR,fullSpeedBackwards@mR
  4782   00216E  C02A  F01F         	movff	YellowInstructions@mR+1,fullSpeedBackwards@mR+1
  4783   002172  EC55  F00D         	call	_fullSpeedBackwards	;wreg free
  4784   002176                     
  4785                           ;color_instructions.c: 62:         a++;
  4786   002176  2A2D               	incf	YellowInstructions@a^0,f,c
  4787   002178                     l3110:
  4788                           
  4789                           ;color_instructions.c: 60:     while (a<45){
  4790   002178  0E2C               	movlw	44
  4791   00217A  642D               	cpfsgt	YellowInstructions@a^0,c
  4792   00217C  EFC2  F010         	goto	u2421
  4793   002180  EFC4  F010         	goto	u2420
  4794   002184                     u2421:
  4795   002184  EFB1  F010         	goto	l3106
  4796   002188                     u2420:
  4797   002188  EFD1  F010         	goto	l3116
  4798   00218C                     l3112:
  4799                           
  4800                           ;color_instructions.c: 65:         stop(mL, mR);
  4801   00218C  C027  F01C         	movff	YellowInstructions@mL,stop@mL
  4802   002190  C028  F01D         	movff	YellowInstructions@mL+1,stop@mL+1
  4803   002194  C029  F01E         	movff	YellowInstructions@mR,stop@mR
  4804   002198  C02A  F01F         	movff	YellowInstructions@mR+1,stop@mR+1
  4805   00219C  EC42  F00E         	call	_stop	;wreg free
  4806   0021A0                     
  4807                           ;color_instructions.c: 66:         a--;
  4808   0021A0  062D               	decf	YellowInstructions@a^0,f,c
  4809   0021A2                     l3116:
  4810                           
  4811                           ;color_instructions.c: 64:     while (a>0){
  4812   0021A2  502D               	movf	YellowInstructions@a^0,w,c
  4813   0021A4  A4D8               	btfss	status,2,c
  4814   0021A6  EFD7  F010         	goto	u2431
  4815   0021AA  EFD9  F010         	goto	u2430
  4816   0021AE                     u2431:
  4817   0021AE  EFC6  F010         	goto	l3112
  4818   0021B2                     u2430:
  4819   0021B2                     
  4820                           ;color_instructions.c: 68:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4821   0021B2  0E05               	movlw	5
  4822   0021B4  6E2C               	movwf	(??_YellowInstructions+1)^0,c
  4823   0021B6  0E0F               	movlw	15
  4824   0021B8  6E2B               	movwf	??_YellowInstructions^0,c
  4825   0021BA  0EF1               	movlw	241
  4826   0021BC                     u4697:
  4827   0021BC  2EE8               	decfsz	wreg,f,c
  4828   0021BE  D7FE               	bra	u4697
  4829   0021C0  2E2B               	decfsz	??_YellowInstructions^0,f,c
  4830   0021C2  D7FC               	bra	u4697
  4831   0021C4  2E2C               	decfsz	(??_YellowInstructions+1)^0,f,c
  4832   0021C6  D7FA               	bra	u4697
  4833   0021C8  F000               	nop	
  4834   0021CA                     
  4835                           ;color_instructions.c: 69:     turnRight90(mL, mR);
  4836   0021CA  C027  F022         	movff	YellowInstructions@mL,turnRight90@mL
  4837   0021CE  C028  F023         	movff	YellowInstructions@mL+1,turnRight90@mL+1
  4838   0021D2  C029  F024         	movff	YellowInstructions@mR,turnRight90@mR
  4839   0021D6  C02A  F025         	movff	YellowInstructions@mR+1,turnRight90@mR+1
  4840   0021DA  ECB7  F00F         	call	_turnRight90	;wreg free
  4841   0021DE  0012               	return		;funcret
  4842   0021E0                     __end_of_YellowInstructions:
  4843                           	callstack 0
  4844                           
  4845 ;; *************** function _PinkInstructions *****************
  4846 ;; Defined at:
  4847 ;;		line 72 in file "color_instructions.c"
  4848 ;; Parameters:    Size  Location     Type
  4849 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  4850 ;;		 -> main@motorL(9), 
  4851 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  4852 ;;		 -> main@motorR(9), 
  4853 ;; Auto vars:     Size  Location     Type
  4854 ;;  a               1   44[COMRAM] unsigned char 
  4855 ;; Return value:  Size  Location     Type
  4856 ;;                  1    wreg      void 
  4857 ;; Registers used:
  4858 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4859 ;; Tracked objects:
  4860 ;;		On entry : 0/0
  4861 ;;		On exit  : 0/0
  4862 ;;		Unchanged: 0/0
  4863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4864 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4865 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4866 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4867 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4868 ;;Total ram usage:        7 bytes
  4869 ;; Hardware stack levels used: 1
  4870 ;; Hardware stack levels required when called: 11
  4871 ;; This function calls:
  4872 ;;		_fullSpeedBackwards
  4873 ;;		_stop
  4874 ;;		_turnLeft90
  4875 ;; This function is called by:
  4876 ;;		_MoveBuggy
  4877 ;; This function uses a non-reentrant model
  4878 ;;
  4879                           
  4880                           	psect	text15
  4881   0021E0                     __ptext15:
  4882                           	callstack 0
  4883   0021E0                     _PinkInstructions:
  4884                           	callstack 17
  4885   0021E0                     
  4886                           ;color_instructions.c: 73:     unsigned char a=0;
  4887   0021E0  0E00               	movlw	0
  4888   0021E2  6E2D               	movwf	PinkInstructions@a^0,c
  4889                           
  4890                           ;color_instructions.c: 74:     while (a<45){
  4891   0021E4  EFFF  F010         	goto	l3128
  4892   0021E8                     l3124:
  4893                           
  4894                           ;color_instructions.c: 75:         fullSpeedBackwards(mL, mR);
  4895   0021E8  C027  F01C         	movff	PinkInstructions@mL,fullSpeedBackwards@mL
  4896   0021EC  C028  F01D         	movff	PinkInstructions@mL+1,fullSpeedBackwards@mL+1
  4897   0021F0  C029  F01E         	movff	PinkInstructions@mR,fullSpeedBackwards@mR
  4898   0021F4  C02A  F01F         	movff	PinkInstructions@mR+1,fullSpeedBackwards@mR+1
  4899   0021F8  EC55  F00D         	call	_fullSpeedBackwards	;wreg free
  4900   0021FC                     
  4901                           ;color_instructions.c: 76:         a++;
  4902   0021FC  2A2D               	incf	PinkInstructions@a^0,f,c
  4903   0021FE                     l3128:
  4904                           
  4905                           ;color_instructions.c: 74:     while (a<45){
  4906   0021FE  0E2C               	movlw	44
  4907   002200  642D               	cpfsgt	PinkInstructions@a^0,c
  4908   002202  EF05  F011         	goto	u2441
  4909   002206  EF07  F011         	goto	u2440
  4910   00220A                     u2441:
  4911   00220A  EFF4  F010         	goto	l3124
  4912   00220E                     u2440:
  4913   00220E  EF14  F011         	goto	l3134
  4914   002212                     l3130:
  4915                           
  4916                           ;color_instructions.c: 79:         stop(mL, mR);
  4917   002212  C027  F01C         	movff	PinkInstructions@mL,stop@mL
  4918   002216  C028  F01D         	movff	PinkInstructions@mL+1,stop@mL+1
  4919   00221A  C029  F01E         	movff	PinkInstructions@mR,stop@mR
  4920   00221E  C02A  F01F         	movff	PinkInstructions@mR+1,stop@mR+1
  4921   002222  EC42  F00E         	call	_stop	;wreg free
  4922   002226                     
  4923                           ;color_instructions.c: 80:         a--;
  4924   002226  062D               	decf	PinkInstructions@a^0,f,c
  4925   002228                     l3134:
  4926                           
  4927                           ;color_instructions.c: 78:     while (a>0){
  4928   002228  502D               	movf	PinkInstructions@a^0,w,c
  4929   00222A  A4D8               	btfss	status,2,c
  4930   00222C  EF1A  F011         	goto	u2451
  4931   002230  EF1C  F011         	goto	u2450
  4932   002234                     u2451:
  4933   002234  EF09  F011         	goto	l3130
  4934   002238                     u2450:
  4935   002238                     
  4936                           ;color_instructions.c: 82:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4937   002238  0E05               	movlw	5
  4938   00223A  6E2C               	movwf	(??_PinkInstructions+1)^0,c
  4939   00223C  0E0F               	movlw	15
  4940   00223E  6E2B               	movwf	??_PinkInstructions^0,c
  4941   002240  0EF1               	movlw	241
  4942   002242                     u4707:
  4943   002242  2EE8               	decfsz	wreg,f,c
  4944   002244  D7FE               	bra	u4707
  4945   002246  2E2B               	decfsz	??_PinkInstructions^0,f,c
  4946   002248  D7FC               	bra	u4707
  4947   00224A  2E2C               	decfsz	(??_PinkInstructions+1)^0,f,c
  4948   00224C  D7FA               	bra	u4707
  4949   00224E  F000               	nop	
  4950   002250                     
  4951                           ;color_instructions.c: 83:     turnLeft90(mL, mR);
  4952   002250  C027  F022         	movff	PinkInstructions@mL,turnLeft90@mL
  4953   002254  C028  F023         	movff	PinkInstructions@mL+1,turnLeft90@mL+1
  4954   002258  C029  F024         	movff	PinkInstructions@mR,turnLeft90@mR
  4955   00225C  C02A  F025         	movff	PinkInstructions@mR+1,turnLeft90@mR+1
  4956   002260  EC0E  F010         	call	_turnLeft90	;wreg free
  4957   002264  0012               	return		;funcret
  4958   002266                     __end_of_PinkInstructions:
  4959                           	callstack 0
  4960                           
  4961 ;; *************** function _OrangeInstructions *****************
  4962 ;; Defined at:
  4963 ;;		line 87 in file "color_instructions.c"
  4964 ;; Parameters:    Size  Location     Type
  4965 ;;  mL              2   43[COMRAM] PTR struct DC_motor
  4966 ;;		 -> main@motorL(9), 
  4967 ;;  mR              2   45[COMRAM] PTR struct DC_motor
  4968 ;;		 -> main@motorR(9), 
  4969 ;; Auto vars:     Size  Location     Type
  4970 ;;  a               1   49[COMRAM] unsigned char 
  4971 ;; Return value:  Size  Location     Type
  4972 ;;                  1    wreg      void 
  4973 ;; Registers used:
  4974 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4975 ;; Tracked objects:
  4976 ;;		On entry : 0/0
  4977 ;;		On exit  : 0/0
  4978 ;;		Unchanged: 0/0
  4979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4980 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4981 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4982 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4983 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4984 ;;Total ram usage:        7 bytes
  4985 ;; Hardware stack levels used: 1
  4986 ;; Hardware stack levels required when called: 12
  4987 ;; This function calls:
  4988 ;;		_fullSpeedBackwards
  4989 ;;		_stop
  4990 ;;		_turnRight135
  4991 ;; This function is called by:
  4992 ;;		_MoveBuggy
  4993 ;; This function uses a non-reentrant model
  4994 ;;
  4995                           
  4996                           	psect	text16
  4997   002266                     __ptext16:
  4998                           	callstack 0
  4999   002266                     _OrangeInstructions:
  5000                           	callstack 16
  5001   002266                     
  5002                           ;color_instructions.c: 88:     unsigned char a=0;
  5003   002266  0E00               	movlw	0
  5004   002268  6E32               	movwf	OrangeInstructions@a^0,c
  5005                           
  5006                           ;color_instructions.c: 89:     while (a<16){
  5007   00226A  EF42  F011         	goto	l3146
  5008   00226E                     l3142:
  5009                           
  5010                           ;color_instructions.c: 90:         fullSpeedBackwards(mL, mR);
  5011   00226E  C02C  F01C         	movff	OrangeInstructions@mL,fullSpeedBackwards@mL
  5012   002272  C02D  F01D         	movff	OrangeInstructions@mL+1,fullSpeedBackwards@mL+1
  5013   002276  C02E  F01E         	movff	OrangeInstructions@mR,fullSpeedBackwards@mR
  5014   00227A  C02F  F01F         	movff	OrangeInstructions@mR+1,fullSpeedBackwards@mR+1
  5015   00227E  EC55  F00D         	call	_fullSpeedBackwards	;wreg free
  5016   002282                     
  5017                           ;color_instructions.c: 91:         a++;
  5018   002282  2A32               	incf	OrangeInstructions@a^0,f,c
  5019   002284                     l3146:
  5020                           
  5021                           ;color_instructions.c: 89:     while (a<16){
  5022   002284  0E0F               	movlw	15
  5023   002286  6432               	cpfsgt	OrangeInstructions@a^0,c
  5024   002288  EF48  F011         	goto	u2461
  5025   00228C  EF4A  F011         	goto	u2460
  5026   002290                     u2461:
  5027   002290  EF37  F011         	goto	l3142
  5028   002294                     u2460:
  5029   002294  EF57  F011         	goto	l3152
  5030   002298                     l3148:
  5031                           
  5032                           ;color_instructions.c: 94:         stop(mL, mR);
  5033   002298  C02C  F01C         	movff	OrangeInstructions@mL,stop@mL
  5034   00229C  C02D  F01D         	movff	OrangeInstructions@mL+1,stop@mL+1
  5035   0022A0  C02E  F01E         	movff	OrangeInstructions@mR,stop@mR
  5036   0022A4  C02F  F01F         	movff	OrangeInstructions@mR+1,stop@mR+1
  5037   0022A8  EC42  F00E         	call	_stop	;wreg free
  5038   0022AC                     
  5039                           ;color_instructions.c: 95:         a--;
  5040   0022AC  0632               	decf	OrangeInstructions@a^0,f,c
  5041   0022AE                     l3152:
  5042                           
  5043                           ;color_instructions.c: 93:     while (a>0){
  5044   0022AE  5032               	movf	OrangeInstructions@a^0,w,c
  5045   0022B0  A4D8               	btfss	status,2,c
  5046   0022B2  EF5D  F011         	goto	u2471
  5047   0022B6  EF5F  F011         	goto	u2470
  5048   0022BA                     u2471:
  5049   0022BA  EF4C  F011         	goto	l3148
  5050   0022BE                     u2470:
  5051   0022BE                     
  5052                           ;color_instructions.c: 97:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5053   0022BE  0E05               	movlw	5
  5054   0022C0  6E31               	movwf	(??_OrangeInstructions+1)^0,c
  5055   0022C2  0E0F               	movlw	15
  5056   0022C4  6E30               	movwf	??_OrangeInstructions^0,c
  5057   0022C6  0EF1               	movlw	241
  5058   0022C8                     u4717:
  5059   0022C8  2EE8               	decfsz	wreg,f,c
  5060   0022CA  D7FE               	bra	u4717
  5061   0022CC  2E30               	decfsz	??_OrangeInstructions^0,f,c
  5062   0022CE  D7FC               	bra	u4717
  5063   0022D0  2E31               	decfsz	(??_OrangeInstructions+1)^0,f,c
  5064   0022D2  D7FA               	bra	u4717
  5065   0022D4  F000               	nop	
  5066   0022D6                     
  5067                           ;color_instructions.c: 98:     turnRight135(mL, mR);
  5068   0022D6  C02C  F027         	movff	OrangeInstructions@mL,turnRight135@mL
  5069   0022DA  C02D  F028         	movff	OrangeInstructions@mL+1,turnRight135@mL+1
  5070   0022DE  C02E  F029         	movff	OrangeInstructions@mR,turnRight135@mR
  5071   0022E2  C02F  F02A         	movff	OrangeInstructions@mR+1,turnRight135@mR+1
  5072   0022E6  EC79  F012         	call	_turnRight135	;wreg free
  5073   0022EA  0012               	return		;funcret
  5074   0022EC                     __end_of_OrangeInstructions:
  5075                           	callstack 0
  5076                           
  5077 ;; *************** function _turnRight135 *****************
  5078 ;; Defined at:
  5079 ;;		line 249 in file "dc_motor.c"
  5080 ;; Parameters:    Size  Location     Type
  5081 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  5082 ;;		 -> main@motorL(9), 
  5083 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  5084 ;;		 -> main@motorR(9), 
  5085 ;; Auto vars:     Size  Location     Type
  5086 ;;  a               1   42[COMRAM] unsigned char 
  5087 ;; Return value:  Size  Location     Type
  5088 ;;                  1    wreg      void 
  5089 ;; Registers used:
  5090 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5091 ;; Tracked objects:
  5092 ;;		On entry : 0/0
  5093 ;;		On exit  : 0/0
  5094 ;;		Unchanged: 0/0
  5095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5096 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5097 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5099 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5100 ;;Total ram usage:        5 bytes
  5101 ;; Hardware stack levels used: 1
  5102 ;; Hardware stack levels required when called: 11
  5103 ;; This function calls:
  5104 ;;		_stop
  5105 ;;		_turnRight
  5106 ;;		_turnRight90
  5107 ;; This function is called by:
  5108 ;;		_OrangeInstructions
  5109 ;; This function uses a non-reentrant model
  5110 ;;
  5111                           
  5112                           	psect	text17
  5113   0024F2                     __ptext17:
  5114                           	callstack 0
  5115   0024F2                     _turnRight135:
  5116                           	callstack 16
  5117   0024F2                     
  5118                           ;dc_motor.c: 251:     turnRight90(mL,mR);
  5119   0024F2  C027  F022         	movff	turnRight135@mL,turnRight90@mL
  5120   0024F6  C028  F023         	movff	turnRight135@mL+1,turnRight90@mL+1
  5121   0024FA  C029  F024         	movff	turnRight135@mR,turnRight90@mR
  5122   0024FE  C02A  F025         	movff	turnRight135@mR+1,turnRight90@mR+1
  5123   002502  ECB7  F00F         	call	_turnRight90	;wreg free
  5124   002506                     
  5125                           ;dc_motor.c: 252:     unsigned char a=0;
  5126   002506  0E00               	movlw	0
  5127   002508  6E2B               	movwf	turnRight135@a^0,c
  5128                           
  5129                           ;dc_motor.c: 253:     while(a<15){
  5130   00250A  EF92  F012         	goto	l2978
  5131   00250E                     l2974:
  5132                           
  5133                           ;dc_motor.c: 254:         turnRight(mL, mR);
  5134   00250E  C027  F01C         	movff	turnRight135@mL,turnRight@mL
  5135   002512  C028  F01D         	movff	turnRight135@mL+1,turnRight@mL+1
  5136   002516  C029  F01E         	movff	turnRight135@mR,turnRight@mR
  5137   00251A  C02A  F01F         	movff	turnRight135@mR+1,turnRight@mR+1
  5138   00251E  ECF0  F00B         	call	_turnRight	;wreg free
  5139   002522                     
  5140                           ;dc_motor.c: 255:         a++;
  5141   002522  2A2B               	incf	turnRight135@a^0,f,c
  5142   002524                     l2978:
  5143                           
  5144                           ;dc_motor.c: 253:     while(a<15){
  5145   002524  0E0E               	movlw	14
  5146   002526  642B               	cpfsgt	turnRight135@a^0,c
  5147   002528  EF98  F012         	goto	u2301
  5148   00252C  EF9A  F012         	goto	u2300
  5149   002530                     u2301:
  5150   002530  EF87  F012         	goto	l2974
  5151   002534                     u2300:
  5152   002534  EFA7  F012         	goto	l2984
  5153   002538                     l2980:
  5154                           
  5155                           ;dc_motor.c: 258:         stop(mL, mR);
  5156   002538  C027  F01C         	movff	turnRight135@mL,stop@mL
  5157   00253C  C028  F01D         	movff	turnRight135@mL+1,stop@mL+1
  5158   002540  C029  F01E         	movff	turnRight135@mR,stop@mR
  5159   002544  C02A  F01F         	movff	turnRight135@mR+1,stop@mR+1
  5160   002548  EC42  F00E         	call	_stop	;wreg free
  5161   00254C                     
  5162                           ;dc_motor.c: 259:         a--;
  5163   00254C  062B               	decf	turnRight135@a^0,f,c
  5164   00254E                     l2984:
  5165                           
  5166                           ;dc_motor.c: 257:     while(a>0){
  5167   00254E  502B               	movf	turnRight135@a^0,w,c
  5168   002550  A4D8               	btfss	status,2,c
  5169   002552  EFAD  F012         	goto	u2311
  5170   002556  EFAF  F012         	goto	u2310
  5171   00255A                     u2311:
  5172   00255A  EF9C  F012         	goto	l2980
  5173   00255E                     u2310:
  5174   00255E  0012               	return		;funcret
  5175   002560                     __end_of_turnRight135:
  5176                           	callstack 0
  5177                           
  5178 ;; *************** function _LightBlueInstructions *****************
  5179 ;; Defined at:
  5180 ;;		line 101 in file "color_instructions.c"
  5181 ;; Parameters:    Size  Location     Type
  5182 ;;  mL              2   43[COMRAM] PTR struct DC_motor
  5183 ;;		 -> main@motorL(9), 
  5184 ;;  mR              2   45[COMRAM] PTR struct DC_motor
  5185 ;;		 -> main@motorR(9), 
  5186 ;; Auto vars:     Size  Location     Type
  5187 ;;  a               1   49[COMRAM] unsigned char 
  5188 ;; Return value:  Size  Location     Type
  5189 ;;                  1    wreg      void 
  5190 ;; Registers used:
  5191 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5192 ;; Tracked objects:
  5193 ;;		On entry : 0/0
  5194 ;;		On exit  : 0/0
  5195 ;;		Unchanged: 0/0
  5196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5197 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5198 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5199 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5200 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5201 ;;Total ram usage:        7 bytes
  5202 ;; Hardware stack levels used: 1
  5203 ;; Hardware stack levels required when called: 12
  5204 ;; This function calls:
  5205 ;;		_fullSpeedBackwards
  5206 ;;		_stop
  5207 ;;		_turnLeft135
  5208 ;; This function is called by:
  5209 ;;		_MoveBuggy
  5210 ;; This function uses a non-reentrant model
  5211 ;;
  5212                           
  5213                           	psect	text18
  5214   0022EC                     __ptext18:
  5215                           	callstack 0
  5216   0022EC                     _LightBlueInstructions:
  5217                           	callstack 16
  5218   0022EC                     
  5219                           ;color_instructions.c: 102:     unsigned char a=0;
  5220   0022EC  0E00               	movlw	0
  5221   0022EE  6E32               	movwf	LightBlueInstructions@a^0,c
  5222                           
  5223                           ;color_instructions.c: 103:     while (a<16){
  5224   0022F0  EF85  F011         	goto	l3164
  5225   0022F4                     l3160:
  5226                           
  5227                           ;color_instructions.c: 104:         fullSpeedBackwards(mL, mR);
  5228   0022F4  C02C  F01C         	movff	LightBlueInstructions@mL,fullSpeedBackwards@mL
  5229   0022F8  C02D  F01D         	movff	LightBlueInstructions@mL+1,fullSpeedBackwards@mL+1
  5230   0022FC  C02E  F01E         	movff	LightBlueInstructions@mR,fullSpeedBackwards@mR
  5231   002300  C02F  F01F         	movff	LightBlueInstructions@mR+1,fullSpeedBackwards@mR+1
  5232   002304  EC55  F00D         	call	_fullSpeedBackwards	;wreg free
  5233   002308                     
  5234                           ;color_instructions.c: 105:         a++;
  5235   002308  2A32               	incf	LightBlueInstructions@a^0,f,c
  5236   00230A                     l3164:
  5237                           
  5238                           ;color_instructions.c: 103:     while (a<16){
  5239   00230A  0E0F               	movlw	15
  5240   00230C  6432               	cpfsgt	LightBlueInstructions@a^0,c
  5241   00230E  EF8B  F011         	goto	u2481
  5242   002312  EF8D  F011         	goto	u2480
  5243   002316                     u2481:
  5244   002316  EF7A  F011         	goto	l3160
  5245   00231A                     u2480:
  5246   00231A  EF9A  F011         	goto	l3170
  5247   00231E                     l3166:
  5248                           
  5249                           ;color_instructions.c: 108:         stop(mL, mR);
  5250   00231E  C02C  F01C         	movff	LightBlueInstructions@mL,stop@mL
  5251   002322  C02D  F01D         	movff	LightBlueInstructions@mL+1,stop@mL+1
  5252   002326  C02E  F01E         	movff	LightBlueInstructions@mR,stop@mR
  5253   00232A  C02F  F01F         	movff	LightBlueInstructions@mR+1,stop@mR+1
  5254   00232E  EC42  F00E         	call	_stop	;wreg free
  5255   002332                     
  5256                           ;color_instructions.c: 109:         a--;
  5257   002332  0632               	decf	LightBlueInstructions@a^0,f,c
  5258   002334                     l3170:
  5259                           
  5260                           ;color_instructions.c: 107:     while (a>0){
  5261   002334  5032               	movf	LightBlueInstructions@a^0,w,c
  5262   002336  A4D8               	btfss	status,2,c
  5263   002338  EFA0  F011         	goto	u2491
  5264   00233C  EFA2  F011         	goto	u2490
  5265   002340                     u2491:
  5266   002340  EF8F  F011         	goto	l3166
  5267   002344                     u2490:
  5268   002344                     
  5269                           ;color_instructions.c: 111:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5270   002344  0E05               	movlw	5
  5271   002346  6E31               	movwf	(??_LightBlueInstructions+1)^0,c
  5272   002348  0E0F               	movlw	15
  5273   00234A  6E30               	movwf	??_LightBlueInstructions^0,c
  5274   00234C  0EF1               	movlw	241
  5275   00234E                     u4727:
  5276   00234E  2EE8               	decfsz	wreg,f,c
  5277   002350  D7FE               	bra	u4727
  5278   002352  2E30               	decfsz	??_LightBlueInstructions^0,f,c
  5279   002354  D7FC               	bra	u4727
  5280   002356  2E31               	decfsz	(??_LightBlueInstructions+1)^0,f,c
  5281   002358  D7FA               	bra	u4727
  5282   00235A  F000               	nop	
  5283   00235C                     
  5284                           ;color_instructions.c: 112:     turnLeft135(mL, mR);
  5285   00235C  C02C  F027         	movff	LightBlueInstructions@mL,turnLeft135@mL
  5286   002360  C02D  F028         	movff	LightBlueInstructions@mL+1,turnLeft135@mL+1
  5287   002364  C02E  F029         	movff	LightBlueInstructions@mR,turnLeft135@mR
  5288   002368  C02F  F02A         	movff	LightBlueInstructions@mR+1,turnLeft135@mR+1
  5289   00236C  ECB0  F012         	call	_turnLeft135	;wreg free
  5290   002370  0012               	return		;funcret
  5291   002372                     __end_of_LightBlueInstructions:
  5292                           	callstack 0
  5293                           
  5294 ;; *************** function _turnLeft135 *****************
  5295 ;; Defined at:
  5296 ;;		line 263 in file "dc_motor.c"
  5297 ;; Parameters:    Size  Location     Type
  5298 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  5299 ;;		 -> main@motorL(9), 
  5300 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  5301 ;;		 -> main@motorR(9), 
  5302 ;; Auto vars:     Size  Location     Type
  5303 ;;  a               1   42[COMRAM] unsigned char 
  5304 ;; Return value:  Size  Location     Type
  5305 ;;                  1    wreg      void 
  5306 ;; Registers used:
  5307 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5308 ;; Tracked objects:
  5309 ;;		On entry : 0/0
  5310 ;;		On exit  : 0/0
  5311 ;;		Unchanged: 0/0
  5312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5313 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5314 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5316 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5317 ;;Total ram usage:        5 bytes
  5318 ;; Hardware stack levels used: 1
  5319 ;; Hardware stack levels required when called: 11
  5320 ;; This function calls:
  5321 ;;		_stop
  5322 ;;		_turnLeft
  5323 ;;		_turnLeft90
  5324 ;; This function is called by:
  5325 ;;		_LightBlueInstructions
  5326 ;; This function uses a non-reentrant model
  5327 ;;
  5328                           
  5329                           	psect	text19
  5330   002560                     __ptext19:
  5331                           	callstack 0
  5332   002560                     _turnLeft135:
  5333                           	callstack 16
  5334   002560                     
  5335                           ;dc_motor.c: 265:     turnLeft90(mL,mR);
  5336   002560  C027  F022         	movff	turnLeft135@mL,turnLeft90@mL
  5337   002564  C028  F023         	movff	turnLeft135@mL+1,turnLeft90@mL+1
  5338   002568  C029  F024         	movff	turnLeft135@mR,turnLeft90@mR
  5339   00256C  C02A  F025         	movff	turnLeft135@mR+1,turnLeft90@mR+1
  5340   002570  EC0E  F010         	call	_turnLeft90	;wreg free
  5341   002574                     
  5342                           ;dc_motor.c: 266:     unsigned char a=0;
  5343   002574  0E00               	movlw	0
  5344   002576  6E2B               	movwf	turnLeft135@a^0,c
  5345                           
  5346                           ;dc_motor.c: 267:     while(a<16){
  5347   002578  EFC9  F012         	goto	l2994
  5348   00257C                     l2990:
  5349                           
  5350                           ;dc_motor.c: 268:         turnLeft(mL, mR);
  5351   00257C  C027  F01C         	movff	turnLeft135@mL,turnLeft@mL
  5352   002580  C028  F01D         	movff	turnLeft135@mL+1,turnLeft@mL+1
  5353   002584  C029  F01E         	movff	turnLeft135@mR,turnLeft@mR
  5354   002588  C02A  F01F         	movff	turnLeft135@mR+1,turnLeft@mR+1
  5355   00258C  ECDE  F00C         	call	_turnLeft	;wreg free
  5356   002590                     
  5357                           ;dc_motor.c: 269:         a++;
  5358   002590  2A2B               	incf	turnLeft135@a^0,f,c
  5359   002592                     l2994:
  5360                           
  5361                           ;dc_motor.c: 267:     while(a<16){
  5362   002592  0E0F               	movlw	15
  5363   002594  642B               	cpfsgt	turnLeft135@a^0,c
  5364   002596  EFCF  F012         	goto	u2321
  5365   00259A  EFD1  F012         	goto	u2320
  5366   00259E                     u2321:
  5367   00259E  EFBE  F012         	goto	l2990
  5368   0025A2                     u2320:
  5369   0025A2  EFDE  F012         	goto	l3000
  5370   0025A6                     l2996:
  5371                           
  5372                           ;dc_motor.c: 272:         stop(mL, mR);
  5373   0025A6  C027  F01C         	movff	turnLeft135@mL,stop@mL
  5374   0025AA  C028  F01D         	movff	turnLeft135@mL+1,stop@mL+1
  5375   0025AE  C029  F01E         	movff	turnLeft135@mR,stop@mR
  5376   0025B2  C02A  F01F         	movff	turnLeft135@mR+1,stop@mR+1
  5377   0025B6  EC42  F00E         	call	_stop	;wreg free
  5378   0025BA                     
  5379                           ;dc_motor.c: 273:         a--;
  5380   0025BA  062B               	decf	turnLeft135@a^0,f,c
  5381   0025BC                     l3000:
  5382                           
  5383                           ;dc_motor.c: 271:     while(a>0){
  5384   0025BC  502B               	movf	turnLeft135@a^0,w,c
  5385   0025BE  A4D8               	btfss	status,2,c
  5386   0025C0  EFE4  F012         	goto	u2331
  5387   0025C4  EFE6  F012         	goto	u2330
  5388   0025C8                     u2331:
  5389   0025C8  EFD3  F012         	goto	l2996
  5390   0025CC                     u2330:
  5391   0025CC  0012               	return		;funcret
  5392   0025CE                     __end_of_turnLeft135:
  5393                           	callstack 0
  5394                           
  5395 ;; *************** function _AppendMoves *****************
  5396 ;; Defined at:
  5397 ;;		line 17 in file "Memorization.c"
  5398 ;; Parameters:    Size  Location     Type
  5399 ;;  temp            1    wreg     unsigned char 
  5400 ;;  moves_index     2    8[COMRAM] PTR unsigned char 
  5401 ;;		 -> moves_index(1), 
  5402 ;;  anti_moves_a    2   10[COMRAM] PTR unsigned char 
  5403 ;;		 -> anti_moves_array(40), 
  5404 ;; Auto vars:     Size  Location     Type
  5405 ;;  temp            1   13[COMRAM] unsigned char 
  5406 ;; Return value:  Size  Location     Type
  5407 ;;                  1    wreg      void 
  5408 ;; Registers used:
  5409 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5410 ;; Tracked objects:
  5411 ;;		On entry : 0/0
  5412 ;;		On exit  : 0/0
  5413 ;;		Unchanged: 0/0
  5414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5415 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5416 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5417 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5418 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5419 ;;Total ram usage:        6 bytes
  5420 ;; Hardware stack levels used: 1
  5421 ;; Hardware stack levels required when called: 7
  5422 ;; This function calls:
  5423 ;;		Nothing
  5424 ;; This function is called by:
  5425 ;;		_MoveBuggy
  5426 ;; This function uses a non-reentrant model
  5427 ;;
  5428                           
  5429                           	psect	text20
  5430   0029D2                     __ptext20:
  5431                           	callstack 0
  5432   0029D2                     _AppendMoves:
  5433                           	callstack 21
  5434                           
  5435                           ;incstack = 0
  5436                           ;AppendMoves@temp stored from wreg
  5437   0029D2  6E0E               	movwf	AppendMoves@temp^0,c
  5438   0029D4                     
  5439                           ;Memorization.c: 19:     anti_moves_array[(*moves_index)++] = temp;
  5440   0029D4  C009  FFD9         	movff	AppendMoves@moves_index,fsr2l
  5441   0029D8  C00A  FFDA         	movff	AppendMoves@moves_index+1,fsr2h
  5442   0029DC  CFDF F00D          	movff	indf2,??_AppendMoves
  5443   0029E0  0E01               	movlw	1
  5444   0029E2  26DF               	addwf	indf2,f,c
  5445   0029E4  500D               	movf	??_AppendMoves^0,w,c
  5446   0029E6  240B               	addwf	AppendMoves@anti_moves_array^0,w,c
  5447   0029E8  6ED9               	movwf	fsr2l,c
  5448   0029EA  0E00               	movlw	0
  5449   0029EC  200C               	addwfc	(AppendMoves@anti_moves_array+1)^0,w,c
  5450   0029EE  6EDA               	movwf	fsr2h,c
  5451   0029F0  C00E  FFDF         	movff	AppendMoves@temp,indf2
  5452   0029F4  0012               	return		;funcret
  5453   0029F6                     __end_of_AppendMoves:
  5454                           	callstack 0
  5455                           
  5456 ;; *************** function _AntiYellow *****************
  5457 ;; Defined at:
  5458 ;;		line 115 in file "color_instructions.c"
  5459 ;; Parameters:    Size  Location     Type
  5460 ;;  mL              2   45[COMRAM] PTR struct DC_motor
  5461 ;;		 -> main@motorL(9), 
  5462 ;;  mR              2   47[COMRAM] PTR struct DC_motor
  5463 ;;		 -> main@motorR(9), 
  5464 ;; Auto vars:     Size  Location     Type
  5465 ;;  a               1   51[COMRAM] unsigned char 
  5466 ;; Return value:  Size  Location     Type
  5467 ;;                  1    wreg      void 
  5468 ;; Registers used:
  5469 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5470 ;; Tracked objects:
  5471 ;;		On entry : 0/0
  5472 ;;		On exit  : 0/0
  5473 ;;		Unchanged: 0/0
  5474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5475 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5476 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5477 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5478 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5479 ;;Total ram usage:        7 bytes
  5480 ;; Hardware stack levels used: 1
  5481 ;; Hardware stack levels required when called: 12
  5482 ;; This function calls:
  5483 ;;		_BlueInstructions
  5484 ;;		_RedInstructions
  5485 ;;		_fullSpeedAhead
  5486 ;;		_stop
  5487 ;; This function is called by:
  5488 ;;		_MoveBuggy
  5489 ;; This function uses a non-reentrant model
  5490 ;;
  5491                           
  5492                           	psect	text21
  5493   001D58                     __ptext21:
  5494                           	callstack 0
  5495   001D58                     _AntiYellow:
  5496                           	callstack 16
  5497   001D58                     
  5498                           ;color_instructions.c: 116:     unsigned char a=0;
  5499   001D58  0E00               	movlw	0
  5500   001D5A  6E34               	movwf	AntiYellow@a^0,c
  5501   001D5C                     
  5502                           ;color_instructions.c: 118:     RedInstructions(mL, mR);
  5503   001D5C  C02E  F027         	movff	AntiYellow@mL,RedInstructions@mL
  5504   001D60  C02F  F028         	movff	AntiYellow@mL+1,RedInstructions@mL+1
  5505   001D64  C030  F029         	movff	AntiYellow@mR,RedInstructions@mR
  5506   001D68  C031  F02A         	movff	AntiYellow@mR+1,RedInstructions@mR+1
  5507   001D6C  ECB9  F011         	call	_RedInstructions	;wreg free
  5508   001D70                     
  5509                           ;color_instructions.c: 119:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5510   001D70  0E05               	movlw	5
  5511   001D72  6E33               	movwf	(??_AntiYellow+1)^0,c
  5512   001D74  0E0F               	movlw	15
  5513   001D76  6E32               	movwf	??_AntiYellow^0,c
  5514   001D78  0EF1               	movlw	241
  5515   001D7A                     u4737:
  5516   001D7A  2EE8               	decfsz	wreg,f,c
  5517   001D7C  D7FE               	bra	u4737
  5518   001D7E  2E32               	decfsz	??_AntiYellow^0,f,c
  5519   001D80  D7FC               	bra	u4737
  5520   001D82  2E33               	decfsz	(??_AntiYellow+1)^0,f,c
  5521   001D84  D7FA               	bra	u4737
  5522   001D86  F000               	nop	
  5523                           
  5524                           ;color_instructions.c: 121:     while (a<45){
  5525   001D88  EFD1  F00E         	goto	l3186
  5526   001D8C                     l3182:
  5527                           
  5528                           ;color_instructions.c: 122:         fullSpeedAhead(mL, mR);
  5529   001D8C  C02E  F01C         	movff	AntiYellow@mL,fullSpeedAhead@mL
  5530   001D90  C02F  F01D         	movff	AntiYellow@mL+1,fullSpeedAhead@mL+1
  5531   001D94  C030  F01E         	movff	AntiYellow@mR,fullSpeedAhead@mR
  5532   001D98  C031  F01F         	movff	AntiYellow@mR+1,fullSpeedAhead@mR+1
  5533   001D9C  EC67  F00C         	call	_fullSpeedAhead	;wreg free
  5534   001DA0                     
  5535                           ;color_instructions.c: 123:         a++;
  5536   001DA0  2A34               	incf	AntiYellow@a^0,f,c
  5537   001DA2                     l3186:
  5538                           
  5539                           ;color_instructions.c: 121:     while (a<45){
  5540   001DA2  0E2C               	movlw	44
  5541   001DA4  6434               	cpfsgt	AntiYellow@a^0,c
  5542   001DA6  EFD7  F00E         	goto	u2501
  5543   001DAA  EFD9  F00E         	goto	u2500
  5544   001DAE                     u2501:
  5545   001DAE  EFC6  F00E         	goto	l3182
  5546   001DB2                     u2500:
  5547   001DB2  EFE6  F00E         	goto	l3192
  5548   001DB6                     l3188:
  5549                           
  5550                           ;color_instructions.c: 126:         stop(mL, mR);
  5551   001DB6  C02E  F01C         	movff	AntiYellow@mL,stop@mL
  5552   001DBA  C02F  F01D         	movff	AntiYellow@mL+1,stop@mL+1
  5553   001DBE  C030  F01E         	movff	AntiYellow@mR,stop@mR
  5554   001DC2  C031  F01F         	movff	AntiYellow@mR+1,stop@mR+1
  5555   001DC6  EC42  F00E         	call	_stop	;wreg free
  5556   001DCA                     
  5557                           ;color_instructions.c: 127:         a--;
  5558   001DCA  0634               	decf	AntiYellow@a^0,f,c
  5559   001DCC                     l3192:
  5560                           
  5561                           ;color_instructions.c: 125:     while (a>0){
  5562   001DCC  5034               	movf	AntiYellow@a^0,w,c
  5563   001DCE  A4D8               	btfss	status,2,c
  5564   001DD0  EFEC  F00E         	goto	u2511
  5565   001DD4  EFEE  F00E         	goto	u2510
  5566   001DD8                     u2511:
  5567   001DD8  EFDB  F00E         	goto	l3188
  5568   001DDC                     u2510:
  5569   001DDC                     
  5570                           ;color_instructions.c: 129:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5571   001DDC  0E05               	movlw	5
  5572   001DDE  6E33               	movwf	(??_AntiYellow+1)^0,c
  5573   001DE0  0E0F               	movlw	15
  5574   001DE2  6E32               	movwf	??_AntiYellow^0,c
  5575   001DE4  0EF1               	movlw	241
  5576   001DE6                     u4747:
  5577   001DE6  2EE8               	decfsz	wreg,f,c
  5578   001DE8  D7FE               	bra	u4747
  5579   001DEA  2E32               	decfsz	??_AntiYellow^0,f,c
  5580   001DEC  D7FC               	bra	u4747
  5581   001DEE  2E33               	decfsz	(??_AntiYellow+1)^0,f,c
  5582   001DF0  D7FA               	bra	u4747
  5583   001DF2  F000               	nop	
  5584   001DF4                     
  5585                           ;color_instructions.c: 131:     BlueInstructions(mL, mR);
  5586   001DF4  C02E  F027         	movff	AntiYellow@mL,BlueInstructions@mL
  5587   001DF8  C02F  F028         	movff	AntiYellow@mL+1,BlueInstructions@mL+1
  5588   001DFC  C030  F029         	movff	AntiYellow@mR,BlueInstructions@mR
  5589   001E00  C031  F02A         	movff	AntiYellow@mR+1,BlueInstructions@mR+1
  5590   001E04  EC5E  F00F         	call	_BlueInstructions	;wreg free
  5591   001E08  0012               	return		;funcret
  5592   001E0A                     __end_of_AntiYellow:
  5593                           	callstack 0
  5594                           
  5595 ;; *************** function _RedInstructions *****************
  5596 ;; Defined at:
  5597 ;;		line 10 in file "color_instructions.c"
  5598 ;; Parameters:    Size  Location     Type
  5599 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  5600 ;;		 -> main@motorL(9), 
  5601 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  5602 ;;		 -> main@motorR(9), 
  5603 ;; Auto vars:     Size  Location     Type
  5604 ;;  a               1   44[COMRAM] unsigned char 
  5605 ;; Return value:  Size  Location     Type
  5606 ;;                  1    wreg      void 
  5607 ;; Registers used:
  5608 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5609 ;; Tracked objects:
  5610 ;;		On entry : 0/0
  5611 ;;		On exit  : 0/0
  5612 ;;		Unchanged: 0/0
  5613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5614 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5615 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5616 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5617 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5618 ;;Total ram usage:        7 bytes
  5619 ;; Hardware stack levels used: 1
  5620 ;; Hardware stack levels required when called: 11
  5621 ;; This function calls:
  5622 ;;		_fullSpeedBackwards
  5623 ;;		_stop
  5624 ;;		_turnRight90
  5625 ;; This function is called by:
  5626 ;;		_AntiYellow
  5627 ;;		_MoveBuggy
  5628 ;; This function uses a non-reentrant model
  5629 ;;
  5630                           
  5631                           	psect	text22
  5632   002372                     __ptext22:
  5633                           	callstack 0
  5634   002372                     _RedInstructions:
  5635                           	callstack 17
  5636   002372                     
  5637                           ;color_instructions.c: 12:     unsigned char a=0;
  5638   002372  0E00               	movlw	0
  5639   002374  6E2D               	movwf	RedInstructions@a^0,c
  5640                           
  5641                           ;color_instructions.c: 13:     while (a<16){
  5642   002376  EFC8  F011         	goto	l3008
  5643   00237A                     l3004:
  5644                           
  5645                           ;color_instructions.c: 14:         fullSpeedBackwards(mL, mR);
  5646   00237A  C027  F01C         	movff	RedInstructions@mL,fullSpeedBackwards@mL
  5647   00237E  C028  F01D         	movff	RedInstructions@mL+1,fullSpeedBackwards@mL+1
  5648   002382  C029  F01E         	movff	RedInstructions@mR,fullSpeedBackwards@mR
  5649   002386  C02A  F01F         	movff	RedInstructions@mR+1,fullSpeedBackwards@mR+1
  5650   00238A  EC55  F00D         	call	_fullSpeedBackwards	;wreg free
  5651   00238E                     
  5652                           ;color_instructions.c: 15:         a++;
  5653   00238E  2A2D               	incf	RedInstructions@a^0,f,c
  5654   002390                     l3008:
  5655                           
  5656                           ;color_instructions.c: 13:     while (a<16){
  5657   002390  0E0F               	movlw	15
  5658   002392  642D               	cpfsgt	RedInstructions@a^0,c
  5659   002394  EFCE  F011         	goto	u2341
  5660   002398  EFD0  F011         	goto	u2340
  5661   00239C                     u2341:
  5662   00239C  EFBD  F011         	goto	l3004
  5663   0023A0                     u2340:
  5664   0023A0  EFDD  F011         	goto	l3014
  5665   0023A4                     l3010:
  5666                           
  5667                           ;color_instructions.c: 18:         stop(mL, mR);
  5668   0023A4  C027  F01C         	movff	RedInstructions@mL,stop@mL
  5669   0023A8  C028  F01D         	movff	RedInstructions@mL+1,stop@mL+1
  5670   0023AC  C029  F01E         	movff	RedInstructions@mR,stop@mR
  5671   0023B0  C02A  F01F         	movff	RedInstructions@mR+1,stop@mR+1
  5672   0023B4  EC42  F00E         	call	_stop	;wreg free
  5673   0023B8                     
  5674                           ;color_instructions.c: 19:         a--;
  5675   0023B8  062D               	decf	RedInstructions@a^0,f,c
  5676   0023BA                     l3014:
  5677                           
  5678                           ;color_instructions.c: 17:     while (a>0){
  5679   0023BA  502D               	movf	RedInstructions@a^0,w,c
  5680   0023BC  A4D8               	btfss	status,2,c
  5681   0023BE  EFE3  F011         	goto	u2351
  5682   0023C2  EFE5  F011         	goto	u2350
  5683   0023C6                     u2351:
  5684   0023C6  EFD2  F011         	goto	l3010
  5685   0023CA                     u2350:
  5686   0023CA                     
  5687                           ;color_instructions.c: 21:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5688   0023CA  0E05               	movlw	5
  5689   0023CC  6E2C               	movwf	(??_RedInstructions+1)^0,c
  5690   0023CE  0E0F               	movlw	15
  5691   0023D0  6E2B               	movwf	??_RedInstructions^0,c
  5692   0023D2  0EF1               	movlw	241
  5693   0023D4                     u4757:
  5694   0023D4  2EE8               	decfsz	wreg,f,c
  5695   0023D6  D7FE               	bra	u4757
  5696   0023D8  2E2B               	decfsz	??_RedInstructions^0,f,c
  5697   0023DA  D7FC               	bra	u4757
  5698   0023DC  2E2C               	decfsz	(??_RedInstructions+1)^0,f,c
  5699   0023DE  D7FA               	bra	u4757
  5700   0023E0  F000               	nop	
  5701   0023E2                     
  5702                           ;color_instructions.c: 22:     turnRight90(mL, mR);
  5703   0023E2  C027  F022         	movff	RedInstructions@mL,turnRight90@mL
  5704   0023E6  C028  F023         	movff	RedInstructions@mL+1,turnRight90@mL+1
  5705   0023EA  C029  F024         	movff	RedInstructions@mR,turnRight90@mR
  5706   0023EE  C02A  F025         	movff	RedInstructions@mR+1,turnRight90@mR+1
  5707   0023F2  ECB7  F00F         	call	_turnRight90	;wreg free
  5708   0023F6  0012               	return		;funcret
  5709   0023F8                     __end_of_RedInstructions:
  5710                           	callstack 0
  5711                           
  5712 ;; *************** function _turnRight90 *****************
  5713 ;; Defined at:
  5714 ;;		line 221 in file "dc_motor.c"
  5715 ;; Parameters:    Size  Location     Type
  5716 ;;  mL              2   33[COMRAM] PTR struct DC_motor
  5717 ;;		 -> main@motorL(9), 
  5718 ;;  mR              2   35[COMRAM] PTR struct DC_motor
  5719 ;;		 -> main@motorR(9), 
  5720 ;; Auto vars:     Size  Location     Type
  5721 ;;  a               1   37[COMRAM] unsigned char 
  5722 ;; Return value:  Size  Location     Type
  5723 ;;                  1    wreg      void 
  5724 ;; Registers used:
  5725 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5726 ;; Tracked objects:
  5727 ;;		On entry : 0/0
  5728 ;;		On exit  : 0/0
  5729 ;;		Unchanged: 0/0
  5730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5731 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5732 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5734 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5735 ;;Total ram usage:        5 bytes
  5736 ;; Hardware stack levels used: 1
  5737 ;; Hardware stack levels required when called: 10
  5738 ;; This function calls:
  5739 ;;		_stop
  5740 ;;		_turnRight
  5741 ;; This function is called by:
  5742 ;;		_turnRight135
  5743 ;;		_RedInstructions
  5744 ;;		_YellowInstructions
  5745 ;; This function uses a non-reentrant model
  5746 ;;
  5747                           
  5748                           	psect	text23
  5749   001F6E                     __ptext23:
  5750                           	callstack 0
  5751   001F6E                     _turnRight90:
  5752                           	callstack 17
  5753   001F6E                     
  5754                           ;dc_motor.c: 223:     unsigned char a=0;
  5755   001F6E  0E00               	movlw	0
  5756   001F70  6E26               	movwf	turnRight90@a^0,c
  5757                           
  5758                           ;dc_motor.c: 224:     while(a<15){
  5759   001F72  EFC6  F00F         	goto	l2926
  5760   001F76                     l2922:
  5761                           
  5762                           ;dc_motor.c: 225:         turnRight(mL, mR);
  5763   001F76  C022  F01C         	movff	turnRight90@mL,turnRight@mL
  5764   001F7A  C023  F01D         	movff	turnRight90@mL+1,turnRight@mL+1
  5765   001F7E  C024  F01E         	movff	turnRight90@mR,turnRight@mR
  5766   001F82  C025  F01F         	movff	turnRight90@mR+1,turnRight@mR+1
  5767   001F86  ECF0  F00B         	call	_turnRight	;wreg free
  5768   001F8A                     
  5769                           ;dc_motor.c: 226:         a++;
  5770   001F8A  2A26               	incf	turnRight90@a^0,f,c
  5771   001F8C                     l2926:
  5772                           
  5773                           ;dc_motor.c: 224:     while(a<15){
  5774   001F8C  0E0E               	movlw	14
  5775   001F8E  6426               	cpfsgt	turnRight90@a^0,c
  5776   001F90  EFCC  F00F         	goto	u2221
  5777   001F94  EFCE  F00F         	goto	u2220
  5778   001F98                     u2221:
  5779   001F98  EFBB  F00F         	goto	l2922
  5780   001F9C                     u2220:
  5781   001F9C  EFDB  F00F         	goto	l2932
  5782   001FA0                     l2928:
  5783                           
  5784                           ;dc_motor.c: 229:         stop(mL, mR);
  5785   001FA0  C022  F01C         	movff	turnRight90@mL,stop@mL
  5786   001FA4  C023  F01D         	movff	turnRight90@mL+1,stop@mL+1
  5787   001FA8  C024  F01E         	movff	turnRight90@mR,stop@mR
  5788   001FAC  C025  F01F         	movff	turnRight90@mR+1,stop@mR+1
  5789   001FB0  EC42  F00E         	call	_stop	;wreg free
  5790   001FB4                     
  5791                           ;dc_motor.c: 230:         a--;
  5792   001FB4  0626               	decf	turnRight90@a^0,f,c
  5793   001FB6                     l2932:
  5794                           
  5795                           ;dc_motor.c: 228:     while(a>0){
  5796   001FB6  5026               	movf	turnRight90@a^0,w,c
  5797   001FB8  A4D8               	btfss	status,2,c
  5798   001FBA  EFE1  F00F         	goto	u2231
  5799   001FBE  EFE3  F00F         	goto	u2230
  5800   001FC2                     u2231:
  5801   001FC2  EFD0  F00F         	goto	l2928
  5802   001FC6                     u2230:
  5803   001FC6  EFF0  F00F         	goto	l2938
  5804   001FCA                     l2934:
  5805                           
  5806                           ;dc_motor.c: 233:         turnRight(mL, mR);
  5807   001FCA  C022  F01C         	movff	turnRight90@mL,turnRight@mL
  5808   001FCE  C023  F01D         	movff	turnRight90@mL+1,turnRight@mL+1
  5809   001FD2  C024  F01E         	movff	turnRight90@mR,turnRight@mR
  5810   001FD6  C025  F01F         	movff	turnRight90@mR+1,turnRight@mR+1
  5811   001FDA  ECF0  F00B         	call	_turnRight	;wreg free
  5812   001FDE                     
  5813                           ;dc_motor.c: 234:         a++;
  5814   001FDE  2A26               	incf	turnRight90@a^0,f,c
  5815   001FE0                     l2938:
  5816                           
  5817                           ;dc_motor.c: 232:     while(a<15){
  5818   001FE0  0E0E               	movlw	14
  5819   001FE2  6426               	cpfsgt	turnRight90@a^0,c
  5820   001FE4  EFF6  F00F         	goto	u2241
  5821   001FE8  EFF8  F00F         	goto	u2240
  5822   001FEC                     u2241:
  5823   001FEC  EFE5  F00F         	goto	l2934
  5824   001FF0                     u2240:
  5825   001FF0  EF05  F010         	goto	l2944
  5826   001FF4                     l2940:
  5827                           
  5828                           ;dc_motor.c: 237:         stop(mL, mR);
  5829   001FF4  C022  F01C         	movff	turnRight90@mL,stop@mL
  5830   001FF8  C023  F01D         	movff	turnRight90@mL+1,stop@mL+1
  5831   001FFC  C024  F01E         	movff	turnRight90@mR,stop@mR
  5832   002000  C025  F01F         	movff	turnRight90@mR+1,stop@mR+1
  5833   002004  EC42  F00E         	call	_stop	;wreg free
  5834   002008                     
  5835                           ;dc_motor.c: 238:         a--;
  5836   002008  0626               	decf	turnRight90@a^0,f,c
  5837   00200A                     l2944:
  5838                           
  5839                           ;dc_motor.c: 236:     while(a>0){
  5840   00200A  5026               	movf	turnRight90@a^0,w,c
  5841   00200C  A4D8               	btfss	status,2,c
  5842   00200E  EF0B  F010         	goto	u2251
  5843   002012  EF0D  F010         	goto	u2250
  5844   002016                     u2251:
  5845   002016  EFFA  F00F         	goto	l2940
  5846   00201A                     u2250:
  5847   00201A  0012               	return		;funcret
  5848   00201C                     __end_of_turnRight90:
  5849                           	callstack 0
  5850                           
  5851 ;; *************** function _turnRight *****************
  5852 ;; Defined at:
  5853 ;;		line 129 in file "dc_motor.c"
  5854 ;; Parameters:    Size  Location     Type
  5855 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  5856 ;;		 -> main@motorL(9), 
  5857 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  5858 ;;		 -> main@motorR(9), 
  5859 ;; Auto vars:     Size  Location     Type
  5860 ;;		None
  5861 ;; Return value:  Size  Location     Type
  5862 ;;                  1    wreg      void 
  5863 ;; Registers used:
  5864 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5865 ;; Tracked objects:
  5866 ;;		On entry : 0/0
  5867 ;;		On exit  : 0/0
  5868 ;;		Unchanged: 0/0
  5869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5870 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5872 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5873 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5874 ;;Total ram usage:        6 bytes
  5875 ;; Hardware stack levels used: 1
  5876 ;; Hardware stack levels required when called: 9
  5877 ;; This function calls:
  5878 ;;		_setMotorPWM
  5879 ;; This function is called by:
  5880 ;;		_turnRight90
  5881 ;;		_turnRight135
  5882 ;; This function uses a non-reentrant model
  5883 ;;
  5884                           
  5885                           	psect	text24
  5886   0017E0                     __ptext24:
  5887                           	callstack 0
  5888   0017E0                     _turnRight:
  5889                           	callstack 17
  5890   0017E0                     
  5891                           ;dc_motor.c: 129: void turnRight(DC_motor *mL, DC_motor *mR);dc_motor.c: 130: {;dc_motor
      +                          .c: 132:     mL->direction = 1;
  5892   0017E0  EE20 F001          	lfsr	2,1
  5893   0017E4  501C               	movf	turnRight@mL^0,w,c
  5894   0017E6  26D9               	addwf	fsr2l,f,c
  5895   0017E8  501D               	movf	(turnRight@mL+1)^0,w,c
  5896   0017EA  22DA               	addwfc	fsr2h,f,c
  5897   0017EC  0E01               	movlw	1
  5898   0017EE  6EDF               	movwf	indf2,c
  5899                           
  5900                           ;dc_motor.c: 133:     mL->brakemode = 0;
  5901   0017F0  EE20 F002          	lfsr	2,2
  5902   0017F4  501C               	movf	turnRight@mL^0,w,c
  5903   0017F6  26D9               	addwf	fsr2l,f,c
  5904   0017F8  501D               	movf	(turnRight@mL+1)^0,w,c
  5905   0017FA  22DA               	addwfc	fsr2h,f,c
  5906   0017FC  0E00               	movlw	0
  5907   0017FE  6EDF               	movwf	indf2,c
  5908                           
  5909                           ;dc_motor.c: 135:     mR->direction = 0;
  5910   001800  EE20 F001          	lfsr	2,1
  5911   001804  501E               	movf	turnRight@mR^0,w,c
  5912   001806  26D9               	addwf	fsr2l,f,c
  5913   001808  501F               	movf	(turnRight@mR+1)^0,w,c
  5914   00180A  22DA               	addwfc	fsr2h,f,c
  5915   00180C  0E00               	movlw	0
  5916   00180E  6EDF               	movwf	indf2,c
  5917                           
  5918                           ;dc_motor.c: 136:     mR->brakemode = 0;
  5919   001810  EE20 F002          	lfsr	2,2
  5920   001814  501E               	movf	turnRight@mR^0,w,c
  5921   001816  26D9               	addwf	fsr2l,f,c
  5922   001818  501F               	movf	(turnRight@mR+1)^0,w,c
  5923   00181A  22DA               	addwfc	fsr2h,f,c
  5924   00181C  0E00               	movlw	0
  5925   00181E  6EDF               	movwf	indf2,c
  5926                           
  5927                           ;dc_motor.c: 139:     if(mL->power>62){mL->power=62;}
  5928   001820  C01C  FFD9         	movff	turnRight@mL,fsr2l
  5929   001824  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  5930   001828  50DF               	movf	indf2,w,c
  5931   00182A  0A80               	xorlw	128
  5932   00182C  0F41               	addlw	-191
  5933   00182E  A0D8               	btfss	status,0,c
  5934   001830  EF1C  F00C         	goto	u2141
  5935   001834  EF1E  F00C         	goto	u2140
  5936   001838                     u2141:
  5937   001838  EF24  F00C         	goto	l2850
  5938   00183C                     u2140:
  5939   00183C  C01C  FFD9         	movff	turnRight@mL,fsr2l
  5940   001840  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  5941   001844  0E3E               	movlw	62
  5942   001846  6EDF               	movwf	indf2,c
  5943   001848                     l2850:
  5944                           
  5945                           ;dc_motor.c: 140:     if(mR->power>62){mR->power=62;}
  5946   001848  C01E  FFD9         	movff	turnRight@mR,fsr2l
  5947   00184C  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  5948   001850  50DF               	movf	indf2,w,c
  5949   001852  0A80               	xorlw	128
  5950   001854  0F41               	addlw	-191
  5951   001856  A0D8               	btfss	status,0,c
  5952   001858  EF30  F00C         	goto	u2151
  5953   00185C  EF32  F00C         	goto	u2150
  5954   001860                     u2151:
  5955   001860  EF38  F00C         	goto	l2854
  5956   001864                     u2150:
  5957   001864  C01E  FFD9         	movff	turnRight@mR,fsr2l
  5958   001868  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  5959   00186C  0E3E               	movlw	62
  5960   00186E  6EDF               	movwf	indf2,c
  5961   001870                     l2854:
  5962                           
  5963                           ;dc_motor.c: 142:     mL->power = mL->power + 10 ;
  5964   001870  C01C  FFD9         	movff	turnRight@mL,fsr2l
  5965   001874  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  5966   001878  50DF               	movf	indf2,w,c
  5967   00187A  0F0A               	addlw	10
  5968   00187C  C01C  FFD9         	movff	turnRight@mL,fsr2l
  5969   001880  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  5970   001884  6EDF               	movwf	indf2,c
  5971   001886                     
  5972                           ;dc_motor.c: 143:     mR->power = mR->power + 10;
  5973   001886  C01E  FFD9         	movff	turnRight@mR,fsr2l
  5974   00188A  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  5975   00188E  50DF               	movf	indf2,w,c
  5976   001890  0F0A               	addlw	10
  5977   001892  C01E  FFD9         	movff	turnRight@mR,fsr2l
  5978   001896  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  5979   00189A  6EDF               	movwf	indf2,c
  5980   00189C                     
  5981                           ;dc_motor.c: 145:     setMotorPWM(mL);
  5982   00189C  C01C  F016         	movff	turnRight@mL,setMotorPWM@m
  5983   0018A0  C01D  F017         	movff	turnRight@mL+1,setMotorPWM@m+1
  5984   0018A4  ECB6  F00A         	call	_setMotorPWM	;wreg free
  5985   0018A8                     
  5986                           ;dc_motor.c: 146:     setMotorPWM(mR);
  5987   0018A8  C01E  F016         	movff	turnRight@mR,setMotorPWM@m
  5988   0018AC  C01F  F017         	movff	turnRight@mR+1,setMotorPWM@m+1
  5989   0018B0  ECB6  F00A         	call	_setMotorPWM	;wreg free
  5990   0018B4                     
  5991                           ;dc_motor.c: 147:     _delay((unsigned long)((20)*(64000000/4000.0)));
  5992   0018B4  0E02               	movlw	2
  5993   0018B6  6E21               	movwf	(??_turnRight+1)^0,c
  5994   0018B8  0EA0               	movlw	160
  5995   0018BA  6E20               	movwf	??_turnRight^0,c
  5996   0018BC  0E92               	movlw	146
  5997   0018BE                     u4767:
  5998   0018BE  2EE8               	decfsz	wreg,f,c
  5999   0018C0  D7FE               	bra	u4767
  6000   0018C2  2E20               	decfsz	??_turnRight^0,f,c
  6001   0018C4  D7FC               	bra	u4767
  6002   0018C6  2E21               	decfsz	(??_turnRight+1)^0,f,c
  6003   0018C8  D7FA               	bra	u4767
  6004   0018CA  D000               	nop2	
  6005   0018CC  0012               	return		;funcret
  6006   0018CE                     __end_of_turnRight:
  6007                           	callstack 0
  6008                           
  6009 ;; *************** function _AntiPink *****************
  6010 ;; Defined at:
  6011 ;;		line 134 in file "color_instructions.c"
  6012 ;; Parameters:    Size  Location     Type
  6013 ;;  mL              2   45[COMRAM] PTR struct DC_motor
  6014 ;;		 -> main@motorL(9), 
  6015 ;;  mR              2   47[COMRAM] PTR struct DC_motor
  6016 ;;		 -> main@motorR(9), 
  6017 ;; Auto vars:     Size  Location     Type
  6018 ;;  a               1   51[COMRAM] unsigned char 
  6019 ;; Return value:  Size  Location     Type
  6020 ;;                  1    wreg      void 
  6021 ;; Registers used:
  6022 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6023 ;; Tracked objects:
  6024 ;;		On entry : 0/0
  6025 ;;		On exit  : 0/0
  6026 ;;		Unchanged: 0/0
  6027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6028 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6029 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6030 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6031 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6032 ;;Total ram usage:        7 bytes
  6033 ;; Hardware stack levels used: 1
  6034 ;; Hardware stack levels required when called: 12
  6035 ;; This function calls:
  6036 ;;		_BlueInstructions
  6037 ;;		_GreenInstructions
  6038 ;;		_fullSpeedAhead
  6039 ;;		_stop
  6040 ;; This function is called by:
  6041 ;;		_MoveBuggy
  6042 ;; This function uses a non-reentrant model
  6043 ;;
  6044                           
  6045                           	psect	text25
  6046   001E0A                     __ptext25:
  6047                           	callstack 0
  6048   001E0A                     _AntiPink:
  6049                           	callstack 16
  6050   001E0A                     
  6051                           ;color_instructions.c: 135:     unsigned char a=0;
  6052   001E0A  0E00               	movlw	0
  6053   001E0C  6E34               	movwf	AntiPink@a^0,c
  6054   001E0E                     
  6055                           ;color_instructions.c: 137:     GreenInstructions(mL, mR);
  6056   001E0E  C02E  F027         	movff	AntiPink@mL,GreenInstructions@mL
  6057   001E12  C02F  F028         	movff	AntiPink@mL+1,GreenInstructions@mL+1
  6058   001E16  C030  F029         	movff	AntiPink@mR,GreenInstructions@mR
  6059   001E1A  C031  F02A         	movff	AntiPink@mR+1,GreenInstructions@mR+1
  6060   001E1E  ECFC  F011         	call	_GreenInstructions	;wreg free
  6061   001E22                     
  6062                           ;color_instructions.c: 138:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6063   001E22  0E05               	movlw	5
  6064   001E24  6E33               	movwf	(??_AntiPink+1)^0,c
  6065   001E26  0E0F               	movlw	15
  6066   001E28  6E32               	movwf	??_AntiPink^0,c
  6067   001E2A  0EF1               	movlw	241
  6068   001E2C                     u4777:
  6069   001E2C  2EE8               	decfsz	wreg,f,c
  6070   001E2E  D7FE               	bra	u4777
  6071   001E30  2E32               	decfsz	??_AntiPink^0,f,c
  6072   001E32  D7FC               	bra	u4777
  6073   001E34  2E33               	decfsz	(??_AntiPink+1)^0,f,c
  6074   001E36  D7FA               	bra	u4777
  6075   001E38  F000               	nop	
  6076                           
  6077                           ;color_instructions.c: 140:     while (a<45){
  6078   001E3A  EF2A  F00F         	goto	l3208
  6079   001E3E                     l3204:
  6080                           
  6081                           ;color_instructions.c: 141:         fullSpeedAhead(mL, mR);
  6082   001E3E  C02E  F01C         	movff	AntiPink@mL,fullSpeedAhead@mL
  6083   001E42  C02F  F01D         	movff	AntiPink@mL+1,fullSpeedAhead@mL+1
  6084   001E46  C030  F01E         	movff	AntiPink@mR,fullSpeedAhead@mR
  6085   001E4A  C031  F01F         	movff	AntiPink@mR+1,fullSpeedAhead@mR+1
  6086   001E4E  EC67  F00C         	call	_fullSpeedAhead	;wreg free
  6087   001E52                     
  6088                           ;color_instructions.c: 142:         a++;
  6089   001E52  2A34               	incf	AntiPink@a^0,f,c
  6090   001E54                     l3208:
  6091                           
  6092                           ;color_instructions.c: 140:     while (a<45){
  6093   001E54  0E2C               	movlw	44
  6094   001E56  6434               	cpfsgt	AntiPink@a^0,c
  6095   001E58  EF30  F00F         	goto	u2521
  6096   001E5C  EF32  F00F         	goto	u2520
  6097   001E60                     u2521:
  6098   001E60  EF1F  F00F         	goto	l3204
  6099   001E64                     u2520:
  6100   001E64  EF3F  F00F         	goto	l3214
  6101   001E68                     l3210:
  6102                           
  6103                           ;color_instructions.c: 145:         stop(mL, mR);
  6104   001E68  C02E  F01C         	movff	AntiPink@mL,stop@mL
  6105   001E6C  C02F  F01D         	movff	AntiPink@mL+1,stop@mL+1
  6106   001E70  C030  F01E         	movff	AntiPink@mR,stop@mR
  6107   001E74  C031  F01F         	movff	AntiPink@mR+1,stop@mR+1
  6108   001E78  EC42  F00E         	call	_stop	;wreg free
  6109   001E7C                     
  6110                           ;color_instructions.c: 146:         a--;
  6111   001E7C  0634               	decf	AntiPink@a^0,f,c
  6112   001E7E                     l3214:
  6113                           
  6114                           ;color_instructions.c: 144:     while (a>0){
  6115   001E7E  5034               	movf	AntiPink@a^0,w,c
  6116   001E80  A4D8               	btfss	status,2,c
  6117   001E82  EF45  F00F         	goto	u2531
  6118   001E86  EF47  F00F         	goto	u2530
  6119   001E8A                     u2531:
  6120   001E8A  EF34  F00F         	goto	l3210
  6121   001E8E                     u2530:
  6122   001E8E                     
  6123                           ;color_instructions.c: 148:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6124   001E8E  0E05               	movlw	5
  6125   001E90  6E33               	movwf	(??_AntiPink+1)^0,c
  6126   001E92  0E0F               	movlw	15
  6127   001E94  6E32               	movwf	??_AntiPink^0,c
  6128   001E96  0EF1               	movlw	241
  6129   001E98                     u4787:
  6130   001E98  2EE8               	decfsz	wreg,f,c
  6131   001E9A  D7FE               	bra	u4787
  6132   001E9C  2E32               	decfsz	??_AntiPink^0,f,c
  6133   001E9E  D7FC               	bra	u4787
  6134   001EA0  2E33               	decfsz	(??_AntiPink+1)^0,f,c
  6135   001EA2  D7FA               	bra	u4787
  6136   001EA4  F000               	nop	
  6137   001EA6                     
  6138                           ;color_instructions.c: 150:     BlueInstructions(mL, mR);
  6139   001EA6  C02E  F027         	movff	AntiPink@mL,BlueInstructions@mL
  6140   001EAA  C02F  F028         	movff	AntiPink@mL+1,BlueInstructions@mL+1
  6141   001EAE  C030  F029         	movff	AntiPink@mR,BlueInstructions@mR
  6142   001EB2  C031  F02A         	movff	AntiPink@mR+1,BlueInstructions@mR+1
  6143   001EB6  EC5E  F00F         	call	_BlueInstructions	;wreg free
  6144   001EBA  0012               	return		;funcret
  6145   001EBC                     __end_of_AntiPink:
  6146                           	callstack 0
  6147                           
  6148 ;; *************** function _fullSpeedAhead *****************
  6149 ;; Defined at:
  6150 ;;		line 151 in file "dc_motor.c"
  6151 ;; Parameters:    Size  Location     Type
  6152 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6153 ;;		 -> main@motorL(9), 
  6154 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6155 ;;		 -> main@motorR(9), 
  6156 ;; Auto vars:     Size  Location     Type
  6157 ;;		None
  6158 ;; Return value:  Size  Location     Type
  6159 ;;                  1    wreg      void 
  6160 ;; Registers used:
  6161 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6162 ;; Tracked objects:
  6163 ;;		On entry : 0/0
  6164 ;;		On exit  : 0/0
  6165 ;;		Unchanged: 0/0
  6166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6167 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6169 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6170 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6171 ;;Total ram usage:        6 bytes
  6172 ;; Hardware stack levels used: 1
  6173 ;; Hardware stack levels required when called: 9
  6174 ;; This function calls:
  6175 ;;		_setMotorPWM
  6176 ;; This function is called by:
  6177 ;;		_AntiYellow
  6178 ;;		_AntiPink
  6179 ;;		_WhiteInstructions
  6180 ;;		_main
  6181 ;; This function uses a non-reentrant model
  6182 ;;
  6183                           
  6184                           	psect	text26
  6185   0018CE                     __ptext26:
  6186                           	callstack 0
  6187   0018CE                     _fullSpeedAhead:
  6188                           	callstack 21
  6189   0018CE                     
  6190                           ;dc_motor.c: 151: void fullSpeedAhead(DC_motor *mL, DC_motor *mR);dc_motor.c: 152: {;dc_
      +                          motor.c: 154:     mL->direction = 1;
  6191   0018CE  EE20 F001          	lfsr	2,1
  6192   0018D2  501C               	movf	fullSpeedAhead@mL^0,w,c
  6193   0018D4  26D9               	addwf	fsr2l,f,c
  6194   0018D6  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  6195   0018D8  22DA               	addwfc	fsr2h,f,c
  6196   0018DA  0E01               	movlw	1
  6197   0018DC  6EDF               	movwf	indf2,c
  6198                           
  6199                           ;dc_motor.c: 155:     mL->brakemode = 0;
  6200   0018DE  EE20 F002          	lfsr	2,2
  6201   0018E2  501C               	movf	fullSpeedAhead@mL^0,w,c
  6202   0018E4  26D9               	addwf	fsr2l,f,c
  6203   0018E6  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  6204   0018E8  22DA               	addwfc	fsr2h,f,c
  6205   0018EA  0E00               	movlw	0
  6206   0018EC  6EDF               	movwf	indf2,c
  6207                           
  6208                           ;dc_motor.c: 157:     mR->direction = 1;
  6209   0018EE  EE20 F001          	lfsr	2,1
  6210   0018F2  501E               	movf	fullSpeedAhead@mR^0,w,c
  6211   0018F4  26D9               	addwf	fsr2l,f,c
  6212   0018F6  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  6213   0018F8  22DA               	addwfc	fsr2h,f,c
  6214   0018FA  0E01               	movlw	1
  6215   0018FC  6EDF               	movwf	indf2,c
  6216                           
  6217                           ;dc_motor.c: 158:     mR->brakemode = 0;
  6218   0018FE  EE20 F002          	lfsr	2,2
  6219   001902  501E               	movf	fullSpeedAhead@mR^0,w,c
  6220   001904  26D9               	addwf	fsr2l,f,c
  6221   001906  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  6222   001908  22DA               	addwfc	fsr2h,f,c
  6223   00190A  0E00               	movlw	0
  6224   00190C  6EDF               	movwf	indf2,c
  6225                           
  6226                           ;dc_motor.c: 162:     if(mL->power>40){mL->power=40;}
  6227   00190E  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  6228   001912  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  6229   001916  50DF               	movf	indf2,w,c
  6230   001918  0A80               	xorlw	128
  6231   00191A  0F57               	addlw	-169
  6232   00191C  A0D8               	btfss	status,0,c
  6233   00191E  EF93  F00C         	goto	u2281
  6234   001922  EF95  F00C         	goto	u2280
  6235   001926                     u2281:
  6236   001926  EF9B  F00C         	goto	l2956
  6237   00192A                     u2280:
  6238   00192A  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  6239   00192E  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  6240   001932  0E28               	movlw	40
  6241   001934  6EDF               	movwf	indf2,c
  6242   001936                     l2956:
  6243                           
  6244                           ;dc_motor.c: 163:     if(mR->power>43){mR->power=43;}
  6245   001936  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  6246   00193A  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  6247   00193E  50DF               	movf	indf2,w,c
  6248   001940  0A80               	xorlw	128
  6249   001942  0F54               	addlw	-172
  6250   001944  A0D8               	btfss	status,0,c
  6251   001946  EFA7  F00C         	goto	u2291
  6252   00194A  EFA9  F00C         	goto	u2290
  6253   00194E                     u2291:
  6254   00194E  EFAF  F00C         	goto	l2960
  6255   001952                     u2290:
  6256   001952  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  6257   001956  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  6258   00195A  0E2B               	movlw	43
  6259   00195C  6EDF               	movwf	indf2,c
  6260   00195E                     l2960:
  6261                           
  6262                           ;dc_motor.c: 165:     mL->power = mL->power + 5 ;
  6263   00195E  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  6264   001962  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  6265   001966  50DF               	movf	indf2,w,c
  6266   001968  0F05               	addlw	5
  6267   00196A  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  6268   00196E  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  6269   001972  6EDF               	movwf	indf2,c
  6270   001974                     
  6271                           ;dc_motor.c: 166:     mR->power = mR->power + 7;
  6272   001974  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  6273   001978  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  6274   00197C  50DF               	movf	indf2,w,c
  6275   00197E  0F07               	addlw	7
  6276   001980  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  6277   001984  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  6278   001988  6EDF               	movwf	indf2,c
  6279   00198A                     
  6280                           ;dc_motor.c: 168:     setMotorPWM(mL);
  6281   00198A  C01C  F016         	movff	fullSpeedAhead@mL,setMotorPWM@m
  6282   00198E  C01D  F017         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  6283   001992  ECB6  F00A         	call	_setMotorPWM	;wreg free
  6284   001996                     
  6285                           ;dc_motor.c: 169:     setMotorPWM(mR);
  6286   001996  C01E  F016         	movff	fullSpeedAhead@mR,setMotorPWM@m
  6287   00199A  C01F  F017         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  6288   00199E  ECB6  F00A         	call	_setMotorPWM	;wreg free
  6289   0019A2                     
  6290                           ;dc_motor.c: 170:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6291   0019A2  0E05               	movlw	5
  6292   0019A4  6E21               	movwf	(??_fullSpeedAhead+1)^0,c
  6293   0019A6  0E0F               	movlw	15
  6294   0019A8  6E20               	movwf	??_fullSpeedAhead^0,c
  6295   0019AA  0EF1               	movlw	241
  6296   0019AC                     u4797:
  6297   0019AC  2EE8               	decfsz	wreg,f,c
  6298   0019AE  D7FE               	bra	u4797
  6299   0019B0  2E20               	decfsz	??_fullSpeedAhead^0,f,c
  6300   0019B2  D7FC               	bra	u4797
  6301   0019B4  2E21               	decfsz	(??_fullSpeedAhead+1)^0,f,c
  6302   0019B6  D7FA               	bra	u4797
  6303   0019B8  F000               	nop	
  6304   0019BA  0012               	return		;funcret
  6305   0019BC                     __end_of_fullSpeedAhead:
  6306                           	callstack 0
  6307                           
  6308 ;; *************** function _GreenInstructions *****************
  6309 ;; Defined at:
  6310 ;;		line 25 in file "color_instructions.c"
  6311 ;; Parameters:    Size  Location     Type
  6312 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  6313 ;;		 -> main@motorL(9), 
  6314 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  6315 ;;		 -> main@motorR(9), 
  6316 ;; Auto vars:     Size  Location     Type
  6317 ;;  a               1   44[COMRAM] unsigned char 
  6318 ;; Return value:  Size  Location     Type
  6319 ;;                  1    wreg      void 
  6320 ;; Registers used:
  6321 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6322 ;; Tracked objects:
  6323 ;;		On entry : 0/0
  6324 ;;		On exit  : 0/0
  6325 ;;		Unchanged: 0/0
  6326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6327 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6328 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6329 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6330 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6331 ;;Total ram usage:        7 bytes
  6332 ;; Hardware stack levels used: 1
  6333 ;; Hardware stack levels required when called: 11
  6334 ;; This function calls:
  6335 ;;		_fullSpeedBackwards
  6336 ;;		_stop
  6337 ;;		_turnLeft90
  6338 ;; This function is called by:
  6339 ;;		_AntiPink
  6340 ;;		_MoveBuggy
  6341 ;; This function uses a non-reentrant model
  6342 ;;
  6343                           
  6344                           	psect	text27
  6345   0023F8                     __ptext27:
  6346                           	callstack 0
  6347   0023F8                     _GreenInstructions:
  6348                           	callstack 17
  6349   0023F8                     
  6350                           ;color_instructions.c: 26:     unsigned char a=0;
  6351   0023F8  0E00               	movlw	0
  6352   0023FA  6E2D               	movwf	GreenInstructions@a^0,c
  6353                           
  6354                           ;color_instructions.c: 27:     while (a<16){
  6355   0023FC  EF0B  F012         	goto	l3026
  6356   002400                     l3022:
  6357                           
  6358                           ;color_instructions.c: 28:         fullSpeedBackwards(mL, mR);
  6359   002400  C027  F01C         	movff	GreenInstructions@mL,fullSpeedBackwards@mL
  6360   002404  C028  F01D         	movff	GreenInstructions@mL+1,fullSpeedBackwards@mL+1
  6361   002408  C029  F01E         	movff	GreenInstructions@mR,fullSpeedBackwards@mR
  6362   00240C  C02A  F01F         	movff	GreenInstructions@mR+1,fullSpeedBackwards@mR+1
  6363   002410  EC55  F00D         	call	_fullSpeedBackwards	;wreg free
  6364   002414                     
  6365                           ;color_instructions.c: 29:         a++;
  6366   002414  2A2D               	incf	GreenInstructions@a^0,f,c
  6367   002416                     l3026:
  6368                           
  6369                           ;color_instructions.c: 27:     while (a<16){
  6370   002416  0E0F               	movlw	15
  6371   002418  642D               	cpfsgt	GreenInstructions@a^0,c
  6372   00241A  EF11  F012         	goto	u2361
  6373   00241E  EF13  F012         	goto	u2360
  6374   002422                     u2361:
  6375   002422  EF00  F012         	goto	l3022
  6376   002426                     u2360:
  6377   002426  EF20  F012         	goto	l3032
  6378   00242A                     l3028:
  6379                           
  6380                           ;color_instructions.c: 32:         stop(mL, mR);
  6381   00242A  C027  F01C         	movff	GreenInstructions@mL,stop@mL
  6382   00242E  C028  F01D         	movff	GreenInstructions@mL+1,stop@mL+1
  6383   002432  C029  F01E         	movff	GreenInstructions@mR,stop@mR
  6384   002436  C02A  F01F         	movff	GreenInstructions@mR+1,stop@mR+1
  6385   00243A  EC42  F00E         	call	_stop	;wreg free
  6386   00243E                     
  6387                           ;color_instructions.c: 33:         a--;
  6388   00243E  062D               	decf	GreenInstructions@a^0,f,c
  6389   002440                     l3032:
  6390                           
  6391                           ;color_instructions.c: 31:     while (a>0){
  6392   002440  502D               	movf	GreenInstructions@a^0,w,c
  6393   002442  A4D8               	btfss	status,2,c
  6394   002444  EF26  F012         	goto	u2371
  6395   002448  EF28  F012         	goto	u2370
  6396   00244C                     u2371:
  6397   00244C  EF15  F012         	goto	l3028
  6398   002450                     u2370:
  6399   002450                     
  6400                           ;color_instructions.c: 35:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6401   002450  0E05               	movlw	5
  6402   002452  6E2C               	movwf	(??_GreenInstructions+1)^0,c
  6403   002454  0E0F               	movlw	15
  6404   002456  6E2B               	movwf	??_GreenInstructions^0,c
  6405   002458  0EF1               	movlw	241
  6406   00245A                     u4807:
  6407   00245A  2EE8               	decfsz	wreg,f,c
  6408   00245C  D7FE               	bra	u4807
  6409   00245E  2E2B               	decfsz	??_GreenInstructions^0,f,c
  6410   002460  D7FC               	bra	u4807
  6411   002462  2E2C               	decfsz	(??_GreenInstructions+1)^0,f,c
  6412   002464  D7FA               	bra	u4807
  6413   002466  F000               	nop	
  6414   002468                     
  6415                           ;color_instructions.c: 36:     turnLeft90(mL, mR);
  6416   002468  C027  F022         	movff	GreenInstructions@mL,turnLeft90@mL
  6417   00246C  C028  F023         	movff	GreenInstructions@mL+1,turnLeft90@mL+1
  6418   002470  C029  F024         	movff	GreenInstructions@mR,turnLeft90@mR
  6419   002474  C02A  F025         	movff	GreenInstructions@mR+1,turnLeft90@mR+1
  6420   002478  EC0E  F010         	call	_turnLeft90	;wreg free
  6421   00247C  0012               	return		;funcret
  6422   00247E                     __end_of_GreenInstructions:
  6423                           	callstack 0
  6424                           
  6425 ;; *************** function _BlueInstructions *****************
  6426 ;; Defined at:
  6427 ;;		line 39 in file "color_instructions.c"
  6428 ;; Parameters:    Size  Location     Type
  6429 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  6430 ;;		 -> main@motorL(9), 
  6431 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  6432 ;;		 -> main@motorR(9), 
  6433 ;; Auto vars:     Size  Location     Type
  6434 ;;  a               1   44[COMRAM] unsigned char 
  6435 ;; Return value:  Size  Location     Type
  6436 ;;                  1    wreg      void 
  6437 ;; Registers used:
  6438 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6439 ;; Tracked objects:
  6440 ;;		On entry : 0/0
  6441 ;;		On exit  : 0/0
  6442 ;;		Unchanged: 0/0
  6443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6444 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6445 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6446 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6447 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6448 ;;Total ram usage:        7 bytes
  6449 ;; Hardware stack levels used: 1
  6450 ;; Hardware stack levels required when called: 11
  6451 ;; This function calls:
  6452 ;;		_fullSpeedBackwards
  6453 ;;		_stop
  6454 ;;		_turnLeft90
  6455 ;; This function is called by:
  6456 ;;		_AntiYellow
  6457 ;;		_AntiPink
  6458 ;;		_WhiteInstructions
  6459 ;;		_MoveBuggy
  6460 ;; This function uses a non-reentrant model
  6461 ;;
  6462                           
  6463                           	psect	text28
  6464   001EBC                     __ptext28:
  6465                           	callstack 0
  6466   001EBC                     _BlueInstructions:
  6467                           	callstack 17
  6468   001EBC                     
  6469                           ;color_instructions.c: 40:     unsigned char a=0;
  6470   001EBC  0E00               	movlw	0
  6471   001EBE  6E2D               	movwf	BlueInstructions@a^0,c
  6472                           
  6473                           ;color_instructions.c: 41:     while (a<16){
  6474   001EC0  EF6D  F00F         	goto	l3044
  6475   001EC4                     l3040:
  6476                           
  6477                           ;color_instructions.c: 42:         fullSpeedBackwards(mL, mR);
  6478   001EC4  C027  F01C         	movff	BlueInstructions@mL,fullSpeedBackwards@mL
  6479   001EC8  C028  F01D         	movff	BlueInstructions@mL+1,fullSpeedBackwards@mL+1
  6480   001ECC  C029  F01E         	movff	BlueInstructions@mR,fullSpeedBackwards@mR
  6481   001ED0  C02A  F01F         	movff	BlueInstructions@mR+1,fullSpeedBackwards@mR+1
  6482   001ED4  EC55  F00D         	call	_fullSpeedBackwards	;wreg free
  6483   001ED8                     
  6484                           ;color_instructions.c: 43:         a++;
  6485   001ED8  2A2D               	incf	BlueInstructions@a^0,f,c
  6486   001EDA                     l3044:
  6487                           
  6488                           ;color_instructions.c: 41:     while (a<16){
  6489   001EDA  0E0F               	movlw	15
  6490   001EDC  642D               	cpfsgt	BlueInstructions@a^0,c
  6491   001EDE  EF73  F00F         	goto	u2381
  6492   001EE2  EF75  F00F         	goto	u2380
  6493   001EE6                     u2381:
  6494   001EE6  EF62  F00F         	goto	l3040
  6495   001EEA                     u2380:
  6496   001EEA  EF82  F00F         	goto	l3050
  6497   001EEE                     l3046:
  6498                           
  6499                           ;color_instructions.c: 46:         stop(mL, mR);
  6500   001EEE  C027  F01C         	movff	BlueInstructions@mL,stop@mL
  6501   001EF2  C028  F01D         	movff	BlueInstructions@mL+1,stop@mL+1
  6502   001EF6  C029  F01E         	movff	BlueInstructions@mR,stop@mR
  6503   001EFA  C02A  F01F         	movff	BlueInstructions@mR+1,stop@mR+1
  6504   001EFE  EC42  F00E         	call	_stop	;wreg free
  6505   001F02                     
  6506                           ;color_instructions.c: 47:         a--;
  6507   001F02  062D               	decf	BlueInstructions@a^0,f,c
  6508   001F04                     l3050:
  6509                           
  6510                           ;color_instructions.c: 45:     while (a>0){
  6511   001F04  502D               	movf	BlueInstructions@a^0,w,c
  6512   001F06  A4D8               	btfss	status,2,c
  6513   001F08  EF88  F00F         	goto	u2391
  6514   001F0C  EF8A  F00F         	goto	u2390
  6515   001F10                     u2391:
  6516   001F10  EF77  F00F         	goto	l3046
  6517   001F14                     u2390:
  6518   001F14                     
  6519                           ;color_instructions.c: 49:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6520   001F14  0E05               	movlw	5
  6521   001F16  6E2C               	movwf	(??_BlueInstructions+1)^0,c
  6522   001F18  0E0F               	movlw	15
  6523   001F1A  6E2B               	movwf	??_BlueInstructions^0,c
  6524   001F1C  0EF1               	movlw	241
  6525   001F1E                     u4817:
  6526   001F1E  2EE8               	decfsz	wreg,f,c
  6527   001F20  D7FE               	bra	u4817
  6528   001F22  2E2B               	decfsz	??_BlueInstructions^0,f,c
  6529   001F24  D7FC               	bra	u4817
  6530   001F26  2E2C               	decfsz	(??_BlueInstructions+1)^0,f,c
  6531   001F28  D7FA               	bra	u4817
  6532   001F2A  F000               	nop	
  6533   001F2C                     
  6534                           ;color_instructions.c: 51:     turnLeft90(mL, mR);
  6535   001F2C  C027  F022         	movff	BlueInstructions@mL,turnLeft90@mL
  6536   001F30  C028  F023         	movff	BlueInstructions@mL+1,turnLeft90@mL+1
  6537   001F34  C029  F024         	movff	BlueInstructions@mR,turnLeft90@mR
  6538   001F38  C02A  F025         	movff	BlueInstructions@mR+1,turnLeft90@mR+1
  6539   001F3C  EC0E  F010         	call	_turnLeft90	;wreg free
  6540   001F40                     
  6541                           ;color_instructions.c: 52:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6542   001F40  0E05               	movlw	5
  6543   001F42  6E2C               	movwf	(??_BlueInstructions+1)^0,c
  6544   001F44  0E0F               	movlw	15
  6545   001F46  6E2B               	movwf	??_BlueInstructions^0,c
  6546   001F48  0EF1               	movlw	241
  6547   001F4A                     u4827:
  6548   001F4A  2EE8               	decfsz	wreg,f,c
  6549   001F4C  D7FE               	bra	u4827
  6550   001F4E  2E2B               	decfsz	??_BlueInstructions^0,f,c
  6551   001F50  D7FC               	bra	u4827
  6552   001F52  2E2C               	decfsz	(??_BlueInstructions+1)^0,f,c
  6553   001F54  D7FA               	bra	u4827
  6554   001F56  F000               	nop	
  6555                           
  6556                           ;color_instructions.c: 53:     turnLeft90(mL, mR);
  6557   001F58  C027  F022         	movff	BlueInstructions@mL,turnLeft90@mL
  6558   001F5C  C028  F023         	movff	BlueInstructions@mL+1,turnLeft90@mL+1
  6559   001F60  C029  F024         	movff	BlueInstructions@mR,turnLeft90@mR
  6560   001F64  C02A  F025         	movff	BlueInstructions@mR+1,turnLeft90@mR+1
  6561   001F68  EC0E  F010         	call	_turnLeft90	;wreg free
  6562   001F6C  0012               	return		;funcret
  6563   001F6E                     __end_of_BlueInstructions:
  6564                           	callstack 0
  6565                           
  6566 ;; *************** function _turnLeft90 *****************
  6567 ;; Defined at:
  6568 ;;		line 200 in file "dc_motor.c"
  6569 ;; Parameters:    Size  Location     Type
  6570 ;;  mL              2   33[COMRAM] PTR struct DC_motor
  6571 ;;		 -> main@motorL(9), 
  6572 ;;  mR              2   35[COMRAM] PTR struct DC_motor
  6573 ;;		 -> main@motorR(9), 
  6574 ;; Auto vars:     Size  Location     Type
  6575 ;;  a               1   37[COMRAM] unsigned char 
  6576 ;; Return value:  Size  Location     Type
  6577 ;;                  1    wreg      void 
  6578 ;; Registers used:
  6579 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6580 ;; Tracked objects:
  6581 ;;		On entry : 0/0
  6582 ;;		On exit  : 0/0
  6583 ;;		Unchanged: 0/0
  6584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6585 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6586 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6588 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6589 ;;Total ram usage:        5 bytes
  6590 ;; Hardware stack levels used: 1
  6591 ;; Hardware stack levels required when called: 10
  6592 ;; This function calls:
  6593 ;;		_stop
  6594 ;;		_turnLeft
  6595 ;; This function is called by:
  6596 ;;		_turnLeft135
  6597 ;;		_GreenInstructions
  6598 ;;		_BlueInstructions
  6599 ;;		_PinkInstructions
  6600 ;;		_turn180
  6601 ;; This function uses a non-reentrant model
  6602 ;;
  6603                           
  6604                           	psect	text29
  6605   00201C                     __ptext29:
  6606                           	callstack 0
  6607   00201C                     _turnLeft90:
  6608                           	callstack 17
  6609   00201C                     
  6610                           ;dc_motor.c: 202:     unsigned char a=0;
  6611   00201C  0E00               	movlw	0
  6612   00201E  6E26               	movwf	turnLeft90@a^0,c
  6613                           
  6614                           ;dc_motor.c: 203:     while(a<16){
  6615   002020  EF1D  F010         	goto	l2900
  6616   002024                     l2896:
  6617                           
  6618                           ;dc_motor.c: 204:         turnLeft(mL, mR);
  6619   002024  C022  F01C         	movff	turnLeft90@mL,turnLeft@mL
  6620   002028  C023  F01D         	movff	turnLeft90@mL+1,turnLeft@mL+1
  6621   00202C  C024  F01E         	movff	turnLeft90@mR,turnLeft@mR
  6622   002030  C025  F01F         	movff	turnLeft90@mR+1,turnLeft@mR+1
  6623   002034  ECDE  F00C         	call	_turnLeft	;wreg free
  6624   002038                     
  6625                           ;dc_motor.c: 205:         a++;
  6626   002038  2A26               	incf	turnLeft90@a^0,f,c
  6627   00203A                     l2900:
  6628                           
  6629                           ;dc_motor.c: 203:     while(a<16){
  6630   00203A  0E0F               	movlw	15
  6631   00203C  6426               	cpfsgt	turnLeft90@a^0,c
  6632   00203E  EF23  F010         	goto	u2181
  6633   002042  EF25  F010         	goto	u2180
  6634   002046                     u2181:
  6635   002046  EF12  F010         	goto	l2896
  6636   00204A                     u2180:
  6637   00204A  EF32  F010         	goto	l2906
  6638   00204E                     l2902:
  6639                           
  6640                           ;dc_motor.c: 208:         stop(mL, mR);
  6641   00204E  C022  F01C         	movff	turnLeft90@mL,stop@mL
  6642   002052  C023  F01D         	movff	turnLeft90@mL+1,stop@mL+1
  6643   002056  C024  F01E         	movff	turnLeft90@mR,stop@mR
  6644   00205A  C025  F01F         	movff	turnLeft90@mR+1,stop@mR+1
  6645   00205E  EC42  F00E         	call	_stop	;wreg free
  6646   002062                     
  6647                           ;dc_motor.c: 209:         a--;
  6648   002062  0626               	decf	turnLeft90@a^0,f,c
  6649   002064                     l2906:
  6650                           
  6651                           ;dc_motor.c: 207:     while(a>0){
  6652   002064  5026               	movf	turnLeft90@a^0,w,c
  6653   002066  A4D8               	btfss	status,2,c
  6654   002068  EF38  F010         	goto	u2191
  6655   00206C  EF3A  F010         	goto	u2190
  6656   002070                     u2191:
  6657   002070  EF27  F010         	goto	l2902
  6658   002074                     u2190:
  6659   002074  EF47  F010         	goto	l2912
  6660   002078                     l2908:
  6661                           
  6662                           ;dc_motor.c: 212:         turnLeft(mL, mR);
  6663   002078  C022  F01C         	movff	turnLeft90@mL,turnLeft@mL
  6664   00207C  C023  F01D         	movff	turnLeft90@mL+1,turnLeft@mL+1
  6665   002080  C024  F01E         	movff	turnLeft90@mR,turnLeft@mR
  6666   002084  C025  F01F         	movff	turnLeft90@mR+1,turnLeft@mR+1
  6667   002088  ECDE  F00C         	call	_turnLeft	;wreg free
  6668   00208C                     
  6669                           ;dc_motor.c: 213:         a++;
  6670   00208C  2A26               	incf	turnLeft90@a^0,f,c
  6671   00208E                     l2912:
  6672                           
  6673                           ;dc_motor.c: 211:     while(a<15){
  6674   00208E  0E0E               	movlw	14
  6675   002090  6426               	cpfsgt	turnLeft90@a^0,c
  6676   002092  EF4D  F010         	goto	u2201
  6677   002096  EF4F  F010         	goto	u2200
  6678   00209A                     u2201:
  6679   00209A  EF3C  F010         	goto	l2908
  6680   00209E                     u2200:
  6681   00209E  EF5C  F010         	goto	l2918
  6682   0020A2                     l2914:
  6683                           
  6684                           ;dc_motor.c: 216:         stop(mL, mR);
  6685   0020A2  C022  F01C         	movff	turnLeft90@mL,stop@mL
  6686   0020A6  C023  F01D         	movff	turnLeft90@mL+1,stop@mL+1
  6687   0020AA  C024  F01E         	movff	turnLeft90@mR,stop@mR
  6688   0020AE  C025  F01F         	movff	turnLeft90@mR+1,stop@mR+1
  6689   0020B2  EC42  F00E         	call	_stop	;wreg free
  6690   0020B6                     
  6691                           ;dc_motor.c: 217:         a--;
  6692   0020B6  0626               	decf	turnLeft90@a^0,f,c
  6693   0020B8                     l2918:
  6694                           
  6695                           ;dc_motor.c: 215:     while(a>0){
  6696   0020B8  5026               	movf	turnLeft90@a^0,w,c
  6697   0020BA  A4D8               	btfss	status,2,c
  6698   0020BC  EF62  F010         	goto	u2211
  6699   0020C0  EF64  F010         	goto	u2210
  6700   0020C4                     u2211:
  6701   0020C4  EF51  F010         	goto	l2914
  6702   0020C8                     u2210:
  6703   0020C8  0012               	return		;funcret
  6704   0020CA                     __end_of_turnLeft90:
  6705                           	callstack 0
  6706                           
  6707 ;; *************** function _turnLeft *****************
  6708 ;; Defined at:
  6709 ;;		line 107 in file "dc_motor.c"
  6710 ;; Parameters:    Size  Location     Type
  6711 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6712 ;;		 -> main@motorL(9), 
  6713 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6714 ;;		 -> main@motorR(9), 
  6715 ;; Auto vars:     Size  Location     Type
  6716 ;;		None
  6717 ;; Return value:  Size  Location     Type
  6718 ;;                  1    wreg      void 
  6719 ;; Registers used:
  6720 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6721 ;; Tracked objects:
  6722 ;;		On entry : 0/0
  6723 ;;		On exit  : 0/0
  6724 ;;		Unchanged: 0/0
  6725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6726 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6728 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6729 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6730 ;;Total ram usage:        6 bytes
  6731 ;; Hardware stack levels used: 1
  6732 ;; Hardware stack levels required when called: 9
  6733 ;; This function calls:
  6734 ;;		_setMotorPWM
  6735 ;; This function is called by:
  6736 ;;		_turnLeft90
  6737 ;;		_turnLeft135
  6738 ;; This function uses a non-reentrant model
  6739 ;;
  6740                           
  6741                           	psect	text30
  6742   0019BC                     __ptext30:
  6743                           	callstack 0
  6744   0019BC                     _turnLeft:
  6745                           	callstack 17
  6746   0019BC                     
  6747                           ;dc_motor.c: 107: void turnLeft(DC_motor *mL, DC_motor *mR);dc_motor.c: 108: {;dc_motor.
      +                          c: 110:     mL->direction = 0;
  6748   0019BC  EE20 F001          	lfsr	2,1
  6749   0019C0  501C               	movf	turnLeft@mL^0,w,c
  6750   0019C2  26D9               	addwf	fsr2l,f,c
  6751   0019C4  501D               	movf	(turnLeft@mL+1)^0,w,c
  6752   0019C6  22DA               	addwfc	fsr2h,f,c
  6753   0019C8  0E00               	movlw	0
  6754   0019CA  6EDF               	movwf	indf2,c
  6755                           
  6756                           ;dc_motor.c: 111:     mL->brakemode = 0;
  6757   0019CC  EE20 F002          	lfsr	2,2
  6758   0019D0  501C               	movf	turnLeft@mL^0,w,c
  6759   0019D2  26D9               	addwf	fsr2l,f,c
  6760   0019D4  501D               	movf	(turnLeft@mL+1)^0,w,c
  6761   0019D6  22DA               	addwfc	fsr2h,f,c
  6762   0019D8  0E00               	movlw	0
  6763   0019DA  6EDF               	movwf	indf2,c
  6764                           
  6765                           ;dc_motor.c: 113:     mR->direction = 1;
  6766   0019DC  EE20 F001          	lfsr	2,1
  6767   0019E0  501E               	movf	turnLeft@mR^0,w,c
  6768   0019E2  26D9               	addwf	fsr2l,f,c
  6769   0019E4  501F               	movf	(turnLeft@mR+1)^0,w,c
  6770   0019E6  22DA               	addwfc	fsr2h,f,c
  6771   0019E8  0E01               	movlw	1
  6772   0019EA  6EDF               	movwf	indf2,c
  6773                           
  6774                           ;dc_motor.c: 114:     mR->brakemode = 0;
  6775   0019EC  EE20 F002          	lfsr	2,2
  6776   0019F0  501E               	movf	turnLeft@mR^0,w,c
  6777   0019F2  26D9               	addwf	fsr2l,f,c
  6778   0019F4  501F               	movf	(turnLeft@mR+1)^0,w,c
  6779   0019F6  22DA               	addwfc	fsr2h,f,c
  6780   0019F8  0E00               	movlw	0
  6781   0019FA  6EDF               	movwf	indf2,c
  6782                           
  6783                           ;dc_motor.c: 117:     if(mL->power>62){mL->power=62;}
  6784   0019FC  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6785   001A00  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6786   001A04  50DF               	movf	indf2,w,c
  6787   001A06  0A80               	xorlw	128
  6788   001A08  0F41               	addlw	-191
  6789   001A0A  A0D8               	btfss	status,0,c
  6790   001A0C  EF0A  F00D         	goto	u2121
  6791   001A10  EF0C  F00D         	goto	u2120
  6792   001A14                     u2121:
  6793   001A14  EF12  F00D         	goto	l2832
  6794   001A18                     u2120:
  6795   001A18  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6796   001A1C  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6797   001A20  0E3E               	movlw	62
  6798   001A22  6EDF               	movwf	indf2,c
  6799   001A24                     l2832:
  6800                           
  6801                           ;dc_motor.c: 118:     if(mR->power>62){mR->power=62;}
  6802   001A24  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6803   001A28  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6804   001A2C  50DF               	movf	indf2,w,c
  6805   001A2E  0A80               	xorlw	128
  6806   001A30  0F41               	addlw	-191
  6807   001A32  A0D8               	btfss	status,0,c
  6808   001A34  EF1E  F00D         	goto	u2131
  6809   001A38  EF20  F00D         	goto	u2130
  6810   001A3C                     u2131:
  6811   001A3C  EF26  F00D         	goto	l2836
  6812   001A40                     u2130:
  6813   001A40  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6814   001A44  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6815   001A48  0E3E               	movlw	62
  6816   001A4A  6EDF               	movwf	indf2,c
  6817   001A4C                     l2836:
  6818                           
  6819                           ;dc_motor.c: 120:     mL->power = mL->power + 10 ;
  6820   001A4C  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6821   001A50  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6822   001A54  50DF               	movf	indf2,w,c
  6823   001A56  0F0A               	addlw	10
  6824   001A58  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6825   001A5C  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6826   001A60  6EDF               	movwf	indf2,c
  6827   001A62                     
  6828                           ;dc_motor.c: 121:     mR->power = mR->power + 10;
  6829   001A62  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6830   001A66  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6831   001A6A  50DF               	movf	indf2,w,c
  6832   001A6C  0F0A               	addlw	10
  6833   001A6E  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6834   001A72  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6835   001A76  6EDF               	movwf	indf2,c
  6836   001A78                     
  6837                           ;dc_motor.c: 123:     setMotorPWM(mL);
  6838   001A78  C01C  F016         	movff	turnLeft@mL,setMotorPWM@m
  6839   001A7C  C01D  F017         	movff	turnLeft@mL+1,setMotorPWM@m+1
  6840   001A80  ECB6  F00A         	call	_setMotorPWM	;wreg free
  6841   001A84                     
  6842                           ;dc_motor.c: 124:     setMotorPWM(mR);
  6843   001A84  C01E  F016         	movff	turnLeft@mR,setMotorPWM@m
  6844   001A88  C01F  F017         	movff	turnLeft@mR+1,setMotorPWM@m+1
  6845   001A8C  ECB6  F00A         	call	_setMotorPWM	;wreg free
  6846   001A90                     
  6847                           ;dc_motor.c: 125:     _delay((unsigned long)((20)*(64000000/4000.0)));
  6848   001A90  0E02               	movlw	2
  6849   001A92  6E21               	movwf	(??_turnLeft+1)^0,c
  6850   001A94  0EA0               	movlw	160
  6851   001A96  6E20               	movwf	??_turnLeft^0,c
  6852   001A98  0E92               	movlw	146
  6853   001A9A                     u4837:
  6854   001A9A  2EE8               	decfsz	wreg,f,c
  6855   001A9C  D7FE               	bra	u4837
  6856   001A9E  2E20               	decfsz	??_turnLeft^0,f,c
  6857   001AA0  D7FC               	bra	u4837
  6858   001AA2  2E21               	decfsz	(??_turnLeft+1)^0,f,c
  6859   001AA4  D7FA               	bra	u4837
  6860   001AA6  D000               	nop2	
  6861   001AA8  0012               	return		;funcret
  6862   001AAA                     __end_of_turnLeft:
  6863                           	callstack 0
  6864                           
  6865 ;; *************** function _stop *****************
  6866 ;; Defined at:
  6867 ;;		line 87 in file "dc_motor.c"
  6868 ;; Parameters:    Size  Location     Type
  6869 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6870 ;;		 -> main@motorL(9), 
  6871 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6872 ;;		 -> main@motorR(9), 
  6873 ;; Auto vars:     Size  Location     Type
  6874 ;;		None
  6875 ;; Return value:  Size  Location     Type
  6876 ;;                  1    wreg      void 
  6877 ;; Registers used:
  6878 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6879 ;; Tracked objects:
  6880 ;;		On entry : 0/0
  6881 ;;		On exit  : 0/0
  6882 ;;		Unchanged: 0/0
  6883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6884 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6886 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6887 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6888 ;;Total ram usage:        5 bytes
  6889 ;; Hardware stack levels used: 1
  6890 ;; Hardware stack levels required when called: 9
  6891 ;; This function calls:
  6892 ;;		_setMotorPWM
  6893 ;; This function is called by:
  6894 ;;		_turnLeft90
  6895 ;;		_turnRight90
  6896 ;;		_turnRight135
  6897 ;;		_turnLeft135
  6898 ;;		_RedInstructions
  6899 ;;		_GreenInstructions
  6900 ;;		_BlueInstructions
  6901 ;;		_YellowInstructions
  6902 ;;		_PinkInstructions
  6903 ;;		_OrangeInstructions
  6904 ;;		_LightBlueInstructions
  6905 ;;		_AntiYellow
  6906 ;;		_AntiPink
  6907 ;;		_WhiteInstructions
  6908 ;;		_main
  6909 ;; This function uses a non-reentrant model
  6910 ;;
  6911                           
  6912                           	psect	text31
  6913   001C84                     __ptext31:
  6914                           	callstack 0
  6915   001C84                     _stop:
  6916                           	callstack 21
  6917   001C84                     
  6918                           ;dc_motor.c: 87: void stop(DC_motor *mL, DC_motor *mR);dc_motor.c: 88: {;dc_motor.c: 90:
      +                               mL->brakemode = 1;
  6919   001C84  EE20 F002          	lfsr	2,2
  6920   001C88  501C               	movf	stop@mL^0,w,c
  6921   001C8A  26D9               	addwf	fsr2l,f,c
  6922   001C8C  501D               	movf	(stop@mL+1)^0,w,c
  6923   001C8E  22DA               	addwfc	fsr2h,f,c
  6924   001C90  0E01               	movlw	1
  6925   001C92  6EDF               	movwf	indf2,c
  6926                           
  6927                           ;dc_motor.c: 91:     mR->brakemode = 1;
  6928   001C94  EE20 F002          	lfsr	2,2
  6929   001C98  501E               	movf	stop@mR^0,w,c
  6930   001C9A  26D9               	addwf	fsr2l,f,c
  6931   001C9C  501F               	movf	(stop@mR+1)^0,w,c
  6932   001C9E  22DA               	addwfc	fsr2h,f,c
  6933   001CA0  0E01               	movlw	1
  6934   001CA2  6EDF               	movwf	indf2,c
  6935                           
  6936                           ;dc_motor.c: 93:     if(mL->power<0){mL->power=0;}
  6937   001CA4  C01C  FFD9         	movff	stop@mL,fsr2l
  6938   001CA8  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6939   001CAC  0E00               	movlw	0
  6940   001CAE  BEDB               	btfsc	plusw2,7,c
  6941   001CB0  EF5E  F00E         	goto	u2100
  6942   001CB4  EF5C  F00E         	goto	u2101
  6943   001CB8                     u2101:
  6944   001CB8  EF64  F00E         	goto	l2814
  6945   001CBC                     u2100:
  6946   001CBC  C01C  FFD9         	movff	stop@mL,fsr2l
  6947   001CC0  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6948   001CC4  0E00               	movlw	0
  6949   001CC6  6EDF               	movwf	indf2,c
  6950   001CC8                     l2814:
  6951                           
  6952                           ;dc_motor.c: 94:     if(mR->power<0){mR->power=0;}
  6953   001CC8  C01E  FFD9         	movff	stop@mR,fsr2l
  6954   001CCC  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6955   001CD0  0E00               	movlw	0
  6956   001CD2  BEDB               	btfsc	plusw2,7,c
  6957   001CD4  EF70  F00E         	goto	u2110
  6958   001CD8  EF6E  F00E         	goto	u2111
  6959   001CDC                     u2111:
  6960   001CDC  EF76  F00E         	goto	l2818
  6961   001CE0                     u2110:
  6962   001CE0  C01E  FFD9         	movff	stop@mR,fsr2l
  6963   001CE4  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6964   001CE8  0E00               	movlw	0
  6965   001CEA  6EDF               	movwf	indf2,c
  6966   001CEC                     l2818:
  6967                           
  6968                           ;dc_motor.c: 96:     mL->power = mL->power - 5 ;
  6969   001CEC  C01C  FFD9         	movff	stop@mL,fsr2l
  6970   001CF0  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6971   001CF4  50DF               	movf	indf2,w,c
  6972   001CF6  0FFB               	addlw	251
  6973   001CF8  C01C  FFD9         	movff	stop@mL,fsr2l
  6974   001CFC  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6975   001D00  6EDF               	movwf	indf2,c
  6976   001D02                     
  6977                           ;dc_motor.c: 97:     mR->power = mR->power - 5;
  6978   001D02  C01E  FFD9         	movff	stop@mR,fsr2l
  6979   001D06  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6980   001D0A  50DF               	movf	indf2,w,c
  6981   001D0C  0FFB               	addlw	251
  6982   001D0E  C01E  FFD9         	movff	stop@mR,fsr2l
  6983   001D12  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6984   001D16  6EDF               	movwf	indf2,c
  6985                           
  6986                           ;dc_motor.c: 99:     mL->power = 0;
  6987   001D18  C01C  FFD9         	movff	stop@mL,fsr2l
  6988   001D1C  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6989   001D20  0E00               	movlw	0
  6990   001D22  6EDF               	movwf	indf2,c
  6991                           
  6992                           ;dc_motor.c: 100:     mR->power = 0;
  6993   001D24  C01E  FFD9         	movff	stop@mR,fsr2l
  6994   001D28  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6995   001D2C  0E00               	movlw	0
  6996   001D2E  6EDF               	movwf	indf2,c
  6997   001D30                     
  6998                           ;dc_motor.c: 101:     setMotorPWM(mL);
  6999   001D30  C01C  F016         	movff	stop@mL,setMotorPWM@m
  7000   001D34  C01D  F017         	movff	stop@mL+1,setMotorPWM@m+1
  7001   001D38  ECB6  F00A         	call	_setMotorPWM	;wreg free
  7002   001D3C                     
  7003                           ;dc_motor.c: 102:     setMotorPWM(mR);
  7004   001D3C  C01E  F016         	movff	stop@mR,setMotorPWM@m
  7005   001D40  C01F  F017         	movff	stop@mR+1,setMotorPWM@m+1
  7006   001D44  ECB6  F00A         	call	_setMotorPWM	;wreg free
  7007   001D48                     
  7008                           ;dc_motor.c: 103:     _delay((unsigned long)((10)*(64000000/4000.0)));
  7009   001D48  0ED0               	movlw	208
  7010   001D4A  6E20               	movwf	??_stop^0,c
  7011   001D4C  0ECA               	movlw	202
  7012   001D4E                     u4847:
  7013   001D4E  2EE8               	decfsz	wreg,f,c
  7014   001D50  D7FE               	bra	u4847
  7015   001D52  2E20               	decfsz	??_stop^0,f,c
  7016   001D54  D7FC               	bra	u4847
  7017   001D56  0012               	return		;funcret
  7018   001D58                     __end_of_stop:
  7019                           	callstack 0
  7020                           
  7021 ;; *************** function _fullSpeedBackwards *****************
  7022 ;; Defined at:
  7023 ;;		line 174 in file "dc_motor.c"
  7024 ;; Parameters:    Size  Location     Type
  7025 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  7026 ;;		 -> main@motorL(9), 
  7027 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  7028 ;;		 -> main@motorR(9), 
  7029 ;; Auto vars:     Size  Location     Type
  7030 ;;		None
  7031 ;; Return value:  Size  Location     Type
  7032 ;;                  1    wreg      void 
  7033 ;; Registers used:
  7034 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7035 ;; Tracked objects:
  7036 ;;		On entry : 0/0
  7037 ;;		On exit  : 0/0
  7038 ;;		Unchanged: 0/0
  7039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7040 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7042 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7043 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7044 ;;Total ram usage:        6 bytes
  7045 ;; Hardware stack levels used: 1
  7046 ;; Hardware stack levels required when called: 9
  7047 ;; This function calls:
  7048 ;;		_setMotorPWM
  7049 ;; This function is called by:
  7050 ;;		_RedInstructions
  7051 ;;		_GreenInstructions
  7052 ;;		_BlueInstructions
  7053 ;;		_YellowInstructions
  7054 ;;		_PinkInstructions
  7055 ;;		_OrangeInstructions
  7056 ;;		_LightBlueInstructions
  7057 ;; This function uses a non-reentrant model
  7058 ;;
  7059                           
  7060                           	psect	text32
  7061   001AAA                     __ptext32:
  7062                           	callstack 0
  7063   001AAA                     _fullSpeedBackwards:
  7064                           	callstack 18
  7065   001AAA                     
  7066                           ;dc_motor.c: 177:     mL->direction = 0;
  7067   001AAA  EE20 F001          	lfsr	2,1
  7068   001AAE  501C               	movf	fullSpeedBackwards@mL^0,w,c
  7069   001AB0  26D9               	addwf	fsr2l,f,c
  7070   001AB2  501D               	movf	(fullSpeedBackwards@mL+1)^0,w,c
  7071   001AB4  22DA               	addwfc	fsr2h,f,c
  7072   001AB6  0E00               	movlw	0
  7073   001AB8  6EDF               	movwf	indf2,c
  7074                           
  7075                           ;dc_motor.c: 178:     mL->brakemode = 0;
  7076   001ABA  EE20 F002          	lfsr	2,2
  7077   001ABE  501C               	movf	fullSpeedBackwards@mL^0,w,c
  7078   001AC0  26D9               	addwf	fsr2l,f,c
  7079   001AC2  501D               	movf	(fullSpeedBackwards@mL+1)^0,w,c
  7080   001AC4  22DA               	addwfc	fsr2h,f,c
  7081   001AC6  0E00               	movlw	0
  7082   001AC8  6EDF               	movwf	indf2,c
  7083                           
  7084                           ;dc_motor.c: 180:     mR->direction = 0;
  7085   001ACA  EE20 F001          	lfsr	2,1
  7086   001ACE  501E               	movf	fullSpeedBackwards@mR^0,w,c
  7087   001AD0  26D9               	addwf	fsr2l,f,c
  7088   001AD2  501F               	movf	(fullSpeedBackwards@mR+1)^0,w,c
  7089   001AD4  22DA               	addwfc	fsr2h,f,c
  7090   001AD6  0E00               	movlw	0
  7091   001AD8  6EDF               	movwf	indf2,c
  7092                           
  7093                           ;dc_motor.c: 181:     mR->brakemode = 0;
  7094   001ADA  EE20 F002          	lfsr	2,2
  7095   001ADE  501E               	movf	fullSpeedBackwards@mR^0,w,c
  7096   001AE0  26D9               	addwf	fsr2l,f,c
  7097   001AE2  501F               	movf	(fullSpeedBackwards@mR+1)^0,w,c
  7098   001AE4  22DA               	addwfc	fsr2h,f,c
  7099   001AE6  0E00               	movlw	0
  7100   001AE8  6EDF               	movwf	indf2,c
  7101                           
  7102                           ;dc_motor.c: 184:     if(mL->power>38){mL->power=38;}
  7103   001AEA  C01C  FFD9         	movff	fullSpeedBackwards@mL,fsr2l
  7104   001AEE  C01D  FFDA         	movff	fullSpeedBackwards@mL+1,fsr2h
  7105   001AF2  50DF               	movf	indf2,w,c
  7106   001AF4  0A80               	xorlw	128
  7107   001AF6  0F59               	addlw	-167
  7108   001AF8  A0D8               	btfss	status,0,c
  7109   001AFA  EF81  F00D         	goto	u2161
  7110   001AFE  EF83  F00D         	goto	u2160
  7111   001B02                     u2161:
  7112   001B02  EF89  F00D         	goto	l2880
  7113   001B06                     u2160:
  7114   001B06  C01C  FFD9         	movff	fullSpeedBackwards@mL,fsr2l
  7115   001B0A  C01D  FFDA         	movff	fullSpeedBackwards@mL+1,fsr2h
  7116   001B0E  0E26               	movlw	38
  7117   001B10  6EDF               	movwf	indf2,c
  7118   001B12                     l2880:
  7119                           
  7120                           ;dc_motor.c: 185:     if(mR->power>46){mR->power=46;}
  7121   001B12  C01E  FFD9         	movff	fullSpeedBackwards@mR,fsr2l
  7122   001B16  C01F  FFDA         	movff	fullSpeedBackwards@mR+1,fsr2h
  7123   001B1A  50DF               	movf	indf2,w,c
  7124   001B1C  0A80               	xorlw	128
  7125   001B1E  0F51               	addlw	-175
  7126   001B20  A0D8               	btfss	status,0,c
  7127   001B22  EF95  F00D         	goto	u2171
  7128   001B26  EF97  F00D         	goto	u2170
  7129   001B2A                     u2171:
  7130   001B2A  EF9D  F00D         	goto	l2884
  7131   001B2E                     u2170:
  7132   001B2E  C01E  FFD9         	movff	fullSpeedBackwards@mR,fsr2l
  7133   001B32  C01F  FFDA         	movff	fullSpeedBackwards@mR+1,fsr2h
  7134   001B36  0E2E               	movlw	46
  7135   001B38  6EDF               	movwf	indf2,c
  7136   001B3A                     l2884:
  7137                           
  7138                           ;dc_motor.c: 187:     mL->power = mL->power + 5 ;
  7139   001B3A  C01C  FFD9         	movff	fullSpeedBackwards@mL,fsr2l
  7140   001B3E  C01D  FFDA         	movff	fullSpeedBackwards@mL+1,fsr2h
  7141   001B42  50DF               	movf	indf2,w,c
  7142   001B44  0F05               	addlw	5
  7143   001B46  C01C  FFD9         	movff	fullSpeedBackwards@mL,fsr2l
  7144   001B4A  C01D  FFDA         	movff	fullSpeedBackwards@mL+1,fsr2h
  7145   001B4E  6EDF               	movwf	indf2,c
  7146   001B50                     
  7147                           ;dc_motor.c: 188:     mR->power = mR->power + 8;
  7148   001B50  C01E  FFD9         	movff	fullSpeedBackwards@mR,fsr2l
  7149   001B54  C01F  FFDA         	movff	fullSpeedBackwards@mR+1,fsr2h
  7150   001B58  50DF               	movf	indf2,w,c
  7151   001B5A  0F08               	addlw	8
  7152   001B5C  C01E  FFD9         	movff	fullSpeedBackwards@mR,fsr2l
  7153   001B60  C01F  FFDA         	movff	fullSpeedBackwards@mR+1,fsr2h
  7154   001B64  6EDF               	movwf	indf2,c
  7155   001B66                     
  7156                           ;dc_motor.c: 190:     setMotorPWM(mL);
  7157   001B66  C01C  F016         	movff	fullSpeedBackwards@mL,setMotorPWM@m
  7158   001B6A  C01D  F017         	movff	fullSpeedBackwards@mL+1,setMotorPWM@m+1
  7159   001B6E  ECB6  F00A         	call	_setMotorPWM	;wreg free
  7160   001B72                     
  7161                           ;dc_motor.c: 191:     setMotorPWM(mR);
  7162   001B72  C01E  F016         	movff	fullSpeedBackwards@mR,setMotorPWM@m
  7163   001B76  C01F  F017         	movff	fullSpeedBackwards@mR+1,setMotorPWM@m+1
  7164   001B7A  ECB6  F00A         	call	_setMotorPWM	;wreg free
  7165   001B7E                     
  7166                           ;dc_motor.c: 192:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7167   001B7E  0E05               	movlw	5
  7168   001B80  6E21               	movwf	(??_fullSpeedBackwards+1)^0,c
  7169   001B82  0E0F               	movlw	15
  7170   001B84  6E20               	movwf	??_fullSpeedBackwards^0,c
  7171   001B86  0EF1               	movlw	241
  7172   001B88                     u4857:
  7173   001B88  2EE8               	decfsz	wreg,f,c
  7174   001B8A  D7FE               	bra	u4857
  7175   001B8C  2E20               	decfsz	??_fullSpeedBackwards^0,f,c
  7176   001B8E  D7FC               	bra	u4857
  7177   001B90  2E21               	decfsz	(??_fullSpeedBackwards+1)^0,f,c
  7178   001B92  D7FA               	bra	u4857
  7179   001B94  F000               	nop	
  7180   001B96  0012               	return		;funcret
  7181   001B98                     __end_of_fullSpeedBackwards:
  7182                           	callstack 0
  7183                           
  7184 ;; *************** function _setMotorPWM *****************
  7185 ;; Defined at:
  7186 ;;		line 64 in file "dc_motor.c"
  7187 ;; Parameters:    Size  Location     Type
  7188 ;;  m               2   21[COMRAM] PTR struct DC_motor
  7189 ;;		 -> main@motorR(9), main@motorL(9), 
  7190 ;; Auto vars:     Size  Location     Type
  7191 ;;  negDuty         1   26[COMRAM] unsigned char 
  7192 ;;  posDuty         1   25[COMRAM] unsigned char 
  7193 ;; Return value:  Size  Location     Type
  7194 ;;                  1    wreg      void 
  7195 ;; Registers used:
  7196 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7197 ;; Tracked objects:
  7198 ;;		On entry : 0/0
  7199 ;;		On exit  : 0/0
  7200 ;;		Unchanged: 0/0
  7201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7202 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7203 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7204 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7205 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7206 ;;Total ram usage:        6 bytes
  7207 ;; Hardware stack levels used: 1
  7208 ;; Hardware stack levels required when called: 8
  7209 ;; This function calls:
  7210 ;;		___lwdiv
  7211 ;;		___wmul
  7212 ;; This function is called by:
  7213 ;;		_stop
  7214 ;;		_turnLeft
  7215 ;;		_turnRight
  7216 ;;		_fullSpeedAhead
  7217 ;;		_fullSpeedBackwards
  7218 ;; This function uses a non-reentrant model
  7219 ;;
  7220                           
  7221                           	psect	text33
  7222   00156C                     __ptext33:
  7223                           	callstack 0
  7224   00156C                     _setMotorPWM:
  7225                           	callstack 21
  7226   00156C                     
  7227                           ;dc_motor.c: 64: void setMotorPWM(DC_motor *m);dc_motor.c: 65: {;dc_motor.c: 66:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 68:     if(m->brakemode) {
  7228   00156C  EE20 F002          	lfsr	2,2
  7229   001570  5016               	movf	setMotorPWM@m^0,w,c
  7230   001572  26D9               	addwf	fsr2l,f,c
  7231   001574  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7232   001576  22DA               	addwfc	fsr2h,f,c
  7233   001578  50DF               	movf	indf2,w,c
  7234   00157A  B4D8               	btfsc	status,2,c
  7235   00157C  EFC2  F00A         	goto	u2061
  7236   001580  EFC4  F00A         	goto	u2060
  7237   001584                     u2061:
  7238   001584  EFF8  F00A         	goto	l2796
  7239   001588                     u2060:
  7240   001588                     
  7241                           ;dc_motor.c: 69:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  7242   001588  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  7243   00158C  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  7244   001590  50DF               	movf	indf2,w,c
  7245   001592  6E09               	movwf	___wmul@multiplier^0,c
  7246   001594  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  7247   001596  BE09               	btfsc	___wmul@multiplier^0,7,c
  7248   001598  060A               	decf	(___wmul@multiplier+1)^0,f,c
  7249   00159A  EE20 F003          	lfsr	2,3
  7250   00159E  5016               	movf	setMotorPWM@m^0,w,c
  7251   0015A0  26D9               	addwf	fsr2l,f,c
  7252   0015A2  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7253   0015A4  22DA               	addwfc	fsr2h,f,c
  7254   0015A6  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  7255   0015AA  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  7256   0015AE  ECD6  F014         	call	___wmul	;wreg free
  7257   0015B2  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  7258   0015B6  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  7259   0015BA  0E00               	movlw	0
  7260   0015BC  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  7261   0015BE  0E64               	movlw	100
  7262   0015C0  6E11               	movwf	___lwdiv@divisor^0,c
  7263   0015C2  EC3F  F012         	call	___lwdiv	;wreg free
  7264   0015C6  EE20 F003          	lfsr	2,3
  7265   0015CA  5016               	movf	setMotorPWM@m^0,w,c
  7266   0015CC  26D9               	addwf	fsr2l,f,c
  7267   0015CE  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7268   0015D0  22DA               	addwfc	fsr2h,f,c
  7269   0015D2  50DF               	movf	indf2,w,c
  7270   0015D4  6E18               	movwf	??_setMotorPWM^0,c
  7271   0015D6  500F               	movf	?___lwdiv^0,w,c
  7272   0015D8  5C18               	subwf	??_setMotorPWM^0,w,c
  7273   0015DA  6E1A               	movwf	setMotorPWM@posDuty^0,c
  7274   0015DC                     
  7275                           ;dc_motor.c: 70:         negDuty=m->PWMperiod;
  7276   0015DC  EE20 F003          	lfsr	2,3
  7277   0015E0  5016               	movf	setMotorPWM@m^0,w,c
  7278   0015E2  26D9               	addwf	fsr2l,f,c
  7279   0015E4  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7280   0015E6  22DA               	addwfc	fsr2h,f,c
  7281   0015E8  50DF               	movf	indf2,w,c
  7282   0015EA  6E1B               	movwf	setMotorPWM@negDuty^0,c
  7283                           
  7284                           ;dc_motor.c: 71:     }
  7285   0015EC  EF1B  F00B         	goto	l2800
  7286   0015F0                     l2796:
  7287                           
  7288                           ;dc_motor.c: 73:         posDuty=0;
  7289   0015F0  0E00               	movlw	0
  7290   0015F2  6E1A               	movwf	setMotorPWM@posDuty^0,c
  7291   0015F4                     
  7292                           ;dc_motor.c: 74:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  7293   0015F4  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  7294   0015F8  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  7295   0015FC  50DF               	movf	indf2,w,c
  7296   0015FE  6E09               	movwf	___wmul@multiplier^0,c
  7297   001600  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  7298   001602  BE09               	btfsc	___wmul@multiplier^0,7,c
  7299   001604  060A               	decf	(___wmul@multiplier+1)^0,f,c
  7300   001606  EE20 F003          	lfsr	2,3
  7301   00160A  5016               	movf	setMotorPWM@m^0,w,c
  7302   00160C  26D9               	addwf	fsr2l,f,c
  7303   00160E  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7304   001610  22DA               	addwfc	fsr2h,f,c
  7305   001612  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  7306   001616  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  7307   00161A  ECD6  F014         	call	___wmul	;wreg free
  7308   00161E  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  7309   001622  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  7310   001626  0E00               	movlw	0
  7311   001628  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  7312   00162A  0E64               	movlw	100
  7313   00162C  6E11               	movwf	___lwdiv@divisor^0,c
  7314   00162E  EC3F  F012         	call	___lwdiv	;wreg free
  7315   001632  500F               	movf	?___lwdiv^0,w,c
  7316   001634  6E1B               	movwf	setMotorPWM@negDuty^0,c
  7317   001636                     l2800:
  7318                           
  7319                           ;dc_motor.c: 77:     if (m->direction) {
  7320   001636  EE20 F001          	lfsr	2,1
  7321   00163A  5016               	movf	setMotorPWM@m^0,w,c
  7322   00163C  26D9               	addwf	fsr2l,f,c
  7323   00163E  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7324   001640  22DA               	addwfc	fsr2h,f,c
  7325   001642  50DF               	movf	indf2,w,c
  7326   001644  B4D8               	btfsc	status,2,c
  7327   001646  EF27  F00B         	goto	u2071
  7328   00164A  EF29  F00B         	goto	u2070
  7329   00164E                     u2071:
  7330   00164E  EF4B  F00B         	goto	l2804
  7331   001652                     u2070:
  7332   001652                     
  7333                           ;dc_motor.c: 78:         *(m->posDutyHighByte)=posDuty;
  7334   001652  EE20 F005          	lfsr	2,5
  7335   001656  5016               	movf	setMotorPWM@m^0,w,c
  7336   001658  26D9               	addwf	fsr2l,f,c
  7337   00165A  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7338   00165C  22DA               	addwfc	fsr2h,f,c
  7339   00165E  CFDE F018          	movff	postinc2,??_setMotorPWM
  7340   001662  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  7341   001666  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  7342   00166A  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  7343   00166E  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  7344                           
  7345                           ;dc_motor.c: 79:         *(m->negDutyHighByte)=negDuty;
  7346   001672  EE20 F007          	lfsr	2,7
  7347   001676  5016               	movf	setMotorPWM@m^0,w,c
  7348   001678  26D9               	addwf	fsr2l,f,c
  7349   00167A  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7350   00167C  22DA               	addwfc	fsr2h,f,c
  7351   00167E  CFDE F018          	movff	postinc2,??_setMotorPWM
  7352   001682  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  7353   001686  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  7354   00168A  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  7355   00168E  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  7356                           
  7357                           ;dc_motor.c: 80:     } else {
  7358   001692  EF6B  F00B         	goto	l193
  7359   001696                     l2804:
  7360                           
  7361                           ;dc_motor.c: 81:         *(m->posDutyHighByte)=negDuty;
  7362   001696  EE20 F005          	lfsr	2,5
  7363   00169A  5016               	movf	setMotorPWM@m^0,w,c
  7364   00169C  26D9               	addwf	fsr2l,f,c
  7365   00169E  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7366   0016A0  22DA               	addwfc	fsr2h,f,c
  7367   0016A2  CFDE F018          	movff	postinc2,??_setMotorPWM
  7368   0016A6  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  7369   0016AA  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  7370   0016AE  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  7371   0016B2  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  7372                           
  7373                           ;dc_motor.c: 82:         *(m->negDutyHighByte)=posDuty;
  7374   0016B6  EE20 F007          	lfsr	2,7
  7375   0016BA  5016               	movf	setMotorPWM@m^0,w,c
  7376   0016BC  26D9               	addwf	fsr2l,f,c
  7377   0016BE  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7378   0016C0  22DA               	addwfc	fsr2h,f,c
  7379   0016C2  CFDE F018          	movff	postinc2,??_setMotorPWM
  7380   0016C6  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  7381   0016CA  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  7382   0016CE  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  7383   0016D2  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  7384   0016D6                     l193:
  7385   0016D6  0012               	return		;funcret
  7386   0016D8                     __end_of_setMotorPWM:
  7387                           	callstack 0
  7388                           
  7389 ;; *************** function ___wmul *****************
  7390 ;; Defined at:
  7391 ;;		line 15 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\Umul16.c"
  7392 ;; Parameters:    Size  Location     Type
  7393 ;;  multiplier      2    8[COMRAM] unsigned int 
  7394 ;;  multiplicand    2   10[COMRAM] unsigned int 
  7395 ;; Auto vars:     Size  Location     Type
  7396 ;;  product         2   12[COMRAM] unsigned int 
  7397 ;; Return value:  Size  Location     Type
  7398 ;;                  2    8[COMRAM] unsigned int 
  7399 ;; Registers used:
  7400 ;;		wreg, status,2, status,0, prodl, prodh
  7401 ;; Tracked objects:
  7402 ;;		On entry : 0/0
  7403 ;;		On exit  : 0/0
  7404 ;;		Unchanged: 0/0
  7405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7406 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7407 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7409 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7410 ;;Total ram usage:        6 bytes
  7411 ;; Hardware stack levels used: 1
  7412 ;; Hardware stack levels required when called: 7
  7413 ;; This function calls:
  7414 ;;		Nothing
  7415 ;; This function is called by:
  7416 ;;		_setMotorPWM
  7417 ;; This function uses a non-reentrant model
  7418 ;;
  7419                           
  7420                           	psect	text34
  7421   0029AC                     __ptext34:
  7422                           	callstack 0
  7423   0029AC                     ___wmul:
  7424                           	callstack 21
  7425   0029AC  5009               	movf	___wmul@multiplier^0,w,c
  7426   0029AE  020B               	mulwf	___wmul@multiplicand^0,c
  7427   0029B0  CFF3 F00D          	movff	prodl,___wmul@product
  7428   0029B4  CFF4 F00E          	movff	prodh,___wmul@product+1
  7429   0029B8  5009               	movf	___wmul@multiplier^0,w,c
  7430   0029BA  020C               	mulwf	(___wmul@multiplicand+1)^0,c
  7431   0029BC  50F3               	movf	243,w,c
  7432   0029BE  260E               	addwf	(___wmul@product+1)^0,f,c
  7433   0029C0  500A               	movf	(___wmul@multiplier+1)^0,w,c
  7434   0029C2  020B               	mulwf	___wmul@multiplicand^0,c
  7435   0029C4  50F3               	movf	243,w,c
  7436   0029C6  260E               	addwf	(___wmul@product+1)^0,f,c
  7437   0029C8  C00D  F009         	movff	___wmul@product,?___wmul
  7438   0029CC  C00E  F00A         	movff	___wmul@product+1,?___wmul+1
  7439   0029D0  0012               	return		;funcret
  7440   0029D2                     __end_of___wmul:
  7441                           	callstack 0
  7442                           
  7443 ;; *************** function ___lwdiv *****************
  7444 ;; Defined at:
  7445 ;;		line 7 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\lwdiv.c"
  7446 ;; Parameters:    Size  Location     Type
  7447 ;;  dividend        2   14[COMRAM] unsigned int 
  7448 ;;  divisor         2   16[COMRAM] unsigned int 
  7449 ;; Auto vars:     Size  Location     Type
  7450 ;;  quotient        2   18[COMRAM] unsigned int 
  7451 ;;  counter         1   20[COMRAM] unsigned char 
  7452 ;; Return value:  Size  Location     Type
  7453 ;;                  2   14[COMRAM] unsigned int 
  7454 ;; Registers used:
  7455 ;;		wreg, status,2, status,0
  7456 ;; Tracked objects:
  7457 ;;		On entry : 0/0
  7458 ;;		On exit  : 0/0
  7459 ;;		Unchanged: 0/0
  7460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7461 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7462 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7464 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7465 ;;Total ram usage:        7 bytes
  7466 ;; Hardware stack levels used: 1
  7467 ;; Hardware stack levels required when called: 7
  7468 ;; This function calls:
  7469 ;;		Nothing
  7470 ;; This function is called by:
  7471 ;;		_setMotorPWM
  7472 ;; This function uses a non-reentrant model
  7473 ;;
  7474                           
  7475                           	psect	text35
  7476   00247E                     __ptext35:
  7477                           	callstack 0
  7478   00247E                     ___lwdiv:
  7479                           	callstack 21
  7480   00247E  0E00               	movlw	0
  7481   002480  6E14               	movwf	(___lwdiv@quotient+1)^0,c
  7482   002482  0E00               	movlw	0
  7483   002484  6E13               	movwf	___lwdiv@quotient^0,c
  7484   002486  5011               	movf	___lwdiv@divisor^0,w,c
  7485   002488  1012               	iorwf	(___lwdiv@divisor+1)^0,w,c
  7486   00248A  B4D8               	btfsc	status,2,c
  7487   00248C  EF4A  F012         	goto	u2031
  7488   002490  EF4C  F012         	goto	u2030
  7489   002494                     u2031:
  7490   002494  EF74  F012         	goto	l1204
  7491   002498                     u2030:
  7492   002498  0E01               	movlw	1
  7493   00249A  6E15               	movwf	___lwdiv@counter^0,c
  7494   00249C  EF54  F012         	goto	l2776
  7495   0024A0                     l2774:
  7496   0024A0  90D8               	bcf	status,0,c
  7497   0024A2  3611               	rlcf	___lwdiv@divisor^0,f,c
  7498   0024A4  3612               	rlcf	(___lwdiv@divisor+1)^0,f,c
  7499   0024A6  2A15               	incf	___lwdiv@counter^0,f,c
  7500   0024A8                     l2776:
  7501   0024A8  AE12               	btfss	(___lwdiv@divisor+1)^0,7,c
  7502   0024AA  EF59  F012         	goto	u2041
  7503   0024AE  EF5B  F012         	goto	u2040
  7504   0024B2                     u2041:
  7505   0024B2  EF50  F012         	goto	l2774
  7506   0024B6                     u2040:
  7507   0024B6                     l2778:
  7508   0024B6  90D8               	bcf	status,0,c
  7509   0024B8  3613               	rlcf	___lwdiv@quotient^0,f,c
  7510   0024BA  3614               	rlcf	(___lwdiv@quotient+1)^0,f,c
  7511   0024BC  5011               	movf	___lwdiv@divisor^0,w,c
  7512   0024BE  5C0F               	subwf	___lwdiv@dividend^0,w,c
  7513   0024C0  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  7514   0024C2  5810               	subwfb	(___lwdiv@dividend+1)^0,w,c
  7515   0024C4  A0D8               	btfss	status,0,c
  7516   0024C6  EF67  F012         	goto	u2051
  7517   0024CA  EF69  F012         	goto	u2050
  7518   0024CE                     u2051:
  7519   0024CE  EF6E  F012         	goto	l2786
  7520   0024D2                     u2050:
  7521   0024D2  5011               	movf	___lwdiv@divisor^0,w,c
  7522   0024D4  5E0F               	subwf	___lwdiv@dividend^0,f,c
  7523   0024D6  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  7524   0024D8  5A10               	subwfb	(___lwdiv@dividend+1)^0,f,c
  7525   0024DA  8013               	bsf	___lwdiv@quotient^0,0,c
  7526   0024DC                     l2786:
  7527   0024DC  90D8               	bcf	status,0,c
  7528   0024DE  3212               	rrcf	(___lwdiv@divisor+1)^0,f,c
  7529   0024E0  3211               	rrcf	___lwdiv@divisor^0,f,c
  7530   0024E2  2E15               	decfsz	___lwdiv@counter^0,f,c
  7531   0024E4  EF5B  F012         	goto	l2778
  7532   0024E8                     l1204:
  7533   0024E8  C013  F00F         	movff	___lwdiv@quotient,?___lwdiv
  7534   0024EC  C014  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7535   0024F0  0012               	return		;funcret
  7536   0024F2                     __end_of___lwdiv:
  7537                           	callstack 0
  7538                           
  7539 ;; *************** function _Update_RGBC *****************
  7540 ;; Defined at:
  7541 ;;		line 90 in file "color.c"
  7542 ;; Parameters:    Size  Location     Type
  7543 ;;  tempval         2   19[COMRAM] PTR struct RGB_val
  7544 ;;		 -> main@initial_color(8), 
  7545 ;; Auto vars:     Size  Location     Type
  7546 ;;		None
  7547 ;; Return value:  Size  Location     Type
  7548 ;;                  1    wreg      void 
  7549 ;; Registers used:
  7550 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7551 ;; Tracked objects:
  7552 ;;		On entry : 0/0
  7553 ;;		On exit  : 0/0
  7554 ;;		Unchanged: 0/0
  7555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7556 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7559 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7560 ;;Total ram usage:        2 bytes
  7561 ;; Hardware stack levels used: 1
  7562 ;; Hardware stack levels required when called: 10
  7563 ;; This function calls:
  7564 ;;		_color_read_Blue
  7565 ;;		_color_read_Clear
  7566 ;;		_color_read_Green
  7567 ;;		_color_read_Red
  7568 ;; This function is called by:
  7569 ;;		_main
  7570 ;; This function uses a non-reentrant model
  7571 ;;
  7572                           
  7573                           	psect	text36
  7574   0025CE                     __ptext36:
  7575                           	callstack 0
  7576   0025CE                     _Update_RGBC:
  7577                           	callstack 20
  7578   0025CE                     
  7579                           ;color.c: 92:     tempval->R = color_read_Red();
  7580   0025CE  EC16  F013         	call	_color_read_Red	;wreg free
  7581   0025D2  C014  FFD9         	movff	Update_RGBC@tempval,fsr2l
  7582   0025D6  C015  FFDA         	movff	Update_RGBC@tempval+1,fsr2h
  7583   0025DA  C00D  FFDE         	movff	?_color_read_Red,postinc2
  7584   0025DE  C00E  FFDD         	movff	?_color_read_Red+1,postdec2
  7585                           
  7586                           ;color.c: 93:     tempval->G = color_read_Green();
  7587   0025E2  EC3E  F013         	call	_color_read_Green	;wreg free
  7588   0025E6  EE20 F002          	lfsr	2,2
  7589   0025EA  5014               	movf	Update_RGBC@tempval^0,w,c
  7590   0025EC  26D9               	addwf	fsr2l,f,c
  7591   0025EE  5015               	movf	(Update_RGBC@tempval+1)^0,w,c
  7592   0025F0  22DA               	addwfc	fsr2h,f,c
  7593   0025F2  C00D  FFDE         	movff	?_color_read_Green,postinc2
  7594   0025F6  C00E  FFDD         	movff	?_color_read_Green+1,postdec2
  7595                           
  7596                           ;color.c: 94:     tempval->B = color_read_Blue();
  7597   0025FA  EC8E  F013         	call	_color_read_Blue	;wreg free
  7598   0025FE  EE20 F004          	lfsr	2,4
  7599   002602  5014               	movf	Update_RGBC@tempval^0,w,c
  7600   002604  26D9               	addwf	fsr2l,f,c
  7601   002606  5015               	movf	(Update_RGBC@tempval+1)^0,w,c
  7602   002608  22DA               	addwfc	fsr2h,f,c
  7603   00260A  C00D  FFDE         	movff	?_color_read_Blue,postinc2
  7604   00260E  C00E  FFDD         	movff	?_color_read_Blue+1,postdec2
  7605                           
  7606                           ;color.c: 95:     tempval->C = color_read_Clear();
  7607   002612  EC66  F013         	call	_color_read_Clear	;wreg free
  7608   002616  EE20 F006          	lfsr	2,6
  7609   00261A  5014               	movf	Update_RGBC@tempval^0,w,c
  7610   00261C  26D9               	addwf	fsr2l,f,c
  7611   00261E  5015               	movf	(Update_RGBC@tempval+1)^0,w,c
  7612   002620  22DA               	addwfc	fsr2h,f,c
  7613   002622  C00D  FFDE         	movff	?_color_read_Clear,postinc2
  7614   002626  C00E  FFDD         	movff	?_color_read_Clear+1,postdec2
  7615   00262A  0012               	return		;funcret
  7616   00262C                     __end_of_Update_RGBC:
  7617                           	callstack 0
  7618                           
  7619 ;; *************** function _color_read_Red *****************
  7620 ;; Defined at:
  7621 ;;		line 32 in file "color.c"
  7622 ;; Parameters:    Size  Location     Type
  7623 ;;		None
  7624 ;; Auto vars:     Size  Location     Type
  7625 ;;  tmp             2   17[COMRAM] unsigned int 
  7626 ;; Return value:  Size  Location     Type
  7627 ;;                  2   12[COMRAM] unsigned int 
  7628 ;; Registers used:
  7629 ;;		wreg, status,2, status,0, cstack
  7630 ;; Tracked objects:
  7631 ;;		On entry : 0/0
  7632 ;;		On exit  : 0/0
  7633 ;;		Unchanged: 0/0
  7634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7635 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7636 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7637 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7638 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7639 ;;Total ram usage:        7 bytes
  7640 ;; Hardware stack levels used: 1
  7641 ;; Hardware stack levels required when called: 9
  7642 ;; This function calls:
  7643 ;;		_I2C_2_Master_Read
  7644 ;;		_I2C_2_Master_RepStart
  7645 ;;		_I2C_2_Master_Start
  7646 ;;		_I2C_2_Master_Stop
  7647 ;;		_I2C_2_Master_Write
  7648 ;; This function is called by:
  7649 ;;		_Update_RGBC
  7650 ;; This function uses a non-reentrant model
  7651 ;;
  7652                           
  7653                           	psect	text37
  7654   00262C                     __ptext37:
  7655                           	callstack 0
  7656   00262C                     _color_read_Red:
  7657                           	callstack 20
  7658   00262C                     
  7659                           ;color.c: 34:  unsigned int tmp;;color.c: 35:  I2C_2_Master_Start();
  7660   00262C  EC99  F015         	call	_I2C_2_Master_Start	;wreg free
  7661                           
  7662                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x00);
  7663   002630  0E52               	movlw	82
  7664   002632  EC83  F015         	call	_I2C_2_Master_Write
  7665                           
  7666                           ;color.c: 37:  I2C_2_Master_Write(0xA0 | 0x16);
  7667   002636  0EB6               	movlw	182
  7668   002638  EC83  F015         	call	_I2C_2_Master_Write
  7669                           
  7670                           ;color.c: 38:  I2C_2_Master_RepStart();
  7671   00263C  EC8F  F015         	call	_I2C_2_Master_RepStart	;wreg free
  7672                           
  7673                           ;color.c: 39:  I2C_2_Master_Write(0x52 | 0x01);
  7674   002640  0E53               	movlw	83
  7675   002642  EC83  F015         	call	_I2C_2_Master_Write
  7676                           
  7677                           ;color.c: 40:  tmp=I2C_2_Master_Read(1);
  7678   002646  0E01               	movlw	1
  7679   002648  EC29  F014         	call	_I2C_2_Master_Read
  7680   00264C  6E0F               	movwf	??_color_read_Red^0,c
  7681   00264E  500F               	movf	??_color_read_Red^0,w,c
  7682   002650  6E12               	movwf	color_read_Red@tmp^0,c
  7683   002652  6A13               	clrf	(color_read_Red@tmp+1)^0,c
  7684                           
  7685                           ;color.c: 41:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7686   002654  0E00               	movlw	0
  7687   002656  EC29  F014         	call	_I2C_2_Master_Read
  7688   00265A  6E0F               	movwf	??_color_read_Red^0,c
  7689   00265C  500F               	movf	??_color_read_Red^0,w,c
  7690   00265E  6E11               	movwf	(??_color_read_Red+2)^0,c
  7691   002660  6A10               	clrf	(??_color_read_Red+1)^0,c
  7692   002662  5012               	movf	color_read_Red@tmp^0,w,c
  7693   002664  1010               	iorwf	(??_color_read_Red+1)^0,w,c
  7694   002666  6E12               	movwf	color_read_Red@tmp^0,c
  7695   002668  5013               	movf	(color_read_Red@tmp+1)^0,w,c
  7696   00266A  1011               	iorwf	(??_color_read_Red+2)^0,w,c
  7697   00266C  6E13               	movwf	(color_read_Red@tmp+1)^0,c
  7698                           
  7699                           ;color.c: 42:  I2C_2_Master_Stop();
  7700   00266E  EC94  F015         	call	_I2C_2_Master_Stop	;wreg free
  7701   002672                     
  7702                           ;color.c: 43:  return tmp;
  7703   002672  C012  F00D         	movff	color_read_Red@tmp,?_color_read_Red
  7704   002676  C013  F00E         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  7705   00267A  0012               	return		;funcret
  7706   00267C                     __end_of_color_read_Red:
  7707                           	callstack 0
  7708                           
  7709 ;; *************** function _color_read_Green *****************
  7710 ;; Defined at:
  7711 ;;		line 46 in file "color.c"
  7712 ;; Parameters:    Size  Location     Type
  7713 ;;		None
  7714 ;; Auto vars:     Size  Location     Type
  7715 ;;  tmp             2   17[COMRAM] unsigned int 
  7716 ;; Return value:  Size  Location     Type
  7717 ;;                  2   12[COMRAM] unsigned int 
  7718 ;; Registers used:
  7719 ;;		wreg, status,2, status,0, cstack
  7720 ;; Tracked objects:
  7721 ;;		On entry : 0/0
  7722 ;;		On exit  : 0/0
  7723 ;;		Unchanged: 0/0
  7724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7725 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7726 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7727 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7728 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7729 ;;Total ram usage:        7 bytes
  7730 ;; Hardware stack levels used: 1
  7731 ;; Hardware stack levels required when called: 9
  7732 ;; This function calls:
  7733 ;;		_I2C_2_Master_Read
  7734 ;;		_I2C_2_Master_RepStart
  7735 ;;		_I2C_2_Master_Start
  7736 ;;		_I2C_2_Master_Stop
  7737 ;;		_I2C_2_Master_Write
  7738 ;; This function is called by:
  7739 ;;		_Update_RGBC
  7740 ;; This function uses a non-reentrant model
  7741 ;;
  7742                           
  7743                           	psect	text38
  7744   00267C                     __ptext38:
  7745                           	callstack 0
  7746   00267C                     _color_read_Green:
  7747                           	callstack 20
  7748   00267C                     
  7749                           ;color.c: 48:  unsigned int tmp;;color.c: 49:  I2C_2_Master_Start();
  7750   00267C  EC99  F015         	call	_I2C_2_Master_Start	;wreg free
  7751                           
  7752                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x00);
  7753   002680  0E52               	movlw	82
  7754   002682  EC83  F015         	call	_I2C_2_Master_Write
  7755                           
  7756                           ;color.c: 51:  I2C_2_Master_Write(0xA0 | 0x18);
  7757   002686  0EB8               	movlw	184
  7758   002688  EC83  F015         	call	_I2C_2_Master_Write
  7759                           
  7760                           ;color.c: 52:  I2C_2_Master_RepStart();
  7761   00268C  EC8F  F015         	call	_I2C_2_Master_RepStart	;wreg free
  7762                           
  7763                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x01);
  7764   002690  0E53               	movlw	83
  7765   002692  EC83  F015         	call	_I2C_2_Master_Write
  7766                           
  7767                           ;color.c: 54:  tmp=I2C_2_Master_Read(1);
  7768   002696  0E01               	movlw	1
  7769   002698  EC29  F014         	call	_I2C_2_Master_Read
  7770   00269C  6E0F               	movwf	??_color_read_Green^0,c
  7771   00269E  500F               	movf	??_color_read_Green^0,w,c
  7772   0026A0  6E12               	movwf	color_read_Green@tmp^0,c
  7773   0026A2  6A13               	clrf	(color_read_Green@tmp+1)^0,c
  7774                           
  7775                           ;color.c: 55:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7776   0026A4  0E00               	movlw	0
  7777   0026A6  EC29  F014         	call	_I2C_2_Master_Read
  7778   0026AA  6E0F               	movwf	??_color_read_Green^0,c
  7779   0026AC  500F               	movf	??_color_read_Green^0,w,c
  7780   0026AE  6E11               	movwf	(??_color_read_Green+2)^0,c
  7781   0026B0  6A10               	clrf	(??_color_read_Green+1)^0,c
  7782   0026B2  5012               	movf	color_read_Green@tmp^0,w,c
  7783   0026B4  1010               	iorwf	(??_color_read_Green+1)^0,w,c
  7784   0026B6  6E12               	movwf	color_read_Green@tmp^0,c
  7785   0026B8  5013               	movf	(color_read_Green@tmp+1)^0,w,c
  7786   0026BA  1011               	iorwf	(??_color_read_Green+2)^0,w,c
  7787   0026BC  6E13               	movwf	(color_read_Green@tmp+1)^0,c
  7788                           
  7789                           ;color.c: 56:  I2C_2_Master_Stop();
  7790   0026BE  EC94  F015         	call	_I2C_2_Master_Stop	;wreg free
  7791   0026C2                     
  7792                           ;color.c: 57:  return tmp;
  7793   0026C2  C012  F00D         	movff	color_read_Green@tmp,?_color_read_Green
  7794   0026C6  C013  F00E         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  7795   0026CA  0012               	return		;funcret
  7796   0026CC                     __end_of_color_read_Green:
  7797                           	callstack 0
  7798                           
  7799 ;; *************** function _color_read_Clear *****************
  7800 ;; Defined at:
  7801 ;;		line 74 in file "color.c"
  7802 ;; Parameters:    Size  Location     Type
  7803 ;;		None
  7804 ;; Auto vars:     Size  Location     Type
  7805 ;;  tmp             2   17[COMRAM] unsigned int 
  7806 ;; Return value:  Size  Location     Type
  7807 ;;                  2   12[COMRAM] unsigned int 
  7808 ;; Registers used:
  7809 ;;		wreg, status,2, status,0, cstack
  7810 ;; Tracked objects:
  7811 ;;		On entry : 0/0
  7812 ;;		On exit  : 0/0
  7813 ;;		Unchanged: 0/0
  7814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7815 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7816 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7817 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7818 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7819 ;;Total ram usage:        7 bytes
  7820 ;; Hardware stack levels used: 1
  7821 ;; Hardware stack levels required when called: 9
  7822 ;; This function calls:
  7823 ;;		_I2C_2_Master_Read
  7824 ;;		_I2C_2_Master_RepStart
  7825 ;;		_I2C_2_Master_Start
  7826 ;;		_I2C_2_Master_Stop
  7827 ;;		_I2C_2_Master_Write
  7828 ;; This function is called by:
  7829 ;;		_Update_RGBC
  7830 ;; This function uses a non-reentrant model
  7831 ;;
  7832                           
  7833                           	psect	text39
  7834   0026CC                     __ptext39:
  7835                           	callstack 0
  7836   0026CC                     _color_read_Clear:
  7837                           	callstack 20
  7838   0026CC                     
  7839                           ;color.c: 76:  unsigned int tmp;;color.c: 77:  I2C_2_Master_Start();
  7840   0026CC  EC99  F015         	call	_I2C_2_Master_Start	;wreg free
  7841                           
  7842                           ;color.c: 78:  I2C_2_Master_Write(0x52 | 0x00);
  7843   0026D0  0E52               	movlw	82
  7844   0026D2  EC83  F015         	call	_I2C_2_Master_Write
  7845                           
  7846                           ;color.c: 79:  I2C_2_Master_Write(0xA0 | 0x14);
  7847   0026D6  0EB4               	movlw	180
  7848   0026D8  EC83  F015         	call	_I2C_2_Master_Write
  7849                           
  7850                           ;color.c: 80:  I2C_2_Master_RepStart();
  7851   0026DC  EC8F  F015         	call	_I2C_2_Master_RepStart	;wreg free
  7852                           
  7853                           ;color.c: 81:  I2C_2_Master_Write(0x52 | 0x01);
  7854   0026E0  0E53               	movlw	83
  7855   0026E2  EC83  F015         	call	_I2C_2_Master_Write
  7856                           
  7857                           ;color.c: 82:  tmp=I2C_2_Master_Read(1);
  7858   0026E6  0E01               	movlw	1
  7859   0026E8  EC29  F014         	call	_I2C_2_Master_Read
  7860   0026EC  6E0F               	movwf	??_color_read_Clear^0,c
  7861   0026EE  500F               	movf	??_color_read_Clear^0,w,c
  7862   0026F0  6E12               	movwf	color_read_Clear@tmp^0,c
  7863   0026F2  6A13               	clrf	(color_read_Clear@tmp+1)^0,c
  7864                           
  7865                           ;color.c: 83:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7866   0026F4  0E00               	movlw	0
  7867   0026F6  EC29  F014         	call	_I2C_2_Master_Read
  7868   0026FA  6E0F               	movwf	??_color_read_Clear^0,c
  7869   0026FC  500F               	movf	??_color_read_Clear^0,w,c
  7870   0026FE  6E11               	movwf	(??_color_read_Clear+2)^0,c
  7871   002700  6A10               	clrf	(??_color_read_Clear+1)^0,c
  7872   002702  5012               	movf	color_read_Clear@tmp^0,w,c
  7873   002704  1010               	iorwf	(??_color_read_Clear+1)^0,w,c
  7874   002706  6E12               	movwf	color_read_Clear@tmp^0,c
  7875   002708  5013               	movf	(color_read_Clear@tmp+1)^0,w,c
  7876   00270A  1011               	iorwf	(??_color_read_Clear+2)^0,w,c
  7877   00270C  6E13               	movwf	(color_read_Clear@tmp+1)^0,c
  7878                           
  7879                           ;color.c: 84:  I2C_2_Master_Stop();
  7880   00270E  EC94  F015         	call	_I2C_2_Master_Stop	;wreg free
  7881   002712                     
  7882                           ;color.c: 85:  return tmp;
  7883   002712  C012  F00D         	movff	color_read_Clear@tmp,?_color_read_Clear
  7884   002716  C013  F00E         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  7885   00271A  0012               	return		;funcret
  7886   00271C                     __end_of_color_read_Clear:
  7887                           	callstack 0
  7888                           
  7889 ;; *************** function _color_read_Blue *****************
  7890 ;; Defined at:
  7891 ;;		line 60 in file "color.c"
  7892 ;; Parameters:    Size  Location     Type
  7893 ;;		None
  7894 ;; Auto vars:     Size  Location     Type
  7895 ;;  tmp             2   17[COMRAM] unsigned int 
  7896 ;; Return value:  Size  Location     Type
  7897 ;;                  2   12[COMRAM] unsigned int 
  7898 ;; Registers used:
  7899 ;;		wreg, status,2, status,0, cstack
  7900 ;; Tracked objects:
  7901 ;;		On entry : 0/0
  7902 ;;		On exit  : 0/0
  7903 ;;		Unchanged: 0/0
  7904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7905 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7906 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7907 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7908 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7909 ;;Total ram usage:        7 bytes
  7910 ;; Hardware stack levels used: 1
  7911 ;; Hardware stack levels required when called: 9
  7912 ;; This function calls:
  7913 ;;		_I2C_2_Master_Read
  7914 ;;		_I2C_2_Master_RepStart
  7915 ;;		_I2C_2_Master_Start
  7916 ;;		_I2C_2_Master_Stop
  7917 ;;		_I2C_2_Master_Write
  7918 ;; This function is called by:
  7919 ;;		_Update_RGBC
  7920 ;; This function uses a non-reentrant model
  7921 ;;
  7922                           
  7923                           	psect	text40
  7924   00271C                     __ptext40:
  7925                           	callstack 0
  7926   00271C                     _color_read_Blue:
  7927                           	callstack 20
  7928   00271C                     
  7929                           ;color.c: 62:  unsigned int tmp;;color.c: 63:  I2C_2_Master_Start();
  7930   00271C  EC99  F015         	call	_I2C_2_Master_Start	;wreg free
  7931                           
  7932                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x00);
  7933   002720  0E52               	movlw	82
  7934   002722  EC83  F015         	call	_I2C_2_Master_Write
  7935                           
  7936                           ;color.c: 65:  I2C_2_Master_Write(0xA0 | 0x1A);
  7937   002726  0EBA               	movlw	186
  7938   002728  EC83  F015         	call	_I2C_2_Master_Write
  7939                           
  7940                           ;color.c: 66:  I2C_2_Master_RepStart();
  7941   00272C  EC8F  F015         	call	_I2C_2_Master_RepStart	;wreg free
  7942                           
  7943                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x01);
  7944   002730  0E53               	movlw	83
  7945   002732  EC83  F015         	call	_I2C_2_Master_Write
  7946                           
  7947                           ;color.c: 68:  tmp=I2C_2_Master_Read(1);
  7948   002736  0E01               	movlw	1
  7949   002738  EC29  F014         	call	_I2C_2_Master_Read
  7950   00273C  6E0F               	movwf	??_color_read_Blue^0,c
  7951   00273E  500F               	movf	??_color_read_Blue^0,w,c
  7952   002740  6E12               	movwf	color_read_Blue@tmp^0,c
  7953   002742  6A13               	clrf	(color_read_Blue@tmp+1)^0,c
  7954                           
  7955                           ;color.c: 69:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7956   002744  0E00               	movlw	0
  7957   002746  EC29  F014         	call	_I2C_2_Master_Read
  7958   00274A  6E0F               	movwf	??_color_read_Blue^0,c
  7959   00274C  500F               	movf	??_color_read_Blue^0,w,c
  7960   00274E  6E11               	movwf	(??_color_read_Blue+2)^0,c
  7961   002750  6A10               	clrf	(??_color_read_Blue+1)^0,c
  7962   002752  5012               	movf	color_read_Blue@tmp^0,w,c
  7963   002754  1010               	iorwf	(??_color_read_Blue+1)^0,w,c
  7964   002756  6E12               	movwf	color_read_Blue@tmp^0,c
  7965   002758  5013               	movf	(color_read_Blue@tmp+1)^0,w,c
  7966   00275A  1011               	iorwf	(??_color_read_Blue+2)^0,w,c
  7967   00275C  6E13               	movwf	(color_read_Blue@tmp+1)^0,c
  7968                           
  7969                           ;color.c: 70:  I2C_2_Master_Stop();
  7970   00275E  EC94  F015         	call	_I2C_2_Master_Stop	;wreg free
  7971   002762                     
  7972                           ;color.c: 71:  return tmp;
  7973   002762  C012  F00D         	movff	color_read_Blue@tmp,?_color_read_Blue
  7974   002766  C013  F00E         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  7975   00276A  0012               	return		;funcret
  7976   00276C                     __end_of_color_read_Blue:
  7977                           	callstack 0
  7978                           
  7979 ;; *************** function _I2C_2_Master_RepStart *****************
  7980 ;; Defined at:
  7981 ;;		line 33 in file "i2c.c"
  7982 ;; Parameters:    Size  Location     Type
  7983 ;;		None
  7984 ;; Auto vars:     Size  Location     Type
  7985 ;;		None
  7986 ;; Return value:  Size  Location     Type
  7987 ;;                  1    wreg      void 
  7988 ;; Registers used:
  7989 ;;		wreg, status,2, status,0, cstack
  7990 ;; Tracked objects:
  7991 ;;		On entry : 0/0
  7992 ;;		On exit  : 0/0
  7993 ;;		Unchanged: 0/0
  7994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7999 ;;Total ram usage:        0 bytes
  8000 ;; Hardware stack levels used: 1
  8001 ;; Hardware stack levels required when called: 8
  8002 ;; This function calls:
  8003 ;;		_I2C_2_Master_Idle
  8004 ;; This function is called by:
  8005 ;;		_color_read_Red
  8006 ;;		_color_read_Green
  8007 ;;		_color_read_Blue
  8008 ;;		_color_read_Clear
  8009 ;; This function uses a non-reentrant model
  8010 ;;
  8011                           
  8012                           	psect	text41
  8013   002B1E                     __ptext41:
  8014                           	callstack 0
  8015   002B1E                     _I2C_2_Master_RepStart:
  8016                           	callstack 20
  8017   002B1E                     
  8018                           ;i2c.c: 35:   I2C_2_Master_Idle();
  8019   002B1E  ECAE  F014         	call	_I2C_2_Master_Idle	;wreg free
  8020   002B22                     
  8021                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  8022   002B22  010E               	movlb	14	; () banked
  8023   002B24  83DA               	bsf	218,1,b	;volatile
  8024   002B26                     
  8025                           ; BSR set to: 14
  8026   002B26  0012               	return		;funcret
  8027   002B28                     __end_of_I2C_2_Master_RepStart:
  8028                           	callstack 0
  8029                           
  8030 ;; *************** function _I2C_2_Master_Read *****************
  8031 ;; Defined at:
  8032 ;;		line 51 in file "i2c.c"
  8033 ;; Parameters:    Size  Location     Type
  8034 ;;  ack             1    wreg     unsigned char 
  8035 ;; Auto vars:     Size  Location     Type
  8036 ;;  ack             1   10[COMRAM] unsigned char 
  8037 ;;  tmp             1   11[COMRAM] unsigned char 
  8038 ;; Return value:  Size  Location     Type
  8039 ;;                  1    wreg      unsigned char 
  8040 ;; Registers used:
  8041 ;;		wreg, status,2, status,0, cstack
  8042 ;; Tracked objects:
  8043 ;;		On entry : 0/0
  8044 ;;		On exit  : 0/0
  8045 ;;		Unchanged: 0/0
  8046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8048 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8049 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8050 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8051 ;;Total ram usage:        3 bytes
  8052 ;; Hardware stack levels used: 1
  8053 ;; Hardware stack levels required when called: 8
  8054 ;; This function calls:
  8055 ;;		_I2C_2_Master_Idle
  8056 ;; This function is called by:
  8057 ;;		_color_read_Red
  8058 ;;		_color_read_Green
  8059 ;;		_color_read_Blue
  8060 ;;		_color_read_Clear
  8061 ;; This function uses a non-reentrant model
  8062 ;;
  8063                           
  8064                           	psect	text42
  8065   002852                     __ptext42:
  8066                           	callstack 0
  8067   002852                     _I2C_2_Master_Read:
  8068                           	callstack 20
  8069                           
  8070                           ; BSR set to: 14
  8071                           ;incstack = 0
  8072                           ;I2C_2_Master_Read@ack stored from wreg
  8073   002852  6E0B               	movwf	I2C_2_Master_Read@ack^0,c
  8074   002854                     
  8075                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  8076   002854  ECAE  F014         	call	_I2C_2_Master_Idle	;wreg free
  8077   002858                     
  8078                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  8079   002858  010E               	movlb	14	; () banked
  8080   00285A  87DA               	bsf	218,3,b	;volatile
  8081                           
  8082                           ;i2c.c: 56:   I2C_2_Master_Idle();
  8083   00285C  ECAE  F014         	call	_I2C_2_Master_Idle	;wreg free
  8084   002860                     
  8085                           ;i2c.c: 57:   tmp = SSP2BUF;
  8086   002860  CED5 F00C          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  8087                           
  8088                           ;i2c.c: 58:   I2C_2_Master_Idle();
  8089   002864  ECAE  F014         	call	_I2C_2_Master_Idle	;wreg free
  8090   002868                     
  8091                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  8092   002868  500B               	movf	I2C_2_Master_Read@ack^0,w,c
  8093   00286A  B4D8               	btfsc	status,2,c
  8094   00286C  EF3A  F014         	goto	u2401
  8095   002870  EF3E  F014         	goto	u2400
  8096   002874                     u2401:
  8097   002874  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  8098   002876  2A0A               	incf	??_I2C_2_Master_Read^0,f,c
  8099   002878  EF3F  F014         	goto	u2418
  8100   00287C                     u2400:
  8101   00287C  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  8102   00287E                     u2418:
  8103   00287E  3A0A               	swapf	??_I2C_2_Master_Read^0,f,c
  8104   002880  460A               	rlncf	??_I2C_2_Master_Read^0,f,c
  8105   002882  010E               	movlb	14	; () banked
  8106   002884  51DA               	movf	218,w,b	;volatile
  8107   002886  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  8108   002888  0BDF               	andlw	-33
  8109   00288A  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  8110   00288C  6FDA               	movwf	218,b	;volatile
  8111   00288E                     
  8112                           ; BSR set to: 14
  8113                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  8114   00288E  89DA               	bsf	218,4,b	;volatile
  8115   002890                     
  8116                           ; BSR set to: 14
  8117                           ;i2c.c: 61:   return tmp;
  8118   002890  500C               	movf	I2C_2_Master_Read@tmp^0,w,c
  8119   002892                     
  8120                           ; BSR set to: 14
  8121   002892  0012               	return		;funcret
  8122   002894                     __end_of_I2C_2_Master_Read:
  8123                           	callstack 0
  8124                           
  8125 ;; *************** function _Timer0_init *****************
  8126 ;; Defined at:
  8127 ;;		line 7 in file "timers.c"
  8128 ;; Parameters:    Size  Location     Type
  8129 ;;		None
  8130 ;; Auto vars:     Size  Location     Type
  8131 ;;		None
  8132 ;; Return value:  Size  Location     Type
  8133 ;;                  1    wreg      void 
  8134 ;; Registers used:
  8135 ;;		wreg, status,2
  8136 ;; Tracked objects:
  8137 ;;		On entry : 0/0
  8138 ;;		On exit  : 0/0
  8139 ;;		Unchanged: 0/0
  8140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8145 ;;Total ram usage:        0 bytes
  8146 ;; Hardware stack levels used: 1
  8147 ;; Hardware stack levels required when called: 7
  8148 ;; This function calls:
  8149 ;;		Nothing
  8150 ;; This function is called by:
  8151 ;;		_main
  8152 ;; This function uses a non-reentrant model
  8153 ;;
  8154                           
  8155                           	psect	text43
  8156   002A3A                     __ptext43:
  8157                           	callstack 0
  8158   002A3A                     _Timer0_init:
  8159                           	callstack 23
  8160   002A3A                     
  8161                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  8162   002A3A  50D6               	movf	214,w,c	;volatile
  8163   002A3C  0B1F               	andlw	-225
  8164   002A3E  0940               	iorlw	64
  8165   002A40  6ED6               	movwf	214,c	;volatile
  8166   002A42                     
  8167                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  8168   002A42  88D6               	bsf	214,4,c	;volatile
  8169                           
  8170                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
  8171   002A44  50D6               	movf	214,w,c	;volatile
  8172   002A46  0BF0               	andlw	-16
  8173   002A48  0908               	iorlw	8
  8174   002A4A  6ED6               	movwf	214,c	;volatile
  8175   002A4C                     
  8176                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
  8177   002A4C  88D5               	bsf	213,4,c	;volatile
  8178                           
  8179                           ;timers.c: 15:     TMR0H = 0b00001011;
  8180   002A4E  0E0B               	movlw	11
  8181   002A50  6ED4               	movwf	212,c	;volatile
  8182                           
  8183                           ;timers.c: 16:     TMR0L = 0b11011011;
  8184   002A52  0EDB               	movlw	219
  8185   002A54  6ED3               	movwf	211,c	;volatile
  8186   002A56                     
  8187                           ;timers.c: 17:     T0CON0bits.T0EN=1;
  8188   002A56  8ED5               	bsf	213,7,c	;volatile
  8189   002A58  0012               	return		;funcret
  8190   002A5A                     __end_of_Timer0_init:
  8191                           	callstack 0
  8192                           
  8193 ;; *************** function _LED_init *****************
  8194 ;; Defined at:
  8195 ;;		line 7 in file "LED_Buttons.c"
  8196 ;; Parameters:    Size  Location     Type
  8197 ;;		None
  8198 ;; Auto vars:     Size  Location     Type
  8199 ;;		None
  8200 ;; Return value:  Size  Location     Type
  8201 ;;                  1    wreg      void 
  8202 ;; Registers used:
  8203 ;;		None
  8204 ;; Tracked objects:
  8205 ;;		On entry : 0/0
  8206 ;;		On exit  : 0/0
  8207 ;;		Unchanged: 0/0
  8208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8213 ;;Total ram usage:        0 bytes
  8214 ;; Hardware stack levels used: 1
  8215 ;; Hardware stack levels required when called: 7
  8216 ;; This function calls:
  8217 ;;		Nothing
  8218 ;; This function is called by:
  8219 ;;		_main
  8220 ;; This function uses a non-reentrant model
  8221 ;;
  8222                           
  8223                           	psect	text44
  8224   002AB8                     __ptext44:
  8225                           	callstack 0
  8226   002AB8                     _LED_init:
  8227                           	callstack 23
  8228   002AB8                     
  8229                           ;LED_Buttons.c: 8:     TRISGbits.TRISG1 = 0;
  8230   002AB8  9287               	bcf	135,1,c	;volatile
  8231                           
  8232                           ;LED_Buttons.c: 9:     TRISAbits.TRISA4 = 0;
  8233   002ABA  9881               	bcf	129,4,c	;volatile
  8234                           
  8235                           ;LED_Buttons.c: 10:     TRISFbits.TRISF7 = 0;
  8236   002ABC  9E86               	bcf	134,7,c	;volatile
  8237                           
  8238                           ;LED_Buttons.c: 12:     LATHbits.LATH3 = 0;
  8239   002ABE  9680               	bcf	128,3,c	;volatile
  8240                           
  8241                           ;LED_Buttons.c: 13:     TRISHbits.TRISH3 = 0;
  8242   002AC0  9688               	bcf	136,3,c	;volatile
  8243                           
  8244                           ;LED_Buttons.c: 15:     LATDbits.LATD7 = 0;
  8245   002AC2  9E7C               	bcf	124,7,c	;volatile
  8246                           
  8247                           ;LED_Buttons.c: 16:     TRISDbits.TRISD7 = 0;
  8248   002AC4  9E84               	bcf	132,7,c	;volatile
  8249                           
  8250                           ;LED_Buttons.c: 19:     TRISFbits.TRISF2=1;
  8251   002AC6  8486               	bsf	134,2,c	;volatile
  8252                           
  8253                           ;LED_Buttons.c: 20:     TRISFbits.TRISF3=1;
  8254   002AC8  8686               	bsf	134,3,c	;volatile
  8255                           
  8256                           ;LED_Buttons.c: 21:     ANSELFbits.ANSELF2=0;
  8257   002ACA  010E               	movlb	14	; () banked
  8258   002ACC  95B4               	bcf	180,2,b	;volatile
  8259                           
  8260                           ;LED_Buttons.c: 22:     ANSELFbits.ANSELF3=0;
  8261   002ACE  97B4               	bcf	180,3,b	;volatile
  8262   002AD0                     
  8263                           ; BSR set to: 14
  8264   002AD0  0012               	return		;funcret
  8265   002AD2                     __end_of_LED_init:
  8266                           	callstack 0
  8267                           
  8268 ;; *************** function _Interrupts_init *****************
  8269 ;; Defined at:
  8270 ;;		line 12 in file "interrupts.c"
  8271 ;; Parameters:    Size  Location     Type
  8272 ;;		None
  8273 ;; Auto vars:     Size  Location     Type
  8274 ;;		None
  8275 ;; Return value:  Size  Location     Type
  8276 ;;                  1    wreg      void 
  8277 ;; Registers used:
  8278 ;;		wreg, status,2, status,0, cstack
  8279 ;; Tracked objects:
  8280 ;;		On entry : 0/0
  8281 ;;		On exit  : 0/0
  8282 ;;		Unchanged: 0/0
  8283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8288 ;;Total ram usage:        0 bytes
  8289 ;; Hardware stack levels used: 1
  8290 ;; Hardware stack levels required when called: 12
  8291 ;; This function calls:
  8292 ;;		_interrupts_clear_colorclick
  8293 ;; This function is called by:
  8294 ;;		_main
  8295 ;; This function uses a non-reentrant model
  8296 ;;
  8297                           
  8298                           	psect	text45
  8299   002A9A                     __ptext45:
  8300                           	callstack 0
  8301   002A9A                     _Interrupts_init:
  8302                           	callstack 18
  8303   002A9A                     
  8304                           ;interrupts.c: 18:     TRISBbits.TRISB1 = 1;
  8305   002A9A  8282               	bsf	130,1,c	;volatile
  8306                           
  8307                           ;interrupts.c: 19:     ANSELBbits.ANSELB1 = 0;
  8308   002A9C  010E               	movlb	14	; () banked
  8309   002A9E  939A               	bcf	154,1,b	;volatile
  8310                           
  8311                           ;interrupts.c: 21:     PIE0bits.INT1IE = 1;
  8312   002AA0  8329               	bsf	41,1,b	;volatile
  8313                           
  8314                           ;interrupts.c: 22:     IPR0bits.INT1IP = 1;
  8315   002AA2  831F               	bsf	31,1,b	;volatile
  8316                           
  8317                           ;interrupts.c: 23:     INTCONbits.INT1EDG = 0;
  8318   002AA4  92F2               	bcf	242,1,c	;volatile
  8319                           
  8320                           ;interrupts.c: 26:     PIE0bits.TMR0IE=1;
  8321   002AA6  8B29               	bsf	41,5,b	;volatile
  8322                           
  8323                           ;interrupts.c: 27:     IPR0bits.TMR0IP = 0;
  8324   002AA8  9B1F               	bcf	31,5,b	;volatile
  8325                           
  8326                           ;interrupts.c: 30:     PIE4bits.RC4IE=1;
  8327   002AAA  872D               	bsf	45,3,b	;volatile
  8328   002AAC                     
  8329                           ; BSR set to: 14
  8330                           ;interrupts.c: 32:     interrupts_clear_colorclick();
  8331   002AAC  EC69  F015         	call	_interrupts_clear_colorclick	;wreg free
  8332   002AB0                     
  8333                           ;interrupts.c: 34:     INTCONbits.IPEN = 1;
  8334   002AB0  8AF2               	bsf	242,5,c	;volatile
  8335   002AB2                     
  8336                           ;interrupts.c: 35:     INTCONbits.PEIE = 1;
  8337   002AB2  8CF2               	bsf	242,6,c	;volatile
  8338   002AB4                     
  8339                           ;interrupts.c: 36:     INTCONbits.GIE=1;
  8340   002AB4  8EF2               	bsf	242,7,c	;volatile
  8341   002AB6  0012               	return		;funcret
  8342   002AB8                     __end_of_Interrupts_init:
  8343                           	callstack 0
  8344                           
  8345 ;; *************** function _interrupts_clear_colorclick *****************
  8346 ;; Defined at:
  8347 ;;		line 57 in file "interrupts.c"
  8348 ;; Parameters:    Size  Location     Type
  8349 ;;		None
  8350 ;; Auto vars:     Size  Location     Type
  8351 ;;		None
  8352 ;; Return value:  Size  Location     Type
  8353 ;;                  1    wreg      void 
  8354 ;; Registers used:
  8355 ;;		wreg, status,2, status,0, cstack
  8356 ;; Tracked objects:
  8357 ;;		On entry : 0/0
  8358 ;;		On exit  : 0/0
  8359 ;;		Unchanged: 0/0
  8360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8365 ;;Total ram usage:        0 bytes
  8366 ;; Hardware stack levels used: 1
  8367 ;; Hardware stack levels required when called: 11
  8368 ;; This function calls:
  8369 ;;		_I2C_2_Master_Start
  8370 ;;		_I2C_2_Master_Stop
  8371 ;;		_I2C_2_Master_Write
  8372 ;;		_init_colorclick_interrupts
  8373 ;; This function is called by:
  8374 ;;		_Interrupts_init
  8375 ;; This function uses a non-reentrant model
  8376 ;;
  8377                           
  8378                           	psect	text46
  8379   002AD2                     __ptext46:
  8380                           	callstack 0
  8381   002AD2                     _interrupts_clear_colorclick:
  8382                           	callstack 18
  8383   002AD2                     
  8384                           ;interrupts.c: 59:     I2C_2_Master_Start();
  8385   002AD2  EC99  F015         	call	_I2C_2_Master_Start	;wreg free
  8386                           
  8387                           ;interrupts.c: 60:     I2C_2_Master_Write(0x52 | 0x00);
  8388   002AD6  0E52               	movlw	82
  8389   002AD8  EC83  F015         	call	_I2C_2_Master_Write
  8390                           
  8391                           ;interrupts.c: 61:     I2C_2_Master_Write(0b11100110);
  8392   002ADC  0EE6               	movlw	230
  8393   002ADE  EC83  F015         	call	_I2C_2_Master_Write
  8394                           
  8395                           ;interrupts.c: 62:     I2C_2_Master_Stop();
  8396   002AE2  EC94  F015         	call	_I2C_2_Master_Stop	;wreg free
  8397                           
  8398                           ;interrupts.c: 64:     init_colorclick_interrupts();
  8399   002AE6  ECB6  F013         	call	_init_colorclick_interrupts	;wreg free
  8400   002AEA  0012               	return		;funcret
  8401   002AEC                     __end_of_interrupts_clear_colorclick:
  8402                           	callstack 0
  8403                           
  8404 ;; *************** function _init_colorclick_interrupts *****************
  8405 ;; Defined at:
  8406 ;;		line 43 in file "interrupts.c"
  8407 ;; Parameters:    Size  Location     Type
  8408 ;;		None
  8409 ;; Auto vars:     Size  Location     Type
  8410 ;;		None
  8411 ;; Return value:  Size  Location     Type
  8412 ;;                  1    wreg      void 
  8413 ;; Registers used:
  8414 ;;		wreg, status,2, status,0, cstack
  8415 ;; Tracked objects:
  8416 ;;		On entry : 0/0
  8417 ;;		On exit  : 0/0
  8418 ;;		Unchanged: 0/0
  8419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8422 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8423 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8424 ;;Total ram usage:        1 bytes
  8425 ;; Hardware stack levels used: 1
  8426 ;; Hardware stack levels required when called: 10
  8427 ;; This function calls:
  8428 ;;		_color_writetoaddr
  8429 ;; This function is called by:
  8430 ;;		_interrupts_clear_colorclick
  8431 ;; This function uses a non-reentrant model
  8432 ;;
  8433                           
  8434                           	psect	text47
  8435   00276C                     __ptext47:
  8436                           	callstack 0
  8437   00276C                     _init_colorclick_interrupts:
  8438                           	callstack 18
  8439   00276C                     
  8440                           ;interrupts.c: 45:     color_writetoaddr(0x00,0b10011);
  8441   00276C  0E13               	movlw	19
  8442   00276E  6E0B               	movwf	color_writetoaddr@value^0,c
  8443   002770  0E00               	movlw	0
  8444   002772  EC2D  F015         	call	_color_writetoaddr
  8445   002776                     
  8446                           ;interrupts.c: 46:     _delay((unsigned long)((3)*(64000000/4000.0)));
  8447   002776  0E3F               	movlw	63
  8448   002778  6E0D               	movwf	??_init_colorclick_interrupts^0,c
  8449   00277A  0E55               	movlw	85
  8450   00277C                     u4867:
  8451   00277C  2EE8               	decfsz	wreg,f,c
  8452   00277E  D7FE               	bra	u4867
  8453   002780  2E0D               	decfsz	??_init_colorclick_interrupts^0,f,c
  8454   002782  D7FC               	bra	u4867
  8455   002784  F000               	nop	
  8456   002786                     
  8457                           ;interrupts.c: 48:     color_writetoaddr(0x0C,0b0100);
  8458   002786  0E04               	movlw	4
  8459   002788  6E0B               	movwf	color_writetoaddr@value^0,c
  8460   00278A  0E0C               	movlw	12
  8461   00278C  EC2D  F015         	call	_color_writetoaddr
  8462   002790                     
  8463                           ;interrupts.c: 49:     color_writetoaddr(0x04,(int_threshold_low & 0xFF));
  8464   002790  C04F  F00B         	movff	_int_threshold_low,color_writetoaddr@value
  8465   002794  0E04               	movlw	4
  8466   002796  EC2D  F015         	call	_color_writetoaddr
  8467   00279A                     
  8468                           ;interrupts.c: 50:     color_writetoaddr(0x05,(int_threshold_low >> 8));
  8469   00279A  5050               	movf	(_int_threshold_low+1)^0,w,c
  8470   00279C  6E0B               	movwf	color_writetoaddr@value^0,c
  8471   00279E  0E05               	movlw	5
  8472   0027A0  EC2D  F015         	call	_color_writetoaddr
  8473   0027A4                     
  8474                           ;interrupts.c: 51:     color_writetoaddr(0x06,(int_threshold_high & 0xFF));
  8475   0027A4  C0D5  F00B         	movff	_int_threshold_high,color_writetoaddr@value
  8476   0027A8  0E06               	movlw	6
  8477   0027AA  EC2D  F015         	call	_color_writetoaddr
  8478   0027AE                     
  8479                           ;interrupts.c: 52:     color_writetoaddr(0x07,(int_threshold_high >> 8));
  8480   0027AE  0100               	movlb	0	; () banked
  8481   0027B0  51D6               	movf	(_int_threshold_high+1)& (0+255),w,b
  8482   0027B2  6E0B               	movwf	color_writetoaddr@value^0,c
  8483   0027B4  0E07               	movlw	7
  8484   0027B6  EC2D  F015         	call	_color_writetoaddr
  8485   0027BA  0012               	return		;funcret
  8486   0027BC                     __end_of_init_colorclick_interrupts:
  8487                           	callstack 0
  8488                           
  8489 ;; *************** function _color_writetoaddr *****************
  8490 ;; Defined at:
  8491 ;;		line 22 in file "color.c"
  8492 ;; Parameters:    Size  Location     Type
  8493 ;;  address         1    wreg     unsigned char 
  8494 ;;  value           1   10[COMRAM] unsigned char 
  8495 ;; Auto vars:     Size  Location     Type
  8496 ;;  address         1   11[COMRAM] unsigned char 
  8497 ;; Return value:  Size  Location     Type
  8498 ;;                  1    wreg      void 
  8499 ;; Registers used:
  8500 ;;		wreg, status,2, status,0, cstack
  8501 ;; Tracked objects:
  8502 ;;		On entry : 0/0
  8503 ;;		On exit  : 0/0
  8504 ;;		Unchanged: 0/0
  8505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8506 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8507 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8509 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8510 ;;Total ram usage:        2 bytes
  8511 ;; Hardware stack levels used: 1
  8512 ;; Hardware stack levels required when called: 9
  8513 ;; This function calls:
  8514 ;;		_I2C_2_Master_Start
  8515 ;;		_I2C_2_Master_Stop
  8516 ;;		_I2C_2_Master_Write
  8517 ;; This function is called by:
  8518 ;;		_color_click_init
  8519 ;;		_init_colorclick_interrupts
  8520 ;; This function uses a non-reentrant model
  8521 ;;
  8522                           
  8523                           	psect	text48
  8524   002A5A                     __ptext48:
  8525                           	callstack 0
  8526   002A5A                     _color_writetoaddr:
  8527                           	callstack 20
  8528                           
  8529                           ;incstack = 0
  8530                           ;color_writetoaddr@address stored from wreg
  8531   002A5A  6E0C               	movwf	color_writetoaddr@address^0,c
  8532   002A5C                     
  8533                           ;color.c: 23:     I2C_2_Master_Start();
  8534   002A5C  EC99  F015         	call	_I2C_2_Master_Start	;wreg free
  8535                           
  8536                           ;color.c: 24:     I2C_2_Master_Write(0x52 | 0x00);
  8537   002A60  0E52               	movlw	82
  8538   002A62  EC83  F015         	call	_I2C_2_Master_Write
  8539                           
  8540                           ;color.c: 25:     I2C_2_Master_Write(0x80 | address);
  8541   002A66  500C               	movf	color_writetoaddr@address^0,w,c
  8542   002A68  0980               	iorlw	128
  8543   002A6A  EC83  F015         	call	_I2C_2_Master_Write
  8544                           
  8545                           ;color.c: 26:     I2C_2_Master_Write(value);
  8546   002A6E  500B               	movf	color_writetoaddr@value^0,w,c
  8547   002A70  EC83  F015         	call	_I2C_2_Master_Write
  8548                           
  8549                           ;color.c: 27:     I2C_2_Master_Stop();
  8550   002A74  EC94  F015         	call	_I2C_2_Master_Stop	;wreg free
  8551   002A78  0012               	return		;funcret
  8552   002A7A                     __end_of_color_writetoaddr:
  8553                           	callstack 0
  8554                           
  8555 ;; *************** function _I2C_2_Master_Write *****************
  8556 ;; Defined at:
  8557 ;;		line 45 in file "i2c.c"
  8558 ;; Parameters:    Size  Location     Type
  8559 ;;  data_byte       1    wreg     unsigned char 
  8560 ;; Auto vars:     Size  Location     Type
  8561 ;;  data_byte       1    9[COMRAM] unsigned char 
  8562 ;; Return value:  Size  Location     Type
  8563 ;;                  1    wreg      void 
  8564 ;; Registers used:
  8565 ;;		wreg, status,2, status,0, cstack
  8566 ;; Tracked objects:
  8567 ;;		On entry : 0/0
  8568 ;;		On exit  : 0/0
  8569 ;;		Unchanged: 0/0
  8570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8572 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8574 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8575 ;;Total ram usage:        1 bytes
  8576 ;; Hardware stack levels used: 1
  8577 ;; Hardware stack levels required when called: 8
  8578 ;; This function calls:
  8579 ;;		_I2C_2_Master_Idle
  8580 ;; This function is called by:
  8581 ;;		_color_writetoaddr
  8582 ;;		_color_read_Red
  8583 ;;		_color_read_Green
  8584 ;;		_color_read_Blue
  8585 ;;		_color_read_Clear
  8586 ;;		_interrupts_clear_colorclick
  8587 ;; This function uses a non-reentrant model
  8588 ;;
  8589                           
  8590                           	psect	text49
  8591   002B06                     __ptext49:
  8592                           	callstack 0
  8593   002B06                     _I2C_2_Master_Write:
  8594                           	callstack 20
  8595                           
  8596                           ;incstack = 0
  8597                           ;I2C_2_Master_Write@data_byte stored from wreg
  8598   002B06  6E0A               	movwf	I2C_2_Master_Write@data_byte^0,c
  8599   002B08                     
  8600                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  8601   002B08  ECAE  F014         	call	_I2C_2_Master_Idle	;wreg free
  8602   002B0C                     
  8603                           ;i2c.c: 48:   SSP2BUF = data_byte;
  8604   002B0C  C00A  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  8605   002B10  0012               	return		;funcret
  8606   002B12                     __end_of_I2C_2_Master_Write:
  8607                           	callstack 0
  8608                           
  8609 ;; *************** function _I2C_2_Master_Stop *****************
  8610 ;; Defined at:
  8611 ;;		line 39 in file "i2c.c"
  8612 ;; Parameters:    Size  Location     Type
  8613 ;;		None
  8614 ;; Auto vars:     Size  Location     Type
  8615 ;;		None
  8616 ;; Return value:  Size  Location     Type
  8617 ;;                  1    wreg      void 
  8618 ;; Registers used:
  8619 ;;		wreg, status,2, status,0, cstack
  8620 ;; Tracked objects:
  8621 ;;		On entry : 0/0
  8622 ;;		On exit  : 0/0
  8623 ;;		Unchanged: 0/0
  8624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8629 ;;Total ram usage:        0 bytes
  8630 ;; Hardware stack levels used: 1
  8631 ;; Hardware stack levels required when called: 8
  8632 ;; This function calls:
  8633 ;;		_I2C_2_Master_Idle
  8634 ;; This function is called by:
  8635 ;;		_color_writetoaddr
  8636 ;;		_color_read_Red
  8637 ;;		_color_read_Green
  8638 ;;		_color_read_Blue
  8639 ;;		_color_read_Clear
  8640 ;;		_interrupts_clear_colorclick
  8641 ;; This function uses a non-reentrant model
  8642 ;;
  8643                           
  8644                           	psect	text50
  8645   002B28                     __ptext50:
  8646                           	callstack 0
  8647   002B28                     _I2C_2_Master_Stop:
  8648                           	callstack 20
  8649   002B28                     
  8650                           ;i2c.c: 41:   I2C_2_Master_Idle();
  8651   002B28  ECAE  F014         	call	_I2C_2_Master_Idle	;wreg free
  8652   002B2C                     
  8653                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  8654   002B2C  010E               	movlb	14	; () banked
  8655   002B2E  85DA               	bsf	218,2,b	;volatile
  8656   002B30                     
  8657                           ; BSR set to: 14
  8658   002B30  0012               	return		;funcret
  8659   002B32                     __end_of_I2C_2_Master_Stop:
  8660                           	callstack 0
  8661                           
  8662 ;; *************** function _I2C_2_Master_Start *****************
  8663 ;; Defined at:
  8664 ;;		line 27 in file "i2c.c"
  8665 ;; Parameters:    Size  Location     Type
  8666 ;;		None
  8667 ;; Auto vars:     Size  Location     Type
  8668 ;;		None
  8669 ;; Return value:  Size  Location     Type
  8670 ;;                  1    wreg      void 
  8671 ;; Registers used:
  8672 ;;		wreg, status,2, status,0, cstack
  8673 ;; Tracked objects:
  8674 ;;		On entry : 0/0
  8675 ;;		On exit  : 0/0
  8676 ;;		Unchanged: 0/0
  8677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8682 ;;Total ram usage:        0 bytes
  8683 ;; Hardware stack levels used: 1
  8684 ;; Hardware stack levels required when called: 8
  8685 ;; This function calls:
  8686 ;;		_I2C_2_Master_Idle
  8687 ;; This function is called by:
  8688 ;;		_color_writetoaddr
  8689 ;;		_color_read_Red
  8690 ;;		_color_read_Green
  8691 ;;		_color_read_Blue
  8692 ;;		_color_read_Clear
  8693 ;;		_interrupts_clear_colorclick
  8694 ;; This function uses a non-reentrant model
  8695 ;;
  8696                           
  8697                           	psect	text51
  8698   002B32                     __ptext51:
  8699                           	callstack 0
  8700   002B32                     _I2C_2_Master_Start:
  8701                           	callstack 20
  8702   002B32                     
  8703                           ;i2c.c: 29:   I2C_2_Master_Idle();
  8704   002B32  ECAE  F014         	call	_I2C_2_Master_Idle	;wreg free
  8705   002B36                     
  8706                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  8707   002B36  010E               	movlb	14	; () banked
  8708   002B38  81DA               	bsf	218,0,b	;volatile
  8709   002B3A                     
  8710                           ; BSR set to: 14
  8711   002B3A  0012               	return		;funcret
  8712   002B3C                     __end_of_I2C_2_Master_Start:
  8713                           	callstack 0
  8714                           
  8715 ;; *************** function _I2C_2_Master_Idle *****************
  8716 ;; Defined at:
  8717 ;;		line 22 in file "i2c.c"
  8718 ;; Parameters:    Size  Location     Type
  8719 ;;		None
  8720 ;; Auto vars:     Size  Location     Type
  8721 ;;		None
  8722 ;; Return value:  Size  Location     Type
  8723 ;;                  1    wreg      void 
  8724 ;; Registers used:
  8725 ;;		wreg, status,2, status,0
  8726 ;; Tracked objects:
  8727 ;;		On entry : 0/0
  8728 ;;		On exit  : 0/0
  8729 ;;		Unchanged: 0/0
  8730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8733 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8734 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8735 ;;Total ram usage:        1 bytes
  8736 ;; Hardware stack levels used: 1
  8737 ;; Hardware stack levels required when called: 7
  8738 ;; This function calls:
  8739 ;;		Nothing
  8740 ;; This function is called by:
  8741 ;;		_I2C_2_Master_Start
  8742 ;;		_I2C_2_Master_RepStart
  8743 ;;		_I2C_2_Master_Stop
  8744 ;;		_I2C_2_Master_Write
  8745 ;;		_I2C_2_Master_Read
  8746 ;; This function uses a non-reentrant model
  8747 ;;
  8748                           
  8749                           	psect	text52
  8750   00295C                     __ptext52:
  8751                           	callstack 0
  8752   00295C                     _I2C_2_Master_Idle:
  8753                           	callstack 20
  8754   00295C                     l89:
  8755   00295C  010E               	movlb	14	; () banked
  8756   00295E  B5D8               	btfsc	216,2,b	;volatile
  8757   002960  EFB4  F014         	goto	u2081
  8758   002964  EFB6  F014         	goto	u2080
  8759   002968                     u2081:
  8760   002968  EFAE  F014         	goto	l89
  8761   00296C                     u2080:
  8762   00296C                     
  8763                           ; BSR set to: 14
  8764   00296C  CEDA F009          	movff	3802,??_I2C_2_Master_Idle	;volatile
  8765   002970  0E1F               	movlw	31
  8766   002972  1609               	andwf	??_I2C_2_Master_Idle^0,f,c
  8767   002974  A4D8               	btfss	status,2,c
  8768   002976  EFBF  F014         	goto	u2091
  8769   00297A  EFC1  F014         	goto	u2090
  8770   00297E                     u2091:
  8771   00297E  EFAE  F014         	goto	l89
  8772   002982                     u2090:
  8773   002982                     
  8774                           ; BSR set to: 14
  8775   002982  0012               	return		;funcret
  8776   002984                     __end_of_I2C_2_Master_Idle:
  8777                           	callstack 0
  8778                           
  8779 ;; *************** function _AppendTime *****************
  8780 ;; Defined at:
  8781 ;;		line 23 in file "Memorization.c"
  8782 ;; Parameters:    Size  Location     Type
  8783 ;;  temp            2    8[COMRAM] unsigned int 
  8784 ;;  time_index      2   10[COMRAM] PTR unsigned char 
  8785 ;;		 -> time_index(1), 
  8786 ;;  time_array      2   12[COMRAM] PTR unsigned int 
  8787 ;;		 -> time_array(80), 
  8788 ;; Auto vars:     Size  Location     Type
  8789 ;;		None
  8790 ;; Return value:  Size  Location     Type
  8791 ;;                  1    wreg      void 
  8792 ;; Registers used:
  8793 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8794 ;; Tracked objects:
  8795 ;;		On entry : 0/0
  8796 ;;		On exit  : 0/0
  8797 ;;		Unchanged: 0/0
  8798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8799 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8801 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8802 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8803 ;;Total ram usage:        9 bytes
  8804 ;; Hardware stack levels used: 1
  8805 ;; Hardware stack levels required when called: 7
  8806 ;; This function calls:
  8807 ;;		Nothing
  8808 ;; This function is called by:
  8809 ;;		_main
  8810 ;; This function uses a non-reentrant model
  8811 ;;
  8812                           
  8813                           	psect	text53
  8814   002900                     __ptext53:
  8815                           	callstack 0
  8816   002900                     _AppendTime:
  8817                           	callstack 23
  8818   002900                     
  8819                           ;Memorization.c: 25:     time_array[(*time_index)++] = temp;
  8820   002900  C00B  FFD9         	movff	AppendTime@time_index,fsr2l
  8821   002904  C00C  FFDA         	movff	AppendTime@time_index+1,fsr2h
  8822   002908  CFDF F00F          	movff	indf2,??_AppendTime
  8823   00290C  0E01               	movlw	1
  8824   00290E  26DF               	addwf	indf2,f,c
  8825   002910  500F               	movf	??_AppendTime^0,w,c
  8826   002912  0D02               	mullw	2
  8827   002914  CFF3 F010          	movff	prodl,??_AppendTime+1
  8828   002918  CFF4 F011          	movff	prodh,??_AppendTime+2
  8829   00291C  5010               	movf	(??_AppendTime+1)^0,w,c
  8830   00291E  240D               	addwf	AppendTime@time_array^0,w,c
  8831   002920  6ED9               	movwf	fsr2l,c
  8832   002922  5011               	movf	(??_AppendTime+2)^0,w,c
  8833   002924  200E               	addwfc	(AppendTime@time_array+1)^0,w,c
  8834   002926  6EDA               	movwf	fsr2h,c
  8835   002928  C009  FFDE         	movff	AppendTime@temp,postinc2
  8836   00292C  C00A  FFDD         	movff	AppendTime@temp+1,postdec2
  8837   002930  0012               	return		;funcret
  8838   002932                     __end_of_AppendTime:
  8839                           	callstack 0
  8840                           
  8841 ;; *************** function _LowISR *****************
  8842 ;; Defined at:
  8843 ;;		line 75 in file "interrupts.c"
  8844 ;; Parameters:    Size  Location     Type
  8845 ;;		None
  8846 ;; Auto vars:     Size  Location     Type
  8847 ;;		None
  8848 ;; Return value:  Size  Location     Type
  8849 ;;                  1    wreg      void 
  8850 ;; Registers used:
  8851 ;;		wreg, status,2
  8852 ;; Tracked objects:
  8853 ;;		On entry : 0/0
  8854 ;;		On exit  : 0/0
  8855 ;;		Unchanged: 0/0
  8856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8859 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8860 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8861 ;;Total ram usage:        3 bytes
  8862 ;; Hardware stack levels used: 1
  8863 ;; Hardware stack levels required when called: 6
  8864 ;; This function calls:
  8865 ;;		Nothing
  8866 ;; This function is called by:
  8867 ;;		Interrupt level 1
  8868 ;; This function uses a non-reentrant model
  8869 ;;
  8870                           
  8871                           	psect	intcodelo
  8872   000018                     __pintcodelo:
  8873                           	callstack 0
  8874   000018                     _LowISR:
  8875                           	callstack 16
  8876                           
  8877                           ;incstack = 0
  8878   000018  8057               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  8879   00001A  CFD8 F006          	movff	status,??_LowISR
  8880   00001E  CFE8 F007          	movff	wreg,??_LowISR+1
  8881   000022  CFE0 F008          	movff	bsr,??_LowISR+2
  8882   000026                     
  8883                           ;interrupts.c: 78:     if(PIR0bits.TMR0IF){
  8884   000026  010E               	movlb	14	; () banked
  8885   000028  AB33               	btfss	51,5,b	;volatile
  8886   00002A  EF19  F000         	goto	i1u382_21
  8887   00002E  EF1B  F000         	goto	i1u382_20
  8888   000032                     i1u382_21:
  8889   000032  EF24  F000         	goto	i1l334
  8890   000036                     i1u382_20:
  8891   000036                     
  8892                           ; BSR set to: 14
  8893                           ;interrupts.c: 79:         TMR0H = 0b00001011;
  8894   000036  0E0B               	movlw	11
  8895   000038  6ED4               	movwf	212,c	;volatile
  8896                           
  8897                           ;interrupts.c: 80:         TMR0L = 0b11011011;
  8898   00003A  0EDB               	movlw	219
  8899   00003C  6ED3               	movwf	211,c	;volatile
  8900                           
  8901                           ;interrupts.c: 81:         tmr_ovf = 1;
  8902   00003E  0E01               	movlw	1
  8903   000040  0100               	movlb	0	; () banked
  8904   000042  6F75               	movwf	_tmr_ovf& (0+255),b
  8905   000044                     
  8906                           ; BSR set to: 0
  8907                           ;interrupts.c: 82:         PIR0bits.TMR0IF=0;
  8908   000044  010E               	movlb	14	; () banked
  8909   000046  9B33               	bcf	51,5,b	;volatile
  8910   000048                     i1l334:
  8911                           
  8912                           ; BSR set to: 14
  8913   000048  C008  FFE0         	movff	??_LowISR+2,bsr
  8914   00004C  C007  FFE8         	movff	??_LowISR+1,wreg
  8915   000050  C006  FFD8         	movff	??_LowISR,status
  8916   000054  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  8917   000056  0010               	retfie	
  8918   000058                     __end_of_LowISR:
  8919                           	callstack 0
  8920                           
  8921 ;; *************** function _HighISR *****************
  8922 ;; Defined at:
  8923 ;;		line 89 in file "interrupts.c"
  8924 ;; Parameters:    Size  Location     Type
  8925 ;;		None
  8926 ;; Auto vars:     Size  Location     Type
  8927 ;;		None
  8928 ;; Return value:  Size  Location     Type
  8929 ;;                  1    wreg      void 
  8930 ;; Registers used:
  8931 ;;		wreg, status,2, status,0, cstack
  8932 ;; Tracked objects:
  8933 ;;		On entry : 0/0
  8934 ;;		On exit  : 0/0
  8935 ;;		Unchanged: 0/0
  8936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8941 ;;Total ram usage:        0 bytes
  8942 ;; Hardware stack levels used: 1
  8943 ;; Hardware stack levels required when called: 5
  8944 ;; This function calls:
  8945 ;;		i2_interrupts_clear_colorclick
  8946 ;; This function is called by:
  8947 ;;		Interrupt level 2
  8948 ;; This function uses a non-reentrant model
  8949 ;;
  8950                           
  8951                           	psect	intcode
  8952   000008                     __pintcode:
  8953                           	callstack 0
  8954   000008                     _HighISR:
  8955                           	callstack 16
  8956                           
  8957                           ; BSR set to: 14
  8958                           ;incstack = 0
  8959   000008  8257               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8960   00000A  EF0C  F015         	goto	int_func
  8961                           
  8962                           	psect	intcode_body
  8963   002A18                     __pintcode_body:
  8964                           	callstack 16
  8965   002A18                     int_func:
  8966                           	callstack 16
  8967   002A18                     
  8968                           ;interrupts.c: 116:     if(PIR0bits.INT1IF){
  8969   002A18  010E               	movlb	14	; () banked
  8970   002A1A  A333               	btfss	51,1,b	;volatile
  8971   002A1C  EF12  F015         	goto	i2u383_41
  8972   002A20  EF14  F015         	goto	i2u383_40
  8973   002A24                     i2u383_41:
  8974   002A24  EF1B  F015         	goto	i2l342
  8975   002A28                     i2u383_40:
  8976   002A28                     
  8977                           ; BSR set to: 14
  8978                           ;interrupts.c: 117:         color_flag = 1;
  8979   002A28  0E01               	movlw	1
  8980   002A2A  0100               	movlb	0	; () banked
  8981   002A2C  6F76               	movwf	_color_flag& (0+255),b
  8982   002A2E                     
  8983                           ; BSR set to: 0
  8984                           ;interrupts.c: 119:         interrupts_clear_colorclick();
  8985   002A2E  EC76  F015         	call	i2_interrupts_clear_colorclick	;wreg free
  8986   002A32                     
  8987                           ;interrupts.c: 120:         PIR0bits.INT1IF = 0;
  8988   002A32  010E               	movlb	14	; () banked
  8989   002A34  9333               	bcf	51,1,b	;volatile
  8990   002A36                     i2l342:
  8991                           
  8992                           ; BSR set to: 14
  8993   002A36  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8994   002A38  0011               	retfie		f
  8995   002A3A                     __end_of_HighISR:
  8996                           	callstack 0
  8997                           
  8998 ;; *************** function i2_interrupts_clear_colorclick *****************
  8999 ;; Defined at:
  9000 ;;		line 57 in file "interrupts.c"
  9001 ;; Parameters:    Size  Location     Type
  9002 ;;		None
  9003 ;; Auto vars:     Size  Location     Type
  9004 ;;		None
  9005 ;; Return value:  Size  Location     Type
  9006 ;;                  1    wreg      void 
  9007 ;; Registers used:
  9008 ;;		wreg, status,2, status,0, cstack
  9009 ;; Tracked objects:
  9010 ;;		On entry : 0/0
  9011 ;;		On exit  : 0/0
  9012 ;;		Unchanged: 0/0
  9013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9018 ;;Total ram usage:        0 bytes
  9019 ;; Hardware stack levels used: 1
  9020 ;; Hardware stack levels required when called: 4
  9021 ;; This function calls:
  9022 ;;		i2_I2C_2_Master_Start
  9023 ;;		i2_I2C_2_Master_Stop
  9024 ;;		i2_I2C_2_Master_Write
  9025 ;;		i2_init_colorclick_interrupts
  9026 ;; This function is called by:
  9027 ;;		_HighISR
  9028 ;; This function uses a non-reentrant model
  9029 ;;
  9030                           
  9031                           	psect	text56
  9032   002AEC                     __ptext56:
  9033                           	callstack 0
  9034   002AEC                     i2_interrupts_clear_colorclick:
  9035                           	callstack 16
  9036   002AEC                     
  9037                           ;interrupts.c: 59:     I2C_2_Master_Start();
  9038   002AEC  ECA3  F015         	call	i2_I2C_2_Master_Start	;wreg free
  9039                           
  9040                           ;interrupts.c: 60:     I2C_2_Master_Write(0x52 | 0x00);
  9041   002AF0  0E52               	movlw	82
  9042   002AF2  EC89  F015         	call	i2_I2C_2_Master_Write
  9043                           
  9044                           ;interrupts.c: 61:     I2C_2_Master_Write(0b11100110);
  9045   002AF6  0EE6               	movlw	230
  9046   002AF8  EC89  F015         	call	i2_I2C_2_Master_Write
  9047                           
  9048                           ;interrupts.c: 62:     I2C_2_Master_Stop();
  9049   002AFC  EC9E  F015         	call	i2_I2C_2_Master_Stop	;wreg free
  9050                           
  9051                           ;interrupts.c: 64:     init_colorclick_interrupts();
  9052   002B00  ECDE  F013         	call	i2_init_colorclick_interrupts	;wreg free
  9053   002B04  0012               	return		;funcret
  9054   002B06                     __end_ofi2_interrupts_clear_colorclick:
  9055                           	callstack 0
  9056                           
  9057 ;; *************** function i2_init_colorclick_interrupts *****************
  9058 ;; Defined at:
  9059 ;;		line 43 in file "interrupts.c"
  9060 ;; Parameters:    Size  Location     Type
  9061 ;;		None
  9062 ;; Auto vars:     Size  Location     Type
  9063 ;;		None
  9064 ;; Return value:  Size  Location     Type
  9065 ;;                  1    wreg      void 
  9066 ;; Registers used:
  9067 ;;		wreg, status,2, status,0, cstack
  9068 ;; Tracked objects:
  9069 ;;		On entry : 0/0
  9070 ;;		On exit  : 0/0
  9071 ;;		Unchanged: 0/0
  9072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9075 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9076 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9077 ;;Total ram usage:        1 bytes
  9078 ;; Hardware stack levels used: 1
  9079 ;; Hardware stack levels required when called: 3
  9080 ;; This function calls:
  9081 ;;		i2_color_writetoaddr
  9082 ;; This function is called by:
  9083 ;;		i2_interrupts_clear_colorclick
  9084 ;; This function uses a non-reentrant model
  9085 ;;
  9086                           
  9087                           	psect	text57
  9088   0027BC                     __ptext57:
  9089                           	callstack 0
  9090   0027BC                     i2_init_colorclick_interrupts:
  9091                           	callstack 16
  9092   0027BC                     
  9093                           ;interrupts.c: 45:     color_writetoaddr(0x00,0b10011);
  9094   0027BC  0E13               	movlw	19
  9095   0027BE  6E03               	movwf	i2color_writetoaddr@value^0,c
  9096   0027C0  0E00               	movlw	0
  9097   0027C2  EC3D  F015         	call	i2_color_writetoaddr
  9098   0027C6                     
  9099                           ;interrupts.c: 46:     _delay((unsigned long)((3)*(64000000/4000.0)));
  9100   0027C6  0E3F               	movlw	63
  9101   0027C8  6E05               	movwf	??i2_init_colorclick_interrupts^0,c
  9102   0027CA  0E55               	movlw	85
  9103   0027CC                     i2u487_47:
  9104   0027CC  2EE8               	decfsz	wreg,f,c
  9105   0027CE  D7FE               	bra	i2u487_47
  9106   0027D0  2E05               	decfsz	??i2_init_colorclick_interrupts^0,f,c
  9107   0027D2  D7FC               	bra	i2u487_47
  9108   0027D4  F000               	nop	
  9109   0027D6                     
  9110                           ;interrupts.c: 48:     color_writetoaddr(0x0C,0b0100);
  9111   0027D6  0E04               	movlw	4
  9112   0027D8  6E03               	movwf	i2color_writetoaddr@value^0,c
  9113   0027DA  0E0C               	movlw	12
  9114   0027DC  EC3D  F015         	call	i2_color_writetoaddr
  9115   0027E0                     
  9116                           ;interrupts.c: 49:     color_writetoaddr(0x04,(int_threshold_low & 0xFF));
  9117   0027E0  C04F  F003         	movff	_int_threshold_low,i2color_writetoaddr@value
  9118   0027E4  0E04               	movlw	4
  9119   0027E6  EC3D  F015         	call	i2_color_writetoaddr
  9120   0027EA                     
  9121                           ;interrupts.c: 50:     color_writetoaddr(0x05,(int_threshold_low >> 8));
  9122   0027EA  5050               	movf	(_int_threshold_low+1)^0,w,c
  9123   0027EC  6E03               	movwf	i2color_writetoaddr@value^0,c
  9124   0027EE  0E05               	movlw	5
  9125   0027F0  EC3D  F015         	call	i2_color_writetoaddr
  9126   0027F4                     
  9127                           ;interrupts.c: 51:     color_writetoaddr(0x06,(int_threshold_high & 0xFF));
  9128   0027F4  C0D5  F003         	movff	_int_threshold_high,i2color_writetoaddr@value
  9129   0027F8  0E06               	movlw	6
  9130   0027FA  EC3D  F015         	call	i2_color_writetoaddr
  9131   0027FE                     
  9132                           ;interrupts.c: 52:     color_writetoaddr(0x07,(int_threshold_high >> 8));
  9133   0027FE  0100               	movlb	0	; () banked
  9134   002800  51D6               	movf	(_int_threshold_high+1)& (0+255),w,b
  9135   002802  6E03               	movwf	i2color_writetoaddr@value^0,c
  9136   002804  0E07               	movlw	7
  9137   002806  EC3D  F015         	call	i2_color_writetoaddr
  9138   00280A  0012               	return		;funcret
  9139   00280C                     __end_ofi2_init_colorclick_interrupts:
  9140                           	callstack 0
  9141                           
  9142 ;; *************** function i2_color_writetoaddr *****************
  9143 ;; Defined at:
  9144 ;;		line 22 in file "color.c"
  9145 ;; Parameters:    Size  Location     Type
  9146 ;;  address         1    wreg     unsigned char 
  9147 ;;  value           1    2[COMRAM] unsigned char 
  9148 ;; Auto vars:     Size  Location     Type
  9149 ;;  address         1    3[COMRAM] unsigned char 
  9150 ;; Return value:  Size  Location     Type
  9151 ;;                  1    wreg      void 
  9152 ;; Registers used:
  9153 ;;		wreg, status,2, status,0, cstack
  9154 ;; Tracked objects:
  9155 ;;		On entry : 0/0
  9156 ;;		On exit  : 0/0
  9157 ;;		Unchanged: 0/0
  9158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9159 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9160 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9162 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9163 ;;Total ram usage:        2 bytes
  9164 ;; Hardware stack levels used: 1
  9165 ;; Hardware stack levels required when called: 2
  9166 ;; This function calls:
  9167 ;;		i2_I2C_2_Master_Start
  9168 ;;		i2_I2C_2_Master_Stop
  9169 ;;		i2_I2C_2_Master_Write
  9170 ;; This function is called by:
  9171 ;;		i2_init_colorclick_interrupts
  9172 ;; This function uses a non-reentrant model
  9173 ;;
  9174                           
  9175                           	psect	text58
  9176   002A7A                     __ptext58:
  9177                           	callstack 0
  9178   002A7A                     i2_color_writetoaddr:
  9179                           	callstack 16
  9180                           
  9181                           ;incstack = 0
  9182                           ;i2color_writetoaddr@address stored from wreg
  9183   002A7A  6E04               	movwf	i2color_writetoaddr@address^0,c
  9184   002A7C                     
  9185                           ;color.c: 23:     I2C_2_Master_Start();
  9186   002A7C  ECA3  F015         	call	i2_I2C_2_Master_Start	;wreg free
  9187                           
  9188                           ;color.c: 24:     I2C_2_Master_Write(0x52 | 0x00);
  9189   002A80  0E52               	movlw	82
  9190   002A82  EC89  F015         	call	i2_I2C_2_Master_Write
  9191                           
  9192                           ;color.c: 25:     I2C_2_Master_Write(0x80 | address);
  9193   002A86  5004               	movf	i2color_writetoaddr@address^0,w,c
  9194   002A88  0980               	iorlw	128
  9195   002A8A  EC89  F015         	call	i2_I2C_2_Master_Write
  9196                           
  9197                           ;color.c: 26:     I2C_2_Master_Write(value);
  9198   002A8E  5003               	movf	i2color_writetoaddr@value^0,w,c
  9199   002A90  EC89  F015         	call	i2_I2C_2_Master_Write
  9200                           
  9201                           ;color.c: 27:     I2C_2_Master_Stop();
  9202   002A94  EC9E  F015         	call	i2_I2C_2_Master_Stop	;wreg free
  9203   002A98  0012               	return		;funcret
  9204   002A9A                     __end_ofi2_color_writetoaddr:
  9205                           	callstack 0
  9206                           
  9207 ;; *************** function i2_I2C_2_Master_Write *****************
  9208 ;; Defined at:
  9209 ;;		line 45 in file "i2c.c"
  9210 ;; Parameters:    Size  Location     Type
  9211 ;;  data_byte       1    wreg     unsigned char 
  9212 ;; Auto vars:     Size  Location     Type
  9213 ;;  data_byte       1    1[COMRAM] unsigned char 
  9214 ;; Return value:  Size  Location     Type
  9215 ;;                  1    wreg      void 
  9216 ;; Registers used:
  9217 ;;		wreg, status,2, status,0, cstack
  9218 ;; Tracked objects:
  9219 ;;		On entry : 0/0
  9220 ;;		On exit  : 0/0
  9221 ;;		Unchanged: 0/0
  9222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9224 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9226 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9227 ;;Total ram usage:        1 bytes
  9228 ;; Hardware stack levels used: 1
  9229 ;; Hardware stack levels required when called: 1
  9230 ;; This function calls:
  9231 ;;		i2_I2C_2_Master_Idle
  9232 ;; This function is called by:
  9233 ;;		i2_color_writetoaddr
  9234 ;;		i2_interrupts_clear_colorclick
  9235 ;; This function uses a non-reentrant model
  9236 ;;
  9237                           
  9238                           	psect	text59
  9239   002B12                     __ptext59:
  9240                           	callstack 0
  9241   002B12                     i2_I2C_2_Master_Write:
  9242                           	callstack 16
  9243                           
  9244                           ;incstack = 0
  9245                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  9246   002B12  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  9247   002B14                     
  9248                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  9249   002B14  ECC2  F014         	call	i2_I2C_2_Master_Idle	;wreg free
  9250   002B18                     
  9251                           ;i2c.c: 48:   SSP2BUF = data_byte;
  9252   002B18  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  9253   002B1C  0012               	return		;funcret
  9254   002B1E                     __end_ofi2_I2C_2_Master_Write:
  9255                           	callstack 0
  9256                           
  9257 ;; *************** function i2_I2C_2_Master_Stop *****************
  9258 ;; Defined at:
  9259 ;;		line 39 in file "i2c.c"
  9260 ;; Parameters:    Size  Location     Type
  9261 ;;		None
  9262 ;; Auto vars:     Size  Location     Type
  9263 ;;		None
  9264 ;; Return value:  Size  Location     Type
  9265 ;;                  1    wreg      void 
  9266 ;; Registers used:
  9267 ;;		wreg, status,2, status,0, cstack
  9268 ;; Tracked objects:
  9269 ;;		On entry : 0/0
  9270 ;;		On exit  : 0/0
  9271 ;;		Unchanged: 0/0
  9272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9277 ;;Total ram usage:        0 bytes
  9278 ;; Hardware stack levels used: 1
  9279 ;; Hardware stack levels required when called: 1
  9280 ;; This function calls:
  9281 ;;		i2_I2C_2_Master_Idle
  9282 ;; This function is called by:
  9283 ;;		i2_color_writetoaddr
  9284 ;;		i2_interrupts_clear_colorclick
  9285 ;; This function uses a non-reentrant model
  9286 ;;
  9287                           
  9288                           	psect	text60
  9289   002B3C                     __ptext60:
  9290                           	callstack 0
  9291   002B3C                     i2_I2C_2_Master_Stop:
  9292                           	callstack 16
  9293   002B3C                     
  9294                           ;i2c.c: 41:   I2C_2_Master_Idle();
  9295   002B3C  ECC2  F014         	call	i2_I2C_2_Master_Idle	;wreg free
  9296   002B40                     
  9297                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  9298   002B40  010E               	movlb	14	; () banked
  9299   002B42  85DA               	bsf	218,2,b	;volatile
  9300   002B44                     
  9301                           ; BSR set to: 14
  9302   002B44  0012               	return		;funcret
  9303   002B46                     __end_ofi2_I2C_2_Master_Stop:
  9304                           	callstack 0
  9305                           
  9306 ;; *************** function i2_I2C_2_Master_Start *****************
  9307 ;; Defined at:
  9308 ;;		line 27 in file "i2c.c"
  9309 ;; Parameters:    Size  Location     Type
  9310 ;;		None
  9311 ;; Auto vars:     Size  Location     Type
  9312 ;;		None
  9313 ;; Return value:  Size  Location     Type
  9314 ;;                  1    wreg      void 
  9315 ;; Registers used:
  9316 ;;		wreg, status,2, status,0, cstack
  9317 ;; Tracked objects:
  9318 ;;		On entry : 0/0
  9319 ;;		On exit  : 0/0
  9320 ;;		Unchanged: 0/0
  9321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9326 ;;Total ram usage:        0 bytes
  9327 ;; Hardware stack levels used: 1
  9328 ;; Hardware stack levels required when called: 1
  9329 ;; This function calls:
  9330 ;;		i2_I2C_2_Master_Idle
  9331 ;; This function is called by:
  9332 ;;		i2_color_writetoaddr
  9333 ;;		i2_interrupts_clear_colorclick
  9334 ;; This function uses a non-reentrant model
  9335 ;;
  9336                           
  9337                           	psect	text61
  9338   002B46                     __ptext61:
  9339                           	callstack 0
  9340   002B46                     i2_I2C_2_Master_Start:
  9341                           	callstack 16
  9342   002B46                     
  9343                           ;i2c.c: 29:   I2C_2_Master_Idle();
  9344   002B46  ECC2  F014         	call	i2_I2C_2_Master_Idle	;wreg free
  9345   002B4A                     
  9346                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  9347   002B4A  010E               	movlb	14	; () banked
  9348   002B4C  81DA               	bsf	218,0,b	;volatile
  9349   002B4E                     
  9350                           ; BSR set to: 14
  9351   002B4E  0012               	return		;funcret
  9352   002B50                     __end_ofi2_I2C_2_Master_Start:
  9353                           	callstack 0
  9354                           
  9355 ;; *************** function i2_I2C_2_Master_Idle *****************
  9356 ;; Defined at:
  9357 ;;		line 22 in file "i2c.c"
  9358 ;; Parameters:    Size  Location     Type
  9359 ;;		None
  9360 ;; Auto vars:     Size  Location     Type
  9361 ;;		None
  9362 ;; Return value:  Size  Location     Type
  9363 ;;                  1    wreg      void 
  9364 ;; Registers used:
  9365 ;;		wreg, status,2, status,0
  9366 ;; Tracked objects:
  9367 ;;		On entry : 0/0
  9368 ;;		On exit  : 0/0
  9369 ;;		Unchanged: 0/0
  9370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9373 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9374 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9375 ;;Total ram usage:        1 bytes
  9376 ;; Hardware stack levels used: 1
  9377 ;; This function calls:
  9378 ;;		Nothing
  9379 ;; This function is called by:
  9380 ;;		i2_I2C_2_Master_Start
  9381 ;;		i2_I2C_2_Master_Stop
  9382 ;;		i2_I2C_2_Master_Write
  9383 ;; This function uses a non-reentrant model
  9384 ;;
  9385                           
  9386                           	psect	text62
  9387   002984                     __ptext62:
  9388                           	callstack 0
  9389   002984                     i2_I2C_2_Master_Idle:
  9390                           	callstack 16
  9391   002984                     i2l89:
  9392   002984  010E               	movlb	14	; () banked
  9393   002986  B5D8               	btfsc	216,2,b	;volatile
  9394   002988  EFC8  F014         	goto	i2u226_41
  9395   00298C  EFCA  F014         	goto	i2u226_40
  9396   002990                     i2u226_41:
  9397   002990  EFC2  F014         	goto	i2l89
  9398   002994                     i2u226_40:
  9399   002994                     
  9400                           ; BSR set to: 14
  9401   002994  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  9402   002998  0E1F               	movlw	31
  9403   00299A  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  9404   00299C  A4D8               	btfss	status,2,c
  9405   00299E  EFD3  F014         	goto	i2u227_41
  9406   0029A2  EFD5  F014         	goto	i2u227_40
  9407   0029A6                     i2u227_41:
  9408   0029A6  EFC2  F014         	goto	i2l89
  9409   0029AA                     i2u227_40:
  9410   0029AA                     
  9411                           ; BSR set to: 14
  9412   0029AA  0012               	return		;funcret
  9413   0029AC                     __end_ofi2_I2C_2_Master_Idle:
  9414                           	callstack 0
  9415   000000                     
  9416                           	psect	rparam
  9417   000000                     
  9418                           	psect	temp
  9419   000057                     btemp:
  9420                           	callstack 0
  9421   000057                     	ds	1
  9422   000000                     int$flags	set	btemp
  9423   000000                     wtemp8	set	btemp+1
  9424   000000                     ttemp5	set	btemp+1
  9425   000000                     ttemp6	set	btemp+4
  9426   000000                     ttemp7	set	btemp+8
  9427                           
  9428                           	psect	idloc
  9429                           
  9430                           ;Config register IDLOC0 @ 0x200000
  9431                           ;	unspecified, using default values
  9432   200000                     	org	2097152
  9433   200000  0FFF               	dw	4095
  9434                           
  9435                           ;Config register IDLOC1 @ 0x200002
  9436                           ;	unspecified, using default values
  9437   200002                     	org	2097154
  9438   200002  0FFF               	dw	4095
  9439                           
  9440                           ;Config register IDLOC2 @ 0x200004
  9441                           ;	unspecified, using default values
  9442   200004                     	org	2097156
  9443   200004  0FFF               	dw	4095
  9444                           
  9445                           ;Config register IDLOC3 @ 0x200006
  9446                           ;	unspecified, using default values
  9447   200006                     	org	2097158
  9448   200006  0FFF               	dw	4095
  9449                           
  9450                           ;Config register IDLOC4 @ 0x200008
  9451                           ;	unspecified, using default values
  9452   200008                     	org	2097160
  9453   200008  0FFF               	dw	4095
  9454                           
  9455                           ;Config register IDLOC5 @ 0x20000A
  9456                           ;	unspecified, using default values
  9457   20000A                     	org	2097162
  9458   20000A  0FFF               	dw	4095
  9459                           
  9460                           ;Config register IDLOC6 @ 0x20000C
  9461                           ;	unspecified, using default values
  9462   20000C                     	org	2097164
  9463   20000C  0FFF               	dw	4095
  9464                           
  9465                           ;Config register IDLOC7 @ 0x20000E
  9466                           ;	unspecified, using default values
  9467   20000E                     	org	2097166
  9468   20000E  0FFF               	dw	4095
  9469                           
  9470                           	psect	config
  9471                           
  9472                           ;Config register CONFIG1L @ 0x300000
  9473                           ;	External Oscillator mode Selection bits
  9474                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  9475                           ;	Power-up default value for COSC bits
  9476                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  9477   300000                     	org	3145728
  9478   300000  AA                 	db	170
  9479                           
  9480                           ;Config register CONFIG1H @ 0x300001
  9481                           ;	unspecified, using default values
  9482                           ;	Clock Out Enable bit
  9483                           ;	CLKOUTEN = 0x1, unprogrammed default
  9484                           ;	Clock Switch Enable bit
  9485                           ;	CSWEN = 0x1, unprogrammed default
  9486                           ;	Fail-Safe Clock Monitor Enable bit
  9487                           ;	FCMEN = 0x1, unprogrammed default
  9488   300001                     	org	3145729
  9489   300001  FF                 	db	255
  9490                           
  9491                           ;Config register CONFIG2L @ 0x300002
  9492                           ;	unspecified, using default values
  9493                           ;	Master Clear Enable bit
  9494                           ;	MCLRE = 0x1, unprogrammed default
  9495                           ;	Power-up Timer Enable bit
  9496                           ;	PWRTE = 0x1, unprogrammed default
  9497                           ;	Low-power BOR enable bit
  9498                           ;	LPBOREN = 0x1, unprogrammed default
  9499                           ;	Brown-out Reset Enable bits
  9500                           ;	BOREN = 0x3, unprogrammed default
  9501   300002                     	org	3145730
  9502   300002  FF                 	db	255
  9503                           
  9504                           ;Config register CONFIG2H @ 0x300003
  9505                           ;	unspecified, using default values
  9506                           ;	Brown Out Reset Voltage selection bits
  9507                           ;	BORV = 0x3, unprogrammed default
  9508                           ;	ZCD Disable bit
  9509                           ;	ZCD = 0x1, unprogrammed default
  9510                           ;	PPSLOCK bit One-Way Set Enable bit
  9511                           ;	PPS1WAY = 0x1, unprogrammed default
  9512                           ;	Stack Full/Underflow Reset Enable bit
  9513                           ;	STVREN = 0x1, unprogrammed default
  9514                           ;	Debugger Enable bit
  9515                           ;	DEBUG = 0x1, unprogrammed default
  9516                           ;	Extended Instruction Set Enable bit
  9517                           ;	XINST = 0x1, unprogrammed default
  9518   300003                     	org	3145731
  9519   300003  FF                 	db	255
  9520                           
  9521                           ;Config register CONFIG3L @ 0x300004
  9522                           ;	WDT Period Select bits
  9523                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  9524                           ;	WDT operating mode
  9525                           ;	WDTE = OFF, WDT Disabled
  9526   300004                     	org	3145732
  9527   300004  9F                 	db	159
  9528                           
  9529                           ;Config register CONFIG3H @ 0x300005
  9530                           ;	unspecified, using default values
  9531                           ;	WDT Window Select bits
  9532                           ;	WDTCWS = 0x7, unprogrammed default
  9533                           ;	WDT input clock selector
  9534                           ;	WDTCCS = 0x7, unprogrammed default
  9535   300005                     	org	3145733
  9536   300005  FF                 	db	255
  9537                           
  9538                           ;Config register CONFIG4L @ 0x300006
  9539                           ;	unspecified, using default values
  9540                           ;	Write Protection Block 0
  9541                           ;	WRT0 = 0x1, unprogrammed default
  9542                           ;	Write Protection Block 1
  9543                           ;	WRT1 = 0x1, unprogrammed default
  9544                           ;	Write Protection Block 2
  9545                           ;	WRT2 = 0x1, unprogrammed default
  9546                           ;	Write Protection Block 3
  9547                           ;	WRT3 = 0x1, unprogrammed default
  9548                           ;	Write Protection Block 3
  9549                           ;	WRT4 = 0x1, unprogrammed default
  9550                           ;	Write Protection Block 3
  9551                           ;	WRT5 = 0x1, unprogrammed default
  9552                           ;	Write Protection Block 3
  9553                           ;	WRT6 = 0x1, unprogrammed default
  9554                           ;	Write Protection Block 3
  9555                           ;	WRT7 = 0x1, unprogrammed default
  9556   300006                     	org	3145734
  9557   300006  FF                 	db	255
  9558                           
  9559                           ;Config register CONFIG4H @ 0x300007
  9560                           ;	unspecified, using default values
  9561                           ;	Configuration Register Write Protection bit
  9562                           ;	WRTC = 0x1, unprogrammed default
  9563                           ;	Boot Block Write Protection bit
  9564                           ;	WRTB = 0x1, unprogrammed default
  9565                           ;	Data EEPROM Write Protection bit
  9566                           ;	WRTD = 0x1, unprogrammed default
  9567                           ;	Scanner Enable bit
  9568                           ;	SCANE = 0x1, unprogrammed default
  9569                           ;	Low Voltage Programming Enable bit
  9570                           ;	LVP = 0x1, unprogrammed default
  9571   300007                     	org	3145735
  9572   300007  FF                 	db	255
  9573                           
  9574                           ;Config register CONFIG5L @ 0x300008
  9575                           ;	unspecified, using default values
  9576                           ;	UserNVM Program Memory Code Protection bit
  9577                           ;	CP = 0x1, unprogrammed default
  9578                           ;	DataNVM Memory Code Protection bit
  9579                           ;	CPD = 0x1, unprogrammed default
  9580   300008                     	org	3145736
  9581   300008  FF                 	db	255
  9582                           
  9583                           ;Config register CONFIG5H @ 0x300009
  9584                           ;	unspecified, using default values
  9585   300009                     	org	3145737
  9586   300009  FF                 	db	255
  9587                           
  9588                           ;Config register CONFIG6L @ 0x30000A
  9589                           ;	unspecified, using default values
  9590                           ;	Table Read Protection Block 0
  9591                           ;	EBTR0 = 0x1, unprogrammed default
  9592                           ;	Table Read Protection Block 1
  9593                           ;	EBTR1 = 0x1, unprogrammed default
  9594                           ;	Table Read Protection Block 2
  9595                           ;	EBTR2 = 0x1, unprogrammed default
  9596                           ;	Table Read Protection Block 3
  9597                           ;	EBTR3 = 0x1, unprogrammed default
  9598                           ;	Table Read Protection Block 4
  9599                           ;	EBTR4 = 0x1, unprogrammed default
  9600                           ;	Table Read Protection Block 5
  9601                           ;	EBTR5 = 0x1, unprogrammed default
  9602                           ;	Table Read Protection Block 6
  9603                           ;	EBTR6 = 0x1, unprogrammed default
  9604                           ;	Table Read Protection Block 7
  9605                           ;	EBTR7 = 0x1, unprogrammed default
  9606   30000A                     	org	3145738
  9607   30000A  FF                 	db	255
  9608                           
  9609                           ;Config register CONFIG6H @ 0x30000B
  9610                           ;	unspecified, using default values
  9611                           ;	Boot Block Table Read Protection bit
  9612                           ;	EBTRB = 0x1, unprogrammed default
  9613   30000B                     	org	3145739
  9614   30000B  FF                 	db	255
  9615                           tosu	equ	0xFFF
  9616                           tosh	equ	0xFFE
  9617                           tosl	equ	0xFFD
  9618                           stkptr	equ	0xFFC
  9619                           pclatu	equ	0xFFB
  9620                           pclath	equ	0xFFA
  9621                           pcl	equ	0xFF9
  9622                           tblptru	equ	0xFF8
  9623                           tblptrh	equ	0xFF7
  9624                           tblptrl	equ	0xFF6
  9625                           tablat	equ	0xFF5
  9626                           prodh	equ	0xFF4
  9627                           prodl	equ	0xFF3
  9628                           indf0	equ	0xFEF
  9629                           postinc0	equ	0xFEE
  9630                           postdec0	equ	0xFED
  9631                           preinc0	equ	0xFEC
  9632                           plusw0	equ	0xFEB
  9633                           fsr0h	equ	0xFEA
  9634                           fsr0l	equ	0xFE9
  9635                           wreg	equ	0xFE8
  9636                           indf1	equ	0xFE7
  9637                           postinc1	equ	0xFE6
  9638                           postdec1	equ	0xFE5
  9639                           preinc1	equ	0xFE4
  9640                           plusw1	equ	0xFE3
  9641                           fsr1h	equ	0xFE2
  9642                           fsr1l	equ	0xFE1
  9643                           bsr	equ	0xFE0
  9644                           indf2	equ	0xFDF
  9645                           postinc2	equ	0xFDE
  9646                           postdec2	equ	0xFDD
  9647                           preinc2	equ	0xFDC
  9648                           plusw2	equ	0xFDB
  9649                           fsr2h	equ	0xFDA
  9650                           fsr2l	equ	0xFD9
  9651                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         211
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     78      86
    BANK0           160     54     119
    BANK1           256      0     140
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    MoveBuggy@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    MoveBuggy@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    MoveBuggy@color_detected	PTR unsigned char  size(2) Largest target is 3561
		 -> RAM(DATA[3561]), 

    WhiteInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    WhiteInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    AntiPink@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    AntiPink@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    AntiYellow@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    AntiYellow@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    LightBlueInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    LightBlueInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    OrangeInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    OrangeInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    PinkInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    PinkInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    YellowInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    YellowInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    BlueInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    BlueInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    GreenInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    GreenInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    RedInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    RedInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    Return_Time@time_index	PTR unsigned char  size(2) Largest target is 1
		 -> time_index(COMRAM[1]), 

    Return_Time@time_array	PTR unsigned int  size(2) Largest target is 80
		 -> time_array(BANK1[80]), 

    Return_Anti_Moves@moves_index	PTR unsigned char  size(2) Largest target is 1
		 -> moves_index(COMRAM[1]), 

    Return_Anti_Moves@anti_moves_array	PTR unsigned char  size(2) Largest target is 40
		 -> anti_moves_array(BANK0[40]), 

    AppendTime@time_index	PTR unsigned char  size(2) Largest target is 1
		 -> time_index(COMRAM[1]), 

    AppendTime@time_array	PTR unsigned int  size(2) Largest target is 80
		 -> time_array(BANK1[80]), 

    AppendMoves@moves_index	PTR unsigned char  size(2) Largest target is 1
		 -> moves_index(COMRAM[1]), 

    AppendMoves@anti_moves_array	PTR unsigned char  size(2) Largest target is 40
		 -> anti_moves_array(BANK0[40]), 

    turnLeft135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnLeft90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    fullSpeedBackwards@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    fullSpeedBackwards@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    fullSpeedBackwards@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    fullSpeedBackwards@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    fullSpeedBackwards@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    fullSpeedBackwards@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    S1242DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    S1242DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), main@motorL(BANK0[9]), 

    detect_color@tempval	PTR struct RGB_val size(2) Largest target is 8
		 -> main@initial_color(BANK0[8]), 

    Update_RGBC@tempval	PTR struct RGB_val size(2) Largest target is 8
		 -> main@initial_color(BANK0[8]), 


Critical Paths under _main in COMRAM

    _detect_color->___fltol
    ___fltol->___flmul
    ___flmul->___fldiv
    ___fldiv->___xxtofl
    _color_click_init->_color_writetoaddr
    _WhiteInstructions->_MoveBuggy
    _MoveBuggy->_AntiPink
    _MoveBuggy->_AntiYellow
    _YellowInstructions->_turnRight90
    _PinkInstructions->_turnLeft90
    _OrangeInstructions->_turnRight135
    _turnRight135->_turnRight90
    _LightBlueInstructions->_turnLeft135
    _turnLeft135->_turnLeft90
    _AntiYellow->_BlueInstructions
    _AntiYellow->_RedInstructions
    _RedInstructions->_turnRight90
    _turnRight90->_turnRight
    _turnRight->_setMotorPWM
    _AntiPink->_BlueInstructions
    _AntiPink->_GreenInstructions
    _fullSpeedAhead->_setMotorPWM
    _GreenInstructions->_turnLeft90
    _BlueInstructions->_turnLeft90
    _turnLeft90->_turnLeft
    _turnLeft->_setMotorPWM
    _stop->_setMotorPWM
    _fullSpeedBackwards->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _Update_RGBC->_color_read_Blue
    _Update_RGBC->_color_read_Clear
    _Update_RGBC->_color_read_Green
    _Update_RGBC->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _interrupts_clear_colorclick->_init_colorclick_interrupts
    _init_colorclick_interrupts->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    i2_interrupts_clear_colorclick->i2_init_colorclick_interrupts
    i2_init_colorclick_interrupts->i2_color_writetoaddr
    i2_color_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_detect_color
    _detect_color->___fltol

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                32    32      0  490498
                                             22 BANK0     32    32      0
                         _AppendTime
                    _Interrupts_init
                           _LED_init
                          _MoveBuggy
                        _Timer0_init
                        _Update_RGBC
                  _WhiteInstructions
                         _WhiteLight
                   _color_click_init
                       _detect_color
                     _fullSpeedAhead
                    _initDCmotorsPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _detect_color                                        18    16      2    6580
                                              4 BANK0     18    16      2
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     616
                                              8 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     517
                                             72 COMRAM     6     2      4
                                              0 BANK0      4     4      0
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    1886
                                             47 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1541
                                             22 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     750
                                             12 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WhiteLight                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WhiteInstructions                                   11     7      4  248861
                                             58 COMRAM    11     7      4
                   _BlueInstructions
                          _MoveBuggy
                  _Return_Anti_Moves
                        _Return_Time
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (2) _Return_Time                                          9     5      4     219
                                              8 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (2) _Return_Anti_Moves                                    6     2      4     219
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _MoveBuggy                                            6     0      6  222680
                                             52 COMRAM     6     0      6
                           _AntiPink
                         _AntiYellow
                        _AppendMoves
                   _BlueInstructions
                  _GreenInstructions
              _LightBlueInstructions
                 _OrangeInstructions
                   _PinkInstructions
                    _RedInstructions
                 _YellowInstructions
 ---------------------------------------------------------------------------------
 (3) _YellowInstructions                                   7     3      4   16596
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                        _turnRight90
 ---------------------------------------------------------------------------------
 (3) _PinkInstructions                                     7     3      4   17204
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                         _turnLeft90
 ---------------------------------------------------------------------------------
 (3) _OrangeInstructions                                   7     3      4   24393
                                             43 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                       _turnRight135
 ---------------------------------------------------------------------------------
 (4) _turnRight135                                         5     1      4   15988
                                             38 COMRAM     5     1      4
                               _stop
                          _turnRight
                        _turnRight90
 ---------------------------------------------------------------------------------
 (3) _LightBlueInstructions                                7     3      4   25001
                                             43 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                        _turnLeft135
 ---------------------------------------------------------------------------------
 (4) _turnLeft135                                          5     1      4   16596
                                             38 COMRAM     5     1      4
                               _stop
                           _turnLeft
                         _turnLeft90
 ---------------------------------------------------------------------------------
 (3) _AppendMoves                                          6     2      4    1130
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _AntiYellow                                           7     3      4   42445
                                             45 COMRAM     7     3      4
                   _BlueInstructions
                    _RedInstructions
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (3) _RedInstructions                                      7     3      4   16748
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                        _turnRight90
 ---------------------------------------------------------------------------------
 (4) _turnRight90                                          5     1      4    8191
                                             33 COMRAM     5     1      4
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (5) _turnRight                                            6     2      4    2593
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _AntiPink                                             7     3      4   43053
                                             45 COMRAM     7     3      4
                   _BlueInstructions
                  _GreenInstructions
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (1) _fullSpeedAhead                                       6     2      4    2745
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _GreenInstructions                                    7     3      4   17356
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                         _turnLeft90
 ---------------------------------------------------------------------------------
 (3) _BlueInstructions                                     7     3      4   17704
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                         _turnLeft90
 ---------------------------------------------------------------------------------
 (4) _turnLeft90                                           5     1      4    8799
                                             33 COMRAM     5     1      4
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (5) _turnLeft                                             6     2      4    2593
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _stop                                                 5     1      4    4873
                                             27 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _fullSpeedBackwards                                   6     2      4    3201
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    1829
                                             21 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                             14 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Update_RGBC                                          2     0      2     616
                                             19 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              9 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0     772
        _interrupts_clear_colorclick
 ---------------------------------------------------------------------------------
 (2) _interrupts_clear_colorclick                          0     0      0     772
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
         _init_colorclick_interrupts
 ---------------------------------------------------------------------------------
 (3) _init_colorclick_interrupts                           1     1      0     750
                                             12 COMRAM     1     1      0
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     750
                                             10 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              9 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _AppendTime                                           9     3      6     750
                                              8 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _LowISR                                               3     3      0       0
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _HighISR                                             0     0      0     244
      i2_interrupts_clear_colorclick
 ---------------------------------------------------------------------------------
 (11) i2_interrupts_clear_colorclick                       0     0      0     244
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
       i2_init_colorclick_interrupts
 ---------------------------------------------------------------------------------
 (12) i2_init_colorclick_interrupts                        1     1      0     222
                                              4 COMRAM     1     1      0
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (13) i2_color_writetoaddr                                 2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (14) i2_I2C_2_Master_Write                                1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (14) i2_I2C_2_Master_Stop                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (14) i2_I2C_2_Master_Start                                0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (15) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AppendTime
   _Interrupts_init
     _interrupts_clear_colorclick
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
       _init_colorclick_interrupts
         _color_writetoaddr
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
   _LED_init
   _MoveBuggy
     _AntiPink
       _BlueInstructions
         _fullSpeedBackwards
           _setMotorPWM
             ___lwdiv
               ___wmul (ARG)
             ___wmul
         _stop
           _setMotorPWM
         _turnLeft90
           _stop
           _turnLeft
             _setMotorPWM
       _GreenInstructions
         _fullSpeedBackwards
         _stop
         _turnLeft90
       _fullSpeedAhead
         _setMotorPWM
       _stop
     _AntiYellow
       _BlueInstructions
       _RedInstructions
         _fullSpeedBackwards
         _stop
         _turnRight90
           _stop
           _turnRight
             _setMotorPWM
       _fullSpeedAhead
       _stop
     _AppendMoves
     _BlueInstructions
     _GreenInstructions
     _LightBlueInstructions
       _fullSpeedBackwards
       _stop
       _turnLeft135
         _stop
         _turnLeft
         _turnLeft90
     _OrangeInstructions
       _fullSpeedBackwards
       _stop
       _turnRight135
         _stop
         _turnRight
         _turnRight90
     _PinkInstructions
       _fullSpeedBackwards
       _stop
       _turnLeft90
     _RedInstructions
     _YellowInstructions
       _fullSpeedBackwards
       _stop
       _turnRight90
   _Timer0_init
   _Update_RGBC
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _WhiteInstructions
     _BlueInstructions
     _MoveBuggy
     _Return_Anti_Moves
     _Return_Time
     _fullSpeedAhead
     _stop
   _WhiteLight
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
   _detect_color
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       ___fldiv (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _fullSpeedAhead
   _initDCmotorsPWM
   _stop

 _LowISR (ROOT)

 _HighISR (ROOT)
   i2_interrupts_clear_colorclick
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle
     i2_init_colorclick_interrupts
       i2_color_writetoaddr
         i2_I2C_2_Master_Start
         i2_I2C_2_Master_Stop
         i2_I2C_2_Master_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      64        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      8C       7       54.7%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     36      77       5       74.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4E      56       1       91.5%
BITBIGSFRhllllh     52      0       0      41        0.0%
BITBIGSFRhlllll     37      0       0      43        0.0%
BITBIGSFRlllhll     2A      0       0      55        0.0%
BITBIGSFRlllll      26      0       0      62        0.0%
BITBIGSFRllhh       20      0       0      46        0.0%
BITBIGSFRhhhhlh     1B      0       0      33        0.0%
BITBIGSFRhhhlll     17      0       0      38        0.0%
BITBIGSFRhhhhll     13      0       0      34        0.0%
BITBIGSFRlllhhh     11      0       0      49        0.0%
BITBIGSFRlllhhh     11      0       0      50        0.0%
BITBIGSFRhhhlhh      E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRlllhhh      C      0       0      48        0.0%
BITBIGSFRllhl        C      0       0      47        0.0%
BITBIGSFRlllhll      9      0       0      59        0.0%
BITBIGSFRhlllll      8      0       0      44        0.0%
BITBIGSFRllllh       6      0       0      61        0.0%
BITBIGSFRlllhll      6      0       0      54        0.0%
BITBIGSFRlllhll      5      0       0      57        0.0%
BITBIGSFRlllhlh      5      0       0      53        0.0%
BITBIGSFRhhhlll      5      0       0      39        0.0%
BITBIGSFRlllhll      3      0       0      56        0.0%
BITBIGSFRlllhll      3      0       0      58        0.0%
BITBIGSFRlllhhl      3      0       0      52        0.0%
BITBIGSFRhlllll      2      0       0      42        0.0%
BITBIGSFRhhhllh      2      0       0      37        0.0%
BITBIGSFRhhhlhl      1      0       0      36        0.0%
BITBIGSFRlllhhh      1      0       0      51        0.0%
BITBIGSFRhlllh       1      0       0      40        0.0%
BITBIGSFRlllhll      1      0       0      60        0.0%
BITBIGSFRlh          1      0       0      45        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     159      63        0.0%
DATA                 0      0     159       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Mar 13 20:49:36 2023

                       _color_read_Red 262C                           ___fldiv@aexp 002F  
                         ___fldiv@bexp 002E                           ___fldiv@sign 0027  
                      _color_read_Blue 271C                                     l21 28FE  
                                   l30 26CA                                     l24 2A78  
                                   l33 276A                                     l42 0674  
                                   l27 267A                                     l36 271A  
                                   l39 262A                                     l59 067A  
                                   l92 2982                                     l86 295A  
                                   l95 2B3A                                     l89 295C  
                                   l98 2B26                                     bsr 000FE0  
                  ___wmul@multiplicand 000B                       _anti_moves_array 0077  
                     _color_read_Clear 26CC                       _color_read_Green 267C  
           WhiteInstructions@anticolor 0043                      ??_Interrupts_init 000E  
                                  l101 2B30                                    l104 2B10  
                                  l107 2892                                    l203 1AA8  
                                  l132 2AD0                                    l213 19BA  
                                  l135 2B56                                    l208 18CC  
                                  l321 27BA                                    l233 20C8  
                                  l314 2AB6                                    l218 1B96  
                                  l324 2AEA                                    l260 255E  
                                  l440 2A58                                    l248 201A  
                                  l193 16D6                                    l186 2158  
                                  l508 23F6                                    l460 2A16  
                                  l517 247C                                    l269 25CC  
                                  l198 1D56                                    l526 1F6C  
                                  l454 29F4                                    l535 21DE  
                                  l463 28CA                                    l544 2264  
                                  l457 2930                                    l713 29D0  
                                  l553 22EA                                    l562 2370  
                                  l571 1E08                                    l619 13B6  
                                  l580 1EBA                                    l592 1C82  
                                  l692 0F6E                                    l688 0ECC  
                  i2_color_writetoaddr 2A7A                                    wreg 000FE8  
                         ___flmul@aexp 0041                           ___flmul@bexp 0042  
                         ___flmul@sign 003C                           ___flmul@temp 0047  
                         ___flmul@prod 0043                           ___fltol@exp1 004E  
                                 l1010 17DE                                   l1211 24F0  
                                 l1204 24E8                                   l1300 0C62  
                                 l3000 25BC                                   l3010 23A4  
                                 l3002 2372                                   l1306 0CE4  
                                 l1331 0AA4                                   l3100 27AE  
                                 l3020 23F8                                   l3012 23B8  
                                 l3004 237A                                   l1308 0D5C  
                                 l1309 0D4A                                   l3030 243E  
                                 l3022 2400                                   l3014 23BA  
                                 l3006 238E                                   l3102 29D4  
                                 l3110 2178                                   l1334 0936  
                                 l1327 0740                                   l3040 1EC4  
                                 l3032 2440                                   l3024 2414  
                                 l3200 1E0E                                   l3016 23CA  
                                 l3008 2390                                   l3120 21CA  
                                 l3112 218C                                   l3104 215A  
                                 l1344 0A66                                   l1336 09AE  
                                 l1337 099C                                   l3050 1F04  
                                 l3042 1ED8                                   l3034 2450  
                                 l3026 2416                                   l3210 1E68  
                                 l3202 1E22                                   l3018 23E2  
                                 l3130 2212                                   l3122 21E0  
                                 l3114 21A0                                   l3106 2162  
                                 l1371 156A                                   l3052 1F14  
                                 l3044 1EDA                                   l3036 2468  
                                 l3028 242A                                   l3212 1E7C  
                                 l3204 1E3E                                   l3140 2266  
                                 l3132 2226                                   l3124 21E8  
                                 l3116 21A2                                   l3108 2176  
                                 l3300 124A                                   l4100 1702  
                                 l3070 2B1E                                   l3054 1F2C  
                                 l3046 1EEE                                   l3038 1EBC  
                                 l3214 1E7E                                   l3206 1E52  
                                 l3150 22AC                                   l3142 226E  
                                 l3134 2228                                   l3126 21FC  
                                 l3118 21B2                                   l3310 12A8  
                                 l3302 1258                                   l3230 2946  
                                 l3222 2932                                   l4110 1752  
                                 l4102 172E                                   l1382 1502  
                                 l1295 0E3E                                   l1375 14A6  
                                 l3080 2868                                   l3072 2B22  
                                 l3240 267C                                   l3056 1F40  
                                 l3048 1F02                                   l3216 1E8E  
                                 l3208 1E54                                   l3160 22F4  
                                 l3152 22AE                                   l3144 2282  
                                 l3136 2238                                   l3128 21FE  
                                 l3320 1312                                   l3312 12C2  
                                 l3304 1272                                   l3232 2948  
                                 l3224 293C                                   l3400 0C16  
                                 l4120 177E                                   l4104 1730  
                                 l1368 140E                                   l4200 04B8  
                                 l1297 0C9E                                   l3090 2776  
                                 l3082 288E                                   l3074 2854  
                                 l3242 26C2                                   l3234 262C  
                                 l3218 1EA6                                   l3170 2334  
                                 l3162 2308                                   l3154 22BE  
                                 l3146 2284                                   l3138 2250  
                                 l3330 1376                                   l3322 1326  
                                 l3314 12D6                                   l3306 1286  
                                 l3226 2942                                   l3410 0C60  
                                 l3402 0C26                                   l4130 17AE  
                                 l4106 1740                                   l4210 0500  
                                 l4202 04C8                                   l3092 2786  
                                 l3084 2890                                   l3076 2858  
                                 l3252 26CC                                   l3236 2672  
                                 l3180 1D70                                   l3172 2344  
                                 l3164 230A                                   l3156 22D6  
                                 l3148 2298                                   l3332 138E  
                                 l3324 133A                                   l3316 12EA  
                                 l3308 129A                                   l3260 29F6  
                                 l3228 2944                                   l3420 0CAE  
                                 l3412 0C6C                                   l3404 0C2E  
                                 l3340 0AC0                                   l3500 070A  
                                 l4132 17BE                                   l4116 176A  
                                 l4108 1744                                   l4220 0548  
                                 l4212 0510                                   l4204 04D0  
                                 l4140 0062                                   l4300 0EDA  
                                 l3094 2790                                   l3078 2860  
                                 l3246 271C                                   l3254 2712  
                                 l3190 1DCA                                   l3182 1D8C  
                                 l3174 235C                                   l3166 231E  
                                 l3158 22EC                                   l3334 13A2  
                                 l3326 1348                                   l3318 12F8  
                                 l3262 2A14                                   l3422 0CC4  
                                 l3430 0CF4                                   l3414 0C8A  
                                 l3406 0C3E                                   l3350 0AF4  
                                 l3342 0AC2                                   l3510 0760  
                                 l3502 071A                                   l4134 17CE  
                                 l4126 1792                                   l4118 1774  
                                 l4230 0598                                   l4222 0558  
                                 l4214 0520                                   l4206 04E0  
                                 l4150 0340                                   l4142 0148  
                                 l4310 0F12                                   l4302 0EE0  
                                 l3096 279A                                   l3088 276C  
                                 l3248 2762                                   l2800 1636  
                                 l3192 1DCC                                   l3184 1DA0  
                                 l3176 1D58                                   l3168 2332  
                                 l3328 1362                                   l3280 1182  
                                 l3272 1134                                   l3432 0D02  
                                 l3424 0CCA                                   l3416 0C8C  
                                 l3408 0C52                                   l3360 0B26  
                                 l3344 0AD2                                   l3352 0AFC  
                                 l3336 0AA6                                   l3600 0A94  
                                 l3520 07A0                                   l3504 072A  
                                 l4128 179E                                   l4240 05E0  
                                 l4224 0568                                   l4232 05A0  
                                 l4216 0530                                   l4208 04F0  
                                 l4160 0390                                   l4152 0350  
                                 l4144 0234                                   l4320 0F56  
                                 l4312 0F24                                   l4304 0EE4  
                                 l3098 27A4                                   l3258 2AD2  
                                 l2802 1652                                   l2810 1C84  
                                 l3194 1DDC                                   l3186 1DA2  
                                 l3178 1D5C                                   l3290 11E6  
                                 l3282 1196                                   l3274 1146  
                                 l3266 2894                                   l3442 0D6C  
                                 l3450 0DB4                                   l3434 0D06  
                                 l3426 0CD4                                   l3418 0C9C  
                                 l3370 0B5A                                   l3362 0B28  
                                 l3354 0B0C                                   l3346 0AE2  
                                 l3338 0AB2                                   l3530 07EA  
                                 l3522 07AC                                   l3514 0774  
                                 l3506 0730                                   l4250 0628  
                                 l4242 05F0                                   l4234 05B0  
                                 l4226 0578                                   l4218 0538  
                                 l4170 03D8                                   l4154 0360  
                                 l4162 0398                                   l4146 0320  
                                 l4138 005C                                   l4330 0FC0  
                                 l4322 0F66                                   l4314 0F28  
                                 l4306 0EF2                                   l2804 1696  
                                 l2820 1D02                                   l2812 1CBC  
                                 l2900 203A                                   l3196 1DF4  
                                 l3188 1DB6                                   l3292 11FA  
                                 l3284 11AA                                   l3276 115A  
                                 l3268 28C2                                   l3460 0E1E  
                                 l3452 0DCE                                   l3444 0D78  
                                 l3436 0D14                                   l3428 0CE2  
                                 l3380 0BA0                                   l3364 0B38  
                                 l3372 0B62                                   l3356 0B12  
                                 l3348 0AF2                                   l3540 083C  
                                 l3532 07F6                                   l3524 07C4  
                                 l3516 0780                                   l3508 0750  
                                 l4252 0638                                   l4260 0670  
                                 l4244 0600                                   l4236 05C0  
                                 l4228 0588                                   l4180 0420  
                                 l4172 03E8                                   l4164 03A8  
                                 l4156 0370                                   l4148 0330  
                                 l4340 1010                                   l4332 0FC6  
                                 l4324 0F7E                                   l4316 0F3E  
                                 l4308 0F06                                   l2806 295C  
                                 l2822 1D30                                   l2814 1CC8  
                                 l2830 1A18                                   l2910 208C  
                                 l2902 204E                                   l3198 1E0A  
                                 l3294 1208                                   l3286 11B8  
                                 l3278 1168                                   l3710 28D0  
                                 l3462 0E2C                                   l3454 0DE4  
                                 l3446 0D86                                   l3438 0D42  
                                 l3390 0BC8                                   l3382 0BA4  
                                 l3374 0B72                                   l3366 0B48  
                                 l3358 0B18                                   l3550 08BA  
                                 l3542 084C                                   l3534 0806  
                                 l3526 07D0                                   l3518 078A  
                                 l4094 16D8                                   l4254 0648  
                                 l4238 05D0                                   l4246 0608  
                                 l4182 0430                                   l4190 0468  
                                 l4174 03F8                                   l4166 03B8  
                                 l4158 0380                                   l4342 1012  
                                 l4334 0FDA                                   l4326 0F8E  
                                 l4350 1048                                   l4318 0F54  
                                 l4270 0E6A                                   l2808 296C  
                                 l2824 1D3C                                   l2816 1CE0  
                                 l2840 1A78                                   l2832 1A24  
                                 l2912 208E                                   l2904 2062  
                                 l2920 1F6E                                   l3296 1222  
                                 l3288 11D2                                   l3712 28DA  
                                 l3464 0E32                                   l3456 0DFE  
                                 l3448 0DB0                                   l3376 0B88  
                                 l3368 0B58                                   l3560 0934  
                                 l3552 08F0                                   l3544 0868  
                                 l3536 0812                                   l3528 07DC  
                                 l3480 0698                                   l4096 16EE  
                                 l4256 0658                                   l4248 0618  
                                 l4192 0478                                   l4184 0440  
                                 l4168 03C8                                   l4176 0400  
                                 l4360 10C0                                   l4352 105A  
                                 l4344 1036                                   l4336 0FE2  
                                 l4328 0FA0                                   l4280 0E94  
                                 l4272 0E7E                                   l4264 0E40  
                                 l2770 2486                                   l2762 29AC  
                                 l2826 1D48                                   l2818 1CEC  
                                 l2842 1A84                                   l2834 1A40  
                                 l2914 20A2                                   l2906 2064  
                                 l2850 1848                                   l2930 1FB4  
                                 l2922 1F76                                   l3298 1236  
                                 l3714 28EA                                   l3466 0E34  
                                 l3458 0E1A                                   l3394 0BDC  
                                 l3378 0B98                                   l3386 0BB8  
                                 l3570 0994                                   l3562 0946  
                                 l3554 08FE                                   l3546 0874  
                                 l3538 0822                                   l3490 06DE  
                                 l3482 06A8                                   l3474 067C  
                                 l3650 13CA                                   l4258 0668  
                                 l4194 0488                                   l4186 0450  
                                 l4178 0410                                   l4370 111E  
                                 l4362 10D4                                   l4354 106A  
                                 l4346 103C                                   l4338 0FF6  
                                 l4290 0EAE                                   l4282 0E9C  
                                 l4274 0E84                                   l4266 0E62  
                                 l3900 2900                                   l2780 24BC  
                                 l2772 2498                                   l2764 29C8  
                                 l2844 1A90                                   l2836 1A4C  
                                 l2828 19BC                                   l2916 20B6  
                                 l2908 2078                                   l2860 18A8  
                                 l2852 1864                                   l2940 1FF4  
                                 l2932 1FB6                                   l2924 1F8A  
                                 l3716 28F4                                   l3708 28CC  
                                 l3396 0BF6                                   l3388 0BC8  
                                 l3580 0A02                                   l3564 0954  
                                 l3556 091C                                   l3548 0890  
                                 l3492 06E4                                   l3484 06B8  
                                 l3476 0688                                   l3660 1448  
                                 l3652 13D8                                   l4196 0498  
                                 l4188 0460                                   l4372 1120  
                                 l4364 10DC                                   l4356 109A  
                                 l4348 1040                                   l4292 0EB6  
                                 l4284 0EA2                                   l4276 0E88  
                                 l4268 0E66                                   l2870 2B0C  
                                 l2950 2A5C                                   l3718 25CE  
                                 l2782 24D2                                   l2774 24A0  
                                 l2790 156C                                   l2838 1A62  
                                 l2918 20B8                                   l2862 18B4  
                                 l2854 1870                                   l2846 17E0  
                                 l2942 2008                                   l2934 1FCA  
                                 l2926 1F8C                                   l3910 1BDC  
                                 l3902 1B98                                   l3398 0C06  
                                 l3590 0A6A                                   l3574 09BE  
                                 l3582 0A06                                   l3566 0958  
                                 l3558 0926                                   l3494 06EA  
                                 l3486 06C8                                   l3478 0696  
                                 l3670 149C                                   l3662 1450  
                                 l3654 141E                                   l4198 04A8  
                                 l4374 1126                                   l4366 10F0  
                                 l4358 10BA                                   l4294 0EBE  
                                 l4286 0EA6                                   l4278 0E8C  
                                 l2864 2B32                                   l2872 2B28  
                                 l2784 24DA                                   l2776 24A8  
                                 l2768 247E                                   l2792 1588  
                                 l2880 1B12                                   l2960 195E  
                                 l2952 18CE                                   l2856 1886  
                                 l2848 183C                                   l2944 200A  
                                 l2936 1FDE                                   l2928 1FA0  
                                 l3920 1C28                                   l3912 1BF0  
                                 l3904 1B9C                                   l3592 0A7A  
                                 l3584 0A20                                   l3576 09CA  
                                 l3568 0966                                   l3496 06F8  
                                 l3488 06CE                                   l3680 1512  
                                 l3672 14D8                                   l3664 145C  
                                 l3656 1434                                   l3648 13BA  
                                 l4368 110A                                   l4296 0EC4  
                                 l4288 0EAA                                   l2866 2B36  
                                 l2874 2B2C                                   l2786 24DC  
                                 l2778 24B6                                   l2794 15DC  
                                 l2890 1B72                                   l2882 1B2E  
                                 l2962 1974                                   l2954 192A  
                                 l2858 189C                                   l2938 1FE0  
                                 l2970 24F2                                   l3922 1C3A  
                                 l3914 1BF4                                   l3906 1BB4  
                                 l3594 0A88                                   l3586 0A34  
                                 l3578 09D8                                   l3498 06FA  
                                 l3690 155A                                   l3682 1516  
                                 l3674 14E4                                   l3666 148E  
                                 l3850 20CA                                   l4298 0EC8  
                                 l2868 2B08                                   l2788 24E2  
                                 l2796 15F0                                   l2892 1B7E  
                                 l2884 1B3A                                   l2876 1AAA  
                                 l2964 198A                                   l2956 1936  
                                 l2980 2538                                   l2972 2506  
                                 l3924 1C50                                   l3916 1C0E  
                                 l3908 1BBC                                   l3596 0A8A  
                                 l3588 0A4E                                   l3684 153A  
                                 l3676 14F2                                   l3668 1490  
                                 l3860 2132                                   l3852 20DA  
                                 l3846 2AB8                                   l2798 15F4  
                                 l2886 1B50                                   l2878 1B06  
                                 l2894 201C                                   l2966 1996  
                                 l2958 1952                                   l2990 257C  
                                 l2982 254C                                   l2974 250E  
                                 l3918 1C22                                   l3926 1C72  
                                 l3598 0A90                                   l3686 154A  
                                 l3678 1510                                   l3870 214C  
                                 l3862 2134                                   l3854 2100  
                                 l3880 2AB2                                   l2888 1B66  
                                 l2896 2024                                   l2968 19A2  
                                 l2992 2590                                   l2984 254E  
                                 l2976 2522                                   l3848 2B50  
                                 l3688 1558                                   l3872 2156  
                                 l3864 213E                                   l3856 2104  
                                 l3882 2AB4                                   l3874 2A9A  
                                 l2898 2038                                   l2994 2592  
                                 l2986 2560                                   l2978 2524  
                                 l3866 2140                                   l3858 2128  
                                 l3876 2AAC                                   l3892 2A3A  
                                 l2996 25A6                                   l2988 2574  
                                 l3868 214A                                   l3878 2AB0  
                                 l3894 2A42                                   l2998 25BA  
                                 l3896 2A4C                                   l3898 2A56  
                                 u2100 1CBC                                   u2101 1CB8  
                                 u2030 2498                                   u2110 1CE0  
                                 u2031 2494                                   u2111 1CDC  
                                 u2040 24B6                                   u2120 1A18  
                                 u2200 209E                                   u3000 0760  
                                 u2041 24B2                                   u2121 1A14  
                                 u2201 209A                                   u3001 075C  
                                 u2050 24D2                                   u2130 1A40  
                                 u2210 20C8                                   u3010 08DA  
                                 u2051 24CE                                   u2131 1A3C  
                                 u2211 20C4                                   u2060 1588  
                                 u2140 183C                                   u2220 1F9C  
                                 u2300 2534                                   u3100 0A4E  
                                 u3020 0934                                   u2061 1584  
                                 u2141 1838                                   u2221 1F98  
                                 u2301 2530                                   u3101 0A4A  
                                 u3021 0930                                   u2070 1652  
                                 u2150 1864                                   u2230 1FC6  
                                 u2310 255E                                   u3110 0A88  
                                 u3030 0954                                   u2071 164E  
                                 u2151 1860                                   u2231 1FC2  
                                 u2311 255A                                   u3111 0A84  
                                 u3031 0950                                   u3015 08D0  
                                 u2080 296C                                   u2400 287C  
                                 u2160 1B06                                   u2240 1FF0  
                                 u2320 25A2                                   u3040 0966  
                                 u4000 1724                                   u3200 13D8  
                         _BAUD4CONbits 000EE9                                   u2081 2968  
                                 u2401 2874                                   u2161 1B02  
                                 u2241 1FEC                                   u2321 259E  
                                 u3041 0962                                   u3201 13D4  
                                 u2090 2982                                   u2170 1B2E  
                                 u2250 201A                                   u2330 25CC  
                                 u3050 0994                                   u4010 1752  
                                 u3210 1434                                   u2091 297E  
                                 u2171 1B2A                                   u2251 2016  
                                 u2331 25C8                                   u3051 0990  
                                 u4011 174E                                   u3211 1430  
                                 u2180 204A                                   u2340 23A0  
                                 u2500 1DB2                                   u2420 2188  
                                 u3060 09AA                                   u4020 1766  
                                 u3220 148A                                   u4100 0370  
                                 u2181 2046                                   u2341 239C  
                                 u2501 1DAE                                   u2421 2184  
                                 u3061 09A6                                   u4021 1762  
                                 u4005 1718                                   u3221 1486  
                                 u4101 036C                                   u2190 2074  
                                 u2350 23CA                                   u2510 1DDC  
                                 u2430 21B2                                   u3070 09BE  
                                 u4030 178E                                   u3230 14D4  
                                 u4110 0380                                   u2191 2070  
                                 u2351 23C6                                   u2511 1DD8  
                                 u2431 21AE                                   u3071 09BA  
                                 u4031 178A                                   u3231 14D0  
                                 u4111 037C                                   u2360 2426  
                                 u2280 192A                                   u2520 1E64  
                                 u2440 220E                                   u2600 1236  
                                 u3080 09D8                                   u4040 17AE  
                                 u3240 14F2                                   u4200 0420  
                                 u4120 0390                                   u2361 2422  
                                 u2281 1926                                   u2521 1E60  
                                 u2441 220A                                   u2601 1232  
                                 u3081 09D4                                   u4041 17AA  
                                 u3241 14EE                                   u4201 041C  
                                 u4121 038C                                   u2418 287E  
                                 u2370 2450                                   u2290 1952  
                                 u2530 1E8E                                   u2450 2238  
                                 u2610 1258                                   u3090 0A20  
                                 u4050 17BE                                   u3250 1502  
                                 u4210 0430                                   u4130 03A8  
                                 _T2PR 000FBC                                   u2371 244C  
                                 u2291 194E                                   u2531 1E8A  
                                 u2451 2234                                   u2611 1254  
                                 u3091 0A1C                                   u4051 17BA  
                                 u3251 14FE                                   u4211 042C  
                                 u4131 03A4                                   u2380 1EEA  
                                 u2460 2294                                   u2620 1286  
                                 u2540 1146                                   u2700 0AC0  
                                 u3260 1510                                   u4300 04C8  
                                 u4220 0440                                   u4140 03B8  
                                 u4060 0330                                   u2381 1EE6  
                                 u2461 2290                                   u2621 1282  
                                 u2541 1142                                   u2701 0ABC  
                                 u3261 150C                                   u4301 04C4  
                                 u4221 043C                                   u4141 03B4  
                                 u4061 032C                                   u2390 1F14  
                                 u2470 22BE                                   u2630 12A8  
                                 u2550 1168                                   u2710 0AD2  
                                 u3270 154A                                   u3190 13CA  
                                 u4310 04E0                                   u4230 0450  
                                 u4150 03C8                                   u4070 0340  
                                 u2391 1F10                                   u2471 22BA  
                                 u2631 12A4                                   u2551 1164  
                                 u2711 0ACE                                   u3271 1546  
                                 u3191 13C6                                   u4311 04DC  
                                 u4231 044C                                   u4151 03C4  
                                 u4071 033C                                   u2480 231A  
                                 u2640 12D6                                   u2560 1196  
                                 u2800 0C8A                                   u2720 0AE2  
                                 u3280 1558                                   u4400 0578  
                                 u4320 04F0                                   u4240 0460  
                                 u4160 03D8                                   u4080 0350  
                                 u2481 2316                                   u2641 12D2  
                                 u2561 1192                                   u2801 0C86  
                                 u2721 0ADE                                   u3281 1554  
                                 u4401 0574                                   u4321 04EC  
                                 u4241 045C                                   u4161 03D4  
                                 u4081 034C                                   u2490 2344  
                                 u2650 12F8                                   u2570 11B8  
                                 u2810 0CAE                                   u2730 0B26  
                                 u4410 0588                                   u4330 0500  
                                 u4250 0478                                   u4170 03E8  
                                 u4090 0360                                   u2491 2340  
                                 u2651 12F4                                   u2571 11B4  
                                 u2811 0CAA                                   u2731 0B22  
                                 u4411 0584                                   u4331 04FC  
                                 u4251 0474                                   u4171 03E4  
                                 u4091 035C                                   u2660 1326  
                                 u2580 11E6                                   u2900 0DCE  
                                 u2820 0CC4                                   u2740 0B38  
                                 u4500 0628                                   u4420 0598  
                                 u4340 0510                                   u4260 0488  
                                 u4180 03F8                                   u2661 1322  
                                 u2581 11E2                                   u2901 0DCA  
                                 u2821 0CC0                                   u2741 0B34  
                                 u4501 0624                                   u4421 0594  
                                 u4341 050C                                   u4261 0484  
                                 u4181 03F4                                   u2670 1348  
                                 u2590 1208                                   u2910 0DFE  
                                 u2830 0CE2                                   u2750 0B48  
                                 u4510 0638                                   u4430 05B0  
                                 u4350 0520                                   u4270 0498  
                                 u4190 0410                                   u2671 1344  
                                 u2591 1204                                   u2911 0DFA  
                                 u2831 0CDE                                   u2751 0B44  
                                 u4511 0634                                   u4431 05AC  
                                 u4351 051C                                   u4271 0494  
                                 u4191 040C                                   u2680 1376  
                                 u3800 1C3A                                   u2920 0E2C  
                                 u2840 0D02                                   u2760 0B88  
                                 u4520 0648                                   u4440 05C0  
                                 u4360 0530                                   u4280 04A8  
                                 u4600 0F8E                                   u2681 1372  
                                 u3801 1C36                                   u2921 0E28  
                                 u2841 0CFE                                   u2761 0B84  
                                 u4521 0644                                   u4441 05BC  
                                 u4361 052C                                   u4281 04A4  
                                 u4601 0F8A                                   u2690 13A2  
                                 u3810 1C82                                   u2850 0D14  
                                 u2770 0BC8                                   u2930 0696  
                                 u4530 0658                                   u4450 05D0  
                                 u4370 0548                                   u4290 04B8  
                                 u4610 0FA0                                   u2691 139E  
                                 u3811 1C7E                                   u2851 0D10  
                                 u2771 0BC4                                   u2931 0692  
                                 u4531 0654                                   u4451 05CC  
                                 u4371 0544                                   u4291 04B4  
                                 u4611 0F9C                                   u2860 0D42  
                                 u2780 0C3E                                   u2940 06A8  
                                 u4540 0668                                   u4460 05E0  
                                 u4380 0558                                   u4620 0FF6  
                                 u2861 0D3E                                   u2781 0C3A  
                                 u2941 06A4                                   u4541 0664  
                                 u4461 05DC                                   u4381 0554  
                                 u4621 0FF2                                   u2870 0D58  
                                 u2790 0C60                                   u2950 06B8  
                                 u4470 05F0                                   u4390 0568  
                                 u4630 105A                                   u4550 0EDA  
                                 u2871 0D54                                   u2791 0C5C  
                                 u2951 06B4                                   u4471 05EC  
                                 u4391 0564                                   u4631 1056  
                                 u4551 0ED6                                   u2880 0D6C  
                                 u2960 06F8                                   u4480 0600  
                                 u4640 106A                                   u4560 0F3E  
                                 u2881 0D68                                   u2961 06F4  
                                 u4481 05FC                                   u4641 1066  
                                 u4561 0F3A                                   u2890 0D86  
                                 u2970 070A                                   u4490 0618  
                                 u4650 10F0                                   u4570 0F54  
                                 u4707 2242                                   u2891 0D82  
                                 u2971 0706                                   u4491 0614  
                                 u4651 10EC                                   u4571 0F50  
                                 u2980 071A                                   u4580 0F66  
                                 u4717 22C8                                   u2981 0716  
                                 u4581 0F62                                   u3790 1C0A  
                                 u2990 0750                                   u4590 0F7E  
                                 u4807 245A                                   u4727 234E  
                                 u3791 1C06                                   u2991 074C  
                                 u4591 0F7A                                   i2l24 2A98  
                                 u4817 1F1E                                   u4737 1D7A  
                                 u4827 1F4A                                   u4747 1DE6  
                                 u4667 1002                                   u4837 1A9A  
                                 u4757 23D4                                   u4677 10FC  
                                 u3990 16EE                                   u4847 1D4E  
                                 u4767 18BE                                   u4687 28E0  
                                 u3991 16EA                                   u4857 1B88  
                                 u4777 1E2C                                   u4697 21BC  
                                 u4867 277C                                   u4787 1E98  
                                 i2l92 29AA                                   u4797 19AC  
                                 i2l95 2B4E                                   i2l89 2984  
    Return_Anti_Moves@anti_moves_array 000B                                   _main 0E40  
                  __end_of_AppendMoves 29F6                     _YellowInstructions 215A  
                                 fsr2h 000FDA                                   indf2 000FDF  
                                 fsr2l 000FD9                                   btemp 0057  
                                 _stop 1C84         ??i2_init_colorclick_interrupts 0005  
                    main@initial_color 00BB                                   prodh 000FF4  
                                 prodl 000FF3                                   start 0058  
                 ?i2_color_writetoaddr 0003                        ___fldiv@new_exp 0028  
               __end_of_color_read_Red 267C                        __end_of_HighISR 2A3A  
                         ___param_bank 000000                            _turnLeft135 2560  
                  ?_YellowInstructions 0027                            _turnRight90 1F6E  
                           _AntiYellow 1D58                       __end_of_LED_init 2AD2  
                        ___fltol@sign1 004D                             _AppendTime 2900  
                                ?_main 0001                        __end_of___fldiv 0E40  
                      __end_of___flmul 0AA6                        __end_of___fltol 17E0  
                                ?_stop 001C                        __end_of___lwdiv 24F2  
                                i2l101 2B44                                  i1l334 0048  
                                i2l104 2B1C                                  i2l321 280A  
                                i2l324 2B04                                  i2l342 2A36  
                                _TMR0H 000FD4                                  _TMR0L 000FD3  
           __end_of_I2C_2_Master_Start 2B3C                   ??_YellowInstructions 002B  
           __end_of_I2C_2_Master_Write 2B12                       _PinkInstructions 21E0  
                   _int_threshold_high 00D5                                  main@b 00B8  
             __end_of_BlueInstructions 1F6E                                  tablat 000FF5  
                                plusw2 000FDB                                  ttemp5 0058  
                                ttemp6 005B                                  ttemp7 005F  
                                status 000FD8                                  wtemp8 0058  
                  detect_color@tempval 00A3                  ??i2_color_writetoaddr 0004  
              __end_of_color_read_Blue 276C                  _I2C_2_Master_RepStart 2B1E  
                 fullSpeedBackwards@mL 001C                   fullSpeedBackwards@mR 001E  
                     __end_of_AntiPink 1EBC                        ?_color_read_Red 000D  
                      __initialization 280C                           __end_of_main 1134  
                 __end_of_detect_color 067C                           __end_of_stop 1D58  
                _LightBlueInstructions 22EC                      ??_RedInstructions 002B  
  __end_of_interrupts_clear_colorclick 2AEC         ?i2_interrupts_clear_colorclick 0001  
          _interrupts_clear_colorclick 2AD2                                 ??_main 00B5  
                               ??_stop 0020                          __activetblptr 000000  
                         _turnRight135 24F2                      _Return_Anti_Moves 29F6  
                          _AppendMoves 29D2                           ?_setMotorPWM 0016  
                               _CCPR1H 000FAA                                 _CCPR2H 000FA6  
                               _CCPR3H 000F25                                 _CCPR4H 000F21  
                   ?_Return_Anti_Moves 0009                                 _RC0PPS 000E62  
                               _RC4REG 000EE3                                 _RE2PPS 000E74  
                               _RD5PPS 000E6F                                 _RC7PPS 000E69  
                               _RE4PPS 000E76                                 _RD6PPS 000E70  
                               i2l3060 2B4A                                 i2l3220 2A7C  
                               i1l3932 0026                                 i2l3062 2B3C  
                               i1l3934 0036                                 i2l3064 2B40  
                               i1l3936 0044                                 i2l3058 2B46  
                               i2l3066 2B14                                 i2l3068 2B18  
                               i2l3700 27E0                                 i2l3702 27EA  
                               i2l3704 27F4                                 i2l3706 27FE  
                               i2l2946 2984                                 _RG6PPS 000E88  
                               i2l2948 2994                                 i2l3940 2A28  
                               i2l3694 27BC                                 i2l3942 2A2E  
                               i2l3696 27C6                                 i2l3928 2AEC  
                               i2l3944 2A32                                 i2l3698 27D6  
                               i2l3938 2A18                              ??_HighISR 0006  
             __end_of_color_click_init 2900                                 _RX4PPS 000E15  
                               _TX4REG 000EE4                       __end_of___xxtofl 156C  
                  ??_Return_Anti_Moves 000D                                 _LowISR 0018  
                        ??_Timer0_init 0009                           _CCPTMRS0bits 000FAD  
          AppendMoves@anti_moves_array 000B                  Return_Time@time_array 000B  
                Return_Time@time_index 0009                                 ___wmul 29AC  
                            ??___fldiv 001F                              ??___flmul 0038  
                            ??___fltol 009F                              ??___lwdiv 0013  
                               clear_0 282A                                 clear_1 2836  
                               clear_2 2842                            ?_AntiYellow 002E  
                               isa$std 000001                            ?_AppendTime 0009  
                        ??_Return_Time 000D              __end_of_Return_Anti_Moves 2A18  
                           _WhiteLight 2B50                                 tblptrh 000FF7  
                               tblptrl 000FF6                                 tblptru 000FF8  
                               stop@mL 001C                                 stop@mR 001E  
                    ??_initDCmotorsPWM 000B             i2color_writetoaddr@address 0004  
                     __end_of_turnLeft 1AAA                           ___xxtofl@arg 0013  
                         ___xxtofl@exp 0012                           ___xxtofl@val 0009  
                        ??_Update_RGBC 0016                             __accesstop 0060  
              __end_of__initialization 2848               __end_of_color_read_Clear 271C  
             __end_of_color_read_Green 26CC                 ?_I2C_2_Master_RepStart 0001  
                        ___rparam_used 000001                              ?_LED_init 0001  
                           ___fltol@f1 0049                       ?_color_read_Blue 000D  
                    _GreenInstructions 23F8                        _Interrupts_init 2A9A  
                       __pcstackCOMRAM 0001                 ?_LightBlueInstructions 002C  
                         __pidataBANK0 2B58                     ?_GreenInstructions 0027  
                       AppendTime@temp 0009                      detect_color@color 00B1  
                  __end_of_Timer0_init 2A5A                            MoveBuggy@mL 0037  
                          MoveBuggy@mR 0039                    OrangeInstructions@a 0032  
                  ??_GreenInstructions 002B                MoveBuggy@color_detected 0035  
                            ?_AntiPink 002E           ??_init_colorclick_interrupts 000D  
                  __end_of_Return_Time 28CC                      __end_of_MoveBuggy 13B8  
                           __pbssBANK0 0060                             __pbssBANK1 0100  
            __end_of_GreenInstructions 247E                             ??_LED_init 0009  
                              ?_LowISR 0001                      _color_writetoaddr 2A5A  
                         _T2CLKCONbits 000FBF                           ?_turnLeft135 0027  
                  __end_of_Update_RGBC 262C                     ?_color_writetoaddr 000B  
                              ?___wmul 0009               __end_of_PinkInstructions 2266  
                         ?_turnRight90 0022                    ??_color_writetoaddr 000C  
                            ?___xxtofl 0009                            ?_WhiteLight 0001  
                              _SP4BRGH 000EE6                                _SP4BRGL 000EE5  
                           ??_AntiPink 0032                                _SSP2ADD 000ED6  
                              _SSP2BUF 000ED5                             _color_flag 0076  
                         _detect_color 005C                __end_of_Interrupts_init 2AB8  
                    ?_BlueInstructions 0027                 color_writetoaddr@value 000B  
                     ??_color_read_Red 000F                                _HighISR 0008  
            __end_of_color_writetoaddr 2A7A                     WhiteInstructions@a 0044  
                   WhiteInstructions@c 0041                     ??_BlueInstructions 002B  
                      _RedInstructions 2372                     _I2C_2_Master_Start 2B32  
                  i2_I2C_2_Master_Idle 2984                     _I2C_2_Master_Write 2B06  
                              __Hparam 0000                    i2_I2C_2_Master_Stop 2B3C  
                              __Lparam 0000                      color_read_Red@tmp 0012  
                          _Timer0_init 2A3A                    GreenInstructions@mL 0027  
                  GreenInstructions@mR 0029             __end_of_fullSpeedBackwards 1B98  
                              ___fldiv 0AA6                                ___flmul 067C  
                              ___fltol 16D8                    ?_I2C_2_Master_Start 0001  
                         turnLeft135@a 002B                                ___lwdiv 247E  
                  ?_I2C_2_Master_Write 0001                           turnLeft90@mL 0022  
                         turnLeft90@mR 0024                                __pcinit 280C  
                              __ramtop 0E00                              ?_turnLeft 001C  
                              __ptext0 0E40                                __ptext1 20CA  
                              __ptext2 005C                                __ptext3 13B8  
                              __ptext4 16D8                                __ptext5 067C  
                              __ptext6 0AA6                                __ptext7 28CC  
                              __ptext8 2932                                __ptext9 2B50  
                 ?i2_I2C_2_Master_Idle 0001   __end_ofi2_init_colorclick_interrupts 280C  
         i2_init_colorclick_interrupts 27BC                              _T2CONbits 000FBD  
                          _Return_Time 2894                             ??___xxtofl 000D  
                 ?i2_I2C_2_Master_Stop 0001                              _T2HLTbits 000FBE  
                       main@lost_timer 00B7                          _RxBufWriteCnt 0054  
                         ?_AppendMoves 0009                                _tmr_ovf 0075  
                 ??_I2C_2_Master_Start 000A                   ??_I2C_2_Master_Write 000A  
                       __pintcode_body 2A18                   end_of_initialization 2848  
          __end_ofi2_color_writetoaddr 2A9A           Return_Anti_Moves@moves_index 0009  
                    RedInstructions@mL 0027                     main@color_detected 00BA  
                    RedInstructions@mR 0029                                int_func 2A18  
                          _Update_RGBC 25CE                      ?_color_click_init 0001  
                         turnRight90@a 0026             __end_of_OrangeInstructions 22EC  
                   ??_color_click_init 000D                              AntiPink@a 0034  
                              postdec2 000FDD                                postinc0 000FEE  
                              postinc2 000FDE                             _time_array 013C  
                           _time_index 0055                           ??_AntiYellow 0032  
                      _initDCmotorsPWM 20CA                             ??_turnLeft 0020  
                         ??_AppendTime 000F                              _PORTFbits 000F8E  
                   setMotorPWM@negDuty 001B                  ??i2_I2C_2_Master_Idle 0001  
                    __end_of_turnRight 18CE                  ??i2_I2C_2_Master_Stop 0002  
                        ___xxtofl@sign 0011                    YellowInstructions@a 002D  
                            _TRISAbits 000F81                     setMotorPWM@posDuty 001A  
                            _TRISBbits 000F82                              _TRISCbits 000F83  
                            _TRISDbits 000F84     __end_of_init_colorclick_interrupts 27BC  
        ?i2_init_colorclick_interrupts 0001             _init_colorclick_interrupts 276C  
                            _TRISEbits 000F85                              _TRISFbits 000F86  
                            _TRISGbits 000F87                              _TRISHbits 000F88  
                          ___fldiv@grs 002A                            ___fldiv@rem 0023  
                   PinkInstructions@mL 0027                     PinkInstructions@mR 0029  
                     fullSpeedAhead@mL 001C                       fullSpeedAhead@mR 001E  
              __end_of_RedInstructions 23F8               color_writetoaddr@address 000C  
              ??_I2C_2_Master_RepStart 000A                       ?_Interrupts_init 0001  
                          ___flmul@grs 003D                            _CCP1CONbits 000FAB  
                    ?_color_read_Clear 000D                           _EUSART4RXbuf 0060  
                         _EUSART4TXbuf 0100                            _CCP2CONbits 000FA7  
                    ?_color_read_Green 000D                     __end_of_AntiYellow 1E0A  
                          _CCP3CONbits 000F26                            _CCP4CONbits 000F22  
                   __end_of_AppendTime 2932                ??_LightBlueInstructions 0030  
                           main@motorL 00C3                             main@motorR 00CC  
                   ??_color_read_Clear 000F                     ??_color_read_Green 000F  
                           _turnLeft90 201C                         __end_of_LowISR 0058  
               AppendMoves@moves_index 0009                         _fullSpeedAhead 18CE  
                       __end_of___wmul 29D2                        AppendMoves@temp 000E  
                   detect_color@dist_B 00B4                     detect_color@dist_G 00B3  
                   detect_color@dist_R 00B2                      _int_threshold_low 004F  
                  color_read_Clear@tmp 0012                    start_initialization 280C  
                        _TxBufWriteCnt 0052                   OrangeInstructions@mL 002C  
                 OrangeInstructions@mR 002E                  Return_Anti_Moves@temp 000E  
                            _MoveBuggy 1134                    color_read_Green@tmp 0012  
                             ??_LowISR 0006                __end_of_initDCmotorsPWM 215A  
               __end_of_fullSpeedAhead 19BC                               ??___wmul 000D  
                          __pdataBANK0 00D5          i2I2C_2_Master_Write@data_byte 0002  
                    ?_PinkInstructions 0027                     Update_RGBC@tempval 0014  
                   ??_PinkInstructions 002B           __end_ofi2_I2C_2_Master_Start 2B50  
         __end_ofi2_I2C_2_Master_Write 2B1E                              ___fldiv@a 001B  
                            ___fldiv@b 0017                              ___flmul@a 0034  
                            ___flmul@b 0030                            __pbssCOMRAM 004F  
                         ??_WhiteLight 0009                          __pcstackBANK0 009F  
                 AppendTime@time_array 000D                   AppendTime@time_index 000B  
                     ?_RedInstructions 0027                               ?_HighISR 0001  
                           ?_MoveBuggy 0035                       ___lwdiv@dividend 000F  
                         ?_Timer0_init 0001                            ?_turnLeft90 0022  
                      ?_fullSpeedAhead 001C                     BlueInstructions@mL 0027  
                   BlueInstructions@mR 0029                              __pintcode 0008  
                   __end_of_WhiteLight 2B58                               ?___fldiv 0017  
                             ?___flmul 0030                               ?___fltol 0049  
                             ?___lwdiv 000F                            __pintcodelo 0018  
         ?_interrupts_clear_colorclick 0001                   I2C_2_Master_Read@ack 000B  
                    _WhiteInstructions 1B98                   I2C_2_Master_Read@tmp 000C  
                        ?_turnRight135 0027                           ?_Return_Time 0009  
                    _I2C_2_Master_Idle 295C                     _fullSpeedBackwards 1AAA  
                    _I2C_2_Master_Init 2932                      _I2C_2_Master_Read 2852  
                   ?_WhiteInstructions 003B                      _I2C_2_Master_Stop 2B28  
                         _RxBufReadCnt 0053                     GreenInstructions@a 002D  
                   ?_I2C_2_Master_Idle 0001                     ?_I2C_2_Master_Init 0001  
                   ?_I2C_2_Master_Read 0001                          ??_setMotorPWM 0018  
                   ?_I2C_2_Master_Stop 0001                       ___lwdiv@quotient 0013  
                          turnLeft90@a 0026               initDCmotorsPWM@PWMperiod 0009  
              LightBlueInstructions@mL 002C                LightBlueInstructions@mR 002E  
                  ?_fullSpeedBackwards 001C                    ??_WhiteInstructions 003F  
                  ??_I2C_2_Master_Idle 0009                    ??_I2C_2_Master_Init 0009  
                         ?_Update_RGBC 0014                    ??_I2C_2_Master_Read 000A  
                       ___wmul@product 000D                               _LATAbits 000F79  
                  ??_I2C_2_Master_Stop 000A                               _LATCbits 000F7B  
                             _LATDbits 000F7C                               _LATEbits 000F7D  
                             _LATFbits 000F7E                        Return_Time@temp 0010  
                             _LATGbits 000F7F                               _LATHbits 000F80  
                             _IPR0bits 000E1F                               _PIE0bits 000E29  
                             _LED_init 2AB8                       RedInstructions@a 002D  
                             _PIE4bits 000E2D                               i1u382_20 0036  
                             i1u382_21 0032                            turnRight@mL 001C  
                          turnRight@mR 001E                               i2u226_40 2994  
                             i2u226_41 2990                               i2u227_40 29AA  
                            _lost_flag 0074                               i2u227_41 29A6  
                             _PIR0bits 000E33                               i2u383_40 2A28  
                             i2u383_41 2A24                               _PIR4bits 000E37  
                             i2u487_47 27CC                       ?_initDCmotorsPWM 0009  
                             _SSP2CON2 000EDA                               _SSP2STAT 000ED8  
                 ??_fullSpeedBackwards 0020              __end_of_WhiteInstructions 1C84  
                   _OrangeInstructions 2266                      PinkInstructions@a 002D  
            __end_of_I2C_2_Master_Idle 2984              __end_of_I2C_2_Master_Init 295C  
            __end_of_I2C_2_Master_Read 2894                      ___wmul@multiplier 0009  
                       ??_turnRight135 002B              __end_of_I2C_2_Master_Stop 2B32  
                         setMotorPWM@m 0016            I2C_2_Master_Write@data_byte 000A  
        ??_interrupts_clear_colorclick 000E             __end_of_YellowInstructions 21E0  
                    ??_color_read_Blue 000F                    ?_OrangeInstructions 002C  
                         _TxBufReadCnt 0051            ?_init_colorclick_interrupts 0001  
                             _AntiPink 1E0A               i2color_writetoaddr@value 0003  
                            _turnRight 17E0                    WhiteInstructions@mL 003B  
                  WhiteInstructions@mR 003D          __end_of_I2C_2_Master_RepStart 2B28  
                   color_read_Blue@tmp 0012                    __end_of_setMotorPWM 16D8  
                          ??_MoveBuggy 003B                   i2_I2C_2_Master_Start 2B46  
                 i2_I2C_2_Master_Write 2B12                           AntiYellow@mL 002E  
                         AntiYellow@mR 0030                               __Hrparam 0000  
                 ??_OrangeInstructions 0030                               __Lrparam 0000  
        __end_of_LightBlueInstructions 2372            __end_ofi2_I2C_2_Master_Idle 29AC  
          __end_ofi2_I2C_2_Master_Stop 2B46                         turnRight135@mL 0027  
                       turnRight135@mR 0029                          turnLeft135@mL 0027  
                        turnLeft135@mR 0029                             _ANSELBbits 000E9A  
                           _ANSELDbits 000EA7                             _ANSELFbits 000EB4  
                             ___xxtofl 13B8                             _T0CON0bits 000FD5  
                           _T0CON1bits 000FD6                        ___lwdiv@divisor 0011  
                    BlueInstructions@a 002D                        ___lwdiv@counter 0015  
                           ?_turnRight 001C                               __ptext10 1B98  
                             __ptext11 2894                               __ptext20 29D2  
                             __ptext12 29F6                               __ptext21 1D58  
                             __ptext13 1134                               __ptext30 19BC  
                             __ptext22 2372                               __ptext14 215A  
                             __ptext31 1C84                               __ptext23 1F6E  
                             __ptext15 21E0                               __ptext40 271C  
                             __ptext32 1AAA                               __ptext24 17E0  
                             __ptext16 2266                               __ptext41 2B1E  
                             __ptext33 156C                               __ptext25 1E0A  
                             __ptext17 24F2                               __ptext50 2B28  
                             __ptext42 2852                               __ptext34 29AC  
                             __ptext26 18CE                               __ptext18 22EC  
                             __ptext51 2B32                               __ptext43 2A3A  
                             __ptext35 247E                               __ptext27 23F8  
                             __ptext19 2560                               __ptext60 2B3C  
                             __ptext52 295C                               __ptext44 2AB8  
                             __ptext36 25CE                               __ptext28 1EBC  
                             __ptext61 2B46                               __ptext53 2900  
                             __ptext45 2A9A                               __ptext37 262C  
                             __ptext29 201C                               __ptext62 2984  
                             __ptext46 2AD2                               __ptext38 267C  
                             __ptext47 276C                               __ptext39 26CC  
                             __ptext56 2AEC                               __ptext48 2A5A  
                             __ptext57 27BC                               __ptext49 2B06  
                             __ptext58 2A7A                               __ptext59 2B12  
                         _SSP2CON1bits 000ED9                           _SSP2CON2bits 000EDA  
      ??i2_interrupts_clear_colorclick 0006                 LightBlueInstructions@a 0032  
                           turnLeft@mL 001C                             turnLeft@mR 001E  
                ?i2_I2C_2_Master_Start 0001                  ?i2_I2C_2_Master_Write 0001  
                        ??_turnLeft135 002B                               isa$xinst 000000  
                           _RC4STAbits 000EE7                               int$flags 0057  
                        ??_turnRight90 0026                       _BlueInstructions 1EBC  
                             _turnLeft 19BC                             _INTCONbits 000FF2  
                          AntiYellow@a 0034                            _setMotorPWM 156C  
                        ?_detect_color 00A3                          turnRight135@a 002B  
                             intlevel1 0000                               intlevel2 0000  
                        turnRight90@mL 0022                          turnRight90@mR 0024  
                     ??_fullSpeedAhead 0020                   __end_of_turnRight135 2560  
                         ??_turnLeft90 0026                             AntiPink@mL 002E  
                           AntiPink@mR 0030                            _moves_index 0056  
                     _color_click_init 28CC                    __end_of_turnLeft135 25CE  
                           _SSP2DATPPS 000E1D                             _SSP2CLKPPS 000E1C  
                  __end_of_turnRight90 201C                          ??_AppendMoves 000D  
                       ??_detect_color 00A5                            ??_turnRight 0020  
                   __end_of_turnLeft90 20CA                             _TX4STAbits 000EE8  
               ??i2_I2C_2_Master_Start 0002                 ??i2_I2C_2_Master_Write 0002  
                 YellowInstructions@mL 0027                   YellowInstructions@mR 0029  
__end_ofi2_interrupts_clear_colorclick 2B06          i2_interrupts_clear_colorclick 2AEC  
