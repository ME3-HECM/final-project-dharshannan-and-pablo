

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Mar 13 20:25:41 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    68                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    69                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    78                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    79                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    80                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    81                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    82   000000                     
    83                           ; Generated 06/04/2022 GMT
    84                           ; 
    85                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    86                           ; All rights reserved.
    87                           ; 
    88                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    89                           ; 
    90                           ; Redistribution and use in source and binary forms, with or without modification, are
    91                           ; permitted provided that the following conditions are met:
    92                           ; 
    93                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    94                           ;        conditions and the following disclaimer.
    95                           ; 
    96                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    97                           ;        of conditions and the following disclaimer in the documentation and/or other
    98                           ;        materials provided with the distribution. Publication is not required when
    99                           ;        this file is used in an embedded application.
   100                           ; 
   101                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   102                           ;        software without specific prior written permission.
   103                           ; 
   104                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   105                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   106                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   107                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   108                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   109                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   110                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   111                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   112                           ; 
   113                           ; 
   114                           ; Code-generator required, PIC18F67K40 Definitions
   115                           ; 
   116                           ; SFR Addresses
   117   000000                     
   118                           	psect	idataBANK0
   119   002B52                     __pidataBANK0:
   120                           	callstack 0
   121                           
   122                           ;initializer for _int_threshold_high
   123   002B52  0B54               	dw	2900
   124   000000                     _T0CON0bits	set	4053
   125   000000                     _T0CON1bits	set	4054
   126   000000                     _TX4REG	set	3812
   127   000000                     _RC4STAbits	set	3815
   128   000000                     _SP4BRGH	set	3814
   129   000000                     _TRISBbits	set	3970
   130   000000                     _TRISCbits	set	3971
   131   000000                     _TRISEbits	set	3973
   132   000000                     _LATEbits	set	3965
   133   000000                     _LATFbits	set	3966
   134   000000                     _LATGbits	set	3967
   135   000000                     _TRISFbits	set	3974
   136   000000                     _TRISGbits	set	3975
   137   000000                     _SSP2CON2bits	set	3802
   138   000000                     _RX4PPS	set	3605
   139   000000                     _SSP2CLKPPS	set	3612
   140   000000                     _SSP2DATPPS	set	3613
   141   000000                     _ANSELDbits	set	3751
   142   000000                     _SSP2ADD	set	3798
   143   000000                     _SSP2CON1bits	set	3801
   144   000000                     _RC4REG	set	3811
   145   000000                     _SP4BRGL	set	3813
   146   000000                     _TX4STAbits	set	3816
   147   000000                     _BAUD4CONbits	set	3817
   148   000000                     _LATAbits	set	3961
   149   000000                     _LATDbits	set	3964
   150   000000                     _LATHbits	set	3968
   151   000000                     _TRISAbits	set	3969
   152   000000                     _SSP2CON2	set	3802
   153   000000                     _TRISDbits	set	3972
   154   000000                     _CCPR4H	set	3873
   155   000000                     _CCPR3H	set	3877
   156   000000                     _SSP2STAT	set	3800
   157   000000                     _ANSELFbits	set	3764
   158   000000                     _SSP2BUF	set	3797
   159   000000                     _IPR0bits	set	3615
   160   000000                     _PIE0bits	set	3625
   161   000000                     _RC7PPS	set	3689
   162   000000                     _RD5PPS	set	3695
   163   000000                     _RE2PPS	set	3700
   164   000000                     _RD6PPS	set	3696
   165   000000                     _PORTFbits	set	3982
   166   000000                     _T2PR	set	4028
   167   000000                     _T2CONbits	set	4029
   168   000000                     _TRISHbits	set	3976
   169   000000                     _CCPR2H	set	4006
   170   000000                     _CCPR1H	set	4010
   171   000000                     _LATCbits	set	3963
   172   000000                     _RE4PPS	set	3702
   173   000000                     _RG6PPS	set	3720
   174   000000                     _ANSELBbits	set	3738
   175   000000                     _TMR0L	set	4051
   176   000000                     _TMR0H	set	4052
   177   000000                     _INTCONbits	set	4082
   178   000000                     _T2CLKCONbits	set	4031
   179   000000                     _T2HLTbits	set	4030
   180   000000                     _CCP1CONbits	set	4011
   181   000000                     _CCPTMRS0bits	set	4013
   182   000000                     _CCP2CONbits	set	4007
   183   000000                     _CCP3CONbits	set	3878
   184   000000                     _CCP4CONbits	set	3874
   185   000000                     _PIE4bits	set	3629
   186   000000                     _PIR0bits	set	3635
   187   000000                     _PIR4bits	set	3639
   188   000000                     _RC0PPS	set	3682
   189                           
   190                           ; #config settings
   191                           
   192                           	psect	cinit
   193   002806                     __pcinit:
   194                           	callstack 0
   195   002806                     start_initialization:
   196                           	callstack 0
   197   002806                     __initialization:
   198                           	callstack 0
   199                           
   200                           ; Initialize objects allocated to BANK0 (2 bytes)
   201                           ; load TBLPTR registers with __pidataBANK0
   202   002806  0E52               	movlw	low __pidataBANK0
   203   002808  6EF6               	movwf	tblptrl,c
   204   00280A  0E2B               	movlw	high __pidataBANK0
   205   00280C  6EF7               	movwf	tblptrh,c
   206   00280E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   207   002810  6EF8               	movwf	tblptru,c
   208   002812  0009               	tblrd		*+	;fetch initializer
   209   002814  CFF5 F0D5          	movff	tablat,__pdataBANK0
   210   002818  0009               	tblrd		*+	;fetch initializer
   211   00281A  CFF5 F0D6          	movff	tablat,__pdataBANK0+1
   212                           
   213                           ; Clear objects allocated to BANK1 (140 bytes)
   214   00281E  EE01  F000         	lfsr	0,__pbssBANK1
   215   002822  0E8C               	movlw	140
   216   002824                     clear_0:
   217   002824  6AEE               	clrf	postinc0,c
   218   002826  06E8               	decf	wreg,f,c
   219   002828  E1FD               	bnz	clear_0
   220                           
   221                           ; Clear objects allocated to BANK0 (63 bytes)
   222   00282A  EE00  F060         	lfsr	0,__pbssBANK0
   223   00282E  0E3F               	movlw	63
   224   002830                     clear_1:
   225   002830  6AEE               	clrf	postinc0,c
   226   002832  06E8               	decf	wreg,f,c
   227   002834  E1FD               	bnz	clear_1
   228                           
   229                           ; Clear objects allocated to COMRAM (8 bytes)
   230   002836  EE00  F04F         	lfsr	0,__pbssCOMRAM
   231   00283A  0E08               	movlw	8
   232   00283C                     clear_2:
   233   00283C  6AEE               	clrf	postinc0,c
   234   00283E  06E8               	decf	wreg,f,c
   235   002840  E1FD               	bnz	clear_2
   236   002842                     end_of_initialization:
   237                           	callstack 0
   238   002842                     __end_of__initialization:
   239                           	callstack 0
   240   002842  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   241   002844  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   242   002846  0100               	movlb	0
   243   002848  EF20  F007         	goto	_main	;jump to C main() function
   244                           
   245                           	psect	bssCOMRAM
   246   00004F                     __pbssCOMRAM:
   247                           	callstack 0
   248   00004F                     _int_threshold_low:
   249                           	callstack 0
   250   00004F                     	ds	2
   251   000051                     _TxBufReadCnt:
   252                           	callstack 0
   253   000051                     	ds	1
   254   000052                     _TxBufWriteCnt:
   255                           	callstack 0
   256   000052                     	ds	1
   257   000053                     _RxBufReadCnt:
   258                           	callstack 0
   259   000053                     	ds	1
   260   000054                     _RxBufWriteCnt:
   261                           	callstack 0
   262   000054                     	ds	1
   263   000055                     _moves_index:
   264                           	callstack 0
   265   000055                     	ds	1
   266   000056                     _time_index:
   267                           	callstack 0
   268   000056                     	ds	1
   269                           
   270                           	psect	bssBANK0
   271   000060                     __pbssBANK0:
   272                           	callstack 0
   273   000060                     _EUSART4RXbuf:
   274                           	callstack 0
   275   000060                     	ds	20
   276   000074                     _lost_flag:
   277                           	callstack 0
   278   000074                     	ds	1
   279   000075                     _tmr_ovf:
   280                           	callstack 0
   281   000075                     	ds	1
   282   000076                     _color_flag:
   283                           	callstack 0
   284   000076                     	ds	1
   285   000077                     _anti_moves_array:
   286                           	callstack 0
   287   000077                     	ds	40
   288                           
   289                           	psect	dataBANK0
   290   0000D5                     __pdataBANK0:
   291                           	callstack 0
   292   0000D5                     _int_threshold_high:
   293                           	callstack 0
   294   0000D5                     	ds	2
   295                           
   296                           	psect	bssBANK1
   297   000100                     __pbssBANK1:
   298                           	callstack 0
   299   000100                     _EUSART4TXbuf:
   300                           	callstack 0
   301   000100                     	ds	60
   302   00013C                     _time_array:
   303                           	callstack 0
   304   00013C                     	ds	80
   305                           
   306                           	psect	cstackBANK0
   307   00009F                     __pcstackBANK0:
   308                           	callstack 0
   309   00009F                     ??___fltol:
   310                           
   311                           ; 1 bytes @ 0x0
   312   00009F                     	ds	4
   313   0000A3                     detect_color@tempval:
   314                           	callstack 0
   315                           
   316                           ; 2 bytes @ 0x4
   317   0000A3                     	ds	2
   318   0000A5                     ??_detect_color:
   319                           
   320                           ; 1 bytes @ 0x6
   321   0000A5                     	ds	12
   322   0000B1                     detect_color@color:
   323                           	callstack 0
   324                           
   325                           ; 1 bytes @ 0x12
   326   0000B1                     	ds	1
   327   0000B2                     detect_color@dist_R:
   328                           	callstack 0
   329                           
   330                           ; 1 bytes @ 0x13
   331   0000B2                     	ds	1
   332   0000B3                     detect_color@dist_G:
   333                           	callstack 0
   334                           
   335                           ; 1 bytes @ 0x14
   336   0000B3                     	ds	1
   337   0000B4                     detect_color@dist_B:
   338                           	callstack 0
   339                           
   340                           ; 1 bytes @ 0x15
   341   0000B4                     	ds	1
   342   0000B5                     ??_main:
   343                           
   344                           ; 1 bytes @ 0x16
   345   0000B5                     	ds	2
   346   0000B7                     main@lost_timer:
   347                           	callstack 0
   348                           
   349                           ; 1 bytes @ 0x18
   350   0000B7                     	ds	1
   351   0000B8                     main@b:
   352                           	callstack 0
   353                           
   354                           ; 2 bytes @ 0x19
   355   0000B8                     	ds	2
   356   0000BA                     main@color_detected:
   357                           	callstack 0
   358                           
   359                           ; 1 bytes @ 0x1B
   360   0000BA                     	ds	1
   361   0000BB                     main@initial_color:
   362                           	callstack 0
   363                           
   364                           ; 8 bytes @ 0x1C
   365   0000BB                     	ds	8
   366   0000C3                     main@motorL:
   367                           	callstack 0
   368                           
   369                           ; 9 bytes @ 0x24
   370   0000C3                     	ds	9
   371   0000CC                     main@motorR:
   372                           	callstack 0
   373                           
   374                           ; 9 bytes @ 0x2D
   375   0000CC                     	ds	9
   376                           
   377                           	psect	cstackCOMRAM
   378   000001                     __pcstackCOMRAM:
   379                           	callstack 0
   380   000001                     ??i2_I2C_2_Master_Idle:
   381   000001                     
   382                           ; 1 bytes @ 0x0
   383   000001                     	ds	1
   384   000002                     i2I2C_2_Master_Write@data_byte:
   385                           	callstack 0
   386                           
   387                           ; 1 bytes @ 0x1
   388   000002                     	ds	1
   389   000003                     i2color_writetoaddr@value:
   390                           	callstack 0
   391                           
   392                           ; 1 bytes @ 0x2
   393   000003                     	ds	1
   394   000004                     i2color_writetoaddr@address:
   395                           	callstack 0
   396                           
   397                           ; 1 bytes @ 0x3
   398   000004                     	ds	1
   399   000005                     ??i2_init_colorclick_interrupts:
   400                           
   401                           ; 1 bytes @ 0x4
   402   000005                     	ds	1
   403   000006                     ??_LowISR:
   404   000006                     
   405                           ; 1 bytes @ 0x5
   406   000006                     	ds	3
   407   000009                     ??_I2C_2_Master_Idle:
   408   000009                     ?_Return_Time:
   409                           	callstack 0
   410   000009                     ?___wmul:
   411                           	callstack 0
   412   000009                     ?___xxtofl:
   413                           	callstack 0
   414   000009                     initDCmotorsPWM@PWMperiod:
   415                           	callstack 0
   416   000009                     AppendMoves@moves_index:
   417                           	callstack 0
   418   000009                     AppendTime@temp:
   419                           	callstack 0
   420   000009                     Return_Anti_Moves@moves_index:
   421                           	callstack 0
   422   000009                     Return_Time@time_index:
   423                           	callstack 0
   424   000009                     ___wmul@multiplier:
   425                           	callstack 0
   426   000009                     ___xxtofl@val:
   427                           	callstack 0
   428                           
   429                           ; 4 bytes @ 0x8
   430   000009                     	ds	1
   431   00000A                     ??_I2C_2_Master_Read:
   432   00000A                     I2C_2_Master_Write@data_byte:
   433                           	callstack 0
   434                           
   435                           ; 1 bytes @ 0x9
   436   00000A                     	ds	1
   437   00000B                     color_writetoaddr@value:
   438                           	callstack 0
   439   00000B                     I2C_2_Master_Read@ack:
   440                           	callstack 0
   441   00000B                     AppendMoves@anti_moves_array:
   442                           	callstack 0
   443   00000B                     AppendTime@time_index:
   444                           	callstack 0
   445   00000B                     Return_Anti_Moves@anti_moves_array:
   446                           	callstack 0
   447   00000B                     Return_Time@time_array:
   448                           	callstack 0
   449   00000B                     ___wmul@multiplicand:
   450                           	callstack 0
   451                           
   452                           ; 2 bytes @ 0xA
   453   00000B                     	ds	1
   454   00000C                     color_writetoaddr@address:
   455                           	callstack 0
   456   00000C                     I2C_2_Master_Read@tmp:
   457                           	callstack 0
   458                           
   459                           ; 1 bytes @ 0xB
   460   00000C                     	ds	1
   461   00000D                     ??_Return_Time:
   462   00000D                     ??_Return_Anti_Moves:
   463   00000D                     ??_AppendMoves:
   464   00000D                     ??_color_click_init:
   465   00000D                     ??_init_colorclick_interrupts:
   466   00000D                     ??___xxtofl:
   467   00000D                     ?_color_read_Red:
   468                           	callstack 0
   469   00000D                     ?_color_read_Green:
   470                           	callstack 0
   471   00000D                     ?_color_read_Blue:
   472                           	callstack 0
   473   00000D                     ?_color_read_Clear:
   474                           	callstack 0
   475   00000D                     AppendTime@time_array:
   476                           	callstack 0
   477   00000D                     ___wmul@product:
   478                           	callstack 0
   479                           
   480                           ; 2 bytes @ 0xC
   481   00000D                     	ds	1
   482   00000E                     AppendMoves@temp:
   483                           	callstack 0
   484   00000E                     Return_Anti_Moves@temp:
   485                           	callstack 0
   486                           
   487                           ; 1 bytes @ 0xD
   488   00000E                     	ds	1
   489   00000F                     ??_AppendTime:
   490   00000F                     ??_color_read_Red:
   491   00000F                     ??_color_read_Green:
   492   00000F                     ??_color_read_Blue:
   493   00000F                     ??_color_read_Clear:
   494   00000F                     ?___lwdiv:
   495                           	callstack 0
   496   00000F                     ___lwdiv@dividend:
   497                           	callstack 0
   498                           
   499                           ; 2 bytes @ 0xE
   500   00000F                     	ds	1
   501   000010                     Return_Time@temp:
   502                           	callstack 0
   503                           
   504                           ; 2 bytes @ 0xF
   505   000010                     	ds	1
   506   000011                     ___xxtofl@sign:
   507                           	callstack 0
   508   000011                     ___lwdiv@divisor:
   509                           	callstack 0
   510                           
   511                           ; 2 bytes @ 0x10
   512   000011                     	ds	1
   513   000012                     ___xxtofl@exp:
   514                           	callstack 0
   515   000012                     color_read_Red@tmp:
   516                           	callstack 0
   517   000012                     color_read_Green@tmp:
   518                           	callstack 0
   519   000012                     color_read_Blue@tmp:
   520                           	callstack 0
   521   000012                     color_read_Clear@tmp:
   522                           	callstack 0
   523                           
   524                           ; 2 bytes @ 0x11
   525   000012                     	ds	1
   526   000013                     ___lwdiv@quotient:
   527                           	callstack 0
   528   000013                     ___xxtofl@arg:
   529                           	callstack 0
   530                           
   531                           ; 4 bytes @ 0x12
   532   000013                     	ds	1
   533   000014                     Update_RGBC@tempval:
   534                           	callstack 0
   535                           
   536                           ; 2 bytes @ 0x13
   537   000014                     	ds	1
   538   000015                     ___lwdiv@counter:
   539                           	callstack 0
   540                           
   541                           ; 1 bytes @ 0x14
   542   000015                     	ds	1
   543   000016                     setMotorPWM@m:
   544                           	callstack 0
   545                           
   546                           ; 2 bytes @ 0x15
   547   000016                     	ds	1
   548   000017                     ?___fldiv:
   549                           	callstack 0
   550   000017                     ___fldiv@b:
   551                           	callstack 0
   552                           
   553                           ; 4 bytes @ 0x16
   554   000017                     	ds	1
   555   000018                     ??_setMotorPWM:
   556                           
   557                           ; 1 bytes @ 0x17
   558   000018                     	ds	2
   559   00001A                     setMotorPWM@posDuty:
   560                           	callstack 0
   561                           
   562                           ; 1 bytes @ 0x19
   563   00001A                     	ds	1
   564   00001B                     setMotorPWM@negDuty:
   565                           	callstack 0
   566   00001B                     ___fldiv@a:
   567                           	callstack 0
   568                           
   569                           ; 4 bytes @ 0x1A
   570   00001B                     	ds	1
   571   00001C                     stop@mL:
   572                           	callstack 0
   573   00001C                     turnLeft@mL:
   574                           	callstack 0
   575   00001C                     turnRight@mL:
   576                           	callstack 0
   577   00001C                     fullSpeedAhead@mL:
   578                           	callstack 0
   579   00001C                     fullSpeedBackwards@mL:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0x1B
   583   00001C                     	ds	2
   584   00001E                     stop@mR:
   585                           	callstack 0
   586   00001E                     turnLeft@mR:
   587                           	callstack 0
   588   00001E                     turnRight@mR:
   589                           	callstack 0
   590   00001E                     fullSpeedAhead@mR:
   591                           	callstack 0
   592   00001E                     fullSpeedBackwards@mR:
   593                           	callstack 0
   594                           
   595                           ; 2 bytes @ 0x1D
   596   00001E                     	ds	1
   597   00001F                     ??___fldiv:
   598                           
   599                           ; 1 bytes @ 0x1E
   600   00001F                     	ds	1
   601   000020                     ??_stop:
   602   000020                     ??_turnLeft:
   603   000020                     ??_turnRight:
   604   000020                     ??_fullSpeedAhead:
   605   000020                     ??_fullSpeedBackwards:
   606                           
   607                           ; 1 bytes @ 0x1F
   608   000020                     	ds	2
   609   000022                     turnLeft90@mL:
   610                           	callstack 0
   611   000022                     turnRight90@mL:
   612                           	callstack 0
   613                           
   614                           ; 2 bytes @ 0x21
   615   000022                     	ds	1
   616   000023                     ___fldiv@rem:
   617                           	callstack 0
   618                           
   619                           ; 4 bytes @ 0x22
   620   000023                     	ds	1
   621   000024                     turnLeft90@mR:
   622                           	callstack 0
   623   000024                     turnRight90@mR:
   624                           	callstack 0
   625                           
   626                           ; 2 bytes @ 0x23
   627   000024                     	ds	2
   628   000026                     turnLeft90@a:
   629                           	callstack 0
   630   000026                     turnRight90@a:
   631                           	callstack 0
   632                           
   633                           ; 1 bytes @ 0x25
   634   000026                     	ds	1
   635   000027                     ___fldiv@sign:
   636                           	callstack 0
   637   000027                     turnRight135@mL:
   638                           	callstack 0
   639   000027                     turnLeft135@mL:
   640                           	callstack 0
   641   000027                     RedInstructions@mL:
   642                           	callstack 0
   643   000027                     GreenInstructions@mL:
   644                           	callstack 0
   645   000027                     BlueInstructions@mL:
   646                           	callstack 0
   647   000027                     YellowInstructions@mL:
   648                           	callstack 0
   649   000027                     PinkInstructions@mL:
   650                           	callstack 0
   651                           
   652                           ; 2 bytes @ 0x26
   653   000027                     	ds	1
   654   000028                     ___fldiv@new_exp:
   655                           	callstack 0
   656                           
   657                           ; 2 bytes @ 0x27
   658   000028                     	ds	1
   659   000029                     turnRight135@mR:
   660                           	callstack 0
   661   000029                     turnLeft135@mR:
   662                           	callstack 0
   663   000029                     RedInstructions@mR:
   664                           	callstack 0
   665   000029                     GreenInstructions@mR:
   666                           	callstack 0
   667   000029                     BlueInstructions@mR:
   668                           	callstack 0
   669   000029                     YellowInstructions@mR:
   670                           	callstack 0
   671   000029                     PinkInstructions@mR:
   672                           	callstack 0
   673                           
   674                           ; 2 bytes @ 0x28
   675   000029                     	ds	1
   676   00002A                     ___fldiv@grs:
   677                           	callstack 0
   678                           
   679                           ; 4 bytes @ 0x29
   680   00002A                     	ds	1
   681   00002B                     ??_RedInstructions:
   682   00002B                     ??_GreenInstructions:
   683   00002B                     ??_BlueInstructions:
   684   00002B                     ??_YellowInstructions:
   685   00002B                     ??_PinkInstructions:
   686   00002B                     turnRight135@a:
   687                           	callstack 0
   688   00002B                     turnLeft135@a:
   689                           	callstack 0
   690                           
   691                           ; 1 bytes @ 0x2A
   692   00002B                     	ds	1
   693   00002C                     OrangeInstructions@mL:
   694                           	callstack 0
   695   00002C                     LightBlueInstructions@mL:
   696                           	callstack 0
   697                           
   698                           ; 2 bytes @ 0x2B
   699   00002C                     	ds	1
   700   00002D                     RedInstructions@a:
   701                           	callstack 0
   702   00002D                     GreenInstructions@a:
   703                           	callstack 0
   704   00002D                     BlueInstructions@a:
   705                           	callstack 0
   706   00002D                     YellowInstructions@a:
   707                           	callstack 0
   708   00002D                     PinkInstructions@a:
   709                           	callstack 0
   710                           
   711                           ; 1 bytes @ 0x2C
   712   00002D                     	ds	1
   713   00002E                     ___fldiv@bexp:
   714                           	callstack 0
   715   00002E                     OrangeInstructions@mR:
   716                           	callstack 0
   717   00002E                     LightBlueInstructions@mR:
   718                           	callstack 0
   719   00002E                     AntiYellow@mL:
   720                           	callstack 0
   721   00002E                     AntiPink@mL:
   722                           	callstack 0
   723                           
   724                           ; 2 bytes @ 0x2D
   725   00002E                     	ds	1
   726   00002F                     ___fldiv@aexp:
   727                           	callstack 0
   728                           
   729                           ; 1 bytes @ 0x2E
   730   00002F                     	ds	1
   731   000030                     ??_OrangeInstructions:
   732   000030                     ??_LightBlueInstructions:
   733   000030                     ?___flmul:
   734                           	callstack 0
   735   000030                     AntiYellow@mR:
   736                           	callstack 0
   737   000030                     AntiPink@mR:
   738                           	callstack 0
   739   000030                     ___flmul@b:
   740                           	callstack 0
   741                           
   742                           ; 4 bytes @ 0x2F
   743   000030                     	ds	2
   744   000032                     ??_AntiYellow:
   745   000032                     ??_AntiPink:
   746   000032                     OrangeInstructions@a:
   747                           	callstack 0
   748   000032                     LightBlueInstructions@a:
   749                           	callstack 0
   750                           
   751                           ; 1 bytes @ 0x31
   752   000032                     	ds	2
   753   000034                     AntiYellow@a:
   754                           	callstack 0
   755   000034                     AntiPink@a:
   756                           	callstack 0
   757   000034                     ___flmul@a:
   758                           	callstack 0
   759                           
   760                           ; 4 bytes @ 0x33
   761   000034                     	ds	1
   762   000035                     MoveBuggy@color_detected:
   763                           	callstack 0
   764                           
   765                           ; 2 bytes @ 0x34
   766   000035                     	ds	2
   767   000037                     MoveBuggy@mL:
   768                           	callstack 0
   769                           
   770                           ; 2 bytes @ 0x36
   771   000037                     	ds	1
   772   000038                     ??___flmul:
   773                           
   774                           ; 1 bytes @ 0x37
   775   000038                     	ds	1
   776   000039                     MoveBuggy@mR:
   777                           	callstack 0
   778                           
   779                           ; 2 bytes @ 0x38
   780   000039                     	ds	2
   781   00003B                     WhiteInstructions@mL:
   782                           	callstack 0
   783                           
   784                           ; 2 bytes @ 0x3A
   785   00003B                     	ds	1
   786   00003C                     ___flmul@sign:
   787                           	callstack 0
   788                           
   789                           ; 1 bytes @ 0x3B
   790   00003C                     	ds	1
   791   00003D                     WhiteInstructions@mR:
   792                           	callstack 0
   793   00003D                     ___flmul@grs:
   794                           	callstack 0
   795                           
   796                           ; 4 bytes @ 0x3C
   797   00003D                     	ds	2
   798   00003F                     ??_WhiteInstructions:
   799                           
   800                           ; 1 bytes @ 0x3E
   801   00003F                     	ds	2
   802   000041                     ___flmul@aexp:
   803                           	callstack 0
   804   000041                     WhiteInstructions@c:
   805                           	callstack 0
   806                           
   807                           ; 2 bytes @ 0x40
   808   000041                     	ds	1
   809   000042                     ___flmul@bexp:
   810                           	callstack 0
   811                           
   812                           ; 1 bytes @ 0x41
   813   000042                     	ds	1
   814   000043                     WhiteInstructions@anticolor:
   815                           	callstack 0
   816   000043                     ___flmul@prod:
   817                           	callstack 0
   818                           
   819                           ; 4 bytes @ 0x42
   820   000043                     	ds	1
   821   000044                     WhiteInstructions@a:
   822                           	callstack 0
   823                           
   824                           ; 2 bytes @ 0x43
   825   000044                     	ds	3
   826   000047                     ___flmul@temp:
   827                           	callstack 0
   828                           
   829                           ; 2 bytes @ 0x46
   830   000047                     	ds	2
   831   000049                     ?___fltol:
   832                           	callstack 0
   833   000049                     ___fltol@f1:
   834                           	callstack 0
   835                           
   836                           ; 4 bytes @ 0x48
   837   000049                     	ds	4
   838   00004D                     ___fltol@sign1:
   839                           	callstack 0
   840                           
   841                           ; 1 bytes @ 0x4C
   842   00004D                     	ds	1
   843   00004E                     ___fltol@exp1:
   844                           	callstack 0
   845                           
   846                           ; 1 bytes @ 0x4D
   847   00004E                     	ds	1
   848                           
   849 ;;
   850 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   851 ;;
   852 ;; *************** function _main *****************
   853 ;; Defined at:
   854 ;;		line 22 in file "main_motor.c"
   855 ;; Parameters:    Size  Location     Type
   856 ;;		None
   857 ;; Auto vars:     Size  Location     Type
   858 ;;  b               2   25[BANK0 ] unsigned int 
   859 ;;  motorR          9   45[BANK0 ] struct DC_motor
   860 ;;  motorL          9   36[BANK0 ] struct DC_motor
   861 ;;  initial_colo    8   28[BANK0 ] struct RGB_val
   862 ;;  color_detect    1   27[BANK0 ] unsigned char 
   863 ;;  lost_timer      1   24[BANK0 ] unsigned char 
   864 ;; Return value:  Size  Location     Type
   865 ;;                  1    wreg      void 
   866 ;; Registers used:
   867 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   868 ;; Tracked objects:
   869 ;;		On entry : 0/0
   870 ;;		On exit  : 0/0
   871 ;;		Unchanged: 0/0
   872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   874 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   875 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   876 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   877 ;;Total ram usage:       32 bytes
   878 ;; Hardware stack levels required when called: 15
   879 ;; This function calls:
   880 ;;		_AppendTime
   881 ;;		_Interrupts_init
   882 ;;		_LED_init
   883 ;;		_MoveBuggy
   884 ;;		_Timer0_init
   885 ;;		_Update_RGBC
   886 ;;		_WhiteInstructions
   887 ;;		_WhiteLight
   888 ;;		_color_click_init
   889 ;;		_detect_color
   890 ;;		_fullSpeedAhead
   891 ;;		_initDCmotorsPWM
   892 ;;		_stop
   893 ;; This function is called by:
   894 ;;		Startup code after reset
   895 ;; This function uses a non-reentrant model
   896 ;;
   897                           
   898                           	psect	text0
   899   000E40                     __ptext0:
   900                           	callstack 0
   901   000E40                     _main:
   902                           	callstack 16
   903   000E40                     
   904                           ;main_motor.c: 25:     RGB_val initial_color;;main_motor.c: 26:     initial_color.R = 0;
   905   000E40  0E00               	movlw	0
   906   000E42  0100               	movlb	0	; () banked
   907   000E44  6FBC               	movwf	(main@initial_color+1)& (0+255),b
   908   000E46  0E00               	movlw	0
   909   000E48  6FBB               	movwf	main@initial_color& (0+255),b
   910                           
   911                           ;main_motor.c: 27:     initial_color.G = 0;
   912   000E4A  0E00               	movlw	0
   913   000E4C  6FBE               	movwf	(main@initial_color+3)& (0+255),b
   914   000E4E  0E00               	movlw	0
   915   000E50  6FBD               	movwf	(main@initial_color+2)& (0+255),b
   916                           
   917                           ;main_motor.c: 28:     initial_color.B = 0;
   918   000E52  0E00               	movlw	0
   919   000E54  6FC0               	movwf	(main@initial_color+5)& (0+255),b
   920   000E56  0E00               	movlw	0
   921   000E58  6FBF               	movwf	(main@initial_color+4)& (0+255),b
   922                           
   923                           ;main_motor.c: 29:     initial_color.C = 0;
   924   000E5A  0E00               	movlw	0
   925   000E5C  6FC2               	movwf	(main@initial_color+7)& (0+255),b
   926   000E5E  0E00               	movlw	0
   927   000E60  6FC1               	movwf	(main@initial_color+6)& (0+255),b
   928   000E62                     
   929                           ; BSR set to: 0
   930                           ;main_motor.c: 31:     LED_init();
   931   000E62  EC59  F015         	call	_LED_init	;wreg free
   932   000E66                     
   933                           ;main_motor.c: 32:     color_click_init();
   934   000E66  EC63  F014         	call	_color_click_init	;wreg free
   935   000E6A                     
   936                           ;main_motor.c: 33:     Interrupts_init();
   937   000E6A  EC4A  F015         	call	_Interrupts_init	;wreg free
   938                           
   939                           ;main_motor.c: 35:     Timer0_init();
   940   000E6E  EC1A  F015         	call	_Timer0_init	;wreg free
   941                           
   942                           ;main_motor.c: 38:     initDCmotorsPWM(99);
   943   000E72  0E00               	movlw	0
   944   000E74  6E0A               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   945   000E76  0E63               	movlw	99
   946   000E78  6E09               	movwf	initDCmotorsPWM@PWMperiod^0,c
   947   000E7A  EC62  F010         	call	_initDCmotorsPWM	;wreg free
   948   000E7E                     
   949                           ;main_motor.c: 40:     struct DC_motor motorL, motorR;;main_motor.c: 42:     motorL.powe
      +                          r=0;
   950   000E7E  0E00               	movlw	0
   951   000E80  0100               	movlb	0	; () banked
   952   000E82  6FC3               	movwf	main@motorL& (0+255),b
   953   000E84                     
   954                           ; BSR set to: 0
   955                           ;main_motor.c: 43:     motorL.direction=1;
   956   000E84  0E01               	movlw	1
   957   000E86  6FC4               	movwf	(main@motorL+1)& (0+255),b
   958   000E88                     
   959                           ; BSR set to: 0
   960                           ;main_motor.c: 44:     motorL.brakemode=1;
   961   000E88  0E01               	movlw	1
   962   000E8A  6FC5               	movwf	(main@motorL+2)& (0+255),b
   963   000E8C                     
   964                           ; BSR set to: 0
   965                           ;main_motor.c: 45:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
   966   000E8C  0EAA               	movlw	170
   967   000E8E  6FC8               	movwf	(main@motorL+5)& (0+255),b
   968   000E90  0E0F               	movlw	15
   969   000E92  6FC9               	movwf	(main@motorL+6)& (0+255),b
   970   000E94                     
   971                           ; BSR set to: 0
   972                           ;main_motor.c: 46:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
   973   000E94  0EA6               	movlw	166
   974   000E96  6FCA               	movwf	(main@motorL+7)& (0+255),b
   975   000E98  0E0F               	movlw	15
   976   000E9A  6FCB               	movwf	(main@motorL+8)& (0+255),b
   977   000E9C                     
   978                           ; BSR set to: 0
   979                           ;main_motor.c: 47:     motorL.PWMperiod= T2PR;
   980   000E9C  CFBC F0C6          	movff	4028,main@motorL+3	;volatile
   981   000EA0  6BC7               	clrf	(main@motorL+4)& (0+255),b
   982   000EA2                     
   983                           ; BSR set to: 0
   984                           ;main_motor.c: 49:     motorR.power=0;
   985   000EA2  0E00               	movlw	0
   986   000EA4  6FCC               	movwf	main@motorR& (0+255),b
   987   000EA6                     
   988                           ; BSR set to: 0
   989                           ;main_motor.c: 50:     motorR.direction=1;
   990   000EA6  0E01               	movlw	1
   991   000EA8  6FCD               	movwf	(main@motorR+1)& (0+255),b
   992   000EAA                     
   993                           ; BSR set to: 0
   994                           ;main_motor.c: 51:     motorR.brakemode=1;
   995   000EAA  0E01               	movlw	1
   996   000EAC  6FCE               	movwf	(main@motorR+2)& (0+255),b
   997   000EAE                     
   998                           ; BSR set to: 0
   999                           ;main_motor.c: 52:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1000   000EAE  0E25               	movlw	37
  1001   000EB0  6FD1               	movwf	(main@motorR+5)& (0+255),b
  1002   000EB2  0E0F               	movlw	15
  1003   000EB4  6FD2               	movwf	(main@motorR+6)& (0+255),b
  1004   000EB6                     
  1005                           ; BSR set to: 0
  1006                           ;main_motor.c: 53:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1007   000EB6  0E21               	movlw	33
  1008   000EB8  6FD3               	movwf	(main@motorR+7)& (0+255),b
  1009   000EBA  0E0F               	movlw	15
  1010   000EBC  6FD4               	movwf	(main@motorR+8)& (0+255),b
  1011   000EBE                     
  1012                           ; BSR set to: 0
  1013                           ;main_motor.c: 54:     motorR.PWMperiod= T2PR;
  1014   000EBE  CFBC F0CF          	movff	4028,main@motorR+3	;volatile
  1015   000EC2  6BD0               	clrf	(main@motorR+4)& (0+255),b
  1016   000EC4                     
  1017                           ; BSR set to: 0
  1018                           ;main_motor.c: 57:     unsigned char color_detected = 0;
  1019   000EC4  0E00               	movlw	0
  1020   000EC6  6FBA               	movwf	main@color_detected& (0+255),b
  1021   000EC8                     
  1022                           ; BSR set to: 0
  1023                           ;main_motor.c: 58:     unsigned char lost_timer = 0;
  1024   000EC8  0E00               	movlw	0
  1025   000ECA  6FB7               	movwf	main@lost_timer& (0+255),b
  1026   000ECC                     l668:
  1027   000ECC  B48E               	btfsc	142,2,c	;volatile
  1028   000ECE  EF6B  F007         	goto	u4551
  1029   000ED2  EF6D  F007         	goto	u4550
  1030   000ED6                     u4551:
  1031   000ED6  EF66  F007         	goto	l668
  1032   000EDA                     u4550:
  1033   000EDA                     
  1034                           ;main_motor.c: 62:     WhiteLight();
  1035   000EDA  ECA5  F015         	call	_WhiteLight	;wreg free
  1036   000EDE                     l4300:
  1037                           
  1038                           ;main_motor.c: 67:         unsigned int b = 0;
  1039   000EDE  0E00               	movlw	0
  1040   000EE0  0100               	movlb	0	; () banked
  1041   000EE2  6FB9               	movwf	(main@b+1)& (0+255),b
  1042   000EE4  0E00               	movlw	0
  1043   000EE6  6FB8               	movwf	main@b& (0+255),b
  1044                           
  1045                           ;main_motor.c: 68:         while(color_detected == 0){
  1046   000EE8  EFB4  F007         	goto	l672
  1047   000EEC                     l4302:
  1048                           
  1049                           ; BSR set to: 0
  1050                           ;main_motor.c: 69:             fullSpeedAhead(&motorL,&motorR);
  1051   000EEC  0EC3               	movlw	low main@motorL
  1052   000EEE  6E1C               	movwf	fullSpeedAhead@mL^0,c
  1053   000EF0  0E00               	movlw	high main@motorL
  1054   000EF2  6E1D               	movwf	(fullSpeedAhead@mL+1)^0,c
  1055   000EF4  0ECC               	movlw	low main@motorR
  1056   000EF6  6E1E               	movwf	fullSpeedAhead@mR^0,c
  1057   000EF8  0E00               	movlw	high main@motorR
  1058   000EFA  6E1F               	movwf	(fullSpeedAhead@mR+1)^0,c
  1059   000EFC  EC64  F00C         	call	_fullSpeedAhead	;wreg free
  1060   000F00                     
  1061                           ;main_motor.c: 70:             Update_RGBC(&initial_color);
  1062   000F00  0EBB               	movlw	low main@initial_color
  1063   000F02  6E14               	movwf	Update_RGBC@tempval^0,c
  1064   000F04  0E00               	movlw	high main@initial_color
  1065   000F06  6E15               	movwf	(Update_RGBC@tempval+1)^0,c
  1066   000F08  ECE4  F012         	call	_Update_RGBC	;wreg free
  1067   000F0C                     
  1068                           ;main_motor.c: 71:             color_detected = detect_color(&initial_color);
  1069   000F0C  0EBB               	movlw	low main@initial_color
  1070   000F0E  0100               	movlb	0	; () banked
  1071   000F10  6FA3               	movwf	detect_color@tempval& (0+255),b
  1072   000F12  0E00               	movlw	high main@initial_color
  1073   000F14  6FA4               	movwf	(detect_color@tempval+1)& (0+255),b
  1074   000F16  EC2E  F000         	call	_detect_color	;wreg free
  1075   000F1A  0100               	movlb	0	; () banked
  1076   000F1C  6FBA               	movwf	main@color_detected& (0+255),b
  1077   000F1E                     
  1078                           ; BSR set to: 0
  1079                           ;main_motor.c: 72:             b++;
  1080   000F1E  4BB8               	infsnz	main@b& (0+255),f,b
  1081   000F20  2BB9               	incf	(main@b+1)& (0+255),f,b
  1082   000F22                     
  1083                           ; BSR set to: 0
  1084                           ;main_motor.c: 74:             if(initial_color.C > 1600 && initial_color.C < 2000){
  1085   000F22  0E41               	movlw	65
  1086   000F24  5DC1               	subwf	(main@initial_color+6)& (0+255),w,b
  1087   000F26  0E06               	movlw	6
  1088   000F28  59C2               	subwfb	(main@initial_color+7)& (0+255),w,b
  1089   000F2A  A0D8               	btfss	status,0,c
  1090   000F2C  EF9A  F007         	goto	u4561
  1091   000F30  EF9C  F007         	goto	u4560
  1092   000F34                     u4561:
  1093   000F34  EFA8  F007         	goto	l4316
  1094   000F38                     u4560:
  1095   000F38                     
  1096                           ; BSR set to: 0
  1097   000F38  0ED0               	movlw	208
  1098   000F3A  5DC1               	subwf	(main@initial_color+6)& (0+255),w,b
  1099   000F3C  0E07               	movlw	7
  1100   000F3E  59C2               	subwfb	(main@initial_color+7)& (0+255),w,b
  1101   000F40  B0D8               	btfsc	status,0,c
  1102   000F42  EFA5  F007         	goto	u4571
  1103   000F46  EFA7  F007         	goto	u4570
  1104   000F4A                     u4571:
  1105   000F4A  EFA8  F007         	goto	l4316
  1106   000F4E                     u4570:
  1107   000F4E                     
  1108                           ; BSR set to: 0
  1109                           ;main_motor.c: 75:                 lost_timer++;
  1110   000F4E  2BB7               	incf	main@lost_timer& (0+255),f,b
  1111   000F50                     l4316:
  1112                           
  1113                           ; BSR set to: 0
  1114                           ;main_motor.c: 78:             if(lost_timer>100){
  1115   000F50  0E64               	movlw	100
  1116   000F52  65B7               	cpfsgt	main@lost_timer& (0+255),b
  1117   000F54  EFAE  F007         	goto	u4581
  1118   000F58  EFB0  F007         	goto	u4580
  1119   000F5C                     u4581:
  1120   000F5C  EFB4  F007         	goto	l672
  1121   000F60                     u4580:
  1122   000F60                     
  1123                           ; BSR set to: 0
  1124                           ;main_motor.c: 79:                 lost_flag = 1;
  1125   000F60  0E01               	movlw	1
  1126   000F62  6F74               	movwf	_lost_flag& (0+255),b
  1127                           
  1128                           ;main_motor.c: 80:                 color_detected = 8;
  1129   000F64  0E08               	movlw	8
  1130   000F66  6FBA               	movwf	main@color_detected& (0+255),b
  1131   000F68                     l672:
  1132                           
  1133                           ; BSR set to: 0
  1134                           ;main_motor.c: 68:         while(color_detected == 0){
  1135   000F68  51BA               	movf	main@color_detected& (0+255),w,b
  1136   000F6A  B4D8               	btfsc	status,2,c
  1137   000F6C  EFBA  F007         	goto	u4591
  1138   000F70  EFBC  F007         	goto	u4590
  1139   000F74                     u4591:
  1140   000F74  EF76  F007         	goto	l4302
  1141   000F78                     u4590:
  1142   000F78                     
  1143                           ; BSR set to: 0
  1144                           ;main_motor.c: 84:         if(color_detected != 0 && color_detected != 8){
  1145   000F78  51BA               	movf	main@color_detected& (0+255),w,b
  1146   000F7A  B4D8               	btfsc	status,2,c
  1147   000F7C  EFC2  F007         	goto	u4601
  1148   000F80  EFC4  F007         	goto	u4600
  1149   000F84                     u4601:
  1150   000F84  EF21  F008         	goto	l4346
  1151   000F88                     u4600:
  1152   000F88                     
  1153                           ; BSR set to: 0
  1154   000F88  0E08               	movlw	8
  1155   000F8A  19BA               	xorwf	main@color_detected& (0+255),w,b
  1156   000F8C  B4D8               	btfsc	status,2,c
  1157   000F8E  EFCB  F007         	goto	u4611
  1158   000F92  EFCD  F007         	goto	u4610
  1159   000F96                     u4611:
  1160   000F96  EF21  F008         	goto	l4346
  1161   000F9A                     u4610:
  1162   000F9A                     
  1163                           ; BSR set to: 0
  1164                           ;main_motor.c: 85:             AppendTime((b-6),&time_index,time_array);
  1165   000F9A  0EFA               	movlw	250
  1166   000F9C  25B8               	addwf	main@b& (0+255),w,b
  1167   000F9E  6E09               	movwf	AppendTime@temp^0,c
  1168   000FA0  0EFF               	movlw	255
  1169   000FA2  21B9               	addwfc	(main@b+1)& (0+255),w,b
  1170   000FA4  6E0A               	movwf	(AppendTime@temp+1)^0,c
  1171   000FA6  0E56               	movlw	low _time_index
  1172   000FA8  6E0B               	movwf	AppendTime@time_index^0,c
  1173   000FAA  0E00               	movlw	high _time_index
  1174   000FAC  6E0C               	movwf	(AppendTime@time_index+1)^0,c
  1175   000FAE  0E3C               	movlw	low _time_array
  1176   000FB0  6E0D               	movwf	AppendTime@time_array^0,c
  1177   000FB2  0E01               	movlw	high _time_array
  1178   000FB4  6E0E               	movwf	(AppendTime@time_array+1)^0,c
  1179   000FB6  EC7D  F014         	call	_AppendTime	;wreg free
  1180   000FBA                     
  1181                           ;main_motor.c: 86:             LATHbits.LATH3 = 1;
  1182   000FBA  8680               	bsf	128,3,c	;volatile
  1183                           
  1184                           ;main_motor.c: 88:             while(b>0){
  1185   000FBC  EFEE  F007         	goto	l4332
  1186   000FC0                     l4328:
  1187                           
  1188                           ; BSR set to: 0
  1189                           ;main_motor.c: 89:                 stop(&motorL,&motorR);
  1190   000FC0  0EC3               	movlw	low main@motorL
  1191   000FC2  6E1C               	movwf	stop@mL^0,c
  1192   000FC4  0E00               	movlw	high main@motorL
  1193   000FC6  6E1D               	movwf	(stop@mL+1)^0,c
  1194   000FC8  0ECC               	movlw	low main@motorR
  1195   000FCA  6E1E               	movwf	stop@mR^0,c
  1196   000FCC  0E00               	movlw	high main@motorR
  1197   000FCE  6E1F               	movwf	(stop@mR+1)^0,c
  1198   000FD0  EC3F  F00E         	call	_stop	;wreg free
  1199   000FD4                     
  1200                           ;main_motor.c: 90:                 b--;
  1201   000FD4  0100               	movlb	0	; () banked
  1202   000FD6  07B8               	decf	main@b& (0+255),f,b
  1203   000FD8  A0D8               	btfss	status,0,c
  1204   000FDA  07B9               	decf	(main@b+1)& (0+255),f,b
  1205   000FDC                     l4332:
  1206                           
  1207                           ;main_motor.c: 88:             while(b>0){
  1208   000FDC  0100               	movlb	0	; () banked
  1209   000FDE  51B8               	movf	main@b& (0+255),w,b
  1210   000FE0  11B9               	iorwf	(main@b+1)& (0+255),w,b
  1211   000FE2  A4D8               	btfss	status,2,c
  1212   000FE4  EFF6  F007         	goto	u4621
  1213   000FE8  EFF8  F007         	goto	u4620
  1214   000FEC                     u4621:
  1215   000FEC  EFE0  F007         	goto	l4328
  1216   000FF0                     u4620:
  1217   000FF0                     
  1218                           ; BSR set to: 0
  1219                           ;main_motor.c: 92:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1220   000FF0  0E09               	movlw	9
  1221   000FF2  0100               	movlb	0	; () banked
  1222   000FF4  6FB6               	movwf	(??_main+1)& (0+255),b
  1223   000FF6  0E1E               	movlw	30
  1224   000FF8  6FB5               	movwf	??_main& (0+255),b
  1225   000FFA  0EE4               	movlw	228
  1226   000FFC                     u4667:
  1227   000FFC  2EE8               	decfsz	wreg,f,c
  1228   000FFE  D7FE               	bra	u4667
  1229   001000  2FB5               	decfsz	??_main& (0+255),f,b
  1230   001002  D7FC               	bra	u4667
  1231   001004  2FB6               	decfsz	(??_main+1)& (0+255),f,b
  1232   001006  D7FA               	bra	u4667
  1233   001008  F000               	nop	
  1234   00100A                     
  1235                           ;main_motor.c: 93:             LATHbits.LATH3 = 0;
  1236   00100A  9680               	bcf	128,3,c	;volatile
  1237   00100C                     
  1238                           ;main_motor.c: 95:             MoveBuggy(color_detected,&motorL,&motorR);
  1239   00100C  0100               	movlb	0	; () banked
  1240   00100E  51BA               	movf	main@color_detected& (0+255),w,b
  1241   001010  6FB5               	movwf	??_main& (0+255),b
  1242   001012  6BB6               	clrf	(??_main+1)& (0+255),b
  1243   001014  C0B5  F035         	movff	??_main,MoveBuggy@color_detected
  1244   001018  C0B6  F036         	movff	??_main+1,MoveBuggy@color_detected+1
  1245   00101C  0EC3               	movlw	low main@motorL
  1246   00101E  6E37               	movwf	MoveBuggy@mL^0,c
  1247   001020  0E00               	movlw	high main@motorL
  1248   001022  6E38               	movwf	(MoveBuggy@mL+1)^0,c
  1249   001024  0ECC               	movlw	low main@motorR
  1250   001026  6E39               	movwf	MoveBuggy@mR^0,c
  1251   001028  0E00               	movlw	high main@motorR
  1252   00102A  6E3A               	movwf	(MoveBuggy@mR+1)^0,c
  1253   00102C  EC97  F008         	call	_MoveBuggy	;wreg free
  1254   001030                     
  1255                           ;main_motor.c: 96:             color_detected = 0;
  1256   001030  0E00               	movlw	0
  1257   001032  0100               	movlb	0	; () banked
  1258   001034  6FBA               	movwf	main@color_detected& (0+255),b
  1259   001036                     
  1260                           ; BSR set to: 0
  1261                           ;main_motor.c: 97:             color_flag = 0;
  1262   001036  0E00               	movlw	0
  1263   001038  6F76               	movwf	_color_flag& (0+255),b
  1264   00103A                     
  1265                           ; BSR set to: 0
  1266                           ;main_motor.c: 98:             lost_timer = 0;
  1267   00103A  0E00               	movlw	0
  1268   00103C  6FB7               	movwf	main@lost_timer& (0+255),b
  1269                           
  1270                           ;main_motor.c: 99:         }
  1271   00103E  EF6F  F007         	goto	l4300
  1272   001042                     l4346:
  1273                           
  1274                           ; BSR set to: 0
  1275   001042  0E08               	movlw	8
  1276   001044  19BA               	xorwf	main@color_detected& (0+255),w,b
  1277   001046  A4D8               	btfss	status,2,c
  1278   001048  EF28  F008         	goto	u4631
  1279   00104C  EF2A  F008         	goto	u4630
  1280   001050                     u4631:
  1281   001050  EF6F  F007         	goto	l4300
  1282   001054                     u4630:
  1283   001054                     
  1284                           ; BSR set to: 0
  1285                           ;main_motor.c: 104:             if(lost_flag){AppendTime((b-lost_timer-6),&time_index,ti
      +                          me_array);}
  1286   001054  5174               	movf	_lost_flag& (0+255),w,b
  1287   001056  B4D8               	btfsc	status,2,c
  1288   001058  EF30  F008         	goto	u4641
  1289   00105C  EF32  F008         	goto	u4640
  1290   001060                     u4641:
  1291   001060  EF4A  F008         	goto	l4352
  1292   001064                     u4640:
  1293   001064                     
  1294                           ; BSR set to: 0
  1295   001064  51B7               	movf	main@lost_timer& (0+255),w,b
  1296   001066  5DB8               	subwf	main@b& (0+255),w,b
  1297   001068  6FB5               	movwf	??_main& (0+255),b
  1298   00106A  0E00               	movlw	0
  1299   00106C  59B9               	subwfb	(main@b+1)& (0+255),w,b
  1300   00106E  6FB6               	movwf	(??_main+1)& (0+255),b
  1301   001070  0EFA               	movlw	250
  1302   001072  25B5               	addwf	??_main& (0+255),w,b
  1303   001074  6E09               	movwf	AppendTime@temp^0,c
  1304   001076  0EFF               	movlw	255
  1305   001078  21B6               	addwfc	(??_main+1)& (0+255),w,b
  1306   00107A  6E0A               	movwf	(AppendTime@temp+1)^0,c
  1307   00107C  0E56               	movlw	low _time_index
  1308   00107E  6E0B               	movwf	AppendTime@time_index^0,c
  1309   001080  0E00               	movlw	high _time_index
  1310   001082  6E0C               	movwf	(AppendTime@time_index+1)^0,c
  1311   001084  0E3C               	movlw	low _time_array
  1312   001086  6E0D               	movwf	AppendTime@time_array^0,c
  1313   001088  0E01               	movlw	high _time_array
  1314   00108A  6E0E               	movwf	(AppendTime@time_array+1)^0,c
  1315   00108C  EC7D  F014         	call	_AppendTime	;wreg free
  1316   001090  EF5A  F008         	goto	l4354
  1317   001094                     l4352:
  1318                           
  1319                           ; BSR set to: 0
  1320   001094  0EFA               	movlw	250
  1321   001096  25B8               	addwf	main@b& (0+255),w,b
  1322   001098  6E09               	movwf	AppendTime@temp^0,c
  1323   00109A  0EFF               	movlw	255
  1324   00109C  21B9               	addwfc	(main@b+1)& (0+255),w,b
  1325   00109E  6E0A               	movwf	(AppendTime@temp+1)^0,c
  1326   0010A0  0E56               	movlw	low _time_index
  1327   0010A2  6E0B               	movwf	AppendTime@time_index^0,c
  1328   0010A4  0E00               	movlw	high _time_index
  1329   0010A6  6E0C               	movwf	(AppendTime@time_index+1)^0,c
  1330   0010A8  0E3C               	movlw	low _time_array
  1331   0010AA  6E0D               	movwf	AppendTime@time_array^0,c
  1332   0010AC  0E01               	movlw	high _time_array
  1333   0010AE  6E0E               	movwf	(AppendTime@time_array+1)^0,c
  1334   0010B0  EC7D  F014         	call	_AppendTime	;wreg free
  1335   0010B4                     l4354:
  1336                           
  1337                           ;main_motor.c: 106:             LATDbits.LATD7 = 1;
  1338   0010B4  8E7C               	bsf	124,7,c	;volatile
  1339                           
  1340                           ;main_motor.c: 108:             while(b>0){
  1341   0010B6  EF6B  F008         	goto	l4360
  1342   0010BA                     l4356:
  1343                           
  1344                           ; BSR set to: 0
  1345                           ;main_motor.c: 109:                 stop(&motorL,&motorR);
  1346   0010BA  0EC3               	movlw	low main@motorL
  1347   0010BC  6E1C               	movwf	stop@mL^0,c
  1348   0010BE  0E00               	movlw	high main@motorL
  1349   0010C0  6E1D               	movwf	(stop@mL+1)^0,c
  1350   0010C2  0ECC               	movlw	low main@motorR
  1351   0010C4  6E1E               	movwf	stop@mR^0,c
  1352   0010C6  0E00               	movlw	high main@motorR
  1353   0010C8  6E1F               	movwf	(stop@mR+1)^0,c
  1354   0010CA  EC3F  F00E         	call	_stop	;wreg free
  1355   0010CE                     
  1356                           ;main_motor.c: 110:                 b--;
  1357   0010CE  0100               	movlb	0	; () banked
  1358   0010D0  07B8               	decf	main@b& (0+255),f,b
  1359   0010D2  A0D8               	btfss	status,0,c
  1360   0010D4  07B9               	decf	(main@b+1)& (0+255),f,b
  1361   0010D6                     l4360:
  1362                           
  1363                           ;main_motor.c: 108:             while(b>0){
  1364   0010D6  0100               	movlb	0	; () banked
  1365   0010D8  51B8               	movf	main@b& (0+255),w,b
  1366   0010DA  11B9               	iorwf	(main@b+1)& (0+255),w,b
  1367   0010DC  A4D8               	btfss	status,2,c
  1368   0010DE  EF73  F008         	goto	u4651
  1369   0010E2  EF75  F008         	goto	u4650
  1370   0010E6                     u4651:
  1371   0010E6  EF5D  F008         	goto	l4356
  1372   0010EA                     u4650:
  1373   0010EA                     
  1374                           ; BSR set to: 0
  1375                           ;main_motor.c: 112:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1376   0010EA  0E09               	movlw	9
  1377   0010EC  0100               	movlb	0	; () banked
  1378   0010EE  6FB6               	movwf	(??_main+1)& (0+255),b
  1379   0010F0  0E1E               	movlw	30
  1380   0010F2  6FB5               	movwf	??_main& (0+255),b
  1381   0010F4  0EE4               	movlw	228
  1382   0010F6                     u4677:
  1383   0010F6  2EE8               	decfsz	wreg,f,c
  1384   0010F8  D7FE               	bra	u4677
  1385   0010FA  2FB5               	decfsz	??_main& (0+255),f,b
  1386   0010FC  D7FC               	bra	u4677
  1387   0010FE  2FB6               	decfsz	(??_main+1)& (0+255),f,b
  1388   001100  D7FA               	bra	u4677
  1389   001102  F000               	nop	
  1390   001104                     
  1391                           ;main_motor.c: 113:             WhiteInstructions(&motorL,&motorR);
  1392   001104  0EC3               	movlw	low main@motorL
  1393   001106  6E3B               	movwf	WhiteInstructions@mL^0,c
  1394   001108  0E00               	movlw	high main@motorL
  1395   00110A  6E3C               	movwf	(WhiteInstructions@mL+1)^0,c
  1396   00110C  0ECC               	movlw	low main@motorR
  1397   00110E  6E3D               	movwf	WhiteInstructions@mR^0,c
  1398   001110  0E00               	movlw	high main@motorR
  1399   001112  6E3E               	movwf	(WhiteInstructions@mR+1)^0,c
  1400   001114  ECC9  F00D         	call	_WhiteInstructions	;wreg free
  1401   001118                     
  1402                           ;main_motor.c: 114:             LATDbits.LATD7 = 0;
  1403   001118  9E7C               	bcf	124,7,c	;volatile
  1404   00111A                     
  1405                           ;main_motor.c: 115:             color_detected = 0;
  1406   00111A  0E00               	movlw	0
  1407   00111C  0100               	movlb	0	; () banked
  1408   00111E  6FBA               	movwf	main@color_detected& (0+255),b
  1409   001120                     
  1410                           ; BSR set to: 0
  1411                           ;main_motor.c: 116:             lost_timer = 0;
  1412   001120  0E00               	movlw	0
  1413   001122  6FB7               	movwf	main@lost_timer& (0+255),b
  1414   001124  0003               	sleep		;# 
  1415   001126  EF6F  F007         	goto	l4300
  1416   00112A  EF2C  F000         	goto	start
  1417   00112E                     __end_of_main:
  1418                           	callstack 0
  1419                           
  1420 ;; *************** function _initDCmotorsPWM *****************
  1421 ;; Defined at:
  1422 ;;		line 5 in file "dc_motor.c"
  1423 ;; Parameters:    Size  Location     Type
  1424 ;;  PWMperiod       2    8[COMRAM] unsigned int 
  1425 ;; Auto vars:     Size  Location     Type
  1426 ;;		None
  1427 ;; Return value:  Size  Location     Type
  1428 ;;                  1    wreg      void 
  1429 ;; Registers used:
  1430 ;;		wreg, status,2
  1431 ;; Tracked objects:
  1432 ;;		On entry : 0/0
  1433 ;;		On exit  : 0/0
  1434 ;;		Unchanged: 0/0
  1435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1436 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1439 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1440 ;;Total ram usage:        2 bytes
  1441 ;; Hardware stack levels used: 1
  1442 ;; Hardware stack levels required when called: 7
  1443 ;; This function calls:
  1444 ;;		Nothing
  1445 ;; This function is called by:
  1446 ;;		_main
  1447 ;; This function uses a non-reentrant model
  1448 ;;
  1449                           
  1450                           	psect	text1
  1451   0020C4                     __ptext1:
  1452                           	callstack 0
  1453   0020C4                     _initDCmotorsPWM:
  1454                           	callstack 23
  1455   0020C4                     
  1456                           ;dc_motor.c: 7:     LATEbits.LATE2 = 0;
  1457   0020C4  947D               	bcf	125,2,c	;volatile
  1458                           
  1459                           ;dc_motor.c: 8:     TRISEbits.TRISE2 = 0;
  1460   0020C6  9485               	bcf	133,2,c	;volatile
  1461                           
  1462                           ;dc_motor.c: 9:     LATEbits.LATE4 = 0;
  1463   0020C8  987D               	bcf	125,4,c	;volatile
  1464                           
  1465                           ;dc_motor.c: 10:     TRISEbits.TRISE4 = 0;
  1466   0020CA  9885               	bcf	133,4,c	;volatile
  1467                           
  1468                           ;dc_motor.c: 11:     LATCbits.LATC7 = 0;
  1469   0020CC  9E7B               	bcf	123,7,c	;volatile
  1470                           
  1471                           ;dc_motor.c: 12:     TRISCbits.TRISC7 = 0;
  1472   0020CE  9E83               	bcf	131,7,c	;volatile
  1473                           
  1474                           ;dc_motor.c: 13:     LATGbits.LATG6 = 0;
  1475   0020D0  9C7F               	bcf	127,6,c	;volatile
  1476                           
  1477                           ;dc_motor.c: 14:     TRISGbits.TRISG6 = 0;
  1478   0020D2  9C87               	bcf	135,6,c	;volatile
  1479   0020D4                     
  1480                           ;dc_motor.c: 17:     RE2PPS=0x05;
  1481   0020D4  0E05               	movlw	5
  1482   0020D6  010E               	movlb	14	; () banked
  1483   0020D8  6F74               	movwf	116,b	;volatile
  1484                           
  1485                           ;dc_motor.c: 18:     RE4PPS=0x06;
  1486   0020DA  0E06               	movlw	6
  1487   0020DC  6F76               	movwf	118,b	;volatile
  1488                           
  1489                           ;dc_motor.c: 19:     RC7PPS=0x07;
  1490   0020DE  0E07               	movlw	7
  1491   0020E0  6F69               	movwf	105,b	;volatile
  1492                           
  1493                           ;dc_motor.c: 20:     RG6PPS=0x08;
  1494   0020E2  0E08               	movlw	8
  1495   0020E4  6F88               	movwf	136,b	;volatile
  1496                           
  1497                           ;dc_motor.c: 23:     T2CONbits.CKPS=0b100;
  1498   0020E6  50BD               	movf	189,w,c	;volatile
  1499   0020E8  0B8F               	andlw	-113
  1500   0020EA  0940               	iorlw	64
  1501   0020EC  6EBD               	movwf	189,c	;volatile
  1502                           
  1503                           ;dc_motor.c: 24:     T2HLTbits.MODE=0b00000;
  1504   0020EE  0EE0               	movlw	-32
  1505   0020F0  16BE               	andwf	190,f,c	;volatile
  1506                           
  1507                           ;dc_motor.c: 25:     T2CLKCONbits.CS=0b0001;
  1508   0020F2  50BF               	movf	191,w,c	;volatile
  1509   0020F4  0BF0               	andlw	-16
  1510   0020F6  0901               	iorlw	1
  1511   0020F8  6EBF               	movwf	191,c	;volatile
  1512   0020FA                     
  1513                           ; BSR set to: 14
  1514                           ;dc_motor.c: 29:     T2PR=PWMperiod;
  1515   0020FA  C009  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  1516   0020FE                     
  1517                           ; BSR set to: 14
  1518                           ;dc_motor.c: 30:     T2CONbits.ON=1;
  1519   0020FE  8EBD               	bsf	189,7,c	;volatile
  1520                           
  1521                           ;dc_motor.c: 34:     CCPR1H=0;
  1522   002100  0E00               	movlw	0
  1523   002102  6EAA               	movwf	170,c	;volatile
  1524                           
  1525                           ;dc_motor.c: 35:     CCPR2H=0;
  1526   002104  0E00               	movlw	0
  1527   002106  6EA6               	movwf	166,c	;volatile
  1528                           
  1529                           ;dc_motor.c: 36:     CCPR3H=0;
  1530   002108  0E00               	movlw	0
  1531   00210A  010F               	movlb	15	; () banked
  1532   00210C  6F25               	movwf	37,b	;volatile
  1533                           
  1534                           ;dc_motor.c: 37:     CCPR4H=0;
  1535   00210E  0E00               	movlw	0
  1536   002110  6F21               	movwf	33,b	;volatile
  1537                           
  1538                           ;dc_motor.c: 40:     CCPTMRS0bits.C1TSEL=0;
  1539   002112  0EFC               	movlw	-4
  1540   002114  16AD               	andwf	173,f,c	;volatile
  1541                           
  1542                           ;dc_motor.c: 41:     CCPTMRS0bits.C2TSEL=0;
  1543   002116  0EF3               	movlw	-13
  1544   002118  16AD               	andwf	173,f,c	;volatile
  1545                           
  1546                           ;dc_motor.c: 42:     CCPTMRS0bits.C3TSEL=0;
  1547   00211A  0ECF               	movlw	-49
  1548   00211C  16AD               	andwf	173,f,c	;volatile
  1549                           
  1550                           ;dc_motor.c: 43:     CCPTMRS0bits.C4TSEL=0;
  1551   00211E  0E3F               	movlw	-193
  1552   002120  16AD               	andwf	173,f,c	;volatile
  1553   002122                     
  1554                           ; BSR set to: 15
  1555                           ;dc_motor.c: 46:     CCP1CONbits.FMT=1;
  1556   002122  88AB               	bsf	171,4,c	;volatile
  1557                           
  1558                           ;dc_motor.c: 47:     CCP1CONbits.CCP1MODE=0b1100;
  1559   002124  50AB               	movf	171,w,c	;volatile
  1560   002126  0BF0               	andlw	-16
  1561   002128  090C               	iorlw	12
  1562   00212A  6EAB               	movwf	171,c	;volatile
  1563   00212C                     
  1564                           ; BSR set to: 15
  1565                           ;dc_motor.c: 48:     CCP1CONbits.EN=1;
  1566   00212C  8EAB               	bsf	171,7,c	;volatile
  1567   00212E                     
  1568                           ; BSR set to: 15
  1569                           ;dc_motor.c: 50:     CCP2CONbits.FMT=1;
  1570   00212E  88A7               	bsf	167,4,c	;volatile
  1571                           
  1572                           ;dc_motor.c: 51:     CCP2CONbits.CCP2MODE=0b1100;
  1573   002130  50A7               	movf	167,w,c	;volatile
  1574   002132  0BF0               	andlw	-16
  1575   002134  090C               	iorlw	12
  1576   002136  6EA7               	movwf	167,c	;volatile
  1577   002138                     
  1578                           ; BSR set to: 15
  1579                           ;dc_motor.c: 52:     CCP2CONbits.EN=1;
  1580   002138  8EA7               	bsf	167,7,c	;volatile
  1581   00213A                     
  1582                           ; BSR set to: 15
  1583                           ;dc_motor.c: 54:     CCP3CONbits.FMT=1;
  1584   00213A  8926               	bsf	38,4,b	;volatile
  1585                           
  1586                           ;dc_motor.c: 55:     CCP3CONbits.CCP3MODE=0b1100;
  1587   00213C  5126               	movf	38,w,b	;volatile
  1588   00213E  0BF0               	andlw	-16
  1589   002140  090C               	iorlw	12
  1590   002142  6F26               	movwf	38,b	;volatile
  1591   002144                     
  1592                           ; BSR set to: 15
  1593                           ;dc_motor.c: 56:     CCP3CONbits.EN=1;
  1594   002144  8F26               	bsf	38,7,b	;volatile
  1595   002146                     
  1596                           ; BSR set to: 15
  1597                           ;dc_motor.c: 58:     CCP4CONbits.FMT=1;
  1598   002146  8922               	bsf	34,4,b	;volatile
  1599                           
  1600                           ;dc_motor.c: 59:     CCP4CONbits.CCP4MODE=0b1100;
  1601   002148  5122               	movf	34,w,b	;volatile
  1602   00214A  0BF0               	andlw	-16
  1603   00214C  090C               	iorlw	12
  1604   00214E  6F22               	movwf	34,b	;volatile
  1605   002150                     
  1606                           ; BSR set to: 15
  1607                           ;dc_motor.c: 60:     CCP4CONbits.EN=1;
  1608   002150  8F22               	bsf	34,7,b	;volatile
  1609   002152                     
  1610                           ; BSR set to: 15
  1611   002152  0012               	return		;funcret
  1612   002154                     __end_of_initDCmotorsPWM:
  1613                           	callstack 0
  1614                           
  1615 ;; *************** function _detect_color *****************
  1616 ;; Defined at:
  1617 ;;		line 99 in file "color.c"
  1618 ;; Parameters:    Size  Location     Type
  1619 ;;  tempval         2    4[BANK0 ] PTR struct RGB_val
  1620 ;;		 -> main@initial_color(8), 
  1621 ;; Auto vars:     Size  Location     Type
  1622 ;;  dist_B          1   21[BANK0 ] unsigned char 
  1623 ;;  dist_G          1   20[BANK0 ] unsigned char 
  1624 ;;  dist_R          1   19[BANK0 ] unsigned char 
  1625 ;;  color           1   18[BANK0 ] unsigned char 
  1626 ;; Return value:  Size  Location     Type
  1627 ;;                  1    wreg      unsigned char 
  1628 ;; Registers used:
  1629 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1630 ;; Tracked objects:
  1631 ;;		On entry : 0/0
  1632 ;;		On exit  : 0/0
  1633 ;;		Unchanged: 0/0
  1634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1635 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1636 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1637 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1638 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1639 ;;Total ram usage:       18 bytes
  1640 ;; Hardware stack levels used: 1
  1641 ;; Hardware stack levels required when called: 8
  1642 ;; This function calls:
  1643 ;;		___fldiv
  1644 ;;		___flmul
  1645 ;;		___fltol
  1646 ;;		___xxtofl
  1647 ;; This function is called by:
  1648 ;;		_main
  1649 ;; This function uses a non-reentrant model
  1650 ;;
  1651                           
  1652                           	psect	text2
  1653   00005C                     __ptext2:
  1654                           	callstack 0
  1655   00005C                     _detect_color:
  1656                           	callstack 22
  1657   00005C                     
  1658                           ;color.c: 99: unsigned char detect_color(RGB_val *tempval);color.c: 100: {;color.c: 101:
      +                               unsigned char color = 0;
  1659   00005C  0E00               	movlw	0
  1660   00005E  0100               	movlb	0	; () banked
  1661   000060  6FB1               	movwf	detect_color@color& (0+255),b
  1662   000062                     
  1663                           ; BSR set to: 0
  1664                           ;color.c: 104:     unsigned char dist_R, dist_G, dist_B;;color.c: 105:     dist_R = ((fl
      +                          oat)(tempval->R)/(float)(tempval->R + tempval->G + tempval->B))*100;
  1665   000062  0E00               	movlw	0
  1666   000064  6E34               	movwf	___flmul@a^0,c
  1667   000066  0E00               	movlw	0
  1668   000068  6E35               	movwf	(___flmul@a+1)^0,c
  1669   00006A  0EC8               	movlw	200
  1670   00006C  6E36               	movwf	(___flmul@a+2)^0,c
  1671   00006E  0E42               	movlw	66
  1672   000070  6E37               	movwf	(___flmul@a+3)^0,c
  1673   000072  EE20 F004          	lfsr	2,4
  1674   000076  51A3               	movf	detect_color@tempval& (0+255),w,b
  1675   000078  26D9               	addwf	fsr2l,f,c
  1676   00007A  51A4               	movf	(detect_color@tempval+1)& (0+255),w,b
  1677   00007C  22DA               	addwfc	fsr2h,f,c
  1678   00007E  CFDE F0A5          	movff	postinc2,??_detect_color
  1679   000082  CFDD F0A6          	movff	postdec2,??_detect_color+1
  1680   000086  EE20 F002          	lfsr	2,2
  1681   00008A  51A3               	movf	detect_color@tempval& (0+255),w,b
  1682   00008C  26D9               	addwf	fsr2l,f,c
  1683   00008E  51A4               	movf	(detect_color@tempval+1)& (0+255),w,b
  1684   000090  22DA               	addwfc	fsr2h,f,c
  1685   000092  CFDE F0A7          	movff	postinc2,??_detect_color+2
  1686   000096  CFDD F0A8          	movff	postdec2,??_detect_color+3
  1687   00009A  C0A3  FFD9         	movff	detect_color@tempval,fsr2l
  1688   00009E  C0A4  FFDA         	movff	detect_color@tempval+1,fsr2h
  1689   0000A2  CFDE F0A9          	movff	postinc2,??_detect_color+4
  1690   0000A6  CFDD F0AA          	movff	postdec2,??_detect_color+5
  1691   0000AA  51A7               	movf	(??_detect_color+2)& (0+255),w,b
  1692   0000AC  25A9               	addwf	(??_detect_color+4)& (0+255),w,b
  1693   0000AE  6FAB               	movwf	(??_detect_color+6)& (0+255),b
  1694   0000B0  51A8               	movf	(??_detect_color+3)& (0+255),w,b
  1695   0000B2  21AA               	addwfc	(??_detect_color+5)& (0+255),w,b
  1696   0000B4  6FAC               	movwf	(??_detect_color+7)& (0+255),b
  1697   0000B6  51A5               	movf	??_detect_color& (0+255),w,b
  1698   0000B8  25AB               	addwf	(??_detect_color+6)& (0+255),w,b
  1699   0000BA  6FAD               	movwf	(??_detect_color+8)& (0+255),b
  1700   0000BC  51A6               	movf	(??_detect_color+1)& (0+255),w,b
  1701   0000BE  21AC               	addwfc	(??_detect_color+7)& (0+255),w,b
  1702   0000C0  6FAE               	movwf	(??_detect_color+9)& (0+255),b
  1703   0000C2  C0AD  F009         	movff	??_detect_color+8,___xxtofl@val
  1704   0000C6  C0AE  F00A         	movff	??_detect_color+9,___xxtofl@val+1
  1705   0000CA  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1706   0000CC  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1707   0000CE  0E00               	movlw	0
  1708   0000D0  ECD9  F009         	call	___xxtofl
  1709   0000D4  C009  F01B         	movff	?___xxtofl,___fldiv@a
  1710   0000D8  C00A  F01C         	movff	?___xxtofl+1,___fldiv@a+1
  1711   0000DC  C00B  F01D         	movff	?___xxtofl+2,___fldiv@a+2
  1712   0000E0  C00C  F01E         	movff	?___xxtofl+3,___fldiv@a+3
  1713   0000E4  C0A3  FFD9         	movff	detect_color@tempval,fsr2l
  1714   0000E8  C0A4  FFDA         	movff	detect_color@tempval+1,fsr2h
  1715   0000EC  CFDE F0AF          	movff	postinc2,??_detect_color+10
  1716   0000F0  CFDD F0B0          	movff	postdec2,??_detect_color+11
  1717   0000F4  C0AF  F009         	movff	??_detect_color+10,___xxtofl@val
  1718   0000F8  C0B0  F00A         	movff	??_detect_color+11,___xxtofl@val+1
  1719   0000FC  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1720   0000FE  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1721   000100  0E00               	movlw	0
  1722   000102  ECD9  F009         	call	___xxtofl
  1723   000106  C009  F017         	movff	?___xxtofl,___fldiv@b
  1724   00010A  C00A  F018         	movff	?___xxtofl+1,___fldiv@b+1
  1725   00010E  C00B  F019         	movff	?___xxtofl+2,___fldiv@b+2
  1726   000112  C00C  F01A         	movff	?___xxtofl+3,___fldiv@b+3
  1727   000116  EC53  F005         	call	___fldiv	;wreg free
  1728   00011A  C017  F030         	movff	?___fldiv,___flmul@b
  1729   00011E  C018  F031         	movff	?___fldiv+1,___flmul@b+1
  1730   000122  C019  F032         	movff	?___fldiv+2,___flmul@b+2
  1731   000126  C01A  F033         	movff	?___fldiv+3,___flmul@b+3
  1732   00012A  EC3E  F003         	call	___flmul	;wreg free
  1733   00012E  C030  F049         	movff	?___flmul,___fltol@f1
  1734   000132  C031  F04A         	movff	?___flmul+1,___fltol@f1+1
  1735   000136  C032  F04B         	movff	?___flmul+2,___fltol@f1+2
  1736   00013A  C033  F04C         	movff	?___flmul+3,___fltol@f1+3
  1737   00013E  EC69  F00B         	call	___fltol	;wreg free
  1738   000142  5049               	movf	?___fltol^0,w,c
  1739   000144  0100               	movlb	0	; () banked
  1740   000146  6FB2               	movwf	detect_color@dist_R& (0+255),b
  1741   000148                     
  1742                           ; BSR set to: 0
  1743                           ;color.c: 106:     dist_G = ((float)(tempval->G)/(float)(tempval->R + tempval->G + tempv
      +                          al->B))*100;
  1744   000148  0E00               	movlw	0
  1745   00014A  6E34               	movwf	___flmul@a^0,c
  1746   00014C  0E00               	movlw	0
  1747   00014E  6E35               	movwf	(___flmul@a+1)^0,c
  1748   000150  0EC8               	movlw	200
  1749   000152  6E36               	movwf	(___flmul@a+2)^0,c
  1750   000154  0E42               	movlw	66
  1751   000156  6E37               	movwf	(___flmul@a+3)^0,c
  1752   000158  EE20 F004          	lfsr	2,4
  1753   00015C  51A3               	movf	detect_color@tempval& (0+255),w,b
  1754   00015E  26D9               	addwf	fsr2l,f,c
  1755   000160  51A4               	movf	(detect_color@tempval+1)& (0+255),w,b
  1756   000162  22DA               	addwfc	fsr2h,f,c
  1757   000164  CFDE F0A5          	movff	postinc2,??_detect_color
  1758   000168  CFDD F0A6          	movff	postdec2,??_detect_color+1
  1759   00016C  EE20 F002          	lfsr	2,2
  1760   000170  51A3               	movf	detect_color@tempval& (0+255),w,b
  1761   000172  26D9               	addwf	fsr2l,f,c
  1762   000174  51A4               	movf	(detect_color@tempval+1)& (0+255),w,b
  1763   000176  22DA               	addwfc	fsr2h,f,c
  1764   000178  CFDE F0A7          	movff	postinc2,??_detect_color+2
  1765   00017C  CFDD F0A8          	movff	postdec2,??_detect_color+3
  1766   000180  C0A3  FFD9         	movff	detect_color@tempval,fsr2l
  1767   000184  C0A4  FFDA         	movff	detect_color@tempval+1,fsr2h
  1768   000188  CFDE F0A9          	movff	postinc2,??_detect_color+4
  1769   00018C  CFDD F0AA          	movff	postdec2,??_detect_color+5
  1770   000190  51A7               	movf	(??_detect_color+2)& (0+255),w,b
  1771   000192  25A9               	addwf	(??_detect_color+4)& (0+255),w,b
  1772   000194  6FAB               	movwf	(??_detect_color+6)& (0+255),b
  1773   000196  51A8               	movf	(??_detect_color+3)& (0+255),w,b
  1774   000198  21AA               	addwfc	(??_detect_color+5)& (0+255),w,b
  1775   00019A  6FAC               	movwf	(??_detect_color+7)& (0+255),b
  1776   00019C  51A5               	movf	??_detect_color& (0+255),w,b
  1777   00019E  25AB               	addwf	(??_detect_color+6)& (0+255),w,b
  1778   0001A0  6FAD               	movwf	(??_detect_color+8)& (0+255),b
  1779   0001A2  51A6               	movf	(??_detect_color+1)& (0+255),w,b
  1780   0001A4  21AC               	addwfc	(??_detect_color+7)& (0+255),w,b
  1781   0001A6  6FAE               	movwf	(??_detect_color+9)& (0+255),b
  1782   0001A8  C0AD  F009         	movff	??_detect_color+8,___xxtofl@val
  1783   0001AC  C0AE  F00A         	movff	??_detect_color+9,___xxtofl@val+1
  1784   0001B0  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1785   0001B2  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1786   0001B4  0E00               	movlw	0
  1787   0001B6  ECD9  F009         	call	___xxtofl
  1788   0001BA  C009  F01B         	movff	?___xxtofl,___fldiv@a
  1789   0001BE  C00A  F01C         	movff	?___xxtofl+1,___fldiv@a+1
  1790   0001C2  C00B  F01D         	movff	?___xxtofl+2,___fldiv@a+2
  1791   0001C6  C00C  F01E         	movff	?___xxtofl+3,___fldiv@a+3
  1792   0001CA  0100               	movlb	0	; () banked
  1793   0001CC  EE20 F002          	lfsr	2,2
  1794   0001D0  51A3               	movf	detect_color@tempval& (0+255),w,b
  1795   0001D2  26D9               	addwf	fsr2l,f,c
  1796   0001D4  51A4               	movf	(detect_color@tempval+1)& (0+255),w,b
  1797   0001D6  22DA               	addwfc	fsr2h,f,c
  1798   0001D8  CFDE F0AF          	movff	postinc2,??_detect_color+10
  1799   0001DC  CFDD F0B0          	movff	postdec2,??_detect_color+11
  1800   0001E0  C0AF  F009         	movff	??_detect_color+10,___xxtofl@val
  1801   0001E4  C0B0  F00A         	movff	??_detect_color+11,___xxtofl@val+1
  1802   0001E8  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1803   0001EA  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1804   0001EC  0E00               	movlw	0
  1805   0001EE  ECD9  F009         	call	___xxtofl
  1806   0001F2  C009  F017         	movff	?___xxtofl,___fldiv@b
  1807   0001F6  C00A  F018         	movff	?___xxtofl+1,___fldiv@b+1
  1808   0001FA  C00B  F019         	movff	?___xxtofl+2,___fldiv@b+2
  1809   0001FE  C00C  F01A         	movff	?___xxtofl+3,___fldiv@b+3
  1810   000202  EC53  F005         	call	___fldiv	;wreg free
  1811   000206  C017  F030         	movff	?___fldiv,___flmul@b
  1812   00020A  C018  F031         	movff	?___fldiv+1,___flmul@b+1
  1813   00020E  C019  F032         	movff	?___fldiv+2,___flmul@b+2
  1814   000212  C01A  F033         	movff	?___fldiv+3,___flmul@b+3
  1815   000216  EC3E  F003         	call	___flmul	;wreg free
  1816   00021A  C030  F049         	movff	?___flmul,___fltol@f1
  1817   00021E  C031  F04A         	movff	?___flmul+1,___fltol@f1+1
  1818   000222  C032  F04B         	movff	?___flmul+2,___fltol@f1+2
  1819   000226  C033  F04C         	movff	?___flmul+3,___fltol@f1+3
  1820   00022A  EC69  F00B         	call	___fltol	;wreg free
  1821   00022E  5049               	movf	?___fltol^0,w,c
  1822   000230  0100               	movlb	0	; () banked
  1823   000232  6FB3               	movwf	detect_color@dist_G& (0+255),b
  1824   000234                     
  1825                           ; BSR set to: 0
  1826                           ;color.c: 107:     dist_B = ((float)(tempval->B)/(float)(tempval->R + tempval->G + tempv
      +                          al->B))*100;
  1827   000234  0E00               	movlw	0
  1828   000236  6E34               	movwf	___flmul@a^0,c
  1829   000238  0E00               	movlw	0
  1830   00023A  6E35               	movwf	(___flmul@a+1)^0,c
  1831   00023C  0EC8               	movlw	200
  1832   00023E  6E36               	movwf	(___flmul@a+2)^0,c
  1833   000240  0E42               	movlw	66
  1834   000242  6E37               	movwf	(___flmul@a+3)^0,c
  1835   000244  EE20 F004          	lfsr	2,4
  1836   000248  51A3               	movf	detect_color@tempval& (0+255),w,b
  1837   00024A  26D9               	addwf	fsr2l,f,c
  1838   00024C  51A4               	movf	(detect_color@tempval+1)& (0+255),w,b
  1839   00024E  22DA               	addwfc	fsr2h,f,c
  1840   000250  CFDE F0A5          	movff	postinc2,??_detect_color
  1841   000254  CFDD F0A6          	movff	postdec2,??_detect_color+1
  1842   000258  EE20 F002          	lfsr	2,2
  1843   00025C  51A3               	movf	detect_color@tempval& (0+255),w,b
  1844   00025E  26D9               	addwf	fsr2l,f,c
  1845   000260  51A4               	movf	(detect_color@tempval+1)& (0+255),w,b
  1846   000262  22DA               	addwfc	fsr2h,f,c
  1847   000264  CFDE F0A7          	movff	postinc2,??_detect_color+2
  1848   000268  CFDD F0A8          	movff	postdec2,??_detect_color+3
  1849   00026C  C0A3  FFD9         	movff	detect_color@tempval,fsr2l
  1850   000270  C0A4  FFDA         	movff	detect_color@tempval+1,fsr2h
  1851   000274  CFDE F0A9          	movff	postinc2,??_detect_color+4
  1852   000278  CFDD F0AA          	movff	postdec2,??_detect_color+5
  1853   00027C  51A7               	movf	(??_detect_color+2)& (0+255),w,b
  1854   00027E  25A9               	addwf	(??_detect_color+4)& (0+255),w,b
  1855   000280  6FAB               	movwf	(??_detect_color+6)& (0+255),b
  1856   000282  51A8               	movf	(??_detect_color+3)& (0+255),w,b
  1857   000284  21AA               	addwfc	(??_detect_color+5)& (0+255),w,b
  1858   000286  6FAC               	movwf	(??_detect_color+7)& (0+255),b
  1859   000288  51A5               	movf	??_detect_color& (0+255),w,b
  1860   00028A  25AB               	addwf	(??_detect_color+6)& (0+255),w,b
  1861   00028C  6FAD               	movwf	(??_detect_color+8)& (0+255),b
  1862   00028E  51A6               	movf	(??_detect_color+1)& (0+255),w,b
  1863   000290  21AC               	addwfc	(??_detect_color+7)& (0+255),w,b
  1864   000292  6FAE               	movwf	(??_detect_color+9)& (0+255),b
  1865   000294  C0AD  F009         	movff	??_detect_color+8,___xxtofl@val
  1866   000298  C0AE  F00A         	movff	??_detect_color+9,___xxtofl@val+1
  1867   00029C  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1868   00029E  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1869   0002A0  0E00               	movlw	0
  1870   0002A2  ECD9  F009         	call	___xxtofl
  1871   0002A6  C009  F01B         	movff	?___xxtofl,___fldiv@a
  1872   0002AA  C00A  F01C         	movff	?___xxtofl+1,___fldiv@a+1
  1873   0002AE  C00B  F01D         	movff	?___xxtofl+2,___fldiv@a+2
  1874   0002B2  C00C  F01E         	movff	?___xxtofl+3,___fldiv@a+3
  1875   0002B6  0100               	movlb	0	; () banked
  1876   0002B8  EE20 F004          	lfsr	2,4
  1877   0002BC  51A3               	movf	detect_color@tempval& (0+255),w,b
  1878   0002BE  26D9               	addwf	fsr2l,f,c
  1879   0002C0  51A4               	movf	(detect_color@tempval+1)& (0+255),w,b
  1880   0002C2  22DA               	addwfc	fsr2h,f,c
  1881   0002C4  CFDE F0AF          	movff	postinc2,??_detect_color+10
  1882   0002C8  CFDD F0B0          	movff	postdec2,??_detect_color+11
  1883   0002CC  C0AF  F009         	movff	??_detect_color+10,___xxtofl@val
  1884   0002D0  C0B0  F00A         	movff	??_detect_color+11,___xxtofl@val+1
  1885   0002D4  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1886   0002D6  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1887   0002D8  0E00               	movlw	0
  1888   0002DA  ECD9  F009         	call	___xxtofl
  1889   0002DE  C009  F017         	movff	?___xxtofl,___fldiv@b
  1890   0002E2  C00A  F018         	movff	?___xxtofl+1,___fldiv@b+1
  1891   0002E6  C00B  F019         	movff	?___xxtofl+2,___fldiv@b+2
  1892   0002EA  C00C  F01A         	movff	?___xxtofl+3,___fldiv@b+3
  1893   0002EE  EC53  F005         	call	___fldiv	;wreg free
  1894   0002F2  C017  F030         	movff	?___fldiv,___flmul@b
  1895   0002F6  C018  F031         	movff	?___fldiv+1,___flmul@b+1
  1896   0002FA  C019  F032         	movff	?___fldiv+2,___flmul@b+2
  1897   0002FE  C01A  F033         	movff	?___fldiv+3,___flmul@b+3
  1898   000302  EC3E  F003         	call	___flmul	;wreg free
  1899   000306  C030  F049         	movff	?___flmul,___fltol@f1
  1900   00030A  C031  F04A         	movff	?___flmul+1,___fltol@f1+1
  1901   00030E  C032  F04B         	movff	?___flmul+2,___fltol@f1+2
  1902   000312  C033  F04C         	movff	?___flmul+3,___fltol@f1+3
  1903   000316  EC69  F00B         	call	___fltol	;wreg free
  1904   00031A  5049               	movf	?___fltol^0,w,c
  1905   00031C  0100               	movlb	0	; () banked
  1906   00031E  6FB4               	movwf	detect_color@dist_B& (0+255),b
  1907   000320                     
  1908                           ; BSR set to: 0
  1909                           ;color.c: 109:     if(color_flag){
  1910   000320  5176               	movf	_color_flag& (0+255),w,b
  1911   000322  B4D8               	btfsc	status,2,c
  1912   000324  EF96  F001         	goto	u4061
  1913   000328  EF98  F001         	goto	u4060
  1914   00032C                     u4061:
  1915   00032C  EF3A  F003         	goto	l42
  1916   000330                     u4060:
  1917   000330                     
  1918                           ; BSR set to: 0
  1919                           ;color.c: 110:         if((74<=dist_R) && (dist_R<=76) && (10<=dist_G) && (dist_G<=12) &
      +                          & (13<=dist_B) && (dist_B<=15)){
  1920   000330  0E49               	movlw	73
  1921   000332  65B2               	cpfsgt	detect_color@dist_R& (0+255),b
  1922   000334  EF9E  F001         	goto	u4071
  1923   000338  EFA0  F001         	goto	u4070
  1924   00033C                     u4071:
  1925   00033C  EFCC  F001         	goto	l4160
  1926   000340                     u4070:
  1927   000340                     
  1928                           ; BSR set to: 0
  1929   000340  0E4D               	movlw	77
  1930   000342  61B2               	cpfslt	detect_color@dist_R& (0+255),b
  1931   000344  EFA6  F001         	goto	u4081
  1932   000348  EFA8  F001         	goto	u4080
  1933   00034C                     u4081:
  1934   00034C  EFCC  F001         	goto	l4160
  1935   000350                     u4080:
  1936   000350                     
  1937                           ; BSR set to: 0
  1938   000350  0E09               	movlw	9
  1939   000352  65B3               	cpfsgt	detect_color@dist_G& (0+255),b
  1940   000354  EFAE  F001         	goto	u4091
  1941   000358  EFB0  F001         	goto	u4090
  1942   00035C                     u4091:
  1943   00035C  EFCC  F001         	goto	l4160
  1944   000360                     u4090:
  1945   000360                     
  1946                           ; BSR set to: 0
  1947   000360  0E0D               	movlw	13
  1948   000362  61B3               	cpfslt	detect_color@dist_G& (0+255),b
  1949   000364  EFB6  F001         	goto	u4101
  1950   000368  EFB8  F001         	goto	u4100
  1951   00036C                     u4101:
  1952   00036C  EFCC  F001         	goto	l4160
  1953   000370                     u4100:
  1954   000370                     
  1955                           ; BSR set to: 0
  1956   000370  0E0C               	movlw	12
  1957   000372  65B4               	cpfsgt	detect_color@dist_B& (0+255),b
  1958   000374  EFBE  F001         	goto	u4111
  1959   000378  EFC0  F001         	goto	u4110
  1960   00037C                     u4111:
  1961   00037C  EFCC  F001         	goto	l4160
  1962   000380                     u4110:
  1963   000380                     
  1964                           ; BSR set to: 0
  1965   000380  0E10               	movlw	16
  1966   000382  61B4               	cpfslt	detect_color@dist_B& (0+255),b
  1967   000384  EFC6  F001         	goto	u4121
  1968   000388  EFC8  F001         	goto	u4120
  1969   00038C                     u4121:
  1970   00038C  EFCC  F001         	goto	l4160
  1971   000390                     u4120:
  1972   000390                     
  1973                           ; BSR set to: 0
  1974                           ;color.c: 111:             color = 1;
  1975   000390  0E01               	movlw	1
  1976   000392  6FB1               	movwf	detect_color@color& (0+255),b
  1977                           
  1978                           ;color.c: 112:         }
  1979   000394  EF3A  F003         	goto	l42
  1980   000398                     l4160:
  1981                           
  1982                           ; BSR set to: 0
  1983   000398  0E23               	movlw	35
  1984   00039A  65B2               	cpfsgt	detect_color@dist_R& (0+255),b
  1985   00039C  EFD2  F001         	goto	u4131
  1986   0003A0  EFD4  F001         	goto	u4130
  1987   0003A4                     u4131:
  1988   0003A4  EF00  F002         	goto	l4174
  1989   0003A8                     u4130:
  1990   0003A8                     
  1991                           ; BSR set to: 0
  1992   0003A8  0E27               	movlw	39
  1993   0003AA  61B2               	cpfslt	detect_color@dist_R& (0+255),b
  1994   0003AC  EFDA  F001         	goto	u4141
  1995   0003B0  EFDC  F001         	goto	u4140
  1996   0003B4                     u4141:
  1997   0003B4  EF00  F002         	goto	l4174
  1998   0003B8                     u4140:
  1999   0003B8                     
  2000                           ; BSR set to: 0
  2001   0003B8  0E28               	movlw	40
  2002   0003BA  65B3               	cpfsgt	detect_color@dist_G& (0+255),b
  2003   0003BC  EFE2  F001         	goto	u4151
  2004   0003C0  EFE4  F001         	goto	u4150
  2005   0003C4                     u4151:
  2006   0003C4  EF00  F002         	goto	l4174
  2007   0003C8                     u4150:
  2008   0003C8                     
  2009                           ; BSR set to: 0
  2010   0003C8  0E2C               	movlw	44
  2011   0003CA  61B3               	cpfslt	detect_color@dist_G& (0+255),b
  2012   0003CC  EFEA  F001         	goto	u4161
  2013   0003D0  EFEC  F001         	goto	u4160
  2014   0003D4                     u4161:
  2015   0003D4  EF00  F002         	goto	l4174
  2016   0003D8                     u4160:
  2017   0003D8                     
  2018                           ; BSR set to: 0
  2019   0003D8  0E13               	movlw	19
  2020   0003DA  65B4               	cpfsgt	detect_color@dist_B& (0+255),b
  2021   0003DC  EFF2  F001         	goto	u4171
  2022   0003E0  EFF4  F001         	goto	u4170
  2023   0003E4                     u4171:
  2024   0003E4  EF00  F002         	goto	l4174
  2025   0003E8                     u4170:
  2026   0003E8                     
  2027                           ; BSR set to: 0
  2028   0003E8  0E17               	movlw	23
  2029   0003EA  61B4               	cpfslt	detect_color@dist_B& (0+255),b
  2030   0003EC  EFFA  F001         	goto	u4181
  2031   0003F0  EFFC  F001         	goto	u4180
  2032   0003F4                     u4181:
  2033   0003F4  EF00  F002         	goto	l4174
  2034   0003F8                     u4180:
  2035   0003F8                     
  2036                           ; BSR set to: 0
  2037                           ;color.c: 114:             color = 2;
  2038   0003F8  0E02               	movlw	2
  2039   0003FA  6FB1               	movwf	detect_color@color& (0+255),b
  2040                           
  2041                           ;color.c: 115:         }
  2042   0003FC  EF3A  F003         	goto	l42
  2043   000400                     l4174:
  2044                           
  2045                           ; BSR set to: 0
  2046   000400  0E1C               	movlw	28
  2047   000402  65B2               	cpfsgt	detect_color@dist_R& (0+255),b
  2048   000404  EF06  F002         	goto	u4191
  2049   000408  EF08  F002         	goto	u4190
  2050   00040C                     u4191:
  2051   00040C  EF34  F002         	goto	l4188
  2052   000410                     u4190:
  2053   000410                     
  2054                           ; BSR set to: 0
  2055   000410  0E23               	movlw	35
  2056   000412  61B2               	cpfslt	detect_color@dist_R& (0+255),b
  2057   000414  EF0E  F002         	goto	u4201
  2058   000418  EF10  F002         	goto	u4200
  2059   00041C                     u4201:
  2060   00041C  EF34  F002         	goto	l4188
  2061   000420                     u4200:
  2062   000420                     
  2063                           ; BSR set to: 0
  2064   000420  0E1F               	movlw	31
  2065   000422  65B3               	cpfsgt	detect_color@dist_G& (0+255),b
  2066   000424  EF16  F002         	goto	u4211
  2067   000428  EF18  F002         	goto	u4210
  2068   00042C                     u4211:
  2069   00042C  EF34  F002         	goto	l4188
  2070   000430                     u4210:
  2071   000430                     
  2072                           ; BSR set to: 0
  2073   000430  0E27               	movlw	39
  2074   000432  61B3               	cpfslt	detect_color@dist_G& (0+255),b
  2075   000434  EF1E  F002         	goto	u4221
  2076   000438  EF20  F002         	goto	u4220
  2077   00043C                     u4221:
  2078   00043C  EF34  F002         	goto	l4188
  2079   000440                     u4220:
  2080   000440                     
  2081                           ; BSR set to: 0
  2082   000440  0E1E               	movlw	30
  2083   000442  65B4               	cpfsgt	detect_color@dist_B& (0+255),b
  2084   000444  EF26  F002         	goto	u4231
  2085   000448  EF28  F002         	goto	u4230
  2086   00044C                     u4231:
  2087   00044C  EF34  F002         	goto	l4188
  2088   000450                     u4230:
  2089   000450                     
  2090                           ; BSR set to: 0
  2091   000450  0E26               	movlw	38
  2092   000452  61B4               	cpfslt	detect_color@dist_B& (0+255),b
  2093   000454  EF2E  F002         	goto	u4241
  2094   000458  EF30  F002         	goto	u4240
  2095   00045C                     u4241:
  2096   00045C  EF34  F002         	goto	l4188
  2097   000460                     u4240:
  2098   000460                     
  2099                           ; BSR set to: 0
  2100                           ;color.c: 117:             color = 3;
  2101   000460  0E03               	movlw	3
  2102   000462  6FB1               	movwf	detect_color@color& (0+255),b
  2103                           
  2104                           ;color.c: 118:         }
  2105   000464  EF3A  F003         	goto	l42
  2106   000468                     l4188:
  2107                           
  2108                           ; BSR set to: 0
  2109   000468  0E31               	movlw	49
  2110   00046A  65B2               	cpfsgt	detect_color@dist_R& (0+255),b
  2111   00046C  EF3A  F002         	goto	u4251
  2112   000470  EF3C  F002         	goto	u4250
  2113   000474                     u4251:
  2114   000474  EF68  F002         	goto	l4202
  2115   000478                     u4250:
  2116   000478                     
  2117                           ; BSR set to: 0
  2118   000478  0E35               	movlw	53
  2119   00047A  61B2               	cpfslt	detect_color@dist_R& (0+255),b
  2120   00047C  EF42  F002         	goto	u4261
  2121   000480  EF44  F002         	goto	u4260
  2122   000484                     u4261:
  2123   000484  EF68  F002         	goto	l4202
  2124   000488                     u4260:
  2125   000488                     
  2126                           ; BSR set to: 0
  2127   000488  0E1D               	movlw	29
  2128   00048A  65B3               	cpfsgt	detect_color@dist_G& (0+255),b
  2129   00048C  EF4A  F002         	goto	u4271
  2130   000490  EF4C  F002         	goto	u4270
  2131   000494                     u4271:
  2132   000494  EF68  F002         	goto	l4202
  2133   000498                     u4270:
  2134   000498                     
  2135                           ; BSR set to: 0
  2136   000498  0E21               	movlw	33
  2137   00049A  61B3               	cpfslt	detect_color@dist_G& (0+255),b
  2138   00049C  EF52  F002         	goto	u4281
  2139   0004A0  EF54  F002         	goto	u4280
  2140   0004A4                     u4281:
  2141   0004A4  EF68  F002         	goto	l4202
  2142   0004A8                     u4280:
  2143   0004A8                     
  2144                           ; BSR set to: 0
  2145   0004A8  0E10               	movlw	16
  2146   0004AA  65B4               	cpfsgt	detect_color@dist_B& (0+255),b
  2147   0004AC  EF5A  F002         	goto	u4291
  2148   0004B0  EF5C  F002         	goto	u4290
  2149   0004B4                     u4291:
  2150   0004B4  EF68  F002         	goto	l4202
  2151   0004B8                     u4290:
  2152   0004B8                     
  2153                           ; BSR set to: 0
  2154   0004B8  0E14               	movlw	20
  2155   0004BA  61B4               	cpfslt	detect_color@dist_B& (0+255),b
  2156   0004BC  EF62  F002         	goto	u4301
  2157   0004C0  EF64  F002         	goto	u4300
  2158   0004C4                     u4301:
  2159   0004C4  EF68  F002         	goto	l4202
  2160   0004C8                     u4300:
  2161   0004C8                     
  2162                           ; BSR set to: 0
  2163                           ;color.c: 120:             color = 4;
  2164   0004C8  0E04               	movlw	4
  2165   0004CA  6FB1               	movwf	detect_color@color& (0+255),b
  2166                           
  2167                           ;color.c: 121:         }
  2168   0004CC  EF3A  F003         	goto	l42
  2169   0004D0                     l4202:
  2170                           
  2171                           ; BSR set to: 0
  2172   0004D0  0E2F               	movlw	47
  2173   0004D2  65B2               	cpfsgt	detect_color@dist_R& (0+255),b
  2174   0004D4  EF6E  F002         	goto	u4311
  2175   0004D8  EF70  F002         	goto	u4310
  2176   0004DC                     u4311:
  2177   0004DC  EF9C  F002         	goto	l4216
  2178   0004E0                     u4310:
  2179   0004E0                     
  2180                           ; BSR set to: 0
  2181   0004E0  0E33               	movlw	51
  2182   0004E2  61B2               	cpfslt	detect_color@dist_R& (0+255),b
  2183   0004E4  EF76  F002         	goto	u4321
  2184   0004E8  EF78  F002         	goto	u4320
  2185   0004EC                     u4321:
  2186   0004EC  EF9C  F002         	goto	l4216
  2187   0004F0                     u4320:
  2188   0004F0                     
  2189                           ; BSR set to: 0
  2190   0004F0  0E1B               	movlw	27
  2191   0004F2  65B3               	cpfsgt	detect_color@dist_G& (0+255),b
  2192   0004F4  EF7E  F002         	goto	u4331
  2193   0004F8  EF80  F002         	goto	u4330
  2194   0004FC                     u4331:
  2195   0004FC  EF9C  F002         	goto	l4216
  2196   000500                     u4330:
  2197   000500                     
  2198                           ; BSR set to: 0
  2199   000500  0E1F               	movlw	31
  2200   000502  61B3               	cpfslt	detect_color@dist_G& (0+255),b
  2201   000504  EF86  F002         	goto	u4341
  2202   000508  EF88  F002         	goto	u4340
  2203   00050C                     u4341:
  2204   00050C  EF9C  F002         	goto	l4216
  2205   000510                     u4340:
  2206   000510                     
  2207                           ; BSR set to: 0
  2208   000510  0E14               	movlw	20
  2209   000512  65B4               	cpfsgt	detect_color@dist_B& (0+255),b
  2210   000514  EF8E  F002         	goto	u4351
  2211   000518  EF90  F002         	goto	u4350
  2212   00051C                     u4351:
  2213   00051C  EF9C  F002         	goto	l4216
  2214   000520                     u4350:
  2215   000520                     
  2216                           ; BSR set to: 0
  2217   000520  0E18               	movlw	24
  2218   000522  61B4               	cpfslt	detect_color@dist_B& (0+255),b
  2219   000524  EF96  F002         	goto	u4361
  2220   000528  EF98  F002         	goto	u4360
  2221   00052C                     u4361:
  2222   00052C  EF9C  F002         	goto	l4216
  2223   000530                     u4360:
  2224   000530                     
  2225                           ; BSR set to: 0
  2226                           ;color.c: 123:             color = 5;
  2227   000530  0E05               	movlw	5
  2228   000532  6FB1               	movwf	detect_color@color& (0+255),b
  2229                           
  2230                           ;color.c: 124:         }
  2231   000534  EF3A  F003         	goto	l42
  2232   000538                     l4216:
  2233                           
  2234                           ; BSR set to: 0
  2235   000538  0E3A               	movlw	58
  2236   00053A  65B2               	cpfsgt	detect_color@dist_R& (0+255),b
  2237   00053C  EFA2  F002         	goto	u4371
  2238   000540  EFA4  F002         	goto	u4370
  2239   000544                     u4371:
  2240   000544  EFD0  F002         	goto	l4230
  2241   000548                     u4370:
  2242   000548                     
  2243                           ; BSR set to: 0
  2244   000548  0E3E               	movlw	62
  2245   00054A  61B2               	cpfslt	detect_color@dist_R& (0+255),b
  2246   00054C  EFAA  F002         	goto	u4381
  2247   000550  EFAC  F002         	goto	u4380
  2248   000554                     u4381:
  2249   000554  EFD0  F002         	goto	l4230
  2250   000558                     u4380:
  2251   000558                     
  2252                           ; BSR set to: 0
  2253   000558  0E15               	movlw	21
  2254   00055A  65B3               	cpfsgt	detect_color@dist_G& (0+255),b
  2255   00055C  EFB2  F002         	goto	u4391
  2256   000560  EFB4  F002         	goto	u4390
  2257   000564                     u4391:
  2258   000564  EFD0  F002         	goto	l4230
  2259   000568                     u4390:
  2260   000568                     
  2261                           ; BSR set to: 0
  2262   000568  0E19               	movlw	25
  2263   00056A  61B3               	cpfslt	detect_color@dist_G& (0+255),b
  2264   00056C  EFBA  F002         	goto	u4401
  2265   000570  EFBC  F002         	goto	u4400
  2266   000574                     u4401:
  2267   000574  EFD0  F002         	goto	l4230
  2268   000578                     u4400:
  2269   000578                     
  2270                           ; BSR set to: 0
  2271   000578  0E0F               	movlw	15
  2272   00057A  65B4               	cpfsgt	detect_color@dist_B& (0+255),b
  2273   00057C  EFC2  F002         	goto	u4411
  2274   000580  EFC4  F002         	goto	u4410
  2275   000584                     u4411:
  2276   000584  EFD0  F002         	goto	l4230
  2277   000588                     u4410:
  2278   000588                     
  2279                           ; BSR set to: 0
  2280   000588  0E13               	movlw	19
  2281   00058A  61B4               	cpfslt	detect_color@dist_B& (0+255),b
  2282   00058C  EFCA  F002         	goto	u4421
  2283   000590  EFCC  F002         	goto	u4420
  2284   000594                     u4421:
  2285   000594  EFD0  F002         	goto	l4230
  2286   000598                     u4420:
  2287   000598                     
  2288                           ; BSR set to: 0
  2289                           ;color.c: 126:             color = 6;
  2290   000598  0E06               	movlw	6
  2291   00059A  6FB1               	movwf	detect_color@color& (0+255),b
  2292                           
  2293                           ;color.c: 127:         }
  2294   00059C  EF3A  F003         	goto	l42
  2295   0005A0                     l4230:
  2296                           
  2297                           ; BSR set to: 0
  2298   0005A0  0E20               	movlw	32
  2299   0005A2  65B2               	cpfsgt	detect_color@dist_R& (0+255),b
  2300   0005A4  EFD6  F002         	goto	u4431
  2301   0005A8  EFD8  F002         	goto	u4430
  2302   0005AC                     u4431:
  2303   0005AC  EF04  F003         	goto	l4244
  2304   0005B0                     u4430:
  2305   0005B0                     
  2306                           ; BSR set to: 0
  2307   0005B0  0E24               	movlw	36
  2308   0005B2  61B2               	cpfslt	detect_color@dist_R& (0+255),b
  2309   0005B4  EFDE  F002         	goto	u4441
  2310   0005B8  EFE0  F002         	goto	u4440
  2311   0005BC                     u4441:
  2312   0005BC  EF04  F003         	goto	l4244
  2313   0005C0                     u4440:
  2314   0005C0                     
  2315                           ; BSR set to: 0
  2316   0005C0  0E25               	movlw	37
  2317   0005C2  65B3               	cpfsgt	detect_color@dist_G& (0+255),b
  2318   0005C4  EFE6  F002         	goto	u4451
  2319   0005C8  EFE8  F002         	goto	u4450
  2320   0005CC                     u4451:
  2321   0005CC  EF04  F003         	goto	l4244
  2322   0005D0                     u4450:
  2323   0005D0                     
  2324                           ; BSR set to: 0
  2325   0005D0  0E29               	movlw	41
  2326   0005D2  61B3               	cpfslt	detect_color@dist_G& (0+255),b
  2327   0005D4  EFEE  F002         	goto	u4461
  2328   0005D8  EFF0  F002         	goto	u4460
  2329   0005DC                     u4461:
  2330   0005DC  EF04  F003         	goto	l4244
  2331   0005E0                     u4460:
  2332   0005E0                     
  2333                           ; BSR set to: 0
  2334   0005E0  0E19               	movlw	25
  2335   0005E2  65B4               	cpfsgt	detect_color@dist_B& (0+255),b
  2336   0005E4  EFF6  F002         	goto	u4471
  2337   0005E8  EFF8  F002         	goto	u4470
  2338   0005EC                     u4471:
  2339   0005EC  EF04  F003         	goto	l4244
  2340   0005F0                     u4470:
  2341   0005F0                     
  2342                           ; BSR set to: 0
  2343   0005F0  0E1D               	movlw	29
  2344   0005F2  61B4               	cpfslt	detect_color@dist_B& (0+255),b
  2345   0005F4  EFFE  F002         	goto	u4481
  2346   0005F8  EF00  F003         	goto	u4480
  2347   0005FC                     u4481:
  2348   0005FC  EF04  F003         	goto	l4244
  2349   000600                     u4480:
  2350   000600                     
  2351                           ; BSR set to: 0
  2352                           ;color.c: 129:             color = 7;
  2353   000600  0E07               	movlw	7
  2354   000602  6FB1               	movwf	detect_color@color& (0+255),b
  2355                           
  2356                           ;color.c: 130:         }
  2357   000604  EF3A  F003         	goto	l42
  2358   000608                     l4244:
  2359                           
  2360                           ; BSR set to: 0
  2361   000608  0E2A               	movlw	42
  2362   00060A  65B2               	cpfsgt	detect_color@dist_R& (0+255),b
  2363   00060C  EF0A  F003         	goto	u4491
  2364   000610  EF0C  F003         	goto	u4490
  2365   000614                     u4491:
  2366   000614  EF38  F003         	goto	l4258
  2367   000618                     u4490:
  2368   000618                     
  2369                           ; BSR set to: 0
  2370   000618  0E2E               	movlw	46
  2371   00061A  61B2               	cpfslt	detect_color@dist_R& (0+255),b
  2372   00061C  EF12  F003         	goto	u4501
  2373   000620  EF14  F003         	goto	u4500
  2374   000624                     u4501:
  2375   000624  EF38  F003         	goto	l4258
  2376   000628                     u4500:
  2377   000628                     
  2378                           ; BSR set to: 0
  2379   000628  0E1F               	movlw	31
  2380   00062A  65B3               	cpfsgt	detect_color@dist_G& (0+255),b
  2381   00062C  EF1A  F003         	goto	u4511
  2382   000630  EF1C  F003         	goto	u4510
  2383   000634                     u4511:
  2384   000634  EF38  F003         	goto	l4258
  2385   000638                     u4510:
  2386   000638                     
  2387                           ; BSR set to: 0
  2388   000638  0E23               	movlw	35
  2389   00063A  61B3               	cpfslt	detect_color@dist_G& (0+255),b
  2390   00063C  EF22  F003         	goto	u4521
  2391   000640  EF24  F003         	goto	u4520
  2392   000644                     u4521:
  2393   000644  EF38  F003         	goto	l4258
  2394   000648                     u4520:
  2395   000648                     
  2396                           ; BSR set to: 0
  2397   000648  0E15               	movlw	21
  2398   00064A  65B4               	cpfsgt	detect_color@dist_B& (0+255),b
  2399   00064C  EF2A  F003         	goto	u4531
  2400   000650  EF2C  F003         	goto	u4530
  2401   000654                     u4531:
  2402   000654  EF38  F003         	goto	l4258
  2403   000658                     u4530:
  2404   000658                     
  2405                           ; BSR set to: 0
  2406   000658  0E19               	movlw	25
  2407   00065A  61B4               	cpfslt	detect_color@dist_B& (0+255),b
  2408   00065C  EF32  F003         	goto	u4541
  2409   000660  EF34  F003         	goto	u4540
  2410   000664                     u4541:
  2411   000664  EF38  F003         	goto	l4258
  2412   000668                     u4540:
  2413   000668                     
  2414                           ; BSR set to: 0
  2415                           ;color.c: 132:             color = 8;
  2416   000668  0E08               	movlw	8
  2417   00066A  6FB1               	movwf	detect_color@color& (0+255),b
  2418                           
  2419                           ;color.c: 133:         }
  2420   00066C  EF3A  F003         	goto	l42
  2421   000670                     l4258:
  2422                           
  2423                           ; BSR set to: 0
  2424                           ;color.c: 135:             color = 0;
  2425   000670  0E00               	movlw	0
  2426   000672  6FB1               	movwf	detect_color@color& (0+255),b
  2427   000674                     l42:
  2428                           
  2429                           ; BSR set to: 0
  2430                           ;color.c: 138:     color_flag = 0;
  2431   000674  0E00               	movlw	0
  2432   000676  6F76               	movwf	_color_flag& (0+255),b
  2433                           
  2434                           ;color.c: 139:     return color;
  2435   000678  51B1               	movf	detect_color@color& (0+255),w,b
  2436   00067A                     
  2437                           ; BSR set to: 0
  2438   00067A  0012               	return		;funcret
  2439   00067C                     __end_of_detect_color:
  2440                           	callstack 0
  2441                           
  2442 ;; *************** function ___xxtofl *****************
  2443 ;; Defined at:
  2444 ;;		line 10 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\xxtofl.c"
  2445 ;; Parameters:    Size  Location     Type
  2446 ;;  sign            1    wreg     unsigned char 
  2447 ;;  val             4    8[COMRAM] long 
  2448 ;; Auto vars:     Size  Location     Type
  2449 ;;  sign            1   16[COMRAM] unsigned char 
  2450 ;;  arg             4   18[COMRAM] unsigned long 
  2451 ;;  exp             1   17[COMRAM] unsigned char 
  2452 ;; Return value:  Size  Location     Type
  2453 ;;                  4    8[COMRAM] unsigned char 
  2454 ;; Registers used:
  2455 ;;		wreg, status,2, status,0
  2456 ;; Tracked objects:
  2457 ;;		On entry : 0/0
  2458 ;;		On exit  : 0/0
  2459 ;;		Unchanged: 0/0
  2460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2461 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2462 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2463 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2464 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2465 ;;Total ram usage:       14 bytes
  2466 ;; Hardware stack levels used: 1
  2467 ;; Hardware stack levels required when called: 7
  2468 ;; This function calls:
  2469 ;;		Nothing
  2470 ;; This function is called by:
  2471 ;;		_detect_color
  2472 ;; This function uses a non-reentrant model
  2473 ;;
  2474                           
  2475                           	psect	text3
  2476   0013B2                     __ptext3:
  2477                           	callstack 0
  2478   0013B2                     ___xxtofl:
  2479                           	callstack 22
  2480                           
  2481                           ; BSR set to: 0
  2482                           ;incstack = 0
  2483                           ;___xxtofl@sign stored from wreg
  2484   0013B2  6E11               	movwf	___xxtofl@sign^0,c
  2485   0013B4  5011               	movf	___xxtofl@sign^0,w,c
  2486   0013B6  B4D8               	btfsc	status,2,c
  2487   0013B8  EFE0  F009         	goto	u3191
  2488   0013BC  EFE2  F009         	goto	u3190
  2489   0013C0                     u3191:
  2490   0013C0  EF04  F00A         	goto	l1368
  2491   0013C4                     u3190:
  2492   0013C4  BE0C               	btfsc	(___xxtofl@val+3)^0,7,c
  2493   0013C6  EFE9  F009         	goto	u3200
  2494   0013CA  EFE7  F009         	goto	u3201
  2495   0013CE                     u3201:
  2496   0013CE  EF04  F00A         	goto	l1368
  2497   0013D2                     u3200:
  2498   0013D2  C009  F00D         	movff	___xxtofl@val,??___xxtofl
  2499   0013D6  C00A  F00E         	movff	___xxtofl@val+1,??___xxtofl+1
  2500   0013DA  C00B  F00F         	movff	___xxtofl@val+2,??___xxtofl+2
  2501   0013DE  C00C  F010         	movff	___xxtofl@val+3,??___xxtofl+3
  2502   0013E2  1E0D               	comf	??___xxtofl^0,f,c
  2503   0013E4  1E0E               	comf	(??___xxtofl+1)^0,f,c
  2504   0013E6  1E0F               	comf	(??___xxtofl+2)^0,f,c
  2505   0013E8  1E10               	comf	(??___xxtofl+3)^0,f,c
  2506   0013EA  2A0D               	incf	??___xxtofl^0,f,c
  2507   0013EC  0E00               	movlw	0
  2508   0013EE  220E               	addwfc	(??___xxtofl+1)^0,f,c
  2509   0013F0  220F               	addwfc	(??___xxtofl+2)^0,f,c
  2510   0013F2  2210               	addwfc	(??___xxtofl+3)^0,f,c
  2511   0013F4  C00D  F013         	movff	??___xxtofl,___xxtofl@arg
  2512   0013F8  C00E  F014         	movff	??___xxtofl+1,___xxtofl@arg+1
  2513   0013FC  C00F  F015         	movff	??___xxtofl+2,___xxtofl@arg+2
  2514   001400  C010  F016         	movff	??___xxtofl+3,___xxtofl@arg+3
  2515   001404  EF0C  F00A         	goto	l3654
  2516   001408                     l1368:
  2517   001408  C009  F013         	movff	___xxtofl@val,___xxtofl@arg
  2518   00140C  C00A  F014         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2519   001410  C00B  F015         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2520   001414  C00C  F016         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2521   001418                     l3654:
  2522   001418  5009               	movf	___xxtofl@val^0,w,c
  2523   00141A  100A               	iorwf	(___xxtofl@val+1)^0,w,c
  2524   00141C  100B               	iorwf	(___xxtofl@val+2)^0,w,c
  2525   00141E  100C               	iorwf	(___xxtofl@val+3)^0,w,c
  2526   001420  A4D8               	btfss	status,2,c
  2527   001422  EF15  F00A         	goto	u3211
  2528   001426  EF17  F00A         	goto	u3210
  2529   00142A                     u3211:
  2530   00142A  EF21  F00A         	goto	l3660
  2531   00142E                     u3210:
  2532   00142E  0E00               	movlw	0
  2533   001430  6E09               	movwf	?___xxtofl^0,c
  2534   001432  0E00               	movlw	0
  2535   001434  6E0A               	movwf	(?___xxtofl+1)^0,c
  2536   001436  0E00               	movlw	0
  2537   001438  6E0B               	movwf	(?___xxtofl+2)^0,c
  2538   00143A  0E00               	movlw	0
  2539   00143C  6E0C               	movwf	(?___xxtofl+3)^0,c
  2540   00143E  EFB2  F00A         	goto	l1371
  2541   001442                     l3660:
  2542   001442  0E96               	movlw	150
  2543   001444  6E12               	movwf	___xxtofl@exp^0,c
  2544   001446  EF2B  F00A         	goto	l3664
  2545   00144A                     l3662:
  2546   00144A  2A12               	incf	___xxtofl@exp^0,f,c
  2547   00144C  90D8               	bcf	status,0,c
  2548   00144E  3216               	rrcf	(___xxtofl@arg+3)^0,f,c
  2549   001450  3215               	rrcf	(___xxtofl@arg+2)^0,f,c
  2550   001452  3214               	rrcf	(___xxtofl@arg+1)^0,f,c
  2551   001454  3213               	rrcf	___xxtofl@arg^0,f,c
  2552   001456                     l3664:
  2553   001456  0E00               	movlw	0
  2554   001458  1413               	andwf	___xxtofl@arg^0,w,c
  2555   00145A  6E0D               	movwf	??___xxtofl^0,c
  2556   00145C  0E00               	movlw	0
  2557   00145E  1414               	andwf	(___xxtofl@arg+1)^0,w,c
  2558   001460  6E0E               	movwf	(??___xxtofl+1)^0,c
  2559   001462  0E00               	movlw	0
  2560   001464  1415               	andwf	(___xxtofl@arg+2)^0,w,c
  2561   001466  6E0F               	movwf	(??___xxtofl+2)^0,c
  2562   001468  0EFE               	movlw	254
  2563   00146A  1416               	andwf	(___xxtofl@arg+3)^0,w,c
  2564   00146C  6E10               	movwf	(??___xxtofl+3)^0,c
  2565   00146E  500D               	movf	??___xxtofl^0,w,c
  2566   001470  100E               	iorwf	(??___xxtofl+1)^0,w,c
  2567   001472  100F               	iorwf	(??___xxtofl+2)^0,w,c
  2568   001474  1010               	iorwf	(??___xxtofl+3)^0,w,c
  2569   001476  A4D8               	btfss	status,2,c
  2570   001478  EF40  F00A         	goto	u3221
  2571   00147C  EF42  F00A         	goto	u3220
  2572   001480                     u3221:
  2573   001480  EF25  F00A         	goto	l3662
  2574   001484                     u3220:
  2575   001484  EF50  F00A         	goto	l1375
  2576   001488                     l3666:
  2577   001488  2A12               	incf	___xxtofl@exp^0,f,c
  2578   00148A  0E01               	movlw	1
  2579   00148C  2613               	addwf	___xxtofl@arg^0,f,c
  2580   00148E  0E00               	movlw	0
  2581   001490  2214               	addwfc	(___xxtofl@arg+1)^0,f,c
  2582   001492  2215               	addwfc	(___xxtofl@arg+2)^0,f,c
  2583   001494  2216               	addwfc	(___xxtofl@arg+3)^0,f,c
  2584   001496  90D8               	bcf	status,0,c
  2585   001498  3216               	rrcf	(___xxtofl@arg+3)^0,f,c
  2586   00149A  3215               	rrcf	(___xxtofl@arg+2)^0,f,c
  2587   00149C  3214               	rrcf	(___xxtofl@arg+1)^0,f,c
  2588   00149E  3213               	rrcf	___xxtofl@arg^0,f,c
  2589   0014A0                     l1375:
  2590   0014A0  0E00               	movlw	0
  2591   0014A2  1413               	andwf	___xxtofl@arg^0,w,c
  2592   0014A4  6E0D               	movwf	??___xxtofl^0,c
  2593   0014A6  0E00               	movlw	0
  2594   0014A8  1414               	andwf	(___xxtofl@arg+1)^0,w,c
  2595   0014AA  6E0E               	movwf	(??___xxtofl+1)^0,c
  2596   0014AC  0E00               	movlw	0
  2597   0014AE  1415               	andwf	(___xxtofl@arg+2)^0,w,c
  2598   0014B0  6E0F               	movwf	(??___xxtofl+2)^0,c
  2599   0014B2  0EFF               	movlw	255
  2600   0014B4  1416               	andwf	(___xxtofl@arg+3)^0,w,c
  2601   0014B6  6E10               	movwf	(??___xxtofl+3)^0,c
  2602   0014B8  500D               	movf	??___xxtofl^0,w,c
  2603   0014BA  100E               	iorwf	(??___xxtofl+1)^0,w,c
  2604   0014BC  100F               	iorwf	(??___xxtofl+2)^0,w,c
  2605   0014BE  1010               	iorwf	(??___xxtofl+3)^0,w,c
  2606   0014C0  A4D8               	btfss	status,2,c
  2607   0014C2  EF65  F00A         	goto	u3231
  2608   0014C6  EF67  F00A         	goto	u3230
  2609   0014CA                     u3231:
  2610   0014CA  EF44  F00A         	goto	l3666
  2611   0014CE                     u3230:
  2612   0014CE  EF6F  F00A         	goto	l3674
  2613   0014D2                     l3672:
  2614   0014D2  0612               	decf	___xxtofl@exp^0,f,c
  2615   0014D4  90D8               	bcf	status,0,c
  2616   0014D6  3613               	rlcf	___xxtofl@arg^0,f,c
  2617   0014D8  3614               	rlcf	(___xxtofl@arg+1)^0,f,c
  2618   0014DA  3615               	rlcf	(___xxtofl@arg+2)^0,f,c
  2619   0014DC  3616               	rlcf	(___xxtofl@arg+3)^0,f,c
  2620   0014DE                     l3674:
  2621   0014DE  BE15               	btfsc	(___xxtofl@arg+2)^0,7,c
  2622   0014E0  EF74  F00A         	goto	u3241
  2623   0014E4  EF76  F00A         	goto	u3240
  2624   0014E8                     u3241:
  2625   0014E8  EF7E  F00A         	goto	l1382
  2626   0014EC                     u3240:
  2627   0014EC  0E02               	movlw	2
  2628   0014EE  6012               	cpfslt	___xxtofl@exp^0,c
  2629   0014F0  EF7C  F00A         	goto	u3251
  2630   0014F4  EF7E  F00A         	goto	u3250
  2631   0014F8                     u3251:
  2632   0014F8  EF69  F00A         	goto	l3672
  2633   0014FC                     u3250:
  2634   0014FC                     l1382:
  2635   0014FC  B012               	btfsc	___xxtofl@exp^0,0,c
  2636   0014FE  EF83  F00A         	goto	u3261
  2637   001502  EF85  F00A         	goto	u3260
  2638   001506                     u3261:
  2639   001506  EF86  F00A         	goto	l3680
  2640   00150A                     u3260:
  2641   00150A  9E15               	bcf	(___xxtofl@arg+2)^0,7,c
  2642   00150C                     l3680:
  2643   00150C  90D8               	bcf	status,0,c
  2644   00150E  3212               	rrcf	___xxtofl@exp^0,f,c
  2645   001510  C012  F00D         	movff	___xxtofl@exp,??___xxtofl
  2646   001514  6A0E               	clrf	(??___xxtofl+1)^0,c
  2647   001516  6A0F               	clrf	(??___xxtofl+2)^0,c
  2648   001518  6A10               	clrf	(??___xxtofl+3)^0,c
  2649   00151A  C00D  F010         	movff	??___xxtofl,??___xxtofl+3
  2650   00151E  6A0F               	clrf	(??___xxtofl+2)^0,c
  2651   001520  6A0E               	clrf	(??___xxtofl+1)^0,c
  2652   001522  6A0D               	clrf	??___xxtofl^0,c
  2653   001524  500D               	movf	??___xxtofl^0,w,c
  2654   001526  1213               	iorwf	___xxtofl@arg^0,f,c
  2655   001528  500E               	movf	(??___xxtofl+1)^0,w,c
  2656   00152A  1214               	iorwf	(___xxtofl@arg+1)^0,f,c
  2657   00152C  500F               	movf	(??___xxtofl+2)^0,w,c
  2658   00152E  1215               	iorwf	(___xxtofl@arg+2)^0,f,c
  2659   001530  5010               	movf	(??___xxtofl+3)^0,w,c
  2660   001532  1216               	iorwf	(___xxtofl@arg+3)^0,f,c
  2661   001534  5011               	movf	___xxtofl@sign^0,w,c
  2662   001536  B4D8               	btfsc	status,2,c
  2663   001538  EFA0  F00A         	goto	u3271
  2664   00153C  EFA2  F00A         	goto	u3270
  2665   001540                     u3271:
  2666   001540  EFAA  F00A         	goto	l3690
  2667   001544                     u3270:
  2668   001544  BE0C               	btfsc	(___xxtofl@val+3)^0,7,c
  2669   001546  EFA9  F00A         	goto	u3280
  2670   00154A  EFA7  F00A         	goto	u3281
  2671   00154E                     u3281:
  2672   00154E  EFAA  F00A         	goto	l3690
  2673   001552                     u3280:
  2674   001552  8E16               	bsf	(___xxtofl@arg+3)^0,7,c
  2675   001554                     l3690:
  2676   001554  C013  F009         	movff	___xxtofl@arg,?___xxtofl
  2677   001558  C014  F00A         	movff	___xxtofl@arg+1,?___xxtofl+1
  2678   00155C  C015  F00B         	movff	___xxtofl@arg+2,?___xxtofl+2
  2679   001560  C016  F00C         	movff	___xxtofl@arg+3,?___xxtofl+3
  2680   001564                     l1371:
  2681   001564  0012               	return		;funcret
  2682   001566                     __end_of___xxtofl:
  2683                           	callstack 0
  2684                           
  2685 ;; *************** function ___fltol *****************
  2686 ;; Defined at:
  2687 ;;		line 43 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\fltol.c"
  2688 ;; Parameters:    Size  Location     Type
  2689 ;;  f1              4   72[COMRAM] unsigned char 
  2690 ;; Auto vars:     Size  Location     Type
  2691 ;;  exp1            1   77[COMRAM] unsigned char 
  2692 ;;  sign1           1   76[COMRAM] unsigned char 
  2693 ;; Return value:  Size  Location     Type
  2694 ;;                  4   72[COMRAM] long 
  2695 ;; Registers used:
  2696 ;;		wreg, status,2, status,0
  2697 ;; Tracked objects:
  2698 ;;		On entry : 0/0
  2699 ;;		On exit  : 0/0
  2700 ;;		Unchanged: 0/0
  2701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2702 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2703 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2704 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2705 ;;      Totals:         6       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2706 ;;Total ram usage:       10 bytes
  2707 ;; Hardware stack levels used: 1
  2708 ;; Hardware stack levels required when called: 7
  2709 ;; This function calls:
  2710 ;;		Nothing
  2711 ;; This function is called by:
  2712 ;;		_detect_color
  2713 ;; This function uses a non-reentrant model
  2714 ;;
  2715                           
  2716                           	psect	text4
  2717   0016D2                     __ptext4:
  2718                           	callstack 0
  2719   0016D2                     ___fltol:
  2720                           	callstack 22
  2721   0016D2  344B               	rlcf	(___fltol@f1+2)^0,w,c
  2722   0016D4  344C               	rlcf	(___fltol@f1+3)^0,w,c
  2723   0016D6  6E4E               	movwf	___fltol@exp1^0,c
  2724   0016D8  504E               	movf	___fltol@exp1^0,w,c
  2725   0016DA  A4D8               	btfss	status,2,c
  2726   0016DC  EF72  F00B         	goto	u3991
  2727   0016E0  EF74  F00B         	goto	u3990
  2728   0016E4                     u3991:
  2729   0016E4  EF7E  F00B         	goto	l4098
  2730   0016E8                     u3990:
  2731   0016E8                     l4094:
  2732   0016E8  0E00               	movlw	0
  2733   0016EA  6E49               	movwf	?___fltol^0,c
  2734   0016EC  0E00               	movlw	0
  2735   0016EE  6E4A               	movwf	(?___fltol+1)^0,c
  2736   0016F0  0E00               	movlw	0
  2737   0016F2  6E4B               	movwf	(?___fltol+2)^0,c
  2738   0016F4  0E00               	movlw	0
  2739   0016F6  6E4C               	movwf	(?___fltol+3)^0,c
  2740   0016F8  EFEC  F00B         	goto	l1010
  2741   0016FC                     l4098:
  2742   0016FC  C049  F09F         	movff	___fltol@f1,??___fltol
  2743   001700  C04A  F0A0         	movff	___fltol@f1+1,??___fltol+1
  2744   001704  C04B  F0A1         	movff	___fltol@f1+2,??___fltol+2
  2745   001708  C04C  F0A2         	movff	___fltol@f1+3,??___fltol+3
  2746   00170C  0E20               	movlw	32
  2747   00170E  EF8F  F00B         	goto	u4000
  2748   001712                     u4005:
  2749   001712  0100               	movlb	0	; () banked
  2750   001714  90D8               	bcf	status,0,c
  2751   001716  33A2               	rrcf	(??___fltol+3)& (0+255),f,b
  2752   001718  33A1               	rrcf	(??___fltol+2)& (0+255),f,b
  2753   00171A  33A0               	rrcf	(??___fltol+1)& (0+255),f,b
  2754   00171C  339F               	rrcf	??___fltol& (0+255),f,b
  2755   00171E                     u4000:
  2756   00171E  2EE8               	decfsz	wreg,f,c
  2757   001720  EF89  F00B         	goto	u4005
  2758   001724  519F               	movf	??___fltol& (0+255),w,b
  2759   001726  6E4D               	movwf	___fltol@sign1^0,c
  2760   001728                     
  2761                           ; BSR set to: 0
  2762   001728  8E4B               	bsf	(___fltol@f1+2)^0,7,c
  2763   00172A                     
  2764                           ; BSR set to: 0
  2765   00172A  0EFF               	movlw	255
  2766   00172C  1649               	andwf	___fltol@f1^0,f,c
  2767   00172E  0EFF               	movlw	255
  2768   001730  164A               	andwf	(___fltol@f1+1)^0,f,c
  2769   001732  0EFF               	movlw	255
  2770   001734  164B               	andwf	(___fltol@f1+2)^0,f,c
  2771   001736  0E00               	movlw	0
  2772   001738  164C               	andwf	(___fltol@f1+3)^0,f,c
  2773   00173A                     
  2774                           ; BSR set to: 0
  2775   00173A  0E96               	movlw	150
  2776   00173C  5E4E               	subwf	___fltol@exp1^0,f,c
  2777   00173E                     
  2778                           ; BSR set to: 0
  2779   00173E  BE4E               	btfsc	___fltol@exp1^0,7,c
  2780   001740  EFA6  F00B         	goto	u4010
  2781   001744  EFA4  F00B         	goto	u4011
  2782   001748                     u4011:
  2783   001748  EFBC  F00B         	goto	l4118
  2784   00174C                     u4010:
  2785   00174C                     
  2786                           ; BSR set to: 0
  2787   00174C  504E               	movf	___fltol@exp1^0,w,c
  2788   00174E  0A80               	xorlw	128
  2789   001750  0F97               	addlw	151
  2790   001752  B0D8               	btfsc	status,0,c
  2791   001754  EFAE  F00B         	goto	u4021
  2792   001758  EFB0  F00B         	goto	u4020
  2793   00175C                     u4021:
  2794   00175C  EFB2  F00B         	goto	l4114
  2795   001760                     u4020:
  2796   001760  EF74  F00B         	goto	l4094
  2797   001764                     l4114:
  2798   001764  90D8               	bcf	status,0,c
  2799   001766  324C               	rrcf	(___fltol@f1+3)^0,f,c
  2800   001768  324B               	rrcf	(___fltol@f1+2)^0,f,c
  2801   00176A  324A               	rrcf	(___fltol@f1+1)^0,f,c
  2802   00176C  3249               	rrcf	___fltol@f1^0,f,c
  2803   00176E  3E4E               	incfsz	___fltol@exp1^0,f,c
  2804   001770  EFB2  F00B         	goto	l4114
  2805   001774  EFD4  F00B         	goto	l4128
  2806   001778                     l4118:
  2807                           
  2808                           ; BSR set to: 0
  2809   001778  0E1F               	movlw	31
  2810   00177A  644E               	cpfsgt	___fltol@exp1^0,c
  2811   00177C  EFC2  F00B         	goto	u4031
  2812   001780  EFC4  F00B         	goto	u4030
  2813   001784                     u4031:
  2814   001784  EFCC  F00B         	goto	l4126
  2815   001788                     u4030:
  2816   001788  EF74  F00B         	goto	l4094
  2817   00178C                     l4124:
  2818   00178C  90D8               	bcf	status,0,c
  2819   00178E  3649               	rlcf	___fltol@f1^0,f,c
  2820   001790  364A               	rlcf	(___fltol@f1+1)^0,f,c
  2821   001792  364B               	rlcf	(___fltol@f1+2)^0,f,c
  2822   001794  364C               	rlcf	(___fltol@f1+3)^0,f,c
  2823   001796  064E               	decf	___fltol@exp1^0,f,c
  2824   001798                     l4126:
  2825   001798  504E               	movf	___fltol@exp1^0,w,c
  2826   00179A  A4D8               	btfss	status,2,c
  2827   00179C  EFD2  F00B         	goto	u4041
  2828   0017A0  EFD4  F00B         	goto	u4040
  2829   0017A4                     u4041:
  2830   0017A4  EFC6  F00B         	goto	l4124
  2831   0017A8                     u4040:
  2832   0017A8                     l4128:
  2833   0017A8  504D               	movf	___fltol@sign1^0,w,c
  2834   0017AA  B4D8               	btfsc	status,2,c
  2835   0017AC  EFDA  F00B         	goto	u4051
  2836   0017B0  EFDC  F00B         	goto	u4050
  2837   0017B4                     u4051:
  2838   0017B4  EFE4  F00B         	goto	l4132
  2839   0017B8                     u4050:
  2840   0017B8  1E4C               	comf	(___fltol@f1+3)^0,f,c
  2841   0017BA  1E4B               	comf	(___fltol@f1+2)^0,f,c
  2842   0017BC  1E4A               	comf	(___fltol@f1+1)^0,f,c
  2843   0017BE  6C49               	negf	___fltol@f1^0,c
  2844   0017C0  0E00               	movlw	0
  2845   0017C2  224A               	addwfc	(___fltol@f1+1)^0,f,c
  2846   0017C4  224B               	addwfc	(___fltol@f1+2)^0,f,c
  2847   0017C6  224C               	addwfc	(___fltol@f1+3)^0,f,c
  2848   0017C8                     l4132:
  2849   0017C8  C049  F049         	movff	___fltol@f1,?___fltol
  2850   0017CC  C04A  F04A         	movff	___fltol@f1+1,?___fltol+1
  2851   0017D0  C04B  F04B         	movff	___fltol@f1+2,?___fltol+2
  2852   0017D4  C04C  F04C         	movff	___fltol@f1+3,?___fltol+3
  2853   0017D8                     l1010:
  2854   0017D8  0012               	return		;funcret
  2855   0017DA                     __end_of___fltol:
  2856                           	callstack 0
  2857                           
  2858 ;; *************** function ___flmul *****************
  2859 ;; Defined at:
  2860 ;;		line 8 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\sprcmul.c"
  2861 ;; Parameters:    Size  Location     Type
  2862 ;;  b               4   47[COMRAM] long 
  2863 ;;  a               4   51[COMRAM] long 
  2864 ;; Auto vars:     Size  Location     Type
  2865 ;;  prod            4   66[COMRAM] struct .
  2866 ;;  grs             4   60[COMRAM] unsigned long 
  2867 ;;  temp            2   70[COMRAM] struct .
  2868 ;;  bexp            1   65[COMRAM] unsigned char 
  2869 ;;  aexp            1   64[COMRAM] unsigned char 
  2870 ;;  sign            1   59[COMRAM] unsigned char 
  2871 ;; Return value:  Size  Location     Type
  2872 ;;                  4   47[COMRAM] unsigned char 
  2873 ;; Registers used:
  2874 ;;		wreg, status,2, status,0, prodl, prodh
  2875 ;; Tracked objects:
  2876 ;;		On entry : 0/0
  2877 ;;		On exit  : 0/0
  2878 ;;		Unchanged: 0/0
  2879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2880 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2881 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2882 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2883 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2884 ;;Total ram usage:       25 bytes
  2885 ;; Hardware stack levels used: 1
  2886 ;; Hardware stack levels required when called: 7
  2887 ;; This function calls:
  2888 ;;		Nothing
  2889 ;; This function is called by:
  2890 ;;		_detect_color
  2891 ;; This function uses a non-reentrant model
  2892 ;;
  2893                           
  2894                           	psect	text5
  2895   00067C                     __ptext5:
  2896                           	callstack 0
  2897   00067C                     ___flmul:
  2898                           	callstack 22
  2899   00067C  5033               	movf	(___flmul@b+3)^0,w,c
  2900   00067E  0B80               	andlw	128
  2901   000680  6E3C               	movwf	___flmul@sign^0,c
  2902   000682  5033               	movf	(___flmul@b+3)^0,w,c
  2903   000684  2433               	addwf	(___flmul@b+3)^0,w,c
  2904   000686  6E42               	movwf	___flmul@bexp^0,c
  2905   000688  AE32               	btfss	(___flmul@b+2)^0,7,c
  2906   00068A  EF49  F003         	goto	u2931
  2907   00068E  EF4B  F003         	goto	u2930
  2908   000692                     u2931:
  2909   000692  EF4C  F003         	goto	l3480
  2910   000696                     u2930:
  2911   000696  8042               	bsf	___flmul@bexp^0,0,c
  2912   000698                     l3480:
  2913   000698  5042               	movf	___flmul@bexp^0,w,c
  2914   00069A  B4D8               	btfsc	status,2,c
  2915   00069C  EF52  F003         	goto	u2941
  2916   0006A0  EF54  F003         	goto	u2940
  2917   0006A4                     u2941:
  2918   0006A4  EF67  F003         	goto	l3488
  2919   0006A8                     u2940:
  2920   0006A8  2842               	incf	___flmul@bexp^0,w,c
  2921   0006AA  A4D8               	btfss	status,2,c
  2922   0006AC  EF5A  F003         	goto	u2951
  2923   0006B0  EF5C  F003         	goto	u2950
  2924   0006B4                     u2951:
  2925   0006B4  EF64  F003         	goto	l3486
  2926   0006B8                     u2950:
  2927   0006B8  0E00               	movlw	0
  2928   0006BA  6E30               	movwf	___flmul@b^0,c
  2929   0006BC  0E00               	movlw	0
  2930   0006BE  6E31               	movwf	(___flmul@b+1)^0,c
  2931   0006C0  0E00               	movlw	0
  2932   0006C2  6E32               	movwf	(___flmul@b+2)^0,c
  2933   0006C4  0E00               	movlw	0
  2934   0006C6  6E33               	movwf	(___flmul@b+3)^0,c
  2935   0006C8                     l3486:
  2936   0006C8  8E32               	bsf	(___flmul@b+2)^0,7,c
  2937   0006CA  EF6F  F003         	goto	l3490
  2938   0006CE                     l3488:
  2939   0006CE  0E00               	movlw	0
  2940   0006D0  6E30               	movwf	___flmul@b^0,c
  2941   0006D2  0E00               	movlw	0
  2942   0006D4  6E31               	movwf	(___flmul@b+1)^0,c
  2943   0006D6  0E00               	movlw	0
  2944   0006D8  6E32               	movwf	(___flmul@b+2)^0,c
  2945   0006DA  0E00               	movlw	0
  2946   0006DC  6E33               	movwf	(___flmul@b+3)^0,c
  2947   0006DE                     l3490:
  2948   0006DE  5037               	movf	(___flmul@a+3)^0,w,c
  2949   0006E0  0B80               	andlw	128
  2950   0006E2  1A3C               	xorwf	___flmul@sign^0,f,c
  2951   0006E4  5037               	movf	(___flmul@a+3)^0,w,c
  2952   0006E6  2437               	addwf	(___flmul@a+3)^0,w,c
  2953   0006E8  6E41               	movwf	___flmul@aexp^0,c
  2954   0006EA  AE36               	btfss	(___flmul@a+2)^0,7,c
  2955   0006EC  EF7A  F003         	goto	u2961
  2956   0006F0  EF7C  F003         	goto	u2960
  2957   0006F4                     u2961:
  2958   0006F4  EF7D  F003         	goto	l3498
  2959   0006F8                     u2960:
  2960   0006F8  8041               	bsf	___flmul@aexp^0,0,c
  2961   0006FA                     l3498:
  2962   0006FA  5041               	movf	___flmul@aexp^0,w,c
  2963   0006FC  B4D8               	btfsc	status,2,c
  2964   0006FE  EF83  F003         	goto	u2971
  2965   000702  EF85  F003         	goto	u2970
  2966   000706                     u2971:
  2967   000706  EF98  F003         	goto	l3506
  2968   00070A                     u2970:
  2969   00070A  2841               	incf	___flmul@aexp^0,w,c
  2970   00070C  A4D8               	btfss	status,2,c
  2971   00070E  EF8B  F003         	goto	u2981
  2972   000712  EF8D  F003         	goto	u2980
  2973   000716                     u2981:
  2974   000716  EF95  F003         	goto	l3504
  2975   00071A                     u2980:
  2976   00071A  0E00               	movlw	0
  2977   00071C  6E34               	movwf	___flmul@a^0,c
  2978   00071E  0E00               	movlw	0
  2979   000720  6E35               	movwf	(___flmul@a+1)^0,c
  2980   000722  0E00               	movlw	0
  2981   000724  6E36               	movwf	(___flmul@a+2)^0,c
  2982   000726  0E00               	movlw	0
  2983   000728  6E37               	movwf	(___flmul@a+3)^0,c
  2984   00072A                     l3504:
  2985   00072A  8E36               	bsf	(___flmul@a+2)^0,7,c
  2986   00072C  EFA0  F003         	goto	l1327
  2987   000730                     l3506:
  2988   000730  0E00               	movlw	0
  2989   000732  6E34               	movwf	___flmul@a^0,c
  2990   000734  0E00               	movlw	0
  2991   000736  6E35               	movwf	(___flmul@a+1)^0,c
  2992   000738  0E00               	movlw	0
  2993   00073A  6E36               	movwf	(___flmul@a+2)^0,c
  2994   00073C  0E00               	movlw	0
  2995   00073E  6E37               	movwf	(___flmul@a+3)^0,c
  2996   000740                     l1327:
  2997   000740  5041               	movf	___flmul@aexp^0,w,c
  2998   000742  B4D8               	btfsc	status,2,c
  2999   000744  EFA6  F003         	goto	u2991
  3000   000748  EFA8  F003         	goto	u2990
  3001   00074C                     u2991:
  3002   00074C  EFB0  F003         	goto	l3510
  3003   000750                     u2990:
  3004   000750  5042               	movf	___flmul@bexp^0,w,c
  3005   000752  A4D8               	btfss	status,2,c
  3006   000754  EFAE  F003         	goto	u3001
  3007   000758  EFB0  F003         	goto	u3000
  3008   00075C                     u3001:
  3009   00075C  EFBA  F003         	goto	l3514
  3010   000760                     u3000:
  3011   000760                     l3510:
  3012   000760  0E00               	movlw	0
  3013   000762  6E30               	movwf	?___flmul^0,c
  3014   000764  0E00               	movlw	0
  3015   000766  6E31               	movwf	(?___flmul+1)^0,c
  3016   000768  0E00               	movlw	0
  3017   00076A  6E32               	movwf	(?___flmul+2)^0,c
  3018   00076C  0E00               	movlw	0
  3019   00076E  6E33               	movwf	(?___flmul+3)^0,c
  3020   000770  EF52  F005         	goto	l1331
  3021   000774                     l3514:
  3022   000774  5036               	movf	(___flmul@a+2)^0,w,c
  3023   000776  0230               	mulwf	___flmul@b^0,c
  3024   000778  CFF3 F047          	movff	prodl,___flmul@temp
  3025   00077C  CFF4 F048          	movff	prodh,___flmul@temp+1
  3026   000780  5047               	movf	___flmul@temp^0,w,c
  3027   000782  6E3D               	movwf	___flmul@grs^0,c
  3028   000784  6A3E               	clrf	(___flmul@grs+1)^0,c
  3029   000786  6A3F               	clrf	(___flmul@grs+2)^0,c
  3030   000788  6A40               	clrf	(___flmul@grs+3)^0,c
  3031   00078A  5048               	movf	(___flmul@temp+1)^0,w,c
  3032   00078C  6E43               	movwf	___flmul@prod^0,c
  3033   00078E  6A44               	clrf	(___flmul@prod+1)^0,c
  3034   000790  6A45               	clrf	(___flmul@prod+2)^0,c
  3035   000792  6A46               	clrf	(___flmul@prod+3)^0,c
  3036   000794  5035               	movf	(___flmul@a+1)^0,w,c
  3037   000796  0231               	mulwf	(___flmul@b+1)^0,c
  3038   000798  CFF3 F047          	movff	prodl,___flmul@temp
  3039   00079C  CFF4 F048          	movff	prodh,___flmul@temp+1
  3040   0007A0  5047               	movf	___flmul@temp^0,w,c
  3041   0007A2  263D               	addwf	___flmul@grs^0,f,c
  3042   0007A4  0E00               	movlw	0
  3043   0007A6  223E               	addwfc	(___flmul@grs+1)^0,f,c
  3044   0007A8  223F               	addwfc	(___flmul@grs+2)^0,f,c
  3045   0007AA  2240               	addwfc	(___flmul@grs+3)^0,f,c
  3046   0007AC  5048               	movf	(___flmul@temp+1)^0,w,c
  3047   0007AE  2643               	addwf	___flmul@prod^0,f,c
  3048   0007B0  0E00               	movlw	0
  3049   0007B2  2244               	addwfc	(___flmul@prod+1)^0,f,c
  3050   0007B4  2245               	addwfc	(___flmul@prod+2)^0,f,c
  3051   0007B6  2246               	addwfc	(___flmul@prod+3)^0,f,c
  3052   0007B8  5034               	movf	___flmul@a^0,w,c
  3053   0007BA  0232               	mulwf	(___flmul@b+2)^0,c
  3054   0007BC  CFF3 F047          	movff	prodl,___flmul@temp
  3055   0007C0  CFF4 F048          	movff	prodh,___flmul@temp+1
  3056   0007C4  5047               	movf	___flmul@temp^0,w,c
  3057   0007C6  263D               	addwf	___flmul@grs^0,f,c
  3058   0007C8  0E00               	movlw	0
  3059   0007CA  223E               	addwfc	(___flmul@grs+1)^0,f,c
  3060   0007CC  223F               	addwfc	(___flmul@grs+2)^0,f,c
  3061   0007CE  2240               	addwfc	(___flmul@grs+3)^0,f,c
  3062   0007D0  5048               	movf	(___flmul@temp+1)^0,w,c
  3063   0007D2  2643               	addwf	___flmul@prod^0,f,c
  3064   0007D4  0E00               	movlw	0
  3065   0007D6  2244               	addwfc	(___flmul@prod+1)^0,f,c
  3066   0007D8  2245               	addwfc	(___flmul@prod+2)^0,f,c
  3067   0007DA  2246               	addwfc	(___flmul@prod+3)^0,f,c
  3068   0007DC  C03F  F040         	movff	___flmul@grs+2,___flmul@grs+3
  3069   0007E0  C03E  F03F         	movff	___flmul@grs+1,___flmul@grs+2
  3070   0007E4  C03D  F03E         	movff	___flmul@grs,___flmul@grs+1
  3071   0007E8  6A3D               	clrf	___flmul@grs^0,c
  3072   0007EA  5034               	movf	___flmul@a^0,w,c
  3073   0007EC  0231               	mulwf	(___flmul@b+1)^0,c
  3074   0007EE  CFF3 F047          	movff	prodl,___flmul@temp
  3075   0007F2  CFF4 F048          	movff	prodh,___flmul@temp+1
  3076   0007F6  5047               	movf	___flmul@temp^0,w,c
  3077   0007F8  263D               	addwf	___flmul@grs^0,f,c
  3078   0007FA  5048               	movf	(___flmul@temp+1)^0,w,c
  3079   0007FC  223E               	addwfc	(___flmul@grs+1)^0,f,c
  3080   0007FE  0E00               	movlw	0
  3081   000800  223F               	addwfc	(___flmul@grs+2)^0,f,c
  3082   000802  0E00               	movlw	0
  3083   000804  2240               	addwfc	(___flmul@grs+3)^0,f,c
  3084   000806  5035               	movf	(___flmul@a+1)^0,w,c
  3085   000808  0230               	mulwf	___flmul@b^0,c
  3086   00080A  CFF3 F047          	movff	prodl,___flmul@temp
  3087   00080E  CFF4 F048          	movff	prodh,___flmul@temp+1
  3088   000812  5047               	movf	___flmul@temp^0,w,c
  3089   000814  263D               	addwf	___flmul@grs^0,f,c
  3090   000816  5048               	movf	(___flmul@temp+1)^0,w,c
  3091   000818  223E               	addwfc	(___flmul@grs+1)^0,f,c
  3092   00081A  0E00               	movlw	0
  3093   00081C  223F               	addwfc	(___flmul@grs+2)^0,f,c
  3094   00081E  0E00               	movlw	0
  3095   000820  2240               	addwfc	(___flmul@grs+3)^0,f,c
  3096   000822  C03F  F040         	movff	___flmul@grs+2,___flmul@grs+3
  3097   000826  C03E  F03F         	movff	___flmul@grs+1,___flmul@grs+2
  3098   00082A  C03D  F03E         	movff	___flmul@grs,___flmul@grs+1
  3099   00082E  6A3D               	clrf	___flmul@grs^0,c
  3100   000830  5034               	movf	___flmul@a^0,w,c
  3101   000832  0230               	mulwf	___flmul@b^0,c
  3102   000834  CFF3 F047          	movff	prodl,___flmul@temp
  3103   000838  CFF4 F048          	movff	prodh,___flmul@temp+1
  3104   00083C  5047               	movf	___flmul@temp^0,w,c
  3105   00083E  263D               	addwf	___flmul@grs^0,f,c
  3106   000840  5048               	movf	(___flmul@temp+1)^0,w,c
  3107   000842  223E               	addwfc	(___flmul@grs+1)^0,f,c
  3108   000844  0E00               	movlw	0
  3109   000846  223F               	addwfc	(___flmul@grs+2)^0,f,c
  3110   000848  0E00               	movlw	0
  3111   00084A  2240               	addwfc	(___flmul@grs+3)^0,f,c
  3112   00084C  5036               	movf	(___flmul@a+2)^0,w,c
  3113   00084E  0231               	mulwf	(___flmul@b+1)^0,c
  3114   000850  CFF3 F047          	movff	prodl,___flmul@temp
  3115   000854  CFF4 F048          	movff	prodh,___flmul@temp+1
  3116   000858  5047               	movf	___flmul@temp^0,w,c
  3117   00085A  2643               	addwf	___flmul@prod^0,f,c
  3118   00085C  5048               	movf	(___flmul@temp+1)^0,w,c
  3119   00085E  2244               	addwfc	(___flmul@prod+1)^0,f,c
  3120   000860  0E00               	movlw	0
  3121   000862  2245               	addwfc	(___flmul@prod+2)^0,f,c
  3122   000864  0E00               	movlw	0
  3123   000866  2246               	addwfc	(___flmul@prod+3)^0,f,c
  3124   000868  5035               	movf	(___flmul@a+1)^0,w,c
  3125   00086A  0232               	mulwf	(___flmul@b+2)^0,c
  3126   00086C  CFF3 F047          	movff	prodl,___flmul@temp
  3127   000870  CFF4 F048          	movff	prodh,___flmul@temp+1
  3128   000874  5047               	movf	___flmul@temp^0,w,c
  3129   000876  2643               	addwf	___flmul@prod^0,f,c
  3130   000878  5048               	movf	(___flmul@temp+1)^0,w,c
  3131   00087A  2244               	addwfc	(___flmul@prod+1)^0,f,c
  3132   00087C  0E00               	movlw	0
  3133   00087E  2245               	addwfc	(___flmul@prod+2)^0,f,c
  3134   000880  0E00               	movlw	0
  3135   000882  2246               	addwfc	(___flmul@prod+3)^0,f,c
  3136   000884  5036               	movf	(___flmul@a+2)^0,w,c
  3137   000886  0232               	mulwf	(___flmul@b+2)^0,c
  3138   000888  CFF3 F047          	movff	prodl,___flmul@temp
  3139   00088C  CFF4 F048          	movff	prodh,___flmul@temp+1
  3140   000890  5047               	movf	___flmul@temp^0,w,c
  3141   000892  6E38               	movwf	??___flmul^0,c
  3142   000894  5048               	movf	(___flmul@temp+1)^0,w,c
  3143   000896  6E39               	movwf	(??___flmul+1)^0,c
  3144   000898  6A3A               	clrf	(??___flmul+2)^0,c
  3145   00089A  6A3B               	clrf	(??___flmul+3)^0,c
  3146   00089C  C03A  F03B         	movff	??___flmul+2,??___flmul+3
  3147   0008A0  C039  F03A         	movff	??___flmul+1,??___flmul+2
  3148   0008A4  C038  F039         	movff	??___flmul,??___flmul+1
  3149   0008A8  6A38               	clrf	??___flmul^0,c
  3150   0008AA  5038               	movf	??___flmul^0,w,c
  3151   0008AC  2643               	addwf	___flmul@prod^0,f,c
  3152   0008AE  5039               	movf	(??___flmul+1)^0,w,c
  3153   0008B0  2244               	addwfc	(___flmul@prod+1)^0,f,c
  3154   0008B2  503A               	movf	(??___flmul+2)^0,w,c
  3155   0008B4  2245               	addwfc	(___flmul@prod+2)^0,f,c
  3156   0008B6  503B               	movf	(??___flmul+3)^0,w,c
  3157   0008B8  2246               	addwfc	(___flmul@prod+3)^0,f,c
  3158   0008BA  C03D  F038         	movff	___flmul@grs,??___flmul
  3159   0008BE  C03E  F039         	movff	___flmul@grs+1,??___flmul+1
  3160   0008C2  C03F  F03A         	movff	___flmul@grs+2,??___flmul+2
  3161   0008C6  C040  F03B         	movff	___flmul@grs+3,??___flmul+3
  3162   0008CA  0E19               	movlw	25
  3163   0008CC  EF6D  F004         	goto	u3010
  3164   0008D0                     u3015:
  3165   0008D0  90D8               	bcf	status,0,c
  3166   0008D2  323B               	rrcf	(??___flmul+3)^0,f,c
  3167   0008D4  323A               	rrcf	(??___flmul+2)^0,f,c
  3168   0008D6  3239               	rrcf	(??___flmul+1)^0,f,c
  3169   0008D8  3238               	rrcf	??___flmul^0,f,c
  3170   0008DA                     u3010:
  3171   0008DA  2EE8               	decfsz	wreg,f,c
  3172   0008DC  EF68  F004         	goto	u3015
  3173   0008E0  5038               	movf	??___flmul^0,w,c
  3174   0008E2  2643               	addwf	___flmul@prod^0,f,c
  3175   0008E4  5039               	movf	(??___flmul+1)^0,w,c
  3176   0008E6  2244               	addwfc	(___flmul@prod+1)^0,f,c
  3177   0008E8  503A               	movf	(??___flmul+2)^0,w,c
  3178   0008EA  2245               	addwfc	(___flmul@prod+2)^0,f,c
  3179   0008EC  503B               	movf	(??___flmul+3)^0,w,c
  3180   0008EE  2246               	addwfc	(___flmul@prod+3)^0,f,c
  3181   0008F0  C03F  F040         	movff	___flmul@grs+2,___flmul@grs+3
  3182   0008F4  C03E  F03F         	movff	___flmul@grs+1,___flmul@grs+2
  3183   0008F8  C03D  F03E         	movff	___flmul@grs,___flmul@grs+1
  3184   0008FC  6A3D               	clrf	___flmul@grs^0,c
  3185   0008FE  5041               	movf	___flmul@aexp^0,w,c
  3186   000900  C042  F038         	movff	___flmul@bexp,??___flmul
  3187   000904  6A39               	clrf	(??___flmul+1)^0,c
  3188   000906  2638               	addwf	??___flmul^0,f,c
  3189   000908  0E00               	movlw	0
  3190   00090A  2239               	addwfc	(??___flmul+1)^0,f,c
  3191   00090C  0E82               	movlw	130
  3192   00090E  2438               	addwf	??___flmul^0,w,c
  3193   000910  6E47               	movwf	___flmul@temp^0,c
  3194   000912  0EFF               	movlw	255
  3195   000914  2039               	addwfc	(??___flmul+1)^0,w,c
  3196   000916  6E48               	movwf	(___flmul@temp+1)^0,c
  3197   000918  EFA3  F004         	goto	l3562
  3198   00091C                     l3556:
  3199   00091C  90D8               	bcf	status,0,c
  3200   00091E  3643               	rlcf	___flmul@prod^0,f,c
  3201   000920  3644               	rlcf	(___flmul@prod+1)^0,f,c
  3202   000922  3645               	rlcf	(___flmul@prod+2)^0,f,c
  3203   000924  3646               	rlcf	(___flmul@prod+3)^0,f,c
  3204   000926  AE40               	btfss	(___flmul@grs+3)^0,7,c
  3205   000928  EF98  F004         	goto	u3021
  3206   00092C  EF9A  F004         	goto	u3020
  3207   000930                     u3021:
  3208   000930  EF9B  F004         	goto	l1334
  3209   000934                     u3020:
  3210   000934  8043               	bsf	___flmul@prod^0,0,c
  3211   000936                     l1334:
  3212   000936  90D8               	bcf	status,0,c
  3213   000938  363D               	rlcf	___flmul@grs^0,f,c
  3214   00093A  363E               	rlcf	(___flmul@grs+1)^0,f,c
  3215   00093C  363F               	rlcf	(___flmul@grs+2)^0,f,c
  3216   00093E  3640               	rlcf	(___flmul@grs+3)^0,f,c
  3217   000940  0647               	decf	___flmul@temp^0,f,c
  3218   000942  A0D8               	btfss	status,0,c
  3219   000944  0648               	decf	(___flmul@temp+1)^0,f,c
  3220   000946                     l3562:
  3221   000946  AE45               	btfss	(___flmul@prod+2)^0,7,c
  3222   000948  EFA8  F004         	goto	u3031
  3223   00094C  EFAA  F004         	goto	u3030
  3224   000950                     u3031:
  3225   000950  EF8E  F004         	goto	l3556
  3226   000954                     u3030:
  3227   000954  0E00               	movlw	0
  3228   000956  6E41               	movwf	___flmul@aexp^0,c
  3229   000958  AE40               	btfss	(___flmul@grs+3)^0,7,c
  3230   00095A  EFB1  F004         	goto	u3041
  3231   00095E  EFB3  F004         	goto	u3040
  3232   000962                     u3041:
  3233   000962  EFD7  F004         	goto	l1336
  3234   000966                     u3040:
  3235   000966  0EFF               	movlw	255
  3236   000968  143D               	andwf	___flmul@grs^0,w,c
  3237   00096A  6E38               	movwf	??___flmul^0,c
  3238   00096C  0EFF               	movlw	255
  3239   00096E  143E               	andwf	(___flmul@grs+1)^0,w,c
  3240   000970  6E39               	movwf	(??___flmul+1)^0,c
  3241   000972  0EFF               	movlw	255
  3242   000974  143F               	andwf	(___flmul@grs+2)^0,w,c
  3243   000976  6E3A               	movwf	(??___flmul+2)^0,c
  3244   000978  0E7F               	movlw	127
  3245   00097A  1440               	andwf	(___flmul@grs+3)^0,w,c
  3246   00097C  6E3B               	movwf	(??___flmul+3)^0,c
  3247   00097E  5038               	movf	??___flmul^0,w,c
  3248   000980  1039               	iorwf	(??___flmul+1)^0,w,c
  3249   000982  103A               	iorwf	(??___flmul+2)^0,w,c
  3250   000984  103B               	iorwf	(??___flmul+3)^0,w,c
  3251   000986  B4D8               	btfsc	status,2,c
  3252   000988  EFC8  F004         	goto	u3051
  3253   00098C  EFCA  F004         	goto	u3050
  3254   000990                     u3051:
  3255   000990  EFCE  F004         	goto	l1337
  3256   000994                     u3050:
  3257   000994                     l3570:
  3258   000994  0E01               	movlw	1
  3259   000996  6E41               	movwf	___flmul@aexp^0,c
  3260   000998  EFD7  F004         	goto	l1336
  3261   00099C                     l1337:
  3262   00099C  A043               	btfss	___flmul@prod^0,0,c
  3263   00099E  EFD3  F004         	goto	u3061
  3264   0009A2  EFD5  F004         	goto	u3060
  3265   0009A6                     u3061:
  3266   0009A6  EFD7  F004         	goto	l1336
  3267   0009AA                     u3060:
  3268   0009AA  EFCA  F004         	goto	l3570
  3269   0009AE                     l1336:
  3270   0009AE  5041               	movf	___flmul@aexp^0,w,c
  3271   0009B0  B4D8               	btfsc	status,2,c
  3272   0009B2  EFDD  F004         	goto	u3071
  3273   0009B6  EFDF  F004         	goto	u3070
  3274   0009BA                     u3071:
  3275   0009BA  EF03  F005         	goto	l3582
  3276   0009BE                     u3070:
  3277   0009BE  0E01               	movlw	1
  3278   0009C0  2643               	addwf	___flmul@prod^0,f,c
  3279   0009C2  0E00               	movlw	0
  3280   0009C4  2244               	addwfc	(___flmul@prod+1)^0,f,c
  3281   0009C6  2245               	addwfc	(___flmul@prod+2)^0,f,c
  3282   0009C8  2246               	addwfc	(___flmul@prod+3)^0,f,c
  3283   0009CA  A046               	btfss	(___flmul@prod+3)^0,0,c
  3284   0009CC  EFEA  F004         	goto	u3081
  3285   0009D0  EFEC  F004         	goto	u3080
  3286   0009D4                     u3081:
  3287   0009D4  EF03  F005         	goto	l3582
  3288   0009D8                     u3080:
  3289   0009D8  C043  F038         	movff	___flmul@prod,??___flmul
  3290   0009DC  C044  F039         	movff	___flmul@prod+1,??___flmul+1
  3291   0009E0  C045  F03A         	movff	___flmul@prod+2,??___flmul+2
  3292   0009E4  C046  F03B         	movff	___flmul@prod+3,??___flmul+3
  3293   0009E8  343B               	rlcf	(??___flmul+3)^0,w,c
  3294   0009EA  323B               	rrcf	(??___flmul+3)^0,f,c
  3295   0009EC  323A               	rrcf	(??___flmul+2)^0,f,c
  3296   0009EE  3239               	rrcf	(??___flmul+1)^0,f,c
  3297   0009F0  3238               	rrcf	??___flmul^0,f,c
  3298   0009F2  C038  F043         	movff	??___flmul,___flmul@prod
  3299   0009F6  C039  F044         	movff	??___flmul+1,___flmul@prod+1
  3300   0009FA  C03A  F045         	movff	??___flmul+2,___flmul@prod+2
  3301   0009FE  C03B  F046         	movff	??___flmul+3,___flmul@prod+3
  3302   000A02  4A47               	infsnz	___flmul@temp^0,f,c
  3303   000A04  2A48               	incf	(___flmul@temp+1)^0,f,c
  3304   000A06                     l3582:
  3305   000A06  BE48               	btfsc	(___flmul@temp+1)^0,7,c
  3306   000A08  EF0E  F005         	goto	u3091
  3307   000A0C  5048               	movf	(___flmul@temp+1)^0,w,c
  3308   000A0E  E108               	bnz	u3090
  3309   000A10  2847               	incf	___flmul@temp^0,w,c
  3310   000A12  A0D8               	btfss	status,0,c
  3311   000A14  EF0E  F005         	goto	u3091
  3312   000A18  EF10  F005         	goto	u3090
  3313   000A1C                     u3091:
  3314   000A1C  EF1A  F005         	goto	l3586
  3315   000A20                     u3090:
  3316   000A20  0E00               	movlw	0
  3317   000A22  6E43               	movwf	___flmul@prod^0,c
  3318   000A24  0E00               	movlw	0
  3319   000A26  6E44               	movwf	(___flmul@prod+1)^0,c
  3320   000A28  0E80               	movlw	128
  3321   000A2A  6E45               	movwf	(___flmul@prod+2)^0,c
  3322   000A2C  0E7F               	movlw	127
  3323   000A2E  6E46               	movwf	(___flmul@prod+3)^0,c
  3324   000A30  EF48  F005         	goto	l3598
  3325   000A34                     l3586:
  3326   000A34  BE48               	btfsc	(___flmul@temp+1)^0,7,c
  3327   000A36  EF27  F005         	goto	u3100
  3328   000A3A  5048               	movf	(___flmul@temp+1)^0,w,c
  3329   000A3C  E106               	bnz	u3101
  3330   000A3E  0447               	decf	___flmul@temp^0,w,c
  3331   000A40  B0D8               	btfsc	status,0,c
  3332   000A42  EF25  F005         	goto	u3101
  3333   000A46  EF27  F005         	goto	u3100
  3334   000A4A                     u3101:
  3335   000A4A  EF33  F005         	goto	l1344
  3336   000A4E                     u3100:
  3337   000A4E  0E00               	movlw	0
  3338   000A50  6E43               	movwf	___flmul@prod^0,c
  3339   000A52  0E00               	movlw	0
  3340   000A54  6E44               	movwf	(___flmul@prod+1)^0,c
  3341   000A56  0E00               	movlw	0
  3342   000A58  6E45               	movwf	(___flmul@prod+2)^0,c
  3343   000A5A  0E00               	movlw	0
  3344   000A5C  6E46               	movwf	(___flmul@prod+3)^0,c
  3345   000A5E  0E00               	movlw	0
  3346   000A60  6E3C               	movwf	___flmul@sign^0,c
  3347   000A62  EF48  F005         	goto	l3598
  3348   000A66                     l1344:
  3349   000A66  C047  F042         	movff	___flmul@temp,___flmul@bexp
  3350   000A6A  0EFF               	movlw	255
  3351   000A6C  1643               	andwf	___flmul@prod^0,f,c
  3352   000A6E  0EFF               	movlw	255
  3353   000A70  1644               	andwf	(___flmul@prod+1)^0,f,c
  3354   000A72  0E7F               	movlw	127
  3355   000A74  1645               	andwf	(___flmul@prod+2)^0,f,c
  3356   000A76  0E00               	movlw	0
  3357   000A78  1646               	andwf	(___flmul@prod+3)^0,f,c
  3358   000A7A  A042               	btfss	___flmul@bexp^0,0,c
  3359   000A7C  EF42  F005         	goto	u3111
  3360   000A80  EF44  F005         	goto	u3110
  3361   000A84                     u3111:
  3362   000A84  EF45  F005         	goto	l3596
  3363   000A88                     u3110:
  3364   000A88  8E45               	bsf	(___flmul@prod+2)^0,7,c
  3365   000A8A                     l3596:
  3366   000A8A  90D8               	bcf	status,0,c
  3367   000A8C  3042               	rrcf	___flmul@bexp^0,w,c
  3368   000A8E  6E46               	movwf	(___flmul@prod+3)^0,c
  3369   000A90                     l3598:
  3370   000A90  503C               	movf	___flmul@sign^0,w,c
  3371   000A92  1246               	iorwf	(___flmul@prod+3)^0,f,c
  3372   000A94  C043  F030         	movff	___flmul@prod,?___flmul
  3373   000A98  C044  F031         	movff	___flmul@prod+1,?___flmul+1
  3374   000A9C  C045  F032         	movff	___flmul@prod+2,?___flmul+2
  3375   000AA0  C046  F033         	movff	___flmul@prod+3,?___flmul+3
  3376   000AA4                     l1331:
  3377   000AA4  0012               	return		;funcret
  3378   000AA6                     __end_of___flmul:
  3379                           	callstack 0
  3380                           
  3381 ;; *************** function ___fldiv *****************
  3382 ;; Defined at:
  3383 ;;		line 11 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\sprcdiv.c"
  3384 ;; Parameters:    Size  Location     Type
  3385 ;;  b               4   22[COMRAM] unsigned char 
  3386 ;;  a               4   26[COMRAM] unsigned char 
  3387 ;; Auto vars:     Size  Location     Type
  3388 ;;  grs             4   41[COMRAM] unsigned long 
  3389 ;;  rem             4   34[COMRAM] unsigned long 
  3390 ;;  new_exp         2   39[COMRAM] short 
  3391 ;;  aexp            1   46[COMRAM] unsigned char 
  3392 ;;  bexp            1   45[COMRAM] unsigned char 
  3393 ;;  sign            1   38[COMRAM] unsigned char 
  3394 ;; Return value:  Size  Location     Type
  3395 ;;                  4   22[COMRAM] unsigned char 
  3396 ;; Registers used:
  3397 ;;		wreg, status,2, status,0
  3398 ;; Tracked objects:
  3399 ;;		On entry : 0/0
  3400 ;;		On exit  : 0/0
  3401 ;;		Unchanged: 0/0
  3402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3403 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3404 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3405 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3406 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3407 ;;Total ram usage:       25 bytes
  3408 ;; Hardware stack levels used: 1
  3409 ;; Hardware stack levels required when called: 7
  3410 ;; This function calls:
  3411 ;;		Nothing
  3412 ;; This function is called by:
  3413 ;;		_detect_color
  3414 ;; This function uses a non-reentrant model
  3415 ;;
  3416                           
  3417                           	psect	text6
  3418   000AA6                     __ptext6:
  3419                           	callstack 0
  3420   000AA6                     ___fldiv:
  3421                           	callstack 22
  3422   000AA6  501A               	movf	(___fldiv@b+3)^0,w,c
  3423   000AA8  0B80               	andlw	128
  3424   000AAA  6E27               	movwf	___fldiv@sign^0,c
  3425   000AAC  501A               	movf	(___fldiv@b+3)^0,w,c
  3426   000AAE  241A               	addwf	(___fldiv@b+3)^0,w,c
  3427   000AB0  6E2E               	movwf	___fldiv@bexp^0,c
  3428   000AB2  AE19               	btfss	(___fldiv@b+2)^0,7,c
  3429   000AB4  EF5E  F005         	goto	u2701
  3430   000AB8  EF60  F005         	goto	u2700
  3431   000ABC                     u2701:
  3432   000ABC  EF61  F005         	goto	l3342
  3433   000AC0                     u2700:
  3434   000AC0  802E               	bsf	___fldiv@bexp^0,0,c
  3435   000AC2                     l3342:
  3436   000AC2  502E               	movf	___fldiv@bexp^0,w,c
  3437   000AC4  B4D8               	btfsc	status,2,c
  3438   000AC6  EF67  F005         	goto	u2711
  3439   000ACA  EF69  F005         	goto	u2710
  3440   000ACE                     u2711:
  3441   000ACE  EF7E  F005         	goto	l3352
  3442   000AD2                     u2710:
  3443   000AD2  282E               	incf	___fldiv@bexp^0,w,c
  3444   000AD4  A4D8               	btfss	status,2,c
  3445   000AD6  EF6F  F005         	goto	u2721
  3446   000ADA  EF71  F005         	goto	u2720
  3447   000ADE                     u2721:
  3448   000ADE  EF79  F005         	goto	l3348
  3449   000AE2                     u2720:
  3450   000AE2  0E00               	movlw	0
  3451   000AE4  6E17               	movwf	___fldiv@b^0,c
  3452   000AE6  0E00               	movlw	0
  3453   000AE8  6E18               	movwf	(___fldiv@b+1)^0,c
  3454   000AEA  0E00               	movlw	0
  3455   000AEC  6E19               	movwf	(___fldiv@b+2)^0,c
  3456   000AEE  0E00               	movlw	0
  3457   000AF0  6E1A               	movwf	(___fldiv@b+3)^0,c
  3458   000AF2                     l3348:
  3459   000AF2  8E19               	bsf	(___fldiv@b+2)^0,7,c
  3460   000AF4  0E00               	movlw	0
  3461   000AF6  6E1A               	movwf	(___fldiv@b+3)^0,c
  3462   000AF8  EF86  F005         	goto	l3354
  3463   000AFC                     l3352:
  3464   000AFC  0E00               	movlw	0
  3465   000AFE  6E17               	movwf	___fldiv@b^0,c
  3466   000B00  0E00               	movlw	0
  3467   000B02  6E18               	movwf	(___fldiv@b+1)^0,c
  3468   000B04  0E00               	movlw	0
  3469   000B06  6E19               	movwf	(___fldiv@b+2)^0,c
  3470   000B08  0E00               	movlw	0
  3471   000B0A  6E1A               	movwf	(___fldiv@b+3)^0,c
  3472   000B0C                     l3354:
  3473   000B0C  501E               	movf	(___fldiv@a+3)^0,w,c
  3474   000B0E  0B80               	andlw	128
  3475   000B10  1A27               	xorwf	___fldiv@sign^0,f,c
  3476   000B12  501E               	movf	(___fldiv@a+3)^0,w,c
  3477   000B14  241E               	addwf	(___fldiv@a+3)^0,w,c
  3478   000B16  6E2F               	movwf	___fldiv@aexp^0,c
  3479   000B18  AE1D               	btfss	(___fldiv@a+2)^0,7,c
  3480   000B1A  EF91  F005         	goto	u2731
  3481   000B1E  EF93  F005         	goto	u2730
  3482   000B22                     u2731:
  3483   000B22  EF94  F005         	goto	l3362
  3484   000B26                     u2730:
  3485   000B26  802F               	bsf	___fldiv@aexp^0,0,c
  3486   000B28                     l3362:
  3487   000B28  502F               	movf	___fldiv@aexp^0,w,c
  3488   000B2A  B4D8               	btfsc	status,2,c
  3489   000B2C  EF9A  F005         	goto	u2741
  3490   000B30  EF9C  F005         	goto	u2740
  3491   000B34                     u2741:
  3492   000B34  EFB1  F005         	goto	l3372
  3493   000B38                     u2740:
  3494   000B38  282F               	incf	___fldiv@aexp^0,w,c
  3495   000B3A  A4D8               	btfss	status,2,c
  3496   000B3C  EFA2  F005         	goto	u2751
  3497   000B40  EFA4  F005         	goto	u2750
  3498   000B44                     u2751:
  3499   000B44  EFAC  F005         	goto	l3368
  3500   000B48                     u2750:
  3501   000B48  0E00               	movlw	0
  3502   000B4A  6E1B               	movwf	___fldiv@a^0,c
  3503   000B4C  0E00               	movlw	0
  3504   000B4E  6E1C               	movwf	(___fldiv@a+1)^0,c
  3505   000B50  0E00               	movlw	0
  3506   000B52  6E1D               	movwf	(___fldiv@a+2)^0,c
  3507   000B54  0E00               	movlw	0
  3508   000B56  6E1E               	movwf	(___fldiv@a+3)^0,c
  3509   000B58                     l3368:
  3510   000B58  8E1D               	bsf	(___fldiv@a+2)^0,7,c
  3511   000B5A  0E00               	movlw	0
  3512   000B5C  6E1E               	movwf	(___fldiv@a+3)^0,c
  3513   000B5E  EFB9  F005         	goto	l3374
  3514   000B62                     l3372:
  3515   000B62  0E00               	movlw	0
  3516   000B64  6E1B               	movwf	___fldiv@a^0,c
  3517   000B66  0E00               	movlw	0
  3518   000B68  6E1C               	movwf	(___fldiv@a+1)^0,c
  3519   000B6A  0E00               	movlw	0
  3520   000B6C  6E1D               	movwf	(___fldiv@a+2)^0,c
  3521   000B6E  0E00               	movlw	0
  3522   000B70  6E1E               	movwf	(___fldiv@a+3)^0,c
  3523   000B72                     l3374:
  3524   000B72  501B               	movf	___fldiv@a^0,w,c
  3525   000B74  101C               	iorwf	(___fldiv@a+1)^0,w,c
  3526   000B76  101D               	iorwf	(___fldiv@a+2)^0,w,c
  3527   000B78  101E               	iorwf	(___fldiv@a+3)^0,w,c
  3528   000B7A  A4D8               	btfss	status,2,c
  3529   000B7C  EFC2  F005         	goto	u2761
  3530   000B80  EFC4  F005         	goto	u2760
  3531   000B84                     u2761:
  3532   000B84  EFDC  F005         	goto	l3386
  3533   000B88                     u2760:
  3534   000B88  0E00               	movlw	0
  3535   000B8A  6E17               	movwf	___fldiv@b^0,c
  3536   000B8C  0E00               	movlw	0
  3537   000B8E  6E18               	movwf	(___fldiv@b+1)^0,c
  3538   000B90  0E00               	movlw	0
  3539   000B92  6E19               	movwf	(___fldiv@b+2)^0,c
  3540   000B94  0E00               	movlw	0
  3541   000B96  6E1A               	movwf	(___fldiv@b+3)^0,c
  3542   000B98  0E80               	movlw	128
  3543   000B9A  1219               	iorwf	(___fldiv@b+2)^0,f,c
  3544   000B9C  0E7F               	movlw	127
  3545   000B9E  121A               	iorwf	(___fldiv@b+3)^0,f,c
  3546   000BA0                     l3380:
  3547   000BA0  5027               	movf	___fldiv@sign^0,w,c
  3548   000BA2  121A               	iorwf	(___fldiv@b+3)^0,f,c
  3549   000BA4  C017  F017         	movff	___fldiv@b,?___fldiv
  3550   000BA8  C018  F018         	movff	___fldiv@b+1,?___fldiv+1
  3551   000BAC  C019  F019         	movff	___fldiv@b+2,?___fldiv+2
  3552   000BB0  C01A  F01A         	movff	___fldiv@b+3,?___fldiv+3
  3553   000BB4  EF1F  F007         	goto	l1295
  3554   000BB8                     l3386:
  3555   000BB8  502E               	movf	___fldiv@bexp^0,w,c
  3556   000BBA  A4D8               	btfss	status,2,c
  3557   000BBC  EFE2  F005         	goto	u2771
  3558   000BC0  EFE4  F005         	goto	u2770
  3559   000BC4                     u2771:
  3560   000BC4  EFEE  F005         	goto	l3394
  3561   000BC8                     u2770:
  3562   000BC8  0E00               	movlw	0
  3563   000BCA  6E17               	movwf	?___fldiv^0,c
  3564   000BCC  0E00               	movlw	0
  3565   000BCE  6E18               	movwf	(?___fldiv+1)^0,c
  3566   000BD0  0E00               	movlw	0
  3567   000BD2  6E19               	movwf	(?___fldiv+2)^0,c
  3568   000BD4  0E00               	movlw	0
  3569   000BD6  6E1A               	movwf	(?___fldiv+3)^0,c
  3570   000BD8  EF1F  F007         	goto	l1295
  3571   000BDC                     l3394:
  3572   000BDC  502F               	movf	___fldiv@aexp^0,w,c
  3573   000BDE  C02E  F01F         	movff	___fldiv@bexp,??___fldiv
  3574   000BE2  6A20               	clrf	(??___fldiv+1)^0,c
  3575   000BE4  5E1F               	subwf	??___fldiv^0,f,c
  3576   000BE6  0E00               	movlw	0
  3577   000BE8  5A20               	subwfb	(??___fldiv+1)^0,f,c
  3578   000BEA  0E7F               	movlw	127
  3579   000BEC  241F               	addwf	??___fldiv^0,w,c
  3580   000BEE  6E28               	movwf	___fldiv@new_exp^0,c
  3581   000BF0  0E00               	movlw	0
  3582   000BF2  2020               	addwfc	(??___fldiv+1)^0,w,c
  3583   000BF4  6E29               	movwf	(___fldiv@new_exp+1)^0,c
  3584   000BF6  C017  F023         	movff	___fldiv@b,___fldiv@rem
  3585   000BFA  C018  F024         	movff	___fldiv@b+1,___fldiv@rem+1
  3586   000BFE  C019  F025         	movff	___fldiv@b+2,___fldiv@rem+2
  3587   000C02  C01A  F026         	movff	___fldiv@b+3,___fldiv@rem+3
  3588   000C06  0E00               	movlw	0
  3589   000C08  6E17               	movwf	___fldiv@b^0,c
  3590   000C0A  0E00               	movlw	0
  3591   000C0C  6E18               	movwf	(___fldiv@b+1)^0,c
  3592   000C0E  0E00               	movlw	0
  3593   000C10  6E19               	movwf	(___fldiv@b+2)^0,c
  3594   000C12  0E00               	movlw	0
  3595   000C14  6E1A               	movwf	(___fldiv@b+3)^0,c
  3596   000C16  0E00               	movlw	0
  3597   000C18  6E2A               	movwf	___fldiv@grs^0,c
  3598   000C1A  0E00               	movlw	0
  3599   000C1C  6E2B               	movwf	(___fldiv@grs+1)^0,c
  3600   000C1E  0E00               	movlw	0
  3601   000C20  6E2C               	movwf	(___fldiv@grs+2)^0,c
  3602   000C22  0E00               	movlw	0
  3603   000C24  6E2D               	movwf	(___fldiv@grs+3)^0,c
  3604   000C26  0E00               	movlw	0
  3605   000C28  6E2F               	movwf	___fldiv@aexp^0,c
  3606   000C2A  EF4F  F006         	goto	l1297
  3607   000C2E                     l3404:
  3608   000C2E  502F               	movf	___fldiv@aexp^0,w,c
  3609   000C30  B4D8               	btfsc	status,2,c
  3610   000C32  EF1D  F006         	goto	u2781
  3611   000C36  EF1F  F006         	goto	u2780
  3612   000C3A                     u2781:
  3613   000C3A  EF36  F006         	goto	l3412
  3614   000C3E                     u2780:
  3615   000C3E  90D8               	bcf	status,0,c
  3616   000C40  3623               	rlcf	___fldiv@rem^0,f,c
  3617   000C42  3624               	rlcf	(___fldiv@rem+1)^0,f,c
  3618   000C44  3625               	rlcf	(___fldiv@rem+2)^0,f,c
  3619   000C46  3626               	rlcf	(___fldiv@rem+3)^0,f,c
  3620   000C48  90D8               	bcf	status,0,c
  3621   000C4A  3617               	rlcf	___fldiv@b^0,f,c
  3622   000C4C  3618               	rlcf	(___fldiv@b+1)^0,f,c
  3623   000C4E  3619               	rlcf	(___fldiv@b+2)^0,f,c
  3624   000C50  361A               	rlcf	(___fldiv@b+3)^0,f,c
  3625   000C52  AE2D               	btfss	(___fldiv@grs+3)^0,7,c
  3626   000C54  EF2E  F006         	goto	u2791
  3627   000C58  EF30  F006         	goto	u2790
  3628   000C5C                     u2791:
  3629   000C5C  EF31  F006         	goto	l1300
  3630   000C60                     u2790:
  3631   000C60  8017               	bsf	___fldiv@b^0,0,c
  3632   000C62                     l1300:
  3633   000C62  90D8               	bcf	status,0,c
  3634   000C64  362A               	rlcf	___fldiv@grs^0,f,c
  3635   000C66  362B               	rlcf	(___fldiv@grs+1)^0,f,c
  3636   000C68  362C               	rlcf	(___fldiv@grs+2)^0,f,c
  3637   000C6A  362D               	rlcf	(___fldiv@grs+3)^0,f,c
  3638   000C6C                     l3412:
  3639   000C6C  501B               	movf	___fldiv@a^0,w,c
  3640   000C6E  5C23               	subwf	___fldiv@rem^0,w,c
  3641   000C70  501C               	movf	(___fldiv@a+1)^0,w,c
  3642   000C72  5824               	subwfb	(___fldiv@rem+1)^0,w,c
  3643   000C74  501D               	movf	(___fldiv@a+2)^0,w,c
  3644   000C76  5825               	subwfb	(___fldiv@rem+2)^0,w,c
  3645   000C78  501E               	movf	(___fldiv@a+3)^0,w,c
  3646   000C7A  5826               	subwfb	(___fldiv@rem+3)^0,w,c
  3647   000C7C  A0D8               	btfss	status,0,c
  3648   000C7E  EF43  F006         	goto	u2801
  3649   000C82  EF45  F006         	goto	u2800
  3650   000C86                     u2801:
  3651   000C86  EF4E  F006         	goto	l3418
  3652   000C8A                     u2800:
  3653   000C8A  8C2D               	bsf	(___fldiv@grs+3)^0,6,c
  3654   000C8C  501B               	movf	___fldiv@a^0,w,c
  3655   000C8E  5E23               	subwf	___fldiv@rem^0,f,c
  3656   000C90  501C               	movf	(___fldiv@a+1)^0,w,c
  3657   000C92  5A24               	subwfb	(___fldiv@rem+1)^0,f,c
  3658   000C94  501D               	movf	(___fldiv@a+2)^0,w,c
  3659   000C96  5A25               	subwfb	(___fldiv@rem+2)^0,f,c
  3660   000C98  501E               	movf	(___fldiv@a+3)^0,w,c
  3661   000C9A  5A26               	subwfb	(___fldiv@rem+3)^0,f,c
  3662   000C9C                     l3418:
  3663   000C9C  2A2F               	incf	___fldiv@aexp^0,f,c
  3664   000C9E                     l1297:
  3665   000C9E  0E19               	movlw	25
  3666   000CA0  642F               	cpfsgt	___fldiv@aexp^0,c
  3667   000CA2  EF55  F006         	goto	u2811
  3668   000CA6  EF57  F006         	goto	u2810
  3669   000CAA                     u2811:
  3670   000CAA  EF17  F006         	goto	l3404
  3671   000CAE                     u2810:
  3672   000CAE  5023               	movf	___fldiv@rem^0,w,c
  3673   000CB0  1024               	iorwf	(___fldiv@rem+1)^0,w,c
  3674   000CB2  1025               	iorwf	(___fldiv@rem+2)^0,w,c
  3675   000CB4  1026               	iorwf	(___fldiv@rem+3)^0,w,c
  3676   000CB6  B4D8               	btfsc	status,2,c
  3677   000CB8  EF60  F006         	goto	u2821
  3678   000CBC  EF62  F006         	goto	u2820
  3679   000CC0                     u2821:
  3680   000CC0  EF7A  F006         	goto	l3430
  3681   000CC4                     u2820:
  3682   000CC4  802A               	bsf	___fldiv@grs^0,0,c
  3683   000CC6  EF7A  F006         	goto	l3430
  3684   000CCA                     l3424:
  3685   000CCA  90D8               	bcf	status,0,c
  3686   000CCC  3617               	rlcf	___fldiv@b^0,f,c
  3687   000CCE  3618               	rlcf	(___fldiv@b+1)^0,f,c
  3688   000CD0  3619               	rlcf	(___fldiv@b+2)^0,f,c
  3689   000CD2  361A               	rlcf	(___fldiv@b+3)^0,f,c
  3690   000CD4  AE2D               	btfss	(___fldiv@grs+3)^0,7,c
  3691   000CD6  EF6F  F006         	goto	u2831
  3692   000CDA  EF71  F006         	goto	u2830
  3693   000CDE                     u2831:
  3694   000CDE  EF72  F006         	goto	l1306
  3695   000CE2                     u2830:
  3696   000CE2  8017               	bsf	___fldiv@b^0,0,c
  3697   000CE4                     l1306:
  3698   000CE4  90D8               	bcf	status,0,c
  3699   000CE6  362A               	rlcf	___fldiv@grs^0,f,c
  3700   000CE8  362B               	rlcf	(___fldiv@grs+1)^0,f,c
  3701   000CEA  362C               	rlcf	(___fldiv@grs+2)^0,f,c
  3702   000CEC  362D               	rlcf	(___fldiv@grs+3)^0,f,c
  3703   000CEE  0628               	decf	___fldiv@new_exp^0,f,c
  3704   000CF0  A0D8               	btfss	status,0,c
  3705   000CF2  0629               	decf	(___fldiv@new_exp+1)^0,f,c
  3706   000CF4                     l3430:
  3707   000CF4  AE19               	btfss	(___fldiv@b+2)^0,7,c
  3708   000CF6  EF7F  F006         	goto	u2841
  3709   000CFA  EF81  F006         	goto	u2840
  3710   000CFE                     u2841:
  3711   000CFE  EF65  F006         	goto	l3424
  3712   000D02                     u2840:
  3713   000D02  0E00               	movlw	0
  3714   000D04  6E2F               	movwf	___fldiv@aexp^0,c
  3715   000D06  AE2D               	btfss	(___fldiv@grs+3)^0,7,c
  3716   000D08  EF88  F006         	goto	u2851
  3717   000D0C  EF8A  F006         	goto	u2850
  3718   000D10                     u2851:
  3719   000D10  EFAE  F006         	goto	l1308
  3720   000D14                     u2850:
  3721   000D14  0EFF               	movlw	255
  3722   000D16  142A               	andwf	___fldiv@grs^0,w,c
  3723   000D18  6E1F               	movwf	??___fldiv^0,c
  3724   000D1A  0EFF               	movlw	255
  3725   000D1C  142B               	andwf	(___fldiv@grs+1)^0,w,c
  3726   000D1E  6E20               	movwf	(??___fldiv+1)^0,c
  3727   000D20  0EFF               	movlw	255
  3728   000D22  142C               	andwf	(___fldiv@grs+2)^0,w,c
  3729   000D24  6E21               	movwf	(??___fldiv+2)^0,c
  3730   000D26  0E7F               	movlw	127
  3731   000D28  142D               	andwf	(___fldiv@grs+3)^0,w,c
  3732   000D2A  6E22               	movwf	(??___fldiv+3)^0,c
  3733   000D2C  501F               	movf	??___fldiv^0,w,c
  3734   000D2E  1020               	iorwf	(??___fldiv+1)^0,w,c
  3735   000D30  1021               	iorwf	(??___fldiv+2)^0,w,c
  3736   000D32  1022               	iorwf	(??___fldiv+3)^0,w,c
  3737   000D34  B4D8               	btfsc	status,2,c
  3738   000D36  EF9F  F006         	goto	u2861
  3739   000D3A  EFA1  F006         	goto	u2860
  3740   000D3E                     u2861:
  3741   000D3E  EFA5  F006         	goto	l1309
  3742   000D42                     u2860:
  3743   000D42                     l3438:
  3744   000D42  0E01               	movlw	1
  3745   000D44  6E2F               	movwf	___fldiv@aexp^0,c
  3746   000D46  EFAE  F006         	goto	l1308
  3747   000D4A                     l1309:
  3748   000D4A  A017               	btfss	___fldiv@b^0,0,c
  3749   000D4C  EFAA  F006         	goto	u2871
  3750   000D50  EFAC  F006         	goto	u2870
  3751   000D54                     u2871:
  3752   000D54  EFAE  F006         	goto	l1308
  3753   000D58                     u2870:
  3754   000D58  EFA1  F006         	goto	l3438
  3755   000D5C                     l1308:
  3756   000D5C  502F               	movf	___fldiv@aexp^0,w,c
  3757   000D5E  B4D8               	btfsc	status,2,c
  3758   000D60  EFB4  F006         	goto	u2881
  3759   000D64  EFB6  F006         	goto	u2880
  3760   000D68                     u2881:
  3761   000D68  EFDA  F006         	goto	l3450
  3762   000D6C                     u2880:
  3763   000D6C  0E01               	movlw	1
  3764   000D6E  2617               	addwf	___fldiv@b^0,f,c
  3765   000D70  0E00               	movlw	0
  3766   000D72  2218               	addwfc	(___fldiv@b+1)^0,f,c
  3767   000D74  2219               	addwfc	(___fldiv@b+2)^0,f,c
  3768   000D76  221A               	addwfc	(___fldiv@b+3)^0,f,c
  3769   000D78  A01A               	btfss	(___fldiv@b+3)^0,0,c
  3770   000D7A  EFC1  F006         	goto	u2891
  3771   000D7E  EFC3  F006         	goto	u2890
  3772   000D82                     u2891:
  3773   000D82  EFDA  F006         	goto	l3450
  3774   000D86                     u2890:
  3775   000D86  C017  F01F         	movff	___fldiv@b,??___fldiv
  3776   000D8A  C018  F020         	movff	___fldiv@b+1,??___fldiv+1
  3777   000D8E  C019  F021         	movff	___fldiv@b+2,??___fldiv+2
  3778   000D92  C01A  F022         	movff	___fldiv@b+3,??___fldiv+3
  3779   000D96  3422               	rlcf	(??___fldiv+3)^0,w,c
  3780   000D98  3222               	rrcf	(??___fldiv+3)^0,f,c
  3781   000D9A  3221               	rrcf	(??___fldiv+2)^0,f,c
  3782   000D9C  3220               	rrcf	(??___fldiv+1)^0,f,c
  3783   000D9E  321F               	rrcf	??___fldiv^0,f,c
  3784   000DA0  C01F  F017         	movff	??___fldiv,___fldiv@b
  3785   000DA4  C020  F018         	movff	??___fldiv+1,___fldiv@b+1
  3786   000DA8  C021  F019         	movff	??___fldiv+2,___fldiv@b+2
  3787   000DAC  C022  F01A         	movff	??___fldiv+3,___fldiv@b+3
  3788   000DB0  4A28               	infsnz	___fldiv@new_exp^0,f,c
  3789   000DB2  2A29               	incf	(___fldiv@new_exp+1)^0,f,c
  3790   000DB4                     l3450:
  3791   000DB4  BE29               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3792   000DB6  EFE5  F006         	goto	u2901
  3793   000DBA  5029               	movf	(___fldiv@new_exp+1)^0,w,c
  3794   000DBC  E108               	bnz	u2900
  3795   000DBE  2828               	incf	___fldiv@new_exp^0,w,c
  3796   000DC0  A0D8               	btfss	status,0,c
  3797   000DC2  EFE5  F006         	goto	u2901
  3798   000DC6  EFE7  F006         	goto	u2900
  3799   000DCA                     u2901:
  3800   000DCA  EFF2  F006         	goto	l3454
  3801   000DCE                     u2900:
  3802   000DCE  0E00               	movlw	0
  3803   000DD0  6E29               	movwf	(___fldiv@new_exp+1)^0,c
  3804   000DD2  6828               	setf	___fldiv@new_exp^0,c
  3805   000DD4  0E00               	movlw	0
  3806   000DD6  6E17               	movwf	___fldiv@b^0,c
  3807   000DD8  0E00               	movlw	0
  3808   000DDA  6E18               	movwf	(___fldiv@b+1)^0,c
  3809   000DDC  0E00               	movlw	0
  3810   000DDE  6E19               	movwf	(___fldiv@b+2)^0,c
  3811   000DE0  0E00               	movlw	0
  3812   000DE2  6E1A               	movwf	(___fldiv@b+3)^0,c
  3813   000DE4                     l3454:
  3814   000DE4  BE29               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3815   000DE6  EFFF  F006         	goto	u2910
  3816   000DEA  5029               	movf	(___fldiv@new_exp+1)^0,w,c
  3817   000DEC  E106               	bnz	u2911
  3818   000DEE  0428               	decf	___fldiv@new_exp^0,w,c
  3819   000DF0  B0D8               	btfsc	status,0,c
  3820   000DF2  EFFD  F006         	goto	u2911
  3821   000DF6  EFFF  F006         	goto	u2910
  3822   000DFA                     u2911:
  3823   000DFA  EF0D  F007         	goto	l3458
  3824   000DFE                     u2910:
  3825   000DFE  0E00               	movlw	0
  3826   000E00  6E29               	movwf	(___fldiv@new_exp+1)^0,c
  3827   000E02  0E00               	movlw	0
  3828   000E04  6E28               	movwf	___fldiv@new_exp^0,c
  3829   000E06  0E00               	movlw	0
  3830   000E08  6E17               	movwf	___fldiv@b^0,c
  3831   000E0A  0E00               	movlw	0
  3832   000E0C  6E18               	movwf	(___fldiv@b+1)^0,c
  3833   000E0E  0E00               	movlw	0
  3834   000E10  6E19               	movwf	(___fldiv@b+2)^0,c
  3835   000E12  0E00               	movlw	0
  3836   000E14  6E1A               	movwf	(___fldiv@b+3)^0,c
  3837   000E16  0E00               	movlw	0
  3838   000E18  6E27               	movwf	___fldiv@sign^0,c
  3839   000E1A                     l3458:
  3840   000E1A  C028  F02E         	movff	___fldiv@new_exp,___fldiv@bexp
  3841   000E1E  A02E               	btfss	___fldiv@bexp^0,0,c
  3842   000E20  EF14  F007         	goto	u2921
  3843   000E24  EF16  F007         	goto	u2920
  3844   000E28                     u2921:
  3845   000E28  EF19  F007         	goto	l3464
  3846   000E2C                     u2920:
  3847   000E2C  8E19               	bsf	(___fldiv@b+2)^0,7,c
  3848   000E2E  EF1A  F007         	goto	l3466
  3849   000E32                     l3464:
  3850   000E32  9E19               	bcf	(___fldiv@b+2)^0,7,c
  3851   000E34                     l3466:
  3852   000E34  90D8               	bcf	status,0,c
  3853   000E36  302E               	rrcf	___fldiv@bexp^0,w,c
  3854   000E38  6E1A               	movwf	(___fldiv@b+3)^0,c
  3855   000E3A  EFD0  F005         	goto	l3380
  3856   000E3E                     l1295:
  3857   000E3E  0012               	return		;funcret
  3858   000E40                     __end_of___fldiv:
  3859                           	callstack 0
  3860                           
  3861 ;; *************** function _color_click_init *****************
  3862 ;; Defined at:
  3863 ;;		line 6 in file "color.c"
  3864 ;; Parameters:    Size  Location     Type
  3865 ;;		None
  3866 ;; Auto vars:     Size  Location     Type
  3867 ;;		None
  3868 ;; Return value:  Size  Location     Type
  3869 ;;                  1    wreg      void 
  3870 ;; Registers used:
  3871 ;;		wreg, status,2, status,0, cstack
  3872 ;; Tracked objects:
  3873 ;;		On entry : 0/0
  3874 ;;		On exit  : 0/0
  3875 ;;		Unchanged: 0/0
  3876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3879 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3880 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3881 ;;Total ram usage:        1 bytes
  3882 ;; Hardware stack levels used: 1
  3883 ;; Hardware stack levels required when called: 10
  3884 ;; This function calls:
  3885 ;;		_I2C_2_Master_Init
  3886 ;;		_color_writetoaddr
  3887 ;; This function is called by:
  3888 ;;		_main
  3889 ;; This function uses a non-reentrant model
  3890 ;;
  3891                           
  3892                           	psect	text7
  3893   0028C6                     __ptext7:
  3894                           	callstack 0
  3895   0028C6                     _color_click_init:
  3896                           	callstack 20
  3897   0028C6                     
  3898                           ;color.c: 9:     I2C_2_Master_Init();
  3899   0028C6  EC96  F014         	call	_I2C_2_Master_Init	;wreg free
  3900   0028CA                     
  3901                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  3902   0028CA  0E01               	movlw	1
  3903   0028CC  6E0B               	movwf	color_writetoaddr@value^0,c
  3904   0028CE  0E00               	movlw	0
  3905   0028D0  EC2A  F015         	call	_color_writetoaddr
  3906   0028D4                     
  3907                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3908   0028D4  0E3F               	movlw	63
  3909   0028D6  6E0D               	movwf	??_color_click_init^0,c
  3910   0028D8  0E55               	movlw	85
  3911   0028DA                     u4687:
  3912   0028DA  2EE8               	decfsz	wreg,f,c
  3913   0028DC  D7FE               	bra	u4687
  3914   0028DE  2E0D               	decfsz	??_color_click_init^0,f,c
  3915   0028E0  D7FC               	bra	u4687
  3916   0028E2  F000               	nop	
  3917   0028E4                     
  3918                           ;color.c: 16:  color_writetoaddr(0x00, 0x03);
  3919   0028E4  0E03               	movlw	3
  3920   0028E6  6E0B               	movwf	color_writetoaddr@value^0,c
  3921   0028E8  0E00               	movlw	0
  3922   0028EA  EC2A  F015         	call	_color_writetoaddr
  3923   0028EE                     
  3924                           ;color.c: 19:  color_writetoaddr(0x01, 0xD5);
  3925   0028EE  0ED5               	movlw	213
  3926   0028F0  6E0B               	movwf	color_writetoaddr@value^0,c
  3927   0028F2  0E01               	movlw	1
  3928   0028F4  EC2A  F015         	call	_color_writetoaddr
  3929   0028F8  0012               	return		;funcret
  3930   0028FA                     __end_of_color_click_init:
  3931                           	callstack 0
  3932                           
  3933 ;; *************** function _I2C_2_Master_Init *****************
  3934 ;; Defined at:
  3935 ;;		line 4 in file "i2c.c"
  3936 ;; Parameters:    Size  Location     Type
  3937 ;;		None
  3938 ;; Auto vars:     Size  Location     Type
  3939 ;;		None
  3940 ;; Return value:  Size  Location     Type
  3941 ;;                  1    wreg      void 
  3942 ;; Registers used:
  3943 ;;		wreg, status,2
  3944 ;; Tracked objects:
  3945 ;;		On entry : 0/0
  3946 ;;		On exit  : 0/0
  3947 ;;		Unchanged: 0/0
  3948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3953 ;;Total ram usage:        0 bytes
  3954 ;; Hardware stack levels used: 1
  3955 ;; Hardware stack levels required when called: 7
  3956 ;; This function calls:
  3957 ;;		Nothing
  3958 ;; This function is called by:
  3959 ;;		_color_click_init
  3960 ;; This function uses a non-reentrant model
  3961 ;;
  3962                           
  3963                           	psect	text8
  3964   00292C                     __ptext8:
  3965                           	callstack 0
  3966   00292C                     _I2C_2_Master_Init:
  3967                           	callstack 22
  3968   00292C                     
  3969                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3970   00292C  010E               	movlb	14	; () banked
  3971   00292E  51D9               	movf	217,w,b	;volatile
  3972   002930  0BF0               	andlw	-16
  3973   002932  0908               	iorlw	8
  3974   002934  6FD9               	movwf	217,b	;volatile
  3975   002936                     
  3976                           ; BSR set to: 14
  3977                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3978   002936  8BD9               	bsf	217,5,b	;volatile
  3979                           
  3980                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3981   002938  0E9F               	movlw	159
  3982   00293A  6FD6               	movwf	214,b	;volatile
  3983   00293C                     
  3984                           ; BSR set to: 14
  3985                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3986   00293C  8A84               	bsf	132,5,c	;volatile
  3987   00293E                     
  3988                           ; BSR set to: 14
  3989                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3990   00293E  8C84               	bsf	132,6,c	;volatile
  3991   002940                     
  3992                           ; BSR set to: 14
  3993                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3994   002940  9BA7               	bcf	167,5,b	;volatile
  3995   002942                     
  3996                           ; BSR set to: 14
  3997                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3998   002942  9DA7               	bcf	167,6,b	;volatile
  3999                           
  4000                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  4001   002944  0E1D               	movlw	29
  4002   002946  6F1D               	movwf	29,b	;volatile
  4003                           
  4004                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  4005   002948  0E1E               	movlw	30
  4006   00294A  6F1C               	movwf	28,b	;volatile
  4007                           
  4008                           ;i2c.c: 18:   RD5PPS=0x1C;
  4009   00294C  0E1C               	movlw	28
  4010   00294E  6F6F               	movwf	111,b	;volatile
  4011                           
  4012                           ;i2c.c: 19:   RD6PPS=0x1B;
  4013   002950  0E1B               	movlw	27
  4014   002952  6F70               	movwf	112,b	;volatile
  4015   002954                     
  4016                           ; BSR set to: 14
  4017   002954  0012               	return		;funcret
  4018   002956                     __end_of_I2C_2_Master_Init:
  4019                           	callstack 0
  4020                           
  4021 ;; *************** function _WhiteLight *****************
  4022 ;; Defined at:
  4023 ;;		line 26 in file "LED_Buttons.c"
  4024 ;; Parameters:    Size  Location     Type
  4025 ;;		None
  4026 ;; Auto vars:     Size  Location     Type
  4027 ;;		None
  4028 ;; Return value:  Size  Location     Type
  4029 ;;                  1    wreg      void 
  4030 ;; Registers used:
  4031 ;;		None
  4032 ;; Tracked objects:
  4033 ;;		On entry : 0/0
  4034 ;;		On exit  : 0/0
  4035 ;;		Unchanged: 0/0
  4036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4041 ;;Total ram usage:        0 bytes
  4042 ;; Hardware stack levels used: 1
  4043 ;; Hardware stack levels required when called: 7
  4044 ;; This function calls:
  4045 ;;		Nothing
  4046 ;; This function is called by:
  4047 ;;		_main
  4048 ;; This function uses a non-reentrant model
  4049 ;;
  4050                           
  4051                           	psect	text9
  4052   002B4A                     __ptext9:
  4053                           	callstack 0
  4054   002B4A                     _WhiteLight:
  4055                           	callstack 23
  4056   002B4A                     
  4057                           ;LED_Buttons.c: 27:     LATGbits.LATG1 = 1;
  4058   002B4A  827F               	bsf	127,1,c	;volatile
  4059                           
  4060                           ;LED_Buttons.c: 28:     LATAbits.LATA4 = 1;
  4061   002B4C  8879               	bsf	121,4,c	;volatile
  4062                           
  4063                           ;LED_Buttons.c: 29:     LATFbits.LATF7 = 1;
  4064   002B4E  8E7E               	bsf	126,7,c	;volatile
  4065   002B50  0012               	return		;funcret
  4066   002B52                     __end_of_WhiteLight:
  4067                           	callstack 0
  4068                           
  4069 ;; *************** function _WhiteInstructions *****************
  4070 ;; Defined at:
  4071 ;;		line 154 in file "color_instructions.c"
  4072 ;; Parameters:    Size  Location     Type
  4073 ;;  mL              2   58[COMRAM] PTR struct DC_motor
  4074 ;;		 -> main@motorL(9), 
  4075 ;;  mR              2   60[COMRAM] PTR struct DC_motor
  4076 ;;		 -> main@motorR(9), 
  4077 ;; Auto vars:     Size  Location     Type
  4078 ;;  a               2   67[COMRAM] unsigned int 
  4079 ;;  c               2   64[COMRAM] unsigned int 
  4080 ;;  anticolor       1   66[COMRAM] unsigned char 
  4081 ;; Return value:  Size  Location     Type
  4082 ;;                  1    wreg      void 
  4083 ;; Registers used:
  4084 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4085 ;; Tracked objects:
  4086 ;;		On entry : 0/0
  4087 ;;		On exit  : 0/0
  4088 ;;		Unchanged: 0/0
  4089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4090 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4091 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4092 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4093 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4094 ;;Total ram usage:       11 bytes
  4095 ;; Hardware stack levels used: 1
  4096 ;; Hardware stack levels required when called: 14
  4097 ;; This function calls:
  4098 ;;		_BlueInstructions
  4099 ;;		_MoveBuggy
  4100 ;;		_Return_Anti_Moves
  4101 ;;		_Return_Time
  4102 ;;		_fullSpeedAhead
  4103 ;;		_stop
  4104 ;; This function is called by:
  4105 ;;		_main
  4106 ;; This function uses a non-reentrant model
  4107 ;;
  4108                           
  4109                           	psect	text10
  4110   001B92                     __ptext10:
  4111                           	callstack 0
  4112   001B92                     _WhiteInstructions:
  4113                           	callstack 16
  4114   001B92                     
  4115                           ;color_instructions.c: 155:     PIE0bits.INT1IE = 0;
  4116   001B92  010E               	movlb	14	; () banked
  4117   001B94  9329               	bcf	41,1,b	;volatile
  4118   001B96                     
  4119                           ; BSR set to: 14
  4120                           ;color_instructions.c: 157:     BlueInstructions(mL,mR);
  4121   001B96  C03B  F027         	movff	WhiteInstructions@mL,BlueInstructions@mL
  4122   001B9A  C03C  F028         	movff	WhiteInstructions@mL+1,BlueInstructions@mL+1
  4123   001B9E  C03D  F029         	movff	WhiteInstructions@mR,BlueInstructions@mR
  4124   001BA2  C03E  F02A         	movff	WhiteInstructions@mR+1,BlueInstructions@mR+1
  4125   001BA6  EC5B  F00F         	call	_BlueInstructions	;wreg free
  4126                           
  4127                           ;color_instructions.c: 159:     while(time_index>0){
  4128   001BAA  EF36  F00E         	goto	l3924
  4129   001BAE                     l3904:
  4130                           
  4131                           ;color_instructions.c: 161:         unsigned int a = 0;
  4132   001BAE  0E00               	movlw	0
  4133   001BB0  6E45               	movwf	(WhiteInstructions@a+1)^0,c
  4134   001BB2  0E00               	movlw	0
  4135   001BB4  6E44               	movwf	WhiteInstructions@a^0,c
  4136   001BB6                     
  4137                           ;color_instructions.c: 162:         unsigned int c = Return_Time(&time_index,time_array)
      +                          ;
  4138   001BB6  0E56               	movlw	low _time_index
  4139   001BB8  6E09               	movwf	Return_Time@time_index^0,c
  4140   001BBA  0E00               	movlw	high _time_index
  4141   001BBC  6E0A               	movwf	(Return_Time@time_index+1)^0,c
  4142   001BBE  0E3C               	movlw	low _time_array
  4143   001BC0  6E0B               	movwf	Return_Time@time_array^0,c
  4144   001BC2  0E01               	movlw	high _time_array
  4145   001BC4  6E0C               	movwf	(Return_Time@time_array+1)^0,c
  4146   001BC6  EC47  F014         	call	_Return_Time	;wreg free
  4147   001BCA  C009  F041         	movff	?_Return_Time,WhiteInstructions@c
  4148   001BCE  C00A  F042         	movff	?_Return_Time+1,WhiteInstructions@c+1
  4149                           
  4150                           ;color_instructions.c: 163:         while(a<c){
  4151   001BD2  EFF7  F00D         	goto	l3912
  4152   001BD6                     l3908:
  4153                           
  4154                           ;color_instructions.c: 164:             fullSpeedAhead(mL,mR);
  4155   001BD6  C03B  F01C         	movff	WhiteInstructions@mL,fullSpeedAhead@mL
  4156   001BDA  C03C  F01D         	movff	WhiteInstructions@mL+1,fullSpeedAhead@mL+1
  4157   001BDE  C03D  F01E         	movff	WhiteInstructions@mR,fullSpeedAhead@mR
  4158   001BE2  C03E  F01F         	movff	WhiteInstructions@mR+1,fullSpeedAhead@mR+1
  4159   001BE6  EC64  F00C         	call	_fullSpeedAhead	;wreg free
  4160   001BEA                     
  4161                           ;color_instructions.c: 165:             a++;
  4162   001BEA  4A44               	infsnz	WhiteInstructions@a^0,f,c
  4163   001BEC  2A45               	incf	(WhiteInstructions@a+1)^0,f,c
  4164   001BEE                     l3912:
  4165                           
  4166                           ;color_instructions.c: 163:         while(a<c){
  4167   001BEE  5041               	movf	WhiteInstructions@c^0,w,c
  4168   001BF0  5C44               	subwf	WhiteInstructions@a^0,w,c
  4169   001BF2  5042               	movf	(WhiteInstructions@c+1)^0,w,c
  4170   001BF4  5845               	subwfb	(WhiteInstructions@a+1)^0,w,c
  4171   001BF6  A0D8               	btfss	status,0,c
  4172   001BF8  EF00  F00E         	goto	u3791
  4173   001BFC  EF02  F00E         	goto	u3790
  4174   001C00                     u3791:
  4175   001C00  EFEB  F00D         	goto	l3908
  4176   001C04                     u3790:
  4177   001C04  EF11  F00E         	goto	l3918
  4178   001C08                     l3914:
  4179                           
  4180                           ;color_instructions.c: 169:             stop(mL,mR);
  4181   001C08  C03B  F01C         	movff	WhiteInstructions@mL,stop@mL
  4182   001C0C  C03C  F01D         	movff	WhiteInstructions@mL+1,stop@mL+1
  4183   001C10  C03D  F01E         	movff	WhiteInstructions@mR,stop@mR
  4184   001C14  C03E  F01F         	movff	WhiteInstructions@mR+1,stop@mR+1
  4185   001C18  EC3F  F00E         	call	_stop	;wreg free
  4186   001C1C                     
  4187                           ;color_instructions.c: 170:             a--;
  4188   001C1C  0644               	decf	WhiteInstructions@a^0,f,c
  4189   001C1E  A0D8               	btfss	status,0,c
  4190   001C20  0645               	decf	(WhiteInstructions@a+1)^0,f,c
  4191   001C22                     l3918:
  4192                           
  4193                           ;color_instructions.c: 168:         while(a>0){
  4194   001C22  5044               	movf	WhiteInstructions@a^0,w,c
  4195   001C24  1045               	iorwf	(WhiteInstructions@a+1)^0,w,c
  4196   001C26  A4D8               	btfss	status,2,c
  4197   001C28  EF18  F00E         	goto	u3801
  4198   001C2C  EF1A  F00E         	goto	u3800
  4199   001C30                     u3801:
  4200   001C30  EF04  F00E         	goto	l3914
  4201   001C34                     u3800:
  4202   001C34                     
  4203                           ;color_instructions.c: 173:         unsigned char anticolor = Return_Anti_Moves(&moves_i
      +                          ndex, anti_moves_array);
  4204   001C34  0E55               	movlw	low _moves_index
  4205   001C36  6E09               	movwf	Return_Anti_Moves@moves_index^0,c
  4206   001C38  0E00               	movlw	high _moves_index
  4207   001C3A  6E0A               	movwf	(Return_Anti_Moves@moves_index+1)^0,c
  4208   001C3C  0E77               	movlw	low _anti_moves_array
  4209   001C3E  6E0B               	movwf	Return_Anti_Moves@anti_moves_array^0,c
  4210   001C40  0E00               	movlw	high _anti_moves_array
  4211   001C42  6E0C               	movwf	(Return_Anti_Moves@anti_moves_array+1)^0,c
  4212   001C44  ECF8  F014         	call	_Return_Anti_Moves	;wreg free
  4213   001C48  6E43               	movwf	WhiteInstructions@anticolor^0,c
  4214   001C4A                     
  4215                           ;color_instructions.c: 174:         MoveBuggy(anticolor,mL,mR);
  4216   001C4A  5043               	movf	WhiteInstructions@anticolor^0,w,c
  4217   001C4C  6E3F               	movwf	??_WhiteInstructions^0,c
  4218   001C4E  6A40               	clrf	(??_WhiteInstructions+1)^0,c
  4219   001C50  C03F  F035         	movff	??_WhiteInstructions,MoveBuggy@color_detected
  4220   001C54  C040  F036         	movff	??_WhiteInstructions+1,MoveBuggy@color_detected+1
  4221   001C58  C03B  F037         	movff	WhiteInstructions@mL,MoveBuggy@mL
  4222   001C5C  C03C  F038         	movff	WhiteInstructions@mL+1,MoveBuggy@mL+1
  4223   001C60  C03D  F039         	movff	WhiteInstructions@mR,MoveBuggy@mR
  4224   001C64  C03E  F03A         	movff	WhiteInstructions@mR+1,MoveBuggy@mR+1
  4225   001C68  EC97  F008         	call	_MoveBuggy	;wreg free
  4226   001C6C                     l3924:
  4227                           
  4228                           ;color_instructions.c: 159:     while(time_index>0){
  4229   001C6C  5056               	movf	_time_index^0,w,c
  4230   001C6E  A4D8               	btfss	status,2,c
  4231   001C70  EF3C  F00E         	goto	u3811
  4232   001C74  EF3E  F00E         	goto	u3810
  4233   001C78                     u3811:
  4234   001C78  EFD7  F00D         	goto	l3904
  4235   001C7C                     u3810:
  4236   001C7C  0012               	return		;funcret
  4237   001C7E                     __end_of_WhiteInstructions:
  4238                           	callstack 0
  4239                           
  4240 ;; *************** function _Return_Time *****************
  4241 ;; Defined at:
  4242 ;;		line 40 in file "Memorization.c"
  4243 ;; Parameters:    Size  Location     Type
  4244 ;;  time_index      2    8[COMRAM] PTR unsigned char 
  4245 ;;		 -> time_index(1), 
  4246 ;;  time_array      2   10[COMRAM] PTR unsigned int 
  4247 ;;		 -> time_array(80), 
  4248 ;; Auto vars:     Size  Location     Type
  4249 ;;  temp            2   15[COMRAM] unsigned int 
  4250 ;; Return value:  Size  Location     Type
  4251 ;;                  2    8[COMRAM] unsigned int 
  4252 ;; Registers used:
  4253 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4254 ;; Tracked objects:
  4255 ;;		On entry : 0/0
  4256 ;;		On exit  : 0/0
  4257 ;;		Unchanged: 0/0
  4258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4259 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4260 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4261 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4262 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4263 ;;Total ram usage:        9 bytes
  4264 ;; Hardware stack levels used: 1
  4265 ;; Hardware stack levels required when called: 7
  4266 ;; This function calls:
  4267 ;;		Nothing
  4268 ;; This function is called by:
  4269 ;;		_WhiteInstructions
  4270 ;; This function uses a non-reentrant model
  4271 ;;
  4272                           
  4273                           	psect	text11
  4274   00288E                     __ptext11:
  4275                           	callstack 0
  4276   00288E                     _Return_Time:
  4277                           	callstack 22
  4278   00288E                     
  4279                           ;Memorization.c: 41:     unsigned int temp;;Memorization.c: 43:     temp = time_array[--
      +                          (*time_index)];
  4280   00288E  C009  FFD9         	movff	Return_Time@time_index,fsr2l
  4281   002892  C00A  FFDA         	movff	Return_Time@time_index+1,fsr2h
  4282   002896  06DF               	decf	indf2,f,c
  4283   002898  50DF               	movf	indf2,w,c
  4284   00289A  6E0D               	movwf	??_Return_Time^0,c
  4285   00289C  500D               	movf	??_Return_Time^0,w,c
  4286   00289E  0D02               	mullw	2
  4287   0028A0  CFF3 F00E          	movff	prodl,??_Return_Time+1
  4288   0028A4  CFF4 F00F          	movff	prodh,??_Return_Time+2
  4289   0028A8  500E               	movf	(??_Return_Time+1)^0,w,c
  4290   0028AA  240B               	addwf	Return_Time@time_array^0,w,c
  4291   0028AC  6ED9               	movwf	fsr2l,c
  4292   0028AE  500F               	movf	(??_Return_Time+2)^0,w,c
  4293   0028B0  200C               	addwfc	(Return_Time@time_array+1)^0,w,c
  4294   0028B2  6EDA               	movwf	fsr2h,c
  4295   0028B4  CFDE F010          	movff	postinc2,Return_Time@temp
  4296   0028B8  CFDD F011          	movff	postdec2,Return_Time@temp+1
  4297   0028BC                     
  4298                           ;Memorization.c: 44:     return temp;
  4299   0028BC  C010  F009         	movff	Return_Time@temp,?_Return_Time
  4300   0028C0  C011  F00A         	movff	Return_Time@temp+1,?_Return_Time+1
  4301   0028C4  0012               	return		;funcret
  4302   0028C6                     __end_of_Return_Time:
  4303                           	callstack 0
  4304                           
  4305 ;; *************** function _Return_Anti_Moves *****************
  4306 ;; Defined at:
  4307 ;;		line 32 in file "Memorization.c"
  4308 ;; Parameters:    Size  Location     Type
  4309 ;;  moves_index     2    8[COMRAM] PTR unsigned char 
  4310 ;;		 -> moves_index(1), 
  4311 ;;  anti_moves_a    2   10[COMRAM] PTR unsigned char 
  4312 ;;		 -> anti_moves_array(40), 
  4313 ;; Auto vars:     Size  Location     Type
  4314 ;;  temp            1   13[COMRAM] unsigned char 
  4315 ;; Return value:  Size  Location     Type
  4316 ;;                  1    wreg      unsigned char 
  4317 ;; Registers used:
  4318 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4319 ;; Tracked objects:
  4320 ;;		On entry : 0/0
  4321 ;;		On exit  : 0/0
  4322 ;;		Unchanged: 0/0
  4323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4324 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4325 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4326 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4327 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4328 ;;Total ram usage:        6 bytes
  4329 ;; Hardware stack levels used: 1
  4330 ;; Hardware stack levels required when called: 7
  4331 ;; This function calls:
  4332 ;;		Nothing
  4333 ;; This function is called by:
  4334 ;;		_WhiteInstructions
  4335 ;; This function uses a non-reentrant model
  4336 ;;
  4337                           
  4338                           	psect	text12
  4339   0029F0                     __ptext12:
  4340                           	callstack 0
  4341   0029F0                     _Return_Anti_Moves:
  4342                           	callstack 22
  4343   0029F0                     
  4344                           ;Memorization.c: 33:     unsigned char temp;;Memorization.c: 35:     temp = anti_moves_a
      +                          rray[--(*moves_index)];
  4345   0029F0  C009  FFD9         	movff	Return_Anti_Moves@moves_index,fsr2l
  4346   0029F4  C00A  FFDA         	movff	Return_Anti_Moves@moves_index+1,fsr2h
  4347   0029F8  06DF               	decf	indf2,f,c
  4348   0029FA  50DF               	movf	indf2,w,c
  4349   0029FC  6E0D               	movwf	??_Return_Anti_Moves^0,c
  4350   0029FE  500D               	movf	??_Return_Anti_Moves^0,w,c
  4351   002A00  240B               	addwf	Return_Anti_Moves@anti_moves_array^0,w,c
  4352   002A02  6ED9               	movwf	fsr2l,c
  4353   002A04  0E00               	movlw	0
  4354   002A06  200C               	addwfc	(Return_Anti_Moves@anti_moves_array+1)^0,w,c
  4355   002A08  6EDA               	movwf	fsr2h,c
  4356   002A0A  50DF               	movf	indf2,w,c
  4357   002A0C  6E0E               	movwf	Return_Anti_Moves@temp^0,c
  4358   002A0E                     
  4359                           ;Memorization.c: 36:     return temp;
  4360   002A0E  500E               	movf	Return_Anti_Moves@temp^0,w,c
  4361   002A10  0012               	return		;funcret
  4362   002A12                     __end_of_Return_Anti_Moves:
  4363                           	callstack 0
  4364                           
  4365 ;; *************** function _MoveBuggy *****************
  4366 ;; Defined at:
  4367 ;;		line 180 in file "color_instructions.c"
  4368 ;; Parameters:    Size  Location     Type
  4369 ;;  color_detect    2   52[COMRAM] PTR unsigned char 
  4370 ;;		 -> RAM(3561), 
  4371 ;;  mL              2   54[COMRAM] PTR struct DC_motor
  4372 ;;		 -> main@motorL(9), 
  4373 ;;  mR              2   56[COMRAM] PTR struct DC_motor
  4374 ;;		 -> main@motorR(9), 
  4375 ;; Auto vars:     Size  Location     Type
  4376 ;;		None
  4377 ;; Return value:  Size  Location     Type
  4378 ;;                  1    wreg      void 
  4379 ;; Registers used:
  4380 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4381 ;; Tracked objects:
  4382 ;;		On entry : 0/0
  4383 ;;		On exit  : 0/0
  4384 ;;		Unchanged: 0/0
  4385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4386 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4389 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4390 ;;Total ram usage:        6 bytes
  4391 ;; Hardware stack levels used: 1
  4392 ;; Hardware stack levels required when called: 13
  4393 ;; This function calls:
  4394 ;;		_AntiPink
  4395 ;;		_AntiYellow
  4396 ;;		_AppendMoves
  4397 ;;		_BlueInstructions
  4398 ;;		_GreenInstructions
  4399 ;;		_LightBlueInstructions
  4400 ;;		_OrangeInstructions
  4401 ;;		_PinkInstructions
  4402 ;;		_RedInstructions
  4403 ;;		_YellowInstructions
  4404 ;; This function is called by:
  4405 ;;		_WhiteInstructions
  4406 ;;		_main
  4407 ;; This function uses a non-reentrant model
  4408 ;;
  4409                           
  4410                           	psect	text13
  4411   00112E                     __ptext13:
  4412                           	callstack 0
  4413   00112E                     _MoveBuggy:
  4414                           	callstack 16
  4415   00112E                     
  4416                           ;color_instructions.c: 181:     if (color_detected==1){
  4417   00112E  0435               	decf	MoveBuggy@color_detected^0,w,c
  4418   001130  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4419   001132  A4D8               	btfss	status,2,c
  4420   001134  EF9E  F008         	goto	u2541
  4421   001138  EFA0  F008         	goto	u2540
  4422   00113C                     u2541:
  4423   00113C  EFBE  F008         	goto	l3280
  4424   001140                     u2540:
  4425   001140                     
  4426                           ;color_instructions.c: 182:         RedInstructions(mL, mR);
  4427   001140  C037  F027         	movff	MoveBuggy@mL,RedInstructions@mL
  4428   001144  C038  F028         	movff	MoveBuggy@mL+1,RedInstructions@mL+1
  4429   001148  C039  F029         	movff	MoveBuggy@mR,RedInstructions@mR
  4430   00114C  C03A  F02A         	movff	MoveBuggy@mR+1,RedInstructions@mR+1
  4431   001150  ECB6  F011         	call	_RedInstructions	;wreg free
  4432   001154                     
  4433                           ;color_instructions.c: 183:         if(LATDbits.LATD7 != 1){
  4434   001154  BE7C               	btfsc	124,7,c	;volatile
  4435   001156  EFAF  F008         	goto	u2551
  4436   00115A  EFB1  F008         	goto	u2550
  4437   00115E                     u2551:
  4438   00115E  EFD8  F009         	goto	l599
  4439   001162                     u2550:
  4440   001162                     
  4441                           ;color_instructions.c: 184:             AppendMoves(2,&moves_index,anti_moves_array);
  4442   001162  0E55               	movlw	low _moves_index
  4443   001164  6E09               	movwf	AppendMoves@moves_index^0,c
  4444   001166  0E00               	movlw	high _moves_index
  4445   001168  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4446   00116A  0E77               	movlw	low _anti_moves_array
  4447   00116C  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4448   00116E  0E00               	movlw	high _anti_moves_array
  4449   001170  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4450   001172  0E02               	movlw	2
  4451   001174  ECE6  F014         	call	_AppendMoves
  4452   001178  EFD8  F009         	goto	l599
  4453   00117C                     l3280:
  4454   00117C  0E02               	movlw	2
  4455   00117E  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4456   001180  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4457   001182  A4D8               	btfss	status,2,c
  4458   001184  EFC6  F008         	goto	u2561
  4459   001188  EFC8  F008         	goto	u2560
  4460   00118C                     u2561:
  4461   00118C  EFE6  F008         	goto	l3288
  4462   001190                     u2560:
  4463   001190                     
  4464                           ;color_instructions.c: 188:         GreenInstructions(mL, mR);
  4465   001190  C037  F027         	movff	MoveBuggy@mL,GreenInstructions@mL
  4466   001194  C038  F028         	movff	MoveBuggy@mL+1,GreenInstructions@mL+1
  4467   001198  C039  F029         	movff	MoveBuggy@mR,GreenInstructions@mR
  4468   00119C  C03A  F02A         	movff	MoveBuggy@mR+1,GreenInstructions@mR+1
  4469   0011A0  ECF9  F011         	call	_GreenInstructions	;wreg free
  4470   0011A4                     
  4471                           ;color_instructions.c: 189:         if(LATDbits.LATD7 != 1){
  4472   0011A4  BE7C               	btfsc	124,7,c	;volatile
  4473   0011A6  EFD7  F008         	goto	u2571
  4474   0011AA  EFD9  F008         	goto	u2570
  4475   0011AE                     u2571:
  4476   0011AE  EFD8  F009         	goto	l599
  4477   0011B2                     u2570:
  4478   0011B2                     
  4479                           ;color_instructions.c: 190:             AppendMoves(1,&moves_index,anti_moves_array);
  4480   0011B2  0E55               	movlw	low _moves_index
  4481   0011B4  6E09               	movwf	AppendMoves@moves_index^0,c
  4482   0011B6  0E00               	movlw	high _moves_index
  4483   0011B8  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4484   0011BA  0E77               	movlw	low _anti_moves_array
  4485   0011BC  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4486   0011BE  0E00               	movlw	high _anti_moves_array
  4487   0011C0  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4488   0011C2  0E01               	movlw	1
  4489   0011C4  ECE6  F014         	call	_AppendMoves
  4490   0011C8  EFD8  F009         	goto	l599
  4491   0011CC                     l3288:
  4492   0011CC  0E03               	movlw	3
  4493   0011CE  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4494   0011D0  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4495   0011D2  A4D8               	btfss	status,2,c
  4496   0011D4  EFEE  F008         	goto	u2581
  4497   0011D8  EFF0  F008         	goto	u2580
  4498   0011DC                     u2581:
  4499   0011DC  EF0E  F009         	goto	l3296
  4500   0011E0                     u2580:
  4501   0011E0                     
  4502                           ;color_instructions.c: 194:         BlueInstructions(mL, mR);
  4503   0011E0  C037  F027         	movff	MoveBuggy@mL,BlueInstructions@mL
  4504   0011E4  C038  F028         	movff	MoveBuggy@mL+1,BlueInstructions@mL+1
  4505   0011E8  C039  F029         	movff	MoveBuggy@mR,BlueInstructions@mR
  4506   0011EC  C03A  F02A         	movff	MoveBuggy@mR+1,BlueInstructions@mR+1
  4507   0011F0  EC5B  F00F         	call	_BlueInstructions	;wreg free
  4508   0011F4                     
  4509                           ;color_instructions.c: 195:         if(LATDbits.LATD7 != 1){
  4510   0011F4  BE7C               	btfsc	124,7,c	;volatile
  4511   0011F6  EFFF  F008         	goto	u2591
  4512   0011FA  EF01  F009         	goto	u2590
  4513   0011FE                     u2591:
  4514   0011FE  EFD8  F009         	goto	l599
  4515   001202                     u2590:
  4516   001202                     
  4517                           ;color_instructions.c: 196:             AppendMoves(3,&moves_index,anti_moves_array);
  4518   001202  0E55               	movlw	low _moves_index
  4519   001204  6E09               	movwf	AppendMoves@moves_index^0,c
  4520   001206  0E00               	movlw	high _moves_index
  4521   001208  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4522   00120A  0E77               	movlw	low _anti_moves_array
  4523   00120C  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4524   00120E  0E00               	movlw	high _anti_moves_array
  4525   001210  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4526   001212  0E03               	movlw	3
  4527   001214  ECE6  F014         	call	_AppendMoves
  4528   001218  EFD8  F009         	goto	l599
  4529   00121C                     l3296:
  4530   00121C  0E04               	movlw	4
  4531   00121E  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4532   001220  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4533   001222  A4D8               	btfss	status,2,c
  4534   001224  EF16  F009         	goto	u2601
  4535   001228  EF18  F009         	goto	u2600
  4536   00122C                     u2601:
  4537   00122C  EF36  F009         	goto	l3304
  4538   001230                     u2600:
  4539   001230                     
  4540                           ;color_instructions.c: 200:         YellowInstructions(mL, mR);
  4541   001230  C037  F027         	movff	MoveBuggy@mL,YellowInstructions@mL
  4542   001234  C038  F028         	movff	MoveBuggy@mL+1,YellowInstructions@mL+1
  4543   001238  C039  F029         	movff	MoveBuggy@mR,YellowInstructions@mR
  4544   00123C  C03A  F02A         	movff	MoveBuggy@mR+1,YellowInstructions@mR+1
  4545   001240  ECAA  F010         	call	_YellowInstructions	;wreg free
  4546   001244                     
  4547                           ;color_instructions.c: 202:         if(LATDbits.LATD7 != 1){
  4548   001244  BE7C               	btfsc	124,7,c	;volatile
  4549   001246  EF27  F009         	goto	u2611
  4550   00124A  EF29  F009         	goto	u2610
  4551   00124E                     u2611:
  4552   00124E  EFD8  F009         	goto	l599
  4553   001252                     u2610:
  4554   001252                     
  4555                           ;color_instructions.c: 203:             AppendMoves(9,&moves_index,anti_moves_array);
  4556   001252  0E55               	movlw	low _moves_index
  4557   001254  6E09               	movwf	AppendMoves@moves_index^0,c
  4558   001256  0E00               	movlw	high _moves_index
  4559   001258  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4560   00125A  0E77               	movlw	low _anti_moves_array
  4561   00125C  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4562   00125E  0E00               	movlw	high _anti_moves_array
  4563   001260  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4564   001262  0E09               	movlw	9
  4565   001264  ECE6  F014         	call	_AppendMoves
  4566   001268  EFD8  F009         	goto	l599
  4567   00126C                     l3304:
  4568   00126C  0E05               	movlw	5
  4569   00126E  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4570   001270  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4571   001272  A4D8               	btfss	status,2,c
  4572   001274  EF3E  F009         	goto	u2621
  4573   001278  EF40  F009         	goto	u2620
  4574   00127C                     u2621:
  4575   00127C  EF5E  F009         	goto	l3312
  4576   001280                     u2620:
  4577   001280                     
  4578                           ;color_instructions.c: 207:         PinkInstructions(mL, mR);
  4579   001280  C037  F027         	movff	MoveBuggy@mL,PinkInstructions@mL
  4580   001284  C038  F028         	movff	MoveBuggy@mL+1,PinkInstructions@mL+1
  4581   001288  C039  F029         	movff	MoveBuggy@mR,PinkInstructions@mR
  4582   00128C  C03A  F02A         	movff	MoveBuggy@mR+1,PinkInstructions@mR+1
  4583   001290  ECED  F010         	call	_PinkInstructions	;wreg free
  4584   001294                     
  4585                           ;color_instructions.c: 209:         if(LATDbits.LATD7 != 1){
  4586   001294  BE7C               	btfsc	124,7,c	;volatile
  4587   001296  EF4F  F009         	goto	u2631
  4588   00129A  EF51  F009         	goto	u2630
  4589   00129E                     u2631:
  4590   00129E  EFD8  F009         	goto	l599
  4591   0012A2                     u2630:
  4592   0012A2                     
  4593                           ;color_instructions.c: 210:             AppendMoves(10,&moves_index,anti_moves_array);
  4594   0012A2  0E55               	movlw	low _moves_index
  4595   0012A4  6E09               	movwf	AppendMoves@moves_index^0,c
  4596   0012A6  0E00               	movlw	high _moves_index
  4597   0012A8  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4598   0012AA  0E77               	movlw	low _anti_moves_array
  4599   0012AC  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4600   0012AE  0E00               	movlw	high _anti_moves_array
  4601   0012B0  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4602   0012B2  0E0A               	movlw	10
  4603   0012B4  ECE6  F014         	call	_AppendMoves
  4604   0012B8  EFD8  F009         	goto	l599
  4605   0012BC                     l3312:
  4606   0012BC  0E06               	movlw	6
  4607   0012BE  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4608   0012C0  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4609   0012C2  A4D8               	btfss	status,2,c
  4610   0012C4  EF66  F009         	goto	u2641
  4611   0012C8  EF68  F009         	goto	u2640
  4612   0012CC                     u2641:
  4613   0012CC  EF86  F009         	goto	l3320
  4614   0012D0                     u2640:
  4615   0012D0                     
  4616                           ;color_instructions.c: 214:         OrangeInstructions(mL, mR);
  4617   0012D0  C037  F02C         	movff	MoveBuggy@mL,OrangeInstructions@mL
  4618   0012D4  C038  F02D         	movff	MoveBuggy@mL+1,OrangeInstructions@mL+1
  4619   0012D8  C039  F02E         	movff	MoveBuggy@mR,OrangeInstructions@mR
  4620   0012DC  C03A  F02F         	movff	MoveBuggy@mR+1,OrangeInstructions@mR+1
  4621   0012E0  EC30  F011         	call	_OrangeInstructions	;wreg free
  4622   0012E4                     
  4623                           ;color_instructions.c: 215:         if(LATDbits.LATD7 != 1){
  4624   0012E4  BE7C               	btfsc	124,7,c	;volatile
  4625   0012E6  EF77  F009         	goto	u2651
  4626   0012EA  EF79  F009         	goto	u2650
  4627   0012EE                     u2651:
  4628   0012EE  EFD8  F009         	goto	l599
  4629   0012F2                     u2650:
  4630   0012F2                     
  4631                           ;color_instructions.c: 216:             AppendMoves(7,&moves_index,anti_moves_array);
  4632   0012F2  0E55               	movlw	low _moves_index
  4633   0012F4  6E09               	movwf	AppendMoves@moves_index^0,c
  4634   0012F6  0E00               	movlw	high _moves_index
  4635   0012F8  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4636   0012FA  0E77               	movlw	low _anti_moves_array
  4637   0012FC  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4638   0012FE  0E00               	movlw	high _anti_moves_array
  4639   001300  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4640   001302  0E07               	movlw	7
  4641   001304  ECE6  F014         	call	_AppendMoves
  4642   001308  EFD8  F009         	goto	l599
  4643   00130C                     l3320:
  4644   00130C  0E07               	movlw	7
  4645   00130E  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4646   001310  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4647   001312  A4D8               	btfss	status,2,c
  4648   001314  EF8E  F009         	goto	u2661
  4649   001318  EF90  F009         	goto	u2660
  4650   00131C                     u2661:
  4651   00131C  EFAE  F009         	goto	l3328
  4652   001320                     u2660:
  4653   001320                     
  4654                           ;color_instructions.c: 220:         LightBlueInstructions(mL, mR);
  4655   001320  C037  F02C         	movff	MoveBuggy@mL,LightBlueInstructions@mL
  4656   001324  C038  F02D         	movff	MoveBuggy@mL+1,LightBlueInstructions@mL+1
  4657   001328  C039  F02E         	movff	MoveBuggy@mR,LightBlueInstructions@mR
  4658   00132C  C03A  F02F         	movff	MoveBuggy@mR+1,LightBlueInstructions@mR+1
  4659   001330  EC73  F011         	call	_LightBlueInstructions	;wreg free
  4660   001334                     
  4661                           ;color_instructions.c: 221:         if(LATDbits.LATD7 != 1){
  4662   001334  BE7C               	btfsc	124,7,c	;volatile
  4663   001336  EF9F  F009         	goto	u2671
  4664   00133A  EFA1  F009         	goto	u2670
  4665   00133E                     u2671:
  4666   00133E  EFD8  F009         	goto	l599
  4667   001342                     u2670:
  4668   001342                     
  4669                           ;color_instructions.c: 222:             AppendMoves(6,&moves_index,anti_moves_array);
  4670   001342  0E55               	movlw	low _moves_index
  4671   001344  6E09               	movwf	AppendMoves@moves_index^0,c
  4672   001346  0E00               	movlw	high _moves_index
  4673   001348  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4674   00134A  0E77               	movlw	low _anti_moves_array
  4675   00134C  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4676   00134E  0E00               	movlw	high _anti_moves_array
  4677   001350  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4678   001352  0E06               	movlw	6
  4679   001354  ECE6  F014         	call	_AppendMoves
  4680   001358  EFD8  F009         	goto	l599
  4681   00135C                     l3328:
  4682   00135C  0E09               	movlw	9
  4683   00135E  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4684   001360  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4685   001362  A4D8               	btfss	status,2,c
  4686   001364  EFB6  F009         	goto	u2681
  4687   001368  EFB8  F009         	goto	u2680
  4688   00136C                     u2681:
  4689   00136C  EFC4  F009         	goto	l3332
  4690   001370                     u2680:
  4691   001370                     
  4692                           ;color_instructions.c: 228:         AntiYellow(mL, mR);
  4693   001370  C037  F02E         	movff	MoveBuggy@mL,AntiYellow@mL
  4694   001374  C038  F02F         	movff	MoveBuggy@mL+1,AntiYellow@mL+1
  4695   001378  C039  F030         	movff	MoveBuggy@mR,AntiYellow@mR
  4696   00137C  C03A  F031         	movff	MoveBuggy@mR+1,AntiYellow@mR+1
  4697   001380  ECA9  F00E         	call	_AntiYellow	;wreg free
  4698                           
  4699                           ;color_instructions.c: 229:     }
  4700   001384  EFD8  F009         	goto	l599
  4701   001388                     l3332:
  4702   001388  0E0A               	movlw	10
  4703   00138A  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4704   00138C  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4705   00138E  A4D8               	btfss	status,2,c
  4706   001390  EFCC  F009         	goto	u2691
  4707   001394  EFCE  F009         	goto	u2690
  4708   001398                     u2691:
  4709   001398  EFD8  F009         	goto	l599
  4710   00139C                     u2690:
  4711   00139C                     
  4712                           ;color_instructions.c: 231:         AntiPink(mL, mR);
  4713   00139C  C037  F02E         	movff	MoveBuggy@mL,AntiPink@mL
  4714   0013A0  C038  F02F         	movff	MoveBuggy@mL+1,AntiPink@mL+1
  4715   0013A4  C039  F030         	movff	MoveBuggy@mR,AntiPink@mR
  4716   0013A8  C03A  F031         	movff	MoveBuggy@mR+1,AntiPink@mR+1
  4717   0013AC  EC02  F00F         	call	_AntiPink	;wreg free
  4718   0013B0                     l599:
  4719   0013B0  0012               	return		;funcret
  4720   0013B2                     __end_of_MoveBuggy:
  4721                           	callstack 0
  4722                           
  4723 ;; *************** function _YellowInstructions *****************
  4724 ;; Defined at:
  4725 ;;		line 57 in file "color_instructions.c"
  4726 ;; Parameters:    Size  Location     Type
  4727 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  4728 ;;		 -> main@motorL(9), 
  4729 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  4730 ;;		 -> main@motorR(9), 
  4731 ;; Auto vars:     Size  Location     Type
  4732 ;;  a               1   44[COMRAM] unsigned char 
  4733 ;; Return value:  Size  Location     Type
  4734 ;;                  1    wreg      void 
  4735 ;; Registers used:
  4736 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4737 ;; Tracked objects:
  4738 ;;		On entry : 0/0
  4739 ;;		On exit  : 0/0
  4740 ;;		Unchanged: 0/0
  4741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4742 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4743 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4744 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4745 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4746 ;;Total ram usage:        7 bytes
  4747 ;; Hardware stack levels used: 1
  4748 ;; Hardware stack levels required when called: 11
  4749 ;; This function calls:
  4750 ;;		_fullSpeedBackwards
  4751 ;;		_stop
  4752 ;;		_turnRight90
  4753 ;; This function is called by:
  4754 ;;		_MoveBuggy
  4755 ;; This function uses a non-reentrant model
  4756 ;;
  4757                           
  4758                           	psect	text14
  4759   002154                     __ptext14:
  4760                           	callstack 0
  4761   002154                     _YellowInstructions:
  4762                           	callstack 17
  4763   002154                     
  4764                           ;color_instructions.c: 59:     unsigned char a=0;
  4765   002154  0E00               	movlw	0
  4766   002156  6E2D               	movwf	YellowInstructions@a^0,c
  4767                           
  4768                           ;color_instructions.c: 60:     while (a<45){
  4769   002158  EFB9  F010         	goto	l3108
  4770   00215C                     l3104:
  4771                           
  4772                           ;color_instructions.c: 61:         fullSpeedBackwards(mL, mR);
  4773   00215C  C027  F01C         	movff	YellowInstructions@mL,fullSpeedBackwards@mL
  4774   002160  C028  F01D         	movff	YellowInstructions@mL+1,fullSpeedBackwards@mL+1
  4775   002164  C029  F01E         	movff	YellowInstructions@mR,fullSpeedBackwards@mR
  4776   002168  C02A  F01F         	movff	YellowInstructions@mR+1,fullSpeedBackwards@mR+1
  4777   00216C  EC52  F00D         	call	_fullSpeedBackwards	;wreg free
  4778   002170                     
  4779                           ;color_instructions.c: 62:         a++;
  4780   002170  2A2D               	incf	YellowInstructions@a^0,f,c
  4781   002172                     l3108:
  4782                           
  4783                           ;color_instructions.c: 60:     while (a<45){
  4784   002172  0E2C               	movlw	44
  4785   002174  642D               	cpfsgt	YellowInstructions@a^0,c
  4786   002176  EFBF  F010         	goto	u2421
  4787   00217A  EFC1  F010         	goto	u2420
  4788   00217E                     u2421:
  4789   00217E  EFAE  F010         	goto	l3104
  4790   002182                     u2420:
  4791   002182  EFCE  F010         	goto	l3114
  4792   002186                     l3110:
  4793                           
  4794                           ;color_instructions.c: 65:         stop(mL, mR);
  4795   002186  C027  F01C         	movff	YellowInstructions@mL,stop@mL
  4796   00218A  C028  F01D         	movff	YellowInstructions@mL+1,stop@mL+1
  4797   00218E  C029  F01E         	movff	YellowInstructions@mR,stop@mR
  4798   002192  C02A  F01F         	movff	YellowInstructions@mR+1,stop@mR+1
  4799   002196  EC3F  F00E         	call	_stop	;wreg free
  4800   00219A                     
  4801                           ;color_instructions.c: 66:         a--;
  4802   00219A  062D               	decf	YellowInstructions@a^0,f,c
  4803   00219C                     l3114:
  4804                           
  4805                           ;color_instructions.c: 64:     while (a>0){
  4806   00219C  502D               	movf	YellowInstructions@a^0,w,c
  4807   00219E  A4D8               	btfss	status,2,c
  4808   0021A0  EFD4  F010         	goto	u2431
  4809   0021A4  EFD6  F010         	goto	u2430
  4810   0021A8                     u2431:
  4811   0021A8  EFC3  F010         	goto	l3110
  4812   0021AC                     u2430:
  4813   0021AC                     
  4814                           ;color_instructions.c: 68:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4815   0021AC  0E05               	movlw	5
  4816   0021AE  6E2C               	movwf	(??_YellowInstructions+1)^0,c
  4817   0021B0  0E0F               	movlw	15
  4818   0021B2  6E2B               	movwf	??_YellowInstructions^0,c
  4819   0021B4  0EF1               	movlw	241
  4820   0021B6                     u4697:
  4821   0021B6  2EE8               	decfsz	wreg,f,c
  4822   0021B8  D7FE               	bra	u4697
  4823   0021BA  2E2B               	decfsz	??_YellowInstructions^0,f,c
  4824   0021BC  D7FC               	bra	u4697
  4825   0021BE  2E2C               	decfsz	(??_YellowInstructions+1)^0,f,c
  4826   0021C0  D7FA               	bra	u4697
  4827   0021C2  F000               	nop	
  4828   0021C4                     
  4829                           ;color_instructions.c: 69:     turnRight90(mL, mR);
  4830   0021C4  C027  F022         	movff	YellowInstructions@mL,turnRight90@mL
  4831   0021C8  C028  F023         	movff	YellowInstructions@mL+1,turnRight90@mL+1
  4832   0021CC  C029  F024         	movff	YellowInstructions@mR,turnRight90@mR
  4833   0021D0  C02A  F025         	movff	YellowInstructions@mR+1,turnRight90@mR+1
  4834   0021D4  ECB4  F00F         	call	_turnRight90	;wreg free
  4835   0021D8  0012               	return		;funcret
  4836   0021DA                     __end_of_YellowInstructions:
  4837                           	callstack 0
  4838                           
  4839 ;; *************** function _PinkInstructions *****************
  4840 ;; Defined at:
  4841 ;;		line 72 in file "color_instructions.c"
  4842 ;; Parameters:    Size  Location     Type
  4843 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  4844 ;;		 -> main@motorL(9), 
  4845 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  4846 ;;		 -> main@motorR(9), 
  4847 ;; Auto vars:     Size  Location     Type
  4848 ;;  a               1   44[COMRAM] unsigned char 
  4849 ;; Return value:  Size  Location     Type
  4850 ;;                  1    wreg      void 
  4851 ;; Registers used:
  4852 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4853 ;; Tracked objects:
  4854 ;;		On entry : 0/0
  4855 ;;		On exit  : 0/0
  4856 ;;		Unchanged: 0/0
  4857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4858 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4859 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4860 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4861 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4862 ;;Total ram usage:        7 bytes
  4863 ;; Hardware stack levels used: 1
  4864 ;; Hardware stack levels required when called: 11
  4865 ;; This function calls:
  4866 ;;		_fullSpeedBackwards
  4867 ;;		_stop
  4868 ;;		_turnLeft90
  4869 ;; This function is called by:
  4870 ;;		_MoveBuggy
  4871 ;; This function uses a non-reentrant model
  4872 ;;
  4873                           
  4874                           	psect	text15
  4875   0021DA                     __ptext15:
  4876                           	callstack 0
  4877   0021DA                     _PinkInstructions:
  4878                           	callstack 17
  4879   0021DA                     
  4880                           ;color_instructions.c: 73:     unsigned char a=0;
  4881   0021DA  0E00               	movlw	0
  4882   0021DC  6E2D               	movwf	PinkInstructions@a^0,c
  4883                           
  4884                           ;color_instructions.c: 74:     while (a<45){
  4885   0021DE  EFFC  F010         	goto	l3126
  4886   0021E2                     l3122:
  4887                           
  4888                           ;color_instructions.c: 75:         fullSpeedBackwards(mL, mR);
  4889   0021E2  C027  F01C         	movff	PinkInstructions@mL,fullSpeedBackwards@mL
  4890   0021E6  C028  F01D         	movff	PinkInstructions@mL+1,fullSpeedBackwards@mL+1
  4891   0021EA  C029  F01E         	movff	PinkInstructions@mR,fullSpeedBackwards@mR
  4892   0021EE  C02A  F01F         	movff	PinkInstructions@mR+1,fullSpeedBackwards@mR+1
  4893   0021F2  EC52  F00D         	call	_fullSpeedBackwards	;wreg free
  4894   0021F6                     
  4895                           ;color_instructions.c: 76:         a++;
  4896   0021F6  2A2D               	incf	PinkInstructions@a^0,f,c
  4897   0021F8                     l3126:
  4898                           
  4899                           ;color_instructions.c: 74:     while (a<45){
  4900   0021F8  0E2C               	movlw	44
  4901   0021FA  642D               	cpfsgt	PinkInstructions@a^0,c
  4902   0021FC  EF02  F011         	goto	u2441
  4903   002200  EF04  F011         	goto	u2440
  4904   002204                     u2441:
  4905   002204  EFF1  F010         	goto	l3122
  4906   002208                     u2440:
  4907   002208  EF11  F011         	goto	l3132
  4908   00220C                     l3128:
  4909                           
  4910                           ;color_instructions.c: 79:         stop(mL, mR);
  4911   00220C  C027  F01C         	movff	PinkInstructions@mL,stop@mL
  4912   002210  C028  F01D         	movff	PinkInstructions@mL+1,stop@mL+1
  4913   002214  C029  F01E         	movff	PinkInstructions@mR,stop@mR
  4914   002218  C02A  F01F         	movff	PinkInstructions@mR+1,stop@mR+1
  4915   00221C  EC3F  F00E         	call	_stop	;wreg free
  4916   002220                     
  4917                           ;color_instructions.c: 80:         a--;
  4918   002220  062D               	decf	PinkInstructions@a^0,f,c
  4919   002222                     l3132:
  4920                           
  4921                           ;color_instructions.c: 78:     while (a>0){
  4922   002222  502D               	movf	PinkInstructions@a^0,w,c
  4923   002224  A4D8               	btfss	status,2,c
  4924   002226  EF17  F011         	goto	u2451
  4925   00222A  EF19  F011         	goto	u2450
  4926   00222E                     u2451:
  4927   00222E  EF06  F011         	goto	l3128
  4928   002232                     u2450:
  4929   002232                     
  4930                           ;color_instructions.c: 82:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4931   002232  0E05               	movlw	5
  4932   002234  6E2C               	movwf	(??_PinkInstructions+1)^0,c
  4933   002236  0E0F               	movlw	15
  4934   002238  6E2B               	movwf	??_PinkInstructions^0,c
  4935   00223A  0EF1               	movlw	241
  4936   00223C                     u4707:
  4937   00223C  2EE8               	decfsz	wreg,f,c
  4938   00223E  D7FE               	bra	u4707
  4939   002240  2E2B               	decfsz	??_PinkInstructions^0,f,c
  4940   002242  D7FC               	bra	u4707
  4941   002244  2E2C               	decfsz	(??_PinkInstructions+1)^0,f,c
  4942   002246  D7FA               	bra	u4707
  4943   002248  F000               	nop	
  4944   00224A                     
  4945                           ;color_instructions.c: 83:     turnLeft90(mL, mR);
  4946   00224A  C027  F022         	movff	PinkInstructions@mL,turnLeft90@mL
  4947   00224E  C028  F023         	movff	PinkInstructions@mL+1,turnLeft90@mL+1
  4948   002252  C029  F024         	movff	PinkInstructions@mR,turnLeft90@mR
  4949   002256  C02A  F025         	movff	PinkInstructions@mR+1,turnLeft90@mR+1
  4950   00225A  EC0B  F010         	call	_turnLeft90	;wreg free
  4951   00225E  0012               	return		;funcret
  4952   002260                     __end_of_PinkInstructions:
  4953                           	callstack 0
  4954                           
  4955 ;; *************** function _OrangeInstructions *****************
  4956 ;; Defined at:
  4957 ;;		line 87 in file "color_instructions.c"
  4958 ;; Parameters:    Size  Location     Type
  4959 ;;  mL              2   43[COMRAM] PTR struct DC_motor
  4960 ;;		 -> main@motorL(9), 
  4961 ;;  mR              2   45[COMRAM] PTR struct DC_motor
  4962 ;;		 -> main@motorR(9), 
  4963 ;; Auto vars:     Size  Location     Type
  4964 ;;  a               1   49[COMRAM] unsigned char 
  4965 ;; Return value:  Size  Location     Type
  4966 ;;                  1    wreg      void 
  4967 ;; Registers used:
  4968 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4969 ;; Tracked objects:
  4970 ;;		On entry : 0/0
  4971 ;;		On exit  : 0/0
  4972 ;;		Unchanged: 0/0
  4973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4974 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4975 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4976 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4977 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4978 ;;Total ram usage:        7 bytes
  4979 ;; Hardware stack levels used: 1
  4980 ;; Hardware stack levels required when called: 12
  4981 ;; This function calls:
  4982 ;;		_fullSpeedBackwards
  4983 ;;		_stop
  4984 ;;		_turnRight135
  4985 ;; This function is called by:
  4986 ;;		_MoveBuggy
  4987 ;; This function uses a non-reentrant model
  4988 ;;
  4989                           
  4990                           	psect	text16
  4991   002260                     __ptext16:
  4992                           	callstack 0
  4993   002260                     _OrangeInstructions:
  4994                           	callstack 16
  4995   002260                     
  4996                           ;color_instructions.c: 88:     unsigned char a=0;
  4997   002260  0E00               	movlw	0
  4998   002262  6E32               	movwf	OrangeInstructions@a^0,c
  4999                           
  5000                           ;color_instructions.c: 89:     while (a<16){
  5001   002264  EF3F  F011         	goto	l3144
  5002   002268                     l3140:
  5003                           
  5004                           ;color_instructions.c: 90:         fullSpeedBackwards(mL, mR);
  5005   002268  C02C  F01C         	movff	OrangeInstructions@mL,fullSpeedBackwards@mL
  5006   00226C  C02D  F01D         	movff	OrangeInstructions@mL+1,fullSpeedBackwards@mL+1
  5007   002270  C02E  F01E         	movff	OrangeInstructions@mR,fullSpeedBackwards@mR
  5008   002274  C02F  F01F         	movff	OrangeInstructions@mR+1,fullSpeedBackwards@mR+1
  5009   002278  EC52  F00D         	call	_fullSpeedBackwards	;wreg free
  5010   00227C                     
  5011                           ;color_instructions.c: 91:         a++;
  5012   00227C  2A32               	incf	OrangeInstructions@a^0,f,c
  5013   00227E                     l3144:
  5014                           
  5015                           ;color_instructions.c: 89:     while (a<16){
  5016   00227E  0E0F               	movlw	15
  5017   002280  6432               	cpfsgt	OrangeInstructions@a^0,c
  5018   002282  EF45  F011         	goto	u2461
  5019   002286  EF47  F011         	goto	u2460
  5020   00228A                     u2461:
  5021   00228A  EF34  F011         	goto	l3140
  5022   00228E                     u2460:
  5023   00228E  EF54  F011         	goto	l3150
  5024   002292                     l3146:
  5025                           
  5026                           ;color_instructions.c: 94:         stop(mL, mR);
  5027   002292  C02C  F01C         	movff	OrangeInstructions@mL,stop@mL
  5028   002296  C02D  F01D         	movff	OrangeInstructions@mL+1,stop@mL+1
  5029   00229A  C02E  F01E         	movff	OrangeInstructions@mR,stop@mR
  5030   00229E  C02F  F01F         	movff	OrangeInstructions@mR+1,stop@mR+1
  5031   0022A2  EC3F  F00E         	call	_stop	;wreg free
  5032   0022A6                     
  5033                           ;color_instructions.c: 95:         a--;
  5034   0022A6  0632               	decf	OrangeInstructions@a^0,f,c
  5035   0022A8                     l3150:
  5036                           
  5037                           ;color_instructions.c: 93:     while (a>0){
  5038   0022A8  5032               	movf	OrangeInstructions@a^0,w,c
  5039   0022AA  A4D8               	btfss	status,2,c
  5040   0022AC  EF5A  F011         	goto	u2471
  5041   0022B0  EF5C  F011         	goto	u2470
  5042   0022B4                     u2471:
  5043   0022B4  EF49  F011         	goto	l3146
  5044   0022B8                     u2470:
  5045   0022B8                     
  5046                           ;color_instructions.c: 97:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5047   0022B8  0E05               	movlw	5
  5048   0022BA  6E31               	movwf	(??_OrangeInstructions+1)^0,c
  5049   0022BC  0E0F               	movlw	15
  5050   0022BE  6E30               	movwf	??_OrangeInstructions^0,c
  5051   0022C0  0EF1               	movlw	241
  5052   0022C2                     u4717:
  5053   0022C2  2EE8               	decfsz	wreg,f,c
  5054   0022C4  D7FE               	bra	u4717
  5055   0022C6  2E30               	decfsz	??_OrangeInstructions^0,f,c
  5056   0022C8  D7FC               	bra	u4717
  5057   0022CA  2E31               	decfsz	(??_OrangeInstructions+1)^0,f,c
  5058   0022CC  D7FA               	bra	u4717
  5059   0022CE  F000               	nop	
  5060   0022D0                     
  5061                           ;color_instructions.c: 98:     turnRight135(mL, mR);
  5062   0022D0  C02C  F027         	movff	OrangeInstructions@mL,turnRight135@mL
  5063   0022D4  C02D  F028         	movff	OrangeInstructions@mL+1,turnRight135@mL+1
  5064   0022D8  C02E  F029         	movff	OrangeInstructions@mR,turnRight135@mR
  5065   0022DC  C02F  F02A         	movff	OrangeInstructions@mR+1,turnRight135@mR+1
  5066   0022E0  EC76  F012         	call	_turnRight135	;wreg free
  5067   0022E4  0012               	return		;funcret
  5068   0022E6                     __end_of_OrangeInstructions:
  5069                           	callstack 0
  5070                           
  5071 ;; *************** function _turnRight135 *****************
  5072 ;; Defined at:
  5073 ;;		line 249 in file "dc_motor.c"
  5074 ;; Parameters:    Size  Location     Type
  5075 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  5076 ;;		 -> main@motorL(9), 
  5077 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  5078 ;;		 -> main@motorR(9), 
  5079 ;; Auto vars:     Size  Location     Type
  5080 ;;  a               1   42[COMRAM] unsigned char 
  5081 ;; Return value:  Size  Location     Type
  5082 ;;                  1    wreg      void 
  5083 ;; Registers used:
  5084 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5085 ;; Tracked objects:
  5086 ;;		On entry : 0/0
  5087 ;;		On exit  : 0/0
  5088 ;;		Unchanged: 0/0
  5089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5090 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5091 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5093 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5094 ;;Total ram usage:        5 bytes
  5095 ;; Hardware stack levels used: 1
  5096 ;; Hardware stack levels required when called: 11
  5097 ;; This function calls:
  5098 ;;		_stop
  5099 ;;		_turnRight
  5100 ;;		_turnRight90
  5101 ;; This function is called by:
  5102 ;;		_OrangeInstructions
  5103 ;; This function uses a non-reentrant model
  5104 ;;
  5105                           
  5106                           	psect	text17
  5107   0024EC                     __ptext17:
  5108                           	callstack 0
  5109   0024EC                     _turnRight135:
  5110                           	callstack 16
  5111   0024EC                     
  5112                           ;dc_motor.c: 251:     turnRight90(mL,mR);
  5113   0024EC  C027  F022         	movff	turnRight135@mL,turnRight90@mL
  5114   0024F0  C028  F023         	movff	turnRight135@mL+1,turnRight90@mL+1
  5115   0024F4  C029  F024         	movff	turnRight135@mR,turnRight90@mR
  5116   0024F8  C02A  F025         	movff	turnRight135@mR+1,turnRight90@mR+1
  5117   0024FC  ECB4  F00F         	call	_turnRight90	;wreg free
  5118   002500                     
  5119                           ;dc_motor.c: 252:     unsigned char a=0;
  5120   002500  0E00               	movlw	0
  5121   002502  6E2B               	movwf	turnRight135@a^0,c
  5122                           
  5123                           ;dc_motor.c: 253:     while(a<15){
  5124   002504  EF8F  F012         	goto	l2978
  5125   002508                     l2974:
  5126                           
  5127                           ;dc_motor.c: 254:         turnRight(mL, mR);
  5128   002508  C027  F01C         	movff	turnRight135@mL,turnRight@mL
  5129   00250C  C028  F01D         	movff	turnRight135@mL+1,turnRight@mL+1
  5130   002510  C029  F01E         	movff	turnRight135@mR,turnRight@mR
  5131   002514  C02A  F01F         	movff	turnRight135@mR+1,turnRight@mR+1
  5132   002518  ECED  F00B         	call	_turnRight	;wreg free
  5133   00251C                     
  5134                           ;dc_motor.c: 255:         a++;
  5135   00251C  2A2B               	incf	turnRight135@a^0,f,c
  5136   00251E                     l2978:
  5137                           
  5138                           ;dc_motor.c: 253:     while(a<15){
  5139   00251E  0E0E               	movlw	14
  5140   002520  642B               	cpfsgt	turnRight135@a^0,c
  5141   002522  EF95  F012         	goto	u2301
  5142   002526  EF97  F012         	goto	u2300
  5143   00252A                     u2301:
  5144   00252A  EF84  F012         	goto	l2974
  5145   00252E                     u2300:
  5146   00252E  EFA4  F012         	goto	l2984
  5147   002532                     l2980:
  5148                           
  5149                           ;dc_motor.c: 258:         stop(mL, mR);
  5150   002532  C027  F01C         	movff	turnRight135@mL,stop@mL
  5151   002536  C028  F01D         	movff	turnRight135@mL+1,stop@mL+1
  5152   00253A  C029  F01E         	movff	turnRight135@mR,stop@mR
  5153   00253E  C02A  F01F         	movff	turnRight135@mR+1,stop@mR+1
  5154   002542  EC3F  F00E         	call	_stop	;wreg free
  5155   002546                     
  5156                           ;dc_motor.c: 259:         a--;
  5157   002546  062B               	decf	turnRight135@a^0,f,c
  5158   002548                     l2984:
  5159                           
  5160                           ;dc_motor.c: 257:     while(a>0){
  5161   002548  502B               	movf	turnRight135@a^0,w,c
  5162   00254A  A4D8               	btfss	status,2,c
  5163   00254C  EFAA  F012         	goto	u2311
  5164   002550  EFAC  F012         	goto	u2310
  5165   002554                     u2311:
  5166   002554  EF99  F012         	goto	l2980
  5167   002558                     u2310:
  5168   002558  0012               	return		;funcret
  5169   00255A                     __end_of_turnRight135:
  5170                           	callstack 0
  5171                           
  5172 ;; *************** function _LightBlueInstructions *****************
  5173 ;; Defined at:
  5174 ;;		line 101 in file "color_instructions.c"
  5175 ;; Parameters:    Size  Location     Type
  5176 ;;  mL              2   43[COMRAM] PTR struct DC_motor
  5177 ;;		 -> main@motorL(9), 
  5178 ;;  mR              2   45[COMRAM] PTR struct DC_motor
  5179 ;;		 -> main@motorR(9), 
  5180 ;; Auto vars:     Size  Location     Type
  5181 ;;  a               1   49[COMRAM] unsigned char 
  5182 ;; Return value:  Size  Location     Type
  5183 ;;                  1    wreg      void 
  5184 ;; Registers used:
  5185 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5186 ;; Tracked objects:
  5187 ;;		On entry : 0/0
  5188 ;;		On exit  : 0/0
  5189 ;;		Unchanged: 0/0
  5190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5191 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5192 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5193 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5194 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5195 ;;Total ram usage:        7 bytes
  5196 ;; Hardware stack levels used: 1
  5197 ;; Hardware stack levels required when called: 12
  5198 ;; This function calls:
  5199 ;;		_fullSpeedBackwards
  5200 ;;		_stop
  5201 ;;		_turnLeft135
  5202 ;; This function is called by:
  5203 ;;		_MoveBuggy
  5204 ;; This function uses a non-reentrant model
  5205 ;;
  5206                           
  5207                           	psect	text18
  5208   0022E6                     __ptext18:
  5209                           	callstack 0
  5210   0022E6                     _LightBlueInstructions:
  5211                           	callstack 16
  5212   0022E6                     
  5213                           ;color_instructions.c: 102:     unsigned char a=0;
  5214   0022E6  0E00               	movlw	0
  5215   0022E8  6E32               	movwf	LightBlueInstructions@a^0,c
  5216                           
  5217                           ;color_instructions.c: 103:     while (a<16){
  5218   0022EA  EF82  F011         	goto	l3162
  5219   0022EE                     l3158:
  5220                           
  5221                           ;color_instructions.c: 104:         fullSpeedBackwards(mL, mR);
  5222   0022EE  C02C  F01C         	movff	LightBlueInstructions@mL,fullSpeedBackwards@mL
  5223   0022F2  C02D  F01D         	movff	LightBlueInstructions@mL+1,fullSpeedBackwards@mL+1
  5224   0022F6  C02E  F01E         	movff	LightBlueInstructions@mR,fullSpeedBackwards@mR
  5225   0022FA  C02F  F01F         	movff	LightBlueInstructions@mR+1,fullSpeedBackwards@mR+1
  5226   0022FE  EC52  F00D         	call	_fullSpeedBackwards	;wreg free
  5227   002302                     
  5228                           ;color_instructions.c: 105:         a++;
  5229   002302  2A32               	incf	LightBlueInstructions@a^0,f,c
  5230   002304                     l3162:
  5231                           
  5232                           ;color_instructions.c: 103:     while (a<16){
  5233   002304  0E0F               	movlw	15
  5234   002306  6432               	cpfsgt	LightBlueInstructions@a^0,c
  5235   002308  EF88  F011         	goto	u2481
  5236   00230C  EF8A  F011         	goto	u2480
  5237   002310                     u2481:
  5238   002310  EF77  F011         	goto	l3158
  5239   002314                     u2480:
  5240   002314  EF97  F011         	goto	l3168
  5241   002318                     l3164:
  5242                           
  5243                           ;color_instructions.c: 108:         stop(mL, mR);
  5244   002318  C02C  F01C         	movff	LightBlueInstructions@mL,stop@mL
  5245   00231C  C02D  F01D         	movff	LightBlueInstructions@mL+1,stop@mL+1
  5246   002320  C02E  F01E         	movff	LightBlueInstructions@mR,stop@mR
  5247   002324  C02F  F01F         	movff	LightBlueInstructions@mR+1,stop@mR+1
  5248   002328  EC3F  F00E         	call	_stop	;wreg free
  5249   00232C                     
  5250                           ;color_instructions.c: 109:         a--;
  5251   00232C  0632               	decf	LightBlueInstructions@a^0,f,c
  5252   00232E                     l3168:
  5253                           
  5254                           ;color_instructions.c: 107:     while (a>0){
  5255   00232E  5032               	movf	LightBlueInstructions@a^0,w,c
  5256   002330  A4D8               	btfss	status,2,c
  5257   002332  EF9D  F011         	goto	u2491
  5258   002336  EF9F  F011         	goto	u2490
  5259   00233A                     u2491:
  5260   00233A  EF8C  F011         	goto	l3164
  5261   00233E                     u2490:
  5262   00233E                     
  5263                           ;color_instructions.c: 111:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5264   00233E  0E05               	movlw	5
  5265   002340  6E31               	movwf	(??_LightBlueInstructions+1)^0,c
  5266   002342  0E0F               	movlw	15
  5267   002344  6E30               	movwf	??_LightBlueInstructions^0,c
  5268   002346  0EF1               	movlw	241
  5269   002348                     u4727:
  5270   002348  2EE8               	decfsz	wreg,f,c
  5271   00234A  D7FE               	bra	u4727
  5272   00234C  2E30               	decfsz	??_LightBlueInstructions^0,f,c
  5273   00234E  D7FC               	bra	u4727
  5274   002350  2E31               	decfsz	(??_LightBlueInstructions+1)^0,f,c
  5275   002352  D7FA               	bra	u4727
  5276   002354  F000               	nop	
  5277   002356                     
  5278                           ;color_instructions.c: 112:     turnLeft135(mL, mR);
  5279   002356  C02C  F027         	movff	LightBlueInstructions@mL,turnLeft135@mL
  5280   00235A  C02D  F028         	movff	LightBlueInstructions@mL+1,turnLeft135@mL+1
  5281   00235E  C02E  F029         	movff	LightBlueInstructions@mR,turnLeft135@mR
  5282   002362  C02F  F02A         	movff	LightBlueInstructions@mR+1,turnLeft135@mR+1
  5283   002366  ECAD  F012         	call	_turnLeft135	;wreg free
  5284   00236A  0012               	return		;funcret
  5285   00236C                     __end_of_LightBlueInstructions:
  5286                           	callstack 0
  5287                           
  5288 ;; *************** function _turnLeft135 *****************
  5289 ;; Defined at:
  5290 ;;		line 263 in file "dc_motor.c"
  5291 ;; Parameters:    Size  Location     Type
  5292 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  5293 ;;		 -> main@motorL(9), 
  5294 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  5295 ;;		 -> main@motorR(9), 
  5296 ;; Auto vars:     Size  Location     Type
  5297 ;;  a               1   42[COMRAM] unsigned char 
  5298 ;; Return value:  Size  Location     Type
  5299 ;;                  1    wreg      void 
  5300 ;; Registers used:
  5301 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5302 ;; Tracked objects:
  5303 ;;		On entry : 0/0
  5304 ;;		On exit  : 0/0
  5305 ;;		Unchanged: 0/0
  5306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5307 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5308 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5310 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5311 ;;Total ram usage:        5 bytes
  5312 ;; Hardware stack levels used: 1
  5313 ;; Hardware stack levels required when called: 11
  5314 ;; This function calls:
  5315 ;;		_stop
  5316 ;;		_turnLeft
  5317 ;;		_turnLeft90
  5318 ;; This function is called by:
  5319 ;;		_LightBlueInstructions
  5320 ;; This function uses a non-reentrant model
  5321 ;;
  5322                           
  5323                           	psect	text19
  5324   00255A                     __ptext19:
  5325                           	callstack 0
  5326   00255A                     _turnLeft135:
  5327                           	callstack 16
  5328   00255A                     
  5329                           ;dc_motor.c: 265:     turnLeft90(mL,mR);
  5330   00255A  C027  F022         	movff	turnLeft135@mL,turnLeft90@mL
  5331   00255E  C028  F023         	movff	turnLeft135@mL+1,turnLeft90@mL+1
  5332   002562  C029  F024         	movff	turnLeft135@mR,turnLeft90@mR
  5333   002566  C02A  F025         	movff	turnLeft135@mR+1,turnLeft90@mR+1
  5334   00256A  EC0B  F010         	call	_turnLeft90	;wreg free
  5335   00256E                     
  5336                           ;dc_motor.c: 266:     unsigned char a=0;
  5337   00256E  0E00               	movlw	0
  5338   002570  6E2B               	movwf	turnLeft135@a^0,c
  5339                           
  5340                           ;dc_motor.c: 267:     while(a<16){
  5341   002572  EFC6  F012         	goto	l2994
  5342   002576                     l2990:
  5343                           
  5344                           ;dc_motor.c: 268:         turnLeft(mL, mR);
  5345   002576  C027  F01C         	movff	turnLeft135@mL,turnLeft@mL
  5346   00257A  C028  F01D         	movff	turnLeft135@mL+1,turnLeft@mL+1
  5347   00257E  C029  F01E         	movff	turnLeft135@mR,turnLeft@mR
  5348   002582  C02A  F01F         	movff	turnLeft135@mR+1,turnLeft@mR+1
  5349   002586  ECDB  F00C         	call	_turnLeft	;wreg free
  5350   00258A                     
  5351                           ;dc_motor.c: 269:         a++;
  5352   00258A  2A2B               	incf	turnLeft135@a^0,f,c
  5353   00258C                     l2994:
  5354                           
  5355                           ;dc_motor.c: 267:     while(a<16){
  5356   00258C  0E0F               	movlw	15
  5357   00258E  642B               	cpfsgt	turnLeft135@a^0,c
  5358   002590  EFCC  F012         	goto	u2321
  5359   002594  EFCE  F012         	goto	u2320
  5360   002598                     u2321:
  5361   002598  EFBB  F012         	goto	l2990
  5362   00259C                     u2320:
  5363   00259C  EFDB  F012         	goto	l3000
  5364   0025A0                     l2996:
  5365                           
  5366                           ;dc_motor.c: 272:         stop(mL, mR);
  5367   0025A0  C027  F01C         	movff	turnLeft135@mL,stop@mL
  5368   0025A4  C028  F01D         	movff	turnLeft135@mL+1,stop@mL+1
  5369   0025A8  C029  F01E         	movff	turnLeft135@mR,stop@mR
  5370   0025AC  C02A  F01F         	movff	turnLeft135@mR+1,stop@mR+1
  5371   0025B0  EC3F  F00E         	call	_stop	;wreg free
  5372   0025B4                     
  5373                           ;dc_motor.c: 273:         a--;
  5374   0025B4  062B               	decf	turnLeft135@a^0,f,c
  5375   0025B6                     l3000:
  5376                           
  5377                           ;dc_motor.c: 271:     while(a>0){
  5378   0025B6  502B               	movf	turnLeft135@a^0,w,c
  5379   0025B8  A4D8               	btfss	status,2,c
  5380   0025BA  EFE1  F012         	goto	u2331
  5381   0025BE  EFE3  F012         	goto	u2330
  5382   0025C2                     u2331:
  5383   0025C2  EFD0  F012         	goto	l2996
  5384   0025C6                     u2330:
  5385   0025C6  0012               	return		;funcret
  5386   0025C8                     __end_of_turnLeft135:
  5387                           	callstack 0
  5388                           
  5389 ;; *************** function _AppendMoves *****************
  5390 ;; Defined at:
  5391 ;;		line 17 in file "Memorization.c"
  5392 ;; Parameters:    Size  Location     Type
  5393 ;;  temp            1    wreg     unsigned char 
  5394 ;;  moves_index     2    8[COMRAM] PTR unsigned char 
  5395 ;;		 -> moves_index(1), 
  5396 ;;  anti_moves_a    2   10[COMRAM] PTR unsigned char 
  5397 ;;		 -> anti_moves_array(40), 
  5398 ;; Auto vars:     Size  Location     Type
  5399 ;;  temp            1   13[COMRAM] unsigned char 
  5400 ;; Return value:  Size  Location     Type
  5401 ;;                  1    wreg      void 
  5402 ;; Registers used:
  5403 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5404 ;; Tracked objects:
  5405 ;;		On entry : 0/0
  5406 ;;		On exit  : 0/0
  5407 ;;		Unchanged: 0/0
  5408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5409 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5410 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5411 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5412 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5413 ;;Total ram usage:        6 bytes
  5414 ;; Hardware stack levels used: 1
  5415 ;; Hardware stack levels required when called: 7
  5416 ;; This function calls:
  5417 ;;		Nothing
  5418 ;; This function is called by:
  5419 ;;		_MoveBuggy
  5420 ;; This function uses a non-reentrant model
  5421 ;;
  5422                           
  5423                           	psect	text20
  5424   0029CC                     __ptext20:
  5425                           	callstack 0
  5426   0029CC                     _AppendMoves:
  5427                           	callstack 21
  5428                           
  5429                           ;incstack = 0
  5430                           ;AppendMoves@temp stored from wreg
  5431   0029CC  6E0E               	movwf	AppendMoves@temp^0,c
  5432   0029CE                     
  5433                           ;Memorization.c: 19:     anti_moves_array[(*moves_index)++] = temp;
  5434   0029CE  C009  FFD9         	movff	AppendMoves@moves_index,fsr2l
  5435   0029D2  C00A  FFDA         	movff	AppendMoves@moves_index+1,fsr2h
  5436   0029D6  CFDF F00D          	movff	indf2,??_AppendMoves
  5437   0029DA  0E01               	movlw	1
  5438   0029DC  26DF               	addwf	indf2,f,c
  5439   0029DE  500D               	movf	??_AppendMoves^0,w,c
  5440   0029E0  240B               	addwf	AppendMoves@anti_moves_array^0,w,c
  5441   0029E2  6ED9               	movwf	fsr2l,c
  5442   0029E4  0E00               	movlw	0
  5443   0029E6  200C               	addwfc	(AppendMoves@anti_moves_array+1)^0,w,c
  5444   0029E8  6EDA               	movwf	fsr2h,c
  5445   0029EA  C00E  FFDF         	movff	AppendMoves@temp,indf2
  5446   0029EE  0012               	return		;funcret
  5447   0029F0                     __end_of_AppendMoves:
  5448                           	callstack 0
  5449                           
  5450 ;; *************** function _AntiYellow *****************
  5451 ;; Defined at:
  5452 ;;		line 115 in file "color_instructions.c"
  5453 ;; Parameters:    Size  Location     Type
  5454 ;;  mL              2   45[COMRAM] PTR struct DC_motor
  5455 ;;		 -> main@motorL(9), 
  5456 ;;  mR              2   47[COMRAM] PTR struct DC_motor
  5457 ;;		 -> main@motorR(9), 
  5458 ;; Auto vars:     Size  Location     Type
  5459 ;;  a               1   51[COMRAM] unsigned char 
  5460 ;; Return value:  Size  Location     Type
  5461 ;;                  1    wreg      void 
  5462 ;; Registers used:
  5463 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5464 ;; Tracked objects:
  5465 ;;		On entry : 0/0
  5466 ;;		On exit  : 0/0
  5467 ;;		Unchanged: 0/0
  5468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5469 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5470 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5471 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5472 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5473 ;;Total ram usage:        7 bytes
  5474 ;; Hardware stack levels used: 1
  5475 ;; Hardware stack levels required when called: 12
  5476 ;; This function calls:
  5477 ;;		_BlueInstructions
  5478 ;;		_RedInstructions
  5479 ;;		_fullSpeedAhead
  5480 ;;		_stop
  5481 ;; This function is called by:
  5482 ;;		_MoveBuggy
  5483 ;; This function uses a non-reentrant model
  5484 ;;
  5485                           
  5486                           	psect	text21
  5487   001D52                     __ptext21:
  5488                           	callstack 0
  5489   001D52                     _AntiYellow:
  5490                           	callstack 16
  5491   001D52                     
  5492                           ;color_instructions.c: 116:     unsigned char a=0;
  5493   001D52  0E00               	movlw	0
  5494   001D54  6E34               	movwf	AntiYellow@a^0,c
  5495   001D56                     
  5496                           ;color_instructions.c: 118:     RedInstructions(mL, mR);
  5497   001D56  C02E  F027         	movff	AntiYellow@mL,RedInstructions@mL
  5498   001D5A  C02F  F028         	movff	AntiYellow@mL+1,RedInstructions@mL+1
  5499   001D5E  C030  F029         	movff	AntiYellow@mR,RedInstructions@mR
  5500   001D62  C031  F02A         	movff	AntiYellow@mR+1,RedInstructions@mR+1
  5501   001D66  ECB6  F011         	call	_RedInstructions	;wreg free
  5502   001D6A                     
  5503                           ;color_instructions.c: 119:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5504   001D6A  0E05               	movlw	5
  5505   001D6C  6E33               	movwf	(??_AntiYellow+1)^0,c
  5506   001D6E  0E0F               	movlw	15
  5507   001D70  6E32               	movwf	??_AntiYellow^0,c
  5508   001D72  0EF1               	movlw	241
  5509   001D74                     u4737:
  5510   001D74  2EE8               	decfsz	wreg,f,c
  5511   001D76  D7FE               	bra	u4737
  5512   001D78  2E32               	decfsz	??_AntiYellow^0,f,c
  5513   001D7A  D7FC               	bra	u4737
  5514   001D7C  2E33               	decfsz	(??_AntiYellow+1)^0,f,c
  5515   001D7E  D7FA               	bra	u4737
  5516   001D80  F000               	nop	
  5517                           
  5518                           ;color_instructions.c: 121:     while (a<45){
  5519   001D82  EFCE  F00E         	goto	l3184
  5520   001D86                     l3180:
  5521                           
  5522                           ;color_instructions.c: 122:         fullSpeedAhead(mL, mR);
  5523   001D86  C02E  F01C         	movff	AntiYellow@mL,fullSpeedAhead@mL
  5524   001D8A  C02F  F01D         	movff	AntiYellow@mL+1,fullSpeedAhead@mL+1
  5525   001D8E  C030  F01E         	movff	AntiYellow@mR,fullSpeedAhead@mR
  5526   001D92  C031  F01F         	movff	AntiYellow@mR+1,fullSpeedAhead@mR+1
  5527   001D96  EC64  F00C         	call	_fullSpeedAhead	;wreg free
  5528   001D9A                     
  5529                           ;color_instructions.c: 123:         a++;
  5530   001D9A  2A34               	incf	AntiYellow@a^0,f,c
  5531   001D9C                     l3184:
  5532                           
  5533                           ;color_instructions.c: 121:     while (a<45){
  5534   001D9C  0E2C               	movlw	44
  5535   001D9E  6434               	cpfsgt	AntiYellow@a^0,c
  5536   001DA0  EFD4  F00E         	goto	u2501
  5537   001DA4  EFD6  F00E         	goto	u2500
  5538   001DA8                     u2501:
  5539   001DA8  EFC3  F00E         	goto	l3180
  5540   001DAC                     u2500:
  5541   001DAC  EFE3  F00E         	goto	l3190
  5542   001DB0                     l3186:
  5543                           
  5544                           ;color_instructions.c: 126:         stop(mL, mR);
  5545   001DB0  C02E  F01C         	movff	AntiYellow@mL,stop@mL
  5546   001DB4  C02F  F01D         	movff	AntiYellow@mL+1,stop@mL+1
  5547   001DB8  C030  F01E         	movff	AntiYellow@mR,stop@mR
  5548   001DBC  C031  F01F         	movff	AntiYellow@mR+1,stop@mR+1
  5549   001DC0  EC3F  F00E         	call	_stop	;wreg free
  5550   001DC4                     
  5551                           ;color_instructions.c: 127:         a--;
  5552   001DC4  0634               	decf	AntiYellow@a^0,f,c
  5553   001DC6                     l3190:
  5554                           
  5555                           ;color_instructions.c: 125:     while (a>0){
  5556   001DC6  5034               	movf	AntiYellow@a^0,w,c
  5557   001DC8  A4D8               	btfss	status,2,c
  5558   001DCA  EFE9  F00E         	goto	u2511
  5559   001DCE  EFEB  F00E         	goto	u2510
  5560   001DD2                     u2511:
  5561   001DD2  EFD8  F00E         	goto	l3186
  5562   001DD6                     u2510:
  5563   001DD6                     
  5564                           ;color_instructions.c: 129:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5565   001DD6  0E05               	movlw	5
  5566   001DD8  6E33               	movwf	(??_AntiYellow+1)^0,c
  5567   001DDA  0E0F               	movlw	15
  5568   001DDC  6E32               	movwf	??_AntiYellow^0,c
  5569   001DDE  0EF1               	movlw	241
  5570   001DE0                     u4747:
  5571   001DE0  2EE8               	decfsz	wreg,f,c
  5572   001DE2  D7FE               	bra	u4747
  5573   001DE4  2E32               	decfsz	??_AntiYellow^0,f,c
  5574   001DE6  D7FC               	bra	u4747
  5575   001DE8  2E33               	decfsz	(??_AntiYellow+1)^0,f,c
  5576   001DEA  D7FA               	bra	u4747
  5577   001DEC  F000               	nop	
  5578   001DEE                     
  5579                           ;color_instructions.c: 131:     BlueInstructions(mL, mR);
  5580   001DEE  C02E  F027         	movff	AntiYellow@mL,BlueInstructions@mL
  5581   001DF2  C02F  F028         	movff	AntiYellow@mL+1,BlueInstructions@mL+1
  5582   001DF6  C030  F029         	movff	AntiYellow@mR,BlueInstructions@mR
  5583   001DFA  C031  F02A         	movff	AntiYellow@mR+1,BlueInstructions@mR+1
  5584   001DFE  EC5B  F00F         	call	_BlueInstructions	;wreg free
  5585   001E02  0012               	return		;funcret
  5586   001E04                     __end_of_AntiYellow:
  5587                           	callstack 0
  5588                           
  5589 ;; *************** function _RedInstructions *****************
  5590 ;; Defined at:
  5591 ;;		line 10 in file "color_instructions.c"
  5592 ;; Parameters:    Size  Location     Type
  5593 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  5594 ;;		 -> main@motorL(9), 
  5595 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  5596 ;;		 -> main@motorR(9), 
  5597 ;; Auto vars:     Size  Location     Type
  5598 ;;  a               1   44[COMRAM] unsigned char 
  5599 ;; Return value:  Size  Location     Type
  5600 ;;                  1    wreg      void 
  5601 ;; Registers used:
  5602 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5603 ;; Tracked objects:
  5604 ;;		On entry : 0/0
  5605 ;;		On exit  : 0/0
  5606 ;;		Unchanged: 0/0
  5607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5608 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5609 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5610 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5611 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5612 ;;Total ram usage:        7 bytes
  5613 ;; Hardware stack levels used: 1
  5614 ;; Hardware stack levels required when called: 11
  5615 ;; This function calls:
  5616 ;;		_fullSpeedBackwards
  5617 ;;		_stop
  5618 ;;		_turnRight90
  5619 ;; This function is called by:
  5620 ;;		_AntiYellow
  5621 ;;		_MoveBuggy
  5622 ;; This function uses a non-reentrant model
  5623 ;;
  5624                           
  5625                           	psect	text22
  5626   00236C                     __ptext22:
  5627                           	callstack 0
  5628   00236C                     _RedInstructions:
  5629                           	callstack 17
  5630   00236C                     
  5631                           ;color_instructions.c: 12:     unsigned char a=0;
  5632   00236C  0E00               	movlw	0
  5633   00236E  6E2D               	movwf	RedInstructions@a^0,c
  5634                           
  5635                           ;color_instructions.c: 13:     while (a<16){
  5636   002370  EFC5  F011         	goto	l3008
  5637   002374                     l3004:
  5638                           
  5639                           ;color_instructions.c: 14:         fullSpeedBackwards(mL, mR);
  5640   002374  C027  F01C         	movff	RedInstructions@mL,fullSpeedBackwards@mL
  5641   002378  C028  F01D         	movff	RedInstructions@mL+1,fullSpeedBackwards@mL+1
  5642   00237C  C029  F01E         	movff	RedInstructions@mR,fullSpeedBackwards@mR
  5643   002380  C02A  F01F         	movff	RedInstructions@mR+1,fullSpeedBackwards@mR+1
  5644   002384  EC52  F00D         	call	_fullSpeedBackwards	;wreg free
  5645   002388                     
  5646                           ;color_instructions.c: 15:         a++;
  5647   002388  2A2D               	incf	RedInstructions@a^0,f,c
  5648   00238A                     l3008:
  5649                           
  5650                           ;color_instructions.c: 13:     while (a<16){
  5651   00238A  0E0F               	movlw	15
  5652   00238C  642D               	cpfsgt	RedInstructions@a^0,c
  5653   00238E  EFCB  F011         	goto	u2341
  5654   002392  EFCD  F011         	goto	u2340
  5655   002396                     u2341:
  5656   002396  EFBA  F011         	goto	l3004
  5657   00239A                     u2340:
  5658   00239A  EFDA  F011         	goto	l3014
  5659   00239E                     l3010:
  5660                           
  5661                           ;color_instructions.c: 18:         stop(mL, mR);
  5662   00239E  C027  F01C         	movff	RedInstructions@mL,stop@mL
  5663   0023A2  C028  F01D         	movff	RedInstructions@mL+1,stop@mL+1
  5664   0023A6  C029  F01E         	movff	RedInstructions@mR,stop@mR
  5665   0023AA  C02A  F01F         	movff	RedInstructions@mR+1,stop@mR+1
  5666   0023AE  EC3F  F00E         	call	_stop	;wreg free
  5667   0023B2                     
  5668                           ;color_instructions.c: 19:         a--;
  5669   0023B2  062D               	decf	RedInstructions@a^0,f,c
  5670   0023B4                     l3014:
  5671                           
  5672                           ;color_instructions.c: 17:     while (a>0){
  5673   0023B4  502D               	movf	RedInstructions@a^0,w,c
  5674   0023B6  A4D8               	btfss	status,2,c
  5675   0023B8  EFE0  F011         	goto	u2351
  5676   0023BC  EFE2  F011         	goto	u2350
  5677   0023C0                     u2351:
  5678   0023C0  EFCF  F011         	goto	l3010
  5679   0023C4                     u2350:
  5680   0023C4                     
  5681                           ;color_instructions.c: 21:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5682   0023C4  0E05               	movlw	5
  5683   0023C6  6E2C               	movwf	(??_RedInstructions+1)^0,c
  5684   0023C8  0E0F               	movlw	15
  5685   0023CA  6E2B               	movwf	??_RedInstructions^0,c
  5686   0023CC  0EF1               	movlw	241
  5687   0023CE                     u4757:
  5688   0023CE  2EE8               	decfsz	wreg,f,c
  5689   0023D0  D7FE               	bra	u4757
  5690   0023D2  2E2B               	decfsz	??_RedInstructions^0,f,c
  5691   0023D4  D7FC               	bra	u4757
  5692   0023D6  2E2C               	decfsz	(??_RedInstructions+1)^0,f,c
  5693   0023D8  D7FA               	bra	u4757
  5694   0023DA  F000               	nop	
  5695   0023DC                     
  5696                           ;color_instructions.c: 22:     turnRight90(mL, mR);
  5697   0023DC  C027  F022         	movff	RedInstructions@mL,turnRight90@mL
  5698   0023E0  C028  F023         	movff	RedInstructions@mL+1,turnRight90@mL+1
  5699   0023E4  C029  F024         	movff	RedInstructions@mR,turnRight90@mR
  5700   0023E8  C02A  F025         	movff	RedInstructions@mR+1,turnRight90@mR+1
  5701   0023EC  ECB4  F00F         	call	_turnRight90	;wreg free
  5702   0023F0  0012               	return		;funcret
  5703   0023F2                     __end_of_RedInstructions:
  5704                           	callstack 0
  5705                           
  5706 ;; *************** function _turnRight90 *****************
  5707 ;; Defined at:
  5708 ;;		line 221 in file "dc_motor.c"
  5709 ;; Parameters:    Size  Location     Type
  5710 ;;  mL              2   33[COMRAM] PTR struct DC_motor
  5711 ;;		 -> main@motorL(9), 
  5712 ;;  mR              2   35[COMRAM] PTR struct DC_motor
  5713 ;;		 -> main@motorR(9), 
  5714 ;; Auto vars:     Size  Location     Type
  5715 ;;  a               1   37[COMRAM] unsigned char 
  5716 ;; Return value:  Size  Location     Type
  5717 ;;                  1    wreg      void 
  5718 ;; Registers used:
  5719 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5720 ;; Tracked objects:
  5721 ;;		On entry : 0/0
  5722 ;;		On exit  : 0/0
  5723 ;;		Unchanged: 0/0
  5724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5725 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5726 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5728 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5729 ;;Total ram usage:        5 bytes
  5730 ;; Hardware stack levels used: 1
  5731 ;; Hardware stack levels required when called: 10
  5732 ;; This function calls:
  5733 ;;		_stop
  5734 ;;		_turnRight
  5735 ;; This function is called by:
  5736 ;;		_turnRight135
  5737 ;;		_RedInstructions
  5738 ;;		_YellowInstructions
  5739 ;; This function uses a non-reentrant model
  5740 ;;
  5741                           
  5742                           	psect	text23
  5743   001F68                     __ptext23:
  5744                           	callstack 0
  5745   001F68                     _turnRight90:
  5746                           	callstack 17
  5747   001F68                     
  5748                           ;dc_motor.c: 223:     unsigned char a=0;
  5749   001F68  0E00               	movlw	0
  5750   001F6A  6E26               	movwf	turnRight90@a^0,c
  5751                           
  5752                           ;dc_motor.c: 224:     while(a<15){
  5753   001F6C  EFC3  F00F         	goto	l2926
  5754   001F70                     l2922:
  5755                           
  5756                           ;dc_motor.c: 225:         turnRight(mL, mR);
  5757   001F70  C022  F01C         	movff	turnRight90@mL,turnRight@mL
  5758   001F74  C023  F01D         	movff	turnRight90@mL+1,turnRight@mL+1
  5759   001F78  C024  F01E         	movff	turnRight90@mR,turnRight@mR
  5760   001F7C  C025  F01F         	movff	turnRight90@mR+1,turnRight@mR+1
  5761   001F80  ECED  F00B         	call	_turnRight	;wreg free
  5762   001F84                     
  5763                           ;dc_motor.c: 226:         a++;
  5764   001F84  2A26               	incf	turnRight90@a^0,f,c
  5765   001F86                     l2926:
  5766                           
  5767                           ;dc_motor.c: 224:     while(a<15){
  5768   001F86  0E0E               	movlw	14
  5769   001F88  6426               	cpfsgt	turnRight90@a^0,c
  5770   001F8A  EFC9  F00F         	goto	u2221
  5771   001F8E  EFCB  F00F         	goto	u2220
  5772   001F92                     u2221:
  5773   001F92  EFB8  F00F         	goto	l2922
  5774   001F96                     u2220:
  5775   001F96  EFD8  F00F         	goto	l2932
  5776   001F9A                     l2928:
  5777                           
  5778                           ;dc_motor.c: 229:         stop(mL, mR);
  5779   001F9A  C022  F01C         	movff	turnRight90@mL,stop@mL
  5780   001F9E  C023  F01D         	movff	turnRight90@mL+1,stop@mL+1
  5781   001FA2  C024  F01E         	movff	turnRight90@mR,stop@mR
  5782   001FA6  C025  F01F         	movff	turnRight90@mR+1,stop@mR+1
  5783   001FAA  EC3F  F00E         	call	_stop	;wreg free
  5784   001FAE                     
  5785                           ;dc_motor.c: 230:         a--;
  5786   001FAE  0626               	decf	turnRight90@a^0,f,c
  5787   001FB0                     l2932:
  5788                           
  5789                           ;dc_motor.c: 228:     while(a>0){
  5790   001FB0  5026               	movf	turnRight90@a^0,w,c
  5791   001FB2  A4D8               	btfss	status,2,c
  5792   001FB4  EFDE  F00F         	goto	u2231
  5793   001FB8  EFE0  F00F         	goto	u2230
  5794   001FBC                     u2231:
  5795   001FBC  EFCD  F00F         	goto	l2928
  5796   001FC0                     u2230:
  5797   001FC0  EFED  F00F         	goto	l2938
  5798   001FC4                     l2934:
  5799                           
  5800                           ;dc_motor.c: 233:         turnRight(mL, mR);
  5801   001FC4  C022  F01C         	movff	turnRight90@mL,turnRight@mL
  5802   001FC8  C023  F01D         	movff	turnRight90@mL+1,turnRight@mL+1
  5803   001FCC  C024  F01E         	movff	turnRight90@mR,turnRight@mR
  5804   001FD0  C025  F01F         	movff	turnRight90@mR+1,turnRight@mR+1
  5805   001FD4  ECED  F00B         	call	_turnRight	;wreg free
  5806   001FD8                     
  5807                           ;dc_motor.c: 234:         a++;
  5808   001FD8  2A26               	incf	turnRight90@a^0,f,c
  5809   001FDA                     l2938:
  5810                           
  5811                           ;dc_motor.c: 232:     while(a<15){
  5812   001FDA  0E0E               	movlw	14
  5813   001FDC  6426               	cpfsgt	turnRight90@a^0,c
  5814   001FDE  EFF3  F00F         	goto	u2241
  5815   001FE2  EFF5  F00F         	goto	u2240
  5816   001FE6                     u2241:
  5817   001FE6  EFE2  F00F         	goto	l2934
  5818   001FEA                     u2240:
  5819   001FEA  EF02  F010         	goto	l2944
  5820   001FEE                     l2940:
  5821                           
  5822                           ;dc_motor.c: 237:         stop(mL, mR);
  5823   001FEE  C022  F01C         	movff	turnRight90@mL,stop@mL
  5824   001FF2  C023  F01D         	movff	turnRight90@mL+1,stop@mL+1
  5825   001FF6  C024  F01E         	movff	turnRight90@mR,stop@mR
  5826   001FFA  C025  F01F         	movff	turnRight90@mR+1,stop@mR+1
  5827   001FFE  EC3F  F00E         	call	_stop	;wreg free
  5828   002002                     
  5829                           ;dc_motor.c: 238:         a--;
  5830   002002  0626               	decf	turnRight90@a^0,f,c
  5831   002004                     l2944:
  5832                           
  5833                           ;dc_motor.c: 236:     while(a>0){
  5834   002004  5026               	movf	turnRight90@a^0,w,c
  5835   002006  A4D8               	btfss	status,2,c
  5836   002008  EF08  F010         	goto	u2251
  5837   00200C  EF0A  F010         	goto	u2250
  5838   002010                     u2251:
  5839   002010  EFF7  F00F         	goto	l2940
  5840   002014                     u2250:
  5841   002014  0012               	return		;funcret
  5842   002016                     __end_of_turnRight90:
  5843                           	callstack 0
  5844                           
  5845 ;; *************** function _turnRight *****************
  5846 ;; Defined at:
  5847 ;;		line 129 in file "dc_motor.c"
  5848 ;; Parameters:    Size  Location     Type
  5849 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  5850 ;;		 -> main@motorL(9), 
  5851 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  5852 ;;		 -> main@motorR(9), 
  5853 ;; Auto vars:     Size  Location     Type
  5854 ;;		None
  5855 ;; Return value:  Size  Location     Type
  5856 ;;                  1    wreg      void 
  5857 ;; Registers used:
  5858 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5859 ;; Tracked objects:
  5860 ;;		On entry : 0/0
  5861 ;;		On exit  : 0/0
  5862 ;;		Unchanged: 0/0
  5863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5864 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5866 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5867 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5868 ;;Total ram usage:        6 bytes
  5869 ;; Hardware stack levels used: 1
  5870 ;; Hardware stack levels required when called: 9
  5871 ;; This function calls:
  5872 ;;		_setMotorPWM
  5873 ;; This function is called by:
  5874 ;;		_turnRight90
  5875 ;;		_turnRight135
  5876 ;; This function uses a non-reentrant model
  5877 ;;
  5878                           
  5879                           	psect	text24
  5880   0017DA                     __ptext24:
  5881                           	callstack 0
  5882   0017DA                     _turnRight:
  5883                           	callstack 17
  5884   0017DA                     
  5885                           ;dc_motor.c: 129: void turnRight(DC_motor *mL, DC_motor *mR);dc_motor.c: 130: {;dc_motor
      +                          .c: 132:     mL->direction = 1;
  5886   0017DA  EE20 F001          	lfsr	2,1
  5887   0017DE  501C               	movf	turnRight@mL^0,w,c
  5888   0017E0  26D9               	addwf	fsr2l,f,c
  5889   0017E2  501D               	movf	(turnRight@mL+1)^0,w,c
  5890   0017E4  22DA               	addwfc	fsr2h,f,c
  5891   0017E6  0E01               	movlw	1
  5892   0017E8  6EDF               	movwf	indf2,c
  5893                           
  5894                           ;dc_motor.c: 133:     mL->brakemode = 0;
  5895   0017EA  EE20 F002          	lfsr	2,2
  5896   0017EE  501C               	movf	turnRight@mL^0,w,c
  5897   0017F0  26D9               	addwf	fsr2l,f,c
  5898   0017F2  501D               	movf	(turnRight@mL+1)^0,w,c
  5899   0017F4  22DA               	addwfc	fsr2h,f,c
  5900   0017F6  0E00               	movlw	0
  5901   0017F8  6EDF               	movwf	indf2,c
  5902                           
  5903                           ;dc_motor.c: 135:     mR->direction = 0;
  5904   0017FA  EE20 F001          	lfsr	2,1
  5905   0017FE  501E               	movf	turnRight@mR^0,w,c
  5906   001800  26D9               	addwf	fsr2l,f,c
  5907   001802  501F               	movf	(turnRight@mR+1)^0,w,c
  5908   001804  22DA               	addwfc	fsr2h,f,c
  5909   001806  0E00               	movlw	0
  5910   001808  6EDF               	movwf	indf2,c
  5911                           
  5912                           ;dc_motor.c: 136:     mR->brakemode = 0;
  5913   00180A  EE20 F002          	lfsr	2,2
  5914   00180E  501E               	movf	turnRight@mR^0,w,c
  5915   001810  26D9               	addwf	fsr2l,f,c
  5916   001812  501F               	movf	(turnRight@mR+1)^0,w,c
  5917   001814  22DA               	addwfc	fsr2h,f,c
  5918   001816  0E00               	movlw	0
  5919   001818  6EDF               	movwf	indf2,c
  5920                           
  5921                           ;dc_motor.c: 139:     if(mL->power>62){mL->power=62;}
  5922   00181A  C01C  FFD9         	movff	turnRight@mL,fsr2l
  5923   00181E  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  5924   001822  50DF               	movf	indf2,w,c
  5925   001824  0A80               	xorlw	128
  5926   001826  0F41               	addlw	-191
  5927   001828  A0D8               	btfss	status,0,c
  5928   00182A  EF19  F00C         	goto	u2141
  5929   00182E  EF1B  F00C         	goto	u2140
  5930   001832                     u2141:
  5931   001832  EF21  F00C         	goto	l2850
  5932   001836                     u2140:
  5933   001836  C01C  FFD9         	movff	turnRight@mL,fsr2l
  5934   00183A  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  5935   00183E  0E3E               	movlw	62
  5936   001840  6EDF               	movwf	indf2,c
  5937   001842                     l2850:
  5938                           
  5939                           ;dc_motor.c: 140:     if(mR->power>62){mR->power=62;}
  5940   001842  C01E  FFD9         	movff	turnRight@mR,fsr2l
  5941   001846  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  5942   00184A  50DF               	movf	indf2,w,c
  5943   00184C  0A80               	xorlw	128
  5944   00184E  0F41               	addlw	-191
  5945   001850  A0D8               	btfss	status,0,c
  5946   001852  EF2D  F00C         	goto	u2151
  5947   001856  EF2F  F00C         	goto	u2150
  5948   00185A                     u2151:
  5949   00185A  EF35  F00C         	goto	l2854
  5950   00185E                     u2150:
  5951   00185E  C01E  FFD9         	movff	turnRight@mR,fsr2l
  5952   001862  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  5953   001866  0E3E               	movlw	62
  5954   001868  6EDF               	movwf	indf2,c
  5955   00186A                     l2854:
  5956                           
  5957                           ;dc_motor.c: 142:     mL->power = mL->power + 10 ;
  5958   00186A  C01C  FFD9         	movff	turnRight@mL,fsr2l
  5959   00186E  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  5960   001872  50DF               	movf	indf2,w,c
  5961   001874  0F0A               	addlw	10
  5962   001876  C01C  FFD9         	movff	turnRight@mL,fsr2l
  5963   00187A  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  5964   00187E  6EDF               	movwf	indf2,c
  5965   001880                     
  5966                           ;dc_motor.c: 143:     mR->power = mR->power + 10;
  5967   001880  C01E  FFD9         	movff	turnRight@mR,fsr2l
  5968   001884  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  5969   001888  50DF               	movf	indf2,w,c
  5970   00188A  0F0A               	addlw	10
  5971   00188C  C01E  FFD9         	movff	turnRight@mR,fsr2l
  5972   001890  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  5973   001894  6EDF               	movwf	indf2,c
  5974   001896                     
  5975                           ;dc_motor.c: 145:     setMotorPWM(mL);
  5976   001896  C01C  F016         	movff	turnRight@mL,setMotorPWM@m
  5977   00189A  C01D  F017         	movff	turnRight@mL+1,setMotorPWM@m+1
  5978   00189E  ECB3  F00A         	call	_setMotorPWM	;wreg free
  5979   0018A2                     
  5980                           ;dc_motor.c: 146:     setMotorPWM(mR);
  5981   0018A2  C01E  F016         	movff	turnRight@mR,setMotorPWM@m
  5982   0018A6  C01F  F017         	movff	turnRight@mR+1,setMotorPWM@m+1
  5983   0018AA  ECB3  F00A         	call	_setMotorPWM	;wreg free
  5984   0018AE                     
  5985                           ;dc_motor.c: 147:     _delay((unsigned long)((20)*(64000000/4000.0)));
  5986   0018AE  0E02               	movlw	2
  5987   0018B0  6E21               	movwf	(??_turnRight+1)^0,c
  5988   0018B2  0EA0               	movlw	160
  5989   0018B4  6E20               	movwf	??_turnRight^0,c
  5990   0018B6  0E92               	movlw	146
  5991   0018B8                     u4767:
  5992   0018B8  2EE8               	decfsz	wreg,f,c
  5993   0018BA  D7FE               	bra	u4767
  5994   0018BC  2E20               	decfsz	??_turnRight^0,f,c
  5995   0018BE  D7FC               	bra	u4767
  5996   0018C0  2E21               	decfsz	(??_turnRight+1)^0,f,c
  5997   0018C2  D7FA               	bra	u4767
  5998   0018C4  D000               	nop2	
  5999   0018C6  0012               	return		;funcret
  6000   0018C8                     __end_of_turnRight:
  6001                           	callstack 0
  6002                           
  6003 ;; *************** function _AntiPink *****************
  6004 ;; Defined at:
  6005 ;;		line 134 in file "color_instructions.c"
  6006 ;; Parameters:    Size  Location     Type
  6007 ;;  mL              2   45[COMRAM] PTR struct DC_motor
  6008 ;;		 -> main@motorL(9), 
  6009 ;;  mR              2   47[COMRAM] PTR struct DC_motor
  6010 ;;		 -> main@motorR(9), 
  6011 ;; Auto vars:     Size  Location     Type
  6012 ;;  a               1   51[COMRAM] unsigned char 
  6013 ;; Return value:  Size  Location     Type
  6014 ;;                  1    wreg      void 
  6015 ;; Registers used:
  6016 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6017 ;; Tracked objects:
  6018 ;;		On entry : 0/0
  6019 ;;		On exit  : 0/0
  6020 ;;		Unchanged: 0/0
  6021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6022 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6023 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6024 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6025 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6026 ;;Total ram usage:        7 bytes
  6027 ;; Hardware stack levels used: 1
  6028 ;; Hardware stack levels required when called: 12
  6029 ;; This function calls:
  6030 ;;		_BlueInstructions
  6031 ;;		_GreenInstructions
  6032 ;;		_fullSpeedAhead
  6033 ;;		_stop
  6034 ;; This function is called by:
  6035 ;;		_MoveBuggy
  6036 ;; This function uses a non-reentrant model
  6037 ;;
  6038                           
  6039                           	psect	text25
  6040   001E04                     __ptext25:
  6041                           	callstack 0
  6042   001E04                     _AntiPink:
  6043                           	callstack 16
  6044   001E04                     
  6045                           ;color_instructions.c: 135:     unsigned char a=0;
  6046   001E04  0E00               	movlw	0
  6047   001E06  6E34               	movwf	AntiPink@a^0,c
  6048   001E08                     
  6049                           ;color_instructions.c: 137:     GreenInstructions(mL, mR);
  6050   001E08  C02E  F027         	movff	AntiPink@mL,GreenInstructions@mL
  6051   001E0C  C02F  F028         	movff	AntiPink@mL+1,GreenInstructions@mL+1
  6052   001E10  C030  F029         	movff	AntiPink@mR,GreenInstructions@mR
  6053   001E14  C031  F02A         	movff	AntiPink@mR+1,GreenInstructions@mR+1
  6054   001E18  ECF9  F011         	call	_GreenInstructions	;wreg free
  6055   001E1C                     
  6056                           ;color_instructions.c: 138:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6057   001E1C  0E05               	movlw	5
  6058   001E1E  6E33               	movwf	(??_AntiPink+1)^0,c
  6059   001E20  0E0F               	movlw	15
  6060   001E22  6E32               	movwf	??_AntiPink^0,c
  6061   001E24  0EF1               	movlw	241
  6062   001E26                     u4777:
  6063   001E26  2EE8               	decfsz	wreg,f,c
  6064   001E28  D7FE               	bra	u4777
  6065   001E2A  2E32               	decfsz	??_AntiPink^0,f,c
  6066   001E2C  D7FC               	bra	u4777
  6067   001E2E  2E33               	decfsz	(??_AntiPink+1)^0,f,c
  6068   001E30  D7FA               	bra	u4777
  6069   001E32  F000               	nop	
  6070                           
  6071                           ;color_instructions.c: 140:     while (a<45){
  6072   001E34  EF27  F00F         	goto	l3206
  6073   001E38                     l3202:
  6074                           
  6075                           ;color_instructions.c: 141:         fullSpeedAhead(mL, mR);
  6076   001E38  C02E  F01C         	movff	AntiPink@mL,fullSpeedAhead@mL
  6077   001E3C  C02F  F01D         	movff	AntiPink@mL+1,fullSpeedAhead@mL+1
  6078   001E40  C030  F01E         	movff	AntiPink@mR,fullSpeedAhead@mR
  6079   001E44  C031  F01F         	movff	AntiPink@mR+1,fullSpeedAhead@mR+1
  6080   001E48  EC64  F00C         	call	_fullSpeedAhead	;wreg free
  6081   001E4C                     
  6082                           ;color_instructions.c: 142:         a++;
  6083   001E4C  2A34               	incf	AntiPink@a^0,f,c
  6084   001E4E                     l3206:
  6085                           
  6086                           ;color_instructions.c: 140:     while (a<45){
  6087   001E4E  0E2C               	movlw	44
  6088   001E50  6434               	cpfsgt	AntiPink@a^0,c
  6089   001E52  EF2D  F00F         	goto	u2521
  6090   001E56  EF2F  F00F         	goto	u2520
  6091   001E5A                     u2521:
  6092   001E5A  EF1C  F00F         	goto	l3202
  6093   001E5E                     u2520:
  6094   001E5E  EF3C  F00F         	goto	l3212
  6095   001E62                     l3208:
  6096                           
  6097                           ;color_instructions.c: 145:         stop(mL, mR);
  6098   001E62  C02E  F01C         	movff	AntiPink@mL,stop@mL
  6099   001E66  C02F  F01D         	movff	AntiPink@mL+1,stop@mL+1
  6100   001E6A  C030  F01E         	movff	AntiPink@mR,stop@mR
  6101   001E6E  C031  F01F         	movff	AntiPink@mR+1,stop@mR+1
  6102   001E72  EC3F  F00E         	call	_stop	;wreg free
  6103   001E76                     
  6104                           ;color_instructions.c: 146:         a--;
  6105   001E76  0634               	decf	AntiPink@a^0,f,c
  6106   001E78                     l3212:
  6107                           
  6108                           ;color_instructions.c: 144:     while (a>0){
  6109   001E78  5034               	movf	AntiPink@a^0,w,c
  6110   001E7A  A4D8               	btfss	status,2,c
  6111   001E7C  EF42  F00F         	goto	u2531
  6112   001E80  EF44  F00F         	goto	u2530
  6113   001E84                     u2531:
  6114   001E84  EF31  F00F         	goto	l3208
  6115   001E88                     u2530:
  6116   001E88                     
  6117                           ;color_instructions.c: 148:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6118   001E88  0E05               	movlw	5
  6119   001E8A  6E33               	movwf	(??_AntiPink+1)^0,c
  6120   001E8C  0E0F               	movlw	15
  6121   001E8E  6E32               	movwf	??_AntiPink^0,c
  6122   001E90  0EF1               	movlw	241
  6123   001E92                     u4787:
  6124   001E92  2EE8               	decfsz	wreg,f,c
  6125   001E94  D7FE               	bra	u4787
  6126   001E96  2E32               	decfsz	??_AntiPink^0,f,c
  6127   001E98  D7FC               	bra	u4787
  6128   001E9A  2E33               	decfsz	(??_AntiPink+1)^0,f,c
  6129   001E9C  D7FA               	bra	u4787
  6130   001E9E  F000               	nop	
  6131   001EA0                     
  6132                           ;color_instructions.c: 150:     BlueInstructions(mL, mR);
  6133   001EA0  C02E  F027         	movff	AntiPink@mL,BlueInstructions@mL
  6134   001EA4  C02F  F028         	movff	AntiPink@mL+1,BlueInstructions@mL+1
  6135   001EA8  C030  F029         	movff	AntiPink@mR,BlueInstructions@mR
  6136   001EAC  C031  F02A         	movff	AntiPink@mR+1,BlueInstructions@mR+1
  6137   001EB0  EC5B  F00F         	call	_BlueInstructions	;wreg free
  6138   001EB4  0012               	return		;funcret
  6139   001EB6                     __end_of_AntiPink:
  6140                           	callstack 0
  6141                           
  6142 ;; *************** function _fullSpeedAhead *****************
  6143 ;; Defined at:
  6144 ;;		line 151 in file "dc_motor.c"
  6145 ;; Parameters:    Size  Location     Type
  6146 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6147 ;;		 -> main@motorL(9), 
  6148 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6149 ;;		 -> main@motorR(9), 
  6150 ;; Auto vars:     Size  Location     Type
  6151 ;;		None
  6152 ;; Return value:  Size  Location     Type
  6153 ;;                  1    wreg      void 
  6154 ;; Registers used:
  6155 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6156 ;; Tracked objects:
  6157 ;;		On entry : 0/0
  6158 ;;		On exit  : 0/0
  6159 ;;		Unchanged: 0/0
  6160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6161 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6163 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6164 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6165 ;;Total ram usage:        6 bytes
  6166 ;; Hardware stack levels used: 1
  6167 ;; Hardware stack levels required when called: 9
  6168 ;; This function calls:
  6169 ;;		_setMotorPWM
  6170 ;; This function is called by:
  6171 ;;		_AntiYellow
  6172 ;;		_AntiPink
  6173 ;;		_WhiteInstructions
  6174 ;;		_main
  6175 ;; This function uses a non-reentrant model
  6176 ;;
  6177                           
  6178                           	psect	text26
  6179   0018C8                     __ptext26:
  6180                           	callstack 0
  6181   0018C8                     _fullSpeedAhead:
  6182                           	callstack 21
  6183   0018C8                     
  6184                           ;dc_motor.c: 151: void fullSpeedAhead(DC_motor *mL, DC_motor *mR);dc_motor.c: 152: {;dc_
      +                          motor.c: 154:     mL->direction = 1;
  6185   0018C8  EE20 F001          	lfsr	2,1
  6186   0018CC  501C               	movf	fullSpeedAhead@mL^0,w,c
  6187   0018CE  26D9               	addwf	fsr2l,f,c
  6188   0018D0  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  6189   0018D2  22DA               	addwfc	fsr2h,f,c
  6190   0018D4  0E01               	movlw	1
  6191   0018D6  6EDF               	movwf	indf2,c
  6192                           
  6193                           ;dc_motor.c: 155:     mL->brakemode = 0;
  6194   0018D8  EE20 F002          	lfsr	2,2
  6195   0018DC  501C               	movf	fullSpeedAhead@mL^0,w,c
  6196   0018DE  26D9               	addwf	fsr2l,f,c
  6197   0018E0  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  6198   0018E2  22DA               	addwfc	fsr2h,f,c
  6199   0018E4  0E00               	movlw	0
  6200   0018E6  6EDF               	movwf	indf2,c
  6201                           
  6202                           ;dc_motor.c: 157:     mR->direction = 1;
  6203   0018E8  EE20 F001          	lfsr	2,1
  6204   0018EC  501E               	movf	fullSpeedAhead@mR^0,w,c
  6205   0018EE  26D9               	addwf	fsr2l,f,c
  6206   0018F0  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  6207   0018F2  22DA               	addwfc	fsr2h,f,c
  6208   0018F4  0E01               	movlw	1
  6209   0018F6  6EDF               	movwf	indf2,c
  6210                           
  6211                           ;dc_motor.c: 158:     mR->brakemode = 0;
  6212   0018F8  EE20 F002          	lfsr	2,2
  6213   0018FC  501E               	movf	fullSpeedAhead@mR^0,w,c
  6214   0018FE  26D9               	addwf	fsr2l,f,c
  6215   001900  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  6216   001902  22DA               	addwfc	fsr2h,f,c
  6217   001904  0E00               	movlw	0
  6218   001906  6EDF               	movwf	indf2,c
  6219                           
  6220                           ;dc_motor.c: 162:     if(mL->power>40){mL->power=40;}
  6221   001908  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  6222   00190C  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  6223   001910  50DF               	movf	indf2,w,c
  6224   001912  0A80               	xorlw	128
  6225   001914  0F57               	addlw	-169
  6226   001916  A0D8               	btfss	status,0,c
  6227   001918  EF90  F00C         	goto	u2281
  6228   00191C  EF92  F00C         	goto	u2280
  6229   001920                     u2281:
  6230   001920  EF98  F00C         	goto	l2956
  6231   001924                     u2280:
  6232   001924  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  6233   001928  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  6234   00192C  0E28               	movlw	40
  6235   00192E  6EDF               	movwf	indf2,c
  6236   001930                     l2956:
  6237                           
  6238                           ;dc_motor.c: 163:     if(mR->power>43){mR->power=43;}
  6239   001930  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  6240   001934  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  6241   001938  50DF               	movf	indf2,w,c
  6242   00193A  0A80               	xorlw	128
  6243   00193C  0F54               	addlw	-172
  6244   00193E  A0D8               	btfss	status,0,c
  6245   001940  EFA4  F00C         	goto	u2291
  6246   001944  EFA6  F00C         	goto	u2290
  6247   001948                     u2291:
  6248   001948  EFAC  F00C         	goto	l2960
  6249   00194C                     u2290:
  6250   00194C  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  6251   001950  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  6252   001954  0E2B               	movlw	43
  6253   001956  6EDF               	movwf	indf2,c
  6254   001958                     l2960:
  6255                           
  6256                           ;dc_motor.c: 165:     mL->power = mL->power + 5 ;
  6257   001958  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  6258   00195C  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  6259   001960  50DF               	movf	indf2,w,c
  6260   001962  0F05               	addlw	5
  6261   001964  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  6262   001968  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  6263   00196C  6EDF               	movwf	indf2,c
  6264   00196E                     
  6265                           ;dc_motor.c: 166:     mR->power = mR->power + 7;
  6266   00196E  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  6267   001972  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  6268   001976  50DF               	movf	indf2,w,c
  6269   001978  0F07               	addlw	7
  6270   00197A  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  6271   00197E  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  6272   001982  6EDF               	movwf	indf2,c
  6273   001984                     
  6274                           ;dc_motor.c: 168:     setMotorPWM(mL);
  6275   001984  C01C  F016         	movff	fullSpeedAhead@mL,setMotorPWM@m
  6276   001988  C01D  F017         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  6277   00198C  ECB3  F00A         	call	_setMotorPWM	;wreg free
  6278   001990                     
  6279                           ;dc_motor.c: 169:     setMotorPWM(mR);
  6280   001990  C01E  F016         	movff	fullSpeedAhead@mR,setMotorPWM@m
  6281   001994  C01F  F017         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  6282   001998  ECB3  F00A         	call	_setMotorPWM	;wreg free
  6283   00199C                     
  6284                           ;dc_motor.c: 170:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6285   00199C  0E05               	movlw	5
  6286   00199E  6E21               	movwf	(??_fullSpeedAhead+1)^0,c
  6287   0019A0  0E0F               	movlw	15
  6288   0019A2  6E20               	movwf	??_fullSpeedAhead^0,c
  6289   0019A4  0EF1               	movlw	241
  6290   0019A6                     u4797:
  6291   0019A6  2EE8               	decfsz	wreg,f,c
  6292   0019A8  D7FE               	bra	u4797
  6293   0019AA  2E20               	decfsz	??_fullSpeedAhead^0,f,c
  6294   0019AC  D7FC               	bra	u4797
  6295   0019AE  2E21               	decfsz	(??_fullSpeedAhead+1)^0,f,c
  6296   0019B0  D7FA               	bra	u4797
  6297   0019B2  F000               	nop	
  6298   0019B4  0012               	return		;funcret
  6299   0019B6                     __end_of_fullSpeedAhead:
  6300                           	callstack 0
  6301                           
  6302 ;; *************** function _GreenInstructions *****************
  6303 ;; Defined at:
  6304 ;;		line 25 in file "color_instructions.c"
  6305 ;; Parameters:    Size  Location     Type
  6306 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  6307 ;;		 -> main@motorL(9), 
  6308 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  6309 ;;		 -> main@motorR(9), 
  6310 ;; Auto vars:     Size  Location     Type
  6311 ;;  a               1   44[COMRAM] unsigned char 
  6312 ;; Return value:  Size  Location     Type
  6313 ;;                  1    wreg      void 
  6314 ;; Registers used:
  6315 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6316 ;; Tracked objects:
  6317 ;;		On entry : 0/0
  6318 ;;		On exit  : 0/0
  6319 ;;		Unchanged: 0/0
  6320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6321 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6322 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6323 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6324 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6325 ;;Total ram usage:        7 bytes
  6326 ;; Hardware stack levels used: 1
  6327 ;; Hardware stack levels required when called: 11
  6328 ;; This function calls:
  6329 ;;		_fullSpeedBackwards
  6330 ;;		_stop
  6331 ;;		_turnLeft90
  6332 ;; This function is called by:
  6333 ;;		_AntiPink
  6334 ;;		_MoveBuggy
  6335 ;; This function uses a non-reentrant model
  6336 ;;
  6337                           
  6338                           	psect	text27
  6339   0023F2                     __ptext27:
  6340                           	callstack 0
  6341   0023F2                     _GreenInstructions:
  6342                           	callstack 17
  6343   0023F2                     
  6344                           ;color_instructions.c: 26:     unsigned char a=0;
  6345   0023F2  0E00               	movlw	0
  6346   0023F4  6E2D               	movwf	GreenInstructions@a^0,c
  6347                           
  6348                           ;color_instructions.c: 27:     while (a<16){
  6349   0023F6  EF08  F012         	goto	l3026
  6350   0023FA                     l3022:
  6351                           
  6352                           ;color_instructions.c: 28:         fullSpeedBackwards(mL, mR);
  6353   0023FA  C027  F01C         	movff	GreenInstructions@mL,fullSpeedBackwards@mL
  6354   0023FE  C028  F01D         	movff	GreenInstructions@mL+1,fullSpeedBackwards@mL+1
  6355   002402  C029  F01E         	movff	GreenInstructions@mR,fullSpeedBackwards@mR
  6356   002406  C02A  F01F         	movff	GreenInstructions@mR+1,fullSpeedBackwards@mR+1
  6357   00240A  EC52  F00D         	call	_fullSpeedBackwards	;wreg free
  6358   00240E                     
  6359                           ;color_instructions.c: 29:         a++;
  6360   00240E  2A2D               	incf	GreenInstructions@a^0,f,c
  6361   002410                     l3026:
  6362                           
  6363                           ;color_instructions.c: 27:     while (a<16){
  6364   002410  0E0F               	movlw	15
  6365   002412  642D               	cpfsgt	GreenInstructions@a^0,c
  6366   002414  EF0E  F012         	goto	u2361
  6367   002418  EF10  F012         	goto	u2360
  6368   00241C                     u2361:
  6369   00241C  EFFD  F011         	goto	l3022
  6370   002420                     u2360:
  6371   002420  EF1D  F012         	goto	l3032
  6372   002424                     l3028:
  6373                           
  6374                           ;color_instructions.c: 32:         stop(mL, mR);
  6375   002424  C027  F01C         	movff	GreenInstructions@mL,stop@mL
  6376   002428  C028  F01D         	movff	GreenInstructions@mL+1,stop@mL+1
  6377   00242C  C029  F01E         	movff	GreenInstructions@mR,stop@mR
  6378   002430  C02A  F01F         	movff	GreenInstructions@mR+1,stop@mR+1
  6379   002434  EC3F  F00E         	call	_stop	;wreg free
  6380   002438                     
  6381                           ;color_instructions.c: 33:         a--;
  6382   002438  062D               	decf	GreenInstructions@a^0,f,c
  6383   00243A                     l3032:
  6384                           
  6385                           ;color_instructions.c: 31:     while (a>0){
  6386   00243A  502D               	movf	GreenInstructions@a^0,w,c
  6387   00243C  A4D8               	btfss	status,2,c
  6388   00243E  EF23  F012         	goto	u2371
  6389   002442  EF25  F012         	goto	u2370
  6390   002446                     u2371:
  6391   002446  EF12  F012         	goto	l3028
  6392   00244A                     u2370:
  6393   00244A                     
  6394                           ;color_instructions.c: 35:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6395   00244A  0E05               	movlw	5
  6396   00244C  6E2C               	movwf	(??_GreenInstructions+1)^0,c
  6397   00244E  0E0F               	movlw	15
  6398   002450  6E2B               	movwf	??_GreenInstructions^0,c
  6399   002452  0EF1               	movlw	241
  6400   002454                     u4807:
  6401   002454  2EE8               	decfsz	wreg,f,c
  6402   002456  D7FE               	bra	u4807
  6403   002458  2E2B               	decfsz	??_GreenInstructions^0,f,c
  6404   00245A  D7FC               	bra	u4807
  6405   00245C  2E2C               	decfsz	(??_GreenInstructions+1)^0,f,c
  6406   00245E  D7FA               	bra	u4807
  6407   002460  F000               	nop	
  6408   002462                     
  6409                           ;color_instructions.c: 36:     turnLeft90(mL, mR);
  6410   002462  C027  F022         	movff	GreenInstructions@mL,turnLeft90@mL
  6411   002466  C028  F023         	movff	GreenInstructions@mL+1,turnLeft90@mL+1
  6412   00246A  C029  F024         	movff	GreenInstructions@mR,turnLeft90@mR
  6413   00246E  C02A  F025         	movff	GreenInstructions@mR+1,turnLeft90@mR+1
  6414   002472  EC0B  F010         	call	_turnLeft90	;wreg free
  6415   002476  0012               	return		;funcret
  6416   002478                     __end_of_GreenInstructions:
  6417                           	callstack 0
  6418                           
  6419 ;; *************** function _BlueInstructions *****************
  6420 ;; Defined at:
  6421 ;;		line 39 in file "color_instructions.c"
  6422 ;; Parameters:    Size  Location     Type
  6423 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  6424 ;;		 -> main@motorL(9), 
  6425 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  6426 ;;		 -> main@motorR(9), 
  6427 ;; Auto vars:     Size  Location     Type
  6428 ;;  a               1   44[COMRAM] unsigned char 
  6429 ;; Return value:  Size  Location     Type
  6430 ;;                  1    wreg      void 
  6431 ;; Registers used:
  6432 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6433 ;; Tracked objects:
  6434 ;;		On entry : 0/0
  6435 ;;		On exit  : 0/0
  6436 ;;		Unchanged: 0/0
  6437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6438 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6439 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6440 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6441 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6442 ;;Total ram usage:        7 bytes
  6443 ;; Hardware stack levels used: 1
  6444 ;; Hardware stack levels required when called: 11
  6445 ;; This function calls:
  6446 ;;		_fullSpeedBackwards
  6447 ;;		_stop
  6448 ;;		_turnLeft90
  6449 ;; This function is called by:
  6450 ;;		_AntiYellow
  6451 ;;		_AntiPink
  6452 ;;		_WhiteInstructions
  6453 ;;		_MoveBuggy
  6454 ;; This function uses a non-reentrant model
  6455 ;;
  6456                           
  6457                           	psect	text28
  6458   001EB6                     __ptext28:
  6459                           	callstack 0
  6460   001EB6                     _BlueInstructions:
  6461                           	callstack 17
  6462   001EB6                     
  6463                           ;color_instructions.c: 40:     unsigned char a=0;
  6464   001EB6  0E00               	movlw	0
  6465   001EB8  6E2D               	movwf	BlueInstructions@a^0,c
  6466                           
  6467                           ;color_instructions.c: 41:     while (a<16){
  6468   001EBA  EF6A  F00F         	goto	l3044
  6469   001EBE                     l3040:
  6470                           
  6471                           ;color_instructions.c: 42:         fullSpeedBackwards(mL, mR);
  6472   001EBE  C027  F01C         	movff	BlueInstructions@mL,fullSpeedBackwards@mL
  6473   001EC2  C028  F01D         	movff	BlueInstructions@mL+1,fullSpeedBackwards@mL+1
  6474   001EC6  C029  F01E         	movff	BlueInstructions@mR,fullSpeedBackwards@mR
  6475   001ECA  C02A  F01F         	movff	BlueInstructions@mR+1,fullSpeedBackwards@mR+1
  6476   001ECE  EC52  F00D         	call	_fullSpeedBackwards	;wreg free
  6477   001ED2                     
  6478                           ;color_instructions.c: 43:         a++;
  6479   001ED2  2A2D               	incf	BlueInstructions@a^0,f,c
  6480   001ED4                     l3044:
  6481                           
  6482                           ;color_instructions.c: 41:     while (a<16){
  6483   001ED4  0E0F               	movlw	15
  6484   001ED6  642D               	cpfsgt	BlueInstructions@a^0,c
  6485   001ED8  EF70  F00F         	goto	u2381
  6486   001EDC  EF72  F00F         	goto	u2380
  6487   001EE0                     u2381:
  6488   001EE0  EF5F  F00F         	goto	l3040
  6489   001EE4                     u2380:
  6490   001EE4  EF7F  F00F         	goto	l3050
  6491   001EE8                     l3046:
  6492                           
  6493                           ;color_instructions.c: 46:         stop(mL, mR);
  6494   001EE8  C027  F01C         	movff	BlueInstructions@mL,stop@mL
  6495   001EEC  C028  F01D         	movff	BlueInstructions@mL+1,stop@mL+1
  6496   001EF0  C029  F01E         	movff	BlueInstructions@mR,stop@mR
  6497   001EF4  C02A  F01F         	movff	BlueInstructions@mR+1,stop@mR+1
  6498   001EF8  EC3F  F00E         	call	_stop	;wreg free
  6499   001EFC                     
  6500                           ;color_instructions.c: 47:         a--;
  6501   001EFC  062D               	decf	BlueInstructions@a^0,f,c
  6502   001EFE                     l3050:
  6503                           
  6504                           ;color_instructions.c: 45:     while (a>0){
  6505   001EFE  502D               	movf	BlueInstructions@a^0,w,c
  6506   001F00  A4D8               	btfss	status,2,c
  6507   001F02  EF85  F00F         	goto	u2391
  6508   001F06  EF87  F00F         	goto	u2390
  6509   001F0A                     u2391:
  6510   001F0A  EF74  F00F         	goto	l3046
  6511   001F0E                     u2390:
  6512   001F0E                     
  6513                           ;color_instructions.c: 49:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6514   001F0E  0E05               	movlw	5
  6515   001F10  6E2C               	movwf	(??_BlueInstructions+1)^0,c
  6516   001F12  0E0F               	movlw	15
  6517   001F14  6E2B               	movwf	??_BlueInstructions^0,c
  6518   001F16  0EF1               	movlw	241
  6519   001F18                     u4817:
  6520   001F18  2EE8               	decfsz	wreg,f,c
  6521   001F1A  D7FE               	bra	u4817
  6522   001F1C  2E2B               	decfsz	??_BlueInstructions^0,f,c
  6523   001F1E  D7FC               	bra	u4817
  6524   001F20  2E2C               	decfsz	(??_BlueInstructions+1)^0,f,c
  6525   001F22  D7FA               	bra	u4817
  6526   001F24  F000               	nop	
  6527   001F26                     
  6528                           ;color_instructions.c: 51:     turnLeft90(mL, mR);
  6529   001F26  C027  F022         	movff	BlueInstructions@mL,turnLeft90@mL
  6530   001F2A  C028  F023         	movff	BlueInstructions@mL+1,turnLeft90@mL+1
  6531   001F2E  C029  F024         	movff	BlueInstructions@mR,turnLeft90@mR
  6532   001F32  C02A  F025         	movff	BlueInstructions@mR+1,turnLeft90@mR+1
  6533   001F36  EC0B  F010         	call	_turnLeft90	;wreg free
  6534   001F3A                     
  6535                           ;color_instructions.c: 52:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6536   001F3A  0E05               	movlw	5
  6537   001F3C  6E2C               	movwf	(??_BlueInstructions+1)^0,c
  6538   001F3E  0E0F               	movlw	15
  6539   001F40  6E2B               	movwf	??_BlueInstructions^0,c
  6540   001F42  0EF1               	movlw	241
  6541   001F44                     u4827:
  6542   001F44  2EE8               	decfsz	wreg,f,c
  6543   001F46  D7FE               	bra	u4827
  6544   001F48  2E2B               	decfsz	??_BlueInstructions^0,f,c
  6545   001F4A  D7FC               	bra	u4827
  6546   001F4C  2E2C               	decfsz	(??_BlueInstructions+1)^0,f,c
  6547   001F4E  D7FA               	bra	u4827
  6548   001F50  F000               	nop	
  6549                           
  6550                           ;color_instructions.c: 53:     turnLeft90(mL, mR);
  6551   001F52  C027  F022         	movff	BlueInstructions@mL,turnLeft90@mL
  6552   001F56  C028  F023         	movff	BlueInstructions@mL+1,turnLeft90@mL+1
  6553   001F5A  C029  F024         	movff	BlueInstructions@mR,turnLeft90@mR
  6554   001F5E  C02A  F025         	movff	BlueInstructions@mR+1,turnLeft90@mR+1
  6555   001F62  EC0B  F010         	call	_turnLeft90	;wreg free
  6556   001F66  0012               	return		;funcret
  6557   001F68                     __end_of_BlueInstructions:
  6558                           	callstack 0
  6559                           
  6560 ;; *************** function _turnLeft90 *****************
  6561 ;; Defined at:
  6562 ;;		line 200 in file "dc_motor.c"
  6563 ;; Parameters:    Size  Location     Type
  6564 ;;  mL              2   33[COMRAM] PTR struct DC_motor
  6565 ;;		 -> main@motorL(9), 
  6566 ;;  mR              2   35[COMRAM] PTR struct DC_motor
  6567 ;;		 -> main@motorR(9), 
  6568 ;; Auto vars:     Size  Location     Type
  6569 ;;  a               1   37[COMRAM] unsigned char 
  6570 ;; Return value:  Size  Location     Type
  6571 ;;                  1    wreg      void 
  6572 ;; Registers used:
  6573 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6574 ;; Tracked objects:
  6575 ;;		On entry : 0/0
  6576 ;;		On exit  : 0/0
  6577 ;;		Unchanged: 0/0
  6578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6579 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6580 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6582 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6583 ;;Total ram usage:        5 bytes
  6584 ;; Hardware stack levels used: 1
  6585 ;; Hardware stack levels required when called: 10
  6586 ;; This function calls:
  6587 ;;		_stop
  6588 ;;		_turnLeft
  6589 ;; This function is called by:
  6590 ;;		_turnLeft135
  6591 ;;		_GreenInstructions
  6592 ;;		_BlueInstructions
  6593 ;;		_PinkInstructions
  6594 ;;		_turn180
  6595 ;; This function uses a non-reentrant model
  6596 ;;
  6597                           
  6598                           	psect	text29
  6599   002016                     __ptext29:
  6600                           	callstack 0
  6601   002016                     _turnLeft90:
  6602                           	callstack 17
  6603   002016                     
  6604                           ;dc_motor.c: 202:     unsigned char a=0;
  6605   002016  0E00               	movlw	0
  6606   002018  6E26               	movwf	turnLeft90@a^0,c
  6607                           
  6608                           ;dc_motor.c: 203:     while(a<16){
  6609   00201A  EF1A  F010         	goto	l2900
  6610   00201E                     l2896:
  6611                           
  6612                           ;dc_motor.c: 204:         turnLeft(mL, mR);
  6613   00201E  C022  F01C         	movff	turnLeft90@mL,turnLeft@mL
  6614   002022  C023  F01D         	movff	turnLeft90@mL+1,turnLeft@mL+1
  6615   002026  C024  F01E         	movff	turnLeft90@mR,turnLeft@mR
  6616   00202A  C025  F01F         	movff	turnLeft90@mR+1,turnLeft@mR+1
  6617   00202E  ECDB  F00C         	call	_turnLeft	;wreg free
  6618   002032                     
  6619                           ;dc_motor.c: 205:         a++;
  6620   002032  2A26               	incf	turnLeft90@a^0,f,c
  6621   002034                     l2900:
  6622                           
  6623                           ;dc_motor.c: 203:     while(a<16){
  6624   002034  0E0F               	movlw	15
  6625   002036  6426               	cpfsgt	turnLeft90@a^0,c
  6626   002038  EF20  F010         	goto	u2181
  6627   00203C  EF22  F010         	goto	u2180
  6628   002040                     u2181:
  6629   002040  EF0F  F010         	goto	l2896
  6630   002044                     u2180:
  6631   002044  EF2F  F010         	goto	l2906
  6632   002048                     l2902:
  6633                           
  6634                           ;dc_motor.c: 208:         stop(mL, mR);
  6635   002048  C022  F01C         	movff	turnLeft90@mL,stop@mL
  6636   00204C  C023  F01D         	movff	turnLeft90@mL+1,stop@mL+1
  6637   002050  C024  F01E         	movff	turnLeft90@mR,stop@mR
  6638   002054  C025  F01F         	movff	turnLeft90@mR+1,stop@mR+1
  6639   002058  EC3F  F00E         	call	_stop	;wreg free
  6640   00205C                     
  6641                           ;dc_motor.c: 209:         a--;
  6642   00205C  0626               	decf	turnLeft90@a^0,f,c
  6643   00205E                     l2906:
  6644                           
  6645                           ;dc_motor.c: 207:     while(a>0){
  6646   00205E  5026               	movf	turnLeft90@a^0,w,c
  6647   002060  A4D8               	btfss	status,2,c
  6648   002062  EF35  F010         	goto	u2191
  6649   002066  EF37  F010         	goto	u2190
  6650   00206A                     u2191:
  6651   00206A  EF24  F010         	goto	l2902
  6652   00206E                     u2190:
  6653   00206E  EF44  F010         	goto	l2912
  6654   002072                     l2908:
  6655                           
  6656                           ;dc_motor.c: 212:         turnLeft(mL, mR);
  6657   002072  C022  F01C         	movff	turnLeft90@mL,turnLeft@mL
  6658   002076  C023  F01D         	movff	turnLeft90@mL+1,turnLeft@mL+1
  6659   00207A  C024  F01E         	movff	turnLeft90@mR,turnLeft@mR
  6660   00207E  C025  F01F         	movff	turnLeft90@mR+1,turnLeft@mR+1
  6661   002082  ECDB  F00C         	call	_turnLeft	;wreg free
  6662   002086                     
  6663                           ;dc_motor.c: 213:         a++;
  6664   002086  2A26               	incf	turnLeft90@a^0,f,c
  6665   002088                     l2912:
  6666                           
  6667                           ;dc_motor.c: 211:     while(a<15){
  6668   002088  0E0E               	movlw	14
  6669   00208A  6426               	cpfsgt	turnLeft90@a^0,c
  6670   00208C  EF4A  F010         	goto	u2201
  6671   002090  EF4C  F010         	goto	u2200
  6672   002094                     u2201:
  6673   002094  EF39  F010         	goto	l2908
  6674   002098                     u2200:
  6675   002098  EF59  F010         	goto	l2918
  6676   00209C                     l2914:
  6677                           
  6678                           ;dc_motor.c: 216:         stop(mL, mR);
  6679   00209C  C022  F01C         	movff	turnLeft90@mL,stop@mL
  6680   0020A0  C023  F01D         	movff	turnLeft90@mL+1,stop@mL+1
  6681   0020A4  C024  F01E         	movff	turnLeft90@mR,stop@mR
  6682   0020A8  C025  F01F         	movff	turnLeft90@mR+1,stop@mR+1
  6683   0020AC  EC3F  F00E         	call	_stop	;wreg free
  6684   0020B0                     
  6685                           ;dc_motor.c: 217:         a--;
  6686   0020B0  0626               	decf	turnLeft90@a^0,f,c
  6687   0020B2                     l2918:
  6688                           
  6689                           ;dc_motor.c: 215:     while(a>0){
  6690   0020B2  5026               	movf	turnLeft90@a^0,w,c
  6691   0020B4  A4D8               	btfss	status,2,c
  6692   0020B6  EF5F  F010         	goto	u2211
  6693   0020BA  EF61  F010         	goto	u2210
  6694   0020BE                     u2211:
  6695   0020BE  EF4E  F010         	goto	l2914
  6696   0020C2                     u2210:
  6697   0020C2  0012               	return		;funcret
  6698   0020C4                     __end_of_turnLeft90:
  6699                           	callstack 0
  6700                           
  6701 ;; *************** function _turnLeft *****************
  6702 ;; Defined at:
  6703 ;;		line 107 in file "dc_motor.c"
  6704 ;; Parameters:    Size  Location     Type
  6705 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6706 ;;		 -> main@motorL(9), 
  6707 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6708 ;;		 -> main@motorR(9), 
  6709 ;; Auto vars:     Size  Location     Type
  6710 ;;		None
  6711 ;; Return value:  Size  Location     Type
  6712 ;;                  1    wreg      void 
  6713 ;; Registers used:
  6714 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6715 ;; Tracked objects:
  6716 ;;		On entry : 0/0
  6717 ;;		On exit  : 0/0
  6718 ;;		Unchanged: 0/0
  6719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6720 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6722 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6723 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6724 ;;Total ram usage:        6 bytes
  6725 ;; Hardware stack levels used: 1
  6726 ;; Hardware stack levels required when called: 9
  6727 ;; This function calls:
  6728 ;;		_setMotorPWM
  6729 ;; This function is called by:
  6730 ;;		_turnLeft90
  6731 ;;		_turnLeft135
  6732 ;; This function uses a non-reentrant model
  6733 ;;
  6734                           
  6735                           	psect	text30
  6736   0019B6                     __ptext30:
  6737                           	callstack 0
  6738   0019B6                     _turnLeft:
  6739                           	callstack 17
  6740   0019B6                     
  6741                           ;dc_motor.c: 107: void turnLeft(DC_motor *mL, DC_motor *mR);dc_motor.c: 108: {;dc_motor.
      +                          c: 110:     mL->direction = 0;
  6742   0019B6  EE20 F001          	lfsr	2,1
  6743   0019BA  501C               	movf	turnLeft@mL^0,w,c
  6744   0019BC  26D9               	addwf	fsr2l,f,c
  6745   0019BE  501D               	movf	(turnLeft@mL+1)^0,w,c
  6746   0019C0  22DA               	addwfc	fsr2h,f,c
  6747   0019C2  0E00               	movlw	0
  6748   0019C4  6EDF               	movwf	indf2,c
  6749                           
  6750                           ;dc_motor.c: 111:     mL->brakemode = 0;
  6751   0019C6  EE20 F002          	lfsr	2,2
  6752   0019CA  501C               	movf	turnLeft@mL^0,w,c
  6753   0019CC  26D9               	addwf	fsr2l,f,c
  6754   0019CE  501D               	movf	(turnLeft@mL+1)^0,w,c
  6755   0019D0  22DA               	addwfc	fsr2h,f,c
  6756   0019D2  0E00               	movlw	0
  6757   0019D4  6EDF               	movwf	indf2,c
  6758                           
  6759                           ;dc_motor.c: 113:     mR->direction = 1;
  6760   0019D6  EE20 F001          	lfsr	2,1
  6761   0019DA  501E               	movf	turnLeft@mR^0,w,c
  6762   0019DC  26D9               	addwf	fsr2l,f,c
  6763   0019DE  501F               	movf	(turnLeft@mR+1)^0,w,c
  6764   0019E0  22DA               	addwfc	fsr2h,f,c
  6765   0019E2  0E01               	movlw	1
  6766   0019E4  6EDF               	movwf	indf2,c
  6767                           
  6768                           ;dc_motor.c: 114:     mR->brakemode = 0;
  6769   0019E6  EE20 F002          	lfsr	2,2
  6770   0019EA  501E               	movf	turnLeft@mR^0,w,c
  6771   0019EC  26D9               	addwf	fsr2l,f,c
  6772   0019EE  501F               	movf	(turnLeft@mR+1)^0,w,c
  6773   0019F0  22DA               	addwfc	fsr2h,f,c
  6774   0019F2  0E00               	movlw	0
  6775   0019F4  6EDF               	movwf	indf2,c
  6776                           
  6777                           ;dc_motor.c: 117:     if(mL->power>62){mL->power=62;}
  6778   0019F6  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6779   0019FA  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6780   0019FE  50DF               	movf	indf2,w,c
  6781   001A00  0A80               	xorlw	128
  6782   001A02  0F41               	addlw	-191
  6783   001A04  A0D8               	btfss	status,0,c
  6784   001A06  EF07  F00D         	goto	u2121
  6785   001A0A  EF09  F00D         	goto	u2120
  6786   001A0E                     u2121:
  6787   001A0E  EF0F  F00D         	goto	l2832
  6788   001A12                     u2120:
  6789   001A12  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6790   001A16  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6791   001A1A  0E3E               	movlw	62
  6792   001A1C  6EDF               	movwf	indf2,c
  6793   001A1E                     l2832:
  6794                           
  6795                           ;dc_motor.c: 118:     if(mR->power>62){mR->power=62;}
  6796   001A1E  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6797   001A22  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6798   001A26  50DF               	movf	indf2,w,c
  6799   001A28  0A80               	xorlw	128
  6800   001A2A  0F41               	addlw	-191
  6801   001A2C  A0D8               	btfss	status,0,c
  6802   001A2E  EF1B  F00D         	goto	u2131
  6803   001A32  EF1D  F00D         	goto	u2130
  6804   001A36                     u2131:
  6805   001A36  EF23  F00D         	goto	l2836
  6806   001A3A                     u2130:
  6807   001A3A  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6808   001A3E  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6809   001A42  0E3E               	movlw	62
  6810   001A44  6EDF               	movwf	indf2,c
  6811   001A46                     l2836:
  6812                           
  6813                           ;dc_motor.c: 120:     mL->power = mL->power + 10 ;
  6814   001A46  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6815   001A4A  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6816   001A4E  50DF               	movf	indf2,w,c
  6817   001A50  0F0A               	addlw	10
  6818   001A52  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6819   001A56  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6820   001A5A  6EDF               	movwf	indf2,c
  6821   001A5C                     
  6822                           ;dc_motor.c: 121:     mR->power = mR->power + 10;
  6823   001A5C  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6824   001A60  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6825   001A64  50DF               	movf	indf2,w,c
  6826   001A66  0F0A               	addlw	10
  6827   001A68  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6828   001A6C  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6829   001A70  6EDF               	movwf	indf2,c
  6830   001A72                     
  6831                           ;dc_motor.c: 123:     setMotorPWM(mL);
  6832   001A72  C01C  F016         	movff	turnLeft@mL,setMotorPWM@m
  6833   001A76  C01D  F017         	movff	turnLeft@mL+1,setMotorPWM@m+1
  6834   001A7A  ECB3  F00A         	call	_setMotorPWM	;wreg free
  6835   001A7E                     
  6836                           ;dc_motor.c: 124:     setMotorPWM(mR);
  6837   001A7E  C01E  F016         	movff	turnLeft@mR,setMotorPWM@m
  6838   001A82  C01F  F017         	movff	turnLeft@mR+1,setMotorPWM@m+1
  6839   001A86  ECB3  F00A         	call	_setMotorPWM	;wreg free
  6840   001A8A                     
  6841                           ;dc_motor.c: 125:     _delay((unsigned long)((20)*(64000000/4000.0)));
  6842   001A8A  0E02               	movlw	2
  6843   001A8C  6E21               	movwf	(??_turnLeft+1)^0,c
  6844   001A8E  0EA0               	movlw	160
  6845   001A90  6E20               	movwf	??_turnLeft^0,c
  6846   001A92  0E92               	movlw	146
  6847   001A94                     u4837:
  6848   001A94  2EE8               	decfsz	wreg,f,c
  6849   001A96  D7FE               	bra	u4837
  6850   001A98  2E20               	decfsz	??_turnLeft^0,f,c
  6851   001A9A  D7FC               	bra	u4837
  6852   001A9C  2E21               	decfsz	(??_turnLeft+1)^0,f,c
  6853   001A9E  D7FA               	bra	u4837
  6854   001AA0  D000               	nop2	
  6855   001AA2  0012               	return		;funcret
  6856   001AA4                     __end_of_turnLeft:
  6857                           	callstack 0
  6858                           
  6859 ;; *************** function _stop *****************
  6860 ;; Defined at:
  6861 ;;		line 87 in file "dc_motor.c"
  6862 ;; Parameters:    Size  Location     Type
  6863 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6864 ;;		 -> main@motorL(9), 
  6865 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6866 ;;		 -> main@motorR(9), 
  6867 ;; Auto vars:     Size  Location     Type
  6868 ;;		None
  6869 ;; Return value:  Size  Location     Type
  6870 ;;                  1    wreg      void 
  6871 ;; Registers used:
  6872 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6873 ;; Tracked objects:
  6874 ;;		On entry : 0/0
  6875 ;;		On exit  : 0/0
  6876 ;;		Unchanged: 0/0
  6877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6878 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6880 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6881 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6882 ;;Total ram usage:        5 bytes
  6883 ;; Hardware stack levels used: 1
  6884 ;; Hardware stack levels required when called: 9
  6885 ;; This function calls:
  6886 ;;		_setMotorPWM
  6887 ;; This function is called by:
  6888 ;;		_turnLeft90
  6889 ;;		_turnRight90
  6890 ;;		_turnRight135
  6891 ;;		_turnLeft135
  6892 ;;		_RedInstructions
  6893 ;;		_GreenInstructions
  6894 ;;		_BlueInstructions
  6895 ;;		_YellowInstructions
  6896 ;;		_PinkInstructions
  6897 ;;		_OrangeInstructions
  6898 ;;		_LightBlueInstructions
  6899 ;;		_AntiYellow
  6900 ;;		_AntiPink
  6901 ;;		_WhiteInstructions
  6902 ;;		_main
  6903 ;; This function uses a non-reentrant model
  6904 ;;
  6905                           
  6906                           	psect	text31
  6907   001C7E                     __ptext31:
  6908                           	callstack 0
  6909   001C7E                     _stop:
  6910                           	callstack 21
  6911   001C7E                     
  6912                           ;dc_motor.c: 87: void stop(DC_motor *mL, DC_motor *mR);dc_motor.c: 88: {;dc_motor.c: 90:
      +                               mL->brakemode = 1;
  6913   001C7E  EE20 F002          	lfsr	2,2
  6914   001C82  501C               	movf	stop@mL^0,w,c
  6915   001C84  26D9               	addwf	fsr2l,f,c
  6916   001C86  501D               	movf	(stop@mL+1)^0,w,c
  6917   001C88  22DA               	addwfc	fsr2h,f,c
  6918   001C8A  0E01               	movlw	1
  6919   001C8C  6EDF               	movwf	indf2,c
  6920                           
  6921                           ;dc_motor.c: 91:     mR->brakemode = 1;
  6922   001C8E  EE20 F002          	lfsr	2,2
  6923   001C92  501E               	movf	stop@mR^0,w,c
  6924   001C94  26D9               	addwf	fsr2l,f,c
  6925   001C96  501F               	movf	(stop@mR+1)^0,w,c
  6926   001C98  22DA               	addwfc	fsr2h,f,c
  6927   001C9A  0E01               	movlw	1
  6928   001C9C  6EDF               	movwf	indf2,c
  6929                           
  6930                           ;dc_motor.c: 93:     if(mL->power<0){mL->power=0;}
  6931   001C9E  C01C  FFD9         	movff	stop@mL,fsr2l
  6932   001CA2  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6933   001CA6  0E00               	movlw	0
  6934   001CA8  BEDB               	btfsc	plusw2,7,c
  6935   001CAA  EF5B  F00E         	goto	u2100
  6936   001CAE  EF59  F00E         	goto	u2101
  6937   001CB2                     u2101:
  6938   001CB2  EF61  F00E         	goto	l2814
  6939   001CB6                     u2100:
  6940   001CB6  C01C  FFD9         	movff	stop@mL,fsr2l
  6941   001CBA  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6942   001CBE  0E00               	movlw	0
  6943   001CC0  6EDF               	movwf	indf2,c
  6944   001CC2                     l2814:
  6945                           
  6946                           ;dc_motor.c: 94:     if(mR->power<0){mR->power=0;}
  6947   001CC2  C01E  FFD9         	movff	stop@mR,fsr2l
  6948   001CC6  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6949   001CCA  0E00               	movlw	0
  6950   001CCC  BEDB               	btfsc	plusw2,7,c
  6951   001CCE  EF6D  F00E         	goto	u2110
  6952   001CD2  EF6B  F00E         	goto	u2111
  6953   001CD6                     u2111:
  6954   001CD6  EF73  F00E         	goto	l2818
  6955   001CDA                     u2110:
  6956   001CDA  C01E  FFD9         	movff	stop@mR,fsr2l
  6957   001CDE  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6958   001CE2  0E00               	movlw	0
  6959   001CE4  6EDF               	movwf	indf2,c
  6960   001CE6                     l2818:
  6961                           
  6962                           ;dc_motor.c: 96:     mL->power = mL->power - 5 ;
  6963   001CE6  C01C  FFD9         	movff	stop@mL,fsr2l
  6964   001CEA  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6965   001CEE  50DF               	movf	indf2,w,c
  6966   001CF0  0FFB               	addlw	251
  6967   001CF2  C01C  FFD9         	movff	stop@mL,fsr2l
  6968   001CF6  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6969   001CFA  6EDF               	movwf	indf2,c
  6970   001CFC                     
  6971                           ;dc_motor.c: 97:     mR->power = mR->power - 5;
  6972   001CFC  C01E  FFD9         	movff	stop@mR,fsr2l
  6973   001D00  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6974   001D04  50DF               	movf	indf2,w,c
  6975   001D06  0FFB               	addlw	251
  6976   001D08  C01E  FFD9         	movff	stop@mR,fsr2l
  6977   001D0C  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6978   001D10  6EDF               	movwf	indf2,c
  6979                           
  6980                           ;dc_motor.c: 99:     mL->power = 0;
  6981   001D12  C01C  FFD9         	movff	stop@mL,fsr2l
  6982   001D16  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6983   001D1A  0E00               	movlw	0
  6984   001D1C  6EDF               	movwf	indf2,c
  6985                           
  6986                           ;dc_motor.c: 100:     mR->power = 0;
  6987   001D1E  C01E  FFD9         	movff	stop@mR,fsr2l
  6988   001D22  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6989   001D26  0E00               	movlw	0
  6990   001D28  6EDF               	movwf	indf2,c
  6991   001D2A                     
  6992                           ;dc_motor.c: 101:     setMotorPWM(mL);
  6993   001D2A  C01C  F016         	movff	stop@mL,setMotorPWM@m
  6994   001D2E  C01D  F017         	movff	stop@mL+1,setMotorPWM@m+1
  6995   001D32  ECB3  F00A         	call	_setMotorPWM	;wreg free
  6996   001D36                     
  6997                           ;dc_motor.c: 102:     setMotorPWM(mR);
  6998   001D36  C01E  F016         	movff	stop@mR,setMotorPWM@m
  6999   001D3A  C01F  F017         	movff	stop@mR+1,setMotorPWM@m+1
  7000   001D3E  ECB3  F00A         	call	_setMotorPWM	;wreg free
  7001   001D42                     
  7002                           ;dc_motor.c: 103:     _delay((unsigned long)((10)*(64000000/4000.0)));
  7003   001D42  0ED0               	movlw	208
  7004   001D44  6E20               	movwf	??_stop^0,c
  7005   001D46  0ECA               	movlw	202
  7006   001D48                     u4847:
  7007   001D48  2EE8               	decfsz	wreg,f,c
  7008   001D4A  D7FE               	bra	u4847
  7009   001D4C  2E20               	decfsz	??_stop^0,f,c
  7010   001D4E  D7FC               	bra	u4847
  7011   001D50  0012               	return		;funcret
  7012   001D52                     __end_of_stop:
  7013                           	callstack 0
  7014                           
  7015 ;; *************** function _fullSpeedBackwards *****************
  7016 ;; Defined at:
  7017 ;;		line 174 in file "dc_motor.c"
  7018 ;; Parameters:    Size  Location     Type
  7019 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  7020 ;;		 -> main@motorL(9), 
  7021 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  7022 ;;		 -> main@motorR(9), 
  7023 ;; Auto vars:     Size  Location     Type
  7024 ;;		None
  7025 ;; Return value:  Size  Location     Type
  7026 ;;                  1    wreg      void 
  7027 ;; Registers used:
  7028 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7029 ;; Tracked objects:
  7030 ;;		On entry : 0/0
  7031 ;;		On exit  : 0/0
  7032 ;;		Unchanged: 0/0
  7033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7034 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7036 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7037 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7038 ;;Total ram usage:        6 bytes
  7039 ;; Hardware stack levels used: 1
  7040 ;; Hardware stack levels required when called: 9
  7041 ;; This function calls:
  7042 ;;		_setMotorPWM
  7043 ;; This function is called by:
  7044 ;;		_RedInstructions
  7045 ;;		_GreenInstructions
  7046 ;;		_BlueInstructions
  7047 ;;		_YellowInstructions
  7048 ;;		_PinkInstructions
  7049 ;;		_OrangeInstructions
  7050 ;;		_LightBlueInstructions
  7051 ;; This function uses a non-reentrant model
  7052 ;;
  7053                           
  7054                           	psect	text32
  7055   001AA4                     __ptext32:
  7056                           	callstack 0
  7057   001AA4                     _fullSpeedBackwards:
  7058                           	callstack 18
  7059   001AA4                     
  7060                           ;dc_motor.c: 177:     mL->direction = 0;
  7061   001AA4  EE20 F001          	lfsr	2,1
  7062   001AA8  501C               	movf	fullSpeedBackwards@mL^0,w,c
  7063   001AAA  26D9               	addwf	fsr2l,f,c
  7064   001AAC  501D               	movf	(fullSpeedBackwards@mL+1)^0,w,c
  7065   001AAE  22DA               	addwfc	fsr2h,f,c
  7066   001AB0  0E00               	movlw	0
  7067   001AB2  6EDF               	movwf	indf2,c
  7068                           
  7069                           ;dc_motor.c: 178:     mL->brakemode = 0;
  7070   001AB4  EE20 F002          	lfsr	2,2
  7071   001AB8  501C               	movf	fullSpeedBackwards@mL^0,w,c
  7072   001ABA  26D9               	addwf	fsr2l,f,c
  7073   001ABC  501D               	movf	(fullSpeedBackwards@mL+1)^0,w,c
  7074   001ABE  22DA               	addwfc	fsr2h,f,c
  7075   001AC0  0E00               	movlw	0
  7076   001AC2  6EDF               	movwf	indf2,c
  7077                           
  7078                           ;dc_motor.c: 180:     mR->direction = 0;
  7079   001AC4  EE20 F001          	lfsr	2,1
  7080   001AC8  501E               	movf	fullSpeedBackwards@mR^0,w,c
  7081   001ACA  26D9               	addwf	fsr2l,f,c
  7082   001ACC  501F               	movf	(fullSpeedBackwards@mR+1)^0,w,c
  7083   001ACE  22DA               	addwfc	fsr2h,f,c
  7084   001AD0  0E00               	movlw	0
  7085   001AD2  6EDF               	movwf	indf2,c
  7086                           
  7087                           ;dc_motor.c: 181:     mR->brakemode = 0;
  7088   001AD4  EE20 F002          	lfsr	2,2
  7089   001AD8  501E               	movf	fullSpeedBackwards@mR^0,w,c
  7090   001ADA  26D9               	addwf	fsr2l,f,c
  7091   001ADC  501F               	movf	(fullSpeedBackwards@mR+1)^0,w,c
  7092   001ADE  22DA               	addwfc	fsr2h,f,c
  7093   001AE0  0E00               	movlw	0
  7094   001AE2  6EDF               	movwf	indf2,c
  7095                           
  7096                           ;dc_motor.c: 184:     if(mL->power>38){mL->power=38;}
  7097   001AE4  C01C  FFD9         	movff	fullSpeedBackwards@mL,fsr2l
  7098   001AE8  C01D  FFDA         	movff	fullSpeedBackwards@mL+1,fsr2h
  7099   001AEC  50DF               	movf	indf2,w,c
  7100   001AEE  0A80               	xorlw	128
  7101   001AF0  0F59               	addlw	-167
  7102   001AF2  A0D8               	btfss	status,0,c
  7103   001AF4  EF7E  F00D         	goto	u2161
  7104   001AF8  EF80  F00D         	goto	u2160
  7105   001AFC                     u2161:
  7106   001AFC  EF86  F00D         	goto	l2880
  7107   001B00                     u2160:
  7108   001B00  C01C  FFD9         	movff	fullSpeedBackwards@mL,fsr2l
  7109   001B04  C01D  FFDA         	movff	fullSpeedBackwards@mL+1,fsr2h
  7110   001B08  0E26               	movlw	38
  7111   001B0A  6EDF               	movwf	indf2,c
  7112   001B0C                     l2880:
  7113                           
  7114                           ;dc_motor.c: 185:     if(mR->power>46){mR->power=46;}
  7115   001B0C  C01E  FFD9         	movff	fullSpeedBackwards@mR,fsr2l
  7116   001B10  C01F  FFDA         	movff	fullSpeedBackwards@mR+1,fsr2h
  7117   001B14  50DF               	movf	indf2,w,c
  7118   001B16  0A80               	xorlw	128
  7119   001B18  0F51               	addlw	-175
  7120   001B1A  A0D8               	btfss	status,0,c
  7121   001B1C  EF92  F00D         	goto	u2171
  7122   001B20  EF94  F00D         	goto	u2170
  7123   001B24                     u2171:
  7124   001B24  EF9A  F00D         	goto	l2884
  7125   001B28                     u2170:
  7126   001B28  C01E  FFD9         	movff	fullSpeedBackwards@mR,fsr2l
  7127   001B2C  C01F  FFDA         	movff	fullSpeedBackwards@mR+1,fsr2h
  7128   001B30  0E2E               	movlw	46
  7129   001B32  6EDF               	movwf	indf2,c
  7130   001B34                     l2884:
  7131                           
  7132                           ;dc_motor.c: 187:     mL->power = mL->power + 5 ;
  7133   001B34  C01C  FFD9         	movff	fullSpeedBackwards@mL,fsr2l
  7134   001B38  C01D  FFDA         	movff	fullSpeedBackwards@mL+1,fsr2h
  7135   001B3C  50DF               	movf	indf2,w,c
  7136   001B3E  0F05               	addlw	5
  7137   001B40  C01C  FFD9         	movff	fullSpeedBackwards@mL,fsr2l
  7138   001B44  C01D  FFDA         	movff	fullSpeedBackwards@mL+1,fsr2h
  7139   001B48  6EDF               	movwf	indf2,c
  7140   001B4A                     
  7141                           ;dc_motor.c: 188:     mR->power = mR->power + 8;
  7142   001B4A  C01E  FFD9         	movff	fullSpeedBackwards@mR,fsr2l
  7143   001B4E  C01F  FFDA         	movff	fullSpeedBackwards@mR+1,fsr2h
  7144   001B52  50DF               	movf	indf2,w,c
  7145   001B54  0F08               	addlw	8
  7146   001B56  C01E  FFD9         	movff	fullSpeedBackwards@mR,fsr2l
  7147   001B5A  C01F  FFDA         	movff	fullSpeedBackwards@mR+1,fsr2h
  7148   001B5E  6EDF               	movwf	indf2,c
  7149   001B60                     
  7150                           ;dc_motor.c: 190:     setMotorPWM(mL);
  7151   001B60  C01C  F016         	movff	fullSpeedBackwards@mL,setMotorPWM@m
  7152   001B64  C01D  F017         	movff	fullSpeedBackwards@mL+1,setMotorPWM@m+1
  7153   001B68  ECB3  F00A         	call	_setMotorPWM	;wreg free
  7154   001B6C                     
  7155                           ;dc_motor.c: 191:     setMotorPWM(mR);
  7156   001B6C  C01E  F016         	movff	fullSpeedBackwards@mR,setMotorPWM@m
  7157   001B70  C01F  F017         	movff	fullSpeedBackwards@mR+1,setMotorPWM@m+1
  7158   001B74  ECB3  F00A         	call	_setMotorPWM	;wreg free
  7159   001B78                     
  7160                           ;dc_motor.c: 192:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7161   001B78  0E05               	movlw	5
  7162   001B7A  6E21               	movwf	(??_fullSpeedBackwards+1)^0,c
  7163   001B7C  0E0F               	movlw	15
  7164   001B7E  6E20               	movwf	??_fullSpeedBackwards^0,c
  7165   001B80  0EF1               	movlw	241
  7166   001B82                     u4857:
  7167   001B82  2EE8               	decfsz	wreg,f,c
  7168   001B84  D7FE               	bra	u4857
  7169   001B86  2E20               	decfsz	??_fullSpeedBackwards^0,f,c
  7170   001B88  D7FC               	bra	u4857
  7171   001B8A  2E21               	decfsz	(??_fullSpeedBackwards+1)^0,f,c
  7172   001B8C  D7FA               	bra	u4857
  7173   001B8E  F000               	nop	
  7174   001B90  0012               	return		;funcret
  7175   001B92                     __end_of_fullSpeedBackwards:
  7176                           	callstack 0
  7177                           
  7178 ;; *************** function _setMotorPWM *****************
  7179 ;; Defined at:
  7180 ;;		line 64 in file "dc_motor.c"
  7181 ;; Parameters:    Size  Location     Type
  7182 ;;  m               2   21[COMRAM] PTR struct DC_motor
  7183 ;;		 -> main@motorR(9), main@motorL(9), 
  7184 ;; Auto vars:     Size  Location     Type
  7185 ;;  negDuty         1   26[COMRAM] unsigned char 
  7186 ;;  posDuty         1   25[COMRAM] unsigned char 
  7187 ;; Return value:  Size  Location     Type
  7188 ;;                  1    wreg      void 
  7189 ;; Registers used:
  7190 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7191 ;; Tracked objects:
  7192 ;;		On entry : 0/0
  7193 ;;		On exit  : 0/0
  7194 ;;		Unchanged: 0/0
  7195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7196 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7197 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7198 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7199 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7200 ;;Total ram usage:        6 bytes
  7201 ;; Hardware stack levels used: 1
  7202 ;; Hardware stack levels required when called: 8
  7203 ;; This function calls:
  7204 ;;		___lwdiv
  7205 ;;		___wmul
  7206 ;; This function is called by:
  7207 ;;		_stop
  7208 ;;		_turnLeft
  7209 ;;		_turnRight
  7210 ;;		_fullSpeedAhead
  7211 ;;		_fullSpeedBackwards
  7212 ;; This function uses a non-reentrant model
  7213 ;;
  7214                           
  7215                           	psect	text33
  7216   001566                     __ptext33:
  7217                           	callstack 0
  7218   001566                     _setMotorPWM:
  7219                           	callstack 21
  7220   001566                     
  7221                           ;dc_motor.c: 64: void setMotorPWM(DC_motor *m);dc_motor.c: 65: {;dc_motor.c: 66:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 68:     if(m->brakemode) {
  7222   001566  EE20 F002          	lfsr	2,2
  7223   00156A  5016               	movf	setMotorPWM@m^0,w,c
  7224   00156C  26D9               	addwf	fsr2l,f,c
  7225   00156E  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7226   001570  22DA               	addwfc	fsr2h,f,c
  7227   001572  50DF               	movf	indf2,w,c
  7228   001574  B4D8               	btfsc	status,2,c
  7229   001576  EFBF  F00A         	goto	u2061
  7230   00157A  EFC1  F00A         	goto	u2060
  7231   00157E                     u2061:
  7232   00157E  EFF5  F00A         	goto	l2796
  7233   001582                     u2060:
  7234   001582                     
  7235                           ;dc_motor.c: 69:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  7236   001582  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  7237   001586  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  7238   00158A  50DF               	movf	indf2,w,c
  7239   00158C  6E09               	movwf	___wmul@multiplier^0,c
  7240   00158E  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  7241   001590  BE09               	btfsc	___wmul@multiplier^0,7,c
  7242   001592  060A               	decf	(___wmul@multiplier+1)^0,f,c
  7243   001594  EE20 F003          	lfsr	2,3
  7244   001598  5016               	movf	setMotorPWM@m^0,w,c
  7245   00159A  26D9               	addwf	fsr2l,f,c
  7246   00159C  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7247   00159E  22DA               	addwfc	fsr2h,f,c
  7248   0015A0  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  7249   0015A4  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  7250   0015A8  ECD3  F014         	call	___wmul	;wreg free
  7251   0015AC  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  7252   0015B0  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  7253   0015B4  0E00               	movlw	0
  7254   0015B6  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  7255   0015B8  0E64               	movlw	100
  7256   0015BA  6E11               	movwf	___lwdiv@divisor^0,c
  7257   0015BC  EC3C  F012         	call	___lwdiv	;wreg free
  7258   0015C0  EE20 F003          	lfsr	2,3
  7259   0015C4  5016               	movf	setMotorPWM@m^0,w,c
  7260   0015C6  26D9               	addwf	fsr2l,f,c
  7261   0015C8  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7262   0015CA  22DA               	addwfc	fsr2h,f,c
  7263   0015CC  50DF               	movf	indf2,w,c
  7264   0015CE  6E18               	movwf	??_setMotorPWM^0,c
  7265   0015D0  500F               	movf	?___lwdiv^0,w,c
  7266   0015D2  5C18               	subwf	??_setMotorPWM^0,w,c
  7267   0015D4  6E1A               	movwf	setMotorPWM@posDuty^0,c
  7268   0015D6                     
  7269                           ;dc_motor.c: 70:         negDuty=m->PWMperiod;
  7270   0015D6  EE20 F003          	lfsr	2,3
  7271   0015DA  5016               	movf	setMotorPWM@m^0,w,c
  7272   0015DC  26D9               	addwf	fsr2l,f,c
  7273   0015DE  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7274   0015E0  22DA               	addwfc	fsr2h,f,c
  7275   0015E2  50DF               	movf	indf2,w,c
  7276   0015E4  6E1B               	movwf	setMotorPWM@negDuty^0,c
  7277                           
  7278                           ;dc_motor.c: 71:     }
  7279   0015E6  EF18  F00B         	goto	l2800
  7280   0015EA                     l2796:
  7281                           
  7282                           ;dc_motor.c: 73:         posDuty=0;
  7283   0015EA  0E00               	movlw	0
  7284   0015EC  6E1A               	movwf	setMotorPWM@posDuty^0,c
  7285   0015EE                     
  7286                           ;dc_motor.c: 74:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  7287   0015EE  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  7288   0015F2  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  7289   0015F6  50DF               	movf	indf2,w,c
  7290   0015F8  6E09               	movwf	___wmul@multiplier^0,c
  7291   0015FA  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  7292   0015FC  BE09               	btfsc	___wmul@multiplier^0,7,c
  7293   0015FE  060A               	decf	(___wmul@multiplier+1)^0,f,c
  7294   001600  EE20 F003          	lfsr	2,3
  7295   001604  5016               	movf	setMotorPWM@m^0,w,c
  7296   001606  26D9               	addwf	fsr2l,f,c
  7297   001608  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7298   00160A  22DA               	addwfc	fsr2h,f,c
  7299   00160C  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  7300   001610  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  7301   001614  ECD3  F014         	call	___wmul	;wreg free
  7302   001618  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  7303   00161C  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  7304   001620  0E00               	movlw	0
  7305   001622  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  7306   001624  0E64               	movlw	100
  7307   001626  6E11               	movwf	___lwdiv@divisor^0,c
  7308   001628  EC3C  F012         	call	___lwdiv	;wreg free
  7309   00162C  500F               	movf	?___lwdiv^0,w,c
  7310   00162E  6E1B               	movwf	setMotorPWM@negDuty^0,c
  7311   001630                     l2800:
  7312                           
  7313                           ;dc_motor.c: 77:     if (m->direction) {
  7314   001630  EE20 F001          	lfsr	2,1
  7315   001634  5016               	movf	setMotorPWM@m^0,w,c
  7316   001636  26D9               	addwf	fsr2l,f,c
  7317   001638  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7318   00163A  22DA               	addwfc	fsr2h,f,c
  7319   00163C  50DF               	movf	indf2,w,c
  7320   00163E  B4D8               	btfsc	status,2,c
  7321   001640  EF24  F00B         	goto	u2071
  7322   001644  EF26  F00B         	goto	u2070
  7323   001648                     u2071:
  7324   001648  EF48  F00B         	goto	l2804
  7325   00164C                     u2070:
  7326   00164C                     
  7327                           ;dc_motor.c: 78:         *(m->posDutyHighByte)=posDuty;
  7328   00164C  EE20 F005          	lfsr	2,5
  7329   001650  5016               	movf	setMotorPWM@m^0,w,c
  7330   001652  26D9               	addwf	fsr2l,f,c
  7331   001654  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7332   001656  22DA               	addwfc	fsr2h,f,c
  7333   001658  CFDE F018          	movff	postinc2,??_setMotorPWM
  7334   00165C  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  7335   001660  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  7336   001664  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  7337   001668  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  7338                           
  7339                           ;dc_motor.c: 79:         *(m->negDutyHighByte)=negDuty;
  7340   00166C  EE20 F007          	lfsr	2,7
  7341   001670  5016               	movf	setMotorPWM@m^0,w,c
  7342   001672  26D9               	addwf	fsr2l,f,c
  7343   001674  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7344   001676  22DA               	addwfc	fsr2h,f,c
  7345   001678  CFDE F018          	movff	postinc2,??_setMotorPWM
  7346   00167C  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  7347   001680  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  7348   001684  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  7349   001688  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  7350                           
  7351                           ;dc_motor.c: 80:     } else {
  7352   00168C  EF68  F00B         	goto	l193
  7353   001690                     l2804:
  7354                           
  7355                           ;dc_motor.c: 81:         *(m->posDutyHighByte)=negDuty;
  7356   001690  EE20 F005          	lfsr	2,5
  7357   001694  5016               	movf	setMotorPWM@m^0,w,c
  7358   001696  26D9               	addwf	fsr2l,f,c
  7359   001698  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7360   00169A  22DA               	addwfc	fsr2h,f,c
  7361   00169C  CFDE F018          	movff	postinc2,??_setMotorPWM
  7362   0016A0  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  7363   0016A4  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  7364   0016A8  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  7365   0016AC  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  7366                           
  7367                           ;dc_motor.c: 82:         *(m->negDutyHighByte)=posDuty;
  7368   0016B0  EE20 F007          	lfsr	2,7
  7369   0016B4  5016               	movf	setMotorPWM@m^0,w,c
  7370   0016B6  26D9               	addwf	fsr2l,f,c
  7371   0016B8  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7372   0016BA  22DA               	addwfc	fsr2h,f,c
  7373   0016BC  CFDE F018          	movff	postinc2,??_setMotorPWM
  7374   0016C0  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  7375   0016C4  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  7376   0016C8  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  7377   0016CC  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  7378   0016D0                     l193:
  7379   0016D0  0012               	return		;funcret
  7380   0016D2                     __end_of_setMotorPWM:
  7381                           	callstack 0
  7382                           
  7383 ;; *************** function ___wmul *****************
  7384 ;; Defined at:
  7385 ;;		line 15 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\Umul16.c"
  7386 ;; Parameters:    Size  Location     Type
  7387 ;;  multiplier      2    8[COMRAM] unsigned int 
  7388 ;;  multiplicand    2   10[COMRAM] unsigned int 
  7389 ;; Auto vars:     Size  Location     Type
  7390 ;;  product         2   12[COMRAM] unsigned int 
  7391 ;; Return value:  Size  Location     Type
  7392 ;;                  2    8[COMRAM] unsigned int 
  7393 ;; Registers used:
  7394 ;;		wreg, status,2, status,0, prodl, prodh
  7395 ;; Tracked objects:
  7396 ;;		On entry : 0/0
  7397 ;;		On exit  : 0/0
  7398 ;;		Unchanged: 0/0
  7399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7400 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7401 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7403 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7404 ;;Total ram usage:        6 bytes
  7405 ;; Hardware stack levels used: 1
  7406 ;; Hardware stack levels required when called: 7
  7407 ;; This function calls:
  7408 ;;		Nothing
  7409 ;; This function is called by:
  7410 ;;		_setMotorPWM
  7411 ;; This function uses a non-reentrant model
  7412 ;;
  7413                           
  7414                           	psect	text34
  7415   0029A6                     __ptext34:
  7416                           	callstack 0
  7417   0029A6                     ___wmul:
  7418                           	callstack 21
  7419   0029A6  5009               	movf	___wmul@multiplier^0,w,c
  7420   0029A8  020B               	mulwf	___wmul@multiplicand^0,c
  7421   0029AA  CFF3 F00D          	movff	prodl,___wmul@product
  7422   0029AE  CFF4 F00E          	movff	prodh,___wmul@product+1
  7423   0029B2  5009               	movf	___wmul@multiplier^0,w,c
  7424   0029B4  020C               	mulwf	(___wmul@multiplicand+1)^0,c
  7425   0029B6  50F3               	movf	243,w,c
  7426   0029B8  260E               	addwf	(___wmul@product+1)^0,f,c
  7427   0029BA  500A               	movf	(___wmul@multiplier+1)^0,w,c
  7428   0029BC  020B               	mulwf	___wmul@multiplicand^0,c
  7429   0029BE  50F3               	movf	243,w,c
  7430   0029C0  260E               	addwf	(___wmul@product+1)^0,f,c
  7431   0029C2  C00D  F009         	movff	___wmul@product,?___wmul
  7432   0029C6  C00E  F00A         	movff	___wmul@product+1,?___wmul+1
  7433   0029CA  0012               	return		;funcret
  7434   0029CC                     __end_of___wmul:
  7435                           	callstack 0
  7436                           
  7437 ;; *************** function ___lwdiv *****************
  7438 ;; Defined at:
  7439 ;;		line 7 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\lwdiv.c"
  7440 ;; Parameters:    Size  Location     Type
  7441 ;;  dividend        2   14[COMRAM] unsigned int 
  7442 ;;  divisor         2   16[COMRAM] unsigned int 
  7443 ;; Auto vars:     Size  Location     Type
  7444 ;;  quotient        2   18[COMRAM] unsigned int 
  7445 ;;  counter         1   20[COMRAM] unsigned char 
  7446 ;; Return value:  Size  Location     Type
  7447 ;;                  2   14[COMRAM] unsigned int 
  7448 ;; Registers used:
  7449 ;;		wreg, status,2, status,0
  7450 ;; Tracked objects:
  7451 ;;		On entry : 0/0
  7452 ;;		On exit  : 0/0
  7453 ;;		Unchanged: 0/0
  7454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7455 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7456 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7458 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7459 ;;Total ram usage:        7 bytes
  7460 ;; Hardware stack levels used: 1
  7461 ;; Hardware stack levels required when called: 7
  7462 ;; This function calls:
  7463 ;;		Nothing
  7464 ;; This function is called by:
  7465 ;;		_setMotorPWM
  7466 ;; This function uses a non-reentrant model
  7467 ;;
  7468                           
  7469                           	psect	text35
  7470   002478                     __ptext35:
  7471                           	callstack 0
  7472   002478                     ___lwdiv:
  7473                           	callstack 21
  7474   002478  0E00               	movlw	0
  7475   00247A  6E14               	movwf	(___lwdiv@quotient+1)^0,c
  7476   00247C  0E00               	movlw	0
  7477   00247E  6E13               	movwf	___lwdiv@quotient^0,c
  7478   002480  5011               	movf	___lwdiv@divisor^0,w,c
  7479   002482  1012               	iorwf	(___lwdiv@divisor+1)^0,w,c
  7480   002484  B4D8               	btfsc	status,2,c
  7481   002486  EF47  F012         	goto	u2031
  7482   00248A  EF49  F012         	goto	u2030
  7483   00248E                     u2031:
  7484   00248E  EF71  F012         	goto	l1204
  7485   002492                     u2030:
  7486   002492  0E01               	movlw	1
  7487   002494  6E15               	movwf	___lwdiv@counter^0,c
  7488   002496  EF51  F012         	goto	l2776
  7489   00249A                     l2774:
  7490   00249A  90D8               	bcf	status,0,c
  7491   00249C  3611               	rlcf	___lwdiv@divisor^0,f,c
  7492   00249E  3612               	rlcf	(___lwdiv@divisor+1)^0,f,c
  7493   0024A0  2A15               	incf	___lwdiv@counter^0,f,c
  7494   0024A2                     l2776:
  7495   0024A2  AE12               	btfss	(___lwdiv@divisor+1)^0,7,c
  7496   0024A4  EF56  F012         	goto	u2041
  7497   0024A8  EF58  F012         	goto	u2040
  7498   0024AC                     u2041:
  7499   0024AC  EF4D  F012         	goto	l2774
  7500   0024B0                     u2040:
  7501   0024B0                     l2778:
  7502   0024B0  90D8               	bcf	status,0,c
  7503   0024B2  3613               	rlcf	___lwdiv@quotient^0,f,c
  7504   0024B4  3614               	rlcf	(___lwdiv@quotient+1)^0,f,c
  7505   0024B6  5011               	movf	___lwdiv@divisor^0,w,c
  7506   0024B8  5C0F               	subwf	___lwdiv@dividend^0,w,c
  7507   0024BA  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  7508   0024BC  5810               	subwfb	(___lwdiv@dividend+1)^0,w,c
  7509   0024BE  A0D8               	btfss	status,0,c
  7510   0024C0  EF64  F012         	goto	u2051
  7511   0024C4  EF66  F012         	goto	u2050
  7512   0024C8                     u2051:
  7513   0024C8  EF6B  F012         	goto	l2786
  7514   0024CC                     u2050:
  7515   0024CC  5011               	movf	___lwdiv@divisor^0,w,c
  7516   0024CE  5E0F               	subwf	___lwdiv@dividend^0,f,c
  7517   0024D0  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  7518   0024D2  5A10               	subwfb	(___lwdiv@dividend+1)^0,f,c
  7519   0024D4  8013               	bsf	___lwdiv@quotient^0,0,c
  7520   0024D6                     l2786:
  7521   0024D6  90D8               	bcf	status,0,c
  7522   0024D8  3212               	rrcf	(___lwdiv@divisor+1)^0,f,c
  7523   0024DA  3211               	rrcf	___lwdiv@divisor^0,f,c
  7524   0024DC  2E15               	decfsz	___lwdiv@counter^0,f,c
  7525   0024DE  EF58  F012         	goto	l2778
  7526   0024E2                     l1204:
  7527   0024E2  C013  F00F         	movff	___lwdiv@quotient,?___lwdiv
  7528   0024E6  C014  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7529   0024EA  0012               	return		;funcret
  7530   0024EC                     __end_of___lwdiv:
  7531                           	callstack 0
  7532                           
  7533 ;; *************** function _Update_RGBC *****************
  7534 ;; Defined at:
  7535 ;;		line 90 in file "color.c"
  7536 ;; Parameters:    Size  Location     Type
  7537 ;;  tempval         2   19[COMRAM] PTR struct RGB_val
  7538 ;;		 -> main@initial_color(8), 
  7539 ;; Auto vars:     Size  Location     Type
  7540 ;;		None
  7541 ;; Return value:  Size  Location     Type
  7542 ;;                  1    wreg      void 
  7543 ;; Registers used:
  7544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7545 ;; Tracked objects:
  7546 ;;		On entry : 0/0
  7547 ;;		On exit  : 0/0
  7548 ;;		Unchanged: 0/0
  7549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7550 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7553 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7554 ;;Total ram usage:        2 bytes
  7555 ;; Hardware stack levels used: 1
  7556 ;; Hardware stack levels required when called: 10
  7557 ;; This function calls:
  7558 ;;		_color_read_Blue
  7559 ;;		_color_read_Clear
  7560 ;;		_color_read_Green
  7561 ;;		_color_read_Red
  7562 ;; This function is called by:
  7563 ;;		_main
  7564 ;; This function uses a non-reentrant model
  7565 ;;
  7566                           
  7567                           	psect	text36
  7568   0025C8                     __ptext36:
  7569                           	callstack 0
  7570   0025C8                     _Update_RGBC:
  7571                           	callstack 20
  7572   0025C8                     
  7573                           ;color.c: 92:     tempval->R = color_read_Red();
  7574   0025C8  EC13  F013         	call	_color_read_Red	;wreg free
  7575   0025CC  C014  FFD9         	movff	Update_RGBC@tempval,fsr2l
  7576   0025D0  C015  FFDA         	movff	Update_RGBC@tempval+1,fsr2h
  7577   0025D4  C00D  FFDE         	movff	?_color_read_Red,postinc2
  7578   0025D8  C00E  FFDD         	movff	?_color_read_Red+1,postdec2
  7579                           
  7580                           ;color.c: 93:     tempval->G = color_read_Green();
  7581   0025DC  EC3B  F013         	call	_color_read_Green	;wreg free
  7582   0025E0  EE20 F002          	lfsr	2,2
  7583   0025E4  5014               	movf	Update_RGBC@tempval^0,w,c
  7584   0025E6  26D9               	addwf	fsr2l,f,c
  7585   0025E8  5015               	movf	(Update_RGBC@tempval+1)^0,w,c
  7586   0025EA  22DA               	addwfc	fsr2h,f,c
  7587   0025EC  C00D  FFDE         	movff	?_color_read_Green,postinc2
  7588   0025F0  C00E  FFDD         	movff	?_color_read_Green+1,postdec2
  7589                           
  7590                           ;color.c: 94:     tempval->B = color_read_Blue();
  7591   0025F4  EC8B  F013         	call	_color_read_Blue	;wreg free
  7592   0025F8  EE20 F004          	lfsr	2,4
  7593   0025FC  5014               	movf	Update_RGBC@tempval^0,w,c
  7594   0025FE  26D9               	addwf	fsr2l,f,c
  7595   002600  5015               	movf	(Update_RGBC@tempval+1)^0,w,c
  7596   002602  22DA               	addwfc	fsr2h,f,c
  7597   002604  C00D  FFDE         	movff	?_color_read_Blue,postinc2
  7598   002608  C00E  FFDD         	movff	?_color_read_Blue+1,postdec2
  7599                           
  7600                           ;color.c: 95:     tempval->C = color_read_Clear();
  7601   00260C  EC63  F013         	call	_color_read_Clear	;wreg free
  7602   002610  EE20 F006          	lfsr	2,6
  7603   002614  5014               	movf	Update_RGBC@tempval^0,w,c
  7604   002616  26D9               	addwf	fsr2l,f,c
  7605   002618  5015               	movf	(Update_RGBC@tempval+1)^0,w,c
  7606   00261A  22DA               	addwfc	fsr2h,f,c
  7607   00261C  C00D  FFDE         	movff	?_color_read_Clear,postinc2
  7608   002620  C00E  FFDD         	movff	?_color_read_Clear+1,postdec2
  7609   002624  0012               	return		;funcret
  7610   002626                     __end_of_Update_RGBC:
  7611                           	callstack 0
  7612                           
  7613 ;; *************** function _color_read_Red *****************
  7614 ;; Defined at:
  7615 ;;		line 32 in file "color.c"
  7616 ;; Parameters:    Size  Location     Type
  7617 ;;		None
  7618 ;; Auto vars:     Size  Location     Type
  7619 ;;  tmp             2   17[COMRAM] unsigned int 
  7620 ;; Return value:  Size  Location     Type
  7621 ;;                  2   12[COMRAM] unsigned int 
  7622 ;; Registers used:
  7623 ;;		wreg, status,2, status,0, cstack
  7624 ;; Tracked objects:
  7625 ;;		On entry : 0/0
  7626 ;;		On exit  : 0/0
  7627 ;;		Unchanged: 0/0
  7628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7629 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7630 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7631 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7632 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7633 ;;Total ram usage:        7 bytes
  7634 ;; Hardware stack levels used: 1
  7635 ;; Hardware stack levels required when called: 9
  7636 ;; This function calls:
  7637 ;;		_I2C_2_Master_Read
  7638 ;;		_I2C_2_Master_RepStart
  7639 ;;		_I2C_2_Master_Start
  7640 ;;		_I2C_2_Master_Stop
  7641 ;;		_I2C_2_Master_Write
  7642 ;; This function is called by:
  7643 ;;		_Update_RGBC
  7644 ;; This function uses a non-reentrant model
  7645 ;;
  7646                           
  7647                           	psect	text37
  7648   002626                     __ptext37:
  7649                           	callstack 0
  7650   002626                     _color_read_Red:
  7651                           	callstack 20
  7652   002626                     
  7653                           ;color.c: 34:  unsigned int tmp;;color.c: 35:  I2C_2_Master_Start();
  7654   002626  EC96  F015         	call	_I2C_2_Master_Start	;wreg free
  7655                           
  7656                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x00);
  7657   00262A  0E52               	movlw	82
  7658   00262C  EC80  F015         	call	_I2C_2_Master_Write
  7659                           
  7660                           ;color.c: 37:  I2C_2_Master_Write(0xA0 | 0x16);
  7661   002630  0EB6               	movlw	182
  7662   002632  EC80  F015         	call	_I2C_2_Master_Write
  7663                           
  7664                           ;color.c: 38:  I2C_2_Master_RepStart();
  7665   002636  EC8C  F015         	call	_I2C_2_Master_RepStart	;wreg free
  7666                           
  7667                           ;color.c: 39:  I2C_2_Master_Write(0x52 | 0x01);
  7668   00263A  0E53               	movlw	83
  7669   00263C  EC80  F015         	call	_I2C_2_Master_Write
  7670                           
  7671                           ;color.c: 40:  tmp=I2C_2_Master_Read(1);
  7672   002640  0E01               	movlw	1
  7673   002642  EC26  F014         	call	_I2C_2_Master_Read
  7674   002646  6E0F               	movwf	??_color_read_Red^0,c
  7675   002648  500F               	movf	??_color_read_Red^0,w,c
  7676   00264A  6E12               	movwf	color_read_Red@tmp^0,c
  7677   00264C  6A13               	clrf	(color_read_Red@tmp+1)^0,c
  7678                           
  7679                           ;color.c: 41:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7680   00264E  0E00               	movlw	0
  7681   002650  EC26  F014         	call	_I2C_2_Master_Read
  7682   002654  6E0F               	movwf	??_color_read_Red^0,c
  7683   002656  500F               	movf	??_color_read_Red^0,w,c
  7684   002658  6E11               	movwf	(??_color_read_Red+2)^0,c
  7685   00265A  6A10               	clrf	(??_color_read_Red+1)^0,c
  7686   00265C  5012               	movf	color_read_Red@tmp^0,w,c
  7687   00265E  1010               	iorwf	(??_color_read_Red+1)^0,w,c
  7688   002660  6E12               	movwf	color_read_Red@tmp^0,c
  7689   002662  5013               	movf	(color_read_Red@tmp+1)^0,w,c
  7690   002664  1011               	iorwf	(??_color_read_Red+2)^0,w,c
  7691   002666  6E13               	movwf	(color_read_Red@tmp+1)^0,c
  7692                           
  7693                           ;color.c: 42:  I2C_2_Master_Stop();
  7694   002668  EC91  F015         	call	_I2C_2_Master_Stop	;wreg free
  7695   00266C                     
  7696                           ;color.c: 43:  return tmp;
  7697   00266C  C012  F00D         	movff	color_read_Red@tmp,?_color_read_Red
  7698   002670  C013  F00E         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  7699   002674  0012               	return		;funcret
  7700   002676                     __end_of_color_read_Red:
  7701                           	callstack 0
  7702                           
  7703 ;; *************** function _color_read_Green *****************
  7704 ;; Defined at:
  7705 ;;		line 46 in file "color.c"
  7706 ;; Parameters:    Size  Location     Type
  7707 ;;		None
  7708 ;; Auto vars:     Size  Location     Type
  7709 ;;  tmp             2   17[COMRAM] unsigned int 
  7710 ;; Return value:  Size  Location     Type
  7711 ;;                  2   12[COMRAM] unsigned int 
  7712 ;; Registers used:
  7713 ;;		wreg, status,2, status,0, cstack
  7714 ;; Tracked objects:
  7715 ;;		On entry : 0/0
  7716 ;;		On exit  : 0/0
  7717 ;;		Unchanged: 0/0
  7718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7719 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7720 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7721 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7722 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7723 ;;Total ram usage:        7 bytes
  7724 ;; Hardware stack levels used: 1
  7725 ;; Hardware stack levels required when called: 9
  7726 ;; This function calls:
  7727 ;;		_I2C_2_Master_Read
  7728 ;;		_I2C_2_Master_RepStart
  7729 ;;		_I2C_2_Master_Start
  7730 ;;		_I2C_2_Master_Stop
  7731 ;;		_I2C_2_Master_Write
  7732 ;; This function is called by:
  7733 ;;		_Update_RGBC
  7734 ;; This function uses a non-reentrant model
  7735 ;;
  7736                           
  7737                           	psect	text38
  7738   002676                     __ptext38:
  7739                           	callstack 0
  7740   002676                     _color_read_Green:
  7741                           	callstack 20
  7742   002676                     
  7743                           ;color.c: 48:  unsigned int tmp;;color.c: 49:  I2C_2_Master_Start();
  7744   002676  EC96  F015         	call	_I2C_2_Master_Start	;wreg free
  7745                           
  7746                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x00);
  7747   00267A  0E52               	movlw	82
  7748   00267C  EC80  F015         	call	_I2C_2_Master_Write
  7749                           
  7750                           ;color.c: 51:  I2C_2_Master_Write(0xA0 | 0x18);
  7751   002680  0EB8               	movlw	184
  7752   002682  EC80  F015         	call	_I2C_2_Master_Write
  7753                           
  7754                           ;color.c: 52:  I2C_2_Master_RepStart();
  7755   002686  EC8C  F015         	call	_I2C_2_Master_RepStart	;wreg free
  7756                           
  7757                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x01);
  7758   00268A  0E53               	movlw	83
  7759   00268C  EC80  F015         	call	_I2C_2_Master_Write
  7760                           
  7761                           ;color.c: 54:  tmp=I2C_2_Master_Read(1);
  7762   002690  0E01               	movlw	1
  7763   002692  EC26  F014         	call	_I2C_2_Master_Read
  7764   002696  6E0F               	movwf	??_color_read_Green^0,c
  7765   002698  500F               	movf	??_color_read_Green^0,w,c
  7766   00269A  6E12               	movwf	color_read_Green@tmp^0,c
  7767   00269C  6A13               	clrf	(color_read_Green@tmp+1)^0,c
  7768                           
  7769                           ;color.c: 55:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7770   00269E  0E00               	movlw	0
  7771   0026A0  EC26  F014         	call	_I2C_2_Master_Read
  7772   0026A4  6E0F               	movwf	??_color_read_Green^0,c
  7773   0026A6  500F               	movf	??_color_read_Green^0,w,c
  7774   0026A8  6E11               	movwf	(??_color_read_Green+2)^0,c
  7775   0026AA  6A10               	clrf	(??_color_read_Green+1)^0,c
  7776   0026AC  5012               	movf	color_read_Green@tmp^0,w,c
  7777   0026AE  1010               	iorwf	(??_color_read_Green+1)^0,w,c
  7778   0026B0  6E12               	movwf	color_read_Green@tmp^0,c
  7779   0026B2  5013               	movf	(color_read_Green@tmp+1)^0,w,c
  7780   0026B4  1011               	iorwf	(??_color_read_Green+2)^0,w,c
  7781   0026B6  6E13               	movwf	(color_read_Green@tmp+1)^0,c
  7782                           
  7783                           ;color.c: 56:  I2C_2_Master_Stop();
  7784   0026B8  EC91  F015         	call	_I2C_2_Master_Stop	;wreg free
  7785   0026BC                     
  7786                           ;color.c: 57:  return tmp;
  7787   0026BC  C012  F00D         	movff	color_read_Green@tmp,?_color_read_Green
  7788   0026C0  C013  F00E         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  7789   0026C4  0012               	return		;funcret
  7790   0026C6                     __end_of_color_read_Green:
  7791                           	callstack 0
  7792                           
  7793 ;; *************** function _color_read_Clear *****************
  7794 ;; Defined at:
  7795 ;;		line 74 in file "color.c"
  7796 ;; Parameters:    Size  Location     Type
  7797 ;;		None
  7798 ;; Auto vars:     Size  Location     Type
  7799 ;;  tmp             2   17[COMRAM] unsigned int 
  7800 ;; Return value:  Size  Location     Type
  7801 ;;                  2   12[COMRAM] unsigned int 
  7802 ;; Registers used:
  7803 ;;		wreg, status,2, status,0, cstack
  7804 ;; Tracked objects:
  7805 ;;		On entry : 0/0
  7806 ;;		On exit  : 0/0
  7807 ;;		Unchanged: 0/0
  7808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7809 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7810 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7811 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7812 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7813 ;;Total ram usage:        7 bytes
  7814 ;; Hardware stack levels used: 1
  7815 ;; Hardware stack levels required when called: 9
  7816 ;; This function calls:
  7817 ;;		_I2C_2_Master_Read
  7818 ;;		_I2C_2_Master_RepStart
  7819 ;;		_I2C_2_Master_Start
  7820 ;;		_I2C_2_Master_Stop
  7821 ;;		_I2C_2_Master_Write
  7822 ;; This function is called by:
  7823 ;;		_Update_RGBC
  7824 ;; This function uses a non-reentrant model
  7825 ;;
  7826                           
  7827                           	psect	text39
  7828   0026C6                     __ptext39:
  7829                           	callstack 0
  7830   0026C6                     _color_read_Clear:
  7831                           	callstack 20
  7832   0026C6                     
  7833                           ;color.c: 76:  unsigned int tmp;;color.c: 77:  I2C_2_Master_Start();
  7834   0026C6  EC96  F015         	call	_I2C_2_Master_Start	;wreg free
  7835                           
  7836                           ;color.c: 78:  I2C_2_Master_Write(0x52 | 0x00);
  7837   0026CA  0E52               	movlw	82
  7838   0026CC  EC80  F015         	call	_I2C_2_Master_Write
  7839                           
  7840                           ;color.c: 79:  I2C_2_Master_Write(0xA0 | 0x14);
  7841   0026D0  0EB4               	movlw	180
  7842   0026D2  EC80  F015         	call	_I2C_2_Master_Write
  7843                           
  7844                           ;color.c: 80:  I2C_2_Master_RepStart();
  7845   0026D6  EC8C  F015         	call	_I2C_2_Master_RepStart	;wreg free
  7846                           
  7847                           ;color.c: 81:  I2C_2_Master_Write(0x52 | 0x01);
  7848   0026DA  0E53               	movlw	83
  7849   0026DC  EC80  F015         	call	_I2C_2_Master_Write
  7850                           
  7851                           ;color.c: 82:  tmp=I2C_2_Master_Read(1);
  7852   0026E0  0E01               	movlw	1
  7853   0026E2  EC26  F014         	call	_I2C_2_Master_Read
  7854   0026E6  6E0F               	movwf	??_color_read_Clear^0,c
  7855   0026E8  500F               	movf	??_color_read_Clear^0,w,c
  7856   0026EA  6E12               	movwf	color_read_Clear@tmp^0,c
  7857   0026EC  6A13               	clrf	(color_read_Clear@tmp+1)^0,c
  7858                           
  7859                           ;color.c: 83:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7860   0026EE  0E00               	movlw	0
  7861   0026F0  EC26  F014         	call	_I2C_2_Master_Read
  7862   0026F4  6E0F               	movwf	??_color_read_Clear^0,c
  7863   0026F6  500F               	movf	??_color_read_Clear^0,w,c
  7864   0026F8  6E11               	movwf	(??_color_read_Clear+2)^0,c
  7865   0026FA  6A10               	clrf	(??_color_read_Clear+1)^0,c
  7866   0026FC  5012               	movf	color_read_Clear@tmp^0,w,c
  7867   0026FE  1010               	iorwf	(??_color_read_Clear+1)^0,w,c
  7868   002700  6E12               	movwf	color_read_Clear@tmp^0,c
  7869   002702  5013               	movf	(color_read_Clear@tmp+1)^0,w,c
  7870   002704  1011               	iorwf	(??_color_read_Clear+2)^0,w,c
  7871   002706  6E13               	movwf	(color_read_Clear@tmp+1)^0,c
  7872                           
  7873                           ;color.c: 84:  I2C_2_Master_Stop();
  7874   002708  EC91  F015         	call	_I2C_2_Master_Stop	;wreg free
  7875   00270C                     
  7876                           ;color.c: 85:  return tmp;
  7877   00270C  C012  F00D         	movff	color_read_Clear@tmp,?_color_read_Clear
  7878   002710  C013  F00E         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  7879   002714  0012               	return		;funcret
  7880   002716                     __end_of_color_read_Clear:
  7881                           	callstack 0
  7882                           
  7883 ;; *************** function _color_read_Blue *****************
  7884 ;; Defined at:
  7885 ;;		line 60 in file "color.c"
  7886 ;; Parameters:    Size  Location     Type
  7887 ;;		None
  7888 ;; Auto vars:     Size  Location     Type
  7889 ;;  tmp             2   17[COMRAM] unsigned int 
  7890 ;; Return value:  Size  Location     Type
  7891 ;;                  2   12[COMRAM] unsigned int 
  7892 ;; Registers used:
  7893 ;;		wreg, status,2, status,0, cstack
  7894 ;; Tracked objects:
  7895 ;;		On entry : 0/0
  7896 ;;		On exit  : 0/0
  7897 ;;		Unchanged: 0/0
  7898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7899 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7900 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7901 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7902 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7903 ;;Total ram usage:        7 bytes
  7904 ;; Hardware stack levels used: 1
  7905 ;; Hardware stack levels required when called: 9
  7906 ;; This function calls:
  7907 ;;		_I2C_2_Master_Read
  7908 ;;		_I2C_2_Master_RepStart
  7909 ;;		_I2C_2_Master_Start
  7910 ;;		_I2C_2_Master_Stop
  7911 ;;		_I2C_2_Master_Write
  7912 ;; This function is called by:
  7913 ;;		_Update_RGBC
  7914 ;; This function uses a non-reentrant model
  7915 ;;
  7916                           
  7917                           	psect	text40
  7918   002716                     __ptext40:
  7919                           	callstack 0
  7920   002716                     _color_read_Blue:
  7921                           	callstack 20
  7922   002716                     
  7923                           ;color.c: 62:  unsigned int tmp;;color.c: 63:  I2C_2_Master_Start();
  7924   002716  EC96  F015         	call	_I2C_2_Master_Start	;wreg free
  7925                           
  7926                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x00);
  7927   00271A  0E52               	movlw	82
  7928   00271C  EC80  F015         	call	_I2C_2_Master_Write
  7929                           
  7930                           ;color.c: 65:  I2C_2_Master_Write(0xA0 | 0x1A);
  7931   002720  0EBA               	movlw	186
  7932   002722  EC80  F015         	call	_I2C_2_Master_Write
  7933                           
  7934                           ;color.c: 66:  I2C_2_Master_RepStart();
  7935   002726  EC8C  F015         	call	_I2C_2_Master_RepStart	;wreg free
  7936                           
  7937                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x01);
  7938   00272A  0E53               	movlw	83
  7939   00272C  EC80  F015         	call	_I2C_2_Master_Write
  7940                           
  7941                           ;color.c: 68:  tmp=I2C_2_Master_Read(1);
  7942   002730  0E01               	movlw	1
  7943   002732  EC26  F014         	call	_I2C_2_Master_Read
  7944   002736  6E0F               	movwf	??_color_read_Blue^0,c
  7945   002738  500F               	movf	??_color_read_Blue^0,w,c
  7946   00273A  6E12               	movwf	color_read_Blue@tmp^0,c
  7947   00273C  6A13               	clrf	(color_read_Blue@tmp+1)^0,c
  7948                           
  7949                           ;color.c: 69:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7950   00273E  0E00               	movlw	0
  7951   002740  EC26  F014         	call	_I2C_2_Master_Read
  7952   002744  6E0F               	movwf	??_color_read_Blue^0,c
  7953   002746  500F               	movf	??_color_read_Blue^0,w,c
  7954   002748  6E11               	movwf	(??_color_read_Blue+2)^0,c
  7955   00274A  6A10               	clrf	(??_color_read_Blue+1)^0,c
  7956   00274C  5012               	movf	color_read_Blue@tmp^0,w,c
  7957   00274E  1010               	iorwf	(??_color_read_Blue+1)^0,w,c
  7958   002750  6E12               	movwf	color_read_Blue@tmp^0,c
  7959   002752  5013               	movf	(color_read_Blue@tmp+1)^0,w,c
  7960   002754  1011               	iorwf	(??_color_read_Blue+2)^0,w,c
  7961   002756  6E13               	movwf	(color_read_Blue@tmp+1)^0,c
  7962                           
  7963                           ;color.c: 70:  I2C_2_Master_Stop();
  7964   002758  EC91  F015         	call	_I2C_2_Master_Stop	;wreg free
  7965   00275C                     
  7966                           ;color.c: 71:  return tmp;
  7967   00275C  C012  F00D         	movff	color_read_Blue@tmp,?_color_read_Blue
  7968   002760  C013  F00E         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  7969   002764  0012               	return		;funcret
  7970   002766                     __end_of_color_read_Blue:
  7971                           	callstack 0
  7972                           
  7973 ;; *************** function _I2C_2_Master_RepStart *****************
  7974 ;; Defined at:
  7975 ;;		line 33 in file "i2c.c"
  7976 ;; Parameters:    Size  Location     Type
  7977 ;;		None
  7978 ;; Auto vars:     Size  Location     Type
  7979 ;;		None
  7980 ;; Return value:  Size  Location     Type
  7981 ;;                  1    wreg      void 
  7982 ;; Registers used:
  7983 ;;		wreg, status,2, status,0, cstack
  7984 ;; Tracked objects:
  7985 ;;		On entry : 0/0
  7986 ;;		On exit  : 0/0
  7987 ;;		Unchanged: 0/0
  7988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7993 ;;Total ram usage:        0 bytes
  7994 ;; Hardware stack levels used: 1
  7995 ;; Hardware stack levels required when called: 8
  7996 ;; This function calls:
  7997 ;;		_I2C_2_Master_Idle
  7998 ;; This function is called by:
  7999 ;;		_color_read_Red
  8000 ;;		_color_read_Green
  8001 ;;		_color_read_Blue
  8002 ;;		_color_read_Clear
  8003 ;; This function uses a non-reentrant model
  8004 ;;
  8005                           
  8006                           	psect	text41
  8007   002B18                     __ptext41:
  8008                           	callstack 0
  8009   002B18                     _I2C_2_Master_RepStart:
  8010                           	callstack 20
  8011   002B18                     
  8012                           ;i2c.c: 35:   I2C_2_Master_Idle();
  8013   002B18  ECAB  F014         	call	_I2C_2_Master_Idle	;wreg free
  8014   002B1C                     
  8015                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  8016   002B1C  010E               	movlb	14	; () banked
  8017   002B1E  83DA               	bsf	218,1,b	;volatile
  8018   002B20                     
  8019                           ; BSR set to: 14
  8020   002B20  0012               	return		;funcret
  8021   002B22                     __end_of_I2C_2_Master_RepStart:
  8022                           	callstack 0
  8023                           
  8024 ;; *************** function _I2C_2_Master_Read *****************
  8025 ;; Defined at:
  8026 ;;		line 51 in file "i2c.c"
  8027 ;; Parameters:    Size  Location     Type
  8028 ;;  ack             1    wreg     unsigned char 
  8029 ;; Auto vars:     Size  Location     Type
  8030 ;;  ack             1   10[COMRAM] unsigned char 
  8031 ;;  tmp             1   11[COMRAM] unsigned char 
  8032 ;; Return value:  Size  Location     Type
  8033 ;;                  1    wreg      unsigned char 
  8034 ;; Registers used:
  8035 ;;		wreg, status,2, status,0, cstack
  8036 ;; Tracked objects:
  8037 ;;		On entry : 0/0
  8038 ;;		On exit  : 0/0
  8039 ;;		Unchanged: 0/0
  8040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8042 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8043 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8044 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8045 ;;Total ram usage:        3 bytes
  8046 ;; Hardware stack levels used: 1
  8047 ;; Hardware stack levels required when called: 8
  8048 ;; This function calls:
  8049 ;;		_I2C_2_Master_Idle
  8050 ;; This function is called by:
  8051 ;;		_color_read_Red
  8052 ;;		_color_read_Green
  8053 ;;		_color_read_Blue
  8054 ;;		_color_read_Clear
  8055 ;; This function uses a non-reentrant model
  8056 ;;
  8057                           
  8058                           	psect	text42
  8059   00284C                     __ptext42:
  8060                           	callstack 0
  8061   00284C                     _I2C_2_Master_Read:
  8062                           	callstack 20
  8063                           
  8064                           ; BSR set to: 14
  8065                           ;incstack = 0
  8066                           ;I2C_2_Master_Read@ack stored from wreg
  8067   00284C  6E0B               	movwf	I2C_2_Master_Read@ack^0,c
  8068   00284E                     
  8069                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  8070   00284E  ECAB  F014         	call	_I2C_2_Master_Idle	;wreg free
  8071   002852                     
  8072                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  8073   002852  010E               	movlb	14	; () banked
  8074   002854  87DA               	bsf	218,3,b	;volatile
  8075                           
  8076                           ;i2c.c: 56:   I2C_2_Master_Idle();
  8077   002856  ECAB  F014         	call	_I2C_2_Master_Idle	;wreg free
  8078   00285A                     
  8079                           ;i2c.c: 57:   tmp = SSP2BUF;
  8080   00285A  CED5 F00C          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  8081                           
  8082                           ;i2c.c: 58:   I2C_2_Master_Idle();
  8083   00285E  ECAB  F014         	call	_I2C_2_Master_Idle	;wreg free
  8084   002862                     
  8085                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  8086   002862  500B               	movf	I2C_2_Master_Read@ack^0,w,c
  8087   002864  B4D8               	btfsc	status,2,c
  8088   002866  EF37  F014         	goto	u2401
  8089   00286A  EF3B  F014         	goto	u2400
  8090   00286E                     u2401:
  8091   00286E  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  8092   002870  2A0A               	incf	??_I2C_2_Master_Read^0,f,c
  8093   002872  EF3C  F014         	goto	u2418
  8094   002876                     u2400:
  8095   002876  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  8096   002878                     u2418:
  8097   002878  3A0A               	swapf	??_I2C_2_Master_Read^0,f,c
  8098   00287A  460A               	rlncf	??_I2C_2_Master_Read^0,f,c
  8099   00287C  010E               	movlb	14	; () banked
  8100   00287E  51DA               	movf	218,w,b	;volatile
  8101   002880  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  8102   002882  0BDF               	andlw	-33
  8103   002884  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  8104   002886  6FDA               	movwf	218,b	;volatile
  8105   002888                     
  8106                           ; BSR set to: 14
  8107                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  8108   002888  89DA               	bsf	218,4,b	;volatile
  8109   00288A                     
  8110                           ; BSR set to: 14
  8111                           ;i2c.c: 61:   return tmp;
  8112   00288A  500C               	movf	I2C_2_Master_Read@tmp^0,w,c
  8113   00288C                     
  8114                           ; BSR set to: 14
  8115   00288C  0012               	return		;funcret
  8116   00288E                     __end_of_I2C_2_Master_Read:
  8117                           	callstack 0
  8118                           
  8119 ;; *************** function _Timer0_init *****************
  8120 ;; Defined at:
  8121 ;;		line 7 in file "timers.c"
  8122 ;; Parameters:    Size  Location     Type
  8123 ;;		None
  8124 ;; Auto vars:     Size  Location     Type
  8125 ;;		None
  8126 ;; Return value:  Size  Location     Type
  8127 ;;                  1    wreg      void 
  8128 ;; Registers used:
  8129 ;;		wreg, status,2
  8130 ;; Tracked objects:
  8131 ;;		On entry : 0/0
  8132 ;;		On exit  : 0/0
  8133 ;;		Unchanged: 0/0
  8134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8139 ;;Total ram usage:        0 bytes
  8140 ;; Hardware stack levels used: 1
  8141 ;; Hardware stack levels required when called: 7
  8142 ;; This function calls:
  8143 ;;		Nothing
  8144 ;; This function is called by:
  8145 ;;		_main
  8146 ;; This function uses a non-reentrant model
  8147 ;;
  8148                           
  8149                           	psect	text43
  8150   002A34                     __ptext43:
  8151                           	callstack 0
  8152   002A34                     _Timer0_init:
  8153                           	callstack 23
  8154   002A34                     
  8155                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  8156   002A34  50D6               	movf	214,w,c	;volatile
  8157   002A36  0B1F               	andlw	-225
  8158   002A38  0940               	iorlw	64
  8159   002A3A  6ED6               	movwf	214,c	;volatile
  8160   002A3C                     
  8161                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  8162   002A3C  88D6               	bsf	214,4,c	;volatile
  8163                           
  8164                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
  8165   002A3E  50D6               	movf	214,w,c	;volatile
  8166   002A40  0BF0               	andlw	-16
  8167   002A42  0908               	iorlw	8
  8168   002A44  6ED6               	movwf	214,c	;volatile
  8169   002A46                     
  8170                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
  8171   002A46  88D5               	bsf	213,4,c	;volatile
  8172                           
  8173                           ;timers.c: 15:     TMR0H = 0b00001011;
  8174   002A48  0E0B               	movlw	11
  8175   002A4A  6ED4               	movwf	212,c	;volatile
  8176                           
  8177                           ;timers.c: 16:     TMR0L = 0b11011011;
  8178   002A4C  0EDB               	movlw	219
  8179   002A4E  6ED3               	movwf	211,c	;volatile
  8180   002A50                     
  8181                           ;timers.c: 17:     T0CON0bits.T0EN=1;
  8182   002A50  8ED5               	bsf	213,7,c	;volatile
  8183   002A52  0012               	return		;funcret
  8184   002A54                     __end_of_Timer0_init:
  8185                           	callstack 0
  8186                           
  8187 ;; *************** function _LED_init *****************
  8188 ;; Defined at:
  8189 ;;		line 7 in file "LED_Buttons.c"
  8190 ;; Parameters:    Size  Location     Type
  8191 ;;		None
  8192 ;; Auto vars:     Size  Location     Type
  8193 ;;		None
  8194 ;; Return value:  Size  Location     Type
  8195 ;;                  1    wreg      void 
  8196 ;; Registers used:
  8197 ;;		None
  8198 ;; Tracked objects:
  8199 ;;		On entry : 0/0
  8200 ;;		On exit  : 0/0
  8201 ;;		Unchanged: 0/0
  8202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8207 ;;Total ram usage:        0 bytes
  8208 ;; Hardware stack levels used: 1
  8209 ;; Hardware stack levels required when called: 7
  8210 ;; This function calls:
  8211 ;;		Nothing
  8212 ;; This function is called by:
  8213 ;;		_main
  8214 ;; This function uses a non-reentrant model
  8215 ;;
  8216                           
  8217                           	psect	text44
  8218   002AB2                     __ptext44:
  8219                           	callstack 0
  8220   002AB2                     _LED_init:
  8221                           	callstack 23
  8222   002AB2                     
  8223                           ;LED_Buttons.c: 8:     TRISGbits.TRISG1 = 0;
  8224   002AB2  9287               	bcf	135,1,c	;volatile
  8225                           
  8226                           ;LED_Buttons.c: 9:     TRISAbits.TRISA4 = 0;
  8227   002AB4  9881               	bcf	129,4,c	;volatile
  8228                           
  8229                           ;LED_Buttons.c: 10:     TRISFbits.TRISF7 = 0;
  8230   002AB6  9E86               	bcf	134,7,c	;volatile
  8231                           
  8232                           ;LED_Buttons.c: 12:     LATHbits.LATH3 = 0;
  8233   002AB8  9680               	bcf	128,3,c	;volatile
  8234                           
  8235                           ;LED_Buttons.c: 13:     TRISHbits.TRISH3 = 0;
  8236   002ABA  9688               	bcf	136,3,c	;volatile
  8237                           
  8238                           ;LED_Buttons.c: 15:     LATDbits.LATD7 = 0;
  8239   002ABC  9E7C               	bcf	124,7,c	;volatile
  8240                           
  8241                           ;LED_Buttons.c: 16:     TRISDbits.TRISD7 = 0;
  8242   002ABE  9E84               	bcf	132,7,c	;volatile
  8243                           
  8244                           ;LED_Buttons.c: 19:     TRISFbits.TRISF2=1;
  8245   002AC0  8486               	bsf	134,2,c	;volatile
  8246                           
  8247                           ;LED_Buttons.c: 20:     TRISFbits.TRISF3=1;
  8248   002AC2  8686               	bsf	134,3,c	;volatile
  8249                           
  8250                           ;LED_Buttons.c: 21:     ANSELFbits.ANSELF2=0;
  8251   002AC4  010E               	movlb	14	; () banked
  8252   002AC6  95B4               	bcf	180,2,b	;volatile
  8253                           
  8254                           ;LED_Buttons.c: 22:     ANSELFbits.ANSELF3=0;
  8255   002AC8  97B4               	bcf	180,3,b	;volatile
  8256   002ACA                     
  8257                           ; BSR set to: 14
  8258   002ACA  0012               	return		;funcret
  8259   002ACC                     __end_of_LED_init:
  8260                           	callstack 0
  8261                           
  8262 ;; *************** function _Interrupts_init *****************
  8263 ;; Defined at:
  8264 ;;		line 12 in file "interrupts.c"
  8265 ;; Parameters:    Size  Location     Type
  8266 ;;		None
  8267 ;; Auto vars:     Size  Location     Type
  8268 ;;		None
  8269 ;; Return value:  Size  Location     Type
  8270 ;;                  1    wreg      void 
  8271 ;; Registers used:
  8272 ;;		wreg, status,2, status,0, cstack
  8273 ;; Tracked objects:
  8274 ;;		On entry : 0/0
  8275 ;;		On exit  : 0/0
  8276 ;;		Unchanged: 0/0
  8277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8282 ;;Total ram usage:        0 bytes
  8283 ;; Hardware stack levels used: 1
  8284 ;; Hardware stack levels required when called: 12
  8285 ;; This function calls:
  8286 ;;		_interrupts_clear_colorclick
  8287 ;; This function is called by:
  8288 ;;		_main
  8289 ;; This function uses a non-reentrant model
  8290 ;;
  8291                           
  8292                           	psect	text45
  8293   002A94                     __ptext45:
  8294                           	callstack 0
  8295   002A94                     _Interrupts_init:
  8296                           	callstack 18
  8297   002A94                     
  8298                           ;interrupts.c: 18:     TRISBbits.TRISB1 = 1;
  8299   002A94  8282               	bsf	130,1,c	;volatile
  8300                           
  8301                           ;interrupts.c: 19:     ANSELBbits.ANSELB1 = 0;
  8302   002A96  010E               	movlb	14	; () banked
  8303   002A98  939A               	bcf	154,1,b	;volatile
  8304                           
  8305                           ;interrupts.c: 21:     PIE0bits.INT1IE = 1;
  8306   002A9A  8329               	bsf	41,1,b	;volatile
  8307                           
  8308                           ;interrupts.c: 22:     IPR0bits.INT1IP = 1;
  8309   002A9C  831F               	bsf	31,1,b	;volatile
  8310                           
  8311                           ;interrupts.c: 23:     INTCONbits.INT1EDG = 0;
  8312   002A9E  92F2               	bcf	242,1,c	;volatile
  8313                           
  8314                           ;interrupts.c: 26:     PIE0bits.TMR0IE=1;
  8315   002AA0  8B29               	bsf	41,5,b	;volatile
  8316                           
  8317                           ;interrupts.c: 27:     IPR0bits.TMR0IP = 0;
  8318   002AA2  9B1F               	bcf	31,5,b	;volatile
  8319                           
  8320                           ;interrupts.c: 30:     PIE4bits.RC4IE=1;
  8321   002AA4  872D               	bsf	45,3,b	;volatile
  8322   002AA6                     
  8323                           ; BSR set to: 14
  8324                           ;interrupts.c: 32:     interrupts_clear_colorclick();
  8325   002AA6  EC66  F015         	call	_interrupts_clear_colorclick	;wreg free
  8326   002AAA                     
  8327                           ;interrupts.c: 34:     INTCONbits.IPEN = 1;
  8328   002AAA  8AF2               	bsf	242,5,c	;volatile
  8329   002AAC                     
  8330                           ;interrupts.c: 35:     INTCONbits.PEIE = 1;
  8331   002AAC  8CF2               	bsf	242,6,c	;volatile
  8332   002AAE                     
  8333                           ;interrupts.c: 36:     INTCONbits.GIE=1;
  8334   002AAE  8EF2               	bsf	242,7,c	;volatile
  8335   002AB0  0012               	return		;funcret
  8336   002AB2                     __end_of_Interrupts_init:
  8337                           	callstack 0
  8338                           
  8339 ;; *************** function _interrupts_clear_colorclick *****************
  8340 ;; Defined at:
  8341 ;;		line 57 in file "interrupts.c"
  8342 ;; Parameters:    Size  Location     Type
  8343 ;;		None
  8344 ;; Auto vars:     Size  Location     Type
  8345 ;;		None
  8346 ;; Return value:  Size  Location     Type
  8347 ;;                  1    wreg      void 
  8348 ;; Registers used:
  8349 ;;		wreg, status,2, status,0, cstack
  8350 ;; Tracked objects:
  8351 ;;		On entry : 0/0
  8352 ;;		On exit  : 0/0
  8353 ;;		Unchanged: 0/0
  8354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8359 ;;Total ram usage:        0 bytes
  8360 ;; Hardware stack levels used: 1
  8361 ;; Hardware stack levels required when called: 11
  8362 ;; This function calls:
  8363 ;;		_I2C_2_Master_Start
  8364 ;;		_I2C_2_Master_Stop
  8365 ;;		_I2C_2_Master_Write
  8366 ;;		_init_colorclick_interrupts
  8367 ;; This function is called by:
  8368 ;;		_Interrupts_init
  8369 ;; This function uses a non-reentrant model
  8370 ;;
  8371                           
  8372                           	psect	text46
  8373   002ACC                     __ptext46:
  8374                           	callstack 0
  8375   002ACC                     _interrupts_clear_colorclick:
  8376                           	callstack 18
  8377   002ACC                     
  8378                           ;interrupts.c: 59:     I2C_2_Master_Start();
  8379   002ACC  EC96  F015         	call	_I2C_2_Master_Start	;wreg free
  8380                           
  8381                           ;interrupts.c: 60:     I2C_2_Master_Write(0x52 | 0x00);
  8382   002AD0  0E52               	movlw	82
  8383   002AD2  EC80  F015         	call	_I2C_2_Master_Write
  8384                           
  8385                           ;interrupts.c: 61:     I2C_2_Master_Write(0b11100110);
  8386   002AD6  0EE6               	movlw	230
  8387   002AD8  EC80  F015         	call	_I2C_2_Master_Write
  8388                           
  8389                           ;interrupts.c: 62:     I2C_2_Master_Stop();
  8390   002ADC  EC91  F015         	call	_I2C_2_Master_Stop	;wreg free
  8391                           
  8392                           ;interrupts.c: 64:     init_colorclick_interrupts();
  8393   002AE0  ECB3  F013         	call	_init_colorclick_interrupts	;wreg free
  8394   002AE4  0012               	return		;funcret
  8395   002AE6                     __end_of_interrupts_clear_colorclick:
  8396                           	callstack 0
  8397                           
  8398 ;; *************** function _init_colorclick_interrupts *****************
  8399 ;; Defined at:
  8400 ;;		line 43 in file "interrupts.c"
  8401 ;; Parameters:    Size  Location     Type
  8402 ;;		None
  8403 ;; Auto vars:     Size  Location     Type
  8404 ;;		None
  8405 ;; Return value:  Size  Location     Type
  8406 ;;                  1    wreg      void 
  8407 ;; Registers used:
  8408 ;;		wreg, status,2, status,0, cstack
  8409 ;; Tracked objects:
  8410 ;;		On entry : 0/0
  8411 ;;		On exit  : 0/0
  8412 ;;		Unchanged: 0/0
  8413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8416 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8417 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8418 ;;Total ram usage:        1 bytes
  8419 ;; Hardware stack levels used: 1
  8420 ;; Hardware stack levels required when called: 10
  8421 ;; This function calls:
  8422 ;;		_color_writetoaddr
  8423 ;; This function is called by:
  8424 ;;		_interrupts_clear_colorclick
  8425 ;; This function uses a non-reentrant model
  8426 ;;
  8427                           
  8428                           	psect	text47
  8429   002766                     __ptext47:
  8430                           	callstack 0
  8431   002766                     _init_colorclick_interrupts:
  8432                           	callstack 18
  8433   002766                     
  8434                           ;interrupts.c: 45:     color_writetoaddr(0x00,0b10011);
  8435   002766  0E13               	movlw	19
  8436   002768  6E0B               	movwf	color_writetoaddr@value^0,c
  8437   00276A  0E00               	movlw	0
  8438   00276C  EC2A  F015         	call	_color_writetoaddr
  8439   002770                     
  8440                           ;interrupts.c: 46:     _delay((unsigned long)((3)*(64000000/4000.0)));
  8441   002770  0E3F               	movlw	63
  8442   002772  6E0D               	movwf	??_init_colorclick_interrupts^0,c
  8443   002774  0E55               	movlw	85
  8444   002776                     u4867:
  8445   002776  2EE8               	decfsz	wreg,f,c
  8446   002778  D7FE               	bra	u4867
  8447   00277A  2E0D               	decfsz	??_init_colorclick_interrupts^0,f,c
  8448   00277C  D7FC               	bra	u4867
  8449   00277E  F000               	nop	
  8450   002780                     
  8451                           ;interrupts.c: 48:     color_writetoaddr(0x0C,0b0100);
  8452   002780  0E04               	movlw	4
  8453   002782  6E0B               	movwf	color_writetoaddr@value^0,c
  8454   002784  0E0C               	movlw	12
  8455   002786  EC2A  F015         	call	_color_writetoaddr
  8456   00278A                     
  8457                           ;interrupts.c: 49:     color_writetoaddr(0x04,(int_threshold_low & 0xFF));
  8458   00278A  C04F  F00B         	movff	_int_threshold_low,color_writetoaddr@value
  8459   00278E  0E04               	movlw	4
  8460   002790  EC2A  F015         	call	_color_writetoaddr
  8461   002794                     
  8462                           ;interrupts.c: 50:     color_writetoaddr(0x05,(int_threshold_low >> 8));
  8463   002794  5050               	movf	(_int_threshold_low+1)^0,w,c
  8464   002796  6E0B               	movwf	color_writetoaddr@value^0,c
  8465   002798  0E05               	movlw	5
  8466   00279A  EC2A  F015         	call	_color_writetoaddr
  8467   00279E                     
  8468                           ;interrupts.c: 51:     color_writetoaddr(0x06,(int_threshold_high & 0xFF));
  8469   00279E  C0D5  F00B         	movff	_int_threshold_high,color_writetoaddr@value
  8470   0027A2  0E06               	movlw	6
  8471   0027A4  EC2A  F015         	call	_color_writetoaddr
  8472   0027A8                     
  8473                           ;interrupts.c: 52:     color_writetoaddr(0x07,(int_threshold_high >> 8));
  8474   0027A8  0100               	movlb	0	; () banked
  8475   0027AA  51D6               	movf	(_int_threshold_high+1)& (0+255),w,b
  8476   0027AC  6E0B               	movwf	color_writetoaddr@value^0,c
  8477   0027AE  0E07               	movlw	7
  8478   0027B0  EC2A  F015         	call	_color_writetoaddr
  8479   0027B4  0012               	return		;funcret
  8480   0027B6                     __end_of_init_colorclick_interrupts:
  8481                           	callstack 0
  8482                           
  8483 ;; *************** function _color_writetoaddr *****************
  8484 ;; Defined at:
  8485 ;;		line 22 in file "color.c"
  8486 ;; Parameters:    Size  Location     Type
  8487 ;;  address         1    wreg     unsigned char 
  8488 ;;  value           1   10[COMRAM] unsigned char 
  8489 ;; Auto vars:     Size  Location     Type
  8490 ;;  address         1   11[COMRAM] unsigned char 
  8491 ;; Return value:  Size  Location     Type
  8492 ;;                  1    wreg      void 
  8493 ;; Registers used:
  8494 ;;		wreg, status,2, status,0, cstack
  8495 ;; Tracked objects:
  8496 ;;		On entry : 0/0
  8497 ;;		On exit  : 0/0
  8498 ;;		Unchanged: 0/0
  8499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8500 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8501 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8503 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8504 ;;Total ram usage:        2 bytes
  8505 ;; Hardware stack levels used: 1
  8506 ;; Hardware stack levels required when called: 9
  8507 ;; This function calls:
  8508 ;;		_I2C_2_Master_Start
  8509 ;;		_I2C_2_Master_Stop
  8510 ;;		_I2C_2_Master_Write
  8511 ;; This function is called by:
  8512 ;;		_color_click_init
  8513 ;;		_init_colorclick_interrupts
  8514 ;; This function uses a non-reentrant model
  8515 ;;
  8516                           
  8517                           	psect	text48
  8518   002A54                     __ptext48:
  8519                           	callstack 0
  8520   002A54                     _color_writetoaddr:
  8521                           	callstack 20
  8522                           
  8523                           ;incstack = 0
  8524                           ;color_writetoaddr@address stored from wreg
  8525   002A54  6E0C               	movwf	color_writetoaddr@address^0,c
  8526   002A56                     
  8527                           ;color.c: 23:     I2C_2_Master_Start();
  8528   002A56  EC96  F015         	call	_I2C_2_Master_Start	;wreg free
  8529                           
  8530                           ;color.c: 24:     I2C_2_Master_Write(0x52 | 0x00);
  8531   002A5A  0E52               	movlw	82
  8532   002A5C  EC80  F015         	call	_I2C_2_Master_Write
  8533                           
  8534                           ;color.c: 25:     I2C_2_Master_Write(0x80 | address);
  8535   002A60  500C               	movf	color_writetoaddr@address^0,w,c
  8536   002A62  0980               	iorlw	128
  8537   002A64  EC80  F015         	call	_I2C_2_Master_Write
  8538                           
  8539                           ;color.c: 26:     I2C_2_Master_Write(value);
  8540   002A68  500B               	movf	color_writetoaddr@value^0,w,c
  8541   002A6A  EC80  F015         	call	_I2C_2_Master_Write
  8542                           
  8543                           ;color.c: 27:     I2C_2_Master_Stop();
  8544   002A6E  EC91  F015         	call	_I2C_2_Master_Stop	;wreg free
  8545   002A72  0012               	return		;funcret
  8546   002A74                     __end_of_color_writetoaddr:
  8547                           	callstack 0
  8548                           
  8549 ;; *************** function _I2C_2_Master_Write *****************
  8550 ;; Defined at:
  8551 ;;		line 45 in file "i2c.c"
  8552 ;; Parameters:    Size  Location     Type
  8553 ;;  data_byte       1    wreg     unsigned char 
  8554 ;; Auto vars:     Size  Location     Type
  8555 ;;  data_byte       1    9[COMRAM] unsigned char 
  8556 ;; Return value:  Size  Location     Type
  8557 ;;                  1    wreg      void 
  8558 ;; Registers used:
  8559 ;;		wreg, status,2, status,0, cstack
  8560 ;; Tracked objects:
  8561 ;;		On entry : 0/0
  8562 ;;		On exit  : 0/0
  8563 ;;		Unchanged: 0/0
  8564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8566 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8568 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8569 ;;Total ram usage:        1 bytes
  8570 ;; Hardware stack levels used: 1
  8571 ;; Hardware stack levels required when called: 8
  8572 ;; This function calls:
  8573 ;;		_I2C_2_Master_Idle
  8574 ;; This function is called by:
  8575 ;;		_color_writetoaddr
  8576 ;;		_color_read_Red
  8577 ;;		_color_read_Green
  8578 ;;		_color_read_Blue
  8579 ;;		_color_read_Clear
  8580 ;;		_interrupts_clear_colorclick
  8581 ;; This function uses a non-reentrant model
  8582 ;;
  8583                           
  8584                           	psect	text49
  8585   002B00                     __ptext49:
  8586                           	callstack 0
  8587   002B00                     _I2C_2_Master_Write:
  8588                           	callstack 20
  8589                           
  8590                           ;incstack = 0
  8591                           ;I2C_2_Master_Write@data_byte stored from wreg
  8592   002B00  6E0A               	movwf	I2C_2_Master_Write@data_byte^0,c
  8593   002B02                     
  8594                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  8595   002B02  ECAB  F014         	call	_I2C_2_Master_Idle	;wreg free
  8596   002B06                     
  8597                           ;i2c.c: 48:   SSP2BUF = data_byte;
  8598   002B06  C00A  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  8599   002B0A  0012               	return		;funcret
  8600   002B0C                     __end_of_I2C_2_Master_Write:
  8601                           	callstack 0
  8602                           
  8603 ;; *************** function _I2C_2_Master_Stop *****************
  8604 ;; Defined at:
  8605 ;;		line 39 in file "i2c.c"
  8606 ;; Parameters:    Size  Location     Type
  8607 ;;		None
  8608 ;; Auto vars:     Size  Location     Type
  8609 ;;		None
  8610 ;; Return value:  Size  Location     Type
  8611 ;;                  1    wreg      void 
  8612 ;; Registers used:
  8613 ;;		wreg, status,2, status,0, cstack
  8614 ;; Tracked objects:
  8615 ;;		On entry : 0/0
  8616 ;;		On exit  : 0/0
  8617 ;;		Unchanged: 0/0
  8618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8623 ;;Total ram usage:        0 bytes
  8624 ;; Hardware stack levels used: 1
  8625 ;; Hardware stack levels required when called: 8
  8626 ;; This function calls:
  8627 ;;		_I2C_2_Master_Idle
  8628 ;; This function is called by:
  8629 ;;		_color_writetoaddr
  8630 ;;		_color_read_Red
  8631 ;;		_color_read_Green
  8632 ;;		_color_read_Blue
  8633 ;;		_color_read_Clear
  8634 ;;		_interrupts_clear_colorclick
  8635 ;; This function uses a non-reentrant model
  8636 ;;
  8637                           
  8638                           	psect	text50
  8639   002B22                     __ptext50:
  8640                           	callstack 0
  8641   002B22                     _I2C_2_Master_Stop:
  8642                           	callstack 20
  8643   002B22                     
  8644                           ;i2c.c: 41:   I2C_2_Master_Idle();
  8645   002B22  ECAB  F014         	call	_I2C_2_Master_Idle	;wreg free
  8646   002B26                     
  8647                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  8648   002B26  010E               	movlb	14	; () banked
  8649   002B28  85DA               	bsf	218,2,b	;volatile
  8650   002B2A                     
  8651                           ; BSR set to: 14
  8652   002B2A  0012               	return		;funcret
  8653   002B2C                     __end_of_I2C_2_Master_Stop:
  8654                           	callstack 0
  8655                           
  8656 ;; *************** function _I2C_2_Master_Start *****************
  8657 ;; Defined at:
  8658 ;;		line 27 in file "i2c.c"
  8659 ;; Parameters:    Size  Location     Type
  8660 ;;		None
  8661 ;; Auto vars:     Size  Location     Type
  8662 ;;		None
  8663 ;; Return value:  Size  Location     Type
  8664 ;;                  1    wreg      void 
  8665 ;; Registers used:
  8666 ;;		wreg, status,2, status,0, cstack
  8667 ;; Tracked objects:
  8668 ;;		On entry : 0/0
  8669 ;;		On exit  : 0/0
  8670 ;;		Unchanged: 0/0
  8671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8676 ;;Total ram usage:        0 bytes
  8677 ;; Hardware stack levels used: 1
  8678 ;; Hardware stack levels required when called: 8
  8679 ;; This function calls:
  8680 ;;		_I2C_2_Master_Idle
  8681 ;; This function is called by:
  8682 ;;		_color_writetoaddr
  8683 ;;		_color_read_Red
  8684 ;;		_color_read_Green
  8685 ;;		_color_read_Blue
  8686 ;;		_color_read_Clear
  8687 ;;		_interrupts_clear_colorclick
  8688 ;; This function uses a non-reentrant model
  8689 ;;
  8690                           
  8691                           	psect	text51
  8692   002B2C                     __ptext51:
  8693                           	callstack 0
  8694   002B2C                     _I2C_2_Master_Start:
  8695                           	callstack 20
  8696   002B2C                     
  8697                           ;i2c.c: 29:   I2C_2_Master_Idle();
  8698   002B2C  ECAB  F014         	call	_I2C_2_Master_Idle	;wreg free
  8699   002B30                     
  8700                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  8701   002B30  010E               	movlb	14	; () banked
  8702   002B32  81DA               	bsf	218,0,b	;volatile
  8703   002B34                     
  8704                           ; BSR set to: 14
  8705   002B34  0012               	return		;funcret
  8706   002B36                     __end_of_I2C_2_Master_Start:
  8707                           	callstack 0
  8708                           
  8709 ;; *************** function _I2C_2_Master_Idle *****************
  8710 ;; Defined at:
  8711 ;;		line 22 in file "i2c.c"
  8712 ;; Parameters:    Size  Location     Type
  8713 ;;		None
  8714 ;; Auto vars:     Size  Location     Type
  8715 ;;		None
  8716 ;; Return value:  Size  Location     Type
  8717 ;;                  1    wreg      void 
  8718 ;; Registers used:
  8719 ;;		wreg, status,2, status,0
  8720 ;; Tracked objects:
  8721 ;;		On entry : 0/0
  8722 ;;		On exit  : 0/0
  8723 ;;		Unchanged: 0/0
  8724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8727 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8728 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8729 ;;Total ram usage:        1 bytes
  8730 ;; Hardware stack levels used: 1
  8731 ;; Hardware stack levels required when called: 7
  8732 ;; This function calls:
  8733 ;;		Nothing
  8734 ;; This function is called by:
  8735 ;;		_I2C_2_Master_Start
  8736 ;;		_I2C_2_Master_RepStart
  8737 ;;		_I2C_2_Master_Stop
  8738 ;;		_I2C_2_Master_Write
  8739 ;;		_I2C_2_Master_Read
  8740 ;; This function uses a non-reentrant model
  8741 ;;
  8742                           
  8743                           	psect	text52
  8744   002956                     __ptext52:
  8745                           	callstack 0
  8746   002956                     _I2C_2_Master_Idle:
  8747                           	callstack 20
  8748   002956                     l89:
  8749   002956  010E               	movlb	14	; () banked
  8750   002958  B5D8               	btfsc	216,2,b	;volatile
  8751   00295A  EFB1  F014         	goto	u2081
  8752   00295E  EFB3  F014         	goto	u2080
  8753   002962                     u2081:
  8754   002962  EFAB  F014         	goto	l89
  8755   002966                     u2080:
  8756   002966                     
  8757                           ; BSR set to: 14
  8758   002966  CEDA F009          	movff	3802,??_I2C_2_Master_Idle	;volatile
  8759   00296A  0E1F               	movlw	31
  8760   00296C  1609               	andwf	??_I2C_2_Master_Idle^0,f,c
  8761   00296E  A4D8               	btfss	status,2,c
  8762   002970  EFBC  F014         	goto	u2091
  8763   002974  EFBE  F014         	goto	u2090
  8764   002978                     u2091:
  8765   002978  EFAB  F014         	goto	l89
  8766   00297C                     u2090:
  8767   00297C                     
  8768                           ; BSR set to: 14
  8769   00297C  0012               	return		;funcret
  8770   00297E                     __end_of_I2C_2_Master_Idle:
  8771                           	callstack 0
  8772                           
  8773 ;; *************** function _AppendTime *****************
  8774 ;; Defined at:
  8775 ;;		line 23 in file "Memorization.c"
  8776 ;; Parameters:    Size  Location     Type
  8777 ;;  temp            2    8[COMRAM] unsigned int 
  8778 ;;  time_index      2   10[COMRAM] PTR unsigned char 
  8779 ;;		 -> time_index(1), 
  8780 ;;  time_array      2   12[COMRAM] PTR unsigned int 
  8781 ;;		 -> time_array(80), 
  8782 ;; Auto vars:     Size  Location     Type
  8783 ;;		None
  8784 ;; Return value:  Size  Location     Type
  8785 ;;                  1    wreg      void 
  8786 ;; Registers used:
  8787 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8788 ;; Tracked objects:
  8789 ;;		On entry : 0/0
  8790 ;;		On exit  : 0/0
  8791 ;;		Unchanged: 0/0
  8792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8793 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8795 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8796 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8797 ;;Total ram usage:        9 bytes
  8798 ;; Hardware stack levels used: 1
  8799 ;; Hardware stack levels required when called: 7
  8800 ;; This function calls:
  8801 ;;		Nothing
  8802 ;; This function is called by:
  8803 ;;		_main
  8804 ;; This function uses a non-reentrant model
  8805 ;;
  8806                           
  8807                           	psect	text53
  8808   0028FA                     __ptext53:
  8809                           	callstack 0
  8810   0028FA                     _AppendTime:
  8811                           	callstack 23
  8812   0028FA                     
  8813                           ;Memorization.c: 25:     time_array[(*time_index)++] = temp;
  8814   0028FA  C00B  FFD9         	movff	AppendTime@time_index,fsr2l
  8815   0028FE  C00C  FFDA         	movff	AppendTime@time_index+1,fsr2h
  8816   002902  CFDF F00F          	movff	indf2,??_AppendTime
  8817   002906  0E01               	movlw	1
  8818   002908  26DF               	addwf	indf2,f,c
  8819   00290A  500F               	movf	??_AppendTime^0,w,c
  8820   00290C  0D02               	mullw	2
  8821   00290E  CFF3 F010          	movff	prodl,??_AppendTime+1
  8822   002912  CFF4 F011          	movff	prodh,??_AppendTime+2
  8823   002916  5010               	movf	(??_AppendTime+1)^0,w,c
  8824   002918  240D               	addwf	AppendTime@time_array^0,w,c
  8825   00291A  6ED9               	movwf	fsr2l,c
  8826   00291C  5011               	movf	(??_AppendTime+2)^0,w,c
  8827   00291E  200E               	addwfc	(AppendTime@time_array+1)^0,w,c
  8828   002920  6EDA               	movwf	fsr2h,c
  8829   002922  C009  FFDE         	movff	AppendTime@temp,postinc2
  8830   002926  C00A  FFDD         	movff	AppendTime@temp+1,postdec2
  8831   00292A  0012               	return		;funcret
  8832   00292C                     __end_of_AppendTime:
  8833                           	callstack 0
  8834                           
  8835 ;; *************** function _LowISR *****************
  8836 ;; Defined at:
  8837 ;;		line 75 in file "interrupts.c"
  8838 ;; Parameters:    Size  Location     Type
  8839 ;;		None
  8840 ;; Auto vars:     Size  Location     Type
  8841 ;;		None
  8842 ;; Return value:  Size  Location     Type
  8843 ;;                  1    wreg      void 
  8844 ;; Registers used:
  8845 ;;		wreg, status,2
  8846 ;; Tracked objects:
  8847 ;;		On entry : 0/0
  8848 ;;		On exit  : 0/0
  8849 ;;		Unchanged: 0/0
  8850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8853 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8854 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8855 ;;Total ram usage:        3 bytes
  8856 ;; Hardware stack levels used: 1
  8857 ;; Hardware stack levels required when called: 6
  8858 ;; This function calls:
  8859 ;;		Nothing
  8860 ;; This function is called by:
  8861 ;;		Interrupt level 1
  8862 ;; This function uses a non-reentrant model
  8863 ;;
  8864                           
  8865                           	psect	intcodelo
  8866   000018                     __pintcodelo:
  8867                           	callstack 0
  8868   000018                     _LowISR:
  8869                           	callstack 16
  8870                           
  8871                           ;incstack = 0
  8872   000018  8057               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  8873   00001A  CFD8 F006          	movff	status,??_LowISR
  8874   00001E  CFE8 F007          	movff	wreg,??_LowISR+1
  8875   000022  CFE0 F008          	movff	bsr,??_LowISR+2
  8876   000026                     
  8877                           ;interrupts.c: 78:     if(PIR0bits.TMR0IF){
  8878   000026  010E               	movlb	14	; () banked
  8879   000028  AB33               	btfss	51,5,b	;volatile
  8880   00002A  EF19  F000         	goto	i1u382_21
  8881   00002E  EF1B  F000         	goto	i1u382_20
  8882   000032                     i1u382_21:
  8883   000032  EF24  F000         	goto	i1l334
  8884   000036                     i1u382_20:
  8885   000036                     
  8886                           ; BSR set to: 14
  8887                           ;interrupts.c: 79:         TMR0H = 0b00001011;
  8888   000036  0E0B               	movlw	11
  8889   000038  6ED4               	movwf	212,c	;volatile
  8890                           
  8891                           ;interrupts.c: 80:         TMR0L = 0b11011011;
  8892   00003A  0EDB               	movlw	219
  8893   00003C  6ED3               	movwf	211,c	;volatile
  8894                           
  8895                           ;interrupts.c: 81:         tmr_ovf = 1;
  8896   00003E  0E01               	movlw	1
  8897   000040  0100               	movlb	0	; () banked
  8898   000042  6F75               	movwf	_tmr_ovf& (0+255),b
  8899   000044                     
  8900                           ; BSR set to: 0
  8901                           ;interrupts.c: 82:         PIR0bits.TMR0IF=0;
  8902   000044  010E               	movlb	14	; () banked
  8903   000046  9B33               	bcf	51,5,b	;volatile
  8904   000048                     i1l334:
  8905                           
  8906                           ; BSR set to: 14
  8907   000048  C008  FFE0         	movff	??_LowISR+2,bsr
  8908   00004C  C007  FFE8         	movff	??_LowISR+1,wreg
  8909   000050  C006  FFD8         	movff	??_LowISR,status
  8910   000054  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  8911   000056  0010               	retfie	
  8912   000058                     __end_of_LowISR:
  8913                           	callstack 0
  8914                           
  8915 ;; *************** function _HighISR *****************
  8916 ;; Defined at:
  8917 ;;		line 89 in file "interrupts.c"
  8918 ;; Parameters:    Size  Location     Type
  8919 ;;		None
  8920 ;; Auto vars:     Size  Location     Type
  8921 ;;		None
  8922 ;; Return value:  Size  Location     Type
  8923 ;;                  1    wreg      void 
  8924 ;; Registers used:
  8925 ;;		wreg, status,2, status,0, cstack
  8926 ;; Tracked objects:
  8927 ;;		On entry : 0/0
  8928 ;;		On exit  : 0/0
  8929 ;;		Unchanged: 0/0
  8930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8935 ;;Total ram usage:        0 bytes
  8936 ;; Hardware stack levels used: 1
  8937 ;; Hardware stack levels required when called: 5
  8938 ;; This function calls:
  8939 ;;		i2_interrupts_clear_colorclick
  8940 ;; This function is called by:
  8941 ;;		Interrupt level 2
  8942 ;; This function uses a non-reentrant model
  8943 ;;
  8944                           
  8945                           	psect	intcode
  8946   000008                     __pintcode:
  8947                           	callstack 0
  8948   000008                     _HighISR:
  8949                           	callstack 16
  8950                           
  8951                           ; BSR set to: 14
  8952                           ;incstack = 0
  8953   000008  8257               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8954   00000A  EF09  F015         	goto	int_func
  8955                           
  8956                           	psect	intcode_body
  8957   002A12                     __pintcode_body:
  8958                           	callstack 16
  8959   002A12                     int_func:
  8960                           	callstack 16
  8961   002A12                     
  8962                           ;interrupts.c: 116:     if(PIR0bits.INT1IF){
  8963   002A12  010E               	movlb	14	; () banked
  8964   002A14  A333               	btfss	51,1,b	;volatile
  8965   002A16  EF0F  F015         	goto	i2u383_41
  8966   002A1A  EF11  F015         	goto	i2u383_40
  8967   002A1E                     i2u383_41:
  8968   002A1E  EF18  F015         	goto	i2l342
  8969   002A22                     i2u383_40:
  8970   002A22                     
  8971                           ; BSR set to: 14
  8972                           ;interrupts.c: 117:         color_flag = 1;
  8973   002A22  0E01               	movlw	1
  8974   002A24  0100               	movlb	0	; () banked
  8975   002A26  6F76               	movwf	_color_flag& (0+255),b
  8976   002A28                     
  8977                           ; BSR set to: 0
  8978                           ;interrupts.c: 119:         interrupts_clear_colorclick();
  8979   002A28  EC73  F015         	call	i2_interrupts_clear_colorclick	;wreg free
  8980   002A2C                     
  8981                           ;interrupts.c: 120:         PIR0bits.INT1IF = 0;
  8982   002A2C  010E               	movlb	14	; () banked
  8983   002A2E  9333               	bcf	51,1,b	;volatile
  8984   002A30                     i2l342:
  8985                           
  8986                           ; BSR set to: 14
  8987   002A30  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8988   002A32  0011               	retfie		f
  8989   002A34                     __end_of_HighISR:
  8990                           	callstack 0
  8991                           
  8992 ;; *************** function i2_interrupts_clear_colorclick *****************
  8993 ;; Defined at:
  8994 ;;		line 57 in file "interrupts.c"
  8995 ;; Parameters:    Size  Location     Type
  8996 ;;		None
  8997 ;; Auto vars:     Size  Location     Type
  8998 ;;		None
  8999 ;; Return value:  Size  Location     Type
  9000 ;;                  1    wreg      void 
  9001 ;; Registers used:
  9002 ;;		wreg, status,2, status,0, cstack
  9003 ;; Tracked objects:
  9004 ;;		On entry : 0/0
  9005 ;;		On exit  : 0/0
  9006 ;;		Unchanged: 0/0
  9007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9012 ;;Total ram usage:        0 bytes
  9013 ;; Hardware stack levels used: 1
  9014 ;; Hardware stack levels required when called: 4
  9015 ;; This function calls:
  9016 ;;		i2_I2C_2_Master_Start
  9017 ;;		i2_I2C_2_Master_Stop
  9018 ;;		i2_I2C_2_Master_Write
  9019 ;;		i2_init_colorclick_interrupts
  9020 ;; This function is called by:
  9021 ;;		_HighISR
  9022 ;; This function uses a non-reentrant model
  9023 ;;
  9024                           
  9025                           	psect	text56
  9026   002AE6                     __ptext56:
  9027                           	callstack 0
  9028   002AE6                     i2_interrupts_clear_colorclick:
  9029                           	callstack 16
  9030   002AE6                     
  9031                           ;interrupts.c: 59:     I2C_2_Master_Start();
  9032   002AE6  ECA0  F015         	call	i2_I2C_2_Master_Start	;wreg free
  9033                           
  9034                           ;interrupts.c: 60:     I2C_2_Master_Write(0x52 | 0x00);
  9035   002AEA  0E52               	movlw	82
  9036   002AEC  EC86  F015         	call	i2_I2C_2_Master_Write
  9037                           
  9038                           ;interrupts.c: 61:     I2C_2_Master_Write(0b11100110);
  9039   002AF0  0EE6               	movlw	230
  9040   002AF2  EC86  F015         	call	i2_I2C_2_Master_Write
  9041                           
  9042                           ;interrupts.c: 62:     I2C_2_Master_Stop();
  9043   002AF6  EC9B  F015         	call	i2_I2C_2_Master_Stop	;wreg free
  9044                           
  9045                           ;interrupts.c: 64:     init_colorclick_interrupts();
  9046   002AFA  ECDB  F013         	call	i2_init_colorclick_interrupts	;wreg free
  9047   002AFE  0012               	return		;funcret
  9048   002B00                     __end_ofi2_interrupts_clear_colorclick:
  9049                           	callstack 0
  9050                           
  9051 ;; *************** function i2_init_colorclick_interrupts *****************
  9052 ;; Defined at:
  9053 ;;		line 43 in file "interrupts.c"
  9054 ;; Parameters:    Size  Location     Type
  9055 ;;		None
  9056 ;; Auto vars:     Size  Location     Type
  9057 ;;		None
  9058 ;; Return value:  Size  Location     Type
  9059 ;;                  1    wreg      void 
  9060 ;; Registers used:
  9061 ;;		wreg, status,2, status,0, cstack
  9062 ;; Tracked objects:
  9063 ;;		On entry : 0/0
  9064 ;;		On exit  : 0/0
  9065 ;;		Unchanged: 0/0
  9066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9069 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9070 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9071 ;;Total ram usage:        1 bytes
  9072 ;; Hardware stack levels used: 1
  9073 ;; Hardware stack levels required when called: 3
  9074 ;; This function calls:
  9075 ;;		i2_color_writetoaddr
  9076 ;; This function is called by:
  9077 ;;		i2_interrupts_clear_colorclick
  9078 ;; This function uses a non-reentrant model
  9079 ;;
  9080                           
  9081                           	psect	text57
  9082   0027B6                     __ptext57:
  9083                           	callstack 0
  9084   0027B6                     i2_init_colorclick_interrupts:
  9085                           	callstack 16
  9086   0027B6                     
  9087                           ;interrupts.c: 45:     color_writetoaddr(0x00,0b10011);
  9088   0027B6  0E13               	movlw	19
  9089   0027B8  6E03               	movwf	i2color_writetoaddr@value^0,c
  9090   0027BA  0E00               	movlw	0
  9091   0027BC  EC3A  F015         	call	i2_color_writetoaddr
  9092   0027C0                     
  9093                           ;interrupts.c: 46:     _delay((unsigned long)((3)*(64000000/4000.0)));
  9094   0027C0  0E3F               	movlw	63
  9095   0027C2  6E05               	movwf	??i2_init_colorclick_interrupts^0,c
  9096   0027C4  0E55               	movlw	85
  9097   0027C6                     i2u487_47:
  9098   0027C6  2EE8               	decfsz	wreg,f,c
  9099   0027C8  D7FE               	bra	i2u487_47
  9100   0027CA  2E05               	decfsz	??i2_init_colorclick_interrupts^0,f,c
  9101   0027CC  D7FC               	bra	i2u487_47
  9102   0027CE  F000               	nop	
  9103   0027D0                     
  9104                           ;interrupts.c: 48:     color_writetoaddr(0x0C,0b0100);
  9105   0027D0  0E04               	movlw	4
  9106   0027D2  6E03               	movwf	i2color_writetoaddr@value^0,c
  9107   0027D4  0E0C               	movlw	12
  9108   0027D6  EC3A  F015         	call	i2_color_writetoaddr
  9109   0027DA                     
  9110                           ;interrupts.c: 49:     color_writetoaddr(0x04,(int_threshold_low & 0xFF));
  9111   0027DA  C04F  F003         	movff	_int_threshold_low,i2color_writetoaddr@value
  9112   0027DE  0E04               	movlw	4
  9113   0027E0  EC3A  F015         	call	i2_color_writetoaddr
  9114   0027E4                     
  9115                           ;interrupts.c: 50:     color_writetoaddr(0x05,(int_threshold_low >> 8));
  9116   0027E4  5050               	movf	(_int_threshold_low+1)^0,w,c
  9117   0027E6  6E03               	movwf	i2color_writetoaddr@value^0,c
  9118   0027E8  0E05               	movlw	5
  9119   0027EA  EC3A  F015         	call	i2_color_writetoaddr
  9120   0027EE                     
  9121                           ;interrupts.c: 51:     color_writetoaddr(0x06,(int_threshold_high & 0xFF));
  9122   0027EE  C0D5  F003         	movff	_int_threshold_high,i2color_writetoaddr@value
  9123   0027F2  0E06               	movlw	6
  9124   0027F4  EC3A  F015         	call	i2_color_writetoaddr
  9125   0027F8                     
  9126                           ;interrupts.c: 52:     color_writetoaddr(0x07,(int_threshold_high >> 8));
  9127   0027F8  0100               	movlb	0	; () banked
  9128   0027FA  51D6               	movf	(_int_threshold_high+1)& (0+255),w,b
  9129   0027FC  6E03               	movwf	i2color_writetoaddr@value^0,c
  9130   0027FE  0E07               	movlw	7
  9131   002800  EC3A  F015         	call	i2_color_writetoaddr
  9132   002804  0012               	return		;funcret
  9133   002806                     __end_ofi2_init_colorclick_interrupts:
  9134                           	callstack 0
  9135                           
  9136 ;; *************** function i2_color_writetoaddr *****************
  9137 ;; Defined at:
  9138 ;;		line 22 in file "color.c"
  9139 ;; Parameters:    Size  Location     Type
  9140 ;;  address         1    wreg     unsigned char 
  9141 ;;  value           1    2[COMRAM] unsigned char 
  9142 ;; Auto vars:     Size  Location     Type
  9143 ;;  address         1    3[COMRAM] unsigned char 
  9144 ;; Return value:  Size  Location     Type
  9145 ;;                  1    wreg      void 
  9146 ;; Registers used:
  9147 ;;		wreg, status,2, status,0, cstack
  9148 ;; Tracked objects:
  9149 ;;		On entry : 0/0
  9150 ;;		On exit  : 0/0
  9151 ;;		Unchanged: 0/0
  9152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9153 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9154 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9156 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9157 ;;Total ram usage:        2 bytes
  9158 ;; Hardware stack levels used: 1
  9159 ;; Hardware stack levels required when called: 2
  9160 ;; This function calls:
  9161 ;;		i2_I2C_2_Master_Start
  9162 ;;		i2_I2C_2_Master_Stop
  9163 ;;		i2_I2C_2_Master_Write
  9164 ;; This function is called by:
  9165 ;;		i2_init_colorclick_interrupts
  9166 ;; This function uses a non-reentrant model
  9167 ;;
  9168                           
  9169                           	psect	text58
  9170   002A74                     __ptext58:
  9171                           	callstack 0
  9172   002A74                     i2_color_writetoaddr:
  9173                           	callstack 16
  9174                           
  9175                           ;incstack = 0
  9176                           ;i2color_writetoaddr@address stored from wreg
  9177   002A74  6E04               	movwf	i2color_writetoaddr@address^0,c
  9178   002A76                     
  9179                           ;color.c: 23:     I2C_2_Master_Start();
  9180   002A76  ECA0  F015         	call	i2_I2C_2_Master_Start	;wreg free
  9181                           
  9182                           ;color.c: 24:     I2C_2_Master_Write(0x52 | 0x00);
  9183   002A7A  0E52               	movlw	82
  9184   002A7C  EC86  F015         	call	i2_I2C_2_Master_Write
  9185                           
  9186                           ;color.c: 25:     I2C_2_Master_Write(0x80 | address);
  9187   002A80  5004               	movf	i2color_writetoaddr@address^0,w,c
  9188   002A82  0980               	iorlw	128
  9189   002A84  EC86  F015         	call	i2_I2C_2_Master_Write
  9190                           
  9191                           ;color.c: 26:     I2C_2_Master_Write(value);
  9192   002A88  5003               	movf	i2color_writetoaddr@value^0,w,c
  9193   002A8A  EC86  F015         	call	i2_I2C_2_Master_Write
  9194                           
  9195                           ;color.c: 27:     I2C_2_Master_Stop();
  9196   002A8E  EC9B  F015         	call	i2_I2C_2_Master_Stop	;wreg free
  9197   002A92  0012               	return		;funcret
  9198   002A94                     __end_ofi2_color_writetoaddr:
  9199                           	callstack 0
  9200                           
  9201 ;; *************** function i2_I2C_2_Master_Write *****************
  9202 ;; Defined at:
  9203 ;;		line 45 in file "i2c.c"
  9204 ;; Parameters:    Size  Location     Type
  9205 ;;  data_byte       1    wreg     unsigned char 
  9206 ;; Auto vars:     Size  Location     Type
  9207 ;;  data_byte       1    1[COMRAM] unsigned char 
  9208 ;; Return value:  Size  Location     Type
  9209 ;;                  1    wreg      void 
  9210 ;; Registers used:
  9211 ;;		wreg, status,2, status,0, cstack
  9212 ;; Tracked objects:
  9213 ;;		On entry : 0/0
  9214 ;;		On exit  : 0/0
  9215 ;;		Unchanged: 0/0
  9216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9218 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9220 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9221 ;;Total ram usage:        1 bytes
  9222 ;; Hardware stack levels used: 1
  9223 ;; Hardware stack levels required when called: 1
  9224 ;; This function calls:
  9225 ;;		i2_I2C_2_Master_Idle
  9226 ;; This function is called by:
  9227 ;;		i2_color_writetoaddr
  9228 ;;		i2_interrupts_clear_colorclick
  9229 ;; This function uses a non-reentrant model
  9230 ;;
  9231                           
  9232                           	psect	text59
  9233   002B0C                     __ptext59:
  9234                           	callstack 0
  9235   002B0C                     i2_I2C_2_Master_Write:
  9236                           	callstack 16
  9237                           
  9238                           ;incstack = 0
  9239                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  9240   002B0C  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  9241   002B0E                     
  9242                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  9243   002B0E  ECBF  F014         	call	i2_I2C_2_Master_Idle	;wreg free
  9244   002B12                     
  9245                           ;i2c.c: 48:   SSP2BUF = data_byte;
  9246   002B12  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  9247   002B16  0012               	return		;funcret
  9248   002B18                     __end_ofi2_I2C_2_Master_Write:
  9249                           	callstack 0
  9250                           
  9251 ;; *************** function i2_I2C_2_Master_Stop *****************
  9252 ;; Defined at:
  9253 ;;		line 39 in file "i2c.c"
  9254 ;; Parameters:    Size  Location     Type
  9255 ;;		None
  9256 ;; Auto vars:     Size  Location     Type
  9257 ;;		None
  9258 ;; Return value:  Size  Location     Type
  9259 ;;                  1    wreg      void 
  9260 ;; Registers used:
  9261 ;;		wreg, status,2, status,0, cstack
  9262 ;; Tracked objects:
  9263 ;;		On entry : 0/0
  9264 ;;		On exit  : 0/0
  9265 ;;		Unchanged: 0/0
  9266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9271 ;;Total ram usage:        0 bytes
  9272 ;; Hardware stack levels used: 1
  9273 ;; Hardware stack levels required when called: 1
  9274 ;; This function calls:
  9275 ;;		i2_I2C_2_Master_Idle
  9276 ;; This function is called by:
  9277 ;;		i2_color_writetoaddr
  9278 ;;		i2_interrupts_clear_colorclick
  9279 ;; This function uses a non-reentrant model
  9280 ;;
  9281                           
  9282                           	psect	text60
  9283   002B36                     __ptext60:
  9284                           	callstack 0
  9285   002B36                     i2_I2C_2_Master_Stop:
  9286                           	callstack 16
  9287   002B36                     
  9288                           ;i2c.c: 41:   I2C_2_Master_Idle();
  9289   002B36  ECBF  F014         	call	i2_I2C_2_Master_Idle	;wreg free
  9290   002B3A                     
  9291                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  9292   002B3A  010E               	movlb	14	; () banked
  9293   002B3C  85DA               	bsf	218,2,b	;volatile
  9294   002B3E                     
  9295                           ; BSR set to: 14
  9296   002B3E  0012               	return		;funcret
  9297   002B40                     __end_ofi2_I2C_2_Master_Stop:
  9298                           	callstack 0
  9299                           
  9300 ;; *************** function i2_I2C_2_Master_Start *****************
  9301 ;; Defined at:
  9302 ;;		line 27 in file "i2c.c"
  9303 ;; Parameters:    Size  Location     Type
  9304 ;;		None
  9305 ;; Auto vars:     Size  Location     Type
  9306 ;;		None
  9307 ;; Return value:  Size  Location     Type
  9308 ;;                  1    wreg      void 
  9309 ;; Registers used:
  9310 ;;		wreg, status,2, status,0, cstack
  9311 ;; Tracked objects:
  9312 ;;		On entry : 0/0
  9313 ;;		On exit  : 0/0
  9314 ;;		Unchanged: 0/0
  9315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9320 ;;Total ram usage:        0 bytes
  9321 ;; Hardware stack levels used: 1
  9322 ;; Hardware stack levels required when called: 1
  9323 ;; This function calls:
  9324 ;;		i2_I2C_2_Master_Idle
  9325 ;; This function is called by:
  9326 ;;		i2_color_writetoaddr
  9327 ;;		i2_interrupts_clear_colorclick
  9328 ;; This function uses a non-reentrant model
  9329 ;;
  9330                           
  9331                           	psect	text61
  9332   002B40                     __ptext61:
  9333                           	callstack 0
  9334   002B40                     i2_I2C_2_Master_Start:
  9335                           	callstack 16
  9336   002B40                     
  9337                           ;i2c.c: 29:   I2C_2_Master_Idle();
  9338   002B40  ECBF  F014         	call	i2_I2C_2_Master_Idle	;wreg free
  9339   002B44                     
  9340                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  9341   002B44  010E               	movlb	14	; () banked
  9342   002B46  81DA               	bsf	218,0,b	;volatile
  9343   002B48                     
  9344                           ; BSR set to: 14
  9345   002B48  0012               	return		;funcret
  9346   002B4A                     __end_ofi2_I2C_2_Master_Start:
  9347                           	callstack 0
  9348                           
  9349 ;; *************** function i2_I2C_2_Master_Idle *****************
  9350 ;; Defined at:
  9351 ;;		line 22 in file "i2c.c"
  9352 ;; Parameters:    Size  Location     Type
  9353 ;;		None
  9354 ;; Auto vars:     Size  Location     Type
  9355 ;;		None
  9356 ;; Return value:  Size  Location     Type
  9357 ;;                  1    wreg      void 
  9358 ;; Registers used:
  9359 ;;		wreg, status,2, status,0
  9360 ;; Tracked objects:
  9361 ;;		On entry : 0/0
  9362 ;;		On exit  : 0/0
  9363 ;;		Unchanged: 0/0
  9364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9367 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9368 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9369 ;;Total ram usage:        1 bytes
  9370 ;; Hardware stack levels used: 1
  9371 ;; This function calls:
  9372 ;;		Nothing
  9373 ;; This function is called by:
  9374 ;;		i2_I2C_2_Master_Start
  9375 ;;		i2_I2C_2_Master_Stop
  9376 ;;		i2_I2C_2_Master_Write
  9377 ;; This function uses a non-reentrant model
  9378 ;;
  9379                           
  9380                           	psect	text62
  9381   00297E                     __ptext62:
  9382                           	callstack 0
  9383   00297E                     i2_I2C_2_Master_Idle:
  9384                           	callstack 16
  9385   00297E                     i2l89:
  9386   00297E  010E               	movlb	14	; () banked
  9387   002980  B5D8               	btfsc	216,2,b	;volatile
  9388   002982  EFC5  F014         	goto	i2u226_41
  9389   002986  EFC7  F014         	goto	i2u226_40
  9390   00298A                     i2u226_41:
  9391   00298A  EFBF  F014         	goto	i2l89
  9392   00298E                     i2u226_40:
  9393   00298E                     
  9394                           ; BSR set to: 14
  9395   00298E  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  9396   002992  0E1F               	movlw	31
  9397   002994  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  9398   002996  A4D8               	btfss	status,2,c
  9399   002998  EFD0  F014         	goto	i2u227_41
  9400   00299C  EFD2  F014         	goto	i2u227_40
  9401   0029A0                     i2u227_41:
  9402   0029A0  EFBF  F014         	goto	i2l89
  9403   0029A4                     i2u227_40:
  9404   0029A4                     
  9405                           ; BSR set to: 14
  9406   0029A4  0012               	return		;funcret
  9407   0029A6                     __end_ofi2_I2C_2_Master_Idle:
  9408                           	callstack 0
  9409   000000                     
  9410                           	psect	rparam
  9411   000000                     
  9412                           	psect	temp
  9413   000057                     btemp:
  9414                           	callstack 0
  9415   000057                     	ds	1
  9416   000000                     int$flags	set	btemp
  9417   000000                     wtemp8	set	btemp+1
  9418   000000                     ttemp5	set	btemp+1
  9419   000000                     ttemp6	set	btemp+4
  9420   000000                     ttemp7	set	btemp+8
  9421                           
  9422                           	psect	idloc
  9423                           
  9424                           ;Config register IDLOC0 @ 0x200000
  9425                           ;	unspecified, using default values
  9426   200000                     	org	2097152
  9427   200000  0FFF               	dw	4095
  9428                           
  9429                           ;Config register IDLOC1 @ 0x200002
  9430                           ;	unspecified, using default values
  9431   200002                     	org	2097154
  9432   200002  0FFF               	dw	4095
  9433                           
  9434                           ;Config register IDLOC2 @ 0x200004
  9435                           ;	unspecified, using default values
  9436   200004                     	org	2097156
  9437   200004  0FFF               	dw	4095
  9438                           
  9439                           ;Config register IDLOC3 @ 0x200006
  9440                           ;	unspecified, using default values
  9441   200006                     	org	2097158
  9442   200006  0FFF               	dw	4095
  9443                           
  9444                           ;Config register IDLOC4 @ 0x200008
  9445                           ;	unspecified, using default values
  9446   200008                     	org	2097160
  9447   200008  0FFF               	dw	4095
  9448                           
  9449                           ;Config register IDLOC5 @ 0x20000A
  9450                           ;	unspecified, using default values
  9451   20000A                     	org	2097162
  9452   20000A  0FFF               	dw	4095
  9453                           
  9454                           ;Config register IDLOC6 @ 0x20000C
  9455                           ;	unspecified, using default values
  9456   20000C                     	org	2097164
  9457   20000C  0FFF               	dw	4095
  9458                           
  9459                           ;Config register IDLOC7 @ 0x20000E
  9460                           ;	unspecified, using default values
  9461   20000E                     	org	2097166
  9462   20000E  0FFF               	dw	4095
  9463                           
  9464                           	psect	config
  9465                           
  9466                           ;Config register CONFIG1L @ 0x300000
  9467                           ;	External Oscillator mode Selection bits
  9468                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  9469                           ;	Power-up default value for COSC bits
  9470                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  9471   300000                     	org	3145728
  9472   300000  AA                 	db	170
  9473                           
  9474                           ;Config register CONFIG1H @ 0x300001
  9475                           ;	unspecified, using default values
  9476                           ;	Clock Out Enable bit
  9477                           ;	CLKOUTEN = 0x1, unprogrammed default
  9478                           ;	Clock Switch Enable bit
  9479                           ;	CSWEN = 0x1, unprogrammed default
  9480                           ;	Fail-Safe Clock Monitor Enable bit
  9481                           ;	FCMEN = 0x1, unprogrammed default
  9482   300001                     	org	3145729
  9483   300001  FF                 	db	255
  9484                           
  9485                           ;Config register CONFIG2L @ 0x300002
  9486                           ;	unspecified, using default values
  9487                           ;	Master Clear Enable bit
  9488                           ;	MCLRE = 0x1, unprogrammed default
  9489                           ;	Power-up Timer Enable bit
  9490                           ;	PWRTE = 0x1, unprogrammed default
  9491                           ;	Low-power BOR enable bit
  9492                           ;	LPBOREN = 0x1, unprogrammed default
  9493                           ;	Brown-out Reset Enable bits
  9494                           ;	BOREN = 0x3, unprogrammed default
  9495   300002                     	org	3145730
  9496   300002  FF                 	db	255
  9497                           
  9498                           ;Config register CONFIG2H @ 0x300003
  9499                           ;	unspecified, using default values
  9500                           ;	Brown Out Reset Voltage selection bits
  9501                           ;	BORV = 0x3, unprogrammed default
  9502                           ;	ZCD Disable bit
  9503                           ;	ZCD = 0x1, unprogrammed default
  9504                           ;	PPSLOCK bit One-Way Set Enable bit
  9505                           ;	PPS1WAY = 0x1, unprogrammed default
  9506                           ;	Stack Full/Underflow Reset Enable bit
  9507                           ;	STVREN = 0x1, unprogrammed default
  9508                           ;	Debugger Enable bit
  9509                           ;	DEBUG = 0x1, unprogrammed default
  9510                           ;	Extended Instruction Set Enable bit
  9511                           ;	XINST = 0x1, unprogrammed default
  9512   300003                     	org	3145731
  9513   300003  FF                 	db	255
  9514                           
  9515                           ;Config register CONFIG3L @ 0x300004
  9516                           ;	WDT Period Select bits
  9517                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  9518                           ;	WDT operating mode
  9519                           ;	WDTE = OFF, WDT Disabled
  9520   300004                     	org	3145732
  9521   300004  9F                 	db	159
  9522                           
  9523                           ;Config register CONFIG3H @ 0x300005
  9524                           ;	unspecified, using default values
  9525                           ;	WDT Window Select bits
  9526                           ;	WDTCWS = 0x7, unprogrammed default
  9527                           ;	WDT input clock selector
  9528                           ;	WDTCCS = 0x7, unprogrammed default
  9529   300005                     	org	3145733
  9530   300005  FF                 	db	255
  9531                           
  9532                           ;Config register CONFIG4L @ 0x300006
  9533                           ;	unspecified, using default values
  9534                           ;	Write Protection Block 0
  9535                           ;	WRT0 = 0x1, unprogrammed default
  9536                           ;	Write Protection Block 1
  9537                           ;	WRT1 = 0x1, unprogrammed default
  9538                           ;	Write Protection Block 2
  9539                           ;	WRT2 = 0x1, unprogrammed default
  9540                           ;	Write Protection Block 3
  9541                           ;	WRT3 = 0x1, unprogrammed default
  9542                           ;	Write Protection Block 3
  9543                           ;	WRT4 = 0x1, unprogrammed default
  9544                           ;	Write Protection Block 3
  9545                           ;	WRT5 = 0x1, unprogrammed default
  9546                           ;	Write Protection Block 3
  9547                           ;	WRT6 = 0x1, unprogrammed default
  9548                           ;	Write Protection Block 3
  9549                           ;	WRT7 = 0x1, unprogrammed default
  9550   300006                     	org	3145734
  9551   300006  FF                 	db	255
  9552                           
  9553                           ;Config register CONFIG4H @ 0x300007
  9554                           ;	unspecified, using default values
  9555                           ;	Configuration Register Write Protection bit
  9556                           ;	WRTC = 0x1, unprogrammed default
  9557                           ;	Boot Block Write Protection bit
  9558                           ;	WRTB = 0x1, unprogrammed default
  9559                           ;	Data EEPROM Write Protection bit
  9560                           ;	WRTD = 0x1, unprogrammed default
  9561                           ;	Scanner Enable bit
  9562                           ;	SCANE = 0x1, unprogrammed default
  9563                           ;	Low Voltage Programming Enable bit
  9564                           ;	LVP = 0x1, unprogrammed default
  9565   300007                     	org	3145735
  9566   300007  FF                 	db	255
  9567                           
  9568                           ;Config register CONFIG5L @ 0x300008
  9569                           ;	unspecified, using default values
  9570                           ;	UserNVM Program Memory Code Protection bit
  9571                           ;	CP = 0x1, unprogrammed default
  9572                           ;	DataNVM Memory Code Protection bit
  9573                           ;	CPD = 0x1, unprogrammed default
  9574   300008                     	org	3145736
  9575   300008  FF                 	db	255
  9576                           
  9577                           ;Config register CONFIG5H @ 0x300009
  9578                           ;	unspecified, using default values
  9579   300009                     	org	3145737
  9580   300009  FF                 	db	255
  9581                           
  9582                           ;Config register CONFIG6L @ 0x30000A
  9583                           ;	unspecified, using default values
  9584                           ;	Table Read Protection Block 0
  9585                           ;	EBTR0 = 0x1, unprogrammed default
  9586                           ;	Table Read Protection Block 1
  9587                           ;	EBTR1 = 0x1, unprogrammed default
  9588                           ;	Table Read Protection Block 2
  9589                           ;	EBTR2 = 0x1, unprogrammed default
  9590                           ;	Table Read Protection Block 3
  9591                           ;	EBTR3 = 0x1, unprogrammed default
  9592                           ;	Table Read Protection Block 4
  9593                           ;	EBTR4 = 0x1, unprogrammed default
  9594                           ;	Table Read Protection Block 5
  9595                           ;	EBTR5 = 0x1, unprogrammed default
  9596                           ;	Table Read Protection Block 6
  9597                           ;	EBTR6 = 0x1, unprogrammed default
  9598                           ;	Table Read Protection Block 7
  9599                           ;	EBTR7 = 0x1, unprogrammed default
  9600   30000A                     	org	3145738
  9601   30000A  FF                 	db	255
  9602                           
  9603                           ;Config register CONFIG6H @ 0x30000B
  9604                           ;	unspecified, using default values
  9605                           ;	Boot Block Table Read Protection bit
  9606                           ;	EBTRB = 0x1, unprogrammed default
  9607   30000B                     	org	3145739
  9608   30000B  FF                 	db	255
  9609                           tosu	equ	0xFFF
  9610                           tosh	equ	0xFFE
  9611                           tosl	equ	0xFFD
  9612                           stkptr	equ	0xFFC
  9613                           pclatu	equ	0xFFB
  9614                           pclath	equ	0xFFA
  9615                           pcl	equ	0xFF9
  9616                           tblptru	equ	0xFF8
  9617                           tblptrh	equ	0xFF7
  9618                           tblptrl	equ	0xFF6
  9619                           tablat	equ	0xFF5
  9620                           prodh	equ	0xFF4
  9621                           prodl	equ	0xFF3
  9622                           indf0	equ	0xFEF
  9623                           postinc0	equ	0xFEE
  9624                           postdec0	equ	0xFED
  9625                           preinc0	equ	0xFEC
  9626                           plusw0	equ	0xFEB
  9627                           fsr0h	equ	0xFEA
  9628                           fsr0l	equ	0xFE9
  9629                           wreg	equ	0xFE8
  9630                           indf1	equ	0xFE7
  9631                           postinc1	equ	0xFE6
  9632                           postdec1	equ	0xFE5
  9633                           preinc1	equ	0xFE4
  9634                           plusw1	equ	0xFE3
  9635                           fsr1h	equ	0xFE2
  9636                           fsr1l	equ	0xFE1
  9637                           bsr	equ	0xFE0
  9638                           indf2	equ	0xFDF
  9639                           postinc2	equ	0xFDE
  9640                           postdec2	equ	0xFDD
  9641                           preinc2	equ	0xFDC
  9642                           plusw2	equ	0xFDB
  9643                           fsr2h	equ	0xFDA
  9644                           fsr2l	equ	0xFD9
  9645                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         211
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     78      86
    BANK0           160     54     119
    BANK1           256      0     140
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    Return_Time@time_index	PTR unsigned char  size(2) Largest target is 1
		 -> time_index(COMRAM[1]), 

    Return_Time@time_array	PTR unsigned int  size(2) Largest target is 80
		 -> time_array(BANK1[80]), 

    Return_Anti_Moves@moves_index	PTR unsigned char  size(2) Largest target is 1
		 -> moves_index(COMRAM[1]), 

    Return_Anti_Moves@anti_moves_array	PTR unsigned char  size(2) Largest target is 40
		 -> anti_moves_array(BANK0[40]), 

    AppendTime@time_index	PTR unsigned char  size(2) Largest target is 1
		 -> time_index(COMRAM[1]), 

    AppendTime@time_array	PTR unsigned int  size(2) Largest target is 80
		 -> time_array(BANK1[80]), 

    AppendMoves@moves_index	PTR unsigned char  size(2) Largest target is 1
		 -> moves_index(COMRAM[1]), 

    AppendMoves@anti_moves_array	PTR unsigned char  size(2) Largest target is 40
		 -> anti_moves_array(BANK0[40]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    MoveBuggy@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    MoveBuggy@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    MoveBuggy@color_detected	PTR unsigned char  size(2) Largest target is 3561
		 -> RAM(DATA[3561]), 

    WhiteInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    WhiteInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    AntiPink@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    AntiPink@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    AntiYellow@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    AntiYellow@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    LightBlueInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    LightBlueInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    OrangeInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    OrangeInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    PinkInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    PinkInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    YellowInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    YellowInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    BlueInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    BlueInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    GreenInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    GreenInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    RedInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    RedInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnLeft135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnLeft90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    fullSpeedBackwards@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    fullSpeedBackwards@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    fullSpeedBackwards@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    fullSpeedBackwards@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    fullSpeedBackwards@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    fullSpeedBackwards@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    S1242DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    S1242DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), main@motorL(BANK0[9]), 

    detect_color@tempval	PTR struct RGB_val size(2) Largest target is 8
		 -> main@initial_color(BANK0[8]), 

    Update_RGBC@tempval	PTR struct RGB_val size(2) Largest target is 8
		 -> main@initial_color(BANK0[8]), 


Critical Paths under _main in COMRAM

    _detect_color->___fltol
    ___fltol->___flmul
    ___flmul->___fldiv
    ___fldiv->___xxtofl
    _color_click_init->_color_writetoaddr
    _WhiteInstructions->_MoveBuggy
    _MoveBuggy->_AntiPink
    _MoveBuggy->_AntiYellow
    _YellowInstructions->_turnRight90
    _PinkInstructions->_turnLeft90
    _OrangeInstructions->_turnRight135
    _turnRight135->_turnRight90
    _LightBlueInstructions->_turnLeft135
    _turnLeft135->_turnLeft90
    _AntiYellow->_BlueInstructions
    _AntiYellow->_RedInstructions
    _RedInstructions->_turnRight90
    _turnRight90->_turnRight
    _turnRight->_setMotorPWM
    _AntiPink->_BlueInstructions
    _AntiPink->_GreenInstructions
    _fullSpeedAhead->_setMotorPWM
    _GreenInstructions->_turnLeft90
    _BlueInstructions->_turnLeft90
    _turnLeft90->_turnLeft
    _turnLeft->_setMotorPWM
    _stop->_setMotorPWM
    _fullSpeedBackwards->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _Update_RGBC->_color_read_Blue
    _Update_RGBC->_color_read_Clear
    _Update_RGBC->_color_read_Green
    _Update_RGBC->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _interrupts_clear_colorclick->_init_colorclick_interrupts
    _init_colorclick_interrupts->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    i2_interrupts_clear_colorclick->i2_init_colorclick_interrupts
    i2_init_colorclick_interrupts->i2_color_writetoaddr
    i2_color_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_detect_color
    _detect_color->___fltol

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                32    32      0  490498
                                             22 BANK0     32    32      0
                         _AppendTime
                    _Interrupts_init
                           _LED_init
                          _MoveBuggy
                        _Timer0_init
                        _Update_RGBC
                  _WhiteInstructions
                         _WhiteLight
                   _color_click_init
                       _detect_color
                     _fullSpeedAhead
                    _initDCmotorsPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _detect_color                                        18    16      2    6580
                                              4 BANK0     18    16      2
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     616
                                              8 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     517
                                             72 COMRAM     6     2      4
                                              0 BANK0      4     4      0
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    1886
                                             47 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1541
                                             22 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     750
                                             12 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WhiteLight                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WhiteInstructions                                   11     7      4  248861
                                             58 COMRAM    11     7      4
                   _BlueInstructions
                          _MoveBuggy
                  _Return_Anti_Moves
                        _Return_Time
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (2) _Return_Time                                          9     5      4     219
                                              8 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (2) _Return_Anti_Moves                                    6     2      4     219
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _MoveBuggy                                            6     0      6  222680
                                             52 COMRAM     6     0      6
                           _AntiPink
                         _AntiYellow
                        _AppendMoves
                   _BlueInstructions
                  _GreenInstructions
              _LightBlueInstructions
                 _OrangeInstructions
                   _PinkInstructions
                    _RedInstructions
                 _YellowInstructions
 ---------------------------------------------------------------------------------
 (3) _YellowInstructions                                   7     3      4   16596
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                        _turnRight90
 ---------------------------------------------------------------------------------
 (3) _PinkInstructions                                     7     3      4   17204
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                         _turnLeft90
 ---------------------------------------------------------------------------------
 (3) _OrangeInstructions                                   7     3      4   24393
                                             43 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                       _turnRight135
 ---------------------------------------------------------------------------------
 (4) _turnRight135                                         5     1      4   15988
                                             38 COMRAM     5     1      4
                               _stop
                          _turnRight
                        _turnRight90
 ---------------------------------------------------------------------------------
 (3) _LightBlueInstructions                                7     3      4   25001
                                             43 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                        _turnLeft135
 ---------------------------------------------------------------------------------
 (4) _turnLeft135                                          5     1      4   16596
                                             38 COMRAM     5     1      4
                               _stop
                           _turnLeft
                         _turnLeft90
 ---------------------------------------------------------------------------------
 (3) _AppendMoves                                          6     2      4    1130
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _AntiYellow                                           7     3      4   42445
                                             45 COMRAM     7     3      4
                   _BlueInstructions
                    _RedInstructions
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (3) _RedInstructions                                      7     3      4   16748
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                        _turnRight90
 ---------------------------------------------------------------------------------
 (4) _turnRight90                                          5     1      4    8191
                                             33 COMRAM     5     1      4
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (5) _turnRight                                            6     2      4    2593
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _AntiPink                                             7     3      4   43053
                                             45 COMRAM     7     3      4
                   _BlueInstructions
                  _GreenInstructions
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (1) _fullSpeedAhead                                       6     2      4    2745
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _GreenInstructions                                    7     3      4   17356
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                         _turnLeft90
 ---------------------------------------------------------------------------------
 (3) _BlueInstructions                                     7     3      4   17704
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                         _turnLeft90
 ---------------------------------------------------------------------------------
 (4) _turnLeft90                                           5     1      4    8799
                                             33 COMRAM     5     1      4
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (5) _turnLeft                                             6     2      4    2593
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _stop                                                 5     1      4    4873
                                             27 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _fullSpeedBackwards                                   6     2      4    3201
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    1829
                                             21 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                             14 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Update_RGBC                                          2     0      2     616
                                             19 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              9 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0     772
        _interrupts_clear_colorclick
 ---------------------------------------------------------------------------------
 (2) _interrupts_clear_colorclick                          0     0      0     772
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
         _init_colorclick_interrupts
 ---------------------------------------------------------------------------------
 (3) _init_colorclick_interrupts                           1     1      0     750
                                             12 COMRAM     1     1      0
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     750
                                             10 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              9 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _AppendTime                                           9     3      6     750
                                              8 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _LowISR                                               3     3      0       0
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _HighISR                                             0     0      0     244
      i2_interrupts_clear_colorclick
 ---------------------------------------------------------------------------------
 (11) i2_interrupts_clear_colorclick                       0     0      0     244
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
       i2_init_colorclick_interrupts
 ---------------------------------------------------------------------------------
 (12) i2_init_colorclick_interrupts                        1     1      0     222
                                              4 COMRAM     1     1      0
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (13) i2_color_writetoaddr                                 2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (14) i2_I2C_2_Master_Write                                1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (14) i2_I2C_2_Master_Stop                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (14) i2_I2C_2_Master_Start                                0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (15) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AppendTime
   _Interrupts_init
     _interrupts_clear_colorclick
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
       _init_colorclick_interrupts
         _color_writetoaddr
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
   _LED_init
   _MoveBuggy
     _AntiPink
       _BlueInstructions
         _fullSpeedBackwards
           _setMotorPWM
             ___lwdiv
               ___wmul (ARG)
             ___wmul
         _stop
           _setMotorPWM
         _turnLeft90
           _stop
           _turnLeft
             _setMotorPWM
       _GreenInstructions
         _fullSpeedBackwards
         _stop
         _turnLeft90
       _fullSpeedAhead
         _setMotorPWM
       _stop
     _AntiYellow
       _BlueInstructions
       _RedInstructions
         _fullSpeedBackwards
         _stop
         _turnRight90
           _stop
           _turnRight
             _setMotorPWM
       _fullSpeedAhead
       _stop
     _AppendMoves
     _BlueInstructions
     _GreenInstructions
     _LightBlueInstructions
       _fullSpeedBackwards
       _stop
       _turnLeft135
         _stop
         _turnLeft
         _turnLeft90
     _OrangeInstructions
       _fullSpeedBackwards
       _stop
       _turnRight135
         _stop
         _turnRight
         _turnRight90
     _PinkInstructions
       _fullSpeedBackwards
       _stop
       _turnLeft90
     _RedInstructions
     _YellowInstructions
       _fullSpeedBackwards
       _stop
       _turnRight90
   _Timer0_init
   _Update_RGBC
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _WhiteInstructions
     _BlueInstructions
     _MoveBuggy
     _Return_Anti_Moves
     _Return_Time
     _fullSpeedAhead
     _stop
   _WhiteLight
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
   _detect_color
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       ___fldiv (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _fullSpeedAhead
   _initDCmotorsPWM
   _stop

 _LowISR (ROOT)

 _HighISR (ROOT)
   i2_interrupts_clear_colorclick
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle
     i2_init_colorclick_interrupts
       i2_color_writetoaddr
         i2_I2C_2_Master_Start
         i2_I2C_2_Master_Stop
         i2_I2C_2_Master_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      64        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      8C       7       54.7%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     36      77       5       74.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4E      56       1       91.5%
BITBIGSFRhllllh     52      0       0      41        0.0%
BITBIGSFRhlllll     37      0       0      43        0.0%
BITBIGSFRlllhll     2A      0       0      55        0.0%
BITBIGSFRlllll      26      0       0      62        0.0%
BITBIGSFRllhh       20      0       0      46        0.0%
BITBIGSFRhhhhlh     1B      0       0      33        0.0%
BITBIGSFRhhhlll     17      0       0      38        0.0%
BITBIGSFRhhhhll     13      0       0      34        0.0%
BITBIGSFRlllhhh     11      0       0      49        0.0%
BITBIGSFRlllhhh     11      0       0      50        0.0%
BITBIGSFRhhhlhh      E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRlllhhh      C      0       0      48        0.0%
BITBIGSFRllhl        C      0       0      47        0.0%
BITBIGSFRlllhll      9      0       0      59        0.0%
BITBIGSFRhlllll      8      0       0      44        0.0%
BITBIGSFRllllh       6      0       0      61        0.0%
BITBIGSFRlllhll      6      0       0      54        0.0%
BITBIGSFRlllhll      5      0       0      57        0.0%
BITBIGSFRlllhlh      5      0       0      53        0.0%
BITBIGSFRhhhlll      5      0       0      39        0.0%
BITBIGSFRlllhll      3      0       0      56        0.0%
BITBIGSFRlllhll      3      0       0      58        0.0%
BITBIGSFRlllhhl      3      0       0      52        0.0%
BITBIGSFRhlllll      2      0       0      42        0.0%
BITBIGSFRhhhllh      2      0       0      37        0.0%
BITBIGSFRhhhlhl      1      0       0      36        0.0%
BITBIGSFRlllhhh      1      0       0      51        0.0%
BITBIGSFRhlllh       1      0       0      40        0.0%
BITBIGSFRlllhll      1      0       0      60        0.0%
BITBIGSFRlh          1      0       0      45        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     159      63        0.0%
DATA                 0      0     159       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Mar 13 20:25:41 2023

                       _color_read_Red 2626                           ___fldiv@aexp 002F  
                         ___fldiv@bexp 002E                           ___fldiv@sign 0027  
                      _color_read_Blue 2716                                     l21 28F8  
                                   l30 26C4                                     l24 2A72  
                                   l33 2764                                     l42 0674  
                                   l27 2674                                     l36 2714  
                                   l39 2624                                     l59 067A  
                                   l92 297C                                     l86 2954  
                                   l95 2B34                                     l89 2956  
                                   l98 2B20                                     bsr 000FE0  
                  ___wmul@multiplicand 000B                       _anti_moves_array 0077  
                     _color_read_Clear 26C6                       _color_read_Green 2676  
           WhiteInstructions@anticolor 0043                      ??_Interrupts_init 000E  
                                  l101 2B2A                                    l104 2B0A  
                                  l107 288C                                    l203 1AA2  
                                  l132 2ACA                                    l213 19B4  
                                  l135 2B50                                    l208 18C6  
                                  l321 27B4                                    l233 20C2  
                                  l314 2AB0                                    l218 1B90  
                                  l324 2AE4                                    l260 2558  
                                  l440 2A52                                    l248 2014  
                                  l193 16D0                                    l506 1F66  
                                  l186 2152                                    l515 21D8  
                                  l524 225E                                    l701 29EE  
                                  l269 25C6                                    l533 22E4  
                                  l198 1D50                                    l542 236A  
                                  l710 28C4                                    l551 1E02  
                                  l704 292A                                    l560 1EB4  
                                  l713 29CA                                    l707 2A10  
                                  l572 1C7C                                    l488 23F0  
                                  l672 0F68                                    l497 2476  
                                  l668 0ECC                                    l599 13B0  
                  i2_color_writetoaddr 2A74                                    wreg 000FE8  
                         ___flmul@aexp 0041                           ___flmul@bexp 0042  
                         ___flmul@sign 003C                           ___flmul@temp 0047  
                         ___flmul@prod 0043                           ___fltol@exp1 004E  
                                 l1010 17D8                                   l1211 24EA  
                                 l1204 24E2                                   l1300 0C62  
                                 l3000 25B6                                   l3010 239E  
                                 l3002 236C                                   l1306 0CE4  
                                 l1331 0AA4                                   l3100 27A8  
                                 l3020 23F2                                   l3012 23B2  
                                 l3004 2374                                   l1308 0D5C  
                                 l1309 0D4A                                   l3030 2438  
                                 l3022 23FA                                   l3014 23B4  
                                 l3006 2388                                   l3110 2186  
                                 l3102 2154                                   l1334 0936  
                                 l1327 0740                                   l3040 1EBE  
                                 l3032 243A                                   l3024 240E  
                                 l3200 1E1C                                   l3016 23C4  
                                 l3008 238A                                   l3120 21DA  
                                 l3112 219A                                   l3104 215C  
                                 l1344 0A66                                   l1336 09AE  
                                 l1337 099C                                   l3050 1EFE  
                                 l3042 1ED2                                   l3034 244A  
                                 l3026 2410                                   l3210 1E76  
                                 l3202 1E38                                   l3018 23DC  
                                 l3130 2220                                   l3122 21E2  
                                 l3114 219C                                   l3106 2170  
                                 l1371 1564                                   l3052 1F0E  
                                 l3044 1ED4                                   l3036 2462  
                                 l3028 2424                                   l3212 1E78  
                                 l3204 1E4C                                   l3140 2268  
                                 l3132 2222                                   l3124 21F6  
                                 l3116 21AC                                   l3108 2172  
                                 l3300 1244                                   l4100 1728  
                                 l3070 2B18                                   l3054 1F26  
                                 l3046 1EE8                                   l3038 1EB6  
                                 l3214 1E88                                   l3206 1E4E  
                                 l3150 22A8                                   l3142 227C  
                                 l3134 2232                                   l3126 21F8  
                                 l3118 21C4                                   l3310 12A2  
                                 l3302 1252                                   l3230 2940  
                                 l3222 292C                                   l4102 172A  
                                 l1382 14FC                                   l1295 0E3E  
                                 l1375 14A0                                   l3080 2862  
                                 l3072 2B1C                                   l3240 2676  
                                 l3056 1F3A                                   l3048 1EFC  
                                 l3216 1EA0                                   l3208 1E62  
                                 l3160 2302                                   l3152 22B8  
                                 l3144 227E                                   l3136 224A  
                                 l3128 220C                                   l3320 130C  
                                 l3312 12BC                                   l3304 126C  
                                 l3232 2942                                   l3224 2936  
                                 l3400 0C16                                   l4104 173A  
                                 l1368 1408                                   l4200 04C8  
                                 l1297 0C9E                                   l3090 2770  
                                 l3082 2888                                   l3074 284E  
                                 l3242 26BC                                   l3234 2626  
                                 l3218 29CE                                   l3170 233E  
                                 l3162 2304                                   l3154 22D0  
                                 l3146 2292                                   l3138 2260  
                                 l3330 1370                                   l3322 1320  
                                 l3314 12D0                                   l3306 1280  
                                 l3226 293C                                   l3410 0C60  
                                 l3402 0C26                                   l4130 17B8  
                                 l4114 1764                                   l4106 173E  
                                 l4210 0510                                   l4202 04D0  
                                 l3092 2780                                   l3084 288A  
                                 l3076 2852                                   l3252 26C6  
                                 l3236 266C                                   l3180 1D86  
                                 l3172 2356                                   l3164 2318  
                                 l3156 22E6                                   l3148 22A6  
                                 l3332 1388                                   l3324 1334  
                                 l3316 12E4                                   l3308 1294  
                                 l3260 288E                                   l3228 293E  
                                 l3420 0CAE                                   l3412 0C6C  
                                 l3404 0C2E                                   l3340 0AC0  
                                 l3500 070A                                   l4132 17C8  
                                 l4124 178C                                   l4116 176E  
                                 l4108 174C                                   l4220 0558  
                                 l4212 0520                                   l4204 04E0  
                                 l4140 0148                                   l4300 0EDE  
                                 l3094 278A                                   l3078 285A  
                                 l3246 2716                                   l3254 270C  
                                 l3190 1DC6                                   l3182 1D9A  
                                 l3174 1D52                                   l3166 232C  
                                 l3158 22EE                                   l3334 139C  
                                 l3326 1342                                   l3318 12F2  
                                 l3262 28BC                                   l3422 0CC4  
                                 l3430 0CF4                                   l3414 0C8A  
                                 l3406 0C3E                                   l3350 0AF4  
                                 l3342 0AC2                                   l3510 0760  
                                 l3502 071A                                   l4126 1798  
                                 l4118 1778                                   l4222 0568  
                                 l4230 05A0                                   l4214 0530  
                                 l4206 04F0                                   l4150 0350  
                                 l4142 0234                                   l4310 0F22  
                                 l4302 0EEC                                   l3096 2794  
                                 l3088 2766                                   l3248 275C  
                                 l2800 1630                                   l3192 1DD6  
                                 l3184 1D9C                                   l3176 1D56  
                                 l3168 232E                                   l3328 135C  
                                 l3280 117C                                   l3272 112E  
                                 l3432 0D02                                   l3424 0CCA  
                                 l3416 0C8C                                   l3408 0C52  
                                 l3360 0B26                                   l3344 0AD2  
                                 l3352 0AFC                                   l3336 0AA6  
                                 l3600 0A94                                   l3520 07A0  
                                 l3504 072A                                   l4128 17A8  
                                 l4240 05F0                                   l4232 05B0  
                                 l4224 0578                                   l4208 0500  
                                 l4216 0538                                   l4152 0360  
                                 l4160 0398                                   l4144 0320  
                                 l4136 005C                                   l4320 0F78  
                                 l4312 0F38                                   l4304 0F00  
                                 l3098 279E                                   l3258 2ACC  
                                 l2802 164C                                   l2810 1C7E  
                                 l3194 1DEE                                   l3186 1DB0  
                                 l3178 1D6A                                   l3290 11E0  
                                 l3282 1190                                   l3274 1140  
                                 l3266 29F0                                   l3442 0D6C  
                                 l3450 0DB4                                   l3434 0D06  
                                 l3426 0CD4                                   l3418 0C9C  
                                 l3370 0B5A                                   l3362 0B28  
                                 l3354 0B0C                                   l3346 0AE2  
                                 l3338 0AB2                                   l3530 07EA  
                                 l3522 07AC                                   l3514 0774  
                                 l3506 0730                                   l4250 0638  
                                 l4242 0600                                   l4234 05C0  
                                 l4226 0588                                   l4218 0548  
                                 l4170 03E8                                   l4162 03A8  
                                 l4154 0370                                   l4146 0330  
                                 l4138 0062                                   l4330 0FD4  
                                 l4322 0F88                                   l4314 0F4E  
                                 l4306 0F0C                                   l2804 1690  
                                 l2820 1CFC                                   l2812 1CB6  
                                 l2900 2034                                   l3196 1E04  
                                 l3188 1DC4                                   l3292 11F4  
                                 l3284 11A4                                   l3276 1154  
                                 l3268 2A0E                                   l3460 0E1E  
                                 l3452 0DCE                                   l3444 0D78  
                                 l3436 0D14                                   l3428 0CE2  
                                 l3380 0BA0                                   l3364 0B38  
                                 l3372 0B62                                   l3356 0B12  
                                 l3348 0AF2                                   l3540 083C  
                                 l3532 07F6                                   l3524 07C4  
                                 l3516 0780                                   l3508 0750  
                                 l4092 16D2                                   l4252 0648  
                                 l4236 05D0                                   l4244 0608  
                                 l4228 0598                                   l4180 0430  
                                 l4172 03F8                                   l4164 03B8  
                                 l4156 0380                                   l4148 0340  
                                 l4340 1030                                   l4332 0FDC  
                                 l4324 0F9A                                   l4316 0F50  
                                 l4308 0F1E                                   l2806 2956  
                                 l2822 1D2A                                   l2814 1CC2  
                                 l2830 1A12                                   l2910 2086  
                                 l2902 2048                                   l3198 1E08  
                                 l3294 1202                                   l3286 11B2  
                                 l3278 1162                                   l3710 28CA  
                                 l3462 0E2C                                   l3454 0DE4  
                                 l3446 0D86                                   l3438 0D42  
                                 l3390 0BC8                                   l3382 0BA4  
                                 l3374 0B72                                   l3366 0B48  
                                 l3358 0B18                                   l3550 08BA  
                                 l3542 084C                                   l3534 0806  
                                 l3526 07D0                                   l3518 078A  
                                 l4094 16E8                                   l4254 0658  
                                 l4246 0618                                   l4238 05E0  
                                 l4190 0478                                   l4182 0440  
                                 l4166 03C8                                   l4174 0400  
                                 l4158 0390                                   l4350 1064  
                                 l4342 1036                                   l4334 0FF0  
                                 l4326 0FBA                                   l4318 0F60  
                                 l4270 0E7E                                   l4262 0E40  
                                 l2808 2966                                   l2824 1D36  
                                 l2816 1CDA                                   l2840 1A72  
                                 l2832 1A1E                                   l2912 2088  
                                 l2904 205C                                   l2920 1F68  
                                 l3296 121C                                   l3288 11CC  
                                 l3712 28D4                                   l3464 0E32  
                                 l3456 0DFE                                   l3448 0DB0  
                                 l3376 0B88                                   l3368 0B58  
                                 l3560 0934                                   l3552 08F0  
                                 l3544 0868                                   l3536 0812  
                                 l3528 07DC                                   l3480 0698  
                                 l4256 0668                                   l4248 0628  
                                 l4192 0488                                   l4184 0450  
                                 l4176 0410                                   l4168 03D8  
                                 l4360 10D6                                   l4352 1094  
                                 l4344 103A                                   l4336 100A  
                                 l4328 0FC0                                   l4280 0E9C  
                                 l4272 0E84                                   l4264 0E62  
                                 l2770 2480                                   l2762 29A6  
                                 l2826 1D42                                   l2818 1CE6  
                                 l2842 1A7E                                   l2834 1A3A  
                                 l2914 209C                                   l2906 205E  
                                 l2850 1842                                   l2930 1FAE  
                                 l2922 1F70                                   l3298 1230  
                                 l3714 28E4                                   l3466 0E34  
                                 l3458 0E1A                                   l3394 0BDC  
                                 l3378 0B98                                   l3386 0BB8  
                                 l3570 0994                                   l3562 0946  
                                 l3554 08FE                                   l3546 0874  
                                 l3538 0822                                   l3490 06DE  
                                 l3482 06A8                                   l3474 067C  
                                 l4098 16FC                                   l3650 13C4  
                                 l4258 0670                                   l4194 0498  
                                 l4186 0460                                   l4178 0420  
                                 l4370 1120                                   l4362 10EA  
                                 l4354 10B4                                   l4338 100C  
                                 l4346 1042                                   l4290 0EB6  
                                 l4282 0EA2                                   l4274 0E88  
                                 l4266 0E66                                   l2780 24B6  
                                 l2772 2492                                   l2764 29C2  
                                 l2844 1A8A                                   l2836 1A46  
                                 l2828 19B6                                   l2916 20B0  
                                 l2908 2072                                   l2860 18A2  
                                 l2852 185E                                   l2940 1FEE  
                                 l2932 1FB0                                   l2924 1F84  
                                 l3900 1B92                                   l3716 28EE  
                                 l3708 28C6                                   l3396 0BF6  
                                 l3388 0BC8                                   l3580 0A02  
                                 l3564 0954                                   l3556 091C  
                                 l3548 0890                                   l3492 06E4  
                                 l3484 06B8                                   l3476 0688  
                                 l3660 1442                                   l3652 13D2  
                                 l4196 04A8                                   l4188 0468  
                                 l4364 1104                                   l4356 10BA  
                                 l4348 1054                                   l4292 0EBE  
                                 l4284 0EA6                                   l4276 0E8C  
                                 l4268 0E6A                                   l2870 2B06  
                                 l2950 2A56                                   l3718 25C8  
                                 l2782 24CC                                   l2774 249A  
                                 l2790 1566                                   l2838 1A5C  
                                 l2918 20B2                                   l2862 18AE  
                                 l2854 186A                                   l2846 17DA  
                                 l2942 2002                                   l2934 1FC4  
                                 l2926 1F86                                   l3910 1BEA  
                                 l3902 1B96                                   l3398 0C06  
                                 l3590 0A6A                                   l3574 09BE  
                                 l3582 0A06                                   l3566 0958  
                                 l3558 0926                                   l3494 06EA  
                                 l3486 06C8                                   l3478 0696  
                                 l3670 1496                                   l3662 144A  
                                 l3654 1418                                   l4198 04B8  
                                 l4366 1118                                   l4358 10CE  
                                 l4294 0EC4                                   l4286 0EAA  
                                 l4278 0E94                                   l2864 2B2C  
                                 l2872 2B22                                   l2784 24D4  
                                 l2776 24A2                                   l2768 2478  
                                 l2792 1582                                   l2880 1B0C  
                                 l2960 1958                                   l2952 18C8  
                                 l2856 1880                                   l2848 1836  
                                 l2944 2004                                   l2936 1FD8  
                                 l2928 1F9A                                   l3920 1C34  
                                 l3912 1BEE                                   l3904 1BAE  
                                 l3592 0A7A                                   l3584 0A20  
                                 l3576 09CA                                   l3568 0966  
                                 l3496 06F8                                   l3488 06CE  
                                 l3680 150C                                   l3672 14D2  
                                 l3664 1456                                   l3656 142E  
                                 l3648 13B4                                   l4368 111A  
                                 l4296 0EC8                                   l4288 0EAE  
                                 l2866 2B30                                   l2874 2B26  
                                 l2786 24D6                                   l2778 24B0  
                                 l2794 15D6                                   l2890 1B6C  
                                 l2882 1B28                                   l2962 196E  
                                 l2954 1924                                   l2858 1896  
                                 l2938 1FDA                                   l2970 24EC  
                                 l3922 1C4A                                   l3914 1C08  
                                 l3906 1BB6                                   l3594 0A88  
                                 l3586 0A34                                   l3578 09D8  
                                 l3498 06FA                                   l3690 1554  
                                 l3682 1510                                   l3674 14DE  
                                 l3666 1488                                   l3850 20C4  
                                 l4298 0EDA                                   l2868 2B02  
                                 l2788 24DC                                   l2796 15EA  
                                 l2892 1B78                                   l2884 1B34  
                                 l2876 1AA4                                   l2964 1984  
                                 l2956 1930                                   l2980 2532  
                                 l2972 2500                                   l3916 1C1C  
                                 l3908 1BD6                                   l3924 1C6C  
                                 l3596 0A8A                                   l3588 0A4E  
                                 l3684 1534                                   l3676 14EC  
                                 l3668 148A                                   l3860 212C  
                                 l3852 20D4                                   l3926 28FA  
                                 l3846 2AB2                                   l2798 15EE  
                                 l2886 1B4A                                   l2878 1B00  
                                 l2894 2016                                   l2966 1990  
                                 l2958 194C                                   l2990 2576  
                                 l2982 2546                                   l2974 2508  
                                 l3918 1C22                                   l3598 0A90  
                                 l3686 1544                                   l3678 150A  
                                 l3870 2146                                   l3862 212E  
                                 l3854 20FA                                   l3880 2AAC  
                                 l2888 1B60                                   l2896 201E  
                                 l2968 199C                                   l2992 258A  
                                 l2984 2548                                   l2976 251C  
                                 l3848 2B4A                                   l3688 1552  
                                 l3872 2150                                   l3864 2138  
                                 l3856 20FE                                   l3882 2AAE  
                                 l3874 2A94                                   l2898 2032  
                                 l2994 258C                                   l2986 255A  
                                 l2978 251E                                   l3866 213A  
                                 l3858 2122                                   l3876 2AA6  
                                 l3892 2A34                                   l2996 25A0  
                                 l2988 256E                                   l3868 2144  
                                 l3878 2AAA                                   l3894 2A3C  
                                 l2998 25B4                                   l3896 2A46  
                                 l3898 2A50                                   u2100 1CB6  
                                 u2101 1CB2                                   u2030 2492  
                                 u2110 1CDA                                   u2031 248E  
                                 u2111 1CD6                                   u2040 24B0  
                                 u2120 1A12                                   u2200 2098  
                                 u3000 0760                                   u2041 24AC  
                                 u2121 1A0E                                   u2201 2094  
                                 u3001 075C                                   u2050 24CC  
                                 u2130 1A3A                                   u2210 20C2  
                                 u3010 08DA                                   u2051 24C8  
                                 u2131 1A36                                   u2211 20BE  
                                 u2060 1582                                   u2140 1836  
                                 u2220 1F96                                   u2300 252E  
                                 u3100 0A4E                                   u3020 0934  
                                 u2061 157E                                   u2141 1832  
                                 u2221 1F92                                   u2301 252A  
                                 u3101 0A4A                                   u3021 0930  
                                 u2070 164C                                   u2150 185E  
                                 u2230 1FC0                                   u2310 2558  
                                 u3110 0A88                                   u3030 0954  
                                 u2071 1648                                   u2151 185A  
                                 u2231 1FBC                                   u2311 2554  
                                 u3111 0A84                                   u3031 0950  
                                 u3015 08D0                                   u2080 2966  
                                 u2400 2876                                   u2160 1B00  
                                 u2240 1FEA                                   u2320 259C  
                                 u3040 0966                                   u4000 171E  
                                 u3200 13D2                           _BAUD4CONbits 000EE9  
                                 u2081 2962                                   u2401 286E  
                                 u2161 1AFC                                   u2241 1FE6  
                                 u2321 2598                                   u3041 0962  
                                 u3201 13CE                                   u2090 297C  
                                 u2170 1B28                                   u2250 2014  
                                 u2330 25C6                                   u3050 0994  
                                 u4010 174C                                   u3210 142E  
                                 u2091 2978                                   u2171 1B24  
                                 u2251 2010                                   u2331 25C2  
                                 u3051 0990                                   u4011 1748  
                                 u3211 142A                                   u2180 2044  
                                 u2340 239A                                   u2500 1DAC  
                                 u2420 2182                                   u3060 09AA  
                                 u4020 1760                                   u3220 1484  
                                 u4100 0370                                   u2181 2040  
                                 u2341 2396                                   u2501 1DA8  
                                 u2421 217E                                   u3061 09A6  
                                 u4021 175C                                   u4005 1712  
                                 u3221 1480                                   u4101 036C  
                                 u2190 206E                                   u2350 23C4  
                                 u2510 1DD6                                   u2430 21AC  
                                 u3070 09BE                                   u4030 1788  
                                 u3230 14CE                                   u4110 0380  
                                 u2191 206A                                   u2351 23C0  
                                 u2511 1DD2                                   u2431 21A8  
                                 u3071 09BA                                   u4031 1784  
                                 u3231 14CA                                   u4111 037C  
                                 u2360 2420                                   u2280 1924  
                                 u2520 1E5E                                   u2440 2208  
                                 u2600 1230                                   u3080 09D8  
                                 u4040 17A8                                   u3240 14EC  
                                 u4200 0420                                   u4120 0390  
                                 u2361 241C                                   u2281 1920  
                                 u2521 1E5A                                   u2441 2204  
                                 u2601 122C                                   u3081 09D4  
                                 u4041 17A4                                   u3241 14E8  
                                 u4201 041C                                   u4121 038C  
                                 u2418 2878                                   u2370 244A  
                                 u2290 194C                                   u2530 1E88  
                                 u2450 2232                                   u2610 1252  
                                 u3090 0A20                                   u4050 17B8  
                                 u3250 14FC                                   u4210 0430  
                                 u4130 03A8                                   _T2PR 000FBC  
                                 u2371 2446                                   u2291 1948  
                                 u2531 1E84                                   u2451 222E  
                                 u2611 124E                                   u3091 0A1C  
                                 u4051 17B4                                   u3251 14F8  
                                 u4211 042C                                   u4131 03A4  
                                 u2380 1EE4                                   u2460 228E  
                                 u2620 1280                                   u2540 1140  
                                 u2700 0AC0                                   u3260 150A  
                                 u4300 04C8                                   u4220 0440  
                                 u4140 03B8                                   u4060 0330  
                                 u2381 1EE0                                   u2461 228A  
                                 u2621 127C                                   u2541 113C  
                                 u2701 0ABC                                   u3261 1506  
                                 u4301 04C4                                   u4221 043C  
                                 u4141 03B4                                   u4061 032C  
                                 u2390 1F0E                                   u2470 22B8  
                                 u2630 12A2                                   u2550 1162  
                                 u2710 0AD2                                   u3270 1544  
                                 u3190 13C4                                   u4310 04E0  
                                 u4230 0450                                   u4150 03C8  
                                 u4070 0340                                   u2391 1F0A  
                                 u2471 22B4                                   u2631 129E  
                                 u2551 115E                                   u2711 0ACE  
                                 u3271 1540                                   u3191 13C0  
                                 u4311 04DC                                   u4231 044C  
                                 u4151 03C4                                   u4071 033C  
                                 u2480 2314                                   u2640 12D0  
                                 u2560 1190                                   u2800 0C8A  
                                 u2720 0AE2                                   u3280 1552  
                                 u4400 0578                                   u4320 04F0  
                                 u4240 0460                                   u4160 03D8  
                                 u4080 0350                                   u2481 2310  
                                 u2641 12CC                                   u2561 118C  
                                 u2801 0C86                                   u2721 0ADE  
                                 u3281 154E                                   u4401 0574  
                                 u4321 04EC                                   u4241 045C  
                                 u4161 03D4                                   u4081 034C  
                                 u2490 233E                                   u2650 12F2  
                                 u2570 11B2                                   u2810 0CAE  
                                 u2730 0B26                                   u4410 0588  
                                 u4330 0500                                   u4250 0478  
                                 u4170 03E8                                   u4090 0360  
                                 u2491 233A                                   u2651 12EE  
                                 u2571 11AE                                   u2811 0CAA  
                                 u2731 0B22                                   u4411 0584  
                                 u4331 04FC                                   u4251 0474  
                                 u4171 03E4                                   u4091 035C  
                                 u2660 1320                                   u2580 11E0  
                                 u2900 0DCE                                   u2820 0CC4  
                                 u2740 0B38                                   u4500 0628  
                                 u4420 0598                                   u4340 0510  
                                 u4260 0488                                   u4180 03F8  
                                 u2661 131C                                   u2581 11DC  
                                 u2901 0DCA                                   u2821 0CC0  
                                 u2741 0B34                                   u4501 0624  
                                 u4421 0594                                   u4341 050C  
                                 u4261 0484                                   u4181 03F4  
                                 u2670 1342                                   u2590 1202  
                                 u2910 0DFE                                   u2830 0CE2  
                                 u2750 0B48                                   u4510 0638  
                                 u4430 05B0                                   u4350 0520  
                                 u4270 0498                                   u4190 0410  
                                 u2671 133E                                   u2591 11FE  
                                 u2911 0DFA                                   u2831 0CDE  
                                 u2751 0B44                                   u4511 0634  
                                 u4431 05AC                                   u4351 051C  
                                 u4271 0494                                   u4191 040C  
                                 u2680 1370                                   u3800 1C34  
                                 u2920 0E2C                                   u2840 0D02  
                                 u2760 0B88                                   u4520 0648  
                                 u4440 05C0                                   u4360 0530  
                                 u4280 04A8                                   u4600 0F88  
                                 u2681 136C                                   u3801 1C30  
                                 u2921 0E28                                   u2841 0CFE  
                                 u2761 0B84                                   u4521 0644  
                                 u4441 05BC                                   u4361 052C  
                                 u4281 04A4                                   u4601 0F84  
                                 u2690 139C                                   u3810 1C7C  
                                 u2850 0D14                                   u2770 0BC8  
                                 u2930 0696                                   u4530 0658  
                                 u4450 05D0                                   u4370 0548  
                                 u4290 04B8                                   u4610 0F9A  
                                 u2691 1398                                   u3811 1C78  
                                 u2851 0D10                                   u2771 0BC4  
                                 u2931 0692                                   u4531 0654  
                                 u4451 05CC                                   u4371 0544  
                                 u4291 04B4                                   u4611 0F96  
                                 u2860 0D42                                   u2780 0C3E  
                                 u2940 06A8                                   u4540 0668  
                                 u4460 05E0                                   u4380 0558  
                                 u4620 0FF0                                   u2861 0D3E  
                                 u2781 0C3A                                   u2941 06A4  
                                 u4541 0664                                   u4461 05DC  
                                 u4381 0554                                   u4621 0FEC  
                                 u2870 0D58                                   u2790 0C60  
                                 u2950 06B8                                   u4470 05F0  
                                 u4390 0568                                   u4630 1054  
                                 u4550 0EDA                                   u2871 0D54  
                                 u2791 0C5C                                   u2951 06B4  
                                 u4471 05EC                                   u4391 0564  
                                 u4631 1050                                   u4551 0ED6  
                                 u2880 0D6C                                   u2960 06F8  
                                 u4480 0600                                   u4640 1064  
                                 u4560 0F38                                   u2881 0D68  
                                 u2961 06F4                                   u4481 05FC  
                                 u4641 1060                                   u4561 0F34  
                                 u2890 0D86                                   u2970 070A  
                                 u4490 0618                                   u4650 10EA  
                                 u4570 0F4E                                   u4707 223C  
                                 u2891 0D82                                   u2971 0706  
                                 u4491 0614                                   u4651 10E6  
                                 u4571 0F4A                                   u2980 071A  
                                 u4580 0F60                                   u4717 22C2  
                                 u2981 0716                                   u4581 0F5C  
                                 u3790 1C04                                   u2990 0750  
                                 u4590 0F78                                   u4807 2454  
                                 u4727 2348                                   u3791 1C00  
                                 u2991 074C                                   u4591 0F74  
                                 i2l24 2A92                                   u4817 1F18  
                                 u4737 1D74                                   u4827 1F44  
                                 u4747 1DE0                                   u4667 0FFC  
                                 u4837 1A94                                   u4757 23CE  
                                 u4677 10F6                                   u3990 16E8  
                                 u4847 1D48                                   u4767 18B8  
                                 u4687 28DA                                   u3991 16E4  
                                 u4857 1B82                                   u4777 1E26  
                                 u4697 21B6                                   u4867 2776  
                                 u4787 1E92                                   i2l92 29A4  
                                 u4797 19A6                                   i2l95 2B48  
                                 i2l89 297E      Return_Anti_Moves@anti_moves_array 000B  
                                 _main 0E40                    __end_of_AppendMoves 29F0  
                   _YellowInstructions 2154                                   fsr2h 000FDA  
                                 indf2 000FDF                                   fsr2l 000FD9  
                                 btemp 0057                                   _stop 1C7E  
       ??i2_init_colorclick_interrupts 0005                      main@initial_color 00BB  
                                 prodh 000FF4                                   prodl 000FF3  
                                 start 0058                   ?i2_color_writetoaddr 0003  
                      ___fldiv@new_exp 0028                 __end_of_color_read_Red 2676  
                      __end_of_HighISR 2A34                           ___param_bank 000000  
                          _turnLeft135 255A                    ?_YellowInstructions 0027  
                          _turnRight90 1F68                             _AntiYellow 1D52  
                     __end_of_LED_init 2ACC                          ___fltol@sign1 004D  
                           _AppendTime 28FA                                  ?_main 0001  
                      __end_of___fldiv 0E40                        __end_of___flmul 0AA6  
                      __end_of___fltol 17DA                                  ?_stop 001C  
                      __end_of___lwdiv 24EC                                  i2l101 2B3E  
                                i1l334 0048                                  i2l104 2B16  
                                i2l321 2804                                  i2l324 2AFE  
                                i2l342 2A30                                  _TMR0H 000FD4  
                                _TMR0L 000FD3             __end_of_I2C_2_Master_Start 2B36  
                 ??_YellowInstructions 002B             __end_of_I2C_2_Master_Write 2B0C  
                     _PinkInstructions 21DA                     _int_threshold_high 00D5  
                                main@b 00B8               __end_of_BlueInstructions 1F68  
                                tablat 000FF5                                  plusw2 000FDB  
                                ttemp5 0058                                  ttemp6 005B  
                                ttemp7 005F                                  status 000FD8  
                                wtemp8 0058                    detect_color@tempval 00A3  
                ??i2_color_writetoaddr 0004                __end_of_color_read_Blue 2766  
                _I2C_2_Master_RepStart 2B18                   fullSpeedBackwards@mL 001C  
                 fullSpeedBackwards@mR 001E                       __end_of_AntiPink 1EB6  
                      ?_color_read_Red 000D                        __initialization 2806  
                         __end_of_main 112E                   __end_of_detect_color 067C  
                         __end_of_stop 1D52                  _LightBlueInstructions 22E6  
                    ??_RedInstructions 002B    __end_of_interrupts_clear_colorclick 2AE6  
       ?i2_interrupts_clear_colorclick 0001            _interrupts_clear_colorclick 2ACC  
                               ??_main 00B5                                 ??_stop 0020  
                        __activetblptr 000000                           _turnRight135 24EC  
                    _Return_Anti_Moves 29F0                            _AppendMoves 29CC  
                         ?_setMotorPWM 0016                                 _CCPR1H 000FAA  
                               _CCPR2H 000FA6                                 _CCPR3H 000F25  
                               _CCPR4H 000F21                     ?_Return_Anti_Moves 0009  
                               _RC0PPS 000E62                                 _RC4REG 000EE3  
                               _RE2PPS 000E74                                 _RD5PPS 000E6F  
                               _RC7PPS 000E69                                 _RE4PPS 000E76  
                               _RD6PPS 000E70                                 i2l3060 2B44  
                               i2l3220 2A76                                 i1l3932 0026  
                               i2l3062 2B36                                 i1l3934 0036  
                               i2l3064 2B3A                                 i1l3936 0044  
                               i2l3058 2B40                                 i2l3066 2B0E  
                               i2l3068 2B12                                 i2l3700 27DA  
                               i2l3702 27E4                                 i2l3704 27EE  
                               i2l3706 27F8                                 i2l2946 297E  
                               _RG6PPS 000E88                                 i2l2948 298E  
                               i2l3940 2A22                                 i2l3694 27B6  
                               i2l3942 2A28                                 i2l3696 27C0  
                               i2l3928 2AE6                                 i2l3944 2A2C  
                               i2l3698 27D0                                 i2l3938 2A12  
                            ??_HighISR 0006               __end_of_color_click_init 28FA  
                               _RX4PPS 000E15                                 _TX4REG 000EE4  
                     __end_of___xxtofl 1566                    ??_Return_Anti_Moves 000D  
                               _LowISR 0018                          ??_Timer0_init 0009  
                         _CCPTMRS0bits 000FAD            AppendMoves@anti_moves_array 000B  
                Return_Time@time_array 000B                  Return_Time@time_index 0009  
                               ___wmul 29A6                              ??___fldiv 001F  
                            ??___flmul 0038                              ??___fltol 009F  
                            ??___lwdiv 0013                                 clear_0 2824  
                               clear_1 2830                                 clear_2 283C  
                          ?_AntiYellow 002E                                 isa$std 000001  
                          ?_AppendTime 0009                          ??_Return_Time 000D  
            __end_of_Return_Anti_Moves 2A12                             _WhiteLight 2B4A  
                               tblptrh 000FF7                                 tblptrl 000FF6  
                               tblptru 000FF8                                 stop@mL 001C  
                               stop@mR 001E                      ??_initDCmotorsPWM 000B  
           i2color_writetoaddr@address 0004                       __end_of_turnLeft 1AA4  
                         ___xxtofl@arg 0013                           ___xxtofl@exp 0012  
                         ___xxtofl@val 0009                          ??_Update_RGBC 0016  
                           __accesstop 0060                __end_of__initialization 2842  
             __end_of_color_read_Clear 2716               __end_of_color_read_Green 26C6  
               ?_I2C_2_Master_RepStart 0001                          ___rparam_used 000001  
                            ?_LED_init 0001                             ___fltol@f1 0049  
                     ?_color_read_Blue 000D                      _GreenInstructions 23F2  
                      _Interrupts_init 2A94                         __pcstackCOMRAM 0001  
               ?_LightBlueInstructions 002C                           __pidataBANK0 2B52  
                   ?_GreenInstructions 0027                         AppendTime@temp 0009  
                    detect_color@color 00B1                    __end_of_Timer0_init 2A54  
                          MoveBuggy@mL 0037                            MoveBuggy@mR 0039  
                  OrangeInstructions@a 0032                    ??_GreenInstructions 002B  
              MoveBuggy@color_detected 0035                              ?_AntiPink 002E  
         ??_init_colorclick_interrupts 000D                    __end_of_Return_Time 28C6  
                    __end_of_MoveBuggy 13B2                             __pbssBANK0 0060  
                           __pbssBANK1 0100              __end_of_GreenInstructions 2478  
                           ??_LED_init 0009                                ?_LowISR 0001  
                    _color_writetoaddr 2A54                           _T2CLKCONbits 000FBF  
                         ?_turnLeft135 0027                    __end_of_Update_RGBC 2626  
                   ?_color_writetoaddr 000B                                ?___wmul 0009  
             __end_of_PinkInstructions 2260                           ?_turnRight90 0022  
                  ??_color_writetoaddr 000C                              ?___xxtofl 0009  
                          ?_WhiteLight 0001                                _SP4BRGH 000EE6  
                              _SP4BRGL 000EE5                             ??_AntiPink 0032  
                              _SSP2ADD 000ED6                                _SSP2BUF 000ED5  
                           _color_flag 0076                           _detect_color 005C  
              __end_of_Interrupts_init 2AB2                      ?_BlueInstructions 0027  
               color_writetoaddr@value 000B                       ??_color_read_Red 000F  
                              _HighISR 0008              __end_of_color_writetoaddr 2A74  
                   WhiteInstructions@a 0044                     WhiteInstructions@c 0041  
                   ??_BlueInstructions 002B                        _RedInstructions 236C  
                   _I2C_2_Master_Start 2B2C                    i2_I2C_2_Master_Idle 297E  
                   _I2C_2_Master_Write 2B00                                __Hparam 0000  
                  i2_I2C_2_Master_Stop 2B36                                __Lparam 0000  
                    color_read_Red@tmp 0012                            _Timer0_init 2A34  
                  GreenInstructions@mL 0027                    GreenInstructions@mR 0029  
           __end_of_fullSpeedBackwards 1B92                                ___fldiv 0AA6  
                              ___flmul 067C                                ___fltol 16D2  
                  ?_I2C_2_Master_Start 0001                           turnLeft135@a 002B  
                              ___lwdiv 2478                    ?_I2C_2_Master_Write 0001  
                         turnLeft90@mL 0022                           turnLeft90@mR 0024  
                              __pcinit 2806                                __ramtop 0E00  
                            ?_turnLeft 001C                                __ptext0 0E40  
                              __ptext1 20C4                                __ptext2 005C  
                              __ptext3 13B2                                __ptext4 16D2  
                              __ptext5 067C                                __ptext6 0AA6  
                              __ptext7 28C6                                __ptext8 292C  
                              __ptext9 2B4A                   ?i2_I2C_2_Master_Idle 0001  
 __end_ofi2_init_colorclick_interrupts 2806           i2_init_colorclick_interrupts 27B6  
                            _T2CONbits 000FBD                            _Return_Time 288E  
                           ??___xxtofl 000D                   ?i2_I2C_2_Master_Stop 0001  
                            _T2HLTbits 000FBE                         main@lost_timer 00B7  
                        _RxBufWriteCnt 0054                           ?_AppendMoves 0009  
                              _tmr_ovf 0075                   ??_I2C_2_Master_Start 000A  
                 ??_I2C_2_Master_Write 000A                         __pintcode_body 2A12  
                 end_of_initialization 2842            __end_ofi2_color_writetoaddr 2A94  
         Return_Anti_Moves@moves_index 0009                      RedInstructions@mL 0027  
                   main@color_detected 00BA                      RedInstructions@mR 0029  
                              int_func 2A12                            _Update_RGBC 25C8  
                    ?_color_click_init 0001                           turnRight90@a 0026  
           __end_of_OrangeInstructions 22E6                     ??_color_click_init 000D  
                            AntiPink@a 0034                                postdec2 000FDD  
                              postinc0 000FEE                                postinc2 000FDE  
                           _time_array 013C                             _time_index 0056  
                         ??_AntiYellow 0032                        _initDCmotorsPWM 20C4  
                           ??_turnLeft 0020                           ??_AppendTime 000F  
                            _PORTFbits 000F8E                     setMotorPWM@negDuty 001B  
                ??i2_I2C_2_Master_Idle 0001                      __end_of_turnRight 18C8  
                ??i2_I2C_2_Master_Stop 0002                          ___xxtofl@sign 0011  
                  YellowInstructions@a 002D                              _TRISAbits 000F81  
                   setMotorPWM@posDuty 001A                              _TRISBbits 000F82  
                            _TRISCbits 000F83                              _TRISDbits 000F84  
   __end_of_init_colorclick_interrupts 27B6          ?i2_init_colorclick_interrupts 0001  
           _init_colorclick_interrupts 2766                              _TRISEbits 000F85  
                            _TRISFbits 000F86                              _TRISGbits 000F87  
                            _TRISHbits 000F88                            ___fldiv@grs 002A  
                          ___fldiv@rem 0023                     PinkInstructions@mL 0027  
                   PinkInstructions@mR 0029                       fullSpeedAhead@mL 001C  
                     fullSpeedAhead@mR 001E                __end_of_RedInstructions 23F2  
             color_writetoaddr@address 000C                ??_I2C_2_Master_RepStart 000A  
                     ?_Interrupts_init 0001                            ___flmul@grs 003D  
                          _CCP1CONbits 000FAB                      ?_color_read_Clear 000D  
                         _EUSART4RXbuf 0060                           _EUSART4TXbuf 0100  
                          _CCP2CONbits 000FA7                      ?_color_read_Green 000D  
                   __end_of_AntiYellow 1E04                            _CCP3CONbits 000F26  
                          _CCP4CONbits 000F22                     __end_of_AppendTime 292C  
              ??_LightBlueInstructions 0030                             main@motorL 00C3  
                           main@motorR 00CC                     ??_color_read_Clear 000F  
                   ??_color_read_Green 000F                             _turnLeft90 2016  
                       __end_of_LowISR 0058                 AppendMoves@moves_index 0009  
                       _fullSpeedAhead 18C8                         __end_of___wmul 29CC  
                      AppendMoves@temp 000E                     detect_color@dist_B 00B4  
                   detect_color@dist_G 00B3                     detect_color@dist_R 00B2  
                    _int_threshold_low 004F                    color_read_Clear@tmp 0012  
                  start_initialization 2806                          _TxBufWriteCnt 0052  
                 OrangeInstructions@mL 002C                   OrangeInstructions@mR 002E  
                Return_Anti_Moves@temp 000E                              _MoveBuggy 112E  
                  color_read_Green@tmp 0012                               ??_LowISR 0006  
              __end_of_initDCmotorsPWM 2154                 __end_of_fullSpeedAhead 19B6  
                             ??___wmul 000D                            __pdataBANK0 00D5  
        i2I2C_2_Master_Write@data_byte 0002                      ?_PinkInstructions 0027  
                   Update_RGBC@tempval 0014                     ??_PinkInstructions 002B  
         __end_ofi2_I2C_2_Master_Start 2B4A           __end_ofi2_I2C_2_Master_Write 2B18  
                            ___fldiv@a 001B                              ___fldiv@b 0017  
                            ___flmul@a 0034                              ___flmul@b 0030  
                          __pbssCOMRAM 004F                           ??_WhiteLight 0009  
                        __pcstackBANK0 009F                   AppendTime@time_array 000D  
                 AppendTime@time_index 000B                       ?_RedInstructions 0027  
                             ?_HighISR 0001                             ?_MoveBuggy 0035  
                     ___lwdiv@dividend 000F                           ?_Timer0_init 0001  
                          ?_turnLeft90 0022                        ?_fullSpeedAhead 001C  
                   BlueInstructions@mL 0027                     BlueInstructions@mR 0029  
                            __pintcode 0008                     __end_of_WhiteLight 2B52  
                             ?___fldiv 0017                               ?___flmul 0030  
                             ?___fltol 0049                               ?___lwdiv 000F  
                          __pintcodelo 0018           ?_interrupts_clear_colorclick 0001  
                 I2C_2_Master_Read@ack 000B                      _WhiteInstructions 1B92  
                 I2C_2_Master_Read@tmp 000C                          ?_turnRight135 0027  
                         ?_Return_Time 0009                      _I2C_2_Master_Idle 2956  
                   _fullSpeedBackwards 1AA4                      _I2C_2_Master_Init 292C  
                    _I2C_2_Master_Read 284C                     ?_WhiteInstructions 003B  
                    _I2C_2_Master_Stop 2B22                           _RxBufReadCnt 0053  
                   GreenInstructions@a 002D                     ?_I2C_2_Master_Idle 0001  
                   ?_I2C_2_Master_Init 0001                     ?_I2C_2_Master_Read 0001  
                        ??_setMotorPWM 0018                     ?_I2C_2_Master_Stop 0001  
                     ___lwdiv@quotient 0013                            turnLeft90@a 0026  
             initDCmotorsPWM@PWMperiod 0009                LightBlueInstructions@mL 002C  
              LightBlueInstructions@mR 002E                    ?_fullSpeedBackwards 001C  
                  ??_WhiteInstructions 003F                    ??_I2C_2_Master_Idle 0009  
                  ??_I2C_2_Master_Init 0009                           ?_Update_RGBC 0014  
                  ??_I2C_2_Master_Read 000A                         ___wmul@product 000D  
                             _LATAbits 000F79                    ??_I2C_2_Master_Stop 000A  
                             _LATCbits 000F7B                               _LATDbits 000F7C  
                             _LATEbits 000F7D                               _LATFbits 000F7E  
                      Return_Time@temp 0010                               _LATGbits 000F7F  
                             _LATHbits 000F80                               _IPR0bits 000E1F  
                             _PIE0bits 000E29                               _LED_init 2AB2  
                     RedInstructions@a 002D                               _PIE4bits 000E2D  
                             i1u382_20 0036                               i1u382_21 0032  
                          turnRight@mL 001C                            turnRight@mR 001E  
                             i2u226_40 298E                               i2u226_41 298A  
                             i2u227_40 29A4                              _lost_flag 0074  
                             i2u227_41 29A0                               _PIR0bits 000E33  
                             i2u383_40 2A22                               i2u383_41 2A1E  
                             _PIR4bits 000E37                               i2u487_47 27C6  
                     ?_initDCmotorsPWM 0009                               _SSP2CON2 000EDA  
                             _SSP2STAT 000ED8                   ??_fullSpeedBackwards 0020  
            __end_of_WhiteInstructions 1C7E                     _OrangeInstructions 2260  
                    PinkInstructions@a 002D              __end_of_I2C_2_Master_Idle 297E  
            __end_of_I2C_2_Master_Init 2956              __end_of_I2C_2_Master_Read 288E  
                    ___wmul@multiplier 0009                         ??_turnRight135 002B  
            __end_of_I2C_2_Master_Stop 2B2C                           setMotorPWM@m 0016  
          I2C_2_Master_Write@data_byte 000A          ??_interrupts_clear_colorclick 000E  
           __end_of_YellowInstructions 21DA                      ??_color_read_Blue 000F  
                  ?_OrangeInstructions 002C                           _TxBufReadCnt 0051  
          ?_init_colorclick_interrupts 0001                               _AntiPink 1E04  
             i2color_writetoaddr@value 0003                              _turnRight 17DA  
                  WhiteInstructions@mL 003B                    WhiteInstructions@mR 003D  
        __end_of_I2C_2_Master_RepStart 2B22                     color_read_Blue@tmp 0012  
                  __end_of_setMotorPWM 16D2                            ??_MoveBuggy 003B  
                 i2_I2C_2_Master_Start 2B40                   i2_I2C_2_Master_Write 2B0C  
                         AntiYellow@mL 002E                           AntiYellow@mR 0030  
                             __Hrparam 0000                   ??_OrangeInstructions 0030  
                             __Lrparam 0000          __end_of_LightBlueInstructions 236C  
          __end_ofi2_I2C_2_Master_Idle 29A6            __end_ofi2_I2C_2_Master_Stop 2B40  
                       turnRight135@mL 0027                         turnRight135@mR 0029  
                        turnLeft135@mL 0027                          turnLeft135@mR 0029  
                           _ANSELBbits 000E9A                             _ANSELDbits 000EA7  
                           _ANSELFbits 000EB4                               ___xxtofl 13B2  
                           _T0CON0bits 000FD5                             _T0CON1bits 000FD6  
                      ___lwdiv@divisor 0011                      BlueInstructions@a 002D  
                      ___lwdiv@counter 0015                             ?_turnRight 001C  
                             __ptext10 1B92                               __ptext11 288E  
                             __ptext20 29CC                               __ptext12 29F0  
                             __ptext21 1D52                               __ptext13 112E  
                             __ptext30 19B6                               __ptext22 236C  
                             __ptext14 2154                               __ptext31 1C7E  
                             __ptext23 1F68                               __ptext15 21DA  
                             __ptext40 2716                               __ptext32 1AA4  
                             __ptext24 17DA                               __ptext16 2260  
                             __ptext41 2B18                               __ptext33 1566  
                             __ptext25 1E04                               __ptext17 24EC  
                             __ptext50 2B22                               __ptext42 284C  
                             __ptext34 29A6                               __ptext26 18C8  
                             __ptext18 22E6                               __ptext51 2B2C  
                             __ptext43 2A34                               __ptext35 2478  
                             __ptext27 23F2                               __ptext19 255A  
                             __ptext60 2B36                               __ptext52 2956  
                             __ptext44 2AB2                               __ptext36 25C8  
                             __ptext28 1EB6                               __ptext61 2B40  
                             __ptext53 28FA                               __ptext45 2A94  
                             __ptext37 2626                               __ptext29 2016  
                             __ptext62 297E                               __ptext46 2ACC  
                             __ptext38 2676                               __ptext47 2766  
                             __ptext39 26C6                               __ptext56 2AE6  
                             __ptext48 2A54                               __ptext57 27B6  
                             __ptext49 2B00                               __ptext58 2A74  
                             __ptext59 2B0C                           _SSP2CON1bits 000ED9  
                         _SSP2CON2bits 000EDA        ??i2_interrupts_clear_colorclick 0006  
               LightBlueInstructions@a 0032                             turnLeft@mL 001C  
                           turnLeft@mR 001E                  ?i2_I2C_2_Master_Start 0001  
                ?i2_I2C_2_Master_Write 0001                          ??_turnLeft135 002B  
                             isa$xinst 000000                             _RC4STAbits 000EE7  
                             int$flags 0057                          ??_turnRight90 0026  
                     _BlueInstructions 1EB6                               _turnLeft 19B6  
                           _INTCONbits 000FF2                            AntiYellow@a 0034  
                          _setMotorPWM 1566                          ?_detect_color 00A3  
                        turnRight135@a 002B                               intlevel1 0000  
                             intlevel2 0000                          turnRight90@mL 0022  
                        turnRight90@mR 0024                       ??_fullSpeedAhead 0020  
                 __end_of_turnRight135 255A                           ??_turnLeft90 0026  
                           AntiPink@mL 002E                             AntiPink@mR 0030  
                          _moves_index 0055                       _color_click_init 28C6  
                  __end_of_turnLeft135 25C8                             _SSP2DATPPS 000E1D  
                           _SSP2CLKPPS 000E1C                    __end_of_turnRight90 2016  
                        ??_AppendMoves 000D                         ??_detect_color 00A5  
                          ??_turnRight 0020                     __end_of_turnLeft90 20C4  
                           _TX4STAbits 000EE8                 ??i2_I2C_2_Master_Start 0002  
               ??i2_I2C_2_Master_Write 0002                   YellowInstructions@mL 0027  
                 YellowInstructions@mR 0029  __end_ofi2_interrupts_clear_colorclick 2B00  
        i2_interrupts_clear_colorclick 2AE6  
