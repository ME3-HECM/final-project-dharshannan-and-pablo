

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Mar 09 15:40:09 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    61                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    62                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    71                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    72                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    73                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    74                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    75   000000                     
    76                           ; Generated 06/04/2022 GMT
    77                           ; 
    78                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    79                           ; All rights reserved.
    80                           ; 
    81                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    82                           ; 
    83                           ; Redistribution and use in source and binary forms, with or without modification, are
    84                           ; permitted provided that the following conditions are met:
    85                           ; 
    86                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    87                           ;        conditions and the following disclaimer.
    88                           ; 
    89                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    90                           ;        of conditions and the following disclaimer in the documentation and/or other
    91                           ;        materials provided with the distribution. Publication is not required when
    92                           ;        this file is used in an embedded application.
    93                           ; 
    94                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    95                           ;        software without specific prior written permission.
    96                           ; 
    97                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    98                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    99                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   100                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   101                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   102                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   103                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   104                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   105                           ; 
   106                           ; 
   107                           ; Code-generator required, PIC18F67K40 Definitions
   108                           ; 
   109                           ; SFR Addresses
   110   000000                     
   111                           	psect	idataCOMRAM
   112   002460                     __pidataCOMRAM:
   113                           	callstack 0
   114                           
   115                           ;initializer for _int_threshold_high
   116   002460  09C4               	dw	2500
   117   000000                     _T0CON0bits	set	4053
   118   000000                     _T0CON1bits	set	4054
   119   000000                     _TX4REG	set	3812
   120   000000                     _RC4STAbits	set	3815
   121   000000                     _SP4BRGH	set	3814
   122   000000                     _TRISBbits	set	3970
   123   000000                     _TRISCbits	set	3971
   124   000000                     _TRISEbits	set	3973
   125   000000                     _TRISFbits	set	3974
   126   000000                     _TRISGbits	set	3975
   127   000000                     _SSP2CON2bits	set	3802
   128   000000                     _INT1PPS	set	3569
   129   000000                     _SSP2CLKPPS	set	3612
   130   000000                     _SSP2DATPPS	set	3613
   131   000000                     _ANSELDbits	set	3751
   132   000000                     _SSP2ADD	set	3798
   133   000000                     _SSP2CON1bits	set	3801
   134   000000                     _RC4REG	set	3811
   135   000000                     _SP4BRGL	set	3813
   136   000000                     _TX4STAbits	set	3816
   137   000000                     _BAUD4CONbits	set	3817
   138   000000                     _LATAbits	set	3961
   139   000000                     _LATGbits	set	3967
   140   000000                     _LATHbits	set	3968
   141   000000                     _TRISAbits	set	3969
   142   000000                     _SSP2CON2	set	3802
   143   000000                     _TRISDbits	set	3972
   144   000000                     _CCPR4H	set	3873
   145   000000                     _CCPR3H	set	3877
   146   000000                     _SSP2STAT	set	3800
   147   000000                     _SSP2BUF	set	3797
   148   000000                     _IPR0bits	set	3615
   149   000000                     _PIE0bits	set	3625
   150   000000                     _RC7PPS	set	3689
   151   000000                     _RD5PPS	set	3695
   152   000000                     _RE2PPS	set	3700
   153   000000                     _RD6PPS	set	3696
   154   000000                     _T2PR	set	4028
   155   000000                     _T2CONbits	set	4029
   156   000000                     _TRISHbits	set	3976
   157   000000                     _CCPR2H	set	4006
   158   000000                     _CCPR1H	set	4010
   159   000000                     _LATCbits	set	3963
   160   000000                     _LATEbits	set	3965
   161   000000                     _LATFbits	set	3966
   162   000000                     _RE4PPS	set	3702
   163   000000                     _RG6PPS	set	3720
   164   000000                     _ANSELBbits	set	3738
   165   000000                     _TMR0L	set	4051
   166   000000                     _TMR0H	set	4052
   167   000000                     _INTCONbits	set	4082
   168   000000                     _T2CLKCONbits	set	4031
   169   000000                     _T2HLTbits	set	4030
   170   000000                     _CCP1CONbits	set	4011
   171   000000                     _CCPTMRS0bits	set	4013
   172   000000                     _CCP2CONbits	set	4007
   173   000000                     _CCP3CONbits	set	3878
   174   000000                     _CCP4CONbits	set	3874
   175   000000                     _RX4PPS	set	3605
   176   000000                     _PIE4bits	set	3629
   177   000000                     _PIR0bits	set	3635
   178   000000                     _PIR4bits	set	3639
   179   000000                     _RC0PPS	set	3682
   180                           
   181                           ; #config settings
   182                           
   183                           	psect	cinit
   184   0021CA                     __pcinit:
   185                           	callstack 0
   186   0021CA                     start_initialization:
   187                           	callstack 0
   188   0021CA                     __initialization:
   189                           	callstack 0
   190                           
   191                           ; Initialize objects allocated to COMRAM (2 bytes)
   192                           ; load TBLPTR registers with __pidataCOMRAM
   193   0021CA  0E60               	movlw	low __pidataCOMRAM
   194   0021CC  6EF6               	movwf	tblptrl,c
   195   0021CE  0E24               	movlw	high __pidataCOMRAM
   196   0021D0  6EF7               	movwf	tblptrh,c
   197   0021D2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   198   0021D4  6EF8               	movwf	tblptru,c
   199   0021D6  0009               	tblrd		*+	;fetch initializer
   200   0021D8  CFF5 F055          	movff	tablat,__pdataCOMRAM
   201   0021DC  0009               	tblrd		*+	;fetch initializer
   202   0021DE  CFF5 F056          	movff	tablat,__pdataCOMRAM+1
   203                           
   204                           ; Clear objects allocated to BANK1 (80 bytes)
   205   0021E2  EE01  F000         	lfsr	0,__pbssBANK1
   206   0021E6  0E50               	movlw	80
   207   0021E8                     clear_0:
   208   0021E8  6AEE               	clrf	postinc0,c
   209   0021EA  06E8               	decf	wreg,f,c
   210   0021EC  E1FD               	bnz	clear_0
   211                           
   212                           ; Clear objects allocated to BANK0 (84 bytes)
   213   0021EE  EE00  F060         	lfsr	0,__pbssBANK0
   214   0021F2  0E54               	movlw	84
   215   0021F4                     clear_1:
   216   0021F4  6AEE               	clrf	postinc0,c
   217   0021F6  06E8               	decf	wreg,f,c
   218   0021F8  E1FD               	bnz	clear_1
   219                           
   220                           ; Clear objects allocated to COMRAM (6 bytes)
   221   0021FA  6A54               	clrf	(__pbssCOMRAM+5)& (0+255),c
   222   0021FC  6A53               	clrf	(__pbssCOMRAM+4)& (0+255),c
   223   0021FE  6A52               	clrf	(__pbssCOMRAM+3)& (0+255),c
   224   002200  6A51               	clrf	(__pbssCOMRAM+2)& (0+255),c
   225   002202  6A50               	clrf	(__pbssCOMRAM+1)& (0+255),c
   226   002204  6A4F               	clrf	__pbssCOMRAM& (0+255),c
   227   002206                     end_of_initialization:
   228                           	callstack 0
   229   002206                     __end_of__initialization:
   230                           	callstack 0
   231   002206  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   232   002208  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   233   00220A  0100               	movlb	0
   234   00220C  EFAE  F008         	goto	_main	;jump to C main() function
   235                           
   236                           	psect	bssCOMRAM
   237   00004F                     __pbssCOMRAM:
   238                           	callstack 0
   239   00004F                     _int_threshold_low:
   240                           	callstack 0
   241   00004F                     	ds	2
   242   000051                     _TxBufReadCnt:
   243                           	callstack 0
   244   000051                     	ds	1
   245   000052                     _TxBufWriteCnt:
   246                           	callstack 0
   247   000052                     	ds	1
   248   000053                     _RxBufReadCnt:
   249                           	callstack 0
   250   000053                     	ds	1
   251   000054                     _RxBufWriteCnt:
   252                           	callstack 0
   253   000054                     	ds	1
   254                           
   255                           	psect	dataCOMRAM
   256   000055                     __pdataCOMRAM:
   257                           	callstack 0
   258   000055                     _int_threshold_high:
   259                           	callstack 0
   260   000055                     	ds	2
   261                           
   262                           	psect	bssBANK0
   263   000060                     __pbssBANK0:
   264                           	callstack 0
   265   000060                     _EUSART4TXbuf:
   266                           	callstack 0
   267   000060                     	ds	60
   268   00009C                     _EUSART4RXbuf:
   269                           	callstack 0
   270   00009C                     	ds	20
   271   0000B0                     _time_index:
   272                           	callstack 0
   273   0000B0                     	ds	1
   274   0000B1                     _moves_index:
   275                           	callstack 0
   276   0000B1                     	ds	1
   277   0000B2                     _tmr_ovf:
   278                           	callstack 0
   279   0000B2                     	ds	1
   280   0000B3                     _color_flag:
   281                           	callstack 0
   282   0000B3                     	ds	1
   283                           
   284                           	psect	bssBANK1
   285   000100                     __pbssBANK1:
   286                           	callstack 0
   287   000100                     _time_array:
   288                           	callstack 0
   289   000100                     	ds	40
   290   000128                     _anti_moves_array:
   291                           	callstack 0
   292   000128                     	ds	40
   293                           
   294                           	psect	cstackBANK0
   295   0000B4                     __pcstackBANK0:
   296                           	callstack 0
   297   0000B4                     ??___fltol:
   298                           
   299                           ; 1 bytes @ 0x0
   300   0000B4                     	ds	4
   301   0000B8                     detect_color@tempval:
   302                           	callstack 0
   303                           
   304                           ; 2 bytes @ 0x4
   305   0000B8                     	ds	2
   306   0000BA                     ??_detect_color:
   307                           
   308                           ; 1 bytes @ 0x6
   309   0000BA                     	ds	12
   310   0000C6                     detect_color@color:
   311                           	callstack 0
   312                           
   313                           ; 1 bytes @ 0x12
   314   0000C6                     	ds	1
   315   0000C7                     detect_color@dist_R:
   316                           	callstack 0
   317                           
   318                           ; 1 bytes @ 0x13
   319   0000C7                     	ds	1
   320   0000C8                     detect_color@dist_G:
   321                           	callstack 0
   322                           
   323                           ; 1 bytes @ 0x14
   324   0000C8                     	ds	1
   325   0000C9                     detect_color@dist_B:
   326                           	callstack 0
   327                           
   328                           ; 1 bytes @ 0x15
   329   0000C9                     	ds	1
   330   0000CA                     ??_main:
   331                           
   332                           ; 1 bytes @ 0x16
   333   0000CA                     	ds	2
   334   0000CC                     main@b:
   335                           	callstack 0
   336                           
   337                           ; 1 bytes @ 0x18
   338   0000CC                     	ds	1
   339   0000CD                     main@color_detected:
   340                           	callstack 0
   341                           
   342                           ; 1 bytes @ 0x19
   343   0000CD                     	ds	1
   344   0000CE                     main@initial_color:
   345                           	callstack 0
   346                           
   347                           ; 8 bytes @ 0x1A
   348   0000CE                     	ds	8
   349   0000D6                     main@motorL:
   350                           	callstack 0
   351                           
   352                           ; 9 bytes @ 0x22
   353   0000D6                     	ds	9
   354   0000DF                     main@motorR:
   355                           	callstack 0
   356                           
   357                           ; 9 bytes @ 0x2B
   358   0000DF                     	ds	9
   359                           
   360                           	psect	cstackCOMRAM
   361   000001                     __pcstackCOMRAM:
   362                           	callstack 0
   363   000001                     ??i2_I2C_2_Master_Idle:
   364   000001                     
   365                           ; 1 bytes @ 0x0
   366   000001                     	ds	1
   367   000002                     i2I2C_2_Master_Write@data_byte:
   368                           	callstack 0
   369                           
   370                           ; 1 bytes @ 0x1
   371   000002                     	ds	1
   372   000003                     i2color_writetoaddr@value:
   373                           	callstack 0
   374                           
   375                           ; 1 bytes @ 0x2
   376   000003                     	ds	1
   377   000004                     i2color_writetoaddr@address:
   378                           	callstack 0
   379                           
   380                           ; 1 bytes @ 0x3
   381   000004                     	ds	1
   382   000005                     ??i2_init_colorclick_interrupts:
   383                           
   384                           ; 1 bytes @ 0x4
   385   000005                     	ds	1
   386   000006                     ??_LowISR:
   387   000006                     
   388                           ; 1 bytes @ 0x5
   389   000006                     	ds	3
   390   000009                     ??_I2C_2_Master_Idle:
   391   000009                     ?___wmul:
   392                           	callstack 0
   393   000009                     ?___xxtofl:
   394                           	callstack 0
   395   000009                     initDCmotorsPWM@PWMperiod:
   396                           	callstack 0
   397   000009                     ___wmul@multiplier:
   398                           	callstack 0
   399   000009                     ___xxtofl@val:
   400                           	callstack 0
   401                           
   402                           ; 4 bytes @ 0x8
   403   000009                     	ds	1
   404   00000A                     ??_I2C_2_Master_Read:
   405   00000A                     I2C_2_Master_Write@data_byte:
   406                           	callstack 0
   407                           
   408                           ; 1 bytes @ 0x9
   409   00000A                     	ds	1
   410   00000B                     color_writetoaddr@value:
   411                           	callstack 0
   412   00000B                     I2C_2_Master_Read@ack:
   413                           	callstack 0
   414   00000B                     ___wmul@multiplicand:
   415                           	callstack 0
   416                           
   417                           ; 2 bytes @ 0xA
   418   00000B                     	ds	1
   419   00000C                     color_writetoaddr@address:
   420                           	callstack 0
   421   00000C                     I2C_2_Master_Read@tmp:
   422                           	callstack 0
   423                           
   424                           ; 1 bytes @ 0xB
   425   00000C                     	ds	1
   426   00000D                     ??_color_click_init:
   427   00000D                     ??_init_colorclick_interrupts:
   428   00000D                     ??___xxtofl:
   429   00000D                     ?_color_read_Red:
   430                           	callstack 0
   431   00000D                     ?_color_read_Green:
   432                           	callstack 0
   433   00000D                     ?_color_read_Blue:
   434                           	callstack 0
   435   00000D                     ?_color_read_Clear:
   436                           	callstack 0
   437   00000D                     ___wmul@product:
   438                           	callstack 0
   439                           
   440                           ; 2 bytes @ 0xC
   441   00000D                     	ds	1
   442   00000E                     
   443                           ; 1 bytes @ 0xD
   444   00000E                     	ds	1
   445   00000F                     ??_color_read_Red:
   446   00000F                     ??_color_read_Green:
   447   00000F                     ??_color_read_Blue:
   448   00000F                     ??_color_read_Clear:
   449   00000F                     ?___lwdiv:
   450                           	callstack 0
   451   00000F                     ___lwdiv@dividend:
   452                           	callstack 0
   453                           
   454                           ; 2 bytes @ 0xE
   455   00000F                     	ds	2
   456   000011                     ___xxtofl@sign:
   457                           	callstack 0
   458   000011                     ___lwdiv@divisor:
   459                           	callstack 0
   460                           
   461                           ; 2 bytes @ 0x10
   462   000011                     	ds	1
   463   000012                     ___xxtofl@exp:
   464                           	callstack 0
   465   000012                     color_read_Red@tmp:
   466                           	callstack 0
   467   000012                     color_read_Green@tmp:
   468                           	callstack 0
   469   000012                     color_read_Blue@tmp:
   470                           	callstack 0
   471   000012                     color_read_Clear@tmp:
   472                           	callstack 0
   473                           
   474                           ; 2 bytes @ 0x11
   475   000012                     	ds	1
   476   000013                     ___lwdiv@quotient:
   477                           	callstack 0
   478   000013                     ___xxtofl@arg:
   479                           	callstack 0
   480                           
   481                           ; 4 bytes @ 0x12
   482   000013                     	ds	1
   483   000014                     Update_RGBC@tempval:
   484                           	callstack 0
   485                           
   486                           ; 2 bytes @ 0x13
   487   000014                     	ds	1
   488   000015                     ___lwdiv@counter:
   489                           	callstack 0
   490                           
   491                           ; 1 bytes @ 0x14
   492   000015                     	ds	1
   493   000016                     setMotorPWM@m:
   494                           	callstack 0
   495                           
   496                           ; 2 bytes @ 0x15
   497   000016                     	ds	1
   498   000017                     ?___fldiv:
   499                           	callstack 0
   500   000017                     ___fldiv@b:
   501                           	callstack 0
   502                           
   503                           ; 4 bytes @ 0x16
   504   000017                     	ds	1
   505   000018                     ??_setMotorPWM:
   506                           
   507                           ; 1 bytes @ 0x17
   508   000018                     	ds	2
   509   00001A                     setMotorPWM@posDuty:
   510                           	callstack 0
   511                           
   512                           ; 1 bytes @ 0x19
   513   00001A                     	ds	1
   514   00001B                     setMotorPWM@negDuty:
   515                           	callstack 0
   516   00001B                     ___fldiv@a:
   517                           	callstack 0
   518                           
   519                           ; 4 bytes @ 0x1A
   520   00001B                     	ds	1
   521   00001C                     stop@mL:
   522                           	callstack 0
   523   00001C                     turnLeft@mL:
   524                           	callstack 0
   525   00001C                     turnRight@mL:
   526                           	callstack 0
   527   00001C                     fullSpeedAhead@mL:
   528                           	callstack 0
   529   00001C                     fullSpeedBackwards@mL:
   530                           	callstack 0
   531                           
   532                           ; 2 bytes @ 0x1B
   533   00001C                     	ds	2
   534   00001E                     stop@mR:
   535                           	callstack 0
   536   00001E                     turnLeft@mR:
   537                           	callstack 0
   538   00001E                     turnRight@mR:
   539                           	callstack 0
   540   00001E                     fullSpeedAhead@mR:
   541                           	callstack 0
   542   00001E                     fullSpeedBackwards@mR:
   543                           	callstack 0
   544                           
   545                           ; 2 bytes @ 0x1D
   546   00001E                     	ds	1
   547   00001F                     ??___fldiv:
   548                           
   549                           ; 1 bytes @ 0x1E
   550   00001F                     	ds	1
   551   000020                     ??_stop:
   552   000020                     ??_turnLeft:
   553   000020                     ??_turnRight:
   554   000020                     ??_fullSpeedAhead:
   555   000020                     ??_fullSpeedBackwards:
   556                           
   557                           ; 1 bytes @ 0x1F
   558   000020                     	ds	2
   559   000022                     turnLeft90@mL:
   560                           	callstack 0
   561   000022                     turnRight90@mL:
   562                           	callstack 0
   563   000022                     turnRight135@mL:
   564                           	callstack 0
   565   000022                     turnLeft135@mL:
   566                           	callstack 0
   567                           
   568                           ; 2 bytes @ 0x21
   569   000022                     	ds	1
   570   000023                     ___fldiv@rem:
   571                           	callstack 0
   572                           
   573                           ; 4 bytes @ 0x22
   574   000023                     	ds	1
   575   000024                     turnLeft90@mR:
   576                           	callstack 0
   577   000024                     turnRight90@mR:
   578                           	callstack 0
   579   000024                     turnRight135@mR:
   580                           	callstack 0
   581   000024                     turnLeft135@mR:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0x23
   585   000024                     	ds	2
   586   000026                     turnLeft90@a:
   587                           	callstack 0
   588   000026                     turnRight90@a:
   589                           	callstack 0
   590   000026                     turnRight135@a:
   591                           	callstack 0
   592   000026                     turnLeft135@a:
   593                           	callstack 0
   594                           
   595                           ; 1 bytes @ 0x25
   596   000026                     	ds	1
   597   000027                     ___fldiv@sign:
   598                           	callstack 0
   599   000027                     RedInstructions@mL:
   600                           	callstack 0
   601   000027                     GreenInstructions@mL:
   602                           	callstack 0
   603   000027                     BlueInstructions@mL:
   604                           	callstack 0
   605   000027                     YellowInstructions@mL:
   606                           	callstack 0
   607   000027                     PinkInstructions@mL:
   608                           	callstack 0
   609   000027                     OrangeInstructions@mL:
   610                           	callstack 0
   611   000027                     LightBlueInstructions@mL:
   612                           	callstack 0
   613                           
   614                           ; 2 bytes @ 0x26
   615   000027                     	ds	1
   616   000028                     ___fldiv@new_exp:
   617                           	callstack 0
   618                           
   619                           ; 2 bytes @ 0x27
   620   000028                     	ds	1
   621   000029                     RedInstructions@mR:
   622                           	callstack 0
   623   000029                     GreenInstructions@mR:
   624                           	callstack 0
   625   000029                     BlueInstructions@mR:
   626                           	callstack 0
   627   000029                     YellowInstructions@mR:
   628                           	callstack 0
   629   000029                     PinkInstructions@mR:
   630                           	callstack 0
   631   000029                     OrangeInstructions@mR:
   632                           	callstack 0
   633   000029                     LightBlueInstructions@mR:
   634                           	callstack 0
   635                           
   636                           ; 2 bytes @ 0x28
   637   000029                     	ds	1
   638   00002A                     ___fldiv@grs:
   639                           	callstack 0
   640                           
   641                           ; 4 bytes @ 0x29
   642   00002A                     	ds	1
   643   00002B                     ??_RedInstructions:
   644   00002B                     ??_GreenInstructions:
   645   00002B                     ??_BlueInstructions:
   646   00002B                     ??_YellowInstructions:
   647   00002B                     ??_PinkInstructions:
   648   00002B                     ??_OrangeInstructions:
   649   00002B                     ??_LightBlueInstructions:
   650                           
   651                           ; 1 bytes @ 0x2A
   652   00002B                     	ds	2
   653   00002D                     RedInstructions@a:
   654                           	callstack 0
   655   00002D                     GreenInstructions@a:
   656                           	callstack 0
   657   00002D                     BlueInstructions@a:
   658                           	callstack 0
   659   00002D                     YellowInstructions@a:
   660                           	callstack 0
   661   00002D                     PinkInstructions@a:
   662                           	callstack 0
   663   00002D                     OrangeInstructions@a:
   664                           	callstack 0
   665   00002D                     LightBlueInstructions@a:
   666                           	callstack 0
   667                           
   668                           ; 1 bytes @ 0x2C
   669   00002D                     	ds	1
   670   00002E                     ___fldiv@bexp:
   671                           	callstack 0
   672   00002E                     MoveBuggy@color_detected:
   673                           	callstack 0
   674                           
   675                           ; 2 bytes @ 0x2D
   676   00002E                     	ds	1
   677   00002F                     ___fldiv@aexp:
   678                           	callstack 0
   679                           
   680                           ; 1 bytes @ 0x2E
   681   00002F                     	ds	1
   682   000030                     ?___flmul:
   683                           	callstack 0
   684   000030                     MoveBuggy@mL:
   685                           	callstack 0
   686   000030                     ___flmul@b:
   687                           	callstack 0
   688                           
   689                           ; 4 bytes @ 0x2F
   690   000030                     	ds	2
   691   000032                     MoveBuggy@mR:
   692                           	callstack 0
   693                           
   694                           ; 2 bytes @ 0x31
   695   000032                     	ds	2
   696   000034                     ___flmul@a:
   697                           	callstack 0
   698                           
   699                           ; 4 bytes @ 0x33
   700   000034                     	ds	4
   701   000038                     ??___flmul:
   702                           
   703                           ; 1 bytes @ 0x37
   704   000038                     	ds	4
   705   00003C                     ___flmul@sign:
   706                           	callstack 0
   707                           
   708                           ; 1 bytes @ 0x3B
   709   00003C                     	ds	1
   710   00003D                     ___flmul@grs:
   711                           	callstack 0
   712                           
   713                           ; 4 bytes @ 0x3C
   714   00003D                     	ds	4
   715   000041                     ___flmul@aexp:
   716                           	callstack 0
   717                           
   718                           ; 1 bytes @ 0x40
   719   000041                     	ds	1
   720   000042                     ___flmul@bexp:
   721                           	callstack 0
   722                           
   723                           ; 1 bytes @ 0x41
   724   000042                     	ds	1
   725   000043                     ___flmul@prod:
   726                           	callstack 0
   727                           
   728                           ; 4 bytes @ 0x42
   729   000043                     	ds	4
   730   000047                     ___flmul@temp:
   731                           	callstack 0
   732                           
   733                           ; 2 bytes @ 0x46
   734   000047                     	ds	2
   735   000049                     ?___fltol:
   736                           	callstack 0
   737   000049                     ___fltol@f1:
   738                           	callstack 0
   739                           
   740                           ; 4 bytes @ 0x48
   741   000049                     	ds	4
   742   00004D                     ___fltol@sign1:
   743                           	callstack 0
   744                           
   745                           ; 1 bytes @ 0x4C
   746   00004D                     	ds	1
   747   00004E                     ___fltol@exp1:
   748                           	callstack 0
   749                           
   750                           ; 1 bytes @ 0x4D
   751   00004E                     	ds	1
   752                           
   753 ;;
   754 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   755 ;;
   756 ;; *************** function _main *****************
   757 ;; Defined at:
   758 ;;		line 21 in file "main_motor.c"
   759 ;; Parameters:    Size  Location     Type
   760 ;;		None
   761 ;; Auto vars:     Size  Location     Type
   762 ;;  b               1   24[BANK0 ] unsigned char 
   763 ;;  motorR          9   43[BANK0 ] struct DC_motor
   764 ;;  motorL          9   34[BANK0 ] struct DC_motor
   765 ;;  initial_colo    8   26[BANK0 ] struct RGB_val
   766 ;;  color_detect    1   25[BANK0 ] unsigned char 
   767 ;; Return value:  Size  Location     Type
   768 ;;                  1    wreg      void 
   769 ;; Registers used:
   770 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   771 ;; Tracked objects:
   772 ;;		On entry : 0/0
   773 ;;		On exit  : 0/0
   774 ;;		Unchanged: 0/0
   775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   777 ;;      Locals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   778 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   779 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   780 ;;Total ram usage:       30 bytes
   781 ;; Hardware stack levels required when called: 13
   782 ;; This function calls:
   783 ;;		_Interrupts_init
   784 ;;		_LED_init
   785 ;;		_MoveBuggy
   786 ;;		_Timer0_init
   787 ;;		_Update_RGBC
   788 ;;		_WhiteLight
   789 ;;		_color_click_init
   790 ;;		_detect_color
   791 ;;		_fullSpeedAhead
   792 ;;		_initDCmotorsPWM
   793 ;;		_stop
   794 ;; This function is called by:
   795 ;;		Startup code after reset
   796 ;; This function uses a non-reentrant model
   797 ;;
   798                           
   799                           	psect	text0
   800   00115C                     __ptext0:
   801                           	callstack 0
   802   00115C                     _main:
   803                           	callstack 18
   804   00115C                     
   805                           ;main_motor.c: 24:     RGB_val initial_color;;main_motor.c: 25:     initial_color.R = 0;
   806   00115C  0E00               	movlw	0
   807   00115E  0100               	movlb	0	; () banked
   808   001160  6FCF               	movwf	(main@initial_color+1)& (0+255),b
   809   001162  0E00               	movlw	0
   810   001164  6FCE               	movwf	main@initial_color& (0+255),b
   811                           
   812                           ;main_motor.c: 26:     initial_color.G = 0;
   813   001166  0E00               	movlw	0
   814   001168  6FD1               	movwf	(main@initial_color+3)& (0+255),b
   815   00116A  0E00               	movlw	0
   816   00116C  6FD0               	movwf	(main@initial_color+2)& (0+255),b
   817                           
   818                           ;main_motor.c: 27:     initial_color.B = 0;
   819   00116E  0E00               	movlw	0
   820   001170  6FD3               	movwf	(main@initial_color+5)& (0+255),b
   821   001172  0E00               	movlw	0
   822   001174  6FD2               	movwf	(main@initial_color+4)& (0+255),b
   823                           
   824                           ;main_motor.c: 28:     initial_color.C = 0;
   825   001176  0E00               	movlw	0
   826   001178  6FD5               	movwf	(main@initial_color+7)& (0+255),b
   827   00117A  0E00               	movlw	0
   828   00117C  6FD4               	movwf	(main@initial_color+6)& (0+255),b
   829   00117E                     
   830                           ; BSR set to: 0
   831                           ;main_motor.c: 30:     LED_init();
   832   00117E  EC01  F012         	call	_LED_init	;wreg free
   833   001182                     
   834                           ;main_motor.c: 31:     color_click_init();
   835   001182  EC29  F011         	call	_color_click_init	;wreg free
   836   001186                     
   837                           ;main_motor.c: 32:     Interrupts_init();
   838   001186  EC93  F011         	call	_Interrupts_init	;wreg free
   839                           
   840                           ;main_motor.c: 34:     Timer0_init();
   841   00118A  ECB7  F011         	call	_Timer0_init	;wreg free
   842                           
   843                           ;main_motor.c: 37:     initDCmotorsPWM(99);
   844   00118E  0E00               	movlw	0
   845   001190  6E0A               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   846   001192  0E63               	movlw	99
   847   001194  6E09               	movwf	initDCmotorsPWM@PWMperiod^0,c
   848   001196  EC00  F00D         	call	_initDCmotorsPWM	;wreg free
   849   00119A                     
   850                           ;main_motor.c: 39:     struct DC_motor motorL, motorR;;main_motor.c: 41:     motorL.powe
      +                          r=0;
   851   00119A  0E00               	movlw	0
   852   00119C  0100               	movlb	0	; () banked
   853   00119E  6FD6               	movwf	main@motorL& (0+255),b
   854   0011A0                     
   855                           ; BSR set to: 0
   856                           ;main_motor.c: 42:     motorL.direction=1;
   857   0011A0  0E01               	movlw	1
   858   0011A2  6FD7               	movwf	(main@motorL+1)& (0+255),b
   859   0011A4                     
   860                           ; BSR set to: 0
   861                           ;main_motor.c: 43:     motorL.brakemode=1;
   862   0011A4  0E01               	movlw	1
   863   0011A6  6FD8               	movwf	(main@motorL+2)& (0+255),b
   864   0011A8                     
   865                           ; BSR set to: 0
   866                           ;main_motor.c: 44:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
   867   0011A8  0EAA               	movlw	170
   868   0011AA  6FDB               	movwf	(main@motorL+5)& (0+255),b
   869   0011AC  0E0F               	movlw	15
   870   0011AE  6FDC               	movwf	(main@motorL+6)& (0+255),b
   871   0011B0                     
   872                           ; BSR set to: 0
   873                           ;main_motor.c: 45:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
   874   0011B0  0EA6               	movlw	166
   875   0011B2  6FDD               	movwf	(main@motorL+7)& (0+255),b
   876   0011B4  0E0F               	movlw	15
   877   0011B6  6FDE               	movwf	(main@motorL+8)& (0+255),b
   878   0011B8                     
   879                           ; BSR set to: 0
   880                           ;main_motor.c: 46:     motorL.PWMperiod= T2PR;
   881   0011B8  CFBC F0D9          	movff	4028,main@motorL+3	;volatile
   882   0011BC  6BDA               	clrf	(main@motorL+4)& (0+255),b
   883   0011BE                     
   884                           ; BSR set to: 0
   885                           ;main_motor.c: 48:     motorR.power=0;
   886   0011BE  0E00               	movlw	0
   887   0011C0  6FDF               	movwf	main@motorR& (0+255),b
   888   0011C2                     
   889                           ; BSR set to: 0
   890                           ;main_motor.c: 49:     motorR.direction=1;
   891   0011C2  0E01               	movlw	1
   892   0011C4  6FE0               	movwf	(main@motorR+1)& (0+255),b
   893   0011C6                     
   894                           ; BSR set to: 0
   895                           ;main_motor.c: 50:     motorR.brakemode=1;
   896   0011C6  0E01               	movlw	1
   897   0011C8  6FE1               	movwf	(main@motorR+2)& (0+255),b
   898   0011CA                     
   899                           ; BSR set to: 0
   900                           ;main_motor.c: 51:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
   901   0011CA  0E25               	movlw	37
   902   0011CC  6FE4               	movwf	(main@motorR+5)& (0+255),b
   903   0011CE  0E0F               	movlw	15
   904   0011D0  6FE5               	movwf	(main@motorR+6)& (0+255),b
   905   0011D2                     
   906                           ; BSR set to: 0
   907                           ;main_motor.c: 52:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
   908   0011D2  0E21               	movlw	33
   909   0011D4  6FE6               	movwf	(main@motorR+7)& (0+255),b
   910   0011D6  0E0F               	movlw	15
   911   0011D8  6FE7               	movwf	(main@motorR+8)& (0+255),b
   912   0011DA                     
   913                           ; BSR set to: 0
   914                           ;main_motor.c: 53:     motorR.PWMperiod= T2PR;
   915   0011DA  CFBC F0E2          	movff	4028,main@motorR+3	;volatile
   916   0011DE  6BE3               	clrf	(main@motorR+4)& (0+255),b
   917   0011E0                     
   918                           ; BSR set to: 0
   919                           ;main_motor.c: 57:     WhiteLight();
   920   0011E0  EC2C  F012         	call	_WhiteLight	;wreg free
   921   0011E4                     l3854:
   922                           
   923                           ;main_motor.c: 59:         Update_RGBC(&initial_color);
   924   0011E4  0ECE               	movlw	low main@initial_color
   925   0011E6  6E14               	movwf	Update_RGBC@tempval^0,c
   926   0011E8  0E00               	movlw	high main@initial_color
   927   0011EA  6E15               	movwf	(Update_RGBC@tempval+1)^0,c
   928   0011EC  EC14  F00F         	call	_Update_RGBC	;wreg free
   929   0011F0                     
   930                           ;main_motor.c: 60:         color_detected = detect_color(&initial_color);
   931   0011F0  0ECE               	movlw	low main@initial_color
   932   0011F2  0100               	movlb	0	; () banked
   933   0011F4  6FB8               	movwf	detect_color@tempval& (0+255),b
   934   0011F6  0E00               	movlw	high main@initial_color
   935   0011F8  6FB9               	movwf	(detect_color@tempval+1)& (0+255),b
   936   0011FA  EC2E  F000         	call	_detect_color	;wreg free
   937   0011FE  0100               	movlb	0	; () banked
   938   001200  6FCD               	movwf	main@color_detected& (0+255),b
   939   001202                     
   940                           ; BSR set to: 0
   941                           ;main_motor.c: 62:         unsigned char b = 0;
   942   001202  0E00               	movlw	0
   943   001204  6FCC               	movwf	main@b& (0+255),b
   944   001206                     
   945                           ; BSR set to: 0
   946                           ;main_motor.c: 63:         if(color_detected == 0){
   947   001206  51CD               	movf	main@color_detected& (0+255),w,b
   948   001208  A4D8               	btfss	status,2,c
   949   00120A  EF09  F009         	goto	u4031
   950   00120E  EF0B  F009         	goto	u4030
   951   001212                     u4031:
   952   001212  EF19  F009         	goto	l3866
   953   001216                     u4030:
   954   001216                     
   955                           ; BSR set to: 0
   956                           ;main_motor.c: 64:             fullSpeedAhead(&motorL,&motorR);
   957   001216  0ED6               	movlw	low main@motorL
   958   001218  6E1C               	movwf	fullSpeedAhead@mL^0,c
   959   00121A  0E00               	movlw	high main@motorL
   960   00121C  6E1D               	movwf	(fullSpeedAhead@mL+1)^0,c
   961   00121E  0EDF               	movlw	low main@motorR
   962   001220  6E1E               	movwf	fullSpeedAhead@mR^0,c
   963   001222  0E00               	movlw	high main@motorR
   964   001224  6E1F               	movwf	(fullSpeedAhead@mR+1)^0,c
   965   001226  EC67  F00B         	call	_fullSpeedAhead	;wreg free
   966   00122A                     
   967                           ;main_motor.c: 65:             b++;
   968   00122A  0100               	movlb	0	; () banked
   969   00122C  2BCC               	incf	main@b& (0+255),f,b
   970                           
   971                           ;main_motor.c: 66:         }
   972   00122E  EFF2  F008         	goto	l3854
   973   001232                     l3866:
   974                           
   975                           ; BSR set to: 0
   976   001232  51CD               	movf	main@color_detected& (0+255),w,b
   977   001234  B4D8               	btfsc	status,2,c
   978   001236  EF1F  F009         	goto	u4041
   979   00123A  EF21  F009         	goto	u4040
   980   00123E                     u4041:
   981   00123E  EFF2  F008         	goto	l3854
   982   001242                     u4040:
   983   001242                     
   984                           ; BSR set to: 0
   985                           ;main_motor.c: 69:             LATHbits.LATH3 = 1;
   986   001242  8680               	bsf	128,3,c	;volatile
   987                           
   988                           ;main_motor.c: 71:             while(b>0){
   989   001244  EF30  F009         	goto	l3874
   990   001248                     l3870:
   991                           
   992                           ; BSR set to: 0
   993                           ;main_motor.c: 72:                 stop(&motorL,&motorR);
   994   001248  0ED6               	movlw	low main@motorL
   995   00124A  6E1C               	movwf	stop@mL^0,c
   996   00124C  0E00               	movlw	high main@motorL
   997   00124E  6E1D               	movwf	(stop@mL+1)^0,c
   998   001250  0EDF               	movlw	low main@motorR
   999   001252  6E1E               	movwf	stop@mR^0,c
  1000   001254  0E00               	movlw	high main@motorR
  1001   001256  6E1F               	movwf	(stop@mR+1)^0,c
  1002   001258  EC3D  F00C         	call	_stop	;wreg free
  1003   00125C                     
  1004                           ;main_motor.c: 73:                 b--;
  1005   00125C  0100               	movlb	0	; () banked
  1006   00125E  07CC               	decf	main@b& (0+255),f,b
  1007   001260                     l3874:
  1008                           
  1009                           ; BSR set to: 0
  1010                           ;main_motor.c: 71:             while(b>0){
  1011   001260  51CC               	movf	main@b& (0+255),w,b
  1012   001262  A4D8               	btfss	status,2,c
  1013   001264  EF36  F009         	goto	u4051
  1014   001268  EF38  F009         	goto	u4050
  1015   00126C                     u4051:
  1016   00126C  EF24  F009         	goto	l3870
  1017   001270                     u4050:
  1018   001270                     
  1019                           ; BSR set to: 0
  1020                           ;main_motor.c: 75:             _delay((unsigned long)((500)*(64000000/4000.0)));
  1021   001270  0E29               	movlw	41
  1022   001272  0100               	movlb	0	; () banked
  1023   001274  6FCB               	movwf	(??_main+1)& (0+255),b
  1024   001276  0E96               	movlw	150
  1025   001278  6FCA               	movwf	??_main& (0+255),b
  1026   00127A  0E7F               	movlw	127
  1027   00127C                     u4067:
  1028   00127C  2EE8               	decfsz	wreg,f,c
  1029   00127E  D7FE               	bra	u4067
  1030   001280  2FCA               	decfsz	??_main& (0+255),f,b
  1031   001282  D7FC               	bra	u4067
  1032   001284  2FCB               	decfsz	(??_main+1)& (0+255),f,b
  1033   001286  D7FA               	bra	u4067
  1034   001288                     
  1035                           ;main_motor.c: 76:             LATHbits.LATH3 = 0;
  1036   001288  9680               	bcf	128,3,c	;volatile
  1037   00128A                     
  1038                           ;main_motor.c: 78:             MoveBuggy(color_detected,&motorL,&motorR);
  1039   00128A  0100               	movlb	0	; () banked
  1040   00128C  51CD               	movf	main@color_detected& (0+255),w,b
  1041   00128E  6FCA               	movwf	??_main& (0+255),b
  1042   001290  6BCB               	clrf	(??_main+1)& (0+255),b
  1043   001292  C0CA  F02E         	movff	??_main,MoveBuggy@color_detected
  1044   001296  C0CB  F02F         	movff	??_main+1,MoveBuggy@color_detected+1
  1045   00129A  0ED6               	movlw	low main@motorL
  1046   00129C  6E30               	movwf	MoveBuggy@mL^0,c
  1047   00129E  0E00               	movlw	high main@motorL
  1048   0012A0  6E31               	movwf	(MoveBuggy@mL+1)^0,c
  1049   0012A2  0EDF               	movlw	low main@motorR
  1050   0012A4  6E32               	movwf	MoveBuggy@mR^0,c
  1051   0012A6  0E00               	movlw	high main@motorR
  1052   0012A8  6E33               	movwf	(MoveBuggy@mR+1)^0,c
  1053   0012AA  EC5B  F009         	call	_MoveBuggy	;wreg free
  1054   0012AE  EFF2  F008         	goto	l3854
  1055   0012B2  EF2C  F000         	goto	start
  1056   0012B6                     __end_of_main:
  1057                           	callstack 0
  1058                           
  1059 ;; *************** function _initDCmotorsPWM *****************
  1060 ;; Defined at:
  1061 ;;		line 5 in file "dc_motor.c"
  1062 ;; Parameters:    Size  Location     Type
  1063 ;;  PWMperiod       2    8[COMRAM] unsigned int 
  1064 ;; Auto vars:     Size  Location     Type
  1065 ;;		None
  1066 ;; Return value:  Size  Location     Type
  1067 ;;                  1    wreg      void 
  1068 ;; Registers used:
  1069 ;;		wreg, status,2
  1070 ;; Tracked objects:
  1071 ;;		On entry : 0/0
  1072 ;;		On exit  : 0/0
  1073 ;;		Unchanged: 0/0
  1074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1075 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1078 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1079 ;;Total ram usage:        2 bytes
  1080 ;; Hardware stack levels used: 1
  1081 ;; Hardware stack levels required when called: 7
  1082 ;; This function calls:
  1083 ;;		Nothing
  1084 ;; This function is called by:
  1085 ;;		_main
  1086 ;; This function uses a non-reentrant model
  1087 ;;
  1088                           
  1089                           	psect	text1
  1090   001A00                     __ptext1:
  1091                           	callstack 0
  1092   001A00                     _initDCmotorsPWM:
  1093                           	callstack 23
  1094   001A00                     
  1095                           ;dc_motor.c: 7:     LATEbits.LATE2 = 0;
  1096   001A00  947D               	bcf	125,2,c	;volatile
  1097                           
  1098                           ;dc_motor.c: 8:     TRISEbits.TRISE2 = 0;
  1099   001A02  9485               	bcf	133,2,c	;volatile
  1100                           
  1101                           ;dc_motor.c: 9:     LATEbits.LATE4 = 0;
  1102   001A04  987D               	bcf	125,4,c	;volatile
  1103                           
  1104                           ;dc_motor.c: 10:     TRISEbits.TRISE4 = 0;
  1105   001A06  9885               	bcf	133,4,c	;volatile
  1106                           
  1107                           ;dc_motor.c: 11:     LATCbits.LATC7 = 0;
  1108   001A08  9E7B               	bcf	123,7,c	;volatile
  1109                           
  1110                           ;dc_motor.c: 12:     TRISCbits.TRISC7 = 0;
  1111   001A0A  9E83               	bcf	131,7,c	;volatile
  1112                           
  1113                           ;dc_motor.c: 13:     LATGbits.LATG6 = 0;
  1114   001A0C  9C7F               	bcf	127,6,c	;volatile
  1115                           
  1116                           ;dc_motor.c: 14:     TRISGbits.TRISG6 = 0;
  1117   001A0E  9C87               	bcf	135,6,c	;volatile
  1118   001A10                     
  1119                           ;dc_motor.c: 17:     RE2PPS=0x05;
  1120   001A10  0E05               	movlw	5
  1121   001A12  010E               	movlb	14	; () banked
  1122   001A14  6F74               	movwf	116,b	;volatile
  1123                           
  1124                           ;dc_motor.c: 18:     RE4PPS=0x06;
  1125   001A16  0E06               	movlw	6
  1126   001A18  6F76               	movwf	118,b	;volatile
  1127                           
  1128                           ;dc_motor.c: 19:     RC7PPS=0x07;
  1129   001A1A  0E07               	movlw	7
  1130   001A1C  6F69               	movwf	105,b	;volatile
  1131                           
  1132                           ;dc_motor.c: 20:     RG6PPS=0x08;
  1133   001A1E  0E08               	movlw	8
  1134   001A20  6F88               	movwf	136,b	;volatile
  1135                           
  1136                           ;dc_motor.c: 23:     T2CONbits.CKPS=0b100;
  1137   001A22  50BD               	movf	189,w,c	;volatile
  1138   001A24  0B8F               	andlw	-113
  1139   001A26  0940               	iorlw	64
  1140   001A28  6EBD               	movwf	189,c	;volatile
  1141                           
  1142                           ;dc_motor.c: 24:     T2HLTbits.MODE=0b00000;
  1143   001A2A  0EE0               	movlw	-32
  1144   001A2C  16BE               	andwf	190,f,c	;volatile
  1145                           
  1146                           ;dc_motor.c: 25:     T2CLKCONbits.CS=0b0001;
  1147   001A2E  50BF               	movf	191,w,c	;volatile
  1148   001A30  0BF0               	andlw	-16
  1149   001A32  0901               	iorlw	1
  1150   001A34  6EBF               	movwf	191,c	;volatile
  1151   001A36                     
  1152                           ; BSR set to: 14
  1153                           ;dc_motor.c: 29:     T2PR=PWMperiod;
  1154   001A36  C009  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  1155   001A3A                     
  1156                           ; BSR set to: 14
  1157                           ;dc_motor.c: 30:     T2CONbits.ON=1;
  1158   001A3A  8EBD               	bsf	189,7,c	;volatile
  1159                           
  1160                           ;dc_motor.c: 34:     CCPR1H=0;
  1161   001A3C  0E00               	movlw	0
  1162   001A3E  6EAA               	movwf	170,c	;volatile
  1163                           
  1164                           ;dc_motor.c: 35:     CCPR2H=0;
  1165   001A40  0E00               	movlw	0
  1166   001A42  6EA6               	movwf	166,c	;volatile
  1167                           
  1168                           ;dc_motor.c: 36:     CCPR3H=0;
  1169   001A44  0E00               	movlw	0
  1170   001A46  010F               	movlb	15	; () banked
  1171   001A48  6F25               	movwf	37,b	;volatile
  1172                           
  1173                           ;dc_motor.c: 37:     CCPR4H=0;
  1174   001A4A  0E00               	movlw	0
  1175   001A4C  6F21               	movwf	33,b	;volatile
  1176                           
  1177                           ;dc_motor.c: 40:     CCPTMRS0bits.C1TSEL=0;
  1178   001A4E  0EFC               	movlw	-4
  1179   001A50  16AD               	andwf	173,f,c	;volatile
  1180                           
  1181                           ;dc_motor.c: 41:     CCPTMRS0bits.C2TSEL=0;
  1182   001A52  0EF3               	movlw	-13
  1183   001A54  16AD               	andwf	173,f,c	;volatile
  1184                           
  1185                           ;dc_motor.c: 42:     CCPTMRS0bits.C3TSEL=0;
  1186   001A56  0ECF               	movlw	-49
  1187   001A58  16AD               	andwf	173,f,c	;volatile
  1188                           
  1189                           ;dc_motor.c: 43:     CCPTMRS0bits.C4TSEL=0;
  1190   001A5A  0E3F               	movlw	-193
  1191   001A5C  16AD               	andwf	173,f,c	;volatile
  1192   001A5E                     
  1193                           ; BSR set to: 15
  1194                           ;dc_motor.c: 46:     CCP1CONbits.FMT=1;
  1195   001A5E  88AB               	bsf	171,4,c	;volatile
  1196                           
  1197                           ;dc_motor.c: 47:     CCP1CONbits.CCP1MODE=0b1100;
  1198   001A60  50AB               	movf	171,w,c	;volatile
  1199   001A62  0BF0               	andlw	-16
  1200   001A64  090C               	iorlw	12
  1201   001A66  6EAB               	movwf	171,c	;volatile
  1202   001A68                     
  1203                           ; BSR set to: 15
  1204                           ;dc_motor.c: 48:     CCP1CONbits.EN=1;
  1205   001A68  8EAB               	bsf	171,7,c	;volatile
  1206   001A6A                     
  1207                           ; BSR set to: 15
  1208                           ;dc_motor.c: 50:     CCP2CONbits.FMT=1;
  1209   001A6A  88A7               	bsf	167,4,c	;volatile
  1210                           
  1211                           ;dc_motor.c: 51:     CCP2CONbits.CCP2MODE=0b1100;
  1212   001A6C  50A7               	movf	167,w,c	;volatile
  1213   001A6E  0BF0               	andlw	-16
  1214   001A70  090C               	iorlw	12
  1215   001A72  6EA7               	movwf	167,c	;volatile
  1216   001A74                     
  1217                           ; BSR set to: 15
  1218                           ;dc_motor.c: 52:     CCP2CONbits.EN=1;
  1219   001A74  8EA7               	bsf	167,7,c	;volatile
  1220   001A76                     
  1221                           ; BSR set to: 15
  1222                           ;dc_motor.c: 54:     CCP3CONbits.FMT=1;
  1223   001A76  8926               	bsf	38,4,b	;volatile
  1224                           
  1225                           ;dc_motor.c: 55:     CCP3CONbits.CCP3MODE=0b1100;
  1226   001A78  5126               	movf	38,w,b	;volatile
  1227   001A7A  0BF0               	andlw	-16
  1228   001A7C  090C               	iorlw	12
  1229   001A7E  6F26               	movwf	38,b	;volatile
  1230   001A80                     
  1231                           ; BSR set to: 15
  1232                           ;dc_motor.c: 56:     CCP3CONbits.EN=1;
  1233   001A80  8F26               	bsf	38,7,b	;volatile
  1234   001A82                     
  1235                           ; BSR set to: 15
  1236                           ;dc_motor.c: 58:     CCP4CONbits.FMT=1;
  1237   001A82  8922               	bsf	34,4,b	;volatile
  1238                           
  1239                           ;dc_motor.c: 59:     CCP4CONbits.CCP4MODE=0b1100;
  1240   001A84  5122               	movf	34,w,b	;volatile
  1241   001A86  0BF0               	andlw	-16
  1242   001A88  090C               	iorlw	12
  1243   001A8A  6F22               	movwf	34,b	;volatile
  1244   001A8C                     
  1245                           ; BSR set to: 15
  1246                           ;dc_motor.c: 60:     CCP4CONbits.EN=1;
  1247   001A8C  8F22               	bsf	34,7,b	;volatile
  1248   001A8E                     
  1249                           ; BSR set to: 15
  1250   001A8E  0012               	return		;funcret
  1251   001A90                     __end_of_initDCmotorsPWM:
  1252                           	callstack 0
  1253                           
  1254 ;; *************** function _fullSpeedAhead *****************
  1255 ;; Defined at:
  1256 ;;		line 151 in file "dc_motor.c"
  1257 ;; Parameters:    Size  Location     Type
  1258 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  1259 ;;		 -> main@motorL(9), 
  1260 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  1261 ;;		 -> main@motorR(9), 
  1262 ;; Auto vars:     Size  Location     Type
  1263 ;;		None
  1264 ;; Return value:  Size  Location     Type
  1265 ;;                  1    wreg      void 
  1266 ;; Registers used:
  1267 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1268 ;; Tracked objects:
  1269 ;;		On entry : 0/0
  1270 ;;		On exit  : 0/0
  1271 ;;		Unchanged: 0/0
  1272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1273 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1275 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1276 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1277 ;;Total ram usage:        6 bytes
  1278 ;; Hardware stack levels used: 1
  1279 ;; Hardware stack levels required when called: 9
  1280 ;; This function calls:
  1281 ;;		_setMotorPWM
  1282 ;; This function is called by:
  1283 ;;		_main
  1284 ;; This function uses a non-reentrant model
  1285 ;;
  1286                           
  1287                           	psect	text2
  1288   0016CE                     __ptext2:
  1289                           	callstack 0
  1290   0016CE                     _fullSpeedAhead:
  1291                           	callstack 21
  1292   0016CE                     
  1293                           ;dc_motor.c: 151: void fullSpeedAhead(DC_motor *mL, DC_motor *mR);dc_motor.c: 152: {;dc_
      +                          motor.c: 154:     mL->direction = 1;
  1294   0016CE  EE20 F001          	lfsr	2,1
  1295   0016D2  501C               	movf	fullSpeedAhead@mL^0,w,c
  1296   0016D4  26D9               	addwf	fsr2l,f,c
  1297   0016D6  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  1298   0016D8  22DA               	addwfc	fsr2h,f,c
  1299   0016DA  0E01               	movlw	1
  1300   0016DC  6EDF               	movwf	indf2,c
  1301                           
  1302                           ;dc_motor.c: 155:     mL->brakemode = 0;
  1303   0016DE  EE20 F002          	lfsr	2,2
  1304   0016E2  501C               	movf	fullSpeedAhead@mL^0,w,c
  1305   0016E4  26D9               	addwf	fsr2l,f,c
  1306   0016E6  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  1307   0016E8  22DA               	addwfc	fsr2h,f,c
  1308   0016EA  0E00               	movlw	0
  1309   0016EC  6EDF               	movwf	indf2,c
  1310                           
  1311                           ;dc_motor.c: 157:     mR->direction = 1;
  1312   0016EE  EE20 F001          	lfsr	2,1
  1313   0016F2  501E               	movf	fullSpeedAhead@mR^0,w,c
  1314   0016F4  26D9               	addwf	fsr2l,f,c
  1315   0016F6  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  1316   0016F8  22DA               	addwfc	fsr2h,f,c
  1317   0016FA  0E01               	movlw	1
  1318   0016FC  6EDF               	movwf	indf2,c
  1319                           
  1320                           ;dc_motor.c: 158:     mR->brakemode = 0;
  1321   0016FE  EE20 F002          	lfsr	2,2
  1322   001702  501E               	movf	fullSpeedAhead@mR^0,w,c
  1323   001704  26D9               	addwf	fsr2l,f,c
  1324   001706  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  1325   001708  22DA               	addwfc	fsr2h,f,c
  1326   00170A  0E00               	movlw	0
  1327   00170C  6EDF               	movwf	indf2,c
  1328                           
  1329                           ;dc_motor.c: 162:     if(mL->power>50){mL->power=50;}
  1330   00170E  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  1331   001712  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  1332   001716  50DF               	movf	indf2,w,c
  1333   001718  0A80               	xorlw	128
  1334   00171A  0F4D               	addlw	-179
  1335   00171C  A0D8               	btfss	status,0,c
  1336   00171E  EF93  F00B         	goto	u3261
  1337   001722  EF95  F00B         	goto	u3260
  1338   001726                     u3261:
  1339   001726  EF9B  F00B         	goto	l3438
  1340   00172A                     u3260:
  1341   00172A  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  1342   00172E  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  1343   001732  0E32               	movlw	50
  1344   001734  6EDF               	movwf	indf2,c
  1345   001736                     l3438:
  1346                           
  1347                           ;dc_motor.c: 163:     if(mR->power>50){mR->power=50;}
  1348   001736  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  1349   00173A  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  1350   00173E  50DF               	movf	indf2,w,c
  1351   001740  0A80               	xorlw	128
  1352   001742  0F4D               	addlw	-179
  1353   001744  A0D8               	btfss	status,0,c
  1354   001746  EFA7  F00B         	goto	u3271
  1355   00174A  EFA9  F00B         	goto	u3270
  1356   00174E                     u3271:
  1357   00174E  EFAF  F00B         	goto	l3442
  1358   001752                     u3270:
  1359   001752  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  1360   001756  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  1361   00175A  0E32               	movlw	50
  1362   00175C  6EDF               	movwf	indf2,c
  1363   00175E                     l3442:
  1364                           
  1365                           ;dc_motor.c: 165:     ++mL->power;
  1366   00175E  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  1367   001762  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  1368   001766  2ADF               	incf	indf2,f,c
  1369   001768                     
  1370                           ;dc_motor.c: 166:     ++mR->power;
  1371   001768  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  1372   00176C  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  1373   001770  2ADF               	incf	indf2,f,c
  1374   001772                     
  1375                           ;dc_motor.c: 168:     setMotorPWM(mL);
  1376   001772  C01C  F016         	movff	fullSpeedAhead@mL,setMotorPWM@m
  1377   001776  C01D  F017         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  1378   00177A  ECF8  F007         	call	_setMotorPWM	;wreg free
  1379   00177E                     
  1380                           ;dc_motor.c: 169:     setMotorPWM(mR);
  1381   00177E  C01E  F016         	movff	fullSpeedAhead@mR,setMotorPWM@m
  1382   001782  C01F  F017         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  1383   001786  ECF8  F007         	call	_setMotorPWM	;wreg free
  1384   00178A                     
  1385                           ;dc_motor.c: 170:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1386   00178A  0E05               	movlw	5
  1387   00178C  6E21               	movwf	(??_fullSpeedAhead+1)^0,c
  1388   00178E  0E0F               	movlw	15
  1389   001790  6E20               	movwf	??_fullSpeedAhead^0,c
  1390   001792  0EF1               	movlw	241
  1391   001794                     u4077:
  1392   001794  2EE8               	decfsz	wreg,f,c
  1393   001796  D7FE               	bra	u4077
  1394   001798  2E20               	decfsz	??_fullSpeedAhead^0,f,c
  1395   00179A  D7FC               	bra	u4077
  1396   00179C  2E21               	decfsz	(??_fullSpeedAhead+1)^0,f,c
  1397   00179E  D7FA               	bra	u4077
  1398   0017A0  F000               	nop	
  1399   0017A2  0012               	return		;funcret
  1400   0017A4                     __end_of_fullSpeedAhead:
  1401                           	callstack 0
  1402                           
  1403 ;; *************** function _detect_color *****************
  1404 ;; Defined at:
  1405 ;;		line 99 in file "color.c"
  1406 ;; Parameters:    Size  Location     Type
  1407 ;;  tempval         2    4[BANK0 ] PTR struct RGB_val
  1408 ;;		 -> main@initial_color(8), 
  1409 ;; Auto vars:     Size  Location     Type
  1410 ;;  dist_B          1   21[BANK0 ] unsigned char 
  1411 ;;  dist_G          1   20[BANK0 ] unsigned char 
  1412 ;;  dist_R          1   19[BANK0 ] unsigned char 
  1413 ;;  color           1   18[BANK0 ] unsigned char 
  1414 ;; Return value:  Size  Location     Type
  1415 ;;                  1    wreg      unsigned char 
  1416 ;; Registers used:
  1417 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1418 ;; Tracked objects:
  1419 ;;		On entry : 0/0
  1420 ;;		On exit  : 0/0
  1421 ;;		Unchanged: 0/0
  1422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1423 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1424 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1425 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1426 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1427 ;;Total ram usage:       18 bytes
  1428 ;; Hardware stack levels used: 1
  1429 ;; Hardware stack levels required when called: 8
  1430 ;; This function calls:
  1431 ;;		___fldiv
  1432 ;;		___flmul
  1433 ;;		___fltol
  1434 ;;		___xxtofl
  1435 ;; This function is called by:
  1436 ;;		_main
  1437 ;; This function uses a non-reentrant model
  1438 ;;
  1439                           
  1440                           	psect	text3
  1441   00005C                     __ptext3:
  1442                           	callstack 0
  1443   00005C                     _detect_color:
  1444                           	callstack 22
  1445   00005C                     
  1446                           ;color.c: 99: unsigned char detect_color(RGB_val *tempval);color.c: 100: {;color.c: 101:
      +                               unsigned char color = 0;
  1447   00005C  0E00               	movlw	0
  1448   00005E  0100               	movlb	0	; () banked
  1449   000060  6FC6               	movwf	detect_color@color& (0+255),b
  1450   000062                     
  1451                           ; BSR set to: 0
  1452                           ;color.c: 104:     unsigned char dist_R, dist_G, dist_B;;color.c: 105:     dist_R = ((fl
      +                          oat)(tempval->R)/(float)(tempval->R + tempval->G + tempval->B))*100;
  1453   000062  0E00               	movlw	0
  1454   000064  6E34               	movwf	___flmul@a^0,c
  1455   000066  0E00               	movlw	0
  1456   000068  6E35               	movwf	(___flmul@a+1)^0,c
  1457   00006A  0EC8               	movlw	200
  1458   00006C  6E36               	movwf	(___flmul@a+2)^0,c
  1459   00006E  0E42               	movlw	66
  1460   000070  6E37               	movwf	(___flmul@a+3)^0,c
  1461   000072  EE20 F004          	lfsr	2,4
  1462   000076  51B8               	movf	detect_color@tempval& (0+255),w,b
  1463   000078  26D9               	addwf	fsr2l,f,c
  1464   00007A  51B9               	movf	(detect_color@tempval+1)& (0+255),w,b
  1465   00007C  22DA               	addwfc	fsr2h,f,c
  1466   00007E  CFDE F0BA          	movff	postinc2,??_detect_color
  1467   000082  CFDD F0BB          	movff	postdec2,??_detect_color+1
  1468   000086  EE20 F002          	lfsr	2,2
  1469   00008A  51B8               	movf	detect_color@tempval& (0+255),w,b
  1470   00008C  26D9               	addwf	fsr2l,f,c
  1471   00008E  51B9               	movf	(detect_color@tempval+1)& (0+255),w,b
  1472   000090  22DA               	addwfc	fsr2h,f,c
  1473   000092  CFDE F0BC          	movff	postinc2,??_detect_color+2
  1474   000096  CFDD F0BD          	movff	postdec2,??_detect_color+3
  1475   00009A  C0B8  FFD9         	movff	detect_color@tempval,fsr2l
  1476   00009E  C0B9  FFDA         	movff	detect_color@tempval+1,fsr2h
  1477   0000A2  CFDE F0BE          	movff	postinc2,??_detect_color+4
  1478   0000A6  CFDD F0BF          	movff	postdec2,??_detect_color+5
  1479   0000AA  51BC               	movf	(??_detect_color+2)& (0+255),w,b
  1480   0000AC  25BE               	addwf	(??_detect_color+4)& (0+255),w,b
  1481   0000AE  6FC0               	movwf	(??_detect_color+6)& (0+255),b
  1482   0000B0  51BD               	movf	(??_detect_color+3)& (0+255),w,b
  1483   0000B2  21BF               	addwfc	(??_detect_color+5)& (0+255),w,b
  1484   0000B4  6FC1               	movwf	(??_detect_color+7)& (0+255),b
  1485   0000B6  51BA               	movf	??_detect_color& (0+255),w,b
  1486   0000B8  25C0               	addwf	(??_detect_color+6)& (0+255),w,b
  1487   0000BA  6FC2               	movwf	(??_detect_color+8)& (0+255),b
  1488   0000BC  51BB               	movf	(??_detect_color+1)& (0+255),w,b
  1489   0000BE  21C1               	addwfc	(??_detect_color+7)& (0+255),w,b
  1490   0000C0  6FC3               	movwf	(??_detect_color+9)& (0+255),b
  1491   0000C2  C0C2  F009         	movff	??_detect_color+8,___xxtofl@val
  1492   0000C6  C0C3  F00A         	movff	??_detect_color+9,___xxtofl@val+1
  1493   0000CA  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1494   0000CC  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1495   0000CE  0E00               	movlw	0
  1496   0000D0  EC1E  F007         	call	___xxtofl
  1497   0000D4  C009  F01B         	movff	?___xxtofl,___fldiv@a
  1498   0000D8  C00A  F01C         	movff	?___xxtofl+1,___fldiv@a+1
  1499   0000DC  C00B  F01D         	movff	?___xxtofl+2,___fldiv@a+2
  1500   0000E0  C00C  F01E         	movff	?___xxtofl+3,___fldiv@a+3
  1501   0000E4  C0B8  FFD9         	movff	detect_color@tempval,fsr2l
  1502   0000E8  C0B9  FFDA         	movff	detect_color@tempval+1,fsr2h
  1503   0000EC  CFDE F0C4          	movff	postinc2,??_detect_color+10
  1504   0000F0  CFDD F0C5          	movff	postdec2,??_detect_color+11
  1505   0000F4  C0C4  F009         	movff	??_detect_color+10,___xxtofl@val
  1506   0000F8  C0C5  F00A         	movff	??_detect_color+11,___xxtofl@val+1
  1507   0000FC  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1508   0000FE  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1509   000100  0E00               	movlw	0
  1510   000102  EC1E  F007         	call	___xxtofl
  1511   000106  C009  F017         	movff	?___xxtofl,___fldiv@b
  1512   00010A  C00A  F018         	movff	?___xxtofl+1,___fldiv@b+1
  1513   00010E  C00B  F019         	movff	?___xxtofl+2,___fldiv@b+2
  1514   000112  C00C  F01A         	movff	?___xxtofl+3,___fldiv@b+3
  1515   000116  EC51  F005         	call	___fldiv	;wreg free
  1516   00011A  C017  F030         	movff	?___fldiv,___flmul@b
  1517   00011E  C018  F031         	movff	?___fldiv+1,___flmul@b+1
  1518   000122  C019  F032         	movff	?___fldiv+2,___flmul@b+2
  1519   000126  C01A  F033         	movff	?___fldiv+3,___flmul@b+3
  1520   00012A  EC3C  F003         	call	___flmul	;wreg free
  1521   00012E  C030  F049         	movff	?___flmul,___fltol@f1
  1522   000132  C031  F04A         	movff	?___flmul+1,___fltol@f1+1
  1523   000136  C032  F04B         	movff	?___flmul+2,___fltol@f1+2
  1524   00013A  C033  F04C         	movff	?___flmul+3,___fltol@f1+3
  1525   00013E  ECF5  F009         	call	___fltol	;wreg free
  1526   000142  5049               	movf	?___fltol^0,w,c
  1527   000144  0100               	movlb	0	; () banked
  1528   000146  6FC7               	movwf	detect_color@dist_R& (0+255),b
  1529   000148                     
  1530                           ; BSR set to: 0
  1531                           ;color.c: 106:     dist_G = ((float)(tempval->G)/(float)(tempval->R + tempval->G + tempv
      +                          al->B))*100;
  1532   000148  0E00               	movlw	0
  1533   00014A  6E34               	movwf	___flmul@a^0,c
  1534   00014C  0E00               	movlw	0
  1535   00014E  6E35               	movwf	(___flmul@a+1)^0,c
  1536   000150  0EC8               	movlw	200
  1537   000152  6E36               	movwf	(___flmul@a+2)^0,c
  1538   000154  0E42               	movlw	66
  1539   000156  6E37               	movwf	(___flmul@a+3)^0,c
  1540   000158  EE20 F004          	lfsr	2,4
  1541   00015C  51B8               	movf	detect_color@tempval& (0+255),w,b
  1542   00015E  26D9               	addwf	fsr2l,f,c
  1543   000160  51B9               	movf	(detect_color@tempval+1)& (0+255),w,b
  1544   000162  22DA               	addwfc	fsr2h,f,c
  1545   000164  CFDE F0BA          	movff	postinc2,??_detect_color
  1546   000168  CFDD F0BB          	movff	postdec2,??_detect_color+1
  1547   00016C  EE20 F002          	lfsr	2,2
  1548   000170  51B8               	movf	detect_color@tempval& (0+255),w,b
  1549   000172  26D9               	addwf	fsr2l,f,c
  1550   000174  51B9               	movf	(detect_color@tempval+1)& (0+255),w,b
  1551   000176  22DA               	addwfc	fsr2h,f,c
  1552   000178  CFDE F0BC          	movff	postinc2,??_detect_color+2
  1553   00017C  CFDD F0BD          	movff	postdec2,??_detect_color+3
  1554   000180  C0B8  FFD9         	movff	detect_color@tempval,fsr2l
  1555   000184  C0B9  FFDA         	movff	detect_color@tempval+1,fsr2h
  1556   000188  CFDE F0BE          	movff	postinc2,??_detect_color+4
  1557   00018C  CFDD F0BF          	movff	postdec2,??_detect_color+5
  1558   000190  51BC               	movf	(??_detect_color+2)& (0+255),w,b
  1559   000192  25BE               	addwf	(??_detect_color+4)& (0+255),w,b
  1560   000194  6FC0               	movwf	(??_detect_color+6)& (0+255),b
  1561   000196  51BD               	movf	(??_detect_color+3)& (0+255),w,b
  1562   000198  21BF               	addwfc	(??_detect_color+5)& (0+255),w,b
  1563   00019A  6FC1               	movwf	(??_detect_color+7)& (0+255),b
  1564   00019C  51BA               	movf	??_detect_color& (0+255),w,b
  1565   00019E  25C0               	addwf	(??_detect_color+6)& (0+255),w,b
  1566   0001A0  6FC2               	movwf	(??_detect_color+8)& (0+255),b
  1567   0001A2  51BB               	movf	(??_detect_color+1)& (0+255),w,b
  1568   0001A4  21C1               	addwfc	(??_detect_color+7)& (0+255),w,b
  1569   0001A6  6FC3               	movwf	(??_detect_color+9)& (0+255),b
  1570   0001A8  C0C2  F009         	movff	??_detect_color+8,___xxtofl@val
  1571   0001AC  C0C3  F00A         	movff	??_detect_color+9,___xxtofl@val+1
  1572   0001B0  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1573   0001B2  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1574   0001B4  0E00               	movlw	0
  1575   0001B6  EC1E  F007         	call	___xxtofl
  1576   0001BA  C009  F01B         	movff	?___xxtofl,___fldiv@a
  1577   0001BE  C00A  F01C         	movff	?___xxtofl+1,___fldiv@a+1
  1578   0001C2  C00B  F01D         	movff	?___xxtofl+2,___fldiv@a+2
  1579   0001C6  C00C  F01E         	movff	?___xxtofl+3,___fldiv@a+3
  1580   0001CA  0100               	movlb	0	; () banked
  1581   0001CC  EE20 F002          	lfsr	2,2
  1582   0001D0  51B8               	movf	detect_color@tempval& (0+255),w,b
  1583   0001D2  26D9               	addwf	fsr2l,f,c
  1584   0001D4  51B9               	movf	(detect_color@tempval+1)& (0+255),w,b
  1585   0001D6  22DA               	addwfc	fsr2h,f,c
  1586   0001D8  CFDE F0C4          	movff	postinc2,??_detect_color+10
  1587   0001DC  CFDD F0C5          	movff	postdec2,??_detect_color+11
  1588   0001E0  C0C4  F009         	movff	??_detect_color+10,___xxtofl@val
  1589   0001E4  C0C5  F00A         	movff	??_detect_color+11,___xxtofl@val+1
  1590   0001E8  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1591   0001EA  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1592   0001EC  0E00               	movlw	0
  1593   0001EE  EC1E  F007         	call	___xxtofl
  1594   0001F2  C009  F017         	movff	?___xxtofl,___fldiv@b
  1595   0001F6  C00A  F018         	movff	?___xxtofl+1,___fldiv@b+1
  1596   0001FA  C00B  F019         	movff	?___xxtofl+2,___fldiv@b+2
  1597   0001FE  C00C  F01A         	movff	?___xxtofl+3,___fldiv@b+3
  1598   000202  EC51  F005         	call	___fldiv	;wreg free
  1599   000206  C017  F030         	movff	?___fldiv,___flmul@b
  1600   00020A  C018  F031         	movff	?___fldiv+1,___flmul@b+1
  1601   00020E  C019  F032         	movff	?___fldiv+2,___flmul@b+2
  1602   000212  C01A  F033         	movff	?___fldiv+3,___flmul@b+3
  1603   000216  EC3C  F003         	call	___flmul	;wreg free
  1604   00021A  C030  F049         	movff	?___flmul,___fltol@f1
  1605   00021E  C031  F04A         	movff	?___flmul+1,___fltol@f1+1
  1606   000222  C032  F04B         	movff	?___flmul+2,___fltol@f1+2
  1607   000226  C033  F04C         	movff	?___flmul+3,___fltol@f1+3
  1608   00022A  ECF5  F009         	call	___fltol	;wreg free
  1609   00022E  5049               	movf	?___fltol^0,w,c
  1610   000230  0100               	movlb	0	; () banked
  1611   000232  6FC8               	movwf	detect_color@dist_G& (0+255),b
  1612   000234                     
  1613                           ; BSR set to: 0
  1614                           ;color.c: 107:     dist_B = ((float)(tempval->B)/(float)(tempval->R + tempval->G + tempv
      +                          al->B))*100;
  1615   000234  0E00               	movlw	0
  1616   000236  6E34               	movwf	___flmul@a^0,c
  1617   000238  0E00               	movlw	0
  1618   00023A  6E35               	movwf	(___flmul@a+1)^0,c
  1619   00023C  0EC8               	movlw	200
  1620   00023E  6E36               	movwf	(___flmul@a+2)^0,c
  1621   000240  0E42               	movlw	66
  1622   000242  6E37               	movwf	(___flmul@a+3)^0,c
  1623   000244  EE20 F004          	lfsr	2,4
  1624   000248  51B8               	movf	detect_color@tempval& (0+255),w,b
  1625   00024A  26D9               	addwf	fsr2l,f,c
  1626   00024C  51B9               	movf	(detect_color@tempval+1)& (0+255),w,b
  1627   00024E  22DA               	addwfc	fsr2h,f,c
  1628   000250  CFDE F0BA          	movff	postinc2,??_detect_color
  1629   000254  CFDD F0BB          	movff	postdec2,??_detect_color+1
  1630   000258  EE20 F002          	lfsr	2,2
  1631   00025C  51B8               	movf	detect_color@tempval& (0+255),w,b
  1632   00025E  26D9               	addwf	fsr2l,f,c
  1633   000260  51B9               	movf	(detect_color@tempval+1)& (0+255),w,b
  1634   000262  22DA               	addwfc	fsr2h,f,c
  1635   000264  CFDE F0BC          	movff	postinc2,??_detect_color+2
  1636   000268  CFDD F0BD          	movff	postdec2,??_detect_color+3
  1637   00026C  C0B8  FFD9         	movff	detect_color@tempval,fsr2l
  1638   000270  C0B9  FFDA         	movff	detect_color@tempval+1,fsr2h
  1639   000274  CFDE F0BE          	movff	postinc2,??_detect_color+4
  1640   000278  CFDD F0BF          	movff	postdec2,??_detect_color+5
  1641   00027C  51BC               	movf	(??_detect_color+2)& (0+255),w,b
  1642   00027E  25BE               	addwf	(??_detect_color+4)& (0+255),w,b
  1643   000280  6FC0               	movwf	(??_detect_color+6)& (0+255),b
  1644   000282  51BD               	movf	(??_detect_color+3)& (0+255),w,b
  1645   000284  21BF               	addwfc	(??_detect_color+5)& (0+255),w,b
  1646   000286  6FC1               	movwf	(??_detect_color+7)& (0+255),b
  1647   000288  51BA               	movf	??_detect_color& (0+255),w,b
  1648   00028A  25C0               	addwf	(??_detect_color+6)& (0+255),w,b
  1649   00028C  6FC2               	movwf	(??_detect_color+8)& (0+255),b
  1650   00028E  51BB               	movf	(??_detect_color+1)& (0+255),w,b
  1651   000290  21C1               	addwfc	(??_detect_color+7)& (0+255),w,b
  1652   000292  6FC3               	movwf	(??_detect_color+9)& (0+255),b
  1653   000294  C0C2  F009         	movff	??_detect_color+8,___xxtofl@val
  1654   000298  C0C3  F00A         	movff	??_detect_color+9,___xxtofl@val+1
  1655   00029C  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1656   00029E  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1657   0002A0  0E00               	movlw	0
  1658   0002A2  EC1E  F007         	call	___xxtofl
  1659   0002A6  C009  F01B         	movff	?___xxtofl,___fldiv@a
  1660   0002AA  C00A  F01C         	movff	?___xxtofl+1,___fldiv@a+1
  1661   0002AE  C00B  F01D         	movff	?___xxtofl+2,___fldiv@a+2
  1662   0002B2  C00C  F01E         	movff	?___xxtofl+3,___fldiv@a+3
  1663   0002B6  0100               	movlb	0	; () banked
  1664   0002B8  EE20 F004          	lfsr	2,4
  1665   0002BC  51B8               	movf	detect_color@tempval& (0+255),w,b
  1666   0002BE  26D9               	addwf	fsr2l,f,c
  1667   0002C0  51B9               	movf	(detect_color@tempval+1)& (0+255),w,b
  1668   0002C2  22DA               	addwfc	fsr2h,f,c
  1669   0002C4  CFDE F0C4          	movff	postinc2,??_detect_color+10
  1670   0002C8  CFDD F0C5          	movff	postdec2,??_detect_color+11
  1671   0002CC  C0C4  F009         	movff	??_detect_color+10,___xxtofl@val
  1672   0002D0  C0C5  F00A         	movff	??_detect_color+11,___xxtofl@val+1
  1673   0002D4  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1674   0002D6  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1675   0002D8  0E00               	movlw	0
  1676   0002DA  EC1E  F007         	call	___xxtofl
  1677   0002DE  C009  F017         	movff	?___xxtofl,___fldiv@b
  1678   0002E2  C00A  F018         	movff	?___xxtofl+1,___fldiv@b+1
  1679   0002E6  C00B  F019         	movff	?___xxtofl+2,___fldiv@b+2
  1680   0002EA  C00C  F01A         	movff	?___xxtofl+3,___fldiv@b+3
  1681   0002EE  EC51  F005         	call	___fldiv	;wreg free
  1682   0002F2  C017  F030         	movff	?___fldiv,___flmul@b
  1683   0002F6  C018  F031         	movff	?___fldiv+1,___flmul@b+1
  1684   0002FA  C019  F032         	movff	?___fldiv+2,___flmul@b+2
  1685   0002FE  C01A  F033         	movff	?___fldiv+3,___flmul@b+3
  1686   000302  EC3C  F003         	call	___flmul	;wreg free
  1687   000306  C030  F049         	movff	?___flmul,___fltol@f1
  1688   00030A  C031  F04A         	movff	?___flmul+1,___fltol@f1+1
  1689   00030E  C032  F04B         	movff	?___flmul+2,___fltol@f1+2
  1690   000312  C033  F04C         	movff	?___flmul+3,___fltol@f1+3
  1691   000316  ECF5  F009         	call	___fltol	;wreg free
  1692   00031A  5049               	movf	?___fltol^0,w,c
  1693   00031C  0100               	movlb	0	; () banked
  1694   00031E  6FC9               	movwf	detect_color@dist_B& (0+255),b
  1695   000320                     
  1696                           ; BSR set to: 0
  1697                           ;color.c: 109:     if(color_flag){
  1698   000320  51B3               	movf	_color_flag& (0+255),w,b
  1699   000322  B4D8               	btfsc	status,2,c
  1700   000324  EF96  F001         	goto	u3541
  1701   000328  EF98  F001         	goto	u3540
  1702   00032C                     u3541:
  1703   00032C  EF38  F003         	goto	l42
  1704   000330                     u3540:
  1705   000330                     
  1706                           ; BSR set to: 0
  1707                           ;color.c: 110:         if((74<=dist_R) && (dist_R<=76) && (10<=dist_G) && (dist_G<=12) &
      +                          & (13<=dist_B) && (dist_B<=15)){
  1708   000330  0E49               	movlw	73
  1709   000332  65C7               	cpfsgt	detect_color@dist_R& (0+255),b
  1710   000334  EF9E  F001         	goto	u3551
  1711   000338  EFA0  F001         	goto	u3550
  1712   00033C                     u3551:
  1713   00033C  EFCC  F001         	goto	l3718
  1714   000340                     u3550:
  1715   000340                     
  1716                           ; BSR set to: 0
  1717   000340  0E4D               	movlw	77
  1718   000342  61C7               	cpfslt	detect_color@dist_R& (0+255),b
  1719   000344  EFA6  F001         	goto	u3561
  1720   000348  EFA8  F001         	goto	u3560
  1721   00034C                     u3561:
  1722   00034C  EFCC  F001         	goto	l3718
  1723   000350                     u3560:
  1724   000350                     
  1725                           ; BSR set to: 0
  1726   000350  0E09               	movlw	9
  1727   000352  65C8               	cpfsgt	detect_color@dist_G& (0+255),b
  1728   000354  EFAE  F001         	goto	u3571
  1729   000358  EFB0  F001         	goto	u3570
  1730   00035C                     u3571:
  1731   00035C  EFCC  F001         	goto	l3718
  1732   000360                     u3570:
  1733   000360                     
  1734                           ; BSR set to: 0
  1735   000360  0E0D               	movlw	13
  1736   000362  61C8               	cpfslt	detect_color@dist_G& (0+255),b
  1737   000364  EFB6  F001         	goto	u3581
  1738   000368  EFB8  F001         	goto	u3580
  1739   00036C                     u3581:
  1740   00036C  EFCC  F001         	goto	l3718
  1741   000370                     u3580:
  1742   000370                     
  1743                           ; BSR set to: 0
  1744   000370  0E0C               	movlw	12
  1745   000372  65C9               	cpfsgt	detect_color@dist_B& (0+255),b
  1746   000374  EFBE  F001         	goto	u3591
  1747   000378  EFC0  F001         	goto	u3590
  1748   00037C                     u3591:
  1749   00037C  EFCC  F001         	goto	l3718
  1750   000380                     u3590:
  1751   000380                     
  1752                           ; BSR set to: 0
  1753   000380  0E10               	movlw	16
  1754   000382  61C9               	cpfslt	detect_color@dist_B& (0+255),b
  1755   000384  EFC6  F001         	goto	u3601
  1756   000388  EFC8  F001         	goto	u3600
  1757   00038C                     u3601:
  1758   00038C  EFCC  F001         	goto	l3718
  1759   000390                     u3600:
  1760   000390                     
  1761                           ; BSR set to: 0
  1762                           ;color.c: 111:             color = 1;
  1763   000390  0E01               	movlw	1
  1764   000392  6FC6               	movwf	detect_color@color& (0+255),b
  1765                           
  1766                           ;color.c: 112:         }
  1767   000394  EF38  F003         	goto	l42
  1768   000398                     l3718:
  1769                           
  1770                           ; BSR set to: 0
  1771   000398  0E23               	movlw	35
  1772   00039A  65C7               	cpfsgt	detect_color@dist_R& (0+255),b
  1773   00039C  EFD2  F001         	goto	u3611
  1774   0003A0  EFD4  F001         	goto	u3610
  1775   0003A4                     u3611:
  1776   0003A4  EF00  F002         	goto	l3732
  1777   0003A8                     u3610:
  1778   0003A8                     
  1779                           ; BSR set to: 0
  1780   0003A8  0E27               	movlw	39
  1781   0003AA  61C7               	cpfslt	detect_color@dist_R& (0+255),b
  1782   0003AC  EFDA  F001         	goto	u3621
  1783   0003B0  EFDC  F001         	goto	u3620
  1784   0003B4                     u3621:
  1785   0003B4  EF00  F002         	goto	l3732
  1786   0003B8                     u3620:
  1787   0003B8                     
  1788                           ; BSR set to: 0
  1789   0003B8  0E28               	movlw	40
  1790   0003BA  65C8               	cpfsgt	detect_color@dist_G& (0+255),b
  1791   0003BC  EFE2  F001         	goto	u3631
  1792   0003C0  EFE4  F001         	goto	u3630
  1793   0003C4                     u3631:
  1794   0003C4  EF00  F002         	goto	l3732
  1795   0003C8                     u3630:
  1796   0003C8                     
  1797                           ; BSR set to: 0
  1798   0003C8  0E2C               	movlw	44
  1799   0003CA  61C8               	cpfslt	detect_color@dist_G& (0+255),b
  1800   0003CC  EFEA  F001         	goto	u3641
  1801   0003D0  EFEC  F001         	goto	u3640
  1802   0003D4                     u3641:
  1803   0003D4  EF00  F002         	goto	l3732
  1804   0003D8                     u3640:
  1805   0003D8                     
  1806                           ; BSR set to: 0
  1807   0003D8  0E13               	movlw	19
  1808   0003DA  65C9               	cpfsgt	detect_color@dist_B& (0+255),b
  1809   0003DC  EFF2  F001         	goto	u3651
  1810   0003E0  EFF4  F001         	goto	u3650
  1811   0003E4                     u3651:
  1812   0003E4  EF00  F002         	goto	l3732
  1813   0003E8                     u3650:
  1814   0003E8                     
  1815                           ; BSR set to: 0
  1816   0003E8  0E17               	movlw	23
  1817   0003EA  61C9               	cpfslt	detect_color@dist_B& (0+255),b
  1818   0003EC  EFFA  F001         	goto	u3661
  1819   0003F0  EFFC  F001         	goto	u3660
  1820   0003F4                     u3661:
  1821   0003F4  EF00  F002         	goto	l3732
  1822   0003F8                     u3660:
  1823   0003F8                     
  1824                           ; BSR set to: 0
  1825                           ;color.c: 114:             color = 2;
  1826   0003F8  0E02               	movlw	2
  1827   0003FA  6FC6               	movwf	detect_color@color& (0+255),b
  1828                           
  1829                           ;color.c: 115:         }
  1830   0003FC  EF38  F003         	goto	l42
  1831   000400                     l3732:
  1832                           
  1833                           ; BSR set to: 0
  1834   000400  0E1C               	movlw	28
  1835   000402  65C7               	cpfsgt	detect_color@dist_R& (0+255),b
  1836   000404  EF06  F002         	goto	u3671
  1837   000408  EF08  F002         	goto	u3670
  1838   00040C                     u3671:
  1839   00040C  EF34  F002         	goto	l3746
  1840   000410                     u3670:
  1841   000410                     
  1842                           ; BSR set to: 0
  1843   000410  0E23               	movlw	35
  1844   000412  61C7               	cpfslt	detect_color@dist_R& (0+255),b
  1845   000414  EF0E  F002         	goto	u3681
  1846   000418  EF10  F002         	goto	u3680
  1847   00041C                     u3681:
  1848   00041C  EF34  F002         	goto	l3746
  1849   000420                     u3680:
  1850   000420                     
  1851                           ; BSR set to: 0
  1852   000420  0E1F               	movlw	31
  1853   000422  65C8               	cpfsgt	detect_color@dist_G& (0+255),b
  1854   000424  EF16  F002         	goto	u3691
  1855   000428  EF18  F002         	goto	u3690
  1856   00042C                     u3691:
  1857   00042C  EF34  F002         	goto	l3746
  1858   000430                     u3690:
  1859   000430                     
  1860                           ; BSR set to: 0
  1861   000430  0E27               	movlw	39
  1862   000432  61C8               	cpfslt	detect_color@dist_G& (0+255),b
  1863   000434  EF1E  F002         	goto	u3701
  1864   000438  EF20  F002         	goto	u3700
  1865   00043C                     u3701:
  1866   00043C  EF34  F002         	goto	l3746
  1867   000440                     u3700:
  1868   000440                     
  1869                           ; BSR set to: 0
  1870   000440  0E1E               	movlw	30
  1871   000442  65C9               	cpfsgt	detect_color@dist_B& (0+255),b
  1872   000444  EF26  F002         	goto	u3711
  1873   000448  EF28  F002         	goto	u3710
  1874   00044C                     u3711:
  1875   00044C  EF34  F002         	goto	l3746
  1876   000450                     u3710:
  1877   000450                     
  1878                           ; BSR set to: 0
  1879   000450  0E26               	movlw	38
  1880   000452  61C9               	cpfslt	detect_color@dist_B& (0+255),b
  1881   000454  EF2E  F002         	goto	u3721
  1882   000458  EF30  F002         	goto	u3720
  1883   00045C                     u3721:
  1884   00045C  EF34  F002         	goto	l3746
  1885   000460                     u3720:
  1886   000460                     
  1887                           ; BSR set to: 0
  1888                           ;color.c: 117:             color = 3;
  1889   000460  0E03               	movlw	3
  1890   000462  6FC6               	movwf	detect_color@color& (0+255),b
  1891                           
  1892                           ;color.c: 118:         }
  1893   000464  EF38  F003         	goto	l42
  1894   000468                     l3746:
  1895                           
  1896                           ; BSR set to: 0
  1897   000468  0E31               	movlw	49
  1898   00046A  65C7               	cpfsgt	detect_color@dist_R& (0+255),b
  1899   00046C  EF3A  F002         	goto	u3731
  1900   000470  EF3C  F002         	goto	u3730
  1901   000474                     u3731:
  1902   000474  EF68  F002         	goto	l3760
  1903   000478                     u3730:
  1904   000478                     
  1905                           ; BSR set to: 0
  1906   000478  0E35               	movlw	53
  1907   00047A  61C7               	cpfslt	detect_color@dist_R& (0+255),b
  1908   00047C  EF42  F002         	goto	u3741
  1909   000480  EF44  F002         	goto	u3740
  1910   000484                     u3741:
  1911   000484  EF68  F002         	goto	l3760
  1912   000488                     u3740:
  1913   000488                     
  1914                           ; BSR set to: 0
  1915   000488  0E1D               	movlw	29
  1916   00048A  65C8               	cpfsgt	detect_color@dist_G& (0+255),b
  1917   00048C  EF4A  F002         	goto	u3751
  1918   000490  EF4C  F002         	goto	u3750
  1919   000494                     u3751:
  1920   000494  EF68  F002         	goto	l3760
  1921   000498                     u3750:
  1922   000498                     
  1923                           ; BSR set to: 0
  1924   000498  0E21               	movlw	33
  1925   00049A  61C8               	cpfslt	detect_color@dist_G& (0+255),b
  1926   00049C  EF52  F002         	goto	u3761
  1927   0004A0  EF54  F002         	goto	u3760
  1928   0004A4                     u3761:
  1929   0004A4  EF68  F002         	goto	l3760
  1930   0004A8                     u3760:
  1931   0004A8                     
  1932                           ; BSR set to: 0
  1933   0004A8  0E10               	movlw	16
  1934   0004AA  65C9               	cpfsgt	detect_color@dist_B& (0+255),b
  1935   0004AC  EF5A  F002         	goto	u3771
  1936   0004B0  EF5C  F002         	goto	u3770
  1937   0004B4                     u3771:
  1938   0004B4  EF68  F002         	goto	l3760
  1939   0004B8                     u3770:
  1940   0004B8                     
  1941                           ; BSR set to: 0
  1942   0004B8  0E14               	movlw	20
  1943   0004BA  61C9               	cpfslt	detect_color@dist_B& (0+255),b
  1944   0004BC  EF62  F002         	goto	u3781
  1945   0004C0  EF64  F002         	goto	u3780
  1946   0004C4                     u3781:
  1947   0004C4  EF68  F002         	goto	l3760
  1948   0004C8                     u3780:
  1949   0004C8                     
  1950                           ; BSR set to: 0
  1951                           ;color.c: 120:             color = 4;
  1952   0004C8  0E04               	movlw	4
  1953   0004CA  6FC6               	movwf	detect_color@color& (0+255),b
  1954                           
  1955                           ;color.c: 121:         }
  1956   0004CC  EF38  F003         	goto	l42
  1957   0004D0                     l3760:
  1958                           
  1959                           ; BSR set to: 0
  1960   0004D0  0E2F               	movlw	47
  1961   0004D2  65C7               	cpfsgt	detect_color@dist_R& (0+255),b
  1962   0004D4  EF6E  F002         	goto	u3791
  1963   0004D8  EF70  F002         	goto	u3790
  1964   0004DC                     u3791:
  1965   0004DC  EF9C  F002         	goto	l3774
  1966   0004E0                     u3790:
  1967   0004E0                     
  1968                           ; BSR set to: 0
  1969   0004E0  0E33               	movlw	51
  1970   0004E2  61C7               	cpfslt	detect_color@dist_R& (0+255),b
  1971   0004E4  EF76  F002         	goto	u3801
  1972   0004E8  EF78  F002         	goto	u3800
  1973   0004EC                     u3801:
  1974   0004EC  EF9C  F002         	goto	l3774
  1975   0004F0                     u3800:
  1976   0004F0                     
  1977                           ; BSR set to: 0
  1978   0004F0  0E1B               	movlw	27
  1979   0004F2  65C8               	cpfsgt	detect_color@dist_G& (0+255),b
  1980   0004F4  EF7E  F002         	goto	u3811
  1981   0004F8  EF80  F002         	goto	u3810
  1982   0004FC                     u3811:
  1983   0004FC  EF9C  F002         	goto	l3774
  1984   000500                     u3810:
  1985   000500                     
  1986                           ; BSR set to: 0
  1987   000500  0E1F               	movlw	31
  1988   000502  61C8               	cpfslt	detect_color@dist_G& (0+255),b
  1989   000504  EF86  F002         	goto	u3821
  1990   000508  EF88  F002         	goto	u3820
  1991   00050C                     u3821:
  1992   00050C  EF9C  F002         	goto	l3774
  1993   000510                     u3820:
  1994   000510                     
  1995                           ; BSR set to: 0
  1996   000510  0E14               	movlw	20
  1997   000512  65C9               	cpfsgt	detect_color@dist_B& (0+255),b
  1998   000514  EF8E  F002         	goto	u3831
  1999   000518  EF90  F002         	goto	u3830
  2000   00051C                     u3831:
  2001   00051C  EF9C  F002         	goto	l3774
  2002   000520                     u3830:
  2003   000520                     
  2004                           ; BSR set to: 0
  2005   000520  0E18               	movlw	24
  2006   000522  61C9               	cpfslt	detect_color@dist_B& (0+255),b
  2007   000524  EF96  F002         	goto	u3841
  2008   000528  EF98  F002         	goto	u3840
  2009   00052C                     u3841:
  2010   00052C  EF9C  F002         	goto	l3774
  2011   000530                     u3840:
  2012   000530                     
  2013                           ; BSR set to: 0
  2014                           ;color.c: 123:             color = 5;
  2015   000530  0E05               	movlw	5
  2016   000532  6FC6               	movwf	detect_color@color& (0+255),b
  2017                           
  2018                           ;color.c: 124:         }
  2019   000534  EF38  F003         	goto	l42
  2020   000538                     l3774:
  2021                           
  2022                           ; BSR set to: 0
  2023   000538  0E3A               	movlw	58
  2024   00053A  65C7               	cpfsgt	detect_color@dist_R& (0+255),b
  2025   00053C  EFA2  F002         	goto	u3851
  2026   000540  EFA4  F002         	goto	u3850
  2027   000544                     u3851:
  2028   000544  EFD0  F002         	goto	l3788
  2029   000548                     u3850:
  2030   000548                     
  2031                           ; BSR set to: 0
  2032   000548  0E3E               	movlw	62
  2033   00054A  61C7               	cpfslt	detect_color@dist_R& (0+255),b
  2034   00054C  EFAA  F002         	goto	u3861
  2035   000550  EFAC  F002         	goto	u3860
  2036   000554                     u3861:
  2037   000554  EFD0  F002         	goto	l3788
  2038   000558                     u3860:
  2039   000558                     
  2040                           ; BSR set to: 0
  2041   000558  0E15               	movlw	21
  2042   00055A  65C8               	cpfsgt	detect_color@dist_G& (0+255),b
  2043   00055C  EFB2  F002         	goto	u3871
  2044   000560  EFB4  F002         	goto	u3870
  2045   000564                     u3871:
  2046   000564  EFD0  F002         	goto	l3788
  2047   000568                     u3870:
  2048   000568                     
  2049                           ; BSR set to: 0
  2050   000568  0E19               	movlw	25
  2051   00056A  61C8               	cpfslt	detect_color@dist_G& (0+255),b
  2052   00056C  EFBA  F002         	goto	u3881
  2053   000570  EFBC  F002         	goto	u3880
  2054   000574                     u3881:
  2055   000574  EFD0  F002         	goto	l3788
  2056   000578                     u3880:
  2057   000578                     
  2058                           ; BSR set to: 0
  2059   000578  0E0F               	movlw	15
  2060   00057A  65C9               	cpfsgt	detect_color@dist_B& (0+255),b
  2061   00057C  EFC2  F002         	goto	u3891
  2062   000580  EFC4  F002         	goto	u3890
  2063   000584                     u3891:
  2064   000584  EFD0  F002         	goto	l3788
  2065   000588                     u3890:
  2066   000588                     
  2067                           ; BSR set to: 0
  2068   000588  0E13               	movlw	19
  2069   00058A  61C9               	cpfslt	detect_color@dist_B& (0+255),b
  2070   00058C  EFCA  F002         	goto	u3901
  2071   000590  EFCC  F002         	goto	u3900
  2072   000594                     u3901:
  2073   000594  EFD0  F002         	goto	l3788
  2074   000598                     u3900:
  2075   000598                     
  2076                           ; BSR set to: 0
  2077                           ;color.c: 126:             color = 6;
  2078   000598  0E06               	movlw	6
  2079   00059A  6FC6               	movwf	detect_color@color& (0+255),b
  2080                           
  2081                           ;color.c: 127:         }
  2082   00059C  EF38  F003         	goto	l42
  2083   0005A0                     l3788:
  2084                           
  2085                           ; BSR set to: 0
  2086   0005A0  0E20               	movlw	32
  2087   0005A2  65C7               	cpfsgt	detect_color@dist_R& (0+255),b
  2088   0005A4  EFD6  F002         	goto	u3911
  2089   0005A8  EFD8  F002         	goto	u3910
  2090   0005AC                     u3911:
  2091   0005AC  EF04  F003         	goto	l3802
  2092   0005B0                     u3910:
  2093   0005B0                     
  2094                           ; BSR set to: 0
  2095   0005B0  0E24               	movlw	36
  2096   0005B2  61C7               	cpfslt	detect_color@dist_R& (0+255),b
  2097   0005B4  EFDE  F002         	goto	u3921
  2098   0005B8  EFE0  F002         	goto	u3920
  2099   0005BC                     u3921:
  2100   0005BC  EF04  F003         	goto	l3802
  2101   0005C0                     u3920:
  2102   0005C0                     
  2103                           ; BSR set to: 0
  2104   0005C0  0E25               	movlw	37
  2105   0005C2  65C8               	cpfsgt	detect_color@dist_G& (0+255),b
  2106   0005C4  EFE6  F002         	goto	u3931
  2107   0005C8  EFE8  F002         	goto	u3930
  2108   0005CC                     u3931:
  2109   0005CC  EF04  F003         	goto	l3802
  2110   0005D0                     u3930:
  2111   0005D0                     
  2112                           ; BSR set to: 0
  2113   0005D0  0E29               	movlw	41
  2114   0005D2  61C8               	cpfslt	detect_color@dist_G& (0+255),b
  2115   0005D4  EFEE  F002         	goto	u3941
  2116   0005D8  EFF0  F002         	goto	u3940
  2117   0005DC                     u3941:
  2118   0005DC  EF04  F003         	goto	l3802
  2119   0005E0                     u3940:
  2120   0005E0                     
  2121                           ; BSR set to: 0
  2122   0005E0  0E19               	movlw	25
  2123   0005E2  65C9               	cpfsgt	detect_color@dist_B& (0+255),b
  2124   0005E4  EFF6  F002         	goto	u3951
  2125   0005E8  EFF8  F002         	goto	u3950
  2126   0005EC                     u3951:
  2127   0005EC  EF04  F003         	goto	l3802
  2128   0005F0                     u3950:
  2129   0005F0                     
  2130                           ; BSR set to: 0
  2131   0005F0  0E1D               	movlw	29
  2132   0005F2  61C9               	cpfslt	detect_color@dist_B& (0+255),b
  2133   0005F4  EFFE  F002         	goto	u3961
  2134   0005F8  EF00  F003         	goto	u3960
  2135   0005FC                     u3961:
  2136   0005FC  EF04  F003         	goto	l3802
  2137   000600                     u3960:
  2138   000600                     
  2139                           ; BSR set to: 0
  2140                           ;color.c: 129:             color = 7;
  2141   000600  0E07               	movlw	7
  2142   000602  6FC6               	movwf	detect_color@color& (0+255),b
  2143                           
  2144                           ;color.c: 130:         }
  2145   000604  EF38  F003         	goto	l42
  2146   000608                     l3802:
  2147                           
  2148                           ; BSR set to: 0
  2149   000608  0E2A               	movlw	42
  2150   00060A  65C7               	cpfsgt	detect_color@dist_R& (0+255),b
  2151   00060C  EF0A  F003         	goto	u3971
  2152   000610  EF0C  F003         	goto	u3970
  2153   000614                     u3971:
  2154   000614  EF38  F003         	goto	l56
  2155   000618                     u3970:
  2156   000618                     
  2157                           ; BSR set to: 0
  2158   000618  0E2E               	movlw	46
  2159   00061A  61C7               	cpfslt	detect_color@dist_R& (0+255),b
  2160   00061C  EF12  F003         	goto	u3981
  2161   000620  EF14  F003         	goto	u3980
  2162   000624                     u3981:
  2163   000624  EF38  F003         	goto	l56
  2164   000628                     u3980:
  2165   000628                     
  2166                           ; BSR set to: 0
  2167   000628  0E1F               	movlw	31
  2168   00062A  65C8               	cpfsgt	detect_color@dist_G& (0+255),b
  2169   00062C  EF1A  F003         	goto	u3991
  2170   000630  EF1C  F003         	goto	u3990
  2171   000634                     u3991:
  2172   000634  EF38  F003         	goto	l56
  2173   000638                     u3990:
  2174   000638                     
  2175                           ; BSR set to: 0
  2176   000638  0E23               	movlw	35
  2177   00063A  61C8               	cpfslt	detect_color@dist_G& (0+255),b
  2178   00063C  EF22  F003         	goto	u4001
  2179   000640  EF24  F003         	goto	u4000
  2180   000644                     u4001:
  2181   000644  EF38  F003         	goto	l56
  2182   000648                     u4000:
  2183   000648                     
  2184                           ; BSR set to: 0
  2185   000648  0E15               	movlw	21
  2186   00064A  65C9               	cpfsgt	detect_color@dist_B& (0+255),b
  2187   00064C  EF2A  F003         	goto	u4011
  2188   000650  EF2C  F003         	goto	u4010
  2189   000654                     u4011:
  2190   000654  EF38  F003         	goto	l56
  2191   000658                     u4010:
  2192   000658                     
  2193                           ; BSR set to: 0
  2194   000658  0E19               	movlw	25
  2195   00065A  61C9               	cpfslt	detect_color@dist_B& (0+255),b
  2196   00065C  EF32  F003         	goto	u4021
  2197   000660  EF34  F003         	goto	u4020
  2198   000664                     u4021:
  2199   000664  EF38  F003         	goto	l56
  2200   000668                     u4020:
  2201   000668                     
  2202                           ; BSR set to: 0
  2203                           ;color.c: 132:             color = 8;
  2204   000668  0E08               	movlw	8
  2205   00066A  6FC6               	movwf	detect_color@color& (0+255),b
  2206                           
  2207                           ;color.c: 133:         }
  2208   00066C  EF38  F003         	goto	l42
  2209   000670                     l56:
  2210   000670                     l42:
  2211                           
  2212                           ; BSR set to: 0
  2213                           ;color.c: 138:     color_flag = 0;
  2214   000670  0E00               	movlw	0
  2215   000672  6FB3               	movwf	_color_flag& (0+255),b
  2216                           
  2217                           ;color.c: 139:     return color;
  2218   000674  51C6               	movf	detect_color@color& (0+255),w,b
  2219   000676                     
  2220                           ; BSR set to: 0
  2221   000676  0012               	return		;funcret
  2222   000678                     __end_of_detect_color:
  2223                           	callstack 0
  2224                           
  2225 ;; *************** function ___xxtofl *****************
  2226 ;; Defined at:
  2227 ;;		line 10 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\xxtofl.c"
  2228 ;; Parameters:    Size  Location     Type
  2229 ;;  sign            1    wreg     unsigned char 
  2230 ;;  val             4    8[COMRAM] long 
  2231 ;; Auto vars:     Size  Location     Type
  2232 ;;  sign            1   16[COMRAM] unsigned char 
  2233 ;;  arg             4   18[COMRAM] unsigned long 
  2234 ;;  exp             1   17[COMRAM] unsigned char 
  2235 ;; Return value:  Size  Location     Type
  2236 ;;                  4    8[COMRAM] unsigned char 
  2237 ;; Registers used:
  2238 ;;		wreg, status,2, status,0
  2239 ;; Tracked objects:
  2240 ;;		On entry : 0/0
  2241 ;;		On exit  : 0/0
  2242 ;;		Unchanged: 0/0
  2243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2244 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2245 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2246 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2247 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2248 ;;Total ram usage:       14 bytes
  2249 ;; Hardware stack levels used: 1
  2250 ;; Hardware stack levels required when called: 7
  2251 ;; This function calls:
  2252 ;;		Nothing
  2253 ;; This function is called by:
  2254 ;;		_detect_color
  2255 ;; This function uses a non-reentrant model
  2256 ;;
  2257                           
  2258                           	psect	text4
  2259   000E3C                     __ptext4:
  2260                           	callstack 0
  2261   000E3C                     ___xxtofl:
  2262                           	callstack 22
  2263                           
  2264                           ; BSR set to: 0
  2265                           ;incstack = 0
  2266                           ;___xxtofl@sign stored from wreg
  2267   000E3C  6E11               	movwf	___xxtofl@sign^0,c
  2268   000E3E  5011               	movf	___xxtofl@sign^0,w,c
  2269   000E40  B4D8               	btfsc	status,2,c
  2270   000E42  EF25  F007         	goto	u2671
  2271   000E46  EF27  F007         	goto	u2670
  2272   000E4A                     u2671:
  2273   000E4A  EF49  F007         	goto	l1262
  2274   000E4E                     u2670:
  2275   000E4E  BE0C               	btfsc	(___xxtofl@val+3)^0,7,c
  2276   000E50  EF2E  F007         	goto	u2680
  2277   000E54  EF2C  F007         	goto	u2681
  2278   000E58                     u2681:
  2279   000E58  EF49  F007         	goto	l1262
  2280   000E5C                     u2680:
  2281   000E5C  C009  F00D         	movff	___xxtofl@val,??___xxtofl
  2282   000E60  C00A  F00E         	movff	___xxtofl@val+1,??___xxtofl+1
  2283   000E64  C00B  F00F         	movff	___xxtofl@val+2,??___xxtofl+2
  2284   000E68  C00C  F010         	movff	___xxtofl@val+3,??___xxtofl+3
  2285   000E6C  1E0D               	comf	??___xxtofl^0,f,c
  2286   000E6E  1E0E               	comf	(??___xxtofl+1)^0,f,c
  2287   000E70  1E0F               	comf	(??___xxtofl+2)^0,f,c
  2288   000E72  1E10               	comf	(??___xxtofl+3)^0,f,c
  2289   000E74  2A0D               	incf	??___xxtofl^0,f,c
  2290   000E76  0E00               	movlw	0
  2291   000E78  220E               	addwfc	(??___xxtofl+1)^0,f,c
  2292   000E7A  220F               	addwfc	(??___xxtofl+2)^0,f,c
  2293   000E7C  2210               	addwfc	(??___xxtofl+3)^0,f,c
  2294   000E7E  C00D  F013         	movff	??___xxtofl,___xxtofl@arg
  2295   000E82  C00E  F014         	movff	??___xxtofl+1,___xxtofl@arg+1
  2296   000E86  C00F  F015         	movff	??___xxtofl+2,___xxtofl@arg+2
  2297   000E8A  C010  F016         	movff	??___xxtofl+3,___xxtofl@arg+3
  2298   000E8E  EF51  F007         	goto	l3214
  2299   000E92                     l1262:
  2300   000E92  C009  F013         	movff	___xxtofl@val,___xxtofl@arg
  2301   000E96  C00A  F014         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2302   000E9A  C00B  F015         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2303   000E9E  C00C  F016         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2304   000EA2                     l3214:
  2305   000EA2  5009               	movf	___xxtofl@val^0,w,c
  2306   000EA4  100A               	iorwf	(___xxtofl@val+1)^0,w,c
  2307   000EA6  100B               	iorwf	(___xxtofl@val+2)^0,w,c
  2308   000EA8  100C               	iorwf	(___xxtofl@val+3)^0,w,c
  2309   000EAA  A4D8               	btfss	status,2,c
  2310   000EAC  EF5A  F007         	goto	u2691
  2311   000EB0  EF5C  F007         	goto	u2690
  2312   000EB4                     u2691:
  2313   000EB4  EF66  F007         	goto	l3220
  2314   000EB8                     u2690:
  2315   000EB8  0E00               	movlw	0
  2316   000EBA  6E09               	movwf	?___xxtofl^0,c
  2317   000EBC  0E00               	movlw	0
  2318   000EBE  6E0A               	movwf	(?___xxtofl+1)^0,c
  2319   000EC0  0E00               	movlw	0
  2320   000EC2  6E0B               	movwf	(?___xxtofl+2)^0,c
  2321   000EC4  0E00               	movlw	0
  2322   000EC6  6E0C               	movwf	(?___xxtofl+3)^0,c
  2323   000EC8  EFF7  F007         	goto	l1265
  2324   000ECC                     l3220:
  2325   000ECC  0E96               	movlw	150
  2326   000ECE  6E12               	movwf	___xxtofl@exp^0,c
  2327   000ED0  EF70  F007         	goto	l3224
  2328   000ED4                     l3222:
  2329   000ED4  2A12               	incf	___xxtofl@exp^0,f,c
  2330   000ED6  90D8               	bcf	status,0,c
  2331   000ED8  3216               	rrcf	(___xxtofl@arg+3)^0,f,c
  2332   000EDA  3215               	rrcf	(___xxtofl@arg+2)^0,f,c
  2333   000EDC  3214               	rrcf	(___xxtofl@arg+1)^0,f,c
  2334   000EDE  3213               	rrcf	___xxtofl@arg^0,f,c
  2335   000EE0                     l3224:
  2336   000EE0  0E00               	movlw	0
  2337   000EE2  1413               	andwf	___xxtofl@arg^0,w,c
  2338   000EE4  6E0D               	movwf	??___xxtofl^0,c
  2339   000EE6  0E00               	movlw	0
  2340   000EE8  1414               	andwf	(___xxtofl@arg+1)^0,w,c
  2341   000EEA  6E0E               	movwf	(??___xxtofl+1)^0,c
  2342   000EEC  0E00               	movlw	0
  2343   000EEE  1415               	andwf	(___xxtofl@arg+2)^0,w,c
  2344   000EF0  6E0F               	movwf	(??___xxtofl+2)^0,c
  2345   000EF2  0EFE               	movlw	254
  2346   000EF4  1416               	andwf	(___xxtofl@arg+3)^0,w,c
  2347   000EF6  6E10               	movwf	(??___xxtofl+3)^0,c
  2348   000EF8  500D               	movf	??___xxtofl^0,w,c
  2349   000EFA  100E               	iorwf	(??___xxtofl+1)^0,w,c
  2350   000EFC  100F               	iorwf	(??___xxtofl+2)^0,w,c
  2351   000EFE  1010               	iorwf	(??___xxtofl+3)^0,w,c
  2352   000F00  A4D8               	btfss	status,2,c
  2353   000F02  EF85  F007         	goto	u2701
  2354   000F06  EF87  F007         	goto	u2700
  2355   000F0A                     u2701:
  2356   000F0A  EF6A  F007         	goto	l3222
  2357   000F0E                     u2700:
  2358   000F0E  EF95  F007         	goto	l1269
  2359   000F12                     l3226:
  2360   000F12  2A12               	incf	___xxtofl@exp^0,f,c
  2361   000F14  0E01               	movlw	1
  2362   000F16  2613               	addwf	___xxtofl@arg^0,f,c
  2363   000F18  0E00               	movlw	0
  2364   000F1A  2214               	addwfc	(___xxtofl@arg+1)^0,f,c
  2365   000F1C  2215               	addwfc	(___xxtofl@arg+2)^0,f,c
  2366   000F1E  2216               	addwfc	(___xxtofl@arg+3)^0,f,c
  2367   000F20  90D8               	bcf	status,0,c
  2368   000F22  3216               	rrcf	(___xxtofl@arg+3)^0,f,c
  2369   000F24  3215               	rrcf	(___xxtofl@arg+2)^0,f,c
  2370   000F26  3214               	rrcf	(___xxtofl@arg+1)^0,f,c
  2371   000F28  3213               	rrcf	___xxtofl@arg^0,f,c
  2372   000F2A                     l1269:
  2373   000F2A  0E00               	movlw	0
  2374   000F2C  1413               	andwf	___xxtofl@arg^0,w,c
  2375   000F2E  6E0D               	movwf	??___xxtofl^0,c
  2376   000F30  0E00               	movlw	0
  2377   000F32  1414               	andwf	(___xxtofl@arg+1)^0,w,c
  2378   000F34  6E0E               	movwf	(??___xxtofl+1)^0,c
  2379   000F36  0E00               	movlw	0
  2380   000F38  1415               	andwf	(___xxtofl@arg+2)^0,w,c
  2381   000F3A  6E0F               	movwf	(??___xxtofl+2)^0,c
  2382   000F3C  0EFF               	movlw	255
  2383   000F3E  1416               	andwf	(___xxtofl@arg+3)^0,w,c
  2384   000F40  6E10               	movwf	(??___xxtofl+3)^0,c
  2385   000F42  500D               	movf	??___xxtofl^0,w,c
  2386   000F44  100E               	iorwf	(??___xxtofl+1)^0,w,c
  2387   000F46  100F               	iorwf	(??___xxtofl+2)^0,w,c
  2388   000F48  1010               	iorwf	(??___xxtofl+3)^0,w,c
  2389   000F4A  A4D8               	btfss	status,2,c
  2390   000F4C  EFAA  F007         	goto	u2711
  2391   000F50  EFAC  F007         	goto	u2710
  2392   000F54                     u2711:
  2393   000F54  EF89  F007         	goto	l3226
  2394   000F58                     u2710:
  2395   000F58  EFB4  F007         	goto	l3234
  2396   000F5C                     l3232:
  2397   000F5C  0612               	decf	___xxtofl@exp^0,f,c
  2398   000F5E  90D8               	bcf	status,0,c
  2399   000F60  3613               	rlcf	___xxtofl@arg^0,f,c
  2400   000F62  3614               	rlcf	(___xxtofl@arg+1)^0,f,c
  2401   000F64  3615               	rlcf	(___xxtofl@arg+2)^0,f,c
  2402   000F66  3616               	rlcf	(___xxtofl@arg+3)^0,f,c
  2403   000F68                     l3234:
  2404   000F68  BE15               	btfsc	(___xxtofl@arg+2)^0,7,c
  2405   000F6A  EFB9  F007         	goto	u2721
  2406   000F6E  EFBB  F007         	goto	u2720
  2407   000F72                     u2721:
  2408   000F72  EFC3  F007         	goto	l1276
  2409   000F76                     u2720:
  2410   000F76  0E02               	movlw	2
  2411   000F78  6012               	cpfslt	___xxtofl@exp^0,c
  2412   000F7A  EFC1  F007         	goto	u2731
  2413   000F7E  EFC3  F007         	goto	u2730
  2414   000F82                     u2731:
  2415   000F82  EFAE  F007         	goto	l3232
  2416   000F86                     u2730:
  2417   000F86                     l1276:
  2418   000F86  B012               	btfsc	___xxtofl@exp^0,0,c
  2419   000F88  EFC8  F007         	goto	u2741
  2420   000F8C  EFCA  F007         	goto	u2740
  2421   000F90                     u2741:
  2422   000F90  EFCB  F007         	goto	l3240
  2423   000F94                     u2740:
  2424   000F94  9E15               	bcf	(___xxtofl@arg+2)^0,7,c
  2425   000F96                     l3240:
  2426   000F96  90D8               	bcf	status,0,c
  2427   000F98  3212               	rrcf	___xxtofl@exp^0,f,c
  2428   000F9A  C012  F00D         	movff	___xxtofl@exp,??___xxtofl
  2429   000F9E  6A0E               	clrf	(??___xxtofl+1)^0,c
  2430   000FA0  6A0F               	clrf	(??___xxtofl+2)^0,c
  2431   000FA2  6A10               	clrf	(??___xxtofl+3)^0,c
  2432   000FA4  C00D  F010         	movff	??___xxtofl,??___xxtofl+3
  2433   000FA8  6A0F               	clrf	(??___xxtofl+2)^0,c
  2434   000FAA  6A0E               	clrf	(??___xxtofl+1)^0,c
  2435   000FAC  6A0D               	clrf	??___xxtofl^0,c
  2436   000FAE  500D               	movf	??___xxtofl^0,w,c
  2437   000FB0  1213               	iorwf	___xxtofl@arg^0,f,c
  2438   000FB2  500E               	movf	(??___xxtofl+1)^0,w,c
  2439   000FB4  1214               	iorwf	(___xxtofl@arg+1)^0,f,c
  2440   000FB6  500F               	movf	(??___xxtofl+2)^0,w,c
  2441   000FB8  1215               	iorwf	(___xxtofl@arg+2)^0,f,c
  2442   000FBA  5010               	movf	(??___xxtofl+3)^0,w,c
  2443   000FBC  1216               	iorwf	(___xxtofl@arg+3)^0,f,c
  2444   000FBE  5011               	movf	___xxtofl@sign^0,w,c
  2445   000FC0  B4D8               	btfsc	status,2,c
  2446   000FC2  EFE5  F007         	goto	u2751
  2447   000FC6  EFE7  F007         	goto	u2750
  2448   000FCA                     u2751:
  2449   000FCA  EFEF  F007         	goto	l3250
  2450   000FCE                     u2750:
  2451   000FCE  BE0C               	btfsc	(___xxtofl@val+3)^0,7,c
  2452   000FD0  EFEE  F007         	goto	u2760
  2453   000FD4  EFEC  F007         	goto	u2761
  2454   000FD8                     u2761:
  2455   000FD8  EFEF  F007         	goto	l3250
  2456   000FDC                     u2760:
  2457   000FDC  8E16               	bsf	(___xxtofl@arg+3)^0,7,c
  2458   000FDE                     l3250:
  2459   000FDE  C013  F009         	movff	___xxtofl@arg,?___xxtofl
  2460   000FE2  C014  F00A         	movff	___xxtofl@arg+1,?___xxtofl+1
  2461   000FE6  C015  F00B         	movff	___xxtofl@arg+2,?___xxtofl+2
  2462   000FEA  C016  F00C         	movff	___xxtofl@arg+3,?___xxtofl+3
  2463   000FEE                     l1265:
  2464   000FEE  0012               	return		;funcret
  2465   000FF0                     __end_of___xxtofl:
  2466                           	callstack 0
  2467                           
  2468 ;; *************** function ___fltol *****************
  2469 ;; Defined at:
  2470 ;;		line 43 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\fltol.c"
  2471 ;; Parameters:    Size  Location     Type
  2472 ;;  f1              4   72[COMRAM] unsigned char 
  2473 ;; Auto vars:     Size  Location     Type
  2474 ;;  exp1            1   77[COMRAM] unsigned char 
  2475 ;;  sign1           1   76[COMRAM] unsigned char 
  2476 ;; Return value:  Size  Location     Type
  2477 ;;                  4   72[COMRAM] long 
  2478 ;; Registers used:
  2479 ;;		wreg, status,2, status,0
  2480 ;; Tracked objects:
  2481 ;;		On entry : 0/0
  2482 ;;		On exit  : 0/0
  2483 ;;		Unchanged: 0/0
  2484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2485 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2486 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2487 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2488 ;;      Totals:         6       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2489 ;;Total ram usage:       10 bytes
  2490 ;; Hardware stack levels used: 1
  2491 ;; Hardware stack levels required when called: 7
  2492 ;; This function calls:
  2493 ;;		Nothing
  2494 ;; This function is called by:
  2495 ;;		_detect_color
  2496 ;; This function uses a non-reentrant model
  2497 ;;
  2498                           
  2499                           	psect	text5
  2500   0013EA                     __ptext5:
  2501                           	callstack 0
  2502   0013EA                     ___fltol:
  2503                           	callstack 22
  2504   0013EA  344B               	rlcf	(___fltol@f1+2)^0,w,c
  2505   0013EC  344C               	rlcf	(___fltol@f1+3)^0,w,c
  2506   0013EE  6E4E               	movwf	___fltol@exp1^0,c
  2507   0013F0  504E               	movf	___fltol@exp1^0,w,c
  2508   0013F2  A4D8               	btfss	status,2,c
  2509   0013F4  EFFE  F009         	goto	u3471
  2510   0013F8  EF00  F00A         	goto	u3470
  2511   0013FC                     u3471:
  2512   0013FC  EF0A  F00A         	goto	l3656
  2513   001400                     u3470:
  2514   001400                     l3652:
  2515   001400  0E00               	movlw	0
  2516   001402  6E49               	movwf	?___fltol^0,c
  2517   001404  0E00               	movlw	0
  2518   001406  6E4A               	movwf	(?___fltol+1)^0,c
  2519   001408  0E00               	movlw	0
  2520   00140A  6E4B               	movwf	(?___fltol+2)^0,c
  2521   00140C  0E00               	movlw	0
  2522   00140E  6E4C               	movwf	(?___fltol+3)^0,c
  2523   001410  EF78  F00A         	goto	l904
  2524   001414                     l3656:
  2525   001414  C049  F0B4         	movff	___fltol@f1,??___fltol
  2526   001418  C04A  F0B5         	movff	___fltol@f1+1,??___fltol+1
  2527   00141C  C04B  F0B6         	movff	___fltol@f1+2,??___fltol+2
  2528   001420  C04C  F0B7         	movff	___fltol@f1+3,??___fltol+3
  2529   001424  0E20               	movlw	32
  2530   001426  EF1B  F00A         	goto	u3480
  2531   00142A                     u3485:
  2532   00142A  0100               	movlb	0	; () banked
  2533   00142C  90D8               	bcf	status,0,c
  2534   00142E  33B7               	rrcf	(??___fltol+3)& (0+255),f,b
  2535   001430  33B6               	rrcf	(??___fltol+2)& (0+255),f,b
  2536   001432  33B5               	rrcf	(??___fltol+1)& (0+255),f,b
  2537   001434  33B4               	rrcf	??___fltol& (0+255),f,b
  2538   001436                     u3480:
  2539   001436  2EE8               	decfsz	wreg,f,c
  2540   001438  EF15  F00A         	goto	u3485
  2541   00143C  51B4               	movf	??___fltol& (0+255),w,b
  2542   00143E  6E4D               	movwf	___fltol@sign1^0,c
  2543   001440                     
  2544                           ; BSR set to: 0
  2545   001440  8E4B               	bsf	(___fltol@f1+2)^0,7,c
  2546   001442                     
  2547                           ; BSR set to: 0
  2548   001442  0EFF               	movlw	255
  2549   001444  1649               	andwf	___fltol@f1^0,f,c
  2550   001446  0EFF               	movlw	255
  2551   001448  164A               	andwf	(___fltol@f1+1)^0,f,c
  2552   00144A  0EFF               	movlw	255
  2553   00144C  164B               	andwf	(___fltol@f1+2)^0,f,c
  2554   00144E  0E00               	movlw	0
  2555   001450  164C               	andwf	(___fltol@f1+3)^0,f,c
  2556   001452                     
  2557                           ; BSR set to: 0
  2558   001452  0E96               	movlw	150
  2559   001454  5E4E               	subwf	___fltol@exp1^0,f,c
  2560   001456                     
  2561                           ; BSR set to: 0
  2562   001456  BE4E               	btfsc	___fltol@exp1^0,7,c
  2563   001458  EF32  F00A         	goto	u3490
  2564   00145C  EF30  F00A         	goto	u3491
  2565   001460                     u3491:
  2566   001460  EF48  F00A         	goto	l3676
  2567   001464                     u3490:
  2568   001464                     
  2569                           ; BSR set to: 0
  2570   001464  504E               	movf	___fltol@exp1^0,w,c
  2571   001466  0A80               	xorlw	128
  2572   001468  0F97               	addlw	151
  2573   00146A  B0D8               	btfsc	status,0,c
  2574   00146C  EF3A  F00A         	goto	u3501
  2575   001470  EF3C  F00A         	goto	u3500
  2576   001474                     u3501:
  2577   001474  EF3E  F00A         	goto	l3672
  2578   001478                     u3500:
  2579   001478  EF00  F00A         	goto	l3652
  2580   00147C                     l3672:
  2581   00147C  90D8               	bcf	status,0,c
  2582   00147E  324C               	rrcf	(___fltol@f1+3)^0,f,c
  2583   001480  324B               	rrcf	(___fltol@f1+2)^0,f,c
  2584   001482  324A               	rrcf	(___fltol@f1+1)^0,f,c
  2585   001484  3249               	rrcf	___fltol@f1^0,f,c
  2586   001486  3E4E               	incfsz	___fltol@exp1^0,f,c
  2587   001488  EF3E  F00A         	goto	l3672
  2588   00148C  EF60  F00A         	goto	l3686
  2589   001490                     l3676:
  2590                           
  2591                           ; BSR set to: 0
  2592   001490  0E1F               	movlw	31
  2593   001492  644E               	cpfsgt	___fltol@exp1^0,c
  2594   001494  EF4E  F00A         	goto	u3511
  2595   001498  EF50  F00A         	goto	u3510
  2596   00149C                     u3511:
  2597   00149C  EF58  F00A         	goto	l3684
  2598   0014A0                     u3510:
  2599   0014A0  EF00  F00A         	goto	l3652
  2600   0014A4                     l3682:
  2601   0014A4  90D8               	bcf	status,0,c
  2602   0014A6  3649               	rlcf	___fltol@f1^0,f,c
  2603   0014A8  364A               	rlcf	(___fltol@f1+1)^0,f,c
  2604   0014AA  364B               	rlcf	(___fltol@f1+2)^0,f,c
  2605   0014AC  364C               	rlcf	(___fltol@f1+3)^0,f,c
  2606   0014AE  064E               	decf	___fltol@exp1^0,f,c
  2607   0014B0                     l3684:
  2608   0014B0  504E               	movf	___fltol@exp1^0,w,c
  2609   0014B2  A4D8               	btfss	status,2,c
  2610   0014B4  EF5E  F00A         	goto	u3521
  2611   0014B8  EF60  F00A         	goto	u3520
  2612   0014BC                     u3521:
  2613   0014BC  EF52  F00A         	goto	l3682
  2614   0014C0                     u3520:
  2615   0014C0                     l3686:
  2616   0014C0  504D               	movf	___fltol@sign1^0,w,c
  2617   0014C2  B4D8               	btfsc	status,2,c
  2618   0014C4  EF66  F00A         	goto	u3531
  2619   0014C8  EF68  F00A         	goto	u3530
  2620   0014CC                     u3531:
  2621   0014CC  EF70  F00A         	goto	l3690
  2622   0014D0                     u3530:
  2623   0014D0  1E4C               	comf	(___fltol@f1+3)^0,f,c
  2624   0014D2  1E4B               	comf	(___fltol@f1+2)^0,f,c
  2625   0014D4  1E4A               	comf	(___fltol@f1+1)^0,f,c
  2626   0014D6  6C49               	negf	___fltol@f1^0,c
  2627   0014D8  0E00               	movlw	0
  2628   0014DA  224A               	addwfc	(___fltol@f1+1)^0,f,c
  2629   0014DC  224B               	addwfc	(___fltol@f1+2)^0,f,c
  2630   0014DE  224C               	addwfc	(___fltol@f1+3)^0,f,c
  2631   0014E0                     l3690:
  2632   0014E0  C049  F049         	movff	___fltol@f1,?___fltol
  2633   0014E4  C04A  F04A         	movff	___fltol@f1+1,?___fltol+1
  2634   0014E8  C04B  F04B         	movff	___fltol@f1+2,?___fltol+2
  2635   0014EC  C04C  F04C         	movff	___fltol@f1+3,?___fltol+3
  2636   0014F0                     l904:
  2637   0014F0  0012               	return		;funcret
  2638   0014F2                     __end_of___fltol:
  2639                           	callstack 0
  2640                           
  2641 ;; *************** function ___flmul *****************
  2642 ;; Defined at:
  2643 ;;		line 8 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\sprcmul.c"
  2644 ;; Parameters:    Size  Location     Type
  2645 ;;  b               4   47[COMRAM] long 
  2646 ;;  a               4   51[COMRAM] long 
  2647 ;; Auto vars:     Size  Location     Type
  2648 ;;  prod            4   66[COMRAM] struct .
  2649 ;;  grs             4   60[COMRAM] unsigned long 
  2650 ;;  temp            2   70[COMRAM] struct .
  2651 ;;  bexp            1   65[COMRAM] unsigned char 
  2652 ;;  aexp            1   64[COMRAM] unsigned char 
  2653 ;;  sign            1   59[COMRAM] unsigned char 
  2654 ;; Return value:  Size  Location     Type
  2655 ;;                  4   47[COMRAM] unsigned char 
  2656 ;; Registers used:
  2657 ;;		wreg, status,2, status,0, prodl, prodh
  2658 ;; Tracked objects:
  2659 ;;		On entry : 0/0
  2660 ;;		On exit  : 0/0
  2661 ;;		Unchanged: 0/0
  2662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2663 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2664 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2665 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2666 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2667 ;;Total ram usage:       25 bytes
  2668 ;; Hardware stack levels used: 1
  2669 ;; Hardware stack levels required when called: 7
  2670 ;; This function calls:
  2671 ;;		Nothing
  2672 ;; This function is called by:
  2673 ;;		_detect_color
  2674 ;; This function uses a non-reentrant model
  2675 ;;
  2676                           
  2677                           	psect	text6
  2678   000678                     __ptext6:
  2679                           	callstack 0
  2680   000678                     ___flmul:
  2681                           	callstack 22
  2682   000678  5033               	movf	(___flmul@b+3)^0,w,c
  2683   00067A  0B80               	andlw	128
  2684   00067C  6E3C               	movwf	___flmul@sign^0,c
  2685   00067E  5033               	movf	(___flmul@b+3)^0,w,c
  2686   000680  2433               	addwf	(___flmul@b+3)^0,w,c
  2687   000682  6E42               	movwf	___flmul@bexp^0,c
  2688   000684  AE32               	btfss	(___flmul@b+2)^0,7,c
  2689   000686  EF47  F003         	goto	u2411
  2690   00068A  EF49  F003         	goto	u2410
  2691   00068E                     u2411:
  2692   00068E  EF4A  F003         	goto	l3040
  2693   000692                     u2410:
  2694   000692  8042               	bsf	___flmul@bexp^0,0,c
  2695   000694                     l3040:
  2696   000694  5042               	movf	___flmul@bexp^0,w,c
  2697   000696  B4D8               	btfsc	status,2,c
  2698   000698  EF50  F003         	goto	u2421
  2699   00069C  EF52  F003         	goto	u2420
  2700   0006A0                     u2421:
  2701   0006A0  EF65  F003         	goto	l3048
  2702   0006A4                     u2420:
  2703   0006A4  2842               	incf	___flmul@bexp^0,w,c
  2704   0006A6  A4D8               	btfss	status,2,c
  2705   0006A8  EF58  F003         	goto	u2431
  2706   0006AC  EF5A  F003         	goto	u2430
  2707   0006B0                     u2431:
  2708   0006B0  EF62  F003         	goto	l3046
  2709   0006B4                     u2430:
  2710   0006B4  0E00               	movlw	0
  2711   0006B6  6E30               	movwf	___flmul@b^0,c
  2712   0006B8  0E00               	movlw	0
  2713   0006BA  6E31               	movwf	(___flmul@b+1)^0,c
  2714   0006BC  0E00               	movlw	0
  2715   0006BE  6E32               	movwf	(___flmul@b+2)^0,c
  2716   0006C0  0E00               	movlw	0
  2717   0006C2  6E33               	movwf	(___flmul@b+3)^0,c
  2718   0006C4                     l3046:
  2719   0006C4  8E32               	bsf	(___flmul@b+2)^0,7,c
  2720   0006C6  EF6D  F003         	goto	l3050
  2721   0006CA                     l3048:
  2722   0006CA  0E00               	movlw	0
  2723   0006CC  6E30               	movwf	___flmul@b^0,c
  2724   0006CE  0E00               	movlw	0
  2725   0006D0  6E31               	movwf	(___flmul@b+1)^0,c
  2726   0006D2  0E00               	movlw	0
  2727   0006D4  6E32               	movwf	(___flmul@b+2)^0,c
  2728   0006D6  0E00               	movlw	0
  2729   0006D8  6E33               	movwf	(___flmul@b+3)^0,c
  2730   0006DA                     l3050:
  2731   0006DA  5037               	movf	(___flmul@a+3)^0,w,c
  2732   0006DC  0B80               	andlw	128
  2733   0006DE  1A3C               	xorwf	___flmul@sign^0,f,c
  2734   0006E0  5037               	movf	(___flmul@a+3)^0,w,c
  2735   0006E2  2437               	addwf	(___flmul@a+3)^0,w,c
  2736   0006E4  6E41               	movwf	___flmul@aexp^0,c
  2737   0006E6  AE36               	btfss	(___flmul@a+2)^0,7,c
  2738   0006E8  EF78  F003         	goto	u2441
  2739   0006EC  EF7A  F003         	goto	u2440
  2740   0006F0                     u2441:
  2741   0006F0  EF7B  F003         	goto	l3058
  2742   0006F4                     u2440:
  2743   0006F4  8041               	bsf	___flmul@aexp^0,0,c
  2744   0006F6                     l3058:
  2745   0006F6  5041               	movf	___flmul@aexp^0,w,c
  2746   0006F8  B4D8               	btfsc	status,2,c
  2747   0006FA  EF81  F003         	goto	u2451
  2748   0006FE  EF83  F003         	goto	u2450
  2749   000702                     u2451:
  2750   000702  EF96  F003         	goto	l3066
  2751   000706                     u2450:
  2752   000706  2841               	incf	___flmul@aexp^0,w,c
  2753   000708  A4D8               	btfss	status,2,c
  2754   00070A  EF89  F003         	goto	u2461
  2755   00070E  EF8B  F003         	goto	u2460
  2756   000712                     u2461:
  2757   000712  EF93  F003         	goto	l3064
  2758   000716                     u2460:
  2759   000716  0E00               	movlw	0
  2760   000718  6E34               	movwf	___flmul@a^0,c
  2761   00071A  0E00               	movlw	0
  2762   00071C  6E35               	movwf	(___flmul@a+1)^0,c
  2763   00071E  0E00               	movlw	0
  2764   000720  6E36               	movwf	(___flmul@a+2)^0,c
  2765   000722  0E00               	movlw	0
  2766   000724  6E37               	movwf	(___flmul@a+3)^0,c
  2767   000726                     l3064:
  2768   000726  8E36               	bsf	(___flmul@a+2)^0,7,c
  2769   000728  EF9E  F003         	goto	l1221
  2770   00072C                     l3066:
  2771   00072C  0E00               	movlw	0
  2772   00072E  6E34               	movwf	___flmul@a^0,c
  2773   000730  0E00               	movlw	0
  2774   000732  6E35               	movwf	(___flmul@a+1)^0,c
  2775   000734  0E00               	movlw	0
  2776   000736  6E36               	movwf	(___flmul@a+2)^0,c
  2777   000738  0E00               	movlw	0
  2778   00073A  6E37               	movwf	(___flmul@a+3)^0,c
  2779   00073C                     l1221:
  2780   00073C  5041               	movf	___flmul@aexp^0,w,c
  2781   00073E  B4D8               	btfsc	status,2,c
  2782   000740  EFA4  F003         	goto	u2471
  2783   000744  EFA6  F003         	goto	u2470
  2784   000748                     u2471:
  2785   000748  EFAE  F003         	goto	l3070
  2786   00074C                     u2470:
  2787   00074C  5042               	movf	___flmul@bexp^0,w,c
  2788   00074E  A4D8               	btfss	status,2,c
  2789   000750  EFAC  F003         	goto	u2481
  2790   000754  EFAE  F003         	goto	u2480
  2791   000758                     u2481:
  2792   000758  EFB8  F003         	goto	l3074
  2793   00075C                     u2480:
  2794   00075C                     l3070:
  2795   00075C  0E00               	movlw	0
  2796   00075E  6E30               	movwf	?___flmul^0,c
  2797   000760  0E00               	movlw	0
  2798   000762  6E31               	movwf	(?___flmul+1)^0,c
  2799   000764  0E00               	movlw	0
  2800   000766  6E32               	movwf	(?___flmul+2)^0,c
  2801   000768  0E00               	movlw	0
  2802   00076A  6E33               	movwf	(?___flmul+3)^0,c
  2803   00076C  EF50  F005         	goto	l1225
  2804   000770                     l3074:
  2805   000770  5036               	movf	(___flmul@a+2)^0,w,c
  2806   000772  0230               	mulwf	___flmul@b^0,c
  2807   000774  CFF3 F047          	movff	prodl,___flmul@temp
  2808   000778  CFF4 F048          	movff	prodh,___flmul@temp+1
  2809   00077C  5047               	movf	___flmul@temp^0,w,c
  2810   00077E  6E3D               	movwf	___flmul@grs^0,c
  2811   000780  6A3E               	clrf	(___flmul@grs+1)^0,c
  2812   000782  6A3F               	clrf	(___flmul@grs+2)^0,c
  2813   000784  6A40               	clrf	(___flmul@grs+3)^0,c
  2814   000786  5048               	movf	(___flmul@temp+1)^0,w,c
  2815   000788  6E43               	movwf	___flmul@prod^0,c
  2816   00078A  6A44               	clrf	(___flmul@prod+1)^0,c
  2817   00078C  6A45               	clrf	(___flmul@prod+2)^0,c
  2818   00078E  6A46               	clrf	(___flmul@prod+3)^0,c
  2819   000790  5035               	movf	(___flmul@a+1)^0,w,c
  2820   000792  0231               	mulwf	(___flmul@b+1)^0,c
  2821   000794  CFF3 F047          	movff	prodl,___flmul@temp
  2822   000798  CFF4 F048          	movff	prodh,___flmul@temp+1
  2823   00079C  5047               	movf	___flmul@temp^0,w,c
  2824   00079E  263D               	addwf	___flmul@grs^0,f,c
  2825   0007A0  0E00               	movlw	0
  2826   0007A2  223E               	addwfc	(___flmul@grs+1)^0,f,c
  2827   0007A4  223F               	addwfc	(___flmul@grs+2)^0,f,c
  2828   0007A6  2240               	addwfc	(___flmul@grs+3)^0,f,c
  2829   0007A8  5048               	movf	(___flmul@temp+1)^0,w,c
  2830   0007AA  2643               	addwf	___flmul@prod^0,f,c
  2831   0007AC  0E00               	movlw	0
  2832   0007AE  2244               	addwfc	(___flmul@prod+1)^0,f,c
  2833   0007B0  2245               	addwfc	(___flmul@prod+2)^0,f,c
  2834   0007B2  2246               	addwfc	(___flmul@prod+3)^0,f,c
  2835   0007B4  5034               	movf	___flmul@a^0,w,c
  2836   0007B6  0232               	mulwf	(___flmul@b+2)^0,c
  2837   0007B8  CFF3 F047          	movff	prodl,___flmul@temp
  2838   0007BC  CFF4 F048          	movff	prodh,___flmul@temp+1
  2839   0007C0  5047               	movf	___flmul@temp^0,w,c
  2840   0007C2  263D               	addwf	___flmul@grs^0,f,c
  2841   0007C4  0E00               	movlw	0
  2842   0007C6  223E               	addwfc	(___flmul@grs+1)^0,f,c
  2843   0007C8  223F               	addwfc	(___flmul@grs+2)^0,f,c
  2844   0007CA  2240               	addwfc	(___flmul@grs+3)^0,f,c
  2845   0007CC  5048               	movf	(___flmul@temp+1)^0,w,c
  2846   0007CE  2643               	addwf	___flmul@prod^0,f,c
  2847   0007D0  0E00               	movlw	0
  2848   0007D2  2244               	addwfc	(___flmul@prod+1)^0,f,c
  2849   0007D4  2245               	addwfc	(___flmul@prod+2)^0,f,c
  2850   0007D6  2246               	addwfc	(___flmul@prod+3)^0,f,c
  2851   0007D8  C03F  F040         	movff	___flmul@grs+2,___flmul@grs+3
  2852   0007DC  C03E  F03F         	movff	___flmul@grs+1,___flmul@grs+2
  2853   0007E0  C03D  F03E         	movff	___flmul@grs,___flmul@grs+1
  2854   0007E4  6A3D               	clrf	___flmul@grs^0,c
  2855   0007E6  5034               	movf	___flmul@a^0,w,c
  2856   0007E8  0231               	mulwf	(___flmul@b+1)^0,c
  2857   0007EA  CFF3 F047          	movff	prodl,___flmul@temp
  2858   0007EE  CFF4 F048          	movff	prodh,___flmul@temp+1
  2859   0007F2  5047               	movf	___flmul@temp^0,w,c
  2860   0007F4  263D               	addwf	___flmul@grs^0,f,c
  2861   0007F6  5048               	movf	(___flmul@temp+1)^0,w,c
  2862   0007F8  223E               	addwfc	(___flmul@grs+1)^0,f,c
  2863   0007FA  0E00               	movlw	0
  2864   0007FC  223F               	addwfc	(___flmul@grs+2)^0,f,c
  2865   0007FE  0E00               	movlw	0
  2866   000800  2240               	addwfc	(___flmul@grs+3)^0,f,c
  2867   000802  5035               	movf	(___flmul@a+1)^0,w,c
  2868   000804  0230               	mulwf	___flmul@b^0,c
  2869   000806  CFF3 F047          	movff	prodl,___flmul@temp
  2870   00080A  CFF4 F048          	movff	prodh,___flmul@temp+1
  2871   00080E  5047               	movf	___flmul@temp^0,w,c
  2872   000810  263D               	addwf	___flmul@grs^0,f,c
  2873   000812  5048               	movf	(___flmul@temp+1)^0,w,c
  2874   000814  223E               	addwfc	(___flmul@grs+1)^0,f,c
  2875   000816  0E00               	movlw	0
  2876   000818  223F               	addwfc	(___flmul@grs+2)^0,f,c
  2877   00081A  0E00               	movlw	0
  2878   00081C  2240               	addwfc	(___flmul@grs+3)^0,f,c
  2879   00081E  C03F  F040         	movff	___flmul@grs+2,___flmul@grs+3
  2880   000822  C03E  F03F         	movff	___flmul@grs+1,___flmul@grs+2
  2881   000826  C03D  F03E         	movff	___flmul@grs,___flmul@grs+1
  2882   00082A  6A3D               	clrf	___flmul@grs^0,c
  2883   00082C  5034               	movf	___flmul@a^0,w,c
  2884   00082E  0230               	mulwf	___flmul@b^0,c
  2885   000830  CFF3 F047          	movff	prodl,___flmul@temp
  2886   000834  CFF4 F048          	movff	prodh,___flmul@temp+1
  2887   000838  5047               	movf	___flmul@temp^0,w,c
  2888   00083A  263D               	addwf	___flmul@grs^0,f,c
  2889   00083C  5048               	movf	(___flmul@temp+1)^0,w,c
  2890   00083E  223E               	addwfc	(___flmul@grs+1)^0,f,c
  2891   000840  0E00               	movlw	0
  2892   000842  223F               	addwfc	(___flmul@grs+2)^0,f,c
  2893   000844  0E00               	movlw	0
  2894   000846  2240               	addwfc	(___flmul@grs+3)^0,f,c
  2895   000848  5036               	movf	(___flmul@a+2)^0,w,c
  2896   00084A  0231               	mulwf	(___flmul@b+1)^0,c
  2897   00084C  CFF3 F047          	movff	prodl,___flmul@temp
  2898   000850  CFF4 F048          	movff	prodh,___flmul@temp+1
  2899   000854  5047               	movf	___flmul@temp^0,w,c
  2900   000856  2643               	addwf	___flmul@prod^0,f,c
  2901   000858  5048               	movf	(___flmul@temp+1)^0,w,c
  2902   00085A  2244               	addwfc	(___flmul@prod+1)^0,f,c
  2903   00085C  0E00               	movlw	0
  2904   00085E  2245               	addwfc	(___flmul@prod+2)^0,f,c
  2905   000860  0E00               	movlw	0
  2906   000862  2246               	addwfc	(___flmul@prod+3)^0,f,c
  2907   000864  5035               	movf	(___flmul@a+1)^0,w,c
  2908   000866  0232               	mulwf	(___flmul@b+2)^0,c
  2909   000868  CFF3 F047          	movff	prodl,___flmul@temp
  2910   00086C  CFF4 F048          	movff	prodh,___flmul@temp+1
  2911   000870  5047               	movf	___flmul@temp^0,w,c
  2912   000872  2643               	addwf	___flmul@prod^0,f,c
  2913   000874  5048               	movf	(___flmul@temp+1)^0,w,c
  2914   000876  2244               	addwfc	(___flmul@prod+1)^0,f,c
  2915   000878  0E00               	movlw	0
  2916   00087A  2245               	addwfc	(___flmul@prod+2)^0,f,c
  2917   00087C  0E00               	movlw	0
  2918   00087E  2246               	addwfc	(___flmul@prod+3)^0,f,c
  2919   000880  5036               	movf	(___flmul@a+2)^0,w,c
  2920   000882  0232               	mulwf	(___flmul@b+2)^0,c
  2921   000884  CFF3 F047          	movff	prodl,___flmul@temp
  2922   000888  CFF4 F048          	movff	prodh,___flmul@temp+1
  2923   00088C  5047               	movf	___flmul@temp^0,w,c
  2924   00088E  6E38               	movwf	??___flmul^0,c
  2925   000890  5048               	movf	(___flmul@temp+1)^0,w,c
  2926   000892  6E39               	movwf	(??___flmul+1)^0,c
  2927   000894  6A3A               	clrf	(??___flmul+2)^0,c
  2928   000896  6A3B               	clrf	(??___flmul+3)^0,c
  2929   000898  C03A  F03B         	movff	??___flmul+2,??___flmul+3
  2930   00089C  C039  F03A         	movff	??___flmul+1,??___flmul+2
  2931   0008A0  C038  F039         	movff	??___flmul,??___flmul+1
  2932   0008A4  6A38               	clrf	??___flmul^0,c
  2933   0008A6  5038               	movf	??___flmul^0,w,c
  2934   0008A8  2643               	addwf	___flmul@prod^0,f,c
  2935   0008AA  5039               	movf	(??___flmul+1)^0,w,c
  2936   0008AC  2244               	addwfc	(___flmul@prod+1)^0,f,c
  2937   0008AE  503A               	movf	(??___flmul+2)^0,w,c
  2938   0008B0  2245               	addwfc	(___flmul@prod+2)^0,f,c
  2939   0008B2  503B               	movf	(??___flmul+3)^0,w,c
  2940   0008B4  2246               	addwfc	(___flmul@prod+3)^0,f,c
  2941   0008B6  C03D  F038         	movff	___flmul@grs,??___flmul
  2942   0008BA  C03E  F039         	movff	___flmul@grs+1,??___flmul+1
  2943   0008BE  C03F  F03A         	movff	___flmul@grs+2,??___flmul+2
  2944   0008C2  C040  F03B         	movff	___flmul@grs+3,??___flmul+3
  2945   0008C6  0E19               	movlw	25
  2946   0008C8  EF6B  F004         	goto	u2490
  2947   0008CC                     u2495:
  2948   0008CC  90D8               	bcf	status,0,c
  2949   0008CE  323B               	rrcf	(??___flmul+3)^0,f,c
  2950   0008D0  323A               	rrcf	(??___flmul+2)^0,f,c
  2951   0008D2  3239               	rrcf	(??___flmul+1)^0,f,c
  2952   0008D4  3238               	rrcf	??___flmul^0,f,c
  2953   0008D6                     u2490:
  2954   0008D6  2EE8               	decfsz	wreg,f,c
  2955   0008D8  EF66  F004         	goto	u2495
  2956   0008DC  5038               	movf	??___flmul^0,w,c
  2957   0008DE  2643               	addwf	___flmul@prod^0,f,c
  2958   0008E0  5039               	movf	(??___flmul+1)^0,w,c
  2959   0008E2  2244               	addwfc	(___flmul@prod+1)^0,f,c
  2960   0008E4  503A               	movf	(??___flmul+2)^0,w,c
  2961   0008E6  2245               	addwfc	(___flmul@prod+2)^0,f,c
  2962   0008E8  503B               	movf	(??___flmul+3)^0,w,c
  2963   0008EA  2246               	addwfc	(___flmul@prod+3)^0,f,c
  2964   0008EC  C03F  F040         	movff	___flmul@grs+2,___flmul@grs+3
  2965   0008F0  C03E  F03F         	movff	___flmul@grs+1,___flmul@grs+2
  2966   0008F4  C03D  F03E         	movff	___flmul@grs,___flmul@grs+1
  2967   0008F8  6A3D               	clrf	___flmul@grs^0,c
  2968   0008FA  5041               	movf	___flmul@aexp^0,w,c
  2969   0008FC  C042  F038         	movff	___flmul@bexp,??___flmul
  2970   000900  6A39               	clrf	(??___flmul+1)^0,c
  2971   000902  2638               	addwf	??___flmul^0,f,c
  2972   000904  0E00               	movlw	0
  2973   000906  2239               	addwfc	(??___flmul+1)^0,f,c
  2974   000908  0E82               	movlw	130
  2975   00090A  2438               	addwf	??___flmul^0,w,c
  2976   00090C  6E47               	movwf	___flmul@temp^0,c
  2977   00090E  0EFF               	movlw	255
  2978   000910  2039               	addwfc	(??___flmul+1)^0,w,c
  2979   000912  6E48               	movwf	(___flmul@temp+1)^0,c
  2980   000914  EFA1  F004         	goto	l3122
  2981   000918                     l3116:
  2982   000918  90D8               	bcf	status,0,c
  2983   00091A  3643               	rlcf	___flmul@prod^0,f,c
  2984   00091C  3644               	rlcf	(___flmul@prod+1)^0,f,c
  2985   00091E  3645               	rlcf	(___flmul@prod+2)^0,f,c
  2986   000920  3646               	rlcf	(___flmul@prod+3)^0,f,c
  2987   000922  AE40               	btfss	(___flmul@grs+3)^0,7,c
  2988   000924  EF96  F004         	goto	u2501
  2989   000928  EF98  F004         	goto	u2500
  2990   00092C                     u2501:
  2991   00092C  EF99  F004         	goto	l1228
  2992   000930                     u2500:
  2993   000930  8043               	bsf	___flmul@prod^0,0,c
  2994   000932                     l1228:
  2995   000932  90D8               	bcf	status,0,c
  2996   000934  363D               	rlcf	___flmul@grs^0,f,c
  2997   000936  363E               	rlcf	(___flmul@grs+1)^0,f,c
  2998   000938  363F               	rlcf	(___flmul@grs+2)^0,f,c
  2999   00093A  3640               	rlcf	(___flmul@grs+3)^0,f,c
  3000   00093C  0647               	decf	___flmul@temp^0,f,c
  3001   00093E  A0D8               	btfss	status,0,c
  3002   000940  0648               	decf	(___flmul@temp+1)^0,f,c
  3003   000942                     l3122:
  3004   000942  AE45               	btfss	(___flmul@prod+2)^0,7,c
  3005   000944  EFA6  F004         	goto	u2511
  3006   000948  EFA8  F004         	goto	u2510
  3007   00094C                     u2511:
  3008   00094C  EF8C  F004         	goto	l3116
  3009   000950                     u2510:
  3010   000950  0E00               	movlw	0
  3011   000952  6E41               	movwf	___flmul@aexp^0,c
  3012   000954  AE40               	btfss	(___flmul@grs+3)^0,7,c
  3013   000956  EFAF  F004         	goto	u2521
  3014   00095A  EFB1  F004         	goto	u2520
  3015   00095E                     u2521:
  3016   00095E  EFD5  F004         	goto	l1230
  3017   000962                     u2520:
  3018   000962  0EFF               	movlw	255
  3019   000964  143D               	andwf	___flmul@grs^0,w,c
  3020   000966  6E38               	movwf	??___flmul^0,c
  3021   000968  0EFF               	movlw	255
  3022   00096A  143E               	andwf	(___flmul@grs+1)^0,w,c
  3023   00096C  6E39               	movwf	(??___flmul+1)^0,c
  3024   00096E  0EFF               	movlw	255
  3025   000970  143F               	andwf	(___flmul@grs+2)^0,w,c
  3026   000972  6E3A               	movwf	(??___flmul+2)^0,c
  3027   000974  0E7F               	movlw	127
  3028   000976  1440               	andwf	(___flmul@grs+3)^0,w,c
  3029   000978  6E3B               	movwf	(??___flmul+3)^0,c
  3030   00097A  5038               	movf	??___flmul^0,w,c
  3031   00097C  1039               	iorwf	(??___flmul+1)^0,w,c
  3032   00097E  103A               	iorwf	(??___flmul+2)^0,w,c
  3033   000980  103B               	iorwf	(??___flmul+3)^0,w,c
  3034   000982  B4D8               	btfsc	status,2,c
  3035   000984  EFC6  F004         	goto	u2531
  3036   000988  EFC8  F004         	goto	u2530
  3037   00098C                     u2531:
  3038   00098C  EFCC  F004         	goto	l1231
  3039   000990                     u2530:
  3040   000990                     l3130:
  3041   000990  0E01               	movlw	1
  3042   000992  6E41               	movwf	___flmul@aexp^0,c
  3043   000994  EFD5  F004         	goto	l1230
  3044   000998                     l1231:
  3045   000998  A043               	btfss	___flmul@prod^0,0,c
  3046   00099A  EFD1  F004         	goto	u2541
  3047   00099E  EFD3  F004         	goto	u2540
  3048   0009A2                     u2541:
  3049   0009A2  EFD5  F004         	goto	l1230
  3050   0009A6                     u2540:
  3051   0009A6  EFC8  F004         	goto	l3130
  3052   0009AA                     l1230:
  3053   0009AA  5041               	movf	___flmul@aexp^0,w,c
  3054   0009AC  B4D8               	btfsc	status,2,c
  3055   0009AE  EFDB  F004         	goto	u2551
  3056   0009B2  EFDD  F004         	goto	u2550
  3057   0009B6                     u2551:
  3058   0009B6  EF01  F005         	goto	l3142
  3059   0009BA                     u2550:
  3060   0009BA  0E01               	movlw	1
  3061   0009BC  2643               	addwf	___flmul@prod^0,f,c
  3062   0009BE  0E00               	movlw	0
  3063   0009C0  2244               	addwfc	(___flmul@prod+1)^0,f,c
  3064   0009C2  2245               	addwfc	(___flmul@prod+2)^0,f,c
  3065   0009C4  2246               	addwfc	(___flmul@prod+3)^0,f,c
  3066   0009C6  A046               	btfss	(___flmul@prod+3)^0,0,c
  3067   0009C8  EFE8  F004         	goto	u2561
  3068   0009CC  EFEA  F004         	goto	u2560
  3069   0009D0                     u2561:
  3070   0009D0  EF01  F005         	goto	l3142
  3071   0009D4                     u2560:
  3072   0009D4  C043  F038         	movff	___flmul@prod,??___flmul
  3073   0009D8  C044  F039         	movff	___flmul@prod+1,??___flmul+1
  3074   0009DC  C045  F03A         	movff	___flmul@prod+2,??___flmul+2
  3075   0009E0  C046  F03B         	movff	___flmul@prod+3,??___flmul+3
  3076   0009E4  343B               	rlcf	(??___flmul+3)^0,w,c
  3077   0009E6  323B               	rrcf	(??___flmul+3)^0,f,c
  3078   0009E8  323A               	rrcf	(??___flmul+2)^0,f,c
  3079   0009EA  3239               	rrcf	(??___flmul+1)^0,f,c
  3080   0009EC  3238               	rrcf	??___flmul^0,f,c
  3081   0009EE  C038  F043         	movff	??___flmul,___flmul@prod
  3082   0009F2  C039  F044         	movff	??___flmul+1,___flmul@prod+1
  3083   0009F6  C03A  F045         	movff	??___flmul+2,___flmul@prod+2
  3084   0009FA  C03B  F046         	movff	??___flmul+3,___flmul@prod+3
  3085   0009FE  4A47               	infsnz	___flmul@temp^0,f,c
  3086   000A00  2A48               	incf	(___flmul@temp+1)^0,f,c
  3087   000A02                     l3142:
  3088   000A02  BE48               	btfsc	(___flmul@temp+1)^0,7,c
  3089   000A04  EF0C  F005         	goto	u2571
  3090   000A08  5048               	movf	(___flmul@temp+1)^0,w,c
  3091   000A0A  E108               	bnz	u2570
  3092   000A0C  2847               	incf	___flmul@temp^0,w,c
  3093   000A0E  A0D8               	btfss	status,0,c
  3094   000A10  EF0C  F005         	goto	u2571
  3095   000A14  EF0E  F005         	goto	u2570
  3096   000A18                     u2571:
  3097   000A18  EF18  F005         	goto	l3146
  3098   000A1C                     u2570:
  3099   000A1C  0E00               	movlw	0
  3100   000A1E  6E43               	movwf	___flmul@prod^0,c
  3101   000A20  0E00               	movlw	0
  3102   000A22  6E44               	movwf	(___flmul@prod+1)^0,c
  3103   000A24  0E80               	movlw	128
  3104   000A26  6E45               	movwf	(___flmul@prod+2)^0,c
  3105   000A28  0E7F               	movlw	127
  3106   000A2A  6E46               	movwf	(___flmul@prod+3)^0,c
  3107   000A2C  EF46  F005         	goto	l3158
  3108   000A30                     l3146:
  3109   000A30  BE48               	btfsc	(___flmul@temp+1)^0,7,c
  3110   000A32  EF25  F005         	goto	u2580
  3111   000A36  5048               	movf	(___flmul@temp+1)^0,w,c
  3112   000A38  E106               	bnz	u2581
  3113   000A3A  0447               	decf	___flmul@temp^0,w,c
  3114   000A3C  B0D8               	btfsc	status,0,c
  3115   000A3E  EF23  F005         	goto	u2581
  3116   000A42  EF25  F005         	goto	u2580
  3117   000A46                     u2581:
  3118   000A46  EF31  F005         	goto	l1238
  3119   000A4A                     u2580:
  3120   000A4A  0E00               	movlw	0
  3121   000A4C  6E43               	movwf	___flmul@prod^0,c
  3122   000A4E  0E00               	movlw	0
  3123   000A50  6E44               	movwf	(___flmul@prod+1)^0,c
  3124   000A52  0E00               	movlw	0
  3125   000A54  6E45               	movwf	(___flmul@prod+2)^0,c
  3126   000A56  0E00               	movlw	0
  3127   000A58  6E46               	movwf	(___flmul@prod+3)^0,c
  3128   000A5A  0E00               	movlw	0
  3129   000A5C  6E3C               	movwf	___flmul@sign^0,c
  3130   000A5E  EF46  F005         	goto	l3158
  3131   000A62                     l1238:
  3132   000A62  C047  F042         	movff	___flmul@temp,___flmul@bexp
  3133   000A66  0EFF               	movlw	255
  3134   000A68  1643               	andwf	___flmul@prod^0,f,c
  3135   000A6A  0EFF               	movlw	255
  3136   000A6C  1644               	andwf	(___flmul@prod+1)^0,f,c
  3137   000A6E  0E7F               	movlw	127
  3138   000A70  1645               	andwf	(___flmul@prod+2)^0,f,c
  3139   000A72  0E00               	movlw	0
  3140   000A74  1646               	andwf	(___flmul@prod+3)^0,f,c
  3141   000A76  A042               	btfss	___flmul@bexp^0,0,c
  3142   000A78  EF40  F005         	goto	u2591
  3143   000A7C  EF42  F005         	goto	u2590
  3144   000A80                     u2591:
  3145   000A80  EF43  F005         	goto	l3156
  3146   000A84                     u2590:
  3147   000A84  8E45               	bsf	(___flmul@prod+2)^0,7,c
  3148   000A86                     l3156:
  3149   000A86  90D8               	bcf	status,0,c
  3150   000A88  3042               	rrcf	___flmul@bexp^0,w,c
  3151   000A8A  6E46               	movwf	(___flmul@prod+3)^0,c
  3152   000A8C                     l3158:
  3153   000A8C  503C               	movf	___flmul@sign^0,w,c
  3154   000A8E  1246               	iorwf	(___flmul@prod+3)^0,f,c
  3155   000A90  C043  F030         	movff	___flmul@prod,?___flmul
  3156   000A94  C044  F031         	movff	___flmul@prod+1,?___flmul+1
  3157   000A98  C045  F032         	movff	___flmul@prod+2,?___flmul+2
  3158   000A9C  C046  F033         	movff	___flmul@prod+3,?___flmul+3
  3159   000AA0                     l1225:
  3160   000AA0  0012               	return		;funcret
  3161   000AA2                     __end_of___flmul:
  3162                           	callstack 0
  3163                           
  3164 ;; *************** function ___fldiv *****************
  3165 ;; Defined at:
  3166 ;;		line 11 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\sprcdiv.c"
  3167 ;; Parameters:    Size  Location     Type
  3168 ;;  b               4   22[COMRAM] unsigned char 
  3169 ;;  a               4   26[COMRAM] unsigned char 
  3170 ;; Auto vars:     Size  Location     Type
  3171 ;;  grs             4   41[COMRAM] unsigned long 
  3172 ;;  rem             4   34[COMRAM] unsigned long 
  3173 ;;  new_exp         2   39[COMRAM] short 
  3174 ;;  aexp            1   46[COMRAM] unsigned char 
  3175 ;;  bexp            1   45[COMRAM] unsigned char 
  3176 ;;  sign            1   38[COMRAM] unsigned char 
  3177 ;; Return value:  Size  Location     Type
  3178 ;;                  4   22[COMRAM] unsigned char 
  3179 ;; Registers used:
  3180 ;;		wreg, status,2, status,0
  3181 ;; Tracked objects:
  3182 ;;		On entry : 0/0
  3183 ;;		On exit  : 0/0
  3184 ;;		Unchanged: 0/0
  3185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3186 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3187 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3188 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3189 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3190 ;;Total ram usage:       25 bytes
  3191 ;; Hardware stack levels used: 1
  3192 ;; Hardware stack levels required when called: 7
  3193 ;; This function calls:
  3194 ;;		Nothing
  3195 ;; This function is called by:
  3196 ;;		_detect_color
  3197 ;; This function uses a non-reentrant model
  3198 ;;
  3199                           
  3200                           	psect	text7
  3201   000AA2                     __ptext7:
  3202                           	callstack 0
  3203   000AA2                     ___fldiv:
  3204                           	callstack 22
  3205   000AA2  501A               	movf	(___fldiv@b+3)^0,w,c
  3206   000AA4  0B80               	andlw	128
  3207   000AA6  6E27               	movwf	___fldiv@sign^0,c
  3208   000AA8  501A               	movf	(___fldiv@b+3)^0,w,c
  3209   000AAA  241A               	addwf	(___fldiv@b+3)^0,w,c
  3210   000AAC  6E2E               	movwf	___fldiv@bexp^0,c
  3211   000AAE  AE19               	btfss	(___fldiv@b+2)^0,7,c
  3212   000AB0  EF5C  F005         	goto	u2181
  3213   000AB4  EF5E  F005         	goto	u2180
  3214   000AB8                     u2181:
  3215   000AB8  EF5F  F005         	goto	l2902
  3216   000ABC                     u2180:
  3217   000ABC  802E               	bsf	___fldiv@bexp^0,0,c
  3218   000ABE                     l2902:
  3219   000ABE  502E               	movf	___fldiv@bexp^0,w,c
  3220   000AC0  B4D8               	btfsc	status,2,c
  3221   000AC2  EF65  F005         	goto	u2191
  3222   000AC6  EF67  F005         	goto	u2190
  3223   000ACA                     u2191:
  3224   000ACA  EF7C  F005         	goto	l2912
  3225   000ACE                     u2190:
  3226   000ACE  282E               	incf	___fldiv@bexp^0,w,c
  3227   000AD0  A4D8               	btfss	status,2,c
  3228   000AD2  EF6D  F005         	goto	u2201
  3229   000AD6  EF6F  F005         	goto	u2200
  3230   000ADA                     u2201:
  3231   000ADA  EF77  F005         	goto	l2908
  3232   000ADE                     u2200:
  3233   000ADE  0E00               	movlw	0
  3234   000AE0  6E17               	movwf	___fldiv@b^0,c
  3235   000AE2  0E00               	movlw	0
  3236   000AE4  6E18               	movwf	(___fldiv@b+1)^0,c
  3237   000AE6  0E00               	movlw	0
  3238   000AE8  6E19               	movwf	(___fldiv@b+2)^0,c
  3239   000AEA  0E00               	movlw	0
  3240   000AEC  6E1A               	movwf	(___fldiv@b+3)^0,c
  3241   000AEE                     l2908:
  3242   000AEE  8E19               	bsf	(___fldiv@b+2)^0,7,c
  3243   000AF0  0E00               	movlw	0
  3244   000AF2  6E1A               	movwf	(___fldiv@b+3)^0,c
  3245   000AF4  EF84  F005         	goto	l2914
  3246   000AF8                     l2912:
  3247   000AF8  0E00               	movlw	0
  3248   000AFA  6E17               	movwf	___fldiv@b^0,c
  3249   000AFC  0E00               	movlw	0
  3250   000AFE  6E18               	movwf	(___fldiv@b+1)^0,c
  3251   000B00  0E00               	movlw	0
  3252   000B02  6E19               	movwf	(___fldiv@b+2)^0,c
  3253   000B04  0E00               	movlw	0
  3254   000B06  6E1A               	movwf	(___fldiv@b+3)^0,c
  3255   000B08                     l2914:
  3256   000B08  501E               	movf	(___fldiv@a+3)^0,w,c
  3257   000B0A  0B80               	andlw	128
  3258   000B0C  1A27               	xorwf	___fldiv@sign^0,f,c
  3259   000B0E  501E               	movf	(___fldiv@a+3)^0,w,c
  3260   000B10  241E               	addwf	(___fldiv@a+3)^0,w,c
  3261   000B12  6E2F               	movwf	___fldiv@aexp^0,c
  3262   000B14  AE1D               	btfss	(___fldiv@a+2)^0,7,c
  3263   000B16  EF8F  F005         	goto	u2211
  3264   000B1A  EF91  F005         	goto	u2210
  3265   000B1E                     u2211:
  3266   000B1E  EF92  F005         	goto	l2922
  3267   000B22                     u2210:
  3268   000B22  802F               	bsf	___fldiv@aexp^0,0,c
  3269   000B24                     l2922:
  3270   000B24  502F               	movf	___fldiv@aexp^0,w,c
  3271   000B26  B4D8               	btfsc	status,2,c
  3272   000B28  EF98  F005         	goto	u2221
  3273   000B2C  EF9A  F005         	goto	u2220
  3274   000B30                     u2221:
  3275   000B30  EFAF  F005         	goto	l2932
  3276   000B34                     u2220:
  3277   000B34  282F               	incf	___fldiv@aexp^0,w,c
  3278   000B36  A4D8               	btfss	status,2,c
  3279   000B38  EFA0  F005         	goto	u2231
  3280   000B3C  EFA2  F005         	goto	u2230
  3281   000B40                     u2231:
  3282   000B40  EFAA  F005         	goto	l2928
  3283   000B44                     u2230:
  3284   000B44  0E00               	movlw	0
  3285   000B46  6E1B               	movwf	___fldiv@a^0,c
  3286   000B48  0E00               	movlw	0
  3287   000B4A  6E1C               	movwf	(___fldiv@a+1)^0,c
  3288   000B4C  0E00               	movlw	0
  3289   000B4E  6E1D               	movwf	(___fldiv@a+2)^0,c
  3290   000B50  0E00               	movlw	0
  3291   000B52  6E1E               	movwf	(___fldiv@a+3)^0,c
  3292   000B54                     l2928:
  3293   000B54  8E1D               	bsf	(___fldiv@a+2)^0,7,c
  3294   000B56  0E00               	movlw	0
  3295   000B58  6E1E               	movwf	(___fldiv@a+3)^0,c
  3296   000B5A  EFB7  F005         	goto	l2934
  3297   000B5E                     l2932:
  3298   000B5E  0E00               	movlw	0
  3299   000B60  6E1B               	movwf	___fldiv@a^0,c
  3300   000B62  0E00               	movlw	0
  3301   000B64  6E1C               	movwf	(___fldiv@a+1)^0,c
  3302   000B66  0E00               	movlw	0
  3303   000B68  6E1D               	movwf	(___fldiv@a+2)^0,c
  3304   000B6A  0E00               	movlw	0
  3305   000B6C  6E1E               	movwf	(___fldiv@a+3)^0,c
  3306   000B6E                     l2934:
  3307   000B6E  501B               	movf	___fldiv@a^0,w,c
  3308   000B70  101C               	iorwf	(___fldiv@a+1)^0,w,c
  3309   000B72  101D               	iorwf	(___fldiv@a+2)^0,w,c
  3310   000B74  101E               	iorwf	(___fldiv@a+3)^0,w,c
  3311   000B76  A4D8               	btfss	status,2,c
  3312   000B78  EFC0  F005         	goto	u2241
  3313   000B7C  EFC2  F005         	goto	u2240
  3314   000B80                     u2241:
  3315   000B80  EFDA  F005         	goto	l2946
  3316   000B84                     u2240:
  3317   000B84  0E00               	movlw	0
  3318   000B86  6E17               	movwf	___fldiv@b^0,c
  3319   000B88  0E00               	movlw	0
  3320   000B8A  6E18               	movwf	(___fldiv@b+1)^0,c
  3321   000B8C  0E00               	movlw	0
  3322   000B8E  6E19               	movwf	(___fldiv@b+2)^0,c
  3323   000B90  0E00               	movlw	0
  3324   000B92  6E1A               	movwf	(___fldiv@b+3)^0,c
  3325   000B94  0E80               	movlw	128
  3326   000B96  1219               	iorwf	(___fldiv@b+2)^0,f,c
  3327   000B98  0E7F               	movlw	127
  3328   000B9A  121A               	iorwf	(___fldiv@b+3)^0,f,c
  3329   000B9C                     l2940:
  3330   000B9C  5027               	movf	___fldiv@sign^0,w,c
  3331   000B9E  121A               	iorwf	(___fldiv@b+3)^0,f,c
  3332   000BA0  C017  F017         	movff	___fldiv@b,?___fldiv
  3333   000BA4  C018  F018         	movff	___fldiv@b+1,?___fldiv+1
  3334   000BA8  C019  F019         	movff	___fldiv@b+2,?___fldiv+2
  3335   000BAC  C01A  F01A         	movff	___fldiv@b+3,?___fldiv+3
  3336   000BB0  EF1D  F007         	goto	l1189
  3337   000BB4                     l2946:
  3338   000BB4  502E               	movf	___fldiv@bexp^0,w,c
  3339   000BB6  A4D8               	btfss	status,2,c
  3340   000BB8  EFE0  F005         	goto	u2251
  3341   000BBC  EFE2  F005         	goto	u2250
  3342   000BC0                     u2251:
  3343   000BC0  EFEC  F005         	goto	l2954
  3344   000BC4                     u2250:
  3345   000BC4  0E00               	movlw	0
  3346   000BC6  6E17               	movwf	?___fldiv^0,c
  3347   000BC8  0E00               	movlw	0
  3348   000BCA  6E18               	movwf	(?___fldiv+1)^0,c
  3349   000BCC  0E00               	movlw	0
  3350   000BCE  6E19               	movwf	(?___fldiv+2)^0,c
  3351   000BD0  0E00               	movlw	0
  3352   000BD2  6E1A               	movwf	(?___fldiv+3)^0,c
  3353   000BD4  EF1D  F007         	goto	l1189
  3354   000BD8                     l2954:
  3355   000BD8  502F               	movf	___fldiv@aexp^0,w,c
  3356   000BDA  C02E  F01F         	movff	___fldiv@bexp,??___fldiv
  3357   000BDE  6A20               	clrf	(??___fldiv+1)^0,c
  3358   000BE0  5E1F               	subwf	??___fldiv^0,f,c
  3359   000BE2  0E00               	movlw	0
  3360   000BE4  5A20               	subwfb	(??___fldiv+1)^0,f,c
  3361   000BE6  0E7F               	movlw	127
  3362   000BE8  241F               	addwf	??___fldiv^0,w,c
  3363   000BEA  6E28               	movwf	___fldiv@new_exp^0,c
  3364   000BEC  0E00               	movlw	0
  3365   000BEE  2020               	addwfc	(??___fldiv+1)^0,w,c
  3366   000BF0  6E29               	movwf	(___fldiv@new_exp+1)^0,c
  3367   000BF2  C017  F023         	movff	___fldiv@b,___fldiv@rem
  3368   000BF6  C018  F024         	movff	___fldiv@b+1,___fldiv@rem+1
  3369   000BFA  C019  F025         	movff	___fldiv@b+2,___fldiv@rem+2
  3370   000BFE  C01A  F026         	movff	___fldiv@b+3,___fldiv@rem+3
  3371   000C02  0E00               	movlw	0
  3372   000C04  6E17               	movwf	___fldiv@b^0,c
  3373   000C06  0E00               	movlw	0
  3374   000C08  6E18               	movwf	(___fldiv@b+1)^0,c
  3375   000C0A  0E00               	movlw	0
  3376   000C0C  6E19               	movwf	(___fldiv@b+2)^0,c
  3377   000C0E  0E00               	movlw	0
  3378   000C10  6E1A               	movwf	(___fldiv@b+3)^0,c
  3379   000C12  0E00               	movlw	0
  3380   000C14  6E2A               	movwf	___fldiv@grs^0,c
  3381   000C16  0E00               	movlw	0
  3382   000C18  6E2B               	movwf	(___fldiv@grs+1)^0,c
  3383   000C1A  0E00               	movlw	0
  3384   000C1C  6E2C               	movwf	(___fldiv@grs+2)^0,c
  3385   000C1E  0E00               	movlw	0
  3386   000C20  6E2D               	movwf	(___fldiv@grs+3)^0,c
  3387   000C22  0E00               	movlw	0
  3388   000C24  6E2F               	movwf	___fldiv@aexp^0,c
  3389   000C26  EF4D  F006         	goto	l1191
  3390   000C2A                     l2964:
  3391   000C2A  502F               	movf	___fldiv@aexp^0,w,c
  3392   000C2C  B4D8               	btfsc	status,2,c
  3393   000C2E  EF1B  F006         	goto	u2261
  3394   000C32  EF1D  F006         	goto	u2260
  3395   000C36                     u2261:
  3396   000C36  EF34  F006         	goto	l2972
  3397   000C3A                     u2260:
  3398   000C3A  90D8               	bcf	status,0,c
  3399   000C3C  3623               	rlcf	___fldiv@rem^0,f,c
  3400   000C3E  3624               	rlcf	(___fldiv@rem+1)^0,f,c
  3401   000C40  3625               	rlcf	(___fldiv@rem+2)^0,f,c
  3402   000C42  3626               	rlcf	(___fldiv@rem+3)^0,f,c
  3403   000C44  90D8               	bcf	status,0,c
  3404   000C46  3617               	rlcf	___fldiv@b^0,f,c
  3405   000C48  3618               	rlcf	(___fldiv@b+1)^0,f,c
  3406   000C4A  3619               	rlcf	(___fldiv@b+2)^0,f,c
  3407   000C4C  361A               	rlcf	(___fldiv@b+3)^0,f,c
  3408   000C4E  AE2D               	btfss	(___fldiv@grs+3)^0,7,c
  3409   000C50  EF2C  F006         	goto	u2271
  3410   000C54  EF2E  F006         	goto	u2270
  3411   000C58                     u2271:
  3412   000C58  EF2F  F006         	goto	l1194
  3413   000C5C                     u2270:
  3414   000C5C  8017               	bsf	___fldiv@b^0,0,c
  3415   000C5E                     l1194:
  3416   000C5E  90D8               	bcf	status,0,c
  3417   000C60  362A               	rlcf	___fldiv@grs^0,f,c
  3418   000C62  362B               	rlcf	(___fldiv@grs+1)^0,f,c
  3419   000C64  362C               	rlcf	(___fldiv@grs+2)^0,f,c
  3420   000C66  362D               	rlcf	(___fldiv@grs+3)^0,f,c
  3421   000C68                     l2972:
  3422   000C68  501B               	movf	___fldiv@a^0,w,c
  3423   000C6A  5C23               	subwf	___fldiv@rem^0,w,c
  3424   000C6C  501C               	movf	(___fldiv@a+1)^0,w,c
  3425   000C6E  5824               	subwfb	(___fldiv@rem+1)^0,w,c
  3426   000C70  501D               	movf	(___fldiv@a+2)^0,w,c
  3427   000C72  5825               	subwfb	(___fldiv@rem+2)^0,w,c
  3428   000C74  501E               	movf	(___fldiv@a+3)^0,w,c
  3429   000C76  5826               	subwfb	(___fldiv@rem+3)^0,w,c
  3430   000C78  A0D8               	btfss	status,0,c
  3431   000C7A  EF41  F006         	goto	u2281
  3432   000C7E  EF43  F006         	goto	u2280
  3433   000C82                     u2281:
  3434   000C82  EF4C  F006         	goto	l2978
  3435   000C86                     u2280:
  3436   000C86  8C2D               	bsf	(___fldiv@grs+3)^0,6,c
  3437   000C88  501B               	movf	___fldiv@a^0,w,c
  3438   000C8A  5E23               	subwf	___fldiv@rem^0,f,c
  3439   000C8C  501C               	movf	(___fldiv@a+1)^0,w,c
  3440   000C8E  5A24               	subwfb	(___fldiv@rem+1)^0,f,c
  3441   000C90  501D               	movf	(___fldiv@a+2)^0,w,c
  3442   000C92  5A25               	subwfb	(___fldiv@rem+2)^0,f,c
  3443   000C94  501E               	movf	(___fldiv@a+3)^0,w,c
  3444   000C96  5A26               	subwfb	(___fldiv@rem+3)^0,f,c
  3445   000C98                     l2978:
  3446   000C98  2A2F               	incf	___fldiv@aexp^0,f,c
  3447   000C9A                     l1191:
  3448   000C9A  0E19               	movlw	25
  3449   000C9C  642F               	cpfsgt	___fldiv@aexp^0,c
  3450   000C9E  EF53  F006         	goto	u2291
  3451   000CA2  EF55  F006         	goto	u2290
  3452   000CA6                     u2291:
  3453   000CA6  EF15  F006         	goto	l2964
  3454   000CAA                     u2290:
  3455   000CAA  5023               	movf	___fldiv@rem^0,w,c
  3456   000CAC  1024               	iorwf	(___fldiv@rem+1)^0,w,c
  3457   000CAE  1025               	iorwf	(___fldiv@rem+2)^0,w,c
  3458   000CB0  1026               	iorwf	(___fldiv@rem+3)^0,w,c
  3459   000CB2  B4D8               	btfsc	status,2,c
  3460   000CB4  EF5E  F006         	goto	u2301
  3461   000CB8  EF60  F006         	goto	u2300
  3462   000CBC                     u2301:
  3463   000CBC  EF78  F006         	goto	l2990
  3464   000CC0                     u2300:
  3465   000CC0  802A               	bsf	___fldiv@grs^0,0,c
  3466   000CC2  EF78  F006         	goto	l2990
  3467   000CC6                     l2984:
  3468   000CC6  90D8               	bcf	status,0,c
  3469   000CC8  3617               	rlcf	___fldiv@b^0,f,c
  3470   000CCA  3618               	rlcf	(___fldiv@b+1)^0,f,c
  3471   000CCC  3619               	rlcf	(___fldiv@b+2)^0,f,c
  3472   000CCE  361A               	rlcf	(___fldiv@b+3)^0,f,c
  3473   000CD0  AE2D               	btfss	(___fldiv@grs+3)^0,7,c
  3474   000CD2  EF6D  F006         	goto	u2311
  3475   000CD6  EF6F  F006         	goto	u2310
  3476   000CDA                     u2311:
  3477   000CDA  EF70  F006         	goto	l1200
  3478   000CDE                     u2310:
  3479   000CDE  8017               	bsf	___fldiv@b^0,0,c
  3480   000CE0                     l1200:
  3481   000CE0  90D8               	bcf	status,0,c
  3482   000CE2  362A               	rlcf	___fldiv@grs^0,f,c
  3483   000CE4  362B               	rlcf	(___fldiv@grs+1)^0,f,c
  3484   000CE6  362C               	rlcf	(___fldiv@grs+2)^0,f,c
  3485   000CE8  362D               	rlcf	(___fldiv@grs+3)^0,f,c
  3486   000CEA  0628               	decf	___fldiv@new_exp^0,f,c
  3487   000CEC  A0D8               	btfss	status,0,c
  3488   000CEE  0629               	decf	(___fldiv@new_exp+1)^0,f,c
  3489   000CF0                     l2990:
  3490   000CF0  AE19               	btfss	(___fldiv@b+2)^0,7,c
  3491   000CF2  EF7D  F006         	goto	u2321
  3492   000CF6  EF7F  F006         	goto	u2320
  3493   000CFA                     u2321:
  3494   000CFA  EF63  F006         	goto	l2984
  3495   000CFE                     u2320:
  3496   000CFE  0E00               	movlw	0
  3497   000D00  6E2F               	movwf	___fldiv@aexp^0,c
  3498   000D02  AE2D               	btfss	(___fldiv@grs+3)^0,7,c
  3499   000D04  EF86  F006         	goto	u2331
  3500   000D08  EF88  F006         	goto	u2330
  3501   000D0C                     u2331:
  3502   000D0C  EFAC  F006         	goto	l1202
  3503   000D10                     u2330:
  3504   000D10  0EFF               	movlw	255
  3505   000D12  142A               	andwf	___fldiv@grs^0,w,c
  3506   000D14  6E1F               	movwf	??___fldiv^0,c
  3507   000D16  0EFF               	movlw	255
  3508   000D18  142B               	andwf	(___fldiv@grs+1)^0,w,c
  3509   000D1A  6E20               	movwf	(??___fldiv+1)^0,c
  3510   000D1C  0EFF               	movlw	255
  3511   000D1E  142C               	andwf	(___fldiv@grs+2)^0,w,c
  3512   000D20  6E21               	movwf	(??___fldiv+2)^0,c
  3513   000D22  0E7F               	movlw	127
  3514   000D24  142D               	andwf	(___fldiv@grs+3)^0,w,c
  3515   000D26  6E22               	movwf	(??___fldiv+3)^0,c
  3516   000D28  501F               	movf	??___fldiv^0,w,c
  3517   000D2A  1020               	iorwf	(??___fldiv+1)^0,w,c
  3518   000D2C  1021               	iorwf	(??___fldiv+2)^0,w,c
  3519   000D2E  1022               	iorwf	(??___fldiv+3)^0,w,c
  3520   000D30  B4D8               	btfsc	status,2,c
  3521   000D32  EF9D  F006         	goto	u2341
  3522   000D36  EF9F  F006         	goto	u2340
  3523   000D3A                     u2341:
  3524   000D3A  EFA3  F006         	goto	l1203
  3525   000D3E                     u2340:
  3526   000D3E                     l2998:
  3527   000D3E  0E01               	movlw	1
  3528   000D40  6E2F               	movwf	___fldiv@aexp^0,c
  3529   000D42  EFAC  F006         	goto	l1202
  3530   000D46                     l1203:
  3531   000D46  A017               	btfss	___fldiv@b^0,0,c
  3532   000D48  EFA8  F006         	goto	u2351
  3533   000D4C  EFAA  F006         	goto	u2350
  3534   000D50                     u2351:
  3535   000D50  EFAC  F006         	goto	l1202
  3536   000D54                     u2350:
  3537   000D54  EF9F  F006         	goto	l2998
  3538   000D58                     l1202:
  3539   000D58  502F               	movf	___fldiv@aexp^0,w,c
  3540   000D5A  B4D8               	btfsc	status,2,c
  3541   000D5C  EFB2  F006         	goto	u2361
  3542   000D60  EFB4  F006         	goto	u2360
  3543   000D64                     u2361:
  3544   000D64  EFD8  F006         	goto	l3010
  3545   000D68                     u2360:
  3546   000D68  0E01               	movlw	1
  3547   000D6A  2617               	addwf	___fldiv@b^0,f,c
  3548   000D6C  0E00               	movlw	0
  3549   000D6E  2218               	addwfc	(___fldiv@b+1)^0,f,c
  3550   000D70  2219               	addwfc	(___fldiv@b+2)^0,f,c
  3551   000D72  221A               	addwfc	(___fldiv@b+3)^0,f,c
  3552   000D74  A01A               	btfss	(___fldiv@b+3)^0,0,c
  3553   000D76  EFBF  F006         	goto	u2371
  3554   000D7A  EFC1  F006         	goto	u2370
  3555   000D7E                     u2371:
  3556   000D7E  EFD8  F006         	goto	l3010
  3557   000D82                     u2370:
  3558   000D82  C017  F01F         	movff	___fldiv@b,??___fldiv
  3559   000D86  C018  F020         	movff	___fldiv@b+1,??___fldiv+1
  3560   000D8A  C019  F021         	movff	___fldiv@b+2,??___fldiv+2
  3561   000D8E  C01A  F022         	movff	___fldiv@b+3,??___fldiv+3
  3562   000D92  3422               	rlcf	(??___fldiv+3)^0,w,c
  3563   000D94  3222               	rrcf	(??___fldiv+3)^0,f,c
  3564   000D96  3221               	rrcf	(??___fldiv+2)^0,f,c
  3565   000D98  3220               	rrcf	(??___fldiv+1)^0,f,c
  3566   000D9A  321F               	rrcf	??___fldiv^0,f,c
  3567   000D9C  C01F  F017         	movff	??___fldiv,___fldiv@b
  3568   000DA0  C020  F018         	movff	??___fldiv+1,___fldiv@b+1
  3569   000DA4  C021  F019         	movff	??___fldiv+2,___fldiv@b+2
  3570   000DA8  C022  F01A         	movff	??___fldiv+3,___fldiv@b+3
  3571   000DAC  4A28               	infsnz	___fldiv@new_exp^0,f,c
  3572   000DAE  2A29               	incf	(___fldiv@new_exp+1)^0,f,c
  3573   000DB0                     l3010:
  3574   000DB0  BE29               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3575   000DB2  EFE3  F006         	goto	u2381
  3576   000DB6  5029               	movf	(___fldiv@new_exp+1)^0,w,c
  3577   000DB8  E108               	bnz	u2380
  3578   000DBA  2828               	incf	___fldiv@new_exp^0,w,c
  3579   000DBC  A0D8               	btfss	status,0,c
  3580   000DBE  EFE3  F006         	goto	u2381
  3581   000DC2  EFE5  F006         	goto	u2380
  3582   000DC6                     u2381:
  3583   000DC6  EFF0  F006         	goto	l3014
  3584   000DCA                     u2380:
  3585   000DCA  0E00               	movlw	0
  3586   000DCC  6E29               	movwf	(___fldiv@new_exp+1)^0,c
  3587   000DCE  6828               	setf	___fldiv@new_exp^0,c
  3588   000DD0  0E00               	movlw	0
  3589   000DD2  6E17               	movwf	___fldiv@b^0,c
  3590   000DD4  0E00               	movlw	0
  3591   000DD6  6E18               	movwf	(___fldiv@b+1)^0,c
  3592   000DD8  0E00               	movlw	0
  3593   000DDA  6E19               	movwf	(___fldiv@b+2)^0,c
  3594   000DDC  0E00               	movlw	0
  3595   000DDE  6E1A               	movwf	(___fldiv@b+3)^0,c
  3596   000DE0                     l3014:
  3597   000DE0  BE29               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3598   000DE2  EFFD  F006         	goto	u2390
  3599   000DE6  5029               	movf	(___fldiv@new_exp+1)^0,w,c
  3600   000DE8  E106               	bnz	u2391
  3601   000DEA  0428               	decf	___fldiv@new_exp^0,w,c
  3602   000DEC  B0D8               	btfsc	status,0,c
  3603   000DEE  EFFB  F006         	goto	u2391
  3604   000DF2  EFFD  F006         	goto	u2390
  3605   000DF6                     u2391:
  3606   000DF6  EF0B  F007         	goto	l3018
  3607   000DFA                     u2390:
  3608   000DFA  0E00               	movlw	0
  3609   000DFC  6E29               	movwf	(___fldiv@new_exp+1)^0,c
  3610   000DFE  0E00               	movlw	0
  3611   000E00  6E28               	movwf	___fldiv@new_exp^0,c
  3612   000E02  0E00               	movlw	0
  3613   000E04  6E17               	movwf	___fldiv@b^0,c
  3614   000E06  0E00               	movlw	0
  3615   000E08  6E18               	movwf	(___fldiv@b+1)^0,c
  3616   000E0A  0E00               	movlw	0
  3617   000E0C  6E19               	movwf	(___fldiv@b+2)^0,c
  3618   000E0E  0E00               	movlw	0
  3619   000E10  6E1A               	movwf	(___fldiv@b+3)^0,c
  3620   000E12  0E00               	movlw	0
  3621   000E14  6E27               	movwf	___fldiv@sign^0,c
  3622   000E16                     l3018:
  3623   000E16  C028  F02E         	movff	___fldiv@new_exp,___fldiv@bexp
  3624   000E1A  A02E               	btfss	___fldiv@bexp^0,0,c
  3625   000E1C  EF12  F007         	goto	u2401
  3626   000E20  EF14  F007         	goto	u2400
  3627   000E24                     u2401:
  3628   000E24  EF17  F007         	goto	l3024
  3629   000E28                     u2400:
  3630   000E28  8E19               	bsf	(___fldiv@b+2)^0,7,c
  3631   000E2A  EF18  F007         	goto	l3026
  3632   000E2E                     l3024:
  3633   000E2E  9E19               	bcf	(___fldiv@b+2)^0,7,c
  3634   000E30                     l3026:
  3635   000E30  90D8               	bcf	status,0,c
  3636   000E32  302E               	rrcf	___fldiv@bexp^0,w,c
  3637   000E34  6E1A               	movwf	(___fldiv@b+3)^0,c
  3638   000E36  EFCE  F005         	goto	l2940
  3639   000E3A                     l1189:
  3640   000E3A  0012               	return		;funcret
  3641   000E3C                     __end_of___fldiv:
  3642                           	callstack 0
  3643                           
  3644 ;; *************** function _color_click_init *****************
  3645 ;; Defined at:
  3646 ;;		line 6 in file "color.c"
  3647 ;; Parameters:    Size  Location     Type
  3648 ;;		None
  3649 ;; Auto vars:     Size  Location     Type
  3650 ;;		None
  3651 ;; Return value:  Size  Location     Type
  3652 ;;                  1    wreg      void 
  3653 ;; Registers used:
  3654 ;;		wreg, status,2, status,0, cstack
  3655 ;; Tracked objects:
  3656 ;;		On entry : 0/0
  3657 ;;		On exit  : 0/0
  3658 ;;		Unchanged: 0/0
  3659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3662 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3663 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3664 ;;Total ram usage:        1 bytes
  3665 ;; Hardware stack levels used: 1
  3666 ;; Hardware stack levels required when called: 10
  3667 ;; This function calls:
  3668 ;;		_I2C_2_Master_Init
  3669 ;;		_color_writetoaddr
  3670 ;; This function is called by:
  3671 ;;		_main
  3672 ;; This function uses a non-reentrant model
  3673 ;;
  3674                           
  3675                           	psect	text8
  3676   002252                     __ptext8:
  3677                           	callstack 0
  3678   002252                     _color_click_init:
  3679                           	callstack 20
  3680   002252                     
  3681                           ;color.c: 9:     I2C_2_Master_Init();
  3682   002252  EC43  F011         	call	_I2C_2_Master_Init	;wreg free
  3683   002256                     
  3684                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  3685   002256  0E01               	movlw	1
  3686   002258  6E0B               	movwf	color_writetoaddr@value^0,c
  3687   00225A  0E00               	movlw	0
  3688   00225C  ECC7  F011         	call	_color_writetoaddr
  3689   002260                     
  3690                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3691   002260  0E3F               	movlw	63
  3692   002262  6E0D               	movwf	??_color_click_init^0,c
  3693   002264  0E55               	movlw	85
  3694   002266                     u4087:
  3695   002266  2EE8               	decfsz	wreg,f,c
  3696   002268  D7FE               	bra	u4087
  3697   00226A  2E0D               	decfsz	??_color_click_init^0,f,c
  3698   00226C  D7FC               	bra	u4087
  3699   00226E  F000               	nop	
  3700   002270                     
  3701                           ;color.c: 16:  color_writetoaddr(0x00, 0x03);
  3702   002270  0E03               	movlw	3
  3703   002272  6E0B               	movwf	color_writetoaddr@value^0,c
  3704   002274  0E00               	movlw	0
  3705   002276  ECC7  F011         	call	_color_writetoaddr
  3706   00227A                     
  3707                           ;color.c: 19:  color_writetoaddr(0x01, 0xD5);
  3708   00227A  0ED5               	movlw	213
  3709   00227C  6E0B               	movwf	color_writetoaddr@value^0,c
  3710   00227E  0E01               	movlw	1
  3711   002280  ECC7  F011         	call	_color_writetoaddr
  3712   002284  0012               	return		;funcret
  3713   002286                     __end_of_color_click_init:
  3714                           	callstack 0
  3715                           
  3716 ;; *************** function _I2C_2_Master_Init *****************
  3717 ;; Defined at:
  3718 ;;		line 4 in file "i2c.c"
  3719 ;; Parameters:    Size  Location     Type
  3720 ;;		None
  3721 ;; Auto vars:     Size  Location     Type
  3722 ;;		None
  3723 ;; Return value:  Size  Location     Type
  3724 ;;                  1    wreg      void 
  3725 ;; Registers used:
  3726 ;;		wreg, status,2
  3727 ;; Tracked objects:
  3728 ;;		On entry : 0/0
  3729 ;;		On exit  : 0/0
  3730 ;;		Unchanged: 0/0
  3731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3736 ;;Total ram usage:        0 bytes
  3737 ;; Hardware stack levels used: 1
  3738 ;; Hardware stack levels required when called: 7
  3739 ;; This function calls:
  3740 ;;		Nothing
  3741 ;; This function is called by:
  3742 ;;		_color_click_init
  3743 ;; This function uses a non-reentrant model
  3744 ;;
  3745                           
  3746                           	psect	text9
  3747   002286                     __ptext9:
  3748                           	callstack 0
  3749   002286                     _I2C_2_Master_Init:
  3750                           	callstack 22
  3751   002286                     
  3752                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3753   002286  010E               	movlb	14	; () banked
  3754   002288  51D9               	movf	217,w,b	;volatile
  3755   00228A  0BF0               	andlw	-16
  3756   00228C  0908               	iorlw	8
  3757   00228E  6FD9               	movwf	217,b	;volatile
  3758   002290                     
  3759                           ; BSR set to: 14
  3760                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3761   002290  8BD9               	bsf	217,5,b	;volatile
  3762                           
  3763                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3764   002292  0E9F               	movlw	159
  3765   002294  6FD6               	movwf	214,b	;volatile
  3766   002296                     
  3767                           ; BSR set to: 14
  3768                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3769   002296  8A84               	bsf	132,5,c	;volatile
  3770   002298                     
  3771                           ; BSR set to: 14
  3772                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3773   002298  8C84               	bsf	132,6,c	;volatile
  3774   00229A                     
  3775                           ; BSR set to: 14
  3776                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3777   00229A  9BA7               	bcf	167,5,b	;volatile
  3778   00229C                     
  3779                           ; BSR set to: 14
  3780                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3781   00229C  9DA7               	bcf	167,6,b	;volatile
  3782                           
  3783                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3784   00229E  0E1D               	movlw	29
  3785   0022A0  6F1D               	movwf	29,b	;volatile
  3786                           
  3787                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3788   0022A2  0E1E               	movlw	30
  3789   0022A4  6F1C               	movwf	28,b	;volatile
  3790                           
  3791                           ;i2c.c: 18:   RD5PPS=0x1C;
  3792   0022A6  0E1C               	movlw	28
  3793   0022A8  6F6F               	movwf	111,b	;volatile
  3794                           
  3795                           ;i2c.c: 19:   RD6PPS=0x1B;
  3796   0022AA  0E1B               	movlw	27
  3797   0022AC  6F70               	movwf	112,b	;volatile
  3798   0022AE                     
  3799                           ; BSR set to: 14
  3800   0022AE  0012               	return		;funcret
  3801   0022B0                     __end_of_I2C_2_Master_Init:
  3802                           	callstack 0
  3803                           
  3804 ;; *************** function _WhiteLight *****************
  3805 ;; Defined at:
  3806 ;;		line 17 in file "LED_Buttons.c"
  3807 ;; Parameters:    Size  Location     Type
  3808 ;;		None
  3809 ;; Auto vars:     Size  Location     Type
  3810 ;;		None
  3811 ;; Return value:  Size  Location     Type
  3812 ;;                  1    wreg      void 
  3813 ;; Registers used:
  3814 ;;		None
  3815 ;; Tracked objects:
  3816 ;;		On entry : 0/0
  3817 ;;		On exit  : 0/0
  3818 ;;		Unchanged: 0/0
  3819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3824 ;;Total ram usage:        0 bytes
  3825 ;; Hardware stack levels used: 1
  3826 ;; Hardware stack levels required when called: 7
  3827 ;; This function calls:
  3828 ;;		Nothing
  3829 ;; This function is called by:
  3830 ;;		_main
  3831 ;; This function uses a non-reentrant model
  3832 ;;
  3833                           
  3834                           	psect	text10
  3835   002458                     __ptext10:
  3836                           	callstack 0
  3837   002458                     _WhiteLight:
  3838                           	callstack 23
  3839   002458                     
  3840                           ;LED_Buttons.c: 18:     LATGbits.LATG1 = 1;
  3841   002458  827F               	bsf	127,1,c	;volatile
  3842                           
  3843                           ;LED_Buttons.c: 19:     LATAbits.LATA4 = 1;
  3844   00245A  8879               	bsf	121,4,c	;volatile
  3845                           
  3846                           ;LED_Buttons.c: 20:     LATFbits.LATF7 = 1;
  3847   00245C  8E7E               	bsf	126,7,c	;volatile
  3848   00245E  0012               	return		;funcret
  3849   002460                     __end_of_WhiteLight:
  3850                           	callstack 0
  3851                           
  3852 ;; *************** function _Update_RGBC *****************
  3853 ;; Defined at:
  3854 ;;		line 90 in file "color.c"
  3855 ;; Parameters:    Size  Location     Type
  3856 ;;  tempval         2   19[COMRAM] PTR struct RGB_val
  3857 ;;		 -> main@initial_color(8), 
  3858 ;; Auto vars:     Size  Location     Type
  3859 ;;		None
  3860 ;; Return value:  Size  Location     Type
  3861 ;;                  1    wreg      void 
  3862 ;; Registers used:
  3863 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3864 ;; Tracked objects:
  3865 ;;		On entry : 0/0
  3866 ;;		On exit  : 0/0
  3867 ;;		Unchanged: 0/0
  3868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3869 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3872 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3873 ;;Total ram usage:        2 bytes
  3874 ;; Hardware stack levels used: 1
  3875 ;; Hardware stack levels required when called: 10
  3876 ;; This function calls:
  3877 ;;		_color_read_Blue
  3878 ;;		_color_read_Clear
  3879 ;;		_color_read_Green
  3880 ;;		_color_read_Red
  3881 ;; This function is called by:
  3882 ;;		_main
  3883 ;; This function uses a non-reentrant model
  3884 ;;
  3885                           
  3886                           	psect	text11
  3887   001E28                     __ptext11:
  3888                           	callstack 0
  3889   001E28                     _Update_RGBC:
  3890                           	callstack 20
  3891   001E28                     
  3892                           ;color.c: 92:     tempval->R = color_read_Red();
  3893   001E28  ECF7  F00F         	call	_color_read_Red	;wreg free
  3894   001E2C  C014  FFD9         	movff	Update_RGBC@tempval,fsr2l
  3895   001E30  C015  FFDA         	movff	Update_RGBC@tempval+1,fsr2h
  3896   001E34  C00D  FFDE         	movff	?_color_read_Red,postinc2
  3897   001E38  C00E  FFDD         	movff	?_color_read_Red+1,postdec2
  3898                           
  3899                           ;color.c: 93:     tempval->G = color_read_Green();
  3900   001E3C  EC1F  F010         	call	_color_read_Green	;wreg free
  3901   001E40  EE20 F002          	lfsr	2,2
  3902   001E44  5014               	movf	Update_RGBC@tempval^0,w,c
  3903   001E46  26D9               	addwf	fsr2l,f,c
  3904   001E48  5015               	movf	(Update_RGBC@tempval+1)^0,w,c
  3905   001E4A  22DA               	addwfc	fsr2h,f,c
  3906   001E4C  C00D  FFDE         	movff	?_color_read_Green,postinc2
  3907   001E50  C00E  FFDD         	movff	?_color_read_Green+1,postdec2
  3908                           
  3909                           ;color.c: 94:     tempval->B = color_read_Blue();
  3910   001E54  EC6F  F010         	call	_color_read_Blue	;wreg free
  3911   001E58  EE20 F004          	lfsr	2,4
  3912   001E5C  5014               	movf	Update_RGBC@tempval^0,w,c
  3913   001E5E  26D9               	addwf	fsr2l,f,c
  3914   001E60  5015               	movf	(Update_RGBC@tempval+1)^0,w,c
  3915   001E62  22DA               	addwfc	fsr2h,f,c
  3916   001E64  C00D  FFDE         	movff	?_color_read_Blue,postinc2
  3917   001E68  C00E  FFDD         	movff	?_color_read_Blue+1,postdec2
  3918                           
  3919                           ;color.c: 95:     tempval->C = color_read_Clear();
  3920   001E6C  EC47  F010         	call	_color_read_Clear	;wreg free
  3921   001E70  EE20 F006          	lfsr	2,6
  3922   001E74  5014               	movf	Update_RGBC@tempval^0,w,c
  3923   001E76  26D9               	addwf	fsr2l,f,c
  3924   001E78  5015               	movf	(Update_RGBC@tempval+1)^0,w,c
  3925   001E7A  22DA               	addwfc	fsr2h,f,c
  3926   001E7C  C00D  FFDE         	movff	?_color_read_Clear,postinc2
  3927   001E80  C00E  FFDD         	movff	?_color_read_Clear+1,postdec2
  3928   001E84  0012               	return		;funcret
  3929   001E86                     __end_of_Update_RGBC:
  3930                           	callstack 0
  3931                           
  3932 ;; *************** function _color_read_Red *****************
  3933 ;; Defined at:
  3934 ;;		line 32 in file "color.c"
  3935 ;; Parameters:    Size  Location     Type
  3936 ;;		None
  3937 ;; Auto vars:     Size  Location     Type
  3938 ;;  tmp             2   17[COMRAM] unsigned int 
  3939 ;; Return value:  Size  Location     Type
  3940 ;;                  2   12[COMRAM] unsigned int 
  3941 ;; Registers used:
  3942 ;;		wreg, status,2, status,0, cstack
  3943 ;; Tracked objects:
  3944 ;;		On entry : 0/0
  3945 ;;		On exit  : 0/0
  3946 ;;		Unchanged: 0/0
  3947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3948 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3949 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3950 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3951 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3952 ;;Total ram usage:        7 bytes
  3953 ;; Hardware stack levels used: 1
  3954 ;; Hardware stack levels required when called: 9
  3955 ;; This function calls:
  3956 ;;		_I2C_2_Master_Read
  3957 ;;		_I2C_2_Master_RepStart
  3958 ;;		_I2C_2_Master_Start
  3959 ;;		_I2C_2_Master_Stop
  3960 ;;		_I2C_2_Master_Write
  3961 ;; This function is called by:
  3962 ;;		_Update_RGBC
  3963 ;; This function uses a non-reentrant model
  3964 ;;
  3965                           
  3966                           	psect	text12
  3967   001FEE                     __ptext12:
  3968                           	callstack 0
  3969   001FEE                     _color_read_Red:
  3970                           	callstack 20
  3971   001FEE                     
  3972                           ;color.c: 34:  unsigned int tmp;;color.c: 35:  I2C_2_Master_Start();
  3973   001FEE  EC1D  F012         	call	_I2C_2_Master_Start	;wreg free
  3974                           
  3975                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x00);
  3976   001FF2  0E52               	movlw	82
  3977   001FF4  EC07  F012         	call	_I2C_2_Master_Write
  3978                           
  3979                           ;color.c: 37:  I2C_2_Master_Write(0xA0 | 0x16);
  3980   001FF8  0EB6               	movlw	182
  3981   001FFA  EC07  F012         	call	_I2C_2_Master_Write
  3982                           
  3983                           ;color.c: 38:  I2C_2_Master_RepStart();
  3984   001FFE  EC13  F012         	call	_I2C_2_Master_RepStart	;wreg free
  3985                           
  3986                           ;color.c: 39:  I2C_2_Master_Write(0x52 | 0x01);
  3987   002002  0E53               	movlw	83
  3988   002004  EC07  F012         	call	_I2C_2_Master_Write
  3989                           
  3990                           ;color.c: 40:  tmp=I2C_2_Master_Read(1);
  3991   002008  0E01               	movlw	1
  3992   00200A  EC08  F011         	call	_I2C_2_Master_Read
  3993   00200E  6E0F               	movwf	??_color_read_Red^0,c
  3994   002010  500F               	movf	??_color_read_Red^0,w,c
  3995   002012  6E12               	movwf	color_read_Red@tmp^0,c
  3996   002014  6A13               	clrf	(color_read_Red@tmp+1)^0,c
  3997                           
  3998                           ;color.c: 41:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3999   002016  0E00               	movlw	0
  4000   002018  EC08  F011         	call	_I2C_2_Master_Read
  4001   00201C  6E0F               	movwf	??_color_read_Red^0,c
  4002   00201E  500F               	movf	??_color_read_Red^0,w,c
  4003   002020  6E11               	movwf	(??_color_read_Red+2)^0,c
  4004   002022  6A10               	clrf	(??_color_read_Red+1)^0,c
  4005   002024  5012               	movf	color_read_Red@tmp^0,w,c
  4006   002026  1010               	iorwf	(??_color_read_Red+1)^0,w,c
  4007   002028  6E12               	movwf	color_read_Red@tmp^0,c
  4008   00202A  5013               	movf	(color_read_Red@tmp+1)^0,w,c
  4009   00202C  1011               	iorwf	(??_color_read_Red+2)^0,w,c
  4010   00202E  6E13               	movwf	(color_read_Red@tmp+1)^0,c
  4011                           
  4012                           ;color.c: 42:  I2C_2_Master_Stop();
  4013   002030  EC18  F012         	call	_I2C_2_Master_Stop	;wreg free
  4014   002034                     
  4015                           ;color.c: 43:  return tmp;
  4016   002034  C012  F00D         	movff	color_read_Red@tmp,?_color_read_Red
  4017   002038  C013  F00E         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  4018   00203C  0012               	return		;funcret
  4019   00203E                     __end_of_color_read_Red:
  4020                           	callstack 0
  4021                           
  4022 ;; *************** function _color_read_Green *****************
  4023 ;; Defined at:
  4024 ;;		line 46 in file "color.c"
  4025 ;; Parameters:    Size  Location     Type
  4026 ;;		None
  4027 ;; Auto vars:     Size  Location     Type
  4028 ;;  tmp             2   17[COMRAM] unsigned int 
  4029 ;; Return value:  Size  Location     Type
  4030 ;;                  2   12[COMRAM] unsigned int 
  4031 ;; Registers used:
  4032 ;;		wreg, status,2, status,0, cstack
  4033 ;; Tracked objects:
  4034 ;;		On entry : 0/0
  4035 ;;		On exit  : 0/0
  4036 ;;		Unchanged: 0/0
  4037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4038 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4039 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4040 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4041 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4042 ;;Total ram usage:        7 bytes
  4043 ;; Hardware stack levels used: 1
  4044 ;; Hardware stack levels required when called: 9
  4045 ;; This function calls:
  4046 ;;		_I2C_2_Master_Read
  4047 ;;		_I2C_2_Master_RepStart
  4048 ;;		_I2C_2_Master_Start
  4049 ;;		_I2C_2_Master_Stop
  4050 ;;		_I2C_2_Master_Write
  4051 ;; This function is called by:
  4052 ;;		_Update_RGBC
  4053 ;; This function uses a non-reentrant model
  4054 ;;
  4055                           
  4056                           	psect	text13
  4057   00203E                     __ptext13:
  4058                           	callstack 0
  4059   00203E                     _color_read_Green:
  4060                           	callstack 20
  4061   00203E                     
  4062                           ;color.c: 48:  unsigned int tmp;;color.c: 49:  I2C_2_Master_Start();
  4063   00203E  EC1D  F012         	call	_I2C_2_Master_Start	;wreg free
  4064                           
  4065                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x00);
  4066   002042  0E52               	movlw	82
  4067   002044  EC07  F012         	call	_I2C_2_Master_Write
  4068                           
  4069                           ;color.c: 51:  I2C_2_Master_Write(0xA0 | 0x18);
  4070   002048  0EB8               	movlw	184
  4071   00204A  EC07  F012         	call	_I2C_2_Master_Write
  4072                           
  4073                           ;color.c: 52:  I2C_2_Master_RepStart();
  4074   00204E  EC13  F012         	call	_I2C_2_Master_RepStart	;wreg free
  4075                           
  4076                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x01);
  4077   002052  0E53               	movlw	83
  4078   002054  EC07  F012         	call	_I2C_2_Master_Write
  4079                           
  4080                           ;color.c: 54:  tmp=I2C_2_Master_Read(1);
  4081   002058  0E01               	movlw	1
  4082   00205A  EC08  F011         	call	_I2C_2_Master_Read
  4083   00205E  6E0F               	movwf	??_color_read_Green^0,c
  4084   002060  500F               	movf	??_color_read_Green^0,w,c
  4085   002062  6E12               	movwf	color_read_Green@tmp^0,c
  4086   002064  6A13               	clrf	(color_read_Green@tmp+1)^0,c
  4087                           
  4088                           ;color.c: 55:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4089   002066  0E00               	movlw	0
  4090   002068  EC08  F011         	call	_I2C_2_Master_Read
  4091   00206C  6E0F               	movwf	??_color_read_Green^0,c
  4092   00206E  500F               	movf	??_color_read_Green^0,w,c
  4093   002070  6E11               	movwf	(??_color_read_Green+2)^0,c
  4094   002072  6A10               	clrf	(??_color_read_Green+1)^0,c
  4095   002074  5012               	movf	color_read_Green@tmp^0,w,c
  4096   002076  1010               	iorwf	(??_color_read_Green+1)^0,w,c
  4097   002078  6E12               	movwf	color_read_Green@tmp^0,c
  4098   00207A  5013               	movf	(color_read_Green@tmp+1)^0,w,c
  4099   00207C  1011               	iorwf	(??_color_read_Green+2)^0,w,c
  4100   00207E  6E13               	movwf	(color_read_Green@tmp+1)^0,c
  4101                           
  4102                           ;color.c: 56:  I2C_2_Master_Stop();
  4103   002080  EC18  F012         	call	_I2C_2_Master_Stop	;wreg free
  4104   002084                     
  4105                           ;color.c: 57:  return tmp;
  4106   002084  C012  F00D         	movff	color_read_Green@tmp,?_color_read_Green
  4107   002088  C013  F00E         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  4108   00208C  0012               	return		;funcret
  4109   00208E                     __end_of_color_read_Green:
  4110                           	callstack 0
  4111                           
  4112 ;; *************** function _color_read_Clear *****************
  4113 ;; Defined at:
  4114 ;;		line 74 in file "color.c"
  4115 ;; Parameters:    Size  Location     Type
  4116 ;;		None
  4117 ;; Auto vars:     Size  Location     Type
  4118 ;;  tmp             2   17[COMRAM] unsigned int 
  4119 ;; Return value:  Size  Location     Type
  4120 ;;                  2   12[COMRAM] unsigned int 
  4121 ;; Registers used:
  4122 ;;		wreg, status,2, status,0, cstack
  4123 ;; Tracked objects:
  4124 ;;		On entry : 0/0
  4125 ;;		On exit  : 0/0
  4126 ;;		Unchanged: 0/0
  4127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4128 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4129 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4130 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4131 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4132 ;;Total ram usage:        7 bytes
  4133 ;; Hardware stack levels used: 1
  4134 ;; Hardware stack levels required when called: 9
  4135 ;; This function calls:
  4136 ;;		_I2C_2_Master_Read
  4137 ;;		_I2C_2_Master_RepStart
  4138 ;;		_I2C_2_Master_Start
  4139 ;;		_I2C_2_Master_Stop
  4140 ;;		_I2C_2_Master_Write
  4141 ;; This function is called by:
  4142 ;;		_Update_RGBC
  4143 ;; This function uses a non-reentrant model
  4144 ;;
  4145                           
  4146                           	psect	text14
  4147   00208E                     __ptext14:
  4148                           	callstack 0
  4149   00208E                     _color_read_Clear:
  4150                           	callstack 20
  4151   00208E                     
  4152                           ;color.c: 76:  unsigned int tmp;;color.c: 77:  I2C_2_Master_Start();
  4153   00208E  EC1D  F012         	call	_I2C_2_Master_Start	;wreg free
  4154                           
  4155                           ;color.c: 78:  I2C_2_Master_Write(0x52 | 0x00);
  4156   002092  0E52               	movlw	82
  4157   002094  EC07  F012         	call	_I2C_2_Master_Write
  4158                           
  4159                           ;color.c: 79:  I2C_2_Master_Write(0xA0 | 0x14);
  4160   002098  0EB4               	movlw	180
  4161   00209A  EC07  F012         	call	_I2C_2_Master_Write
  4162                           
  4163                           ;color.c: 80:  I2C_2_Master_RepStart();
  4164   00209E  EC13  F012         	call	_I2C_2_Master_RepStart	;wreg free
  4165                           
  4166                           ;color.c: 81:  I2C_2_Master_Write(0x52 | 0x01);
  4167   0020A2  0E53               	movlw	83
  4168   0020A4  EC07  F012         	call	_I2C_2_Master_Write
  4169                           
  4170                           ;color.c: 82:  tmp=I2C_2_Master_Read(1);
  4171   0020A8  0E01               	movlw	1
  4172   0020AA  EC08  F011         	call	_I2C_2_Master_Read
  4173   0020AE  6E0F               	movwf	??_color_read_Clear^0,c
  4174   0020B0  500F               	movf	??_color_read_Clear^0,w,c
  4175   0020B2  6E12               	movwf	color_read_Clear@tmp^0,c
  4176   0020B4  6A13               	clrf	(color_read_Clear@tmp+1)^0,c
  4177                           
  4178                           ;color.c: 83:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4179   0020B6  0E00               	movlw	0
  4180   0020B8  EC08  F011         	call	_I2C_2_Master_Read
  4181   0020BC  6E0F               	movwf	??_color_read_Clear^0,c
  4182   0020BE  500F               	movf	??_color_read_Clear^0,w,c
  4183   0020C0  6E11               	movwf	(??_color_read_Clear+2)^0,c
  4184   0020C2  6A10               	clrf	(??_color_read_Clear+1)^0,c
  4185   0020C4  5012               	movf	color_read_Clear@tmp^0,w,c
  4186   0020C6  1010               	iorwf	(??_color_read_Clear+1)^0,w,c
  4187   0020C8  6E12               	movwf	color_read_Clear@tmp^0,c
  4188   0020CA  5013               	movf	(color_read_Clear@tmp+1)^0,w,c
  4189   0020CC  1011               	iorwf	(??_color_read_Clear+2)^0,w,c
  4190   0020CE  6E13               	movwf	(color_read_Clear@tmp+1)^0,c
  4191                           
  4192                           ;color.c: 84:  I2C_2_Master_Stop();
  4193   0020D0  EC18  F012         	call	_I2C_2_Master_Stop	;wreg free
  4194   0020D4                     
  4195                           ;color.c: 85:  return tmp;
  4196   0020D4  C012  F00D         	movff	color_read_Clear@tmp,?_color_read_Clear
  4197   0020D8  C013  F00E         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  4198   0020DC  0012               	return		;funcret
  4199   0020DE                     __end_of_color_read_Clear:
  4200                           	callstack 0
  4201                           
  4202 ;; *************** function _color_read_Blue *****************
  4203 ;; Defined at:
  4204 ;;		line 60 in file "color.c"
  4205 ;; Parameters:    Size  Location     Type
  4206 ;;		None
  4207 ;; Auto vars:     Size  Location     Type
  4208 ;;  tmp             2   17[COMRAM] unsigned int 
  4209 ;; Return value:  Size  Location     Type
  4210 ;;                  2   12[COMRAM] unsigned int 
  4211 ;; Registers used:
  4212 ;;		wreg, status,2, status,0, cstack
  4213 ;; Tracked objects:
  4214 ;;		On entry : 0/0
  4215 ;;		On exit  : 0/0
  4216 ;;		Unchanged: 0/0
  4217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4218 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4219 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4220 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4221 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4222 ;;Total ram usage:        7 bytes
  4223 ;; Hardware stack levels used: 1
  4224 ;; Hardware stack levels required when called: 9
  4225 ;; This function calls:
  4226 ;;		_I2C_2_Master_Read
  4227 ;;		_I2C_2_Master_RepStart
  4228 ;;		_I2C_2_Master_Start
  4229 ;;		_I2C_2_Master_Stop
  4230 ;;		_I2C_2_Master_Write
  4231 ;; This function is called by:
  4232 ;;		_Update_RGBC
  4233 ;; This function uses a non-reentrant model
  4234 ;;
  4235                           
  4236                           	psect	text15
  4237   0020DE                     __ptext15:
  4238                           	callstack 0
  4239   0020DE                     _color_read_Blue:
  4240                           	callstack 20
  4241   0020DE                     
  4242                           ;color.c: 62:  unsigned int tmp;;color.c: 63:  I2C_2_Master_Start();
  4243   0020DE  EC1D  F012         	call	_I2C_2_Master_Start	;wreg free
  4244                           
  4245                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x00);
  4246   0020E2  0E52               	movlw	82
  4247   0020E4  EC07  F012         	call	_I2C_2_Master_Write
  4248                           
  4249                           ;color.c: 65:  I2C_2_Master_Write(0xA0 | 0x1A);
  4250   0020E8  0EBA               	movlw	186
  4251   0020EA  EC07  F012         	call	_I2C_2_Master_Write
  4252                           
  4253                           ;color.c: 66:  I2C_2_Master_RepStart();
  4254   0020EE  EC13  F012         	call	_I2C_2_Master_RepStart	;wreg free
  4255                           
  4256                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x01);
  4257   0020F2  0E53               	movlw	83
  4258   0020F4  EC07  F012         	call	_I2C_2_Master_Write
  4259                           
  4260                           ;color.c: 68:  tmp=I2C_2_Master_Read(1);
  4261   0020F8  0E01               	movlw	1
  4262   0020FA  EC08  F011         	call	_I2C_2_Master_Read
  4263   0020FE  6E0F               	movwf	??_color_read_Blue^0,c
  4264   002100  500F               	movf	??_color_read_Blue^0,w,c
  4265   002102  6E12               	movwf	color_read_Blue@tmp^0,c
  4266   002104  6A13               	clrf	(color_read_Blue@tmp+1)^0,c
  4267                           
  4268                           ;color.c: 69:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4269   002106  0E00               	movlw	0
  4270   002108  EC08  F011         	call	_I2C_2_Master_Read
  4271   00210C  6E0F               	movwf	??_color_read_Blue^0,c
  4272   00210E  500F               	movf	??_color_read_Blue^0,w,c
  4273   002110  6E11               	movwf	(??_color_read_Blue+2)^0,c
  4274   002112  6A10               	clrf	(??_color_read_Blue+1)^0,c
  4275   002114  5012               	movf	color_read_Blue@tmp^0,w,c
  4276   002116  1010               	iorwf	(??_color_read_Blue+1)^0,w,c
  4277   002118  6E12               	movwf	color_read_Blue@tmp^0,c
  4278   00211A  5013               	movf	(color_read_Blue@tmp+1)^0,w,c
  4279   00211C  1011               	iorwf	(??_color_read_Blue+2)^0,w,c
  4280   00211E  6E13               	movwf	(color_read_Blue@tmp+1)^0,c
  4281                           
  4282                           ;color.c: 70:  I2C_2_Master_Stop();
  4283   002120  EC18  F012         	call	_I2C_2_Master_Stop	;wreg free
  4284   002124                     
  4285                           ;color.c: 71:  return tmp;
  4286   002124  C012  F00D         	movff	color_read_Blue@tmp,?_color_read_Blue
  4287   002128  C013  F00E         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  4288   00212C  0012               	return		;funcret
  4289   00212E                     __end_of_color_read_Blue:
  4290                           	callstack 0
  4291                           
  4292 ;; *************** function _I2C_2_Master_RepStart *****************
  4293 ;; Defined at:
  4294 ;;		line 33 in file "i2c.c"
  4295 ;; Parameters:    Size  Location     Type
  4296 ;;		None
  4297 ;; Auto vars:     Size  Location     Type
  4298 ;;		None
  4299 ;; Return value:  Size  Location     Type
  4300 ;;                  1    wreg      void 
  4301 ;; Registers used:
  4302 ;;		wreg, status,2, status,0, cstack
  4303 ;; Tracked objects:
  4304 ;;		On entry : 0/0
  4305 ;;		On exit  : 0/0
  4306 ;;		Unchanged: 0/0
  4307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4312 ;;Total ram usage:        0 bytes
  4313 ;; Hardware stack levels used: 1
  4314 ;; Hardware stack levels required when called: 8
  4315 ;; This function calls:
  4316 ;;		_I2C_2_Master_Idle
  4317 ;; This function is called by:
  4318 ;;		_color_read_Red
  4319 ;;		_color_read_Green
  4320 ;;		_color_read_Blue
  4321 ;;		_color_read_Clear
  4322 ;; This function uses a non-reentrant model
  4323 ;;
  4324                           
  4325                           	psect	text16
  4326   002426                     __ptext16:
  4327                           	callstack 0
  4328   002426                     _I2C_2_Master_RepStart:
  4329                           	callstack 20
  4330   002426                     
  4331                           ;i2c.c: 35:   I2C_2_Master_Idle();
  4332   002426  EC58  F011         	call	_I2C_2_Master_Idle	;wreg free
  4333   00242A                     
  4334                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  4335   00242A  010E               	movlb	14	; () banked
  4336   00242C  83DA               	bsf	218,1,b	;volatile
  4337   00242E                     
  4338                           ; BSR set to: 14
  4339   00242E  0012               	return		;funcret
  4340   002430                     __end_of_I2C_2_Master_RepStart:
  4341                           	callstack 0
  4342                           
  4343 ;; *************** function _I2C_2_Master_Read *****************
  4344 ;; Defined at:
  4345 ;;		line 51 in file "i2c.c"
  4346 ;; Parameters:    Size  Location     Type
  4347 ;;  ack             1    wreg     unsigned char 
  4348 ;; Auto vars:     Size  Location     Type
  4349 ;;  ack             1   10[COMRAM] unsigned char 
  4350 ;;  tmp             1   11[COMRAM] unsigned char 
  4351 ;; Return value:  Size  Location     Type
  4352 ;;                  1    wreg      unsigned char 
  4353 ;; Registers used:
  4354 ;;		wreg, status,2, status,0, cstack
  4355 ;; Tracked objects:
  4356 ;;		On entry : 0/0
  4357 ;;		On exit  : 0/0
  4358 ;;		Unchanged: 0/0
  4359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4361 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4362 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4363 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4364 ;;Total ram usage:        3 bytes
  4365 ;; Hardware stack levels used: 1
  4366 ;; Hardware stack levels required when called: 8
  4367 ;; This function calls:
  4368 ;;		_I2C_2_Master_Idle
  4369 ;; This function is called by:
  4370 ;;		_color_read_Red
  4371 ;;		_color_read_Green
  4372 ;;		_color_read_Blue
  4373 ;;		_color_read_Clear
  4374 ;; This function uses a non-reentrant model
  4375 ;;
  4376                           
  4377                           	psect	text17
  4378   002210                     __ptext17:
  4379                           	callstack 0
  4380   002210                     _I2C_2_Master_Read:
  4381                           	callstack 20
  4382                           
  4383                           ; BSR set to: 14
  4384                           ;incstack = 0
  4385                           ;I2C_2_Master_Read@ack stored from wreg
  4386   002210  6E0B               	movwf	I2C_2_Master_Read@ack^0,c
  4387   002212                     
  4388                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  4389   002212  EC58  F011         	call	_I2C_2_Master_Idle	;wreg free
  4390   002216                     
  4391                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  4392   002216  010E               	movlb	14	; () banked
  4393   002218  87DA               	bsf	218,3,b	;volatile
  4394                           
  4395                           ;i2c.c: 56:   I2C_2_Master_Idle();
  4396   00221A  EC58  F011         	call	_I2C_2_Master_Idle	;wreg free
  4397   00221E                     
  4398                           ;i2c.c: 57:   tmp = SSP2BUF;
  4399   00221E  CED5 F00C          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  4400                           
  4401                           ;i2c.c: 58:   I2C_2_Master_Idle();
  4402   002222  EC58  F011         	call	_I2C_2_Master_Idle	;wreg free
  4403   002226                     
  4404                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  4405   002226  500B               	movf	I2C_2_Master_Read@ack^0,w,c
  4406   002228  B4D8               	btfsc	status,2,c
  4407   00222A  EF19  F011         	goto	u1921
  4408   00222E  EF1D  F011         	goto	u1920
  4409   002232                     u1921:
  4410   002232  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  4411   002234  2A0A               	incf	??_I2C_2_Master_Read^0,f,c
  4412   002236  EF1E  F011         	goto	u1938
  4413   00223A                     u1920:
  4414   00223A  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  4415   00223C                     u1938:
  4416   00223C  3A0A               	swapf	??_I2C_2_Master_Read^0,f,c
  4417   00223E  460A               	rlncf	??_I2C_2_Master_Read^0,f,c
  4418   002240  010E               	movlb	14	; () banked
  4419   002242  51DA               	movf	218,w,b	;volatile
  4420   002244  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  4421   002246  0BDF               	andlw	-33
  4422   002248  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  4423   00224A  6FDA               	movwf	218,b	;volatile
  4424   00224C                     
  4425                           ; BSR set to: 14
  4426                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  4427   00224C  89DA               	bsf	218,4,b	;volatile
  4428   00224E                     
  4429                           ; BSR set to: 14
  4430                           ;i2c.c: 61:   return tmp;
  4431   00224E  500C               	movf	I2C_2_Master_Read@tmp^0,w,c
  4432   002250                     
  4433                           ; BSR set to: 14
  4434   002250  0012               	return		;funcret
  4435   002252                     __end_of_I2C_2_Master_Read:
  4436                           	callstack 0
  4437                           
  4438 ;; *************** function _Timer0_init *****************
  4439 ;; Defined at:
  4440 ;;		line 7 in file "timers.c"
  4441 ;; Parameters:    Size  Location     Type
  4442 ;;		None
  4443 ;; Auto vars:     Size  Location     Type
  4444 ;;		None
  4445 ;; Return value:  Size  Location     Type
  4446 ;;                  1    wreg      void 
  4447 ;; Registers used:
  4448 ;;		wreg, status,2
  4449 ;; Tracked objects:
  4450 ;;		On entry : 0/0
  4451 ;;		On exit  : 0/0
  4452 ;;		Unchanged: 0/0
  4453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4458 ;;Total ram usage:        0 bytes
  4459 ;; Hardware stack levels used: 1
  4460 ;; Hardware stack levels required when called: 7
  4461 ;; This function calls:
  4462 ;;		Nothing
  4463 ;; This function is called by:
  4464 ;;		_main
  4465 ;; This function uses a non-reentrant model
  4466 ;;
  4467                           
  4468                           	psect	text18
  4469   00236E                     __ptext18:
  4470                           	callstack 0
  4471   00236E                     _Timer0_init:
  4472                           	callstack 23
  4473   00236E                     
  4474                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  4475   00236E  50D6               	movf	214,w,c	;volatile
  4476   002370  0B1F               	andlw	-225
  4477   002372  0940               	iorlw	64
  4478   002374  6ED6               	movwf	214,c	;volatile
  4479   002376                     
  4480                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  4481   002376  88D6               	bsf	214,4,c	;volatile
  4482                           
  4483                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
  4484   002378  50D6               	movf	214,w,c	;volatile
  4485   00237A  0BF0               	andlw	-16
  4486   00237C  0908               	iorlw	8
  4487   00237E  6ED6               	movwf	214,c	;volatile
  4488   002380                     
  4489                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
  4490   002380  88D5               	bsf	213,4,c	;volatile
  4491                           
  4492                           ;timers.c: 15:     TMR0H = 0b11000010;
  4493   002382  0EC2               	movlw	194
  4494   002384  6ED4               	movwf	212,c	;volatile
  4495                           
  4496                           ;timers.c: 16:     TMR0L = 0b11110110;
  4497   002386  0EF6               	movlw	246
  4498   002388  6ED3               	movwf	211,c	;volatile
  4499   00238A                     
  4500                           ;timers.c: 17:     T0CON0bits.T0EN=1;
  4501   00238A  8ED5               	bsf	213,7,c	;volatile
  4502   00238C  0012               	return		;funcret
  4503   00238E                     __end_of_Timer0_init:
  4504                           	callstack 0
  4505                           
  4506 ;; *************** function _MoveBuggy *****************
  4507 ;; Defined at:
  4508 ;;		line 117 in file "color_instructions.c"
  4509 ;; Parameters:    Size  Location     Type
  4510 ;;  color_detect    2   45[COMRAM] PTR unsigned char 
  4511 ;;		 -> RAM(3561), 
  4512 ;;  mL              2   47[COMRAM] PTR struct DC_motor
  4513 ;;		 -> main@motorL(9), 
  4514 ;;  mR              2   49[COMRAM] PTR struct DC_motor
  4515 ;;		 -> main@motorR(9), 
  4516 ;; Auto vars:     Size  Location     Type
  4517 ;;		None
  4518 ;; Return value:  Size  Location     Type
  4519 ;;                  1    wreg      void 
  4520 ;; Registers used:
  4521 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4522 ;; Tracked objects:
  4523 ;;		On entry : 0/0
  4524 ;;		On exit  : 0/0
  4525 ;;		Unchanged: 0/0
  4526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4527 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4530 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4531 ;;Total ram usage:        6 bytes
  4532 ;; Hardware stack levels used: 1
  4533 ;; Hardware stack levels required when called: 12
  4534 ;; This function calls:
  4535 ;;		_BlueInstructions
  4536 ;;		_GreenInstructions
  4537 ;;		_LightBlueInstructions
  4538 ;;		_OrangeInstructions
  4539 ;;		_PinkInstructions
  4540 ;;		_RedInstructions
  4541 ;;		_YellowInstructions
  4542 ;; This function is called by:
  4543 ;;		_main
  4544 ;; This function uses a non-reentrant model
  4545 ;;
  4546                           
  4547                           	psect	text19
  4548   0012B6                     __ptext19:
  4549                           	callstack 0
  4550   0012B6                     _MoveBuggy:
  4551                           	callstack 18
  4552   0012B6                     
  4553                           ;color_instructions.c: 118:     if (color_detected==1){
  4554   0012B6  042E               	decf	MoveBuggy@color_detected^0,w,c
  4555   0012B8  102F               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4556   0012BA  A4D8               	btfss	status,2,c
  4557   0012BC  EF62  F009         	goto	u3291
  4558   0012C0  EF64  F009         	goto	u3290
  4559   0012C4                     u3291:
  4560   0012C4  EF70  F009         	goto	l3496
  4561   0012C8                     u3290:
  4562   0012C8                     
  4563                           ;color_instructions.c: 119:         RedInstructions(mL, mR);
  4564   0012C8  C030  F027         	movff	MoveBuggy@mL,RedInstructions@mL
  4565   0012CC  C031  F028         	movff	MoveBuggy@mL+1,RedInstructions@mL+1
  4566   0012D0  C032  F029         	movff	MoveBuggy@mR,RedInstructions@mR
  4567   0012D4  C033  F02A         	movff	MoveBuggy@mR+1,RedInstructions@mR+1
  4568   0012D8  EC8B  F00D         	call	_RedInstructions	;wreg free
  4569                           
  4570                           ;color_instructions.c: 120:     }
  4571   0012DC  EFF4  F009         	goto	l587
  4572   0012E0                     l3496:
  4573   0012E0  0E02               	movlw	2
  4574   0012E2  182E               	xorwf	MoveBuggy@color_detected^0,w,c
  4575   0012E4  102F               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4576   0012E6  A4D8               	btfss	status,2,c
  4577   0012E8  EF78  F009         	goto	u3301
  4578   0012EC  EF7A  F009         	goto	u3300
  4579   0012F0                     u3301:
  4580   0012F0  EF86  F009         	goto	l3500
  4581   0012F4                     u3300:
  4582   0012F4                     
  4583                           ;color_instructions.c: 122:         GreenInstructions(mL, mR);
  4584   0012F4  C030  F027         	movff	MoveBuggy@mL,GreenInstructions@mL
  4585   0012F8  C031  F028         	movff	MoveBuggy@mL+1,GreenInstructions@mL+1
  4586   0012FC  C032  F029         	movff	MoveBuggy@mR,GreenInstructions@mR
  4587   001300  C033  F02A         	movff	MoveBuggy@mR+1,GreenInstructions@mR+1
  4588   001304  EC97  F00E         	call	_GreenInstructions	;wreg free
  4589                           
  4590                           ;color_instructions.c: 123:     }
  4591   001308  EFF4  F009         	goto	l587
  4592   00130C                     l3500:
  4593   00130C  0E03               	movlw	3
  4594   00130E  182E               	xorwf	MoveBuggy@color_detected^0,w,c
  4595   001310  102F               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4596   001312  A4D8               	btfss	status,2,c
  4597   001314  EF8E  F009         	goto	u3311
  4598   001318  EF90  F009         	goto	u3310
  4599   00131C                     u3311:
  4600   00131C  EF9C  F009         	goto	l3504
  4601   001320                     u3310:
  4602   001320                     
  4603                           ;color_instructions.c: 125:         BlueInstructions(mL, mR);
  4604   001320  C030  F027         	movff	MoveBuggy@mL,BlueInstructions@mL
  4605   001324  C031  F028         	movff	MoveBuggy@mL+1,BlueInstructions@mL+1
  4606   001328  C032  F029         	movff	MoveBuggy@mR,BlueInstructions@mR
  4607   00132C  C033  F02A         	movff	MoveBuggy@mR+1,BlueInstructions@mR+1
  4608   001330  ECA7  F00C         	call	_BlueInstructions	;wreg free
  4609                           
  4610                           ;color_instructions.c: 126:     }
  4611   001334  EFF4  F009         	goto	l587
  4612   001338                     l3504:
  4613   001338  0E04               	movlw	4
  4614   00133A  182E               	xorwf	MoveBuggy@color_detected^0,w,c
  4615   00133C  102F               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4616   00133E  A4D8               	btfss	status,2,c
  4617   001340  EFA4  F009         	goto	u3321
  4618   001344  EFA6  F009         	goto	u3320
  4619   001348                     u3321:
  4620   001348  EFB2  F009         	goto	l3508
  4621   00134C                     u3320:
  4622   00134C                     
  4623                           ;color_instructions.c: 128:         YellowInstructions(mL, mR);
  4624   00134C  C030  F027         	movff	MoveBuggy@mL,YellowInstructions@mL
  4625   001350  C031  F028         	movff	MoveBuggy@mL+1,YellowInstructions@mL+1
  4626   001354  C032  F029         	movff	MoveBuggy@mR,YellowInstructions@mR
  4627   001358  C033  F02A         	movff	MoveBuggy@mR+1,YellowInstructions@mR+1
  4628   00135C  EC48  F00D         	call	_YellowInstructions	;wreg free
  4629                           
  4630                           ;color_instructions.c: 129:     }
  4631   001360  EFF4  F009         	goto	l587
  4632   001364                     l3508:
  4633   001364  0E05               	movlw	5
  4634   001366  182E               	xorwf	MoveBuggy@color_detected^0,w,c
  4635   001368  102F               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4636   00136A  A4D8               	btfss	status,2,c
  4637   00136C  EFBA  F009         	goto	u3331
  4638   001370  EFBC  F009         	goto	u3330
  4639   001374                     u3331:
  4640   001374  EFC8  F009         	goto	l3512
  4641   001378                     u3330:
  4642   001378                     
  4643                           ;color_instructions.c: 131:         PinkInstructions(mL, mR);
  4644   001378  C030  F027         	movff	MoveBuggy@mL,PinkInstructions@mL
  4645   00137C  C031  F028         	movff	MoveBuggy@mL+1,PinkInstructions@mL+1
  4646   001380  C032  F029         	movff	MoveBuggy@mR,PinkInstructions@mR
  4647   001384  C033  F02A         	movff	MoveBuggy@mR+1,PinkInstructions@mR+1
  4648   001388  ECCE  F00D         	call	_PinkInstructions	;wreg free
  4649                           
  4650                           ;color_instructions.c: 132:     }
  4651   00138C  EFF4  F009         	goto	l587
  4652   001390                     l3512:
  4653   001390  0E06               	movlw	6
  4654   001392  182E               	xorwf	MoveBuggy@color_detected^0,w,c
  4655   001394  102F               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4656   001396  A4D8               	btfss	status,2,c
  4657   001398  EFD0  F009         	goto	u3341
  4658   00139C  EFD2  F009         	goto	u3340
  4659   0013A0                     u3341:
  4660   0013A0  EFDE  F009         	goto	l3516
  4661   0013A4                     u3340:
  4662   0013A4                     
  4663                           ;color_instructions.c: 134:         OrangeInstructions(mL, mR);
  4664   0013A4  C030  F027         	movff	MoveBuggy@mL,OrangeInstructions@mL
  4665   0013A8  C031  F028         	movff	MoveBuggy@mL+1,OrangeInstructions@mL+1
  4666   0013AC  C032  F029         	movff	MoveBuggy@mR,OrangeInstructions@mR
  4667   0013B0  C033  F02A         	movff	MoveBuggy@mR+1,OrangeInstructions@mR+1
  4668   0013B4  EC11  F00E         	call	_OrangeInstructions	;wreg free
  4669                           
  4670                           ;color_instructions.c: 135:     }
  4671   0013B8  EFF4  F009         	goto	l587
  4672   0013BC                     l3516:
  4673   0013BC  0E07               	movlw	7
  4674   0013BE  182E               	xorwf	MoveBuggy@color_detected^0,w,c
  4675   0013C0  102F               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4676   0013C2  A4D8               	btfss	status,2,c
  4677   0013C4  EFE6  F009         	goto	u3351
  4678   0013C8  EFE8  F009         	goto	u3350
  4679   0013CC                     u3351:
  4680   0013CC  EFF4  F009         	goto	l581
  4681   0013D0                     u3350:
  4682   0013D0                     
  4683                           ;color_instructions.c: 137:         LightBlueInstructions(mL, mR);
  4684   0013D0  C030  F027         	movff	MoveBuggy@mL,LightBlueInstructions@mL
  4685   0013D4  C031  F028         	movff	MoveBuggy@mL+1,LightBlueInstructions@mL+1
  4686   0013D8  C032  F029         	movff	MoveBuggy@mR,LightBlueInstructions@mR
  4687   0013DC  C033  F02A         	movff	MoveBuggy@mR+1,LightBlueInstructions@mR+1
  4688   0013E0  EC54  F00E         	call	_LightBlueInstructions	;wreg free
  4689   0013E4  EFF4  F009         	goto	l587
  4690   0013E8                     l581:
  4691   0013E8                     l587:
  4692   0013E8  0012               	return		;funcret
  4693   0013EA                     __end_of_MoveBuggy:
  4694                           	callstack 0
  4695                           
  4696 ;; *************** function _YellowInstructions *****************
  4697 ;; Defined at:
  4698 ;;		line 56 in file "color_instructions.c"
  4699 ;; Parameters:    Size  Location     Type
  4700 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  4701 ;;		 -> main@motorL(9), 
  4702 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  4703 ;;		 -> main@motorR(9), 
  4704 ;; Auto vars:     Size  Location     Type
  4705 ;;  a               1   44[COMRAM] unsigned char 
  4706 ;; Return value:  Size  Location     Type
  4707 ;;                  1    wreg      void 
  4708 ;; Registers used:
  4709 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4710 ;; Tracked objects:
  4711 ;;		On entry : 0/0
  4712 ;;		On exit  : 0/0
  4713 ;;		Unchanged: 0/0
  4714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4715 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4716 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4717 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4718 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4719 ;;Total ram usage:        7 bytes
  4720 ;; Hardware stack levels used: 1
  4721 ;; Hardware stack levels required when called: 11
  4722 ;; This function calls:
  4723 ;;		_fullSpeedBackwards
  4724 ;;		_stop
  4725 ;;		_turnRight90
  4726 ;; This function is called by:
  4727 ;;		_MoveBuggy
  4728 ;; This function uses a non-reentrant model
  4729 ;;
  4730                           
  4731                           	psect	text20
  4732   001A90                     __ptext20:
  4733                           	callstack 0
  4734   001A90                     _YellowInstructions:
  4735                           	callstack 18
  4736   001A90                     
  4737                           ;color_instructions.c: 58:     unsigned char a=0;
  4738   001A90  0E00               	movlw	0
  4739   001A92  6E2D               	movwf	YellowInstructions@a^0,c
  4740                           
  4741                           ;color_instructions.c: 59:     while (a<20){
  4742   001A94  EF57  F00D         	goto	l2830
  4743   001A98                     l2826:
  4744                           
  4745                           ;color_instructions.c: 60:         fullSpeedBackwards(mL, mR);
  4746   001A98  C027  F01C         	movff	YellowInstructions@mL,fullSpeedBackwards@mL
  4747   001A9C  C028  F01D         	movff	YellowInstructions@mL+1,fullSpeedBackwards@mL+1
  4748   001AA0  C029  F01E         	movff	YellowInstructions@mR,fullSpeedBackwards@mR
  4749   001AA4  C02A  F01F         	movff	YellowInstructions@mR+1,fullSpeedBackwards@mR+1
  4750   001AA8  ECD2  F00B         	call	_fullSpeedBackwards	;wreg free
  4751   001AAC                     
  4752                           ;color_instructions.c: 61:         a++;
  4753   001AAC  2A2D               	incf	YellowInstructions@a^0,f,c
  4754   001AAE                     l2830:
  4755                           
  4756                           ;color_instructions.c: 59:     while (a<20){
  4757   001AAE  0E13               	movlw	19
  4758   001AB0  642D               	cpfsgt	YellowInstructions@a^0,c
  4759   001AB2  EF5D  F00D         	goto	u2101
  4760   001AB6  EF5F  F00D         	goto	u2100
  4761   001ABA                     u2101:
  4762   001ABA  EF4C  F00D         	goto	l2826
  4763   001ABE                     u2100:
  4764   001ABE  EF6C  F00D         	goto	l2836
  4765   001AC2                     l2832:
  4766                           
  4767                           ;color_instructions.c: 64:         stop(mL, mR);
  4768   001AC2  C027  F01C         	movff	YellowInstructions@mL,stop@mL
  4769   001AC6  C028  F01D         	movff	YellowInstructions@mL+1,stop@mL+1
  4770   001ACA  C029  F01E         	movff	YellowInstructions@mR,stop@mR
  4771   001ACE  C02A  F01F         	movff	YellowInstructions@mR+1,stop@mR+1
  4772   001AD2  EC3D  F00C         	call	_stop	;wreg free
  4773   001AD6                     
  4774                           ;color_instructions.c: 65:         a--;
  4775   001AD6  062D               	decf	YellowInstructions@a^0,f,c
  4776   001AD8                     l2836:
  4777                           
  4778                           ;color_instructions.c: 63:     while (a>0){
  4779   001AD8  502D               	movf	YellowInstructions@a^0,w,c
  4780   001ADA  A4D8               	btfss	status,2,c
  4781   001ADC  EF72  F00D         	goto	u2111
  4782   001AE0  EF74  F00D         	goto	u2110
  4783   001AE4                     u2111:
  4784   001AE4  EF61  F00D         	goto	l2832
  4785   001AE8                     u2110:
  4786   001AE8                     
  4787                           ;color_instructions.c: 67:     _delay((unsigned long)((500)*(64000000/4000.0)));
  4788   001AE8  0E29               	movlw	41
  4789   001AEA  6E2C               	movwf	(??_YellowInstructions+1)^0,c
  4790   001AEC  0E96               	movlw	150
  4791   001AEE  6E2B               	movwf	??_YellowInstructions^0,c
  4792   001AF0  0E7F               	movlw	127
  4793   001AF2                     u4097:
  4794   001AF2  2EE8               	decfsz	wreg,f,c
  4795   001AF4  D7FE               	bra	u4097
  4796   001AF6  2E2B               	decfsz	??_YellowInstructions^0,f,c
  4797   001AF8  D7FC               	bra	u4097
  4798   001AFA  2E2C               	decfsz	(??_YellowInstructions+1)^0,f,c
  4799   001AFC  D7FA               	bra	u4097
  4800   001AFE  F000               	nop	
  4801   001B00                     
  4802                           ;color_instructions.c: 68:     turnRight90(mL, mR);
  4803   001B00  C027  F022         	movff	YellowInstructions@mL,turnRight90@mL
  4804   001B04  C028  F023         	movff	YellowInstructions@mL+1,turnRight90@mL+1
  4805   001B08  C029  F024         	movff	YellowInstructions@mR,turnRight90@mR
  4806   001B0C  C02A  F025         	movff	YellowInstructions@mR+1,turnRight90@mR+1
  4807   001B10  EC43  F00F         	call	_turnRight90	;wreg free
  4808   001B14  0012               	return		;funcret
  4809   001B16                     __end_of_YellowInstructions:
  4810                           	callstack 0
  4811                           
  4812 ;; *************** function _RedInstructions *****************
  4813 ;; Defined at:
  4814 ;;		line 8 in file "color_instructions.c"
  4815 ;; Parameters:    Size  Location     Type
  4816 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  4817 ;;		 -> main@motorL(9), 
  4818 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  4819 ;;		 -> main@motorR(9), 
  4820 ;; Auto vars:     Size  Location     Type
  4821 ;;  a               1   44[COMRAM] unsigned char 
  4822 ;; Return value:  Size  Location     Type
  4823 ;;                  1    wreg      void 
  4824 ;; Registers used:
  4825 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4826 ;; Tracked objects:
  4827 ;;		On entry : 0/0
  4828 ;;		On exit  : 0/0
  4829 ;;		Unchanged: 0/0
  4830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4831 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4832 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4833 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4834 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4835 ;;Total ram usage:        7 bytes
  4836 ;; Hardware stack levels used: 1
  4837 ;; Hardware stack levels required when called: 11
  4838 ;; This function calls:
  4839 ;;		_fullSpeedBackwards
  4840 ;;		_stop
  4841 ;;		_turnRight90
  4842 ;; This function is called by:
  4843 ;;		_MoveBuggy
  4844 ;; This function uses a non-reentrant model
  4845 ;;
  4846                           
  4847                           	psect	text21
  4848   001B16                     __ptext21:
  4849                           	callstack 0
  4850   001B16                     _RedInstructions:
  4851                           	callstack 18
  4852   001B16                     
  4853                           ;color_instructions.c: 10:     unsigned char a=0;
  4854   001B16  0E00               	movlw	0
  4855   001B18  6E2D               	movwf	RedInstructions@a^0,c
  4856                           
  4857                           ;color_instructions.c: 11:     while (a<8){
  4858   001B1A  EF9A  F00D         	goto	l2774
  4859   001B1E                     l2770:
  4860                           
  4861                           ;color_instructions.c: 12:         fullSpeedBackwards(mL, mR);
  4862   001B1E  C027  F01C         	movff	RedInstructions@mL,fullSpeedBackwards@mL
  4863   001B22  C028  F01D         	movff	RedInstructions@mL+1,fullSpeedBackwards@mL+1
  4864   001B26  C029  F01E         	movff	RedInstructions@mR,fullSpeedBackwards@mR
  4865   001B2A  C02A  F01F         	movff	RedInstructions@mR+1,fullSpeedBackwards@mR+1
  4866   001B2E  ECD2  F00B         	call	_fullSpeedBackwards	;wreg free
  4867   001B32                     
  4868                           ;color_instructions.c: 13:         a++;
  4869   001B32  2A2D               	incf	RedInstructions@a^0,f,c
  4870   001B34                     l2774:
  4871                           
  4872                           ;color_instructions.c: 11:     while (a<8){
  4873   001B34  0E07               	movlw	7
  4874   001B36  642D               	cpfsgt	RedInstructions@a^0,c
  4875   001B38  EFA0  F00D         	goto	u2041
  4876   001B3C  EFA2  F00D         	goto	u2040
  4877   001B40                     u2041:
  4878   001B40  EF8F  F00D         	goto	l2770
  4879   001B44                     u2040:
  4880   001B44  EFAF  F00D         	goto	l2780
  4881   001B48                     l2776:
  4882                           
  4883                           ;color_instructions.c: 16:         stop(mL, mR);
  4884   001B48  C027  F01C         	movff	RedInstructions@mL,stop@mL
  4885   001B4C  C028  F01D         	movff	RedInstructions@mL+1,stop@mL+1
  4886   001B50  C029  F01E         	movff	RedInstructions@mR,stop@mR
  4887   001B54  C02A  F01F         	movff	RedInstructions@mR+1,stop@mR+1
  4888   001B58  EC3D  F00C         	call	_stop	;wreg free
  4889   001B5C                     
  4890                           ;color_instructions.c: 17:         a--;
  4891   001B5C  062D               	decf	RedInstructions@a^0,f,c
  4892   001B5E                     l2780:
  4893                           
  4894                           ;color_instructions.c: 15:     while (a>0){
  4895   001B5E  502D               	movf	RedInstructions@a^0,w,c
  4896   001B60  A4D8               	btfss	status,2,c
  4897   001B62  EFB5  F00D         	goto	u2051
  4898   001B66  EFB7  F00D         	goto	u2050
  4899   001B6A                     u2051:
  4900   001B6A  EFA4  F00D         	goto	l2776
  4901   001B6E                     u2050:
  4902   001B6E                     
  4903                           ;color_instructions.c: 19:     _delay((unsigned long)((250)*(64000000/4000.0)));
  4904   001B6E  0E15               	movlw	21
  4905   001B70  6E2C               	movwf	(??_RedInstructions+1)^0,c
  4906   001B72  0E4B               	movlw	75
  4907   001B74  6E2B               	movwf	??_RedInstructions^0,c
  4908   001B76  0EBE               	movlw	190
  4909   001B78                     u4107:
  4910   001B78  2EE8               	decfsz	wreg,f,c
  4911   001B7A  D7FE               	bra	u4107
  4912   001B7C  2E2B               	decfsz	??_RedInstructions^0,f,c
  4913   001B7E  D7FC               	bra	u4107
  4914   001B80  2E2C               	decfsz	(??_RedInstructions+1)^0,f,c
  4915   001B82  D7FA               	bra	u4107
  4916   001B84  D000               	nop2	
  4917   001B86                     
  4918                           ;color_instructions.c: 20:     turnRight90(mL, mR);
  4919   001B86  C027  F022         	movff	RedInstructions@mL,turnRight90@mL
  4920   001B8A  C028  F023         	movff	RedInstructions@mL+1,turnRight90@mL+1
  4921   001B8E  C029  F024         	movff	RedInstructions@mR,turnRight90@mR
  4922   001B92  C02A  F025         	movff	RedInstructions@mR+1,turnRight90@mR+1
  4923   001B96  EC43  F00F         	call	_turnRight90	;wreg free
  4924   001B9A  0012               	return		;funcret
  4925   001B9C                     __end_of_RedInstructions:
  4926                           	callstack 0
  4927                           
  4928 ;; *************** function _turnRight90 *****************
  4929 ;; Defined at:
  4930 ;;		line 213 in file "dc_motor.c"
  4931 ;; Parameters:    Size  Location     Type
  4932 ;;  mL              2   33[COMRAM] PTR struct DC_motor
  4933 ;;		 -> main@motorL(9), 
  4934 ;;  mR              2   35[COMRAM] PTR struct DC_motor
  4935 ;;		 -> main@motorR(9), 
  4936 ;; Auto vars:     Size  Location     Type
  4937 ;;  a               1   37[COMRAM] unsigned char 
  4938 ;; Return value:  Size  Location     Type
  4939 ;;                  1    wreg      void 
  4940 ;; Registers used:
  4941 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4942 ;; Tracked objects:
  4943 ;;		On entry : 0/0
  4944 ;;		On exit  : 0/0
  4945 ;;		Unchanged: 0/0
  4946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4947 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4948 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4950 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4951 ;;Total ram usage:        5 bytes
  4952 ;; Hardware stack levels used: 1
  4953 ;; Hardware stack levels required when called: 10
  4954 ;; This function calls:
  4955 ;;		_stop
  4956 ;;		_turnRight
  4957 ;; This function is called by:
  4958 ;;		_RedInstructions
  4959 ;;		_YellowInstructions
  4960 ;; This function uses a non-reentrant model
  4961 ;;
  4962                           
  4963                           	psect	text22
  4964   001E86                     __ptext22:
  4965                           	callstack 0
  4966   001E86                     _turnRight90:
  4967                           	callstack 18
  4968   001E86                     
  4969                           ;dc_motor.c: 215:     unsigned char a=0;
  4970   001E86  0E00               	movlw	0
  4971   001E88  6E26               	movwf	turnRight90@a^0,c
  4972                           
  4973                           ;dc_motor.c: 216:     while(a<19){
  4974   001E8A  EF52  F00F         	goto	l2678
  4975   001E8E                     l2674:
  4976                           
  4977                           ;dc_motor.c: 217:         turnRight(mL, mR);
  4978   001E8E  C022  F01C         	movff	turnRight90@mL,turnRight@mL
  4979   001E92  C023  F01D         	movff	turnRight90@mL+1,turnRight@mL+1
  4980   001E96  C024  F01E         	movff	turnRight90@mR,turnRight@mR
  4981   001E9A  C025  F01F         	movff	turnRight90@mR+1,turnRight@mR+1
  4982   001E9E  EC79  F00A         	call	_turnRight	;wreg free
  4983   001EA2                     
  4984                           ;dc_motor.c: 218:         a++;
  4985   001EA2  2A26               	incf	turnRight90@a^0,f,c
  4986   001EA4                     l2678:
  4987                           
  4988                           ;dc_motor.c: 216:     while(a<19){
  4989   001EA4  0E12               	movlw	18
  4990   001EA6  6426               	cpfsgt	turnRight90@a^0,c
  4991   001EA8  EF58  F00F         	goto	u1981
  4992   001EAC  EF5A  F00F         	goto	u1980
  4993   001EB0                     u1981:
  4994   001EB0  EF47  F00F         	goto	l2674
  4995   001EB4                     u1980:
  4996   001EB4  EF67  F00F         	goto	l2684
  4997   001EB8                     l2680:
  4998                           
  4999                           ;dc_motor.c: 221:         stop(mL, mR);
  5000   001EB8  C022  F01C         	movff	turnRight90@mL,stop@mL
  5001   001EBC  C023  F01D         	movff	turnRight90@mL+1,stop@mL+1
  5002   001EC0  C024  F01E         	movff	turnRight90@mR,stop@mR
  5003   001EC4  C025  F01F         	movff	turnRight90@mR+1,stop@mR+1
  5004   001EC8  EC3D  F00C         	call	_stop	;wreg free
  5005   001ECC                     
  5006                           ;dc_motor.c: 222:         a--;
  5007   001ECC  0626               	decf	turnRight90@a^0,f,c
  5008   001ECE                     l2684:
  5009                           
  5010                           ;dc_motor.c: 220:     while(a>0){
  5011   001ECE  5026               	movf	turnRight90@a^0,w,c
  5012   001ED0  A4D8               	btfss	status,2,c
  5013   001ED2  EF6D  F00F         	goto	u1991
  5014   001ED6  EF6F  F00F         	goto	u1990
  5015   001EDA                     u1991:
  5016   001EDA  EF5C  F00F         	goto	l2680
  5017   001EDE                     u1990:
  5018   001EDE  0012               	return		;funcret
  5019   001EE0                     __end_of_turnRight90:
  5020                           	callstack 0
  5021                           
  5022 ;; *************** function _PinkInstructions *****************
  5023 ;; Defined at:
  5024 ;;		line 71 in file "color_instructions.c"
  5025 ;; Parameters:    Size  Location     Type
  5026 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  5027 ;;		 -> main@motorL(9), 
  5028 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  5029 ;;		 -> main@motorR(9), 
  5030 ;; Auto vars:     Size  Location     Type
  5031 ;;  a               1   44[COMRAM] unsigned char 
  5032 ;; Return value:  Size  Location     Type
  5033 ;;                  1    wreg      void 
  5034 ;; Registers used:
  5035 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5036 ;; Tracked objects:
  5037 ;;		On entry : 0/0
  5038 ;;		On exit  : 0/0
  5039 ;;		Unchanged: 0/0
  5040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5041 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5042 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5043 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5044 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5045 ;;Total ram usage:        7 bytes
  5046 ;; Hardware stack levels used: 1
  5047 ;; Hardware stack levels required when called: 11
  5048 ;; This function calls:
  5049 ;;		_fullSpeedBackwards
  5050 ;;		_stop
  5051 ;;		_turnLeft90
  5052 ;; This function is called by:
  5053 ;;		_MoveBuggy
  5054 ;; This function uses a non-reentrant model
  5055 ;;
  5056                           
  5057                           	psect	text23
  5058   001B9C                     __ptext23:
  5059                           	callstack 0
  5060   001B9C                     _PinkInstructions:
  5061                           	callstack 18
  5062   001B9C                     
  5063                           ;color_instructions.c: 72:     unsigned char a=0;
  5064   001B9C  0E00               	movlw	0
  5065   001B9E  6E2D               	movwf	PinkInstructions@a^0,c
  5066                           
  5067                           ;color_instructions.c: 73:     while (a<20){
  5068   001BA0  EFDD  F00D         	goto	l2848
  5069   001BA4                     l2844:
  5070                           
  5071                           ;color_instructions.c: 74:         fullSpeedBackwards(mL, mR);
  5072   001BA4  C027  F01C         	movff	PinkInstructions@mL,fullSpeedBackwards@mL
  5073   001BA8  C028  F01D         	movff	PinkInstructions@mL+1,fullSpeedBackwards@mL+1
  5074   001BAC  C029  F01E         	movff	PinkInstructions@mR,fullSpeedBackwards@mR
  5075   001BB0  C02A  F01F         	movff	PinkInstructions@mR+1,fullSpeedBackwards@mR+1
  5076   001BB4  ECD2  F00B         	call	_fullSpeedBackwards	;wreg free
  5077   001BB8                     
  5078                           ;color_instructions.c: 75:         a++;
  5079   001BB8  2A2D               	incf	PinkInstructions@a^0,f,c
  5080   001BBA                     l2848:
  5081                           
  5082                           ;color_instructions.c: 73:     while (a<20){
  5083   001BBA  0E13               	movlw	19
  5084   001BBC  642D               	cpfsgt	PinkInstructions@a^0,c
  5085   001BBE  EFE3  F00D         	goto	u2121
  5086   001BC2  EFE5  F00D         	goto	u2120
  5087   001BC6                     u2121:
  5088   001BC6  EFD2  F00D         	goto	l2844
  5089   001BCA                     u2120:
  5090   001BCA  EFF2  F00D         	goto	l2854
  5091   001BCE                     l2850:
  5092                           
  5093                           ;color_instructions.c: 78:         stop(mL, mR);
  5094   001BCE  C027  F01C         	movff	PinkInstructions@mL,stop@mL
  5095   001BD2  C028  F01D         	movff	PinkInstructions@mL+1,stop@mL+1
  5096   001BD6  C029  F01E         	movff	PinkInstructions@mR,stop@mR
  5097   001BDA  C02A  F01F         	movff	PinkInstructions@mR+1,stop@mR+1
  5098   001BDE  EC3D  F00C         	call	_stop	;wreg free
  5099   001BE2                     
  5100                           ;color_instructions.c: 79:         a--;
  5101   001BE2  062D               	decf	PinkInstructions@a^0,f,c
  5102   001BE4                     l2854:
  5103                           
  5104                           ;color_instructions.c: 77:     while (a>0){
  5105   001BE4  502D               	movf	PinkInstructions@a^0,w,c
  5106   001BE6  A4D8               	btfss	status,2,c
  5107   001BE8  EFF8  F00D         	goto	u2131
  5108   001BEC  EFFA  F00D         	goto	u2130
  5109   001BF0                     u2131:
  5110   001BF0  EFE7  F00D         	goto	l2850
  5111   001BF4                     u2130:
  5112   001BF4                     
  5113                           ;color_instructions.c: 81:     _delay((unsigned long)((500)*(64000000/4000.0)));
  5114   001BF4  0E29               	movlw	41
  5115   001BF6  6E2C               	movwf	(??_PinkInstructions+1)^0,c
  5116   001BF8  0E96               	movlw	150
  5117   001BFA  6E2B               	movwf	??_PinkInstructions^0,c
  5118   001BFC  0E7F               	movlw	127
  5119   001BFE                     u4117:
  5120   001BFE  2EE8               	decfsz	wreg,f,c
  5121   001C00  D7FE               	bra	u4117
  5122   001C02  2E2B               	decfsz	??_PinkInstructions^0,f,c
  5123   001C04  D7FC               	bra	u4117
  5124   001C06  2E2C               	decfsz	(??_PinkInstructions+1)^0,f,c
  5125   001C08  D7FA               	bra	u4117
  5126   001C0A  F000               	nop	
  5127   001C0C                     
  5128                           ;color_instructions.c: 82:     turnLeft90(mL, mR);
  5129   001C0C  C027  F022         	movff	PinkInstructions@mL,turnLeft90@mL
  5130   001C10  C028  F023         	movff	PinkInstructions@mL+1,turnLeft90@mL+1
  5131   001C14  C029  F024         	movff	PinkInstructions@mR,turnLeft90@mR
  5132   001C18  C02A  F025         	movff	PinkInstructions@mR+1,turnLeft90@mR+1
  5133   001C1C  ECCA  F00F         	call	_turnLeft90	;wreg free
  5134   001C20  0012               	return		;funcret
  5135   001C22                     __end_of_PinkInstructions:
  5136                           	callstack 0
  5137                           
  5138 ;; *************** function _OrangeInstructions *****************
  5139 ;; Defined at:
  5140 ;;		line 86 in file "color_instructions.c"
  5141 ;; Parameters:    Size  Location     Type
  5142 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  5143 ;;		 -> main@motorL(9), 
  5144 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  5145 ;;		 -> main@motorR(9), 
  5146 ;; Auto vars:     Size  Location     Type
  5147 ;;  a               1   44[COMRAM] unsigned char 
  5148 ;; Return value:  Size  Location     Type
  5149 ;;                  1    wreg      void 
  5150 ;; Registers used:
  5151 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5152 ;; Tracked objects:
  5153 ;;		On entry : 0/0
  5154 ;;		On exit  : 0/0
  5155 ;;		Unchanged: 0/0
  5156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5157 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5158 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5159 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5160 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5161 ;;Total ram usage:        7 bytes
  5162 ;; Hardware stack levels used: 1
  5163 ;; Hardware stack levels required when called: 11
  5164 ;; This function calls:
  5165 ;;		_fullSpeedBackwards
  5166 ;;		_stop
  5167 ;;		_turnRight135
  5168 ;; This function is called by:
  5169 ;;		_MoveBuggy
  5170 ;; This function uses a non-reentrant model
  5171 ;;
  5172                           
  5173                           	psect	text24
  5174   001C22                     __ptext24:
  5175                           	callstack 0
  5176   001C22                     _OrangeInstructions:
  5177                           	callstack 18
  5178   001C22                     
  5179                           ;color_instructions.c: 87:     unsigned char a=0;
  5180   001C22  0E00               	movlw	0
  5181   001C24  6E2D               	movwf	OrangeInstructions@a^0,c
  5182                           
  5183                           ;color_instructions.c: 88:     while (a<20){
  5184   001C26  EF20  F00E         	goto	l2866
  5185   001C2A                     l2862:
  5186                           
  5187                           ;color_instructions.c: 89:         fullSpeedBackwards(mL, mR);
  5188   001C2A  C027  F01C         	movff	OrangeInstructions@mL,fullSpeedBackwards@mL
  5189   001C2E  C028  F01D         	movff	OrangeInstructions@mL+1,fullSpeedBackwards@mL+1
  5190   001C32  C029  F01E         	movff	OrangeInstructions@mR,fullSpeedBackwards@mR
  5191   001C36  C02A  F01F         	movff	OrangeInstructions@mR+1,fullSpeedBackwards@mR+1
  5192   001C3A  ECD2  F00B         	call	_fullSpeedBackwards	;wreg free
  5193   001C3E                     
  5194                           ;color_instructions.c: 90:         a++;
  5195   001C3E  2A2D               	incf	OrangeInstructions@a^0,f,c
  5196   001C40                     l2866:
  5197                           
  5198                           ;color_instructions.c: 88:     while (a<20){
  5199   001C40  0E13               	movlw	19
  5200   001C42  642D               	cpfsgt	OrangeInstructions@a^0,c
  5201   001C44  EF26  F00E         	goto	u2141
  5202   001C48  EF28  F00E         	goto	u2140
  5203   001C4C                     u2141:
  5204   001C4C  EF15  F00E         	goto	l2862
  5205   001C50                     u2140:
  5206   001C50  EF35  F00E         	goto	l2872
  5207   001C54                     l2868:
  5208                           
  5209                           ;color_instructions.c: 93:         stop(mL, mR);
  5210   001C54  C027  F01C         	movff	OrangeInstructions@mL,stop@mL
  5211   001C58  C028  F01D         	movff	OrangeInstructions@mL+1,stop@mL+1
  5212   001C5C  C029  F01E         	movff	OrangeInstructions@mR,stop@mR
  5213   001C60  C02A  F01F         	movff	OrangeInstructions@mR+1,stop@mR+1
  5214   001C64  EC3D  F00C         	call	_stop	;wreg free
  5215   001C68                     
  5216                           ;color_instructions.c: 94:         a--;
  5217   001C68  062D               	decf	OrangeInstructions@a^0,f,c
  5218   001C6A                     l2872:
  5219                           
  5220                           ;color_instructions.c: 92:     while (a>0){
  5221   001C6A  502D               	movf	OrangeInstructions@a^0,w,c
  5222   001C6C  A4D8               	btfss	status,2,c
  5223   001C6E  EF3B  F00E         	goto	u2151
  5224   001C72  EF3D  F00E         	goto	u2150
  5225   001C76                     u2151:
  5226   001C76  EF2A  F00E         	goto	l2868
  5227   001C7A                     u2150:
  5228   001C7A                     
  5229                           ;color_instructions.c: 96:     _delay((unsigned long)((500)*(64000000/4000.0)));
  5230   001C7A  0E29               	movlw	41
  5231   001C7C  6E2C               	movwf	(??_OrangeInstructions+1)^0,c
  5232   001C7E  0E96               	movlw	150
  5233   001C80  6E2B               	movwf	??_OrangeInstructions^0,c
  5234   001C82  0E7F               	movlw	127
  5235   001C84                     u4127:
  5236   001C84  2EE8               	decfsz	wreg,f,c
  5237   001C86  D7FE               	bra	u4127
  5238   001C88  2E2B               	decfsz	??_OrangeInstructions^0,f,c
  5239   001C8A  D7FC               	bra	u4127
  5240   001C8C  2E2C               	decfsz	(??_OrangeInstructions+1)^0,f,c
  5241   001C8E  D7FA               	bra	u4127
  5242   001C90  F000               	nop	
  5243   001C92                     
  5244                           ;color_instructions.c: 98:     turnRight135(mL, mR);
  5245   001C92  C027  F022         	movff	OrangeInstructions@mL,turnRight135@mL
  5246   001C96  C028  F023         	movff	OrangeInstructions@mL+1,turnRight135@mL+1
  5247   001C9A  C029  F024         	movff	OrangeInstructions@mR,turnRight135@mR
  5248   001C9E  C02A  F025         	movff	OrangeInstructions@mR+1,turnRight135@mR+1
  5249   001CA2  EC70  F00F         	call	_turnRight135	;wreg free
  5250   001CA6  0012               	return		;funcret
  5251   001CA8                     __end_of_OrangeInstructions:
  5252                           	callstack 0
  5253                           
  5254 ;; *************** function _turnRight135 *****************
  5255 ;; Defined at:
  5256 ;;		line 240 in file "dc_motor.c"
  5257 ;; Parameters:    Size  Location     Type
  5258 ;;  mL              2   33[COMRAM] PTR struct DC_motor
  5259 ;;		 -> main@motorL(9), 
  5260 ;;  mR              2   35[COMRAM] PTR struct DC_motor
  5261 ;;		 -> main@motorR(9), 
  5262 ;; Auto vars:     Size  Location     Type
  5263 ;;  a               1   37[COMRAM] unsigned char 
  5264 ;; Return value:  Size  Location     Type
  5265 ;;                  1    wreg      void 
  5266 ;; Registers used:
  5267 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5268 ;; Tracked objects:
  5269 ;;		On entry : 0/0
  5270 ;;		On exit  : 0/0
  5271 ;;		Unchanged: 0/0
  5272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5273 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5274 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5276 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5277 ;;Total ram usage:        5 bytes
  5278 ;; Hardware stack levels used: 1
  5279 ;; Hardware stack levels required when called: 10
  5280 ;; This function calls:
  5281 ;;		_stop
  5282 ;;		_turnRight
  5283 ;; This function is called by:
  5284 ;;		_OrangeInstructions
  5285 ;; This function uses a non-reentrant model
  5286 ;;
  5287                           
  5288                           	psect	text25
  5289   001EE0                     __ptext25:
  5290                           	callstack 0
  5291   001EE0                     _turnRight135:
  5292                           	callstack 18
  5293   001EE0                     
  5294                           ;dc_motor.c: 242:     unsigned char a=0;
  5295   001EE0  0E00               	movlw	0
  5296   001EE2  6E26               	movwf	turnRight135@a^0,c
  5297                           
  5298                           ;dc_motor.c: 243:     while(a<21){
  5299   001EE4  EF7F  F00F         	goto	l2692
  5300   001EE8                     l2688:
  5301                           
  5302                           ;dc_motor.c: 244:         turnRight(mL, mR);
  5303   001EE8  C022  F01C         	movff	turnRight135@mL,turnRight@mL
  5304   001EEC  C023  F01D         	movff	turnRight135@mL+1,turnRight@mL+1
  5305   001EF0  C024  F01E         	movff	turnRight135@mR,turnRight@mR
  5306   001EF4  C025  F01F         	movff	turnRight135@mR+1,turnRight@mR+1
  5307   001EF8  EC79  F00A         	call	_turnRight	;wreg free
  5308   001EFC                     
  5309                           ;dc_motor.c: 245:         a++;
  5310   001EFC  2A26               	incf	turnRight135@a^0,f,c
  5311   001EFE                     l2692:
  5312                           
  5313                           ;dc_motor.c: 243:     while(a<21){
  5314   001EFE  0E14               	movlw	20
  5315   001F00  6426               	cpfsgt	turnRight135@a^0,c
  5316   001F02  EF85  F00F         	goto	u2001
  5317   001F06  EF87  F00F         	goto	u2000
  5318   001F0A                     u2001:
  5319   001F0A  EF74  F00F         	goto	l2688
  5320   001F0E                     u2000:
  5321   001F0E  EF94  F00F         	goto	l2698
  5322   001F12                     l2694:
  5323                           
  5324                           ;dc_motor.c: 248:         stop(mL, mR);
  5325   001F12  C022  F01C         	movff	turnRight135@mL,stop@mL
  5326   001F16  C023  F01D         	movff	turnRight135@mL+1,stop@mL+1
  5327   001F1A  C024  F01E         	movff	turnRight135@mR,stop@mR
  5328   001F1E  C025  F01F         	movff	turnRight135@mR+1,stop@mR+1
  5329   001F22  EC3D  F00C         	call	_stop	;wreg free
  5330   001F26                     
  5331                           ;dc_motor.c: 249:         a--;
  5332   001F26  0626               	decf	turnRight135@a^0,f,c
  5333   001F28                     l2698:
  5334                           
  5335                           ;dc_motor.c: 247:     while(a>0){
  5336   001F28  5026               	movf	turnRight135@a^0,w,c
  5337   001F2A  A4D8               	btfss	status,2,c
  5338   001F2C  EF9A  F00F         	goto	u2011
  5339   001F30  EF9C  F00F         	goto	u2010
  5340   001F34                     u2011:
  5341   001F34  EF89  F00F         	goto	l2694
  5342   001F38                     u2010:
  5343   001F38  0012               	return		;funcret
  5344   001F3A                     __end_of_turnRight135:
  5345                           	callstack 0
  5346                           
  5347 ;; *************** function _turnRight *****************
  5348 ;; Defined at:
  5349 ;;		line 129 in file "dc_motor.c"
  5350 ;; Parameters:    Size  Location     Type
  5351 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  5352 ;;		 -> main@motorL(9), 
  5353 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  5354 ;;		 -> main@motorR(9), 
  5355 ;; Auto vars:     Size  Location     Type
  5356 ;;		None
  5357 ;; Return value:  Size  Location     Type
  5358 ;;                  1    wreg      void 
  5359 ;; Registers used:
  5360 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5361 ;; Tracked objects:
  5362 ;;		On entry : 0/0
  5363 ;;		On exit  : 0/0
  5364 ;;		Unchanged: 0/0
  5365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5366 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5368 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5369 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5370 ;;Total ram usage:        6 bytes
  5371 ;; Hardware stack levels used: 1
  5372 ;; Hardware stack levels required when called: 9
  5373 ;; This function calls:
  5374 ;;		_setMotorPWM
  5375 ;; This function is called by:
  5376 ;;		_turnRight90
  5377 ;;		_turnRight135
  5378 ;;		_turn180
  5379 ;; This function uses a non-reentrant model
  5380 ;;
  5381                           
  5382                           	psect	text26
  5383   0014F2                     __ptext26:
  5384                           	callstack 0
  5385   0014F2                     _turnRight:
  5386                           	callstack 18
  5387   0014F2                     
  5388                           ;dc_motor.c: 129: void turnRight(DC_motor *mL, DC_motor *mR);dc_motor.c: 130: {;dc_motor
      +                          .c: 132:     mL->direction = 1;
  5389   0014F2  EE20 F001          	lfsr	2,1
  5390   0014F6  501C               	movf	turnRight@mL^0,w,c
  5391   0014F8  26D9               	addwf	fsr2l,f,c
  5392   0014FA  501D               	movf	(turnRight@mL+1)^0,w,c
  5393   0014FC  22DA               	addwfc	fsr2h,f,c
  5394   0014FE  0E01               	movlw	1
  5395   001500  6EDF               	movwf	indf2,c
  5396                           
  5397                           ;dc_motor.c: 133:     mL->brakemode = 0;
  5398   001502  EE20 F002          	lfsr	2,2
  5399   001506  501C               	movf	turnRight@mL^0,w,c
  5400   001508  26D9               	addwf	fsr2l,f,c
  5401   00150A  501D               	movf	(turnRight@mL+1)^0,w,c
  5402   00150C  22DA               	addwfc	fsr2h,f,c
  5403   00150E  0E00               	movlw	0
  5404   001510  6EDF               	movwf	indf2,c
  5405                           
  5406                           ;dc_motor.c: 135:     mR->direction = 0;
  5407   001512  EE20 F001          	lfsr	2,1
  5408   001516  501E               	movf	turnRight@mR^0,w,c
  5409   001518  26D9               	addwf	fsr2l,f,c
  5410   00151A  501F               	movf	(turnRight@mR+1)^0,w,c
  5411   00151C  22DA               	addwfc	fsr2h,f,c
  5412   00151E  0E00               	movlw	0
  5413   001520  6EDF               	movwf	indf2,c
  5414                           
  5415                           ;dc_motor.c: 136:     mR->brakemode = 0;
  5416   001522  EE20 F002          	lfsr	2,2
  5417   001526  501E               	movf	turnRight@mR^0,w,c
  5418   001528  26D9               	addwf	fsr2l,f,c
  5419   00152A  501F               	movf	(turnRight@mR+1)^0,w,c
  5420   00152C  22DA               	addwfc	fsr2h,f,c
  5421   00152E  0E00               	movlw	0
  5422   001530  6EDF               	movwf	indf2,c
  5423                           
  5424                           ;dc_motor.c: 139:     if(mL->power>75){mL->power=75;}
  5425   001532  C01C  FFD9         	movff	turnRight@mL,fsr2l
  5426   001536  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  5427   00153A  50DF               	movf	indf2,w,c
  5428   00153C  0A80               	xorlw	128
  5429   00153E  0F34               	addlw	-204
  5430   001540  A0D8               	btfss	status,0,c
  5431   001542  EFA5  F00A         	goto	u1901
  5432   001546  EFA7  F00A         	goto	u1900
  5433   00154A                     u1901:
  5434   00154A  EFAD  F00A         	goto	l2596
  5435   00154E                     u1900:
  5436   00154E  C01C  FFD9         	movff	turnRight@mL,fsr2l
  5437   001552  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  5438   001556  0E4B               	movlw	75
  5439   001558  6EDF               	movwf	indf2,c
  5440   00155A                     l2596:
  5441                           
  5442                           ;dc_motor.c: 140:     if(mR->power>75){mR->power=75;}
  5443   00155A  C01E  FFD9         	movff	turnRight@mR,fsr2l
  5444   00155E  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  5445   001562  50DF               	movf	indf2,w,c
  5446   001564  0A80               	xorlw	128
  5447   001566  0F34               	addlw	-204
  5448   001568  A0D8               	btfss	status,0,c
  5449   00156A  EFB9  F00A         	goto	u1911
  5450   00156E  EFBB  F00A         	goto	u1910
  5451   001572                     u1911:
  5452   001572  EFC1  F00A         	goto	l2600
  5453   001576                     u1910:
  5454   001576  C01E  FFD9         	movff	turnRight@mR,fsr2l
  5455   00157A  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  5456   00157E  0E4B               	movlw	75
  5457   001580  6EDF               	movwf	indf2,c
  5458   001582                     l2600:
  5459                           
  5460                           ;dc_motor.c: 142:     mL->power = mL->power + 5 ;
  5461   001582  C01C  FFD9         	movff	turnRight@mL,fsr2l
  5462   001586  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  5463   00158A  50DF               	movf	indf2,w,c
  5464   00158C  0F05               	addlw	5
  5465   00158E  C01C  FFD9         	movff	turnRight@mL,fsr2l
  5466   001592  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  5467   001596  6EDF               	movwf	indf2,c
  5468   001598                     
  5469                           ;dc_motor.c: 143:     mR->power = mR->power + 5;
  5470   001598  C01E  FFD9         	movff	turnRight@mR,fsr2l
  5471   00159C  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  5472   0015A0  50DF               	movf	indf2,w,c
  5473   0015A2  0F05               	addlw	5
  5474   0015A4  C01E  FFD9         	movff	turnRight@mR,fsr2l
  5475   0015A8  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  5476   0015AC  6EDF               	movwf	indf2,c
  5477   0015AE                     
  5478                           ;dc_motor.c: 145:     setMotorPWM(mL);
  5479   0015AE  C01C  F016         	movff	turnRight@mL,setMotorPWM@m
  5480   0015B2  C01D  F017         	movff	turnRight@mL+1,setMotorPWM@m+1
  5481   0015B6  ECF8  F007         	call	_setMotorPWM	;wreg free
  5482   0015BA                     
  5483                           ;dc_motor.c: 146:     setMotorPWM(mR);
  5484   0015BA  C01E  F016         	movff	turnRight@mR,setMotorPWM@m
  5485   0015BE  C01F  F017         	movff	turnRight@mR+1,setMotorPWM@m+1
  5486   0015C2  ECF8  F007         	call	_setMotorPWM	;wreg free
  5487   0015C6                     
  5488                           ;dc_motor.c: 147:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5489   0015C6  0E05               	movlw	5
  5490   0015C8  6E21               	movwf	(??_turnRight+1)^0,c
  5491   0015CA  0E0F               	movlw	15
  5492   0015CC  6E20               	movwf	??_turnRight^0,c
  5493   0015CE  0EF1               	movlw	241
  5494   0015D0                     u4137:
  5495   0015D0  2EE8               	decfsz	wreg,f,c
  5496   0015D2  D7FE               	bra	u4137
  5497   0015D4  2E20               	decfsz	??_turnRight^0,f,c
  5498   0015D6  D7FC               	bra	u4137
  5499   0015D8  2E21               	decfsz	(??_turnRight+1)^0,f,c
  5500   0015DA  D7FA               	bra	u4137
  5501   0015DC  F000               	nop	
  5502   0015DE  0012               	return		;funcret
  5503   0015E0                     __end_of_turnRight:
  5504                           	callstack 0
  5505                           
  5506 ;; *************** function _LightBlueInstructions *****************
  5507 ;; Defined at:
  5508 ;;		line 101 in file "color_instructions.c"
  5509 ;; Parameters:    Size  Location     Type
  5510 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  5511 ;;		 -> main@motorL(9), 
  5512 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  5513 ;;		 -> main@motorR(9), 
  5514 ;; Auto vars:     Size  Location     Type
  5515 ;;  a               1   44[COMRAM] unsigned char 
  5516 ;; Return value:  Size  Location     Type
  5517 ;;                  1    wreg      void 
  5518 ;; Registers used:
  5519 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5520 ;; Tracked objects:
  5521 ;;		On entry : 0/0
  5522 ;;		On exit  : 0/0
  5523 ;;		Unchanged: 0/0
  5524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5525 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5526 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5527 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5528 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5529 ;;Total ram usage:        7 bytes
  5530 ;; Hardware stack levels used: 1
  5531 ;; Hardware stack levels required when called: 11
  5532 ;; This function calls:
  5533 ;;		_fullSpeedBackwards
  5534 ;;		_stop
  5535 ;;		_turnLeft135
  5536 ;; This function is called by:
  5537 ;;		_MoveBuggy
  5538 ;; This function uses a non-reentrant model
  5539 ;;
  5540                           
  5541                           	psect	text27
  5542   001CA8                     __ptext27:
  5543                           	callstack 0
  5544   001CA8                     _LightBlueInstructions:
  5545                           	callstack 18
  5546   001CA8                     
  5547                           ;color_instructions.c: 102:     unsigned char a=0;
  5548   001CA8  0E00               	movlw	0
  5549   001CAA  6E2D               	movwf	LightBlueInstructions@a^0,c
  5550                           
  5551                           ;color_instructions.c: 103:     while (a<20){
  5552   001CAC  EF63  F00E         	goto	l2884
  5553   001CB0                     l2880:
  5554                           
  5555                           ;color_instructions.c: 104:         fullSpeedBackwards(mL, mR);
  5556   001CB0  C027  F01C         	movff	LightBlueInstructions@mL,fullSpeedBackwards@mL
  5557   001CB4  C028  F01D         	movff	LightBlueInstructions@mL+1,fullSpeedBackwards@mL+1
  5558   001CB8  C029  F01E         	movff	LightBlueInstructions@mR,fullSpeedBackwards@mR
  5559   001CBC  C02A  F01F         	movff	LightBlueInstructions@mR+1,fullSpeedBackwards@mR+1
  5560   001CC0  ECD2  F00B         	call	_fullSpeedBackwards	;wreg free
  5561   001CC4                     
  5562                           ;color_instructions.c: 105:         a++;
  5563   001CC4  2A2D               	incf	LightBlueInstructions@a^0,f,c
  5564   001CC6                     l2884:
  5565                           
  5566                           ;color_instructions.c: 103:     while (a<20){
  5567   001CC6  0E13               	movlw	19
  5568   001CC8  642D               	cpfsgt	LightBlueInstructions@a^0,c
  5569   001CCA  EF69  F00E         	goto	u2161
  5570   001CCE  EF6B  F00E         	goto	u2160
  5571   001CD2                     u2161:
  5572   001CD2  EF58  F00E         	goto	l2880
  5573   001CD6                     u2160:
  5574   001CD6  EF78  F00E         	goto	l2890
  5575   001CDA                     l2886:
  5576                           
  5577                           ;color_instructions.c: 108:         stop(mL, mR);
  5578   001CDA  C027  F01C         	movff	LightBlueInstructions@mL,stop@mL
  5579   001CDE  C028  F01D         	movff	LightBlueInstructions@mL+1,stop@mL+1
  5580   001CE2  C029  F01E         	movff	LightBlueInstructions@mR,stop@mR
  5581   001CE6  C02A  F01F         	movff	LightBlueInstructions@mR+1,stop@mR+1
  5582   001CEA  EC3D  F00C         	call	_stop	;wreg free
  5583   001CEE                     
  5584                           ;color_instructions.c: 109:         a--;
  5585   001CEE  062D               	decf	LightBlueInstructions@a^0,f,c
  5586   001CF0                     l2890:
  5587                           
  5588                           ;color_instructions.c: 107:     while (a>0){
  5589   001CF0  502D               	movf	LightBlueInstructions@a^0,w,c
  5590   001CF2  A4D8               	btfss	status,2,c
  5591   001CF4  EF7E  F00E         	goto	u2171
  5592   001CF8  EF80  F00E         	goto	u2170
  5593   001CFC                     u2171:
  5594   001CFC  EF6D  F00E         	goto	l2886
  5595   001D00                     u2170:
  5596   001D00                     
  5597                           ;color_instructions.c: 111:     _delay((unsigned long)((500)*(64000000/4000.0)));
  5598   001D00  0E29               	movlw	41
  5599   001D02  6E2C               	movwf	(??_LightBlueInstructions+1)^0,c
  5600   001D04  0E96               	movlw	150
  5601   001D06  6E2B               	movwf	??_LightBlueInstructions^0,c
  5602   001D08  0E7F               	movlw	127
  5603   001D0A                     u4147:
  5604   001D0A  2EE8               	decfsz	wreg,f,c
  5605   001D0C  D7FE               	bra	u4147
  5606   001D0E  2E2B               	decfsz	??_LightBlueInstructions^0,f,c
  5607   001D10  D7FC               	bra	u4147
  5608   001D12  2E2C               	decfsz	(??_LightBlueInstructions+1)^0,f,c
  5609   001D14  D7FA               	bra	u4147
  5610   001D16  F000               	nop	
  5611   001D18                     
  5612                           ;color_instructions.c: 113:     turnLeft135(mL, mR);
  5613   001D18  C027  F022         	movff	LightBlueInstructions@mL,turnLeft135@mL
  5614   001D1C  C028  F023         	movff	LightBlueInstructions@mL+1,turnLeft135@mL+1
  5615   001D20  C029  F024         	movff	LightBlueInstructions@mR,turnLeft135@mR
  5616   001D24  C02A  F025         	movff	LightBlueInstructions@mR+1,turnLeft135@mR+1
  5617   001D28  EC9D  F00F         	call	_turnLeft135	;wreg free
  5618   001D2C  0012               	return		;funcret
  5619   001D2E                     __end_of_LightBlueInstructions:
  5620                           	callstack 0
  5621                           
  5622 ;; *************** function _turnLeft135 *****************
  5623 ;; Defined at:
  5624 ;;		line 253 in file "dc_motor.c"
  5625 ;; Parameters:    Size  Location     Type
  5626 ;;  mL              2   33[COMRAM] PTR struct DC_motor
  5627 ;;		 -> main@motorL(9), 
  5628 ;;  mR              2   35[COMRAM] PTR struct DC_motor
  5629 ;;		 -> main@motorR(9), 
  5630 ;; Auto vars:     Size  Location     Type
  5631 ;;  a               1   37[COMRAM] unsigned char 
  5632 ;; Return value:  Size  Location     Type
  5633 ;;                  1    wreg      void 
  5634 ;; Registers used:
  5635 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5636 ;; Tracked objects:
  5637 ;;		On entry : 0/0
  5638 ;;		On exit  : 0/0
  5639 ;;		Unchanged: 0/0
  5640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5641 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5642 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5644 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5645 ;;Total ram usage:        5 bytes
  5646 ;; Hardware stack levels used: 1
  5647 ;; Hardware stack levels required when called: 10
  5648 ;; This function calls:
  5649 ;;		_stop
  5650 ;;		_turnLeft
  5651 ;; This function is called by:
  5652 ;;		_LightBlueInstructions
  5653 ;; This function uses a non-reentrant model
  5654 ;;
  5655                           
  5656                           	psect	text28
  5657   001F3A                     __ptext28:
  5658                           	callstack 0
  5659   001F3A                     _turnLeft135:
  5660                           	callstack 18
  5661   001F3A                     
  5662                           ;dc_motor.c: 255:     unsigned char a=0;
  5663   001F3A  0E00               	movlw	0
  5664   001F3C  6E26               	movwf	turnLeft135@a^0,c
  5665                           
  5666                           ;dc_motor.c: 256:     while(a<21){
  5667   001F3E  EFAC  F00F         	goto	l2706
  5668   001F42                     l2702:
  5669                           
  5670                           ;dc_motor.c: 257:         turnLeft(mL, mR);
  5671   001F42  C022  F01C         	movff	turnLeft135@mL,turnLeft@mL
  5672   001F46  C023  F01D         	movff	turnLeft135@mL+1,turnLeft@mL+1
  5673   001F4A  C024  F01E         	movff	turnLeft135@mR,turnLeft@mR
  5674   001F4E  C025  F01F         	movff	turnLeft135@mR+1,turnLeft@mR+1
  5675   001F52  ECF0  F00A         	call	_turnLeft	;wreg free
  5676   001F56                     
  5677                           ;dc_motor.c: 258:         a++;
  5678   001F56  2A26               	incf	turnLeft135@a^0,f,c
  5679   001F58                     l2706:
  5680                           
  5681                           ;dc_motor.c: 256:     while(a<21){
  5682   001F58  0E14               	movlw	20
  5683   001F5A  6426               	cpfsgt	turnLeft135@a^0,c
  5684   001F5C  EFB2  F00F         	goto	u2021
  5685   001F60  EFB4  F00F         	goto	u2020
  5686   001F64                     u2021:
  5687   001F64  EFA1  F00F         	goto	l2702
  5688   001F68                     u2020:
  5689   001F68  EFC1  F00F         	goto	l2712
  5690   001F6C                     l2708:
  5691                           
  5692                           ;dc_motor.c: 261:         stop(mL, mR);
  5693   001F6C  C022  F01C         	movff	turnLeft135@mL,stop@mL
  5694   001F70  C023  F01D         	movff	turnLeft135@mL+1,stop@mL+1
  5695   001F74  C024  F01E         	movff	turnLeft135@mR,stop@mR
  5696   001F78  C025  F01F         	movff	turnLeft135@mR+1,stop@mR+1
  5697   001F7C  EC3D  F00C         	call	_stop	;wreg free
  5698   001F80                     
  5699                           ;dc_motor.c: 262:         a--;
  5700   001F80  0626               	decf	turnLeft135@a^0,f,c
  5701   001F82                     l2712:
  5702                           
  5703                           ;dc_motor.c: 260:     while(a>0){
  5704   001F82  5026               	movf	turnLeft135@a^0,w,c
  5705   001F84  A4D8               	btfss	status,2,c
  5706   001F86  EFC7  F00F         	goto	u2031
  5707   001F8A  EFC9  F00F         	goto	u2030
  5708   001F8E                     u2031:
  5709   001F8E  EFB6  F00F         	goto	l2708
  5710   001F92                     u2030:
  5711   001F92  0012               	return		;funcret
  5712   001F94                     __end_of_turnLeft135:
  5713                           	callstack 0
  5714                           
  5715 ;; *************** function _GreenInstructions *****************
  5716 ;; Defined at:
  5717 ;;		line 23 in file "color_instructions.c"
  5718 ;; Parameters:    Size  Location     Type
  5719 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  5720 ;;		 -> main@motorL(9), 
  5721 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  5722 ;;		 -> main@motorR(9), 
  5723 ;; Auto vars:     Size  Location     Type
  5724 ;;  a               1   44[COMRAM] unsigned char 
  5725 ;; Return value:  Size  Location     Type
  5726 ;;                  1    wreg      void 
  5727 ;; Registers used:
  5728 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5729 ;; Tracked objects:
  5730 ;;		On entry : 0/0
  5731 ;;		On exit  : 0/0
  5732 ;;		Unchanged: 0/0
  5733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5734 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5735 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5736 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5737 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5738 ;;Total ram usage:        7 bytes
  5739 ;; Hardware stack levels used: 1
  5740 ;; Hardware stack levels required when called: 11
  5741 ;; This function calls:
  5742 ;;		_fullSpeedBackwards
  5743 ;;		_stop
  5744 ;;		_turnLeft90
  5745 ;; This function is called by:
  5746 ;;		_MoveBuggy
  5747 ;; This function uses a non-reentrant model
  5748 ;;
  5749                           
  5750                           	psect	text29
  5751   001D2E                     __ptext29:
  5752                           	callstack 0
  5753   001D2E                     _GreenInstructions:
  5754                           	callstack 18
  5755   001D2E                     
  5756                           ;color_instructions.c: 24:     unsigned char a=0;
  5757   001D2E  0E00               	movlw	0
  5758   001D30  6E2D               	movwf	GreenInstructions@a^0,c
  5759                           
  5760                           ;color_instructions.c: 25:     while (a<8){
  5761   001D32  EFA6  F00E         	goto	l2792
  5762   001D36                     l2788:
  5763                           
  5764                           ;color_instructions.c: 26:         fullSpeedBackwards(mL, mR);
  5765   001D36  C027  F01C         	movff	GreenInstructions@mL,fullSpeedBackwards@mL
  5766   001D3A  C028  F01D         	movff	GreenInstructions@mL+1,fullSpeedBackwards@mL+1
  5767   001D3E  C029  F01E         	movff	GreenInstructions@mR,fullSpeedBackwards@mR
  5768   001D42  C02A  F01F         	movff	GreenInstructions@mR+1,fullSpeedBackwards@mR+1
  5769   001D46  ECD2  F00B         	call	_fullSpeedBackwards	;wreg free
  5770   001D4A                     
  5771                           ;color_instructions.c: 27:         a++;
  5772   001D4A  2A2D               	incf	GreenInstructions@a^0,f,c
  5773   001D4C                     l2792:
  5774                           
  5775                           ;color_instructions.c: 25:     while (a<8){
  5776   001D4C  0E07               	movlw	7
  5777   001D4E  642D               	cpfsgt	GreenInstructions@a^0,c
  5778   001D50  EFAC  F00E         	goto	u2061
  5779   001D54  EFAE  F00E         	goto	u2060
  5780   001D58                     u2061:
  5781   001D58  EF9B  F00E         	goto	l2788
  5782   001D5C                     u2060:
  5783   001D5C  EFBB  F00E         	goto	l2798
  5784   001D60                     l2794:
  5785                           
  5786                           ;color_instructions.c: 30:         stop(mL, mR);
  5787   001D60  C027  F01C         	movff	GreenInstructions@mL,stop@mL
  5788   001D64  C028  F01D         	movff	GreenInstructions@mL+1,stop@mL+1
  5789   001D68  C029  F01E         	movff	GreenInstructions@mR,stop@mR
  5790   001D6C  C02A  F01F         	movff	GreenInstructions@mR+1,stop@mR+1
  5791   001D70  EC3D  F00C         	call	_stop	;wreg free
  5792   001D74                     
  5793                           ;color_instructions.c: 31:         a--;
  5794   001D74  062D               	decf	GreenInstructions@a^0,f,c
  5795   001D76                     l2798:
  5796                           
  5797                           ;color_instructions.c: 29:     while (a>0){
  5798   001D76  502D               	movf	GreenInstructions@a^0,w,c
  5799   001D78  A4D8               	btfss	status,2,c
  5800   001D7A  EFC1  F00E         	goto	u2071
  5801   001D7E  EFC3  F00E         	goto	u2070
  5802   001D82                     u2071:
  5803   001D82  EFB0  F00E         	goto	l2794
  5804   001D86                     u2070:
  5805   001D86                     
  5806                           ;color_instructions.c: 33:     _delay((unsigned long)((250)*(64000000/4000.0)));
  5807   001D86  0E15               	movlw	21
  5808   001D88  6E2C               	movwf	(??_GreenInstructions+1)^0,c
  5809   001D8A  0E4B               	movlw	75
  5810   001D8C  6E2B               	movwf	??_GreenInstructions^0,c
  5811   001D8E  0EBE               	movlw	190
  5812   001D90                     u4157:
  5813   001D90  2EE8               	decfsz	wreg,f,c
  5814   001D92  D7FE               	bra	u4157
  5815   001D94  2E2B               	decfsz	??_GreenInstructions^0,f,c
  5816   001D96  D7FC               	bra	u4157
  5817   001D98  2E2C               	decfsz	(??_GreenInstructions+1)^0,f,c
  5818   001D9A  D7FA               	bra	u4157
  5819   001D9C  D000               	nop2	
  5820   001D9E                     
  5821                           ;color_instructions.c: 34:     turnLeft90(mL, mR);
  5822   001D9E  C027  F022         	movff	GreenInstructions@mL,turnLeft90@mL
  5823   001DA2  C028  F023         	movff	GreenInstructions@mL+1,turnLeft90@mL+1
  5824   001DA6  C029  F024         	movff	GreenInstructions@mR,turnLeft90@mR
  5825   001DAA  C02A  F025         	movff	GreenInstructions@mR+1,turnLeft90@mR+1
  5826   001DAE  ECCA  F00F         	call	_turnLeft90	;wreg free
  5827   001DB2  0012               	return		;funcret
  5828   001DB4                     __end_of_GreenInstructions:
  5829                           	callstack 0
  5830                           
  5831 ;; *************** function _BlueInstructions *****************
  5832 ;; Defined at:
  5833 ;;		line 37 in file "color_instructions.c"
  5834 ;; Parameters:    Size  Location     Type
  5835 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  5836 ;;		 -> main@motorL(9), 
  5837 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  5838 ;;		 -> main@motorR(9), 
  5839 ;; Auto vars:     Size  Location     Type
  5840 ;;  a               1   44[COMRAM] unsigned char 
  5841 ;; Return value:  Size  Location     Type
  5842 ;;                  1    wreg      void 
  5843 ;; Registers used:
  5844 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5845 ;; Tracked objects:
  5846 ;;		On entry : 0/0
  5847 ;;		On exit  : 0/0
  5848 ;;		Unchanged: 0/0
  5849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5850 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5851 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5852 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5853 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5854 ;;Total ram usage:        7 bytes
  5855 ;; Hardware stack levels used: 1
  5856 ;; Hardware stack levels required when called: 11
  5857 ;; This function calls:
  5858 ;;		_fullSpeedBackwards
  5859 ;;		_stop
  5860 ;;		_turnLeft90
  5861 ;; This function is called by:
  5862 ;;		_MoveBuggy
  5863 ;; This function uses a non-reentrant model
  5864 ;;
  5865                           
  5866                           	psect	text30
  5867   00194E                     __ptext30:
  5868                           	callstack 0
  5869   00194E                     _BlueInstructions:
  5870                           	callstack 18
  5871   00194E                     
  5872                           ;color_instructions.c: 38:     unsigned char a=0;
  5873   00194E  0E00               	movlw	0
  5874   001950  6E2D               	movwf	BlueInstructions@a^0,c
  5875                           
  5876                           ;color_instructions.c: 39:     while (a<8){
  5877   001952  EFB6  F00C         	goto	l2810
  5878   001956                     l2806:
  5879                           
  5880                           ;color_instructions.c: 40:         fullSpeedBackwards(mL, mR);
  5881   001956  C027  F01C         	movff	BlueInstructions@mL,fullSpeedBackwards@mL
  5882   00195A  C028  F01D         	movff	BlueInstructions@mL+1,fullSpeedBackwards@mL+1
  5883   00195E  C029  F01E         	movff	BlueInstructions@mR,fullSpeedBackwards@mR
  5884   001962  C02A  F01F         	movff	BlueInstructions@mR+1,fullSpeedBackwards@mR+1
  5885   001966  ECD2  F00B         	call	_fullSpeedBackwards	;wreg free
  5886   00196A                     
  5887                           ;color_instructions.c: 41:         a++;
  5888   00196A  2A2D               	incf	BlueInstructions@a^0,f,c
  5889   00196C                     l2810:
  5890                           
  5891                           ;color_instructions.c: 39:     while (a<8){
  5892   00196C  0E07               	movlw	7
  5893   00196E  642D               	cpfsgt	BlueInstructions@a^0,c
  5894   001970  EFBC  F00C         	goto	u2081
  5895   001974  EFBE  F00C         	goto	u2080
  5896   001978                     u2081:
  5897   001978  EFAB  F00C         	goto	l2806
  5898   00197C                     u2080:
  5899   00197C  EFCB  F00C         	goto	l2816
  5900   001980                     l2812:
  5901                           
  5902                           ;color_instructions.c: 44:         stop(mL, mR);
  5903   001980  C027  F01C         	movff	BlueInstructions@mL,stop@mL
  5904   001984  C028  F01D         	movff	BlueInstructions@mL+1,stop@mL+1
  5905   001988  C029  F01E         	movff	BlueInstructions@mR,stop@mR
  5906   00198C  C02A  F01F         	movff	BlueInstructions@mR+1,stop@mR+1
  5907   001990  EC3D  F00C         	call	_stop	;wreg free
  5908   001994                     
  5909                           ;color_instructions.c: 45:         a--;
  5910   001994  062D               	decf	BlueInstructions@a^0,f,c
  5911   001996                     l2816:
  5912                           
  5913                           ;color_instructions.c: 43:     while (a>0){
  5914   001996  502D               	movf	BlueInstructions@a^0,w,c
  5915   001998  A4D8               	btfss	status,2,c
  5916   00199A  EFD1  F00C         	goto	u2091
  5917   00199E  EFD3  F00C         	goto	u2090
  5918   0019A2                     u2091:
  5919   0019A2  EFC0  F00C         	goto	l2812
  5920   0019A6                     u2090:
  5921   0019A6                     
  5922                           ;color_instructions.c: 47:     _delay((unsigned long)((500)*(64000000/4000.0)));
  5923   0019A6  0E29               	movlw	41
  5924   0019A8  6E2C               	movwf	(??_BlueInstructions+1)^0,c
  5925   0019AA  0E96               	movlw	150
  5926   0019AC  6E2B               	movwf	??_BlueInstructions^0,c
  5927   0019AE  0E7F               	movlw	127
  5928   0019B0                     u4167:
  5929   0019B0  2EE8               	decfsz	wreg,f,c
  5930   0019B2  D7FE               	bra	u4167
  5931   0019B4  2E2B               	decfsz	??_BlueInstructions^0,f,c
  5932   0019B6  D7FC               	bra	u4167
  5933   0019B8  2E2C               	decfsz	(??_BlueInstructions+1)^0,f,c
  5934   0019BA  D7FA               	bra	u4167
  5935   0019BC  F000               	nop	
  5936   0019BE                     
  5937                           ;color_instructions.c: 50:     turnLeft90(mL, mR);
  5938   0019BE  C027  F022         	movff	BlueInstructions@mL,turnLeft90@mL
  5939   0019C2  C028  F023         	movff	BlueInstructions@mL+1,turnLeft90@mL+1
  5940   0019C6  C029  F024         	movff	BlueInstructions@mR,turnLeft90@mR
  5941   0019CA  C02A  F025         	movff	BlueInstructions@mR+1,turnLeft90@mR+1
  5942   0019CE  ECCA  F00F         	call	_turnLeft90	;wreg free
  5943   0019D2                     
  5944                           ;color_instructions.c: 51:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5945   0019D2  0E05               	movlw	5
  5946   0019D4  6E2C               	movwf	(??_BlueInstructions+1)^0,c
  5947   0019D6  0E0F               	movlw	15
  5948   0019D8  6E2B               	movwf	??_BlueInstructions^0,c
  5949   0019DA  0EF1               	movlw	241
  5950   0019DC                     u4177:
  5951   0019DC  2EE8               	decfsz	wreg,f,c
  5952   0019DE  D7FE               	bra	u4177
  5953   0019E0  2E2B               	decfsz	??_BlueInstructions^0,f,c
  5954   0019E2  D7FC               	bra	u4177
  5955   0019E4  2E2C               	decfsz	(??_BlueInstructions+1)^0,f,c
  5956   0019E6  D7FA               	bra	u4177
  5957   0019E8  F000               	nop	
  5958                           
  5959                           ;color_instructions.c: 52:     turnLeft90(mL, mR);
  5960   0019EA  C027  F022         	movff	BlueInstructions@mL,turnLeft90@mL
  5961   0019EE  C028  F023         	movff	BlueInstructions@mL+1,turnLeft90@mL+1
  5962   0019F2  C029  F024         	movff	BlueInstructions@mR,turnLeft90@mR
  5963   0019F6  C02A  F025         	movff	BlueInstructions@mR+1,turnLeft90@mR+1
  5964   0019FA  ECCA  F00F         	call	_turnLeft90	;wreg free
  5965   0019FE  0012               	return		;funcret
  5966   001A00                     __end_of_BlueInstructions:
  5967                           	callstack 0
  5968                           
  5969 ;; *************** function _turnLeft90 *****************
  5970 ;; Defined at:
  5971 ;;		line 200 in file "dc_motor.c"
  5972 ;; Parameters:    Size  Location     Type
  5973 ;;  mL              2   33[COMRAM] PTR struct DC_motor
  5974 ;;		 -> main@motorL(9), 
  5975 ;;  mR              2   35[COMRAM] PTR struct DC_motor
  5976 ;;		 -> main@motorR(9), 
  5977 ;; Auto vars:     Size  Location     Type
  5978 ;;  a               1   37[COMRAM] unsigned char 
  5979 ;; Return value:  Size  Location     Type
  5980 ;;                  1    wreg      void 
  5981 ;; Registers used:
  5982 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5983 ;; Tracked objects:
  5984 ;;		On entry : 0/0
  5985 ;;		On exit  : 0/0
  5986 ;;		Unchanged: 0/0
  5987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5988 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5989 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5991 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5992 ;;Total ram usage:        5 bytes
  5993 ;; Hardware stack levels used: 1
  5994 ;; Hardware stack levels required when called: 10
  5995 ;; This function calls:
  5996 ;;		_stop
  5997 ;;		_turnLeft
  5998 ;; This function is called by:
  5999 ;;		_GreenInstructions
  6000 ;;		_BlueInstructions
  6001 ;;		_PinkInstructions
  6002 ;; This function uses a non-reentrant model
  6003 ;;
  6004                           
  6005                           	psect	text31
  6006   001F94                     __ptext31:
  6007                           	callstack 0
  6008   001F94                     _turnLeft90:
  6009                           	callstack 18
  6010   001F94                     
  6011                           ;dc_motor.c: 202:     unsigned char a=0;
  6012   001F94  0E00               	movlw	0
  6013   001F96  6E26               	movwf	turnLeft90@a^0,c
  6014                           
  6015                           ;dc_motor.c: 203:     while(a<19){
  6016   001F98  EFD9  F00F         	goto	l2664
  6017   001F9C                     l2660:
  6018                           
  6019                           ;dc_motor.c: 204:         turnLeft(mL, mR);
  6020   001F9C  C022  F01C         	movff	turnLeft90@mL,turnLeft@mL
  6021   001FA0  C023  F01D         	movff	turnLeft90@mL+1,turnLeft@mL+1
  6022   001FA4  C024  F01E         	movff	turnLeft90@mR,turnLeft@mR
  6023   001FA8  C025  F01F         	movff	turnLeft90@mR+1,turnLeft@mR+1
  6024   001FAC  ECF0  F00A         	call	_turnLeft	;wreg free
  6025   001FB0                     
  6026                           ;dc_motor.c: 205:         a++;
  6027   001FB0  2A26               	incf	turnLeft90@a^0,f,c
  6028   001FB2                     l2664:
  6029                           
  6030                           ;dc_motor.c: 203:     while(a<19){
  6031   001FB2  0E12               	movlw	18
  6032   001FB4  6426               	cpfsgt	turnLeft90@a^0,c
  6033   001FB6  EFDF  F00F         	goto	u1961
  6034   001FBA  EFE1  F00F         	goto	u1960
  6035   001FBE                     u1961:
  6036   001FBE  EFCE  F00F         	goto	l2660
  6037   001FC2                     u1960:
  6038   001FC2  EFEE  F00F         	goto	l2670
  6039   001FC6                     l2666:
  6040                           
  6041                           ;dc_motor.c: 208:         stop(mL, mR);
  6042   001FC6  C022  F01C         	movff	turnLeft90@mL,stop@mL
  6043   001FCA  C023  F01D         	movff	turnLeft90@mL+1,stop@mL+1
  6044   001FCE  C024  F01E         	movff	turnLeft90@mR,stop@mR
  6045   001FD2  C025  F01F         	movff	turnLeft90@mR+1,stop@mR+1
  6046   001FD6  EC3D  F00C         	call	_stop	;wreg free
  6047   001FDA                     
  6048                           ;dc_motor.c: 209:         a--;
  6049   001FDA  0626               	decf	turnLeft90@a^0,f,c
  6050   001FDC                     l2670:
  6051                           
  6052                           ;dc_motor.c: 207:     while(a>0){
  6053   001FDC  5026               	movf	turnLeft90@a^0,w,c
  6054   001FDE  A4D8               	btfss	status,2,c
  6055   001FE0  EFF4  F00F         	goto	u1971
  6056   001FE4  EFF6  F00F         	goto	u1970
  6057   001FE8                     u1971:
  6058   001FE8  EFE3  F00F         	goto	l2666
  6059   001FEC                     u1970:
  6060   001FEC  0012               	return		;funcret
  6061   001FEE                     __end_of_turnLeft90:
  6062                           	callstack 0
  6063                           
  6064 ;; *************** function _turnLeft *****************
  6065 ;; Defined at:
  6066 ;;		line 107 in file "dc_motor.c"
  6067 ;; Parameters:    Size  Location     Type
  6068 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6069 ;;		 -> main@motorL(9), 
  6070 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6071 ;;		 -> main@motorR(9), 
  6072 ;; Auto vars:     Size  Location     Type
  6073 ;;		None
  6074 ;; Return value:  Size  Location     Type
  6075 ;;                  1    wreg      void 
  6076 ;; Registers used:
  6077 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6078 ;; Tracked objects:
  6079 ;;		On entry : 0/0
  6080 ;;		On exit  : 0/0
  6081 ;;		Unchanged: 0/0
  6082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6083 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6085 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6086 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6087 ;;Total ram usage:        6 bytes
  6088 ;; Hardware stack levels used: 1
  6089 ;; Hardware stack levels required when called: 9
  6090 ;; This function calls:
  6091 ;;		_setMotorPWM
  6092 ;; This function is called by:
  6093 ;;		_turnLeft90
  6094 ;;		_turnLeft135
  6095 ;; This function uses a non-reentrant model
  6096 ;;
  6097                           
  6098                           	psect	text32
  6099   0015E0                     __ptext32:
  6100                           	callstack 0
  6101   0015E0                     _turnLeft:
  6102                           	callstack 18
  6103   0015E0                     
  6104                           ;dc_motor.c: 107: void turnLeft(DC_motor *mL, DC_motor *mR);dc_motor.c: 108: {;dc_motor.
      +                          c: 110:     mL->direction = 0;
  6105   0015E0  EE20 F001          	lfsr	2,1
  6106   0015E4  501C               	movf	turnLeft@mL^0,w,c
  6107   0015E6  26D9               	addwf	fsr2l,f,c
  6108   0015E8  501D               	movf	(turnLeft@mL+1)^0,w,c
  6109   0015EA  22DA               	addwfc	fsr2h,f,c
  6110   0015EC  0E00               	movlw	0
  6111   0015EE  6EDF               	movwf	indf2,c
  6112                           
  6113                           ;dc_motor.c: 111:     mL->brakemode = 0;
  6114   0015F0  EE20 F002          	lfsr	2,2
  6115   0015F4  501C               	movf	turnLeft@mL^0,w,c
  6116   0015F6  26D9               	addwf	fsr2l,f,c
  6117   0015F8  501D               	movf	(turnLeft@mL+1)^0,w,c
  6118   0015FA  22DA               	addwfc	fsr2h,f,c
  6119   0015FC  0E00               	movlw	0
  6120   0015FE  6EDF               	movwf	indf2,c
  6121                           
  6122                           ;dc_motor.c: 113:     mR->direction = 1;
  6123   001600  EE20 F001          	lfsr	2,1
  6124   001604  501E               	movf	turnLeft@mR^0,w,c
  6125   001606  26D9               	addwf	fsr2l,f,c
  6126   001608  501F               	movf	(turnLeft@mR+1)^0,w,c
  6127   00160A  22DA               	addwfc	fsr2h,f,c
  6128   00160C  0E01               	movlw	1
  6129   00160E  6EDF               	movwf	indf2,c
  6130                           
  6131                           ;dc_motor.c: 114:     mR->brakemode = 0;
  6132   001610  EE20 F002          	lfsr	2,2
  6133   001614  501E               	movf	turnLeft@mR^0,w,c
  6134   001616  26D9               	addwf	fsr2l,f,c
  6135   001618  501F               	movf	(turnLeft@mR+1)^0,w,c
  6136   00161A  22DA               	addwfc	fsr2h,f,c
  6137   00161C  0E00               	movlw	0
  6138   00161E  6EDF               	movwf	indf2,c
  6139                           
  6140                           ;dc_motor.c: 117:     if(mL->power>75){mL->power=75;}
  6141   001620  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6142   001624  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6143   001628  50DF               	movf	indf2,w,c
  6144   00162A  0A80               	xorlw	128
  6145   00162C  0F34               	addlw	-204
  6146   00162E  A0D8               	btfss	status,0,c
  6147   001630  EF1C  F00B         	goto	u1881
  6148   001634  EF1E  F00B         	goto	u1880
  6149   001638                     u1881:
  6150   001638  EF24  F00B         	goto	l2578
  6151   00163C                     u1880:
  6152   00163C  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6153   001640  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6154   001644  0E4B               	movlw	75
  6155   001646  6EDF               	movwf	indf2,c
  6156   001648                     l2578:
  6157                           
  6158                           ;dc_motor.c: 118:     if(mR->power>75){mR->power=75;}
  6159   001648  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6160   00164C  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6161   001650  50DF               	movf	indf2,w,c
  6162   001652  0A80               	xorlw	128
  6163   001654  0F34               	addlw	-204
  6164   001656  A0D8               	btfss	status,0,c
  6165   001658  EF30  F00B         	goto	u1891
  6166   00165C  EF32  F00B         	goto	u1890
  6167   001660                     u1891:
  6168   001660  EF38  F00B         	goto	l2582
  6169   001664                     u1890:
  6170   001664  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6171   001668  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6172   00166C  0E4B               	movlw	75
  6173   00166E  6EDF               	movwf	indf2,c
  6174   001670                     l2582:
  6175                           
  6176                           ;dc_motor.c: 120:     mL->power = mL->power + 5 ;
  6177   001670  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6178   001674  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6179   001678  50DF               	movf	indf2,w,c
  6180   00167A  0F05               	addlw	5
  6181   00167C  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6182   001680  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6183   001684  6EDF               	movwf	indf2,c
  6184   001686                     
  6185                           ;dc_motor.c: 121:     mR->power = mR->power + 5;
  6186   001686  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6187   00168A  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6188   00168E  50DF               	movf	indf2,w,c
  6189   001690  0F05               	addlw	5
  6190   001692  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6191   001696  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6192   00169A  6EDF               	movwf	indf2,c
  6193   00169C                     
  6194                           ;dc_motor.c: 123:     setMotorPWM(mL);
  6195   00169C  C01C  F016         	movff	turnLeft@mL,setMotorPWM@m
  6196   0016A0  C01D  F017         	movff	turnLeft@mL+1,setMotorPWM@m+1
  6197   0016A4  ECF8  F007         	call	_setMotorPWM	;wreg free
  6198   0016A8                     
  6199                           ;dc_motor.c: 124:     setMotorPWM(mR);
  6200   0016A8  C01E  F016         	movff	turnLeft@mR,setMotorPWM@m
  6201   0016AC  C01F  F017         	movff	turnLeft@mR+1,setMotorPWM@m+1
  6202   0016B0  ECF8  F007         	call	_setMotorPWM	;wreg free
  6203   0016B4                     
  6204                           ;dc_motor.c: 125:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6205   0016B4  0E05               	movlw	5
  6206   0016B6  6E21               	movwf	(??_turnLeft+1)^0,c
  6207   0016B8  0E0F               	movlw	15
  6208   0016BA  6E20               	movwf	??_turnLeft^0,c
  6209   0016BC  0EF1               	movlw	241
  6210   0016BE                     u4187:
  6211   0016BE  2EE8               	decfsz	wreg,f,c
  6212   0016C0  D7FE               	bra	u4187
  6213   0016C2  2E20               	decfsz	??_turnLeft^0,f,c
  6214   0016C4  D7FC               	bra	u4187
  6215   0016C6  2E21               	decfsz	(??_turnLeft+1)^0,f,c
  6216   0016C8  D7FA               	bra	u4187
  6217   0016CA  F000               	nop	
  6218   0016CC  0012               	return		;funcret
  6219   0016CE                     __end_of_turnLeft:
  6220                           	callstack 0
  6221                           
  6222 ;; *************** function _stop *****************
  6223 ;; Defined at:
  6224 ;;		line 87 in file "dc_motor.c"
  6225 ;; Parameters:    Size  Location     Type
  6226 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6227 ;;		 -> main@motorL(9), 
  6228 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6229 ;;		 -> main@motorR(9), 
  6230 ;; Auto vars:     Size  Location     Type
  6231 ;;		None
  6232 ;; Return value:  Size  Location     Type
  6233 ;;                  1    wreg      void 
  6234 ;; Registers used:
  6235 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6236 ;; Tracked objects:
  6237 ;;		On entry : 0/0
  6238 ;;		On exit  : 0/0
  6239 ;;		Unchanged: 0/0
  6240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6241 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6243 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6244 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6245 ;;Total ram usage:        5 bytes
  6246 ;; Hardware stack levels used: 1
  6247 ;; Hardware stack levels required when called: 9
  6248 ;; This function calls:
  6249 ;;		_setMotorPWM
  6250 ;; This function is called by:
  6251 ;;		_turnLeft90
  6252 ;;		_turnRight90
  6253 ;;		_turnRight135
  6254 ;;		_turnLeft135
  6255 ;;		_main
  6256 ;;		_RedInstructions
  6257 ;;		_GreenInstructions
  6258 ;;		_BlueInstructions
  6259 ;;		_YellowInstructions
  6260 ;;		_PinkInstructions
  6261 ;;		_OrangeInstructions
  6262 ;;		_LightBlueInstructions
  6263 ;;		_turn180
  6264 ;; This function uses a non-reentrant model
  6265 ;;
  6266                           
  6267                           	psect	text33
  6268   00187A                     __ptext33:
  6269                           	callstack 0
  6270   00187A                     _stop:
  6271                           	callstack 21
  6272   00187A                     
  6273                           ;dc_motor.c: 87: void stop(DC_motor *mL, DC_motor *mR);dc_motor.c: 88: {;dc_motor.c: 90:
      +                               mL->brakemode = 1;
  6274   00187A  EE20 F002          	lfsr	2,2
  6275   00187E  501C               	movf	stop@mL^0,w,c
  6276   001880  26D9               	addwf	fsr2l,f,c
  6277   001882  501D               	movf	(stop@mL+1)^0,w,c
  6278   001884  22DA               	addwfc	fsr2h,f,c
  6279   001886  0E01               	movlw	1
  6280   001888  6EDF               	movwf	indf2,c
  6281                           
  6282                           ;dc_motor.c: 91:     mR->brakemode = 1;
  6283   00188A  EE20 F002          	lfsr	2,2
  6284   00188E  501E               	movf	stop@mR^0,w,c
  6285   001890  26D9               	addwf	fsr2l,f,c
  6286   001892  501F               	movf	(stop@mR+1)^0,w,c
  6287   001894  22DA               	addwfc	fsr2h,f,c
  6288   001896  0E01               	movlw	1
  6289   001898  6EDF               	movwf	indf2,c
  6290                           
  6291                           ;dc_motor.c: 93:     if(mL->power<0){mL->power=0;}
  6292   00189A  C01C  FFD9         	movff	stop@mL,fsr2l
  6293   00189E  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6294   0018A2  0E00               	movlw	0
  6295   0018A4  BEDB               	btfsc	plusw2,7,c
  6296   0018A6  EF59  F00C         	goto	u1860
  6297   0018AA  EF57  F00C         	goto	u1861
  6298   0018AE                     u1861:
  6299   0018AE  EF5F  F00C         	goto	l2560
  6300   0018B2                     u1860:
  6301   0018B2  C01C  FFD9         	movff	stop@mL,fsr2l
  6302   0018B6  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6303   0018BA  0E00               	movlw	0
  6304   0018BC  6EDF               	movwf	indf2,c
  6305   0018BE                     l2560:
  6306                           
  6307                           ;dc_motor.c: 94:     if(mR->power<0){mR->power=0;}
  6308   0018BE  C01E  FFD9         	movff	stop@mR,fsr2l
  6309   0018C2  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6310   0018C6  0E00               	movlw	0
  6311   0018C8  BEDB               	btfsc	plusw2,7,c
  6312   0018CA  EF6B  F00C         	goto	u1870
  6313   0018CE  EF69  F00C         	goto	u1871
  6314   0018D2                     u1871:
  6315   0018D2  EF71  F00C         	goto	l2564
  6316   0018D6                     u1870:
  6317   0018D6  C01E  FFD9         	movff	stop@mR,fsr2l
  6318   0018DA  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6319   0018DE  0E00               	movlw	0
  6320   0018E0  6EDF               	movwf	indf2,c
  6321   0018E2                     l2564:
  6322                           
  6323                           ;dc_motor.c: 96:     mL->power = mL->power - 5 ;
  6324   0018E2  C01C  FFD9         	movff	stop@mL,fsr2l
  6325   0018E6  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6326   0018EA  50DF               	movf	indf2,w,c
  6327   0018EC  0FFB               	addlw	251
  6328   0018EE  C01C  FFD9         	movff	stop@mL,fsr2l
  6329   0018F2  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6330   0018F6  6EDF               	movwf	indf2,c
  6331   0018F8                     
  6332                           ;dc_motor.c: 97:     mR->power = mR->power - 5;
  6333   0018F8  C01E  FFD9         	movff	stop@mR,fsr2l
  6334   0018FC  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6335   001900  50DF               	movf	indf2,w,c
  6336   001902  0FFB               	addlw	251
  6337   001904  C01E  FFD9         	movff	stop@mR,fsr2l
  6338   001908  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6339   00190C  6EDF               	movwf	indf2,c
  6340                           
  6341                           ;dc_motor.c: 99:     mL->power = 0;
  6342   00190E  C01C  FFD9         	movff	stop@mL,fsr2l
  6343   001912  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6344   001916  0E00               	movlw	0
  6345   001918  6EDF               	movwf	indf2,c
  6346                           
  6347                           ;dc_motor.c: 100:     mR->power = 0;
  6348   00191A  C01E  FFD9         	movff	stop@mR,fsr2l
  6349   00191E  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6350   001922  0E00               	movlw	0
  6351   001924  6EDF               	movwf	indf2,c
  6352   001926                     
  6353                           ;dc_motor.c: 101:     setMotorPWM(mL);
  6354   001926  C01C  F016         	movff	stop@mL,setMotorPWM@m
  6355   00192A  C01D  F017         	movff	stop@mL+1,setMotorPWM@m+1
  6356   00192E  ECF8  F007         	call	_setMotorPWM	;wreg free
  6357   001932                     
  6358                           ;dc_motor.c: 102:     setMotorPWM(mR);
  6359   001932  C01E  F016         	movff	stop@mR,setMotorPWM@m
  6360   001936  C01F  F017         	movff	stop@mR+1,setMotorPWM@m+1
  6361   00193A  ECF8  F007         	call	_setMotorPWM	;wreg free
  6362   00193E                     
  6363                           ;dc_motor.c: 103:     _delay((unsigned long)((10)*(64000000/4000.0)));
  6364   00193E  0ED0               	movlw	208
  6365   001940  6E20               	movwf	??_stop^0,c
  6366   001942  0ECA               	movlw	202
  6367   001944                     u4197:
  6368   001944  2EE8               	decfsz	wreg,f,c
  6369   001946  D7FE               	bra	u4197
  6370   001948  2E20               	decfsz	??_stop^0,f,c
  6371   00194A  D7FC               	bra	u4197
  6372   00194C  0012               	return		;funcret
  6373   00194E                     __end_of_stop:
  6374                           	callstack 0
  6375                           
  6376 ;; *************** function _fullSpeedBackwards *****************
  6377 ;; Defined at:
  6378 ;;		line 174 in file "dc_motor.c"
  6379 ;; Parameters:    Size  Location     Type
  6380 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6381 ;;		 -> main@motorL(9), 
  6382 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6383 ;;		 -> main@motorR(9), 
  6384 ;; Auto vars:     Size  Location     Type
  6385 ;;		None
  6386 ;; Return value:  Size  Location     Type
  6387 ;;                  1    wreg      void 
  6388 ;; Registers used:
  6389 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6390 ;; Tracked objects:
  6391 ;;		On entry : 0/0
  6392 ;;		On exit  : 0/0
  6393 ;;		Unchanged: 0/0
  6394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6395 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6397 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6398 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6399 ;;Total ram usage:        6 bytes
  6400 ;; Hardware stack levels used: 1
  6401 ;; Hardware stack levels required when called: 9
  6402 ;; This function calls:
  6403 ;;		_setMotorPWM
  6404 ;; This function is called by:
  6405 ;;		_RedInstructions
  6406 ;;		_GreenInstructions
  6407 ;;		_BlueInstructions
  6408 ;;		_YellowInstructions
  6409 ;;		_PinkInstructions
  6410 ;;		_OrangeInstructions
  6411 ;;		_LightBlueInstructions
  6412 ;; This function uses a non-reentrant model
  6413 ;;
  6414                           
  6415                           	psect	text34
  6416   0017A4                     __ptext34:
  6417                           	callstack 0
  6418   0017A4                     _fullSpeedBackwards:
  6419                           	callstack 19
  6420   0017A4                     
  6421                           ;dc_motor.c: 177:     mL->direction = 0;
  6422   0017A4  EE20 F001          	lfsr	2,1
  6423   0017A8  501C               	movf	fullSpeedBackwards@mL^0,w,c
  6424   0017AA  26D9               	addwf	fsr2l,f,c
  6425   0017AC  501D               	movf	(fullSpeedBackwards@mL+1)^0,w,c
  6426   0017AE  22DA               	addwfc	fsr2h,f,c
  6427   0017B0  0E00               	movlw	0
  6428   0017B2  6EDF               	movwf	indf2,c
  6429                           
  6430                           ;dc_motor.c: 178:     mL->brakemode = 0;
  6431   0017B4  EE20 F002          	lfsr	2,2
  6432   0017B8  501C               	movf	fullSpeedBackwards@mL^0,w,c
  6433   0017BA  26D9               	addwf	fsr2l,f,c
  6434   0017BC  501D               	movf	(fullSpeedBackwards@mL+1)^0,w,c
  6435   0017BE  22DA               	addwfc	fsr2h,f,c
  6436   0017C0  0E00               	movlw	0
  6437   0017C2  6EDF               	movwf	indf2,c
  6438                           
  6439                           ;dc_motor.c: 180:     mR->direction = 0;
  6440   0017C4  EE20 F001          	lfsr	2,1
  6441   0017C8  501E               	movf	fullSpeedBackwards@mR^0,w,c
  6442   0017CA  26D9               	addwf	fsr2l,f,c
  6443   0017CC  501F               	movf	(fullSpeedBackwards@mR+1)^0,w,c
  6444   0017CE  22DA               	addwfc	fsr2h,f,c
  6445   0017D0  0E00               	movlw	0
  6446   0017D2  6EDF               	movwf	indf2,c
  6447                           
  6448                           ;dc_motor.c: 181:     mR->brakemode = 0;
  6449   0017D4  EE20 F002          	lfsr	2,2
  6450   0017D8  501E               	movf	fullSpeedBackwards@mR^0,w,c
  6451   0017DA  26D9               	addwf	fsr2l,f,c
  6452   0017DC  501F               	movf	(fullSpeedBackwards@mR+1)^0,w,c
  6453   0017DE  22DA               	addwfc	fsr2h,f,c
  6454   0017E0  0E00               	movlw	0
  6455   0017E2  6EDF               	movwf	indf2,c
  6456                           
  6457                           ;dc_motor.c: 184:     if(mL->power>50){mL->power=50;}
  6458   0017E4  C01C  FFD9         	movff	fullSpeedBackwards@mL,fsr2l
  6459   0017E8  C01D  FFDA         	movff	fullSpeedBackwards@mL+1,fsr2h
  6460   0017EC  50DF               	movf	indf2,w,c
  6461   0017EE  0A80               	xorlw	128
  6462   0017F0  0F4D               	addlw	-179
  6463   0017F2  A0D8               	btfss	status,0,c
  6464   0017F4  EFFE  F00B         	goto	u1941
  6465   0017F8  EF00  F00C         	goto	u1940
  6466   0017FC                     u1941:
  6467   0017FC  EF06  F00C         	goto	l2644
  6468   001800                     u1940:
  6469   001800  C01C  FFD9         	movff	fullSpeedBackwards@mL,fsr2l
  6470   001804  C01D  FFDA         	movff	fullSpeedBackwards@mL+1,fsr2h
  6471   001808  0E32               	movlw	50
  6472   00180A  6EDF               	movwf	indf2,c
  6473   00180C                     l2644:
  6474                           
  6475                           ;dc_motor.c: 185:     if(mR->power>50){mR->power=50;}
  6476   00180C  C01E  FFD9         	movff	fullSpeedBackwards@mR,fsr2l
  6477   001810  C01F  FFDA         	movff	fullSpeedBackwards@mR+1,fsr2h
  6478   001814  50DF               	movf	indf2,w,c
  6479   001816  0A80               	xorlw	128
  6480   001818  0F4D               	addlw	-179
  6481   00181A  A0D8               	btfss	status,0,c
  6482   00181C  EF12  F00C         	goto	u1951
  6483   001820  EF14  F00C         	goto	u1950
  6484   001824                     u1951:
  6485   001824  EF1A  F00C         	goto	l2648
  6486   001828                     u1950:
  6487   001828  C01E  FFD9         	movff	fullSpeedBackwards@mR,fsr2l
  6488   00182C  C01F  FFDA         	movff	fullSpeedBackwards@mR+1,fsr2h
  6489   001830  0E32               	movlw	50
  6490   001832  6EDF               	movwf	indf2,c
  6491   001834                     l2648:
  6492                           
  6493                           ;dc_motor.c: 187:     ++mL->power;
  6494   001834  C01C  FFD9         	movff	fullSpeedBackwards@mL,fsr2l
  6495   001838  C01D  FFDA         	movff	fullSpeedBackwards@mL+1,fsr2h
  6496   00183C  2ADF               	incf	indf2,f,c
  6497   00183E                     
  6498                           ;dc_motor.c: 188:     ++mR->power;
  6499   00183E  C01E  FFD9         	movff	fullSpeedBackwards@mR,fsr2l
  6500   001842  C01F  FFDA         	movff	fullSpeedBackwards@mR+1,fsr2h
  6501   001846  2ADF               	incf	indf2,f,c
  6502   001848                     
  6503                           ;dc_motor.c: 190:     setMotorPWM(mL);
  6504   001848  C01C  F016         	movff	fullSpeedBackwards@mL,setMotorPWM@m
  6505   00184C  C01D  F017         	movff	fullSpeedBackwards@mL+1,setMotorPWM@m+1
  6506   001850  ECF8  F007         	call	_setMotorPWM	;wreg free
  6507   001854                     
  6508                           ;dc_motor.c: 191:     setMotorPWM(mR);
  6509   001854  C01E  F016         	movff	fullSpeedBackwards@mR,setMotorPWM@m
  6510   001858  C01F  F017         	movff	fullSpeedBackwards@mR+1,setMotorPWM@m+1
  6511   00185C  ECF8  F007         	call	_setMotorPWM	;wreg free
  6512   001860                     
  6513                           ;dc_motor.c: 192:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6514   001860  0E05               	movlw	5
  6515   001862  6E21               	movwf	(??_fullSpeedBackwards+1)^0,c
  6516   001864  0E0F               	movlw	15
  6517   001866  6E20               	movwf	??_fullSpeedBackwards^0,c
  6518   001868  0EF1               	movlw	241
  6519   00186A                     u4207:
  6520   00186A  2EE8               	decfsz	wreg,f,c
  6521   00186C  D7FE               	bra	u4207
  6522   00186E  2E20               	decfsz	??_fullSpeedBackwards^0,f,c
  6523   001870  D7FC               	bra	u4207
  6524   001872  2E21               	decfsz	(??_fullSpeedBackwards+1)^0,f,c
  6525   001874  D7FA               	bra	u4207
  6526   001876  F000               	nop	
  6527   001878  0012               	return		;funcret
  6528   00187A                     __end_of_fullSpeedBackwards:
  6529                           	callstack 0
  6530                           
  6531 ;; *************** function _setMotorPWM *****************
  6532 ;; Defined at:
  6533 ;;		line 64 in file "dc_motor.c"
  6534 ;; Parameters:    Size  Location     Type
  6535 ;;  m               2   21[COMRAM] PTR struct DC_motor
  6536 ;;		 -> main@motorR(9), main@motorL(9), 
  6537 ;; Auto vars:     Size  Location     Type
  6538 ;;  negDuty         1   26[COMRAM] unsigned char 
  6539 ;;  posDuty         1   25[COMRAM] unsigned char 
  6540 ;; Return value:  Size  Location     Type
  6541 ;;                  1    wreg      void 
  6542 ;; Registers used:
  6543 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6544 ;; Tracked objects:
  6545 ;;		On entry : 0/0
  6546 ;;		On exit  : 0/0
  6547 ;;		Unchanged: 0/0
  6548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6549 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6550 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6551 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6552 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6553 ;;Total ram usage:        6 bytes
  6554 ;; Hardware stack levels used: 1
  6555 ;; Hardware stack levels required when called: 8
  6556 ;; This function calls:
  6557 ;;		___lwdiv
  6558 ;;		___wmul
  6559 ;; This function is called by:
  6560 ;;		_stop
  6561 ;;		_turnLeft
  6562 ;;		_turnRight
  6563 ;;		_fullSpeedAhead
  6564 ;;		_fullSpeedBackwards
  6565 ;; This function uses a non-reentrant model
  6566 ;;
  6567                           
  6568                           	psect	text35
  6569   000FF0                     __ptext35:
  6570                           	callstack 0
  6571   000FF0                     _setMotorPWM:
  6572                           	callstack 21
  6573   000FF0                     
  6574                           ;dc_motor.c: 64: void setMotorPWM(DC_motor *m);dc_motor.c: 65: {;dc_motor.c: 66:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 68:     if(m->brakemode) {
  6575   000FF0  EE20 F002          	lfsr	2,2
  6576   000FF4  5016               	movf	setMotorPWM@m^0,w,c
  6577   000FF6  26D9               	addwf	fsr2l,f,c
  6578   000FF8  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6579   000FFA  22DA               	addwfc	fsr2h,f,c
  6580   000FFC  50DF               	movf	indf2,w,c
  6581   000FFE  B4D8               	btfsc	status,2,c
  6582   001000  EF04  F008         	goto	u1821
  6583   001004  EF06  F008         	goto	u1820
  6584   001008                     u1821:
  6585   001008  EF3A  F008         	goto	l2540
  6586   00100C                     u1820:
  6587   00100C                     
  6588                           ;dc_motor.c: 69:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  6589   00100C  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  6590   001010  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  6591   001014  50DF               	movf	indf2,w,c
  6592   001016  6E09               	movwf	___wmul@multiplier^0,c
  6593   001018  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  6594   00101A  BE09               	btfsc	___wmul@multiplier^0,7,c
  6595   00101C  060A               	decf	(___wmul@multiplier+1)^0,f,c
  6596   00101E  EE20 F003          	lfsr	2,3
  6597   001022  5016               	movf	setMotorPWM@m^0,w,c
  6598   001024  26D9               	addwf	fsr2l,f,c
  6599   001026  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6600   001028  22DA               	addwfc	fsr2h,f,c
  6601   00102A  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  6602   00102E  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  6603   001032  EC80  F011         	call	___wmul	;wreg free
  6604   001036  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  6605   00103A  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  6606   00103E  0E00               	movlw	0
  6607   001040  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  6608   001042  0E64               	movlw	100
  6609   001044  6E11               	movwf	___lwdiv@divisor^0,c
  6610   001046  ECDA  F00E         	call	___lwdiv	;wreg free
  6611   00104A  EE20 F003          	lfsr	2,3
  6612   00104E  5016               	movf	setMotorPWM@m^0,w,c
  6613   001050  26D9               	addwf	fsr2l,f,c
  6614   001052  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6615   001054  22DA               	addwfc	fsr2h,f,c
  6616   001056  50DF               	movf	indf2,w,c
  6617   001058  6E18               	movwf	??_setMotorPWM^0,c
  6618   00105A  500F               	movf	?___lwdiv^0,w,c
  6619   00105C  5C18               	subwf	??_setMotorPWM^0,w,c
  6620   00105E  6E1A               	movwf	setMotorPWM@posDuty^0,c
  6621   001060                     
  6622                           ;dc_motor.c: 70:         negDuty=m->PWMperiod;
  6623   001060  EE20 F003          	lfsr	2,3
  6624   001064  5016               	movf	setMotorPWM@m^0,w,c
  6625   001066  26D9               	addwf	fsr2l,f,c
  6626   001068  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6627   00106A  22DA               	addwfc	fsr2h,f,c
  6628   00106C  50DF               	movf	indf2,w,c
  6629   00106E  6E1B               	movwf	setMotorPWM@negDuty^0,c
  6630                           
  6631                           ;dc_motor.c: 71:     }
  6632   001070  EF5D  F008         	goto	l2544
  6633   001074                     l2540:
  6634                           
  6635                           ;dc_motor.c: 73:         posDuty=0;
  6636   001074  0E00               	movlw	0
  6637   001076  6E1A               	movwf	setMotorPWM@posDuty^0,c
  6638   001078                     
  6639                           ;dc_motor.c: 74:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  6640   001078  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  6641   00107C  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  6642   001080  50DF               	movf	indf2,w,c
  6643   001082  6E09               	movwf	___wmul@multiplier^0,c
  6644   001084  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  6645   001086  BE09               	btfsc	___wmul@multiplier^0,7,c
  6646   001088  060A               	decf	(___wmul@multiplier+1)^0,f,c
  6647   00108A  EE20 F003          	lfsr	2,3
  6648   00108E  5016               	movf	setMotorPWM@m^0,w,c
  6649   001090  26D9               	addwf	fsr2l,f,c
  6650   001092  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6651   001094  22DA               	addwfc	fsr2h,f,c
  6652   001096  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  6653   00109A  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  6654   00109E  EC80  F011         	call	___wmul	;wreg free
  6655   0010A2  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  6656   0010A6  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  6657   0010AA  0E00               	movlw	0
  6658   0010AC  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  6659   0010AE  0E64               	movlw	100
  6660   0010B0  6E11               	movwf	___lwdiv@divisor^0,c
  6661   0010B2  ECDA  F00E         	call	___lwdiv	;wreg free
  6662   0010B6  500F               	movf	?___lwdiv^0,w,c
  6663   0010B8  6E1B               	movwf	setMotorPWM@negDuty^0,c
  6664   0010BA                     l2544:
  6665                           
  6666                           ;dc_motor.c: 77:     if (m->direction) {
  6667   0010BA  EE20 F001          	lfsr	2,1
  6668   0010BE  5016               	movf	setMotorPWM@m^0,w,c
  6669   0010C0  26D9               	addwf	fsr2l,f,c
  6670   0010C2  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6671   0010C4  22DA               	addwfc	fsr2h,f,c
  6672   0010C6  50DF               	movf	indf2,w,c
  6673   0010C8  B4D8               	btfsc	status,2,c
  6674   0010CA  EF69  F008         	goto	u1831
  6675   0010CE  EF6B  F008         	goto	u1830
  6676   0010D2                     u1831:
  6677   0010D2  EF8D  F008         	goto	l2548
  6678   0010D6                     u1830:
  6679   0010D6                     
  6680                           ;dc_motor.c: 78:         *(m->posDutyHighByte)=posDuty;
  6681   0010D6  EE20 F005          	lfsr	2,5
  6682   0010DA  5016               	movf	setMotorPWM@m^0,w,c
  6683   0010DC  26D9               	addwf	fsr2l,f,c
  6684   0010DE  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6685   0010E0  22DA               	addwfc	fsr2h,f,c
  6686   0010E2  CFDE F018          	movff	postinc2,??_setMotorPWM
  6687   0010E6  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  6688   0010EA  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  6689   0010EE  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  6690   0010F2  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  6691                           
  6692                           ;dc_motor.c: 79:         *(m->negDutyHighByte)=negDuty;
  6693   0010F6  EE20 F007          	lfsr	2,7
  6694   0010FA  5016               	movf	setMotorPWM@m^0,w,c
  6695   0010FC  26D9               	addwf	fsr2l,f,c
  6696   0010FE  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6697   001100  22DA               	addwfc	fsr2h,f,c
  6698   001102  CFDE F018          	movff	postinc2,??_setMotorPWM
  6699   001106  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  6700   00110A  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  6701   00110E  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  6702   001112  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  6703                           
  6704                           ;dc_motor.c: 80:     } else {
  6705   001116  EFAD  F008         	goto	l188
  6706   00111A                     l2548:
  6707                           
  6708                           ;dc_motor.c: 81:         *(m->posDutyHighByte)=negDuty;
  6709   00111A  EE20 F005          	lfsr	2,5
  6710   00111E  5016               	movf	setMotorPWM@m^0,w,c
  6711   001120  26D9               	addwf	fsr2l,f,c
  6712   001122  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6713   001124  22DA               	addwfc	fsr2h,f,c
  6714   001126  CFDE F018          	movff	postinc2,??_setMotorPWM
  6715   00112A  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  6716   00112E  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  6717   001132  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  6718   001136  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  6719                           
  6720                           ;dc_motor.c: 82:         *(m->negDutyHighByte)=posDuty;
  6721   00113A  EE20 F007          	lfsr	2,7
  6722   00113E  5016               	movf	setMotorPWM@m^0,w,c
  6723   001140  26D9               	addwf	fsr2l,f,c
  6724   001142  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6725   001144  22DA               	addwfc	fsr2h,f,c
  6726   001146  CFDE F018          	movff	postinc2,??_setMotorPWM
  6727   00114A  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  6728   00114E  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  6729   001152  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  6730   001156  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  6731   00115A                     l188:
  6732   00115A  0012               	return		;funcret
  6733   00115C                     __end_of_setMotorPWM:
  6734                           	callstack 0
  6735                           
  6736 ;; *************** function ___wmul *****************
  6737 ;; Defined at:
  6738 ;;		line 15 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\Umul16.c"
  6739 ;; Parameters:    Size  Location     Type
  6740 ;;  multiplier      2    8[COMRAM] unsigned int 
  6741 ;;  multiplicand    2   10[COMRAM] unsigned int 
  6742 ;; Auto vars:     Size  Location     Type
  6743 ;;  product         2   12[COMRAM] unsigned int 
  6744 ;; Return value:  Size  Location     Type
  6745 ;;                  2    8[COMRAM] unsigned int 
  6746 ;; Registers used:
  6747 ;;		wreg, status,2, status,0, prodl, prodh
  6748 ;; Tracked objects:
  6749 ;;		On entry : 0/0
  6750 ;;		On exit  : 0/0
  6751 ;;		Unchanged: 0/0
  6752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6753 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6754 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6756 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6757 ;;Total ram usage:        6 bytes
  6758 ;; Hardware stack levels used: 1
  6759 ;; Hardware stack levels required when called: 7
  6760 ;; This function calls:
  6761 ;;		Nothing
  6762 ;; This function is called by:
  6763 ;;		_setMotorPWM
  6764 ;; This function uses a non-reentrant model
  6765 ;;
  6766                           
  6767                           	psect	text36
  6768   002300                     __ptext36:
  6769                           	callstack 0
  6770   002300                     ___wmul:
  6771                           	callstack 21
  6772   002300  5009               	movf	___wmul@multiplier^0,w,c
  6773   002302  020B               	mulwf	___wmul@multiplicand^0,c
  6774   002304  CFF3 F00D          	movff	prodl,___wmul@product
  6775   002308  CFF4 F00E          	movff	prodh,___wmul@product+1
  6776   00230C  5009               	movf	___wmul@multiplier^0,w,c
  6777   00230E  020C               	mulwf	(___wmul@multiplicand+1)^0,c
  6778   002310  50F3               	movf	243,w,c
  6779   002312  260E               	addwf	(___wmul@product+1)^0,f,c
  6780   002314  500A               	movf	(___wmul@multiplier+1)^0,w,c
  6781   002316  020B               	mulwf	___wmul@multiplicand^0,c
  6782   002318  50F3               	movf	243,w,c
  6783   00231A  260E               	addwf	(___wmul@product+1)^0,f,c
  6784   00231C  C00D  F009         	movff	___wmul@product,?___wmul
  6785   002320  C00E  F00A         	movff	___wmul@product+1,?___wmul+1
  6786   002324  0012               	return		;funcret
  6787   002326                     __end_of___wmul:
  6788                           	callstack 0
  6789                           
  6790 ;; *************** function ___lwdiv *****************
  6791 ;; Defined at:
  6792 ;;		line 7 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\lwdiv.c"
  6793 ;; Parameters:    Size  Location     Type
  6794 ;;  dividend        2   14[COMRAM] unsigned int 
  6795 ;;  divisor         2   16[COMRAM] unsigned int 
  6796 ;; Auto vars:     Size  Location     Type
  6797 ;;  quotient        2   18[COMRAM] unsigned int 
  6798 ;;  counter         1   20[COMRAM] unsigned char 
  6799 ;; Return value:  Size  Location     Type
  6800 ;;                  2   14[COMRAM] unsigned int 
  6801 ;; Registers used:
  6802 ;;		wreg, status,2, status,0
  6803 ;; Tracked objects:
  6804 ;;		On entry : 0/0
  6805 ;;		On exit  : 0/0
  6806 ;;		Unchanged: 0/0
  6807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6808 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6809 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6811 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6812 ;;Total ram usage:        7 bytes
  6813 ;; Hardware stack levels used: 1
  6814 ;; Hardware stack levels required when called: 7
  6815 ;; This function calls:
  6816 ;;		Nothing
  6817 ;; This function is called by:
  6818 ;;		_setMotorPWM
  6819 ;; This function uses a non-reentrant model
  6820 ;;
  6821                           
  6822                           	psect	text37
  6823   001DB4                     __ptext37:
  6824                           	callstack 0
  6825   001DB4                     ___lwdiv:
  6826                           	callstack 21
  6827   001DB4  0E00               	movlw	0
  6828   001DB6  6E14               	movwf	(___lwdiv@quotient+1)^0,c
  6829   001DB8  0E00               	movlw	0
  6830   001DBA  6E13               	movwf	___lwdiv@quotient^0,c
  6831   001DBC  5011               	movf	___lwdiv@divisor^0,w,c
  6832   001DBE  1012               	iorwf	(___lwdiv@divisor+1)^0,w,c
  6833   001DC0  B4D8               	btfsc	status,2,c
  6834   001DC2  EFE5  F00E         	goto	u1791
  6835   001DC6  EFE7  F00E         	goto	u1790
  6836   001DCA                     u1791:
  6837   001DCA  EF0F  F00F         	goto	l1098
  6838   001DCE                     u1790:
  6839   001DCE  0E01               	movlw	1
  6840   001DD0  6E15               	movwf	___lwdiv@counter^0,c
  6841   001DD2  EFEF  F00E         	goto	l2508
  6842   001DD6                     l2506:
  6843   001DD6  90D8               	bcf	status,0,c
  6844   001DD8  3611               	rlcf	___lwdiv@divisor^0,f,c
  6845   001DDA  3612               	rlcf	(___lwdiv@divisor+1)^0,f,c
  6846   001DDC  2A15               	incf	___lwdiv@counter^0,f,c
  6847   001DDE                     l2508:
  6848   001DDE  AE12               	btfss	(___lwdiv@divisor+1)^0,7,c
  6849   001DE0  EFF4  F00E         	goto	u1801
  6850   001DE4  EFF6  F00E         	goto	u1800
  6851   001DE8                     u1801:
  6852   001DE8  EFEB  F00E         	goto	l2506
  6853   001DEC                     u1800:
  6854   001DEC                     l2510:
  6855   001DEC  90D8               	bcf	status,0,c
  6856   001DEE  3613               	rlcf	___lwdiv@quotient^0,f,c
  6857   001DF0  3614               	rlcf	(___lwdiv@quotient+1)^0,f,c
  6858   001DF2  5011               	movf	___lwdiv@divisor^0,w,c
  6859   001DF4  5C0F               	subwf	___lwdiv@dividend^0,w,c
  6860   001DF6  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  6861   001DF8  5810               	subwfb	(___lwdiv@dividend+1)^0,w,c
  6862   001DFA  A0D8               	btfss	status,0,c
  6863   001DFC  EF02  F00F         	goto	u1811
  6864   001E00  EF04  F00F         	goto	u1810
  6865   001E04                     u1811:
  6866   001E04  EF09  F00F         	goto	l2518
  6867   001E08                     u1810:
  6868   001E08  5011               	movf	___lwdiv@divisor^0,w,c
  6869   001E0A  5E0F               	subwf	___lwdiv@dividend^0,f,c
  6870   001E0C  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  6871   001E0E  5A10               	subwfb	(___lwdiv@dividend+1)^0,f,c
  6872   001E10  8013               	bsf	___lwdiv@quotient^0,0,c
  6873   001E12                     l2518:
  6874   001E12  90D8               	bcf	status,0,c
  6875   001E14  3212               	rrcf	(___lwdiv@divisor+1)^0,f,c
  6876   001E16  3211               	rrcf	___lwdiv@divisor^0,f,c
  6877   001E18  2E15               	decfsz	___lwdiv@counter^0,f,c
  6878   001E1A  EFF6  F00E         	goto	l2510
  6879   001E1E                     l1098:
  6880   001E1E  C013  F00F         	movff	___lwdiv@quotient,?___lwdiv
  6881   001E22  C014  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6882   001E26  0012               	return		;funcret
  6883   001E28                     __end_of___lwdiv:
  6884                           	callstack 0
  6885                           
  6886 ;; *************** function _LED_init *****************
  6887 ;; Defined at:
  6888 ;;		line 7 in file "LED_Buttons.c"
  6889 ;; Parameters:    Size  Location     Type
  6890 ;;		None
  6891 ;; Auto vars:     Size  Location     Type
  6892 ;;		None
  6893 ;; Return value:  Size  Location     Type
  6894 ;;                  1    wreg      void 
  6895 ;; Registers used:
  6896 ;;		None
  6897 ;; Tracked objects:
  6898 ;;		On entry : 0/0
  6899 ;;		On exit  : 0/0
  6900 ;;		Unchanged: 0/0
  6901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6905 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6906 ;;Total ram usage:        0 bytes
  6907 ;; Hardware stack levels used: 1
  6908 ;; Hardware stack levels required when called: 7
  6909 ;; This function calls:
  6910 ;;		Nothing
  6911 ;; This function is called by:
  6912 ;;		_main
  6913 ;; This function uses a non-reentrant model
  6914 ;;
  6915                           
  6916                           	psect	text38
  6917   002402                     __ptext38:
  6918                           	callstack 0
  6919   002402                     _LED_init:
  6920                           	callstack 23
  6921   002402                     
  6922                           ;LED_Buttons.c: 8:     TRISGbits.TRISG1 = 0;
  6923   002402  9287               	bcf	135,1,c	;volatile
  6924                           
  6925                           ;LED_Buttons.c: 9:     TRISAbits.TRISA4 = 0;
  6926   002404  9881               	bcf	129,4,c	;volatile
  6927                           
  6928                           ;LED_Buttons.c: 10:     TRISFbits.TRISF7 = 0;
  6929   002406  9E86               	bcf	134,7,c	;volatile
  6930                           
  6931                           ;LED_Buttons.c: 12:     LATHbits.LATH3 = 0;
  6932   002408  9680               	bcf	128,3,c	;volatile
  6933                           
  6934                           ;LED_Buttons.c: 13:     TRISHbits.TRISH3 = 0;
  6935   00240A  9688               	bcf	136,3,c	;volatile
  6936   00240C  0012               	return		;funcret
  6937   00240E                     __end_of_LED_init:
  6938                           	callstack 0
  6939                           
  6940 ;; *************** function _Interrupts_init *****************
  6941 ;; Defined at:
  6942 ;;		line 12 in file "interrupts.c"
  6943 ;; Parameters:    Size  Location     Type
  6944 ;;		None
  6945 ;; Auto vars:     Size  Location     Type
  6946 ;;		None
  6947 ;; Return value:  Size  Location     Type
  6948 ;;                  1    wreg      void 
  6949 ;; Registers used:
  6950 ;;		wreg, status,2, status,0, cstack
  6951 ;; Tracked objects:
  6952 ;;		On entry : 0/0
  6953 ;;		On exit  : 0/0
  6954 ;;		Unchanged: 0/0
  6955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6960 ;;Total ram usage:        0 bytes
  6961 ;; Hardware stack levels used: 1
  6962 ;; Hardware stack levels required when called: 12
  6963 ;; This function calls:
  6964 ;;		_interrupts_clear_colorclick
  6965 ;; This function is called by:
  6966 ;;		_main
  6967 ;; This function uses a non-reentrant model
  6968 ;;
  6969                           
  6970                           	psect	text39
  6971   002326                     __ptext39:
  6972                           	callstack 0
  6973   002326                     _Interrupts_init:
  6974                           	callstack 18
  6975   002326                     
  6976                           ;interrupts.c: 18:     TRISBbits.TRISB1 = 1;
  6977   002326  8282               	bsf	130,1,c	;volatile
  6978                           
  6979                           ;interrupts.c: 19:     ANSELBbits.ANSELB1 = 0;
  6980   002328  010E               	movlb	14	; () banked
  6981   00232A  939A               	bcf	154,1,b	;volatile
  6982   00232C                     
  6983                           ; BSR set to: 14
  6984                           ;interrupts.c: 20:     INT1PPS = 0x09;
  6985   00232C  0E09               	movlw	9
  6986   00232E  010D               	movlb	13	; () banked
  6987   002330  6FF1               	movwf	241,b	;volatile
  6988   002332                     
  6989                           ; BSR set to: 13
  6990                           ;interrupts.c: 21:     PIE0bits.INT1IE = 1;
  6991   002332  010E               	movlb	14	; () banked
  6992   002334  8329               	bsf	41,1,b	;volatile
  6993   002336                     
  6994                           ; BSR set to: 14
  6995                           ;interrupts.c: 22:     IPR0bits.INT1IP = 1;
  6996   002336  831F               	bsf	31,1,b	;volatile
  6997   002338                     
  6998                           ; BSR set to: 14
  6999                           ;interrupts.c: 23:     INTCONbits.INT1EDG = 0;
  7000   002338  92F2               	bcf	242,1,c	;volatile
  7001   00233A                     
  7002                           ; BSR set to: 14
  7003                           ;interrupts.c: 26:     PIE0bits.TMR0IE=1;
  7004   00233A  8B29               	bsf	41,5,b	;volatile
  7005   00233C                     
  7006                           ; BSR set to: 14
  7007                           ;interrupts.c: 27:     IPR0bits.TMR0IP = 0;
  7008   00233C  9B1F               	bcf	31,5,b	;volatile
  7009   00233E                     
  7010                           ; BSR set to: 14
  7011                           ;interrupts.c: 30:     PIE4bits.RC4IE=1;
  7012   00233E  872D               	bsf	45,3,b	;volatile
  7013   002340                     
  7014                           ; BSR set to: 14
  7015                           ;interrupts.c: 32:     interrupts_clear_colorclick();
  7016   002340  ECE7  F011         	call	_interrupts_clear_colorclick	;wreg free
  7017   002344                     
  7018                           ;interrupts.c: 34:     INTCONbits.IPEN = 1;
  7019   002344  8AF2               	bsf	242,5,c	;volatile
  7020   002346                     
  7021                           ;interrupts.c: 35:     INTCONbits.PEIE = 1;
  7022   002346  8CF2               	bsf	242,6,c	;volatile
  7023   002348                     
  7024                           ;interrupts.c: 36:     INTCONbits.GIE=1;
  7025   002348  8EF2               	bsf	242,7,c	;volatile
  7026   00234A  0012               	return		;funcret
  7027   00234C                     __end_of_Interrupts_init:
  7028                           	callstack 0
  7029                           
  7030 ;; *************** function _interrupts_clear_colorclick *****************
  7031 ;; Defined at:
  7032 ;;		line 57 in file "interrupts.c"
  7033 ;; Parameters:    Size  Location     Type
  7034 ;;		None
  7035 ;; Auto vars:     Size  Location     Type
  7036 ;;		None
  7037 ;; Return value:  Size  Location     Type
  7038 ;;                  1    wreg      void 
  7039 ;; Registers used:
  7040 ;;		wreg, status,2, status,0, cstack
  7041 ;; Tracked objects:
  7042 ;;		On entry : 0/0
  7043 ;;		On exit  : 0/0
  7044 ;;		Unchanged: 0/0
  7045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7050 ;;Total ram usage:        0 bytes
  7051 ;; Hardware stack levels used: 1
  7052 ;; Hardware stack levels required when called: 11
  7053 ;; This function calls:
  7054 ;;		_I2C_2_Master_Start
  7055 ;;		_I2C_2_Master_Stop
  7056 ;;		_I2C_2_Master_Write
  7057 ;;		_init_colorclick_interrupts
  7058 ;; This function is called by:
  7059 ;;		_Interrupts_init
  7060 ;; This function uses a non-reentrant model
  7061 ;;
  7062                           
  7063                           	psect	text40
  7064   0023CE                     __ptext40:
  7065                           	callstack 0
  7066   0023CE                     _interrupts_clear_colorclick:
  7067                           	callstack 18
  7068   0023CE                     
  7069                           ;interrupts.c: 59:     I2C_2_Master_Start();
  7070   0023CE  EC1D  F012         	call	_I2C_2_Master_Start	;wreg free
  7071                           
  7072                           ;interrupts.c: 60:     I2C_2_Master_Write(0x52 | 0x00);
  7073   0023D2  0E52               	movlw	82
  7074   0023D4  EC07  F012         	call	_I2C_2_Master_Write
  7075                           
  7076                           ;interrupts.c: 61:     I2C_2_Master_Write(0b11100110);
  7077   0023D8  0EE6               	movlw	230
  7078   0023DA  EC07  F012         	call	_I2C_2_Master_Write
  7079                           
  7080                           ;interrupts.c: 62:     I2C_2_Master_Stop();
  7081   0023DE  EC18  F012         	call	_I2C_2_Master_Stop	;wreg free
  7082                           
  7083                           ;interrupts.c: 64:     init_colorclick_interrupts();
  7084   0023E2  EC97  F010         	call	_init_colorclick_interrupts	;wreg free
  7085   0023E6  0012               	return		;funcret
  7086   0023E8                     __end_of_interrupts_clear_colorclick:
  7087                           	callstack 0
  7088                           
  7089 ;; *************** function _init_colorclick_interrupts *****************
  7090 ;; Defined at:
  7091 ;;		line 43 in file "interrupts.c"
  7092 ;; Parameters:    Size  Location     Type
  7093 ;;		None
  7094 ;; Auto vars:     Size  Location     Type
  7095 ;;		None
  7096 ;; Return value:  Size  Location     Type
  7097 ;;                  1    wreg      void 
  7098 ;; Registers used:
  7099 ;;		wreg, status,2, status,0, cstack
  7100 ;; Tracked objects:
  7101 ;;		On entry : 0/0
  7102 ;;		On exit  : 0/0
  7103 ;;		Unchanged: 0/0
  7104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7107 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7108 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7109 ;;Total ram usage:        1 bytes
  7110 ;; Hardware stack levels used: 1
  7111 ;; Hardware stack levels required when called: 10
  7112 ;; This function calls:
  7113 ;;		_color_writetoaddr
  7114 ;; This function is called by:
  7115 ;;		_interrupts_clear_colorclick
  7116 ;; This function uses a non-reentrant model
  7117 ;;
  7118                           
  7119                           	psect	text41
  7120   00212E                     __ptext41:
  7121                           	callstack 0
  7122   00212E                     _init_colorclick_interrupts:
  7123                           	callstack 18
  7124   00212E                     
  7125                           ;interrupts.c: 45:     color_writetoaddr(0x00,0b10011);
  7126   00212E  0E13               	movlw	19
  7127   002130  6E0B               	movwf	color_writetoaddr@value^0,c
  7128   002132  0E00               	movlw	0
  7129   002134  ECC7  F011         	call	_color_writetoaddr
  7130   002138                     
  7131                           ;interrupts.c: 46:     _delay((unsigned long)((3)*(64000000/4000.0)));
  7132   002138  0E3F               	movlw	63
  7133   00213A  6E0D               	movwf	??_init_colorclick_interrupts^0,c
  7134   00213C  0E55               	movlw	85
  7135   00213E                     u4217:
  7136   00213E  2EE8               	decfsz	wreg,f,c
  7137   002140  D7FE               	bra	u4217
  7138   002142  2E0D               	decfsz	??_init_colorclick_interrupts^0,f,c
  7139   002144  D7FC               	bra	u4217
  7140   002146  F000               	nop	
  7141   002148                     
  7142                           ;interrupts.c: 48:     color_writetoaddr(0x0C,0b0100);
  7143   002148  0E04               	movlw	4
  7144   00214A  6E0B               	movwf	color_writetoaddr@value^0,c
  7145   00214C  0E0C               	movlw	12
  7146   00214E  ECC7  F011         	call	_color_writetoaddr
  7147   002152                     
  7148                           ;interrupts.c: 49:     color_writetoaddr(0x04,(int_threshold_low & 0xFF));
  7149   002152  C04F  F00B         	movff	_int_threshold_low,color_writetoaddr@value
  7150   002156  0E04               	movlw	4
  7151   002158  ECC7  F011         	call	_color_writetoaddr
  7152   00215C                     
  7153                           ;interrupts.c: 50:     color_writetoaddr(0x05,(int_threshold_low >> 8));
  7154   00215C  5050               	movf	(_int_threshold_low+1)^0,w,c
  7155   00215E  6E0B               	movwf	color_writetoaddr@value^0,c
  7156   002160  0E05               	movlw	5
  7157   002162  ECC7  F011         	call	_color_writetoaddr
  7158   002166                     
  7159                           ;interrupts.c: 51:     color_writetoaddr(0x06,(int_threshold_high & 0xFF));
  7160   002166  C055  F00B         	movff	_int_threshold_high,color_writetoaddr@value
  7161   00216A  0E06               	movlw	6
  7162   00216C  ECC7  F011         	call	_color_writetoaddr
  7163   002170                     
  7164                           ;interrupts.c: 52:     color_writetoaddr(0x07,(int_threshold_high >> 8));
  7165   002170  5056               	movf	(_int_threshold_high+1)^0,w,c
  7166   002172  6E0B               	movwf	color_writetoaddr@value^0,c
  7167   002174  0E07               	movlw	7
  7168   002176  ECC7  F011         	call	_color_writetoaddr
  7169   00217A  0012               	return		;funcret
  7170   00217C                     __end_of_init_colorclick_interrupts:
  7171                           	callstack 0
  7172                           
  7173 ;; *************** function _color_writetoaddr *****************
  7174 ;; Defined at:
  7175 ;;		line 22 in file "color.c"
  7176 ;; Parameters:    Size  Location     Type
  7177 ;;  address         1    wreg     unsigned char 
  7178 ;;  value           1   10[COMRAM] unsigned char 
  7179 ;; Auto vars:     Size  Location     Type
  7180 ;;  address         1   11[COMRAM] unsigned char 
  7181 ;; Return value:  Size  Location     Type
  7182 ;;                  1    wreg      void 
  7183 ;; Registers used:
  7184 ;;		wreg, status,2, status,0, cstack
  7185 ;; Tracked objects:
  7186 ;;		On entry : 0/0
  7187 ;;		On exit  : 0/0
  7188 ;;		Unchanged: 0/0
  7189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7190 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7191 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7193 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7194 ;;Total ram usage:        2 bytes
  7195 ;; Hardware stack levels used: 1
  7196 ;; Hardware stack levels required when called: 9
  7197 ;; This function calls:
  7198 ;;		_I2C_2_Master_Start
  7199 ;;		_I2C_2_Master_Stop
  7200 ;;		_I2C_2_Master_Write
  7201 ;; This function is called by:
  7202 ;;		_color_click_init
  7203 ;;		_init_colorclick_interrupts
  7204 ;; This function uses a non-reentrant model
  7205 ;;
  7206                           
  7207                           	psect	text42
  7208   00238E                     __ptext42:
  7209                           	callstack 0
  7210   00238E                     _color_writetoaddr:
  7211                           	callstack 20
  7212                           
  7213                           ;incstack = 0
  7214                           ;color_writetoaddr@address stored from wreg
  7215   00238E  6E0C               	movwf	color_writetoaddr@address^0,c
  7216   002390                     
  7217                           ;color.c: 23:     I2C_2_Master_Start();
  7218   002390  EC1D  F012         	call	_I2C_2_Master_Start	;wreg free
  7219                           
  7220                           ;color.c: 24:     I2C_2_Master_Write(0x52 | 0x00);
  7221   002394  0E52               	movlw	82
  7222   002396  EC07  F012         	call	_I2C_2_Master_Write
  7223                           
  7224                           ;color.c: 25:     I2C_2_Master_Write(0x80 | address);
  7225   00239A  500C               	movf	color_writetoaddr@address^0,w,c
  7226   00239C  0980               	iorlw	128
  7227   00239E  EC07  F012         	call	_I2C_2_Master_Write
  7228                           
  7229                           ;color.c: 26:     I2C_2_Master_Write(value);
  7230   0023A2  500B               	movf	color_writetoaddr@value^0,w,c
  7231   0023A4  EC07  F012         	call	_I2C_2_Master_Write
  7232                           
  7233                           ;color.c: 27:     I2C_2_Master_Stop();
  7234   0023A8  EC18  F012         	call	_I2C_2_Master_Stop	;wreg free
  7235   0023AC  0012               	return		;funcret
  7236   0023AE                     __end_of_color_writetoaddr:
  7237                           	callstack 0
  7238                           
  7239 ;; *************** function _I2C_2_Master_Write *****************
  7240 ;; Defined at:
  7241 ;;		line 45 in file "i2c.c"
  7242 ;; Parameters:    Size  Location     Type
  7243 ;;  data_byte       1    wreg     unsigned char 
  7244 ;; Auto vars:     Size  Location     Type
  7245 ;;  data_byte       1    9[COMRAM] unsigned char 
  7246 ;; Return value:  Size  Location     Type
  7247 ;;                  1    wreg      void 
  7248 ;; Registers used:
  7249 ;;		wreg, status,2, status,0, cstack
  7250 ;; Tracked objects:
  7251 ;;		On entry : 0/0
  7252 ;;		On exit  : 0/0
  7253 ;;		Unchanged: 0/0
  7254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7256 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7258 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7259 ;;Total ram usage:        1 bytes
  7260 ;; Hardware stack levels used: 1
  7261 ;; Hardware stack levels required when called: 8
  7262 ;; This function calls:
  7263 ;;		_I2C_2_Master_Idle
  7264 ;; This function is called by:
  7265 ;;		_color_writetoaddr
  7266 ;;		_color_read_Red
  7267 ;;		_color_read_Green
  7268 ;;		_color_read_Blue
  7269 ;;		_color_read_Clear
  7270 ;;		_interrupts_clear_colorclick
  7271 ;; This function uses a non-reentrant model
  7272 ;;
  7273                           
  7274                           	psect	text43
  7275   00240E                     __ptext43:
  7276                           	callstack 0
  7277   00240E                     _I2C_2_Master_Write:
  7278                           	callstack 20
  7279                           
  7280                           ;incstack = 0
  7281                           ;I2C_2_Master_Write@data_byte stored from wreg
  7282   00240E  6E0A               	movwf	I2C_2_Master_Write@data_byte^0,c
  7283   002410                     
  7284                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  7285   002410  EC58  F011         	call	_I2C_2_Master_Idle	;wreg free
  7286   002414                     
  7287                           ;i2c.c: 48:   SSP2BUF = data_byte;
  7288   002414  C00A  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  7289   002418  0012               	return		;funcret
  7290   00241A                     __end_of_I2C_2_Master_Write:
  7291                           	callstack 0
  7292                           
  7293 ;; *************** function _I2C_2_Master_Stop *****************
  7294 ;; Defined at:
  7295 ;;		line 39 in file "i2c.c"
  7296 ;; Parameters:    Size  Location     Type
  7297 ;;		None
  7298 ;; Auto vars:     Size  Location     Type
  7299 ;;		None
  7300 ;; Return value:  Size  Location     Type
  7301 ;;                  1    wreg      void 
  7302 ;; Registers used:
  7303 ;;		wreg, status,2, status,0, cstack
  7304 ;; Tracked objects:
  7305 ;;		On entry : 0/0
  7306 ;;		On exit  : 0/0
  7307 ;;		Unchanged: 0/0
  7308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7313 ;;Total ram usage:        0 bytes
  7314 ;; Hardware stack levels used: 1
  7315 ;; Hardware stack levels required when called: 8
  7316 ;; This function calls:
  7317 ;;		_I2C_2_Master_Idle
  7318 ;; This function is called by:
  7319 ;;		_color_writetoaddr
  7320 ;;		_color_read_Red
  7321 ;;		_color_read_Green
  7322 ;;		_color_read_Blue
  7323 ;;		_color_read_Clear
  7324 ;;		_interrupts_clear_colorclick
  7325 ;; This function uses a non-reentrant model
  7326 ;;
  7327                           
  7328                           	psect	text44
  7329   002430                     __ptext44:
  7330                           	callstack 0
  7331   002430                     _I2C_2_Master_Stop:
  7332                           	callstack 20
  7333   002430                     
  7334                           ;i2c.c: 41:   I2C_2_Master_Idle();
  7335   002430  EC58  F011         	call	_I2C_2_Master_Idle	;wreg free
  7336   002434                     
  7337                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  7338   002434  010E               	movlb	14	; () banked
  7339   002436  85DA               	bsf	218,2,b	;volatile
  7340   002438                     
  7341                           ; BSR set to: 14
  7342   002438  0012               	return		;funcret
  7343   00243A                     __end_of_I2C_2_Master_Stop:
  7344                           	callstack 0
  7345                           
  7346 ;; *************** function _I2C_2_Master_Start *****************
  7347 ;; Defined at:
  7348 ;;		line 27 in file "i2c.c"
  7349 ;; Parameters:    Size  Location     Type
  7350 ;;		None
  7351 ;; Auto vars:     Size  Location     Type
  7352 ;;		None
  7353 ;; Return value:  Size  Location     Type
  7354 ;;                  1    wreg      void 
  7355 ;; Registers used:
  7356 ;;		wreg, status,2, status,0, cstack
  7357 ;; Tracked objects:
  7358 ;;		On entry : 0/0
  7359 ;;		On exit  : 0/0
  7360 ;;		Unchanged: 0/0
  7361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7366 ;;Total ram usage:        0 bytes
  7367 ;; Hardware stack levels used: 1
  7368 ;; Hardware stack levels required when called: 8
  7369 ;; This function calls:
  7370 ;;		_I2C_2_Master_Idle
  7371 ;; This function is called by:
  7372 ;;		_color_writetoaddr
  7373 ;;		_color_read_Red
  7374 ;;		_color_read_Green
  7375 ;;		_color_read_Blue
  7376 ;;		_color_read_Clear
  7377 ;;		_interrupts_clear_colorclick
  7378 ;; This function uses a non-reentrant model
  7379 ;;
  7380                           
  7381                           	psect	text45
  7382   00243A                     __ptext45:
  7383                           	callstack 0
  7384   00243A                     _I2C_2_Master_Start:
  7385                           	callstack 20
  7386   00243A                     
  7387                           ;i2c.c: 29:   I2C_2_Master_Idle();
  7388   00243A  EC58  F011         	call	_I2C_2_Master_Idle	;wreg free
  7389   00243E                     
  7390                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  7391   00243E  010E               	movlb	14	; () banked
  7392   002440  81DA               	bsf	218,0,b	;volatile
  7393   002442                     
  7394                           ; BSR set to: 14
  7395   002442  0012               	return		;funcret
  7396   002444                     __end_of_I2C_2_Master_Start:
  7397                           	callstack 0
  7398                           
  7399 ;; *************** function _I2C_2_Master_Idle *****************
  7400 ;; Defined at:
  7401 ;;		line 22 in file "i2c.c"
  7402 ;; Parameters:    Size  Location     Type
  7403 ;;		None
  7404 ;; Auto vars:     Size  Location     Type
  7405 ;;		None
  7406 ;; Return value:  Size  Location     Type
  7407 ;;                  1    wreg      void 
  7408 ;; Registers used:
  7409 ;;		wreg, status,2, status,0
  7410 ;; Tracked objects:
  7411 ;;		On entry : 0/0
  7412 ;;		On exit  : 0/0
  7413 ;;		Unchanged: 0/0
  7414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7417 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7418 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7419 ;;Total ram usage:        1 bytes
  7420 ;; Hardware stack levels used: 1
  7421 ;; Hardware stack levels required when called: 7
  7422 ;; This function calls:
  7423 ;;		Nothing
  7424 ;; This function is called by:
  7425 ;;		_I2C_2_Master_Start
  7426 ;;		_I2C_2_Master_RepStart
  7427 ;;		_I2C_2_Master_Stop
  7428 ;;		_I2C_2_Master_Write
  7429 ;;		_I2C_2_Master_Read
  7430 ;; This function uses a non-reentrant model
  7431 ;;
  7432                           
  7433                           	psect	text46
  7434   0022B0                     __ptext46:
  7435                           	callstack 0
  7436   0022B0                     _I2C_2_Master_Idle:
  7437                           	callstack 20
  7438   0022B0                     l90:
  7439   0022B0  010E               	movlb	14	; () banked
  7440   0022B2  B5D8               	btfsc	216,2,b	;volatile
  7441   0022B4  EF5E  F011         	goto	u1771
  7442   0022B8  EF60  F011         	goto	u1770
  7443   0022BC                     u1771:
  7444   0022BC  EF58  F011         	goto	l90
  7445   0022C0                     u1770:
  7446   0022C0                     
  7447                           ; BSR set to: 14
  7448   0022C0  CEDA F009          	movff	3802,??_I2C_2_Master_Idle	;volatile
  7449   0022C4  0E1F               	movlw	31
  7450   0022C6  1609               	andwf	??_I2C_2_Master_Idle^0,f,c
  7451   0022C8  A4D8               	btfss	status,2,c
  7452   0022CA  EF69  F011         	goto	u1781
  7453   0022CE  EF6B  F011         	goto	u1780
  7454   0022D2                     u1781:
  7455   0022D2  EF58  F011         	goto	l90
  7456   0022D6                     u1780:
  7457   0022D6                     
  7458                           ; BSR set to: 14
  7459   0022D6  0012               	return		;funcret
  7460   0022D8                     __end_of_I2C_2_Master_Idle:
  7461                           	callstack 0
  7462                           
  7463 ;; *************** function _LowISR *****************
  7464 ;; Defined at:
  7465 ;;		line 74 in file "interrupts.c"
  7466 ;; Parameters:    Size  Location     Type
  7467 ;;		None
  7468 ;; Auto vars:     Size  Location     Type
  7469 ;;		None
  7470 ;; Return value:  Size  Location     Type
  7471 ;;                  1    wreg      void 
  7472 ;; Registers used:
  7473 ;;		wreg, status,2
  7474 ;; Tracked objects:
  7475 ;;		On entry : 0/0
  7476 ;;		On exit  : 0/0
  7477 ;;		Unchanged: 0/0
  7478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7481 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7482 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7483 ;;Total ram usage:        3 bytes
  7484 ;; Hardware stack levels used: 1
  7485 ;; Hardware stack levels required when called: 6
  7486 ;; This function calls:
  7487 ;;		Nothing
  7488 ;; This function is called by:
  7489 ;;		Interrupt level 1
  7490 ;; This function uses a non-reentrant model
  7491 ;;
  7492                           
  7493                           	psect	intcodelo
  7494   000018                     __pintcodelo:
  7495                           	callstack 0
  7496   000018                     _LowISR:
  7497                           	callstack 18
  7498                           
  7499                           ; BSR set to: 14
  7500                           ;incstack = 0
  7501   000018  8057               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  7502   00001A  CFD8 F006          	movff	status,??_LowISR
  7503   00001E  CFE8 F007          	movff	wreg,??_LowISR+1
  7504   000022  CFE0 F008          	movff	bsr,??_LowISR+2
  7505   000026                     
  7506                           ;interrupts.c: 77:     if(PIR0bits.TMR0IF){
  7507   000026  010E               	movlb	14	; () banked
  7508   000028  AB33               	btfss	51,5,b	;volatile
  7509   00002A  EF19  F000         	goto	i1u338_21
  7510   00002E  EF1B  F000         	goto	i1u338_20
  7511   000032                     i1u338_21:
  7512   000032  EF24  F000         	goto	i1l323
  7513   000036                     i1u338_20:
  7514   000036                     
  7515                           ; BSR set to: 14
  7516                           ;interrupts.c: 78:         TMR0H = 0b11000010;
  7517   000036  0EC2               	movlw	194
  7518   000038  6ED4               	movwf	212,c	;volatile
  7519                           
  7520                           ;interrupts.c: 79:         TMR0L = 0b11110110;
  7521   00003A  0EF6               	movlw	246
  7522   00003C  6ED3               	movwf	211,c	;volatile
  7523                           
  7524                           ;interrupts.c: 80:         tmr_ovf = 1;
  7525   00003E  0E01               	movlw	1
  7526   000040  0100               	movlb	0	; () banked
  7527   000042  6FB2               	movwf	_tmr_ovf& (0+255),b
  7528   000044                     
  7529                           ; BSR set to: 0
  7530                           ;interrupts.c: 81:         PIR0bits.TMR0IF=0;
  7531   000044  010E               	movlb	14	; () banked
  7532   000046  9B33               	bcf	51,5,b	;volatile
  7533   000048                     i1l323:
  7534                           
  7535                           ; BSR set to: 14
  7536   000048  C008  FFE0         	movff	??_LowISR+2,bsr
  7537   00004C  C007  FFE8         	movff	??_LowISR+1,wreg
  7538   000050  C006  FFD8         	movff	??_LowISR,status
  7539   000054  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  7540   000056  0010               	retfie	
  7541   000058                     __end_of_LowISR:
  7542                           	callstack 0
  7543                           
  7544 ;; *************** function _HighISR *****************
  7545 ;; Defined at:
  7546 ;;		line 88 in file "interrupts.c"
  7547 ;; Parameters:    Size  Location     Type
  7548 ;;		None
  7549 ;; Auto vars:     Size  Location     Type
  7550 ;;		None
  7551 ;; Return value:  Size  Location     Type
  7552 ;;                  1    wreg      void 
  7553 ;; Registers used:
  7554 ;;		wreg, status,2, status,0, cstack
  7555 ;; Tracked objects:
  7556 ;;		On entry : 0/0
  7557 ;;		On exit  : 0/0
  7558 ;;		Unchanged: 0/0
  7559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7564 ;;Total ram usage:        0 bytes
  7565 ;; Hardware stack levels used: 1
  7566 ;; Hardware stack levels required when called: 5
  7567 ;; This function calls:
  7568 ;;		i2_interrupts_clear_colorclick
  7569 ;; This function is called by:
  7570 ;;		Interrupt level 2
  7571 ;; This function uses a non-reentrant model
  7572 ;;
  7573                           
  7574                           	psect	intcode
  7575   000008                     __pintcode:
  7576                           	callstack 0
  7577   000008                     _HighISR:
  7578                           	callstack 18
  7579                           
  7580                           ; BSR set to: 14
  7581                           ;incstack = 0
  7582   000008  8257               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7583   00000A  EFA6  F011         	goto	int_func
  7584                           
  7585                           	psect	intcode_body
  7586   00234C                     __pintcode_body:
  7587                           	callstack 18
  7588   00234C                     int_func:
  7589                           	callstack 18
  7590   00234C                     
  7591                           ;interrupts.c: 115:     if(PIR0bits.INT1IF){
  7592   00234C  010E               	movlb	14	; () banked
  7593   00234E  A333               	btfss	51,1,b	;volatile
  7594   002350  EFAC  F011         	goto	i2u339_41
  7595   002354  EFAE  F011         	goto	i2u339_40
  7596   002358                     i2u339_41:
  7597   002358  EFB5  F011         	goto	i2l331
  7598   00235C                     i2u339_40:
  7599   00235C                     
  7600                           ; BSR set to: 14
  7601                           ;interrupts.c: 116:         color_flag = 1;
  7602   00235C  0E01               	movlw	1
  7603   00235E  0100               	movlb	0	; () banked
  7604   002360  6FB3               	movwf	_color_flag& (0+255),b
  7605   002362                     
  7606                           ; BSR set to: 0
  7607                           ;interrupts.c: 118:         interrupts_clear_colorclick();
  7608   002362  ECF4  F011         	call	i2_interrupts_clear_colorclick	;wreg free
  7609   002366                     
  7610                           ;interrupts.c: 119:         PIR0bits.INT1IF = 0;
  7611   002366  010E               	movlb	14	; () banked
  7612   002368  9333               	bcf	51,1,b	;volatile
  7613   00236A                     i2l331:
  7614                           
  7615                           ; BSR set to: 14
  7616   00236A  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7617   00236C  0011               	retfie		f
  7618   00236E                     __end_of_HighISR:
  7619                           	callstack 0
  7620                           
  7621 ;; *************** function i2_interrupts_clear_colorclick *****************
  7622 ;; Defined at:
  7623 ;;		line 57 in file "interrupts.c"
  7624 ;; Parameters:    Size  Location     Type
  7625 ;;		None
  7626 ;; Auto vars:     Size  Location     Type
  7627 ;;		None
  7628 ;; Return value:  Size  Location     Type
  7629 ;;                  1    wreg      void 
  7630 ;; Registers used:
  7631 ;;		wreg, status,2, status,0, cstack
  7632 ;; Tracked objects:
  7633 ;;		On entry : 0/0
  7634 ;;		On exit  : 0/0
  7635 ;;		Unchanged: 0/0
  7636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7641 ;;Total ram usage:        0 bytes
  7642 ;; Hardware stack levels used: 1
  7643 ;; Hardware stack levels required when called: 4
  7644 ;; This function calls:
  7645 ;;		i2_I2C_2_Master_Start
  7646 ;;		i2_I2C_2_Master_Stop
  7647 ;;		i2_I2C_2_Master_Write
  7648 ;;		i2_init_colorclick_interrupts
  7649 ;; This function is called by:
  7650 ;;		_HighISR
  7651 ;; This function uses a non-reentrant model
  7652 ;;
  7653                           
  7654                           	psect	text49
  7655   0023E8                     __ptext49:
  7656                           	callstack 0
  7657   0023E8                     i2_interrupts_clear_colorclick:
  7658                           	callstack 18
  7659   0023E8                     
  7660                           ;interrupts.c: 59:     I2C_2_Master_Start();
  7661   0023E8  EC27  F012         	call	i2_I2C_2_Master_Start	;wreg free
  7662                           
  7663                           ;interrupts.c: 60:     I2C_2_Master_Write(0x52 | 0x00);
  7664   0023EC  0E52               	movlw	82
  7665   0023EE  EC0D  F012         	call	i2_I2C_2_Master_Write
  7666                           
  7667                           ;interrupts.c: 61:     I2C_2_Master_Write(0b11100110);
  7668   0023F2  0EE6               	movlw	230
  7669   0023F4  EC0D  F012         	call	i2_I2C_2_Master_Write
  7670                           
  7671                           ;interrupts.c: 62:     I2C_2_Master_Stop();
  7672   0023F8  EC22  F012         	call	i2_I2C_2_Master_Stop	;wreg free
  7673                           
  7674                           ;interrupts.c: 64:     init_colorclick_interrupts();
  7675   0023FC  ECBE  F010         	call	i2_init_colorclick_interrupts	;wreg free
  7676   002400  0012               	return		;funcret
  7677   002402                     __end_ofi2_interrupts_clear_colorclick:
  7678                           	callstack 0
  7679                           
  7680 ;; *************** function i2_init_colorclick_interrupts *****************
  7681 ;; Defined at:
  7682 ;;		line 43 in file "interrupts.c"
  7683 ;; Parameters:    Size  Location     Type
  7684 ;;		None
  7685 ;; Auto vars:     Size  Location     Type
  7686 ;;		None
  7687 ;; Return value:  Size  Location     Type
  7688 ;;                  1    wreg      void 
  7689 ;; Registers used:
  7690 ;;		wreg, status,2, status,0, cstack
  7691 ;; Tracked objects:
  7692 ;;		On entry : 0/0
  7693 ;;		On exit  : 0/0
  7694 ;;		Unchanged: 0/0
  7695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7698 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7699 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7700 ;;Total ram usage:        1 bytes
  7701 ;; Hardware stack levels used: 1
  7702 ;; Hardware stack levels required when called: 3
  7703 ;; This function calls:
  7704 ;;		i2_color_writetoaddr
  7705 ;; This function is called by:
  7706 ;;		i2_interrupts_clear_colorclick
  7707 ;; This function uses a non-reentrant model
  7708 ;;
  7709                           
  7710                           	psect	text50
  7711   00217C                     __ptext50:
  7712                           	callstack 0
  7713   00217C                     i2_init_colorclick_interrupts:
  7714                           	callstack 18
  7715   00217C                     
  7716                           ;interrupts.c: 45:     color_writetoaddr(0x00,0b10011);
  7717   00217C  0E13               	movlw	19
  7718   00217E  6E03               	movwf	i2color_writetoaddr@value^0,c
  7719   002180  0E00               	movlw	0
  7720   002182  ECD7  F011         	call	i2_color_writetoaddr
  7721   002186                     
  7722                           ;interrupts.c: 46:     _delay((unsigned long)((3)*(64000000/4000.0)));
  7723   002186  0E3F               	movlw	63
  7724   002188  6E05               	movwf	??i2_init_colorclick_interrupts^0,c
  7725   00218A  0E55               	movlw	85
  7726   00218C                     i2u422_47:
  7727   00218C  2EE8               	decfsz	wreg,f,c
  7728   00218E  D7FE               	bra	i2u422_47
  7729   002190  2E05               	decfsz	??i2_init_colorclick_interrupts^0,f,c
  7730   002192  D7FC               	bra	i2u422_47
  7731   002194  F000               	nop	
  7732   002196                     
  7733                           ;interrupts.c: 48:     color_writetoaddr(0x0C,0b0100);
  7734   002196  0E04               	movlw	4
  7735   002198  6E03               	movwf	i2color_writetoaddr@value^0,c
  7736   00219A  0E0C               	movlw	12
  7737   00219C  ECD7  F011         	call	i2_color_writetoaddr
  7738   0021A0                     
  7739                           ;interrupts.c: 49:     color_writetoaddr(0x04,(int_threshold_low & 0xFF));
  7740   0021A0  C04F  F003         	movff	_int_threshold_low,i2color_writetoaddr@value
  7741   0021A4  0E04               	movlw	4
  7742   0021A6  ECD7  F011         	call	i2_color_writetoaddr
  7743   0021AA                     
  7744                           ;interrupts.c: 50:     color_writetoaddr(0x05,(int_threshold_low >> 8));
  7745   0021AA  5050               	movf	(_int_threshold_low+1)^0,w,c
  7746   0021AC  6E03               	movwf	i2color_writetoaddr@value^0,c
  7747   0021AE  0E05               	movlw	5
  7748   0021B0  ECD7  F011         	call	i2_color_writetoaddr
  7749   0021B4                     
  7750                           ;interrupts.c: 51:     color_writetoaddr(0x06,(int_threshold_high & 0xFF));
  7751   0021B4  C055  F003         	movff	_int_threshold_high,i2color_writetoaddr@value
  7752   0021B8  0E06               	movlw	6
  7753   0021BA  ECD7  F011         	call	i2_color_writetoaddr
  7754   0021BE                     
  7755                           ;interrupts.c: 52:     color_writetoaddr(0x07,(int_threshold_high >> 8));
  7756   0021BE  5056               	movf	(_int_threshold_high+1)^0,w,c
  7757   0021C0  6E03               	movwf	i2color_writetoaddr@value^0,c
  7758   0021C2  0E07               	movlw	7
  7759   0021C4  ECD7  F011         	call	i2_color_writetoaddr
  7760   0021C8  0012               	return		;funcret
  7761   0021CA                     __end_ofi2_init_colorclick_interrupts:
  7762                           	callstack 0
  7763                           
  7764 ;; *************** function i2_color_writetoaddr *****************
  7765 ;; Defined at:
  7766 ;;		line 22 in file "color.c"
  7767 ;; Parameters:    Size  Location     Type
  7768 ;;  address         1    wreg     unsigned char 
  7769 ;;  value           1    2[COMRAM] unsigned char 
  7770 ;; Auto vars:     Size  Location     Type
  7771 ;;  address         1    3[COMRAM] unsigned char 
  7772 ;; Return value:  Size  Location     Type
  7773 ;;                  1    wreg      void 
  7774 ;; Registers used:
  7775 ;;		wreg, status,2, status,0, cstack
  7776 ;; Tracked objects:
  7777 ;;		On entry : 0/0
  7778 ;;		On exit  : 0/0
  7779 ;;		Unchanged: 0/0
  7780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7781 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7782 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7784 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7785 ;;Total ram usage:        2 bytes
  7786 ;; Hardware stack levels used: 1
  7787 ;; Hardware stack levels required when called: 2
  7788 ;; This function calls:
  7789 ;;		i2_I2C_2_Master_Start
  7790 ;;		i2_I2C_2_Master_Stop
  7791 ;;		i2_I2C_2_Master_Write
  7792 ;; This function is called by:
  7793 ;;		i2_init_colorclick_interrupts
  7794 ;; This function uses a non-reentrant model
  7795 ;;
  7796                           
  7797                           	psect	text51
  7798   0023AE                     __ptext51:
  7799                           	callstack 0
  7800   0023AE                     i2_color_writetoaddr:
  7801                           	callstack 18
  7802                           
  7803                           ;incstack = 0
  7804                           ;i2color_writetoaddr@address stored from wreg
  7805   0023AE  6E04               	movwf	i2color_writetoaddr@address^0,c
  7806   0023B0                     
  7807                           ;color.c: 23:     I2C_2_Master_Start();
  7808   0023B0  EC27  F012         	call	i2_I2C_2_Master_Start	;wreg free
  7809                           
  7810                           ;color.c: 24:     I2C_2_Master_Write(0x52 | 0x00);
  7811   0023B4  0E52               	movlw	82
  7812   0023B6  EC0D  F012         	call	i2_I2C_2_Master_Write
  7813                           
  7814                           ;color.c: 25:     I2C_2_Master_Write(0x80 | address);
  7815   0023BA  5004               	movf	i2color_writetoaddr@address^0,w,c
  7816   0023BC  0980               	iorlw	128
  7817   0023BE  EC0D  F012         	call	i2_I2C_2_Master_Write
  7818                           
  7819                           ;color.c: 26:     I2C_2_Master_Write(value);
  7820   0023C2  5003               	movf	i2color_writetoaddr@value^0,w,c
  7821   0023C4  EC0D  F012         	call	i2_I2C_2_Master_Write
  7822                           
  7823                           ;color.c: 27:     I2C_2_Master_Stop();
  7824   0023C8  EC22  F012         	call	i2_I2C_2_Master_Stop	;wreg free
  7825   0023CC  0012               	return		;funcret
  7826   0023CE                     __end_ofi2_color_writetoaddr:
  7827                           	callstack 0
  7828                           
  7829 ;; *************** function i2_I2C_2_Master_Write *****************
  7830 ;; Defined at:
  7831 ;;		line 45 in file "i2c.c"
  7832 ;; Parameters:    Size  Location     Type
  7833 ;;  data_byte       1    wreg     unsigned char 
  7834 ;; Auto vars:     Size  Location     Type
  7835 ;;  data_byte       1    1[COMRAM] unsigned char 
  7836 ;; Return value:  Size  Location     Type
  7837 ;;                  1    wreg      void 
  7838 ;; Registers used:
  7839 ;;		wreg, status,2, status,0, cstack
  7840 ;; Tracked objects:
  7841 ;;		On entry : 0/0
  7842 ;;		On exit  : 0/0
  7843 ;;		Unchanged: 0/0
  7844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7846 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7848 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7849 ;;Total ram usage:        1 bytes
  7850 ;; Hardware stack levels used: 1
  7851 ;; Hardware stack levels required when called: 1
  7852 ;; This function calls:
  7853 ;;		i2_I2C_2_Master_Idle
  7854 ;; This function is called by:
  7855 ;;		i2_color_writetoaddr
  7856 ;;		i2_interrupts_clear_colorclick
  7857 ;; This function uses a non-reentrant model
  7858 ;;
  7859                           
  7860                           	psect	text52
  7861   00241A                     __ptext52:
  7862                           	callstack 0
  7863   00241A                     i2_I2C_2_Master_Write:
  7864                           	callstack 18
  7865                           
  7866                           ;incstack = 0
  7867                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  7868   00241A  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  7869   00241C                     
  7870                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  7871   00241C  EC6C  F011         	call	i2_I2C_2_Master_Idle	;wreg free
  7872   002420                     
  7873                           ;i2c.c: 48:   SSP2BUF = data_byte;
  7874   002420  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  7875   002424  0012               	return		;funcret
  7876   002426                     __end_ofi2_I2C_2_Master_Write:
  7877                           	callstack 0
  7878                           
  7879 ;; *************** function i2_I2C_2_Master_Stop *****************
  7880 ;; Defined at:
  7881 ;;		line 39 in file "i2c.c"
  7882 ;; Parameters:    Size  Location     Type
  7883 ;;		None
  7884 ;; Auto vars:     Size  Location     Type
  7885 ;;		None
  7886 ;; Return value:  Size  Location     Type
  7887 ;;                  1    wreg      void 
  7888 ;; Registers used:
  7889 ;;		wreg, status,2, status,0, cstack
  7890 ;; Tracked objects:
  7891 ;;		On entry : 0/0
  7892 ;;		On exit  : 0/0
  7893 ;;		Unchanged: 0/0
  7894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7899 ;;Total ram usage:        0 bytes
  7900 ;; Hardware stack levels used: 1
  7901 ;; Hardware stack levels required when called: 1
  7902 ;; This function calls:
  7903 ;;		i2_I2C_2_Master_Idle
  7904 ;; This function is called by:
  7905 ;;		i2_color_writetoaddr
  7906 ;;		i2_interrupts_clear_colorclick
  7907 ;; This function uses a non-reentrant model
  7908 ;;
  7909                           
  7910                           	psect	text53
  7911   002444                     __ptext53:
  7912                           	callstack 0
  7913   002444                     i2_I2C_2_Master_Stop:
  7914                           	callstack 18
  7915   002444                     
  7916                           ;i2c.c: 41:   I2C_2_Master_Idle();
  7917   002444  EC6C  F011         	call	i2_I2C_2_Master_Idle	;wreg free
  7918   002448                     
  7919                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  7920   002448  010E               	movlb	14	; () banked
  7921   00244A  85DA               	bsf	218,2,b	;volatile
  7922   00244C                     
  7923                           ; BSR set to: 14
  7924   00244C  0012               	return		;funcret
  7925   00244E                     __end_ofi2_I2C_2_Master_Stop:
  7926                           	callstack 0
  7927                           
  7928 ;; *************** function i2_I2C_2_Master_Start *****************
  7929 ;; Defined at:
  7930 ;;		line 27 in file "i2c.c"
  7931 ;; Parameters:    Size  Location     Type
  7932 ;;		None
  7933 ;; Auto vars:     Size  Location     Type
  7934 ;;		None
  7935 ;; Return value:  Size  Location     Type
  7936 ;;                  1    wreg      void 
  7937 ;; Registers used:
  7938 ;;		wreg, status,2, status,0, cstack
  7939 ;; Tracked objects:
  7940 ;;		On entry : 0/0
  7941 ;;		On exit  : 0/0
  7942 ;;		Unchanged: 0/0
  7943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7948 ;;Total ram usage:        0 bytes
  7949 ;; Hardware stack levels used: 1
  7950 ;; Hardware stack levels required when called: 1
  7951 ;; This function calls:
  7952 ;;		i2_I2C_2_Master_Idle
  7953 ;; This function is called by:
  7954 ;;		i2_color_writetoaddr
  7955 ;;		i2_interrupts_clear_colorclick
  7956 ;; This function uses a non-reentrant model
  7957 ;;
  7958                           
  7959                           	psect	text54
  7960   00244E                     __ptext54:
  7961                           	callstack 0
  7962   00244E                     i2_I2C_2_Master_Start:
  7963                           	callstack 18
  7964   00244E                     
  7965                           ;i2c.c: 29:   I2C_2_Master_Idle();
  7966   00244E  EC6C  F011         	call	i2_I2C_2_Master_Idle	;wreg free
  7967   002452                     
  7968                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  7969   002452  010E               	movlb	14	; () banked
  7970   002454  81DA               	bsf	218,0,b	;volatile
  7971   002456                     
  7972                           ; BSR set to: 14
  7973   002456  0012               	return		;funcret
  7974   002458                     __end_ofi2_I2C_2_Master_Start:
  7975                           	callstack 0
  7976                           
  7977 ;; *************** function i2_I2C_2_Master_Idle *****************
  7978 ;; Defined at:
  7979 ;;		line 22 in file "i2c.c"
  7980 ;; Parameters:    Size  Location     Type
  7981 ;;		None
  7982 ;; Auto vars:     Size  Location     Type
  7983 ;;		None
  7984 ;; Return value:  Size  Location     Type
  7985 ;;                  1    wreg      void 
  7986 ;; Registers used:
  7987 ;;		wreg, status,2, status,0
  7988 ;; Tracked objects:
  7989 ;;		On entry : 0/0
  7990 ;;		On exit  : 0/0
  7991 ;;		Unchanged: 0/0
  7992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7995 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7996 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7997 ;;Total ram usage:        1 bytes
  7998 ;; Hardware stack levels used: 1
  7999 ;; This function calls:
  8000 ;;		Nothing
  8001 ;; This function is called by:
  8002 ;;		i2_I2C_2_Master_Start
  8003 ;;		i2_I2C_2_Master_Stop
  8004 ;;		i2_I2C_2_Master_Write
  8005 ;; This function uses a non-reentrant model
  8006 ;;
  8007                           
  8008                           	psect	text55
  8009   0022D8                     __ptext55:
  8010                           	callstack 0
  8011   0022D8                     i2_I2C_2_Master_Idle:
  8012                           	callstack 18
  8013   0022D8                     i2l90:
  8014   0022D8  010E               	movlb	14	; () banked
  8015   0022DA  B5D8               	btfsc	216,2,b	;volatile
  8016   0022DC  EF72  F011         	goto	i2u184_41
  8017   0022E0  EF74  F011         	goto	i2u184_40
  8018   0022E4                     i2u184_41:
  8019   0022E4  EF6C  F011         	goto	i2l90
  8020   0022E8                     i2u184_40:
  8021   0022E8                     
  8022                           ; BSR set to: 14
  8023   0022E8  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  8024   0022EC  0E1F               	movlw	31
  8025   0022EE  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  8026   0022F0  A4D8               	btfss	status,2,c
  8027   0022F2  EF7D  F011         	goto	i2u185_41
  8028   0022F6  EF7F  F011         	goto	i2u185_40
  8029   0022FA                     i2u185_41:
  8030   0022FA  EF6C  F011         	goto	i2l90
  8031   0022FE                     i2u185_40:
  8032   0022FE                     
  8033                           ; BSR set to: 14
  8034   0022FE  0012               	return		;funcret
  8035   002300                     __end_ofi2_I2C_2_Master_Idle:
  8036                           	callstack 0
  8037   000000                     
  8038                           	psect	rparam
  8039   000000                     
  8040                           	psect	temp
  8041   000057                     btemp:
  8042                           	callstack 0
  8043   000057                     	ds	1
  8044   000000                     int$flags	set	btemp
  8045   000000                     wtemp8	set	btemp+1
  8046   000000                     ttemp5	set	btemp+1
  8047   000000                     ttemp6	set	btemp+4
  8048   000000                     ttemp7	set	btemp+8
  8049                           
  8050                           	psect	idloc
  8051                           
  8052                           ;Config register IDLOC0 @ 0x200000
  8053                           ;	unspecified, using default values
  8054   200000                     	org	2097152
  8055   200000  0FFF               	dw	4095
  8056                           
  8057                           ;Config register IDLOC1 @ 0x200002
  8058                           ;	unspecified, using default values
  8059   200002                     	org	2097154
  8060   200002  0FFF               	dw	4095
  8061                           
  8062                           ;Config register IDLOC2 @ 0x200004
  8063                           ;	unspecified, using default values
  8064   200004                     	org	2097156
  8065   200004  0FFF               	dw	4095
  8066                           
  8067                           ;Config register IDLOC3 @ 0x200006
  8068                           ;	unspecified, using default values
  8069   200006                     	org	2097158
  8070   200006  0FFF               	dw	4095
  8071                           
  8072                           ;Config register IDLOC4 @ 0x200008
  8073                           ;	unspecified, using default values
  8074   200008                     	org	2097160
  8075   200008  0FFF               	dw	4095
  8076                           
  8077                           ;Config register IDLOC5 @ 0x20000A
  8078                           ;	unspecified, using default values
  8079   20000A                     	org	2097162
  8080   20000A  0FFF               	dw	4095
  8081                           
  8082                           ;Config register IDLOC6 @ 0x20000C
  8083                           ;	unspecified, using default values
  8084   20000C                     	org	2097164
  8085   20000C  0FFF               	dw	4095
  8086                           
  8087                           ;Config register IDLOC7 @ 0x20000E
  8088                           ;	unspecified, using default values
  8089   20000E                     	org	2097166
  8090   20000E  0FFF               	dw	4095
  8091                           
  8092                           	psect	config
  8093                           
  8094                           ;Config register CONFIG1L @ 0x300000
  8095                           ;	External Oscillator mode Selection bits
  8096                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  8097                           ;	Power-up default value for COSC bits
  8098                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  8099   300000                     	org	3145728
  8100   300000  AA                 	db	170
  8101                           
  8102                           ;Config register CONFIG1H @ 0x300001
  8103                           ;	unspecified, using default values
  8104                           ;	Clock Out Enable bit
  8105                           ;	CLKOUTEN = 0x1, unprogrammed default
  8106                           ;	Clock Switch Enable bit
  8107                           ;	CSWEN = 0x1, unprogrammed default
  8108                           ;	Fail-Safe Clock Monitor Enable bit
  8109                           ;	FCMEN = 0x1, unprogrammed default
  8110   300001                     	org	3145729
  8111   300001  FF                 	db	255
  8112                           
  8113                           ;Config register CONFIG2L @ 0x300002
  8114                           ;	unspecified, using default values
  8115                           ;	Master Clear Enable bit
  8116                           ;	MCLRE = 0x1, unprogrammed default
  8117                           ;	Power-up Timer Enable bit
  8118                           ;	PWRTE = 0x1, unprogrammed default
  8119                           ;	Low-power BOR enable bit
  8120                           ;	LPBOREN = 0x1, unprogrammed default
  8121                           ;	Brown-out Reset Enable bits
  8122                           ;	BOREN = 0x3, unprogrammed default
  8123   300002                     	org	3145730
  8124   300002  FF                 	db	255
  8125                           
  8126                           ;Config register CONFIG2H @ 0x300003
  8127                           ;	unspecified, using default values
  8128                           ;	Brown Out Reset Voltage selection bits
  8129                           ;	BORV = 0x3, unprogrammed default
  8130                           ;	ZCD Disable bit
  8131                           ;	ZCD = 0x1, unprogrammed default
  8132                           ;	PPSLOCK bit One-Way Set Enable bit
  8133                           ;	PPS1WAY = 0x1, unprogrammed default
  8134                           ;	Stack Full/Underflow Reset Enable bit
  8135                           ;	STVREN = 0x1, unprogrammed default
  8136                           ;	Debugger Enable bit
  8137                           ;	DEBUG = 0x1, unprogrammed default
  8138                           ;	Extended Instruction Set Enable bit
  8139                           ;	XINST = 0x1, unprogrammed default
  8140   300003                     	org	3145731
  8141   300003  FF                 	db	255
  8142                           
  8143                           ;Config register CONFIG3L @ 0x300004
  8144                           ;	WDT Period Select bits
  8145                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  8146                           ;	WDT operating mode
  8147                           ;	WDTE = OFF, WDT Disabled
  8148   300004                     	org	3145732
  8149   300004  9F                 	db	159
  8150                           
  8151                           ;Config register CONFIG3H @ 0x300005
  8152                           ;	unspecified, using default values
  8153                           ;	WDT Window Select bits
  8154                           ;	WDTCWS = 0x7, unprogrammed default
  8155                           ;	WDT input clock selector
  8156                           ;	WDTCCS = 0x7, unprogrammed default
  8157   300005                     	org	3145733
  8158   300005  FF                 	db	255
  8159                           
  8160                           ;Config register CONFIG4L @ 0x300006
  8161                           ;	unspecified, using default values
  8162                           ;	Write Protection Block 0
  8163                           ;	WRT0 = 0x1, unprogrammed default
  8164                           ;	Write Protection Block 1
  8165                           ;	WRT1 = 0x1, unprogrammed default
  8166                           ;	Write Protection Block 2
  8167                           ;	WRT2 = 0x1, unprogrammed default
  8168                           ;	Write Protection Block 3
  8169                           ;	WRT3 = 0x1, unprogrammed default
  8170                           ;	Write Protection Block 3
  8171                           ;	WRT4 = 0x1, unprogrammed default
  8172                           ;	Write Protection Block 3
  8173                           ;	WRT5 = 0x1, unprogrammed default
  8174                           ;	Write Protection Block 3
  8175                           ;	WRT6 = 0x1, unprogrammed default
  8176                           ;	Write Protection Block 3
  8177                           ;	WRT7 = 0x1, unprogrammed default
  8178   300006                     	org	3145734
  8179   300006  FF                 	db	255
  8180                           
  8181                           ;Config register CONFIG4H @ 0x300007
  8182                           ;	unspecified, using default values
  8183                           ;	Configuration Register Write Protection bit
  8184                           ;	WRTC = 0x1, unprogrammed default
  8185                           ;	Boot Block Write Protection bit
  8186                           ;	WRTB = 0x1, unprogrammed default
  8187                           ;	Data EEPROM Write Protection bit
  8188                           ;	WRTD = 0x1, unprogrammed default
  8189                           ;	Scanner Enable bit
  8190                           ;	SCANE = 0x1, unprogrammed default
  8191                           ;	Low Voltage Programming Enable bit
  8192                           ;	LVP = 0x1, unprogrammed default
  8193   300007                     	org	3145735
  8194   300007  FF                 	db	255
  8195                           
  8196                           ;Config register CONFIG5L @ 0x300008
  8197                           ;	unspecified, using default values
  8198                           ;	UserNVM Program Memory Code Protection bit
  8199                           ;	CP = 0x1, unprogrammed default
  8200                           ;	DataNVM Memory Code Protection bit
  8201                           ;	CPD = 0x1, unprogrammed default
  8202   300008                     	org	3145736
  8203   300008  FF                 	db	255
  8204                           
  8205                           ;Config register CONFIG5H @ 0x300009
  8206                           ;	unspecified, using default values
  8207   300009                     	org	3145737
  8208   300009  FF                 	db	255
  8209                           
  8210                           ;Config register CONFIG6L @ 0x30000A
  8211                           ;	unspecified, using default values
  8212                           ;	Table Read Protection Block 0
  8213                           ;	EBTR0 = 0x1, unprogrammed default
  8214                           ;	Table Read Protection Block 1
  8215                           ;	EBTR1 = 0x1, unprogrammed default
  8216                           ;	Table Read Protection Block 2
  8217                           ;	EBTR2 = 0x1, unprogrammed default
  8218                           ;	Table Read Protection Block 3
  8219                           ;	EBTR3 = 0x1, unprogrammed default
  8220                           ;	Table Read Protection Block 4
  8221                           ;	EBTR4 = 0x1, unprogrammed default
  8222                           ;	Table Read Protection Block 5
  8223                           ;	EBTR5 = 0x1, unprogrammed default
  8224                           ;	Table Read Protection Block 6
  8225                           ;	EBTR6 = 0x1, unprogrammed default
  8226                           ;	Table Read Protection Block 7
  8227                           ;	EBTR7 = 0x1, unprogrammed default
  8228   30000A                     	org	3145738
  8229   30000A  FF                 	db	255
  8230                           
  8231                           ;Config register CONFIG6H @ 0x30000B
  8232                           ;	unspecified, using default values
  8233                           ;	Boot Block Table Read Protection bit
  8234                           ;	EBTRB = 0x1, unprogrammed default
  8235   30000B                     	org	3145739
  8236   30000B  FF                 	db	255
  8237                           tosu	equ	0xFFF
  8238                           tosh	equ	0xFFE
  8239                           tosl	equ	0xFFD
  8240                           stkptr	equ	0xFFC
  8241                           pclatu	equ	0xFFB
  8242                           pclath	equ	0xFFA
  8243                           pcl	equ	0xFF9
  8244                           tblptru	equ	0xFF8
  8245                           tblptrh	equ	0xFF7
  8246                           tblptrl	equ	0xFF6
  8247                           tablat	equ	0xFF5
  8248                           prodh	equ	0xFF4
  8249                           prodl	equ	0xFF3
  8250                           indf0	equ	0xFEF
  8251                           postinc0	equ	0xFEE
  8252                           postdec0	equ	0xFED
  8253                           preinc0	equ	0xFEC
  8254                           plusw0	equ	0xFEB
  8255                           fsr0h	equ	0xFEA
  8256                           fsr0l	equ	0xFE9
  8257                           wreg	equ	0xFE8
  8258                           indf1	equ	0xFE7
  8259                           postinc1	equ	0xFE6
  8260                           postdec1	equ	0xFE5
  8261                           preinc1	equ	0xFE4
  8262                           plusw1	equ	0xFE3
  8263                           fsr1h	equ	0xFE2
  8264                           fsr1l	equ	0xFE1
  8265                           bsr	equ	0xFE0
  8266                           indf2	equ	0xFDF
  8267                           postinc2	equ	0xFDE
  8268                           postdec2	equ	0xFDD
  8269                           preinc2	equ	0xFDC
  8270                           plusw2	equ	0xFDB
  8271                           fsr2h	equ	0xFDA
  8272                           fsr2l	equ	0xFD9
  8273                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         170
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     78      86
    BANK0           160     52     136
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    MoveBuggy@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    MoveBuggy@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    MoveBuggy@color_detected	PTR unsigned char  size(2) Largest target is 3561
		 -> RAM(DATA[3561]), 

    LightBlueInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    LightBlueInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    OrangeInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    OrangeInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    PinkInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    PinkInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    YellowInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    YellowInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    BlueInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    BlueInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    GreenInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    GreenInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    RedInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    RedInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnLeft135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnLeft90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    fullSpeedBackwards@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    fullSpeedBackwards@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    fullSpeedBackwards@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    fullSpeedBackwards@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    fullSpeedBackwards@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    fullSpeedBackwards@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    S1153DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    S1153DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), main@motorL(BANK0[9]), 

    detect_color@tempval	PTR struct RGB_val size(2) Largest target is 8
		 -> main@initial_color(BANK0[8]), 

    Update_RGBC@tempval	PTR struct RGB_val size(2) Largest target is 8
		 -> main@initial_color(BANK0[8]), 


Critical Paths under _main in COMRAM

    _fullSpeedAhead->_setMotorPWM
    _detect_color->___fltol
    ___fltol->___flmul
    ___flmul->___fldiv
    ___fldiv->___xxtofl
    _color_click_init->_color_writetoaddr
    _Update_RGBC->_color_read_Blue
    _Update_RGBC->_color_read_Clear
    _Update_RGBC->_color_read_Green
    _Update_RGBC->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _MoveBuggy->_BlueInstructions
    _MoveBuggy->_GreenInstructions
    _MoveBuggy->_LightBlueInstructions
    _MoveBuggy->_OrangeInstructions
    _MoveBuggy->_PinkInstructions
    _MoveBuggy->_RedInstructions
    _MoveBuggy->_YellowInstructions
    _YellowInstructions->_turnRight90
    _RedInstructions->_turnRight90
    _turnRight90->_turnRight
    _PinkInstructions->_turnLeft90
    _OrangeInstructions->_turnRight135
    _turnRight135->_turnRight
    _turnRight->_setMotorPWM
    _LightBlueInstructions->_turnLeft135
    _turnLeft135->_turnLeft
    _GreenInstructions->_turnLeft90
    _BlueInstructions->_turnLeft90
    _turnLeft90->_turnLeft
    _turnLeft->_setMotorPWM
    _stop->_setMotorPWM
    _fullSpeedBackwards->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _interrupts_clear_colorclick->_init_colorclick_interrupts
    _init_colorclick_interrupts->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    i2_interrupts_clear_colorclick->i2_init_colorclick_interrupts
    i2_init_colorclick_interrupts->i2_color_writetoaddr
    i2_color_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_detect_color
    _detect_color->___fltol

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0  120430
                                             22 BANK0     30    30      0
                    _Interrupts_init
                           _LED_init
                          _MoveBuggy
                        _Timer0_init
                        _Update_RGBC
                         _WhiteLight
                   _color_click_init
                       _detect_color
                     _fullSpeedAhead
                    _initDCmotorsPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _fullSpeedAhead                                       6     2      4    2245
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _detect_color                                        18    16      2    6580
                                              4 BANK0     18    16      2
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     616
                                              8 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     517
                                             72 COMRAM     6     2      4
                                              0 BANK0      4     4      0
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    1886
                                             47 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1541
                                             22 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     750
                                             12 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WhiteLight                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Update_RGBC                                          2     0      2     616
                                             19 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              9 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MoveBuggy                                            6     0      6  103956
                                             45 COMRAM     6     0      6
                   _BlueInstructions
                  _GreenInstructions
              _LightBlueInstructions
                 _OrangeInstructions
                   _PinkInstructions
                    _RedInstructions
                 _YellowInstructions
 ---------------------------------------------------------------------------------
 (2) _YellowInstructions                                   7     3      4   14746
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                        _turnRight90
 ---------------------------------------------------------------------------------
 (2) _RedInstructions                                      7     3      4   14746
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                        _turnRight90
 ---------------------------------------------------------------------------------
 (3) _turnRight90                                          5     1      4    7145
                                             33 COMRAM     5     1      4
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _PinkInstructions                                     7     3      4   14898
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                         _turnLeft90
 ---------------------------------------------------------------------------------
 (2) _OrangeInstructions                                   7     3      4   14594
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                       _turnRight135
 ---------------------------------------------------------------------------------
 (3) _turnRight135                                         5     1      4    6993
                                             33 COMRAM     5     1      4
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (4) _turnRight                                            6     2      4    2593
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _LightBlueInstructions                                7     3      4   14442
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                        _turnLeft135
 ---------------------------------------------------------------------------------
 (3) _turnLeft135                                          5     1      4    6841
                                             33 COMRAM     5     1      4
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (2) _GreenInstructions                                    7     3      4   14898
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                         _turnLeft90
 ---------------------------------------------------------------------------------
 (2) _BlueInstructions                                     7     3      4   14942
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                         _turnLeft90
 ---------------------------------------------------------------------------------
 (3) _turnLeft90                                           5     1      4    7297
                                             33 COMRAM     5     1      4
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (4) _turnLeft                                             6     2      4    2441
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _stop                                                 5     1      4    4113
                                             27 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _fullSpeedBackwards                                   6     2      4    3157
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    1829
                                             21 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                             14 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _LED_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0     772
        _interrupts_clear_colorclick
 ---------------------------------------------------------------------------------
 (2) _interrupts_clear_colorclick                          0     0      0     772
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
         _init_colorclick_interrupts
 ---------------------------------------------------------------------------------
 (3) _init_colorclick_interrupts                           1     1      0     750
                                             12 COMRAM     1     1      0
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     750
                                             10 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              9 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _LowISR                                               3     3      0       0
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _HighISR                                              0     0      0     244
      i2_interrupts_clear_colorclick
 ---------------------------------------------------------------------------------
 (9) i2_interrupts_clear_colorclick                        0     0      0     244
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
       i2_init_colorclick_interrupts
 ---------------------------------------------------------------------------------
 (10) i2_init_colorclick_interrupts                        1     1      0     222
                                              4 COMRAM     1     1      0
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (11) i2_color_writetoaddr                                 2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (12) i2_I2C_2_Master_Write                                1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (12) i2_I2C_2_Master_Stop                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (12) i2_I2C_2_Master_Start                                0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (13) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Interrupts_init
     _interrupts_clear_colorclick
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
       _init_colorclick_interrupts
         _color_writetoaddr
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
   _LED_init
   _MoveBuggy
     _BlueInstructions
       _fullSpeedBackwards
         _setMotorPWM
           ___lwdiv
             ___wmul (ARG)
           ___wmul
       _stop
         _setMotorPWM
       _turnLeft90
         _stop
         _turnLeft
           _setMotorPWM
     _GreenInstructions
       _fullSpeedBackwards
       _stop
       _turnLeft90
     _LightBlueInstructions
       _fullSpeedBackwards
       _stop
       _turnLeft135
         _stop
         _turnLeft
     _OrangeInstructions
       _fullSpeedBackwards
       _stop
       _turnRight135
         _stop
         _turnRight
           _setMotorPWM
     _PinkInstructions
       _fullSpeedBackwards
       _stop
       _turnLeft90
     _RedInstructions
       _fullSpeedBackwards
       _stop
       _turnRight90
         _stop
         _turnRight
     _YellowInstructions
       _fullSpeedBackwards
       _stop
       _turnRight90
   _Timer0_init
   _Update_RGBC
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _WhiteLight
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
   _detect_color
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       ___fldiv (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _fullSpeedAhead
     _setMotorPWM
   _initDCmotorsPWM
   _stop

 _LowISR (ROOT)

 _HighISR (ROOT)
   i2_interrupts_clear_colorclick
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle
     i2_init_colorclick_interrupts
       i2_color_writetoaddr
         i2_I2C_2_Master_Start
         i2_I2C_2_Master_Stop
         i2_I2C_2_Master_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      64        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     34      88       5       85.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4E      56       1       91.5%
BITBIGSFRhlllh      52      0       0      41        0.0%
BITBIGSFRhlllll     37      0       0      43        0.0%
BITBIGSFRllh        2D      0       0      46        0.0%
BITBIGSFRlllhll     2A      0       0      54        0.0%
BITBIGSFRllllhl     23      0       0      61        0.0%
BITBIGSFRhhhlll     1D      0       0      38        0.0%
BITBIGSFRhhhhlh     1B      0       0      33        0.0%
BITBIGSFRhhhhll     13      0       0      34        0.0%
BITBIGSFRlllhhh     11      0       0      48        0.0%
BITBIGSFRlllhhh     11      0       0      49        0.0%
BITBIGSFRhhhlhh      E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRlllhhh      C      0       0      47        0.0%
BITBIGSFRlllhll      9      0       0      58        0.0%
BITBIGSFRhlllll      8      0       0      44        0.0%
BITBIGSFRllllhh      6      0       0      60        0.0%
BITBIGSFRlllhll      6      0       0      53        0.0%
BITBIGSFRlllhll      5      0       0      56        0.0%
BITBIGSFRlllhlh      5      0       0      52        0.0%
BITBIGSFRlllhll      3      0       0      55        0.0%
BITBIGSFRlllhll      3      0       0      57        0.0%
BITBIGSFRlllhhl      3      0       0      51        0.0%
BITBIGSFRhllllh      2      0       0      42        0.0%
BITBIGSFRhhhllh      2      0       0      37        0.0%
BITBIGSFRlllll       2      0       0      62        0.0%
BITBIGSFRhhhlhl      1      0       0      36        0.0%
BITBIGSFRlllhhh      1      0       0      50        0.0%
BITBIGSFRhllhh       1      0       0      39        0.0%
BITBIGSFRhllhl       1      0       0      40        0.0%
BITBIGSFRlllhll      1      0       0      59        0.0%
BITBIGSFRlh          1      0       0      45        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12E      63        0.0%
DATA                 0      0     12E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Mar 09 15:40:09 2023

                       _color_read_Red 1FEE                           ___fldiv@aexp 002F  
                         ___fldiv@bexp 002E                           ___fldiv@sign 0027  
                      _color_read_Blue 20DE                                     l21 2284  
                                   l30 208C                                     l24 23AC  
                                   l33 212C                                     l42 0670  
                                   l27 203C                                     l36 20DC  
                                   l60 0676                                     l39 1E84  
                                   l56 0670                                     l90 22B0  
                                   l93 22D6                                     l87 22AE  
                                   l96 2442                                     l99 242E  
                                   bsr 000FE0                    ___wmul@multiplicand 000B  
                     _anti_moves_array 0128                       _color_read_Clear 208E  
                     _color_read_Green 203E                      ??_Interrupts_init 000E  
                                  l102 2438                                    l105 2418  
                                  l130 245E                                    l203 15DE  
                                  l108 2250                                    l213 1878  
                                  l222 1FEC                                    l127 240C  
                                  l231 1EDE                                    l312 217A  
                                  l208 17A2                                    l305 234A  
                                  l315 23E6                                    l181 1A8E  
                                  l193 194C                                    l249 1F38  
                                  l258 1F92                                    l188 115A  
                                  l517 1B9A                                    l429 238C  
                                  l198 16CC                                    l526 1DB2  
                                  l607 2324                                    l535 19FE  
                                  l544 1B14                                    l553 1C20  
                                  l562 1CA6                                    l571 1D2C  
                                  l581 13E8                                    l904 14F0  
                                  l587 13E8                    i2_color_writetoaddr 23AE  
                                  wreg 000FE8                           ___flmul@aexp 0041  
                         ___flmul@bexp 0042                           ___flmul@sign 003C  
                         ___flmul@temp 0047                           ___flmul@prod 0043  
                         ___fltol@exp1 004E                                   l1200 0CE0  
                                 l1105 1E26                                   l1202 0D58  
                                 l1203 0D46                                   l1221 073C  
                                 l1230 09AA                                   l1231 0998  
                                 l1225 0AA0                                   l3002 0D68  
                                 l3010 0DB0                                   l3020 0E1A  
                                 l3012 0DCA                                   l3004 0D74  
                                 l1228 0932                                   l3100 0838  
                                 l3022 0E28                                   l3014 0DE0  
                                 l3006 0D82                                   l1238 0A62  
                                 l3110 08B6                                   l3102 0848  
                                 l1262 0E92                                   l1191 0C9A  
                                 l3024 0E2E                                   l3016 0DFA  
                                 l3008 0DAC                                   l3120 0930  
                                 l3112 08EC                                   l3104 0864  
                                 l3040 0694                                   l1265 0FEE  
                                 l1098 1E1E                                   l3026 0E30  
                                 l3018 0E16                                   l1194 0C5E  
                                 l3130 0990                                   l3122 0942  
                                 l3114 08FA                                   l3106 0870  
                                 l3050 06DA                                   l3042 06A4  
                                 l3034 0678                                   l3210 0E4E  
                                 l2500 1DB4                                   l3140 09FE  
                                 l3124 0950                                   l3116 0918  
                                 l3108 088C                                   l3060 0706  
                                 l3052 06E0                                   l3044 06B4  
                                 l3036 0684                                   l1276 0F86  
                                 l3220 0ECC                                   l3212 0E5C  
                                 l1189 0E3A                                   l1269 0F2A  
                                 l2510 1DEC                                   l2502 1DBC  
                                 l3150 0A66                                   l3134 09BA  
                                 l3142 0A02                                   l3126 0954  
                                 l3118 0922                                   l3070 075C  
                                 l3062 0716                                   l3054 06E6  
                                 l3046 06C4                                   l3038 0692  
                                 l3230 0F20                                   l3222 0ED4  
                                 l3214 0EA2                                   l2520 1E18  
                                 l2512 1DF2                                   l2504 1DCE  
                                 l2600 1582                                   l3160 0A90  
                                 l3152 0A76                                   l3144 0A1C  
                                 l3136 09C6                                   l3128 0962  
                                 l3080 079C                                   l3064 0726  
                                 l3056 06F4                                   l3048 06CA  
                                 l3240 0F96                                   l3232 0F5C  
                                 l3224 0EE0                                   l3216 0EB8  
                                 l3208 0E3E                                   l2522 243A  
                                 l2530 2430                                   l2514 1E08  
                                 l2506 1DD6                                   l2602 1598  
                                 l3154 0A84                                   l3146 0A30  
                                 l3138 09D4                                   l3090 07E6  
                                 l3082 07A8                                   l3074 0770  
                                 l3066 072C                                   l3058 06F6  
                                 l3250 0FDE                                   l3242 0F9A  
                                 l3234 0F68                                   l3226 0F12  
                                 l3410 1A00                                   l2524 243E  
                                 l2532 2434                                   l2516 1E10  
                                 l2508 1DDE                                   l2540 1074  
                                 l2700 1F3A                                   l2604 15AE  
                                 l3500 130C                                   l3156 0A86  
                                 l3148 0A4A                                   l3092 07F2  
                                 l3084 07C0                                   l3076 077C  
                                 l3068 074C                                   l3244 0FBE  
                                 l3236 0F76                                   l3228 0F14  
                                 l3420 1A68                                   l3412 1A10  
                                 l2526 2410                                   l3406 2402  
                                 l2518 1E12                                   l2542 1078  
                                 l2534 0FF0                                   l2710 1F80  
                                 l2702 1F42                                   l2606 15BA  
                                 l3510 1378                                   l3502 1320  
                                 l2630 221E                                   l2622 2426  
                                 l3270 2256                                   l3158 0A8C  
                                 l3094 0802                                   l3086 07CC  
                                 l3078 0786                                   l3246 0FCE  
                                 l3238 0F94                                   l3430 1A82  
                                 l3422 1A6A                                   l3414 1A36  
                                 l2528 2414                                   l2720 2152  
                                 l2544 10BA                                   l2536 100C  
                                 l2640 17A4                                   l2560 18BE  
                                 l2800 1D86                                   l2712 1F82  
                                 l2704 1F56                                   l2608 15C6  
                                 l3512 1390                                   l3504 1338  
                                 l2632 2226                                   l2624 242A  
                                 l3408 2458                                   l3272 2260  
                                 l3096 080E                                   l3088 07D8  
                                 l3248 0FDC                                   l3440 1752  
                                 l3432 1A8C                                   l3424 1A74  
                                 l3416 1A3A                                   l2490 22B0  
                                 l2554 2390                                   l2722 215C  
                                 l2714 212E                                   l2546 10D6  
                                 l2538 1060                                   l2650 183E  
                                 l2642 1800                                   l2570 1932  
                                 l2562 18D6                                   l2810 196C  
                                 l2802 1D9E                                   l2706 1F58  
                                 l3514 13A4                                   l3506 134C  
                                 l2634 224C                                   l2626 2212  
                                 l2730 2286                                   l3274 2270  
                                 l3098 081E                                   l3450 178A  
                                 l3442 175E                                   l3434 16CE  
                                 l3426 1A76                                   l3418 1A5E  
                                 l2492 22C0                                   l2724 2166  
                                 l2716 2138                                   l3460 2338  
                                 l3452 2326                                   l2548 111A  
                                 l2652 1848                                   l2644 180C  
                                 l2572 193E                                   l2564 18E2  
                                 l2556 187A                                   l2580 1664  
                                 l2660 1F9C                                   l2820 19BE  
                                 l2812 1980                                   l2804 194E  
                                 l2708 1F6C                                   l3516 13BC  
                                 l3508 1364                                   l2636 224E  
                                 l2628 2216                                   l2740 229C  
                                 l2732 2290                                   l3276 227A  
                                 l3268 2252                                   l2900 0ABC  
                                 l3700 0234                                   l3444 1768  
                                 l3436 172A                                   l3428 1A80  
                                 l2726 2170                                   l2718 2148  
                                 l3470 2344                                   l3462 233A  
                                 l3454 232C                                   l2494 2300  
                                 l2654 1854                                   l2646 1828  
                                 l2566 18F8                                   l2558 18B2  
                                 l2590 16B4                                   l2582 1670  
                                 l2574 15E0                                   l2670 1FDC  
                                 l2662 1FB0                                   l2822 19D2  
                                 l2814 1994                                   l2806 1956  
                                 l2830 1AAE                                   l3518 13D0  
                                 l2750 2084                                   l2742 1FEE  
                                 l3278 1E28                                   l2734 2296  
                                 l2910 0AF0                                   l2902 0ABE  
                                 l3710 0360                                   l3702 0320  
                                 l3446 1772                                   l3438 1736  
                                 l3472 2346                                   l3464 233C  
                                 l3456 2332                                   l2496 231C  
                                 l2656 1860                                   l2648 1834  
                                 l2568 1926                                   l2584 1686  
                                 l2576 163C                                   l2664 1FB2  
                                 l2816 1996                                   l2808 196A  
                                 l2592 14F2                                   l2680 1EB8  
                                 l2672 1E86                                   l2840 1B00  
                                 l2832 1AC2                                   l2824 1A90  
                                 l2760 208E                                   l2744 2034  
                                 l2736 2298                                   l2920 0B22  
                                 l2904 0ACE                                   l2912 0AF8  
                                 l3800 0600                                   l3720 03A8  
                                 l3712 0370                                   l3704 0330  
                                 l3448 177E                                   l3474 2348  
                                 l3466 233E                                   l3458 2336  
                                 l2586 169C                                   l2578 1648  
                                 l2666 1FC6                                   l2658 1F94  
                                 l2818 19A6                                   l2594 154E  
                                 l2690 1EFC                                   l2850 1BCE  
                                 l2842 1B9C                                   l2682 1ECC  
                                 l2674 1E8E                                   l2770 1B1E  
                                 l2834 1AD6                                   l2826 1A98  
                                 l3490 238A                                   l2754 20DE  
                                 l2762 20D4                                   l2738 229A  
                                 l2930 0B56                                   l2922 0B24  
                                 l2914 0B08                                   l2906 0ADE  
                                 l3650 13EA                                   l3810 0648  
                                 l3802 0608                                   l3730 03F8  
                                 l3722 03B8                                   l3714 0380  
                                 l3706 0340                                   l3468 2340  
                                 l2588 16A8                                   l2668 1FDA  
                                 l2596 155A                                   l2692 1EFE  
                                 l2860 1C22                                   l2852 1BE2  
                                 l2844 1BA4                                   l2684 1ECE  
                                 l2676 1EA2                                   l2780 1B5E  
                                 l2772 1B32                                   l2836 1AD8  
                                 l2828 1AAC                                   l3492 12B6  
                                 l3484 236E                                   l2756 2124  
                                 l2748 203E                                   l2940 0B9C  
                                 l2924 0B34                                   l2932 0B5E  
                                 l2916 0B0E                                   l2908 0AEE  
                                 l3660 1442                                   l3652 1400  
                                 l3812 0658                                   l3804 0618  
                                 l3740 0440                                   l3724 03C8  
                                 l3732 0400                                   l3716 0390  
                                 l3708 0350                                   l3820 115C  
                                 l2766 23CE                                   l2790 1D4A  
                                 l2598 1576                                   l2694 1F12  
                                 l2686 1EE0                                   l2870 1C68  
                                 l2862 1C2A                                   l2854 1BE4  
                                 l2846 1BB8                                   l2678 1EA4  
                                 l2782 1B6E                                   l2774 1B34  
                                 l2838 1AE8                                   l3494 12C8  
                                 l3486 2376                                   l2950 0BC4  
                                 l2942 0BA0                                   l2934 0B6E  
                                 l2926 0B44                                   l2918 0B14  
                                 l3662 1452                                   l3814 0668  
                                 l3806 0628                                   l3750 0488  
                                 l3742 0450                                   l3734 0410  
                                 l3726 03D8                                   l3718 0398  
                                 l3830 11A0                                   l3822 117E  
                                 l2792 1D4C                                   l2880 1CB0  
                                 l2696 1F26                                   l2688 1EE8  
                                 l2872 1C6A                                   l2864 1C3E  
                                 l2856 1BF4                                   l2848 1BBA  
                                 l2784 1B86                                   l2776 1B48  
                                 l2768 1B16                                   l3496 12E0  
                                 l3488 2380                                   l2960 0C12  
                                 l2936 0B84                                   l2928 0B54  
                                 l3672 147C                                   l3664 1456  
                                 l3656 1414                                   l3808 0638  
                                 l3752 0498                                   l3760 04D0  
                                 l3744 0460                                   l3736 0420  
                                 l3728 03E8                                   l3840 11BE  
                                 l3832 11A4                                   l3824 1182  
                                 l2794 1D60                                   l2786 1D2E  
                                 l2890 1CF0                                   l2882 1CC4  
                                 l2698 1F28                                   l2874 1C7A  
                                 l2866 1C40                                   l2858 1C0C  
                                 l2778 1B5C                                   l3498 12F4  
                                 l2970 0C5C                                   l2962 0C22  
                                 l2954 0BD8                                   l2938 0B94  
                                 l2946 0BB4                                   l3690 14E0  
                                 l3682 14A4                                   l3674 1486  
                                 l3666 1464                                   l3658 1440  
                                 l3770 0520                                   l3762 04E0  
                                 l3754 04A8                                   l3738 0430  
                                 l3746 0468                                   l3850 11DA  
                                 l3842 11C2                                   l3834 11A8  
                                 l3826 1186                                   l2796 1D74  
                                 l2788 1D36                                   l2892 1D00  
                                 l2884 1CC6                                   l2876 1C92  
                                 l2868 1C54                                   l2980 0CAA  
                                 l2972 0C68                                   l2964 0C2A  
                                 l2956 0BF2                                   l2948 0BC4  
                                 l3684 14B0                                   l3676 1490  
                                 l3780 0568                                   l3772 0530  
                                 l3764 04F0                                   l3756 04B8  
                                 l3748 0478                                   l3860 1206  
                                 l3852 11E0                                   l3844 11C6  
                                 l3836 11B0                                   l3828 119A  
                                 l2798 1D76                                   l2894 1D18  
                                 l2886 1CDA                                   l2878 1CA8  
                                 l2982 0CC0                                   l2990 0CF0  
                                 l2974 0C86                                   l2966 0C3A  
                                 l2958 0C02                                   l3686 14C0  
                                 l3790 05B0                                   l3782 0578  
                                 l3766 0500                                   l3774 0538  
                                 l3758 04C8                                   l3694 005C  
                                 l3870 1248                                   l3862 1216  
                                 l3854 11E4                                   l3846 11CA  
                                 l3838 11B8                                   l2888 1CEE  
                                 l2992 0CFE                                   l2984 0CC6  
                                 l2976 0C88                                   l2968 0C4E  
                                 l2896 0AA2                                   l3688 14D0  
                                 l3792 05C0                                   l3784 0588  
                                 l3776 0548                                   l3768 0510  
                                 l3696 0062                                   l3880 128A  
                                 l3872 125C                                   l3864 122A  
                                 l3856 11F0                                   l3848 11D2  
                                 l2994 0D02                                   l2986 0CD0  
                                 l2978 0C98                                   l2898 0AAE  
                                 l3794 05D0                                   l3786 0598  
                                 l3778 0558                                   l3698 0148  
                                 l3882 12AE                                   l3874 1260  
                                 l3866 1232                                   l3858 1202  
                                 l2996 0D10                                   l2988 0CDE  
                                 l3796 05E0                                   l3788 05A0  
                                 l3876 1270                                   l3868 1242  
                                 l2998 0D3E                                   l3798 05F0  
                                 l3878 1288                                   u2000 1F0E  
                                 u2001 1F0A                                   u2010 1F38  
                                 u2011 1F34                                   u2020 1F68  
                                 u2100 1ABE                                   u2021 1F64  
                                 u2101 1ABA                                   u2030 1F92  
                                 u2110 1AE8                                   u2031 1F8E  
                                 u2111 1AE4                                   u2120 1BCA  
                                 u2040 1B44                                   u2200 0ADE  
                                 u2121 1BC6                                   u2041 1B40  
                                 u2201 0ADA                                   u2130 1BF4  
                                 u2050 1B6E                                   u2210 0B22  
                                 u2131 1BF0                                   u2051 1B6A  
                                 u2211 0B1E                                   u2060 1D5C  
                                 u2140 1C50                                   u2300 0CC0  
                                 u2220 0B34                                   u2061 1D58  
                                 u2141 1C4C                                   u2301 0CBC  
                                 u2221 0B30                                   u2070 1D86  
                                 u2150 1C7A                                   u2310 0CDE  
                                 u2230 0B44                                   u2071 1D82  
                                 u2151 1C76                                   u2311 0CDA  
                                 u2231 0B40                                   u2080 197C  
                                 u2160 1CD6                                   u2400 0E28  
                                 u2320 0CFE                                   u2240 0B84  
                                 u4000 0648                           _BAUD4CONbits 000EE9  
                                 u2081 1978                                   u2161 1CD2  
                                 u2401 0E24                                   u2321 0CFA  
                                 u2241 0B80                                   u4001 0644  
                                 u2090 19A6                                   u2170 1D00  
                                 u2330 0D10                                   u2250 0BC4  
                                 u2410 0692                                   u4010 0658  
                                 u2091 19A2                                   u2171 1CFC  
                                 u2331 0D0C                                   u2251 0BC0  
                                 u2411 068E                                   u4011 0654  
                                 u3300 12F4                                   u2340 0D3E  
                                 u2260 0C3A                                   u2180 0ABC  
                                 u2500 0930                                   u2420 06A4  
                                 u4020 0668                                   u3301 12F0  
                                 u2341 0D3A                                   u2261 0C36  
                                 u2181 0AB8                                   u2501 092C  
                                 u2421 06A0                                   u4021 0664  
                                 u3310 1320                                   u2350 0D54  
                                 u2270 0C5C                                   u2190 0ACE  
                                 u2510 0950                                   u2430 06B4  
                                 u4030 1216                                   u3311 131C  
                                 u2351 0D50                                   u2271 0C58  
                                 u2191 0ACA                                   u2511 094C  
                                 u2431 06B0                                   u4031 1212  
                                 u1800 1DEC                                   u3320 134C  
                                 u2360 0D68                                   u2280 0C86  
                                 u2520 0962                                   u2440 06F4  
                                 u4040 1242                                   u1801 1DE8  
                                 u3321 1348                                   u2361 0D64  
                                 u2281 0C82                                   u2521 095E  
                                 u2441 06F0                                   u4041 123E  
                                 u1810 1E08                                   u3330 1378  
                                 u2370 0D82                                   u2290 0CAA  
                                 u2530 0990                                   u2450 0706  
                                 u4050 1270                                   _T2PR 000FBC  
                                 u1811 1E04                                   u4107 1B78  
                                 u3331 1374                                   u2371 0D7E  
                                 u2291 0CA6                                   u2531 098C  
                                 u2451 0702                                   u4051 126C  
                                 u1820 100C                                   u1900 154E  
                                 u3340 13A4                                   u2380 0DCA  
                                 u2540 09A6                                   u2460 0716  
                                 u3500 1478                                   u2700 0F0E  
                                 u3260 172A                                   u1821 1008  
                                 u1901 154A                                   u4117 1BFE  
                                 u3341 13A0                                   u2381 0DC6  
                                 u2541 09A2                                   u2461 0712  
                                 u3501 1474                                   u2701 0F0A  
                                 u3261 1726                                   u1830 10D6  
                                 u1910 1576                                   u3350 13D0  
                                 u2390 0DFA                                   u2550 09BA  
                                 u2470 074C                                   u3510 14A0  
                                 u2710 0F58                                   u3270 1752  
                                 u1831 10D2                                   u4207 186A  
                                 u1911 1572                                   u4127 1C84  
                                 u3351 13CC                                   u2391 0DF6  
                                 u2551 09B6                                   u2471 0748  
                                 u3511 149C                                   u2711 0F54  
                                 u3271 174E                                   u1920 223A  
                                 u2560 09D4                                   u2480 075C  
                                 u3520 14C0                                   u2720 0F76  
                                 u3600 0390                                   u4217 213E  
                                 u4137 15D0                                   u1921 2232  
                                 u2561 09D0                                   u2481 0758  
                                 u3521 14BC                                   u2721 0F72  
                                 u3601 038C                                   u1770 22C0  
                                 u3290 12C8                                   u2570 0A1C  
                                 u2490 08D6                                   u3530 14D0  
                                 u2730 0F86                                   u3610 03A8  
                                 u1771 22BC                                   u4147 1D0A  
                                 u3291 12C4                                   u2571 0A18  
                                 u3531 14CC                                   u2731 0F82  
                                 u3611 03A4                                   u4067 127C  
                                 u1780 22D6                                   u1940 1800  
                                 u1860 18B2                                   u2580 0A4A  
                                 u2740 0F94                                   u3700 0440  
                                 u3620 03B8                                   u3540 0330  
                                 u1781 22D2                                   u1941 17FC  
                                 u1861 18AE                                   u4157 1D90  
                                 u2581 0A46                                   u2741 0F90  
                                 u3701 043C                                   u3621 03B4  
                                 u3541 032C                                   u4077 1794  
                                 u1790 1DCE                                   u1950 1828  
                                 u1870 18D6                                   u2590 0A84  
                                 u3470 1400                                   u2750 0FCE  
                                 u2670 0E4E                                   u3710 0450  
                                 u3630 03C8                                   u3550 0340  
                                 u1791 1DCA                                   u1951 1824  
                                 u1871 18D2                                   u4167 19B0  
                                 u4087 2266                                   u2591 0A80  
                                 u2495 08CC                                   u3471 13FC  
                                 u2751 0FCA                                   u2671 0E4A  
                                 u3711 044C                                   u3631 03C4  
                                 u3551 033C                                   u1880 163C  
                                 u1960 1FC2                                   u3480 1436  
                                 u2760 0FDC                                   u2680 0E5C  
                                 u3800 04F0                                   u3720 0460  
                                 u3640 03D8                                   u3560 0350  
                                 u1881 1638                                   u1961 1FBE  
                                 u4177 19DC                                   u4097 1AF2  
                                 u2761 0FD8                                   u2681 0E58  
                                 u3801 04EC                                   u3721 045C  
                                 u3641 03D4                                   u3561 034C  
                                 u1890 1664                                   u1970 1FEC  
                                 u1938 223C                                   u3490 1464  
                                 u2690 0EB8                                   u3810 0500  
                                 u3730 0478                                   u3650 03E8  
                                 u3570 0360                                   u4187 16BE  
                                 u1891 1660                                   u1971 1FE8  
                                 u3491 1460                                   u2691 0EB4  
                                 u3811 04FC                                   u3731 0474  
                                 u3651 03E4                                   u3571 035C  
                                 u1980 1EB4                                   u3900 0598  
                                 u3820 0510                                   u3740 0488  
                                 u3660 03F8                                   u3580 0370  
                                 u4197 1944                                   u1981 1EB0  
                                 u3485 142A                                   u3901 0594  
                                 u3821 050C                                   u3741 0484  
                                 u3661 03F4                                   u3581 036C  
                                 u1990 1EDE                                   u3910 05B0  
                                 u3830 0520                                   u3750 0498  
                                 u3670 0410                                   u3590 0380  
                                 u1991 1EDA                                   u3911 05AC  
                                 u3831 051C                                   u3751 0494  
                                 u3671 040C                                   u3591 037C  
                                 u3920 05C0                                   u3840 0530  
                                 u3760 04A8                                   u3680 0420  
                                 u3921 05BC                                   u3841 052C  
                                 u3761 04A4                                   u3681 041C  
                                 u3930 05D0                                   u3850 0548  
                                 u3770 04B8                                   u3690 0430  
                                 u3931 05CC                                   u3851 0544  
                                 u3771 04B4                                   u3691 042C  
                                 u3940 05E0                                   u3860 0558  
                                 u3780 04C8                                   u3941 05DC  
                                 u3861 0554                                   u3781 04C4  
                                 u3950 05F0                                   u3870 0568  
                                 u3790 04E0                                   u3951 05EC  
                                 u3871 0564                                   u3791 04DC  
                                 i2l24 23CC                                   u3960 0600  
                                 u3880 0578                                   u3961 05FC  
                                 u3881 0574                                   u3970 0618  
                                 u3890 0588                                   u3971 0614  
                                 u3891 0584                                   u3980 0628  
                                 u3981 0624                                   u3990 0638  
                                 u3991 0634                                   i2l90 22D8  
                                 i2l93 22FE                                   i2l96 2456  
                                 _main 115C                     _YellowInstructions 1A90  
                                 fsr2h 000FDA                                   indf2 000FDF  
                                 fsr2l 000FD9                                   btemp 0057  
                                 _stop 187A         ??i2_init_colorclick_interrupts 0005  
                    main@initial_color 00CE                                   prodh 000FF4  
                                 prodl 000FF3                                   start 0058  
                 ?i2_color_writetoaddr 0003                        ___fldiv@new_exp 0028  
               __end_of_color_read_Red 203E                        __end_of_HighISR 236E  
                         ___param_bank 000000                            _turnLeft135 1F3A  
                  ?_YellowInstructions 0027                            _turnRight90 1E86  
                     __end_of_LED_init 240E                          ___fltol@sign1 004D  
                                ?_main 0001                        __end_of___fldiv 0E3C  
                      __end_of___flmul 0AA2                        __end_of___fltol 14F2  
                                ?_stop 001C                        __end_of___lwdiv 1E28  
                                i1l323 0048                                  i2l102 244C  
                                i2l105 2424                                  i2l312 21C8  
                                i2l315 2400                                  i2l331 236A  
                                _TMR0H 000FD4                                  _TMR0L 000FD3  
           __end_of_I2C_2_Master_Start 2444                   ??_YellowInstructions 002B  
           __end_of_I2C_2_Master_Write 241A                       _PinkInstructions 1B9C  
                   _int_threshold_high 0055                                  main@b 00CC  
             __end_of_BlueInstructions 1A00                                  tablat 000FF5  
                                plusw2 000FDB                                  ttemp5 0058  
                                ttemp6 005B                                  ttemp7 005F  
                                status 000FD8                                  wtemp8 0058  
                  detect_color@tempval 00B8                  ??i2_color_writetoaddr 0004  
              __end_of_color_read_Blue 212E                  _I2C_2_Master_RepStart 2426  
                 fullSpeedBackwards@mL 001C                   fullSpeedBackwards@mR 001E  
                      ?_color_read_Red 000D                        __initialization 21CA  
                         __end_of_main 12B6                   __end_of_detect_color 0678  
                         __end_of_stop 194E                  _LightBlueInstructions 1CA8  
                    ??_RedInstructions 002B    __end_of_interrupts_clear_colorclick 23E8  
       ?i2_interrupts_clear_colorclick 0001            _interrupts_clear_colorclick 23CE  
                               ??_main 00CA                                 ??_stop 0020  
                        __activetblptr 000000                           _turnRight135 1EE0  
                         ?_setMotorPWM 0016                                 _CCPR1H 000FAA  
                               _CCPR2H 000FA6                                 _CCPR3H 000F25  
                               _CCPR4H 000F21                                 _RC0PPS 000E62  
                               _RC4REG 000EE3                                 _RE2PPS 000E74  
                               _RD5PPS 000E6F                                 _RC7PPS 000E69  
                               _RE4PPS 000E76                                 _RD6PPS 000E70  
                               i1l3540 0044                                 i1l3536 0026  
                               i1l3538 0036                                 i2l2610 244E  
                               i2l2612 2452                                 i2l2620 2420  
                               i2l3260 21A0                                 i2l2550 22D8  
                               i2l2614 2444                                 i2l3262 21AA  
                               i2l3254 217C                                 i2l2552 22E8  
                               i2l2616 2448                                 i2l3264 21B4  
                               i2l3256 2186                                 i2l3520 23E8  
                               i2l2618 241C                                 i2l3266 21BE  
                               i2l3258 2196                                 i2l3542 234C  
                               i2l2728 23B0                                 i2l3544 235C  
                               i2l3546 2362                                 i2l3548 2366  
                               _RG6PPS 000E88                              ??_HighISR 0006  
             __end_of_color_click_init 2286                                 _RX4PPS 000E15  
                               _TX4REG 000EE4                       __end_of___xxtofl 0FF0  
                               _LowISR 0018                          ??_Timer0_init 0009  
                         _CCPTMRS0bits 000FAD                                 ___wmul 2300  
                            ??___fldiv 001F                              ??___flmul 0038  
                            ??___fltol 00B4                              ??___lwdiv 0013  
                               clear_0 21E8                                 clear_1 21F4  
                               isa$std 000001                           __pdataCOMRAM 0055  
                           _WhiteLight 2458                                 tblptrh 000FF7  
                               tblptrl 000FF6                                 tblptru 000FF8  
                               stop@mL 001C                                 stop@mR 001E  
                    ??_initDCmotorsPWM 000B             i2color_writetoaddr@address 0004  
                     __end_of_turnLeft 16CE                           ___xxtofl@arg 0013  
                         ___xxtofl@exp 0012                           ___xxtofl@val 0009  
                        ??_Update_RGBC 0016                             __accesstop 0060  
              __end_of__initialization 2206               __end_of_color_read_Clear 20DE  
             __end_of_color_read_Green 208E                 ?_I2C_2_Master_RepStart 0001  
                        ___rparam_used 000001                              ?_LED_init 0001  
                           ___fltol@f1 0049                       ?_color_read_Blue 000D  
                    _GreenInstructions 1D2E                        _Interrupts_init 2326  
                       __pcstackCOMRAM 0001                 ?_LightBlueInstructions 0027  
                   ?_GreenInstructions 0027                      detect_color@color 00C6  
                  __end_of_Timer0_init 238E                            MoveBuggy@mL 0030  
                          MoveBuggy@mR 0032                    OrangeInstructions@a 002D  
                  ??_GreenInstructions 002B                MoveBuggy@color_detected 002E  
         ??_init_colorclick_interrupts 000D                      __end_of_MoveBuggy 13EA  
                           __pbssBANK0 0060                             __pbssBANK1 0100  
            __end_of_GreenInstructions 1DB4                             ??_LED_init 0009  
                              ?_LowISR 0001                      _color_writetoaddr 238E  
                         _T2CLKCONbits 000FBF                           ?_turnLeft135 0022  
                  __end_of_Update_RGBC 1E86                     ?_color_writetoaddr 000B  
                              ?___wmul 0009               __end_of_PinkInstructions 1C22  
                         ?_turnRight90 0022                    ??_color_writetoaddr 000C  
                              _INT1PPS 000DF1                              ?___xxtofl 0009  
                          ?_WhiteLight 0001                                _SP4BRGH 000EE6  
                              _SP4BRGL 000EE5                                _SSP2ADD 000ED6  
                              _SSP2BUF 000ED5                             _color_flag 00B3  
                         _detect_color 005C                __end_of_Interrupts_init 234C  
                    ?_BlueInstructions 0027                 color_writetoaddr@value 000B  
                     ??_color_read_Red 000F                                _HighISR 0008  
            __end_of_color_writetoaddr 23AE                     ??_BlueInstructions 002B  
                      _RedInstructions 1B16                     _I2C_2_Master_Start 243A  
                  i2_I2C_2_Master_Idle 22D8                     _I2C_2_Master_Write 240E  
                              __Hparam 0000                    i2_I2C_2_Master_Stop 2444  
                              __Lparam 0000                      color_read_Red@tmp 0012  
                          _Timer0_init 236E                    GreenInstructions@mL 0027  
                  GreenInstructions@mR 0029             __end_of_fullSpeedBackwards 187A  
                              ___fldiv 0AA2                                ___flmul 0678  
                              ___fltol 13EA                    ?_I2C_2_Master_Start 0001  
                         turnLeft135@a 0026                                ___lwdiv 1DB4  
                  ?_I2C_2_Master_Write 0001                           turnLeft90@mL 0022  
                         turnLeft90@mR 0024                                __pcinit 21CA  
                              __ramtop 0E00                              ?_turnLeft 001C  
                              __ptext0 115C                                __ptext1 1A00  
                              __ptext2 16CE                                __ptext3 005C  
                              __ptext4 0E3C                                __ptext5 13EA  
                              __ptext6 0678                                __ptext7 0AA2  
                              __ptext8 2252                                __ptext9 2286  
                 ?i2_I2C_2_Master_Idle 0001   __end_ofi2_init_colorclick_interrupts 21CA  
         i2_init_colorclick_interrupts 217C                              _T2CONbits 000FBD  
                           ??___xxtofl 000D                   ?i2_I2C_2_Master_Stop 0001  
                            _T2HLTbits 000FBE                          _RxBufWriteCnt 0054  
                              _tmr_ovf 00B2                   ??_I2C_2_Master_Start 000A  
                 ??_I2C_2_Master_Write 000A                         __pintcode_body 234C  
                 end_of_initialization 2206            __end_ofi2_color_writetoaddr 23CE  
                    RedInstructions@mL 0027                     main@color_detected 00CD  
                    RedInstructions@mR 0029                                int_func 234C  
                          _Update_RGBC 1E28                      ?_color_click_init 0001  
                         turnRight90@a 0026             __end_of_OrangeInstructions 1CA8  
                   ??_color_click_init 000D                                postdec2 000FDD  
                              postinc0 000FEE                                postinc2 000FDE  
                           _time_array 0100                             _time_index 00B0  
                      _initDCmotorsPWM 1A00                             ??_turnLeft 0020  
                   setMotorPWM@negDuty 001B                  ??i2_I2C_2_Master_Idle 0001  
                    __end_of_turnRight 15E0                  ??i2_I2C_2_Master_Stop 0002  
                        ___xxtofl@sign 0011                    YellowInstructions@a 002D  
                            _TRISAbits 000F81                     setMotorPWM@posDuty 001A  
                            _TRISBbits 000F82                              _TRISCbits 000F83  
                            _TRISDbits 000F84     __end_of_init_colorclick_interrupts 217C  
        ?i2_init_colorclick_interrupts 0001             _init_colorclick_interrupts 212E  
                            _TRISEbits 000F85                              _TRISFbits 000F86  
                            _TRISGbits 000F87                              _TRISHbits 000F88  
                          ___fldiv@grs 002A                            ___fldiv@rem 0023  
                   PinkInstructions@mL 0027                     PinkInstructions@mR 0029  
                     fullSpeedAhead@mL 001C                       fullSpeedAhead@mR 001E  
              __end_of_RedInstructions 1B9C               color_writetoaddr@address 000C  
              ??_I2C_2_Master_RepStart 000A                       ?_Interrupts_init 0001  
                          ___flmul@grs 003D                            _CCP1CONbits 000FAB  
                    ?_color_read_Clear 000D                           _EUSART4RXbuf 009C  
                         _EUSART4TXbuf 0060                            _CCP2CONbits 000FA7  
                    ?_color_read_Green 000D                            _CCP3CONbits 000F26  
                          _CCP4CONbits 000F22                ??_LightBlueInstructions 002B  
                           main@motorL 00D6                             main@motorR 00DF  
                   ??_color_read_Clear 000F                     ??_color_read_Green 000F  
                           _turnLeft90 1F94                         __end_of_LowISR 0058  
                       _fullSpeedAhead 16CE                         __end_of___wmul 2326  
                        __pidataCOMRAM 2460                     detect_color@dist_B 00C9  
                   detect_color@dist_G 00C8                     detect_color@dist_R 00C7  
                    _int_threshold_low 004F                    color_read_Clear@tmp 0012  
                  start_initialization 21CA                          _TxBufWriteCnt 0052  
                 OrangeInstructions@mL 0027                   OrangeInstructions@mR 0029  
                            _MoveBuggy 12B6                    color_read_Green@tmp 0012  
                             ??_LowISR 0006                __end_of_initDCmotorsPWM 1A90  
               __end_of_fullSpeedAhead 17A4                               ??___wmul 000D  
        i2I2C_2_Master_Write@data_byte 0002                      ?_PinkInstructions 0027  
                   Update_RGBC@tempval 0014                     ??_PinkInstructions 002B  
         __end_ofi2_I2C_2_Master_Start 2458           __end_ofi2_I2C_2_Master_Write 2426  
                            ___fldiv@a 001B                              ___fldiv@b 0017  
                            ___flmul@a 0034                              ___flmul@b 0030  
                          __pbssCOMRAM 004F                           ??_WhiteLight 0009  
                        __pcstackBANK0 00B4                       ?_RedInstructions 0027  
                             ?_HighISR 0001                             ?_MoveBuggy 002E  
                     ___lwdiv@dividend 000F                           ?_Timer0_init 0001  
                          ?_turnLeft90 0022                        ?_fullSpeedAhead 001C  
                   BlueInstructions@mL 0027                     BlueInstructions@mR 0029  
                            __pintcode 0008                     __end_of_WhiteLight 2460  
                             ?___fldiv 0017                               ?___flmul 0030  
                             ?___fltol 0049                               ?___lwdiv 000F  
                          __pintcodelo 0018           ?_interrupts_clear_colorclick 0001  
                 I2C_2_Master_Read@ack 000B                   I2C_2_Master_Read@tmp 000C  
                        ?_turnRight135 0022                      _I2C_2_Master_Idle 22B0  
                   _fullSpeedBackwards 17A4                      _I2C_2_Master_Init 2286  
                    _I2C_2_Master_Read 2210                      _I2C_2_Master_Stop 2430  
                         _RxBufReadCnt 0053                     GreenInstructions@a 002D  
                   ?_I2C_2_Master_Idle 0001                     ?_I2C_2_Master_Init 0001  
                   ?_I2C_2_Master_Read 0001                          ??_setMotorPWM 0018  
                   ?_I2C_2_Master_Stop 0001                       ___lwdiv@quotient 0013  
                          turnLeft90@a 0026               initDCmotorsPWM@PWMperiod 0009  
              LightBlueInstructions@mL 0027                LightBlueInstructions@mR 0029  
                  ?_fullSpeedBackwards 001C                    ??_I2C_2_Master_Idle 0009  
                  ??_I2C_2_Master_Init 0009                           ?_Update_RGBC 0014  
                  ??_I2C_2_Master_Read 000A                         ___wmul@product 000D  
                             _LATAbits 000F79                    ??_I2C_2_Master_Stop 000A  
                             _LATCbits 000F7B                               _LATEbits 000F7D  
                             _LATFbits 000F7E                               _LATGbits 000F7F  
                             _LATHbits 000F80                               _IPR0bits 000E1F  
                             _PIE0bits 000E29                               _LED_init 2402  
                     RedInstructions@a 002D                               _PIE4bits 000E2D  
                             i1u338_20 0036                               i1u338_21 0032  
                          turnRight@mL 001C                            turnRight@mR 001E  
                             i2u422_47 218C                               _PIR0bits 000E33  
                             i2u184_40 22E8                               i2u184_41 22E4  
                             i2u185_40 22FE                               i2u185_41 22FA  
                             i2u339_40 235C                               i2u339_41 2358  
                             _PIR4bits 000E37                       ?_initDCmotorsPWM 0009  
                             _SSP2CON2 000EDA                               _SSP2STAT 000ED8  
                 ??_fullSpeedBackwards 0020                     _OrangeInstructions 1C22  
                    PinkInstructions@a 002D              __end_of_I2C_2_Master_Idle 22D8  
            __end_of_I2C_2_Master_Init 22B0              __end_of_I2C_2_Master_Read 2252  
                    ___wmul@multiplier 0009                         ??_turnRight135 0026  
            __end_of_I2C_2_Master_Stop 243A                           setMotorPWM@m 0016  
          I2C_2_Master_Write@data_byte 000A          ??_interrupts_clear_colorclick 000E  
           __end_of_YellowInstructions 1B16                      ??_color_read_Blue 000F  
                  ?_OrangeInstructions 0027                           _TxBufReadCnt 0051  
          ?_init_colorclick_interrupts 0001               i2color_writetoaddr@value 0003  
                            _turnRight 14F2          __end_of_I2C_2_Master_RepStart 2430  
                   color_read_Blue@tmp 0012                    __end_of_setMotorPWM 115C  
                          ??_MoveBuggy 0034                   i2_I2C_2_Master_Start 244E  
                 i2_I2C_2_Master_Write 241A                               __Hrparam 0000  
                 ??_OrangeInstructions 002B                               __Lrparam 0000  
        __end_of_LightBlueInstructions 1D2E            __end_ofi2_I2C_2_Master_Idle 2300  
          __end_ofi2_I2C_2_Master_Stop 244E                         turnRight135@mL 0022  
                       turnRight135@mR 0024                          turnLeft135@mL 0022  
                        turnLeft135@mR 0024                             _ANSELBbits 000E9A  
                           _ANSELDbits 000EA7                               ___xxtofl 0E3C  
                           _T0CON0bits 000FD5                             _T0CON1bits 000FD6  
                      ___lwdiv@divisor 0011                      BlueInstructions@a 002D  
                      ___lwdiv@counter 0015                             ?_turnRight 001C  
                             __ptext10 2458                               __ptext11 1E28  
                             __ptext20 1A90                               __ptext12 1FEE  
                             __ptext21 1B16                               __ptext13 203E  
                             __ptext30 194E                               __ptext22 1E86  
                             __ptext14 208E                               __ptext31 1F94  
                             __ptext23 1B9C                               __ptext15 20DE  
                             __ptext40 23CE                               __ptext32 15E0  
                             __ptext24 1C22                               __ptext16 2426  
                             __ptext41 212E                               __ptext33 187A  
                             __ptext25 1EE0                               __ptext17 2210  
                             __ptext50 217C                               __ptext42 238E  
                             __ptext34 17A4                               __ptext26 14F2  
                             __ptext18 236E                               __ptext51 23AE  
                             __ptext43 240E                               __ptext35 0FF0  
                             __ptext27 1CA8                               __ptext19 12B6  
                             __ptext52 241A                               __ptext44 2430  
                             __ptext36 2300                               __ptext28 1F3A  
                             __ptext53 2444                               __ptext45 243A  
                             __ptext37 1DB4                               __ptext29 1D2E  
                             __ptext54 244E                               __ptext46 22B0  
                             __ptext38 2402                               __ptext55 22D8  
                             __ptext39 2326                               __ptext49 23E8  
                         _SSP2CON1bits 000ED9                           _SSP2CON2bits 000EDA  
      ??i2_interrupts_clear_colorclick 0006                 LightBlueInstructions@a 002D  
                           turnLeft@mL 001C                             turnLeft@mR 001E  
                ?i2_I2C_2_Master_Start 0001                  ?i2_I2C_2_Master_Write 0001  
                        ??_turnLeft135 0026                               isa$xinst 000000  
                           _RC4STAbits 000EE7                               int$flags 0057  
                        ??_turnRight90 0026                       _BlueInstructions 194E  
                             _turnLeft 15E0                             _INTCONbits 000FF2  
                          _setMotorPWM 0FF0                          ?_detect_color 00B8  
                        turnRight135@a 0026                               intlevel1 0000  
                             intlevel2 0000                          turnRight90@mL 0022  
                        turnRight90@mR 0024                       ??_fullSpeedAhead 0020  
                 __end_of_turnRight135 1F3A                           ??_turnLeft90 0026  
                          _moves_index 00B1                       _color_click_init 2252  
                  __end_of_turnLeft135 1F94                             _SSP2DATPPS 000E1D  
                           _SSP2CLKPPS 000E1C                    __end_of_turnRight90 1EE0  
                       ??_detect_color 00BA                            ??_turnRight 0020  
                   __end_of_turnLeft90 1FEE                             _TX4STAbits 000EE8  
               ??i2_I2C_2_Master_Start 0002                 ??i2_I2C_2_Master_Write 0002  
                 YellowInstructions@mL 0027                   YellowInstructions@mR 0029  
__end_ofi2_interrupts_clear_colorclick 2402          i2_interrupts_clear_colorclick 23E8  
