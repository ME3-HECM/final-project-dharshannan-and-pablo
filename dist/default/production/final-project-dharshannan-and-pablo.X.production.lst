

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Mar 11 17:53:09 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    68                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    69                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    78                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    79                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    80                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    81                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    82   000000                     
    83                           ; Generated 06/04/2022 GMT
    84                           ; 
    85                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    86                           ; All rights reserved.
    87                           ; 
    88                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    89                           ; 
    90                           ; Redistribution and use in source and binary forms, with or without modification, are
    91                           ; permitted provided that the following conditions are met:
    92                           ; 
    93                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    94                           ;        conditions and the following disclaimer.
    95                           ; 
    96                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    97                           ;        of conditions and the following disclaimer in the documentation and/or other
    98                           ;        materials provided with the distribution. Publication is not required when
    99                           ;        this file is used in an embedded application.
   100                           ; 
   101                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   102                           ;        software without specific prior written permission.
   103                           ; 
   104                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   105                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   106                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   107                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   108                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   109                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   110                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   111                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   112                           ; 
   113                           ; 
   114                           ; Code-generator required, PIC18F67K40 Definitions
   115                           ; 
   116                           ; SFR Addresses
   117   000000                     
   118                           	psect	idataBANK0
   119   0029C8                     __pidataBANK0:
   120                           	callstack 0
   121                           
   122                           ;initializer for _int_threshold_high
   123   0029C8  0B54               	dw	2900
   124   000000                     _T0CON0bits	set	4053
   125   000000                     _T0CON1bits	set	4054
   126   000000                     _TX4REG	set	3812
   127   000000                     _RC4STAbits	set	3815
   128   000000                     _SP4BRGH	set	3814
   129   000000                     _TRISBbits	set	3970
   130   000000                     _TRISCbits	set	3971
   131   000000                     _TRISEbits	set	3973
   132   000000                     _LATEbits	set	3965
   133   000000                     _LATFbits	set	3966
   134   000000                     _LATGbits	set	3967
   135   000000                     _TRISFbits	set	3974
   136   000000                     _TRISGbits	set	3975
   137   000000                     _SSP2CON2bits	set	3802
   138   000000                     _RX4PPS	set	3605
   139   000000                     _SSP2CLKPPS	set	3612
   140   000000                     _SSP2DATPPS	set	3613
   141   000000                     _ANSELDbits	set	3751
   142   000000                     _SSP2ADD	set	3798
   143   000000                     _SSP2CON1bits	set	3801
   144   000000                     _RC4REG	set	3811
   145   000000                     _SP4BRGL	set	3813
   146   000000                     _TX4STAbits	set	3816
   147   000000                     _BAUD4CONbits	set	3817
   148   000000                     _LATAbits	set	3961
   149   000000                     _LATDbits	set	3964
   150   000000                     _LATHbits	set	3968
   151   000000                     _TRISAbits	set	3969
   152   000000                     _SSP2CON2	set	3802
   153   000000                     _TRISDbits	set	3972
   154   000000                     _CCPR4H	set	3873
   155   000000                     _CCPR3H	set	3877
   156   000000                     _SSP2STAT	set	3800
   157   000000                     _SSP2BUF	set	3797
   158   000000                     _IPR0bits	set	3615
   159   000000                     _PIE0bits	set	3625
   160   000000                     _RC7PPS	set	3689
   161   000000                     _RD5PPS	set	3695
   162   000000                     _RE2PPS	set	3700
   163   000000                     _RD6PPS	set	3696
   164   000000                     _T2PR	set	4028
   165   000000                     _T2CONbits	set	4029
   166   000000                     _TRISHbits	set	3976
   167   000000                     _CCPR2H	set	4006
   168   000000                     _CCPR1H	set	4010
   169   000000                     _LATCbits	set	3963
   170   000000                     _RE4PPS	set	3702
   171   000000                     _RG6PPS	set	3720
   172   000000                     _ANSELBbits	set	3738
   173   000000                     _TMR0L	set	4051
   174   000000                     _TMR0H	set	4052
   175   000000                     _INTCONbits	set	4082
   176   000000                     _T2CLKCONbits	set	4031
   177   000000                     _T2HLTbits	set	4030
   178   000000                     _CCP1CONbits	set	4011
   179   000000                     _CCPTMRS0bits	set	4013
   180   000000                     _CCP2CONbits	set	4007
   181   000000                     _CCP3CONbits	set	3878
   182   000000                     _CCP4CONbits	set	3874
   183   000000                     _PIE4bits	set	3629
   184   000000                     _PIR0bits	set	3635
   185   000000                     _PIR4bits	set	3639
   186   000000                     _RC0PPS	set	3682
   187                           
   188                           ; #config settings
   189                           
   190                           	psect	cinit
   191   002688                     __pcinit:
   192                           	callstack 0
   193   002688                     start_initialization:
   194                           	callstack 0
   195   002688                     __initialization:
   196                           	callstack 0
   197                           
   198                           ; Initialize objects allocated to BANK0 (2 bytes)
   199                           ; load TBLPTR registers with __pidataBANK0
   200   002688  0EC8               	movlw	low __pidataBANK0
   201   00268A  6EF6               	movwf	tblptrl,c
   202   00268C  0E29               	movlw	high __pidataBANK0
   203   00268E  6EF7               	movwf	tblptrh,c
   204   002690  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   205   002692  6EF8               	movwf	tblptru,c
   206   002694  0009               	tblrd		*+	;fetch initializer
   207   002696  CFF5 F0D3          	movff	tablat,__pdataBANK0
   208   00269A  0009               	tblrd		*+	;fetch initializer
   209   00269C  CFF5 F0D4          	movff	tablat,__pdataBANK0+1
   210                           
   211                           ; Clear objects allocated to BANK1 (140 bytes)
   212   0026A0  EE01  F000         	lfsr	0,__pbssBANK1
   213   0026A4  0E8C               	movlw	140
   214   0026A6                     clear_0:
   215   0026A6  6AEE               	clrf	postinc0,c
   216   0026A8  06E8               	decf	wreg,f,c
   217   0026AA  E1FD               	bnz	clear_0
   218                           
   219                           ; Clear objects allocated to BANK0 (62 bytes)
   220   0026AC  EE00  F060         	lfsr	0,__pbssBANK0
   221   0026B0  0E3E               	movlw	62
   222   0026B2                     clear_1:
   223   0026B2  6AEE               	clrf	postinc0,c
   224   0026B4  06E8               	decf	wreg,f,c
   225   0026B6  E1FD               	bnz	clear_1
   226                           
   227                           ; Clear objects allocated to COMRAM (8 bytes)
   228   0026B8  EE00  F04F         	lfsr	0,__pbssCOMRAM
   229   0026BC  0E08               	movlw	8
   230   0026BE                     clear_2:
   231   0026BE  6AEE               	clrf	postinc0,c
   232   0026C0  06E8               	decf	wreg,f,c
   233   0026C2  E1FD               	bnz	clear_2
   234   0026C4                     end_of_initialization:
   235                           	callstack 0
   236   0026C4                     __end_of__initialization:
   237                           	callstack 0
   238   0026C4  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   239   0026C6  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   240   0026C8  0100               	movlb	0
   241   0026CA  EF62  F008         	goto	_main	;jump to C main() function
   242                           
   243                           	psect	bssCOMRAM
   244   00004F                     __pbssCOMRAM:
   245                           	callstack 0
   246   00004F                     _int_threshold_low:
   247                           	callstack 0
   248   00004F                     	ds	2
   249   000051                     _TxBufReadCnt:
   250                           	callstack 0
   251   000051                     	ds	1
   252   000052                     _TxBufWriteCnt:
   253                           	callstack 0
   254   000052                     	ds	1
   255   000053                     _RxBufReadCnt:
   256                           	callstack 0
   257   000053                     	ds	1
   258   000054                     _RxBufWriteCnt:
   259                           	callstack 0
   260   000054                     	ds	1
   261   000055                     _color_flag:
   262                           	callstack 0
   263   000055                     	ds	1
   264   000056                     _moves_index:
   265                           	callstack 0
   266   000056                     	ds	1
   267                           
   268                           	psect	bssBANK0
   269   000060                     __pbssBANK0:
   270                           	callstack 0
   271   000060                     _EUSART4RXbuf:
   272                           	callstack 0
   273   000060                     	ds	20
   274   000074                     _tmr_ovf:
   275                           	callstack 0
   276   000074                     	ds	1
   277   000075                     _anti_moves_array:
   278                           	callstack 0
   279   000075                     	ds	40
   280   00009D                     _time_index:
   281                           	callstack 0
   282   00009D                     	ds	1
   283                           
   284                           	psect	dataBANK0
   285   0000D3                     __pdataBANK0:
   286                           	callstack 0
   287   0000D3                     _int_threshold_high:
   288                           	callstack 0
   289   0000D3                     	ds	2
   290                           
   291                           	psect	bssBANK1
   292   000100                     __pbssBANK1:
   293                           	callstack 0
   294   000100                     _EUSART4TXbuf:
   295                           	callstack 0
   296   000100                     	ds	60
   297   00013C                     _time_array:
   298                           	callstack 0
   299   00013C                     	ds	80
   300                           
   301                           	psect	cstackBANK0
   302   00009E                     __pcstackBANK0:
   303                           	callstack 0
   304   00009E                     ??___fltol:
   305                           
   306                           ; 1 bytes @ 0x0
   307   00009E                     	ds	4
   308   0000A2                     detect_color@tempval:
   309                           	callstack 0
   310                           
   311                           ; 2 bytes @ 0x4
   312   0000A2                     	ds	2
   313   0000A4                     ??_detect_color:
   314                           
   315                           ; 1 bytes @ 0x6
   316   0000A4                     	ds	12
   317   0000B0                     detect_color@color:
   318                           	callstack 0
   319                           
   320                           ; 1 bytes @ 0x12
   321   0000B0                     	ds	1
   322   0000B1                     detect_color@dist_R:
   323                           	callstack 0
   324                           
   325                           ; 1 bytes @ 0x13
   326   0000B1                     	ds	1
   327   0000B2                     detect_color@dist_G:
   328                           	callstack 0
   329                           
   330                           ; 1 bytes @ 0x14
   331   0000B2                     	ds	1
   332   0000B3                     detect_color@dist_B:
   333                           	callstack 0
   334                           
   335                           ; 1 bytes @ 0x15
   336   0000B3                     	ds	1
   337   0000B4                     ??_main:
   338                           
   339                           ; 1 bytes @ 0x16
   340   0000B4                     	ds	2
   341   0000B6                     main@b:
   342                           	callstack 0
   343                           
   344                           ; 2 bytes @ 0x18
   345   0000B6                     	ds	2
   346   0000B8                     main@color_detected:
   347                           	callstack 0
   348                           
   349                           ; 1 bytes @ 0x1A
   350   0000B8                     	ds	1
   351   0000B9                     main@initial_color:
   352                           	callstack 0
   353                           
   354                           ; 8 bytes @ 0x1B
   355   0000B9                     	ds	8
   356   0000C1                     main@motorL:
   357                           	callstack 0
   358                           
   359                           ; 9 bytes @ 0x23
   360   0000C1                     	ds	9
   361   0000CA                     main@motorR:
   362                           	callstack 0
   363                           
   364                           ; 9 bytes @ 0x2C
   365   0000CA                     	ds	9
   366                           
   367                           	psect	cstackCOMRAM
   368   000001                     __pcstackCOMRAM:
   369                           	callstack 0
   370   000001                     ??i2_I2C_2_Master_Idle:
   371   000001                     
   372                           ; 1 bytes @ 0x0
   373   000001                     	ds	1
   374   000002                     i2I2C_2_Master_Write@data_byte:
   375                           	callstack 0
   376                           
   377                           ; 1 bytes @ 0x1
   378   000002                     	ds	1
   379   000003                     i2color_writetoaddr@value:
   380                           	callstack 0
   381                           
   382                           ; 1 bytes @ 0x2
   383   000003                     	ds	1
   384   000004                     i2color_writetoaddr@address:
   385                           	callstack 0
   386                           
   387                           ; 1 bytes @ 0x3
   388   000004                     	ds	1
   389   000005                     ??i2_init_colorclick_interrupts:
   390                           
   391                           ; 1 bytes @ 0x4
   392   000005                     	ds	1
   393   000006                     ??_LowISR:
   394   000006                     
   395                           ; 1 bytes @ 0x5
   396   000006                     	ds	3
   397   000009                     ??_I2C_2_Master_Idle:
   398   000009                     ?_Return_Time:
   399                           	callstack 0
   400   000009                     ?___wmul:
   401                           	callstack 0
   402   000009                     ?___xxtofl:
   403                           	callstack 0
   404   000009                     initDCmotorsPWM@PWMperiod:
   405                           	callstack 0
   406   000009                     AppendMoves@moves_index:
   407                           	callstack 0
   408   000009                     AppendTime@temp:
   409                           	callstack 0
   410   000009                     Return_Anti_Moves@moves_index:
   411                           	callstack 0
   412   000009                     Return_Time@time_index:
   413                           	callstack 0
   414   000009                     ___wmul@multiplier:
   415                           	callstack 0
   416   000009                     ___xxtofl@val:
   417                           	callstack 0
   418                           
   419                           ; 4 bytes @ 0x8
   420   000009                     	ds	1
   421   00000A                     ??_I2C_2_Master_Read:
   422   00000A                     I2C_2_Master_Write@data_byte:
   423                           	callstack 0
   424                           
   425                           ; 1 bytes @ 0x9
   426   00000A                     	ds	1
   427   00000B                     color_writetoaddr@value:
   428                           	callstack 0
   429   00000B                     I2C_2_Master_Read@ack:
   430                           	callstack 0
   431   00000B                     AppendMoves@anti_moves_array:
   432                           	callstack 0
   433   00000B                     AppendTime@time_index:
   434                           	callstack 0
   435   00000B                     Return_Anti_Moves@anti_moves_array:
   436                           	callstack 0
   437   00000B                     Return_Time@time_array:
   438                           	callstack 0
   439   00000B                     ___wmul@multiplicand:
   440                           	callstack 0
   441                           
   442                           ; 2 bytes @ 0xA
   443   00000B                     	ds	1
   444   00000C                     color_writetoaddr@address:
   445                           	callstack 0
   446   00000C                     I2C_2_Master_Read@tmp:
   447                           	callstack 0
   448                           
   449                           ; 1 bytes @ 0xB
   450   00000C                     	ds	1
   451   00000D                     ??_Return_Time:
   452   00000D                     ??_Return_Anti_Moves:
   453   00000D                     ??_AppendMoves:
   454   00000D                     ??_color_click_init:
   455   00000D                     ??_init_colorclick_interrupts:
   456   00000D                     ??___xxtofl:
   457   00000D                     ?_color_read_Red:
   458                           	callstack 0
   459   00000D                     ?_color_read_Green:
   460                           	callstack 0
   461   00000D                     ?_color_read_Blue:
   462                           	callstack 0
   463   00000D                     ?_color_read_Clear:
   464                           	callstack 0
   465   00000D                     AppendTime@time_array:
   466                           	callstack 0
   467   00000D                     ___wmul@product:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0xC
   471   00000D                     	ds	1
   472   00000E                     AppendMoves@temp:
   473                           	callstack 0
   474   00000E                     Return_Anti_Moves@temp:
   475                           	callstack 0
   476                           
   477                           ; 1 bytes @ 0xD
   478   00000E                     	ds	1
   479   00000F                     ??_AppendTime:
   480   00000F                     ??_color_read_Red:
   481   00000F                     ??_color_read_Green:
   482   00000F                     ??_color_read_Blue:
   483   00000F                     ??_color_read_Clear:
   484   00000F                     ?___lwdiv:
   485                           	callstack 0
   486   00000F                     ___lwdiv@dividend:
   487                           	callstack 0
   488                           
   489                           ; 2 bytes @ 0xE
   490   00000F                     	ds	1
   491   000010                     Return_Time@temp:
   492                           	callstack 0
   493                           
   494                           ; 2 bytes @ 0xF
   495   000010                     	ds	1
   496   000011                     ___xxtofl@sign:
   497                           	callstack 0
   498   000011                     ___lwdiv@divisor:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0x10
   502   000011                     	ds	1
   503   000012                     ___xxtofl@exp:
   504                           	callstack 0
   505   000012                     color_read_Red@tmp:
   506                           	callstack 0
   507   000012                     color_read_Green@tmp:
   508                           	callstack 0
   509   000012                     color_read_Blue@tmp:
   510                           	callstack 0
   511   000012                     color_read_Clear@tmp:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0x11
   515   000012                     	ds	1
   516   000013                     ___lwdiv@quotient:
   517                           	callstack 0
   518   000013                     ___xxtofl@arg:
   519                           	callstack 0
   520                           
   521                           ; 4 bytes @ 0x12
   522   000013                     	ds	1
   523   000014                     Update_RGBC@tempval:
   524                           	callstack 0
   525                           
   526                           ; 2 bytes @ 0x13
   527   000014                     	ds	1
   528   000015                     ___lwdiv@counter:
   529                           	callstack 0
   530                           
   531                           ; 1 bytes @ 0x14
   532   000015                     	ds	1
   533   000016                     setMotorPWM@m:
   534                           	callstack 0
   535                           
   536                           ; 2 bytes @ 0x15
   537   000016                     	ds	1
   538   000017                     ?___fldiv:
   539                           	callstack 0
   540   000017                     ___fldiv@b:
   541                           	callstack 0
   542                           
   543                           ; 4 bytes @ 0x16
   544   000017                     	ds	1
   545   000018                     ??_setMotorPWM:
   546                           
   547                           ; 1 bytes @ 0x17
   548   000018                     	ds	2
   549   00001A                     setMotorPWM@posDuty:
   550                           	callstack 0
   551                           
   552                           ; 1 bytes @ 0x19
   553   00001A                     	ds	1
   554   00001B                     setMotorPWM@negDuty:
   555                           	callstack 0
   556   00001B                     ___fldiv@a:
   557                           	callstack 0
   558                           
   559                           ; 4 bytes @ 0x1A
   560   00001B                     	ds	1
   561   00001C                     stop@mL:
   562                           	callstack 0
   563   00001C                     turnLeft@mL:
   564                           	callstack 0
   565   00001C                     turnRight@mL:
   566                           	callstack 0
   567   00001C                     fullSpeedAhead@mL:
   568                           	callstack 0
   569   00001C                     fullSpeedBackwards@mL:
   570                           	callstack 0
   571                           
   572                           ; 2 bytes @ 0x1B
   573   00001C                     	ds	2
   574   00001E                     stop@mR:
   575                           	callstack 0
   576   00001E                     turnLeft@mR:
   577                           	callstack 0
   578   00001E                     turnRight@mR:
   579                           	callstack 0
   580   00001E                     fullSpeedAhead@mR:
   581                           	callstack 0
   582   00001E                     fullSpeedBackwards@mR:
   583                           	callstack 0
   584                           
   585                           ; 2 bytes @ 0x1D
   586   00001E                     	ds	1
   587   00001F                     ??___fldiv:
   588                           
   589                           ; 1 bytes @ 0x1E
   590   00001F                     	ds	1
   591   000020                     ??_stop:
   592   000020                     ??_turnLeft:
   593   000020                     ??_turnRight:
   594   000020                     ??_fullSpeedAhead:
   595   000020                     ??_fullSpeedBackwards:
   596                           
   597                           ; 1 bytes @ 0x1F
   598   000020                     	ds	2
   599   000022                     turnLeft90@mL:
   600                           	callstack 0
   601   000022                     turnRight90@mL:
   602                           	callstack 0
   603   000022                     turnRight135@mL:
   604                           	callstack 0
   605   000022                     turnLeft135@mL:
   606                           	callstack 0
   607                           
   608                           ; 2 bytes @ 0x21
   609   000022                     	ds	1
   610   000023                     ___fldiv@rem:
   611                           	callstack 0
   612                           
   613                           ; 4 bytes @ 0x22
   614   000023                     	ds	1
   615   000024                     turnLeft90@mR:
   616                           	callstack 0
   617   000024                     turnRight90@mR:
   618                           	callstack 0
   619   000024                     turnRight135@mR:
   620                           	callstack 0
   621   000024                     turnLeft135@mR:
   622                           	callstack 0
   623                           
   624                           ; 2 bytes @ 0x23
   625   000024                     	ds	2
   626   000026                     turnLeft90@a:
   627                           	callstack 0
   628   000026                     turnRight90@a:
   629                           	callstack 0
   630   000026                     turnRight135@a:
   631                           	callstack 0
   632   000026                     turnLeft135@a:
   633                           	callstack 0
   634                           
   635                           ; 1 bytes @ 0x25
   636   000026                     	ds	1
   637   000027                     ___fldiv@sign:
   638                           	callstack 0
   639   000027                     RedInstructions@mL:
   640                           	callstack 0
   641   000027                     GreenInstructions@mL:
   642                           	callstack 0
   643   000027                     BlueInstructions@mL:
   644                           	callstack 0
   645   000027                     YellowInstructions@mL:
   646                           	callstack 0
   647   000027                     PinkInstructions@mL:
   648                           	callstack 0
   649   000027                     OrangeInstructions@mL:
   650                           	callstack 0
   651   000027                     LightBlueInstructions@mL:
   652                           	callstack 0
   653                           
   654                           ; 2 bytes @ 0x26
   655   000027                     	ds	1
   656   000028                     ___fldiv@new_exp:
   657                           	callstack 0
   658                           
   659                           ; 2 bytes @ 0x27
   660   000028                     	ds	1
   661   000029                     RedInstructions@mR:
   662                           	callstack 0
   663   000029                     GreenInstructions@mR:
   664                           	callstack 0
   665   000029                     BlueInstructions@mR:
   666                           	callstack 0
   667   000029                     YellowInstructions@mR:
   668                           	callstack 0
   669   000029                     PinkInstructions@mR:
   670                           	callstack 0
   671   000029                     OrangeInstructions@mR:
   672                           	callstack 0
   673   000029                     LightBlueInstructions@mR:
   674                           	callstack 0
   675                           
   676                           ; 2 bytes @ 0x28
   677   000029                     	ds	1
   678   00002A                     ___fldiv@grs:
   679                           	callstack 0
   680                           
   681                           ; 4 bytes @ 0x29
   682   00002A                     	ds	1
   683   00002B                     ??_RedInstructions:
   684   00002B                     ??_GreenInstructions:
   685   00002B                     ??_BlueInstructions:
   686   00002B                     ??_YellowInstructions:
   687   00002B                     ??_PinkInstructions:
   688   00002B                     ??_OrangeInstructions:
   689   00002B                     ??_LightBlueInstructions:
   690                           
   691                           ; 1 bytes @ 0x2A
   692   00002B                     	ds	2
   693   00002D                     RedInstructions@a:
   694                           	callstack 0
   695   00002D                     GreenInstructions@a:
   696                           	callstack 0
   697   00002D                     BlueInstructions@a:
   698                           	callstack 0
   699   00002D                     YellowInstructions@a:
   700                           	callstack 0
   701   00002D                     PinkInstructions@a:
   702                           	callstack 0
   703   00002D                     OrangeInstructions@a:
   704                           	callstack 0
   705   00002D                     LightBlueInstructions@a:
   706                           	callstack 0
   707                           
   708                           ; 1 bytes @ 0x2C
   709   00002D                     	ds	1
   710   00002E                     ___fldiv@bexp:
   711                           	callstack 0
   712   00002E                     AntiYellow@mL:
   713                           	callstack 0
   714   00002E                     AntiPink@mL:
   715                           	callstack 0
   716                           
   717                           ; 2 bytes @ 0x2D
   718   00002E                     	ds	1
   719   00002F                     ___fldiv@aexp:
   720                           	callstack 0
   721                           
   722                           ; 1 bytes @ 0x2E
   723   00002F                     	ds	1
   724   000030                     ?___flmul:
   725                           	callstack 0
   726   000030                     AntiYellow@mR:
   727                           	callstack 0
   728   000030                     AntiPink@mR:
   729                           	callstack 0
   730   000030                     ___flmul@b:
   731                           	callstack 0
   732                           
   733                           ; 4 bytes @ 0x2F
   734   000030                     	ds	2
   735   000032                     ??_AntiYellow:
   736   000032                     ??_AntiPink:
   737                           
   738                           ; 1 bytes @ 0x31
   739   000032                     	ds	2
   740   000034                     AntiYellow@a:
   741                           	callstack 0
   742   000034                     AntiPink@a:
   743                           	callstack 0
   744   000034                     ___flmul@a:
   745                           	callstack 0
   746                           
   747                           ; 4 bytes @ 0x33
   748   000034                     	ds	1
   749   000035                     MoveBuggy@color_detected:
   750                           	callstack 0
   751                           
   752                           ; 2 bytes @ 0x34
   753   000035                     	ds	2
   754   000037                     MoveBuggy@mL:
   755                           	callstack 0
   756                           
   757                           ; 2 bytes @ 0x36
   758   000037                     	ds	1
   759   000038                     ??___flmul:
   760                           
   761                           ; 1 bytes @ 0x37
   762   000038                     	ds	1
   763   000039                     MoveBuggy@mR:
   764                           	callstack 0
   765                           
   766                           ; 2 bytes @ 0x38
   767   000039                     	ds	2
   768   00003B                     WhiteInstructions@mL:
   769                           	callstack 0
   770                           
   771                           ; 2 bytes @ 0x3A
   772   00003B                     	ds	1
   773   00003C                     ___flmul@sign:
   774                           	callstack 0
   775                           
   776                           ; 1 bytes @ 0x3B
   777   00003C                     	ds	1
   778   00003D                     WhiteInstructions@mR:
   779                           	callstack 0
   780   00003D                     ___flmul@grs:
   781                           	callstack 0
   782                           
   783                           ; 4 bytes @ 0x3C
   784   00003D                     	ds	2
   785   00003F                     ??_WhiteInstructions:
   786                           
   787                           ; 1 bytes @ 0x3E
   788   00003F                     	ds	2
   789   000041                     ___flmul@aexp:
   790                           	callstack 0
   791   000041                     WhiteInstructions@c:
   792                           	callstack 0
   793                           
   794                           ; 2 bytes @ 0x40
   795   000041                     	ds	1
   796   000042                     ___flmul@bexp:
   797                           	callstack 0
   798                           
   799                           ; 1 bytes @ 0x41
   800   000042                     	ds	1
   801   000043                     WhiteInstructions@anticolor:
   802                           	callstack 0
   803   000043                     ___flmul@prod:
   804                           	callstack 0
   805                           
   806                           ; 4 bytes @ 0x42
   807   000043                     	ds	1
   808   000044                     WhiteInstructions@a:
   809                           	callstack 0
   810                           
   811                           ; 2 bytes @ 0x43
   812   000044                     	ds	3
   813   000047                     ___flmul@temp:
   814                           	callstack 0
   815                           
   816                           ; 2 bytes @ 0x46
   817   000047                     	ds	2
   818   000049                     ?___fltol:
   819                           	callstack 0
   820   000049                     ___fltol@f1:
   821                           	callstack 0
   822                           
   823                           ; 4 bytes @ 0x48
   824   000049                     	ds	4
   825   00004D                     ___fltol@sign1:
   826                           	callstack 0
   827                           
   828                           ; 1 bytes @ 0x4C
   829   00004D                     	ds	1
   830   00004E                     ___fltol@exp1:
   831                           	callstack 0
   832                           
   833                           ; 1 bytes @ 0x4D
   834   00004E                     	ds	1
   835                           
   836 ;;
   837 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   838 ;;
   839 ;; *************** function _main *****************
   840 ;; Defined at:
   841 ;;		line 22 in file "main_motor.c"
   842 ;; Parameters:    Size  Location     Type
   843 ;;		None
   844 ;; Auto vars:     Size  Location     Type
   845 ;;  b               2   24[BANK0 ] unsigned int 
   846 ;;  motorR          9   44[BANK0 ] struct DC_motor
   847 ;;  motorL          9   35[BANK0 ] struct DC_motor
   848 ;;  initial_colo    8   27[BANK0 ] struct RGB_val
   849 ;;  color_detect    1   26[BANK0 ] unsigned char 
   850 ;; Return value:  Size  Location     Type
   851 ;;                  1    wreg      void 
   852 ;; Registers used:
   853 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   854 ;; Tracked objects:
   855 ;;		On entry : 0/0
   856 ;;		On exit  : 0/0
   857 ;;		Unchanged: 0/0
   858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   860 ;;      Locals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   861 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   862 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   863 ;;Total ram usage:       31 bytes
   864 ;; Hardware stack levels required when called: 15
   865 ;; This function calls:
   866 ;;		_AppendTime
   867 ;;		_Interrupts_init
   868 ;;		_LED_init
   869 ;;		_MoveBuggy
   870 ;;		_Timer0_init
   871 ;;		_Update_RGBC
   872 ;;		_WhiteInstructions
   873 ;;		_WhiteLight
   874 ;;		_color_click_init
   875 ;;		_detect_color
   876 ;;		_fullSpeedAhead
   877 ;;		_initDCmotorsPWM
   878 ;;		_stop
   879 ;; This function is called by:
   880 ;;		Startup code after reset
   881 ;; This function uses a non-reentrant model
   882 ;;
   883                           
   884                           	psect	text0
   885   0010C4                     __ptext0:
   886                           	callstack 0
   887   0010C4                     _main:
   888                           	callstack 16
   889   0010C4                     
   890                           ;main_motor.c: 25:     RGB_val initial_color;;main_motor.c: 26:     initial_color.R = 0;
   891   0010C4  0E00               	movlw	0
   892   0010C6  0100               	movlb	0	; () banked
   893   0010C8  6FBA               	movwf	(main@initial_color+1)& (0+255),b
   894   0010CA  0E00               	movlw	0
   895   0010CC  6FB9               	movwf	main@initial_color& (0+255),b
   896                           
   897                           ;main_motor.c: 27:     initial_color.G = 0;
   898   0010CE  0E00               	movlw	0
   899   0010D0  6FBC               	movwf	(main@initial_color+3)& (0+255),b
   900   0010D2  0E00               	movlw	0
   901   0010D4  6FBB               	movwf	(main@initial_color+2)& (0+255),b
   902                           
   903                           ;main_motor.c: 28:     initial_color.B = 0;
   904   0010D6  0E00               	movlw	0
   905   0010D8  6FBE               	movwf	(main@initial_color+5)& (0+255),b
   906   0010DA  0E00               	movlw	0
   907   0010DC  6FBD               	movwf	(main@initial_color+4)& (0+255),b
   908                           
   909                           ;main_motor.c: 29:     initial_color.C = 0;
   910   0010DE  0E00               	movlw	0
   911   0010E0  6FC0               	movwf	(main@initial_color+7)& (0+255),b
   912   0010E2  0E00               	movlw	0
   913   0010E4  6FBF               	movwf	(main@initial_color+6)& (0+255),b
   914   0010E6                     
   915                           ; BSR set to: 0
   916                           ;main_motor.c: 31:     LED_init();
   917   0010E6  ECB3  F014         	call	_LED_init	;wreg free
   918   0010EA                     
   919                           ;main_motor.c: 32:     color_click_init();
   920   0010EA  ECA4  F013         	call	_color_click_init	;wreg free
   921   0010EE                     
   922                           ;main_motor.c: 33:     Interrupts_init();
   923   0010EE  EC8A  F014         	call	_Interrupts_init	;wreg free
   924                           
   925                           ;main_motor.c: 35:     Timer0_init();
   926   0010F2  EC4A  F014         	call	_Timer0_init	;wreg free
   927                           
   928                           ;main_motor.c: 38:     initDCmotorsPWM(99);
   929   0010F6  0E00               	movlw	0
   930   0010F8  6E0A               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   931   0010FA  0E63               	movlw	99
   932   0010FC  6E09               	movwf	initDCmotorsPWM@PWMperiod^0,c
   933   0010FE  EC5D  F00F         	call	_initDCmotorsPWM	;wreg free
   934   001102                     
   935                           ;main_motor.c: 40:     struct DC_motor motorL, motorR;;main_motor.c: 42:     motorL.powe
      +                          r=0;
   936   001102  0E00               	movlw	0
   937   001104  0100               	movlb	0	; () banked
   938   001106  6FC1               	movwf	main@motorL& (0+255),b
   939   001108                     
   940                           ; BSR set to: 0
   941                           ;main_motor.c: 43:     motorL.direction=1;
   942   001108  0E01               	movlw	1
   943   00110A  6FC2               	movwf	(main@motorL+1)& (0+255),b
   944   00110C                     
   945                           ; BSR set to: 0
   946                           ;main_motor.c: 44:     motorL.brakemode=1;
   947   00110C  0E01               	movlw	1
   948   00110E  6FC3               	movwf	(main@motorL+2)& (0+255),b
   949   001110                     
   950                           ; BSR set to: 0
   951                           ;main_motor.c: 45:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
   952   001110  0EAA               	movlw	170
   953   001112  6FC6               	movwf	(main@motorL+5)& (0+255),b
   954   001114  0E0F               	movlw	15
   955   001116  6FC7               	movwf	(main@motorL+6)& (0+255),b
   956   001118                     
   957                           ; BSR set to: 0
   958                           ;main_motor.c: 46:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
   959   001118  0EA6               	movlw	166
   960   00111A  6FC8               	movwf	(main@motorL+7)& (0+255),b
   961   00111C  0E0F               	movlw	15
   962   00111E  6FC9               	movwf	(main@motorL+8)& (0+255),b
   963   001120                     
   964                           ; BSR set to: 0
   965                           ;main_motor.c: 47:     motorL.PWMperiod= T2PR;
   966   001120  CFBC F0C4          	movff	4028,main@motorL+3	;volatile
   967   001124  6BC5               	clrf	(main@motorL+4)& (0+255),b
   968   001126                     
   969                           ; BSR set to: 0
   970                           ;main_motor.c: 49:     motorR.power=0;
   971   001126  0E00               	movlw	0
   972   001128  6FCA               	movwf	main@motorR& (0+255),b
   973   00112A                     
   974                           ; BSR set to: 0
   975                           ;main_motor.c: 50:     motorR.direction=1;
   976   00112A  0E01               	movlw	1
   977   00112C  6FCB               	movwf	(main@motorR+1)& (0+255),b
   978   00112E                     
   979                           ; BSR set to: 0
   980                           ;main_motor.c: 51:     motorR.brakemode=1;
   981   00112E  0E01               	movlw	1
   982   001130  6FCC               	movwf	(main@motorR+2)& (0+255),b
   983   001132                     
   984                           ; BSR set to: 0
   985                           ;main_motor.c: 52:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
   986   001132  0E25               	movlw	37
   987   001134  6FCF               	movwf	(main@motorR+5)& (0+255),b
   988   001136  0E0F               	movlw	15
   989   001138  6FD0               	movwf	(main@motorR+6)& (0+255),b
   990   00113A                     
   991                           ; BSR set to: 0
   992                           ;main_motor.c: 53:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
   993   00113A  0E21               	movlw	33
   994   00113C  6FD1               	movwf	(main@motorR+7)& (0+255),b
   995   00113E  0E0F               	movlw	15
   996   001140  6FD2               	movwf	(main@motorR+8)& (0+255),b
   997   001142                     
   998                           ; BSR set to: 0
   999                           ;main_motor.c: 54:     motorR.PWMperiod= T2PR;
  1000   001142  CFBC F0CD          	movff	4028,main@motorR+3	;volatile
  1001   001146  6BCE               	clrf	(main@motorR+4)& (0+255),b
  1002   001148                     
  1003                           ; BSR set to: 0
  1004                           ;main_motor.c: 57:     unsigned char color_detected = 0;
  1005   001148  0E00               	movlw	0
  1006   00114A  6FB8               	movwf	main@color_detected& (0+255),b
  1007                           
  1008                           ;main_motor.c: 58:     WhiteLight();
  1009   00114C  ECE0  F014         	call	_WhiteLight	;wreg free
  1010   001150                     l4191:
  1011                           
  1012                           ;main_motor.c: 63:         unsigned int b = 0;
  1013   001150  0E00               	movlw	0
  1014   001152  0100               	movlb	0	; () banked
  1015   001154  6FB7               	movwf	(main@b+1)& (0+255),b
  1016   001156  0E00               	movlw	0
  1017   001158  6FB6               	movwf	main@b& (0+255),b
  1018                           
  1019                           ;main_motor.c: 64:         while(color_detected == 0){
  1020   00115A  EFCA  F008         	goto	l4201
  1021   00115E                     l4193:
  1022                           
  1023                           ; BSR set to: 0
  1024                           ;main_motor.c: 65:             fullSpeedAhead(&motorL,&motorR);
  1025   00115E  0EC1               	movlw	low main@motorL
  1026   001160  6E1C               	movwf	fullSpeedAhead@mL^0,c
  1027   001162  0E00               	movlw	high main@motorL
  1028   001164  6E1D               	movwf	(fullSpeedAhead@mL+1)^0,c
  1029   001166  0ECA               	movlw	low main@motorR
  1030   001168  6E1E               	movwf	fullSpeedAhead@mR^0,c
  1031   00116A  0E00               	movlw	high main@motorR
  1032   00116C  6E1F               	movwf	(fullSpeedAhead@mR+1)^0,c
  1033   00116E  EC0E  F00C         	call	_fullSpeedAhead	;wreg free
  1034   001172                     
  1035                           ;main_motor.c: 66:             Update_RGBC(&initial_color);
  1036   001172  0EB9               	movlw	low main@initial_color
  1037   001174  6E14               	movwf	Update_RGBC@tempval^0,c
  1038   001176  0E00               	movlw	high main@initial_color
  1039   001178  6E15               	movwf	(Update_RGBC@tempval+1)^0,c
  1040   00117A  EC71  F011         	call	_Update_RGBC	;wreg free
  1041   00117E                     
  1042                           ;main_motor.c: 67:             color_detected = detect_color(&initial_color);
  1043   00117E  0EB9               	movlw	low main@initial_color
  1044   001180  0100               	movlb	0	; () banked
  1045   001182  6FA2               	movwf	detect_color@tempval& (0+255),b
  1046   001184  0E00               	movlw	high main@initial_color
  1047   001186  6FA3               	movwf	(detect_color@tempval+1)& (0+255),b
  1048   001188  EC2E  F000         	call	_detect_color	;wreg free
  1049   00118C  0100               	movlb	0	; () banked
  1050   00118E  6FB8               	movwf	main@color_detected& (0+255),b
  1051   001190                     
  1052                           ; BSR set to: 0
  1053                           ;main_motor.c: 68:             b++;
  1054   001190  4BB6               	infsnz	main@b& (0+255),f,b
  1055   001192  2BB7               	incf	(main@b+1)& (0+255),f,b
  1056   001194                     l4201:
  1057                           
  1058                           ; BSR set to: 0
  1059                           ;main_motor.c: 64:         while(color_detected == 0){
  1060   001194  51B8               	movf	main@color_detected& (0+255),w,b
  1061   001196  B4D8               	btfsc	status,2,c
  1062   001198  EFD0  F008         	goto	u4411
  1063   00119C  EFD2  F008         	goto	u4410
  1064   0011A0                     u4411:
  1065   0011A0  EFAF  F008         	goto	l4193
  1066   0011A4                     u4410:
  1067   0011A4                     
  1068                           ; BSR set to: 0
  1069                           ;main_motor.c: 71:         if(color_detected != 0 && color_detected != 8){
  1070   0011A4  51B8               	movf	main@color_detected& (0+255),w,b
  1071   0011A6  B4D8               	btfsc	status,2,c
  1072   0011A8  EFD8  F008         	goto	u4421
  1073   0011AC  EFDA  F008         	goto	u4420
  1074   0011B0                     u4421:
  1075   0011B0  EF33  F009         	goto	l4225
  1076   0011B4                     u4420:
  1077   0011B4                     
  1078                           ; BSR set to: 0
  1079   0011B4  0E08               	movlw	8
  1080   0011B6  19B8               	xorwf	main@color_detected& (0+255),w,b
  1081   0011B8  B4D8               	btfsc	status,2,c
  1082   0011BA  EFE1  F008         	goto	u4431
  1083   0011BE  EFE3  F008         	goto	u4430
  1084   0011C2                     u4431:
  1085   0011C2  EF33  F009         	goto	l4225
  1086   0011C6                     u4430:
  1087   0011C6                     
  1088                           ; BSR set to: 0
  1089                           ;main_motor.c: 72:             AppendTime((b-8),&time_index,time_array);
  1090   0011C6  0EF8               	movlw	248
  1091   0011C8  25B6               	addwf	main@b& (0+255),w,b
  1092   0011CA  6E09               	movwf	AppendTime@temp^0,c
  1093   0011CC  0EFF               	movlw	255
  1094   0011CE  21B7               	addwfc	(main@b+1)& (0+255),w,b
  1095   0011D0  6E0A               	movwf	(AppendTime@temp+1)^0,c
  1096   0011D2  0E9D               	movlw	low _time_index
  1097   0011D4  6E0B               	movwf	AppendTime@time_index^0,c
  1098   0011D6  0E00               	movlw	high _time_index
  1099   0011D8  6E0C               	movwf	(AppendTime@time_index+1)^0,c
  1100   0011DA  0E3C               	movlw	low _time_array
  1101   0011DC  6E0D               	movwf	AppendTime@time_array^0,c
  1102   0011DE  0E01               	movlw	high _time_array
  1103   0011E0  6E0E               	movwf	(AppendTime@time_array+1)^0,c
  1104   0011E2  ECBE  F013         	call	_AppendTime	;wreg free
  1105   0011E6                     
  1106                           ;main_motor.c: 73:             LATHbits.LATH3 = 1;
  1107   0011E6  8680               	bsf	128,3,c	;volatile
  1108                           
  1109                           ;main_motor.c: 75:             while(b>0){
  1110   0011E8  EF04  F009         	goto	l4215
  1111   0011EC                     l4211:
  1112                           
  1113                           ; BSR set to: 0
  1114                           ;main_motor.c: 76:                 stop(&motorL,&motorR);
  1115   0011EC  0EC1               	movlw	low main@motorL
  1116   0011EE  6E1C               	movwf	stop@mL^0,c
  1117   0011F0  0E00               	movlw	high main@motorL
  1118   0011F2  6E1D               	movwf	(stop@mL+1)^0,c
  1119   0011F4  0ECA               	movlw	low main@motorR
  1120   0011F6  6E1E               	movwf	stop@mR^0,c
  1121   0011F8  0E00               	movlw	high main@motorR
  1122   0011FA  6E1F               	movwf	(stop@mR+1)^0,c
  1123   0011FC  ECE8  F00D         	call	_stop	;wreg free
  1124   001200                     
  1125                           ;main_motor.c: 77:                 b--;
  1126   001200  0100               	movlb	0	; () banked
  1127   001202  07B6               	decf	main@b& (0+255),f,b
  1128   001204  A0D8               	btfss	status,0,c
  1129   001206  07B7               	decf	(main@b+1)& (0+255),f,b
  1130   001208                     l4215:
  1131                           
  1132                           ;main_motor.c: 75:             while(b>0){
  1133   001208  0100               	movlb	0	; () banked
  1134   00120A  51B6               	movf	main@b& (0+255),w,b
  1135   00120C  11B7               	iorwf	(main@b+1)& (0+255),w,b
  1136   00120E  A4D8               	btfss	status,2,c
  1137   001210  EF0C  F009         	goto	u4441
  1138   001214  EF0E  F009         	goto	u4440
  1139   001218                     u4441:
  1140   001218  EFF6  F008         	goto	l4211
  1141   00121C                     u4440:
  1142   00121C                     
  1143                           ; BSR set to: 0
  1144                           ;main_motor.c: 79:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1145   00121C  0E09               	movlw	9
  1146   00121E  0100               	movlb	0	; () banked
  1147   001220  6FB5               	movwf	(??_main+1)& (0+255),b
  1148   001222  0E1E               	movlw	30
  1149   001224  6FB4               	movwf	??_main& (0+255),b
  1150   001226  0EE4               	movlw	228
  1151   001228                     u4477:
  1152   001228  2EE8               	decfsz	wreg,f,c
  1153   00122A  D7FE               	bra	u4477
  1154   00122C  2FB4               	decfsz	??_main& (0+255),f,b
  1155   00122E  D7FC               	bra	u4477
  1156   001230  2FB5               	decfsz	(??_main+1)& (0+255),f,b
  1157   001232  D7FA               	bra	u4477
  1158   001234  F000               	nop	
  1159   001236                     
  1160                           ;main_motor.c: 80:             LATHbits.LATH3 = 0;
  1161   001236  9680               	bcf	128,3,c	;volatile
  1162   001238                     
  1163                           ;main_motor.c: 82:             MoveBuggy(color_detected,&motorL,&motorR);
  1164   001238  0100               	movlb	0	; () banked
  1165   00123A  51B8               	movf	main@color_detected& (0+255),w,b
  1166   00123C  6FB4               	movwf	??_main& (0+255),b
  1167   00123E  6BB5               	clrf	(??_main+1)& (0+255),b
  1168   001240  C0B4  F035         	movff	??_main,MoveBuggy@color_detected
  1169   001244  C0B5  F036         	movff	??_main+1,MoveBuggy@color_detected+1
  1170   001248  0EC1               	movlw	low main@motorL
  1171   00124A  6E37               	movwf	MoveBuggy@mL^0,c
  1172   00124C  0E00               	movlw	high main@motorL
  1173   00124E  6E38               	movwf	(MoveBuggy@mL+1)^0,c
  1174   001250  0ECA               	movlw	low main@motorR
  1175   001252  6E39               	movwf	MoveBuggy@mR^0,c
  1176   001254  0E00               	movlw	high main@motorR
  1177   001256  6E3A               	movwf	(MoveBuggy@mR+1)^0,c
  1178   001258  EC20  F007         	call	_MoveBuggy	;wreg free
  1179   00125C                     l4223:
  1180                           
  1181                           ;main_motor.c: 83:             color_detected = 0;
  1182   00125C  0E00               	movlw	0
  1183   00125E  0100               	movlb	0	; () banked
  1184   001260  6FB8               	movwf	main@color_detected& (0+255),b
  1185                           
  1186                           ;main_motor.c: 84:         }
  1187   001262  EFA8  F008         	goto	l4191
  1188   001266                     l4225:
  1189                           
  1190                           ; BSR set to: 0
  1191   001266  0E08               	movlw	8
  1192   001268  19B8               	xorwf	main@color_detected& (0+255),w,b
  1193   00126A  A4D8               	btfss	status,2,c
  1194   00126C  EF3A  F009         	goto	u4451
  1195   001270  EF3C  F009         	goto	u4450
  1196   001274                     u4451:
  1197   001274  EFA8  F008         	goto	l4191
  1198   001278                     u4450:
  1199   001278                     
  1200                           ; BSR set to: 0
  1201                           ;main_motor.c: 88:             AppendTime((b-8),&time_index,time_array);
  1202   001278  0EF8               	movlw	248
  1203   00127A  25B6               	addwf	main@b& (0+255),w,b
  1204   00127C  6E09               	movwf	AppendTime@temp^0,c
  1205   00127E  0EFF               	movlw	255
  1206   001280  21B7               	addwfc	(main@b+1)& (0+255),w,b
  1207   001282  6E0A               	movwf	(AppendTime@temp+1)^0,c
  1208   001284  0E9D               	movlw	low _time_index
  1209   001286  6E0B               	movwf	AppendTime@time_index^0,c
  1210   001288  0E00               	movlw	high _time_index
  1211   00128A  6E0C               	movwf	(AppendTime@time_index+1)^0,c
  1212   00128C  0E3C               	movlw	low _time_array
  1213   00128E  6E0D               	movwf	AppendTime@time_array^0,c
  1214   001290  0E01               	movlw	high _time_array
  1215   001292  6E0E               	movwf	(AppendTime@time_array+1)^0,c
  1216   001294  ECBE  F013         	call	_AppendTime	;wreg free
  1217   001298                     
  1218                           ;main_motor.c: 89:             LATDbits.LATD7 = 1;
  1219   001298  8E7C               	bsf	124,7,c	;volatile
  1220                           
  1221                           ;main_motor.c: 91:             while(b>0){
  1222   00129A  EF5D  F009         	goto	l4235
  1223   00129E                     l4231:
  1224                           
  1225                           ; BSR set to: 0
  1226                           ;main_motor.c: 92:                 stop(&motorL,&motorR);
  1227   00129E  0EC1               	movlw	low main@motorL
  1228   0012A0  6E1C               	movwf	stop@mL^0,c
  1229   0012A2  0E00               	movlw	high main@motorL
  1230   0012A4  6E1D               	movwf	(stop@mL+1)^0,c
  1231   0012A6  0ECA               	movlw	low main@motorR
  1232   0012A8  6E1E               	movwf	stop@mR^0,c
  1233   0012AA  0E00               	movlw	high main@motorR
  1234   0012AC  6E1F               	movwf	(stop@mR+1)^0,c
  1235   0012AE  ECE8  F00D         	call	_stop	;wreg free
  1236   0012B2                     
  1237                           ;main_motor.c: 93:                 b--;
  1238   0012B2  0100               	movlb	0	; () banked
  1239   0012B4  07B6               	decf	main@b& (0+255),f,b
  1240   0012B6  A0D8               	btfss	status,0,c
  1241   0012B8  07B7               	decf	(main@b+1)& (0+255),f,b
  1242   0012BA                     l4235:
  1243                           
  1244                           ;main_motor.c: 91:             while(b>0){
  1245   0012BA  0100               	movlb	0	; () banked
  1246   0012BC  51B6               	movf	main@b& (0+255),w,b
  1247   0012BE  11B7               	iorwf	(main@b+1)& (0+255),w,b
  1248   0012C0  A4D8               	btfss	status,2,c
  1249   0012C2  EF65  F009         	goto	u4461
  1250   0012C6  EF67  F009         	goto	u4460
  1251   0012CA                     u4461:
  1252   0012CA  EF4F  F009         	goto	l4231
  1253   0012CE                     u4460:
  1254   0012CE                     
  1255                           ; BSR set to: 0
  1256                           ;main_motor.c: 95:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1257   0012CE  0E09               	movlw	9
  1258   0012D0  0100               	movlb	0	; () banked
  1259   0012D2  6FB5               	movwf	(??_main+1)& (0+255),b
  1260   0012D4  0E1E               	movlw	30
  1261   0012D6  6FB4               	movwf	??_main& (0+255),b
  1262   0012D8  0EE4               	movlw	228
  1263   0012DA                     u4487:
  1264   0012DA  2EE8               	decfsz	wreg,f,c
  1265   0012DC  D7FE               	bra	u4487
  1266   0012DE  2FB4               	decfsz	??_main& (0+255),f,b
  1267   0012E0  D7FC               	bra	u4487
  1268   0012E2  2FB5               	decfsz	(??_main+1)& (0+255),f,b
  1269   0012E4  D7FA               	bra	u4487
  1270   0012E6  F000               	nop	
  1271   0012E8                     
  1272                           ;main_motor.c: 96:             WhiteInstructions(&motorL,&motorR);
  1273   0012E8  0EC1               	movlw	low main@motorL
  1274   0012EA  6E3B               	movwf	WhiteInstructions@mL^0,c
  1275   0012EC  0E00               	movlw	high main@motorL
  1276   0012EE  6E3C               	movwf	(WhiteInstructions@mL+1)^0,c
  1277   0012F0  0ECA               	movlw	low main@motorR
  1278   0012F2  6E3D               	movwf	WhiteInstructions@mR^0,c
  1279   0012F4  0E00               	movlw	high main@motorR
  1280   0012F6  6E3E               	movwf	(WhiteInstructions@mR+1)^0,c
  1281   0012F8  EC73  F00D         	call	_WhiteInstructions	;wreg free
  1282   0012FC                     
  1283                           ;main_motor.c: 97:             LATDbits.LATD7 = 0;
  1284   0012FC  9E7C               	bcf	124,7,c	;volatile
  1285   0012FE  EF2E  F009         	goto	l4223
  1286   001302  EF2C  F000         	goto	start
  1287   001306                     __end_of_main:
  1288                           	callstack 0
  1289                           
  1290 ;; *************** function _initDCmotorsPWM *****************
  1291 ;; Defined at:
  1292 ;;		line 5 in file "dc_motor.c"
  1293 ;; Parameters:    Size  Location     Type
  1294 ;;  PWMperiod       2    8[COMRAM] unsigned int 
  1295 ;; Auto vars:     Size  Location     Type
  1296 ;;		None
  1297 ;; Return value:  Size  Location     Type
  1298 ;;                  1    wreg      void 
  1299 ;; Registers used:
  1300 ;;		wreg, status,2
  1301 ;; Tracked objects:
  1302 ;;		On entry : 0/0
  1303 ;;		On exit  : 0/0
  1304 ;;		Unchanged: 0/0
  1305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1306 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1309 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1310 ;;Total ram usage:        2 bytes
  1311 ;; Hardware stack levels used: 1
  1312 ;; Hardware stack levels required when called: 7
  1313 ;; This function calls:
  1314 ;;		Nothing
  1315 ;; This function is called by:
  1316 ;;		_main
  1317 ;; This function uses a non-reentrant model
  1318 ;;
  1319                           
  1320                           	psect	text1
  1321   001EBA                     __ptext1:
  1322                           	callstack 0
  1323   001EBA                     _initDCmotorsPWM:
  1324                           	callstack 23
  1325   001EBA                     
  1326                           ;dc_motor.c: 7:     LATEbits.LATE2 = 0;
  1327   001EBA  947D               	bcf	125,2,c	;volatile
  1328                           
  1329                           ;dc_motor.c: 8:     TRISEbits.TRISE2 = 0;
  1330   001EBC  9485               	bcf	133,2,c	;volatile
  1331                           
  1332                           ;dc_motor.c: 9:     LATEbits.LATE4 = 0;
  1333   001EBE  987D               	bcf	125,4,c	;volatile
  1334                           
  1335                           ;dc_motor.c: 10:     TRISEbits.TRISE4 = 0;
  1336   001EC0  9885               	bcf	133,4,c	;volatile
  1337                           
  1338                           ;dc_motor.c: 11:     LATCbits.LATC7 = 0;
  1339   001EC2  9E7B               	bcf	123,7,c	;volatile
  1340                           
  1341                           ;dc_motor.c: 12:     TRISCbits.TRISC7 = 0;
  1342   001EC4  9E83               	bcf	131,7,c	;volatile
  1343                           
  1344                           ;dc_motor.c: 13:     LATGbits.LATG6 = 0;
  1345   001EC6  9C7F               	bcf	127,6,c	;volatile
  1346                           
  1347                           ;dc_motor.c: 14:     TRISGbits.TRISG6 = 0;
  1348   001EC8  9C87               	bcf	135,6,c	;volatile
  1349   001ECA                     
  1350                           ;dc_motor.c: 17:     RE2PPS=0x05;
  1351   001ECA  0E05               	movlw	5
  1352   001ECC  010E               	movlb	14	; () banked
  1353   001ECE  6F74               	movwf	116,b	;volatile
  1354                           
  1355                           ;dc_motor.c: 18:     RE4PPS=0x06;
  1356   001ED0  0E06               	movlw	6
  1357   001ED2  6F76               	movwf	118,b	;volatile
  1358                           
  1359                           ;dc_motor.c: 19:     RC7PPS=0x07;
  1360   001ED4  0E07               	movlw	7
  1361   001ED6  6F69               	movwf	105,b	;volatile
  1362                           
  1363                           ;dc_motor.c: 20:     RG6PPS=0x08;
  1364   001ED8  0E08               	movlw	8
  1365   001EDA  6F88               	movwf	136,b	;volatile
  1366                           
  1367                           ;dc_motor.c: 23:     T2CONbits.CKPS=0b100;
  1368   001EDC  50BD               	movf	189,w,c	;volatile
  1369   001EDE  0B8F               	andlw	-113
  1370   001EE0  0940               	iorlw	64
  1371   001EE2  6EBD               	movwf	189,c	;volatile
  1372                           
  1373                           ;dc_motor.c: 24:     T2HLTbits.MODE=0b00000;
  1374   001EE4  0EE0               	movlw	-32
  1375   001EE6  16BE               	andwf	190,f,c	;volatile
  1376                           
  1377                           ;dc_motor.c: 25:     T2CLKCONbits.CS=0b0001;
  1378   001EE8  50BF               	movf	191,w,c	;volatile
  1379   001EEA  0BF0               	andlw	-16
  1380   001EEC  0901               	iorlw	1
  1381   001EEE  6EBF               	movwf	191,c	;volatile
  1382   001EF0                     
  1383                           ; BSR set to: 14
  1384                           ;dc_motor.c: 29:     T2PR=PWMperiod;
  1385   001EF0  C009  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  1386   001EF4                     
  1387                           ; BSR set to: 14
  1388                           ;dc_motor.c: 30:     T2CONbits.ON=1;
  1389   001EF4  8EBD               	bsf	189,7,c	;volatile
  1390                           
  1391                           ;dc_motor.c: 34:     CCPR1H=0;
  1392   001EF6  0E00               	movlw	0
  1393   001EF8  6EAA               	movwf	170,c	;volatile
  1394                           
  1395                           ;dc_motor.c: 35:     CCPR2H=0;
  1396   001EFA  0E00               	movlw	0
  1397   001EFC  6EA6               	movwf	166,c	;volatile
  1398                           
  1399                           ;dc_motor.c: 36:     CCPR3H=0;
  1400   001EFE  0E00               	movlw	0
  1401   001F00  010F               	movlb	15	; () banked
  1402   001F02  6F25               	movwf	37,b	;volatile
  1403                           
  1404                           ;dc_motor.c: 37:     CCPR4H=0;
  1405   001F04  0E00               	movlw	0
  1406   001F06  6F21               	movwf	33,b	;volatile
  1407                           
  1408                           ;dc_motor.c: 40:     CCPTMRS0bits.C1TSEL=0;
  1409   001F08  0EFC               	movlw	-4
  1410   001F0A  16AD               	andwf	173,f,c	;volatile
  1411                           
  1412                           ;dc_motor.c: 41:     CCPTMRS0bits.C2TSEL=0;
  1413   001F0C  0EF3               	movlw	-13
  1414   001F0E  16AD               	andwf	173,f,c	;volatile
  1415                           
  1416                           ;dc_motor.c: 42:     CCPTMRS0bits.C3TSEL=0;
  1417   001F10  0ECF               	movlw	-49
  1418   001F12  16AD               	andwf	173,f,c	;volatile
  1419                           
  1420                           ;dc_motor.c: 43:     CCPTMRS0bits.C4TSEL=0;
  1421   001F14  0E3F               	movlw	-193
  1422   001F16  16AD               	andwf	173,f,c	;volatile
  1423   001F18                     
  1424                           ; BSR set to: 15
  1425                           ;dc_motor.c: 46:     CCP1CONbits.FMT=1;
  1426   001F18  88AB               	bsf	171,4,c	;volatile
  1427                           
  1428                           ;dc_motor.c: 47:     CCP1CONbits.CCP1MODE=0b1100;
  1429   001F1A  50AB               	movf	171,w,c	;volatile
  1430   001F1C  0BF0               	andlw	-16
  1431   001F1E  090C               	iorlw	12
  1432   001F20  6EAB               	movwf	171,c	;volatile
  1433   001F22                     
  1434                           ; BSR set to: 15
  1435                           ;dc_motor.c: 48:     CCP1CONbits.EN=1;
  1436   001F22  8EAB               	bsf	171,7,c	;volatile
  1437   001F24                     
  1438                           ; BSR set to: 15
  1439                           ;dc_motor.c: 50:     CCP2CONbits.FMT=1;
  1440   001F24  88A7               	bsf	167,4,c	;volatile
  1441                           
  1442                           ;dc_motor.c: 51:     CCP2CONbits.CCP2MODE=0b1100;
  1443   001F26  50A7               	movf	167,w,c	;volatile
  1444   001F28  0BF0               	andlw	-16
  1445   001F2A  090C               	iorlw	12
  1446   001F2C  6EA7               	movwf	167,c	;volatile
  1447   001F2E                     
  1448                           ; BSR set to: 15
  1449                           ;dc_motor.c: 52:     CCP2CONbits.EN=1;
  1450   001F2E  8EA7               	bsf	167,7,c	;volatile
  1451   001F30                     
  1452                           ; BSR set to: 15
  1453                           ;dc_motor.c: 54:     CCP3CONbits.FMT=1;
  1454   001F30  8926               	bsf	38,4,b	;volatile
  1455                           
  1456                           ;dc_motor.c: 55:     CCP3CONbits.CCP3MODE=0b1100;
  1457   001F32  5126               	movf	38,w,b	;volatile
  1458   001F34  0BF0               	andlw	-16
  1459   001F36  090C               	iorlw	12
  1460   001F38  6F26               	movwf	38,b	;volatile
  1461   001F3A                     
  1462                           ; BSR set to: 15
  1463                           ;dc_motor.c: 56:     CCP3CONbits.EN=1;
  1464   001F3A  8F26               	bsf	38,7,b	;volatile
  1465   001F3C                     
  1466                           ; BSR set to: 15
  1467                           ;dc_motor.c: 58:     CCP4CONbits.FMT=1;
  1468   001F3C  8922               	bsf	34,4,b	;volatile
  1469                           
  1470                           ;dc_motor.c: 59:     CCP4CONbits.CCP4MODE=0b1100;
  1471   001F3E  5122               	movf	34,w,b	;volatile
  1472   001F40  0BF0               	andlw	-16
  1473   001F42  090C               	iorlw	12
  1474   001F44  6F22               	movwf	34,b	;volatile
  1475   001F46                     
  1476                           ; BSR set to: 15
  1477                           ;dc_motor.c: 60:     CCP4CONbits.EN=1;
  1478   001F46  8F22               	bsf	34,7,b	;volatile
  1479   001F48                     
  1480                           ; BSR set to: 15
  1481   001F48  0012               	return		;funcret
  1482   001F4A                     __end_of_initDCmotorsPWM:
  1483                           	callstack 0
  1484                           
  1485 ;; *************** function _detect_color *****************
  1486 ;; Defined at:
  1487 ;;		line 99 in file "color.c"
  1488 ;; Parameters:    Size  Location     Type
  1489 ;;  tempval         2    4[BANK0 ] PTR struct RGB_val
  1490 ;;		 -> main@initial_color(8), 
  1491 ;; Auto vars:     Size  Location     Type
  1492 ;;  dist_B          1   21[BANK0 ] unsigned char 
  1493 ;;  dist_G          1   20[BANK0 ] unsigned char 
  1494 ;;  dist_R          1   19[BANK0 ] unsigned char 
  1495 ;;  color           1   18[BANK0 ] unsigned char 
  1496 ;; Return value:  Size  Location     Type
  1497 ;;                  1    wreg      unsigned char 
  1498 ;; Registers used:
  1499 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1500 ;; Tracked objects:
  1501 ;;		On entry : 0/0
  1502 ;;		On exit  : 0/0
  1503 ;;		Unchanged: 0/0
  1504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1505 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1506 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1507 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1508 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1509 ;;Total ram usage:       18 bytes
  1510 ;; Hardware stack levels used: 1
  1511 ;; Hardware stack levels required when called: 8
  1512 ;; This function calls:
  1513 ;;		___fldiv
  1514 ;;		___flmul
  1515 ;;		___fltol
  1516 ;;		___xxtofl
  1517 ;; This function is called by:
  1518 ;;		_main
  1519 ;; This function uses a non-reentrant model
  1520 ;;
  1521                           
  1522                           	psect	text2
  1523   00005C                     __ptext2:
  1524                           	callstack 0
  1525   00005C                     _detect_color:
  1526                           	callstack 22
  1527   00005C                     
  1528                           ;color.c: 99: unsigned char detect_color(RGB_val *tempval);color.c: 100: {;color.c: 101:
      +                               unsigned char color = 0;
  1529   00005C  0E00               	movlw	0
  1530   00005E  0100               	movlb	0	; () banked
  1531   000060  6FB0               	movwf	detect_color@color& (0+255),b
  1532   000062                     
  1533                           ; BSR set to: 0
  1534                           ;color.c: 104:     unsigned char dist_R, dist_G, dist_B;;color.c: 105:     dist_R = ((fl
      +                          oat)(tempval->R)/(float)(tempval->R + tempval->G + tempval->B))*100;
  1535   000062  0E00               	movlw	0
  1536   000064  6E34               	movwf	___flmul@a^0,c
  1537   000066  0E00               	movlw	0
  1538   000068  6E35               	movwf	(___flmul@a+1)^0,c
  1539   00006A  0EC8               	movlw	200
  1540   00006C  6E36               	movwf	(___flmul@a+2)^0,c
  1541   00006E  0E42               	movlw	66
  1542   000070  6E37               	movwf	(___flmul@a+3)^0,c
  1543   000072  EE20 F004          	lfsr	2,4
  1544   000076  51A2               	movf	detect_color@tempval& (0+255),w,b
  1545   000078  26D9               	addwf	fsr2l,f,c
  1546   00007A  51A3               	movf	(detect_color@tempval+1)& (0+255),w,b
  1547   00007C  22DA               	addwfc	fsr2h,f,c
  1548   00007E  CFDE F0A4          	movff	postinc2,??_detect_color
  1549   000082  CFDD F0A5          	movff	postdec2,??_detect_color+1
  1550   000086  EE20 F002          	lfsr	2,2
  1551   00008A  51A2               	movf	detect_color@tempval& (0+255),w,b
  1552   00008C  26D9               	addwf	fsr2l,f,c
  1553   00008E  51A3               	movf	(detect_color@tempval+1)& (0+255),w,b
  1554   000090  22DA               	addwfc	fsr2h,f,c
  1555   000092  CFDE F0A6          	movff	postinc2,??_detect_color+2
  1556   000096  CFDD F0A7          	movff	postdec2,??_detect_color+3
  1557   00009A  C0A2  FFD9         	movff	detect_color@tempval,fsr2l
  1558   00009E  C0A3  FFDA         	movff	detect_color@tempval+1,fsr2h
  1559   0000A2  CFDE F0A8          	movff	postinc2,??_detect_color+4
  1560   0000A6  CFDD F0A9          	movff	postdec2,??_detect_color+5
  1561   0000AA  51A6               	movf	(??_detect_color+2)& (0+255),w,b
  1562   0000AC  25A8               	addwf	(??_detect_color+4)& (0+255),w,b
  1563   0000AE  6FAA               	movwf	(??_detect_color+6)& (0+255),b
  1564   0000B0  51A7               	movf	(??_detect_color+3)& (0+255),w,b
  1565   0000B2  21A9               	addwfc	(??_detect_color+5)& (0+255),w,b
  1566   0000B4  6FAB               	movwf	(??_detect_color+7)& (0+255),b
  1567   0000B6  51A4               	movf	??_detect_color& (0+255),w,b
  1568   0000B8  25AA               	addwf	(??_detect_color+6)& (0+255),w,b
  1569   0000BA  6FAC               	movwf	(??_detect_color+8)& (0+255),b
  1570   0000BC  51A5               	movf	(??_detect_color+1)& (0+255),w,b
  1571   0000BE  21AB               	addwfc	(??_detect_color+7)& (0+255),w,b
  1572   0000C0  6FAD               	movwf	(??_detect_color+9)& (0+255),b
  1573   0000C2  C0AC  F009         	movff	??_detect_color+8,___xxtofl@val
  1574   0000C6  C0AD  F00A         	movff	??_detect_color+9,___xxtofl@val+1
  1575   0000CA  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1576   0000CC  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1577   0000CE  0E00               	movlw	0
  1578   0000D0  EC83  F009         	call	___xxtofl
  1579   0000D4  C009  F01B         	movff	?___xxtofl,___fldiv@a
  1580   0000D8  C00A  F01C         	movff	?___xxtofl+1,___fldiv@a+1
  1581   0000DC  C00B  F01D         	movff	?___xxtofl+2,___fldiv@a+2
  1582   0000E0  C00C  F01E         	movff	?___xxtofl+3,___fldiv@a+3
  1583   0000E4  C0A2  FFD9         	movff	detect_color@tempval,fsr2l
  1584   0000E8  C0A3  FFDA         	movff	detect_color@tempval+1,fsr2h
  1585   0000EC  CFDE F0AE          	movff	postinc2,??_detect_color+10
  1586   0000F0  CFDD F0AF          	movff	postdec2,??_detect_color+11
  1587   0000F4  C0AE  F009         	movff	??_detect_color+10,___xxtofl@val
  1588   0000F8  C0AF  F00A         	movff	??_detect_color+11,___xxtofl@val+1
  1589   0000FC  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1590   0000FE  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1591   000100  0E00               	movlw	0
  1592   000102  EC83  F009         	call	___xxtofl
  1593   000106  C009  F017         	movff	?___xxtofl,___fldiv@b
  1594   00010A  C00A  F018         	movff	?___xxtofl+1,___fldiv@b+1
  1595   00010E  C00B  F019         	movff	?___xxtofl+2,___fldiv@b+2
  1596   000112  C00C  F01A         	movff	?___xxtofl+3,___fldiv@b+3
  1597   000116  EC53  F005         	call	___fldiv	;wreg free
  1598   00011A  C017  F030         	movff	?___fldiv,___flmul@b
  1599   00011E  C018  F031         	movff	?___fldiv+1,___flmul@b+1
  1600   000122  C019  F032         	movff	?___fldiv+2,___flmul@b+2
  1601   000126  C01A  F033         	movff	?___fldiv+3,___flmul@b+3
  1602   00012A  EC3E  F003         	call	___flmul	;wreg free
  1603   00012E  C030  F049         	movff	?___flmul,___fltol@f1
  1604   000132  C031  F04A         	movff	?___flmul+1,___fltol@f1+1
  1605   000136  C032  F04B         	movff	?___flmul+2,___fltol@f1+2
  1606   00013A  C033  F04C         	movff	?___flmul+3,___fltol@f1+3
  1607   00013E  EC13  F00B         	call	___fltol	;wreg free
  1608   000142  5049               	movf	?___fltol^0,w,c
  1609   000144  0100               	movlb	0	; () banked
  1610   000146  6FB1               	movwf	detect_color@dist_R& (0+255),b
  1611   000148                     
  1612                           ; BSR set to: 0
  1613                           ;color.c: 106:     dist_G = ((float)(tempval->G)/(float)(tempval->R + tempval->G + tempv
      +                          al->B))*100;
  1614   000148  0E00               	movlw	0
  1615   00014A  6E34               	movwf	___flmul@a^0,c
  1616   00014C  0E00               	movlw	0
  1617   00014E  6E35               	movwf	(___flmul@a+1)^0,c
  1618   000150  0EC8               	movlw	200
  1619   000152  6E36               	movwf	(___flmul@a+2)^0,c
  1620   000154  0E42               	movlw	66
  1621   000156  6E37               	movwf	(___flmul@a+3)^0,c
  1622   000158  EE20 F004          	lfsr	2,4
  1623   00015C  51A2               	movf	detect_color@tempval& (0+255),w,b
  1624   00015E  26D9               	addwf	fsr2l,f,c
  1625   000160  51A3               	movf	(detect_color@tempval+1)& (0+255),w,b
  1626   000162  22DA               	addwfc	fsr2h,f,c
  1627   000164  CFDE F0A4          	movff	postinc2,??_detect_color
  1628   000168  CFDD F0A5          	movff	postdec2,??_detect_color+1
  1629   00016C  EE20 F002          	lfsr	2,2
  1630   000170  51A2               	movf	detect_color@tempval& (0+255),w,b
  1631   000172  26D9               	addwf	fsr2l,f,c
  1632   000174  51A3               	movf	(detect_color@tempval+1)& (0+255),w,b
  1633   000176  22DA               	addwfc	fsr2h,f,c
  1634   000178  CFDE F0A6          	movff	postinc2,??_detect_color+2
  1635   00017C  CFDD F0A7          	movff	postdec2,??_detect_color+3
  1636   000180  C0A2  FFD9         	movff	detect_color@tempval,fsr2l
  1637   000184  C0A3  FFDA         	movff	detect_color@tempval+1,fsr2h
  1638   000188  CFDE F0A8          	movff	postinc2,??_detect_color+4
  1639   00018C  CFDD F0A9          	movff	postdec2,??_detect_color+5
  1640   000190  51A6               	movf	(??_detect_color+2)& (0+255),w,b
  1641   000192  25A8               	addwf	(??_detect_color+4)& (0+255),w,b
  1642   000194  6FAA               	movwf	(??_detect_color+6)& (0+255),b
  1643   000196  51A7               	movf	(??_detect_color+3)& (0+255),w,b
  1644   000198  21A9               	addwfc	(??_detect_color+5)& (0+255),w,b
  1645   00019A  6FAB               	movwf	(??_detect_color+7)& (0+255),b
  1646   00019C  51A4               	movf	??_detect_color& (0+255),w,b
  1647   00019E  25AA               	addwf	(??_detect_color+6)& (0+255),w,b
  1648   0001A0  6FAC               	movwf	(??_detect_color+8)& (0+255),b
  1649   0001A2  51A5               	movf	(??_detect_color+1)& (0+255),w,b
  1650   0001A4  21AB               	addwfc	(??_detect_color+7)& (0+255),w,b
  1651   0001A6  6FAD               	movwf	(??_detect_color+9)& (0+255),b
  1652   0001A8  C0AC  F009         	movff	??_detect_color+8,___xxtofl@val
  1653   0001AC  C0AD  F00A         	movff	??_detect_color+9,___xxtofl@val+1
  1654   0001B0  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1655   0001B2  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1656   0001B4  0E00               	movlw	0
  1657   0001B6  EC83  F009         	call	___xxtofl
  1658   0001BA  C009  F01B         	movff	?___xxtofl,___fldiv@a
  1659   0001BE  C00A  F01C         	movff	?___xxtofl+1,___fldiv@a+1
  1660   0001C2  C00B  F01D         	movff	?___xxtofl+2,___fldiv@a+2
  1661   0001C6  C00C  F01E         	movff	?___xxtofl+3,___fldiv@a+3
  1662   0001CA  0100               	movlb	0	; () banked
  1663   0001CC  EE20 F002          	lfsr	2,2
  1664   0001D0  51A2               	movf	detect_color@tempval& (0+255),w,b
  1665   0001D2  26D9               	addwf	fsr2l,f,c
  1666   0001D4  51A3               	movf	(detect_color@tempval+1)& (0+255),w,b
  1667   0001D6  22DA               	addwfc	fsr2h,f,c
  1668   0001D8  CFDE F0AE          	movff	postinc2,??_detect_color+10
  1669   0001DC  CFDD F0AF          	movff	postdec2,??_detect_color+11
  1670   0001E0  C0AE  F009         	movff	??_detect_color+10,___xxtofl@val
  1671   0001E4  C0AF  F00A         	movff	??_detect_color+11,___xxtofl@val+1
  1672   0001E8  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1673   0001EA  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1674   0001EC  0E00               	movlw	0
  1675   0001EE  EC83  F009         	call	___xxtofl
  1676   0001F2  C009  F017         	movff	?___xxtofl,___fldiv@b
  1677   0001F6  C00A  F018         	movff	?___xxtofl+1,___fldiv@b+1
  1678   0001FA  C00B  F019         	movff	?___xxtofl+2,___fldiv@b+2
  1679   0001FE  C00C  F01A         	movff	?___xxtofl+3,___fldiv@b+3
  1680   000202  EC53  F005         	call	___fldiv	;wreg free
  1681   000206  C017  F030         	movff	?___fldiv,___flmul@b
  1682   00020A  C018  F031         	movff	?___fldiv+1,___flmul@b+1
  1683   00020E  C019  F032         	movff	?___fldiv+2,___flmul@b+2
  1684   000212  C01A  F033         	movff	?___fldiv+3,___flmul@b+3
  1685   000216  EC3E  F003         	call	___flmul	;wreg free
  1686   00021A  C030  F049         	movff	?___flmul,___fltol@f1
  1687   00021E  C031  F04A         	movff	?___flmul+1,___fltol@f1+1
  1688   000222  C032  F04B         	movff	?___flmul+2,___fltol@f1+2
  1689   000226  C033  F04C         	movff	?___flmul+3,___fltol@f1+3
  1690   00022A  EC13  F00B         	call	___fltol	;wreg free
  1691   00022E  5049               	movf	?___fltol^0,w,c
  1692   000230  0100               	movlb	0	; () banked
  1693   000232  6FB2               	movwf	detect_color@dist_G& (0+255),b
  1694   000234                     
  1695                           ; BSR set to: 0
  1696                           ;color.c: 107:     dist_B = ((float)(tempval->B)/(float)(tempval->R + tempval->G + tempv
      +                          al->B))*100;
  1697   000234  0E00               	movlw	0
  1698   000236  6E34               	movwf	___flmul@a^0,c
  1699   000238  0E00               	movlw	0
  1700   00023A  6E35               	movwf	(___flmul@a+1)^0,c
  1701   00023C  0EC8               	movlw	200
  1702   00023E  6E36               	movwf	(___flmul@a+2)^0,c
  1703   000240  0E42               	movlw	66
  1704   000242  6E37               	movwf	(___flmul@a+3)^0,c
  1705   000244  EE20 F004          	lfsr	2,4
  1706   000248  51A2               	movf	detect_color@tempval& (0+255),w,b
  1707   00024A  26D9               	addwf	fsr2l,f,c
  1708   00024C  51A3               	movf	(detect_color@tempval+1)& (0+255),w,b
  1709   00024E  22DA               	addwfc	fsr2h,f,c
  1710   000250  CFDE F0A4          	movff	postinc2,??_detect_color
  1711   000254  CFDD F0A5          	movff	postdec2,??_detect_color+1
  1712   000258  EE20 F002          	lfsr	2,2
  1713   00025C  51A2               	movf	detect_color@tempval& (0+255),w,b
  1714   00025E  26D9               	addwf	fsr2l,f,c
  1715   000260  51A3               	movf	(detect_color@tempval+1)& (0+255),w,b
  1716   000262  22DA               	addwfc	fsr2h,f,c
  1717   000264  CFDE F0A6          	movff	postinc2,??_detect_color+2
  1718   000268  CFDD F0A7          	movff	postdec2,??_detect_color+3
  1719   00026C  C0A2  FFD9         	movff	detect_color@tempval,fsr2l
  1720   000270  C0A3  FFDA         	movff	detect_color@tempval+1,fsr2h
  1721   000274  CFDE F0A8          	movff	postinc2,??_detect_color+4
  1722   000278  CFDD F0A9          	movff	postdec2,??_detect_color+5
  1723   00027C  51A6               	movf	(??_detect_color+2)& (0+255),w,b
  1724   00027E  25A8               	addwf	(??_detect_color+4)& (0+255),w,b
  1725   000280  6FAA               	movwf	(??_detect_color+6)& (0+255),b
  1726   000282  51A7               	movf	(??_detect_color+3)& (0+255),w,b
  1727   000284  21A9               	addwfc	(??_detect_color+5)& (0+255),w,b
  1728   000286  6FAB               	movwf	(??_detect_color+7)& (0+255),b
  1729   000288  51A4               	movf	??_detect_color& (0+255),w,b
  1730   00028A  25AA               	addwf	(??_detect_color+6)& (0+255),w,b
  1731   00028C  6FAC               	movwf	(??_detect_color+8)& (0+255),b
  1732   00028E  51A5               	movf	(??_detect_color+1)& (0+255),w,b
  1733   000290  21AB               	addwfc	(??_detect_color+7)& (0+255),w,b
  1734   000292  6FAD               	movwf	(??_detect_color+9)& (0+255),b
  1735   000294  C0AC  F009         	movff	??_detect_color+8,___xxtofl@val
  1736   000298  C0AD  F00A         	movff	??_detect_color+9,___xxtofl@val+1
  1737   00029C  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1738   00029E  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1739   0002A0  0E00               	movlw	0
  1740   0002A2  EC83  F009         	call	___xxtofl
  1741   0002A6  C009  F01B         	movff	?___xxtofl,___fldiv@a
  1742   0002AA  C00A  F01C         	movff	?___xxtofl+1,___fldiv@a+1
  1743   0002AE  C00B  F01D         	movff	?___xxtofl+2,___fldiv@a+2
  1744   0002B2  C00C  F01E         	movff	?___xxtofl+3,___fldiv@a+3
  1745   0002B6  0100               	movlb	0	; () banked
  1746   0002B8  EE20 F004          	lfsr	2,4
  1747   0002BC  51A2               	movf	detect_color@tempval& (0+255),w,b
  1748   0002BE  26D9               	addwf	fsr2l,f,c
  1749   0002C0  51A3               	movf	(detect_color@tempval+1)& (0+255),w,b
  1750   0002C2  22DA               	addwfc	fsr2h,f,c
  1751   0002C4  CFDE F0AE          	movff	postinc2,??_detect_color+10
  1752   0002C8  CFDD F0AF          	movff	postdec2,??_detect_color+11
  1753   0002CC  C0AE  F009         	movff	??_detect_color+10,___xxtofl@val
  1754   0002D0  C0AF  F00A         	movff	??_detect_color+11,___xxtofl@val+1
  1755   0002D4  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1756   0002D6  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1757   0002D8  0E00               	movlw	0
  1758   0002DA  EC83  F009         	call	___xxtofl
  1759   0002DE  C009  F017         	movff	?___xxtofl,___fldiv@b
  1760   0002E2  C00A  F018         	movff	?___xxtofl+1,___fldiv@b+1
  1761   0002E6  C00B  F019         	movff	?___xxtofl+2,___fldiv@b+2
  1762   0002EA  C00C  F01A         	movff	?___xxtofl+3,___fldiv@b+3
  1763   0002EE  EC53  F005         	call	___fldiv	;wreg free
  1764   0002F2  C017  F030         	movff	?___fldiv,___flmul@b
  1765   0002F6  C018  F031         	movff	?___fldiv+1,___flmul@b+1
  1766   0002FA  C019  F032         	movff	?___fldiv+2,___flmul@b+2
  1767   0002FE  C01A  F033         	movff	?___fldiv+3,___flmul@b+3
  1768   000302  EC3E  F003         	call	___flmul	;wreg free
  1769   000306  C030  F049         	movff	?___flmul,___fltol@f1
  1770   00030A  C031  F04A         	movff	?___flmul+1,___fltol@f1+1
  1771   00030E  C032  F04B         	movff	?___flmul+2,___fltol@f1+2
  1772   000312  C033  F04C         	movff	?___flmul+3,___fltol@f1+3
  1773   000316  EC13  F00B         	call	___fltol	;wreg free
  1774   00031A  5049               	movf	?___fltol^0,w,c
  1775   00031C  0100               	movlb	0	; () banked
  1776   00031E  6FB3               	movwf	detect_color@dist_B& (0+255),b
  1777   000320                     
  1778                           ; BSR set to: 0
  1779                           ;color.c: 109:     if(color_flag){
  1780   000320  5055               	movf	_color_flag^0,w,c
  1781   000322  B4D8               	btfsc	status,2,c
  1782   000324  EF96  F001         	goto	u3921
  1783   000328  EF98  F001         	goto	u3920
  1784   00032C                     u3921:
  1785   00032C  EF3A  F003         	goto	l42
  1786   000330                     u3920:
  1787   000330                     
  1788                           ; BSR set to: 0
  1789                           ;color.c: 110:         if((74<=dist_R) && (dist_R<=76) && (10<=dist_G) && (dist_G<=12) &
      +                          & (13<=dist_B) && (dist_B<=15)){
  1790   000330  0E49               	movlw	73
  1791   000332  65B1               	cpfsgt	detect_color@dist_R& (0+255),b
  1792   000334  EF9E  F001         	goto	u3931
  1793   000338  EFA0  F001         	goto	u3930
  1794   00033C                     u3931:
  1795   00033C  EFCC  F001         	goto	l4055
  1796   000340                     u3930:
  1797   000340                     
  1798                           ; BSR set to: 0
  1799   000340  0E4D               	movlw	77
  1800   000342  61B1               	cpfslt	detect_color@dist_R& (0+255),b
  1801   000344  EFA6  F001         	goto	u3941
  1802   000348  EFA8  F001         	goto	u3940
  1803   00034C                     u3941:
  1804   00034C  EFCC  F001         	goto	l4055
  1805   000350                     u3940:
  1806   000350                     
  1807                           ; BSR set to: 0
  1808   000350  0E09               	movlw	9
  1809   000352  65B2               	cpfsgt	detect_color@dist_G& (0+255),b
  1810   000354  EFAE  F001         	goto	u3951
  1811   000358  EFB0  F001         	goto	u3950
  1812   00035C                     u3951:
  1813   00035C  EFCC  F001         	goto	l4055
  1814   000360                     u3950:
  1815   000360                     
  1816                           ; BSR set to: 0
  1817   000360  0E0D               	movlw	13
  1818   000362  61B2               	cpfslt	detect_color@dist_G& (0+255),b
  1819   000364  EFB6  F001         	goto	u3961
  1820   000368  EFB8  F001         	goto	u3960
  1821   00036C                     u3961:
  1822   00036C  EFCC  F001         	goto	l4055
  1823   000370                     u3960:
  1824   000370                     
  1825                           ; BSR set to: 0
  1826   000370  0E0C               	movlw	12
  1827   000372  65B3               	cpfsgt	detect_color@dist_B& (0+255),b
  1828   000374  EFBE  F001         	goto	u3971
  1829   000378  EFC0  F001         	goto	u3970
  1830   00037C                     u3971:
  1831   00037C  EFCC  F001         	goto	l4055
  1832   000380                     u3970:
  1833   000380                     
  1834                           ; BSR set to: 0
  1835   000380  0E10               	movlw	16
  1836   000382  61B3               	cpfslt	detect_color@dist_B& (0+255),b
  1837   000384  EFC6  F001         	goto	u3981
  1838   000388  EFC8  F001         	goto	u3980
  1839   00038C                     u3981:
  1840   00038C  EFCC  F001         	goto	l4055
  1841   000390                     u3980:
  1842   000390                     
  1843                           ; BSR set to: 0
  1844                           ;color.c: 111:             color = 1;
  1845   000390  0E01               	movlw	1
  1846   000392  6FB0               	movwf	detect_color@color& (0+255),b
  1847                           
  1848                           ;color.c: 112:         }
  1849   000394  EF3A  F003         	goto	l42
  1850   000398                     l4055:
  1851                           
  1852                           ; BSR set to: 0
  1853   000398  0E23               	movlw	35
  1854   00039A  65B1               	cpfsgt	detect_color@dist_R& (0+255),b
  1855   00039C  EFD2  F001         	goto	u3991
  1856   0003A0  EFD4  F001         	goto	u3990
  1857   0003A4                     u3991:
  1858   0003A4  EF00  F002         	goto	l4069
  1859   0003A8                     u3990:
  1860   0003A8                     
  1861                           ; BSR set to: 0
  1862   0003A8  0E27               	movlw	39
  1863   0003AA  61B1               	cpfslt	detect_color@dist_R& (0+255),b
  1864   0003AC  EFDA  F001         	goto	u4001
  1865   0003B0  EFDC  F001         	goto	u4000
  1866   0003B4                     u4001:
  1867   0003B4  EF00  F002         	goto	l4069
  1868   0003B8                     u4000:
  1869   0003B8                     
  1870                           ; BSR set to: 0
  1871   0003B8  0E28               	movlw	40
  1872   0003BA  65B2               	cpfsgt	detect_color@dist_G& (0+255),b
  1873   0003BC  EFE2  F001         	goto	u4011
  1874   0003C0  EFE4  F001         	goto	u4010
  1875   0003C4                     u4011:
  1876   0003C4  EF00  F002         	goto	l4069
  1877   0003C8                     u4010:
  1878   0003C8                     
  1879                           ; BSR set to: 0
  1880   0003C8  0E2C               	movlw	44
  1881   0003CA  61B2               	cpfslt	detect_color@dist_G& (0+255),b
  1882   0003CC  EFEA  F001         	goto	u4021
  1883   0003D0  EFEC  F001         	goto	u4020
  1884   0003D4                     u4021:
  1885   0003D4  EF00  F002         	goto	l4069
  1886   0003D8                     u4020:
  1887   0003D8                     
  1888                           ; BSR set to: 0
  1889   0003D8  0E13               	movlw	19
  1890   0003DA  65B3               	cpfsgt	detect_color@dist_B& (0+255),b
  1891   0003DC  EFF2  F001         	goto	u4031
  1892   0003E0  EFF4  F001         	goto	u4030
  1893   0003E4                     u4031:
  1894   0003E4  EF00  F002         	goto	l4069
  1895   0003E8                     u4030:
  1896   0003E8                     
  1897                           ; BSR set to: 0
  1898   0003E8  0E17               	movlw	23
  1899   0003EA  61B3               	cpfslt	detect_color@dist_B& (0+255),b
  1900   0003EC  EFFA  F001         	goto	u4041
  1901   0003F0  EFFC  F001         	goto	u4040
  1902   0003F4                     u4041:
  1903   0003F4  EF00  F002         	goto	l4069
  1904   0003F8                     u4040:
  1905   0003F8                     
  1906                           ; BSR set to: 0
  1907                           ;color.c: 114:             color = 2;
  1908   0003F8  0E02               	movlw	2
  1909   0003FA  6FB0               	movwf	detect_color@color& (0+255),b
  1910                           
  1911                           ;color.c: 115:         }
  1912   0003FC  EF3A  F003         	goto	l42
  1913   000400                     l4069:
  1914                           
  1915                           ; BSR set to: 0
  1916   000400  0E1C               	movlw	28
  1917   000402  65B1               	cpfsgt	detect_color@dist_R& (0+255),b
  1918   000404  EF06  F002         	goto	u4051
  1919   000408  EF08  F002         	goto	u4050
  1920   00040C                     u4051:
  1921   00040C  EF34  F002         	goto	l4083
  1922   000410                     u4050:
  1923   000410                     
  1924                           ; BSR set to: 0
  1925   000410  0E23               	movlw	35
  1926   000412  61B1               	cpfslt	detect_color@dist_R& (0+255),b
  1927   000414  EF0E  F002         	goto	u4061
  1928   000418  EF10  F002         	goto	u4060
  1929   00041C                     u4061:
  1930   00041C  EF34  F002         	goto	l4083
  1931   000420                     u4060:
  1932   000420                     
  1933                           ; BSR set to: 0
  1934   000420  0E1F               	movlw	31
  1935   000422  65B2               	cpfsgt	detect_color@dist_G& (0+255),b
  1936   000424  EF16  F002         	goto	u4071
  1937   000428  EF18  F002         	goto	u4070
  1938   00042C                     u4071:
  1939   00042C  EF34  F002         	goto	l4083
  1940   000430                     u4070:
  1941   000430                     
  1942                           ; BSR set to: 0
  1943   000430  0E27               	movlw	39
  1944   000432  61B2               	cpfslt	detect_color@dist_G& (0+255),b
  1945   000434  EF1E  F002         	goto	u4081
  1946   000438  EF20  F002         	goto	u4080
  1947   00043C                     u4081:
  1948   00043C  EF34  F002         	goto	l4083
  1949   000440                     u4080:
  1950   000440                     
  1951                           ; BSR set to: 0
  1952   000440  0E1E               	movlw	30
  1953   000442  65B3               	cpfsgt	detect_color@dist_B& (0+255),b
  1954   000444  EF26  F002         	goto	u4091
  1955   000448  EF28  F002         	goto	u4090
  1956   00044C                     u4091:
  1957   00044C  EF34  F002         	goto	l4083
  1958   000450                     u4090:
  1959   000450                     
  1960                           ; BSR set to: 0
  1961   000450  0E26               	movlw	38
  1962   000452  61B3               	cpfslt	detect_color@dist_B& (0+255),b
  1963   000454  EF2E  F002         	goto	u4101
  1964   000458  EF30  F002         	goto	u4100
  1965   00045C                     u4101:
  1966   00045C  EF34  F002         	goto	l4083
  1967   000460                     u4100:
  1968   000460                     
  1969                           ; BSR set to: 0
  1970                           ;color.c: 117:             color = 3;
  1971   000460  0E03               	movlw	3
  1972   000462  6FB0               	movwf	detect_color@color& (0+255),b
  1973                           
  1974                           ;color.c: 118:         }
  1975   000464  EF3A  F003         	goto	l42
  1976   000468                     l4083:
  1977                           
  1978                           ; BSR set to: 0
  1979   000468  0E31               	movlw	49
  1980   00046A  65B1               	cpfsgt	detect_color@dist_R& (0+255),b
  1981   00046C  EF3A  F002         	goto	u4111
  1982   000470  EF3C  F002         	goto	u4110
  1983   000474                     u4111:
  1984   000474  EF68  F002         	goto	l4097
  1985   000478                     u4110:
  1986   000478                     
  1987                           ; BSR set to: 0
  1988   000478  0E35               	movlw	53
  1989   00047A  61B1               	cpfslt	detect_color@dist_R& (0+255),b
  1990   00047C  EF42  F002         	goto	u4121
  1991   000480  EF44  F002         	goto	u4120
  1992   000484                     u4121:
  1993   000484  EF68  F002         	goto	l4097
  1994   000488                     u4120:
  1995   000488                     
  1996                           ; BSR set to: 0
  1997   000488  0E1D               	movlw	29
  1998   00048A  65B2               	cpfsgt	detect_color@dist_G& (0+255),b
  1999   00048C  EF4A  F002         	goto	u4131
  2000   000490  EF4C  F002         	goto	u4130
  2001   000494                     u4131:
  2002   000494  EF68  F002         	goto	l4097
  2003   000498                     u4130:
  2004   000498                     
  2005                           ; BSR set to: 0
  2006   000498  0E21               	movlw	33
  2007   00049A  61B2               	cpfslt	detect_color@dist_G& (0+255),b
  2008   00049C  EF52  F002         	goto	u4141
  2009   0004A0  EF54  F002         	goto	u4140
  2010   0004A4                     u4141:
  2011   0004A4  EF68  F002         	goto	l4097
  2012   0004A8                     u4140:
  2013   0004A8                     
  2014                           ; BSR set to: 0
  2015   0004A8  0E10               	movlw	16
  2016   0004AA  65B3               	cpfsgt	detect_color@dist_B& (0+255),b
  2017   0004AC  EF5A  F002         	goto	u4151
  2018   0004B0  EF5C  F002         	goto	u4150
  2019   0004B4                     u4151:
  2020   0004B4  EF68  F002         	goto	l4097
  2021   0004B8                     u4150:
  2022   0004B8                     
  2023                           ; BSR set to: 0
  2024   0004B8  0E14               	movlw	20
  2025   0004BA  61B3               	cpfslt	detect_color@dist_B& (0+255),b
  2026   0004BC  EF62  F002         	goto	u4161
  2027   0004C0  EF64  F002         	goto	u4160
  2028   0004C4                     u4161:
  2029   0004C4  EF68  F002         	goto	l4097
  2030   0004C8                     u4160:
  2031   0004C8                     
  2032                           ; BSR set to: 0
  2033                           ;color.c: 120:             color = 4;
  2034   0004C8  0E04               	movlw	4
  2035   0004CA  6FB0               	movwf	detect_color@color& (0+255),b
  2036                           
  2037                           ;color.c: 121:         }
  2038   0004CC  EF3A  F003         	goto	l42
  2039   0004D0                     l4097:
  2040                           
  2041                           ; BSR set to: 0
  2042   0004D0  0E2F               	movlw	47
  2043   0004D2  65B1               	cpfsgt	detect_color@dist_R& (0+255),b
  2044   0004D4  EF6E  F002         	goto	u4171
  2045   0004D8  EF70  F002         	goto	u4170
  2046   0004DC                     u4171:
  2047   0004DC  EF9C  F002         	goto	l4111
  2048   0004E0                     u4170:
  2049   0004E0                     
  2050                           ; BSR set to: 0
  2051   0004E0  0E33               	movlw	51
  2052   0004E2  61B1               	cpfslt	detect_color@dist_R& (0+255),b
  2053   0004E4  EF76  F002         	goto	u4181
  2054   0004E8  EF78  F002         	goto	u4180
  2055   0004EC                     u4181:
  2056   0004EC  EF9C  F002         	goto	l4111
  2057   0004F0                     u4180:
  2058   0004F0                     
  2059                           ; BSR set to: 0
  2060   0004F0  0E1B               	movlw	27
  2061   0004F2  65B2               	cpfsgt	detect_color@dist_G& (0+255),b
  2062   0004F4  EF7E  F002         	goto	u4191
  2063   0004F8  EF80  F002         	goto	u4190
  2064   0004FC                     u4191:
  2065   0004FC  EF9C  F002         	goto	l4111
  2066   000500                     u4190:
  2067   000500                     
  2068                           ; BSR set to: 0
  2069   000500  0E1F               	movlw	31
  2070   000502  61B2               	cpfslt	detect_color@dist_G& (0+255),b
  2071   000504  EF86  F002         	goto	u4201
  2072   000508  EF88  F002         	goto	u4200
  2073   00050C                     u4201:
  2074   00050C  EF9C  F002         	goto	l4111
  2075   000510                     u4200:
  2076   000510                     
  2077                           ; BSR set to: 0
  2078   000510  0E14               	movlw	20
  2079   000512  65B3               	cpfsgt	detect_color@dist_B& (0+255),b
  2080   000514  EF8E  F002         	goto	u4211
  2081   000518  EF90  F002         	goto	u4210
  2082   00051C                     u4211:
  2083   00051C  EF9C  F002         	goto	l4111
  2084   000520                     u4210:
  2085   000520                     
  2086                           ; BSR set to: 0
  2087   000520  0E18               	movlw	24
  2088   000522  61B3               	cpfslt	detect_color@dist_B& (0+255),b
  2089   000524  EF96  F002         	goto	u4221
  2090   000528  EF98  F002         	goto	u4220
  2091   00052C                     u4221:
  2092   00052C  EF9C  F002         	goto	l4111
  2093   000530                     u4220:
  2094   000530                     
  2095                           ; BSR set to: 0
  2096                           ;color.c: 123:             color = 5;
  2097   000530  0E05               	movlw	5
  2098   000532  6FB0               	movwf	detect_color@color& (0+255),b
  2099                           
  2100                           ;color.c: 124:         }
  2101   000534  EF3A  F003         	goto	l42
  2102   000538                     l4111:
  2103                           
  2104                           ; BSR set to: 0
  2105   000538  0E3A               	movlw	58
  2106   00053A  65B1               	cpfsgt	detect_color@dist_R& (0+255),b
  2107   00053C  EFA2  F002         	goto	u4231
  2108   000540  EFA4  F002         	goto	u4230
  2109   000544                     u4231:
  2110   000544  EFD0  F002         	goto	l4125
  2111   000548                     u4230:
  2112   000548                     
  2113                           ; BSR set to: 0
  2114   000548  0E3E               	movlw	62
  2115   00054A  61B1               	cpfslt	detect_color@dist_R& (0+255),b
  2116   00054C  EFAA  F002         	goto	u4241
  2117   000550  EFAC  F002         	goto	u4240
  2118   000554                     u4241:
  2119   000554  EFD0  F002         	goto	l4125
  2120   000558                     u4240:
  2121   000558                     
  2122                           ; BSR set to: 0
  2123   000558  0E15               	movlw	21
  2124   00055A  65B2               	cpfsgt	detect_color@dist_G& (0+255),b
  2125   00055C  EFB2  F002         	goto	u4251
  2126   000560  EFB4  F002         	goto	u4250
  2127   000564                     u4251:
  2128   000564  EFD0  F002         	goto	l4125
  2129   000568                     u4250:
  2130   000568                     
  2131                           ; BSR set to: 0
  2132   000568  0E19               	movlw	25
  2133   00056A  61B2               	cpfslt	detect_color@dist_G& (0+255),b
  2134   00056C  EFBA  F002         	goto	u4261
  2135   000570  EFBC  F002         	goto	u4260
  2136   000574                     u4261:
  2137   000574  EFD0  F002         	goto	l4125
  2138   000578                     u4260:
  2139   000578                     
  2140                           ; BSR set to: 0
  2141   000578  0E0F               	movlw	15
  2142   00057A  65B3               	cpfsgt	detect_color@dist_B& (0+255),b
  2143   00057C  EFC2  F002         	goto	u4271
  2144   000580  EFC4  F002         	goto	u4270
  2145   000584                     u4271:
  2146   000584  EFD0  F002         	goto	l4125
  2147   000588                     u4270:
  2148   000588                     
  2149                           ; BSR set to: 0
  2150   000588  0E13               	movlw	19
  2151   00058A  61B3               	cpfslt	detect_color@dist_B& (0+255),b
  2152   00058C  EFCA  F002         	goto	u4281
  2153   000590  EFCC  F002         	goto	u4280
  2154   000594                     u4281:
  2155   000594  EFD0  F002         	goto	l4125
  2156   000598                     u4280:
  2157   000598                     
  2158                           ; BSR set to: 0
  2159                           ;color.c: 126:             color = 6;
  2160   000598  0E06               	movlw	6
  2161   00059A  6FB0               	movwf	detect_color@color& (0+255),b
  2162                           
  2163                           ;color.c: 127:         }
  2164   00059C  EF3A  F003         	goto	l42
  2165   0005A0                     l4125:
  2166                           
  2167                           ; BSR set to: 0
  2168   0005A0  0E20               	movlw	32
  2169   0005A2  65B1               	cpfsgt	detect_color@dist_R& (0+255),b
  2170   0005A4  EFD6  F002         	goto	u4291
  2171   0005A8  EFD8  F002         	goto	u4290
  2172   0005AC                     u4291:
  2173   0005AC  EF04  F003         	goto	l4139
  2174   0005B0                     u4290:
  2175   0005B0                     
  2176                           ; BSR set to: 0
  2177   0005B0  0E24               	movlw	36
  2178   0005B2  61B1               	cpfslt	detect_color@dist_R& (0+255),b
  2179   0005B4  EFDE  F002         	goto	u4301
  2180   0005B8  EFE0  F002         	goto	u4300
  2181   0005BC                     u4301:
  2182   0005BC  EF04  F003         	goto	l4139
  2183   0005C0                     u4300:
  2184   0005C0                     
  2185                           ; BSR set to: 0
  2186   0005C0  0E25               	movlw	37
  2187   0005C2  65B2               	cpfsgt	detect_color@dist_G& (0+255),b
  2188   0005C4  EFE6  F002         	goto	u4311
  2189   0005C8  EFE8  F002         	goto	u4310
  2190   0005CC                     u4311:
  2191   0005CC  EF04  F003         	goto	l4139
  2192   0005D0                     u4310:
  2193   0005D0                     
  2194                           ; BSR set to: 0
  2195   0005D0  0E29               	movlw	41
  2196   0005D2  61B2               	cpfslt	detect_color@dist_G& (0+255),b
  2197   0005D4  EFEE  F002         	goto	u4321
  2198   0005D8  EFF0  F002         	goto	u4320
  2199   0005DC                     u4321:
  2200   0005DC  EF04  F003         	goto	l4139
  2201   0005E0                     u4320:
  2202   0005E0                     
  2203                           ; BSR set to: 0
  2204   0005E0  0E19               	movlw	25
  2205   0005E2  65B3               	cpfsgt	detect_color@dist_B& (0+255),b
  2206   0005E4  EFF6  F002         	goto	u4331
  2207   0005E8  EFF8  F002         	goto	u4330
  2208   0005EC                     u4331:
  2209   0005EC  EF04  F003         	goto	l4139
  2210   0005F0                     u4330:
  2211   0005F0                     
  2212                           ; BSR set to: 0
  2213   0005F0  0E1D               	movlw	29
  2214   0005F2  61B3               	cpfslt	detect_color@dist_B& (0+255),b
  2215   0005F4  EFFE  F002         	goto	u4341
  2216   0005F8  EF00  F003         	goto	u4340
  2217   0005FC                     u4341:
  2218   0005FC  EF04  F003         	goto	l4139
  2219   000600                     u4340:
  2220   000600                     
  2221                           ; BSR set to: 0
  2222                           ;color.c: 129:             color = 7;
  2223   000600  0E07               	movlw	7
  2224   000602  6FB0               	movwf	detect_color@color& (0+255),b
  2225                           
  2226                           ;color.c: 130:         }
  2227   000604  EF3A  F003         	goto	l42
  2228   000608                     l4139:
  2229                           
  2230                           ; BSR set to: 0
  2231   000608  0E2A               	movlw	42
  2232   00060A  65B1               	cpfsgt	detect_color@dist_R& (0+255),b
  2233   00060C  EF0A  F003         	goto	u4351
  2234   000610  EF0C  F003         	goto	u4350
  2235   000614                     u4351:
  2236   000614  EF38  F003         	goto	l4153
  2237   000618                     u4350:
  2238   000618                     
  2239                           ; BSR set to: 0
  2240   000618  0E2E               	movlw	46
  2241   00061A  61B1               	cpfslt	detect_color@dist_R& (0+255),b
  2242   00061C  EF12  F003         	goto	u4361
  2243   000620  EF14  F003         	goto	u4360
  2244   000624                     u4361:
  2245   000624  EF38  F003         	goto	l4153
  2246   000628                     u4360:
  2247   000628                     
  2248                           ; BSR set to: 0
  2249   000628  0E1F               	movlw	31
  2250   00062A  65B2               	cpfsgt	detect_color@dist_G& (0+255),b
  2251   00062C  EF1A  F003         	goto	u4371
  2252   000630  EF1C  F003         	goto	u4370
  2253   000634                     u4371:
  2254   000634  EF38  F003         	goto	l4153
  2255   000638                     u4370:
  2256   000638                     
  2257                           ; BSR set to: 0
  2258   000638  0E23               	movlw	35
  2259   00063A  61B2               	cpfslt	detect_color@dist_G& (0+255),b
  2260   00063C  EF22  F003         	goto	u4381
  2261   000640  EF24  F003         	goto	u4380
  2262   000644                     u4381:
  2263   000644  EF38  F003         	goto	l4153
  2264   000648                     u4380:
  2265   000648                     
  2266                           ; BSR set to: 0
  2267   000648  0E15               	movlw	21
  2268   00064A  65B3               	cpfsgt	detect_color@dist_B& (0+255),b
  2269   00064C  EF2A  F003         	goto	u4391
  2270   000650  EF2C  F003         	goto	u4390
  2271   000654                     u4391:
  2272   000654  EF38  F003         	goto	l4153
  2273   000658                     u4390:
  2274   000658                     
  2275                           ; BSR set to: 0
  2276   000658  0E19               	movlw	25
  2277   00065A  61B3               	cpfslt	detect_color@dist_B& (0+255),b
  2278   00065C  EF32  F003         	goto	u4401
  2279   000660  EF34  F003         	goto	u4400
  2280   000664                     u4401:
  2281   000664  EF38  F003         	goto	l4153
  2282   000668                     u4400:
  2283   000668                     
  2284                           ; BSR set to: 0
  2285                           ;color.c: 132:             color = 8;
  2286   000668  0E08               	movlw	8
  2287   00066A  6FB0               	movwf	detect_color@color& (0+255),b
  2288                           
  2289                           ;color.c: 133:         }
  2290   00066C  EF3A  F003         	goto	l42
  2291   000670                     l4153:
  2292                           
  2293                           ; BSR set to: 0
  2294                           ;color.c: 135:             color = 0;
  2295   000670  0E00               	movlw	0
  2296   000672  6FB0               	movwf	detect_color@color& (0+255),b
  2297   000674                     l42:
  2298                           
  2299                           ; BSR set to: 0
  2300                           ;color.c: 138:     color_flag = 0;
  2301   000674  0E00               	movlw	0
  2302   000676  6E55               	movwf	_color_flag^0,c
  2303                           
  2304                           ;color.c: 139:     return color;
  2305   000678  51B0               	movf	detect_color@color& (0+255),w,b
  2306   00067A                     
  2307                           ; BSR set to: 0
  2308   00067A  0012               	return		;funcret
  2309   00067C                     __end_of_detect_color:
  2310                           	callstack 0
  2311                           
  2312 ;; *************** function ___xxtofl *****************
  2313 ;; Defined at:
  2314 ;;		line 10 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\xxtofl.c"
  2315 ;; Parameters:    Size  Location     Type
  2316 ;;  sign            1    wreg     unsigned char 
  2317 ;;  val             4    8[COMRAM] long 
  2318 ;; Auto vars:     Size  Location     Type
  2319 ;;  sign            1   16[COMRAM] unsigned char 
  2320 ;;  arg             4   18[COMRAM] unsigned long 
  2321 ;;  exp             1   17[COMRAM] unsigned char 
  2322 ;; Return value:  Size  Location     Type
  2323 ;;                  4    8[COMRAM] unsigned char 
  2324 ;; Registers used:
  2325 ;;		wreg, status,2, status,0
  2326 ;; Tracked objects:
  2327 ;;		On entry : 0/0
  2328 ;;		On exit  : 0/0
  2329 ;;		Unchanged: 0/0
  2330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2331 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2332 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2333 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2334 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2335 ;;Total ram usage:       14 bytes
  2336 ;; Hardware stack levels used: 1
  2337 ;; Hardware stack levels required when called: 7
  2338 ;; This function calls:
  2339 ;;		Nothing
  2340 ;; This function is called by:
  2341 ;;		_detect_color
  2342 ;; This function uses a non-reentrant model
  2343 ;;
  2344                           
  2345                           	psect	text3
  2346   001306                     __ptext3:
  2347                           	callstack 0
  2348   001306                     ___xxtofl:
  2349                           	callstack 22
  2350                           
  2351                           ; BSR set to: 0
  2352                           ;incstack = 0
  2353                           ;___xxtofl@sign stored from wreg
  2354   001306  6E11               	movwf	___xxtofl@sign^0,c
  2355   001308  5011               	movf	___xxtofl@sign^0,w,c
  2356   00130A  B4D8               	btfsc	status,2,c
  2357   00130C  EF8A  F009         	goto	u3081
  2358   001310  EF8C  F009         	goto	u3080
  2359   001314                     u3081:
  2360   001314  EFAE  F009         	goto	l1343
  2361   001318                     u3080:
  2362   001318  BE0C               	btfsc	(___xxtofl@val+3)^0,7,c
  2363   00131A  EF93  F009         	goto	u3090
  2364   00131E  EF91  F009         	goto	u3091
  2365   001322                     u3091:
  2366   001322  EFAE  F009         	goto	l1343
  2367   001326                     u3090:
  2368   001326  C009  F00D         	movff	___xxtofl@val,??___xxtofl
  2369   00132A  C00A  F00E         	movff	___xxtofl@val+1,??___xxtofl+1
  2370   00132E  C00B  F00F         	movff	___xxtofl@val+2,??___xxtofl+2
  2371   001332  C00C  F010         	movff	___xxtofl@val+3,??___xxtofl+3
  2372   001336  1E0D               	comf	??___xxtofl^0,f,c
  2373   001338  1E0E               	comf	(??___xxtofl+1)^0,f,c
  2374   00133A  1E0F               	comf	(??___xxtofl+2)^0,f,c
  2375   00133C  1E10               	comf	(??___xxtofl+3)^0,f,c
  2376   00133E  2A0D               	incf	??___xxtofl^0,f,c
  2377   001340  0E00               	movlw	0
  2378   001342  220E               	addwfc	(??___xxtofl+1)^0,f,c
  2379   001344  220F               	addwfc	(??___xxtofl+2)^0,f,c
  2380   001346  2210               	addwfc	(??___xxtofl+3)^0,f,c
  2381   001348  C00D  F013         	movff	??___xxtofl,___xxtofl@arg
  2382   00134C  C00E  F014         	movff	??___xxtofl+1,___xxtofl@arg+1
  2383   001350  C00F  F015         	movff	??___xxtofl+2,___xxtofl@arg+2
  2384   001354  C010  F016         	movff	??___xxtofl+3,___xxtofl@arg+3
  2385   001358  EFB6  F009         	goto	l3561
  2386   00135C                     l1343:
  2387   00135C  C009  F013         	movff	___xxtofl@val,___xxtofl@arg
  2388   001360  C00A  F014         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2389   001364  C00B  F015         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2390   001368  C00C  F016         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2391   00136C                     l3561:
  2392   00136C  5009               	movf	___xxtofl@val^0,w,c
  2393   00136E  100A               	iorwf	(___xxtofl@val+1)^0,w,c
  2394   001370  100B               	iorwf	(___xxtofl@val+2)^0,w,c
  2395   001372  100C               	iorwf	(___xxtofl@val+3)^0,w,c
  2396   001374  A4D8               	btfss	status,2,c
  2397   001376  EFBF  F009         	goto	u3101
  2398   00137A  EFC1  F009         	goto	u3100
  2399   00137E                     u3101:
  2400   00137E  EFCB  F009         	goto	l3567
  2401   001382                     u3100:
  2402   001382  0E00               	movlw	0
  2403   001384  6E09               	movwf	?___xxtofl^0,c
  2404   001386  0E00               	movlw	0
  2405   001388  6E0A               	movwf	(?___xxtofl+1)^0,c
  2406   00138A  0E00               	movlw	0
  2407   00138C  6E0B               	movwf	(?___xxtofl+2)^0,c
  2408   00138E  0E00               	movlw	0
  2409   001390  6E0C               	movwf	(?___xxtofl+3)^0,c
  2410   001392  EF5C  F00A         	goto	l1346
  2411   001396                     l3567:
  2412   001396  0E96               	movlw	150
  2413   001398  6E12               	movwf	___xxtofl@exp^0,c
  2414   00139A  EFD5  F009         	goto	l3571
  2415   00139E                     l3569:
  2416   00139E  2A12               	incf	___xxtofl@exp^0,f,c
  2417   0013A0  90D8               	bcf	status,0,c
  2418   0013A2  3216               	rrcf	(___xxtofl@arg+3)^0,f,c
  2419   0013A4  3215               	rrcf	(___xxtofl@arg+2)^0,f,c
  2420   0013A6  3214               	rrcf	(___xxtofl@arg+1)^0,f,c
  2421   0013A8  3213               	rrcf	___xxtofl@arg^0,f,c
  2422   0013AA                     l3571:
  2423   0013AA  0E00               	movlw	0
  2424   0013AC  1413               	andwf	___xxtofl@arg^0,w,c
  2425   0013AE  6E0D               	movwf	??___xxtofl^0,c
  2426   0013B0  0E00               	movlw	0
  2427   0013B2  1414               	andwf	(___xxtofl@arg+1)^0,w,c
  2428   0013B4  6E0E               	movwf	(??___xxtofl+1)^0,c
  2429   0013B6  0E00               	movlw	0
  2430   0013B8  1415               	andwf	(___xxtofl@arg+2)^0,w,c
  2431   0013BA  6E0F               	movwf	(??___xxtofl+2)^0,c
  2432   0013BC  0EFE               	movlw	254
  2433   0013BE  1416               	andwf	(___xxtofl@arg+3)^0,w,c
  2434   0013C0  6E10               	movwf	(??___xxtofl+3)^0,c
  2435   0013C2  500D               	movf	??___xxtofl^0,w,c
  2436   0013C4  100E               	iorwf	(??___xxtofl+1)^0,w,c
  2437   0013C6  100F               	iorwf	(??___xxtofl+2)^0,w,c
  2438   0013C8  1010               	iorwf	(??___xxtofl+3)^0,w,c
  2439   0013CA  A4D8               	btfss	status,2,c
  2440   0013CC  EFEA  F009         	goto	u3111
  2441   0013D0  EFEC  F009         	goto	u3110
  2442   0013D4                     u3111:
  2443   0013D4  EFCF  F009         	goto	l3569
  2444   0013D8                     u3110:
  2445   0013D8  EFFA  F009         	goto	l1350
  2446   0013DC                     l3573:
  2447   0013DC  2A12               	incf	___xxtofl@exp^0,f,c
  2448   0013DE  0E01               	movlw	1
  2449   0013E0  2613               	addwf	___xxtofl@arg^0,f,c
  2450   0013E2  0E00               	movlw	0
  2451   0013E4  2214               	addwfc	(___xxtofl@arg+1)^0,f,c
  2452   0013E6  2215               	addwfc	(___xxtofl@arg+2)^0,f,c
  2453   0013E8  2216               	addwfc	(___xxtofl@arg+3)^0,f,c
  2454   0013EA  90D8               	bcf	status,0,c
  2455   0013EC  3216               	rrcf	(___xxtofl@arg+3)^0,f,c
  2456   0013EE  3215               	rrcf	(___xxtofl@arg+2)^0,f,c
  2457   0013F0  3214               	rrcf	(___xxtofl@arg+1)^0,f,c
  2458   0013F2  3213               	rrcf	___xxtofl@arg^0,f,c
  2459   0013F4                     l1350:
  2460   0013F4  0E00               	movlw	0
  2461   0013F6  1413               	andwf	___xxtofl@arg^0,w,c
  2462   0013F8  6E0D               	movwf	??___xxtofl^0,c
  2463   0013FA  0E00               	movlw	0
  2464   0013FC  1414               	andwf	(___xxtofl@arg+1)^0,w,c
  2465   0013FE  6E0E               	movwf	(??___xxtofl+1)^0,c
  2466   001400  0E00               	movlw	0
  2467   001402  1415               	andwf	(___xxtofl@arg+2)^0,w,c
  2468   001404  6E0F               	movwf	(??___xxtofl+2)^0,c
  2469   001406  0EFF               	movlw	255
  2470   001408  1416               	andwf	(___xxtofl@arg+3)^0,w,c
  2471   00140A  6E10               	movwf	(??___xxtofl+3)^0,c
  2472   00140C  500D               	movf	??___xxtofl^0,w,c
  2473   00140E  100E               	iorwf	(??___xxtofl+1)^0,w,c
  2474   001410  100F               	iorwf	(??___xxtofl+2)^0,w,c
  2475   001412  1010               	iorwf	(??___xxtofl+3)^0,w,c
  2476   001414  A4D8               	btfss	status,2,c
  2477   001416  EF0F  F00A         	goto	u3121
  2478   00141A  EF11  F00A         	goto	u3120
  2479   00141E                     u3121:
  2480   00141E  EFEE  F009         	goto	l3573
  2481   001422                     u3120:
  2482   001422  EF19  F00A         	goto	l3581
  2483   001426                     l3579:
  2484   001426  0612               	decf	___xxtofl@exp^0,f,c
  2485   001428  90D8               	bcf	status,0,c
  2486   00142A  3613               	rlcf	___xxtofl@arg^0,f,c
  2487   00142C  3614               	rlcf	(___xxtofl@arg+1)^0,f,c
  2488   00142E  3615               	rlcf	(___xxtofl@arg+2)^0,f,c
  2489   001430  3616               	rlcf	(___xxtofl@arg+3)^0,f,c
  2490   001432                     l3581:
  2491   001432  BE15               	btfsc	(___xxtofl@arg+2)^0,7,c
  2492   001434  EF1E  F00A         	goto	u3131
  2493   001438  EF20  F00A         	goto	u3130
  2494   00143C                     u3131:
  2495   00143C  EF28  F00A         	goto	l1357
  2496   001440                     u3130:
  2497   001440  0E02               	movlw	2
  2498   001442  6012               	cpfslt	___xxtofl@exp^0,c
  2499   001444  EF26  F00A         	goto	u3141
  2500   001448  EF28  F00A         	goto	u3140
  2501   00144C                     u3141:
  2502   00144C  EF13  F00A         	goto	l3579
  2503   001450                     u3140:
  2504   001450                     l1357:
  2505   001450  B012               	btfsc	___xxtofl@exp^0,0,c
  2506   001452  EF2D  F00A         	goto	u3151
  2507   001456  EF2F  F00A         	goto	u3150
  2508   00145A                     u3151:
  2509   00145A  EF30  F00A         	goto	l3587
  2510   00145E                     u3150:
  2511   00145E  9E15               	bcf	(___xxtofl@arg+2)^0,7,c
  2512   001460                     l3587:
  2513   001460  90D8               	bcf	status,0,c
  2514   001462  3212               	rrcf	___xxtofl@exp^0,f,c
  2515   001464  C012  F00D         	movff	___xxtofl@exp,??___xxtofl
  2516   001468  6A0E               	clrf	(??___xxtofl+1)^0,c
  2517   00146A  6A0F               	clrf	(??___xxtofl+2)^0,c
  2518   00146C  6A10               	clrf	(??___xxtofl+3)^0,c
  2519   00146E  C00D  F010         	movff	??___xxtofl,??___xxtofl+3
  2520   001472  6A0F               	clrf	(??___xxtofl+2)^0,c
  2521   001474  6A0E               	clrf	(??___xxtofl+1)^0,c
  2522   001476  6A0D               	clrf	??___xxtofl^0,c
  2523   001478  500D               	movf	??___xxtofl^0,w,c
  2524   00147A  1213               	iorwf	___xxtofl@arg^0,f,c
  2525   00147C  500E               	movf	(??___xxtofl+1)^0,w,c
  2526   00147E  1214               	iorwf	(___xxtofl@arg+1)^0,f,c
  2527   001480  500F               	movf	(??___xxtofl+2)^0,w,c
  2528   001482  1215               	iorwf	(___xxtofl@arg+2)^0,f,c
  2529   001484  5010               	movf	(??___xxtofl+3)^0,w,c
  2530   001486  1216               	iorwf	(___xxtofl@arg+3)^0,f,c
  2531   001488  5011               	movf	___xxtofl@sign^0,w,c
  2532   00148A  B4D8               	btfsc	status,2,c
  2533   00148C  EF4A  F00A         	goto	u3161
  2534   001490  EF4C  F00A         	goto	u3160
  2535   001494                     u3161:
  2536   001494  EF54  F00A         	goto	l3597
  2537   001498                     u3160:
  2538   001498  BE0C               	btfsc	(___xxtofl@val+3)^0,7,c
  2539   00149A  EF53  F00A         	goto	u3170
  2540   00149E  EF51  F00A         	goto	u3171
  2541   0014A2                     u3171:
  2542   0014A2  EF54  F00A         	goto	l3597
  2543   0014A6                     u3170:
  2544   0014A6  8E16               	bsf	(___xxtofl@arg+3)^0,7,c
  2545   0014A8                     l3597:
  2546   0014A8  C013  F009         	movff	___xxtofl@arg,?___xxtofl
  2547   0014AC  C014  F00A         	movff	___xxtofl@arg+1,?___xxtofl+1
  2548   0014B0  C015  F00B         	movff	___xxtofl@arg+2,?___xxtofl+2
  2549   0014B4  C016  F00C         	movff	___xxtofl@arg+3,?___xxtofl+3
  2550   0014B8                     l1346:
  2551   0014B8  0012               	return		;funcret
  2552   0014BA                     __end_of___xxtofl:
  2553                           	callstack 0
  2554                           
  2555 ;; *************** function ___fltol *****************
  2556 ;; Defined at:
  2557 ;;		line 43 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\fltol.c"
  2558 ;; Parameters:    Size  Location     Type
  2559 ;;  f1              4   72[COMRAM] unsigned char 
  2560 ;; Auto vars:     Size  Location     Type
  2561 ;;  exp1            1   77[COMRAM] unsigned char 
  2562 ;;  sign1           1   76[COMRAM] unsigned char 
  2563 ;; Return value:  Size  Location     Type
  2564 ;;                  4   72[COMRAM] long 
  2565 ;; Registers used:
  2566 ;;		wreg, status,2, status,0
  2567 ;; Tracked objects:
  2568 ;;		On entry : 0/0
  2569 ;;		On exit  : 0/0
  2570 ;;		Unchanged: 0/0
  2571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2572 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2573 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2574 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2575 ;;      Totals:         6       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2576 ;;Total ram usage:       10 bytes
  2577 ;; Hardware stack levels used: 1
  2578 ;; Hardware stack levels required when called: 7
  2579 ;; This function calls:
  2580 ;;		Nothing
  2581 ;; This function is called by:
  2582 ;;		_detect_color
  2583 ;; This function uses a non-reentrant model
  2584 ;;
  2585                           
  2586                           	psect	text4
  2587   001626                     __ptext4:
  2588                           	callstack 0
  2589   001626                     ___fltol:
  2590                           	callstack 22
  2591   001626  344B               	rlcf	(___fltol@f1+2)^0,w,c
  2592   001628  344C               	rlcf	(___fltol@f1+3)^0,w,c
  2593   00162A  6E4E               	movwf	___fltol@exp1^0,c
  2594   00162C  504E               	movf	___fltol@exp1^0,w,c
  2595   00162E  A4D8               	btfss	status,2,c
  2596   001630  EF1C  F00B         	goto	u3851
  2597   001634  EF1E  F00B         	goto	u3850
  2598   001638                     u3851:
  2599   001638  EF28  F00B         	goto	l3993
  2600   00163C                     u3850:
  2601   00163C                     l3989:
  2602   00163C  0E00               	movlw	0
  2603   00163E  6E49               	movwf	?___fltol^0,c
  2604   001640  0E00               	movlw	0
  2605   001642  6E4A               	movwf	(?___fltol+1)^0,c
  2606   001644  0E00               	movlw	0
  2607   001646  6E4B               	movwf	(?___fltol+2)^0,c
  2608   001648  0E00               	movlw	0
  2609   00164A  6E4C               	movwf	(?___fltol+3)^0,c
  2610   00164C  EF96  F00B         	goto	l985
  2611   001650                     l3993:
  2612   001650  C049  F09E         	movff	___fltol@f1,??___fltol
  2613   001654  C04A  F09F         	movff	___fltol@f1+1,??___fltol+1
  2614   001658  C04B  F0A0         	movff	___fltol@f1+2,??___fltol+2
  2615   00165C  C04C  F0A1         	movff	___fltol@f1+3,??___fltol+3
  2616   001660  0E20               	movlw	32
  2617   001662  EF39  F00B         	goto	u3860
  2618   001666                     u3865:
  2619   001666  0100               	movlb	0	; () banked
  2620   001668  90D8               	bcf	status,0,c
  2621   00166A  33A1               	rrcf	(??___fltol+3)& (0+255),f,b
  2622   00166C  33A0               	rrcf	(??___fltol+2)& (0+255),f,b
  2623   00166E  339F               	rrcf	(??___fltol+1)& (0+255),f,b
  2624   001670  339E               	rrcf	??___fltol& (0+255),f,b
  2625   001672                     u3860:
  2626   001672  2EE8               	decfsz	wreg,f,c
  2627   001674  EF33  F00B         	goto	u3865
  2628   001678  519E               	movf	??___fltol& (0+255),w,b
  2629   00167A  6E4D               	movwf	___fltol@sign1^0,c
  2630   00167C                     
  2631                           ; BSR set to: 0
  2632   00167C  8E4B               	bsf	(___fltol@f1+2)^0,7,c
  2633   00167E                     
  2634                           ; BSR set to: 0
  2635   00167E  0EFF               	movlw	255
  2636   001680  1649               	andwf	___fltol@f1^0,f,c
  2637   001682  0EFF               	movlw	255
  2638   001684  164A               	andwf	(___fltol@f1+1)^0,f,c
  2639   001686  0EFF               	movlw	255
  2640   001688  164B               	andwf	(___fltol@f1+2)^0,f,c
  2641   00168A  0E00               	movlw	0
  2642   00168C  164C               	andwf	(___fltol@f1+3)^0,f,c
  2643   00168E                     
  2644                           ; BSR set to: 0
  2645   00168E  0E96               	movlw	150
  2646   001690  5E4E               	subwf	___fltol@exp1^0,f,c
  2647   001692                     
  2648                           ; BSR set to: 0
  2649   001692  BE4E               	btfsc	___fltol@exp1^0,7,c
  2650   001694  EF50  F00B         	goto	u3870
  2651   001698  EF4E  F00B         	goto	u3871
  2652   00169C                     u3871:
  2653   00169C  EF66  F00B         	goto	l4013
  2654   0016A0                     u3870:
  2655   0016A0                     
  2656                           ; BSR set to: 0
  2657   0016A0  504E               	movf	___fltol@exp1^0,w,c
  2658   0016A2  0A80               	xorlw	128
  2659   0016A4  0F97               	addlw	151
  2660   0016A6  B0D8               	btfsc	status,0,c
  2661   0016A8  EF58  F00B         	goto	u3881
  2662   0016AC  EF5A  F00B         	goto	u3880
  2663   0016B0                     u3881:
  2664   0016B0  EF5C  F00B         	goto	l4009
  2665   0016B4                     u3880:
  2666   0016B4  EF1E  F00B         	goto	l3989
  2667   0016B8                     l4009:
  2668   0016B8  90D8               	bcf	status,0,c
  2669   0016BA  324C               	rrcf	(___fltol@f1+3)^0,f,c
  2670   0016BC  324B               	rrcf	(___fltol@f1+2)^0,f,c
  2671   0016BE  324A               	rrcf	(___fltol@f1+1)^0,f,c
  2672   0016C0  3249               	rrcf	___fltol@f1^0,f,c
  2673   0016C2  3E4E               	incfsz	___fltol@exp1^0,f,c
  2674   0016C4  EF5C  F00B         	goto	l4009
  2675   0016C8  EF7E  F00B         	goto	l4023
  2676   0016CC                     l4013:
  2677                           
  2678                           ; BSR set to: 0
  2679   0016CC  0E1F               	movlw	31
  2680   0016CE  644E               	cpfsgt	___fltol@exp1^0,c
  2681   0016D0  EF6C  F00B         	goto	u3891
  2682   0016D4  EF6E  F00B         	goto	u3890
  2683   0016D8                     u3891:
  2684   0016D8  EF76  F00B         	goto	l4021
  2685   0016DC                     u3890:
  2686   0016DC  EF1E  F00B         	goto	l3989
  2687   0016E0                     l4019:
  2688   0016E0  90D8               	bcf	status,0,c
  2689   0016E2  3649               	rlcf	___fltol@f1^0,f,c
  2690   0016E4  364A               	rlcf	(___fltol@f1+1)^0,f,c
  2691   0016E6  364B               	rlcf	(___fltol@f1+2)^0,f,c
  2692   0016E8  364C               	rlcf	(___fltol@f1+3)^0,f,c
  2693   0016EA  064E               	decf	___fltol@exp1^0,f,c
  2694   0016EC                     l4021:
  2695   0016EC  504E               	movf	___fltol@exp1^0,w,c
  2696   0016EE  A4D8               	btfss	status,2,c
  2697   0016F0  EF7C  F00B         	goto	u3901
  2698   0016F4  EF7E  F00B         	goto	u3900
  2699   0016F8                     u3901:
  2700   0016F8  EF70  F00B         	goto	l4019
  2701   0016FC                     u3900:
  2702   0016FC                     l4023:
  2703   0016FC  504D               	movf	___fltol@sign1^0,w,c
  2704   0016FE  B4D8               	btfsc	status,2,c
  2705   001700  EF84  F00B         	goto	u3911
  2706   001704  EF86  F00B         	goto	u3910
  2707   001708                     u3911:
  2708   001708  EF8E  F00B         	goto	l4027
  2709   00170C                     u3910:
  2710   00170C  1E4C               	comf	(___fltol@f1+3)^0,f,c
  2711   00170E  1E4B               	comf	(___fltol@f1+2)^0,f,c
  2712   001710  1E4A               	comf	(___fltol@f1+1)^0,f,c
  2713   001712  6C49               	negf	___fltol@f1^0,c
  2714   001714  0E00               	movlw	0
  2715   001716  224A               	addwfc	(___fltol@f1+1)^0,f,c
  2716   001718  224B               	addwfc	(___fltol@f1+2)^0,f,c
  2717   00171A  224C               	addwfc	(___fltol@f1+3)^0,f,c
  2718   00171C                     l4027:
  2719   00171C  C049  F049         	movff	___fltol@f1,?___fltol
  2720   001720  C04A  F04A         	movff	___fltol@f1+1,?___fltol+1
  2721   001724  C04B  F04B         	movff	___fltol@f1+2,?___fltol+2
  2722   001728  C04C  F04C         	movff	___fltol@f1+3,?___fltol+3
  2723   00172C                     l985:
  2724   00172C  0012               	return		;funcret
  2725   00172E                     __end_of___fltol:
  2726                           	callstack 0
  2727                           
  2728 ;; *************** function ___flmul *****************
  2729 ;; Defined at:
  2730 ;;		line 8 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\sprcmul.c"
  2731 ;; Parameters:    Size  Location     Type
  2732 ;;  b               4   47[COMRAM] long 
  2733 ;;  a               4   51[COMRAM] long 
  2734 ;; Auto vars:     Size  Location     Type
  2735 ;;  prod            4   66[COMRAM] struct .
  2736 ;;  grs             4   60[COMRAM] unsigned long 
  2737 ;;  temp            2   70[COMRAM] struct .
  2738 ;;  bexp            1   65[COMRAM] unsigned char 
  2739 ;;  aexp            1   64[COMRAM] unsigned char 
  2740 ;;  sign            1   59[COMRAM] unsigned char 
  2741 ;; Return value:  Size  Location     Type
  2742 ;;                  4   47[COMRAM] unsigned char 
  2743 ;; Registers used:
  2744 ;;		wreg, status,2, status,0, prodl, prodh
  2745 ;; Tracked objects:
  2746 ;;		On entry : 0/0
  2747 ;;		On exit  : 0/0
  2748 ;;		Unchanged: 0/0
  2749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2750 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2751 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2752 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2753 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2754 ;;Total ram usage:       25 bytes
  2755 ;; Hardware stack levels used: 1
  2756 ;; Hardware stack levels required when called: 7
  2757 ;; This function calls:
  2758 ;;		Nothing
  2759 ;; This function is called by:
  2760 ;;		_detect_color
  2761 ;; This function uses a non-reentrant model
  2762 ;;
  2763                           
  2764                           	psect	text5
  2765   00067C                     __ptext5:
  2766                           	callstack 0
  2767   00067C                     ___flmul:
  2768                           	callstack 22
  2769   00067C  5033               	movf	(___flmul@b+3)^0,w,c
  2770   00067E  0B80               	andlw	128
  2771   000680  6E3C               	movwf	___flmul@sign^0,c
  2772   000682  5033               	movf	(___flmul@b+3)^0,w,c
  2773   000684  2433               	addwf	(___flmul@b+3)^0,w,c
  2774   000686  6E42               	movwf	___flmul@bexp^0,c
  2775   000688  AE32               	btfss	(___flmul@b+2)^0,7,c
  2776   00068A  EF49  F003         	goto	u2821
  2777   00068E  EF4B  F003         	goto	u2820
  2778   000692                     u2821:
  2779   000692  EF4C  F003         	goto	l3387
  2780   000696                     u2820:
  2781   000696  8042               	bsf	___flmul@bexp^0,0,c
  2782   000698                     l3387:
  2783   000698  5042               	movf	___flmul@bexp^0,w,c
  2784   00069A  B4D8               	btfsc	status,2,c
  2785   00069C  EF52  F003         	goto	u2831
  2786   0006A0  EF54  F003         	goto	u2830
  2787   0006A4                     u2831:
  2788   0006A4  EF67  F003         	goto	l3395
  2789   0006A8                     u2830:
  2790   0006A8  2842               	incf	___flmul@bexp^0,w,c
  2791   0006AA  A4D8               	btfss	status,2,c
  2792   0006AC  EF5A  F003         	goto	u2841
  2793   0006B0  EF5C  F003         	goto	u2840
  2794   0006B4                     u2841:
  2795   0006B4  EF64  F003         	goto	l3393
  2796   0006B8                     u2840:
  2797   0006B8  0E00               	movlw	0
  2798   0006BA  6E30               	movwf	___flmul@b^0,c
  2799   0006BC  0E00               	movlw	0
  2800   0006BE  6E31               	movwf	(___flmul@b+1)^0,c
  2801   0006C0  0E00               	movlw	0
  2802   0006C2  6E32               	movwf	(___flmul@b+2)^0,c
  2803   0006C4  0E00               	movlw	0
  2804   0006C6  6E33               	movwf	(___flmul@b+3)^0,c
  2805   0006C8                     l3393:
  2806   0006C8  8E32               	bsf	(___flmul@b+2)^0,7,c
  2807   0006CA  EF6F  F003         	goto	l3397
  2808   0006CE                     l3395:
  2809   0006CE  0E00               	movlw	0
  2810   0006D0  6E30               	movwf	___flmul@b^0,c
  2811   0006D2  0E00               	movlw	0
  2812   0006D4  6E31               	movwf	(___flmul@b+1)^0,c
  2813   0006D6  0E00               	movlw	0
  2814   0006D8  6E32               	movwf	(___flmul@b+2)^0,c
  2815   0006DA  0E00               	movlw	0
  2816   0006DC  6E33               	movwf	(___flmul@b+3)^0,c
  2817   0006DE                     l3397:
  2818   0006DE  5037               	movf	(___flmul@a+3)^0,w,c
  2819   0006E0  0B80               	andlw	128
  2820   0006E2  1A3C               	xorwf	___flmul@sign^0,f,c
  2821   0006E4  5037               	movf	(___flmul@a+3)^0,w,c
  2822   0006E6  2437               	addwf	(___flmul@a+3)^0,w,c
  2823   0006E8  6E41               	movwf	___flmul@aexp^0,c
  2824   0006EA  AE36               	btfss	(___flmul@a+2)^0,7,c
  2825   0006EC  EF7A  F003         	goto	u2851
  2826   0006F0  EF7C  F003         	goto	u2850
  2827   0006F4                     u2851:
  2828   0006F4  EF7D  F003         	goto	l3405
  2829   0006F8                     u2850:
  2830   0006F8  8041               	bsf	___flmul@aexp^0,0,c
  2831   0006FA                     l3405:
  2832   0006FA  5041               	movf	___flmul@aexp^0,w,c
  2833   0006FC  B4D8               	btfsc	status,2,c
  2834   0006FE  EF83  F003         	goto	u2861
  2835   000702  EF85  F003         	goto	u2860
  2836   000706                     u2861:
  2837   000706  EF98  F003         	goto	l3413
  2838   00070A                     u2860:
  2839   00070A  2841               	incf	___flmul@aexp^0,w,c
  2840   00070C  A4D8               	btfss	status,2,c
  2841   00070E  EF8B  F003         	goto	u2871
  2842   000712  EF8D  F003         	goto	u2870
  2843   000716                     u2871:
  2844   000716  EF95  F003         	goto	l3411
  2845   00071A                     u2870:
  2846   00071A  0E00               	movlw	0
  2847   00071C  6E34               	movwf	___flmul@a^0,c
  2848   00071E  0E00               	movlw	0
  2849   000720  6E35               	movwf	(___flmul@a+1)^0,c
  2850   000722  0E00               	movlw	0
  2851   000724  6E36               	movwf	(___flmul@a+2)^0,c
  2852   000726  0E00               	movlw	0
  2853   000728  6E37               	movwf	(___flmul@a+3)^0,c
  2854   00072A                     l3411:
  2855   00072A  8E36               	bsf	(___flmul@a+2)^0,7,c
  2856   00072C  EFA0  F003         	goto	l1302
  2857   000730                     l3413:
  2858   000730  0E00               	movlw	0
  2859   000732  6E34               	movwf	___flmul@a^0,c
  2860   000734  0E00               	movlw	0
  2861   000736  6E35               	movwf	(___flmul@a+1)^0,c
  2862   000738  0E00               	movlw	0
  2863   00073A  6E36               	movwf	(___flmul@a+2)^0,c
  2864   00073C  0E00               	movlw	0
  2865   00073E  6E37               	movwf	(___flmul@a+3)^0,c
  2866   000740                     l1302:
  2867   000740  5041               	movf	___flmul@aexp^0,w,c
  2868   000742  B4D8               	btfsc	status,2,c
  2869   000744  EFA6  F003         	goto	u2881
  2870   000748  EFA8  F003         	goto	u2880
  2871   00074C                     u2881:
  2872   00074C  EFB0  F003         	goto	l3417
  2873   000750                     u2880:
  2874   000750  5042               	movf	___flmul@bexp^0,w,c
  2875   000752  A4D8               	btfss	status,2,c
  2876   000754  EFAE  F003         	goto	u2891
  2877   000758  EFB0  F003         	goto	u2890
  2878   00075C                     u2891:
  2879   00075C  EFBA  F003         	goto	l3421
  2880   000760                     u2890:
  2881   000760                     l3417:
  2882   000760  0E00               	movlw	0
  2883   000762  6E30               	movwf	?___flmul^0,c
  2884   000764  0E00               	movlw	0
  2885   000766  6E31               	movwf	(?___flmul+1)^0,c
  2886   000768  0E00               	movlw	0
  2887   00076A  6E32               	movwf	(?___flmul+2)^0,c
  2888   00076C  0E00               	movlw	0
  2889   00076E  6E33               	movwf	(?___flmul+3)^0,c
  2890   000770  EF52  F005         	goto	l1306
  2891   000774                     l3421:
  2892   000774  5036               	movf	(___flmul@a+2)^0,w,c
  2893   000776  0230               	mulwf	___flmul@b^0,c
  2894   000778  CFF3 F047          	movff	prodl,___flmul@temp
  2895   00077C  CFF4 F048          	movff	prodh,___flmul@temp+1
  2896   000780  5047               	movf	___flmul@temp^0,w,c
  2897   000782  6E3D               	movwf	___flmul@grs^0,c
  2898   000784  6A3E               	clrf	(___flmul@grs+1)^0,c
  2899   000786  6A3F               	clrf	(___flmul@grs+2)^0,c
  2900   000788  6A40               	clrf	(___flmul@grs+3)^0,c
  2901   00078A  5048               	movf	(___flmul@temp+1)^0,w,c
  2902   00078C  6E43               	movwf	___flmul@prod^0,c
  2903   00078E  6A44               	clrf	(___flmul@prod+1)^0,c
  2904   000790  6A45               	clrf	(___flmul@prod+2)^0,c
  2905   000792  6A46               	clrf	(___flmul@prod+3)^0,c
  2906   000794  5035               	movf	(___flmul@a+1)^0,w,c
  2907   000796  0231               	mulwf	(___flmul@b+1)^0,c
  2908   000798  CFF3 F047          	movff	prodl,___flmul@temp
  2909   00079C  CFF4 F048          	movff	prodh,___flmul@temp+1
  2910   0007A0  5047               	movf	___flmul@temp^0,w,c
  2911   0007A2  263D               	addwf	___flmul@grs^0,f,c
  2912   0007A4  0E00               	movlw	0
  2913   0007A6  223E               	addwfc	(___flmul@grs+1)^0,f,c
  2914   0007A8  223F               	addwfc	(___flmul@grs+2)^0,f,c
  2915   0007AA  2240               	addwfc	(___flmul@grs+3)^0,f,c
  2916   0007AC  5048               	movf	(___flmul@temp+1)^0,w,c
  2917   0007AE  2643               	addwf	___flmul@prod^0,f,c
  2918   0007B0  0E00               	movlw	0
  2919   0007B2  2244               	addwfc	(___flmul@prod+1)^0,f,c
  2920   0007B4  2245               	addwfc	(___flmul@prod+2)^0,f,c
  2921   0007B6  2246               	addwfc	(___flmul@prod+3)^0,f,c
  2922   0007B8  5034               	movf	___flmul@a^0,w,c
  2923   0007BA  0232               	mulwf	(___flmul@b+2)^0,c
  2924   0007BC  CFF3 F047          	movff	prodl,___flmul@temp
  2925   0007C0  CFF4 F048          	movff	prodh,___flmul@temp+1
  2926   0007C4  5047               	movf	___flmul@temp^0,w,c
  2927   0007C6  263D               	addwf	___flmul@grs^0,f,c
  2928   0007C8  0E00               	movlw	0
  2929   0007CA  223E               	addwfc	(___flmul@grs+1)^0,f,c
  2930   0007CC  223F               	addwfc	(___flmul@grs+2)^0,f,c
  2931   0007CE  2240               	addwfc	(___flmul@grs+3)^0,f,c
  2932   0007D0  5048               	movf	(___flmul@temp+1)^0,w,c
  2933   0007D2  2643               	addwf	___flmul@prod^0,f,c
  2934   0007D4  0E00               	movlw	0
  2935   0007D6  2244               	addwfc	(___flmul@prod+1)^0,f,c
  2936   0007D8  2245               	addwfc	(___flmul@prod+2)^0,f,c
  2937   0007DA  2246               	addwfc	(___flmul@prod+3)^0,f,c
  2938   0007DC  C03F  F040         	movff	___flmul@grs+2,___flmul@grs+3
  2939   0007E0  C03E  F03F         	movff	___flmul@grs+1,___flmul@grs+2
  2940   0007E4  C03D  F03E         	movff	___flmul@grs,___flmul@grs+1
  2941   0007E8  6A3D               	clrf	___flmul@grs^0,c
  2942   0007EA  5034               	movf	___flmul@a^0,w,c
  2943   0007EC  0231               	mulwf	(___flmul@b+1)^0,c
  2944   0007EE  CFF3 F047          	movff	prodl,___flmul@temp
  2945   0007F2  CFF4 F048          	movff	prodh,___flmul@temp+1
  2946   0007F6  5047               	movf	___flmul@temp^0,w,c
  2947   0007F8  263D               	addwf	___flmul@grs^0,f,c
  2948   0007FA  5048               	movf	(___flmul@temp+1)^0,w,c
  2949   0007FC  223E               	addwfc	(___flmul@grs+1)^0,f,c
  2950   0007FE  0E00               	movlw	0
  2951   000800  223F               	addwfc	(___flmul@grs+2)^0,f,c
  2952   000802  0E00               	movlw	0
  2953   000804  2240               	addwfc	(___flmul@grs+3)^0,f,c
  2954   000806  5035               	movf	(___flmul@a+1)^0,w,c
  2955   000808  0230               	mulwf	___flmul@b^0,c
  2956   00080A  CFF3 F047          	movff	prodl,___flmul@temp
  2957   00080E  CFF4 F048          	movff	prodh,___flmul@temp+1
  2958   000812  5047               	movf	___flmul@temp^0,w,c
  2959   000814  263D               	addwf	___flmul@grs^0,f,c
  2960   000816  5048               	movf	(___flmul@temp+1)^0,w,c
  2961   000818  223E               	addwfc	(___flmul@grs+1)^0,f,c
  2962   00081A  0E00               	movlw	0
  2963   00081C  223F               	addwfc	(___flmul@grs+2)^0,f,c
  2964   00081E  0E00               	movlw	0
  2965   000820  2240               	addwfc	(___flmul@grs+3)^0,f,c
  2966   000822  C03F  F040         	movff	___flmul@grs+2,___flmul@grs+3
  2967   000826  C03E  F03F         	movff	___flmul@grs+1,___flmul@grs+2
  2968   00082A  C03D  F03E         	movff	___flmul@grs,___flmul@grs+1
  2969   00082E  6A3D               	clrf	___flmul@grs^0,c
  2970   000830  5034               	movf	___flmul@a^0,w,c
  2971   000832  0230               	mulwf	___flmul@b^0,c
  2972   000834  CFF3 F047          	movff	prodl,___flmul@temp
  2973   000838  CFF4 F048          	movff	prodh,___flmul@temp+1
  2974   00083C  5047               	movf	___flmul@temp^0,w,c
  2975   00083E  263D               	addwf	___flmul@grs^0,f,c
  2976   000840  5048               	movf	(___flmul@temp+1)^0,w,c
  2977   000842  223E               	addwfc	(___flmul@grs+1)^0,f,c
  2978   000844  0E00               	movlw	0
  2979   000846  223F               	addwfc	(___flmul@grs+2)^0,f,c
  2980   000848  0E00               	movlw	0
  2981   00084A  2240               	addwfc	(___flmul@grs+3)^0,f,c
  2982   00084C  5036               	movf	(___flmul@a+2)^0,w,c
  2983   00084E  0231               	mulwf	(___flmul@b+1)^0,c
  2984   000850  CFF3 F047          	movff	prodl,___flmul@temp
  2985   000854  CFF4 F048          	movff	prodh,___flmul@temp+1
  2986   000858  5047               	movf	___flmul@temp^0,w,c
  2987   00085A  2643               	addwf	___flmul@prod^0,f,c
  2988   00085C  5048               	movf	(___flmul@temp+1)^0,w,c
  2989   00085E  2244               	addwfc	(___flmul@prod+1)^0,f,c
  2990   000860  0E00               	movlw	0
  2991   000862  2245               	addwfc	(___flmul@prod+2)^0,f,c
  2992   000864  0E00               	movlw	0
  2993   000866  2246               	addwfc	(___flmul@prod+3)^0,f,c
  2994   000868  5035               	movf	(___flmul@a+1)^0,w,c
  2995   00086A  0232               	mulwf	(___flmul@b+2)^0,c
  2996   00086C  CFF3 F047          	movff	prodl,___flmul@temp
  2997   000870  CFF4 F048          	movff	prodh,___flmul@temp+1
  2998   000874  5047               	movf	___flmul@temp^0,w,c
  2999   000876  2643               	addwf	___flmul@prod^0,f,c
  3000   000878  5048               	movf	(___flmul@temp+1)^0,w,c
  3001   00087A  2244               	addwfc	(___flmul@prod+1)^0,f,c
  3002   00087C  0E00               	movlw	0
  3003   00087E  2245               	addwfc	(___flmul@prod+2)^0,f,c
  3004   000880  0E00               	movlw	0
  3005   000882  2246               	addwfc	(___flmul@prod+3)^0,f,c
  3006   000884  5036               	movf	(___flmul@a+2)^0,w,c
  3007   000886  0232               	mulwf	(___flmul@b+2)^0,c
  3008   000888  CFF3 F047          	movff	prodl,___flmul@temp
  3009   00088C  CFF4 F048          	movff	prodh,___flmul@temp+1
  3010   000890  5047               	movf	___flmul@temp^0,w,c
  3011   000892  6E38               	movwf	??___flmul^0,c
  3012   000894  5048               	movf	(___flmul@temp+1)^0,w,c
  3013   000896  6E39               	movwf	(??___flmul+1)^0,c
  3014   000898  6A3A               	clrf	(??___flmul+2)^0,c
  3015   00089A  6A3B               	clrf	(??___flmul+3)^0,c
  3016   00089C  C03A  F03B         	movff	??___flmul+2,??___flmul+3
  3017   0008A0  C039  F03A         	movff	??___flmul+1,??___flmul+2
  3018   0008A4  C038  F039         	movff	??___flmul,??___flmul+1
  3019   0008A8  6A38               	clrf	??___flmul^0,c
  3020   0008AA  5038               	movf	??___flmul^0,w,c
  3021   0008AC  2643               	addwf	___flmul@prod^0,f,c
  3022   0008AE  5039               	movf	(??___flmul+1)^0,w,c
  3023   0008B0  2244               	addwfc	(___flmul@prod+1)^0,f,c
  3024   0008B2  503A               	movf	(??___flmul+2)^0,w,c
  3025   0008B4  2245               	addwfc	(___flmul@prod+2)^0,f,c
  3026   0008B6  503B               	movf	(??___flmul+3)^0,w,c
  3027   0008B8  2246               	addwfc	(___flmul@prod+3)^0,f,c
  3028   0008BA  C03D  F038         	movff	___flmul@grs,??___flmul
  3029   0008BE  C03E  F039         	movff	___flmul@grs+1,??___flmul+1
  3030   0008C2  C03F  F03A         	movff	___flmul@grs+2,??___flmul+2
  3031   0008C6  C040  F03B         	movff	___flmul@grs+3,??___flmul+3
  3032   0008CA  0E19               	movlw	25
  3033   0008CC  EF6D  F004         	goto	u2900
  3034   0008D0                     u2905:
  3035   0008D0  90D8               	bcf	status,0,c
  3036   0008D2  323B               	rrcf	(??___flmul+3)^0,f,c
  3037   0008D4  323A               	rrcf	(??___flmul+2)^0,f,c
  3038   0008D6  3239               	rrcf	(??___flmul+1)^0,f,c
  3039   0008D8  3238               	rrcf	??___flmul^0,f,c
  3040   0008DA                     u2900:
  3041   0008DA  2EE8               	decfsz	wreg,f,c
  3042   0008DC  EF68  F004         	goto	u2905
  3043   0008E0  5038               	movf	??___flmul^0,w,c
  3044   0008E2  2643               	addwf	___flmul@prod^0,f,c
  3045   0008E4  5039               	movf	(??___flmul+1)^0,w,c
  3046   0008E6  2244               	addwfc	(___flmul@prod+1)^0,f,c
  3047   0008E8  503A               	movf	(??___flmul+2)^0,w,c
  3048   0008EA  2245               	addwfc	(___flmul@prod+2)^0,f,c
  3049   0008EC  503B               	movf	(??___flmul+3)^0,w,c
  3050   0008EE  2246               	addwfc	(___flmul@prod+3)^0,f,c
  3051   0008F0  C03F  F040         	movff	___flmul@grs+2,___flmul@grs+3
  3052   0008F4  C03E  F03F         	movff	___flmul@grs+1,___flmul@grs+2
  3053   0008F8  C03D  F03E         	movff	___flmul@grs,___flmul@grs+1
  3054   0008FC  6A3D               	clrf	___flmul@grs^0,c
  3055   0008FE  5041               	movf	___flmul@aexp^0,w,c
  3056   000900  C042  F038         	movff	___flmul@bexp,??___flmul
  3057   000904  6A39               	clrf	(??___flmul+1)^0,c
  3058   000906  2638               	addwf	??___flmul^0,f,c
  3059   000908  0E00               	movlw	0
  3060   00090A  2239               	addwfc	(??___flmul+1)^0,f,c
  3061   00090C  0E82               	movlw	130
  3062   00090E  2438               	addwf	??___flmul^0,w,c
  3063   000910  6E47               	movwf	___flmul@temp^0,c
  3064   000912  0EFF               	movlw	255
  3065   000914  2039               	addwfc	(??___flmul+1)^0,w,c
  3066   000916  6E48               	movwf	(___flmul@temp+1)^0,c
  3067   000918  EFA3  F004         	goto	l3469
  3068   00091C                     l3463:
  3069   00091C  90D8               	bcf	status,0,c
  3070   00091E  3643               	rlcf	___flmul@prod^0,f,c
  3071   000920  3644               	rlcf	(___flmul@prod+1)^0,f,c
  3072   000922  3645               	rlcf	(___flmul@prod+2)^0,f,c
  3073   000924  3646               	rlcf	(___flmul@prod+3)^0,f,c
  3074   000926  AE40               	btfss	(___flmul@grs+3)^0,7,c
  3075   000928  EF98  F004         	goto	u2911
  3076   00092C  EF9A  F004         	goto	u2910
  3077   000930                     u2911:
  3078   000930  EF9B  F004         	goto	l1309
  3079   000934                     u2910:
  3080   000934  8043               	bsf	___flmul@prod^0,0,c
  3081   000936                     l1309:
  3082   000936  90D8               	bcf	status,0,c
  3083   000938  363D               	rlcf	___flmul@grs^0,f,c
  3084   00093A  363E               	rlcf	(___flmul@grs+1)^0,f,c
  3085   00093C  363F               	rlcf	(___flmul@grs+2)^0,f,c
  3086   00093E  3640               	rlcf	(___flmul@grs+3)^0,f,c
  3087   000940  0647               	decf	___flmul@temp^0,f,c
  3088   000942  A0D8               	btfss	status,0,c
  3089   000944  0648               	decf	(___flmul@temp+1)^0,f,c
  3090   000946                     l3469:
  3091   000946  AE45               	btfss	(___flmul@prod+2)^0,7,c
  3092   000948  EFA8  F004         	goto	u2921
  3093   00094C  EFAA  F004         	goto	u2920
  3094   000950                     u2921:
  3095   000950  EF8E  F004         	goto	l3463
  3096   000954                     u2920:
  3097   000954  0E00               	movlw	0
  3098   000956  6E41               	movwf	___flmul@aexp^0,c
  3099   000958  AE40               	btfss	(___flmul@grs+3)^0,7,c
  3100   00095A  EFB1  F004         	goto	u2931
  3101   00095E  EFB3  F004         	goto	u2930
  3102   000962                     u2931:
  3103   000962  EFD7  F004         	goto	l1311
  3104   000966                     u2930:
  3105   000966  0EFF               	movlw	255
  3106   000968  143D               	andwf	___flmul@grs^0,w,c
  3107   00096A  6E38               	movwf	??___flmul^0,c
  3108   00096C  0EFF               	movlw	255
  3109   00096E  143E               	andwf	(___flmul@grs+1)^0,w,c
  3110   000970  6E39               	movwf	(??___flmul+1)^0,c
  3111   000972  0EFF               	movlw	255
  3112   000974  143F               	andwf	(___flmul@grs+2)^0,w,c
  3113   000976  6E3A               	movwf	(??___flmul+2)^0,c
  3114   000978  0E7F               	movlw	127
  3115   00097A  1440               	andwf	(___flmul@grs+3)^0,w,c
  3116   00097C  6E3B               	movwf	(??___flmul+3)^0,c
  3117   00097E  5038               	movf	??___flmul^0,w,c
  3118   000980  1039               	iorwf	(??___flmul+1)^0,w,c
  3119   000982  103A               	iorwf	(??___flmul+2)^0,w,c
  3120   000984  103B               	iorwf	(??___flmul+3)^0,w,c
  3121   000986  B4D8               	btfsc	status,2,c
  3122   000988  EFC8  F004         	goto	u2941
  3123   00098C  EFCA  F004         	goto	u2940
  3124   000990                     u2941:
  3125   000990  EFCE  F004         	goto	l1312
  3126   000994                     u2940:
  3127   000994                     l3477:
  3128   000994  0E01               	movlw	1
  3129   000996  6E41               	movwf	___flmul@aexp^0,c
  3130   000998  EFD7  F004         	goto	l1311
  3131   00099C                     l1312:
  3132   00099C  A043               	btfss	___flmul@prod^0,0,c
  3133   00099E  EFD3  F004         	goto	u2951
  3134   0009A2  EFD5  F004         	goto	u2950
  3135   0009A6                     u2951:
  3136   0009A6  EFD7  F004         	goto	l1311
  3137   0009AA                     u2950:
  3138   0009AA  EFCA  F004         	goto	l3477
  3139   0009AE                     l1311:
  3140   0009AE  5041               	movf	___flmul@aexp^0,w,c
  3141   0009B0  B4D8               	btfsc	status,2,c
  3142   0009B2  EFDD  F004         	goto	u2961
  3143   0009B6  EFDF  F004         	goto	u2960
  3144   0009BA                     u2961:
  3145   0009BA  EF03  F005         	goto	l3489
  3146   0009BE                     u2960:
  3147   0009BE  0E01               	movlw	1
  3148   0009C0  2643               	addwf	___flmul@prod^0,f,c
  3149   0009C2  0E00               	movlw	0
  3150   0009C4  2244               	addwfc	(___flmul@prod+1)^0,f,c
  3151   0009C6  2245               	addwfc	(___flmul@prod+2)^0,f,c
  3152   0009C8  2246               	addwfc	(___flmul@prod+3)^0,f,c
  3153   0009CA  A046               	btfss	(___flmul@prod+3)^0,0,c
  3154   0009CC  EFEA  F004         	goto	u2971
  3155   0009D0  EFEC  F004         	goto	u2970
  3156   0009D4                     u2971:
  3157   0009D4  EF03  F005         	goto	l3489
  3158   0009D8                     u2970:
  3159   0009D8  C043  F038         	movff	___flmul@prod,??___flmul
  3160   0009DC  C044  F039         	movff	___flmul@prod+1,??___flmul+1
  3161   0009E0  C045  F03A         	movff	___flmul@prod+2,??___flmul+2
  3162   0009E4  C046  F03B         	movff	___flmul@prod+3,??___flmul+3
  3163   0009E8  343B               	rlcf	(??___flmul+3)^0,w,c
  3164   0009EA  323B               	rrcf	(??___flmul+3)^0,f,c
  3165   0009EC  323A               	rrcf	(??___flmul+2)^0,f,c
  3166   0009EE  3239               	rrcf	(??___flmul+1)^0,f,c
  3167   0009F0  3238               	rrcf	??___flmul^0,f,c
  3168   0009F2  C038  F043         	movff	??___flmul,___flmul@prod
  3169   0009F6  C039  F044         	movff	??___flmul+1,___flmul@prod+1
  3170   0009FA  C03A  F045         	movff	??___flmul+2,___flmul@prod+2
  3171   0009FE  C03B  F046         	movff	??___flmul+3,___flmul@prod+3
  3172   000A02  4A47               	infsnz	___flmul@temp^0,f,c
  3173   000A04  2A48               	incf	(___flmul@temp+1)^0,f,c
  3174   000A06                     l3489:
  3175   000A06  BE48               	btfsc	(___flmul@temp+1)^0,7,c
  3176   000A08  EF0E  F005         	goto	u2981
  3177   000A0C  5048               	movf	(___flmul@temp+1)^0,w,c
  3178   000A0E  E108               	bnz	u2980
  3179   000A10  2847               	incf	___flmul@temp^0,w,c
  3180   000A12  A0D8               	btfss	status,0,c
  3181   000A14  EF0E  F005         	goto	u2981
  3182   000A18  EF10  F005         	goto	u2980
  3183   000A1C                     u2981:
  3184   000A1C  EF1A  F005         	goto	l3493
  3185   000A20                     u2980:
  3186   000A20  0E00               	movlw	0
  3187   000A22  6E43               	movwf	___flmul@prod^0,c
  3188   000A24  0E00               	movlw	0
  3189   000A26  6E44               	movwf	(___flmul@prod+1)^0,c
  3190   000A28  0E80               	movlw	128
  3191   000A2A  6E45               	movwf	(___flmul@prod+2)^0,c
  3192   000A2C  0E7F               	movlw	127
  3193   000A2E  6E46               	movwf	(___flmul@prod+3)^0,c
  3194   000A30  EF48  F005         	goto	l3505
  3195   000A34                     l3493:
  3196   000A34  BE48               	btfsc	(___flmul@temp+1)^0,7,c
  3197   000A36  EF27  F005         	goto	u2990
  3198   000A3A  5048               	movf	(___flmul@temp+1)^0,w,c
  3199   000A3C  E106               	bnz	u2991
  3200   000A3E  0447               	decf	___flmul@temp^0,w,c
  3201   000A40  B0D8               	btfsc	status,0,c
  3202   000A42  EF25  F005         	goto	u2991
  3203   000A46  EF27  F005         	goto	u2990
  3204   000A4A                     u2991:
  3205   000A4A  EF33  F005         	goto	l1319
  3206   000A4E                     u2990:
  3207   000A4E  0E00               	movlw	0
  3208   000A50  6E43               	movwf	___flmul@prod^0,c
  3209   000A52  0E00               	movlw	0
  3210   000A54  6E44               	movwf	(___flmul@prod+1)^0,c
  3211   000A56  0E00               	movlw	0
  3212   000A58  6E45               	movwf	(___flmul@prod+2)^0,c
  3213   000A5A  0E00               	movlw	0
  3214   000A5C  6E46               	movwf	(___flmul@prod+3)^0,c
  3215   000A5E  0E00               	movlw	0
  3216   000A60  6E3C               	movwf	___flmul@sign^0,c
  3217   000A62  EF48  F005         	goto	l3505
  3218   000A66                     l1319:
  3219   000A66  C047  F042         	movff	___flmul@temp,___flmul@bexp
  3220   000A6A  0EFF               	movlw	255
  3221   000A6C  1643               	andwf	___flmul@prod^0,f,c
  3222   000A6E  0EFF               	movlw	255
  3223   000A70  1644               	andwf	(___flmul@prod+1)^0,f,c
  3224   000A72  0E7F               	movlw	127
  3225   000A74  1645               	andwf	(___flmul@prod+2)^0,f,c
  3226   000A76  0E00               	movlw	0
  3227   000A78  1646               	andwf	(___flmul@prod+3)^0,f,c
  3228   000A7A  A042               	btfss	___flmul@bexp^0,0,c
  3229   000A7C  EF42  F005         	goto	u3001
  3230   000A80  EF44  F005         	goto	u3000
  3231   000A84                     u3001:
  3232   000A84  EF45  F005         	goto	l3503
  3233   000A88                     u3000:
  3234   000A88  8E45               	bsf	(___flmul@prod+2)^0,7,c
  3235   000A8A                     l3503:
  3236   000A8A  90D8               	bcf	status,0,c
  3237   000A8C  3042               	rrcf	___flmul@bexp^0,w,c
  3238   000A8E  6E46               	movwf	(___flmul@prod+3)^0,c
  3239   000A90                     l3505:
  3240   000A90  503C               	movf	___flmul@sign^0,w,c
  3241   000A92  1246               	iorwf	(___flmul@prod+3)^0,f,c
  3242   000A94  C043  F030         	movff	___flmul@prod,?___flmul
  3243   000A98  C044  F031         	movff	___flmul@prod+1,?___flmul+1
  3244   000A9C  C045  F032         	movff	___flmul@prod+2,?___flmul+2
  3245   000AA0  C046  F033         	movff	___flmul@prod+3,?___flmul+3
  3246   000AA4                     l1306:
  3247   000AA4  0012               	return		;funcret
  3248   000AA6                     __end_of___flmul:
  3249                           	callstack 0
  3250                           
  3251 ;; *************** function ___fldiv *****************
  3252 ;; Defined at:
  3253 ;;		line 11 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\sprcdiv.c"
  3254 ;; Parameters:    Size  Location     Type
  3255 ;;  b               4   22[COMRAM] unsigned char 
  3256 ;;  a               4   26[COMRAM] unsigned char 
  3257 ;; Auto vars:     Size  Location     Type
  3258 ;;  grs             4   41[COMRAM] unsigned long 
  3259 ;;  rem             4   34[COMRAM] unsigned long 
  3260 ;;  new_exp         2   39[COMRAM] short 
  3261 ;;  aexp            1   46[COMRAM] unsigned char 
  3262 ;;  bexp            1   45[COMRAM] unsigned char 
  3263 ;;  sign            1   38[COMRAM] unsigned char 
  3264 ;; Return value:  Size  Location     Type
  3265 ;;                  4   22[COMRAM] unsigned char 
  3266 ;; Registers used:
  3267 ;;		wreg, status,2, status,0
  3268 ;; Tracked objects:
  3269 ;;		On entry : 0/0
  3270 ;;		On exit  : 0/0
  3271 ;;		Unchanged: 0/0
  3272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3273 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3274 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3275 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3276 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3277 ;;Total ram usage:       25 bytes
  3278 ;; Hardware stack levels used: 1
  3279 ;; Hardware stack levels required when called: 7
  3280 ;; This function calls:
  3281 ;;		Nothing
  3282 ;; This function is called by:
  3283 ;;		_detect_color
  3284 ;; This function uses a non-reentrant model
  3285 ;;
  3286                           
  3287                           	psect	text6
  3288   000AA6                     __ptext6:
  3289                           	callstack 0
  3290   000AA6                     ___fldiv:
  3291                           	callstack 22
  3292   000AA6  501A               	movf	(___fldiv@b+3)^0,w,c
  3293   000AA8  0B80               	andlw	128
  3294   000AAA  6E27               	movwf	___fldiv@sign^0,c
  3295   000AAC  501A               	movf	(___fldiv@b+3)^0,w,c
  3296   000AAE  241A               	addwf	(___fldiv@b+3)^0,w,c
  3297   000AB0  6E2E               	movwf	___fldiv@bexp^0,c
  3298   000AB2  AE19               	btfss	(___fldiv@b+2)^0,7,c
  3299   000AB4  EF5E  F005         	goto	u2591
  3300   000AB8  EF60  F005         	goto	u2590
  3301   000ABC                     u2591:
  3302   000ABC  EF61  F005         	goto	l3249
  3303   000AC0                     u2590:
  3304   000AC0  802E               	bsf	___fldiv@bexp^0,0,c
  3305   000AC2                     l3249:
  3306   000AC2  502E               	movf	___fldiv@bexp^0,w,c
  3307   000AC4  B4D8               	btfsc	status,2,c
  3308   000AC6  EF67  F005         	goto	u2601
  3309   000ACA  EF69  F005         	goto	u2600
  3310   000ACE                     u2601:
  3311   000ACE  EF7E  F005         	goto	l3259
  3312   000AD2                     u2600:
  3313   000AD2  282E               	incf	___fldiv@bexp^0,w,c
  3314   000AD4  A4D8               	btfss	status,2,c
  3315   000AD6  EF6F  F005         	goto	u2611
  3316   000ADA  EF71  F005         	goto	u2610
  3317   000ADE                     u2611:
  3318   000ADE  EF79  F005         	goto	l3255
  3319   000AE2                     u2610:
  3320   000AE2  0E00               	movlw	0
  3321   000AE4  6E17               	movwf	___fldiv@b^0,c
  3322   000AE6  0E00               	movlw	0
  3323   000AE8  6E18               	movwf	(___fldiv@b+1)^0,c
  3324   000AEA  0E00               	movlw	0
  3325   000AEC  6E19               	movwf	(___fldiv@b+2)^0,c
  3326   000AEE  0E00               	movlw	0
  3327   000AF0  6E1A               	movwf	(___fldiv@b+3)^0,c
  3328   000AF2                     l3255:
  3329   000AF2  8E19               	bsf	(___fldiv@b+2)^0,7,c
  3330   000AF4  0E00               	movlw	0
  3331   000AF6  6E1A               	movwf	(___fldiv@b+3)^0,c
  3332   000AF8  EF86  F005         	goto	l3261
  3333   000AFC                     l3259:
  3334   000AFC  0E00               	movlw	0
  3335   000AFE  6E17               	movwf	___fldiv@b^0,c
  3336   000B00  0E00               	movlw	0
  3337   000B02  6E18               	movwf	(___fldiv@b+1)^0,c
  3338   000B04  0E00               	movlw	0
  3339   000B06  6E19               	movwf	(___fldiv@b+2)^0,c
  3340   000B08  0E00               	movlw	0
  3341   000B0A  6E1A               	movwf	(___fldiv@b+3)^0,c
  3342   000B0C                     l3261:
  3343   000B0C  501E               	movf	(___fldiv@a+3)^0,w,c
  3344   000B0E  0B80               	andlw	128
  3345   000B10  1A27               	xorwf	___fldiv@sign^0,f,c
  3346   000B12  501E               	movf	(___fldiv@a+3)^0,w,c
  3347   000B14  241E               	addwf	(___fldiv@a+3)^0,w,c
  3348   000B16  6E2F               	movwf	___fldiv@aexp^0,c
  3349   000B18  AE1D               	btfss	(___fldiv@a+2)^0,7,c
  3350   000B1A  EF91  F005         	goto	u2621
  3351   000B1E  EF93  F005         	goto	u2620
  3352   000B22                     u2621:
  3353   000B22  EF94  F005         	goto	l3269
  3354   000B26                     u2620:
  3355   000B26  802F               	bsf	___fldiv@aexp^0,0,c
  3356   000B28                     l3269:
  3357   000B28  502F               	movf	___fldiv@aexp^0,w,c
  3358   000B2A  B4D8               	btfsc	status,2,c
  3359   000B2C  EF9A  F005         	goto	u2631
  3360   000B30  EF9C  F005         	goto	u2630
  3361   000B34                     u2631:
  3362   000B34  EFB1  F005         	goto	l3279
  3363   000B38                     u2630:
  3364   000B38  282F               	incf	___fldiv@aexp^0,w,c
  3365   000B3A  A4D8               	btfss	status,2,c
  3366   000B3C  EFA2  F005         	goto	u2641
  3367   000B40  EFA4  F005         	goto	u2640
  3368   000B44                     u2641:
  3369   000B44  EFAC  F005         	goto	l3275
  3370   000B48                     u2640:
  3371   000B48  0E00               	movlw	0
  3372   000B4A  6E1B               	movwf	___fldiv@a^0,c
  3373   000B4C  0E00               	movlw	0
  3374   000B4E  6E1C               	movwf	(___fldiv@a+1)^0,c
  3375   000B50  0E00               	movlw	0
  3376   000B52  6E1D               	movwf	(___fldiv@a+2)^0,c
  3377   000B54  0E00               	movlw	0
  3378   000B56  6E1E               	movwf	(___fldiv@a+3)^0,c
  3379   000B58                     l3275:
  3380   000B58  8E1D               	bsf	(___fldiv@a+2)^0,7,c
  3381   000B5A  0E00               	movlw	0
  3382   000B5C  6E1E               	movwf	(___fldiv@a+3)^0,c
  3383   000B5E  EFB9  F005         	goto	l3281
  3384   000B62                     l3279:
  3385   000B62  0E00               	movlw	0
  3386   000B64  6E1B               	movwf	___fldiv@a^0,c
  3387   000B66  0E00               	movlw	0
  3388   000B68  6E1C               	movwf	(___fldiv@a+1)^0,c
  3389   000B6A  0E00               	movlw	0
  3390   000B6C  6E1D               	movwf	(___fldiv@a+2)^0,c
  3391   000B6E  0E00               	movlw	0
  3392   000B70  6E1E               	movwf	(___fldiv@a+3)^0,c
  3393   000B72                     l3281:
  3394   000B72  501B               	movf	___fldiv@a^0,w,c
  3395   000B74  101C               	iorwf	(___fldiv@a+1)^0,w,c
  3396   000B76  101D               	iorwf	(___fldiv@a+2)^0,w,c
  3397   000B78  101E               	iorwf	(___fldiv@a+3)^0,w,c
  3398   000B7A  A4D8               	btfss	status,2,c
  3399   000B7C  EFC2  F005         	goto	u2651
  3400   000B80  EFC4  F005         	goto	u2650
  3401   000B84                     u2651:
  3402   000B84  EFDC  F005         	goto	l3293
  3403   000B88                     u2650:
  3404   000B88  0E00               	movlw	0
  3405   000B8A  6E17               	movwf	___fldiv@b^0,c
  3406   000B8C  0E00               	movlw	0
  3407   000B8E  6E18               	movwf	(___fldiv@b+1)^0,c
  3408   000B90  0E00               	movlw	0
  3409   000B92  6E19               	movwf	(___fldiv@b+2)^0,c
  3410   000B94  0E00               	movlw	0
  3411   000B96  6E1A               	movwf	(___fldiv@b+3)^0,c
  3412   000B98  0E80               	movlw	128
  3413   000B9A  1219               	iorwf	(___fldiv@b+2)^0,f,c
  3414   000B9C  0E7F               	movlw	127
  3415   000B9E  121A               	iorwf	(___fldiv@b+3)^0,f,c
  3416   000BA0                     l3287:
  3417   000BA0  5027               	movf	___fldiv@sign^0,w,c
  3418   000BA2  121A               	iorwf	(___fldiv@b+3)^0,f,c
  3419   000BA4  C017  F017         	movff	___fldiv@b,?___fldiv
  3420   000BA8  C018  F018         	movff	___fldiv@b+1,?___fldiv+1
  3421   000BAC  C019  F019         	movff	___fldiv@b+2,?___fldiv+2
  3422   000BB0  C01A  F01A         	movff	___fldiv@b+3,?___fldiv+3
  3423   000BB4  EF1F  F007         	goto	l1270
  3424   000BB8                     l3293:
  3425   000BB8  502E               	movf	___fldiv@bexp^0,w,c
  3426   000BBA  A4D8               	btfss	status,2,c
  3427   000BBC  EFE2  F005         	goto	u2661
  3428   000BC0  EFE4  F005         	goto	u2660
  3429   000BC4                     u2661:
  3430   000BC4  EFEE  F005         	goto	l3301
  3431   000BC8                     u2660:
  3432   000BC8  0E00               	movlw	0
  3433   000BCA  6E17               	movwf	?___fldiv^0,c
  3434   000BCC  0E00               	movlw	0
  3435   000BCE  6E18               	movwf	(?___fldiv+1)^0,c
  3436   000BD0  0E00               	movlw	0
  3437   000BD2  6E19               	movwf	(?___fldiv+2)^0,c
  3438   000BD4  0E00               	movlw	0
  3439   000BD6  6E1A               	movwf	(?___fldiv+3)^0,c
  3440   000BD8  EF1F  F007         	goto	l1270
  3441   000BDC                     l3301:
  3442   000BDC  502F               	movf	___fldiv@aexp^0,w,c
  3443   000BDE  C02E  F01F         	movff	___fldiv@bexp,??___fldiv
  3444   000BE2  6A20               	clrf	(??___fldiv+1)^0,c
  3445   000BE4  5E1F               	subwf	??___fldiv^0,f,c
  3446   000BE6  0E00               	movlw	0
  3447   000BE8  5A20               	subwfb	(??___fldiv+1)^0,f,c
  3448   000BEA  0E7F               	movlw	127
  3449   000BEC  241F               	addwf	??___fldiv^0,w,c
  3450   000BEE  6E28               	movwf	___fldiv@new_exp^0,c
  3451   000BF0  0E00               	movlw	0
  3452   000BF2  2020               	addwfc	(??___fldiv+1)^0,w,c
  3453   000BF4  6E29               	movwf	(___fldiv@new_exp+1)^0,c
  3454   000BF6  C017  F023         	movff	___fldiv@b,___fldiv@rem
  3455   000BFA  C018  F024         	movff	___fldiv@b+1,___fldiv@rem+1
  3456   000BFE  C019  F025         	movff	___fldiv@b+2,___fldiv@rem+2
  3457   000C02  C01A  F026         	movff	___fldiv@b+3,___fldiv@rem+3
  3458   000C06  0E00               	movlw	0
  3459   000C08  6E17               	movwf	___fldiv@b^0,c
  3460   000C0A  0E00               	movlw	0
  3461   000C0C  6E18               	movwf	(___fldiv@b+1)^0,c
  3462   000C0E  0E00               	movlw	0
  3463   000C10  6E19               	movwf	(___fldiv@b+2)^0,c
  3464   000C12  0E00               	movlw	0
  3465   000C14  6E1A               	movwf	(___fldiv@b+3)^0,c
  3466   000C16  0E00               	movlw	0
  3467   000C18  6E2A               	movwf	___fldiv@grs^0,c
  3468   000C1A  0E00               	movlw	0
  3469   000C1C  6E2B               	movwf	(___fldiv@grs+1)^0,c
  3470   000C1E  0E00               	movlw	0
  3471   000C20  6E2C               	movwf	(___fldiv@grs+2)^0,c
  3472   000C22  0E00               	movlw	0
  3473   000C24  6E2D               	movwf	(___fldiv@grs+3)^0,c
  3474   000C26  0E00               	movlw	0
  3475   000C28  6E2F               	movwf	___fldiv@aexp^0,c
  3476   000C2A  EF4F  F006         	goto	l1272
  3477   000C2E                     l3311:
  3478   000C2E  502F               	movf	___fldiv@aexp^0,w,c
  3479   000C30  B4D8               	btfsc	status,2,c
  3480   000C32  EF1D  F006         	goto	u2671
  3481   000C36  EF1F  F006         	goto	u2670
  3482   000C3A                     u2671:
  3483   000C3A  EF36  F006         	goto	l3319
  3484   000C3E                     u2670:
  3485   000C3E  90D8               	bcf	status,0,c
  3486   000C40  3623               	rlcf	___fldiv@rem^0,f,c
  3487   000C42  3624               	rlcf	(___fldiv@rem+1)^0,f,c
  3488   000C44  3625               	rlcf	(___fldiv@rem+2)^0,f,c
  3489   000C46  3626               	rlcf	(___fldiv@rem+3)^0,f,c
  3490   000C48  90D8               	bcf	status,0,c
  3491   000C4A  3617               	rlcf	___fldiv@b^0,f,c
  3492   000C4C  3618               	rlcf	(___fldiv@b+1)^0,f,c
  3493   000C4E  3619               	rlcf	(___fldiv@b+2)^0,f,c
  3494   000C50  361A               	rlcf	(___fldiv@b+3)^0,f,c
  3495   000C52  AE2D               	btfss	(___fldiv@grs+3)^0,7,c
  3496   000C54  EF2E  F006         	goto	u2681
  3497   000C58  EF30  F006         	goto	u2680
  3498   000C5C                     u2681:
  3499   000C5C  EF31  F006         	goto	l1275
  3500   000C60                     u2680:
  3501   000C60  8017               	bsf	___fldiv@b^0,0,c
  3502   000C62                     l1275:
  3503   000C62  90D8               	bcf	status,0,c
  3504   000C64  362A               	rlcf	___fldiv@grs^0,f,c
  3505   000C66  362B               	rlcf	(___fldiv@grs+1)^0,f,c
  3506   000C68  362C               	rlcf	(___fldiv@grs+2)^0,f,c
  3507   000C6A  362D               	rlcf	(___fldiv@grs+3)^0,f,c
  3508   000C6C                     l3319:
  3509   000C6C  501B               	movf	___fldiv@a^0,w,c
  3510   000C6E  5C23               	subwf	___fldiv@rem^0,w,c
  3511   000C70  501C               	movf	(___fldiv@a+1)^0,w,c
  3512   000C72  5824               	subwfb	(___fldiv@rem+1)^0,w,c
  3513   000C74  501D               	movf	(___fldiv@a+2)^0,w,c
  3514   000C76  5825               	subwfb	(___fldiv@rem+2)^0,w,c
  3515   000C78  501E               	movf	(___fldiv@a+3)^0,w,c
  3516   000C7A  5826               	subwfb	(___fldiv@rem+3)^0,w,c
  3517   000C7C  A0D8               	btfss	status,0,c
  3518   000C7E  EF43  F006         	goto	u2691
  3519   000C82  EF45  F006         	goto	u2690
  3520   000C86                     u2691:
  3521   000C86  EF4E  F006         	goto	l3325
  3522   000C8A                     u2690:
  3523   000C8A  8C2D               	bsf	(___fldiv@grs+3)^0,6,c
  3524   000C8C  501B               	movf	___fldiv@a^0,w,c
  3525   000C8E  5E23               	subwf	___fldiv@rem^0,f,c
  3526   000C90  501C               	movf	(___fldiv@a+1)^0,w,c
  3527   000C92  5A24               	subwfb	(___fldiv@rem+1)^0,f,c
  3528   000C94  501D               	movf	(___fldiv@a+2)^0,w,c
  3529   000C96  5A25               	subwfb	(___fldiv@rem+2)^0,f,c
  3530   000C98  501E               	movf	(___fldiv@a+3)^0,w,c
  3531   000C9A  5A26               	subwfb	(___fldiv@rem+3)^0,f,c
  3532   000C9C                     l3325:
  3533   000C9C  2A2F               	incf	___fldiv@aexp^0,f,c
  3534   000C9E                     l1272:
  3535   000C9E  0E19               	movlw	25
  3536   000CA0  642F               	cpfsgt	___fldiv@aexp^0,c
  3537   000CA2  EF55  F006         	goto	u2701
  3538   000CA6  EF57  F006         	goto	u2700
  3539   000CAA                     u2701:
  3540   000CAA  EF17  F006         	goto	l3311
  3541   000CAE                     u2700:
  3542   000CAE  5023               	movf	___fldiv@rem^0,w,c
  3543   000CB0  1024               	iorwf	(___fldiv@rem+1)^0,w,c
  3544   000CB2  1025               	iorwf	(___fldiv@rem+2)^0,w,c
  3545   000CB4  1026               	iorwf	(___fldiv@rem+3)^0,w,c
  3546   000CB6  B4D8               	btfsc	status,2,c
  3547   000CB8  EF60  F006         	goto	u2711
  3548   000CBC  EF62  F006         	goto	u2710
  3549   000CC0                     u2711:
  3550   000CC0  EF7A  F006         	goto	l3337
  3551   000CC4                     u2710:
  3552   000CC4  802A               	bsf	___fldiv@grs^0,0,c
  3553   000CC6  EF7A  F006         	goto	l3337
  3554   000CCA                     l3331:
  3555   000CCA  90D8               	bcf	status,0,c
  3556   000CCC  3617               	rlcf	___fldiv@b^0,f,c
  3557   000CCE  3618               	rlcf	(___fldiv@b+1)^0,f,c
  3558   000CD0  3619               	rlcf	(___fldiv@b+2)^0,f,c
  3559   000CD2  361A               	rlcf	(___fldiv@b+3)^0,f,c
  3560   000CD4  AE2D               	btfss	(___fldiv@grs+3)^0,7,c
  3561   000CD6  EF6F  F006         	goto	u2721
  3562   000CDA  EF71  F006         	goto	u2720
  3563   000CDE                     u2721:
  3564   000CDE  EF72  F006         	goto	l1281
  3565   000CE2                     u2720:
  3566   000CE2  8017               	bsf	___fldiv@b^0,0,c
  3567   000CE4                     l1281:
  3568   000CE4  90D8               	bcf	status,0,c
  3569   000CE6  362A               	rlcf	___fldiv@grs^0,f,c
  3570   000CE8  362B               	rlcf	(___fldiv@grs+1)^0,f,c
  3571   000CEA  362C               	rlcf	(___fldiv@grs+2)^0,f,c
  3572   000CEC  362D               	rlcf	(___fldiv@grs+3)^0,f,c
  3573   000CEE  0628               	decf	___fldiv@new_exp^0,f,c
  3574   000CF0  A0D8               	btfss	status,0,c
  3575   000CF2  0629               	decf	(___fldiv@new_exp+1)^0,f,c
  3576   000CF4                     l3337:
  3577   000CF4  AE19               	btfss	(___fldiv@b+2)^0,7,c
  3578   000CF6  EF7F  F006         	goto	u2731
  3579   000CFA  EF81  F006         	goto	u2730
  3580   000CFE                     u2731:
  3581   000CFE  EF65  F006         	goto	l3331
  3582   000D02                     u2730:
  3583   000D02  0E00               	movlw	0
  3584   000D04  6E2F               	movwf	___fldiv@aexp^0,c
  3585   000D06  AE2D               	btfss	(___fldiv@grs+3)^0,7,c
  3586   000D08  EF88  F006         	goto	u2741
  3587   000D0C  EF8A  F006         	goto	u2740
  3588   000D10                     u2741:
  3589   000D10  EFAE  F006         	goto	l1283
  3590   000D14                     u2740:
  3591   000D14  0EFF               	movlw	255
  3592   000D16  142A               	andwf	___fldiv@grs^0,w,c
  3593   000D18  6E1F               	movwf	??___fldiv^0,c
  3594   000D1A  0EFF               	movlw	255
  3595   000D1C  142B               	andwf	(___fldiv@grs+1)^0,w,c
  3596   000D1E  6E20               	movwf	(??___fldiv+1)^0,c
  3597   000D20  0EFF               	movlw	255
  3598   000D22  142C               	andwf	(___fldiv@grs+2)^0,w,c
  3599   000D24  6E21               	movwf	(??___fldiv+2)^0,c
  3600   000D26  0E7F               	movlw	127
  3601   000D28  142D               	andwf	(___fldiv@grs+3)^0,w,c
  3602   000D2A  6E22               	movwf	(??___fldiv+3)^0,c
  3603   000D2C  501F               	movf	??___fldiv^0,w,c
  3604   000D2E  1020               	iorwf	(??___fldiv+1)^0,w,c
  3605   000D30  1021               	iorwf	(??___fldiv+2)^0,w,c
  3606   000D32  1022               	iorwf	(??___fldiv+3)^0,w,c
  3607   000D34  B4D8               	btfsc	status,2,c
  3608   000D36  EF9F  F006         	goto	u2751
  3609   000D3A  EFA1  F006         	goto	u2750
  3610   000D3E                     u2751:
  3611   000D3E  EFA5  F006         	goto	l1284
  3612   000D42                     u2750:
  3613   000D42                     l3345:
  3614   000D42  0E01               	movlw	1
  3615   000D44  6E2F               	movwf	___fldiv@aexp^0,c
  3616   000D46  EFAE  F006         	goto	l1283
  3617   000D4A                     l1284:
  3618   000D4A  A017               	btfss	___fldiv@b^0,0,c
  3619   000D4C  EFAA  F006         	goto	u2761
  3620   000D50  EFAC  F006         	goto	u2760
  3621   000D54                     u2761:
  3622   000D54  EFAE  F006         	goto	l1283
  3623   000D58                     u2760:
  3624   000D58  EFA1  F006         	goto	l3345
  3625   000D5C                     l1283:
  3626   000D5C  502F               	movf	___fldiv@aexp^0,w,c
  3627   000D5E  B4D8               	btfsc	status,2,c
  3628   000D60  EFB4  F006         	goto	u2771
  3629   000D64  EFB6  F006         	goto	u2770
  3630   000D68                     u2771:
  3631   000D68  EFDA  F006         	goto	l3357
  3632   000D6C                     u2770:
  3633   000D6C  0E01               	movlw	1
  3634   000D6E  2617               	addwf	___fldiv@b^0,f,c
  3635   000D70  0E00               	movlw	0
  3636   000D72  2218               	addwfc	(___fldiv@b+1)^0,f,c
  3637   000D74  2219               	addwfc	(___fldiv@b+2)^0,f,c
  3638   000D76  221A               	addwfc	(___fldiv@b+3)^0,f,c
  3639   000D78  A01A               	btfss	(___fldiv@b+3)^0,0,c
  3640   000D7A  EFC1  F006         	goto	u2781
  3641   000D7E  EFC3  F006         	goto	u2780
  3642   000D82                     u2781:
  3643   000D82  EFDA  F006         	goto	l3357
  3644   000D86                     u2780:
  3645   000D86  C017  F01F         	movff	___fldiv@b,??___fldiv
  3646   000D8A  C018  F020         	movff	___fldiv@b+1,??___fldiv+1
  3647   000D8E  C019  F021         	movff	___fldiv@b+2,??___fldiv+2
  3648   000D92  C01A  F022         	movff	___fldiv@b+3,??___fldiv+3
  3649   000D96  3422               	rlcf	(??___fldiv+3)^0,w,c
  3650   000D98  3222               	rrcf	(??___fldiv+3)^0,f,c
  3651   000D9A  3221               	rrcf	(??___fldiv+2)^0,f,c
  3652   000D9C  3220               	rrcf	(??___fldiv+1)^0,f,c
  3653   000D9E  321F               	rrcf	??___fldiv^0,f,c
  3654   000DA0  C01F  F017         	movff	??___fldiv,___fldiv@b
  3655   000DA4  C020  F018         	movff	??___fldiv+1,___fldiv@b+1
  3656   000DA8  C021  F019         	movff	??___fldiv+2,___fldiv@b+2
  3657   000DAC  C022  F01A         	movff	??___fldiv+3,___fldiv@b+3
  3658   000DB0  4A28               	infsnz	___fldiv@new_exp^0,f,c
  3659   000DB2  2A29               	incf	(___fldiv@new_exp+1)^0,f,c
  3660   000DB4                     l3357:
  3661   000DB4  BE29               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3662   000DB6  EFE5  F006         	goto	u2791
  3663   000DBA  5029               	movf	(___fldiv@new_exp+1)^0,w,c
  3664   000DBC  E108               	bnz	u2790
  3665   000DBE  2828               	incf	___fldiv@new_exp^0,w,c
  3666   000DC0  A0D8               	btfss	status,0,c
  3667   000DC2  EFE5  F006         	goto	u2791
  3668   000DC6  EFE7  F006         	goto	u2790
  3669   000DCA                     u2791:
  3670   000DCA  EFF2  F006         	goto	l3361
  3671   000DCE                     u2790:
  3672   000DCE  0E00               	movlw	0
  3673   000DD0  6E29               	movwf	(___fldiv@new_exp+1)^0,c
  3674   000DD2  6828               	setf	___fldiv@new_exp^0,c
  3675   000DD4  0E00               	movlw	0
  3676   000DD6  6E17               	movwf	___fldiv@b^0,c
  3677   000DD8  0E00               	movlw	0
  3678   000DDA  6E18               	movwf	(___fldiv@b+1)^0,c
  3679   000DDC  0E00               	movlw	0
  3680   000DDE  6E19               	movwf	(___fldiv@b+2)^0,c
  3681   000DE0  0E00               	movlw	0
  3682   000DE2  6E1A               	movwf	(___fldiv@b+3)^0,c
  3683   000DE4                     l3361:
  3684   000DE4  BE29               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3685   000DE6  EFFF  F006         	goto	u2800
  3686   000DEA  5029               	movf	(___fldiv@new_exp+1)^0,w,c
  3687   000DEC  E106               	bnz	u2801
  3688   000DEE  0428               	decf	___fldiv@new_exp^0,w,c
  3689   000DF0  B0D8               	btfsc	status,0,c
  3690   000DF2  EFFD  F006         	goto	u2801
  3691   000DF6  EFFF  F006         	goto	u2800
  3692   000DFA                     u2801:
  3693   000DFA  EF0D  F007         	goto	l3365
  3694   000DFE                     u2800:
  3695   000DFE  0E00               	movlw	0
  3696   000E00  6E29               	movwf	(___fldiv@new_exp+1)^0,c
  3697   000E02  0E00               	movlw	0
  3698   000E04  6E28               	movwf	___fldiv@new_exp^0,c
  3699   000E06  0E00               	movlw	0
  3700   000E08  6E17               	movwf	___fldiv@b^0,c
  3701   000E0A  0E00               	movlw	0
  3702   000E0C  6E18               	movwf	(___fldiv@b+1)^0,c
  3703   000E0E  0E00               	movlw	0
  3704   000E10  6E19               	movwf	(___fldiv@b+2)^0,c
  3705   000E12  0E00               	movlw	0
  3706   000E14  6E1A               	movwf	(___fldiv@b+3)^0,c
  3707   000E16  0E00               	movlw	0
  3708   000E18  6E27               	movwf	___fldiv@sign^0,c
  3709   000E1A                     l3365:
  3710   000E1A  C028  F02E         	movff	___fldiv@new_exp,___fldiv@bexp
  3711   000E1E  A02E               	btfss	___fldiv@bexp^0,0,c
  3712   000E20  EF14  F007         	goto	u2811
  3713   000E24  EF16  F007         	goto	u2810
  3714   000E28                     u2811:
  3715   000E28  EF19  F007         	goto	l3371
  3716   000E2C                     u2810:
  3717   000E2C  8E19               	bsf	(___fldiv@b+2)^0,7,c
  3718   000E2E  EF1A  F007         	goto	l3373
  3719   000E32                     l3371:
  3720   000E32  9E19               	bcf	(___fldiv@b+2)^0,7,c
  3721   000E34                     l3373:
  3722   000E34  90D8               	bcf	status,0,c
  3723   000E36  302E               	rrcf	___fldiv@bexp^0,w,c
  3724   000E38  6E1A               	movwf	(___fldiv@b+3)^0,c
  3725   000E3A  EFD0  F005         	goto	l3287
  3726   000E3E                     l1270:
  3727   000E3E  0012               	return		;funcret
  3728   000E40                     __end_of___fldiv:
  3729                           	callstack 0
  3730                           
  3731 ;; *************** function _color_click_init *****************
  3732 ;; Defined at:
  3733 ;;		line 6 in file "color.c"
  3734 ;; Parameters:    Size  Location     Type
  3735 ;;		None
  3736 ;; Auto vars:     Size  Location     Type
  3737 ;;		None
  3738 ;; Return value:  Size  Location     Type
  3739 ;;                  1    wreg      void 
  3740 ;; Registers used:
  3741 ;;		wreg, status,2, status,0, cstack
  3742 ;; Tracked objects:
  3743 ;;		On entry : 0/0
  3744 ;;		On exit  : 0/0
  3745 ;;		Unchanged: 0/0
  3746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3749 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3750 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3751 ;;Total ram usage:        1 bytes
  3752 ;; Hardware stack levels used: 1
  3753 ;; Hardware stack levels required when called: 10
  3754 ;; This function calls:
  3755 ;;		_I2C_2_Master_Init
  3756 ;;		_color_writetoaddr
  3757 ;; This function is called by:
  3758 ;;		_main
  3759 ;; This function uses a non-reentrant model
  3760 ;;
  3761                           
  3762                           	psect	text7
  3763   002748                     __ptext7:
  3764                           	callstack 0
  3765   002748                     _color_click_init:
  3766                           	callstack 20
  3767   002748                     
  3768                           ;color.c: 9:     I2C_2_Master_Init();
  3769   002748  ECD7  F013         	call	_I2C_2_Master_Init	;wreg free
  3770   00274C                     
  3771                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  3772   00274C  0E01               	movlw	1
  3773   00274E  6E0B               	movwf	color_writetoaddr@value^0,c
  3774   002750  0E00               	movlw	0
  3775   002752  EC5A  F014         	call	_color_writetoaddr
  3776   002756                     
  3777                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3778   002756  0E3F               	movlw	63
  3779   002758  6E0D               	movwf	??_color_click_init^0,c
  3780   00275A  0E55               	movlw	85
  3781   00275C                     u4497:
  3782   00275C  2EE8               	decfsz	wreg,f,c
  3783   00275E  D7FE               	bra	u4497
  3784   002760  2E0D               	decfsz	??_color_click_init^0,f,c
  3785   002762  D7FC               	bra	u4497
  3786   002764  F000               	nop	
  3787   002766                     
  3788                           ;color.c: 16:  color_writetoaddr(0x00, 0x03);
  3789   002766  0E03               	movlw	3
  3790   002768  6E0B               	movwf	color_writetoaddr@value^0,c
  3791   00276A  0E00               	movlw	0
  3792   00276C  EC5A  F014         	call	_color_writetoaddr
  3793   002770                     
  3794                           ;color.c: 19:  color_writetoaddr(0x01, 0xD5);
  3795   002770  0ED5               	movlw	213
  3796   002772  6E0B               	movwf	color_writetoaddr@value^0,c
  3797   002774  0E01               	movlw	1
  3798   002776  EC5A  F014         	call	_color_writetoaddr
  3799   00277A  0012               	return		;funcret
  3800   00277C                     __end_of_color_click_init:
  3801                           	callstack 0
  3802                           
  3803 ;; *************** function _I2C_2_Master_Init *****************
  3804 ;; Defined at:
  3805 ;;		line 4 in file "i2c.c"
  3806 ;; Parameters:    Size  Location     Type
  3807 ;;		None
  3808 ;; Auto vars:     Size  Location     Type
  3809 ;;		None
  3810 ;; Return value:  Size  Location     Type
  3811 ;;                  1    wreg      void 
  3812 ;; Registers used:
  3813 ;;		wreg, status,2
  3814 ;; Tracked objects:
  3815 ;;		On entry : 0/0
  3816 ;;		On exit  : 0/0
  3817 ;;		Unchanged: 0/0
  3818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3823 ;;Total ram usage:        0 bytes
  3824 ;; Hardware stack levels used: 1
  3825 ;; Hardware stack levels required when called: 7
  3826 ;; This function calls:
  3827 ;;		Nothing
  3828 ;; This function is called by:
  3829 ;;		_color_click_init
  3830 ;; This function uses a non-reentrant model
  3831 ;;
  3832                           
  3833                           	psect	text8
  3834   0027AE                     __ptext8:
  3835                           	callstack 0
  3836   0027AE                     _I2C_2_Master_Init:
  3837                           	callstack 22
  3838   0027AE                     
  3839                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3840   0027AE  010E               	movlb	14	; () banked
  3841   0027B0  51D9               	movf	217,w,b	;volatile
  3842   0027B2  0BF0               	andlw	-16
  3843   0027B4  0908               	iorlw	8
  3844   0027B6  6FD9               	movwf	217,b	;volatile
  3845   0027B8                     
  3846                           ; BSR set to: 14
  3847                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3848   0027B8  8BD9               	bsf	217,5,b	;volatile
  3849                           
  3850                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3851   0027BA  0E9F               	movlw	159
  3852   0027BC  6FD6               	movwf	214,b	;volatile
  3853   0027BE                     
  3854                           ; BSR set to: 14
  3855                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3856   0027BE  8A84               	bsf	132,5,c	;volatile
  3857   0027C0                     
  3858                           ; BSR set to: 14
  3859                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3860   0027C0  8C84               	bsf	132,6,c	;volatile
  3861   0027C2                     
  3862                           ; BSR set to: 14
  3863                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3864   0027C2  9BA7               	bcf	167,5,b	;volatile
  3865   0027C4                     
  3866                           ; BSR set to: 14
  3867                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3868   0027C4  9DA7               	bcf	167,6,b	;volatile
  3869                           
  3870                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3871   0027C6  0E1D               	movlw	29
  3872   0027C8  6F1D               	movwf	29,b	;volatile
  3873                           
  3874                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3875   0027CA  0E1E               	movlw	30
  3876   0027CC  6F1C               	movwf	28,b	;volatile
  3877                           
  3878                           ;i2c.c: 18:   RD5PPS=0x1C;
  3879   0027CE  0E1C               	movlw	28
  3880   0027D0  6F6F               	movwf	111,b	;volatile
  3881                           
  3882                           ;i2c.c: 19:   RD6PPS=0x1B;
  3883   0027D2  0E1B               	movlw	27
  3884   0027D4  6F70               	movwf	112,b	;volatile
  3885   0027D6                     
  3886                           ; BSR set to: 14
  3887   0027D6  0012               	return		;funcret
  3888   0027D8                     __end_of_I2C_2_Master_Init:
  3889                           	callstack 0
  3890                           
  3891 ;; *************** function _WhiteLight *****************
  3892 ;; Defined at:
  3893 ;;		line 20 in file "LED_Buttons.c"
  3894 ;; Parameters:    Size  Location     Type
  3895 ;;		None
  3896 ;; Auto vars:     Size  Location     Type
  3897 ;;		None
  3898 ;; Return value:  Size  Location     Type
  3899 ;;                  1    wreg      void 
  3900 ;; Registers used:
  3901 ;;		None
  3902 ;; Tracked objects:
  3903 ;;		On entry : 0/0
  3904 ;;		On exit  : 0/0
  3905 ;;		Unchanged: 0/0
  3906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3911 ;;Total ram usage:        0 bytes
  3912 ;; Hardware stack levels used: 1
  3913 ;; Hardware stack levels required when called: 7
  3914 ;; This function calls:
  3915 ;;		Nothing
  3916 ;; This function is called by:
  3917 ;;		_main
  3918 ;; This function uses a non-reentrant model
  3919 ;;
  3920                           
  3921                           	psect	text9
  3922   0029C0                     __ptext9:
  3923                           	callstack 0
  3924   0029C0                     _WhiteLight:
  3925                           	callstack 23
  3926   0029C0                     
  3927                           ;LED_Buttons.c: 21:     LATGbits.LATG1 = 1;
  3928   0029C0  827F               	bsf	127,1,c	;volatile
  3929                           
  3930                           ;LED_Buttons.c: 22:     LATAbits.LATA4 = 1;
  3931   0029C2  8879               	bsf	121,4,c	;volatile
  3932                           
  3933                           ;LED_Buttons.c: 23:     LATFbits.LATF7 = 1;
  3934   0029C4  8E7E               	bsf	126,7,c	;volatile
  3935   0029C6  0012               	return		;funcret
  3936   0029C8                     __end_of_WhiteLight:
  3937                           	callstack 0
  3938                           
  3939 ;; *************** function _WhiteInstructions *****************
  3940 ;; Defined at:
  3941 ;;		line 157 in file "color_instructions.c"
  3942 ;; Parameters:    Size  Location     Type
  3943 ;;  mL              2   58[COMRAM] PTR struct DC_motor
  3944 ;;		 -> main@motorL(9), 
  3945 ;;  mR              2   60[COMRAM] PTR struct DC_motor
  3946 ;;		 -> main@motorR(9), 
  3947 ;; Auto vars:     Size  Location     Type
  3948 ;;  a               2   67[COMRAM] unsigned int 
  3949 ;;  c               2   64[COMRAM] unsigned int 
  3950 ;;  anticolor       1   66[COMRAM] unsigned char 
  3951 ;; Return value:  Size  Location     Type
  3952 ;;                  1    wreg      void 
  3953 ;; Registers used:
  3954 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3955 ;; Tracked objects:
  3956 ;;		On entry : 0/0
  3957 ;;		On exit  : 0/0
  3958 ;;		Unchanged: 0/0
  3959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3960 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3961 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3962 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3963 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3964 ;;Total ram usage:       11 bytes
  3965 ;; Hardware stack levels used: 1
  3966 ;; Hardware stack levels required when called: 14
  3967 ;; This function calls:
  3968 ;;		_BlueInstructions
  3969 ;;		_MoveBuggy
  3970 ;;		_Return_Anti_Moves
  3971 ;;		_Return_Time
  3972 ;;		_fullSpeedAhead
  3973 ;;		_stop
  3974 ;; This function is called by:
  3975 ;;		_main
  3976 ;; This function uses a non-reentrant model
  3977 ;;
  3978                           
  3979                           	psect	text10
  3980   001AE6                     __ptext10:
  3981                           	callstack 0
  3982   001AE6                     _WhiteInstructions:
  3983                           	callstack 16
  3984   001AE6                     
  3985                           ;color_instructions.c: 159:     BlueInstructions(mL,mR);
  3986   001AE6  C03B  F027         	movff	WhiteInstructions@mL,BlueInstructions@mL
  3987   001AEA  C03C  F028         	movff	WhiteInstructions@mL+1,BlueInstructions@mL+1
  3988   001AEE  C03D  F029         	movff	WhiteInstructions@mR,BlueInstructions@mR
  3989   001AF2  C03E  F02A         	movff	WhiteInstructions@mR+1,BlueInstructions@mR+1
  3990   001AF6  EC04  F00F         	call	_BlueInstructions	;wreg free
  3991                           
  3992                           ;color_instructions.c: 161:     while(time_index>0){
  3993   001AFA  EFDE  F00D         	goto	l3831
  3994   001AFE                     l3811:
  3995                           
  3996                           ; BSR set to: 0
  3997                           ;color_instructions.c: 163:         unsigned int a = 0;
  3998   001AFE  0E00               	movlw	0
  3999   001B00  6E45               	movwf	(WhiteInstructions@a+1)^0,c
  4000   001B02  0E00               	movlw	0
  4001   001B04  6E44               	movwf	WhiteInstructions@a^0,c
  4002   001B06                     
  4003                           ; BSR set to: 0
  4004                           ;color_instructions.c: 164:         unsigned int c = Return_Time(&time_index,time_array)
      +                          ;
  4005   001B06  0E9D               	movlw	low _time_index
  4006   001B08  6E09               	movwf	Return_Time@time_index^0,c
  4007   001B0A  0E00               	movlw	high _time_index
  4008   001B0C  6E0A               	movwf	(Return_Time@time_index+1)^0,c
  4009   001B0E  0E3C               	movlw	low _time_array
  4010   001B10  6E0B               	movwf	Return_Time@time_array^0,c
  4011   001B12  0E01               	movlw	high _time_array
  4012   001B14  6E0C               	movwf	(Return_Time@time_array+1)^0,c
  4013   001B16  EC88  F013         	call	_Return_Time	;wreg free
  4014   001B1A  C009  F041         	movff	?_Return_Time,WhiteInstructions@c
  4015   001B1E  C00A  F042         	movff	?_Return_Time+1,WhiteInstructions@c+1
  4016                           
  4017                           ;color_instructions.c: 165:         while(a<c){
  4018   001B22  EF9F  F00D         	goto	l3819
  4019   001B26                     l3815:
  4020                           
  4021                           ;color_instructions.c: 166:             fullSpeedAhead(mL,mR);
  4022   001B26  C03B  F01C         	movff	WhiteInstructions@mL,fullSpeedAhead@mL
  4023   001B2A  C03C  F01D         	movff	WhiteInstructions@mL+1,fullSpeedAhead@mL+1
  4024   001B2E  C03D  F01E         	movff	WhiteInstructions@mR,fullSpeedAhead@mR
  4025   001B32  C03E  F01F         	movff	WhiteInstructions@mR+1,fullSpeedAhead@mR+1
  4026   001B36  EC0E  F00C         	call	_fullSpeedAhead	;wreg free
  4027   001B3A                     
  4028                           ;color_instructions.c: 167:             a++;
  4029   001B3A  4A44               	infsnz	WhiteInstructions@a^0,f,c
  4030   001B3C  2A45               	incf	(WhiteInstructions@a+1)^0,f,c
  4031   001B3E                     l3819:
  4032                           
  4033                           ;color_instructions.c: 165:         while(a<c){
  4034   001B3E  5041               	movf	WhiteInstructions@c^0,w,c
  4035   001B40  5C44               	subwf	WhiteInstructions@a^0,w,c
  4036   001B42  5042               	movf	(WhiteInstructions@c+1)^0,w,c
  4037   001B44  5845               	subwfb	(WhiteInstructions@a+1)^0,w,c
  4038   001B46  A0D8               	btfss	status,0,c
  4039   001B48  EFA8  F00D         	goto	u3681
  4040   001B4C  EFAA  F00D         	goto	u3680
  4041   001B50                     u3681:
  4042   001B50  EF93  F00D         	goto	l3815
  4043   001B54                     u3680:
  4044   001B54  EFB9  F00D         	goto	l3825
  4045   001B58                     l3821:
  4046                           
  4047                           ;color_instructions.c: 171:             stop(mL,mR);
  4048   001B58  C03B  F01C         	movff	WhiteInstructions@mL,stop@mL
  4049   001B5C  C03C  F01D         	movff	WhiteInstructions@mL+1,stop@mL+1
  4050   001B60  C03D  F01E         	movff	WhiteInstructions@mR,stop@mR
  4051   001B64  C03E  F01F         	movff	WhiteInstructions@mR+1,stop@mR+1
  4052   001B68  ECE8  F00D         	call	_stop	;wreg free
  4053   001B6C                     
  4054                           ;color_instructions.c: 172:             a--;
  4055   001B6C  0644               	decf	WhiteInstructions@a^0,f,c
  4056   001B6E  A0D8               	btfss	status,0,c
  4057   001B70  0645               	decf	(WhiteInstructions@a+1)^0,f,c
  4058   001B72                     l3825:
  4059                           
  4060                           ;color_instructions.c: 170:         while(a>0){
  4061   001B72  5044               	movf	WhiteInstructions@a^0,w,c
  4062   001B74  1045               	iorwf	(WhiteInstructions@a+1)^0,w,c
  4063   001B76  A4D8               	btfss	status,2,c
  4064   001B78  EFC0  F00D         	goto	u3691
  4065   001B7C  EFC2  F00D         	goto	u3690
  4066   001B80                     u3691:
  4067   001B80  EFAC  F00D         	goto	l3821
  4068   001B84                     u3690:
  4069   001B84                     
  4070                           ;color_instructions.c: 175:         unsigned char anticolor = Return_Anti_Moves(&moves_i
      +                          ndex, anti_moves_array);
  4071   001B84  0E56               	movlw	low _moves_index
  4072   001B86  6E09               	movwf	Return_Anti_Moves@moves_index^0,c
  4073   001B88  0E00               	movlw	high _moves_index
  4074   001B8A  6E0A               	movwf	(Return_Anti_Moves@moves_index+1)^0,c
  4075   001B8C  0E75               	movlw	low _anti_moves_array
  4076   001B8E  6E0B               	movwf	Return_Anti_Moves@anti_moves_array^0,c
  4077   001B90  0E00               	movlw	high _anti_moves_array
  4078   001B92  6E0C               	movwf	(Return_Anti_Moves@anti_moves_array+1)^0,c
  4079   001B94  EC39  F014         	call	_Return_Anti_Moves	;wreg free
  4080   001B98  6E43               	movwf	WhiteInstructions@anticolor^0,c
  4081   001B9A                     
  4082                           ;color_instructions.c: 176:         MoveBuggy(anticolor,mL,mR);
  4083   001B9A  5043               	movf	WhiteInstructions@anticolor^0,w,c
  4084   001B9C  6E3F               	movwf	??_WhiteInstructions^0,c
  4085   001B9E  6A40               	clrf	(??_WhiteInstructions+1)^0,c
  4086   001BA0  C03F  F035         	movff	??_WhiteInstructions,MoveBuggy@color_detected
  4087   001BA4  C040  F036         	movff	??_WhiteInstructions+1,MoveBuggy@color_detected+1
  4088   001BA8  C03B  F037         	movff	WhiteInstructions@mL,MoveBuggy@mL
  4089   001BAC  C03C  F038         	movff	WhiteInstructions@mL+1,MoveBuggy@mL+1
  4090   001BB0  C03D  F039         	movff	WhiteInstructions@mR,MoveBuggy@mR
  4091   001BB4  C03E  F03A         	movff	WhiteInstructions@mR+1,MoveBuggy@mR+1
  4092   001BB8  EC20  F007         	call	_MoveBuggy	;wreg free
  4093   001BBC                     l3831:
  4094                           
  4095                           ;color_instructions.c: 161:     while(time_index>0){
  4096   001BBC  0100               	movlb	0	; () banked
  4097   001BBE  519D               	movf	_time_index& (0+255),w,b
  4098   001BC0  A4D8               	btfss	status,2,c
  4099   001BC2  EFE5  F00D         	goto	u3701
  4100   001BC6  EFE7  F00D         	goto	u3700
  4101   001BCA                     u3701:
  4102   001BCA  EF7F  F00D         	goto	l3811
  4103   001BCE                     u3700:
  4104   001BCE                     
  4105                           ; BSR set to: 0
  4106   001BCE  0012               	return		;funcret
  4107   001BD0                     __end_of_WhiteInstructions:
  4108                           	callstack 0
  4109                           
  4110 ;; *************** function _Return_Time *****************
  4111 ;; Defined at:
  4112 ;;		line 40 in file "Memorization.c"
  4113 ;; Parameters:    Size  Location     Type
  4114 ;;  time_index      2    8[COMRAM] PTR unsigned char 
  4115 ;;		 -> time_index(1), 
  4116 ;;  time_array      2   10[COMRAM] PTR unsigned int 
  4117 ;;		 -> time_array(80), 
  4118 ;; Auto vars:     Size  Location     Type
  4119 ;;  temp            2   15[COMRAM] unsigned int 
  4120 ;; Return value:  Size  Location     Type
  4121 ;;                  2    8[COMRAM] unsigned int 
  4122 ;; Registers used:
  4123 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4124 ;; Tracked objects:
  4125 ;;		On entry : 0/0
  4126 ;;		On exit  : 0/0
  4127 ;;		Unchanged: 0/0
  4128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4129 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4130 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4131 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4132 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4133 ;;Total ram usage:        9 bytes
  4134 ;; Hardware stack levels used: 1
  4135 ;; Hardware stack levels required when called: 7
  4136 ;; This function calls:
  4137 ;;		Nothing
  4138 ;; This function is called by:
  4139 ;;		_WhiteInstructions
  4140 ;; This function uses a non-reentrant model
  4141 ;;
  4142                           
  4143                           	psect	text11
  4144   002710                     __ptext11:
  4145                           	callstack 0
  4146   002710                     _Return_Time:
  4147                           	callstack 22
  4148   002710                     
  4149                           ;Memorization.c: 41:     unsigned int temp;;Memorization.c: 43:     temp = time_array[--
      +                          (*time_index)];
  4150   002710  C009  FFD9         	movff	Return_Time@time_index,fsr2l
  4151   002714  C00A  FFDA         	movff	Return_Time@time_index+1,fsr2h
  4152   002718  06DF               	decf	indf2,f,c
  4153   00271A  50DF               	movf	indf2,w,c
  4154   00271C  6E0D               	movwf	??_Return_Time^0,c
  4155   00271E  500D               	movf	??_Return_Time^0,w,c
  4156   002720  0D02               	mullw	2
  4157   002722  CFF3 F00E          	movff	prodl,??_Return_Time+1
  4158   002726  CFF4 F00F          	movff	prodh,??_Return_Time+2
  4159   00272A  500E               	movf	(??_Return_Time+1)^0,w,c
  4160   00272C  240B               	addwf	Return_Time@time_array^0,w,c
  4161   00272E  6ED9               	movwf	fsr2l,c
  4162   002730  500F               	movf	(??_Return_Time+2)^0,w,c
  4163   002732  200C               	addwfc	(Return_Time@time_array+1)^0,w,c
  4164   002734  6EDA               	movwf	fsr2h,c
  4165   002736  CFDE F010          	movff	postinc2,Return_Time@temp
  4166   00273A  CFDD F011          	movff	postdec2,Return_Time@temp+1
  4167   00273E                     
  4168                           ;Memorization.c: 44:     return temp;
  4169   00273E  C010  F009         	movff	Return_Time@temp,?_Return_Time
  4170   002742  C011  F00A         	movff	Return_Time@temp+1,?_Return_Time+1
  4171   002746  0012               	return		;funcret
  4172   002748                     __end_of_Return_Time:
  4173                           	callstack 0
  4174                           
  4175 ;; *************** function _Return_Anti_Moves *****************
  4176 ;; Defined at:
  4177 ;;		line 32 in file "Memorization.c"
  4178 ;; Parameters:    Size  Location     Type
  4179 ;;  moves_index     2    8[COMRAM] PTR unsigned char 
  4180 ;;		 -> moves_index(1), 
  4181 ;;  anti_moves_a    2   10[COMRAM] PTR unsigned char 
  4182 ;;		 -> anti_moves_array(40), 
  4183 ;; Auto vars:     Size  Location     Type
  4184 ;;  temp            1   13[COMRAM] unsigned char 
  4185 ;; Return value:  Size  Location     Type
  4186 ;;                  1    wreg      unsigned char 
  4187 ;; Registers used:
  4188 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4189 ;; Tracked objects:
  4190 ;;		On entry : 0/0
  4191 ;;		On exit  : 0/0
  4192 ;;		Unchanged: 0/0
  4193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4194 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4195 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4196 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4197 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4198 ;;Total ram usage:        6 bytes
  4199 ;; Hardware stack levels used: 1
  4200 ;; Hardware stack levels required when called: 7
  4201 ;; This function calls:
  4202 ;;		Nothing
  4203 ;; This function is called by:
  4204 ;;		_WhiteInstructions
  4205 ;; This function uses a non-reentrant model
  4206 ;;
  4207                           
  4208                           	psect	text12
  4209   002872                     __ptext12:
  4210                           	callstack 0
  4211   002872                     _Return_Anti_Moves:
  4212                           	callstack 22
  4213   002872                     
  4214                           ;Memorization.c: 33:     unsigned char temp;;Memorization.c: 35:     temp = anti_moves_a
      +                          rray[--(*moves_index)];
  4215   002872  C009  FFD9         	movff	Return_Anti_Moves@moves_index,fsr2l
  4216   002876  C00A  FFDA         	movff	Return_Anti_Moves@moves_index+1,fsr2h
  4217   00287A  06DF               	decf	indf2,f,c
  4218   00287C  50DF               	movf	indf2,w,c
  4219   00287E  6E0D               	movwf	??_Return_Anti_Moves^0,c
  4220   002880  500D               	movf	??_Return_Anti_Moves^0,w,c
  4221   002882  240B               	addwf	Return_Anti_Moves@anti_moves_array^0,w,c
  4222   002884  6ED9               	movwf	fsr2l,c
  4223   002886  0E00               	movlw	0
  4224   002888  200C               	addwfc	(Return_Anti_Moves@anti_moves_array+1)^0,w,c
  4225   00288A  6EDA               	movwf	fsr2h,c
  4226   00288C  50DF               	movf	indf2,w,c
  4227   00288E  6E0E               	movwf	Return_Anti_Moves@temp^0,c
  4228   002890                     
  4229                           ;Memorization.c: 36:     return temp;
  4230   002890  500E               	movf	Return_Anti_Moves@temp^0,w,c
  4231   002892  0012               	return		;funcret
  4232   002894                     __end_of_Return_Anti_Moves:
  4233                           	callstack 0
  4234                           
  4235 ;; *************** function _MoveBuggy *****************
  4236 ;; Defined at:
  4237 ;;		line 182 in file "color_instructions.c"
  4238 ;; Parameters:    Size  Location     Type
  4239 ;;  color_detect    2   52[COMRAM] PTR unsigned char 
  4240 ;;		 -> RAM(3561), 
  4241 ;;  mL              2   54[COMRAM] PTR struct DC_motor
  4242 ;;		 -> main@motorL(9), 
  4243 ;;  mR              2   56[COMRAM] PTR struct DC_motor
  4244 ;;		 -> main@motorR(9), 
  4245 ;; Auto vars:     Size  Location     Type
  4246 ;;		None
  4247 ;; Return value:  Size  Location     Type
  4248 ;;                  1    wreg      void 
  4249 ;; Registers used:
  4250 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4251 ;; Tracked objects:
  4252 ;;		On entry : 0/0
  4253 ;;		On exit  : 0/0
  4254 ;;		Unchanged: 0/0
  4255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4256 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4259 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4260 ;;Total ram usage:        6 bytes
  4261 ;; Hardware stack levels used: 1
  4262 ;; Hardware stack levels required when called: 13
  4263 ;; This function calls:
  4264 ;;		_AntiPink
  4265 ;;		_AntiYellow
  4266 ;;		_AppendMoves
  4267 ;;		_BlueInstructions
  4268 ;;		_GreenInstructions
  4269 ;;		_LightBlueInstructions
  4270 ;;		_OrangeInstructions
  4271 ;;		_PinkInstructions
  4272 ;;		_RedInstructions
  4273 ;;		_YellowInstructions
  4274 ;; This function is called by:
  4275 ;;		_main
  4276 ;;		_WhiteInstructions
  4277 ;; This function uses a non-reentrant model
  4278 ;;
  4279                           
  4280                           	psect	text13
  4281   000E40                     __ptext13:
  4282                           	callstack 0
  4283   000E40                     _MoveBuggy:
  4284                           	callstack 16
  4285   000E40                     
  4286                           ;color_instructions.c: 183:     if (color_detected==1){
  4287   000E40  0435               	decf	MoveBuggy@color_detected^0,w,c
  4288   000E42  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4289   000E44  A4D8               	btfss	status,2,c
  4290   000E46  EF27  F007         	goto	u2431
  4291   000E4A  EF29  F007         	goto	u2430
  4292   000E4E                     u2431:
  4293   000E4E  EF47  F007         	goto	l3175
  4294   000E52                     u2430:
  4295   000E52                     
  4296                           ;color_instructions.c: 184:         RedInstructions(mL, mR);
  4297   000E52  C037  F027         	movff	MoveBuggy@mL,RedInstructions@mL
  4298   000E56  C038  F028         	movff	MoveBuggy@mL+1,RedInstructions@mL+1
  4299   000E5A  C039  F029         	movff	MoveBuggy@mR,RedInstructions@mR
  4300   000E5E  C03A  F02A         	movff	MoveBuggy@mR+1,RedInstructions@mR+1
  4301   000E62  ECE8  F00F         	call	_RedInstructions	;wreg free
  4302   000E66                     
  4303                           ;color_instructions.c: 185:         if(LATDbits.LATD7 != 1){
  4304   000E66  BE7C               	btfsc	124,7,c	;volatile
  4305   000E68  EF38  F007         	goto	u2441
  4306   000E6C  EF3A  F007         	goto	u2440
  4307   000E70                     u2441:
  4308   000E70  EF61  F008         	goto	l665
  4309   000E74                     u2440:
  4310   000E74                     
  4311                           ;color_instructions.c: 186:             AppendMoves(2,&moves_index,anti_moves_array);
  4312   000E74  0E56               	movlw	low _moves_index
  4313   000E76  6E09               	movwf	AppendMoves@moves_index^0,c
  4314   000E78  0E00               	movlw	high _moves_index
  4315   000E7A  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4316   000E7C  0E75               	movlw	low _anti_moves_array
  4317   000E7E  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4318   000E80  0E00               	movlw	high _anti_moves_array
  4319   000E82  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4320   000E84  0E02               	movlw	2
  4321   000E86  EC27  F014         	call	_AppendMoves
  4322   000E8A  EF61  F008         	goto	l665
  4323   000E8E                     l3175:
  4324   000E8E  0E02               	movlw	2
  4325   000E90  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4326   000E92  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4327   000E94  A4D8               	btfss	status,2,c
  4328   000E96  EF4F  F007         	goto	u2451
  4329   000E9A  EF51  F007         	goto	u2450
  4330   000E9E                     u2451:
  4331   000E9E  EF6F  F007         	goto	l3183
  4332   000EA2                     u2450:
  4333   000EA2                     
  4334                           ;color_instructions.c: 190:         GreenInstructions(mL, mR);
  4335   000EA2  C037  F027         	movff	MoveBuggy@mL,GreenInstructions@mL
  4336   000EA6  C038  F028         	movff	MoveBuggy@mL+1,GreenInstructions@mL+1
  4337   000EAA  C039  F029         	movff	MoveBuggy@mR,GreenInstructions@mR
  4338   000EAE  C03A  F02A         	movff	MoveBuggy@mR+1,GreenInstructions@mR+1
  4339   000EB2  ECF4  F010         	call	_GreenInstructions	;wreg free
  4340   000EB6                     
  4341                           ;color_instructions.c: 191:         if(LATDbits.LATD7 != 1){
  4342   000EB6  BE7C               	btfsc	124,7,c	;volatile
  4343   000EB8  EF60  F007         	goto	u2461
  4344   000EBC  EF62  F007         	goto	u2460
  4345   000EC0                     u2461:
  4346   000EC0  EF61  F008         	goto	l665
  4347   000EC4                     u2460:
  4348   000EC4                     
  4349                           ;color_instructions.c: 192:             AppendMoves(1,&moves_index,anti_moves_array);
  4350   000EC4  0E56               	movlw	low _moves_index
  4351   000EC6  6E09               	movwf	AppendMoves@moves_index^0,c
  4352   000EC8  0E00               	movlw	high _moves_index
  4353   000ECA  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4354   000ECC  0E75               	movlw	low _anti_moves_array
  4355   000ECE  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4356   000ED0  0E00               	movlw	high _anti_moves_array
  4357   000ED2  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4358   000ED4  0E01               	movlw	1
  4359   000ED6  EC27  F014         	call	_AppendMoves
  4360   000EDA  EF61  F008         	goto	l665
  4361   000EDE                     l3183:
  4362   000EDE  0E03               	movlw	3
  4363   000EE0  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4364   000EE2  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4365   000EE4  A4D8               	btfss	status,2,c
  4366   000EE6  EF77  F007         	goto	u2471
  4367   000EEA  EF79  F007         	goto	u2470
  4368   000EEE                     u2471:
  4369   000EEE  EF97  F007         	goto	l3191
  4370   000EF2                     u2470:
  4371   000EF2                     
  4372                           ;color_instructions.c: 196:         BlueInstructions(mL, mR);
  4373   000EF2  C037  F027         	movff	MoveBuggy@mL,BlueInstructions@mL
  4374   000EF6  C038  F028         	movff	MoveBuggy@mL+1,BlueInstructions@mL+1
  4375   000EFA  C039  F029         	movff	MoveBuggy@mR,BlueInstructions@mR
  4376   000EFE  C03A  F02A         	movff	MoveBuggy@mR+1,BlueInstructions@mR+1
  4377   000F02  EC04  F00F         	call	_BlueInstructions	;wreg free
  4378   000F06                     
  4379                           ;color_instructions.c: 197:         if(LATDbits.LATD7 != 1){
  4380   000F06  BE7C               	btfsc	124,7,c	;volatile
  4381   000F08  EF88  F007         	goto	u2481
  4382   000F0C  EF8A  F007         	goto	u2480
  4383   000F10                     u2481:
  4384   000F10  EF61  F008         	goto	l665
  4385   000F14                     u2480:
  4386   000F14                     
  4387                           ;color_instructions.c: 198:             AppendMoves(3,&moves_index,anti_moves_array);
  4388   000F14  0E56               	movlw	low _moves_index
  4389   000F16  6E09               	movwf	AppendMoves@moves_index^0,c
  4390   000F18  0E00               	movlw	high _moves_index
  4391   000F1A  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4392   000F1C  0E75               	movlw	low _anti_moves_array
  4393   000F1E  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4394   000F20  0E00               	movlw	high _anti_moves_array
  4395   000F22  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4396   000F24  0E03               	movlw	3
  4397   000F26  EC27  F014         	call	_AppendMoves
  4398   000F2A  EF61  F008         	goto	l665
  4399   000F2E                     l3191:
  4400   000F2E  0E04               	movlw	4
  4401   000F30  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4402   000F32  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4403   000F34  A4D8               	btfss	status,2,c
  4404   000F36  EF9F  F007         	goto	u2491
  4405   000F3A  EFA1  F007         	goto	u2490
  4406   000F3E                     u2491:
  4407   000F3E  EFBF  F007         	goto	l3199
  4408   000F42                     u2490:
  4409   000F42                     
  4410                           ;color_instructions.c: 202:         YellowInstructions(mL, mR);
  4411   000F42  C037  F027         	movff	MoveBuggy@mL,YellowInstructions@mL
  4412   000F46  C038  F028         	movff	MoveBuggy@mL+1,YellowInstructions@mL+1
  4413   000F4A  C039  F029         	movff	MoveBuggy@mR,YellowInstructions@mR
  4414   000F4E  C03A  F02A         	movff	MoveBuggy@mR+1,YellowInstructions@mR+1
  4415   000F52  ECA5  F00F         	call	_YellowInstructions	;wreg free
  4416   000F56                     
  4417                           ;color_instructions.c: 204:         if(LATDbits.LATD7 != 1){
  4418   000F56  BE7C               	btfsc	124,7,c	;volatile
  4419   000F58  EFB0  F007         	goto	u2501
  4420   000F5C  EFB2  F007         	goto	u2500
  4421   000F60                     u2501:
  4422   000F60  EF61  F008         	goto	l665
  4423   000F64                     u2500:
  4424   000F64                     
  4425                           ;color_instructions.c: 205:             AppendMoves(9,&moves_index,anti_moves_array);
  4426   000F64  0E56               	movlw	low _moves_index
  4427   000F66  6E09               	movwf	AppendMoves@moves_index^0,c
  4428   000F68  0E00               	movlw	high _moves_index
  4429   000F6A  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4430   000F6C  0E75               	movlw	low _anti_moves_array
  4431   000F6E  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4432   000F70  0E00               	movlw	high _anti_moves_array
  4433   000F72  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4434   000F74  0E09               	movlw	9
  4435   000F76  EC27  F014         	call	_AppendMoves
  4436   000F7A  EF61  F008         	goto	l665
  4437   000F7E                     l3199:
  4438   000F7E  0E05               	movlw	5
  4439   000F80  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4440   000F82  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4441   000F84  A4D8               	btfss	status,2,c
  4442   000F86  EFC7  F007         	goto	u2511
  4443   000F8A  EFC9  F007         	goto	u2510
  4444   000F8E                     u2511:
  4445   000F8E  EFE7  F007         	goto	l3207
  4446   000F92                     u2510:
  4447   000F92                     
  4448                           ;color_instructions.c: 209:         PinkInstructions(mL, mR);
  4449   000F92  C037  F027         	movff	MoveBuggy@mL,PinkInstructions@mL
  4450   000F96  C038  F028         	movff	MoveBuggy@mL+1,PinkInstructions@mL+1
  4451   000F9A  C039  F029         	movff	MoveBuggy@mR,PinkInstructions@mR
  4452   000F9E  C03A  F02A         	movff	MoveBuggy@mR+1,PinkInstructions@mR+1
  4453   000FA2  EC2B  F010         	call	_PinkInstructions	;wreg free
  4454   000FA6                     
  4455                           ;color_instructions.c: 211:         if(LATDbits.LATD7 != 1){
  4456   000FA6  BE7C               	btfsc	124,7,c	;volatile
  4457   000FA8  EFD8  F007         	goto	u2521
  4458   000FAC  EFDA  F007         	goto	u2520
  4459   000FB0                     u2521:
  4460   000FB0  EF61  F008         	goto	l665
  4461   000FB4                     u2520:
  4462   000FB4                     
  4463                           ;color_instructions.c: 212:             AppendMoves(10,&moves_index,anti_moves_array);
  4464   000FB4  0E56               	movlw	low _moves_index
  4465   000FB6  6E09               	movwf	AppendMoves@moves_index^0,c
  4466   000FB8  0E00               	movlw	high _moves_index
  4467   000FBA  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4468   000FBC  0E75               	movlw	low _anti_moves_array
  4469   000FBE  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4470   000FC0  0E00               	movlw	high _anti_moves_array
  4471   000FC2  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4472   000FC4  0E0A               	movlw	10
  4473   000FC6  EC27  F014         	call	_AppendMoves
  4474   000FCA  EF61  F008         	goto	l665
  4475   000FCE                     l3207:
  4476   000FCE  0E06               	movlw	6
  4477   000FD0  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4478   000FD2  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4479   000FD4  A4D8               	btfss	status,2,c
  4480   000FD6  EFEF  F007         	goto	u2531
  4481   000FDA  EFF1  F007         	goto	u2530
  4482   000FDE                     u2531:
  4483   000FDE  EF0F  F008         	goto	l3215
  4484   000FE2                     u2530:
  4485   000FE2                     
  4486                           ;color_instructions.c: 216:         OrangeInstructions(mL, mR);
  4487   000FE2  C037  F027         	movff	MoveBuggy@mL,OrangeInstructions@mL
  4488   000FE6  C038  F028         	movff	MoveBuggy@mL+1,OrangeInstructions@mL+1
  4489   000FEA  C039  F029         	movff	MoveBuggy@mR,OrangeInstructions@mR
  4490   000FEE  C03A  F02A         	movff	MoveBuggy@mR+1,OrangeInstructions@mR+1
  4491   000FF2  EC6E  F010         	call	_OrangeInstructions	;wreg free
  4492   000FF6                     
  4493                           ;color_instructions.c: 217:         if(LATDbits.LATD7 != 1){
  4494   000FF6  BE7C               	btfsc	124,7,c	;volatile
  4495   000FF8  EF00  F008         	goto	u2541
  4496   000FFC  EF02  F008         	goto	u2540
  4497   001000                     u2541:
  4498   001000  EF61  F008         	goto	l665
  4499   001004                     u2540:
  4500   001004                     
  4501                           ;color_instructions.c: 218:             AppendMoves(7,&moves_index,anti_moves_array);
  4502   001004  0E56               	movlw	low _moves_index
  4503   001006  6E09               	movwf	AppendMoves@moves_index^0,c
  4504   001008  0E00               	movlw	high _moves_index
  4505   00100A  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4506   00100C  0E75               	movlw	low _anti_moves_array
  4507   00100E  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4508   001010  0E00               	movlw	high _anti_moves_array
  4509   001012  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4510   001014  0E07               	movlw	7
  4511   001016  EC27  F014         	call	_AppendMoves
  4512   00101A  EF61  F008         	goto	l665
  4513   00101E                     l3215:
  4514   00101E  0E07               	movlw	7
  4515   001020  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4516   001022  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4517   001024  A4D8               	btfss	status,2,c
  4518   001026  EF17  F008         	goto	u2551
  4519   00102A  EF19  F008         	goto	u2550
  4520   00102E                     u2551:
  4521   00102E  EF37  F008         	goto	l3223
  4522   001032                     u2550:
  4523   001032                     
  4524                           ;color_instructions.c: 222:         LightBlueInstructions(mL, mR);
  4525   001032  C037  F027         	movff	MoveBuggy@mL,LightBlueInstructions@mL
  4526   001036  C038  F028         	movff	MoveBuggy@mL+1,LightBlueInstructions@mL+1
  4527   00103A  C039  F029         	movff	MoveBuggy@mR,LightBlueInstructions@mR
  4528   00103E  C03A  F02A         	movff	MoveBuggy@mR+1,LightBlueInstructions@mR+1
  4529   001042  ECB1  F010         	call	_LightBlueInstructions	;wreg free
  4530   001046                     
  4531                           ;color_instructions.c: 223:         if(LATDbits.LATD7 != 1){
  4532   001046  BE7C               	btfsc	124,7,c	;volatile
  4533   001048  EF28  F008         	goto	u2561
  4534   00104C  EF2A  F008         	goto	u2560
  4535   001050                     u2561:
  4536   001050  EF61  F008         	goto	l665
  4537   001054                     u2560:
  4538   001054                     
  4539                           ;color_instructions.c: 224:             AppendMoves(6,&moves_index,anti_moves_array);
  4540   001054  0E56               	movlw	low _moves_index
  4541   001056  6E09               	movwf	AppendMoves@moves_index^0,c
  4542   001058  0E00               	movlw	high _moves_index
  4543   00105A  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4544   00105C  0E75               	movlw	low _anti_moves_array
  4545   00105E  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4546   001060  0E00               	movlw	high _anti_moves_array
  4547   001062  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4548   001064  0E06               	movlw	6
  4549   001066  EC27  F014         	call	_AppendMoves
  4550   00106A  EF61  F008         	goto	l665
  4551   00106E                     l3223:
  4552   00106E  0E09               	movlw	9
  4553   001070  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4554   001072  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4555   001074  A4D8               	btfss	status,2,c
  4556   001076  EF3F  F008         	goto	u2571
  4557   00107A  EF41  F008         	goto	u2570
  4558   00107E                     u2571:
  4559   00107E  EF4D  F008         	goto	l3227
  4560   001082                     u2570:
  4561   001082                     
  4562                           ;color_instructions.c: 230:         AntiYellow(mL, mR);
  4563   001082  C037  F02E         	movff	MoveBuggy@mL,AntiYellow@mL
  4564   001086  C038  F02F         	movff	MoveBuggy@mL+1,AntiYellow@mL+1
  4565   00108A  C039  F030         	movff	MoveBuggy@mR,AntiYellow@mR
  4566   00108E  C03A  F031         	movff	MoveBuggy@mR+1,AntiYellow@mR+1
  4567   001092  EC52  F00E         	call	_AntiYellow	;wreg free
  4568                           
  4569                           ;color_instructions.c: 231:     }
  4570   001096  EF61  F008         	goto	l665
  4571   00109A                     l3227:
  4572   00109A  0E0A               	movlw	10
  4573   00109C  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4574   00109E  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4575   0010A0  A4D8               	btfss	status,2,c
  4576   0010A2  EF55  F008         	goto	u2581
  4577   0010A6  EF57  F008         	goto	u2580
  4578   0010AA                     u2581:
  4579   0010AA  EF61  F008         	goto	l665
  4580   0010AE                     u2580:
  4581   0010AE                     
  4582                           ;color_instructions.c: 233:         AntiPink(mL, mR);
  4583   0010AE  C037  F02E         	movff	MoveBuggy@mL,AntiPink@mL
  4584   0010B2  C038  F02F         	movff	MoveBuggy@mL+1,AntiPink@mL+1
  4585   0010B6  C039  F030         	movff	MoveBuggy@mR,AntiPink@mR
  4586   0010BA  C03A  F031         	movff	MoveBuggy@mR+1,AntiPink@mR+1
  4587   0010BE  ECAB  F00E         	call	_AntiPink	;wreg free
  4588   0010C2                     l665:
  4589   0010C2  0012               	return		;funcret
  4590   0010C4                     __end_of_MoveBuggy:
  4591                           	callstack 0
  4592                           
  4593 ;; *************** function _YellowInstructions *****************
  4594 ;; Defined at:
  4595 ;;		line 58 in file "color_instructions.c"
  4596 ;; Parameters:    Size  Location     Type
  4597 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  4598 ;;		 -> main@motorL(9), 
  4599 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  4600 ;;		 -> main@motorR(9), 
  4601 ;; Auto vars:     Size  Location     Type
  4602 ;;  a               1   44[COMRAM] unsigned char 
  4603 ;; Return value:  Size  Location     Type
  4604 ;;                  1    wreg      void 
  4605 ;; Registers used:
  4606 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4607 ;; Tracked objects:
  4608 ;;		On entry : 0/0
  4609 ;;		On exit  : 0/0
  4610 ;;		Unchanged: 0/0
  4611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4612 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4613 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4614 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4615 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4616 ;;Total ram usage:        7 bytes
  4617 ;; Hardware stack levels used: 1
  4618 ;; Hardware stack levels required when called: 11
  4619 ;; This function calls:
  4620 ;;		_fullSpeedBackwards
  4621 ;;		_stop
  4622 ;;		_turnRight90
  4623 ;; This function is called by:
  4624 ;;		_MoveBuggy
  4625 ;; This function uses a non-reentrant model
  4626 ;;
  4627                           
  4628                           	psect	text14
  4629   001F4A                     __ptext14:
  4630                           	callstack 0
  4631   001F4A                     _YellowInstructions:
  4632                           	callstack 17
  4633   001F4A                     
  4634                           ;color_instructions.c: 60:     unsigned char a=0;
  4635   001F4A  0E00               	movlw	0
  4636   001F4C  6E2D               	movwf	YellowInstructions@a^0,c
  4637                           
  4638                           ;color_instructions.c: 61:     while (a<40){
  4639   001F4E  EFB4  F00F         	goto	l3015
  4640   001F52                     l3011:
  4641                           
  4642                           ;color_instructions.c: 62:         fullSpeedBackwards(mL, mR);
  4643   001F52  C027  F01C         	movff	YellowInstructions@mL,fullSpeedBackwards@mL
  4644   001F56  C028  F01D         	movff	YellowInstructions@mL+1,fullSpeedBackwards@mL+1
  4645   001F5A  C029  F01E         	movff	YellowInstructions@mR,fullSpeedBackwards@mR
  4646   001F5E  C02A  F01F         	movff	YellowInstructions@mR+1,fullSpeedBackwards@mR+1
  4647   001F62  ECFC  F00C         	call	_fullSpeedBackwards	;wreg free
  4648   001F66                     
  4649                           ;color_instructions.c: 63:         a++;
  4650   001F66  2A2D               	incf	YellowInstructions@a^0,f,c
  4651   001F68                     l3015:
  4652                           
  4653                           ;color_instructions.c: 61:     while (a<40){
  4654   001F68  0E27               	movlw	39
  4655   001F6A  642D               	cpfsgt	YellowInstructions@a^0,c
  4656   001F6C  EFBA  F00F         	goto	u2311
  4657   001F70  EFBC  F00F         	goto	u2310
  4658   001F74                     u2311:
  4659   001F74  EFA9  F00F         	goto	l3011
  4660   001F78                     u2310:
  4661   001F78  EFC9  F00F         	goto	l3021
  4662   001F7C                     l3017:
  4663                           
  4664                           ;color_instructions.c: 66:         stop(mL, mR);
  4665   001F7C  C027  F01C         	movff	YellowInstructions@mL,stop@mL
  4666   001F80  C028  F01D         	movff	YellowInstructions@mL+1,stop@mL+1
  4667   001F84  C029  F01E         	movff	YellowInstructions@mR,stop@mR
  4668   001F88  C02A  F01F         	movff	YellowInstructions@mR+1,stop@mR+1
  4669   001F8C  ECE8  F00D         	call	_stop	;wreg free
  4670   001F90                     
  4671                           ;color_instructions.c: 67:         a--;
  4672   001F90  062D               	decf	YellowInstructions@a^0,f,c
  4673   001F92                     l3021:
  4674                           
  4675                           ;color_instructions.c: 65:     while (a>0){
  4676   001F92  502D               	movf	YellowInstructions@a^0,w,c
  4677   001F94  A4D8               	btfss	status,2,c
  4678   001F96  EFCF  F00F         	goto	u2321
  4679   001F9A  EFD1  F00F         	goto	u2320
  4680   001F9E                     u2321:
  4681   001F9E  EFBE  F00F         	goto	l3017
  4682   001FA2                     u2320:
  4683   001FA2                     
  4684                           ;color_instructions.c: 69:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4685   001FA2  0E05               	movlw	5
  4686   001FA4  6E2C               	movwf	(??_YellowInstructions+1)^0,c
  4687   001FA6  0E0F               	movlw	15
  4688   001FA8  6E2B               	movwf	??_YellowInstructions^0,c
  4689   001FAA  0EF1               	movlw	241
  4690   001FAC                     u4507:
  4691   001FAC  2EE8               	decfsz	wreg,f,c
  4692   001FAE  D7FE               	bra	u4507
  4693   001FB0  2E2B               	decfsz	??_YellowInstructions^0,f,c
  4694   001FB2  D7FC               	bra	u4507
  4695   001FB4  2E2C               	decfsz	(??_YellowInstructions+1)^0,f,c
  4696   001FB6  D7FA               	bra	u4507
  4697   001FB8  F000               	nop	
  4698   001FBA                     
  4699                           ;color_instructions.c: 70:     turnRight90(mL, mR);
  4700   001FBA  C027  F022         	movff	YellowInstructions@mL,turnRight90@mL
  4701   001FBE  C028  F023         	movff	YellowInstructions@mL+1,turnRight90@mL+1
  4702   001FC2  C029  F024         	movff	YellowInstructions@mR,turnRight90@mR
  4703   001FC6  C02A  F025         	movff	YellowInstructions@mR+1,turnRight90@mR+1
  4704   001FCA  ECFA  F011         	call	_turnRight90	;wreg free
  4705   001FCE  0012               	return		;funcret
  4706   001FD0                     __end_of_YellowInstructions:
  4707                           	callstack 0
  4708                           
  4709 ;; *************** function _RedInstructions *****************
  4710 ;; Defined at:
  4711 ;;		line 10 in file "color_instructions.c"
  4712 ;; Parameters:    Size  Location     Type
  4713 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  4714 ;;		 -> main@motorL(9), 
  4715 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  4716 ;;		 -> main@motorR(9), 
  4717 ;; Auto vars:     Size  Location     Type
  4718 ;;  a               1   44[COMRAM] unsigned char 
  4719 ;; Return value:  Size  Location     Type
  4720 ;;                  1    wreg      void 
  4721 ;; Registers used:
  4722 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4723 ;; Tracked objects:
  4724 ;;		On entry : 0/0
  4725 ;;		On exit  : 0/0
  4726 ;;		Unchanged: 0/0
  4727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4728 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4729 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4730 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4731 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4732 ;;Total ram usage:        7 bytes
  4733 ;; Hardware stack levels used: 1
  4734 ;; Hardware stack levels required when called: 11
  4735 ;; This function calls:
  4736 ;;		_fullSpeedBackwards
  4737 ;;		_stop
  4738 ;;		_turnRight90
  4739 ;; This function is called by:
  4740 ;;		_MoveBuggy
  4741 ;; This function uses a non-reentrant model
  4742 ;;
  4743                           
  4744                           	psect	text15
  4745   001FD0                     __ptext15:
  4746                           	callstack 0
  4747   001FD0                     _RedInstructions:
  4748                           	callstack 17
  4749   001FD0                     
  4750                           ;color_instructions.c: 12:     unsigned char a=0;
  4751   001FD0  0E00               	movlw	0
  4752   001FD2  6E2D               	movwf	RedInstructions@a^0,c
  4753                           
  4754                           ;color_instructions.c: 13:     while (a<18){
  4755   001FD4  EFF7  F00F         	goto	l2979
  4756   001FD8                     l2975:
  4757                           
  4758                           ;color_instructions.c: 14:         fullSpeedBackwards(mL, mR);
  4759   001FD8  C027  F01C         	movff	RedInstructions@mL,fullSpeedBackwards@mL
  4760   001FDC  C028  F01D         	movff	RedInstructions@mL+1,fullSpeedBackwards@mL+1
  4761   001FE0  C029  F01E         	movff	RedInstructions@mR,fullSpeedBackwards@mR
  4762   001FE4  C02A  F01F         	movff	RedInstructions@mR+1,fullSpeedBackwards@mR+1
  4763   001FE8  ECFC  F00C         	call	_fullSpeedBackwards	;wreg free
  4764   001FEC                     
  4765                           ;color_instructions.c: 15:         a++;
  4766   001FEC  2A2D               	incf	RedInstructions@a^0,f,c
  4767   001FEE                     l2979:
  4768                           
  4769                           ;color_instructions.c: 13:     while (a<18){
  4770   001FEE  0E11               	movlw	17
  4771   001FF0  642D               	cpfsgt	RedInstructions@a^0,c
  4772   001FF2  EFFD  F00F         	goto	u2271
  4773   001FF6  EFFF  F00F         	goto	u2270
  4774   001FFA                     u2271:
  4775   001FFA  EFEC  F00F         	goto	l2975
  4776   001FFE                     u2270:
  4777   001FFE  EF0C  F010         	goto	l2985
  4778   002002                     l2981:
  4779                           
  4780                           ;color_instructions.c: 18:         stop(mL, mR);
  4781   002002  C027  F01C         	movff	RedInstructions@mL,stop@mL
  4782   002006  C028  F01D         	movff	RedInstructions@mL+1,stop@mL+1
  4783   00200A  C029  F01E         	movff	RedInstructions@mR,stop@mR
  4784   00200E  C02A  F01F         	movff	RedInstructions@mR+1,stop@mR+1
  4785   002012  ECE8  F00D         	call	_stop	;wreg free
  4786   002016                     
  4787                           ;color_instructions.c: 19:         a--;
  4788   002016  062D               	decf	RedInstructions@a^0,f,c
  4789   002018                     l2985:
  4790                           
  4791                           ;color_instructions.c: 17:     while (a>0){
  4792   002018  502D               	movf	RedInstructions@a^0,w,c
  4793   00201A  A4D8               	btfss	status,2,c
  4794   00201C  EF12  F010         	goto	u2281
  4795   002020  EF14  F010         	goto	u2280
  4796   002024                     u2281:
  4797   002024  EF01  F010         	goto	l2981
  4798   002028                     u2280:
  4799   002028                     
  4800                           ;color_instructions.c: 21:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4801   002028  0E05               	movlw	5
  4802   00202A  6E2C               	movwf	(??_RedInstructions+1)^0,c
  4803   00202C  0E0F               	movlw	15
  4804   00202E  6E2B               	movwf	??_RedInstructions^0,c
  4805   002030  0EF1               	movlw	241
  4806   002032                     u4517:
  4807   002032  2EE8               	decfsz	wreg,f,c
  4808   002034  D7FE               	bra	u4517
  4809   002036  2E2B               	decfsz	??_RedInstructions^0,f,c
  4810   002038  D7FC               	bra	u4517
  4811   00203A  2E2C               	decfsz	(??_RedInstructions+1)^0,f,c
  4812   00203C  D7FA               	bra	u4517
  4813   00203E  F000               	nop	
  4814   002040                     
  4815                           ;color_instructions.c: 22:     turnRight90(mL, mR);
  4816   002040  C027  F022         	movff	RedInstructions@mL,turnRight90@mL
  4817   002044  C028  F023         	movff	RedInstructions@mL+1,turnRight90@mL+1
  4818   002048  C029  F024         	movff	RedInstructions@mR,turnRight90@mR
  4819   00204C  C02A  F025         	movff	RedInstructions@mR+1,turnRight90@mR+1
  4820   002050  ECFA  F011         	call	_turnRight90	;wreg free
  4821   002054  0012               	return		;funcret
  4822   002056                     __end_of_RedInstructions:
  4823                           	callstack 0
  4824                           
  4825 ;; *************** function _PinkInstructions *****************
  4826 ;; Defined at:
  4827 ;;		line 73 in file "color_instructions.c"
  4828 ;; Parameters:    Size  Location     Type
  4829 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  4830 ;;		 -> main@motorL(9), 
  4831 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  4832 ;;		 -> main@motorR(9), 
  4833 ;; Auto vars:     Size  Location     Type
  4834 ;;  a               1   44[COMRAM] unsigned char 
  4835 ;; Return value:  Size  Location     Type
  4836 ;;                  1    wreg      void 
  4837 ;; Registers used:
  4838 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4839 ;; Tracked objects:
  4840 ;;		On entry : 0/0
  4841 ;;		On exit  : 0/0
  4842 ;;		Unchanged: 0/0
  4843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4844 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4845 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4846 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4847 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4848 ;;Total ram usage:        7 bytes
  4849 ;; Hardware stack levels used: 1
  4850 ;; Hardware stack levels required when called: 11
  4851 ;; This function calls:
  4852 ;;		_fullSpeedBackwards
  4853 ;;		_stop
  4854 ;;		_turnLeft90
  4855 ;; This function is called by:
  4856 ;;		_MoveBuggy
  4857 ;; This function uses a non-reentrant model
  4858 ;;
  4859                           
  4860                           	psect	text16
  4861   002056                     __ptext16:
  4862                           	callstack 0
  4863   002056                     _PinkInstructions:
  4864                           	callstack 17
  4865   002056                     
  4866                           ;color_instructions.c: 74:     unsigned char a=0;
  4867   002056  0E00               	movlw	0
  4868   002058  6E2D               	movwf	PinkInstructions@a^0,c
  4869                           
  4870                           ;color_instructions.c: 75:     while (a<40){
  4871   00205A  EF3A  F010         	goto	l3033
  4872   00205E                     l3029:
  4873                           
  4874                           ;color_instructions.c: 76:         fullSpeedBackwards(mL, mR);
  4875   00205E  C027  F01C         	movff	PinkInstructions@mL,fullSpeedBackwards@mL
  4876   002062  C028  F01D         	movff	PinkInstructions@mL+1,fullSpeedBackwards@mL+1
  4877   002066  C029  F01E         	movff	PinkInstructions@mR,fullSpeedBackwards@mR
  4878   00206A  C02A  F01F         	movff	PinkInstructions@mR+1,fullSpeedBackwards@mR+1
  4879   00206E  ECFC  F00C         	call	_fullSpeedBackwards	;wreg free
  4880   002072                     
  4881                           ;color_instructions.c: 77:         a++;
  4882   002072  2A2D               	incf	PinkInstructions@a^0,f,c
  4883   002074                     l3033:
  4884                           
  4885                           ;color_instructions.c: 75:     while (a<40){
  4886   002074  0E27               	movlw	39
  4887   002076  642D               	cpfsgt	PinkInstructions@a^0,c
  4888   002078  EF40  F010         	goto	u2331
  4889   00207C  EF42  F010         	goto	u2330
  4890   002080                     u2331:
  4891   002080  EF2F  F010         	goto	l3029
  4892   002084                     u2330:
  4893   002084  EF4F  F010         	goto	l3039
  4894   002088                     l3035:
  4895                           
  4896                           ;color_instructions.c: 80:         stop(mL, mR);
  4897   002088  C027  F01C         	movff	PinkInstructions@mL,stop@mL
  4898   00208C  C028  F01D         	movff	PinkInstructions@mL+1,stop@mL+1
  4899   002090  C029  F01E         	movff	PinkInstructions@mR,stop@mR
  4900   002094  C02A  F01F         	movff	PinkInstructions@mR+1,stop@mR+1
  4901   002098  ECE8  F00D         	call	_stop	;wreg free
  4902   00209C                     
  4903                           ;color_instructions.c: 81:         a--;
  4904   00209C  062D               	decf	PinkInstructions@a^0,f,c
  4905   00209E                     l3039:
  4906                           
  4907                           ;color_instructions.c: 79:     while (a>0){
  4908   00209E  502D               	movf	PinkInstructions@a^0,w,c
  4909   0020A0  A4D8               	btfss	status,2,c
  4910   0020A2  EF55  F010         	goto	u2341
  4911   0020A6  EF57  F010         	goto	u2340
  4912   0020AA                     u2341:
  4913   0020AA  EF44  F010         	goto	l3035
  4914   0020AE                     u2340:
  4915   0020AE                     
  4916                           ;color_instructions.c: 83:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4917   0020AE  0E05               	movlw	5
  4918   0020B0  6E2C               	movwf	(??_PinkInstructions+1)^0,c
  4919   0020B2  0E0F               	movlw	15
  4920   0020B4  6E2B               	movwf	??_PinkInstructions^0,c
  4921   0020B6  0EF1               	movlw	241
  4922   0020B8                     u4527:
  4923   0020B8  2EE8               	decfsz	wreg,f,c
  4924   0020BA  D7FE               	bra	u4527
  4925   0020BC  2E2B               	decfsz	??_PinkInstructions^0,f,c
  4926   0020BE  D7FC               	bra	u4527
  4927   0020C0  2E2C               	decfsz	(??_PinkInstructions+1)^0,f,c
  4928   0020C2  D7FA               	bra	u4527
  4929   0020C4  F000               	nop	
  4930   0020C6                     
  4931                           ;color_instructions.c: 84:     turnLeft90(mL, mR);
  4932   0020C6  C027  F022         	movff	PinkInstructions@mL,turnLeft90@mL
  4933   0020CA  C028  F023         	movff	PinkInstructions@mL+1,turnLeft90@mL+1
  4934   0020CE  C029  F024         	movff	PinkInstructions@mR,turnLeft90@mR
  4935   0020D2  C02A  F025         	movff	PinkInstructions@mR+1,turnLeft90@mR+1
  4936   0020D6  EC27  F012         	call	_turnLeft90	;wreg free
  4937   0020DA  0012               	return		;funcret
  4938   0020DC                     __end_of_PinkInstructions:
  4939                           	callstack 0
  4940                           
  4941 ;; *************** function _OrangeInstructions *****************
  4942 ;; Defined at:
  4943 ;;		line 88 in file "color_instructions.c"
  4944 ;; Parameters:    Size  Location     Type
  4945 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  4946 ;;		 -> main@motorL(9), 
  4947 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  4948 ;;		 -> main@motorR(9), 
  4949 ;; Auto vars:     Size  Location     Type
  4950 ;;  a               1   44[COMRAM] unsigned char 
  4951 ;; Return value:  Size  Location     Type
  4952 ;;                  1    wreg      void 
  4953 ;; Registers used:
  4954 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4955 ;; Tracked objects:
  4956 ;;		On entry : 0/0
  4957 ;;		On exit  : 0/0
  4958 ;;		Unchanged: 0/0
  4959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4960 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4961 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4962 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4963 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4964 ;;Total ram usage:        7 bytes
  4965 ;; Hardware stack levels used: 1
  4966 ;; Hardware stack levels required when called: 11
  4967 ;; This function calls:
  4968 ;;		_fullSpeedBackwards
  4969 ;;		_stop
  4970 ;;		_turnRight135
  4971 ;; This function is called by:
  4972 ;;		_MoveBuggy
  4973 ;; This function uses a non-reentrant model
  4974 ;;
  4975                           
  4976                           	psect	text17
  4977   0020DC                     __ptext17:
  4978                           	callstack 0
  4979   0020DC                     _OrangeInstructions:
  4980                           	callstack 17
  4981   0020DC                     
  4982                           ;color_instructions.c: 89:     unsigned char a=0;
  4983   0020DC  0E00               	movlw	0
  4984   0020DE  6E2D               	movwf	OrangeInstructions@a^0,c
  4985                           
  4986                           ;color_instructions.c: 90:     while (a<18){
  4987   0020E0  EF7D  F010         	goto	l3051
  4988   0020E4                     l3047:
  4989                           
  4990                           ;color_instructions.c: 91:         fullSpeedBackwards(mL, mR);
  4991   0020E4  C027  F01C         	movff	OrangeInstructions@mL,fullSpeedBackwards@mL
  4992   0020E8  C028  F01D         	movff	OrangeInstructions@mL+1,fullSpeedBackwards@mL+1
  4993   0020EC  C029  F01E         	movff	OrangeInstructions@mR,fullSpeedBackwards@mR
  4994   0020F0  C02A  F01F         	movff	OrangeInstructions@mR+1,fullSpeedBackwards@mR+1
  4995   0020F4  ECFC  F00C         	call	_fullSpeedBackwards	;wreg free
  4996   0020F8                     
  4997                           ;color_instructions.c: 92:         a++;
  4998   0020F8  2A2D               	incf	OrangeInstructions@a^0,f,c
  4999   0020FA                     l3051:
  5000                           
  5001                           ;color_instructions.c: 90:     while (a<18){
  5002   0020FA  0E11               	movlw	17
  5003   0020FC  642D               	cpfsgt	OrangeInstructions@a^0,c
  5004   0020FE  EF83  F010         	goto	u2351
  5005   002102  EF85  F010         	goto	u2350
  5006   002106                     u2351:
  5007   002106  EF72  F010         	goto	l3047
  5008   00210A                     u2350:
  5009   00210A  EF92  F010         	goto	l3057
  5010   00210E                     l3053:
  5011                           
  5012                           ;color_instructions.c: 95:         stop(mL, mR);
  5013   00210E  C027  F01C         	movff	OrangeInstructions@mL,stop@mL
  5014   002112  C028  F01D         	movff	OrangeInstructions@mL+1,stop@mL+1
  5015   002116  C029  F01E         	movff	OrangeInstructions@mR,stop@mR
  5016   00211A  C02A  F01F         	movff	OrangeInstructions@mR+1,stop@mR+1
  5017   00211E  ECE8  F00D         	call	_stop	;wreg free
  5018   002122                     
  5019                           ;color_instructions.c: 96:         a--;
  5020   002122  062D               	decf	OrangeInstructions@a^0,f,c
  5021   002124                     l3057:
  5022                           
  5023                           ;color_instructions.c: 94:     while (a>0){
  5024   002124  502D               	movf	OrangeInstructions@a^0,w,c
  5025   002126  A4D8               	btfss	status,2,c
  5026   002128  EF98  F010         	goto	u2361
  5027   00212C  EF9A  F010         	goto	u2360
  5028   002130                     u2361:
  5029   002130  EF87  F010         	goto	l3053
  5030   002134                     u2360:
  5031   002134                     
  5032                           ;color_instructions.c: 98:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5033   002134  0E05               	movlw	5
  5034   002136  6E2C               	movwf	(??_OrangeInstructions+1)^0,c
  5035   002138  0E0F               	movlw	15
  5036   00213A  6E2B               	movwf	??_OrangeInstructions^0,c
  5037   00213C  0EF1               	movlw	241
  5038   00213E                     u4537:
  5039   00213E  2EE8               	decfsz	wreg,f,c
  5040   002140  D7FE               	bra	u4537
  5041   002142  2E2B               	decfsz	??_OrangeInstructions^0,f,c
  5042   002144  D7FC               	bra	u4537
  5043   002146  2E2C               	decfsz	(??_OrangeInstructions+1)^0,f,c
  5044   002148  D7FA               	bra	u4537
  5045   00214A  F000               	nop	
  5046   00214C                     
  5047                           ;color_instructions.c: 100:     turnRight135(mL, mR);
  5048   00214C  C027  F022         	movff	OrangeInstructions@mL,turnRight135@mL
  5049   002150  C028  F023         	movff	OrangeInstructions@mL+1,turnRight135@mL+1
  5050   002154  C029  F024         	movff	OrangeInstructions@mR,turnRight135@mR
  5051   002158  C02A  F025         	movff	OrangeInstructions@mR+1,turnRight135@mR+1
  5052   00215C  ECA0  F011         	call	_turnRight135	;wreg free
  5053   002160  0012               	return		;funcret
  5054   002162                     __end_of_OrangeInstructions:
  5055                           	callstack 0
  5056                           
  5057 ;; *************** function _turnRight135 *****************
  5058 ;; Defined at:
  5059 ;;		line 240 in file "dc_motor.c"
  5060 ;; Parameters:    Size  Location     Type
  5061 ;;  mL              2   33[COMRAM] PTR struct DC_motor
  5062 ;;		 -> main@motorL(9), 
  5063 ;;  mR              2   35[COMRAM] PTR struct DC_motor
  5064 ;;		 -> main@motorR(9), 
  5065 ;; Auto vars:     Size  Location     Type
  5066 ;;  a               1   37[COMRAM] unsigned char 
  5067 ;; Return value:  Size  Location     Type
  5068 ;;                  1    wreg      void 
  5069 ;; Registers used:
  5070 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5071 ;; Tracked objects:
  5072 ;;		On entry : 0/0
  5073 ;;		On exit  : 0/0
  5074 ;;		Unchanged: 0/0
  5075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5076 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5077 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5079 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5080 ;;Total ram usage:        5 bytes
  5081 ;; Hardware stack levels used: 1
  5082 ;; Hardware stack levels required when called: 10
  5083 ;; This function calls:
  5084 ;;		_stop
  5085 ;;		_turnRight
  5086 ;; This function is called by:
  5087 ;;		_OrangeInstructions
  5088 ;; This function uses a non-reentrant model
  5089 ;;
  5090                           
  5091                           	psect	text18
  5092   002340                     __ptext18:
  5093                           	callstack 0
  5094   002340                     _turnRight135:
  5095                           	callstack 17
  5096   002340                     
  5097                           ;dc_motor.c: 242:     unsigned char a=0;
  5098   002340  0E00               	movlw	0
  5099   002342  6E26               	movwf	turnRight135@a^0,c
  5100                           
  5101                           ;dc_motor.c: 243:     while(a<22){
  5102   002344  EFAF  F011         	goto	l2887
  5103   002348                     l2883:
  5104                           
  5105                           ;dc_motor.c: 244:         turnRight(mL, mR);
  5106   002348  C022  F01C         	movff	turnRight135@mL,turnRight@mL
  5107   00234C  C023  F01D         	movff	turnRight135@mL+1,turnRight@mL+1
  5108   002350  C024  F01E         	movff	turnRight135@mR,turnRight@mR
  5109   002354  C025  F01F         	movff	turnRight135@mR+1,turnRight@mR+1
  5110   002358  EC97  F00B         	call	_turnRight	;wreg free
  5111   00235C                     
  5112                           ;dc_motor.c: 245:         a++;
  5113   00235C  2A26               	incf	turnRight135@a^0,f,c
  5114   00235E                     l2887:
  5115                           
  5116                           ;dc_motor.c: 243:     while(a<22){
  5117   00235E  0E15               	movlw	21
  5118   002360  6426               	cpfsgt	turnRight135@a^0,c
  5119   002362  EFB5  F011         	goto	u2191
  5120   002366  EFB7  F011         	goto	u2190
  5121   00236A                     u2191:
  5122   00236A  EFA4  F011         	goto	l2883
  5123   00236E                     u2190:
  5124   00236E  EFC4  F011         	goto	l2893
  5125   002372                     l2889:
  5126                           
  5127                           ;dc_motor.c: 248:         stop(mL, mR);
  5128   002372  C022  F01C         	movff	turnRight135@mL,stop@mL
  5129   002376  C023  F01D         	movff	turnRight135@mL+1,stop@mL+1
  5130   00237A  C024  F01E         	movff	turnRight135@mR,stop@mR
  5131   00237E  C025  F01F         	movff	turnRight135@mR+1,stop@mR+1
  5132   002382  ECE8  F00D         	call	_stop	;wreg free
  5133   002386                     
  5134                           ;dc_motor.c: 249:         a--;
  5135   002386  0626               	decf	turnRight135@a^0,f,c
  5136   002388                     l2893:
  5137                           
  5138                           ;dc_motor.c: 247:     while(a>0){
  5139   002388  5026               	movf	turnRight135@a^0,w,c
  5140   00238A  A4D8               	btfss	status,2,c
  5141   00238C  EFCA  F011         	goto	u2201
  5142   002390  EFCC  F011         	goto	u2200
  5143   002394                     u2201:
  5144   002394  EFB9  F011         	goto	l2889
  5145   002398                     u2200:
  5146   002398  0012               	return		;funcret
  5147   00239A                     __end_of_turnRight135:
  5148                           	callstack 0
  5149                           
  5150 ;; *************** function _LightBlueInstructions *****************
  5151 ;; Defined at:
  5152 ;;		line 103 in file "color_instructions.c"
  5153 ;; Parameters:    Size  Location     Type
  5154 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  5155 ;;		 -> main@motorL(9), 
  5156 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  5157 ;;		 -> main@motorR(9), 
  5158 ;; Auto vars:     Size  Location     Type
  5159 ;;  a               1   44[COMRAM] unsigned char 
  5160 ;; Return value:  Size  Location     Type
  5161 ;;                  1    wreg      void 
  5162 ;; Registers used:
  5163 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5164 ;; Tracked objects:
  5165 ;;		On entry : 0/0
  5166 ;;		On exit  : 0/0
  5167 ;;		Unchanged: 0/0
  5168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5169 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5170 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5171 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5172 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5173 ;;Total ram usage:        7 bytes
  5174 ;; Hardware stack levels used: 1
  5175 ;; Hardware stack levels required when called: 11
  5176 ;; This function calls:
  5177 ;;		_fullSpeedBackwards
  5178 ;;		_stop
  5179 ;;		_turnLeft135
  5180 ;; This function is called by:
  5181 ;;		_MoveBuggy
  5182 ;; This function uses a non-reentrant model
  5183 ;;
  5184                           
  5185                           	psect	text19
  5186   002162                     __ptext19:
  5187                           	callstack 0
  5188   002162                     _LightBlueInstructions:
  5189                           	callstack 17
  5190   002162                     
  5191                           ;color_instructions.c: 104:     unsigned char a=0;
  5192   002162  0E00               	movlw	0
  5193   002164  6E2D               	movwf	LightBlueInstructions@a^0,c
  5194                           
  5195                           ;color_instructions.c: 105:     while (a<18){
  5196   002166  EFC0  F010         	goto	l3069
  5197   00216A                     l3065:
  5198                           
  5199                           ;color_instructions.c: 106:         fullSpeedBackwards(mL, mR);
  5200   00216A  C027  F01C         	movff	LightBlueInstructions@mL,fullSpeedBackwards@mL
  5201   00216E  C028  F01D         	movff	LightBlueInstructions@mL+1,fullSpeedBackwards@mL+1
  5202   002172  C029  F01E         	movff	LightBlueInstructions@mR,fullSpeedBackwards@mR
  5203   002176  C02A  F01F         	movff	LightBlueInstructions@mR+1,fullSpeedBackwards@mR+1
  5204   00217A  ECFC  F00C         	call	_fullSpeedBackwards	;wreg free
  5205   00217E                     
  5206                           ;color_instructions.c: 107:         a++;
  5207   00217E  2A2D               	incf	LightBlueInstructions@a^0,f,c
  5208   002180                     l3069:
  5209                           
  5210                           ;color_instructions.c: 105:     while (a<18){
  5211   002180  0E11               	movlw	17
  5212   002182  642D               	cpfsgt	LightBlueInstructions@a^0,c
  5213   002184  EFC6  F010         	goto	u2371
  5214   002188  EFC8  F010         	goto	u2370
  5215   00218C                     u2371:
  5216   00218C  EFB5  F010         	goto	l3065
  5217   002190                     u2370:
  5218   002190  EFD5  F010         	goto	l3075
  5219   002194                     l3071:
  5220                           
  5221                           ;color_instructions.c: 110:         stop(mL, mR);
  5222   002194  C027  F01C         	movff	LightBlueInstructions@mL,stop@mL
  5223   002198  C028  F01D         	movff	LightBlueInstructions@mL+1,stop@mL+1
  5224   00219C  C029  F01E         	movff	LightBlueInstructions@mR,stop@mR
  5225   0021A0  C02A  F01F         	movff	LightBlueInstructions@mR+1,stop@mR+1
  5226   0021A4  ECE8  F00D         	call	_stop	;wreg free
  5227   0021A8                     
  5228                           ;color_instructions.c: 111:         a--;
  5229   0021A8  062D               	decf	LightBlueInstructions@a^0,f,c
  5230   0021AA                     l3075:
  5231                           
  5232                           ;color_instructions.c: 109:     while (a>0){
  5233   0021AA  502D               	movf	LightBlueInstructions@a^0,w,c
  5234   0021AC  A4D8               	btfss	status,2,c
  5235   0021AE  EFDB  F010         	goto	u2381
  5236   0021B2  EFDD  F010         	goto	u2380
  5237   0021B6                     u2381:
  5238   0021B6  EFCA  F010         	goto	l3071
  5239   0021BA                     u2380:
  5240   0021BA                     
  5241                           ;color_instructions.c: 113:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5242   0021BA  0E05               	movlw	5
  5243   0021BC  6E2C               	movwf	(??_LightBlueInstructions+1)^0,c
  5244   0021BE  0E0F               	movlw	15
  5245   0021C0  6E2B               	movwf	??_LightBlueInstructions^0,c
  5246   0021C2  0EF1               	movlw	241
  5247   0021C4                     u4547:
  5248   0021C4  2EE8               	decfsz	wreg,f,c
  5249   0021C6  D7FE               	bra	u4547
  5250   0021C8  2E2B               	decfsz	??_LightBlueInstructions^0,f,c
  5251   0021CA  D7FC               	bra	u4547
  5252   0021CC  2E2C               	decfsz	(??_LightBlueInstructions+1)^0,f,c
  5253   0021CE  D7FA               	bra	u4547
  5254   0021D0  F000               	nop	
  5255   0021D2                     
  5256                           ;color_instructions.c: 115:     turnLeft135(mL, mR);
  5257   0021D2  C027  F022         	movff	LightBlueInstructions@mL,turnLeft135@mL
  5258   0021D6  C028  F023         	movff	LightBlueInstructions@mL+1,turnLeft135@mL+1
  5259   0021DA  C029  F024         	movff	LightBlueInstructions@mR,turnLeft135@mR
  5260   0021DE  C02A  F025         	movff	LightBlueInstructions@mR+1,turnLeft135@mR+1
  5261   0021E2  ECCD  F011         	call	_turnLeft135	;wreg free
  5262   0021E6  0012               	return		;funcret
  5263   0021E8                     __end_of_LightBlueInstructions:
  5264                           	callstack 0
  5265                           
  5266 ;; *************** function _turnLeft135 *****************
  5267 ;; Defined at:
  5268 ;;		line 253 in file "dc_motor.c"
  5269 ;; Parameters:    Size  Location     Type
  5270 ;;  mL              2   33[COMRAM] PTR struct DC_motor
  5271 ;;		 -> main@motorL(9), 
  5272 ;;  mR              2   35[COMRAM] PTR struct DC_motor
  5273 ;;		 -> main@motorR(9), 
  5274 ;; Auto vars:     Size  Location     Type
  5275 ;;  a               1   37[COMRAM] unsigned char 
  5276 ;; Return value:  Size  Location     Type
  5277 ;;                  1    wreg      void 
  5278 ;; Registers used:
  5279 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5280 ;; Tracked objects:
  5281 ;;		On entry : 0/0
  5282 ;;		On exit  : 0/0
  5283 ;;		Unchanged: 0/0
  5284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5285 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5286 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5288 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5289 ;;Total ram usage:        5 bytes
  5290 ;; Hardware stack levels used: 1
  5291 ;; Hardware stack levels required when called: 10
  5292 ;; This function calls:
  5293 ;;		_stop
  5294 ;;		_turnLeft
  5295 ;; This function is called by:
  5296 ;;		_LightBlueInstructions
  5297 ;; This function uses a non-reentrant model
  5298 ;;
  5299                           
  5300                           	psect	text20
  5301   00239A                     __ptext20:
  5302                           	callstack 0
  5303   00239A                     _turnLeft135:
  5304                           	callstack 17
  5305   00239A                     
  5306                           ;dc_motor.c: 255:     unsigned char a=0;
  5307   00239A  0E00               	movlw	0
  5308   00239C  6E26               	movwf	turnLeft135@a^0,c
  5309                           
  5310                           ;dc_motor.c: 256:     while(a<22){
  5311   00239E  EFDC  F011         	goto	l2901
  5312   0023A2                     l2897:
  5313                           
  5314                           ;dc_motor.c: 257:         turnLeft(mL, mR);
  5315   0023A2  C022  F01C         	movff	turnLeft135@mL,turnLeft@mL
  5316   0023A6  C023  F01D         	movff	turnLeft135@mL+1,turnLeft@mL+1
  5317   0023AA  C024  F01E         	movff	turnLeft135@mR,turnLeft@mR
  5318   0023AE  C025  F01F         	movff	turnLeft135@mR+1,turnLeft@mR+1
  5319   0023B2  EC85  F00C         	call	_turnLeft	;wreg free
  5320   0023B6                     
  5321                           ;dc_motor.c: 258:         a++;
  5322   0023B6  2A26               	incf	turnLeft135@a^0,f,c
  5323   0023B8                     l2901:
  5324                           
  5325                           ;dc_motor.c: 256:     while(a<22){
  5326   0023B8  0E15               	movlw	21
  5327   0023BA  6426               	cpfsgt	turnLeft135@a^0,c
  5328   0023BC  EFE2  F011         	goto	u2211
  5329   0023C0  EFE4  F011         	goto	u2210
  5330   0023C4                     u2211:
  5331   0023C4  EFD1  F011         	goto	l2897
  5332   0023C8                     u2210:
  5333   0023C8  EFF1  F011         	goto	l2907
  5334   0023CC                     l2903:
  5335                           
  5336                           ;dc_motor.c: 261:         stop(mL, mR);
  5337   0023CC  C022  F01C         	movff	turnLeft135@mL,stop@mL
  5338   0023D0  C023  F01D         	movff	turnLeft135@mL+1,stop@mL+1
  5339   0023D4  C024  F01E         	movff	turnLeft135@mR,stop@mR
  5340   0023D8  C025  F01F         	movff	turnLeft135@mR+1,stop@mR+1
  5341   0023DC  ECE8  F00D         	call	_stop	;wreg free
  5342   0023E0                     
  5343                           ;dc_motor.c: 262:         a--;
  5344   0023E0  0626               	decf	turnLeft135@a^0,f,c
  5345   0023E2                     l2907:
  5346                           
  5347                           ;dc_motor.c: 260:     while(a>0){
  5348   0023E2  5026               	movf	turnLeft135@a^0,w,c
  5349   0023E4  A4D8               	btfss	status,2,c
  5350   0023E6  EFF7  F011         	goto	u2221
  5351   0023EA  EFF9  F011         	goto	u2220
  5352   0023EE                     u2221:
  5353   0023EE  EFE6  F011         	goto	l2903
  5354   0023F2                     u2220:
  5355   0023F2  0012               	return		;funcret
  5356   0023F4                     __end_of_turnLeft135:
  5357                           	callstack 0
  5358                           
  5359 ;; *************** function _GreenInstructions *****************
  5360 ;; Defined at:
  5361 ;;		line 25 in file "color_instructions.c"
  5362 ;; Parameters:    Size  Location     Type
  5363 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  5364 ;;		 -> main@motorL(9), 
  5365 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  5366 ;;		 -> main@motorR(9), 
  5367 ;; Auto vars:     Size  Location     Type
  5368 ;;  a               1   44[COMRAM] unsigned char 
  5369 ;; Return value:  Size  Location     Type
  5370 ;;                  1    wreg      void 
  5371 ;; Registers used:
  5372 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5373 ;; Tracked objects:
  5374 ;;		On entry : 0/0
  5375 ;;		On exit  : 0/0
  5376 ;;		Unchanged: 0/0
  5377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5378 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5379 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5380 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5381 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5382 ;;Total ram usage:        7 bytes
  5383 ;; Hardware stack levels used: 1
  5384 ;; Hardware stack levels required when called: 11
  5385 ;; This function calls:
  5386 ;;		_fullSpeedBackwards
  5387 ;;		_stop
  5388 ;;		_turnLeft90
  5389 ;; This function is called by:
  5390 ;;		_MoveBuggy
  5391 ;; This function uses a non-reentrant model
  5392 ;;
  5393                           
  5394                           	psect	text21
  5395   0021E8                     __ptext21:
  5396                           	callstack 0
  5397   0021E8                     _GreenInstructions:
  5398                           	callstack 17
  5399   0021E8                     
  5400                           ;color_instructions.c: 26:     unsigned char a=0;
  5401   0021E8  0E00               	movlw	0
  5402   0021EA  6E2D               	movwf	GreenInstructions@a^0,c
  5403                           
  5404                           ;color_instructions.c: 27:     while (a<18){
  5405   0021EC  EF03  F011         	goto	l2997
  5406   0021F0                     l2993:
  5407                           
  5408                           ;color_instructions.c: 28:         fullSpeedBackwards(mL, mR);
  5409   0021F0  C027  F01C         	movff	GreenInstructions@mL,fullSpeedBackwards@mL
  5410   0021F4  C028  F01D         	movff	GreenInstructions@mL+1,fullSpeedBackwards@mL+1
  5411   0021F8  C029  F01E         	movff	GreenInstructions@mR,fullSpeedBackwards@mR
  5412   0021FC  C02A  F01F         	movff	GreenInstructions@mR+1,fullSpeedBackwards@mR+1
  5413   002200  ECFC  F00C         	call	_fullSpeedBackwards	;wreg free
  5414   002204                     
  5415                           ;color_instructions.c: 29:         a++;
  5416   002204  2A2D               	incf	GreenInstructions@a^0,f,c
  5417   002206                     l2997:
  5418                           
  5419                           ;color_instructions.c: 27:     while (a<18){
  5420   002206  0E11               	movlw	17
  5421   002208  642D               	cpfsgt	GreenInstructions@a^0,c
  5422   00220A  EF09  F011         	goto	u2291
  5423   00220E  EF0B  F011         	goto	u2290
  5424   002212                     u2291:
  5425   002212  EFF8  F010         	goto	l2993
  5426   002216                     u2290:
  5427   002216  EF18  F011         	goto	l3003
  5428   00221A                     l2999:
  5429                           
  5430                           ;color_instructions.c: 32:         stop(mL, mR);
  5431   00221A  C027  F01C         	movff	GreenInstructions@mL,stop@mL
  5432   00221E  C028  F01D         	movff	GreenInstructions@mL+1,stop@mL+1
  5433   002222  C029  F01E         	movff	GreenInstructions@mR,stop@mR
  5434   002226  C02A  F01F         	movff	GreenInstructions@mR+1,stop@mR+1
  5435   00222A  ECE8  F00D         	call	_stop	;wreg free
  5436   00222E                     
  5437                           ;color_instructions.c: 33:         a--;
  5438   00222E  062D               	decf	GreenInstructions@a^0,f,c
  5439   002230                     l3003:
  5440                           
  5441                           ;color_instructions.c: 31:     while (a>0){
  5442   002230  502D               	movf	GreenInstructions@a^0,w,c
  5443   002232  A4D8               	btfss	status,2,c
  5444   002234  EF1E  F011         	goto	u2301
  5445   002238  EF20  F011         	goto	u2300
  5446   00223C                     u2301:
  5447   00223C  EF0D  F011         	goto	l2999
  5448   002240                     u2300:
  5449   002240                     
  5450                           ;color_instructions.c: 35:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5451   002240  0E05               	movlw	5
  5452   002242  6E2C               	movwf	(??_GreenInstructions+1)^0,c
  5453   002244  0E0F               	movlw	15
  5454   002246  6E2B               	movwf	??_GreenInstructions^0,c
  5455   002248  0EF1               	movlw	241
  5456   00224A                     u4557:
  5457   00224A  2EE8               	decfsz	wreg,f,c
  5458   00224C  D7FE               	bra	u4557
  5459   00224E  2E2B               	decfsz	??_GreenInstructions^0,f,c
  5460   002250  D7FC               	bra	u4557
  5461   002252  2E2C               	decfsz	(??_GreenInstructions+1)^0,f,c
  5462   002254  D7FA               	bra	u4557
  5463   002256  F000               	nop	
  5464   002258                     
  5465                           ;color_instructions.c: 36:     turnLeft90(mL, mR);
  5466   002258  C027  F022         	movff	GreenInstructions@mL,turnLeft90@mL
  5467   00225C  C028  F023         	movff	GreenInstructions@mL+1,turnLeft90@mL+1
  5468   002260  C029  F024         	movff	GreenInstructions@mR,turnLeft90@mR
  5469   002264  C02A  F025         	movff	GreenInstructions@mR+1,turnLeft90@mR+1
  5470   002268  EC27  F012         	call	_turnLeft90	;wreg free
  5471   00226C  0012               	return		;funcret
  5472   00226E                     __end_of_GreenInstructions:
  5473                           	callstack 0
  5474                           
  5475 ;; *************** function _AppendMoves *****************
  5476 ;; Defined at:
  5477 ;;		line 17 in file "Memorization.c"
  5478 ;; Parameters:    Size  Location     Type
  5479 ;;  temp            1    wreg     unsigned char 
  5480 ;;  moves_index     2    8[COMRAM] PTR unsigned char 
  5481 ;;		 -> moves_index(1), 
  5482 ;;  anti_moves_a    2   10[COMRAM] PTR unsigned char 
  5483 ;;		 -> anti_moves_array(40), 
  5484 ;; Auto vars:     Size  Location     Type
  5485 ;;  temp            1   13[COMRAM] unsigned char 
  5486 ;; Return value:  Size  Location     Type
  5487 ;;                  1    wreg      void 
  5488 ;; Registers used:
  5489 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5490 ;; Tracked objects:
  5491 ;;		On entry : 0/0
  5492 ;;		On exit  : 0/0
  5493 ;;		Unchanged: 0/0
  5494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5495 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5496 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5497 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5498 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5499 ;;Total ram usage:        6 bytes
  5500 ;; Hardware stack levels used: 1
  5501 ;; Hardware stack levels required when called: 7
  5502 ;; This function calls:
  5503 ;;		Nothing
  5504 ;; This function is called by:
  5505 ;;		_MoveBuggy
  5506 ;; This function uses a non-reentrant model
  5507 ;;
  5508                           
  5509                           	psect	text22
  5510   00284E                     __ptext22:
  5511                           	callstack 0
  5512   00284E                     _AppendMoves:
  5513                           	callstack 21
  5514                           
  5515                           ;incstack = 0
  5516                           ;AppendMoves@temp stored from wreg
  5517   00284E  6E0E               	movwf	AppendMoves@temp^0,c
  5518   002850                     
  5519                           ;Memorization.c: 19:     anti_moves_array[(*moves_index)++] = temp;
  5520   002850  C009  FFD9         	movff	AppendMoves@moves_index,fsr2l
  5521   002854  C00A  FFDA         	movff	AppendMoves@moves_index+1,fsr2h
  5522   002858  CFDF F00D          	movff	indf2,??_AppendMoves
  5523   00285C  0E01               	movlw	1
  5524   00285E  26DF               	addwf	indf2,f,c
  5525   002860  500D               	movf	??_AppendMoves^0,w,c
  5526   002862  240B               	addwf	AppendMoves@anti_moves_array^0,w,c
  5527   002864  6ED9               	movwf	fsr2l,c
  5528   002866  0E00               	movlw	0
  5529   002868  200C               	addwfc	(AppendMoves@anti_moves_array+1)^0,w,c
  5530   00286A  6EDA               	movwf	fsr2h,c
  5531   00286C  C00E  FFDF         	movff	AppendMoves@temp,indf2
  5532   002870  0012               	return		;funcret
  5533   002872                     __end_of_AppendMoves:
  5534                           	callstack 0
  5535                           
  5536 ;; *************** function _AntiYellow *****************
  5537 ;; Defined at:
  5538 ;;		line 118 in file "color_instructions.c"
  5539 ;; Parameters:    Size  Location     Type
  5540 ;;  mL              2   45[COMRAM] PTR struct DC_motor
  5541 ;;		 -> main@motorL(9), 
  5542 ;;  mR              2   47[COMRAM] PTR struct DC_motor
  5543 ;;		 -> main@motorR(9), 
  5544 ;; Auto vars:     Size  Location     Type
  5545 ;;  a               1   51[COMRAM] unsigned char 
  5546 ;; Return value:  Size  Location     Type
  5547 ;;                  1    wreg      void 
  5548 ;; Registers used:
  5549 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5550 ;; Tracked objects:
  5551 ;;		On entry : 0/0
  5552 ;;		On exit  : 0/0
  5553 ;;		Unchanged: 0/0
  5554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5555 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5556 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5557 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5558 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5559 ;;Total ram usage:        7 bytes
  5560 ;; Hardware stack levels used: 1
  5561 ;; Hardware stack levels required when called: 12
  5562 ;; This function calls:
  5563 ;;		_BlueInstructions
  5564 ;;		_fullSpeedAhead
  5565 ;;		_stop
  5566 ;;		_turnRight90
  5567 ;; This function is called by:
  5568 ;;		_MoveBuggy
  5569 ;; This function uses a non-reentrant model
  5570 ;;
  5571                           
  5572                           	psect	text23
  5573   001CA4                     __ptext23:
  5574                           	callstack 0
  5575   001CA4                     _AntiYellow:
  5576                           	callstack 16
  5577   001CA4                     
  5578                           ;color_instructions.c: 119:     unsigned char a=0;
  5579   001CA4  0E00               	movlw	0
  5580   001CA6  6E34               	movwf	AntiYellow@a^0,c
  5581   001CA8                     
  5582                           ;color_instructions.c: 121:     turnRight90(mL, mR);
  5583   001CA8  C02E  F022         	movff	AntiYellow@mL,turnRight90@mL
  5584   001CAC  C02F  F023         	movff	AntiYellow@mL+1,turnRight90@mL+1
  5585   001CB0  C030  F024         	movff	AntiYellow@mR,turnRight90@mR
  5586   001CB4  C031  F025         	movff	AntiYellow@mR+1,turnRight90@mR+1
  5587   001CB8  ECFA  F011         	call	_turnRight90	;wreg free
  5588   001CBC                     
  5589                           ;color_instructions.c: 122:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5590   001CBC  0E05               	movlw	5
  5591   001CBE  6E33               	movwf	(??_AntiYellow+1)^0,c
  5592   001CC0  0E0F               	movlw	15
  5593   001CC2  6E32               	movwf	??_AntiYellow^0,c
  5594   001CC4  0EF1               	movlw	241
  5595   001CC6                     u4567:
  5596   001CC6  2EE8               	decfsz	wreg,f,c
  5597   001CC8  D7FE               	bra	u4567
  5598   001CCA  2E32               	decfsz	??_AntiYellow^0,f,c
  5599   001CCC  D7FC               	bra	u4567
  5600   001CCE  2E33               	decfsz	(??_AntiYellow+1)^0,f,c
  5601   001CD0  D7FA               	bra	u4567
  5602   001CD2  F000               	nop	
  5603                           
  5604                           ;color_instructions.c: 124:     while (a<40){
  5605   001CD4  EF77  F00E         	goto	l3091
  5606   001CD8                     l3087:
  5607                           
  5608                           ;color_instructions.c: 125:         fullSpeedAhead(mL, mR);
  5609   001CD8  C02E  F01C         	movff	AntiYellow@mL,fullSpeedAhead@mL
  5610   001CDC  C02F  F01D         	movff	AntiYellow@mL+1,fullSpeedAhead@mL+1
  5611   001CE0  C030  F01E         	movff	AntiYellow@mR,fullSpeedAhead@mR
  5612   001CE4  C031  F01F         	movff	AntiYellow@mR+1,fullSpeedAhead@mR+1
  5613   001CE8  EC0E  F00C         	call	_fullSpeedAhead	;wreg free
  5614   001CEC                     
  5615                           ;color_instructions.c: 126:         a++;
  5616   001CEC  2A34               	incf	AntiYellow@a^0,f,c
  5617   001CEE                     l3091:
  5618                           
  5619                           ;color_instructions.c: 124:     while (a<40){
  5620   001CEE  0E27               	movlw	39
  5621   001CF0  6434               	cpfsgt	AntiYellow@a^0,c
  5622   001CF2  EF7D  F00E         	goto	u2391
  5623   001CF6  EF7F  F00E         	goto	u2390
  5624   001CFA                     u2391:
  5625   001CFA  EF6C  F00E         	goto	l3087
  5626   001CFE                     u2390:
  5627   001CFE  EF8C  F00E         	goto	l3097
  5628   001D02                     l3093:
  5629                           
  5630                           ;color_instructions.c: 129:         stop(mL, mR);
  5631   001D02  C02E  F01C         	movff	AntiYellow@mL,stop@mL
  5632   001D06  C02F  F01D         	movff	AntiYellow@mL+1,stop@mL+1
  5633   001D0A  C030  F01E         	movff	AntiYellow@mR,stop@mR
  5634   001D0E  C031  F01F         	movff	AntiYellow@mR+1,stop@mR+1
  5635   001D12  ECE8  F00D         	call	_stop	;wreg free
  5636   001D16                     
  5637                           ;color_instructions.c: 130:         a--;
  5638   001D16  0634               	decf	AntiYellow@a^0,f,c
  5639   001D18                     l3097:
  5640                           
  5641                           ;color_instructions.c: 128:     while (a>0){
  5642   001D18  5034               	movf	AntiYellow@a^0,w,c
  5643   001D1A  A4D8               	btfss	status,2,c
  5644   001D1C  EF92  F00E         	goto	u2401
  5645   001D20  EF94  F00E         	goto	u2400
  5646   001D24                     u2401:
  5647   001D24  EF81  F00E         	goto	l3093
  5648   001D28                     u2400:
  5649   001D28                     
  5650                           ;color_instructions.c: 132:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5651   001D28  0E05               	movlw	5
  5652   001D2A  6E33               	movwf	(??_AntiYellow+1)^0,c
  5653   001D2C  0E0F               	movlw	15
  5654   001D2E  6E32               	movwf	??_AntiYellow^0,c
  5655   001D30  0EF1               	movlw	241
  5656   001D32                     u4577:
  5657   001D32  2EE8               	decfsz	wreg,f,c
  5658   001D34  D7FE               	bra	u4577
  5659   001D36  2E32               	decfsz	??_AntiYellow^0,f,c
  5660   001D38  D7FC               	bra	u4577
  5661   001D3A  2E33               	decfsz	(??_AntiYellow+1)^0,f,c
  5662   001D3C  D7FA               	bra	u4577
  5663   001D3E  F000               	nop	
  5664   001D40                     
  5665                           ;color_instructions.c: 134:     BlueInstructions(mL, mR);
  5666   001D40  C02E  F027         	movff	AntiYellow@mL,BlueInstructions@mL
  5667   001D44  C02F  F028         	movff	AntiYellow@mL+1,BlueInstructions@mL+1
  5668   001D48  C030  F029         	movff	AntiYellow@mR,BlueInstructions@mR
  5669   001D4C  C031  F02A         	movff	AntiYellow@mR+1,BlueInstructions@mR+1
  5670   001D50  EC04  F00F         	call	_BlueInstructions	;wreg free
  5671   001D54  0012               	return		;funcret
  5672   001D56                     __end_of_AntiYellow:
  5673                           	callstack 0
  5674                           
  5675 ;; *************** function _turnRight90 *****************
  5676 ;; Defined at:
  5677 ;;		line 213 in file "dc_motor.c"
  5678 ;; Parameters:    Size  Location     Type
  5679 ;;  mL              2   33[COMRAM] PTR struct DC_motor
  5680 ;;		 -> main@motorL(9), 
  5681 ;;  mR              2   35[COMRAM] PTR struct DC_motor
  5682 ;;		 -> main@motorR(9), 
  5683 ;; Auto vars:     Size  Location     Type
  5684 ;;  a               1   37[COMRAM] unsigned char 
  5685 ;; Return value:  Size  Location     Type
  5686 ;;                  1    wreg      void 
  5687 ;; Registers used:
  5688 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5689 ;; Tracked objects:
  5690 ;;		On entry : 0/0
  5691 ;;		On exit  : 0/0
  5692 ;;		Unchanged: 0/0
  5693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5694 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5695 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5697 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5698 ;;Total ram usage:        5 bytes
  5699 ;; Hardware stack levels used: 1
  5700 ;; Hardware stack levels required when called: 10
  5701 ;; This function calls:
  5702 ;;		_stop
  5703 ;;		_turnRight
  5704 ;; This function is called by:
  5705 ;;		_RedInstructions
  5706 ;;		_YellowInstructions
  5707 ;;		_AntiYellow
  5708 ;; This function uses a non-reentrant model
  5709 ;;
  5710                           
  5711                           	psect	text24
  5712   0023F4                     __ptext24:
  5713                           	callstack 0
  5714   0023F4                     _turnRight90:
  5715                           	callstack 17
  5716   0023F4                     
  5717                           ;dc_motor.c: 215:     unsigned char a=0;
  5718   0023F4  0E00               	movlw	0
  5719   0023F6  6E26               	movwf	turnRight90@a^0,c
  5720                           
  5721                           ;dc_motor.c: 216:     while(a<19){
  5722   0023F8  EF09  F012         	goto	l2873
  5723   0023FC                     l2869:
  5724                           
  5725                           ;dc_motor.c: 217:         turnRight(mL, mR);
  5726   0023FC  C022  F01C         	movff	turnRight90@mL,turnRight@mL
  5727   002400  C023  F01D         	movff	turnRight90@mL+1,turnRight@mL+1
  5728   002404  C024  F01E         	movff	turnRight90@mR,turnRight@mR
  5729   002408  C025  F01F         	movff	turnRight90@mR+1,turnRight@mR+1
  5730   00240C  EC97  F00B         	call	_turnRight	;wreg free
  5731   002410                     
  5732                           ;dc_motor.c: 218:         a++;
  5733   002410  2A26               	incf	turnRight90@a^0,f,c
  5734   002412                     l2873:
  5735                           
  5736                           ;dc_motor.c: 216:     while(a<19){
  5737   002412  0E12               	movlw	18
  5738   002414  6426               	cpfsgt	turnRight90@a^0,c
  5739   002416  EF0F  F012         	goto	u2171
  5740   00241A  EF11  F012         	goto	u2170
  5741   00241E                     u2171:
  5742   00241E  EFFE  F011         	goto	l2869
  5743   002422                     u2170:
  5744   002422  EF1E  F012         	goto	l2879
  5745   002426                     l2875:
  5746                           
  5747                           ;dc_motor.c: 221:         stop(mL, mR);
  5748   002426  C022  F01C         	movff	turnRight90@mL,stop@mL
  5749   00242A  C023  F01D         	movff	turnRight90@mL+1,stop@mL+1
  5750   00242E  C024  F01E         	movff	turnRight90@mR,stop@mR
  5751   002432  C025  F01F         	movff	turnRight90@mR+1,stop@mR+1
  5752   002436  ECE8  F00D         	call	_stop	;wreg free
  5753   00243A                     
  5754                           ;dc_motor.c: 222:         a--;
  5755   00243A  0626               	decf	turnRight90@a^0,f,c
  5756   00243C                     l2879:
  5757                           
  5758                           ;dc_motor.c: 220:     while(a>0){
  5759   00243C  5026               	movf	turnRight90@a^0,w,c
  5760   00243E  A4D8               	btfss	status,2,c
  5761   002440  EF24  F012         	goto	u2181
  5762   002444  EF26  F012         	goto	u2180
  5763   002448                     u2181:
  5764   002448  EF13  F012         	goto	l2875
  5765   00244C                     u2180:
  5766   00244C  0012               	return		;funcret
  5767   00244E                     __end_of_turnRight90:
  5768                           	callstack 0
  5769                           
  5770 ;; *************** function _turnRight *****************
  5771 ;; Defined at:
  5772 ;;		line 129 in file "dc_motor.c"
  5773 ;; Parameters:    Size  Location     Type
  5774 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  5775 ;;		 -> main@motorL(9), 
  5776 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  5777 ;;		 -> main@motorR(9), 
  5778 ;; Auto vars:     Size  Location     Type
  5779 ;;		None
  5780 ;; Return value:  Size  Location     Type
  5781 ;;                  1    wreg      void 
  5782 ;; Registers used:
  5783 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5784 ;; Tracked objects:
  5785 ;;		On entry : 0/0
  5786 ;;		On exit  : 0/0
  5787 ;;		Unchanged: 0/0
  5788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5789 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5791 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5792 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5793 ;;Total ram usage:        6 bytes
  5794 ;; Hardware stack levels used: 1
  5795 ;; Hardware stack levels required when called: 9
  5796 ;; This function calls:
  5797 ;;		_setMotorPWM
  5798 ;; This function is called by:
  5799 ;;		_turnRight90
  5800 ;;		_turnRight135
  5801 ;;		_turn180
  5802 ;; This function uses a non-reentrant model
  5803 ;;
  5804                           
  5805                           	psect	text25
  5806   00172E                     __ptext25:
  5807                           	callstack 0
  5808   00172E                     _turnRight:
  5809                           	callstack 17
  5810   00172E                     
  5811                           ;dc_motor.c: 129: void turnRight(DC_motor *mL, DC_motor *mR);dc_motor.c: 130: {;dc_motor
      +                          .c: 132:     mL->direction = 1;
  5812   00172E  EE20 F001          	lfsr	2,1
  5813   001732  501C               	movf	turnRight@mL^0,w,c
  5814   001734  26D9               	addwf	fsr2l,f,c
  5815   001736  501D               	movf	(turnRight@mL+1)^0,w,c
  5816   001738  22DA               	addwfc	fsr2h,f,c
  5817   00173A  0E01               	movlw	1
  5818   00173C  6EDF               	movwf	indf2,c
  5819                           
  5820                           ;dc_motor.c: 133:     mL->brakemode = 0;
  5821   00173E  EE20 F002          	lfsr	2,2
  5822   001742  501C               	movf	turnRight@mL^0,w,c
  5823   001744  26D9               	addwf	fsr2l,f,c
  5824   001746  501D               	movf	(turnRight@mL+1)^0,w,c
  5825   001748  22DA               	addwfc	fsr2h,f,c
  5826   00174A  0E00               	movlw	0
  5827   00174C  6EDF               	movwf	indf2,c
  5828                           
  5829                           ;dc_motor.c: 135:     mR->direction = 0;
  5830   00174E  EE20 F001          	lfsr	2,1
  5831   001752  501E               	movf	turnRight@mR^0,w,c
  5832   001754  26D9               	addwf	fsr2l,f,c
  5833   001756  501F               	movf	(turnRight@mR+1)^0,w,c
  5834   001758  22DA               	addwfc	fsr2h,f,c
  5835   00175A  0E00               	movlw	0
  5836   00175C  6EDF               	movwf	indf2,c
  5837                           
  5838                           ;dc_motor.c: 136:     mR->brakemode = 0;
  5839   00175E  EE20 F002          	lfsr	2,2
  5840   001762  501E               	movf	turnRight@mR^0,w,c
  5841   001764  26D9               	addwf	fsr2l,f,c
  5842   001766  501F               	movf	(turnRight@mR+1)^0,w,c
  5843   001768  22DA               	addwfc	fsr2h,f,c
  5844   00176A  0E00               	movlw	0
  5845   00176C  6EDF               	movwf	indf2,c
  5846                           
  5847                           ;dc_motor.c: 139:     if(mL->power>75){mL->power=75;}
  5848   00176E  C01C  FFD9         	movff	turnRight@mL,fsr2l
  5849   001772  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  5850   001776  50DF               	movf	indf2,w,c
  5851   001778  0A80               	xorlw	128
  5852   00177A  0F34               	addlw	-204
  5853   00177C  A0D8               	btfss	status,0,c
  5854   00177E  EFC3  F00B         	goto	u2071
  5855   001782  EFC5  F00B         	goto	u2070
  5856   001786                     u2071:
  5857   001786  EFCB  F00B         	goto	l2797
  5858   00178A                     u2070:
  5859   00178A  C01C  FFD9         	movff	turnRight@mL,fsr2l
  5860   00178E  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  5861   001792  0E4B               	movlw	75
  5862   001794  6EDF               	movwf	indf2,c
  5863   001796                     l2797:
  5864                           
  5865                           ;dc_motor.c: 140:     if(mR->power>75){mR->power=75;}
  5866   001796  C01E  FFD9         	movff	turnRight@mR,fsr2l
  5867   00179A  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  5868   00179E  50DF               	movf	indf2,w,c
  5869   0017A0  0A80               	xorlw	128
  5870   0017A2  0F34               	addlw	-204
  5871   0017A4  A0D8               	btfss	status,0,c
  5872   0017A6  EFD7  F00B         	goto	u2081
  5873   0017AA  EFD9  F00B         	goto	u2080
  5874   0017AE                     u2081:
  5875   0017AE  EFDF  F00B         	goto	l2801
  5876   0017B2                     u2080:
  5877   0017B2  C01E  FFD9         	movff	turnRight@mR,fsr2l
  5878   0017B6  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  5879   0017BA  0E4B               	movlw	75
  5880   0017BC  6EDF               	movwf	indf2,c
  5881   0017BE                     l2801:
  5882                           
  5883                           ;dc_motor.c: 142:     mL->power = mL->power + 5 ;
  5884   0017BE  C01C  FFD9         	movff	turnRight@mL,fsr2l
  5885   0017C2  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  5886   0017C6  50DF               	movf	indf2,w,c
  5887   0017C8  0F05               	addlw	5
  5888   0017CA  C01C  FFD9         	movff	turnRight@mL,fsr2l
  5889   0017CE  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  5890   0017D2  6EDF               	movwf	indf2,c
  5891   0017D4                     
  5892                           ;dc_motor.c: 143:     mR->power = mR->power + 5;
  5893   0017D4  C01E  FFD9         	movff	turnRight@mR,fsr2l
  5894   0017D8  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  5895   0017DC  50DF               	movf	indf2,w,c
  5896   0017DE  0F05               	addlw	5
  5897   0017E0  C01E  FFD9         	movff	turnRight@mR,fsr2l
  5898   0017E4  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  5899   0017E8  6EDF               	movwf	indf2,c
  5900   0017EA                     
  5901                           ;dc_motor.c: 145:     setMotorPWM(mL);
  5902   0017EA  C01C  F016         	movff	turnRight@mL,setMotorPWM@m
  5903   0017EE  C01D  F017         	movff	turnRight@mL+1,setMotorPWM@m+1
  5904   0017F2  EC5D  F00A         	call	_setMotorPWM	;wreg free
  5905   0017F6                     
  5906                           ;dc_motor.c: 146:     setMotorPWM(mR);
  5907   0017F6  C01E  F016         	movff	turnRight@mR,setMotorPWM@m
  5908   0017FA  C01F  F017         	movff	turnRight@mR+1,setMotorPWM@m+1
  5909   0017FE  EC5D  F00A         	call	_setMotorPWM	;wreg free
  5910   001802                     
  5911                           ;dc_motor.c: 147:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5912   001802  0E05               	movlw	5
  5913   001804  6E21               	movwf	(??_turnRight+1)^0,c
  5914   001806  0E0F               	movlw	15
  5915   001808  6E20               	movwf	??_turnRight^0,c
  5916   00180A  0EF1               	movlw	241
  5917   00180C                     u4587:
  5918   00180C  2EE8               	decfsz	wreg,f,c
  5919   00180E  D7FE               	bra	u4587
  5920   001810  2E20               	decfsz	??_turnRight^0,f,c
  5921   001812  D7FC               	bra	u4587
  5922   001814  2E21               	decfsz	(??_turnRight+1)^0,f,c
  5923   001816  D7FA               	bra	u4587
  5924   001818  F000               	nop	
  5925   00181A  0012               	return		;funcret
  5926   00181C                     __end_of_turnRight:
  5927                           	callstack 0
  5928                           
  5929 ;; *************** function _AntiPink *****************
  5930 ;; Defined at:
  5931 ;;		line 137 in file "color_instructions.c"
  5932 ;; Parameters:    Size  Location     Type
  5933 ;;  mL              2   45[COMRAM] PTR struct DC_motor
  5934 ;;		 -> main@motorL(9), 
  5935 ;;  mR              2   47[COMRAM] PTR struct DC_motor
  5936 ;;		 -> main@motorR(9), 
  5937 ;; Auto vars:     Size  Location     Type
  5938 ;;  a               1   51[COMRAM] unsigned char 
  5939 ;; Return value:  Size  Location     Type
  5940 ;;                  1    wreg      void 
  5941 ;; Registers used:
  5942 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5943 ;; Tracked objects:
  5944 ;;		On entry : 0/0
  5945 ;;		On exit  : 0/0
  5946 ;;		Unchanged: 0/0
  5947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5948 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5949 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5950 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5951 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5952 ;;Total ram usage:        7 bytes
  5953 ;; Hardware stack levels used: 1
  5954 ;; Hardware stack levels required when called: 12
  5955 ;; This function calls:
  5956 ;;		_BlueInstructions
  5957 ;;		_fullSpeedAhead
  5958 ;;		_stop
  5959 ;;		_turnLeft90
  5960 ;; This function is called by:
  5961 ;;		_MoveBuggy
  5962 ;; This function uses a non-reentrant model
  5963 ;;
  5964                           
  5965                           	psect	text26
  5966   001D56                     __ptext26:
  5967                           	callstack 0
  5968   001D56                     _AntiPink:
  5969                           	callstack 16
  5970   001D56                     
  5971                           ;color_instructions.c: 138:     unsigned char a=0;
  5972   001D56  0E00               	movlw	0
  5973   001D58  6E34               	movwf	AntiPink@a^0,c
  5974   001D5A                     
  5975                           ;color_instructions.c: 140:     turnLeft90(mL, mR);
  5976   001D5A  C02E  F022         	movff	AntiPink@mL,turnLeft90@mL
  5977   001D5E  C02F  F023         	movff	AntiPink@mL+1,turnLeft90@mL+1
  5978   001D62  C030  F024         	movff	AntiPink@mR,turnLeft90@mR
  5979   001D66  C031  F025         	movff	AntiPink@mR+1,turnLeft90@mR+1
  5980   001D6A  EC27  F012         	call	_turnLeft90	;wreg free
  5981   001D6E                     
  5982                           ;color_instructions.c: 141:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5983   001D6E  0E05               	movlw	5
  5984   001D70  6E33               	movwf	(??_AntiPink+1)^0,c
  5985   001D72  0E0F               	movlw	15
  5986   001D74  6E32               	movwf	??_AntiPink^0,c
  5987   001D76  0EF1               	movlw	241
  5988   001D78                     u4597:
  5989   001D78  2EE8               	decfsz	wreg,f,c
  5990   001D7A  D7FE               	bra	u4597
  5991   001D7C  2E32               	decfsz	??_AntiPink^0,f,c
  5992   001D7E  D7FC               	bra	u4597
  5993   001D80  2E33               	decfsz	(??_AntiPink+1)^0,f,c
  5994   001D82  D7FA               	bra	u4597
  5995   001D84  F000               	nop	
  5996                           
  5997                           ;color_instructions.c: 143:     while (a<40){
  5998   001D86  EFD0  F00E         	goto	l3113
  5999   001D8A                     l3109:
  6000                           
  6001                           ;color_instructions.c: 144:         fullSpeedAhead(mL, mR);
  6002   001D8A  C02E  F01C         	movff	AntiPink@mL,fullSpeedAhead@mL
  6003   001D8E  C02F  F01D         	movff	AntiPink@mL+1,fullSpeedAhead@mL+1
  6004   001D92  C030  F01E         	movff	AntiPink@mR,fullSpeedAhead@mR
  6005   001D96  C031  F01F         	movff	AntiPink@mR+1,fullSpeedAhead@mR+1
  6006   001D9A  EC0E  F00C         	call	_fullSpeedAhead	;wreg free
  6007   001D9E                     
  6008                           ;color_instructions.c: 145:         a++;
  6009   001D9E  2A34               	incf	AntiPink@a^0,f,c
  6010   001DA0                     l3113:
  6011                           
  6012                           ;color_instructions.c: 143:     while (a<40){
  6013   001DA0  0E27               	movlw	39
  6014   001DA2  6434               	cpfsgt	AntiPink@a^0,c
  6015   001DA4  EFD6  F00E         	goto	u2411
  6016   001DA8  EFD8  F00E         	goto	u2410
  6017   001DAC                     u2411:
  6018   001DAC  EFC5  F00E         	goto	l3109
  6019   001DB0                     u2410:
  6020   001DB0  EFE5  F00E         	goto	l3119
  6021   001DB4                     l3115:
  6022                           
  6023                           ;color_instructions.c: 148:         stop(mL, mR);
  6024   001DB4  C02E  F01C         	movff	AntiPink@mL,stop@mL
  6025   001DB8  C02F  F01D         	movff	AntiPink@mL+1,stop@mL+1
  6026   001DBC  C030  F01E         	movff	AntiPink@mR,stop@mR
  6027   001DC0  C031  F01F         	movff	AntiPink@mR+1,stop@mR+1
  6028   001DC4  ECE8  F00D         	call	_stop	;wreg free
  6029   001DC8                     
  6030                           ;color_instructions.c: 149:         a--;
  6031   001DC8  0634               	decf	AntiPink@a^0,f,c
  6032   001DCA                     l3119:
  6033                           
  6034                           ;color_instructions.c: 147:     while (a>0){
  6035   001DCA  5034               	movf	AntiPink@a^0,w,c
  6036   001DCC  A4D8               	btfss	status,2,c
  6037   001DCE  EFEB  F00E         	goto	u2421
  6038   001DD2  EFED  F00E         	goto	u2420
  6039   001DD6                     u2421:
  6040   001DD6  EFDA  F00E         	goto	l3115
  6041   001DDA                     u2420:
  6042   001DDA                     
  6043                           ;color_instructions.c: 151:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6044   001DDA  0E05               	movlw	5
  6045   001DDC  6E33               	movwf	(??_AntiPink+1)^0,c
  6046   001DDE  0E0F               	movlw	15
  6047   001DE0  6E32               	movwf	??_AntiPink^0,c
  6048   001DE2  0EF1               	movlw	241
  6049   001DE4                     u4607:
  6050   001DE4  2EE8               	decfsz	wreg,f,c
  6051   001DE6  D7FE               	bra	u4607
  6052   001DE8  2E32               	decfsz	??_AntiPink^0,f,c
  6053   001DEA  D7FC               	bra	u4607
  6054   001DEC  2E33               	decfsz	(??_AntiPink+1)^0,f,c
  6055   001DEE  D7FA               	bra	u4607
  6056   001DF0  F000               	nop	
  6057   001DF2                     
  6058                           ;color_instructions.c: 153:     BlueInstructions(mL, mR);
  6059   001DF2  C02E  F027         	movff	AntiPink@mL,BlueInstructions@mL
  6060   001DF6  C02F  F028         	movff	AntiPink@mL+1,BlueInstructions@mL+1
  6061   001DFA  C030  F029         	movff	AntiPink@mR,BlueInstructions@mR
  6062   001DFE  C031  F02A         	movff	AntiPink@mR+1,BlueInstructions@mR+1
  6063   001E02  EC04  F00F         	call	_BlueInstructions	;wreg free
  6064   001E06  0012               	return		;funcret
  6065   001E08                     __end_of_AntiPink:
  6066                           	callstack 0
  6067                           
  6068 ;; *************** function _fullSpeedAhead *****************
  6069 ;; Defined at:
  6070 ;;		line 151 in file "dc_motor.c"
  6071 ;; Parameters:    Size  Location     Type
  6072 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6073 ;;		 -> main@motorL(9), 
  6074 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6075 ;;		 -> main@motorR(9), 
  6076 ;; Auto vars:     Size  Location     Type
  6077 ;;		None
  6078 ;; Return value:  Size  Location     Type
  6079 ;;                  1    wreg      void 
  6080 ;; Registers used:
  6081 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6082 ;; Tracked objects:
  6083 ;;		On entry : 0/0
  6084 ;;		On exit  : 0/0
  6085 ;;		Unchanged: 0/0
  6086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6087 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6089 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6090 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6091 ;;Total ram usage:        6 bytes
  6092 ;; Hardware stack levels used: 1
  6093 ;; Hardware stack levels required when called: 9
  6094 ;; This function calls:
  6095 ;;		_setMotorPWM
  6096 ;; This function is called by:
  6097 ;;		_main
  6098 ;;		_AntiYellow
  6099 ;;		_AntiPink
  6100 ;;		_WhiteInstructions
  6101 ;; This function uses a non-reentrant model
  6102 ;;
  6103                           
  6104                           	psect	text27
  6105   00181C                     __ptext27:
  6106                           	callstack 0
  6107   00181C                     _fullSpeedAhead:
  6108                           	callstack 21
  6109   00181C                     
  6110                           ;dc_motor.c: 151: void fullSpeedAhead(DC_motor *mL, DC_motor *mR);dc_motor.c: 152: {;dc_
      +                          motor.c: 154:     mL->direction = 1;
  6111   00181C  EE20 F001          	lfsr	2,1
  6112   001820  501C               	movf	fullSpeedAhead@mL^0,w,c
  6113   001822  26D9               	addwf	fsr2l,f,c
  6114   001824  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  6115   001826  22DA               	addwfc	fsr2h,f,c
  6116   001828  0E01               	movlw	1
  6117   00182A  6EDF               	movwf	indf2,c
  6118                           
  6119                           ;dc_motor.c: 155:     mL->brakemode = 0;
  6120   00182C  EE20 F002          	lfsr	2,2
  6121   001830  501C               	movf	fullSpeedAhead@mL^0,w,c
  6122   001832  26D9               	addwf	fsr2l,f,c
  6123   001834  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  6124   001836  22DA               	addwfc	fsr2h,f,c
  6125   001838  0E00               	movlw	0
  6126   00183A  6EDF               	movwf	indf2,c
  6127                           
  6128                           ;dc_motor.c: 157:     mR->direction = 1;
  6129   00183C  EE20 F001          	lfsr	2,1
  6130   001840  501E               	movf	fullSpeedAhead@mR^0,w,c
  6131   001842  26D9               	addwf	fsr2l,f,c
  6132   001844  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  6133   001846  22DA               	addwfc	fsr2h,f,c
  6134   001848  0E01               	movlw	1
  6135   00184A  6EDF               	movwf	indf2,c
  6136                           
  6137                           ;dc_motor.c: 158:     mR->brakemode = 0;
  6138   00184C  EE20 F002          	lfsr	2,2
  6139   001850  501E               	movf	fullSpeedAhead@mR^0,w,c
  6140   001852  26D9               	addwf	fsr2l,f,c
  6141   001854  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  6142   001856  22DA               	addwfc	fsr2h,f,c
  6143   001858  0E00               	movlw	0
  6144   00185A  6EDF               	movwf	indf2,c
  6145                           
  6146                           ;dc_motor.c: 162:     if(mL->power>35){mL->power=35;}
  6147   00185C  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  6148   001860  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  6149   001864  50DF               	movf	indf2,w,c
  6150   001866  0A80               	xorlw	128
  6151   001868  0F5C               	addlw	-164
  6152   00186A  A0D8               	btfss	status,0,c
  6153   00186C  EF3A  F00C         	goto	u2151
  6154   001870  EF3C  F00C         	goto	u2150
  6155   001874                     u2151:
  6156   001874  EF42  F00C         	goto	l2853
  6157   001878                     u2150:
  6158   001878  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  6159   00187C  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  6160   001880  0E23               	movlw	35
  6161   001882  6EDF               	movwf	indf2,c
  6162   001884                     l2853:
  6163                           
  6164                           ;dc_motor.c: 163:     if(mR->power>46){mR->power=46;}
  6165   001884  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  6166   001888  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  6167   00188C  50DF               	movf	indf2,w,c
  6168   00188E  0A80               	xorlw	128
  6169   001890  0F51               	addlw	-175
  6170   001892  A0D8               	btfss	status,0,c
  6171   001894  EF4E  F00C         	goto	u2161
  6172   001898  EF50  F00C         	goto	u2160
  6173   00189C                     u2161:
  6174   00189C  EF56  F00C         	goto	l2857
  6175   0018A0                     u2160:
  6176   0018A0  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  6177   0018A4  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  6178   0018A8  0E2E               	movlw	46
  6179   0018AA  6EDF               	movwf	indf2,c
  6180   0018AC                     l2857:
  6181                           
  6182                           ;dc_motor.c: 165:     mL->power = mL->power + 5 ;
  6183   0018AC  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  6184   0018B0  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  6185   0018B4  50DF               	movf	indf2,w,c
  6186   0018B6  0F05               	addlw	5
  6187   0018B8  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  6188   0018BC  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  6189   0018C0  6EDF               	movwf	indf2,c
  6190   0018C2                     
  6191                           ;dc_motor.c: 166:     mR->power = mR->power + 8;
  6192   0018C2  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  6193   0018C6  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  6194   0018CA  50DF               	movf	indf2,w,c
  6195   0018CC  0F08               	addlw	8
  6196   0018CE  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  6197   0018D2  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  6198   0018D6  6EDF               	movwf	indf2,c
  6199   0018D8                     
  6200                           ;dc_motor.c: 168:     setMotorPWM(mL);
  6201   0018D8  C01C  F016         	movff	fullSpeedAhead@mL,setMotorPWM@m
  6202   0018DC  C01D  F017         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  6203   0018E0  EC5D  F00A         	call	_setMotorPWM	;wreg free
  6204   0018E4                     
  6205                           ;dc_motor.c: 169:     setMotorPWM(mR);
  6206   0018E4  C01E  F016         	movff	fullSpeedAhead@mR,setMotorPWM@m
  6207   0018E8  C01F  F017         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  6208   0018EC  EC5D  F00A         	call	_setMotorPWM	;wreg free
  6209   0018F0                     
  6210                           ;dc_motor.c: 170:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6211   0018F0  0E05               	movlw	5
  6212   0018F2  6E21               	movwf	(??_fullSpeedAhead+1)^0,c
  6213   0018F4  0E0F               	movlw	15
  6214   0018F6  6E20               	movwf	??_fullSpeedAhead^0,c
  6215   0018F8  0EF1               	movlw	241
  6216   0018FA                     u4617:
  6217   0018FA  2EE8               	decfsz	wreg,f,c
  6218   0018FC  D7FE               	bra	u4617
  6219   0018FE  2E20               	decfsz	??_fullSpeedAhead^0,f,c
  6220   001900  D7FC               	bra	u4617
  6221   001902  2E21               	decfsz	(??_fullSpeedAhead+1)^0,f,c
  6222   001904  D7FA               	bra	u4617
  6223   001906  F000               	nop	
  6224   001908  0012               	return		;funcret
  6225   00190A                     __end_of_fullSpeedAhead:
  6226                           	callstack 0
  6227                           
  6228 ;; *************** function _BlueInstructions *****************
  6229 ;; Defined at:
  6230 ;;		line 39 in file "color_instructions.c"
  6231 ;; Parameters:    Size  Location     Type
  6232 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  6233 ;;		 -> main@motorL(9), 
  6234 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  6235 ;;		 -> main@motorR(9), 
  6236 ;; Auto vars:     Size  Location     Type
  6237 ;;  a               1   44[COMRAM] unsigned char 
  6238 ;; Return value:  Size  Location     Type
  6239 ;;                  1    wreg      void 
  6240 ;; Registers used:
  6241 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6242 ;; Tracked objects:
  6243 ;;		On entry : 0/0
  6244 ;;		On exit  : 0/0
  6245 ;;		Unchanged: 0/0
  6246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6247 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6248 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6249 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6250 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6251 ;;Total ram usage:        7 bytes
  6252 ;; Hardware stack levels used: 1
  6253 ;; Hardware stack levels required when called: 11
  6254 ;; This function calls:
  6255 ;;		_fullSpeedBackwards
  6256 ;;		_stop
  6257 ;;		_turnLeft90
  6258 ;; This function is called by:
  6259 ;;		_AntiYellow
  6260 ;;		_AntiPink
  6261 ;;		_WhiteInstructions
  6262 ;;		_MoveBuggy
  6263 ;; This function uses a non-reentrant model
  6264 ;;
  6265                           
  6266                           	psect	text28
  6267   001E08                     __ptext28:
  6268                           	callstack 0
  6269   001E08                     _BlueInstructions:
  6270                           	callstack 17
  6271   001E08                     
  6272                           ;color_instructions.c: 40:     unsigned char a=0;
  6273   001E08  0E00               	movlw	0
  6274   001E0A  6E2D               	movwf	BlueInstructions@a^0,c
  6275                           
  6276                           ;color_instructions.c: 41:     while (a<18){
  6277   001E0C  EF13  F00F         	goto	l2915
  6278   001E10                     l2911:
  6279                           
  6280                           ;color_instructions.c: 42:         fullSpeedBackwards(mL, mR);
  6281   001E10  C027  F01C         	movff	BlueInstructions@mL,fullSpeedBackwards@mL
  6282   001E14  C028  F01D         	movff	BlueInstructions@mL+1,fullSpeedBackwards@mL+1
  6283   001E18  C029  F01E         	movff	BlueInstructions@mR,fullSpeedBackwards@mR
  6284   001E1C  C02A  F01F         	movff	BlueInstructions@mR+1,fullSpeedBackwards@mR+1
  6285   001E20  ECFC  F00C         	call	_fullSpeedBackwards	;wreg free
  6286   001E24                     
  6287                           ;color_instructions.c: 43:         a++;
  6288   001E24  2A2D               	incf	BlueInstructions@a^0,f,c
  6289   001E26                     l2915:
  6290                           
  6291                           ;color_instructions.c: 41:     while (a<18){
  6292   001E26  0E11               	movlw	17
  6293   001E28  642D               	cpfsgt	BlueInstructions@a^0,c
  6294   001E2A  EF19  F00F         	goto	u2231
  6295   001E2E  EF1B  F00F         	goto	u2230
  6296   001E32                     u2231:
  6297   001E32  EF08  F00F         	goto	l2911
  6298   001E36                     u2230:
  6299   001E36  EF28  F00F         	goto	l2921
  6300   001E3A                     l2917:
  6301                           
  6302                           ;color_instructions.c: 46:         stop(mL, mR);
  6303   001E3A  C027  F01C         	movff	BlueInstructions@mL,stop@mL
  6304   001E3E  C028  F01D         	movff	BlueInstructions@mL+1,stop@mL+1
  6305   001E42  C029  F01E         	movff	BlueInstructions@mR,stop@mR
  6306   001E46  C02A  F01F         	movff	BlueInstructions@mR+1,stop@mR+1
  6307   001E4A  ECE8  F00D         	call	_stop	;wreg free
  6308   001E4E                     
  6309                           ;color_instructions.c: 47:         a--;
  6310   001E4E  062D               	decf	BlueInstructions@a^0,f,c
  6311   001E50                     l2921:
  6312                           
  6313                           ;color_instructions.c: 45:     while (a>0){
  6314   001E50  502D               	movf	BlueInstructions@a^0,w,c
  6315   001E52  A4D8               	btfss	status,2,c
  6316   001E54  EF2E  F00F         	goto	u2241
  6317   001E58  EF30  F00F         	goto	u2240
  6318   001E5C                     u2241:
  6319   001E5C  EF1D  F00F         	goto	l2917
  6320   001E60                     u2240:
  6321   001E60                     
  6322                           ;color_instructions.c: 49:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6323   001E60  0E05               	movlw	5
  6324   001E62  6E2C               	movwf	(??_BlueInstructions+1)^0,c
  6325   001E64  0E0F               	movlw	15
  6326   001E66  6E2B               	movwf	??_BlueInstructions^0,c
  6327   001E68  0EF1               	movlw	241
  6328   001E6A                     u4627:
  6329   001E6A  2EE8               	decfsz	wreg,f,c
  6330   001E6C  D7FE               	bra	u4627
  6331   001E6E  2E2B               	decfsz	??_BlueInstructions^0,f,c
  6332   001E70  D7FC               	bra	u4627
  6333   001E72  2E2C               	decfsz	(??_BlueInstructions+1)^0,f,c
  6334   001E74  D7FA               	bra	u4627
  6335   001E76  F000               	nop	
  6336   001E78                     
  6337                           ;color_instructions.c: 52:     turnLeft90(mL, mR);
  6338   001E78  C027  F022         	movff	BlueInstructions@mL,turnLeft90@mL
  6339   001E7C  C028  F023         	movff	BlueInstructions@mL+1,turnLeft90@mL+1
  6340   001E80  C029  F024         	movff	BlueInstructions@mR,turnLeft90@mR
  6341   001E84  C02A  F025         	movff	BlueInstructions@mR+1,turnLeft90@mR+1
  6342   001E88  EC27  F012         	call	_turnLeft90	;wreg free
  6343   001E8C                     
  6344                           ;color_instructions.c: 53:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6345   001E8C  0E05               	movlw	5
  6346   001E8E  6E2C               	movwf	(??_BlueInstructions+1)^0,c
  6347   001E90  0E0F               	movlw	15
  6348   001E92  6E2B               	movwf	??_BlueInstructions^0,c
  6349   001E94  0EF1               	movlw	241
  6350   001E96                     u4637:
  6351   001E96  2EE8               	decfsz	wreg,f,c
  6352   001E98  D7FE               	bra	u4637
  6353   001E9A  2E2B               	decfsz	??_BlueInstructions^0,f,c
  6354   001E9C  D7FC               	bra	u4637
  6355   001E9E  2E2C               	decfsz	(??_BlueInstructions+1)^0,f,c
  6356   001EA0  D7FA               	bra	u4637
  6357   001EA2  F000               	nop	
  6358                           
  6359                           ;color_instructions.c: 54:     turnLeft90(mL, mR);
  6360   001EA4  C027  F022         	movff	BlueInstructions@mL,turnLeft90@mL
  6361   001EA8  C028  F023         	movff	BlueInstructions@mL+1,turnLeft90@mL+1
  6362   001EAC  C029  F024         	movff	BlueInstructions@mR,turnLeft90@mR
  6363   001EB0  C02A  F025         	movff	BlueInstructions@mR+1,turnLeft90@mR+1
  6364   001EB4  EC27  F012         	call	_turnLeft90	;wreg free
  6365   001EB8  0012               	return		;funcret
  6366   001EBA                     __end_of_BlueInstructions:
  6367                           	callstack 0
  6368                           
  6369 ;; *************** function _turnLeft90 *****************
  6370 ;; Defined at:
  6371 ;;		line 200 in file "dc_motor.c"
  6372 ;; Parameters:    Size  Location     Type
  6373 ;;  mL              2   33[COMRAM] PTR struct DC_motor
  6374 ;;		 -> main@motorL(9), 
  6375 ;;  mR              2   35[COMRAM] PTR struct DC_motor
  6376 ;;		 -> main@motorR(9), 
  6377 ;; Auto vars:     Size  Location     Type
  6378 ;;  a               1   37[COMRAM] unsigned char 
  6379 ;; Return value:  Size  Location     Type
  6380 ;;                  1    wreg      void 
  6381 ;; Registers used:
  6382 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6383 ;; Tracked objects:
  6384 ;;		On entry : 0/0
  6385 ;;		On exit  : 0/0
  6386 ;;		Unchanged: 0/0
  6387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6388 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6389 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6391 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6392 ;;Total ram usage:        5 bytes
  6393 ;; Hardware stack levels used: 1
  6394 ;; Hardware stack levels required when called: 10
  6395 ;; This function calls:
  6396 ;;		_stop
  6397 ;;		_turnLeft
  6398 ;; This function is called by:
  6399 ;;		_GreenInstructions
  6400 ;;		_BlueInstructions
  6401 ;;		_PinkInstructions
  6402 ;;		_AntiPink
  6403 ;; This function uses a non-reentrant model
  6404 ;;
  6405                           
  6406                           	psect	text29
  6407   00244E                     __ptext29:
  6408                           	callstack 0
  6409   00244E                     _turnLeft90:
  6410                           	callstack 17
  6411   00244E                     
  6412                           ;dc_motor.c: 202:     unsigned char a=0;
  6413   00244E  0E00               	movlw	0
  6414   002450  6E26               	movwf	turnLeft90@a^0,c
  6415                           
  6416                           ;dc_motor.c: 203:     while(a<19){
  6417   002452  EF36  F012         	goto	l2835
  6418   002456                     l2831:
  6419                           
  6420                           ;dc_motor.c: 204:         turnLeft(mL, mR);
  6421   002456  C022  F01C         	movff	turnLeft90@mL,turnLeft@mL
  6422   00245A  C023  F01D         	movff	turnLeft90@mL+1,turnLeft@mL+1
  6423   00245E  C024  F01E         	movff	turnLeft90@mR,turnLeft@mR
  6424   002462  C025  F01F         	movff	turnLeft90@mR+1,turnLeft@mR+1
  6425   002466  EC85  F00C         	call	_turnLeft	;wreg free
  6426   00246A                     
  6427                           ;dc_motor.c: 205:         a++;
  6428   00246A  2A26               	incf	turnLeft90@a^0,f,c
  6429   00246C                     l2835:
  6430                           
  6431                           ;dc_motor.c: 203:     while(a<19){
  6432   00246C  0E12               	movlw	18
  6433   00246E  6426               	cpfsgt	turnLeft90@a^0,c
  6434   002470  EF3C  F012         	goto	u2111
  6435   002474  EF3E  F012         	goto	u2110
  6436   002478                     u2111:
  6437   002478  EF2B  F012         	goto	l2831
  6438   00247C                     u2110:
  6439   00247C  EF4B  F012         	goto	l2841
  6440   002480                     l2837:
  6441                           
  6442                           ;dc_motor.c: 208:         stop(mL, mR);
  6443   002480  C022  F01C         	movff	turnLeft90@mL,stop@mL
  6444   002484  C023  F01D         	movff	turnLeft90@mL+1,stop@mL+1
  6445   002488  C024  F01E         	movff	turnLeft90@mR,stop@mR
  6446   00248C  C025  F01F         	movff	turnLeft90@mR+1,stop@mR+1
  6447   002490  ECE8  F00D         	call	_stop	;wreg free
  6448   002494                     
  6449                           ;dc_motor.c: 209:         a--;
  6450   002494  0626               	decf	turnLeft90@a^0,f,c
  6451   002496                     l2841:
  6452                           
  6453                           ;dc_motor.c: 207:     while(a>0){
  6454   002496  5026               	movf	turnLeft90@a^0,w,c
  6455   002498  A4D8               	btfss	status,2,c
  6456   00249A  EF51  F012         	goto	u2121
  6457   00249E  EF53  F012         	goto	u2120
  6458   0024A2                     u2121:
  6459   0024A2  EF40  F012         	goto	l2837
  6460   0024A6                     u2120:
  6461   0024A6  0012               	return		;funcret
  6462   0024A8                     __end_of_turnLeft90:
  6463                           	callstack 0
  6464                           
  6465 ;; *************** function _turnLeft *****************
  6466 ;; Defined at:
  6467 ;;		line 107 in file "dc_motor.c"
  6468 ;; Parameters:    Size  Location     Type
  6469 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6470 ;;		 -> main@motorL(9), 
  6471 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6472 ;;		 -> main@motorR(9), 
  6473 ;; Auto vars:     Size  Location     Type
  6474 ;;		None
  6475 ;; Return value:  Size  Location     Type
  6476 ;;                  1    wreg      void 
  6477 ;; Registers used:
  6478 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6479 ;; Tracked objects:
  6480 ;;		On entry : 0/0
  6481 ;;		On exit  : 0/0
  6482 ;;		Unchanged: 0/0
  6483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6484 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6486 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6487 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6488 ;;Total ram usage:        6 bytes
  6489 ;; Hardware stack levels used: 1
  6490 ;; Hardware stack levels required when called: 9
  6491 ;; This function calls:
  6492 ;;		_setMotorPWM
  6493 ;; This function is called by:
  6494 ;;		_turnLeft90
  6495 ;;		_turnLeft135
  6496 ;; This function uses a non-reentrant model
  6497 ;;
  6498                           
  6499                           	psect	text30
  6500   00190A                     __ptext30:
  6501                           	callstack 0
  6502   00190A                     _turnLeft:
  6503                           	callstack 17
  6504   00190A                     
  6505                           ;dc_motor.c: 107: void turnLeft(DC_motor *mL, DC_motor *mR);dc_motor.c: 108: {;dc_motor.
      +                          c: 110:     mL->direction = 0;
  6506   00190A  EE20 F001          	lfsr	2,1
  6507   00190E  501C               	movf	turnLeft@mL^0,w,c
  6508   001910  26D9               	addwf	fsr2l,f,c
  6509   001912  501D               	movf	(turnLeft@mL+1)^0,w,c
  6510   001914  22DA               	addwfc	fsr2h,f,c
  6511   001916  0E00               	movlw	0
  6512   001918  6EDF               	movwf	indf2,c
  6513                           
  6514                           ;dc_motor.c: 111:     mL->brakemode = 0;
  6515   00191A  EE20 F002          	lfsr	2,2
  6516   00191E  501C               	movf	turnLeft@mL^0,w,c
  6517   001920  26D9               	addwf	fsr2l,f,c
  6518   001922  501D               	movf	(turnLeft@mL+1)^0,w,c
  6519   001924  22DA               	addwfc	fsr2h,f,c
  6520   001926  0E00               	movlw	0
  6521   001928  6EDF               	movwf	indf2,c
  6522                           
  6523                           ;dc_motor.c: 113:     mR->direction = 1;
  6524   00192A  EE20 F001          	lfsr	2,1
  6525   00192E  501E               	movf	turnLeft@mR^0,w,c
  6526   001930  26D9               	addwf	fsr2l,f,c
  6527   001932  501F               	movf	(turnLeft@mR+1)^0,w,c
  6528   001934  22DA               	addwfc	fsr2h,f,c
  6529   001936  0E01               	movlw	1
  6530   001938  6EDF               	movwf	indf2,c
  6531                           
  6532                           ;dc_motor.c: 114:     mR->brakemode = 0;
  6533   00193A  EE20 F002          	lfsr	2,2
  6534   00193E  501E               	movf	turnLeft@mR^0,w,c
  6535   001940  26D9               	addwf	fsr2l,f,c
  6536   001942  501F               	movf	(turnLeft@mR+1)^0,w,c
  6537   001944  22DA               	addwfc	fsr2h,f,c
  6538   001946  0E00               	movlw	0
  6539   001948  6EDF               	movwf	indf2,c
  6540                           
  6541                           ;dc_motor.c: 117:     if(mL->power>75){mL->power=75;}
  6542   00194A  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6543   00194E  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6544   001952  50DF               	movf	indf2,w,c
  6545   001954  0A80               	xorlw	128
  6546   001956  0F34               	addlw	-204
  6547   001958  A0D8               	btfss	status,0,c
  6548   00195A  EFB1  F00C         	goto	u2051
  6549   00195E  EFB3  F00C         	goto	u2050
  6550   001962                     u2051:
  6551   001962  EFB9  F00C         	goto	l2767
  6552   001966                     u2050:
  6553   001966  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6554   00196A  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6555   00196E  0E4B               	movlw	75
  6556   001970  6EDF               	movwf	indf2,c
  6557   001972                     l2767:
  6558                           
  6559                           ;dc_motor.c: 118:     if(mR->power>75){mR->power=75;}
  6560   001972  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6561   001976  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6562   00197A  50DF               	movf	indf2,w,c
  6563   00197C  0A80               	xorlw	128
  6564   00197E  0F34               	addlw	-204
  6565   001980  A0D8               	btfss	status,0,c
  6566   001982  EFC5  F00C         	goto	u2061
  6567   001986  EFC7  F00C         	goto	u2060
  6568   00198A                     u2061:
  6569   00198A  EFCD  F00C         	goto	l2771
  6570   00198E                     u2060:
  6571   00198E  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6572   001992  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6573   001996  0E4B               	movlw	75
  6574   001998  6EDF               	movwf	indf2,c
  6575   00199A                     l2771:
  6576                           
  6577                           ;dc_motor.c: 120:     mL->power = mL->power + 5 ;
  6578   00199A  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6579   00199E  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6580   0019A2  50DF               	movf	indf2,w,c
  6581   0019A4  0F05               	addlw	5
  6582   0019A6  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6583   0019AA  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6584   0019AE  6EDF               	movwf	indf2,c
  6585   0019B0                     
  6586                           ;dc_motor.c: 121:     mR->power = mR->power + 5;
  6587   0019B0  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6588   0019B4  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6589   0019B8  50DF               	movf	indf2,w,c
  6590   0019BA  0F05               	addlw	5
  6591   0019BC  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6592   0019C0  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6593   0019C4  6EDF               	movwf	indf2,c
  6594   0019C6                     
  6595                           ;dc_motor.c: 123:     setMotorPWM(mL);
  6596   0019C6  C01C  F016         	movff	turnLeft@mL,setMotorPWM@m
  6597   0019CA  C01D  F017         	movff	turnLeft@mL+1,setMotorPWM@m+1
  6598   0019CE  EC5D  F00A         	call	_setMotorPWM	;wreg free
  6599   0019D2                     
  6600                           ;dc_motor.c: 124:     setMotorPWM(mR);
  6601   0019D2  C01E  F016         	movff	turnLeft@mR,setMotorPWM@m
  6602   0019D6  C01F  F017         	movff	turnLeft@mR+1,setMotorPWM@m+1
  6603   0019DA  EC5D  F00A         	call	_setMotorPWM	;wreg free
  6604   0019DE                     
  6605                           ;dc_motor.c: 125:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6606   0019DE  0E05               	movlw	5
  6607   0019E0  6E21               	movwf	(??_turnLeft+1)^0,c
  6608   0019E2  0E0F               	movlw	15
  6609   0019E4  6E20               	movwf	??_turnLeft^0,c
  6610   0019E6  0EF1               	movlw	241
  6611   0019E8                     u4647:
  6612   0019E8  2EE8               	decfsz	wreg,f,c
  6613   0019EA  D7FE               	bra	u4647
  6614   0019EC  2E20               	decfsz	??_turnLeft^0,f,c
  6615   0019EE  D7FC               	bra	u4647
  6616   0019F0  2E21               	decfsz	(??_turnLeft+1)^0,f,c
  6617   0019F2  D7FA               	bra	u4647
  6618   0019F4  F000               	nop	
  6619   0019F6  0012               	return		;funcret
  6620   0019F8                     __end_of_turnLeft:
  6621                           	callstack 0
  6622                           
  6623 ;; *************** function _stop *****************
  6624 ;; Defined at:
  6625 ;;		line 87 in file "dc_motor.c"
  6626 ;; Parameters:    Size  Location     Type
  6627 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6628 ;;		 -> main@motorL(9), 
  6629 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6630 ;;		 -> main@motorR(9), 
  6631 ;; Auto vars:     Size  Location     Type
  6632 ;;		None
  6633 ;; Return value:  Size  Location     Type
  6634 ;;                  1    wreg      void 
  6635 ;; Registers used:
  6636 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6637 ;; Tracked objects:
  6638 ;;		On entry : 0/0
  6639 ;;		On exit  : 0/0
  6640 ;;		Unchanged: 0/0
  6641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6642 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6644 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6645 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6646 ;;Total ram usage:        5 bytes
  6647 ;; Hardware stack levels used: 1
  6648 ;; Hardware stack levels required when called: 9
  6649 ;; This function calls:
  6650 ;;		_setMotorPWM
  6651 ;; This function is called by:
  6652 ;;		_turnLeft90
  6653 ;;		_turnRight90
  6654 ;;		_turnRight135
  6655 ;;		_turnLeft135
  6656 ;;		_main
  6657 ;;		_RedInstructions
  6658 ;;		_GreenInstructions
  6659 ;;		_BlueInstructions
  6660 ;;		_YellowInstructions
  6661 ;;		_PinkInstructions
  6662 ;;		_OrangeInstructions
  6663 ;;		_LightBlueInstructions
  6664 ;;		_AntiYellow
  6665 ;;		_AntiPink
  6666 ;;		_WhiteInstructions
  6667 ;;		_turn180
  6668 ;; This function uses a non-reentrant model
  6669 ;;
  6670                           
  6671                           	psect	text31
  6672   001BD0                     __ptext31:
  6673                           	callstack 0
  6674   001BD0                     _stop:
  6675                           	callstack 21
  6676   001BD0                     
  6677                           ;dc_motor.c: 87: void stop(DC_motor *mL, DC_motor *mR);dc_motor.c: 88: {;dc_motor.c: 90:
      +                               mL->brakemode = 1;
  6678   001BD0  EE20 F002          	lfsr	2,2
  6679   001BD4  501C               	movf	stop@mL^0,w,c
  6680   001BD6  26D9               	addwf	fsr2l,f,c
  6681   001BD8  501D               	movf	(stop@mL+1)^0,w,c
  6682   001BDA  22DA               	addwfc	fsr2h,f,c
  6683   001BDC  0E01               	movlw	1
  6684   001BDE  6EDF               	movwf	indf2,c
  6685                           
  6686                           ;dc_motor.c: 91:     mR->brakemode = 1;
  6687   001BE0  EE20 F002          	lfsr	2,2
  6688   001BE4  501E               	movf	stop@mR^0,w,c
  6689   001BE6  26D9               	addwf	fsr2l,f,c
  6690   001BE8  501F               	movf	(stop@mR+1)^0,w,c
  6691   001BEA  22DA               	addwfc	fsr2h,f,c
  6692   001BEC  0E01               	movlw	1
  6693   001BEE  6EDF               	movwf	indf2,c
  6694                           
  6695                           ;dc_motor.c: 93:     if(mL->power<0){mL->power=0;}
  6696   001BF0  C01C  FFD9         	movff	stop@mL,fsr2l
  6697   001BF4  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6698   001BF8  0E00               	movlw	0
  6699   001BFA  BEDB               	btfsc	plusw2,7,c
  6700   001BFC  EF04  F00E         	goto	u2030
  6701   001C00  EF02  F00E         	goto	u2031
  6702   001C04                     u2031:
  6703   001C04  EF0A  F00E         	goto	l2749
  6704   001C08                     u2030:
  6705   001C08  C01C  FFD9         	movff	stop@mL,fsr2l
  6706   001C0C  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6707   001C10  0E00               	movlw	0
  6708   001C12  6EDF               	movwf	indf2,c
  6709   001C14                     l2749:
  6710                           
  6711                           ;dc_motor.c: 94:     if(mR->power<0){mR->power=0;}
  6712   001C14  C01E  FFD9         	movff	stop@mR,fsr2l
  6713   001C18  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6714   001C1C  0E00               	movlw	0
  6715   001C1E  BEDB               	btfsc	plusw2,7,c
  6716   001C20  EF16  F00E         	goto	u2040
  6717   001C24  EF14  F00E         	goto	u2041
  6718   001C28                     u2041:
  6719   001C28  EF1C  F00E         	goto	l2753
  6720   001C2C                     u2040:
  6721   001C2C  C01E  FFD9         	movff	stop@mR,fsr2l
  6722   001C30  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6723   001C34  0E00               	movlw	0
  6724   001C36  6EDF               	movwf	indf2,c
  6725   001C38                     l2753:
  6726                           
  6727                           ;dc_motor.c: 96:     mL->power = mL->power - 5 ;
  6728   001C38  C01C  FFD9         	movff	stop@mL,fsr2l
  6729   001C3C  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6730   001C40  50DF               	movf	indf2,w,c
  6731   001C42  0FFB               	addlw	251
  6732   001C44  C01C  FFD9         	movff	stop@mL,fsr2l
  6733   001C48  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6734   001C4C  6EDF               	movwf	indf2,c
  6735   001C4E                     
  6736                           ;dc_motor.c: 97:     mR->power = mR->power - 5;
  6737   001C4E  C01E  FFD9         	movff	stop@mR,fsr2l
  6738   001C52  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6739   001C56  50DF               	movf	indf2,w,c
  6740   001C58  0FFB               	addlw	251
  6741   001C5A  C01E  FFD9         	movff	stop@mR,fsr2l
  6742   001C5E  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6743   001C62  6EDF               	movwf	indf2,c
  6744                           
  6745                           ;dc_motor.c: 99:     mL->power = 0;
  6746   001C64  C01C  FFD9         	movff	stop@mL,fsr2l
  6747   001C68  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6748   001C6C  0E00               	movlw	0
  6749   001C6E  6EDF               	movwf	indf2,c
  6750                           
  6751                           ;dc_motor.c: 100:     mR->power = 0;
  6752   001C70  C01E  FFD9         	movff	stop@mR,fsr2l
  6753   001C74  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6754   001C78  0E00               	movlw	0
  6755   001C7A  6EDF               	movwf	indf2,c
  6756   001C7C                     
  6757                           ;dc_motor.c: 101:     setMotorPWM(mL);
  6758   001C7C  C01C  F016         	movff	stop@mL,setMotorPWM@m
  6759   001C80  C01D  F017         	movff	stop@mL+1,setMotorPWM@m+1
  6760   001C84  EC5D  F00A         	call	_setMotorPWM	;wreg free
  6761   001C88                     
  6762                           ;dc_motor.c: 102:     setMotorPWM(mR);
  6763   001C88  C01E  F016         	movff	stop@mR,setMotorPWM@m
  6764   001C8C  C01F  F017         	movff	stop@mR+1,setMotorPWM@m+1
  6765   001C90  EC5D  F00A         	call	_setMotorPWM	;wreg free
  6766   001C94                     
  6767                           ;dc_motor.c: 103:     _delay((unsigned long)((10)*(64000000/4000.0)));
  6768   001C94  0ED0               	movlw	208
  6769   001C96  6E20               	movwf	??_stop^0,c
  6770   001C98  0ECA               	movlw	202
  6771   001C9A                     u4657:
  6772   001C9A  2EE8               	decfsz	wreg,f,c
  6773   001C9C  D7FE               	bra	u4657
  6774   001C9E  2E20               	decfsz	??_stop^0,f,c
  6775   001CA0  D7FC               	bra	u4657
  6776   001CA2  0012               	return		;funcret
  6777   001CA4                     __end_of_stop:
  6778                           	callstack 0
  6779                           
  6780 ;; *************** function _fullSpeedBackwards *****************
  6781 ;; Defined at:
  6782 ;;		line 174 in file "dc_motor.c"
  6783 ;; Parameters:    Size  Location     Type
  6784 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6785 ;;		 -> main@motorL(9), 
  6786 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6787 ;;		 -> main@motorR(9), 
  6788 ;; Auto vars:     Size  Location     Type
  6789 ;;		None
  6790 ;; Return value:  Size  Location     Type
  6791 ;;                  1    wreg      void 
  6792 ;; Registers used:
  6793 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6794 ;; Tracked objects:
  6795 ;;		On entry : 0/0
  6796 ;;		On exit  : 0/0
  6797 ;;		Unchanged: 0/0
  6798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6799 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6801 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6802 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6803 ;;Total ram usage:        6 bytes
  6804 ;; Hardware stack levels used: 1
  6805 ;; Hardware stack levels required when called: 9
  6806 ;; This function calls:
  6807 ;;		_setMotorPWM
  6808 ;; This function is called by:
  6809 ;;		_RedInstructions
  6810 ;;		_GreenInstructions
  6811 ;;		_BlueInstructions
  6812 ;;		_YellowInstructions
  6813 ;;		_PinkInstructions
  6814 ;;		_OrangeInstructions
  6815 ;;		_LightBlueInstructions
  6816 ;; This function uses a non-reentrant model
  6817 ;;
  6818                           
  6819                           	psect	text32
  6820   0019F8                     __ptext32:
  6821                           	callstack 0
  6822   0019F8                     _fullSpeedBackwards:
  6823                           	callstack 18
  6824   0019F8                     
  6825                           ;dc_motor.c: 177:     mL->direction = 0;
  6826   0019F8  EE20 F001          	lfsr	2,1
  6827   0019FC  501C               	movf	fullSpeedBackwards@mL^0,w,c
  6828   0019FE  26D9               	addwf	fsr2l,f,c
  6829   001A00  501D               	movf	(fullSpeedBackwards@mL+1)^0,w,c
  6830   001A02  22DA               	addwfc	fsr2h,f,c
  6831   001A04  0E00               	movlw	0
  6832   001A06  6EDF               	movwf	indf2,c
  6833                           
  6834                           ;dc_motor.c: 178:     mL->brakemode = 0;
  6835   001A08  EE20 F002          	lfsr	2,2
  6836   001A0C  501C               	movf	fullSpeedBackwards@mL^0,w,c
  6837   001A0E  26D9               	addwf	fsr2l,f,c
  6838   001A10  501D               	movf	(fullSpeedBackwards@mL+1)^0,w,c
  6839   001A12  22DA               	addwfc	fsr2h,f,c
  6840   001A14  0E00               	movlw	0
  6841   001A16  6EDF               	movwf	indf2,c
  6842                           
  6843                           ;dc_motor.c: 180:     mR->direction = 0;
  6844   001A18  EE20 F001          	lfsr	2,1
  6845   001A1C  501E               	movf	fullSpeedBackwards@mR^0,w,c
  6846   001A1E  26D9               	addwf	fsr2l,f,c
  6847   001A20  501F               	movf	(fullSpeedBackwards@mR+1)^0,w,c
  6848   001A22  22DA               	addwfc	fsr2h,f,c
  6849   001A24  0E00               	movlw	0
  6850   001A26  6EDF               	movwf	indf2,c
  6851                           
  6852                           ;dc_motor.c: 181:     mR->brakemode = 0;
  6853   001A28  EE20 F002          	lfsr	2,2
  6854   001A2C  501E               	movf	fullSpeedBackwards@mR^0,w,c
  6855   001A2E  26D9               	addwf	fsr2l,f,c
  6856   001A30  501F               	movf	(fullSpeedBackwards@mR+1)^0,w,c
  6857   001A32  22DA               	addwfc	fsr2h,f,c
  6858   001A34  0E00               	movlw	0
  6859   001A36  6EDF               	movwf	indf2,c
  6860                           
  6861                           ;dc_motor.c: 184:     if(mL->power>35){mL->power=35;}
  6862   001A38  C01C  FFD9         	movff	fullSpeedBackwards@mL,fsr2l
  6863   001A3C  C01D  FFDA         	movff	fullSpeedBackwards@mL+1,fsr2h
  6864   001A40  50DF               	movf	indf2,w,c
  6865   001A42  0A80               	xorlw	128
  6866   001A44  0F5C               	addlw	-164
  6867   001A46  A0D8               	btfss	status,0,c
  6868   001A48  EF28  F00D         	goto	u2091
  6869   001A4C  EF2A  F00D         	goto	u2090
  6870   001A50                     u2091:
  6871   001A50  EF30  F00D         	goto	l2815
  6872   001A54                     u2090:
  6873   001A54  C01C  FFD9         	movff	fullSpeedBackwards@mL,fsr2l
  6874   001A58  C01D  FFDA         	movff	fullSpeedBackwards@mL+1,fsr2h
  6875   001A5C  0E23               	movlw	35
  6876   001A5E  6EDF               	movwf	indf2,c
  6877   001A60                     l2815:
  6878                           
  6879                           ;dc_motor.c: 185:     if(mR->power>46){mR->power=46;}
  6880   001A60  C01E  FFD9         	movff	fullSpeedBackwards@mR,fsr2l
  6881   001A64  C01F  FFDA         	movff	fullSpeedBackwards@mR+1,fsr2h
  6882   001A68  50DF               	movf	indf2,w,c
  6883   001A6A  0A80               	xorlw	128
  6884   001A6C  0F51               	addlw	-175
  6885   001A6E  A0D8               	btfss	status,0,c
  6886   001A70  EF3C  F00D         	goto	u2101
  6887   001A74  EF3E  F00D         	goto	u2100
  6888   001A78                     u2101:
  6889   001A78  EF44  F00D         	goto	l2819
  6890   001A7C                     u2100:
  6891   001A7C  C01E  FFD9         	movff	fullSpeedBackwards@mR,fsr2l
  6892   001A80  C01F  FFDA         	movff	fullSpeedBackwards@mR+1,fsr2h
  6893   001A84  0E2E               	movlw	46
  6894   001A86  6EDF               	movwf	indf2,c
  6895   001A88                     l2819:
  6896                           
  6897                           ;dc_motor.c: 187:     mL->power = mL->power + 5 ;
  6898   001A88  C01C  FFD9         	movff	fullSpeedBackwards@mL,fsr2l
  6899   001A8C  C01D  FFDA         	movff	fullSpeedBackwards@mL+1,fsr2h
  6900   001A90  50DF               	movf	indf2,w,c
  6901   001A92  0F05               	addlw	5
  6902   001A94  C01C  FFD9         	movff	fullSpeedBackwards@mL,fsr2l
  6903   001A98  C01D  FFDA         	movff	fullSpeedBackwards@mL+1,fsr2h
  6904   001A9C  6EDF               	movwf	indf2,c
  6905   001A9E                     
  6906                           ;dc_motor.c: 188:     mR->power = mR->power + 8;
  6907   001A9E  C01E  FFD9         	movff	fullSpeedBackwards@mR,fsr2l
  6908   001AA2  C01F  FFDA         	movff	fullSpeedBackwards@mR+1,fsr2h
  6909   001AA6  50DF               	movf	indf2,w,c
  6910   001AA8  0F08               	addlw	8
  6911   001AAA  C01E  FFD9         	movff	fullSpeedBackwards@mR,fsr2l
  6912   001AAE  C01F  FFDA         	movff	fullSpeedBackwards@mR+1,fsr2h
  6913   001AB2  6EDF               	movwf	indf2,c
  6914   001AB4                     
  6915                           ;dc_motor.c: 190:     setMotorPWM(mL);
  6916   001AB4  C01C  F016         	movff	fullSpeedBackwards@mL,setMotorPWM@m
  6917   001AB8  C01D  F017         	movff	fullSpeedBackwards@mL+1,setMotorPWM@m+1
  6918   001ABC  EC5D  F00A         	call	_setMotorPWM	;wreg free
  6919   001AC0                     
  6920                           ;dc_motor.c: 191:     setMotorPWM(mR);
  6921   001AC0  C01E  F016         	movff	fullSpeedBackwards@mR,setMotorPWM@m
  6922   001AC4  C01F  F017         	movff	fullSpeedBackwards@mR+1,setMotorPWM@m+1
  6923   001AC8  EC5D  F00A         	call	_setMotorPWM	;wreg free
  6924   001ACC                     
  6925                           ;dc_motor.c: 192:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6926   001ACC  0E05               	movlw	5
  6927   001ACE  6E21               	movwf	(??_fullSpeedBackwards+1)^0,c
  6928   001AD0  0E0F               	movlw	15
  6929   001AD2  6E20               	movwf	??_fullSpeedBackwards^0,c
  6930   001AD4  0EF1               	movlw	241
  6931   001AD6                     u4667:
  6932   001AD6  2EE8               	decfsz	wreg,f,c
  6933   001AD8  D7FE               	bra	u4667
  6934   001ADA  2E20               	decfsz	??_fullSpeedBackwards^0,f,c
  6935   001ADC  D7FC               	bra	u4667
  6936   001ADE  2E21               	decfsz	(??_fullSpeedBackwards+1)^0,f,c
  6937   001AE0  D7FA               	bra	u4667
  6938   001AE2  F000               	nop	
  6939   001AE4  0012               	return		;funcret
  6940   001AE6                     __end_of_fullSpeedBackwards:
  6941                           	callstack 0
  6942                           
  6943 ;; *************** function _setMotorPWM *****************
  6944 ;; Defined at:
  6945 ;;		line 64 in file "dc_motor.c"
  6946 ;; Parameters:    Size  Location     Type
  6947 ;;  m               2   21[COMRAM] PTR struct DC_motor
  6948 ;;		 -> main@motorR(9), main@motorL(9), 
  6949 ;; Auto vars:     Size  Location     Type
  6950 ;;  negDuty         1   26[COMRAM] unsigned char 
  6951 ;;  posDuty         1   25[COMRAM] unsigned char 
  6952 ;; Return value:  Size  Location     Type
  6953 ;;                  1    wreg      void 
  6954 ;; Registers used:
  6955 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6956 ;; Tracked objects:
  6957 ;;		On entry : 0/0
  6958 ;;		On exit  : 0/0
  6959 ;;		Unchanged: 0/0
  6960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6961 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6962 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6963 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6964 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6965 ;;Total ram usage:        6 bytes
  6966 ;; Hardware stack levels used: 1
  6967 ;; Hardware stack levels required when called: 8
  6968 ;; This function calls:
  6969 ;;		___lwdiv
  6970 ;;		___wmul
  6971 ;; This function is called by:
  6972 ;;		_stop
  6973 ;;		_turnLeft
  6974 ;;		_turnRight
  6975 ;;		_fullSpeedAhead
  6976 ;;		_fullSpeedBackwards
  6977 ;; This function uses a non-reentrant model
  6978 ;;
  6979                           
  6980                           	psect	text33
  6981   0014BA                     __ptext33:
  6982                           	callstack 0
  6983   0014BA                     _setMotorPWM:
  6984                           	callstack 21
  6985   0014BA                     
  6986                           ;dc_motor.c: 64: void setMotorPWM(DC_motor *m);dc_motor.c: 65: {;dc_motor.c: 66:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 68:     if(m->brakemode) {
  6987   0014BA  EE20 F002          	lfsr	2,2
  6988   0014BE  5016               	movf	setMotorPWM@m^0,w,c
  6989   0014C0  26D9               	addwf	fsr2l,f,c
  6990   0014C2  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6991   0014C4  22DA               	addwfc	fsr2h,f,c
  6992   0014C6  50DF               	movf	indf2,w,c
  6993   0014C8  B4D8               	btfsc	status,2,c
  6994   0014CA  EF69  F00A         	goto	u1991
  6995   0014CE  EF6B  F00A         	goto	u1990
  6996   0014D2                     u1991:
  6997   0014D2  EF9F  F00A         	goto	l2731
  6998   0014D6                     u1990:
  6999   0014D6                     
  7000                           ;dc_motor.c: 69:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  7001   0014D6  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  7002   0014DA  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  7003   0014DE  50DF               	movf	indf2,w,c
  7004   0014E0  6E09               	movwf	___wmul@multiplier^0,c
  7005   0014E2  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  7006   0014E4  BE09               	btfsc	___wmul@multiplier^0,7,c
  7007   0014E6  060A               	decf	(___wmul@multiplier+1)^0,f,c
  7008   0014E8  EE20 F003          	lfsr	2,3
  7009   0014EC  5016               	movf	setMotorPWM@m^0,w,c
  7010   0014EE  26D9               	addwf	fsr2l,f,c
  7011   0014F0  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7012   0014F2  22DA               	addwfc	fsr2h,f,c
  7013   0014F4  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  7014   0014F8  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  7015   0014FC  EC14  F014         	call	___wmul	;wreg free
  7016   001500  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  7017   001504  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  7018   001508  0E00               	movlw	0
  7019   00150A  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  7020   00150C  0E64               	movlw	100
  7021   00150E  6E11               	movwf	___lwdiv@divisor^0,c
  7022   001510  EC37  F011         	call	___lwdiv	;wreg free
  7023   001514  EE20 F003          	lfsr	2,3
  7024   001518  5016               	movf	setMotorPWM@m^0,w,c
  7025   00151A  26D9               	addwf	fsr2l,f,c
  7026   00151C  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7027   00151E  22DA               	addwfc	fsr2h,f,c
  7028   001520  50DF               	movf	indf2,w,c
  7029   001522  6E18               	movwf	??_setMotorPWM^0,c
  7030   001524  500F               	movf	?___lwdiv^0,w,c
  7031   001526  5C18               	subwf	??_setMotorPWM^0,w,c
  7032   001528  6E1A               	movwf	setMotorPWM@posDuty^0,c
  7033   00152A                     
  7034                           ;dc_motor.c: 70:         negDuty=m->PWMperiod;
  7035   00152A  EE20 F003          	lfsr	2,3
  7036   00152E  5016               	movf	setMotorPWM@m^0,w,c
  7037   001530  26D9               	addwf	fsr2l,f,c
  7038   001532  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7039   001534  22DA               	addwfc	fsr2h,f,c
  7040   001536  50DF               	movf	indf2,w,c
  7041   001538  6E1B               	movwf	setMotorPWM@negDuty^0,c
  7042                           
  7043                           ;dc_motor.c: 71:     }
  7044   00153A  EFC2  F00A         	goto	l2735
  7045   00153E                     l2731:
  7046                           
  7047                           ;dc_motor.c: 73:         posDuty=0;
  7048   00153E  0E00               	movlw	0
  7049   001540  6E1A               	movwf	setMotorPWM@posDuty^0,c
  7050   001542                     
  7051                           ;dc_motor.c: 74:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  7052   001542  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  7053   001546  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  7054   00154A  50DF               	movf	indf2,w,c
  7055   00154C  6E09               	movwf	___wmul@multiplier^0,c
  7056   00154E  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  7057   001550  BE09               	btfsc	___wmul@multiplier^0,7,c
  7058   001552  060A               	decf	(___wmul@multiplier+1)^0,f,c
  7059   001554  EE20 F003          	lfsr	2,3
  7060   001558  5016               	movf	setMotorPWM@m^0,w,c
  7061   00155A  26D9               	addwf	fsr2l,f,c
  7062   00155C  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7063   00155E  22DA               	addwfc	fsr2h,f,c
  7064   001560  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  7065   001564  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  7066   001568  EC14  F014         	call	___wmul	;wreg free
  7067   00156C  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  7068   001570  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  7069   001574  0E00               	movlw	0
  7070   001576  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  7071   001578  0E64               	movlw	100
  7072   00157A  6E11               	movwf	___lwdiv@divisor^0,c
  7073   00157C  EC37  F011         	call	___lwdiv	;wreg free
  7074   001580  500F               	movf	?___lwdiv^0,w,c
  7075   001582  6E1B               	movwf	setMotorPWM@negDuty^0,c
  7076   001584                     l2735:
  7077                           
  7078                           ;dc_motor.c: 77:     if (m->direction) {
  7079   001584  EE20 F001          	lfsr	2,1
  7080   001588  5016               	movf	setMotorPWM@m^0,w,c
  7081   00158A  26D9               	addwf	fsr2l,f,c
  7082   00158C  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7083   00158E  22DA               	addwfc	fsr2h,f,c
  7084   001590  50DF               	movf	indf2,w,c
  7085   001592  B4D8               	btfsc	status,2,c
  7086   001594  EFCE  F00A         	goto	u2001
  7087   001598  EFD0  F00A         	goto	u2000
  7088   00159C                     u2001:
  7089   00159C  EFF2  F00A         	goto	l2739
  7090   0015A0                     u2000:
  7091   0015A0                     
  7092                           ;dc_motor.c: 78:         *(m->posDutyHighByte)=posDuty;
  7093   0015A0  EE20 F005          	lfsr	2,5
  7094   0015A4  5016               	movf	setMotorPWM@m^0,w,c
  7095   0015A6  26D9               	addwf	fsr2l,f,c
  7096   0015A8  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7097   0015AA  22DA               	addwfc	fsr2h,f,c
  7098   0015AC  CFDE F018          	movff	postinc2,??_setMotorPWM
  7099   0015B0  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  7100   0015B4  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  7101   0015B8  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  7102   0015BC  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  7103                           
  7104                           ;dc_motor.c: 79:         *(m->negDutyHighByte)=negDuty;
  7105   0015C0  EE20 F007          	lfsr	2,7
  7106   0015C4  5016               	movf	setMotorPWM@m^0,w,c
  7107   0015C6  26D9               	addwf	fsr2l,f,c
  7108   0015C8  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7109   0015CA  22DA               	addwfc	fsr2h,f,c
  7110   0015CC  CFDE F018          	movff	postinc2,??_setMotorPWM
  7111   0015D0  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  7112   0015D4  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  7113   0015D8  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  7114   0015DC  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  7115                           
  7116                           ;dc_motor.c: 80:     } else {
  7117   0015E0  EF12  F00B         	goto	l191
  7118   0015E4                     l2739:
  7119                           
  7120                           ;dc_motor.c: 81:         *(m->posDutyHighByte)=negDuty;
  7121   0015E4  EE20 F005          	lfsr	2,5
  7122   0015E8  5016               	movf	setMotorPWM@m^0,w,c
  7123   0015EA  26D9               	addwf	fsr2l,f,c
  7124   0015EC  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7125   0015EE  22DA               	addwfc	fsr2h,f,c
  7126   0015F0  CFDE F018          	movff	postinc2,??_setMotorPWM
  7127   0015F4  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  7128   0015F8  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  7129   0015FC  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  7130   001600  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  7131                           
  7132                           ;dc_motor.c: 82:         *(m->negDutyHighByte)=posDuty;
  7133   001604  EE20 F007          	lfsr	2,7
  7134   001608  5016               	movf	setMotorPWM@m^0,w,c
  7135   00160A  26D9               	addwf	fsr2l,f,c
  7136   00160C  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7137   00160E  22DA               	addwfc	fsr2h,f,c
  7138   001610  CFDE F018          	movff	postinc2,??_setMotorPWM
  7139   001614  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  7140   001618  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  7141   00161C  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  7142   001620  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  7143   001624                     l191:
  7144   001624  0012               	return		;funcret
  7145   001626                     __end_of_setMotorPWM:
  7146                           	callstack 0
  7147                           
  7148 ;; *************** function ___wmul *****************
  7149 ;; Defined at:
  7150 ;;		line 15 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\Umul16.c"
  7151 ;; Parameters:    Size  Location     Type
  7152 ;;  multiplier      2    8[COMRAM] unsigned int 
  7153 ;;  multiplicand    2   10[COMRAM] unsigned int 
  7154 ;; Auto vars:     Size  Location     Type
  7155 ;;  product         2   12[COMRAM] unsigned int 
  7156 ;; Return value:  Size  Location     Type
  7157 ;;                  2    8[COMRAM] unsigned int 
  7158 ;; Registers used:
  7159 ;;		wreg, status,2, status,0, prodl, prodh
  7160 ;; Tracked objects:
  7161 ;;		On entry : 0/0
  7162 ;;		On exit  : 0/0
  7163 ;;		Unchanged: 0/0
  7164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7165 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7166 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7168 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7169 ;;Total ram usage:        6 bytes
  7170 ;; Hardware stack levels used: 1
  7171 ;; Hardware stack levels required when called: 7
  7172 ;; This function calls:
  7173 ;;		Nothing
  7174 ;; This function is called by:
  7175 ;;		_setMotorPWM
  7176 ;; This function uses a non-reentrant model
  7177 ;;
  7178                           
  7179                           	psect	text34
  7180   002828                     __ptext34:
  7181                           	callstack 0
  7182   002828                     ___wmul:
  7183                           	callstack 21
  7184   002828  5009               	movf	___wmul@multiplier^0,w,c
  7185   00282A  020B               	mulwf	___wmul@multiplicand^0,c
  7186   00282C  CFF3 F00D          	movff	prodl,___wmul@product
  7187   002830  CFF4 F00E          	movff	prodh,___wmul@product+1
  7188   002834  5009               	movf	___wmul@multiplier^0,w,c
  7189   002836  020C               	mulwf	(___wmul@multiplicand+1)^0,c
  7190   002838  50F3               	movf	243,w,c
  7191   00283A  260E               	addwf	(___wmul@product+1)^0,f,c
  7192   00283C  500A               	movf	(___wmul@multiplier+1)^0,w,c
  7193   00283E  020B               	mulwf	___wmul@multiplicand^0,c
  7194   002840  50F3               	movf	243,w,c
  7195   002842  260E               	addwf	(___wmul@product+1)^0,f,c
  7196   002844  C00D  F009         	movff	___wmul@product,?___wmul
  7197   002848  C00E  F00A         	movff	___wmul@product+1,?___wmul+1
  7198   00284C  0012               	return		;funcret
  7199   00284E                     __end_of___wmul:
  7200                           	callstack 0
  7201                           
  7202 ;; *************** function ___lwdiv *****************
  7203 ;; Defined at:
  7204 ;;		line 7 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\lwdiv.c"
  7205 ;; Parameters:    Size  Location     Type
  7206 ;;  dividend        2   14[COMRAM] unsigned int 
  7207 ;;  divisor         2   16[COMRAM] unsigned int 
  7208 ;; Auto vars:     Size  Location     Type
  7209 ;;  quotient        2   18[COMRAM] unsigned int 
  7210 ;;  counter         1   20[COMRAM] unsigned char 
  7211 ;; Return value:  Size  Location     Type
  7212 ;;                  2   14[COMRAM] unsigned int 
  7213 ;; Registers used:
  7214 ;;		wreg, status,2, status,0
  7215 ;; Tracked objects:
  7216 ;;		On entry : 0/0
  7217 ;;		On exit  : 0/0
  7218 ;;		Unchanged: 0/0
  7219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7220 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7221 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7223 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7224 ;;Total ram usage:        7 bytes
  7225 ;; Hardware stack levels used: 1
  7226 ;; Hardware stack levels required when called: 7
  7227 ;; This function calls:
  7228 ;;		Nothing
  7229 ;; This function is called by:
  7230 ;;		_setMotorPWM
  7231 ;; This function uses a non-reentrant model
  7232 ;;
  7233                           
  7234                           	psect	text35
  7235   00226E                     __ptext35:
  7236                           	callstack 0
  7237   00226E                     ___lwdiv:
  7238                           	callstack 21
  7239   00226E  0E00               	movlw	0
  7240   002270  6E14               	movwf	(___lwdiv@quotient+1)^0,c
  7241   002272  0E00               	movlw	0
  7242   002274  6E13               	movwf	___lwdiv@quotient^0,c
  7243   002276  5011               	movf	___lwdiv@divisor^0,w,c
  7244   002278  1012               	iorwf	(___lwdiv@divisor+1)^0,w,c
  7245   00227A  B4D8               	btfsc	status,2,c
  7246   00227C  EF42  F011         	goto	u1961
  7247   002280  EF44  F011         	goto	u1960
  7248   002284                     u1961:
  7249   002284  EF6C  F011         	goto	l1179
  7250   002288                     u1960:
  7251   002288  0E01               	movlw	1
  7252   00228A  6E15               	movwf	___lwdiv@counter^0,c
  7253   00228C  EF4C  F011         	goto	l2711
  7254   002290                     l2709:
  7255   002290  90D8               	bcf	status,0,c
  7256   002292  3611               	rlcf	___lwdiv@divisor^0,f,c
  7257   002294  3612               	rlcf	(___lwdiv@divisor+1)^0,f,c
  7258   002296  2A15               	incf	___lwdiv@counter^0,f,c
  7259   002298                     l2711:
  7260   002298  AE12               	btfss	(___lwdiv@divisor+1)^0,7,c
  7261   00229A  EF51  F011         	goto	u1971
  7262   00229E  EF53  F011         	goto	u1970
  7263   0022A2                     u1971:
  7264   0022A2  EF48  F011         	goto	l2709
  7265   0022A6                     u1970:
  7266   0022A6                     l2713:
  7267   0022A6  90D8               	bcf	status,0,c
  7268   0022A8  3613               	rlcf	___lwdiv@quotient^0,f,c
  7269   0022AA  3614               	rlcf	(___lwdiv@quotient+1)^0,f,c
  7270   0022AC  5011               	movf	___lwdiv@divisor^0,w,c
  7271   0022AE  5C0F               	subwf	___lwdiv@dividend^0,w,c
  7272   0022B0  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  7273   0022B2  5810               	subwfb	(___lwdiv@dividend+1)^0,w,c
  7274   0022B4  A0D8               	btfss	status,0,c
  7275   0022B6  EF5F  F011         	goto	u1981
  7276   0022BA  EF61  F011         	goto	u1980
  7277   0022BE                     u1981:
  7278   0022BE  EF66  F011         	goto	l2721
  7279   0022C2                     u1980:
  7280   0022C2  5011               	movf	___lwdiv@divisor^0,w,c
  7281   0022C4  5E0F               	subwf	___lwdiv@dividend^0,f,c
  7282   0022C6  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  7283   0022C8  5A10               	subwfb	(___lwdiv@dividend+1)^0,f,c
  7284   0022CA  8013               	bsf	___lwdiv@quotient^0,0,c
  7285   0022CC                     l2721:
  7286   0022CC  90D8               	bcf	status,0,c
  7287   0022CE  3212               	rrcf	(___lwdiv@divisor+1)^0,f,c
  7288   0022D0  3211               	rrcf	___lwdiv@divisor^0,f,c
  7289   0022D2  2E15               	decfsz	___lwdiv@counter^0,f,c
  7290   0022D4  EF53  F011         	goto	l2713
  7291   0022D8                     l1179:
  7292   0022D8  C013  F00F         	movff	___lwdiv@quotient,?___lwdiv
  7293   0022DC  C014  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7294   0022E0  0012               	return		;funcret
  7295   0022E2                     __end_of___lwdiv:
  7296                           	callstack 0
  7297                           
  7298 ;; *************** function _Update_RGBC *****************
  7299 ;; Defined at:
  7300 ;;		line 90 in file "color.c"
  7301 ;; Parameters:    Size  Location     Type
  7302 ;;  tempval         2   19[COMRAM] PTR struct RGB_val
  7303 ;;		 -> main@initial_color(8), 
  7304 ;; Auto vars:     Size  Location     Type
  7305 ;;		None
  7306 ;; Return value:  Size  Location     Type
  7307 ;;                  1    wreg      void 
  7308 ;; Registers used:
  7309 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7310 ;; Tracked objects:
  7311 ;;		On entry : 0/0
  7312 ;;		On exit  : 0/0
  7313 ;;		Unchanged: 0/0
  7314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7315 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7318 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7319 ;;Total ram usage:        2 bytes
  7320 ;; Hardware stack levels used: 1
  7321 ;; Hardware stack levels required when called: 10
  7322 ;; This function calls:
  7323 ;;		_color_read_Blue
  7324 ;;		_color_read_Clear
  7325 ;;		_color_read_Green
  7326 ;;		_color_read_Red
  7327 ;; This function is called by:
  7328 ;;		_main
  7329 ;; This function uses a non-reentrant model
  7330 ;;
  7331                           
  7332                           	psect	text36
  7333   0022E2                     __ptext36:
  7334                           	callstack 0
  7335   0022E2                     _Update_RGBC:
  7336                           	callstack 20
  7337   0022E2                     
  7338                           ;color.c: 92:     tempval->R = color_read_Red();
  7339   0022E2  EC54  F012         	call	_color_read_Red	;wreg free
  7340   0022E6  C014  FFD9         	movff	Update_RGBC@tempval,fsr2l
  7341   0022EA  C015  FFDA         	movff	Update_RGBC@tempval+1,fsr2h
  7342   0022EE  C00D  FFDE         	movff	?_color_read_Red,postinc2
  7343   0022F2  C00E  FFDD         	movff	?_color_read_Red+1,postdec2
  7344                           
  7345                           ;color.c: 93:     tempval->G = color_read_Green();
  7346   0022F6  EC7C  F012         	call	_color_read_Green	;wreg free
  7347   0022FA  EE20 F002          	lfsr	2,2
  7348   0022FE  5014               	movf	Update_RGBC@tempval^0,w,c
  7349   002300  26D9               	addwf	fsr2l,f,c
  7350   002302  5015               	movf	(Update_RGBC@tempval+1)^0,w,c
  7351   002304  22DA               	addwfc	fsr2h,f,c
  7352   002306  C00D  FFDE         	movff	?_color_read_Green,postinc2
  7353   00230A  C00E  FFDD         	movff	?_color_read_Green+1,postdec2
  7354                           
  7355                           ;color.c: 94:     tempval->B = color_read_Blue();
  7356   00230E  ECCC  F012         	call	_color_read_Blue	;wreg free
  7357   002312  EE20 F004          	lfsr	2,4
  7358   002316  5014               	movf	Update_RGBC@tempval^0,w,c
  7359   002318  26D9               	addwf	fsr2l,f,c
  7360   00231A  5015               	movf	(Update_RGBC@tempval+1)^0,w,c
  7361   00231C  22DA               	addwfc	fsr2h,f,c
  7362   00231E  C00D  FFDE         	movff	?_color_read_Blue,postinc2
  7363   002322  C00E  FFDD         	movff	?_color_read_Blue+1,postdec2
  7364                           
  7365                           ;color.c: 95:     tempval->C = color_read_Clear();
  7366   002326  ECA4  F012         	call	_color_read_Clear	;wreg free
  7367   00232A  EE20 F006          	lfsr	2,6
  7368   00232E  5014               	movf	Update_RGBC@tempval^0,w,c
  7369   002330  26D9               	addwf	fsr2l,f,c
  7370   002332  5015               	movf	(Update_RGBC@tempval+1)^0,w,c
  7371   002334  22DA               	addwfc	fsr2h,f,c
  7372   002336  C00D  FFDE         	movff	?_color_read_Clear,postinc2
  7373   00233A  C00E  FFDD         	movff	?_color_read_Clear+1,postdec2
  7374   00233E  0012               	return		;funcret
  7375   002340                     __end_of_Update_RGBC:
  7376                           	callstack 0
  7377                           
  7378 ;; *************** function _color_read_Red *****************
  7379 ;; Defined at:
  7380 ;;		line 32 in file "color.c"
  7381 ;; Parameters:    Size  Location     Type
  7382 ;;		None
  7383 ;; Auto vars:     Size  Location     Type
  7384 ;;  tmp             2   17[COMRAM] unsigned int 
  7385 ;; Return value:  Size  Location     Type
  7386 ;;                  2   12[COMRAM] unsigned int 
  7387 ;; Registers used:
  7388 ;;		wreg, status,2, status,0, cstack
  7389 ;; Tracked objects:
  7390 ;;		On entry : 0/0
  7391 ;;		On exit  : 0/0
  7392 ;;		Unchanged: 0/0
  7393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7394 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7395 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7396 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7397 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7398 ;;Total ram usage:        7 bytes
  7399 ;; Hardware stack levels used: 1
  7400 ;; Hardware stack levels required when called: 9
  7401 ;; This function calls:
  7402 ;;		_I2C_2_Master_Read
  7403 ;;		_I2C_2_Master_RepStart
  7404 ;;		_I2C_2_Master_Start
  7405 ;;		_I2C_2_Master_Stop
  7406 ;;		_I2C_2_Master_Write
  7407 ;; This function is called by:
  7408 ;;		_Update_RGBC
  7409 ;; This function uses a non-reentrant model
  7410 ;;
  7411                           
  7412                           	psect	text37
  7413   0024A8                     __ptext37:
  7414                           	callstack 0
  7415   0024A8                     _color_read_Red:
  7416                           	callstack 20
  7417   0024A8                     
  7418                           ;color.c: 34:  unsigned int tmp;;color.c: 35:  I2C_2_Master_Start();
  7419   0024A8  ECD1  F014         	call	_I2C_2_Master_Start	;wreg free
  7420                           
  7421                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x00);
  7422   0024AC  0E52               	movlw	82
  7423   0024AE  ECBB  F014         	call	_I2C_2_Master_Write
  7424                           
  7425                           ;color.c: 37:  I2C_2_Master_Write(0xA0 | 0x16);
  7426   0024B2  0EB6               	movlw	182
  7427   0024B4  ECBB  F014         	call	_I2C_2_Master_Write
  7428                           
  7429                           ;color.c: 38:  I2C_2_Master_RepStart();
  7430   0024B8  ECC7  F014         	call	_I2C_2_Master_RepStart	;wreg free
  7431                           
  7432                           ;color.c: 39:  I2C_2_Master_Write(0x52 | 0x01);
  7433   0024BC  0E53               	movlw	83
  7434   0024BE  ECBB  F014         	call	_I2C_2_Master_Write
  7435                           
  7436                           ;color.c: 40:  tmp=I2C_2_Master_Read(1);
  7437   0024C2  0E01               	movlw	1
  7438   0024C4  EC67  F013         	call	_I2C_2_Master_Read
  7439   0024C8  6E0F               	movwf	??_color_read_Red^0,c
  7440   0024CA  500F               	movf	??_color_read_Red^0,w,c
  7441   0024CC  6E12               	movwf	color_read_Red@tmp^0,c
  7442   0024CE  6A13               	clrf	(color_read_Red@tmp+1)^0,c
  7443                           
  7444                           ;color.c: 41:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7445   0024D0  0E00               	movlw	0
  7446   0024D2  EC67  F013         	call	_I2C_2_Master_Read
  7447   0024D6  6E0F               	movwf	??_color_read_Red^0,c
  7448   0024D8  500F               	movf	??_color_read_Red^0,w,c
  7449   0024DA  6E11               	movwf	(??_color_read_Red+2)^0,c
  7450   0024DC  6A10               	clrf	(??_color_read_Red+1)^0,c
  7451   0024DE  5012               	movf	color_read_Red@tmp^0,w,c
  7452   0024E0  1010               	iorwf	(??_color_read_Red+1)^0,w,c
  7453   0024E2  6E12               	movwf	color_read_Red@tmp^0,c
  7454   0024E4  5013               	movf	(color_read_Red@tmp+1)^0,w,c
  7455   0024E6  1011               	iorwf	(??_color_read_Red+2)^0,w,c
  7456   0024E8  6E13               	movwf	(color_read_Red@tmp+1)^0,c
  7457                           
  7458                           ;color.c: 42:  I2C_2_Master_Stop();
  7459   0024EA  ECCC  F014         	call	_I2C_2_Master_Stop	;wreg free
  7460   0024EE                     
  7461                           ;color.c: 43:  return tmp;
  7462   0024EE  C012  F00D         	movff	color_read_Red@tmp,?_color_read_Red
  7463   0024F2  C013  F00E         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  7464   0024F6  0012               	return		;funcret
  7465   0024F8                     __end_of_color_read_Red:
  7466                           	callstack 0
  7467                           
  7468 ;; *************** function _color_read_Green *****************
  7469 ;; Defined at:
  7470 ;;		line 46 in file "color.c"
  7471 ;; Parameters:    Size  Location     Type
  7472 ;;		None
  7473 ;; Auto vars:     Size  Location     Type
  7474 ;;  tmp             2   17[COMRAM] unsigned int 
  7475 ;; Return value:  Size  Location     Type
  7476 ;;                  2   12[COMRAM] unsigned int 
  7477 ;; Registers used:
  7478 ;;		wreg, status,2, status,0, cstack
  7479 ;; Tracked objects:
  7480 ;;		On entry : 0/0
  7481 ;;		On exit  : 0/0
  7482 ;;		Unchanged: 0/0
  7483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7484 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7485 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7486 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7487 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7488 ;;Total ram usage:        7 bytes
  7489 ;; Hardware stack levels used: 1
  7490 ;; Hardware stack levels required when called: 9
  7491 ;; This function calls:
  7492 ;;		_I2C_2_Master_Read
  7493 ;;		_I2C_2_Master_RepStart
  7494 ;;		_I2C_2_Master_Start
  7495 ;;		_I2C_2_Master_Stop
  7496 ;;		_I2C_2_Master_Write
  7497 ;; This function is called by:
  7498 ;;		_Update_RGBC
  7499 ;; This function uses a non-reentrant model
  7500 ;;
  7501                           
  7502                           	psect	text38
  7503   0024F8                     __ptext38:
  7504                           	callstack 0
  7505   0024F8                     _color_read_Green:
  7506                           	callstack 20
  7507   0024F8                     
  7508                           ;color.c: 48:  unsigned int tmp;;color.c: 49:  I2C_2_Master_Start();
  7509   0024F8  ECD1  F014         	call	_I2C_2_Master_Start	;wreg free
  7510                           
  7511                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x00);
  7512   0024FC  0E52               	movlw	82
  7513   0024FE  ECBB  F014         	call	_I2C_2_Master_Write
  7514                           
  7515                           ;color.c: 51:  I2C_2_Master_Write(0xA0 | 0x18);
  7516   002502  0EB8               	movlw	184
  7517   002504  ECBB  F014         	call	_I2C_2_Master_Write
  7518                           
  7519                           ;color.c: 52:  I2C_2_Master_RepStart();
  7520   002508  ECC7  F014         	call	_I2C_2_Master_RepStart	;wreg free
  7521                           
  7522                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x01);
  7523   00250C  0E53               	movlw	83
  7524   00250E  ECBB  F014         	call	_I2C_2_Master_Write
  7525                           
  7526                           ;color.c: 54:  tmp=I2C_2_Master_Read(1);
  7527   002512  0E01               	movlw	1
  7528   002514  EC67  F013         	call	_I2C_2_Master_Read
  7529   002518  6E0F               	movwf	??_color_read_Green^0,c
  7530   00251A  500F               	movf	??_color_read_Green^0,w,c
  7531   00251C  6E12               	movwf	color_read_Green@tmp^0,c
  7532   00251E  6A13               	clrf	(color_read_Green@tmp+1)^0,c
  7533                           
  7534                           ;color.c: 55:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7535   002520  0E00               	movlw	0
  7536   002522  EC67  F013         	call	_I2C_2_Master_Read
  7537   002526  6E0F               	movwf	??_color_read_Green^0,c
  7538   002528  500F               	movf	??_color_read_Green^0,w,c
  7539   00252A  6E11               	movwf	(??_color_read_Green+2)^0,c
  7540   00252C  6A10               	clrf	(??_color_read_Green+1)^0,c
  7541   00252E  5012               	movf	color_read_Green@tmp^0,w,c
  7542   002530  1010               	iorwf	(??_color_read_Green+1)^0,w,c
  7543   002532  6E12               	movwf	color_read_Green@tmp^0,c
  7544   002534  5013               	movf	(color_read_Green@tmp+1)^0,w,c
  7545   002536  1011               	iorwf	(??_color_read_Green+2)^0,w,c
  7546   002538  6E13               	movwf	(color_read_Green@tmp+1)^0,c
  7547                           
  7548                           ;color.c: 56:  I2C_2_Master_Stop();
  7549   00253A  ECCC  F014         	call	_I2C_2_Master_Stop	;wreg free
  7550   00253E                     
  7551                           ;color.c: 57:  return tmp;
  7552   00253E  C012  F00D         	movff	color_read_Green@tmp,?_color_read_Green
  7553   002542  C013  F00E         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  7554   002546  0012               	return		;funcret
  7555   002548                     __end_of_color_read_Green:
  7556                           	callstack 0
  7557                           
  7558 ;; *************** function _color_read_Clear *****************
  7559 ;; Defined at:
  7560 ;;		line 74 in file "color.c"
  7561 ;; Parameters:    Size  Location     Type
  7562 ;;		None
  7563 ;; Auto vars:     Size  Location     Type
  7564 ;;  tmp             2   17[COMRAM] unsigned int 
  7565 ;; Return value:  Size  Location     Type
  7566 ;;                  2   12[COMRAM] unsigned int 
  7567 ;; Registers used:
  7568 ;;		wreg, status,2, status,0, cstack
  7569 ;; Tracked objects:
  7570 ;;		On entry : 0/0
  7571 ;;		On exit  : 0/0
  7572 ;;		Unchanged: 0/0
  7573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7574 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7575 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7576 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7577 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7578 ;;Total ram usage:        7 bytes
  7579 ;; Hardware stack levels used: 1
  7580 ;; Hardware stack levels required when called: 9
  7581 ;; This function calls:
  7582 ;;		_I2C_2_Master_Read
  7583 ;;		_I2C_2_Master_RepStart
  7584 ;;		_I2C_2_Master_Start
  7585 ;;		_I2C_2_Master_Stop
  7586 ;;		_I2C_2_Master_Write
  7587 ;; This function is called by:
  7588 ;;		_Update_RGBC
  7589 ;; This function uses a non-reentrant model
  7590 ;;
  7591                           
  7592                           	psect	text39
  7593   002548                     __ptext39:
  7594                           	callstack 0
  7595   002548                     _color_read_Clear:
  7596                           	callstack 20
  7597   002548                     
  7598                           ;color.c: 76:  unsigned int tmp;;color.c: 77:  I2C_2_Master_Start();
  7599   002548  ECD1  F014         	call	_I2C_2_Master_Start	;wreg free
  7600                           
  7601                           ;color.c: 78:  I2C_2_Master_Write(0x52 | 0x00);
  7602   00254C  0E52               	movlw	82
  7603   00254E  ECBB  F014         	call	_I2C_2_Master_Write
  7604                           
  7605                           ;color.c: 79:  I2C_2_Master_Write(0xA0 | 0x14);
  7606   002552  0EB4               	movlw	180
  7607   002554  ECBB  F014         	call	_I2C_2_Master_Write
  7608                           
  7609                           ;color.c: 80:  I2C_2_Master_RepStart();
  7610   002558  ECC7  F014         	call	_I2C_2_Master_RepStart	;wreg free
  7611                           
  7612                           ;color.c: 81:  I2C_2_Master_Write(0x52 | 0x01);
  7613   00255C  0E53               	movlw	83
  7614   00255E  ECBB  F014         	call	_I2C_2_Master_Write
  7615                           
  7616                           ;color.c: 82:  tmp=I2C_2_Master_Read(1);
  7617   002562  0E01               	movlw	1
  7618   002564  EC67  F013         	call	_I2C_2_Master_Read
  7619   002568  6E0F               	movwf	??_color_read_Clear^0,c
  7620   00256A  500F               	movf	??_color_read_Clear^0,w,c
  7621   00256C  6E12               	movwf	color_read_Clear@tmp^0,c
  7622   00256E  6A13               	clrf	(color_read_Clear@tmp+1)^0,c
  7623                           
  7624                           ;color.c: 83:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7625   002570  0E00               	movlw	0
  7626   002572  EC67  F013         	call	_I2C_2_Master_Read
  7627   002576  6E0F               	movwf	??_color_read_Clear^0,c
  7628   002578  500F               	movf	??_color_read_Clear^0,w,c
  7629   00257A  6E11               	movwf	(??_color_read_Clear+2)^0,c
  7630   00257C  6A10               	clrf	(??_color_read_Clear+1)^0,c
  7631   00257E  5012               	movf	color_read_Clear@tmp^0,w,c
  7632   002580  1010               	iorwf	(??_color_read_Clear+1)^0,w,c
  7633   002582  6E12               	movwf	color_read_Clear@tmp^0,c
  7634   002584  5013               	movf	(color_read_Clear@tmp+1)^0,w,c
  7635   002586  1011               	iorwf	(??_color_read_Clear+2)^0,w,c
  7636   002588  6E13               	movwf	(color_read_Clear@tmp+1)^0,c
  7637                           
  7638                           ;color.c: 84:  I2C_2_Master_Stop();
  7639   00258A  ECCC  F014         	call	_I2C_2_Master_Stop	;wreg free
  7640   00258E                     
  7641                           ;color.c: 85:  return tmp;
  7642   00258E  C012  F00D         	movff	color_read_Clear@tmp,?_color_read_Clear
  7643   002592  C013  F00E         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  7644   002596  0012               	return		;funcret
  7645   002598                     __end_of_color_read_Clear:
  7646                           	callstack 0
  7647                           
  7648 ;; *************** function _color_read_Blue *****************
  7649 ;; Defined at:
  7650 ;;		line 60 in file "color.c"
  7651 ;; Parameters:    Size  Location     Type
  7652 ;;		None
  7653 ;; Auto vars:     Size  Location     Type
  7654 ;;  tmp             2   17[COMRAM] unsigned int 
  7655 ;; Return value:  Size  Location     Type
  7656 ;;                  2   12[COMRAM] unsigned int 
  7657 ;; Registers used:
  7658 ;;		wreg, status,2, status,0, cstack
  7659 ;; Tracked objects:
  7660 ;;		On entry : 0/0
  7661 ;;		On exit  : 0/0
  7662 ;;		Unchanged: 0/0
  7663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7664 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7665 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7666 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7667 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7668 ;;Total ram usage:        7 bytes
  7669 ;; Hardware stack levels used: 1
  7670 ;; Hardware stack levels required when called: 9
  7671 ;; This function calls:
  7672 ;;		_I2C_2_Master_Read
  7673 ;;		_I2C_2_Master_RepStart
  7674 ;;		_I2C_2_Master_Start
  7675 ;;		_I2C_2_Master_Stop
  7676 ;;		_I2C_2_Master_Write
  7677 ;; This function is called by:
  7678 ;;		_Update_RGBC
  7679 ;; This function uses a non-reentrant model
  7680 ;;
  7681                           
  7682                           	psect	text40
  7683   002598                     __ptext40:
  7684                           	callstack 0
  7685   002598                     _color_read_Blue:
  7686                           	callstack 20
  7687   002598                     
  7688                           ;color.c: 62:  unsigned int tmp;;color.c: 63:  I2C_2_Master_Start();
  7689   002598  ECD1  F014         	call	_I2C_2_Master_Start	;wreg free
  7690                           
  7691                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x00);
  7692   00259C  0E52               	movlw	82
  7693   00259E  ECBB  F014         	call	_I2C_2_Master_Write
  7694                           
  7695                           ;color.c: 65:  I2C_2_Master_Write(0xA0 | 0x1A);
  7696   0025A2  0EBA               	movlw	186
  7697   0025A4  ECBB  F014         	call	_I2C_2_Master_Write
  7698                           
  7699                           ;color.c: 66:  I2C_2_Master_RepStart();
  7700   0025A8  ECC7  F014         	call	_I2C_2_Master_RepStart	;wreg free
  7701                           
  7702                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x01);
  7703   0025AC  0E53               	movlw	83
  7704   0025AE  ECBB  F014         	call	_I2C_2_Master_Write
  7705                           
  7706                           ;color.c: 68:  tmp=I2C_2_Master_Read(1);
  7707   0025B2  0E01               	movlw	1
  7708   0025B4  EC67  F013         	call	_I2C_2_Master_Read
  7709   0025B8  6E0F               	movwf	??_color_read_Blue^0,c
  7710   0025BA  500F               	movf	??_color_read_Blue^0,w,c
  7711   0025BC  6E12               	movwf	color_read_Blue@tmp^0,c
  7712   0025BE  6A13               	clrf	(color_read_Blue@tmp+1)^0,c
  7713                           
  7714                           ;color.c: 69:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7715   0025C0  0E00               	movlw	0
  7716   0025C2  EC67  F013         	call	_I2C_2_Master_Read
  7717   0025C6  6E0F               	movwf	??_color_read_Blue^0,c
  7718   0025C8  500F               	movf	??_color_read_Blue^0,w,c
  7719   0025CA  6E11               	movwf	(??_color_read_Blue+2)^0,c
  7720   0025CC  6A10               	clrf	(??_color_read_Blue+1)^0,c
  7721   0025CE  5012               	movf	color_read_Blue@tmp^0,w,c
  7722   0025D0  1010               	iorwf	(??_color_read_Blue+1)^0,w,c
  7723   0025D2  6E12               	movwf	color_read_Blue@tmp^0,c
  7724   0025D4  5013               	movf	(color_read_Blue@tmp+1)^0,w,c
  7725   0025D6  1011               	iorwf	(??_color_read_Blue+2)^0,w,c
  7726   0025D8  6E13               	movwf	(color_read_Blue@tmp+1)^0,c
  7727                           
  7728                           ;color.c: 70:  I2C_2_Master_Stop();
  7729   0025DA  ECCC  F014         	call	_I2C_2_Master_Stop	;wreg free
  7730   0025DE                     
  7731                           ;color.c: 71:  return tmp;
  7732   0025DE  C012  F00D         	movff	color_read_Blue@tmp,?_color_read_Blue
  7733   0025E2  C013  F00E         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  7734   0025E6  0012               	return		;funcret
  7735   0025E8                     __end_of_color_read_Blue:
  7736                           	callstack 0
  7737                           
  7738 ;; *************** function _I2C_2_Master_RepStart *****************
  7739 ;; Defined at:
  7740 ;;		line 33 in file "i2c.c"
  7741 ;; Parameters:    Size  Location     Type
  7742 ;;		None
  7743 ;; Auto vars:     Size  Location     Type
  7744 ;;		None
  7745 ;; Return value:  Size  Location     Type
  7746 ;;                  1    wreg      void 
  7747 ;; Registers used:
  7748 ;;		wreg, status,2, status,0, cstack
  7749 ;; Tracked objects:
  7750 ;;		On entry : 0/0
  7751 ;;		On exit  : 0/0
  7752 ;;		Unchanged: 0/0
  7753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7758 ;;Total ram usage:        0 bytes
  7759 ;; Hardware stack levels used: 1
  7760 ;; Hardware stack levels required when called: 8
  7761 ;; This function calls:
  7762 ;;		_I2C_2_Master_Idle
  7763 ;; This function is called by:
  7764 ;;		_color_read_Red
  7765 ;;		_color_read_Green
  7766 ;;		_color_read_Blue
  7767 ;;		_color_read_Clear
  7768 ;; This function uses a non-reentrant model
  7769 ;;
  7770                           
  7771                           	psect	text41
  7772   00298E                     __ptext41:
  7773                           	callstack 0
  7774   00298E                     _I2C_2_Master_RepStart:
  7775                           	callstack 20
  7776   00298E                     
  7777                           ;i2c.c: 35:   I2C_2_Master_Idle();
  7778   00298E  ECEC  F013         	call	_I2C_2_Master_Idle	;wreg free
  7779   002992                     
  7780                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  7781   002992  010E               	movlb	14	; () banked
  7782   002994  83DA               	bsf	218,1,b	;volatile
  7783   002996                     
  7784                           ; BSR set to: 14
  7785   002996  0012               	return		;funcret
  7786   002998                     __end_of_I2C_2_Master_RepStart:
  7787                           	callstack 0
  7788                           
  7789 ;; *************** function _I2C_2_Master_Read *****************
  7790 ;; Defined at:
  7791 ;;		line 51 in file "i2c.c"
  7792 ;; Parameters:    Size  Location     Type
  7793 ;;  ack             1    wreg     unsigned char 
  7794 ;; Auto vars:     Size  Location     Type
  7795 ;;  ack             1   10[COMRAM] unsigned char 
  7796 ;;  tmp             1   11[COMRAM] unsigned char 
  7797 ;; Return value:  Size  Location     Type
  7798 ;;                  1    wreg      unsigned char 
  7799 ;; Registers used:
  7800 ;;		wreg, status,2, status,0, cstack
  7801 ;; Tracked objects:
  7802 ;;		On entry : 0/0
  7803 ;;		On exit  : 0/0
  7804 ;;		Unchanged: 0/0
  7805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7807 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7808 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7809 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7810 ;;Total ram usage:        3 bytes
  7811 ;; Hardware stack levels used: 1
  7812 ;; Hardware stack levels required when called: 8
  7813 ;; This function calls:
  7814 ;;		_I2C_2_Master_Idle
  7815 ;; This function is called by:
  7816 ;;		_color_read_Red
  7817 ;;		_color_read_Green
  7818 ;;		_color_read_Blue
  7819 ;;		_color_read_Clear
  7820 ;; This function uses a non-reentrant model
  7821 ;;
  7822                           
  7823                           	psect	text42
  7824   0026CE                     __ptext42:
  7825                           	callstack 0
  7826   0026CE                     _I2C_2_Master_Read:
  7827                           	callstack 20
  7828                           
  7829                           ; BSR set to: 14
  7830                           ;incstack = 0
  7831                           ;I2C_2_Master_Read@ack stored from wreg
  7832   0026CE  6E0B               	movwf	I2C_2_Master_Read@ack^0,c
  7833   0026D0                     
  7834                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  7835   0026D0  ECEC  F013         	call	_I2C_2_Master_Idle	;wreg free
  7836   0026D4                     
  7837                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  7838   0026D4  010E               	movlb	14	; () banked
  7839   0026D6  87DA               	bsf	218,3,b	;volatile
  7840                           
  7841                           ;i2c.c: 56:   I2C_2_Master_Idle();
  7842   0026D8  ECEC  F013         	call	_I2C_2_Master_Idle	;wreg free
  7843   0026DC                     
  7844                           ;i2c.c: 57:   tmp = SSP2BUF;
  7845   0026DC  CED5 F00C          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  7846                           
  7847                           ;i2c.c: 58:   I2C_2_Master_Idle();
  7848   0026E0  ECEC  F013         	call	_I2C_2_Master_Idle	;wreg free
  7849   0026E4                     
  7850                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  7851   0026E4  500B               	movf	I2C_2_Master_Read@ack^0,w,c
  7852   0026E6  B4D8               	btfsc	status,2,c
  7853   0026E8  EF78  F013         	goto	u2251
  7854   0026EC  EF7C  F013         	goto	u2250
  7855   0026F0                     u2251:
  7856   0026F0  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  7857   0026F2  2A0A               	incf	??_I2C_2_Master_Read^0,f,c
  7858   0026F4  EF7D  F013         	goto	u2268
  7859   0026F8                     u2250:
  7860   0026F8  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  7861   0026FA                     u2268:
  7862   0026FA  3A0A               	swapf	??_I2C_2_Master_Read^0,f,c
  7863   0026FC  460A               	rlncf	??_I2C_2_Master_Read^0,f,c
  7864   0026FE  010E               	movlb	14	; () banked
  7865   002700  51DA               	movf	218,w,b	;volatile
  7866   002702  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  7867   002704  0BDF               	andlw	-33
  7868   002706  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  7869   002708  6FDA               	movwf	218,b	;volatile
  7870   00270A                     
  7871                           ; BSR set to: 14
  7872                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  7873   00270A  89DA               	bsf	218,4,b	;volatile
  7874   00270C                     
  7875                           ; BSR set to: 14
  7876                           ;i2c.c: 61:   return tmp;
  7877   00270C  500C               	movf	I2C_2_Master_Read@tmp^0,w,c
  7878   00270E                     
  7879                           ; BSR set to: 14
  7880   00270E  0012               	return		;funcret
  7881   002710                     __end_of_I2C_2_Master_Read:
  7882                           	callstack 0
  7883                           
  7884 ;; *************** function _Timer0_init *****************
  7885 ;; Defined at:
  7886 ;;		line 7 in file "timers.c"
  7887 ;; Parameters:    Size  Location     Type
  7888 ;;		None
  7889 ;; Auto vars:     Size  Location     Type
  7890 ;;		None
  7891 ;; Return value:  Size  Location     Type
  7892 ;;                  1    wreg      void 
  7893 ;; Registers used:
  7894 ;;		wreg, status,2
  7895 ;; Tracked objects:
  7896 ;;		On entry : 0/0
  7897 ;;		On exit  : 0/0
  7898 ;;		Unchanged: 0/0
  7899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7904 ;;Total ram usage:        0 bytes
  7905 ;; Hardware stack levels used: 1
  7906 ;; Hardware stack levels required when called: 7
  7907 ;; This function calls:
  7908 ;;		Nothing
  7909 ;; This function is called by:
  7910 ;;		_main
  7911 ;; This function uses a non-reentrant model
  7912 ;;
  7913                           
  7914                           	psect	text43
  7915   002894                     __ptext43:
  7916                           	callstack 0
  7917   002894                     _Timer0_init:
  7918                           	callstack 23
  7919   002894                     
  7920                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  7921   002894  50D6               	movf	214,w,c	;volatile
  7922   002896  0B1F               	andlw	-225
  7923   002898  0940               	iorlw	64
  7924   00289A  6ED6               	movwf	214,c	;volatile
  7925   00289C                     
  7926                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  7927   00289C  88D6               	bsf	214,4,c	;volatile
  7928                           
  7929                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
  7930   00289E  50D6               	movf	214,w,c	;volatile
  7931   0028A0  0BF0               	andlw	-16
  7932   0028A2  0908               	iorlw	8
  7933   0028A4  6ED6               	movwf	214,c	;volatile
  7934   0028A6                     
  7935                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
  7936   0028A6  88D5               	bsf	213,4,c	;volatile
  7937                           
  7938                           ;timers.c: 15:     TMR0H = 0b11000010;
  7939   0028A8  0EC2               	movlw	194
  7940   0028AA  6ED4               	movwf	212,c	;volatile
  7941                           
  7942                           ;timers.c: 16:     TMR0L = 0b11110110;
  7943   0028AC  0EF6               	movlw	246
  7944   0028AE  6ED3               	movwf	211,c	;volatile
  7945   0028B0                     
  7946                           ;timers.c: 17:     T0CON0bits.T0EN=1;
  7947   0028B0  8ED5               	bsf	213,7,c	;volatile
  7948   0028B2  0012               	return		;funcret
  7949   0028B4                     __end_of_Timer0_init:
  7950                           	callstack 0
  7951                           
  7952 ;; *************** function _LED_init *****************
  7953 ;; Defined at:
  7954 ;;		line 7 in file "LED_Buttons.c"
  7955 ;; Parameters:    Size  Location     Type
  7956 ;;		None
  7957 ;; Auto vars:     Size  Location     Type
  7958 ;;		None
  7959 ;; Return value:  Size  Location     Type
  7960 ;;                  1    wreg      void 
  7961 ;; Registers used:
  7962 ;;		None
  7963 ;; Tracked objects:
  7964 ;;		On entry : 0/0
  7965 ;;		On exit  : 0/0
  7966 ;;		Unchanged: 0/0
  7967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7972 ;;Total ram usage:        0 bytes
  7973 ;; Hardware stack levels used: 1
  7974 ;; Hardware stack levels required when called: 7
  7975 ;; This function calls:
  7976 ;;		Nothing
  7977 ;; This function is called by:
  7978 ;;		_main
  7979 ;; This function uses a non-reentrant model
  7980 ;;
  7981                           
  7982                           	psect	text44
  7983   002966                     __ptext44:
  7984                           	callstack 0
  7985   002966                     _LED_init:
  7986                           	callstack 23
  7987   002966                     
  7988                           ;LED_Buttons.c: 8:     TRISGbits.TRISG1 = 0;
  7989   002966  9287               	bcf	135,1,c	;volatile
  7990                           
  7991                           ;LED_Buttons.c: 9:     TRISAbits.TRISA4 = 0;
  7992   002968  9881               	bcf	129,4,c	;volatile
  7993                           
  7994                           ;LED_Buttons.c: 10:     TRISFbits.TRISF7 = 0;
  7995   00296A  9E86               	bcf	134,7,c	;volatile
  7996                           
  7997                           ;LED_Buttons.c: 12:     LATHbits.LATH3 = 0;
  7998   00296C  9680               	bcf	128,3,c	;volatile
  7999                           
  8000                           ;LED_Buttons.c: 13:     TRISHbits.TRISH3 = 0;
  8001   00296E  9688               	bcf	136,3,c	;volatile
  8002                           
  8003                           ;LED_Buttons.c: 15:     LATDbits.LATD7 = 0;
  8004   002970  9E7C               	bcf	124,7,c	;volatile
  8005                           
  8006                           ;LED_Buttons.c: 16:     TRISDbits.TRISD7 = 0;
  8007   002972  9E84               	bcf	132,7,c	;volatile
  8008   002974  0012               	return		;funcret
  8009   002976                     __end_of_LED_init:
  8010                           	callstack 0
  8011                           
  8012 ;; *************** function _Interrupts_init *****************
  8013 ;; Defined at:
  8014 ;;		line 12 in file "interrupts.c"
  8015 ;; Parameters:    Size  Location     Type
  8016 ;;		None
  8017 ;; Auto vars:     Size  Location     Type
  8018 ;;		None
  8019 ;; Return value:  Size  Location     Type
  8020 ;;                  1    wreg      void 
  8021 ;; Registers used:
  8022 ;;		wreg, status,2, status,0, cstack
  8023 ;; Tracked objects:
  8024 ;;		On entry : 0/0
  8025 ;;		On exit  : 0/0
  8026 ;;		Unchanged: 0/0
  8027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8032 ;;Total ram usage:        0 bytes
  8033 ;; Hardware stack levels used: 1
  8034 ;; Hardware stack levels required when called: 12
  8035 ;; This function calls:
  8036 ;;		_interrupts_clear_colorclick
  8037 ;; This function is called by:
  8038 ;;		_main
  8039 ;; This function uses a non-reentrant model
  8040 ;;
  8041                           
  8042                           	psect	text45
  8043   002914                     __ptext45:
  8044                           	callstack 0
  8045   002914                     _Interrupts_init:
  8046                           	callstack 18
  8047   002914                     
  8048                           ;interrupts.c: 18:     TRISBbits.TRISB1 = 1;
  8049   002914  8282               	bsf	130,1,c	;volatile
  8050                           
  8051                           ;interrupts.c: 19:     ANSELBbits.ANSELB1 = 0;
  8052   002916  010E               	movlb	14	; () banked
  8053   002918  939A               	bcf	154,1,b	;volatile
  8054                           
  8055                           ;interrupts.c: 21:     PIE0bits.INT1IE = 1;
  8056   00291A  8329               	bsf	41,1,b	;volatile
  8057                           
  8058                           ;interrupts.c: 22:     IPR0bits.INT1IP = 1;
  8059   00291C  831F               	bsf	31,1,b	;volatile
  8060                           
  8061                           ;interrupts.c: 23:     INTCONbits.INT1EDG = 0;
  8062   00291E  92F2               	bcf	242,1,c	;volatile
  8063                           
  8064                           ;interrupts.c: 26:     PIE0bits.TMR0IE=1;
  8065   002920  8B29               	bsf	41,5,b	;volatile
  8066                           
  8067                           ;interrupts.c: 27:     IPR0bits.TMR0IP = 0;
  8068   002922  9B1F               	bcf	31,5,b	;volatile
  8069                           
  8070                           ;interrupts.c: 30:     PIE4bits.RC4IE=1;
  8071   002924  872D               	bsf	45,3,b	;volatile
  8072   002926                     
  8073                           ; BSR set to: 14
  8074                           ;interrupts.c: 32:     interrupts_clear_colorclick();
  8075   002926  EC99  F014         	call	_interrupts_clear_colorclick	;wreg free
  8076   00292A                     
  8077                           ;interrupts.c: 34:     INTCONbits.IPEN = 1;
  8078   00292A  8AF2               	bsf	242,5,c	;volatile
  8079   00292C                     
  8080                           ;interrupts.c: 35:     INTCONbits.PEIE = 1;
  8081   00292C  8CF2               	bsf	242,6,c	;volatile
  8082   00292E                     
  8083                           ;interrupts.c: 36:     INTCONbits.GIE=1;
  8084   00292E  8EF2               	bsf	242,7,c	;volatile
  8085   002930  0012               	return		;funcret
  8086   002932                     __end_of_Interrupts_init:
  8087                           	callstack 0
  8088                           
  8089 ;; *************** function _interrupts_clear_colorclick *****************
  8090 ;; Defined at:
  8091 ;;		line 57 in file "interrupts.c"
  8092 ;; Parameters:    Size  Location     Type
  8093 ;;		None
  8094 ;; Auto vars:     Size  Location     Type
  8095 ;;		None
  8096 ;; Return value:  Size  Location     Type
  8097 ;;                  1    wreg      void 
  8098 ;; Registers used:
  8099 ;;		wreg, status,2, status,0, cstack
  8100 ;; Tracked objects:
  8101 ;;		On entry : 0/0
  8102 ;;		On exit  : 0/0
  8103 ;;		Unchanged: 0/0
  8104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8109 ;;Total ram usage:        0 bytes
  8110 ;; Hardware stack levels used: 1
  8111 ;; Hardware stack levels required when called: 11
  8112 ;; This function calls:
  8113 ;;		_I2C_2_Master_Start
  8114 ;;		_I2C_2_Master_Stop
  8115 ;;		_I2C_2_Master_Write
  8116 ;;		_init_colorclick_interrupts
  8117 ;; This function is called by:
  8118 ;;		_Interrupts_init
  8119 ;; This function uses a non-reentrant model
  8120 ;;
  8121                           
  8122                           	psect	text46
  8123   002932                     __ptext46:
  8124                           	callstack 0
  8125   002932                     _interrupts_clear_colorclick:
  8126                           	callstack 18
  8127   002932                     
  8128                           ;interrupts.c: 59:     I2C_2_Master_Start();
  8129   002932  ECD1  F014         	call	_I2C_2_Master_Start	;wreg free
  8130                           
  8131                           ;interrupts.c: 60:     I2C_2_Master_Write(0x52 | 0x00);
  8132   002936  0E52               	movlw	82
  8133   002938  ECBB  F014         	call	_I2C_2_Master_Write
  8134                           
  8135                           ;interrupts.c: 61:     I2C_2_Master_Write(0b11100110);
  8136   00293C  0EE6               	movlw	230
  8137   00293E  ECBB  F014         	call	_I2C_2_Master_Write
  8138                           
  8139                           ;interrupts.c: 62:     I2C_2_Master_Stop();
  8140   002942  ECCC  F014         	call	_I2C_2_Master_Stop	;wreg free
  8141                           
  8142                           ;interrupts.c: 64:     init_colorclick_interrupts();
  8143   002946  ECF4  F012         	call	_init_colorclick_interrupts	;wreg free
  8144   00294A  0012               	return		;funcret
  8145   00294C                     __end_of_interrupts_clear_colorclick:
  8146                           	callstack 0
  8147                           
  8148 ;; *************** function _init_colorclick_interrupts *****************
  8149 ;; Defined at:
  8150 ;;		line 43 in file "interrupts.c"
  8151 ;; Parameters:    Size  Location     Type
  8152 ;;		None
  8153 ;; Auto vars:     Size  Location     Type
  8154 ;;		None
  8155 ;; Return value:  Size  Location     Type
  8156 ;;                  1    wreg      void 
  8157 ;; Registers used:
  8158 ;;		wreg, status,2, status,0, cstack
  8159 ;; Tracked objects:
  8160 ;;		On entry : 0/0
  8161 ;;		On exit  : 0/0
  8162 ;;		Unchanged: 0/0
  8163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8166 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8167 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8168 ;;Total ram usage:        1 bytes
  8169 ;; Hardware stack levels used: 1
  8170 ;; Hardware stack levels required when called: 10
  8171 ;; This function calls:
  8172 ;;		_color_writetoaddr
  8173 ;; This function is called by:
  8174 ;;		_interrupts_clear_colorclick
  8175 ;; This function uses a non-reentrant model
  8176 ;;
  8177                           
  8178                           	psect	text47
  8179   0025E8                     __ptext47:
  8180                           	callstack 0
  8181   0025E8                     _init_colorclick_interrupts:
  8182                           	callstack 18
  8183   0025E8                     
  8184                           ;interrupts.c: 45:     color_writetoaddr(0x00,0b10011);
  8185   0025E8  0E13               	movlw	19
  8186   0025EA  6E0B               	movwf	color_writetoaddr@value^0,c
  8187   0025EC  0E00               	movlw	0
  8188   0025EE  EC5A  F014         	call	_color_writetoaddr
  8189   0025F2                     
  8190                           ;interrupts.c: 46:     _delay((unsigned long)((3)*(64000000/4000.0)));
  8191   0025F2  0E3F               	movlw	63
  8192   0025F4  6E0D               	movwf	??_init_colorclick_interrupts^0,c
  8193   0025F6  0E55               	movlw	85
  8194   0025F8                     u4677:
  8195   0025F8  2EE8               	decfsz	wreg,f,c
  8196   0025FA  D7FE               	bra	u4677
  8197   0025FC  2E0D               	decfsz	??_init_colorclick_interrupts^0,f,c
  8198   0025FE  D7FC               	bra	u4677
  8199   002600  F000               	nop	
  8200   002602                     
  8201                           ;interrupts.c: 48:     color_writetoaddr(0x0C,0b0100);
  8202   002602  0E04               	movlw	4
  8203   002604  6E0B               	movwf	color_writetoaddr@value^0,c
  8204   002606  0E0C               	movlw	12
  8205   002608  EC5A  F014         	call	_color_writetoaddr
  8206   00260C                     
  8207                           ;interrupts.c: 49:     color_writetoaddr(0x04,(int_threshold_low & 0xFF));
  8208   00260C  C04F  F00B         	movff	_int_threshold_low,color_writetoaddr@value
  8209   002610  0E04               	movlw	4
  8210   002612  EC5A  F014         	call	_color_writetoaddr
  8211   002616                     
  8212                           ;interrupts.c: 50:     color_writetoaddr(0x05,(int_threshold_low >> 8));
  8213   002616  5050               	movf	(_int_threshold_low+1)^0,w,c
  8214   002618  6E0B               	movwf	color_writetoaddr@value^0,c
  8215   00261A  0E05               	movlw	5
  8216   00261C  EC5A  F014         	call	_color_writetoaddr
  8217   002620                     
  8218                           ;interrupts.c: 51:     color_writetoaddr(0x06,(int_threshold_high & 0xFF));
  8219   002620  C0D3  F00B         	movff	_int_threshold_high,color_writetoaddr@value
  8220   002624  0E06               	movlw	6
  8221   002626  EC5A  F014         	call	_color_writetoaddr
  8222   00262A                     
  8223                           ;interrupts.c: 52:     color_writetoaddr(0x07,(int_threshold_high >> 8));
  8224   00262A  0100               	movlb	0	; () banked
  8225   00262C  51D4               	movf	(_int_threshold_high+1)& (0+255),w,b
  8226   00262E  6E0B               	movwf	color_writetoaddr@value^0,c
  8227   002630  0E07               	movlw	7
  8228   002632  EC5A  F014         	call	_color_writetoaddr
  8229   002636  0012               	return		;funcret
  8230   002638                     __end_of_init_colorclick_interrupts:
  8231                           	callstack 0
  8232                           
  8233 ;; *************** function _color_writetoaddr *****************
  8234 ;; Defined at:
  8235 ;;		line 22 in file "color.c"
  8236 ;; Parameters:    Size  Location     Type
  8237 ;;  address         1    wreg     unsigned char 
  8238 ;;  value           1   10[COMRAM] unsigned char 
  8239 ;; Auto vars:     Size  Location     Type
  8240 ;;  address         1   11[COMRAM] unsigned char 
  8241 ;; Return value:  Size  Location     Type
  8242 ;;                  1    wreg      void 
  8243 ;; Registers used:
  8244 ;;		wreg, status,2, status,0, cstack
  8245 ;; Tracked objects:
  8246 ;;		On entry : 0/0
  8247 ;;		On exit  : 0/0
  8248 ;;		Unchanged: 0/0
  8249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8250 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8251 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8253 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8254 ;;Total ram usage:        2 bytes
  8255 ;; Hardware stack levels used: 1
  8256 ;; Hardware stack levels required when called: 9
  8257 ;; This function calls:
  8258 ;;		_I2C_2_Master_Start
  8259 ;;		_I2C_2_Master_Stop
  8260 ;;		_I2C_2_Master_Write
  8261 ;; This function is called by:
  8262 ;;		_color_click_init
  8263 ;;		_init_colorclick_interrupts
  8264 ;; This function uses a non-reentrant model
  8265 ;;
  8266                           
  8267                           	psect	text48
  8268   0028B4                     __ptext48:
  8269                           	callstack 0
  8270   0028B4                     _color_writetoaddr:
  8271                           	callstack 20
  8272                           
  8273                           ;incstack = 0
  8274                           ;color_writetoaddr@address stored from wreg
  8275   0028B4  6E0C               	movwf	color_writetoaddr@address^0,c
  8276   0028B6                     
  8277                           ;color.c: 23:     I2C_2_Master_Start();
  8278   0028B6  ECD1  F014         	call	_I2C_2_Master_Start	;wreg free
  8279                           
  8280                           ;color.c: 24:     I2C_2_Master_Write(0x52 | 0x00);
  8281   0028BA  0E52               	movlw	82
  8282   0028BC  ECBB  F014         	call	_I2C_2_Master_Write
  8283                           
  8284                           ;color.c: 25:     I2C_2_Master_Write(0x80 | address);
  8285   0028C0  500C               	movf	color_writetoaddr@address^0,w,c
  8286   0028C2  0980               	iorlw	128
  8287   0028C4  ECBB  F014         	call	_I2C_2_Master_Write
  8288                           
  8289                           ;color.c: 26:     I2C_2_Master_Write(value);
  8290   0028C8  500B               	movf	color_writetoaddr@value^0,w,c
  8291   0028CA  ECBB  F014         	call	_I2C_2_Master_Write
  8292                           
  8293                           ;color.c: 27:     I2C_2_Master_Stop();
  8294   0028CE  ECCC  F014         	call	_I2C_2_Master_Stop	;wreg free
  8295   0028D2  0012               	return		;funcret
  8296   0028D4                     __end_of_color_writetoaddr:
  8297                           	callstack 0
  8298                           
  8299 ;; *************** function _I2C_2_Master_Write *****************
  8300 ;; Defined at:
  8301 ;;		line 45 in file "i2c.c"
  8302 ;; Parameters:    Size  Location     Type
  8303 ;;  data_byte       1    wreg     unsigned char 
  8304 ;; Auto vars:     Size  Location     Type
  8305 ;;  data_byte       1    9[COMRAM] unsigned char 
  8306 ;; Return value:  Size  Location     Type
  8307 ;;                  1    wreg      void 
  8308 ;; Registers used:
  8309 ;;		wreg, status,2, status,0, cstack
  8310 ;; Tracked objects:
  8311 ;;		On entry : 0/0
  8312 ;;		On exit  : 0/0
  8313 ;;		Unchanged: 0/0
  8314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8316 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8318 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8319 ;;Total ram usage:        1 bytes
  8320 ;; Hardware stack levels used: 1
  8321 ;; Hardware stack levels required when called: 8
  8322 ;; This function calls:
  8323 ;;		_I2C_2_Master_Idle
  8324 ;; This function is called by:
  8325 ;;		_color_writetoaddr
  8326 ;;		_color_read_Red
  8327 ;;		_color_read_Green
  8328 ;;		_color_read_Blue
  8329 ;;		_color_read_Clear
  8330 ;;		_interrupts_clear_colorclick
  8331 ;; This function uses a non-reentrant model
  8332 ;;
  8333                           
  8334                           	psect	text49
  8335   002976                     __ptext49:
  8336                           	callstack 0
  8337   002976                     _I2C_2_Master_Write:
  8338                           	callstack 20
  8339                           
  8340                           ;incstack = 0
  8341                           ;I2C_2_Master_Write@data_byte stored from wreg
  8342   002976  6E0A               	movwf	I2C_2_Master_Write@data_byte^0,c
  8343   002978                     
  8344                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  8345   002978  ECEC  F013         	call	_I2C_2_Master_Idle	;wreg free
  8346   00297C                     
  8347                           ;i2c.c: 48:   SSP2BUF = data_byte;
  8348   00297C  C00A  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  8349   002980  0012               	return		;funcret
  8350   002982                     __end_of_I2C_2_Master_Write:
  8351                           	callstack 0
  8352                           
  8353 ;; *************** function _I2C_2_Master_Stop *****************
  8354 ;; Defined at:
  8355 ;;		line 39 in file "i2c.c"
  8356 ;; Parameters:    Size  Location     Type
  8357 ;;		None
  8358 ;; Auto vars:     Size  Location     Type
  8359 ;;		None
  8360 ;; Return value:  Size  Location     Type
  8361 ;;                  1    wreg      void 
  8362 ;; Registers used:
  8363 ;;		wreg, status,2, status,0, cstack
  8364 ;; Tracked objects:
  8365 ;;		On entry : 0/0
  8366 ;;		On exit  : 0/0
  8367 ;;		Unchanged: 0/0
  8368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8373 ;;Total ram usage:        0 bytes
  8374 ;; Hardware stack levels used: 1
  8375 ;; Hardware stack levels required when called: 8
  8376 ;; This function calls:
  8377 ;;		_I2C_2_Master_Idle
  8378 ;; This function is called by:
  8379 ;;		_color_writetoaddr
  8380 ;;		_color_read_Red
  8381 ;;		_color_read_Green
  8382 ;;		_color_read_Blue
  8383 ;;		_color_read_Clear
  8384 ;;		_interrupts_clear_colorclick
  8385 ;; This function uses a non-reentrant model
  8386 ;;
  8387                           
  8388                           	psect	text50
  8389   002998                     __ptext50:
  8390                           	callstack 0
  8391   002998                     _I2C_2_Master_Stop:
  8392                           	callstack 20
  8393   002998                     
  8394                           ;i2c.c: 41:   I2C_2_Master_Idle();
  8395   002998  ECEC  F013         	call	_I2C_2_Master_Idle	;wreg free
  8396   00299C                     
  8397                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  8398   00299C  010E               	movlb	14	; () banked
  8399   00299E  85DA               	bsf	218,2,b	;volatile
  8400   0029A0                     
  8401                           ; BSR set to: 14
  8402   0029A0  0012               	return		;funcret
  8403   0029A2                     __end_of_I2C_2_Master_Stop:
  8404                           	callstack 0
  8405                           
  8406 ;; *************** function _I2C_2_Master_Start *****************
  8407 ;; Defined at:
  8408 ;;		line 27 in file "i2c.c"
  8409 ;; Parameters:    Size  Location     Type
  8410 ;;		None
  8411 ;; Auto vars:     Size  Location     Type
  8412 ;;		None
  8413 ;; Return value:  Size  Location     Type
  8414 ;;                  1    wreg      void 
  8415 ;; Registers used:
  8416 ;;		wreg, status,2, status,0, cstack
  8417 ;; Tracked objects:
  8418 ;;		On entry : 0/0
  8419 ;;		On exit  : 0/0
  8420 ;;		Unchanged: 0/0
  8421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8426 ;;Total ram usage:        0 bytes
  8427 ;; Hardware stack levels used: 1
  8428 ;; Hardware stack levels required when called: 8
  8429 ;; This function calls:
  8430 ;;		_I2C_2_Master_Idle
  8431 ;; This function is called by:
  8432 ;;		_color_writetoaddr
  8433 ;;		_color_read_Red
  8434 ;;		_color_read_Green
  8435 ;;		_color_read_Blue
  8436 ;;		_color_read_Clear
  8437 ;;		_interrupts_clear_colorclick
  8438 ;; This function uses a non-reentrant model
  8439 ;;
  8440                           
  8441                           	psect	text51
  8442   0029A2                     __ptext51:
  8443                           	callstack 0
  8444   0029A2                     _I2C_2_Master_Start:
  8445                           	callstack 20
  8446   0029A2                     
  8447                           ;i2c.c: 29:   I2C_2_Master_Idle();
  8448   0029A2  ECEC  F013         	call	_I2C_2_Master_Idle	;wreg free
  8449   0029A6                     
  8450                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  8451   0029A6  010E               	movlb	14	; () banked
  8452   0029A8  81DA               	bsf	218,0,b	;volatile
  8453   0029AA                     
  8454                           ; BSR set to: 14
  8455   0029AA  0012               	return		;funcret
  8456   0029AC                     __end_of_I2C_2_Master_Start:
  8457                           	callstack 0
  8458                           
  8459 ;; *************** function _I2C_2_Master_Idle *****************
  8460 ;; Defined at:
  8461 ;;		line 22 in file "i2c.c"
  8462 ;; Parameters:    Size  Location     Type
  8463 ;;		None
  8464 ;; Auto vars:     Size  Location     Type
  8465 ;;		None
  8466 ;; Return value:  Size  Location     Type
  8467 ;;                  1    wreg      void 
  8468 ;; Registers used:
  8469 ;;		wreg, status,2, status,0
  8470 ;; Tracked objects:
  8471 ;;		On entry : 0/0
  8472 ;;		On exit  : 0/0
  8473 ;;		Unchanged: 0/0
  8474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8477 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8478 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8479 ;;Total ram usage:        1 bytes
  8480 ;; Hardware stack levels used: 1
  8481 ;; Hardware stack levels required when called: 7
  8482 ;; This function calls:
  8483 ;;		Nothing
  8484 ;; This function is called by:
  8485 ;;		_I2C_2_Master_Start
  8486 ;;		_I2C_2_Master_RepStart
  8487 ;;		_I2C_2_Master_Stop
  8488 ;;		_I2C_2_Master_Write
  8489 ;;		_I2C_2_Master_Read
  8490 ;; This function uses a non-reentrant model
  8491 ;;
  8492                           
  8493                           	psect	text52
  8494   0027D8                     __ptext52:
  8495                           	callstack 0
  8496   0027D8                     _I2C_2_Master_Idle:
  8497                           	callstack 20
  8498   0027D8                     l89:
  8499   0027D8  010E               	movlb	14	; () banked
  8500   0027DA  B5D8               	btfsc	216,2,b	;volatile
  8501   0027DC  EFF2  F013         	goto	u2011
  8502   0027E0  EFF4  F013         	goto	u2010
  8503   0027E4                     u2011:
  8504   0027E4  EFEC  F013         	goto	l89
  8505   0027E8                     u2010:
  8506   0027E8                     
  8507                           ; BSR set to: 14
  8508   0027E8  CEDA F009          	movff	3802,??_I2C_2_Master_Idle	;volatile
  8509   0027EC  0E1F               	movlw	31
  8510   0027EE  1609               	andwf	??_I2C_2_Master_Idle^0,f,c
  8511   0027F0  A4D8               	btfss	status,2,c
  8512   0027F2  EFFD  F013         	goto	u2021
  8513   0027F6  EFFF  F013         	goto	u2020
  8514   0027FA                     u2021:
  8515   0027FA  EFEC  F013         	goto	l89
  8516   0027FE                     u2020:
  8517   0027FE                     
  8518                           ; BSR set to: 14
  8519   0027FE  0012               	return		;funcret
  8520   002800                     __end_of_I2C_2_Master_Idle:
  8521                           	callstack 0
  8522                           
  8523 ;; *************** function _AppendTime *****************
  8524 ;; Defined at:
  8525 ;;		line 23 in file "Memorization.c"
  8526 ;; Parameters:    Size  Location     Type
  8527 ;;  temp            2    8[COMRAM] unsigned int 
  8528 ;;  time_index      2   10[COMRAM] PTR unsigned char 
  8529 ;;		 -> time_index(1), 
  8530 ;;  time_array      2   12[COMRAM] PTR unsigned int 
  8531 ;;		 -> time_array(80), 
  8532 ;; Auto vars:     Size  Location     Type
  8533 ;;		None
  8534 ;; Return value:  Size  Location     Type
  8535 ;;                  1    wreg      void 
  8536 ;; Registers used:
  8537 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8538 ;; Tracked objects:
  8539 ;;		On entry : 0/0
  8540 ;;		On exit  : 0/0
  8541 ;;		Unchanged: 0/0
  8542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8543 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8545 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8546 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8547 ;;Total ram usage:        9 bytes
  8548 ;; Hardware stack levels used: 1
  8549 ;; Hardware stack levels required when called: 7
  8550 ;; This function calls:
  8551 ;;		Nothing
  8552 ;; This function is called by:
  8553 ;;		_main
  8554 ;; This function uses a non-reentrant model
  8555 ;;
  8556                           
  8557                           	psect	text53
  8558   00277C                     __ptext53:
  8559                           	callstack 0
  8560   00277C                     _AppendTime:
  8561                           	callstack 23
  8562   00277C                     
  8563                           ;Memorization.c: 25:     time_array[(*time_index)++] = temp;
  8564   00277C  C00B  FFD9         	movff	AppendTime@time_index,fsr2l
  8565   002780  C00C  FFDA         	movff	AppendTime@time_index+1,fsr2h
  8566   002784  CFDF F00F          	movff	indf2,??_AppendTime
  8567   002788  0E01               	movlw	1
  8568   00278A  26DF               	addwf	indf2,f,c
  8569   00278C  500F               	movf	??_AppendTime^0,w,c
  8570   00278E  0D02               	mullw	2
  8571   002790  CFF3 F010          	movff	prodl,??_AppendTime+1
  8572   002794  CFF4 F011          	movff	prodh,??_AppendTime+2
  8573   002798  5010               	movf	(??_AppendTime+1)^0,w,c
  8574   00279A  240D               	addwf	AppendTime@time_array^0,w,c
  8575   00279C  6ED9               	movwf	fsr2l,c
  8576   00279E  5011               	movf	(??_AppendTime+2)^0,w,c
  8577   0027A0  200E               	addwfc	(AppendTime@time_array+1)^0,w,c
  8578   0027A2  6EDA               	movwf	fsr2h,c
  8579   0027A4  C009  FFDE         	movff	AppendTime@temp,postinc2
  8580   0027A8  C00A  FFDD         	movff	AppendTime@temp+1,postdec2
  8581   0027AC  0012               	return		;funcret
  8582   0027AE                     __end_of_AppendTime:
  8583                           	callstack 0
  8584                           
  8585 ;; *************** function _LowISR *****************
  8586 ;; Defined at:
  8587 ;;		line 74 in file "interrupts.c"
  8588 ;; Parameters:    Size  Location     Type
  8589 ;;		None
  8590 ;; Auto vars:     Size  Location     Type
  8591 ;;		None
  8592 ;; Return value:  Size  Location     Type
  8593 ;;                  1    wreg      void 
  8594 ;; Registers used:
  8595 ;;		wreg, status,2
  8596 ;; Tracked objects:
  8597 ;;		On entry : 0/0
  8598 ;;		On exit  : 0/0
  8599 ;;		Unchanged: 0/0
  8600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8603 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8604 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8605 ;;Total ram usage:        3 bytes
  8606 ;; Hardware stack levels used: 1
  8607 ;; Hardware stack levels required when called: 6
  8608 ;; This function calls:
  8609 ;;		Nothing
  8610 ;; This function is called by:
  8611 ;;		Interrupt level 1
  8612 ;; This function uses a non-reentrant model
  8613 ;;
  8614                           
  8615                           	psect	intcodelo
  8616   000018                     __pintcodelo:
  8617                           	callstack 0
  8618   000018                     _LowISR:
  8619                           	callstack 16
  8620                           
  8621                           ;incstack = 0
  8622   000018  8057               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  8623   00001A  CFD8 F006          	movff	status,??_LowISR
  8624   00001E  CFE8 F007          	movff	wreg,??_LowISR+1
  8625   000022  CFE0 F008          	movff	bsr,??_LowISR+2
  8626   000026                     
  8627                           ;interrupts.c: 77:     if(PIR0bits.TMR0IF){
  8628   000026  010E               	movlb	14	; () banked
  8629   000028  AB33               	btfss	51,5,b	;volatile
  8630   00002A  EF19  F000         	goto	i1u373_21
  8631   00002E  EF1B  F000         	goto	i1u373_20
  8632   000032                     i1u373_21:
  8633   000032  EF24  F000         	goto	i1l324
  8634   000036                     i1u373_20:
  8635   000036                     
  8636                           ; BSR set to: 14
  8637                           ;interrupts.c: 78:         TMR0H = 0b11000010;
  8638   000036  0EC2               	movlw	194
  8639   000038  6ED4               	movwf	212,c	;volatile
  8640                           
  8641                           ;interrupts.c: 79:         TMR0L = 0b11110110;
  8642   00003A  0EF6               	movlw	246
  8643   00003C  6ED3               	movwf	211,c	;volatile
  8644                           
  8645                           ;interrupts.c: 80:         tmr_ovf = 1;
  8646   00003E  0E01               	movlw	1
  8647   000040  0100               	movlb	0	; () banked
  8648   000042  6F74               	movwf	_tmr_ovf& (0+255),b
  8649   000044                     
  8650                           ; BSR set to: 0
  8651                           ;interrupts.c: 81:         PIR0bits.TMR0IF=0;
  8652   000044  010E               	movlb	14	; () banked
  8653   000046  9B33               	bcf	51,5,b	;volatile
  8654   000048                     i1l324:
  8655                           
  8656                           ; BSR set to: 14
  8657   000048  C008  FFE0         	movff	??_LowISR+2,bsr
  8658   00004C  C007  FFE8         	movff	??_LowISR+1,wreg
  8659   000050  C006  FFD8         	movff	??_LowISR,status
  8660   000054  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  8661   000056  0010               	retfie	
  8662   000058                     __end_of_LowISR:
  8663                           	callstack 0
  8664                           
  8665 ;; *************** function _HighISR *****************
  8666 ;; Defined at:
  8667 ;;		line 88 in file "interrupts.c"
  8668 ;; Parameters:    Size  Location     Type
  8669 ;;		None
  8670 ;; Auto vars:     Size  Location     Type
  8671 ;;		None
  8672 ;; Return value:  Size  Location     Type
  8673 ;;                  1    wreg      void 
  8674 ;; Registers used:
  8675 ;;		wreg, status,2, status,0, cstack
  8676 ;; Tracked objects:
  8677 ;;		On entry : 0/0
  8678 ;;		On exit  : 0/0
  8679 ;;		Unchanged: 0/0
  8680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8685 ;;Total ram usage:        0 bytes
  8686 ;; Hardware stack levels used: 1
  8687 ;; Hardware stack levels required when called: 5
  8688 ;; This function calls:
  8689 ;;		i2_interrupts_clear_colorclick
  8690 ;; This function is called by:
  8691 ;;		Interrupt level 2
  8692 ;; This function uses a non-reentrant model
  8693 ;;
  8694                           
  8695                           	psect	intcode
  8696   000008                     __pintcode:
  8697                           	callstack 0
  8698   000008                     _HighISR:
  8699                           	callstack 16
  8700                           
  8701                           ; BSR set to: 14
  8702                           ;incstack = 0
  8703   000008  8257               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8704   00000A  EF6A  F014         	goto	int_func
  8705                           
  8706                           	psect	intcode_body
  8707   0028D4                     __pintcode_body:
  8708                           	callstack 16
  8709   0028D4                     int_func:
  8710                           	callstack 16
  8711   0028D4                     
  8712                           ;interrupts.c: 115:     if(PIR0bits.INT1IF){
  8713   0028D4  010E               	movlb	14	; () banked
  8714   0028D6  A333               	btfss	51,1,b	;volatile
  8715   0028D8  EF70  F014         	goto	i2u374_41
  8716   0028DC  EF72  F014         	goto	i2u374_40
  8717   0028E0                     i2u374_41:
  8718   0028E0  EF78  F014         	goto	i2l332
  8719   0028E4                     i2u374_40:
  8720   0028E4                     
  8721                           ; BSR set to: 14
  8722                           ;interrupts.c: 116:         color_flag = 1;
  8723   0028E4  0E01               	movlw	1
  8724   0028E6  6E55               	movwf	_color_flag^0,c
  8725   0028E8                     
  8726                           ; BSR set to: 14
  8727                           ;interrupts.c: 118:         interrupts_clear_colorclick();
  8728   0028E8  ECA6  F014         	call	i2_interrupts_clear_colorclick	;wreg free
  8729   0028EC                     
  8730                           ;interrupts.c: 119:         PIR0bits.INT1IF = 0;
  8731   0028EC  010E               	movlb	14	; () banked
  8732   0028EE  9333               	bcf	51,1,b	;volatile
  8733   0028F0                     i2l332:
  8734                           
  8735                           ; BSR set to: 14
  8736   0028F0  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8737   0028F2  0011               	retfie		f
  8738   0028F4                     __end_of_HighISR:
  8739                           	callstack 0
  8740                           
  8741 ;; *************** function i2_interrupts_clear_colorclick *****************
  8742 ;; Defined at:
  8743 ;;		line 57 in file "interrupts.c"
  8744 ;; Parameters:    Size  Location     Type
  8745 ;;		None
  8746 ;; Auto vars:     Size  Location     Type
  8747 ;;		None
  8748 ;; Return value:  Size  Location     Type
  8749 ;;                  1    wreg      void 
  8750 ;; Registers used:
  8751 ;;		wreg, status,2, status,0, cstack
  8752 ;; Tracked objects:
  8753 ;;		On entry : 0/0
  8754 ;;		On exit  : 0/0
  8755 ;;		Unchanged: 0/0
  8756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8761 ;;Total ram usage:        0 bytes
  8762 ;; Hardware stack levels used: 1
  8763 ;; Hardware stack levels required when called: 4
  8764 ;; This function calls:
  8765 ;;		i2_I2C_2_Master_Start
  8766 ;;		i2_I2C_2_Master_Stop
  8767 ;;		i2_I2C_2_Master_Write
  8768 ;;		i2_init_colorclick_interrupts
  8769 ;; This function is called by:
  8770 ;;		_HighISR
  8771 ;; This function uses a non-reentrant model
  8772 ;;
  8773                           
  8774                           	psect	text56
  8775   00294C                     __ptext56:
  8776                           	callstack 0
  8777   00294C                     i2_interrupts_clear_colorclick:
  8778                           	callstack 16
  8779   00294C                     
  8780                           ;interrupts.c: 59:     I2C_2_Master_Start();
  8781   00294C  ECDB  F014         	call	i2_I2C_2_Master_Start	;wreg free
  8782                           
  8783                           ;interrupts.c: 60:     I2C_2_Master_Write(0x52 | 0x00);
  8784   002950  0E52               	movlw	82
  8785   002952  ECC1  F014         	call	i2_I2C_2_Master_Write
  8786                           
  8787                           ;interrupts.c: 61:     I2C_2_Master_Write(0b11100110);
  8788   002956  0EE6               	movlw	230
  8789   002958  ECC1  F014         	call	i2_I2C_2_Master_Write
  8790                           
  8791                           ;interrupts.c: 62:     I2C_2_Master_Stop();
  8792   00295C  ECD6  F014         	call	i2_I2C_2_Master_Stop	;wreg free
  8793                           
  8794                           ;interrupts.c: 64:     init_colorclick_interrupts();
  8795   002960  EC1C  F013         	call	i2_init_colorclick_interrupts	;wreg free
  8796   002964  0012               	return		;funcret
  8797   002966                     __end_ofi2_interrupts_clear_colorclick:
  8798                           	callstack 0
  8799                           
  8800 ;; *************** function i2_init_colorclick_interrupts *****************
  8801 ;; Defined at:
  8802 ;;		line 43 in file "interrupts.c"
  8803 ;; Parameters:    Size  Location     Type
  8804 ;;		None
  8805 ;; Auto vars:     Size  Location     Type
  8806 ;;		None
  8807 ;; Return value:  Size  Location     Type
  8808 ;;                  1    wreg      void 
  8809 ;; Registers used:
  8810 ;;		wreg, status,2, status,0, cstack
  8811 ;; Tracked objects:
  8812 ;;		On entry : 0/0
  8813 ;;		On exit  : 0/0
  8814 ;;		Unchanged: 0/0
  8815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8818 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8819 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8820 ;;Total ram usage:        1 bytes
  8821 ;; Hardware stack levels used: 1
  8822 ;; Hardware stack levels required when called: 3
  8823 ;; This function calls:
  8824 ;;		i2_color_writetoaddr
  8825 ;; This function is called by:
  8826 ;;		i2_interrupts_clear_colorclick
  8827 ;; This function uses a non-reentrant model
  8828 ;;
  8829                           
  8830                           	psect	text57
  8831   002638                     __ptext57:
  8832                           	callstack 0
  8833   002638                     i2_init_colorclick_interrupts:
  8834                           	callstack 16
  8835   002638                     
  8836                           ;interrupts.c: 45:     color_writetoaddr(0x00,0b10011);
  8837   002638  0E13               	movlw	19
  8838   00263A  6E03               	movwf	i2color_writetoaddr@value^0,c
  8839   00263C  0E00               	movlw	0
  8840   00263E  EC7A  F014         	call	i2_color_writetoaddr
  8841   002642                     
  8842                           ;interrupts.c: 46:     _delay((unsigned long)((3)*(64000000/4000.0)));
  8843   002642  0E3F               	movlw	63
  8844   002644  6E05               	movwf	??i2_init_colorclick_interrupts^0,c
  8845   002646  0E55               	movlw	85
  8846   002648                     i2u468_47:
  8847   002648  2EE8               	decfsz	wreg,f,c
  8848   00264A  D7FE               	bra	i2u468_47
  8849   00264C  2E05               	decfsz	??i2_init_colorclick_interrupts^0,f,c
  8850   00264E  D7FC               	bra	i2u468_47
  8851   002650  F000               	nop	
  8852   002652                     
  8853                           ;interrupts.c: 48:     color_writetoaddr(0x0C,0b0100);
  8854   002652  0E04               	movlw	4
  8855   002654  6E03               	movwf	i2color_writetoaddr@value^0,c
  8856   002656  0E0C               	movlw	12
  8857   002658  EC7A  F014         	call	i2_color_writetoaddr
  8858   00265C                     
  8859                           ;interrupts.c: 49:     color_writetoaddr(0x04,(int_threshold_low & 0xFF));
  8860   00265C  C04F  F003         	movff	_int_threshold_low,i2color_writetoaddr@value
  8861   002660  0E04               	movlw	4
  8862   002662  EC7A  F014         	call	i2_color_writetoaddr
  8863   002666                     
  8864                           ;interrupts.c: 50:     color_writetoaddr(0x05,(int_threshold_low >> 8));
  8865   002666  5050               	movf	(_int_threshold_low+1)^0,w,c
  8866   002668  6E03               	movwf	i2color_writetoaddr@value^0,c
  8867   00266A  0E05               	movlw	5
  8868   00266C  EC7A  F014         	call	i2_color_writetoaddr
  8869   002670                     
  8870                           ;interrupts.c: 51:     color_writetoaddr(0x06,(int_threshold_high & 0xFF));
  8871   002670  C0D3  F003         	movff	_int_threshold_high,i2color_writetoaddr@value
  8872   002674  0E06               	movlw	6
  8873   002676  EC7A  F014         	call	i2_color_writetoaddr
  8874   00267A                     
  8875                           ;interrupts.c: 52:     color_writetoaddr(0x07,(int_threshold_high >> 8));
  8876   00267A  0100               	movlb	0	; () banked
  8877   00267C  51D4               	movf	(_int_threshold_high+1)& (0+255),w,b
  8878   00267E  6E03               	movwf	i2color_writetoaddr@value^0,c
  8879   002680  0E07               	movlw	7
  8880   002682  EC7A  F014         	call	i2_color_writetoaddr
  8881   002686  0012               	return		;funcret
  8882   002688                     __end_ofi2_init_colorclick_interrupts:
  8883                           	callstack 0
  8884                           
  8885 ;; *************** function i2_color_writetoaddr *****************
  8886 ;; Defined at:
  8887 ;;		line 22 in file "color.c"
  8888 ;; Parameters:    Size  Location     Type
  8889 ;;  address         1    wreg     unsigned char 
  8890 ;;  value           1    2[COMRAM] unsigned char 
  8891 ;; Auto vars:     Size  Location     Type
  8892 ;;  address         1    3[COMRAM] unsigned char 
  8893 ;; Return value:  Size  Location     Type
  8894 ;;                  1    wreg      void 
  8895 ;; Registers used:
  8896 ;;		wreg, status,2, status,0, cstack
  8897 ;; Tracked objects:
  8898 ;;		On entry : 0/0
  8899 ;;		On exit  : 0/0
  8900 ;;		Unchanged: 0/0
  8901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8902 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8903 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8905 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8906 ;;Total ram usage:        2 bytes
  8907 ;; Hardware stack levels used: 1
  8908 ;; Hardware stack levels required when called: 2
  8909 ;; This function calls:
  8910 ;;		i2_I2C_2_Master_Start
  8911 ;;		i2_I2C_2_Master_Stop
  8912 ;;		i2_I2C_2_Master_Write
  8913 ;; This function is called by:
  8914 ;;		i2_init_colorclick_interrupts
  8915 ;; This function uses a non-reentrant model
  8916 ;;
  8917                           
  8918                           	psect	text58
  8919   0028F4                     __ptext58:
  8920                           	callstack 0
  8921   0028F4                     i2_color_writetoaddr:
  8922                           	callstack 16
  8923                           
  8924                           ;incstack = 0
  8925                           ;i2color_writetoaddr@address stored from wreg
  8926   0028F4  6E04               	movwf	i2color_writetoaddr@address^0,c
  8927   0028F6                     
  8928                           ;color.c: 23:     I2C_2_Master_Start();
  8929   0028F6  ECDB  F014         	call	i2_I2C_2_Master_Start	;wreg free
  8930                           
  8931                           ;color.c: 24:     I2C_2_Master_Write(0x52 | 0x00);
  8932   0028FA  0E52               	movlw	82
  8933   0028FC  ECC1  F014         	call	i2_I2C_2_Master_Write
  8934                           
  8935                           ;color.c: 25:     I2C_2_Master_Write(0x80 | address);
  8936   002900  5004               	movf	i2color_writetoaddr@address^0,w,c
  8937   002902  0980               	iorlw	128
  8938   002904  ECC1  F014         	call	i2_I2C_2_Master_Write
  8939                           
  8940                           ;color.c: 26:     I2C_2_Master_Write(value);
  8941   002908  5003               	movf	i2color_writetoaddr@value^0,w,c
  8942   00290A  ECC1  F014         	call	i2_I2C_2_Master_Write
  8943                           
  8944                           ;color.c: 27:     I2C_2_Master_Stop();
  8945   00290E  ECD6  F014         	call	i2_I2C_2_Master_Stop	;wreg free
  8946   002912  0012               	return		;funcret
  8947   002914                     __end_ofi2_color_writetoaddr:
  8948                           	callstack 0
  8949                           
  8950 ;; *************** function i2_I2C_2_Master_Write *****************
  8951 ;; Defined at:
  8952 ;;		line 45 in file "i2c.c"
  8953 ;; Parameters:    Size  Location     Type
  8954 ;;  data_byte       1    wreg     unsigned char 
  8955 ;; Auto vars:     Size  Location     Type
  8956 ;;  data_byte       1    1[COMRAM] unsigned char 
  8957 ;; Return value:  Size  Location     Type
  8958 ;;                  1    wreg      void 
  8959 ;; Registers used:
  8960 ;;		wreg, status,2, status,0, cstack
  8961 ;; Tracked objects:
  8962 ;;		On entry : 0/0
  8963 ;;		On exit  : 0/0
  8964 ;;		Unchanged: 0/0
  8965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8967 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8969 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8970 ;;Total ram usage:        1 bytes
  8971 ;; Hardware stack levels used: 1
  8972 ;; Hardware stack levels required when called: 1
  8973 ;; This function calls:
  8974 ;;		i2_I2C_2_Master_Idle
  8975 ;; This function is called by:
  8976 ;;		i2_color_writetoaddr
  8977 ;;		i2_interrupts_clear_colorclick
  8978 ;; This function uses a non-reentrant model
  8979 ;;
  8980                           
  8981                           	psect	text59
  8982   002982                     __ptext59:
  8983                           	callstack 0
  8984   002982                     i2_I2C_2_Master_Write:
  8985                           	callstack 16
  8986                           
  8987                           ;incstack = 0
  8988                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  8989   002982  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  8990   002984                     
  8991                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  8992   002984  EC00  F014         	call	i2_I2C_2_Master_Idle	;wreg free
  8993   002988                     
  8994                           ;i2c.c: 48:   SSP2BUF = data_byte;
  8995   002988  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  8996   00298C  0012               	return		;funcret
  8997   00298E                     __end_ofi2_I2C_2_Master_Write:
  8998                           	callstack 0
  8999                           
  9000 ;; *************** function i2_I2C_2_Master_Stop *****************
  9001 ;; Defined at:
  9002 ;;		line 39 in file "i2c.c"
  9003 ;; Parameters:    Size  Location     Type
  9004 ;;		None
  9005 ;; Auto vars:     Size  Location     Type
  9006 ;;		None
  9007 ;; Return value:  Size  Location     Type
  9008 ;;                  1    wreg      void 
  9009 ;; Registers used:
  9010 ;;		wreg, status,2, status,0, cstack
  9011 ;; Tracked objects:
  9012 ;;		On entry : 0/0
  9013 ;;		On exit  : 0/0
  9014 ;;		Unchanged: 0/0
  9015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9020 ;;Total ram usage:        0 bytes
  9021 ;; Hardware stack levels used: 1
  9022 ;; Hardware stack levels required when called: 1
  9023 ;; This function calls:
  9024 ;;		i2_I2C_2_Master_Idle
  9025 ;; This function is called by:
  9026 ;;		i2_color_writetoaddr
  9027 ;;		i2_interrupts_clear_colorclick
  9028 ;; This function uses a non-reentrant model
  9029 ;;
  9030                           
  9031                           	psect	text60
  9032   0029AC                     __ptext60:
  9033                           	callstack 0
  9034   0029AC                     i2_I2C_2_Master_Stop:
  9035                           	callstack 16
  9036   0029AC                     
  9037                           ;i2c.c: 41:   I2C_2_Master_Idle();
  9038   0029AC  EC00  F014         	call	i2_I2C_2_Master_Idle	;wreg free
  9039   0029B0                     
  9040                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  9041   0029B0  010E               	movlb	14	; () banked
  9042   0029B2  85DA               	bsf	218,2,b	;volatile
  9043   0029B4                     
  9044                           ; BSR set to: 14
  9045   0029B4  0012               	return		;funcret
  9046   0029B6                     __end_ofi2_I2C_2_Master_Stop:
  9047                           	callstack 0
  9048                           
  9049 ;; *************** function i2_I2C_2_Master_Start *****************
  9050 ;; Defined at:
  9051 ;;		line 27 in file "i2c.c"
  9052 ;; Parameters:    Size  Location     Type
  9053 ;;		None
  9054 ;; Auto vars:     Size  Location     Type
  9055 ;;		None
  9056 ;; Return value:  Size  Location     Type
  9057 ;;                  1    wreg      void 
  9058 ;; Registers used:
  9059 ;;		wreg, status,2, status,0, cstack
  9060 ;; Tracked objects:
  9061 ;;		On entry : 0/0
  9062 ;;		On exit  : 0/0
  9063 ;;		Unchanged: 0/0
  9064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9069 ;;Total ram usage:        0 bytes
  9070 ;; Hardware stack levels used: 1
  9071 ;; Hardware stack levels required when called: 1
  9072 ;; This function calls:
  9073 ;;		i2_I2C_2_Master_Idle
  9074 ;; This function is called by:
  9075 ;;		i2_color_writetoaddr
  9076 ;;		i2_interrupts_clear_colorclick
  9077 ;; This function uses a non-reentrant model
  9078 ;;
  9079                           
  9080                           	psect	text61
  9081   0029B6                     __ptext61:
  9082                           	callstack 0
  9083   0029B6                     i2_I2C_2_Master_Start:
  9084                           	callstack 16
  9085   0029B6                     
  9086                           ;i2c.c: 29:   I2C_2_Master_Idle();
  9087   0029B6  EC00  F014         	call	i2_I2C_2_Master_Idle	;wreg free
  9088   0029BA                     
  9089                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  9090   0029BA  010E               	movlb	14	; () banked
  9091   0029BC  81DA               	bsf	218,0,b	;volatile
  9092   0029BE                     
  9093                           ; BSR set to: 14
  9094   0029BE  0012               	return		;funcret
  9095   0029C0                     __end_ofi2_I2C_2_Master_Start:
  9096                           	callstack 0
  9097                           
  9098 ;; *************** function i2_I2C_2_Master_Idle *****************
  9099 ;; Defined at:
  9100 ;;		line 22 in file "i2c.c"
  9101 ;; Parameters:    Size  Location     Type
  9102 ;;		None
  9103 ;; Auto vars:     Size  Location     Type
  9104 ;;		None
  9105 ;; Return value:  Size  Location     Type
  9106 ;;                  1    wreg      void 
  9107 ;; Registers used:
  9108 ;;		wreg, status,2, status,0
  9109 ;; Tracked objects:
  9110 ;;		On entry : 0/0
  9111 ;;		On exit  : 0/0
  9112 ;;		Unchanged: 0/0
  9113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9116 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9117 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9118 ;;Total ram usage:        1 bytes
  9119 ;; Hardware stack levels used: 1
  9120 ;; This function calls:
  9121 ;;		Nothing
  9122 ;; This function is called by:
  9123 ;;		i2_I2C_2_Master_Start
  9124 ;;		i2_I2C_2_Master_Stop
  9125 ;;		i2_I2C_2_Master_Write
  9126 ;; This function uses a non-reentrant model
  9127 ;;
  9128                           
  9129                           	psect	text62
  9130   002800                     __ptext62:
  9131                           	callstack 0
  9132   002800                     i2_I2C_2_Master_Idle:
  9133                           	callstack 16
  9134   002800                     i2l89:
  9135   002800  010E               	movlb	14	; () banked
  9136   002802  B5D8               	btfsc	216,2,b	;volatile
  9137   002804  EF06  F014         	goto	i2u213_41
  9138   002808  EF08  F014         	goto	i2u213_40
  9139   00280C                     i2u213_41:
  9140   00280C  EF00  F014         	goto	i2l89
  9141   002810                     i2u213_40:
  9142   002810                     
  9143                           ; BSR set to: 14
  9144   002810  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  9145   002814  0E1F               	movlw	31
  9146   002816  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  9147   002818  A4D8               	btfss	status,2,c
  9148   00281A  EF11  F014         	goto	i2u214_41
  9149   00281E  EF13  F014         	goto	i2u214_40
  9150   002822                     i2u214_41:
  9151   002822  EF00  F014         	goto	i2l89
  9152   002826                     i2u214_40:
  9153   002826                     
  9154                           ; BSR set to: 14
  9155   002826  0012               	return		;funcret
  9156   002828                     __end_ofi2_I2C_2_Master_Idle:
  9157                           	callstack 0
  9158   000000                     
  9159                           	psect	rparam
  9160   000000                     
  9161                           	psect	temp
  9162   000057                     btemp:
  9163                           	callstack 0
  9164   000057                     	ds	1
  9165   000000                     int$flags	set	btemp
  9166   000000                     wtemp8	set	btemp+1
  9167   000000                     ttemp5	set	btemp+1
  9168   000000                     ttemp6	set	btemp+4
  9169   000000                     ttemp7	set	btemp+8
  9170                           
  9171                           	psect	idloc
  9172                           
  9173                           ;Config register IDLOC0 @ 0x200000
  9174                           ;	unspecified, using default values
  9175   200000                     	org	2097152
  9176   200000  0FFF               	dw	4095
  9177                           
  9178                           ;Config register IDLOC1 @ 0x200002
  9179                           ;	unspecified, using default values
  9180   200002                     	org	2097154
  9181   200002  0FFF               	dw	4095
  9182                           
  9183                           ;Config register IDLOC2 @ 0x200004
  9184                           ;	unspecified, using default values
  9185   200004                     	org	2097156
  9186   200004  0FFF               	dw	4095
  9187                           
  9188                           ;Config register IDLOC3 @ 0x200006
  9189                           ;	unspecified, using default values
  9190   200006                     	org	2097158
  9191   200006  0FFF               	dw	4095
  9192                           
  9193                           ;Config register IDLOC4 @ 0x200008
  9194                           ;	unspecified, using default values
  9195   200008                     	org	2097160
  9196   200008  0FFF               	dw	4095
  9197                           
  9198                           ;Config register IDLOC5 @ 0x20000A
  9199                           ;	unspecified, using default values
  9200   20000A                     	org	2097162
  9201   20000A  0FFF               	dw	4095
  9202                           
  9203                           ;Config register IDLOC6 @ 0x20000C
  9204                           ;	unspecified, using default values
  9205   20000C                     	org	2097164
  9206   20000C  0FFF               	dw	4095
  9207                           
  9208                           ;Config register IDLOC7 @ 0x20000E
  9209                           ;	unspecified, using default values
  9210   20000E                     	org	2097166
  9211   20000E  0FFF               	dw	4095
  9212                           
  9213                           	psect	config
  9214                           
  9215                           ;Config register CONFIG1L @ 0x300000
  9216                           ;	External Oscillator mode Selection bits
  9217                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  9218                           ;	Power-up default value for COSC bits
  9219                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  9220   300000                     	org	3145728
  9221   300000  AA                 	db	170
  9222                           
  9223                           ;Config register CONFIG1H @ 0x300001
  9224                           ;	unspecified, using default values
  9225                           ;	Clock Out Enable bit
  9226                           ;	CLKOUTEN = 0x1, unprogrammed default
  9227                           ;	Clock Switch Enable bit
  9228                           ;	CSWEN = 0x1, unprogrammed default
  9229                           ;	Fail-Safe Clock Monitor Enable bit
  9230                           ;	FCMEN = 0x1, unprogrammed default
  9231   300001                     	org	3145729
  9232   300001  FF                 	db	255
  9233                           
  9234                           ;Config register CONFIG2L @ 0x300002
  9235                           ;	unspecified, using default values
  9236                           ;	Master Clear Enable bit
  9237                           ;	MCLRE = 0x1, unprogrammed default
  9238                           ;	Power-up Timer Enable bit
  9239                           ;	PWRTE = 0x1, unprogrammed default
  9240                           ;	Low-power BOR enable bit
  9241                           ;	LPBOREN = 0x1, unprogrammed default
  9242                           ;	Brown-out Reset Enable bits
  9243                           ;	BOREN = 0x3, unprogrammed default
  9244   300002                     	org	3145730
  9245   300002  FF                 	db	255
  9246                           
  9247                           ;Config register CONFIG2H @ 0x300003
  9248                           ;	unspecified, using default values
  9249                           ;	Brown Out Reset Voltage selection bits
  9250                           ;	BORV = 0x3, unprogrammed default
  9251                           ;	ZCD Disable bit
  9252                           ;	ZCD = 0x1, unprogrammed default
  9253                           ;	PPSLOCK bit One-Way Set Enable bit
  9254                           ;	PPS1WAY = 0x1, unprogrammed default
  9255                           ;	Stack Full/Underflow Reset Enable bit
  9256                           ;	STVREN = 0x1, unprogrammed default
  9257                           ;	Debugger Enable bit
  9258                           ;	DEBUG = 0x1, unprogrammed default
  9259                           ;	Extended Instruction Set Enable bit
  9260                           ;	XINST = 0x1, unprogrammed default
  9261   300003                     	org	3145731
  9262   300003  FF                 	db	255
  9263                           
  9264                           ;Config register CONFIG3L @ 0x300004
  9265                           ;	WDT Period Select bits
  9266                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  9267                           ;	WDT operating mode
  9268                           ;	WDTE = OFF, WDT Disabled
  9269   300004                     	org	3145732
  9270   300004  9F                 	db	159
  9271                           
  9272                           ;Config register CONFIG3H @ 0x300005
  9273                           ;	unspecified, using default values
  9274                           ;	WDT Window Select bits
  9275                           ;	WDTCWS = 0x7, unprogrammed default
  9276                           ;	WDT input clock selector
  9277                           ;	WDTCCS = 0x7, unprogrammed default
  9278   300005                     	org	3145733
  9279   300005  FF                 	db	255
  9280                           
  9281                           ;Config register CONFIG4L @ 0x300006
  9282                           ;	unspecified, using default values
  9283                           ;	Write Protection Block 0
  9284                           ;	WRT0 = 0x1, unprogrammed default
  9285                           ;	Write Protection Block 1
  9286                           ;	WRT1 = 0x1, unprogrammed default
  9287                           ;	Write Protection Block 2
  9288                           ;	WRT2 = 0x1, unprogrammed default
  9289                           ;	Write Protection Block 3
  9290                           ;	WRT3 = 0x1, unprogrammed default
  9291                           ;	Write Protection Block 3
  9292                           ;	WRT4 = 0x1, unprogrammed default
  9293                           ;	Write Protection Block 3
  9294                           ;	WRT5 = 0x1, unprogrammed default
  9295                           ;	Write Protection Block 3
  9296                           ;	WRT6 = 0x1, unprogrammed default
  9297                           ;	Write Protection Block 3
  9298                           ;	WRT7 = 0x1, unprogrammed default
  9299   300006                     	org	3145734
  9300   300006  FF                 	db	255
  9301                           
  9302                           ;Config register CONFIG4H @ 0x300007
  9303                           ;	unspecified, using default values
  9304                           ;	Configuration Register Write Protection bit
  9305                           ;	WRTC = 0x1, unprogrammed default
  9306                           ;	Boot Block Write Protection bit
  9307                           ;	WRTB = 0x1, unprogrammed default
  9308                           ;	Data EEPROM Write Protection bit
  9309                           ;	WRTD = 0x1, unprogrammed default
  9310                           ;	Scanner Enable bit
  9311                           ;	SCANE = 0x1, unprogrammed default
  9312                           ;	Low Voltage Programming Enable bit
  9313                           ;	LVP = 0x1, unprogrammed default
  9314   300007                     	org	3145735
  9315   300007  FF                 	db	255
  9316                           
  9317                           ;Config register CONFIG5L @ 0x300008
  9318                           ;	unspecified, using default values
  9319                           ;	UserNVM Program Memory Code Protection bit
  9320                           ;	CP = 0x1, unprogrammed default
  9321                           ;	DataNVM Memory Code Protection bit
  9322                           ;	CPD = 0x1, unprogrammed default
  9323   300008                     	org	3145736
  9324   300008  FF                 	db	255
  9325                           
  9326                           ;Config register CONFIG5H @ 0x300009
  9327                           ;	unspecified, using default values
  9328   300009                     	org	3145737
  9329   300009  FF                 	db	255
  9330                           
  9331                           ;Config register CONFIG6L @ 0x30000A
  9332                           ;	unspecified, using default values
  9333                           ;	Table Read Protection Block 0
  9334                           ;	EBTR0 = 0x1, unprogrammed default
  9335                           ;	Table Read Protection Block 1
  9336                           ;	EBTR1 = 0x1, unprogrammed default
  9337                           ;	Table Read Protection Block 2
  9338                           ;	EBTR2 = 0x1, unprogrammed default
  9339                           ;	Table Read Protection Block 3
  9340                           ;	EBTR3 = 0x1, unprogrammed default
  9341                           ;	Table Read Protection Block 4
  9342                           ;	EBTR4 = 0x1, unprogrammed default
  9343                           ;	Table Read Protection Block 5
  9344                           ;	EBTR5 = 0x1, unprogrammed default
  9345                           ;	Table Read Protection Block 6
  9346                           ;	EBTR6 = 0x1, unprogrammed default
  9347                           ;	Table Read Protection Block 7
  9348                           ;	EBTR7 = 0x1, unprogrammed default
  9349   30000A                     	org	3145738
  9350   30000A  FF                 	db	255
  9351                           
  9352                           ;Config register CONFIG6H @ 0x30000B
  9353                           ;	unspecified, using default values
  9354                           ;	Boot Block Table Read Protection bit
  9355                           ;	EBTRB = 0x1, unprogrammed default
  9356   30000B                     	org	3145739
  9357   30000B  FF                 	db	255
  9358                           tosu	equ	0xFFF
  9359                           tosh	equ	0xFFE
  9360                           tosl	equ	0xFFD
  9361                           stkptr	equ	0xFFC
  9362                           pclatu	equ	0xFFB
  9363                           pclath	equ	0xFFA
  9364                           pcl	equ	0xFF9
  9365                           tblptru	equ	0xFF8
  9366                           tblptrh	equ	0xFF7
  9367                           tblptrl	equ	0xFF6
  9368                           tablat	equ	0xFF5
  9369                           prodh	equ	0xFF4
  9370                           prodl	equ	0xFF3
  9371                           indf0	equ	0xFEF
  9372                           postinc0	equ	0xFEE
  9373                           postdec0	equ	0xFED
  9374                           preinc0	equ	0xFEC
  9375                           plusw0	equ	0xFEB
  9376                           fsr0h	equ	0xFEA
  9377                           fsr0l	equ	0xFE9
  9378                           wreg	equ	0xFE8
  9379                           indf1	equ	0xFE7
  9380                           postinc1	equ	0xFE6
  9381                           postdec1	equ	0xFE5
  9382                           preinc1	equ	0xFE4
  9383                           plusw1	equ	0xFE3
  9384                           fsr1h	equ	0xFE2
  9385                           fsr1l	equ	0xFE1
  9386                           bsr	equ	0xFE0
  9387                           indf2	equ	0xFDF
  9388                           postinc2	equ	0xFDE
  9389                           postdec2	equ	0xFDD
  9390                           preinc2	equ	0xFDC
  9391                           plusw2	equ	0xFDB
  9392                           fsr2h	equ	0xFDA
  9393                           fsr2l	equ	0xFD9
  9394                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         210
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     78      86
    BANK0           160     53     117
    BANK1           256      0     140
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    Return_Time@time_index	PTR unsigned char  size(2) Largest target is 1
		 -> time_index(BANK0[1]), 

    Return_Time@time_array	PTR unsigned int  size(2) Largest target is 80
		 -> time_array(BANK1[80]), 

    Return_Anti_Moves@moves_index	PTR unsigned char  size(2) Largest target is 1
		 -> moves_index(COMRAM[1]), 

    Return_Anti_Moves@anti_moves_array	PTR unsigned char  size(2) Largest target is 40
		 -> anti_moves_array(BANK0[40]), 

    AppendTime@time_index	PTR unsigned char  size(2) Largest target is 1
		 -> time_index(BANK0[1]), 

    AppendTime@time_array	PTR unsigned int  size(2) Largest target is 80
		 -> time_array(BANK1[80]), 

    AppendMoves@moves_index	PTR unsigned char  size(2) Largest target is 1
		 -> moves_index(COMRAM[1]), 

    AppendMoves@anti_moves_array	PTR unsigned char  size(2) Largest target is 40
		 -> anti_moves_array(BANK0[40]), 

    MoveBuggy@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    MoveBuggy@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    MoveBuggy@color_detected	PTR unsigned char  size(2) Largest target is 3561
		 -> RAM(DATA[3561]), 

    WhiteInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    WhiteInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    AntiPink@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    AntiPink@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    AntiYellow@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    AntiYellow@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    LightBlueInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    LightBlueInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    OrangeInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    OrangeInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    PinkInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    PinkInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    YellowInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    YellowInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    BlueInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    BlueInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    GreenInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    GreenInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    RedInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    RedInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnLeft135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnLeft90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    fullSpeedBackwards@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    fullSpeedBackwards@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    fullSpeedBackwards@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    fullSpeedBackwards@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    fullSpeedBackwards@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    fullSpeedBackwards@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    S1213DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    S1213DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), main@motorL(BANK0[9]), 

    detect_color@tempval	PTR struct RGB_val size(2) Largest target is 8
		 -> main@initial_color(BANK0[8]), 

    Update_RGBC@tempval	PTR struct RGB_val size(2) Largest target is 8
		 -> main@initial_color(BANK0[8]), 


Critical Paths under _main in COMRAM

    _detect_color->___fltol
    ___fltol->___flmul
    ___flmul->___fldiv
    ___fldiv->___xxtofl
    _color_click_init->_color_writetoaddr
    _WhiteInstructions->_MoveBuggy
    _MoveBuggy->_AntiPink
    _MoveBuggy->_AntiYellow
    _YellowInstructions->_turnRight90
    _RedInstructions->_turnRight90
    _PinkInstructions->_turnLeft90
    _OrangeInstructions->_turnRight135
    _turnRight135->_turnRight
    _LightBlueInstructions->_turnLeft135
    _turnLeft135->_turnLeft
    _GreenInstructions->_turnLeft90
    _AntiYellow->_BlueInstructions
    _turnRight90->_turnRight
    _turnRight->_setMotorPWM
    _AntiPink->_BlueInstructions
    _fullSpeedAhead->_setMotorPWM
    _BlueInstructions->_turnLeft90
    _turnLeft90->_turnLeft
    _turnLeft->_setMotorPWM
    _stop->_setMotorPWM
    _fullSpeedBackwards->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _Update_RGBC->_color_read_Blue
    _Update_RGBC->_color_read_Clear
    _Update_RGBC->_color_read_Green
    _Update_RGBC->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _interrupts_clear_colorclick->_init_colorclick_interrupts
    _init_colorclick_interrupts->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    i2_interrupts_clear_colorclick->i2_init_colorclick_interrupts
    i2_init_colorclick_interrupts->i2_color_writetoaddr
    i2_color_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_detect_color
    _detect_color->___fltol

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                31    31      0  405028
                                             22 BANK0     31    31      0
                         _AppendTime
                    _Interrupts_init
                           _LED_init
                          _MoveBuggy
                        _Timer0_init
                        _Update_RGBC
                  _WhiteInstructions
                         _WhiteLight
                   _color_click_init
                       _detect_color
                     _fullSpeedAhead
                    _initDCmotorsPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _detect_color                                        18    16      2    6580
                                              4 BANK0     18    16      2
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     616
                                              8 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     517
                                             72 COMRAM     6     2      4
                                              0 BANK0      4     4      0
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    1886
                                             47 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1541
                                             22 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     750
                                             12 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WhiteLight                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WhiteInstructions                                   11     7      4  205881
                                             58 COMRAM    11     7      4
                   _BlueInstructions
                          _MoveBuggy
                  _Return_Anti_Moves
                        _Return_Time
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (2) _Return_Time                                          9     5      4     219
                                              8 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (2) _Return_Anti_Moves                                    6     2      4     219
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _MoveBuggy                                            6     0      6  180746
                                             52 COMRAM     6     0      6
                           _AntiPink
                         _AntiYellow
                        _AppendMoves
                   _BlueInstructions
                  _GreenInstructions
              _LightBlueInstructions
                 _OrangeInstructions
                   _PinkInstructions
                    _RedInstructions
                 _YellowInstructions
 ---------------------------------------------------------------------------------
 (3) _YellowInstructions                                   7     3      4   16158
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                        _turnRight90
 ---------------------------------------------------------------------------------
 (3) _RedInstructions                                      7     3      4   16158
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                        _turnRight90
 ---------------------------------------------------------------------------------
 (3) _PinkInstructions                                     7     3      4   16310
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                         _turnLeft90
 ---------------------------------------------------------------------------------
 (3) _OrangeInstructions                                   7     3      4   15854
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                       _turnRight135
 ---------------------------------------------------------------------------------
 (4) _turnRight135                                         5     1      4    7601
                                             33 COMRAM     5     1      4
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (3) _LightBlueInstructions                                7     3      4   15702
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                        _turnLeft135
 ---------------------------------------------------------------------------------
 (4) _turnLeft135                                          5     1      4    7449
                                             33 COMRAM     5     1      4
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (3) _GreenInstructions                                    7     3      4   16310
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                         _turnLeft90
 ---------------------------------------------------------------------------------
 (3) _AppendMoves                                          6     2      4    1130
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _AntiYellow                                           7     3      4   32556
                                             45 COMRAM     7     3      4
                   _BlueInstructions
                     _fullSpeedAhead
                               _stop
                        _turnRight90
 ---------------------------------------------------------------------------------
 (4) _turnRight90                                          5     1      4    7905
                                             33 COMRAM     5     1      4
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (5) _turnRight                                            6     2      4    2593
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _AntiPink                                             7     3      4   32708
                                             45 COMRAM     7     3      4
                   _BlueInstructions
                     _fullSpeedAhead
                               _stop
                         _turnLeft90
 ---------------------------------------------------------------------------------
 (1) _fullSpeedAhead                                       6     2      4    2745
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _BlueInstructions                                     7     3      4   16810
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                         _turnLeft90
 ---------------------------------------------------------------------------------
 (4) _turnLeft90                                           5     1      4    8057
                                             33 COMRAM     5     1      4
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (5) _turnLeft                                             6     2      4    2441
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _stop                                                 5     1      4    4721
                                             27 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _fullSpeedBackwards                                   6     2      4    3201
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    1829
                                             21 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                             14 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Update_RGBC                                          2     0      2     616
                                             19 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              9 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0     772
        _interrupts_clear_colorclick
 ---------------------------------------------------------------------------------
 (2) _interrupts_clear_colorclick                          0     0      0     772
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
         _init_colorclick_interrupts
 ---------------------------------------------------------------------------------
 (3) _init_colorclick_interrupts                           1     1      0     750
                                             12 COMRAM     1     1      0
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     750
                                             10 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              9 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _AppendTime                                           9     3      6     522
                                              8 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _LowISR                                               3     3      0       0
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _HighISR                                             0     0      0     244
      i2_interrupts_clear_colorclick
 ---------------------------------------------------------------------------------
 (11) i2_interrupts_clear_colorclick                       0     0      0     244
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
       i2_init_colorclick_interrupts
 ---------------------------------------------------------------------------------
 (12) i2_init_colorclick_interrupts                        1     1      0     222
                                              4 COMRAM     1     1      0
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (13) i2_color_writetoaddr                                 2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (14) i2_I2C_2_Master_Write                                1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (14) i2_I2C_2_Master_Stop                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (14) i2_I2C_2_Master_Start                                0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (15) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AppendTime
   _Interrupts_init
     _interrupts_clear_colorclick
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
       _init_colorclick_interrupts
         _color_writetoaddr
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
   _LED_init
   _MoveBuggy
     _AntiPink
       _BlueInstructions
         _fullSpeedBackwards
           _setMotorPWM
             ___lwdiv
               ___wmul (ARG)
             ___wmul
         _stop
           _setMotorPWM
         _turnLeft90
           _stop
           _turnLeft
             _setMotorPWM
       _fullSpeedAhead
         _setMotorPWM
       _stop
       _turnLeft90
     _AntiYellow
       _BlueInstructions
       _fullSpeedAhead
       _stop
       _turnRight90
         _stop
         _turnRight
           _setMotorPWM
     _AppendMoves
     _BlueInstructions
     _GreenInstructions
       _fullSpeedBackwards
       _stop
       _turnLeft90
     _LightBlueInstructions
       _fullSpeedBackwards
       _stop
       _turnLeft135
         _stop
         _turnLeft
     _OrangeInstructions
       _fullSpeedBackwards
       _stop
       _turnRight135
         _stop
         _turnRight
     _PinkInstructions
       _fullSpeedBackwards
       _stop
       _turnLeft90
     _RedInstructions
       _fullSpeedBackwards
       _stop
       _turnRight90
     _YellowInstructions
       _fullSpeedBackwards
       _stop
       _turnRight90
   _Timer0_init
   _Update_RGBC
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _WhiteInstructions
     _BlueInstructions
     _MoveBuggy
     _Return_Anti_Moves
     _Return_Time
     _fullSpeedAhead
     _stop
   _WhiteLight
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
   _detect_color
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       ___fldiv (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _fullSpeedAhead
   _initDCmotorsPWM
   _stop

 _LowISR (ROOT)

 _HighISR (ROOT)
   i2_interrupts_clear_colorclick
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle
     i2_init_colorclick_interrupts
       i2_color_writetoaddr
         i2_I2C_2_Master_Start
         i2_I2C_2_Master_Stop
         i2_I2C_2_Master_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      62        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      8C       7       54.7%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     35      75       5       73.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4E      56       1       91.5%
BITBIGSFRhllllh     52      0       0      40        0.0%
BITBIGSFRhlllll     37      0       0      42        0.0%
BITBIGSFRllh        2D      0       0      45        0.0%
BITBIGSFRlllhll     2A      0       0      53        0.0%
BITBIGSFRlllll      26      0       0      60        0.0%
BITBIGSFRhhhlll     1D      0       0      38        0.0%
BITBIGSFRhhhhlh     1B      0       0      33        0.0%
BITBIGSFRhhhhll     13      0       0      34        0.0%
BITBIGSFRlllhhh     11      0       0      47        0.0%
BITBIGSFRlllhhh     11      0       0      48        0.0%
BITBIGSFRhhhlhh      E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRlllhhh      C      0       0      46        0.0%
BITBIGSFRlllhll      9      0       0      57        0.0%
BITBIGSFRhlllll      8      0       0      43        0.0%
BITBIGSFRllllh       6      0       0      59        0.0%
BITBIGSFRlllhll      6      0       0      52        0.0%
BITBIGSFRlllhll      5      0       0      55        0.0%
BITBIGSFRlllhlh      5      0       0      51        0.0%
BITBIGSFRlllhll      3      0       0      54        0.0%
BITBIGSFRlllhll      3      0       0      56        0.0%
BITBIGSFRlllhhl      3      0       0      50        0.0%
BITBIGSFRhlllll      2      0       0      41        0.0%
BITBIGSFRhhhllh      2      0       0      37        0.0%
BITBIGSFRhhhlhl      1      0       0      36        0.0%
BITBIGSFRlllhhh      1      0       0      49        0.0%
BITBIGSFRhlllh       1      0       0      39        0.0%
BITBIGSFRlllhll      1      0       0      58        0.0%
BITBIGSFRlh          1      0       0      44        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     157      61        0.0%
DATA                 0      0     157       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Mar 11 17:53:09 2023

                       _color_read_Red 24A8                           ___fldiv@aexp 002F  
                         ___fldiv@bexp 002E                           ___fldiv@sign 0027  
                      _color_read_Blue 2598                                     l21 277A  
                                   l30 2546                                     l24 28D2  
                                   l33 25E6                                     l42 0674  
                                   l27 24F6                                     l36 2596  
                                   l39 233E                                     l59 067A  
                                   l92 27FE                                     l86 27D6  
                                   l95 29AA                                     l89 27D8  
                                   l98 2996                                     bsr 000FE0  
                  ___wmul@multiplicand 000B                       _anti_moves_array 0075  
                     _color_read_Clear 2548                       _color_read_Green 24F8  
           WhiteInstructions@anticolor 0043                      ??_Interrupts_init 000E  
                                  l101 29A0                                    l104 2980  
                                  l201 19F6                                    l130 2974  
                                  l107 270E                                    l211 1908  
                                  l133 29C6                                    l206 181A  
                                  l216 1AE4                                    l313 2636  
                                  l225 24A6                                    l306 2930  
                                  l234 244C                                    l316 294A  
                                  l252 2398                                    l261 23F2  
                                  l430 28B2                                    l191 1624  
                                  l184 1F48                                    l196 1CA2  
                                  l608 21E6                                    l617 1D54  
                                  l626 1E06                                    l554 2054  
                                  l563 226C                                    l572 1EB8  
                                  l581 1FCE                                    l590 20DA  
                                  l638 1BCE                                    l665 10C2  
                                  l682 2892                                    l676 2870  
                                  l685 2746                                    l679 27AC  
                                  l599 2160                                    l688 284C  
                                  l985 172C                    i2_color_writetoaddr 28F4  
                                  wreg 000FE8                           ___flmul@aexp 0041  
                         ___flmul@bexp 0042                           ___flmul@sign 003C  
                         ___flmul@temp 0047                           ___flmul@prod 0043  
                         ___fltol@exp1 004E                                   l1302 0740  
                                 l1311 09AE                                   l1312 099C  
                                 l3001 222E                                   l1306 0AA4  
                                 l3003 2230                                   l3011 1F52  
                                 l3101 1D40                                   l3005 2240  
                                 l3021 1F92                                   l3013 1F66  
                                 l1309 0936                                   l1270 0E3E  
                                 l1350 13F4                                   l3111 1D9E  
                                 l3103 1D56                                   l3007 2258  
                                 l3031 2072                                   l3023 1FA2  
                                 l3015 1F68                                   l1319 0A66  
                                 l1343 135C                                   l1272 0C9E  
                                 l3121 1DDA                                   l3113 1DA0  
                                 l3105 1D5A                                   l3041 20AE  
                                 l3033 2074                                   l3025 1FBA  
                                 l3017 1F7C                                   l3009 1F4A  
                                 l3201 0F92                                   l1281 0CE4  
                                 l4001 1692                                   l1186 22E0  
                                 l1346 14B8                                   l1179 22D8  
                                 l3123 1DF2                                   l3115 1DB4  
                                 l3107 1D6E                                   l3051 20FA  
                                 l3043 20C6                                   l3035 2088  
                                 l3027 2056                                   l3019 1F90  
                                 l3211 0FF6                                   l3203 0FA6  
                                 l3131 27B8                                   l1283 0D5C  
                                 l1275 0C62                                   l4011 16C2  
                                 l4003 16A0                                   l1284 0D4A  
                                 l3141 24A8                                   l3117 1DC8  
                                 l3109 1D8A                                   l3125 2850  
                                 l3061 214C                                   l3053 210E  
                                 l3045 20DC                                   l3037 209C  
                                 l3029 205E                                   l3221 1054  
                                 l3213 1004                                   l3205 0FB4  
                                 l3133 27BE                                   l3301 0BDC  
                                 l4021 16EC                                   l4013 16CC  
                                 l1357 1450                                   l4101 04F0  
                                 l3143 24EE                                   l3119 1DCA  
                                 l3071 2194                                   l3063 2162  
                                 l3055 2122                                   l3047 20E4  
                                 l3039 209E                                   l3223 106E  
                                 l3215 101E                                   l3207 0FCE  
                                 l3231 2710                                   l3135 27C0  
                                 l3311 0C2E                                   l3303 0BF6  
                                 l4023 16FC                                   l4103 0500  
                                 l4111 0538                                   l4031 005C  
                                 l3153 2598                                   l3161 258E  
                                 l3081 1CA4                                   l3073 21A8  
                                 l3065 216A                                   l3057 2124  
                                 l3049 20F8                                   l3225 1082  
                                 l3217 1032                                   l3209 0FE2  
                                 l3233 273E                                   l3137 27C2  
                                 l3129 27AE                                   l3321 0C8A  
                                 l3313 0C3E                                   l3305 0C06  
                                 l3401 06EA                                   l4025 170C  
                                 l4009 16B8                                   l4121 0588  
                                 l4113 0548                                   l4105 0510  
                                 l4041 0330                                   l4033 0062  
                                 l4201 1194                                   l3155 25DE  
                                 l3147 24F8                                   l3091 1CEE  
                                 l3083 1CA8                                   l3075 21AA  
                                 l3067 217E                                   l3059 2134  
                                 l3227 109A                                   l3219 1046  
                                 l3171 0E66                                   l3139 27C4  
                                 l3331 0CCA                                   l3323 0C8C  
                                 l3315 0C52                                   l3307 0C16  
                                 l3251 0AD2                                   l3243 0AA6  
                                 l3411 072A                                   l3403 06F8  
                                 l4027 171C                                   l4019 16E0  
                                 l4131 05D0                                   l4123 0598  
                                 l4115 0558                                   l4107 0520  
                                 l4051 0380                                   l4043 0340  
                                 l4035 0148                                   l4211 11EC  
                                 l4203 11A4                                   l3165 2932  
                                 l3149 253E                                   l3093 1D02  
                                 l3085 1CBC                                   l3077 21BA  
                                 l3069 2180                                   l3229 10AE  
                                 l3181 0EC4                                   l3173 0E74  
                                 l3237 2872                                   l3341 0D06  
                                 l3333 0CD4                                   l3325 0C9C  
                                 l3317 0C60                                   l3309 0C26  
                                 l3261 0B0C                                   l3253 0AE2  
                                 l3245 0AB2                                   l3501 0A88  
                                 l3421 0774                                   l3413 0730  
                                 l3405 06FA                                   l4141 0618  
                                 l4133 05E0                                   l4117 0568  
                                 l4125 05A0                                   l4109 0530  
                                 l4061 03C8                                   l4053 0390  
                                 l4045 0350                                   l4037 0234  
                                 l4221 1238                                   l4213 1200  
                                 l4205 11B4                                   l3159 2548  
                                 l2711 2298                                   l2703 226E  
                                 l3095 1D16                                   l3087 1CD8  
                                 l3079 21D2                                   l3191 0F2E  
                                 l3183 0EDE                                   l3175 0E8E  
                                 l3167 0E40                                   l3239 2890  
                                 l3351 0D78                                   l3343 0D14  
                                 l3335 0CE2                                   l3327 0CAE  
                                 l3319 0C6C                                   l3271 0B38  
                                 l3263 0B12                                   l3255 0AF2  
                                 l3247 0AC0                                   l3503 0A8A  
                                 l3431 07C4                                   l3423 0780  
                                 l3415 0750                                   l3407 070A  
                                 l4151 0668                                   l4143 0628  
                                 l4135 05F0                                   l4127 05B0  
                                 l4119 0578                                   l4071 0410  
                                 l4063 03D8                                   l4047 0360  
                                 l4055 0398                                   l4039 0320  
                                 l4231 129E                                   l4223 125C  
                                 l4215 1208                                   l4207 11C6  
                                 l2721 22CC                                   l2713 22A6  
                                 l2705 2276                                   l2801 17BE  
                                 l3097 1D18                                   l3089 1CEC  
                                 l3193 0F42                                   l3185 0EF2  
                                 l3177 0EA2                                   l3169 0E52  
                                 l3361 0DE4                                   l3353 0D86  
                                 l3345 0D42                                   l3329 0CC4  
                                 l3337 0CF4                                   l3281 0B72  
                                 l3273 0B48                                   l3265 0B18  
                                 l3257 0AF4                                   l3249 0AC2  
                                 l3505 0A90                                   l3441 0806  
                                 l3433 07D0                                   l3425 078A  
                                 l3417 0760                                   l3409 071A  
                                 l4145 0638                                   l4153 0670  
                                 l4137 0600                                   l4129 05C0  
                                 l4081 0460                                   l4073 0420  
                                 l4065 03E8                                   l4057 03A8  
                                 l4049 0370                                   l4241 12FC  
                                 l4233 12B2                                   l4217 121C  
                                 l4209 11E6                                   l4225 1266  
                                 l4161 10EA                                   l2723 22D2  
                                 l2715 22AC                                   l2707 2288  
                                 l2731 153E                                   l2811 19F8  
                                 l2803 17D4                                   l3099 1D28  
                                 l3195 0F56                                   l3187 0F06  
                                 l3179 0EB6                                   l3371 0E32  
                                 l3363 0DFE                                   l3355 0DB0  
                                 l3339 0D02                                   l3283 0B88  
                                 l3275 0B58                                   l3267 0B26  
                                 l3259 0AFC                                   l3507 0A94  
                                 l3451 0868                                   l3443 0812  
                                 l3435 07DC                                   l3427 07A0  
                                 l4147 0648                                   l4139 0608  
                                 l4091 04A8                                   l4075 0430  
                                 l4083 0468                                   l4067 03F8  
                                 l4059 03B8                                   l4235 12BA  
                                 l4227 1278                                   l4219 1236  
                                 l4171 1110                                   l4163 10EE  
                                 l2741 27D8                                   l2717 22C2  
                                 l2709 2290                                   l2733 1542  
                                 l2725 14BA                                   l2821 1A9E  
                                 l2813 1A54                                   l2805 17EA  
                                 l2901 23B8                                   l3197 0F64  
                                 l3189 0F14                                   l3621 2766  
                                 l3373 0E34                                   l3365 0E1A  
                                 l3349 0D6C                                   l3357 0DB4  
                                 l3285 0B98                                   l3293 0BB8  
                                 l3277 0B5A                                   l3269 0B28  
                                 l3461 08FE                                   l3453 0874  
                                 l3445 0822                                   l3437 07EA  
                                 l3429 07AC                                   l3381 067C  
                                 l4149 0658                                   l4093 04B8  
                                 l4085 0478                                   l4077 0440  
                                 l4069 0400                                   l4237 12CE  
                                 l4229 1298                                   l4181 112E  
                                 l4173 1118                                   l4165 1102  
                                 l4157 10C4                                   l2743 27E8  
                                 l2719 22CA                                   l2735 1584  
                                 l2727 14D6                                   l2823 1AB4  
                                 l2815 1A60                                   l2751 1C2C  
                                 l2831 2456                                   l2911 1E10  
                                 l2807 17F6                                   l2903 23CC  
                                 l3199 0F7E                                   l3623 2770  
                                 l3615 2748                                   l3367 0E1E  
                                 l3359 0DCE                                   l3295 0BC8  
                                 l3287 0BA0                                   l3279 0B62  
                                 l3471 0954                                   l3463 091C  
                                 l3455 0890                                   l3447 083C  
                                 l3439 07F6                                   l3391 06B8  
                                 l3383 0688                                   l4095 04C8  
                                 l4087 0488                                   l4079 0450  
                                 l4239 12E8                                   l4191 1150  
                                 l4183 1132                                   l4175 1120  
                                 l4167 1108                                   l4159 10E6  
                                 l3801 289C                                   l3625 22E2  
                                 l2737 15A0                                   l2729 152A  
                                 l2825 1AC0                                   l2817 1A7C  
                                 l2761 1C94                                   l2753 1C38  
                                 l2745 1BD0                                   l2841 2496  
                                 l2833 246A                                   l2921 1E50  
                                 l2913 1E24                                   l2809 1802  
                                 l2905 23E0                                   l3617 274C  
                                 l3369 0E2C                                   l3297 0BC8  
                                 l3289 0BA4                                   l3481 09BE  
                                 l3473 0958                                   l3465 0926  
                                 l3457 08BA                                   l3449 084C  
                                 l3393 06C8                                   l3385 0696  
                                 l3561 136C                                   l4089 0498  
                                 l4097 04D0                                   l4193 115E  
                                 l4185 113A                                   l4177 1126  
                                 l4169 110C                                   l3803 28A6  
                                 l2739 15E4                                   l2827 1ACC  
                                 l2819 1A88                                   l2755 1C4E  
                                 l2747 1C08                                   l2771 199A  
                                 l2763 190A                                   l2835 246C  
                                 l2923 1E60                                   l2915 1E26  
                                 l2851 1878                                   l2907 23E2  
                                 l3811 1AFE                                   l3619 2756  
                                 l3491 0A20                                   l3483 09CA  
                                 l3475 0966                                   l3467 0934  
                                 l3459 08F0                                   l3395 06CE  
                                 l3387 0698                                   l3571 13AA  
                                 l3563 1382                                   l3555 1308  
                                 l4099 04E0                                   l4195 1172  
                                 l4187 1142                                   l4179 112A  
                                 l2781 29A2                                   l3805 28B0  
                                 l2941 298E                                   l2757 1C7C  
                                 l2749 1C14                                   l2773 19B0  
                                 l2765 1966                                   l2837 2480  
                                 l2829 244E                                   l2925 1E78  
                                 l2917 1E3A                                   l2909 1E08  
                                 l2861 18D8                                   l2853 1884  
                                 l3821 1B58                                   l3813 1B06  
                                 l3493 0A34                                   l3485 09D8  
                                 l3477 0994                                   l3469 0946  
                                 l3397 06DE                                   l3389 06A8  
                                 l3581 1432                                   l3573 13DC  
                                 l3557 1318                                   l4197 117E  
                                 l4189 1148                                   l3807 277C  
                                 l2783 29A6                                   l2791 299C  
                                 l2847 28B6                                   l2951 26E4  
                                 l2943 2992                                   l2759 1C88  
                                 l2775 19C6                                   l2767 1972  
                                 l2839 2494                                   l2927 1E8C  
                                 l2919 1E4E                                   l2863 18E4  
                                 l2855 18A0                                   l2871 2410  
                                 l3823 1B6C                                   l3815 1B26  
                                 l3831 1BBC                                   l3495 0A4E  
                                 l3487 0A02                                   l3399 06E4  
                                 l3591 1488                                   l3583 1440  
                                 l3575 13DE                                   l3567 1396  
                                 l3559 1326                                   l4199 1190  
                                 l2785 2978                                   l2961 25F2  
                                 l3753 2966                                   l2953 270A  
                                 l2945 26D0                                   l2697 2828  
                                 l2777 19D2                                   l2769 198E  
                                 l2865 18F0                                   l2857 18AC  
                                 l2849 181C                                   l2793 172E  
                                 l2873 2412                                   l2881 2340  
                                 l3825 1B72                                   l3817 1B3A  
                                 l3809 1AE6                                   l3497 0A6A  
                                 l3489 0A06                                   l3593 1498  
                                 l3585 145E                                   l3577 13EA  
                                 l3569 139E                                   l3761 1EF0  
                                 l2787 297C                                   l2971 262A  
                                 l2963 2602                                   l2955 270C  
                                 l2947 26D4                                   l2699 2844  
                                 l2779 19DE                                   l2859 18C2  
                                 l2795 178A                                   l2875 2426  
                                 l2867 23F4                                   l2891 2386  
                                 l2883 2348                                   l3827 1B84  
                                 l3819 1B3E                                   l3755 29C0  
                                 l3499 0A7A                                   l3595 14A6  
                                 l3587 1460                                   l3579 1426  
                                 l3771 1F2E                                   l3763 1EF4  
                                 l2789 2998                                   l2965 260C  
                                 l3781 2914                                   l2949 26DC  
                                 l2797 1796                                   l2877 243A  
                                 l2869 23FC                                   l2893 2388  
                                 l2885 235C                                   l2981 2002  
                                 l2973 1FD0                                   l3829 1B9A  
                                 l3597 14A8                                   l3589 1464  
                                 l3773 1F30                                   l3765 1F18  
                                 l3757 1EBA                                   l2967 2616  
                                 l2959 25E8                                   l3783 2926  
                                 l2799 17B2                                   l2879 243C  
                                 l2991 21E8                                   l2895 239A  
                                 l2887 235E                                   l2983 2016  
                                 l2975 1FD8                                   l3775 1F3A  
                                 l3767 1F22                                   l3759 1ECA  
                                 l2969 2620                                   l3785 292A  
                                 l2993 21F0                                   l2897 23A2  
                                 l2889 2372                                   l2985 2018  
                                 l2977 1FEC                                   l3777 1F3C  
                                 l3769 1F24                                   l3787 292C  
                                 l2995 2204                                   l2899 23B6  
                                 l2987 2028                                   l2979 1FEE  
                                 l3779 1F46                                   l3789 292E  
                                 l2997 2206                                   l2989 2040  
                                 l3799 2894                                   l2999 221A  
                                 l3993 1650                                   l3995 167C  
                                 l3987 1626                                   l3997 167E  
                                 l3989 163C                                   l3999 168E  
                                 u2000 15A0                                   u2001 159C  
                                 u2010 27E8                                   u2011 27E4  
                                 u2020 27FE                                   u2100 1A7C  
                                 u2021 27FA                                   u2101 1A78  
                                 u2030 1C08                                   u2110 247C  
                                 u2031 1C04                                   u2111 2478  
                                 u2040 1C2C                                   u2120 24A6  
                                 u2200 2398                                   u3000 0A88  
                                 u2041 1C28                                   u2121 24A2  
                                 u2201 2394                                   u3001 0A84  
                                 u2050 1966                                   u2210 23C8  
                                 u2051 1962                                   u2211 23C4  
                                 u2060 198E                                   u2300 2240  
                                 u2220 23F2                                   u3100 1382  
                                 u2061 198A                                   u2301 223C  
                                 u2221 23EE                                   u3101 137E  
                                 u2230 1E36                                   u2150 1878  
                                 u2070 178A                                   u2310 1F78  
                                 u3110 13D8                                   u2231 1E32  
                                 u2151 1874                                   u2071 1786  
                                 u2311 1F74                                   u3111 13D4  
                                 u2240 1E60                                   u2160 18A0  
                                 u2080 17B2                                   u2400 1D28  
                                 u2320 1FA2                                   u3120 1422  
                                 u4000 03B8                           _BAUD4CONbits 000EE9  
                                 u2241 1E5C                                   u2161 189C  
                                 u2081 17AE                                   u2401 1D24  
                                 u2321 1F9E                                   u3121 141E  
                                 u4001 03B4                                   u2250 26F8  
                                 u2090 1A54                                   u2410 1DB0  
                                 u2170 2422                                   u2330 2084  
                                 u3130 1440                                   u4010 03C8  
                                 u2251 26F0                                   u2091 1A50  
                                 u2411 1DAC                                   u2171 241E  
                                 u2331 2080                                   u3131 143C  
                                 u4011 03C4                                   u2420 1DDA  
                                 u2180 244C                                   u2340 20AE  
                                 u2500 0F64                                   u3140 1450  
                                 u4100 0460                                   u4020 03D8  
                                 u2421 1DD6                                   u2181 2448  
                                 u2341 20AA                                   u2501 0F60  
                                 u3141 144C                                   u4101 045C  
                                 u4021 03D4                                   u2190 236E  
                                 u2350 210A                                   u2270 1FFE  
                                 u2510 0F92                                   u2430 0E52  
                                 u3150 145E                                   u4110 0478  
                                 u4030 03E8                                   u2191 236A  
                                 u2351 2106                                   u2271 1FFA  
                                 u2511 0F8E                                   u2431 0E4E  
                                 u3151 145A                                   u4111 0474  
                                 u4031 03E4                                   u2360 2134  
                                 u2280 2028                                   u2520 0FB4  
                                 u2440 0E74                                   u2600 0AD2  
                                 u3160 1498                                   u3080 1318  
                                 u4200 0510                                   u4120 0488  
                                 u4040 03F8                                   u2361 2130  
                                 u2281 2024                                   u2521 0FB0  
                                 u2441 0E70                                   u2601 0ACE  
                                 u3161 1494                                   u3081 1314  
                                 u4201 050C                                   u4121 0484  
                                 u4041 03F4                                   u2290 2216  
                                 u2370 2190                                   u2530 0FE2  
                                 u2450 0EA2                                   u2610 0AE2  
                                 u3170 14A6                                   u3090 1326  
                                 u4210 0520                                   u4130 0498  
                                 u4050 0410                                   _T2PR 000FBC  
                                 u2291 2212                                   u2371 218C  
                                 u2531 0FDE                                   u2451 0E9E  
                                 u2611 0ADE                                   u3171 14A2  
                                 u3091 1322                                   u4211 051C  
                                 u4131 0494                                   u4051 040C  
                                 u2268 26FA                                   u2380 21BA  
                                 u2540 1004                                   u2460 0EC4  
                                 u2700 0CAE                                   u2620 0B26  
                                 u4300 05C0                                   u4220 0530  
                                 u4140 04A8                                   u4060 0420  
                                 u2381 21B6                                   u2541 1000  
                                 u2461 0EC0                                   u2701 0CAA  
                                 u2621 0B22                                   u4301 05BC  
                                 u4221 052C                                   u4141 04A4  
                                 u4061 041C                                   u2390 1CFE  
                                 u2550 1032                                   u2470 0EF2  
                                 u2710 0CC4                                   u2630 0B38  
                                 u4310 05D0                                   u4230 0548  
                                 u4150 04B8                                   u4070 0430  
                                 u2391 1CFA                                   u2551 102E  
                                 u2471 0EEE                                   u2711 0CC0  
                                 u2631 0B34                                   u4311 05CC  
                                 u4231 0544                                   u4151 04B4  
                                 u4071 042C                                   u2560 1054  
                                 u2480 0F14                                   u2800 0DFE  
                                 u2720 0CE2                                   u2640 0B48  
                                 u4400 0668                                   u4320 05E0  
                                 u4240 0558                                   u4160 04C8  
                                 u4080 0440                                   u2561 1050  
                                 u2481 0F10                                   u2801 0DFA  
                                 u2721 0CDE                                   u2641 0B44  
                                 u4401 0664                                   u4321 05DC  
                                 u4241 0554                                   u4161 04C4  
                                 u4081 043C                                   u2570 1082  
                                 u2490 0F42                                   u2810 0E2C  
                                 u2730 0D02                                   u2650 0B88  
                                 u4330 05F0                                   u4250 0568  
                                 u4170 04E0                                   u4090 0450  
                                 u4410 11A4                                   u2571 107E  
                                 u2491 0F3E                                   u2811 0E28  
                                 u2731 0CFE                                   u2651 0B84  
                                 u4331 05EC                                   u4251 0564  
                                 u4171 04DC                                   u4091 044C  
                                 u4411 11A0                                   u2580 10AE  
                                 u3700 1BCE                                   u2740 0D14  
                                 u2660 0BC8                                   u2900 08DA  
                                 u2820 0696                                   u4340 0600  
                                 u4260 0578                                   u4180 04F0  
                                 u4420 11B4                                   u2581 10AA  
                                 u3701 1BCA                                   u2741 0D10  
                                 u2661 0BC4                                   u2821 0692  
                                 u4341 05FC                                   u4261 0574  
                                 u4181 04EC                                   u4421 11B0  
                                 u2750 0D42                                   u2670 0C3E  
                                 u2590 0AC0                                   u2910 0934  
                                 u2830 06A8                                   u4350 0618  
                                 u4270 0588                                   u4190 0500  
                                 u4430 11C6                                   u2751 0D3E  
                                 u2671 0C3A                                   u2591 0ABC  
                                 u2911 0930                                   u2831 06A4  
                                 u4351 0614                                   u4271 0584  
                                 u4191 04FC                                   u4431 11C2  
                                 u1960 2288                                   u2760 0D58  
                                 u2680 0C60                                   u2920 0954  
                                 u2840 06B8                                   u4360 0628  
                                 u4280 0598                                   u4440 121C  
                                 u1961 2284                                   u2761 0D54  
                                 u2681 0C5C                                   u2921 0950  
                                 u2905 08D0                                   u2841 06B4  
                                 u4361 0624                                   u4281 0594  
                                 u4441 1218                                   u1970 22A6  
                                 u2770 0D6C                                   u2690 0C8A  
                                 u2930 0966                                   u2850 06F8  
                                 u4370 0638                                   u4290 05B0  
                                 u4450 1278                                   u1971 22A2  
                                 u4507 1FAC                                   u2771 0D68  
                                 u2691 0C86                                   u2931 0962  
                                 u2851 06F4                                   u4371 0634  
                                 u4291 05AC                                   u4451 1274  
                                 u1980 22C2                                   u2780 0D86  
                                 u2940 0994                                   u2860 070A  
                                 u3900 16FC                                   u4380 0648  
                                 u4460 12CE                                   u1981 22BE  
                                 u4517 2032                                   u2781 0D82  
                                 u2941 0990                                   u2861 0706  
                                 u3901 16F8                                   u4381 0644  
                                 u4461 12CA                                   u1990 14D6  
                                 u2790 0DCE                                   u2950 09AA  
                                 u2870 071A                                   u3910 170C  
                                 u4390 0658                                   u1991 14D2  
                                 u4607 1DE4                                   u4527 20B8  
                                 u2791 0DCA                                   u2951 09A6  
                                 u2871 0716                                   u3911 1708  
                                 u4391 0654                                   u3680 1B54  
                                 u2960 09BE                                   u2880 0750  
                                 u3920 0330                                   u4617 18FA  
                                 u4537 213E                                   u3681 1B50  
                                 u2961 09BA                                   u2881 074C  
                                 u3921 032C                                   u3690 1B84  
                                 u2970 09D8                                   u2890 0760  
                                 u3850 163C                                   u3930 0340  
                                 u4627 1E6A                                   u4547 21C4  
                                 u3691 1B80                                   u2971 09D4  
                                 u2891 075C                                   u3851 1638  
                                 u3931 033C                                   u2980 0A20  
                                 u3860 1672                                   u3940 0350  
                                 u4637 1E96                                   u4557 224A  
                                 u2981 0A1C                                   u3941 034C  
                                 u4477 1228                                   u2990 0A4E  
                                 u3870 16A0                                   u3950 0360  
                                 u4647 19E8                                   u4567 1CC6  
                                 u2991 0A4A                                   u3871 169C  
                                 u3951 035C                                   u4487 12DA  
                                 i2l24 2912                                   u3880 16B4  
                                 u3960 0370                                   u4657 1C9A  
                                 u4577 1D32                                   u4497 275C  
                                 u3881 16B0                                   u3865 1666  
                                 u3961 036C                                   u3890 16DC  
                                 u3970 0380                                   u4667 1AD6  
                                 u4587 180C                                   u3891 16D8  
                                 u3971 037C                                   u3980 0390  
                                 u4677 25F8                                   u4597 1D78  
                                 u3981 038C                                   u3990 03A8  
                                 u3991 03A4                                   i2l92 2826  
                                 i2l95 29BE                                   i2l89 2800  
    Return_Anti_Moves@anti_moves_array 000B                                   _main 10C4  
                  __end_of_AppendMoves 2872                     _YellowInstructions 1F4A  
                                 fsr2h 000FDA                                   indf2 000FDF  
                                 fsr2l 000FD9                                   btemp 0057  
                                 _stop 1BD0         ??i2_init_colorclick_interrupts 0005  
                    main@initial_color 00B9                                   prodh 000FF4  
                                 prodl 000FF3                                   start 0058  
                 ?i2_color_writetoaddr 0003                        ___fldiv@new_exp 0028  
               __end_of_color_read_Red 24F8                        __end_of_HighISR 28F4  
                         ___param_bank 000000                            _turnLeft135 239A  
                  ?_YellowInstructions 0027                            _turnRight90 23F4  
                           _AntiYellow 1CA4                       __end_of_LED_init 2976  
                        ___fltol@sign1 004D                             _AppendTime 277C  
                                ?_main 0001                        __end_of___fldiv 0E40  
                      __end_of___flmul 0AA6                        __end_of___fltol 172E  
                                ?_stop 001C                        __end_of___lwdiv 22E2  
                                i1l324 0048                                  i2l101 29B4  
                                i2l104 298C                                  i2l313 2686  
                                i2l316 2964                                  i2l332 28F0  
                                _TMR0H 000FD4                                  _TMR0L 000FD3  
           __end_of_I2C_2_Master_Start 29AC                   ??_YellowInstructions 002B  
           __end_of_I2C_2_Master_Write 2982                       _PinkInstructions 2056  
                   _int_threshold_high 00D3                                  main@b 00B6  
             __end_of_BlueInstructions 1EBA                                  tablat 000FF5  
                                plusw2 000FDB                                  ttemp5 0058  
                                ttemp6 005B                                  ttemp7 005F  
                                status 000FD8                                  wtemp8 0058  
                  detect_color@tempval 00A2                  ??i2_color_writetoaddr 0004  
              __end_of_color_read_Blue 25E8                  _I2C_2_Master_RepStart 298E  
                 fullSpeedBackwards@mL 001C                   fullSpeedBackwards@mR 001E  
                     __end_of_AntiPink 1E08                        ?_color_read_Red 000D  
                      __initialization 2688                           __end_of_main 1306  
                 __end_of_detect_color 067C                           __end_of_stop 1CA4  
                _LightBlueInstructions 2162                      ??_RedInstructions 002B  
  __end_of_interrupts_clear_colorclick 294C         ?i2_interrupts_clear_colorclick 0001  
          _interrupts_clear_colorclick 2932                                 ??_main 00B4  
                               ??_stop 0020                          __activetblptr 000000  
                         _turnRight135 2340                      _Return_Anti_Moves 2872  
                          _AppendMoves 284E                           ?_setMotorPWM 0016  
                               _CCPR1H 000FAA                                 _CCPR2H 000FA6  
                               _CCPR3H 000F25                                 _CCPR4H 000F21  
                   ?_Return_Anti_Moves 0009                                 _RC0PPS 000E62  
                               _RC4REG 000EE3                                 _RE2PPS 000E74  
                               _RD5PPS 000E6F                                 _RC7PPS 000E69  
                               _RE4PPS 000E76                                 _RD6PPS 000E70  
                               i1l3851 0036                                 i1l3853 0044  
                               i2l3127 28F6                                 i1l3849 0026  
                               i2l3601 2638                                 i2l3611 2670  
                               i2l3603 2642                                 i2l3613 267A  
                               i2l3605 2652                                 i2l3607 265C  
                               i2l3609 2666                                 i2l2843 2800  
                               i2l2931 29BA                                 i2l2845 2810  
                               i2l2933 29AC                                 i2l2935 29B0  
                               i2l2929 29B6                                 i2l2937 2984  
                               i2l3833 294C                                 i2l2939 2988  
                               _RG6PPS 000E88                                 i2l3861 28EC  
                               i2l3855 28D4                                 i2l3857 28E4  
                               i2l3859 28E8                              ??_HighISR 0006  
             __end_of_color_click_init 277C                                 _RX4PPS 000E15  
                               _TX4REG 000EE4                       __end_of___xxtofl 14BA  
                  ??_Return_Anti_Moves 000D                                 _LowISR 0018  
                        ??_Timer0_init 0009                           _CCPTMRS0bits 000FAD  
          AppendMoves@anti_moves_array 000B                  Return_Time@time_array 000B  
                Return_Time@time_index 0009                                 ___wmul 2828  
                            ??___fldiv 001F                              ??___flmul 0038  
                            ??___fltol 009E                              ??___lwdiv 0013  
                               clear_0 26A6                                 clear_1 26B2  
                               clear_2 26BE                            ?_AntiYellow 002E  
                               isa$std 000001                            ?_AppendTime 0009  
                        ??_Return_Time 000D              __end_of_Return_Anti_Moves 2894  
                           _WhiteLight 29C0                                 tblptrh 000FF7  
                               tblptrl 000FF6                                 tblptru 000FF8  
                               stop@mL 001C                                 stop@mR 001E  
                    ??_initDCmotorsPWM 000B             i2color_writetoaddr@address 0004  
                     __end_of_turnLeft 19F8                           ___xxtofl@arg 0013  
                         ___xxtofl@exp 0012                           ___xxtofl@val 0009  
                        ??_Update_RGBC 0016                             __accesstop 0060  
              __end_of__initialization 26C4               __end_of_color_read_Clear 2598  
             __end_of_color_read_Green 2548                 ?_I2C_2_Master_RepStart 0001  
                        ___rparam_used 000001                              ?_LED_init 0001  
                           ___fltol@f1 0049                       ?_color_read_Blue 000D  
                    _GreenInstructions 21E8                        _Interrupts_init 2914  
                       __pcstackCOMRAM 0001                 ?_LightBlueInstructions 0027  
                         __pidataBANK0 29C8                     ?_GreenInstructions 0027  
                       AppendTime@temp 0009                      detect_color@color 00B0  
                  __end_of_Timer0_init 28B4                            MoveBuggy@mL 0037  
                          MoveBuggy@mR 0039                    OrangeInstructions@a 002D  
                  ??_GreenInstructions 002B                MoveBuggy@color_detected 0035  
                            ?_AntiPink 002E           ??_init_colorclick_interrupts 000D  
                  __end_of_Return_Time 2748                      __end_of_MoveBuggy 10C4  
                           __pbssBANK0 0060                             __pbssBANK1 0100  
            __end_of_GreenInstructions 226E                             ??_LED_init 0009  
                              ?_LowISR 0001                      _color_writetoaddr 28B4  
                         _T2CLKCONbits 000FBF                           ?_turnLeft135 0022  
                  __end_of_Update_RGBC 2340                     ?_color_writetoaddr 000B  
                              ?___wmul 0009               __end_of_PinkInstructions 20DC  
                         ?_turnRight90 0022                    ??_color_writetoaddr 000C  
                            ?___xxtofl 0009                            ?_WhiteLight 0001  
                              _SP4BRGH 000EE6                                _SP4BRGL 000EE5  
                           ??_AntiPink 0032                                _SSP2ADD 000ED6  
                              _SSP2BUF 000ED5                             _color_flag 0055  
                         _detect_color 005C                __end_of_Interrupts_init 2932  
                    ?_BlueInstructions 0027                 color_writetoaddr@value 000B  
                     ??_color_read_Red 000F                                _HighISR 0008  
            __end_of_color_writetoaddr 28D4                     WhiteInstructions@a 0044  
                   WhiteInstructions@c 0041                     ??_BlueInstructions 002B  
                      _RedInstructions 1FD0                     _I2C_2_Master_Start 29A2  
                  i2_I2C_2_Master_Idle 2800                     _I2C_2_Master_Write 2976  
                              __Hparam 0000                    i2_I2C_2_Master_Stop 29AC  
                              __Lparam 0000                      color_read_Red@tmp 0012  
                          _Timer0_init 2894                    GreenInstructions@mL 0027  
                  GreenInstructions@mR 0029             __end_of_fullSpeedBackwards 1AE6  
                              ___fldiv 0AA6                                ___flmul 067C  
                              ___fltol 1626                    ?_I2C_2_Master_Start 0001  
                         turnLeft135@a 0026                                ___lwdiv 226E  
                  ?_I2C_2_Master_Write 0001                           turnLeft90@mL 0022  
                         turnLeft90@mR 0024                                __pcinit 2688  
                              __ramtop 0E00                              ?_turnLeft 001C  
                              __ptext0 10C4                                __ptext1 1EBA  
                              __ptext2 005C                                __ptext3 1306  
                              __ptext4 1626                                __ptext5 067C  
                              __ptext6 0AA6                                __ptext7 2748  
                              __ptext8 27AE                                __ptext9 29C0  
                 ?i2_I2C_2_Master_Idle 0001   __end_ofi2_init_colorclick_interrupts 2688  
         i2_init_colorclick_interrupts 2638                              _T2CONbits 000FBD  
                          _Return_Time 2710                             ??___xxtofl 000D  
                 ?i2_I2C_2_Master_Stop 0001                              _T2HLTbits 000FBE  
                        _RxBufWriteCnt 0054                           ?_AppendMoves 0009  
                              _tmr_ovf 0074                   ??_I2C_2_Master_Start 000A  
                 ??_I2C_2_Master_Write 000A                         __pintcode_body 28D4  
                 end_of_initialization 26C4            __end_ofi2_color_writetoaddr 2914  
         Return_Anti_Moves@moves_index 0009                      RedInstructions@mL 0027  
                   main@color_detected 00B8                      RedInstructions@mR 0029  
                              int_func 28D4                            _Update_RGBC 22E2  
                    ?_color_click_init 0001                           turnRight90@a 0026  
           __end_of_OrangeInstructions 2162                     ??_color_click_init 000D  
                            AntiPink@a 0034                                postdec2 000FDD  
                              postinc0 000FEE                                postinc2 000FDE  
                           _time_array 013C                             _time_index 009D  
                         ??_AntiYellow 0032                        _initDCmotorsPWM 1EBA  
                           ??_turnLeft 0020                           ??_AppendTime 000F  
                   setMotorPWM@negDuty 001B                  ??i2_I2C_2_Master_Idle 0001  
                    __end_of_turnRight 181C                  ??i2_I2C_2_Master_Stop 0002  
                        ___xxtofl@sign 0011                    YellowInstructions@a 002D  
                            _TRISAbits 000F81                     setMotorPWM@posDuty 001A  
                            _TRISBbits 000F82                              _TRISCbits 000F83  
                            _TRISDbits 000F84     __end_of_init_colorclick_interrupts 2638  
        ?i2_init_colorclick_interrupts 0001             _init_colorclick_interrupts 25E8  
                            _TRISEbits 000F85                              _TRISFbits 000F86  
                            _TRISGbits 000F87                              _TRISHbits 000F88  
                          ___fldiv@grs 002A                            ___fldiv@rem 0023  
                   PinkInstructions@mL 0027                     PinkInstructions@mR 0029  
                     fullSpeedAhead@mL 001C                       fullSpeedAhead@mR 001E  
              __end_of_RedInstructions 2056               color_writetoaddr@address 000C  
              ??_I2C_2_Master_RepStart 000A                       ?_Interrupts_init 0001  
                          ___flmul@grs 003D                            _CCP1CONbits 000FAB  
                    ?_color_read_Clear 000D                           _EUSART4RXbuf 0060  
                         _EUSART4TXbuf 0100                            _CCP2CONbits 000FA7  
                    ?_color_read_Green 000D                     __end_of_AntiYellow 1D56  
                          _CCP3CONbits 000F26                            _CCP4CONbits 000F22  
                   __end_of_AppendTime 27AE                ??_LightBlueInstructions 002B  
                           main@motorL 00C1                             main@motorR 00CA  
                   ??_color_read_Clear 000F                     ??_color_read_Green 000F  
                           _turnLeft90 244E                         __end_of_LowISR 0058  
               AppendMoves@moves_index 0009                         _fullSpeedAhead 181C  
                       __end_of___wmul 284E                        AppendMoves@temp 000E  
                   detect_color@dist_B 00B3                     detect_color@dist_G 00B2  
                   detect_color@dist_R 00B1                      _int_threshold_low 004F  
                  color_read_Clear@tmp 0012                    start_initialization 2688  
                        _TxBufWriteCnt 0052                   OrangeInstructions@mL 0027  
                 OrangeInstructions@mR 0029                  Return_Anti_Moves@temp 000E  
                            _MoveBuggy 0E40                    color_read_Green@tmp 0012  
                             ??_LowISR 0006                __end_of_initDCmotorsPWM 1F4A  
               __end_of_fullSpeedAhead 190A                               ??___wmul 000D  
                          __pdataBANK0 00D3          i2I2C_2_Master_Write@data_byte 0002  
                    ?_PinkInstructions 0027                     Update_RGBC@tempval 0014  
                   ??_PinkInstructions 002B           __end_ofi2_I2C_2_Master_Start 29C0  
         __end_ofi2_I2C_2_Master_Write 298E                              ___fldiv@a 001B  
                            ___fldiv@b 0017                              ___flmul@a 0034  
                            ___flmul@b 0030                            __pbssCOMRAM 004F  
                         ??_WhiteLight 0009                          __pcstackBANK0 009E  
                 AppendTime@time_array 000D                   AppendTime@time_index 000B  
                     ?_RedInstructions 0027                               ?_HighISR 0001  
                           ?_MoveBuggy 0035                       ___lwdiv@dividend 000F  
                         ?_Timer0_init 0001                            ?_turnLeft90 0022  
                      ?_fullSpeedAhead 001C                     BlueInstructions@mL 0027  
                   BlueInstructions@mR 0029                              __pintcode 0008  
                   __end_of_WhiteLight 29C8                               ?___fldiv 0017  
                             ?___flmul 0030                               ?___fltol 0049  
                             ?___lwdiv 000F                            __pintcodelo 0018  
         ?_interrupts_clear_colorclick 0001                   I2C_2_Master_Read@ack 000B  
                    _WhiteInstructions 1AE6                   I2C_2_Master_Read@tmp 000C  
                        ?_turnRight135 0022                           ?_Return_Time 0009  
                    _I2C_2_Master_Idle 27D8                     _fullSpeedBackwards 19F8  
                    _I2C_2_Master_Init 27AE                      _I2C_2_Master_Read 26CE  
                   ?_WhiteInstructions 003B                      _I2C_2_Master_Stop 2998  
                         _RxBufReadCnt 0053                     GreenInstructions@a 002D  
                   ?_I2C_2_Master_Idle 0001                     ?_I2C_2_Master_Init 0001  
                   ?_I2C_2_Master_Read 0001                          ??_setMotorPWM 0018  
                   ?_I2C_2_Master_Stop 0001                       ___lwdiv@quotient 0013  
                          turnLeft90@a 0026               initDCmotorsPWM@PWMperiod 0009  
              LightBlueInstructions@mL 0027                LightBlueInstructions@mR 0029  
                  ?_fullSpeedBackwards 001C                    ??_WhiteInstructions 003F  
                  ??_I2C_2_Master_Idle 0009                    ??_I2C_2_Master_Init 0009  
                         ?_Update_RGBC 0014                    ??_I2C_2_Master_Read 000A  
                       ___wmul@product 000D                               _LATAbits 000F79  
                  ??_I2C_2_Master_Stop 000A                               _LATCbits 000F7B  
                             _LATDbits 000F7C                               _LATEbits 000F7D  
                             _LATFbits 000F7E                        Return_Time@temp 0010  
                             _LATGbits 000F7F                               _LATHbits 000F80  
                             _IPR0bits 000E1F                               _PIE0bits 000E29  
                             _LED_init 2966                       RedInstructions@a 002D  
                             _PIE4bits 000E2D                               i1u373_20 0036  
                             i1u373_21 0032                               i2u213_40 2810  
                             i2u213_41 280C                               i2u214_40 2826  
                             i2u214_41 2822                            turnRight@mL 001C  
                          turnRight@mR 001E                               _PIR0bits 000E33  
                             i2u374_40 28E4                               i2u374_41 28E0  
                             _PIR4bits 000E37                               i2u468_47 2648  
                     ?_initDCmotorsPWM 0009                               _SSP2CON2 000EDA  
                             _SSP2STAT 000ED8                   ??_fullSpeedBackwards 0020  
            __end_of_WhiteInstructions 1BD0                     _OrangeInstructions 20DC  
                    PinkInstructions@a 002D              __end_of_I2C_2_Master_Idle 2800  
            __end_of_I2C_2_Master_Init 27D8              __end_of_I2C_2_Master_Read 2710  
                    ___wmul@multiplier 0009                         ??_turnRight135 0026  
            __end_of_I2C_2_Master_Stop 29A2                           setMotorPWM@m 0016  
          I2C_2_Master_Write@data_byte 000A          ??_interrupts_clear_colorclick 000E  
           __end_of_YellowInstructions 1FD0                      ??_color_read_Blue 000F  
                  ?_OrangeInstructions 0027                           _TxBufReadCnt 0051  
          ?_init_colorclick_interrupts 0001                               _AntiPink 1D56  
             i2color_writetoaddr@value 0003                              _turnRight 172E  
                  WhiteInstructions@mL 003B                    WhiteInstructions@mR 003D  
        __end_of_I2C_2_Master_RepStart 2998                     color_read_Blue@tmp 0012  
                  __end_of_setMotorPWM 1626                            ??_MoveBuggy 003B  
                 i2_I2C_2_Master_Start 29B6                   i2_I2C_2_Master_Write 2982  
                         AntiYellow@mL 002E                           AntiYellow@mR 0030  
                             __Hrparam 0000                   ??_OrangeInstructions 002B  
                             __Lrparam 0000          __end_of_LightBlueInstructions 21E8  
          __end_ofi2_I2C_2_Master_Idle 2828            __end_ofi2_I2C_2_Master_Stop 29B6  
                       turnRight135@mL 0022                         turnRight135@mR 0024  
                        turnLeft135@mL 0022                          turnLeft135@mR 0024  
                           _ANSELBbits 000E9A                             _ANSELDbits 000EA7  
                             ___xxtofl 1306                             _T0CON0bits 000FD5  
                           _T0CON1bits 000FD6                        ___lwdiv@divisor 0011  
                    BlueInstructions@a 002D                        ___lwdiv@counter 0015  
                           ?_turnRight 001C                               __ptext10 1AE6  
                             __ptext11 2710                               __ptext20 239A  
                             __ptext12 2872                               __ptext21 21E8  
                             __ptext13 0E40                               __ptext30 190A  
                             __ptext22 284E                               __ptext14 1F4A  
                             __ptext31 1BD0                               __ptext23 1CA4  
                             __ptext15 1FD0                               __ptext40 2598  
                             __ptext32 19F8                               __ptext24 23F4  
                             __ptext16 2056                               __ptext41 298E  
                             __ptext33 14BA                               __ptext25 172E  
                             __ptext17 20DC                               __ptext50 2998  
                             __ptext42 26CE                               __ptext34 2828  
                             __ptext26 1D56                               __ptext18 2340  
                             __ptext51 29A2                               __ptext43 2894  
                             __ptext35 226E                               __ptext27 181C  
                             __ptext19 2162                               __ptext60 29AC  
                             __ptext52 27D8                               __ptext44 2966  
                             __ptext36 22E2                               __ptext28 1E08  
                             __ptext61 29B6                               __ptext53 277C  
                             __ptext45 2914                               __ptext37 24A8  
                             __ptext29 244E                               __ptext62 2800  
                             __ptext46 2932                               __ptext38 24F8  
                             __ptext47 25E8                               __ptext39 2548  
                             __ptext56 294C                               __ptext48 28B4  
                             __ptext57 2638                               __ptext49 2976  
                             __ptext58 28F4                               __ptext59 2982  
                         _SSP2CON1bits 000ED9                           _SSP2CON2bits 000EDA  
      ??i2_interrupts_clear_colorclick 0006                 LightBlueInstructions@a 002D  
                           turnLeft@mL 001C                             turnLeft@mR 001E  
                ?i2_I2C_2_Master_Start 0001                  ?i2_I2C_2_Master_Write 0001  
                        ??_turnLeft135 0026                               isa$xinst 000000  
                           _RC4STAbits 000EE7                               int$flags 0057  
                        ??_turnRight90 0026                       _BlueInstructions 1E08  
                             _turnLeft 190A                             _INTCONbits 000FF2  
                          AntiYellow@a 0034                            _setMotorPWM 14BA  
                        ?_detect_color 00A2                          turnRight135@a 0026  
                             intlevel1 0000                               intlevel2 0000  
                        turnRight90@mL 0022                          turnRight90@mR 0024  
                     ??_fullSpeedAhead 0020                   __end_of_turnRight135 239A  
                         ??_turnLeft90 0026                             AntiPink@mL 002E  
                           AntiPink@mR 0030                            _moves_index 0056  
                     _color_click_init 2748                    __end_of_turnLeft135 23F4  
                           _SSP2DATPPS 000E1D                             _SSP2CLKPPS 000E1C  
                  __end_of_turnRight90 244E                          ??_AppendMoves 000D  
                       ??_detect_color 00A4                            ??_turnRight 0020  
                   __end_of_turnLeft90 24A8                             _TX4STAbits 000EE8  
               ??i2_I2C_2_Master_Start 0002                 ??i2_I2C_2_Master_Write 0002  
                 YellowInstructions@mL 0027                   YellowInstructions@mR 0029  
__end_ofi2_interrupts_clear_colorclick 2966          i2_interrupts_clear_colorclick 294C  
