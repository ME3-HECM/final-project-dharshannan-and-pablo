

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Mar 11 20:04:15 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    68                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    69                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    78                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    79                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    80                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    81                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    82   000000                     
    83                           ; Generated 06/04/2022 GMT
    84                           ; 
    85                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    86                           ; All rights reserved.
    87                           ; 
    88                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    89                           ; 
    90                           ; Redistribution and use in source and binary forms, with or without modification, are
    91                           ; permitted provided that the following conditions are met:
    92                           ; 
    93                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    94                           ;        conditions and the following disclaimer.
    95                           ; 
    96                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    97                           ;        of conditions and the following disclaimer in the documentation and/or other
    98                           ;        materials provided with the distribution. Publication is not required when
    99                           ;        this file is used in an embedded application.
   100                           ; 
   101                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   102                           ;        software without specific prior written permission.
   103                           ; 
   104                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   105                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   106                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   107                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   108                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   109                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   110                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   111                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   112                           ; 
   113                           ; 
   114                           ; Code-generator required, PIC18F67K40 Definitions
   115                           ; 
   116                           ; SFR Addresses
   117   000000                     
   118                           	psect	idataBANK0
   119   002A70                     __pidataBANK0:
   120                           	callstack 0
   121                           
   122                           ;initializer for _int_threshold_high
   123   002A70  0B54               	dw	2900
   124   000000                     _T0CON0bits	set	4053
   125   000000                     _T0CON1bits	set	4054
   126   000000                     _TX4REG	set	3812
   127   000000                     _RC4STAbits	set	3815
   128   000000                     _SP4BRGH	set	3814
   129   000000                     _TRISBbits	set	3970
   130   000000                     _TRISCbits	set	3971
   131   000000                     _TRISEbits	set	3973
   132   000000                     _LATEbits	set	3965
   133   000000                     _LATFbits	set	3966
   134   000000                     _LATGbits	set	3967
   135   000000                     _TRISFbits	set	3974
   136   000000                     _TRISGbits	set	3975
   137   000000                     _SSP2CON2bits	set	3802
   138   000000                     _RX4PPS	set	3605
   139   000000                     _SSP2CLKPPS	set	3612
   140   000000                     _SSP2DATPPS	set	3613
   141   000000                     _ANSELDbits	set	3751
   142   000000                     _SSP2ADD	set	3798
   143   000000                     _SSP2CON1bits	set	3801
   144   000000                     _RC4REG	set	3811
   145   000000                     _SP4BRGL	set	3813
   146   000000                     _TX4STAbits	set	3816
   147   000000                     _BAUD4CONbits	set	3817
   148   000000                     _LATAbits	set	3961
   149   000000                     _LATDbits	set	3964
   150   000000                     _LATHbits	set	3968
   151   000000                     _TRISAbits	set	3969
   152   000000                     _SSP2CON2	set	3802
   153   000000                     _TRISDbits	set	3972
   154   000000                     _CCPR4H	set	3873
   155   000000                     _CCPR3H	set	3877
   156   000000                     _SSP2STAT	set	3800
   157   000000                     _SSP2BUF	set	3797
   158   000000                     _IPR0bits	set	3615
   159   000000                     _PIE0bits	set	3625
   160   000000                     _RC7PPS	set	3689
   161   000000                     _RD5PPS	set	3695
   162   000000                     _RE2PPS	set	3700
   163   000000                     _RD6PPS	set	3696
   164   000000                     _T2PR	set	4028
   165   000000                     _T2CONbits	set	4029
   166   000000                     _TRISHbits	set	3976
   167   000000                     _CCPR2H	set	4006
   168   000000                     _CCPR1H	set	4010
   169   000000                     _LATCbits	set	3963
   170   000000                     _RE4PPS	set	3702
   171   000000                     _RG6PPS	set	3720
   172   000000                     _ANSELBbits	set	3738
   173   000000                     _TMR0L	set	4051
   174   000000                     _TMR0H	set	4052
   175   000000                     _INTCONbits	set	4082
   176   000000                     _T2CLKCONbits	set	4031
   177   000000                     _T2HLTbits	set	4030
   178   000000                     _CCP1CONbits	set	4011
   179   000000                     _CCPTMRS0bits	set	4013
   180   000000                     _CCP2CONbits	set	4007
   181   000000                     _CCP3CONbits	set	3878
   182   000000                     _CCP4CONbits	set	3874
   183   000000                     _PIE4bits	set	3629
   184   000000                     _PIR0bits	set	3635
   185   000000                     _PIR4bits	set	3639
   186   000000                     _RC0PPS	set	3682
   187                           
   188                           ; #config settings
   189                           
   190                           	psect	cinit
   191   002730                     __pcinit:
   192                           	callstack 0
   193   002730                     start_initialization:
   194                           	callstack 0
   195   002730                     __initialization:
   196                           	callstack 0
   197                           
   198                           ; Initialize objects allocated to BANK0 (2 bytes)
   199                           ; load TBLPTR registers with __pidataBANK0
   200   002730  0E70               	movlw	low __pidataBANK0
   201   002732  6EF6               	movwf	tblptrl,c
   202   002734  0E2A               	movlw	high __pidataBANK0
   203   002736  6EF7               	movwf	tblptrh,c
   204   002738  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   205   00273A  6EF8               	movwf	tblptru,c
   206   00273C  0009               	tblrd		*+	;fetch initializer
   207   00273E  CFF5 F0D3          	movff	tablat,__pdataBANK0
   208   002742  0009               	tblrd		*+	;fetch initializer
   209   002744  CFF5 F0D4          	movff	tablat,__pdataBANK0+1
   210                           
   211                           ; Clear objects allocated to BANK1 (140 bytes)
   212   002748  EE01  F000         	lfsr	0,__pbssBANK1
   213   00274C  0E8C               	movlw	140
   214   00274E                     clear_0:
   215   00274E  6AEE               	clrf	postinc0,c
   216   002750  06E8               	decf	wreg,f,c
   217   002752  E1FD               	bnz	clear_0
   218                           
   219                           ; Clear objects allocated to BANK0 (62 bytes)
   220   002754  EE00  F060         	lfsr	0,__pbssBANK0
   221   002758  0E3E               	movlw	62
   222   00275A                     clear_1:
   223   00275A  6AEE               	clrf	postinc0,c
   224   00275C  06E8               	decf	wreg,f,c
   225   00275E  E1FD               	bnz	clear_1
   226                           
   227                           ; Clear objects allocated to COMRAM (8 bytes)
   228   002760  EE00  F04F         	lfsr	0,__pbssCOMRAM
   229   002764  0E08               	movlw	8
   230   002766                     clear_2:
   231   002766  6AEE               	clrf	postinc0,c
   232   002768  06E8               	decf	wreg,f,c
   233   00276A  E1FD               	bnz	clear_2
   234   00276C                     end_of_initialization:
   235                           	callstack 0
   236   00276C                     __end_of__initialization:
   237                           	callstack 0
   238   00276C  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   239   00276E  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   240   002770  0100               	movlb	0
   241   002772  EF62  F008         	goto	_main	;jump to C main() function
   242                           
   243                           	psect	bssCOMRAM
   244   00004F                     __pbssCOMRAM:
   245                           	callstack 0
   246   00004F                     _int_threshold_low:
   247                           	callstack 0
   248   00004F                     	ds	2
   249   000051                     _TxBufReadCnt:
   250                           	callstack 0
   251   000051                     	ds	1
   252   000052                     _TxBufWriteCnt:
   253                           	callstack 0
   254   000052                     	ds	1
   255   000053                     _RxBufReadCnt:
   256                           	callstack 0
   257   000053                     	ds	1
   258   000054                     _RxBufWriteCnt:
   259                           	callstack 0
   260   000054                     	ds	1
   261   000055                     _color_flag:
   262                           	callstack 0
   263   000055                     	ds	1
   264   000056                     _moves_index:
   265                           	callstack 0
   266   000056                     	ds	1
   267                           
   268                           	psect	bssBANK0
   269   000060                     __pbssBANK0:
   270                           	callstack 0
   271   000060                     _EUSART4RXbuf:
   272                           	callstack 0
   273   000060                     	ds	20
   274   000074                     _tmr_ovf:
   275                           	callstack 0
   276   000074                     	ds	1
   277   000075                     _anti_moves_array:
   278                           	callstack 0
   279   000075                     	ds	40
   280   00009D                     _time_index:
   281                           	callstack 0
   282   00009D                     	ds	1
   283                           
   284                           	psect	dataBANK0
   285   0000D3                     __pdataBANK0:
   286                           	callstack 0
   287   0000D3                     _int_threshold_high:
   288                           	callstack 0
   289   0000D3                     	ds	2
   290                           
   291                           	psect	bssBANK1
   292   000100                     __pbssBANK1:
   293                           	callstack 0
   294   000100                     _EUSART4TXbuf:
   295                           	callstack 0
   296   000100                     	ds	60
   297   00013C                     _time_array:
   298                           	callstack 0
   299   00013C                     	ds	80
   300                           
   301                           	psect	cstackBANK0
   302   00009E                     __pcstackBANK0:
   303                           	callstack 0
   304   00009E                     ??___fltol:
   305                           
   306                           ; 1 bytes @ 0x0
   307   00009E                     	ds	4
   308   0000A2                     detect_color@tempval:
   309                           	callstack 0
   310                           
   311                           ; 2 bytes @ 0x4
   312   0000A2                     	ds	2
   313   0000A4                     ??_detect_color:
   314                           
   315                           ; 1 bytes @ 0x6
   316   0000A4                     	ds	12
   317   0000B0                     detect_color@color:
   318                           	callstack 0
   319                           
   320                           ; 1 bytes @ 0x12
   321   0000B0                     	ds	1
   322   0000B1                     detect_color@dist_R:
   323                           	callstack 0
   324                           
   325                           ; 1 bytes @ 0x13
   326   0000B1                     	ds	1
   327   0000B2                     detect_color@dist_G:
   328                           	callstack 0
   329                           
   330                           ; 1 bytes @ 0x14
   331   0000B2                     	ds	1
   332   0000B3                     detect_color@dist_B:
   333                           	callstack 0
   334                           
   335                           ; 1 bytes @ 0x15
   336   0000B3                     	ds	1
   337   0000B4                     ??_main:
   338                           
   339                           ; 1 bytes @ 0x16
   340   0000B4                     	ds	2
   341   0000B6                     main@b:
   342                           	callstack 0
   343                           
   344                           ; 2 bytes @ 0x18
   345   0000B6                     	ds	2
   346   0000B8                     main@color_detected:
   347                           	callstack 0
   348                           
   349                           ; 1 bytes @ 0x1A
   350   0000B8                     	ds	1
   351   0000B9                     main@initial_color:
   352                           	callstack 0
   353                           
   354                           ; 8 bytes @ 0x1B
   355   0000B9                     	ds	8
   356   0000C1                     main@motorL:
   357                           	callstack 0
   358                           
   359                           ; 9 bytes @ 0x23
   360   0000C1                     	ds	9
   361   0000CA                     main@motorR:
   362                           	callstack 0
   363                           
   364                           ; 9 bytes @ 0x2C
   365   0000CA                     	ds	9
   366                           
   367                           	psect	cstackCOMRAM
   368   000001                     __pcstackCOMRAM:
   369                           	callstack 0
   370   000001                     ??i2_I2C_2_Master_Idle:
   371   000001                     
   372                           ; 1 bytes @ 0x0
   373   000001                     	ds	1
   374   000002                     i2I2C_2_Master_Write@data_byte:
   375                           	callstack 0
   376                           
   377                           ; 1 bytes @ 0x1
   378   000002                     	ds	1
   379   000003                     i2color_writetoaddr@value:
   380                           	callstack 0
   381                           
   382                           ; 1 bytes @ 0x2
   383   000003                     	ds	1
   384   000004                     i2color_writetoaddr@address:
   385                           	callstack 0
   386                           
   387                           ; 1 bytes @ 0x3
   388   000004                     	ds	1
   389   000005                     ??i2_init_colorclick_interrupts:
   390                           
   391                           ; 1 bytes @ 0x4
   392   000005                     	ds	1
   393   000006                     ??_LowISR:
   394   000006                     
   395                           ; 1 bytes @ 0x5
   396   000006                     	ds	3
   397   000009                     ??_I2C_2_Master_Idle:
   398   000009                     ?_Return_Time:
   399                           	callstack 0
   400   000009                     ?___wmul:
   401                           	callstack 0
   402   000009                     ?___xxtofl:
   403                           	callstack 0
   404   000009                     initDCmotorsPWM@PWMperiod:
   405                           	callstack 0
   406   000009                     AppendMoves@moves_index:
   407                           	callstack 0
   408   000009                     AppendTime@temp:
   409                           	callstack 0
   410   000009                     Return_Anti_Moves@moves_index:
   411                           	callstack 0
   412   000009                     Return_Time@time_index:
   413                           	callstack 0
   414   000009                     ___wmul@multiplier:
   415                           	callstack 0
   416   000009                     ___xxtofl@val:
   417                           	callstack 0
   418                           
   419                           ; 4 bytes @ 0x8
   420   000009                     	ds	1
   421   00000A                     ??_I2C_2_Master_Read:
   422   00000A                     I2C_2_Master_Write@data_byte:
   423                           	callstack 0
   424                           
   425                           ; 1 bytes @ 0x9
   426   00000A                     	ds	1
   427   00000B                     color_writetoaddr@value:
   428                           	callstack 0
   429   00000B                     I2C_2_Master_Read@ack:
   430                           	callstack 0
   431   00000B                     AppendMoves@anti_moves_array:
   432                           	callstack 0
   433   00000B                     AppendTime@time_index:
   434                           	callstack 0
   435   00000B                     Return_Anti_Moves@anti_moves_array:
   436                           	callstack 0
   437   00000B                     Return_Time@time_array:
   438                           	callstack 0
   439   00000B                     ___wmul@multiplicand:
   440                           	callstack 0
   441                           
   442                           ; 2 bytes @ 0xA
   443   00000B                     	ds	1
   444   00000C                     color_writetoaddr@address:
   445                           	callstack 0
   446   00000C                     I2C_2_Master_Read@tmp:
   447                           	callstack 0
   448                           
   449                           ; 1 bytes @ 0xB
   450   00000C                     	ds	1
   451   00000D                     ??_Return_Time:
   452   00000D                     ??_Return_Anti_Moves:
   453   00000D                     ??_AppendMoves:
   454   00000D                     ??_color_click_init:
   455   00000D                     ??_init_colorclick_interrupts:
   456   00000D                     ??___xxtofl:
   457   00000D                     ?_color_read_Red:
   458                           	callstack 0
   459   00000D                     ?_color_read_Green:
   460                           	callstack 0
   461   00000D                     ?_color_read_Blue:
   462                           	callstack 0
   463   00000D                     ?_color_read_Clear:
   464                           	callstack 0
   465   00000D                     AppendTime@time_array:
   466                           	callstack 0
   467   00000D                     ___wmul@product:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0xC
   471   00000D                     	ds	1
   472   00000E                     AppendMoves@temp:
   473                           	callstack 0
   474   00000E                     Return_Anti_Moves@temp:
   475                           	callstack 0
   476                           
   477                           ; 1 bytes @ 0xD
   478   00000E                     	ds	1
   479   00000F                     ??_AppendTime:
   480   00000F                     ??_color_read_Red:
   481   00000F                     ??_color_read_Green:
   482   00000F                     ??_color_read_Blue:
   483   00000F                     ??_color_read_Clear:
   484   00000F                     ?___lwdiv:
   485                           	callstack 0
   486   00000F                     ___lwdiv@dividend:
   487                           	callstack 0
   488                           
   489                           ; 2 bytes @ 0xE
   490   00000F                     	ds	1
   491   000010                     Return_Time@temp:
   492                           	callstack 0
   493                           
   494                           ; 2 bytes @ 0xF
   495   000010                     	ds	1
   496   000011                     ___xxtofl@sign:
   497                           	callstack 0
   498   000011                     ___lwdiv@divisor:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0x10
   502   000011                     	ds	1
   503   000012                     ___xxtofl@exp:
   504                           	callstack 0
   505   000012                     color_read_Red@tmp:
   506                           	callstack 0
   507   000012                     color_read_Green@tmp:
   508                           	callstack 0
   509   000012                     color_read_Blue@tmp:
   510                           	callstack 0
   511   000012                     color_read_Clear@tmp:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0x11
   515   000012                     	ds	1
   516   000013                     ___lwdiv@quotient:
   517                           	callstack 0
   518   000013                     ___xxtofl@arg:
   519                           	callstack 0
   520                           
   521                           ; 4 bytes @ 0x12
   522   000013                     	ds	1
   523   000014                     Update_RGBC@tempval:
   524                           	callstack 0
   525                           
   526                           ; 2 bytes @ 0x13
   527   000014                     	ds	1
   528   000015                     ___lwdiv@counter:
   529                           	callstack 0
   530                           
   531                           ; 1 bytes @ 0x14
   532   000015                     	ds	1
   533   000016                     setMotorPWM@m:
   534                           	callstack 0
   535                           
   536                           ; 2 bytes @ 0x15
   537   000016                     	ds	1
   538   000017                     ?___fldiv:
   539                           	callstack 0
   540   000017                     ___fldiv@b:
   541                           	callstack 0
   542                           
   543                           ; 4 bytes @ 0x16
   544   000017                     	ds	1
   545   000018                     ??_setMotorPWM:
   546                           
   547                           ; 1 bytes @ 0x17
   548   000018                     	ds	2
   549   00001A                     setMotorPWM@posDuty:
   550                           	callstack 0
   551                           
   552                           ; 1 bytes @ 0x19
   553   00001A                     	ds	1
   554   00001B                     setMotorPWM@negDuty:
   555                           	callstack 0
   556   00001B                     ___fldiv@a:
   557                           	callstack 0
   558                           
   559                           ; 4 bytes @ 0x1A
   560   00001B                     	ds	1
   561   00001C                     stop@mL:
   562                           	callstack 0
   563   00001C                     turnLeft@mL:
   564                           	callstack 0
   565   00001C                     turnRight@mL:
   566                           	callstack 0
   567   00001C                     fullSpeedAhead@mL:
   568                           	callstack 0
   569   00001C                     fullSpeedBackwards@mL:
   570                           	callstack 0
   571                           
   572                           ; 2 bytes @ 0x1B
   573   00001C                     	ds	2
   574   00001E                     stop@mR:
   575                           	callstack 0
   576   00001E                     turnLeft@mR:
   577                           	callstack 0
   578   00001E                     turnRight@mR:
   579                           	callstack 0
   580   00001E                     fullSpeedAhead@mR:
   581                           	callstack 0
   582   00001E                     fullSpeedBackwards@mR:
   583                           	callstack 0
   584                           
   585                           ; 2 bytes @ 0x1D
   586   00001E                     	ds	1
   587   00001F                     ??___fldiv:
   588                           
   589                           ; 1 bytes @ 0x1E
   590   00001F                     	ds	1
   591   000020                     ??_stop:
   592   000020                     ??_turnLeft:
   593   000020                     ??_turnRight:
   594   000020                     ??_fullSpeedAhead:
   595   000020                     ??_fullSpeedBackwards:
   596                           
   597                           ; 1 bytes @ 0x1F
   598   000020                     	ds	2
   599   000022                     turnLeft90@mL:
   600                           	callstack 0
   601   000022                     turnRight90@mL:
   602                           	callstack 0
   603   000022                     turnRight135@mL:
   604                           	callstack 0
   605   000022                     turnLeft135@mL:
   606                           	callstack 0
   607                           
   608                           ; 2 bytes @ 0x21
   609   000022                     	ds	1
   610   000023                     ___fldiv@rem:
   611                           	callstack 0
   612                           
   613                           ; 4 bytes @ 0x22
   614   000023                     	ds	1
   615   000024                     turnLeft90@mR:
   616                           	callstack 0
   617   000024                     turnRight90@mR:
   618                           	callstack 0
   619   000024                     turnRight135@mR:
   620                           	callstack 0
   621   000024                     turnLeft135@mR:
   622                           	callstack 0
   623                           
   624                           ; 2 bytes @ 0x23
   625   000024                     	ds	2
   626   000026                     turnLeft90@a:
   627                           	callstack 0
   628   000026                     turnRight90@a:
   629                           	callstack 0
   630   000026                     turnRight135@a:
   631                           	callstack 0
   632   000026                     turnLeft135@a:
   633                           	callstack 0
   634                           
   635                           ; 1 bytes @ 0x25
   636   000026                     	ds	1
   637   000027                     ___fldiv@sign:
   638                           	callstack 0
   639   000027                     RedInstructions@mL:
   640                           	callstack 0
   641   000027                     GreenInstructions@mL:
   642                           	callstack 0
   643   000027                     BlueInstructions@mL:
   644                           	callstack 0
   645   000027                     YellowInstructions@mL:
   646                           	callstack 0
   647   000027                     PinkInstructions@mL:
   648                           	callstack 0
   649   000027                     OrangeInstructions@mL:
   650                           	callstack 0
   651   000027                     LightBlueInstructions@mL:
   652                           	callstack 0
   653                           
   654                           ; 2 bytes @ 0x26
   655   000027                     	ds	1
   656   000028                     ___fldiv@new_exp:
   657                           	callstack 0
   658                           
   659                           ; 2 bytes @ 0x27
   660   000028                     	ds	1
   661   000029                     RedInstructions@mR:
   662                           	callstack 0
   663   000029                     GreenInstructions@mR:
   664                           	callstack 0
   665   000029                     BlueInstructions@mR:
   666                           	callstack 0
   667   000029                     YellowInstructions@mR:
   668                           	callstack 0
   669   000029                     PinkInstructions@mR:
   670                           	callstack 0
   671   000029                     OrangeInstructions@mR:
   672                           	callstack 0
   673   000029                     LightBlueInstructions@mR:
   674                           	callstack 0
   675                           
   676                           ; 2 bytes @ 0x28
   677   000029                     	ds	1
   678   00002A                     ___fldiv@grs:
   679                           	callstack 0
   680                           
   681                           ; 4 bytes @ 0x29
   682   00002A                     	ds	1
   683   00002B                     ??_RedInstructions:
   684   00002B                     ??_GreenInstructions:
   685   00002B                     ??_BlueInstructions:
   686   00002B                     ??_YellowInstructions:
   687   00002B                     ??_PinkInstructions:
   688   00002B                     ??_OrangeInstructions:
   689   00002B                     ??_LightBlueInstructions:
   690                           
   691                           ; 1 bytes @ 0x2A
   692   00002B                     	ds	2
   693   00002D                     RedInstructions@a:
   694                           	callstack 0
   695   00002D                     GreenInstructions@a:
   696                           	callstack 0
   697   00002D                     BlueInstructions@a:
   698                           	callstack 0
   699   00002D                     YellowInstructions@a:
   700                           	callstack 0
   701   00002D                     PinkInstructions@a:
   702                           	callstack 0
   703   00002D                     OrangeInstructions@a:
   704                           	callstack 0
   705   00002D                     LightBlueInstructions@a:
   706                           	callstack 0
   707                           
   708                           ; 1 bytes @ 0x2C
   709   00002D                     	ds	1
   710   00002E                     ___fldiv@bexp:
   711                           	callstack 0
   712   00002E                     AntiYellow@mL:
   713                           	callstack 0
   714   00002E                     AntiPink@mL:
   715                           	callstack 0
   716                           
   717                           ; 2 bytes @ 0x2D
   718   00002E                     	ds	1
   719   00002F                     ___fldiv@aexp:
   720                           	callstack 0
   721                           
   722                           ; 1 bytes @ 0x2E
   723   00002F                     	ds	1
   724   000030                     ?___flmul:
   725                           	callstack 0
   726   000030                     AntiYellow@mR:
   727                           	callstack 0
   728   000030                     AntiPink@mR:
   729                           	callstack 0
   730   000030                     ___flmul@b:
   731                           	callstack 0
   732                           
   733                           ; 4 bytes @ 0x2F
   734   000030                     	ds	2
   735   000032                     ??_AntiYellow:
   736   000032                     ??_AntiPink:
   737                           
   738                           ; 1 bytes @ 0x31
   739   000032                     	ds	2
   740   000034                     AntiYellow@a:
   741                           	callstack 0
   742   000034                     AntiPink@a:
   743                           	callstack 0
   744   000034                     ___flmul@a:
   745                           	callstack 0
   746                           
   747                           ; 4 bytes @ 0x33
   748   000034                     	ds	1
   749   000035                     MoveBuggy@color_detected:
   750                           	callstack 0
   751                           
   752                           ; 2 bytes @ 0x34
   753   000035                     	ds	2
   754   000037                     MoveBuggy@mL:
   755                           	callstack 0
   756                           
   757                           ; 2 bytes @ 0x36
   758   000037                     	ds	1
   759   000038                     ??___flmul:
   760                           
   761                           ; 1 bytes @ 0x37
   762   000038                     	ds	1
   763   000039                     MoveBuggy@mR:
   764                           	callstack 0
   765                           
   766                           ; 2 bytes @ 0x38
   767   000039                     	ds	2
   768   00003B                     WhiteInstructions@mL:
   769                           	callstack 0
   770                           
   771                           ; 2 bytes @ 0x3A
   772   00003B                     	ds	1
   773   00003C                     ___flmul@sign:
   774                           	callstack 0
   775                           
   776                           ; 1 bytes @ 0x3B
   777   00003C                     	ds	1
   778   00003D                     WhiteInstructions@mR:
   779                           	callstack 0
   780   00003D                     ___flmul@grs:
   781                           	callstack 0
   782                           
   783                           ; 4 bytes @ 0x3C
   784   00003D                     	ds	2
   785   00003F                     ??_WhiteInstructions:
   786                           
   787                           ; 1 bytes @ 0x3E
   788   00003F                     	ds	2
   789   000041                     ___flmul@aexp:
   790                           	callstack 0
   791   000041                     WhiteInstructions@c:
   792                           	callstack 0
   793                           
   794                           ; 2 bytes @ 0x40
   795   000041                     	ds	1
   796   000042                     ___flmul@bexp:
   797                           	callstack 0
   798                           
   799                           ; 1 bytes @ 0x41
   800   000042                     	ds	1
   801   000043                     WhiteInstructions@anticolor:
   802                           	callstack 0
   803   000043                     ___flmul@prod:
   804                           	callstack 0
   805                           
   806                           ; 4 bytes @ 0x42
   807   000043                     	ds	1
   808   000044                     WhiteInstructions@a:
   809                           	callstack 0
   810                           
   811                           ; 2 bytes @ 0x43
   812   000044                     	ds	3
   813   000047                     ___flmul@temp:
   814                           	callstack 0
   815                           
   816                           ; 2 bytes @ 0x46
   817   000047                     	ds	2
   818   000049                     ?___fltol:
   819                           	callstack 0
   820   000049                     ___fltol@f1:
   821                           	callstack 0
   822                           
   823                           ; 4 bytes @ 0x48
   824   000049                     	ds	4
   825   00004D                     ___fltol@sign1:
   826                           	callstack 0
   827                           
   828                           ; 1 bytes @ 0x4C
   829   00004D                     	ds	1
   830   00004E                     ___fltol@exp1:
   831                           	callstack 0
   832                           
   833                           ; 1 bytes @ 0x4D
   834   00004E                     	ds	1
   835                           
   836 ;;
   837 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   838 ;;
   839 ;; *************** function _main *****************
   840 ;; Defined at:
   841 ;;		line 22 in file "main_motor.c"
   842 ;; Parameters:    Size  Location     Type
   843 ;;		None
   844 ;; Auto vars:     Size  Location     Type
   845 ;;  b               2   24[BANK0 ] unsigned int 
   846 ;;  motorR          9   44[BANK0 ] struct DC_motor
   847 ;;  motorL          9   35[BANK0 ] struct DC_motor
   848 ;;  initial_colo    8   27[BANK0 ] struct RGB_val
   849 ;;  color_detect    1   26[BANK0 ] unsigned char 
   850 ;; Return value:  Size  Location     Type
   851 ;;                  1    wreg      void 
   852 ;; Registers used:
   853 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   854 ;; Tracked objects:
   855 ;;		On entry : 0/0
   856 ;;		On exit  : 0/0
   857 ;;		Unchanged: 0/0
   858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   860 ;;      Locals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   861 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   862 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   863 ;;Total ram usage:       31 bytes
   864 ;; Hardware stack levels required when called: 15
   865 ;; This function calls:
   866 ;;		_AppendTime
   867 ;;		_Interrupts_init
   868 ;;		_LED_init
   869 ;;		_MoveBuggy
   870 ;;		_Timer0_init
   871 ;;		_Update_RGBC
   872 ;;		_WhiteInstructions
   873 ;;		_WhiteLight
   874 ;;		_color_click_init
   875 ;;		_detect_color
   876 ;;		_fullSpeedAhead
   877 ;;		_initDCmotorsPWM
   878 ;;		_stop
   879 ;; This function is called by:
   880 ;;		Startup code after reset
   881 ;; This function uses a non-reentrant model
   882 ;;
   883                           
   884                           	psect	text0
   885   0010C4                     __ptext0:
   886                           	callstack 0
   887   0010C4                     _main:
   888                           	callstack 16
   889   0010C4                     
   890                           ;main_motor.c: 25:     RGB_val initial_color;;main_motor.c: 26:     initial_color.R = 0;
   891   0010C4  0E00               	movlw	0
   892   0010C6  0100               	movlb	0	; () banked
   893   0010C8  6FBA               	movwf	(main@initial_color+1)& (0+255),b
   894   0010CA  0E00               	movlw	0
   895   0010CC  6FB9               	movwf	main@initial_color& (0+255),b
   896                           
   897                           ;main_motor.c: 27:     initial_color.G = 0;
   898   0010CE  0E00               	movlw	0
   899   0010D0  6FBC               	movwf	(main@initial_color+3)& (0+255),b
   900   0010D2  0E00               	movlw	0
   901   0010D4  6FBB               	movwf	(main@initial_color+2)& (0+255),b
   902                           
   903                           ;main_motor.c: 28:     initial_color.B = 0;
   904   0010D6  0E00               	movlw	0
   905   0010D8  6FBE               	movwf	(main@initial_color+5)& (0+255),b
   906   0010DA  0E00               	movlw	0
   907   0010DC  6FBD               	movwf	(main@initial_color+4)& (0+255),b
   908                           
   909                           ;main_motor.c: 29:     initial_color.C = 0;
   910   0010DE  0E00               	movlw	0
   911   0010E0  6FC0               	movwf	(main@initial_color+7)& (0+255),b
   912   0010E2  0E00               	movlw	0
   913   0010E4  6FBF               	movwf	(main@initial_color+6)& (0+255),b
   914   0010E6                     
   915                           ; BSR set to: 0
   916                           ;main_motor.c: 31:     LED_init();
   917   0010E6  EC07  F015         	call	_LED_init	;wreg free
   918   0010EA                     
   919                           ;main_motor.c: 32:     color_click_init();
   920   0010EA  ECF8  F013         	call	_color_click_init	;wreg free
   921   0010EE                     
   922                           ;main_motor.c: 33:     Interrupts_init();
   923   0010EE  ECDE  F014         	call	_Interrupts_init	;wreg free
   924                           
   925                           ;main_motor.c: 35:     Timer0_init();
   926   0010F2  EC9E  F014         	call	_Timer0_init	;wreg free
   927                           
   928                           ;main_motor.c: 38:     initDCmotorsPWM(99);
   929   0010F6  0E00               	movlw	0
   930   0010F8  6E0A               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   931   0010FA  0E63               	movlw	99
   932   0010FC  6E09               	movwf	initDCmotorsPWM@PWMperiod^0,c
   933   0010FE  EC0B  F010         	call	_initDCmotorsPWM	;wreg free
   934   001102                     
   935                           ;main_motor.c: 40:     struct DC_motor motorL, motorR;;main_motor.c: 42:     motorL.powe
      +                          r=0;
   936   001102  0E00               	movlw	0
   937   001104  0100               	movlb	0	; () banked
   938   001106  6FC1               	movwf	main@motorL& (0+255),b
   939   001108                     
   940                           ; BSR set to: 0
   941                           ;main_motor.c: 43:     motorL.direction=1;
   942   001108  0E01               	movlw	1
   943   00110A  6FC2               	movwf	(main@motorL+1)& (0+255),b
   944   00110C                     
   945                           ; BSR set to: 0
   946                           ;main_motor.c: 44:     motorL.brakemode=1;
   947   00110C  0E01               	movlw	1
   948   00110E  6FC3               	movwf	(main@motorL+2)& (0+255),b
   949   001110                     
   950                           ; BSR set to: 0
   951                           ;main_motor.c: 45:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
   952   001110  0EAA               	movlw	170
   953   001112  6FC6               	movwf	(main@motorL+5)& (0+255),b
   954   001114  0E0F               	movlw	15
   955   001116  6FC7               	movwf	(main@motorL+6)& (0+255),b
   956   001118                     
   957                           ; BSR set to: 0
   958                           ;main_motor.c: 46:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
   959   001118  0EA6               	movlw	166
   960   00111A  6FC8               	movwf	(main@motorL+7)& (0+255),b
   961   00111C  0E0F               	movlw	15
   962   00111E  6FC9               	movwf	(main@motorL+8)& (0+255),b
   963   001120                     
   964                           ; BSR set to: 0
   965                           ;main_motor.c: 47:     motorL.PWMperiod= T2PR;
   966   001120  CFBC F0C4          	movff	4028,main@motorL+3	;volatile
   967   001124  6BC5               	clrf	(main@motorL+4)& (0+255),b
   968   001126                     
   969                           ; BSR set to: 0
   970                           ;main_motor.c: 49:     motorR.power=0;
   971   001126  0E00               	movlw	0
   972   001128  6FCA               	movwf	main@motorR& (0+255),b
   973   00112A                     
   974                           ; BSR set to: 0
   975                           ;main_motor.c: 50:     motorR.direction=1;
   976   00112A  0E01               	movlw	1
   977   00112C  6FCB               	movwf	(main@motorR+1)& (0+255),b
   978   00112E                     
   979                           ; BSR set to: 0
   980                           ;main_motor.c: 51:     motorR.brakemode=1;
   981   00112E  0E01               	movlw	1
   982   001130  6FCC               	movwf	(main@motorR+2)& (0+255),b
   983   001132                     
   984                           ; BSR set to: 0
   985                           ;main_motor.c: 52:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
   986   001132  0E25               	movlw	37
   987   001134  6FCF               	movwf	(main@motorR+5)& (0+255),b
   988   001136  0E0F               	movlw	15
   989   001138  6FD0               	movwf	(main@motorR+6)& (0+255),b
   990   00113A                     
   991                           ; BSR set to: 0
   992                           ;main_motor.c: 53:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
   993   00113A  0E21               	movlw	33
   994   00113C  6FD1               	movwf	(main@motorR+7)& (0+255),b
   995   00113E  0E0F               	movlw	15
   996   001140  6FD2               	movwf	(main@motorR+8)& (0+255),b
   997   001142                     
   998                           ; BSR set to: 0
   999                           ;main_motor.c: 54:     motorR.PWMperiod= T2PR;
  1000   001142  CFBC F0CD          	movff	4028,main@motorR+3	;volatile
  1001   001146  6BCE               	clrf	(main@motorR+4)& (0+255),b
  1002   001148                     
  1003                           ; BSR set to: 0
  1004                           ;main_motor.c: 57:     unsigned char color_detected = 0;
  1005   001148  0E00               	movlw	0
  1006   00114A  6FB8               	movwf	main@color_detected& (0+255),b
  1007                           
  1008                           ;main_motor.c: 58:     WhiteLight();
  1009   00114C  EC34  F015         	call	_WhiteLight	;wreg free
  1010   001150                     l4251:
  1011                           
  1012                           ;main_motor.c: 63:         unsigned int b = 0;
  1013   001150  0E00               	movlw	0
  1014   001152  0100               	movlb	0	; () banked
  1015   001154  6FB7               	movwf	(main@b+1)& (0+255),b
  1016   001156  0E00               	movlw	0
  1017   001158  6FB6               	movwf	main@b& (0+255),b
  1018                           
  1019                           ;main_motor.c: 64:         while(color_detected == 0){
  1020   00115A  EFCA  F008         	goto	l4261
  1021   00115E                     l4253:
  1022                           
  1023                           ; BSR set to: 0
  1024                           ;main_motor.c: 65:             fullSpeedAhead(&motorL,&motorR);
  1025   00115E  0EC1               	movlw	low main@motorL
  1026   001160  6E1C               	movwf	fullSpeedAhead@mL^0,c
  1027   001162  0E00               	movlw	high main@motorL
  1028   001164  6E1D               	movwf	(fullSpeedAhead@mL+1)^0,c
  1029   001166  0ECA               	movlw	low main@motorR
  1030   001168  6E1E               	movwf	fullSpeedAhead@mR^0,c
  1031   00116A  0E00               	movlw	high main@motorR
  1032   00116C  6E1F               	movwf	(fullSpeedAhead@mR+1)^0,c
  1033   00116E  EC0E  F00C         	call	_fullSpeedAhead	;wreg free
  1034   001172                     
  1035                           ;main_motor.c: 66:             Update_RGBC(&initial_color);
  1036   001172  0EB9               	movlw	low main@initial_color
  1037   001174  6E14               	movwf	Update_RGBC@tempval^0,c
  1038   001176  0E00               	movlw	high main@initial_color
  1039   001178  6E15               	movwf	(Update_RGBC@tempval+1)^0,c
  1040   00117A  EC1F  F012         	call	_Update_RGBC	;wreg free
  1041   00117E                     
  1042                           ;main_motor.c: 67:             color_detected = detect_color(&initial_color);
  1043   00117E  0EB9               	movlw	low main@initial_color
  1044   001180  0100               	movlb	0	; () banked
  1045   001182  6FA2               	movwf	detect_color@tempval& (0+255),b
  1046   001184  0E00               	movlw	high main@initial_color
  1047   001186  6FA3               	movwf	(detect_color@tempval+1)& (0+255),b
  1048   001188  EC2E  F000         	call	_detect_color	;wreg free
  1049   00118C  0100               	movlb	0	; () banked
  1050   00118E  6FB8               	movwf	main@color_detected& (0+255),b
  1051   001190                     
  1052                           ; BSR set to: 0
  1053                           ;main_motor.c: 68:             b++;
  1054   001190  4BB6               	infsnz	main@b& (0+255),f,b
  1055   001192  2BB7               	incf	(main@b+1)& (0+255),f,b
  1056   001194                     l4261:
  1057                           
  1058                           ; BSR set to: 0
  1059                           ;main_motor.c: 64:         while(color_detected == 0){
  1060   001194  51B8               	movf	main@color_detected& (0+255),w,b
  1061   001196  B4D8               	btfsc	status,2,c
  1062   001198  EFD0  F008         	goto	u4491
  1063   00119C  EFD2  F008         	goto	u4490
  1064   0011A0                     u4491:
  1065   0011A0  EFAF  F008         	goto	l4253
  1066   0011A4                     u4490:
  1067   0011A4                     
  1068                           ; BSR set to: 0
  1069                           ;main_motor.c: 71:         if(color_detected != 0 && color_detected != 8){
  1070   0011A4  51B8               	movf	main@color_detected& (0+255),w,b
  1071   0011A6  B4D8               	btfsc	status,2,c
  1072   0011A8  EFD8  F008         	goto	u4501
  1073   0011AC  EFDA  F008         	goto	u4500
  1074   0011B0                     u4501:
  1075   0011B0  EF33  F009         	goto	l4285
  1076   0011B4                     u4500:
  1077   0011B4                     
  1078                           ; BSR set to: 0
  1079   0011B4  0E08               	movlw	8
  1080   0011B6  19B8               	xorwf	main@color_detected& (0+255),w,b
  1081   0011B8  B4D8               	btfsc	status,2,c
  1082   0011BA  EFE1  F008         	goto	u4511
  1083   0011BE  EFE3  F008         	goto	u4510
  1084   0011C2                     u4511:
  1085   0011C2  EF33  F009         	goto	l4285
  1086   0011C6                     u4510:
  1087   0011C6                     
  1088                           ; BSR set to: 0
  1089                           ;main_motor.c: 72:             AppendTime((b-10),&time_index,time_array);
  1090   0011C6  0EF6               	movlw	246
  1091   0011C8  25B6               	addwf	main@b& (0+255),w,b
  1092   0011CA  6E09               	movwf	AppendTime@temp^0,c
  1093   0011CC  0EFF               	movlw	255
  1094   0011CE  21B7               	addwfc	(main@b+1)& (0+255),w,b
  1095   0011D0  6E0A               	movwf	(AppendTime@temp+1)^0,c
  1096   0011D2  0E9D               	movlw	low _time_index
  1097   0011D4  6E0B               	movwf	AppendTime@time_index^0,c
  1098   0011D6  0E00               	movlw	high _time_index
  1099   0011D8  6E0C               	movwf	(AppendTime@time_index+1)^0,c
  1100   0011DA  0E3C               	movlw	low _time_array
  1101   0011DC  6E0D               	movwf	AppendTime@time_array^0,c
  1102   0011DE  0E01               	movlw	high _time_array
  1103   0011E0  6E0E               	movwf	(AppendTime@time_array+1)^0,c
  1104   0011E2  EC12  F014         	call	_AppendTime	;wreg free
  1105   0011E6                     
  1106                           ;main_motor.c: 73:             LATHbits.LATH3 = 1;
  1107   0011E6  8680               	bsf	128,3,c	;volatile
  1108                           
  1109                           ;main_motor.c: 75:             while(b>0){
  1110   0011E8  EF04  F009         	goto	l4275
  1111   0011EC                     l4271:
  1112                           
  1113                           ; BSR set to: 0
  1114                           ;main_motor.c: 76:                 stop(&motorL,&motorR);
  1115   0011EC  0EC1               	movlw	low main@motorL
  1116   0011EE  6E1C               	movwf	stop@mL^0,c
  1117   0011F0  0E00               	movlw	high main@motorL
  1118   0011F2  6E1D               	movwf	(stop@mL+1)^0,c
  1119   0011F4  0ECA               	movlw	low main@motorR
  1120   0011F6  6E1E               	movwf	stop@mR^0,c
  1121   0011F8  0E00               	movlw	high main@motorR
  1122   0011FA  6E1F               	movwf	(stop@mR+1)^0,c
  1123   0011FC  ECE8  F00D         	call	_stop	;wreg free
  1124   001200                     
  1125                           ;main_motor.c: 77:                 b--;
  1126   001200  0100               	movlb	0	; () banked
  1127   001202  07B6               	decf	main@b& (0+255),f,b
  1128   001204  A0D8               	btfss	status,0,c
  1129   001206  07B7               	decf	(main@b+1)& (0+255),f,b
  1130   001208                     l4275:
  1131                           
  1132                           ;main_motor.c: 75:             while(b>0){
  1133   001208  0100               	movlb	0	; () banked
  1134   00120A  51B6               	movf	main@b& (0+255),w,b
  1135   00120C  11B7               	iorwf	(main@b+1)& (0+255),w,b
  1136   00120E  A4D8               	btfss	status,2,c
  1137   001210  EF0C  F009         	goto	u4521
  1138   001214  EF0E  F009         	goto	u4520
  1139   001218                     u4521:
  1140   001218  EFF6  F008         	goto	l4271
  1141   00121C                     u4520:
  1142   00121C                     
  1143                           ; BSR set to: 0
  1144                           ;main_motor.c: 79:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1145   00121C  0E09               	movlw	9
  1146   00121E  0100               	movlb	0	; () banked
  1147   001220  6FB5               	movwf	(??_main+1)& (0+255),b
  1148   001222  0E1E               	movlw	30
  1149   001224  6FB4               	movwf	??_main& (0+255),b
  1150   001226  0EE4               	movlw	228
  1151   001228                     u4557:
  1152   001228  2EE8               	decfsz	wreg,f,c
  1153   00122A  D7FE               	bra	u4557
  1154   00122C  2FB4               	decfsz	??_main& (0+255),f,b
  1155   00122E  D7FC               	bra	u4557
  1156   001230  2FB5               	decfsz	(??_main+1)& (0+255),f,b
  1157   001232  D7FA               	bra	u4557
  1158   001234  F000               	nop	
  1159   001236                     
  1160                           ;main_motor.c: 80:             LATHbits.LATH3 = 0;
  1161   001236  9680               	bcf	128,3,c	;volatile
  1162   001238                     
  1163                           ;main_motor.c: 82:             MoveBuggy(color_detected,&motorL,&motorR);
  1164   001238  0100               	movlb	0	; () banked
  1165   00123A  51B8               	movf	main@color_detected& (0+255),w,b
  1166   00123C  6FB4               	movwf	??_main& (0+255),b
  1167   00123E  6BB5               	clrf	(??_main+1)& (0+255),b
  1168   001240  C0B4  F035         	movff	??_main,MoveBuggy@color_detected
  1169   001244  C0B5  F036         	movff	??_main+1,MoveBuggy@color_detected+1
  1170   001248  0EC1               	movlw	low main@motorL
  1171   00124A  6E37               	movwf	MoveBuggy@mL^0,c
  1172   00124C  0E00               	movlw	high main@motorL
  1173   00124E  6E38               	movwf	(MoveBuggy@mL+1)^0,c
  1174   001250  0ECA               	movlw	low main@motorR
  1175   001252  6E39               	movwf	MoveBuggy@mR^0,c
  1176   001254  0E00               	movlw	high main@motorR
  1177   001256  6E3A               	movwf	(MoveBuggy@mR+1)^0,c
  1178   001258  EC20  F007         	call	_MoveBuggy	;wreg free
  1179   00125C                     l4283:
  1180                           
  1181                           ;main_motor.c: 83:             color_detected = 0;
  1182   00125C  0E00               	movlw	0
  1183   00125E  0100               	movlb	0	; () banked
  1184   001260  6FB8               	movwf	main@color_detected& (0+255),b
  1185                           
  1186                           ;main_motor.c: 84:         }
  1187   001262  EFA8  F008         	goto	l4251
  1188   001266                     l4285:
  1189                           
  1190                           ; BSR set to: 0
  1191   001266  0E08               	movlw	8
  1192   001268  19B8               	xorwf	main@color_detected& (0+255),w,b
  1193   00126A  A4D8               	btfss	status,2,c
  1194   00126C  EF3A  F009         	goto	u4531
  1195   001270  EF3C  F009         	goto	u4530
  1196   001274                     u4531:
  1197   001274  EFA8  F008         	goto	l4251
  1198   001278                     u4530:
  1199   001278                     
  1200                           ; BSR set to: 0
  1201                           ;main_motor.c: 88:             AppendTime((b-10),&time_index,time_array);
  1202   001278  0EF6               	movlw	246
  1203   00127A  25B6               	addwf	main@b& (0+255),w,b
  1204   00127C  6E09               	movwf	AppendTime@temp^0,c
  1205   00127E  0EFF               	movlw	255
  1206   001280  21B7               	addwfc	(main@b+1)& (0+255),w,b
  1207   001282  6E0A               	movwf	(AppendTime@temp+1)^0,c
  1208   001284  0E9D               	movlw	low _time_index
  1209   001286  6E0B               	movwf	AppendTime@time_index^0,c
  1210   001288  0E00               	movlw	high _time_index
  1211   00128A  6E0C               	movwf	(AppendTime@time_index+1)^0,c
  1212   00128C  0E3C               	movlw	low _time_array
  1213   00128E  6E0D               	movwf	AppendTime@time_array^0,c
  1214   001290  0E01               	movlw	high _time_array
  1215   001292  6E0E               	movwf	(AppendTime@time_array+1)^0,c
  1216   001294  EC12  F014         	call	_AppendTime	;wreg free
  1217   001298                     
  1218                           ;main_motor.c: 89:             LATDbits.LATD7 = 1;
  1219   001298  8E7C               	bsf	124,7,c	;volatile
  1220                           
  1221                           ;main_motor.c: 91:             while(b>0){
  1222   00129A  EF5D  F009         	goto	l4295
  1223   00129E                     l4291:
  1224                           
  1225                           ; BSR set to: 0
  1226                           ;main_motor.c: 92:                 stop(&motorL,&motorR);
  1227   00129E  0EC1               	movlw	low main@motorL
  1228   0012A0  6E1C               	movwf	stop@mL^0,c
  1229   0012A2  0E00               	movlw	high main@motorL
  1230   0012A4  6E1D               	movwf	(stop@mL+1)^0,c
  1231   0012A6  0ECA               	movlw	low main@motorR
  1232   0012A8  6E1E               	movwf	stop@mR^0,c
  1233   0012AA  0E00               	movlw	high main@motorR
  1234   0012AC  6E1F               	movwf	(stop@mR+1)^0,c
  1235   0012AE  ECE8  F00D         	call	_stop	;wreg free
  1236   0012B2                     
  1237                           ;main_motor.c: 93:                 b--;
  1238   0012B2  0100               	movlb	0	; () banked
  1239   0012B4  07B6               	decf	main@b& (0+255),f,b
  1240   0012B6  A0D8               	btfss	status,0,c
  1241   0012B8  07B7               	decf	(main@b+1)& (0+255),f,b
  1242   0012BA                     l4295:
  1243                           
  1244                           ;main_motor.c: 91:             while(b>0){
  1245   0012BA  0100               	movlb	0	; () banked
  1246   0012BC  51B6               	movf	main@b& (0+255),w,b
  1247   0012BE  11B7               	iorwf	(main@b+1)& (0+255),w,b
  1248   0012C0  A4D8               	btfss	status,2,c
  1249   0012C2  EF65  F009         	goto	u4541
  1250   0012C6  EF67  F009         	goto	u4540
  1251   0012CA                     u4541:
  1252   0012CA  EF4F  F009         	goto	l4291
  1253   0012CE                     u4540:
  1254   0012CE                     
  1255                           ; BSR set to: 0
  1256                           ;main_motor.c: 95:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1257   0012CE  0E09               	movlw	9
  1258   0012D0  0100               	movlb	0	; () banked
  1259   0012D2  6FB5               	movwf	(??_main+1)& (0+255),b
  1260   0012D4  0E1E               	movlw	30
  1261   0012D6  6FB4               	movwf	??_main& (0+255),b
  1262   0012D8  0EE4               	movlw	228
  1263   0012DA                     u4567:
  1264   0012DA  2EE8               	decfsz	wreg,f,c
  1265   0012DC  D7FE               	bra	u4567
  1266   0012DE  2FB4               	decfsz	??_main& (0+255),f,b
  1267   0012E0  D7FC               	bra	u4567
  1268   0012E2  2FB5               	decfsz	(??_main+1)& (0+255),f,b
  1269   0012E4  D7FA               	bra	u4567
  1270   0012E6  F000               	nop	
  1271   0012E8                     
  1272                           ;main_motor.c: 96:             WhiteInstructions(&motorL,&motorR);
  1273   0012E8  0EC1               	movlw	low main@motorL
  1274   0012EA  6E3B               	movwf	WhiteInstructions@mL^0,c
  1275   0012EC  0E00               	movlw	high main@motorL
  1276   0012EE  6E3C               	movwf	(WhiteInstructions@mL+1)^0,c
  1277   0012F0  0ECA               	movlw	low main@motorR
  1278   0012F2  6E3D               	movwf	WhiteInstructions@mR^0,c
  1279   0012F4  0E00               	movlw	high main@motorR
  1280   0012F6  6E3E               	movwf	(WhiteInstructions@mR+1)^0,c
  1281   0012F8  EC73  F00D         	call	_WhiteInstructions	;wreg free
  1282   0012FC                     
  1283                           ;main_motor.c: 97:             LATDbits.LATD7 = 0;
  1284   0012FC  9E7C               	bcf	124,7,c	;volatile
  1285   0012FE  EF2E  F009         	goto	l4283
  1286   001302  EF2C  F000         	goto	start
  1287   001306                     __end_of_main:
  1288                           	callstack 0
  1289                           
  1290 ;; *************** function _initDCmotorsPWM *****************
  1291 ;; Defined at:
  1292 ;;		line 5 in file "dc_motor.c"
  1293 ;; Parameters:    Size  Location     Type
  1294 ;;  PWMperiod       2    8[COMRAM] unsigned int 
  1295 ;; Auto vars:     Size  Location     Type
  1296 ;;		None
  1297 ;; Return value:  Size  Location     Type
  1298 ;;                  1    wreg      void 
  1299 ;; Registers used:
  1300 ;;		wreg, status,2
  1301 ;; Tracked objects:
  1302 ;;		On entry : 0/0
  1303 ;;		On exit  : 0/0
  1304 ;;		Unchanged: 0/0
  1305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1306 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1309 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1310 ;;Total ram usage:        2 bytes
  1311 ;; Hardware stack levels used: 1
  1312 ;; Hardware stack levels required when called: 7
  1313 ;; This function calls:
  1314 ;;		Nothing
  1315 ;; This function is called by:
  1316 ;;		_main
  1317 ;; This function uses a non-reentrant model
  1318 ;;
  1319                           
  1320                           	psect	text1
  1321   002016                     __ptext1:
  1322                           	callstack 0
  1323   002016                     _initDCmotorsPWM:
  1324                           	callstack 23
  1325   002016                     
  1326                           ;dc_motor.c: 7:     LATEbits.LATE2 = 0;
  1327   002016  947D               	bcf	125,2,c	;volatile
  1328                           
  1329                           ;dc_motor.c: 8:     TRISEbits.TRISE2 = 0;
  1330   002018  9485               	bcf	133,2,c	;volatile
  1331                           
  1332                           ;dc_motor.c: 9:     LATEbits.LATE4 = 0;
  1333   00201A  987D               	bcf	125,4,c	;volatile
  1334                           
  1335                           ;dc_motor.c: 10:     TRISEbits.TRISE4 = 0;
  1336   00201C  9885               	bcf	133,4,c	;volatile
  1337                           
  1338                           ;dc_motor.c: 11:     LATCbits.LATC7 = 0;
  1339   00201E  9E7B               	bcf	123,7,c	;volatile
  1340                           
  1341                           ;dc_motor.c: 12:     TRISCbits.TRISC7 = 0;
  1342   002020  9E83               	bcf	131,7,c	;volatile
  1343                           
  1344                           ;dc_motor.c: 13:     LATGbits.LATG6 = 0;
  1345   002022  9C7F               	bcf	127,6,c	;volatile
  1346                           
  1347                           ;dc_motor.c: 14:     TRISGbits.TRISG6 = 0;
  1348   002024  9C87               	bcf	135,6,c	;volatile
  1349   002026                     
  1350                           ;dc_motor.c: 17:     RE2PPS=0x05;
  1351   002026  0E05               	movlw	5
  1352   002028  010E               	movlb	14	; () banked
  1353   00202A  6F74               	movwf	116,b	;volatile
  1354                           
  1355                           ;dc_motor.c: 18:     RE4PPS=0x06;
  1356   00202C  0E06               	movlw	6
  1357   00202E  6F76               	movwf	118,b	;volatile
  1358                           
  1359                           ;dc_motor.c: 19:     RC7PPS=0x07;
  1360   002030  0E07               	movlw	7
  1361   002032  6F69               	movwf	105,b	;volatile
  1362                           
  1363                           ;dc_motor.c: 20:     RG6PPS=0x08;
  1364   002034  0E08               	movlw	8
  1365   002036  6F88               	movwf	136,b	;volatile
  1366                           
  1367                           ;dc_motor.c: 23:     T2CONbits.CKPS=0b100;
  1368   002038  50BD               	movf	189,w,c	;volatile
  1369   00203A  0B8F               	andlw	-113
  1370   00203C  0940               	iorlw	64
  1371   00203E  6EBD               	movwf	189,c	;volatile
  1372                           
  1373                           ;dc_motor.c: 24:     T2HLTbits.MODE=0b00000;
  1374   002040  0EE0               	movlw	-32
  1375   002042  16BE               	andwf	190,f,c	;volatile
  1376                           
  1377                           ;dc_motor.c: 25:     T2CLKCONbits.CS=0b0001;
  1378   002044  50BF               	movf	191,w,c	;volatile
  1379   002046  0BF0               	andlw	-16
  1380   002048  0901               	iorlw	1
  1381   00204A  6EBF               	movwf	191,c	;volatile
  1382   00204C                     
  1383                           ; BSR set to: 14
  1384                           ;dc_motor.c: 29:     T2PR=PWMperiod;
  1385   00204C  C009  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  1386   002050                     
  1387                           ; BSR set to: 14
  1388                           ;dc_motor.c: 30:     T2CONbits.ON=1;
  1389   002050  8EBD               	bsf	189,7,c	;volatile
  1390                           
  1391                           ;dc_motor.c: 34:     CCPR1H=0;
  1392   002052  0E00               	movlw	0
  1393   002054  6EAA               	movwf	170,c	;volatile
  1394                           
  1395                           ;dc_motor.c: 35:     CCPR2H=0;
  1396   002056  0E00               	movlw	0
  1397   002058  6EA6               	movwf	166,c	;volatile
  1398                           
  1399                           ;dc_motor.c: 36:     CCPR3H=0;
  1400   00205A  0E00               	movlw	0
  1401   00205C  010F               	movlb	15	; () banked
  1402   00205E  6F25               	movwf	37,b	;volatile
  1403                           
  1404                           ;dc_motor.c: 37:     CCPR4H=0;
  1405   002060  0E00               	movlw	0
  1406   002062  6F21               	movwf	33,b	;volatile
  1407                           
  1408                           ;dc_motor.c: 40:     CCPTMRS0bits.C1TSEL=0;
  1409   002064  0EFC               	movlw	-4
  1410   002066  16AD               	andwf	173,f,c	;volatile
  1411                           
  1412                           ;dc_motor.c: 41:     CCPTMRS0bits.C2TSEL=0;
  1413   002068  0EF3               	movlw	-13
  1414   00206A  16AD               	andwf	173,f,c	;volatile
  1415                           
  1416                           ;dc_motor.c: 42:     CCPTMRS0bits.C3TSEL=0;
  1417   00206C  0ECF               	movlw	-49
  1418   00206E  16AD               	andwf	173,f,c	;volatile
  1419                           
  1420                           ;dc_motor.c: 43:     CCPTMRS0bits.C4TSEL=0;
  1421   002070  0E3F               	movlw	-193
  1422   002072  16AD               	andwf	173,f,c	;volatile
  1423   002074                     
  1424                           ; BSR set to: 15
  1425                           ;dc_motor.c: 46:     CCP1CONbits.FMT=1;
  1426   002074  88AB               	bsf	171,4,c	;volatile
  1427                           
  1428                           ;dc_motor.c: 47:     CCP1CONbits.CCP1MODE=0b1100;
  1429   002076  50AB               	movf	171,w,c	;volatile
  1430   002078  0BF0               	andlw	-16
  1431   00207A  090C               	iorlw	12
  1432   00207C  6EAB               	movwf	171,c	;volatile
  1433   00207E                     
  1434                           ; BSR set to: 15
  1435                           ;dc_motor.c: 48:     CCP1CONbits.EN=1;
  1436   00207E  8EAB               	bsf	171,7,c	;volatile
  1437   002080                     
  1438                           ; BSR set to: 15
  1439                           ;dc_motor.c: 50:     CCP2CONbits.FMT=1;
  1440   002080  88A7               	bsf	167,4,c	;volatile
  1441                           
  1442                           ;dc_motor.c: 51:     CCP2CONbits.CCP2MODE=0b1100;
  1443   002082  50A7               	movf	167,w,c	;volatile
  1444   002084  0BF0               	andlw	-16
  1445   002086  090C               	iorlw	12
  1446   002088  6EA7               	movwf	167,c	;volatile
  1447   00208A                     
  1448                           ; BSR set to: 15
  1449                           ;dc_motor.c: 52:     CCP2CONbits.EN=1;
  1450   00208A  8EA7               	bsf	167,7,c	;volatile
  1451   00208C                     
  1452                           ; BSR set to: 15
  1453                           ;dc_motor.c: 54:     CCP3CONbits.FMT=1;
  1454   00208C  8926               	bsf	38,4,b	;volatile
  1455                           
  1456                           ;dc_motor.c: 55:     CCP3CONbits.CCP3MODE=0b1100;
  1457   00208E  5126               	movf	38,w,b	;volatile
  1458   002090  0BF0               	andlw	-16
  1459   002092  090C               	iorlw	12
  1460   002094  6F26               	movwf	38,b	;volatile
  1461   002096                     
  1462                           ; BSR set to: 15
  1463                           ;dc_motor.c: 56:     CCP3CONbits.EN=1;
  1464   002096  8F26               	bsf	38,7,b	;volatile
  1465   002098                     
  1466                           ; BSR set to: 15
  1467                           ;dc_motor.c: 58:     CCP4CONbits.FMT=1;
  1468   002098  8922               	bsf	34,4,b	;volatile
  1469                           
  1470                           ;dc_motor.c: 59:     CCP4CONbits.CCP4MODE=0b1100;
  1471   00209A  5122               	movf	34,w,b	;volatile
  1472   00209C  0BF0               	andlw	-16
  1473   00209E  090C               	iorlw	12
  1474   0020A0  6F22               	movwf	34,b	;volatile
  1475   0020A2                     
  1476                           ; BSR set to: 15
  1477                           ;dc_motor.c: 60:     CCP4CONbits.EN=1;
  1478   0020A2  8F22               	bsf	34,7,b	;volatile
  1479   0020A4                     
  1480                           ; BSR set to: 15
  1481   0020A4  0012               	return		;funcret
  1482   0020A6                     __end_of_initDCmotorsPWM:
  1483                           	callstack 0
  1484                           
  1485 ;; *************** function _detect_color *****************
  1486 ;; Defined at:
  1487 ;;		line 99 in file "color.c"
  1488 ;; Parameters:    Size  Location     Type
  1489 ;;  tempval         2    4[BANK0 ] PTR struct RGB_val
  1490 ;;		 -> main@initial_color(8), 
  1491 ;; Auto vars:     Size  Location     Type
  1492 ;;  dist_B          1   21[BANK0 ] unsigned char 
  1493 ;;  dist_G          1   20[BANK0 ] unsigned char 
  1494 ;;  dist_R          1   19[BANK0 ] unsigned char 
  1495 ;;  color           1   18[BANK0 ] unsigned char 
  1496 ;; Return value:  Size  Location     Type
  1497 ;;                  1    wreg      unsigned char 
  1498 ;; Registers used:
  1499 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1500 ;; Tracked objects:
  1501 ;;		On entry : 0/0
  1502 ;;		On exit  : 0/0
  1503 ;;		Unchanged: 0/0
  1504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1505 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1506 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1507 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1508 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1509 ;;Total ram usage:       18 bytes
  1510 ;; Hardware stack levels used: 1
  1511 ;; Hardware stack levels required when called: 8
  1512 ;; This function calls:
  1513 ;;		___fldiv
  1514 ;;		___flmul
  1515 ;;		___fltol
  1516 ;;		___xxtofl
  1517 ;; This function is called by:
  1518 ;;		_main
  1519 ;; This function uses a non-reentrant model
  1520 ;;
  1521                           
  1522                           	psect	text2
  1523   00005C                     __ptext2:
  1524                           	callstack 0
  1525   00005C                     _detect_color:
  1526                           	callstack 22
  1527   00005C                     
  1528                           ;color.c: 99: unsigned char detect_color(RGB_val *tempval);color.c: 100: {;color.c: 101:
      +                               unsigned char color = 0;
  1529   00005C  0E00               	movlw	0
  1530   00005E  0100               	movlb	0	; () banked
  1531   000060  6FB0               	movwf	detect_color@color& (0+255),b
  1532   000062                     
  1533                           ; BSR set to: 0
  1534                           ;color.c: 104:     unsigned char dist_R, dist_G, dist_B;;color.c: 105:     dist_R = ((fl
      +                          oat)(tempval->R)/(float)(tempval->R + tempval->G + tempval->B))*100;
  1535   000062  0E00               	movlw	0
  1536   000064  6E34               	movwf	___flmul@a^0,c
  1537   000066  0E00               	movlw	0
  1538   000068  6E35               	movwf	(___flmul@a+1)^0,c
  1539   00006A  0EC8               	movlw	200
  1540   00006C  6E36               	movwf	(___flmul@a+2)^0,c
  1541   00006E  0E42               	movlw	66
  1542   000070  6E37               	movwf	(___flmul@a+3)^0,c
  1543   000072  EE20 F004          	lfsr	2,4
  1544   000076  51A2               	movf	detect_color@tempval& (0+255),w,b
  1545   000078  26D9               	addwf	fsr2l,f,c
  1546   00007A  51A3               	movf	(detect_color@tempval+1)& (0+255),w,b
  1547   00007C  22DA               	addwfc	fsr2h,f,c
  1548   00007E  CFDE F0A4          	movff	postinc2,??_detect_color
  1549   000082  CFDD F0A5          	movff	postdec2,??_detect_color+1
  1550   000086  EE20 F002          	lfsr	2,2
  1551   00008A  51A2               	movf	detect_color@tempval& (0+255),w,b
  1552   00008C  26D9               	addwf	fsr2l,f,c
  1553   00008E  51A3               	movf	(detect_color@tempval+1)& (0+255),w,b
  1554   000090  22DA               	addwfc	fsr2h,f,c
  1555   000092  CFDE F0A6          	movff	postinc2,??_detect_color+2
  1556   000096  CFDD F0A7          	movff	postdec2,??_detect_color+3
  1557   00009A  C0A2  FFD9         	movff	detect_color@tempval,fsr2l
  1558   00009E  C0A3  FFDA         	movff	detect_color@tempval+1,fsr2h
  1559   0000A2  CFDE F0A8          	movff	postinc2,??_detect_color+4
  1560   0000A6  CFDD F0A9          	movff	postdec2,??_detect_color+5
  1561   0000AA  51A6               	movf	(??_detect_color+2)& (0+255),w,b
  1562   0000AC  25A8               	addwf	(??_detect_color+4)& (0+255),w,b
  1563   0000AE  6FAA               	movwf	(??_detect_color+6)& (0+255),b
  1564   0000B0  51A7               	movf	(??_detect_color+3)& (0+255),w,b
  1565   0000B2  21A9               	addwfc	(??_detect_color+5)& (0+255),w,b
  1566   0000B4  6FAB               	movwf	(??_detect_color+7)& (0+255),b
  1567   0000B6  51A4               	movf	??_detect_color& (0+255),w,b
  1568   0000B8  25AA               	addwf	(??_detect_color+6)& (0+255),w,b
  1569   0000BA  6FAC               	movwf	(??_detect_color+8)& (0+255),b
  1570   0000BC  51A5               	movf	(??_detect_color+1)& (0+255),w,b
  1571   0000BE  21AB               	addwfc	(??_detect_color+7)& (0+255),w,b
  1572   0000C0  6FAD               	movwf	(??_detect_color+9)& (0+255),b
  1573   0000C2  C0AC  F009         	movff	??_detect_color+8,___xxtofl@val
  1574   0000C6  C0AD  F00A         	movff	??_detect_color+9,___xxtofl@val+1
  1575   0000CA  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1576   0000CC  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1577   0000CE  0E00               	movlw	0
  1578   0000D0  EC83  F009         	call	___xxtofl
  1579   0000D4  C009  F01B         	movff	?___xxtofl,___fldiv@a
  1580   0000D8  C00A  F01C         	movff	?___xxtofl+1,___fldiv@a+1
  1581   0000DC  C00B  F01D         	movff	?___xxtofl+2,___fldiv@a+2
  1582   0000E0  C00C  F01E         	movff	?___xxtofl+3,___fldiv@a+3
  1583   0000E4  C0A2  FFD9         	movff	detect_color@tempval,fsr2l
  1584   0000E8  C0A3  FFDA         	movff	detect_color@tempval+1,fsr2h
  1585   0000EC  CFDE F0AE          	movff	postinc2,??_detect_color+10
  1586   0000F0  CFDD F0AF          	movff	postdec2,??_detect_color+11
  1587   0000F4  C0AE  F009         	movff	??_detect_color+10,___xxtofl@val
  1588   0000F8  C0AF  F00A         	movff	??_detect_color+11,___xxtofl@val+1
  1589   0000FC  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1590   0000FE  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1591   000100  0E00               	movlw	0
  1592   000102  EC83  F009         	call	___xxtofl
  1593   000106  C009  F017         	movff	?___xxtofl,___fldiv@b
  1594   00010A  C00A  F018         	movff	?___xxtofl+1,___fldiv@b+1
  1595   00010E  C00B  F019         	movff	?___xxtofl+2,___fldiv@b+2
  1596   000112  C00C  F01A         	movff	?___xxtofl+3,___fldiv@b+3
  1597   000116  EC53  F005         	call	___fldiv	;wreg free
  1598   00011A  C017  F030         	movff	?___fldiv,___flmul@b
  1599   00011E  C018  F031         	movff	?___fldiv+1,___flmul@b+1
  1600   000122  C019  F032         	movff	?___fldiv+2,___flmul@b+2
  1601   000126  C01A  F033         	movff	?___fldiv+3,___flmul@b+3
  1602   00012A  EC3E  F003         	call	___flmul	;wreg free
  1603   00012E  C030  F049         	movff	?___flmul,___fltol@f1
  1604   000132  C031  F04A         	movff	?___flmul+1,___fltol@f1+1
  1605   000136  C032  F04B         	movff	?___flmul+2,___fltol@f1+2
  1606   00013A  C033  F04C         	movff	?___flmul+3,___fltol@f1+3
  1607   00013E  EC13  F00B         	call	___fltol	;wreg free
  1608   000142  5049               	movf	?___fltol^0,w,c
  1609   000144  0100               	movlb	0	; () banked
  1610   000146  6FB1               	movwf	detect_color@dist_R& (0+255),b
  1611   000148                     
  1612                           ; BSR set to: 0
  1613                           ;color.c: 106:     dist_G = ((float)(tempval->G)/(float)(tempval->R + tempval->G + tempv
      +                          al->B))*100;
  1614   000148  0E00               	movlw	0
  1615   00014A  6E34               	movwf	___flmul@a^0,c
  1616   00014C  0E00               	movlw	0
  1617   00014E  6E35               	movwf	(___flmul@a+1)^0,c
  1618   000150  0EC8               	movlw	200
  1619   000152  6E36               	movwf	(___flmul@a+2)^0,c
  1620   000154  0E42               	movlw	66
  1621   000156  6E37               	movwf	(___flmul@a+3)^0,c
  1622   000158  EE20 F004          	lfsr	2,4
  1623   00015C  51A2               	movf	detect_color@tempval& (0+255),w,b
  1624   00015E  26D9               	addwf	fsr2l,f,c
  1625   000160  51A3               	movf	(detect_color@tempval+1)& (0+255),w,b
  1626   000162  22DA               	addwfc	fsr2h,f,c
  1627   000164  CFDE F0A4          	movff	postinc2,??_detect_color
  1628   000168  CFDD F0A5          	movff	postdec2,??_detect_color+1
  1629   00016C  EE20 F002          	lfsr	2,2
  1630   000170  51A2               	movf	detect_color@tempval& (0+255),w,b
  1631   000172  26D9               	addwf	fsr2l,f,c
  1632   000174  51A3               	movf	(detect_color@tempval+1)& (0+255),w,b
  1633   000176  22DA               	addwfc	fsr2h,f,c
  1634   000178  CFDE F0A6          	movff	postinc2,??_detect_color+2
  1635   00017C  CFDD F0A7          	movff	postdec2,??_detect_color+3
  1636   000180  C0A2  FFD9         	movff	detect_color@tempval,fsr2l
  1637   000184  C0A3  FFDA         	movff	detect_color@tempval+1,fsr2h
  1638   000188  CFDE F0A8          	movff	postinc2,??_detect_color+4
  1639   00018C  CFDD F0A9          	movff	postdec2,??_detect_color+5
  1640   000190  51A6               	movf	(??_detect_color+2)& (0+255),w,b
  1641   000192  25A8               	addwf	(??_detect_color+4)& (0+255),w,b
  1642   000194  6FAA               	movwf	(??_detect_color+6)& (0+255),b
  1643   000196  51A7               	movf	(??_detect_color+3)& (0+255),w,b
  1644   000198  21A9               	addwfc	(??_detect_color+5)& (0+255),w,b
  1645   00019A  6FAB               	movwf	(??_detect_color+7)& (0+255),b
  1646   00019C  51A4               	movf	??_detect_color& (0+255),w,b
  1647   00019E  25AA               	addwf	(??_detect_color+6)& (0+255),w,b
  1648   0001A0  6FAC               	movwf	(??_detect_color+8)& (0+255),b
  1649   0001A2  51A5               	movf	(??_detect_color+1)& (0+255),w,b
  1650   0001A4  21AB               	addwfc	(??_detect_color+7)& (0+255),w,b
  1651   0001A6  6FAD               	movwf	(??_detect_color+9)& (0+255),b
  1652   0001A8  C0AC  F009         	movff	??_detect_color+8,___xxtofl@val
  1653   0001AC  C0AD  F00A         	movff	??_detect_color+9,___xxtofl@val+1
  1654   0001B0  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1655   0001B2  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1656   0001B4  0E00               	movlw	0
  1657   0001B6  EC83  F009         	call	___xxtofl
  1658   0001BA  C009  F01B         	movff	?___xxtofl,___fldiv@a
  1659   0001BE  C00A  F01C         	movff	?___xxtofl+1,___fldiv@a+1
  1660   0001C2  C00B  F01D         	movff	?___xxtofl+2,___fldiv@a+2
  1661   0001C6  C00C  F01E         	movff	?___xxtofl+3,___fldiv@a+3
  1662   0001CA  0100               	movlb	0	; () banked
  1663   0001CC  EE20 F002          	lfsr	2,2
  1664   0001D0  51A2               	movf	detect_color@tempval& (0+255),w,b
  1665   0001D2  26D9               	addwf	fsr2l,f,c
  1666   0001D4  51A3               	movf	(detect_color@tempval+1)& (0+255),w,b
  1667   0001D6  22DA               	addwfc	fsr2h,f,c
  1668   0001D8  CFDE F0AE          	movff	postinc2,??_detect_color+10
  1669   0001DC  CFDD F0AF          	movff	postdec2,??_detect_color+11
  1670   0001E0  C0AE  F009         	movff	??_detect_color+10,___xxtofl@val
  1671   0001E4  C0AF  F00A         	movff	??_detect_color+11,___xxtofl@val+1
  1672   0001E8  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1673   0001EA  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1674   0001EC  0E00               	movlw	0
  1675   0001EE  EC83  F009         	call	___xxtofl
  1676   0001F2  C009  F017         	movff	?___xxtofl,___fldiv@b
  1677   0001F6  C00A  F018         	movff	?___xxtofl+1,___fldiv@b+1
  1678   0001FA  C00B  F019         	movff	?___xxtofl+2,___fldiv@b+2
  1679   0001FE  C00C  F01A         	movff	?___xxtofl+3,___fldiv@b+3
  1680   000202  EC53  F005         	call	___fldiv	;wreg free
  1681   000206  C017  F030         	movff	?___fldiv,___flmul@b
  1682   00020A  C018  F031         	movff	?___fldiv+1,___flmul@b+1
  1683   00020E  C019  F032         	movff	?___fldiv+2,___flmul@b+2
  1684   000212  C01A  F033         	movff	?___fldiv+3,___flmul@b+3
  1685   000216  EC3E  F003         	call	___flmul	;wreg free
  1686   00021A  C030  F049         	movff	?___flmul,___fltol@f1
  1687   00021E  C031  F04A         	movff	?___flmul+1,___fltol@f1+1
  1688   000222  C032  F04B         	movff	?___flmul+2,___fltol@f1+2
  1689   000226  C033  F04C         	movff	?___flmul+3,___fltol@f1+3
  1690   00022A  EC13  F00B         	call	___fltol	;wreg free
  1691   00022E  5049               	movf	?___fltol^0,w,c
  1692   000230  0100               	movlb	0	; () banked
  1693   000232  6FB2               	movwf	detect_color@dist_G& (0+255),b
  1694   000234                     
  1695                           ; BSR set to: 0
  1696                           ;color.c: 107:     dist_B = ((float)(tempval->B)/(float)(tempval->R + tempval->G + tempv
      +                          al->B))*100;
  1697   000234  0E00               	movlw	0
  1698   000236  6E34               	movwf	___flmul@a^0,c
  1699   000238  0E00               	movlw	0
  1700   00023A  6E35               	movwf	(___flmul@a+1)^0,c
  1701   00023C  0EC8               	movlw	200
  1702   00023E  6E36               	movwf	(___flmul@a+2)^0,c
  1703   000240  0E42               	movlw	66
  1704   000242  6E37               	movwf	(___flmul@a+3)^0,c
  1705   000244  EE20 F004          	lfsr	2,4
  1706   000248  51A2               	movf	detect_color@tempval& (0+255),w,b
  1707   00024A  26D9               	addwf	fsr2l,f,c
  1708   00024C  51A3               	movf	(detect_color@tempval+1)& (0+255),w,b
  1709   00024E  22DA               	addwfc	fsr2h,f,c
  1710   000250  CFDE F0A4          	movff	postinc2,??_detect_color
  1711   000254  CFDD F0A5          	movff	postdec2,??_detect_color+1
  1712   000258  EE20 F002          	lfsr	2,2
  1713   00025C  51A2               	movf	detect_color@tempval& (0+255),w,b
  1714   00025E  26D9               	addwf	fsr2l,f,c
  1715   000260  51A3               	movf	(detect_color@tempval+1)& (0+255),w,b
  1716   000262  22DA               	addwfc	fsr2h,f,c
  1717   000264  CFDE F0A6          	movff	postinc2,??_detect_color+2
  1718   000268  CFDD F0A7          	movff	postdec2,??_detect_color+3
  1719   00026C  C0A2  FFD9         	movff	detect_color@tempval,fsr2l
  1720   000270  C0A3  FFDA         	movff	detect_color@tempval+1,fsr2h
  1721   000274  CFDE F0A8          	movff	postinc2,??_detect_color+4
  1722   000278  CFDD F0A9          	movff	postdec2,??_detect_color+5
  1723   00027C  51A6               	movf	(??_detect_color+2)& (0+255),w,b
  1724   00027E  25A8               	addwf	(??_detect_color+4)& (0+255),w,b
  1725   000280  6FAA               	movwf	(??_detect_color+6)& (0+255),b
  1726   000282  51A7               	movf	(??_detect_color+3)& (0+255),w,b
  1727   000284  21A9               	addwfc	(??_detect_color+5)& (0+255),w,b
  1728   000286  6FAB               	movwf	(??_detect_color+7)& (0+255),b
  1729   000288  51A4               	movf	??_detect_color& (0+255),w,b
  1730   00028A  25AA               	addwf	(??_detect_color+6)& (0+255),w,b
  1731   00028C  6FAC               	movwf	(??_detect_color+8)& (0+255),b
  1732   00028E  51A5               	movf	(??_detect_color+1)& (0+255),w,b
  1733   000290  21AB               	addwfc	(??_detect_color+7)& (0+255),w,b
  1734   000292  6FAD               	movwf	(??_detect_color+9)& (0+255),b
  1735   000294  C0AC  F009         	movff	??_detect_color+8,___xxtofl@val
  1736   000298  C0AD  F00A         	movff	??_detect_color+9,___xxtofl@val+1
  1737   00029C  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1738   00029E  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1739   0002A0  0E00               	movlw	0
  1740   0002A2  EC83  F009         	call	___xxtofl
  1741   0002A6  C009  F01B         	movff	?___xxtofl,___fldiv@a
  1742   0002AA  C00A  F01C         	movff	?___xxtofl+1,___fldiv@a+1
  1743   0002AE  C00B  F01D         	movff	?___xxtofl+2,___fldiv@a+2
  1744   0002B2  C00C  F01E         	movff	?___xxtofl+3,___fldiv@a+3
  1745   0002B6  0100               	movlb	0	; () banked
  1746   0002B8  EE20 F004          	lfsr	2,4
  1747   0002BC  51A2               	movf	detect_color@tempval& (0+255),w,b
  1748   0002BE  26D9               	addwf	fsr2l,f,c
  1749   0002C0  51A3               	movf	(detect_color@tempval+1)& (0+255),w,b
  1750   0002C2  22DA               	addwfc	fsr2h,f,c
  1751   0002C4  CFDE F0AE          	movff	postinc2,??_detect_color+10
  1752   0002C8  CFDD F0AF          	movff	postdec2,??_detect_color+11
  1753   0002CC  C0AE  F009         	movff	??_detect_color+10,___xxtofl@val
  1754   0002D0  C0AF  F00A         	movff	??_detect_color+11,___xxtofl@val+1
  1755   0002D4  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1756   0002D6  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1757   0002D8  0E00               	movlw	0
  1758   0002DA  EC83  F009         	call	___xxtofl
  1759   0002DE  C009  F017         	movff	?___xxtofl,___fldiv@b
  1760   0002E2  C00A  F018         	movff	?___xxtofl+1,___fldiv@b+1
  1761   0002E6  C00B  F019         	movff	?___xxtofl+2,___fldiv@b+2
  1762   0002EA  C00C  F01A         	movff	?___xxtofl+3,___fldiv@b+3
  1763   0002EE  EC53  F005         	call	___fldiv	;wreg free
  1764   0002F2  C017  F030         	movff	?___fldiv,___flmul@b
  1765   0002F6  C018  F031         	movff	?___fldiv+1,___flmul@b+1
  1766   0002FA  C019  F032         	movff	?___fldiv+2,___flmul@b+2
  1767   0002FE  C01A  F033         	movff	?___fldiv+3,___flmul@b+3
  1768   000302  EC3E  F003         	call	___flmul	;wreg free
  1769   000306  C030  F049         	movff	?___flmul,___fltol@f1
  1770   00030A  C031  F04A         	movff	?___flmul+1,___fltol@f1+1
  1771   00030E  C032  F04B         	movff	?___flmul+2,___fltol@f1+2
  1772   000312  C033  F04C         	movff	?___flmul+3,___fltol@f1+3
  1773   000316  EC13  F00B         	call	___fltol	;wreg free
  1774   00031A  5049               	movf	?___fltol^0,w,c
  1775   00031C  0100               	movlb	0	; () banked
  1776   00031E  6FB3               	movwf	detect_color@dist_B& (0+255),b
  1777   000320                     
  1778                           ; BSR set to: 0
  1779                           ;color.c: 109:     if(color_flag){
  1780   000320  5055               	movf	_color_flag^0,w,c
  1781   000322  B4D8               	btfsc	status,2,c
  1782   000324  EF96  F001         	goto	u4001
  1783   000328  EF98  F001         	goto	u4000
  1784   00032C                     u4001:
  1785   00032C  EF3A  F003         	goto	l42
  1786   000330                     u4000:
  1787   000330                     
  1788                           ; BSR set to: 0
  1789                           ;color.c: 110:         if((74<=dist_R) && (dist_R<=76) && (10<=dist_G) && (dist_G<=12) &
      +                          & (13<=dist_B) && (dist_B<=15)){
  1790   000330  0E49               	movlw	73
  1791   000332  65B1               	cpfsgt	detect_color@dist_R& (0+255),b
  1792   000334  EF9E  F001         	goto	u4011
  1793   000338  EFA0  F001         	goto	u4010
  1794   00033C                     u4011:
  1795   00033C  EFCC  F001         	goto	l4115
  1796   000340                     u4010:
  1797   000340                     
  1798                           ; BSR set to: 0
  1799   000340  0E4D               	movlw	77
  1800   000342  61B1               	cpfslt	detect_color@dist_R& (0+255),b
  1801   000344  EFA6  F001         	goto	u4021
  1802   000348  EFA8  F001         	goto	u4020
  1803   00034C                     u4021:
  1804   00034C  EFCC  F001         	goto	l4115
  1805   000350                     u4020:
  1806   000350                     
  1807                           ; BSR set to: 0
  1808   000350  0E09               	movlw	9
  1809   000352  65B2               	cpfsgt	detect_color@dist_G& (0+255),b
  1810   000354  EFAE  F001         	goto	u4031
  1811   000358  EFB0  F001         	goto	u4030
  1812   00035C                     u4031:
  1813   00035C  EFCC  F001         	goto	l4115
  1814   000360                     u4030:
  1815   000360                     
  1816                           ; BSR set to: 0
  1817   000360  0E0D               	movlw	13
  1818   000362  61B2               	cpfslt	detect_color@dist_G& (0+255),b
  1819   000364  EFB6  F001         	goto	u4041
  1820   000368  EFB8  F001         	goto	u4040
  1821   00036C                     u4041:
  1822   00036C  EFCC  F001         	goto	l4115
  1823   000370                     u4040:
  1824   000370                     
  1825                           ; BSR set to: 0
  1826   000370  0E0C               	movlw	12
  1827   000372  65B3               	cpfsgt	detect_color@dist_B& (0+255),b
  1828   000374  EFBE  F001         	goto	u4051
  1829   000378  EFC0  F001         	goto	u4050
  1830   00037C                     u4051:
  1831   00037C  EFCC  F001         	goto	l4115
  1832   000380                     u4050:
  1833   000380                     
  1834                           ; BSR set to: 0
  1835   000380  0E10               	movlw	16
  1836   000382  61B3               	cpfslt	detect_color@dist_B& (0+255),b
  1837   000384  EFC6  F001         	goto	u4061
  1838   000388  EFC8  F001         	goto	u4060
  1839   00038C                     u4061:
  1840   00038C  EFCC  F001         	goto	l4115
  1841   000390                     u4060:
  1842   000390                     
  1843                           ; BSR set to: 0
  1844                           ;color.c: 111:             color = 1;
  1845   000390  0E01               	movlw	1
  1846   000392  6FB0               	movwf	detect_color@color& (0+255),b
  1847                           
  1848                           ;color.c: 112:         }
  1849   000394  EF3A  F003         	goto	l42
  1850   000398                     l4115:
  1851                           
  1852                           ; BSR set to: 0
  1853   000398  0E23               	movlw	35
  1854   00039A  65B1               	cpfsgt	detect_color@dist_R& (0+255),b
  1855   00039C  EFD2  F001         	goto	u4071
  1856   0003A0  EFD4  F001         	goto	u4070
  1857   0003A4                     u4071:
  1858   0003A4  EF00  F002         	goto	l4129
  1859   0003A8                     u4070:
  1860   0003A8                     
  1861                           ; BSR set to: 0
  1862   0003A8  0E27               	movlw	39
  1863   0003AA  61B1               	cpfslt	detect_color@dist_R& (0+255),b
  1864   0003AC  EFDA  F001         	goto	u4081
  1865   0003B0  EFDC  F001         	goto	u4080
  1866   0003B4                     u4081:
  1867   0003B4  EF00  F002         	goto	l4129
  1868   0003B8                     u4080:
  1869   0003B8                     
  1870                           ; BSR set to: 0
  1871   0003B8  0E28               	movlw	40
  1872   0003BA  65B2               	cpfsgt	detect_color@dist_G& (0+255),b
  1873   0003BC  EFE2  F001         	goto	u4091
  1874   0003C0  EFE4  F001         	goto	u4090
  1875   0003C4                     u4091:
  1876   0003C4  EF00  F002         	goto	l4129
  1877   0003C8                     u4090:
  1878   0003C8                     
  1879                           ; BSR set to: 0
  1880   0003C8  0E2C               	movlw	44
  1881   0003CA  61B2               	cpfslt	detect_color@dist_G& (0+255),b
  1882   0003CC  EFEA  F001         	goto	u4101
  1883   0003D0  EFEC  F001         	goto	u4100
  1884   0003D4                     u4101:
  1885   0003D4  EF00  F002         	goto	l4129
  1886   0003D8                     u4100:
  1887   0003D8                     
  1888                           ; BSR set to: 0
  1889   0003D8  0E13               	movlw	19
  1890   0003DA  65B3               	cpfsgt	detect_color@dist_B& (0+255),b
  1891   0003DC  EFF2  F001         	goto	u4111
  1892   0003E0  EFF4  F001         	goto	u4110
  1893   0003E4                     u4111:
  1894   0003E4  EF00  F002         	goto	l4129
  1895   0003E8                     u4110:
  1896   0003E8                     
  1897                           ; BSR set to: 0
  1898   0003E8  0E17               	movlw	23
  1899   0003EA  61B3               	cpfslt	detect_color@dist_B& (0+255),b
  1900   0003EC  EFFA  F001         	goto	u4121
  1901   0003F0  EFFC  F001         	goto	u4120
  1902   0003F4                     u4121:
  1903   0003F4  EF00  F002         	goto	l4129
  1904   0003F8                     u4120:
  1905   0003F8                     
  1906                           ; BSR set to: 0
  1907                           ;color.c: 114:             color = 2;
  1908   0003F8  0E02               	movlw	2
  1909   0003FA  6FB0               	movwf	detect_color@color& (0+255),b
  1910                           
  1911                           ;color.c: 115:         }
  1912   0003FC  EF3A  F003         	goto	l42
  1913   000400                     l4129:
  1914                           
  1915                           ; BSR set to: 0
  1916   000400  0E1C               	movlw	28
  1917   000402  65B1               	cpfsgt	detect_color@dist_R& (0+255),b
  1918   000404  EF06  F002         	goto	u4131
  1919   000408  EF08  F002         	goto	u4130
  1920   00040C                     u4131:
  1921   00040C  EF34  F002         	goto	l4143
  1922   000410                     u4130:
  1923   000410                     
  1924                           ; BSR set to: 0
  1925   000410  0E23               	movlw	35
  1926   000412  61B1               	cpfslt	detect_color@dist_R& (0+255),b
  1927   000414  EF0E  F002         	goto	u4141
  1928   000418  EF10  F002         	goto	u4140
  1929   00041C                     u4141:
  1930   00041C  EF34  F002         	goto	l4143
  1931   000420                     u4140:
  1932   000420                     
  1933                           ; BSR set to: 0
  1934   000420  0E1F               	movlw	31
  1935   000422  65B2               	cpfsgt	detect_color@dist_G& (0+255),b
  1936   000424  EF16  F002         	goto	u4151
  1937   000428  EF18  F002         	goto	u4150
  1938   00042C                     u4151:
  1939   00042C  EF34  F002         	goto	l4143
  1940   000430                     u4150:
  1941   000430                     
  1942                           ; BSR set to: 0
  1943   000430  0E27               	movlw	39
  1944   000432  61B2               	cpfslt	detect_color@dist_G& (0+255),b
  1945   000434  EF1E  F002         	goto	u4161
  1946   000438  EF20  F002         	goto	u4160
  1947   00043C                     u4161:
  1948   00043C  EF34  F002         	goto	l4143
  1949   000440                     u4160:
  1950   000440                     
  1951                           ; BSR set to: 0
  1952   000440  0E1E               	movlw	30
  1953   000442  65B3               	cpfsgt	detect_color@dist_B& (0+255),b
  1954   000444  EF26  F002         	goto	u4171
  1955   000448  EF28  F002         	goto	u4170
  1956   00044C                     u4171:
  1957   00044C  EF34  F002         	goto	l4143
  1958   000450                     u4170:
  1959   000450                     
  1960                           ; BSR set to: 0
  1961   000450  0E26               	movlw	38
  1962   000452  61B3               	cpfslt	detect_color@dist_B& (0+255),b
  1963   000454  EF2E  F002         	goto	u4181
  1964   000458  EF30  F002         	goto	u4180
  1965   00045C                     u4181:
  1966   00045C  EF34  F002         	goto	l4143
  1967   000460                     u4180:
  1968   000460                     
  1969                           ; BSR set to: 0
  1970                           ;color.c: 117:             color = 3;
  1971   000460  0E03               	movlw	3
  1972   000462  6FB0               	movwf	detect_color@color& (0+255),b
  1973                           
  1974                           ;color.c: 118:         }
  1975   000464  EF3A  F003         	goto	l42
  1976   000468                     l4143:
  1977                           
  1978                           ; BSR set to: 0
  1979   000468  0E31               	movlw	49
  1980   00046A  65B1               	cpfsgt	detect_color@dist_R& (0+255),b
  1981   00046C  EF3A  F002         	goto	u4191
  1982   000470  EF3C  F002         	goto	u4190
  1983   000474                     u4191:
  1984   000474  EF68  F002         	goto	l4157
  1985   000478                     u4190:
  1986   000478                     
  1987                           ; BSR set to: 0
  1988   000478  0E35               	movlw	53
  1989   00047A  61B1               	cpfslt	detect_color@dist_R& (0+255),b
  1990   00047C  EF42  F002         	goto	u4201
  1991   000480  EF44  F002         	goto	u4200
  1992   000484                     u4201:
  1993   000484  EF68  F002         	goto	l4157
  1994   000488                     u4200:
  1995   000488                     
  1996                           ; BSR set to: 0
  1997   000488  0E1D               	movlw	29
  1998   00048A  65B2               	cpfsgt	detect_color@dist_G& (0+255),b
  1999   00048C  EF4A  F002         	goto	u4211
  2000   000490  EF4C  F002         	goto	u4210
  2001   000494                     u4211:
  2002   000494  EF68  F002         	goto	l4157
  2003   000498                     u4210:
  2004   000498                     
  2005                           ; BSR set to: 0
  2006   000498  0E21               	movlw	33
  2007   00049A  61B2               	cpfslt	detect_color@dist_G& (0+255),b
  2008   00049C  EF52  F002         	goto	u4221
  2009   0004A0  EF54  F002         	goto	u4220
  2010   0004A4                     u4221:
  2011   0004A4  EF68  F002         	goto	l4157
  2012   0004A8                     u4220:
  2013   0004A8                     
  2014                           ; BSR set to: 0
  2015   0004A8  0E10               	movlw	16
  2016   0004AA  65B3               	cpfsgt	detect_color@dist_B& (0+255),b
  2017   0004AC  EF5A  F002         	goto	u4231
  2018   0004B0  EF5C  F002         	goto	u4230
  2019   0004B4                     u4231:
  2020   0004B4  EF68  F002         	goto	l4157
  2021   0004B8                     u4230:
  2022   0004B8                     
  2023                           ; BSR set to: 0
  2024   0004B8  0E14               	movlw	20
  2025   0004BA  61B3               	cpfslt	detect_color@dist_B& (0+255),b
  2026   0004BC  EF62  F002         	goto	u4241
  2027   0004C0  EF64  F002         	goto	u4240
  2028   0004C4                     u4241:
  2029   0004C4  EF68  F002         	goto	l4157
  2030   0004C8                     u4240:
  2031   0004C8                     
  2032                           ; BSR set to: 0
  2033                           ;color.c: 120:             color = 4;
  2034   0004C8  0E04               	movlw	4
  2035   0004CA  6FB0               	movwf	detect_color@color& (0+255),b
  2036                           
  2037                           ;color.c: 121:         }
  2038   0004CC  EF3A  F003         	goto	l42
  2039   0004D0                     l4157:
  2040                           
  2041                           ; BSR set to: 0
  2042   0004D0  0E2F               	movlw	47
  2043   0004D2  65B1               	cpfsgt	detect_color@dist_R& (0+255),b
  2044   0004D4  EF6E  F002         	goto	u4251
  2045   0004D8  EF70  F002         	goto	u4250
  2046   0004DC                     u4251:
  2047   0004DC  EF9C  F002         	goto	l4171
  2048   0004E0                     u4250:
  2049   0004E0                     
  2050                           ; BSR set to: 0
  2051   0004E0  0E33               	movlw	51
  2052   0004E2  61B1               	cpfslt	detect_color@dist_R& (0+255),b
  2053   0004E4  EF76  F002         	goto	u4261
  2054   0004E8  EF78  F002         	goto	u4260
  2055   0004EC                     u4261:
  2056   0004EC  EF9C  F002         	goto	l4171
  2057   0004F0                     u4260:
  2058   0004F0                     
  2059                           ; BSR set to: 0
  2060   0004F0  0E1B               	movlw	27
  2061   0004F2  65B2               	cpfsgt	detect_color@dist_G& (0+255),b
  2062   0004F4  EF7E  F002         	goto	u4271
  2063   0004F8  EF80  F002         	goto	u4270
  2064   0004FC                     u4271:
  2065   0004FC  EF9C  F002         	goto	l4171
  2066   000500                     u4270:
  2067   000500                     
  2068                           ; BSR set to: 0
  2069   000500  0E1F               	movlw	31
  2070   000502  61B2               	cpfslt	detect_color@dist_G& (0+255),b
  2071   000504  EF86  F002         	goto	u4281
  2072   000508  EF88  F002         	goto	u4280
  2073   00050C                     u4281:
  2074   00050C  EF9C  F002         	goto	l4171
  2075   000510                     u4280:
  2076   000510                     
  2077                           ; BSR set to: 0
  2078   000510  0E14               	movlw	20
  2079   000512  65B3               	cpfsgt	detect_color@dist_B& (0+255),b
  2080   000514  EF8E  F002         	goto	u4291
  2081   000518  EF90  F002         	goto	u4290
  2082   00051C                     u4291:
  2083   00051C  EF9C  F002         	goto	l4171
  2084   000520                     u4290:
  2085   000520                     
  2086                           ; BSR set to: 0
  2087   000520  0E18               	movlw	24
  2088   000522  61B3               	cpfslt	detect_color@dist_B& (0+255),b
  2089   000524  EF96  F002         	goto	u4301
  2090   000528  EF98  F002         	goto	u4300
  2091   00052C                     u4301:
  2092   00052C  EF9C  F002         	goto	l4171
  2093   000530                     u4300:
  2094   000530                     
  2095                           ; BSR set to: 0
  2096                           ;color.c: 123:             color = 5;
  2097   000530  0E05               	movlw	5
  2098   000532  6FB0               	movwf	detect_color@color& (0+255),b
  2099                           
  2100                           ;color.c: 124:         }
  2101   000534  EF3A  F003         	goto	l42
  2102   000538                     l4171:
  2103                           
  2104                           ; BSR set to: 0
  2105   000538  0E3A               	movlw	58
  2106   00053A  65B1               	cpfsgt	detect_color@dist_R& (0+255),b
  2107   00053C  EFA2  F002         	goto	u4311
  2108   000540  EFA4  F002         	goto	u4310
  2109   000544                     u4311:
  2110   000544  EFD0  F002         	goto	l4185
  2111   000548                     u4310:
  2112   000548                     
  2113                           ; BSR set to: 0
  2114   000548  0E3E               	movlw	62
  2115   00054A  61B1               	cpfslt	detect_color@dist_R& (0+255),b
  2116   00054C  EFAA  F002         	goto	u4321
  2117   000550  EFAC  F002         	goto	u4320
  2118   000554                     u4321:
  2119   000554  EFD0  F002         	goto	l4185
  2120   000558                     u4320:
  2121   000558                     
  2122                           ; BSR set to: 0
  2123   000558  0E15               	movlw	21
  2124   00055A  65B2               	cpfsgt	detect_color@dist_G& (0+255),b
  2125   00055C  EFB2  F002         	goto	u4331
  2126   000560  EFB4  F002         	goto	u4330
  2127   000564                     u4331:
  2128   000564  EFD0  F002         	goto	l4185
  2129   000568                     u4330:
  2130   000568                     
  2131                           ; BSR set to: 0
  2132   000568  0E19               	movlw	25
  2133   00056A  61B2               	cpfslt	detect_color@dist_G& (0+255),b
  2134   00056C  EFBA  F002         	goto	u4341
  2135   000570  EFBC  F002         	goto	u4340
  2136   000574                     u4341:
  2137   000574  EFD0  F002         	goto	l4185
  2138   000578                     u4340:
  2139   000578                     
  2140                           ; BSR set to: 0
  2141   000578  0E0F               	movlw	15
  2142   00057A  65B3               	cpfsgt	detect_color@dist_B& (0+255),b
  2143   00057C  EFC2  F002         	goto	u4351
  2144   000580  EFC4  F002         	goto	u4350
  2145   000584                     u4351:
  2146   000584  EFD0  F002         	goto	l4185
  2147   000588                     u4350:
  2148   000588                     
  2149                           ; BSR set to: 0
  2150   000588  0E13               	movlw	19
  2151   00058A  61B3               	cpfslt	detect_color@dist_B& (0+255),b
  2152   00058C  EFCA  F002         	goto	u4361
  2153   000590  EFCC  F002         	goto	u4360
  2154   000594                     u4361:
  2155   000594  EFD0  F002         	goto	l4185
  2156   000598                     u4360:
  2157   000598                     
  2158                           ; BSR set to: 0
  2159                           ;color.c: 126:             color = 6;
  2160   000598  0E06               	movlw	6
  2161   00059A  6FB0               	movwf	detect_color@color& (0+255),b
  2162                           
  2163                           ;color.c: 127:         }
  2164   00059C  EF3A  F003         	goto	l42
  2165   0005A0                     l4185:
  2166                           
  2167                           ; BSR set to: 0
  2168   0005A0  0E20               	movlw	32
  2169   0005A2  65B1               	cpfsgt	detect_color@dist_R& (0+255),b
  2170   0005A4  EFD6  F002         	goto	u4371
  2171   0005A8  EFD8  F002         	goto	u4370
  2172   0005AC                     u4371:
  2173   0005AC  EF04  F003         	goto	l4199
  2174   0005B0                     u4370:
  2175   0005B0                     
  2176                           ; BSR set to: 0
  2177   0005B0  0E24               	movlw	36
  2178   0005B2  61B1               	cpfslt	detect_color@dist_R& (0+255),b
  2179   0005B4  EFDE  F002         	goto	u4381
  2180   0005B8  EFE0  F002         	goto	u4380
  2181   0005BC                     u4381:
  2182   0005BC  EF04  F003         	goto	l4199
  2183   0005C0                     u4380:
  2184   0005C0                     
  2185                           ; BSR set to: 0
  2186   0005C0  0E25               	movlw	37
  2187   0005C2  65B2               	cpfsgt	detect_color@dist_G& (0+255),b
  2188   0005C4  EFE6  F002         	goto	u4391
  2189   0005C8  EFE8  F002         	goto	u4390
  2190   0005CC                     u4391:
  2191   0005CC  EF04  F003         	goto	l4199
  2192   0005D0                     u4390:
  2193   0005D0                     
  2194                           ; BSR set to: 0
  2195   0005D0  0E29               	movlw	41
  2196   0005D2  61B2               	cpfslt	detect_color@dist_G& (0+255),b
  2197   0005D4  EFEE  F002         	goto	u4401
  2198   0005D8  EFF0  F002         	goto	u4400
  2199   0005DC                     u4401:
  2200   0005DC  EF04  F003         	goto	l4199
  2201   0005E0                     u4400:
  2202   0005E0                     
  2203                           ; BSR set to: 0
  2204   0005E0  0E19               	movlw	25
  2205   0005E2  65B3               	cpfsgt	detect_color@dist_B& (0+255),b
  2206   0005E4  EFF6  F002         	goto	u4411
  2207   0005E8  EFF8  F002         	goto	u4410
  2208   0005EC                     u4411:
  2209   0005EC  EF04  F003         	goto	l4199
  2210   0005F0                     u4410:
  2211   0005F0                     
  2212                           ; BSR set to: 0
  2213   0005F0  0E1D               	movlw	29
  2214   0005F2  61B3               	cpfslt	detect_color@dist_B& (0+255),b
  2215   0005F4  EFFE  F002         	goto	u4421
  2216   0005F8  EF00  F003         	goto	u4420
  2217   0005FC                     u4421:
  2218   0005FC  EF04  F003         	goto	l4199
  2219   000600                     u4420:
  2220   000600                     
  2221                           ; BSR set to: 0
  2222                           ;color.c: 129:             color = 7;
  2223   000600  0E07               	movlw	7
  2224   000602  6FB0               	movwf	detect_color@color& (0+255),b
  2225                           
  2226                           ;color.c: 130:         }
  2227   000604  EF3A  F003         	goto	l42
  2228   000608                     l4199:
  2229                           
  2230                           ; BSR set to: 0
  2231   000608  0E2A               	movlw	42
  2232   00060A  65B1               	cpfsgt	detect_color@dist_R& (0+255),b
  2233   00060C  EF0A  F003         	goto	u4431
  2234   000610  EF0C  F003         	goto	u4430
  2235   000614                     u4431:
  2236   000614  EF38  F003         	goto	l4213
  2237   000618                     u4430:
  2238   000618                     
  2239                           ; BSR set to: 0
  2240   000618  0E2E               	movlw	46
  2241   00061A  61B1               	cpfslt	detect_color@dist_R& (0+255),b
  2242   00061C  EF12  F003         	goto	u4441
  2243   000620  EF14  F003         	goto	u4440
  2244   000624                     u4441:
  2245   000624  EF38  F003         	goto	l4213
  2246   000628                     u4440:
  2247   000628                     
  2248                           ; BSR set to: 0
  2249   000628  0E1F               	movlw	31
  2250   00062A  65B2               	cpfsgt	detect_color@dist_G& (0+255),b
  2251   00062C  EF1A  F003         	goto	u4451
  2252   000630  EF1C  F003         	goto	u4450
  2253   000634                     u4451:
  2254   000634  EF38  F003         	goto	l4213
  2255   000638                     u4450:
  2256   000638                     
  2257                           ; BSR set to: 0
  2258   000638  0E23               	movlw	35
  2259   00063A  61B2               	cpfslt	detect_color@dist_G& (0+255),b
  2260   00063C  EF22  F003         	goto	u4461
  2261   000640  EF24  F003         	goto	u4460
  2262   000644                     u4461:
  2263   000644  EF38  F003         	goto	l4213
  2264   000648                     u4460:
  2265   000648                     
  2266                           ; BSR set to: 0
  2267   000648  0E15               	movlw	21
  2268   00064A  65B3               	cpfsgt	detect_color@dist_B& (0+255),b
  2269   00064C  EF2A  F003         	goto	u4471
  2270   000650  EF2C  F003         	goto	u4470
  2271   000654                     u4471:
  2272   000654  EF38  F003         	goto	l4213
  2273   000658                     u4470:
  2274   000658                     
  2275                           ; BSR set to: 0
  2276   000658  0E19               	movlw	25
  2277   00065A  61B3               	cpfslt	detect_color@dist_B& (0+255),b
  2278   00065C  EF32  F003         	goto	u4481
  2279   000660  EF34  F003         	goto	u4480
  2280   000664                     u4481:
  2281   000664  EF38  F003         	goto	l4213
  2282   000668                     u4480:
  2283   000668                     
  2284                           ; BSR set to: 0
  2285                           ;color.c: 132:             color = 8;
  2286   000668  0E08               	movlw	8
  2287   00066A  6FB0               	movwf	detect_color@color& (0+255),b
  2288                           
  2289                           ;color.c: 133:         }
  2290   00066C  EF3A  F003         	goto	l42
  2291   000670                     l4213:
  2292                           
  2293                           ; BSR set to: 0
  2294                           ;color.c: 135:             color = 0;
  2295   000670  0E00               	movlw	0
  2296   000672  6FB0               	movwf	detect_color@color& (0+255),b
  2297   000674                     l42:
  2298                           
  2299                           ; BSR set to: 0
  2300                           ;color.c: 138:     color_flag = 0;
  2301   000674  0E00               	movlw	0
  2302   000676  6E55               	movwf	_color_flag^0,c
  2303                           
  2304                           ;color.c: 139:     return color;
  2305   000678  51B0               	movf	detect_color@color& (0+255),w,b
  2306   00067A                     
  2307                           ; BSR set to: 0
  2308   00067A  0012               	return		;funcret
  2309   00067C                     __end_of_detect_color:
  2310                           	callstack 0
  2311                           
  2312 ;; *************** function ___xxtofl *****************
  2313 ;; Defined at:
  2314 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  2315 ;; Parameters:    Size  Location     Type
  2316 ;;  sign            1    wreg     unsigned char 
  2317 ;;  val             4    8[COMRAM] long 
  2318 ;; Auto vars:     Size  Location     Type
  2319 ;;  sign            1   16[COMRAM] unsigned char 
  2320 ;;  arg             4   18[COMRAM] unsigned long 
  2321 ;;  exp             1   17[COMRAM] unsigned char 
  2322 ;; Return value:  Size  Location     Type
  2323 ;;                  4    8[COMRAM] unsigned char 
  2324 ;; Registers used:
  2325 ;;		wreg, status,2, status,0
  2326 ;; Tracked objects:
  2327 ;;		On entry : 0/0
  2328 ;;		On exit  : 0/0
  2329 ;;		Unchanged: 0/0
  2330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2331 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2332 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2333 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2334 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2335 ;;Total ram usage:       14 bytes
  2336 ;; Hardware stack levels used: 1
  2337 ;; Hardware stack levels required when called: 7
  2338 ;; This function calls:
  2339 ;;		Nothing
  2340 ;; This function is called by:
  2341 ;;		_detect_color
  2342 ;; This function uses a non-reentrant model
  2343 ;;
  2344                           
  2345                           	psect	text3
  2346   001306                     __ptext3:
  2347                           	callstack 0
  2348   001306                     ___xxtofl:
  2349                           	callstack 22
  2350                           
  2351                           ; BSR set to: 0
  2352                           ;incstack = 0
  2353                           ;___xxtofl@sign stored from wreg
  2354   001306  6E11               	movwf	___xxtofl@sign^0,c
  2355   001308  5011               	movf	___xxtofl@sign^0,w,c
  2356   00130A  B4D8               	btfsc	status,2,c
  2357   00130C  EF8A  F009         	goto	u3161
  2358   001310  EF8C  F009         	goto	u3160
  2359   001314                     u3161:
  2360   001314  EFAE  F009         	goto	l1355
  2361   001318                     u3160:
  2362   001318  BE0C               	btfsc	(___xxtofl@val+3)^0,7,c
  2363   00131A  EF93  F009         	goto	u3170
  2364   00131E  EF91  F009         	goto	u3171
  2365   001322                     u3171:
  2366   001322  EFAE  F009         	goto	l1355
  2367   001326                     u3170:
  2368   001326  C009  F00D         	movff	___xxtofl@val,??___xxtofl
  2369   00132A  C00A  F00E         	movff	___xxtofl@val+1,??___xxtofl+1
  2370   00132E  C00B  F00F         	movff	___xxtofl@val+2,??___xxtofl+2
  2371   001332  C00C  F010         	movff	___xxtofl@val+3,??___xxtofl+3
  2372   001336  1E0D               	comf	??___xxtofl^0,f,c
  2373   001338  1E0E               	comf	(??___xxtofl+1)^0,f,c
  2374   00133A  1E0F               	comf	(??___xxtofl+2)^0,f,c
  2375   00133C  1E10               	comf	(??___xxtofl+3)^0,f,c
  2376   00133E  2A0D               	incf	??___xxtofl^0,f,c
  2377   001340  0E00               	movlw	0
  2378   001342  220E               	addwfc	(??___xxtofl+1)^0,f,c
  2379   001344  220F               	addwfc	(??___xxtofl+2)^0,f,c
  2380   001346  2210               	addwfc	(??___xxtofl+3)^0,f,c
  2381   001348  C00D  F013         	movff	??___xxtofl,___xxtofl@arg
  2382   00134C  C00E  F014         	movff	??___xxtofl+1,___xxtofl@arg+1
  2383   001350  C00F  F015         	movff	??___xxtofl+2,___xxtofl@arg+2
  2384   001354  C010  F016         	movff	??___xxtofl+3,___xxtofl@arg+3
  2385   001358  EFB6  F009         	goto	l3621
  2386   00135C                     l1355:
  2387   00135C  C009  F013         	movff	___xxtofl@val,___xxtofl@arg
  2388   001360  C00A  F014         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2389   001364  C00B  F015         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2390   001368  C00C  F016         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2391   00136C                     l3621:
  2392   00136C  5009               	movf	___xxtofl@val^0,w,c
  2393   00136E  100A               	iorwf	(___xxtofl@val+1)^0,w,c
  2394   001370  100B               	iorwf	(___xxtofl@val+2)^0,w,c
  2395   001372  100C               	iorwf	(___xxtofl@val+3)^0,w,c
  2396   001374  A4D8               	btfss	status,2,c
  2397   001376  EFBF  F009         	goto	u3181
  2398   00137A  EFC1  F009         	goto	u3180
  2399   00137E                     u3181:
  2400   00137E  EFCB  F009         	goto	l3627
  2401   001382                     u3180:
  2402   001382  0E00               	movlw	0
  2403   001384  6E09               	movwf	?___xxtofl^0,c
  2404   001386  0E00               	movlw	0
  2405   001388  6E0A               	movwf	(?___xxtofl+1)^0,c
  2406   00138A  0E00               	movlw	0
  2407   00138C  6E0B               	movwf	(?___xxtofl+2)^0,c
  2408   00138E  0E00               	movlw	0
  2409   001390  6E0C               	movwf	(?___xxtofl+3)^0,c
  2410   001392  EF5C  F00A         	goto	l1358
  2411   001396                     l3627:
  2412   001396  0E96               	movlw	150
  2413   001398  6E12               	movwf	___xxtofl@exp^0,c
  2414   00139A  EFD5  F009         	goto	l3631
  2415   00139E                     l3629:
  2416   00139E  2A12               	incf	___xxtofl@exp^0,f,c
  2417   0013A0  90D8               	bcf	status,0,c
  2418   0013A2  3216               	rrcf	(___xxtofl@arg+3)^0,f,c
  2419   0013A4  3215               	rrcf	(___xxtofl@arg+2)^0,f,c
  2420   0013A6  3214               	rrcf	(___xxtofl@arg+1)^0,f,c
  2421   0013A8  3213               	rrcf	___xxtofl@arg^0,f,c
  2422   0013AA                     l3631:
  2423   0013AA  0E00               	movlw	0
  2424   0013AC  1413               	andwf	___xxtofl@arg^0,w,c
  2425   0013AE  6E0D               	movwf	??___xxtofl^0,c
  2426   0013B0  0E00               	movlw	0
  2427   0013B2  1414               	andwf	(___xxtofl@arg+1)^0,w,c
  2428   0013B4  6E0E               	movwf	(??___xxtofl+1)^0,c
  2429   0013B6  0E00               	movlw	0
  2430   0013B8  1415               	andwf	(___xxtofl@arg+2)^0,w,c
  2431   0013BA  6E0F               	movwf	(??___xxtofl+2)^0,c
  2432   0013BC  0EFE               	movlw	254
  2433   0013BE  1416               	andwf	(___xxtofl@arg+3)^0,w,c
  2434   0013C0  6E10               	movwf	(??___xxtofl+3)^0,c
  2435   0013C2  500D               	movf	??___xxtofl^0,w,c
  2436   0013C4  100E               	iorwf	(??___xxtofl+1)^0,w,c
  2437   0013C6  100F               	iorwf	(??___xxtofl+2)^0,w,c
  2438   0013C8  1010               	iorwf	(??___xxtofl+3)^0,w,c
  2439   0013CA  A4D8               	btfss	status,2,c
  2440   0013CC  EFEA  F009         	goto	u3191
  2441   0013D0  EFEC  F009         	goto	u3190
  2442   0013D4                     u3191:
  2443   0013D4  EFCF  F009         	goto	l3629
  2444   0013D8                     u3190:
  2445   0013D8  EFFA  F009         	goto	l1362
  2446   0013DC                     l3633:
  2447   0013DC  2A12               	incf	___xxtofl@exp^0,f,c
  2448   0013DE  0E01               	movlw	1
  2449   0013E0  2613               	addwf	___xxtofl@arg^0,f,c
  2450   0013E2  0E00               	movlw	0
  2451   0013E4  2214               	addwfc	(___xxtofl@arg+1)^0,f,c
  2452   0013E6  2215               	addwfc	(___xxtofl@arg+2)^0,f,c
  2453   0013E8  2216               	addwfc	(___xxtofl@arg+3)^0,f,c
  2454   0013EA  90D8               	bcf	status,0,c
  2455   0013EC  3216               	rrcf	(___xxtofl@arg+3)^0,f,c
  2456   0013EE  3215               	rrcf	(___xxtofl@arg+2)^0,f,c
  2457   0013F0  3214               	rrcf	(___xxtofl@arg+1)^0,f,c
  2458   0013F2  3213               	rrcf	___xxtofl@arg^0,f,c
  2459   0013F4                     l1362:
  2460   0013F4  0E00               	movlw	0
  2461   0013F6  1413               	andwf	___xxtofl@arg^0,w,c
  2462   0013F8  6E0D               	movwf	??___xxtofl^0,c
  2463   0013FA  0E00               	movlw	0
  2464   0013FC  1414               	andwf	(___xxtofl@arg+1)^0,w,c
  2465   0013FE  6E0E               	movwf	(??___xxtofl+1)^0,c
  2466   001400  0E00               	movlw	0
  2467   001402  1415               	andwf	(___xxtofl@arg+2)^0,w,c
  2468   001404  6E0F               	movwf	(??___xxtofl+2)^0,c
  2469   001406  0EFF               	movlw	255
  2470   001408  1416               	andwf	(___xxtofl@arg+3)^0,w,c
  2471   00140A  6E10               	movwf	(??___xxtofl+3)^0,c
  2472   00140C  500D               	movf	??___xxtofl^0,w,c
  2473   00140E  100E               	iorwf	(??___xxtofl+1)^0,w,c
  2474   001410  100F               	iorwf	(??___xxtofl+2)^0,w,c
  2475   001412  1010               	iorwf	(??___xxtofl+3)^0,w,c
  2476   001414  A4D8               	btfss	status,2,c
  2477   001416  EF0F  F00A         	goto	u3201
  2478   00141A  EF11  F00A         	goto	u3200
  2479   00141E                     u3201:
  2480   00141E  EFEE  F009         	goto	l3633
  2481   001422                     u3200:
  2482   001422  EF19  F00A         	goto	l3641
  2483   001426                     l3639:
  2484   001426  0612               	decf	___xxtofl@exp^0,f,c
  2485   001428  90D8               	bcf	status,0,c
  2486   00142A  3613               	rlcf	___xxtofl@arg^0,f,c
  2487   00142C  3614               	rlcf	(___xxtofl@arg+1)^0,f,c
  2488   00142E  3615               	rlcf	(___xxtofl@arg+2)^0,f,c
  2489   001430  3616               	rlcf	(___xxtofl@arg+3)^0,f,c
  2490   001432                     l3641:
  2491   001432  BE15               	btfsc	(___xxtofl@arg+2)^0,7,c
  2492   001434  EF1E  F00A         	goto	u3211
  2493   001438  EF20  F00A         	goto	u3210
  2494   00143C                     u3211:
  2495   00143C  EF28  F00A         	goto	l1369
  2496   001440                     u3210:
  2497   001440  0E02               	movlw	2
  2498   001442  6012               	cpfslt	___xxtofl@exp^0,c
  2499   001444  EF26  F00A         	goto	u3221
  2500   001448  EF28  F00A         	goto	u3220
  2501   00144C                     u3221:
  2502   00144C  EF13  F00A         	goto	l3639
  2503   001450                     u3220:
  2504   001450                     l1369:
  2505   001450  B012               	btfsc	___xxtofl@exp^0,0,c
  2506   001452  EF2D  F00A         	goto	u3231
  2507   001456  EF2F  F00A         	goto	u3230
  2508   00145A                     u3231:
  2509   00145A  EF30  F00A         	goto	l3647
  2510   00145E                     u3230:
  2511   00145E  9E15               	bcf	(___xxtofl@arg+2)^0,7,c
  2512   001460                     l3647:
  2513   001460  90D8               	bcf	status,0,c
  2514   001462  3212               	rrcf	___xxtofl@exp^0,f,c
  2515   001464  C012  F00D         	movff	___xxtofl@exp,??___xxtofl
  2516   001468  6A0E               	clrf	(??___xxtofl+1)^0,c
  2517   00146A  6A0F               	clrf	(??___xxtofl+2)^0,c
  2518   00146C  6A10               	clrf	(??___xxtofl+3)^0,c
  2519   00146E  C00D  F010         	movff	??___xxtofl,??___xxtofl+3
  2520   001472  6A0F               	clrf	(??___xxtofl+2)^0,c
  2521   001474  6A0E               	clrf	(??___xxtofl+1)^0,c
  2522   001476  6A0D               	clrf	??___xxtofl^0,c
  2523   001478  500D               	movf	??___xxtofl^0,w,c
  2524   00147A  1213               	iorwf	___xxtofl@arg^0,f,c
  2525   00147C  500E               	movf	(??___xxtofl+1)^0,w,c
  2526   00147E  1214               	iorwf	(___xxtofl@arg+1)^0,f,c
  2527   001480  500F               	movf	(??___xxtofl+2)^0,w,c
  2528   001482  1215               	iorwf	(___xxtofl@arg+2)^0,f,c
  2529   001484  5010               	movf	(??___xxtofl+3)^0,w,c
  2530   001486  1216               	iorwf	(___xxtofl@arg+3)^0,f,c
  2531   001488  5011               	movf	___xxtofl@sign^0,w,c
  2532   00148A  B4D8               	btfsc	status,2,c
  2533   00148C  EF4A  F00A         	goto	u3241
  2534   001490  EF4C  F00A         	goto	u3240
  2535   001494                     u3241:
  2536   001494  EF54  F00A         	goto	l3657
  2537   001498                     u3240:
  2538   001498  BE0C               	btfsc	(___xxtofl@val+3)^0,7,c
  2539   00149A  EF53  F00A         	goto	u3250
  2540   00149E  EF51  F00A         	goto	u3251
  2541   0014A2                     u3251:
  2542   0014A2  EF54  F00A         	goto	l3657
  2543   0014A6                     u3250:
  2544   0014A6  8E16               	bsf	(___xxtofl@arg+3)^0,7,c
  2545   0014A8                     l3657:
  2546   0014A8  C013  F009         	movff	___xxtofl@arg,?___xxtofl
  2547   0014AC  C014  F00A         	movff	___xxtofl@arg+1,?___xxtofl+1
  2548   0014B0  C015  F00B         	movff	___xxtofl@arg+2,?___xxtofl+2
  2549   0014B4  C016  F00C         	movff	___xxtofl@arg+3,?___xxtofl+3
  2550   0014B8                     l1358:
  2551   0014B8  0012               	return		;funcret
  2552   0014BA                     __end_of___xxtofl:
  2553                           	callstack 0
  2554                           
  2555 ;; *************** function ___fltol *****************
  2556 ;; Defined at:
  2557 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  2558 ;; Parameters:    Size  Location     Type
  2559 ;;  f1              4   72[COMRAM] unsigned char 
  2560 ;; Auto vars:     Size  Location     Type
  2561 ;;  exp1            1   77[COMRAM] unsigned char 
  2562 ;;  sign1           1   76[COMRAM] unsigned char 
  2563 ;; Return value:  Size  Location     Type
  2564 ;;                  4   72[COMRAM] long 
  2565 ;; Registers used:
  2566 ;;		wreg, status,2, status,0
  2567 ;; Tracked objects:
  2568 ;;		On entry : 0/0
  2569 ;;		On exit  : 0/0
  2570 ;;		Unchanged: 0/0
  2571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2572 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2573 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2574 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2575 ;;      Totals:         6       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2576 ;;Total ram usage:       10 bytes
  2577 ;; Hardware stack levels used: 1
  2578 ;; Hardware stack levels required when called: 7
  2579 ;; This function calls:
  2580 ;;		Nothing
  2581 ;; This function is called by:
  2582 ;;		_detect_color
  2583 ;; This function uses a non-reentrant model
  2584 ;;
  2585                           
  2586                           	psect	text4
  2587   001626                     __ptext4:
  2588                           	callstack 0
  2589   001626                     ___fltol:
  2590                           	callstack 22
  2591   001626  344B               	rlcf	(___fltol@f1+2)^0,w,c
  2592   001628  344C               	rlcf	(___fltol@f1+3)^0,w,c
  2593   00162A  6E4E               	movwf	___fltol@exp1^0,c
  2594   00162C  504E               	movf	___fltol@exp1^0,w,c
  2595   00162E  A4D8               	btfss	status,2,c
  2596   001630  EF1C  F00B         	goto	u3931
  2597   001634  EF1E  F00B         	goto	u3930
  2598   001638                     u3931:
  2599   001638  EF28  F00B         	goto	l4053
  2600   00163C                     u3930:
  2601   00163C                     l4049:
  2602   00163C  0E00               	movlw	0
  2603   00163E  6E49               	movwf	?___fltol^0,c
  2604   001640  0E00               	movlw	0
  2605   001642  6E4A               	movwf	(?___fltol+1)^0,c
  2606   001644  0E00               	movlw	0
  2607   001646  6E4B               	movwf	(?___fltol+2)^0,c
  2608   001648  0E00               	movlw	0
  2609   00164A  6E4C               	movwf	(?___fltol+3)^0,c
  2610   00164C  EF96  F00B         	goto	l997
  2611   001650                     l4053:
  2612   001650  C049  F09E         	movff	___fltol@f1,??___fltol
  2613   001654  C04A  F09F         	movff	___fltol@f1+1,??___fltol+1
  2614   001658  C04B  F0A0         	movff	___fltol@f1+2,??___fltol+2
  2615   00165C  C04C  F0A1         	movff	___fltol@f1+3,??___fltol+3
  2616   001660  0E20               	movlw	32
  2617   001662  EF39  F00B         	goto	u3940
  2618   001666                     u3945:
  2619   001666  0100               	movlb	0	; () banked
  2620   001668  90D8               	bcf	status,0,c
  2621   00166A  33A1               	rrcf	(??___fltol+3)& (0+255),f,b
  2622   00166C  33A0               	rrcf	(??___fltol+2)& (0+255),f,b
  2623   00166E  339F               	rrcf	(??___fltol+1)& (0+255),f,b
  2624   001670  339E               	rrcf	??___fltol& (0+255),f,b
  2625   001672                     u3940:
  2626   001672  2EE8               	decfsz	wreg,f,c
  2627   001674  EF33  F00B         	goto	u3945
  2628   001678  519E               	movf	??___fltol& (0+255),w,b
  2629   00167A  6E4D               	movwf	___fltol@sign1^0,c
  2630   00167C                     
  2631                           ; BSR set to: 0
  2632   00167C  8E4B               	bsf	(___fltol@f1+2)^0,7,c
  2633   00167E                     
  2634                           ; BSR set to: 0
  2635   00167E  0EFF               	movlw	255
  2636   001680  1649               	andwf	___fltol@f1^0,f,c
  2637   001682  0EFF               	movlw	255
  2638   001684  164A               	andwf	(___fltol@f1+1)^0,f,c
  2639   001686  0EFF               	movlw	255
  2640   001688  164B               	andwf	(___fltol@f1+2)^0,f,c
  2641   00168A  0E00               	movlw	0
  2642   00168C  164C               	andwf	(___fltol@f1+3)^0,f,c
  2643   00168E                     
  2644                           ; BSR set to: 0
  2645   00168E  0E96               	movlw	150
  2646   001690  5E4E               	subwf	___fltol@exp1^0,f,c
  2647   001692                     
  2648                           ; BSR set to: 0
  2649   001692  BE4E               	btfsc	___fltol@exp1^0,7,c
  2650   001694  EF50  F00B         	goto	u3950
  2651   001698  EF4E  F00B         	goto	u3951
  2652   00169C                     u3951:
  2653   00169C  EF66  F00B         	goto	l4073
  2654   0016A0                     u3950:
  2655   0016A0                     
  2656                           ; BSR set to: 0
  2657   0016A0  504E               	movf	___fltol@exp1^0,w,c
  2658   0016A2  0A80               	xorlw	128
  2659   0016A4  0F97               	addlw	151
  2660   0016A6  B0D8               	btfsc	status,0,c
  2661   0016A8  EF58  F00B         	goto	u3961
  2662   0016AC  EF5A  F00B         	goto	u3960
  2663   0016B0                     u3961:
  2664   0016B0  EF5C  F00B         	goto	l4069
  2665   0016B4                     u3960:
  2666   0016B4  EF1E  F00B         	goto	l4049
  2667   0016B8                     l4069:
  2668   0016B8  90D8               	bcf	status,0,c
  2669   0016BA  324C               	rrcf	(___fltol@f1+3)^0,f,c
  2670   0016BC  324B               	rrcf	(___fltol@f1+2)^0,f,c
  2671   0016BE  324A               	rrcf	(___fltol@f1+1)^0,f,c
  2672   0016C0  3249               	rrcf	___fltol@f1^0,f,c
  2673   0016C2  3E4E               	incfsz	___fltol@exp1^0,f,c
  2674   0016C4  EF5C  F00B         	goto	l4069
  2675   0016C8  EF7E  F00B         	goto	l4083
  2676   0016CC                     l4073:
  2677                           
  2678                           ; BSR set to: 0
  2679   0016CC  0E1F               	movlw	31
  2680   0016CE  644E               	cpfsgt	___fltol@exp1^0,c
  2681   0016D0  EF6C  F00B         	goto	u3971
  2682   0016D4  EF6E  F00B         	goto	u3970
  2683   0016D8                     u3971:
  2684   0016D8  EF76  F00B         	goto	l4081
  2685   0016DC                     u3970:
  2686   0016DC  EF1E  F00B         	goto	l4049
  2687   0016E0                     l4079:
  2688   0016E0  90D8               	bcf	status,0,c
  2689   0016E2  3649               	rlcf	___fltol@f1^0,f,c
  2690   0016E4  364A               	rlcf	(___fltol@f1+1)^0,f,c
  2691   0016E6  364B               	rlcf	(___fltol@f1+2)^0,f,c
  2692   0016E8  364C               	rlcf	(___fltol@f1+3)^0,f,c
  2693   0016EA  064E               	decf	___fltol@exp1^0,f,c
  2694   0016EC                     l4081:
  2695   0016EC  504E               	movf	___fltol@exp1^0,w,c
  2696   0016EE  A4D8               	btfss	status,2,c
  2697   0016F0  EF7C  F00B         	goto	u3981
  2698   0016F4  EF7E  F00B         	goto	u3980
  2699   0016F8                     u3981:
  2700   0016F8  EF70  F00B         	goto	l4079
  2701   0016FC                     u3980:
  2702   0016FC                     l4083:
  2703   0016FC  504D               	movf	___fltol@sign1^0,w,c
  2704   0016FE  B4D8               	btfsc	status,2,c
  2705   001700  EF84  F00B         	goto	u3991
  2706   001704  EF86  F00B         	goto	u3990
  2707   001708                     u3991:
  2708   001708  EF8E  F00B         	goto	l4087
  2709   00170C                     u3990:
  2710   00170C  1E4C               	comf	(___fltol@f1+3)^0,f,c
  2711   00170E  1E4B               	comf	(___fltol@f1+2)^0,f,c
  2712   001710  1E4A               	comf	(___fltol@f1+1)^0,f,c
  2713   001712  6C49               	negf	___fltol@f1^0,c
  2714   001714  0E00               	movlw	0
  2715   001716  224A               	addwfc	(___fltol@f1+1)^0,f,c
  2716   001718  224B               	addwfc	(___fltol@f1+2)^0,f,c
  2717   00171A  224C               	addwfc	(___fltol@f1+3)^0,f,c
  2718   00171C                     l4087:
  2719   00171C  C049  F049         	movff	___fltol@f1,?___fltol
  2720   001720  C04A  F04A         	movff	___fltol@f1+1,?___fltol+1
  2721   001724  C04B  F04B         	movff	___fltol@f1+2,?___fltol+2
  2722   001728  C04C  F04C         	movff	___fltol@f1+3,?___fltol+3
  2723   00172C                     l997:
  2724   00172C  0012               	return		;funcret
  2725   00172E                     __end_of___fltol:
  2726                           	callstack 0
  2727                           
  2728 ;; *************** function ___flmul *****************
  2729 ;; Defined at:
  2730 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  2731 ;; Parameters:    Size  Location     Type
  2732 ;;  b               4   47[COMRAM] long 
  2733 ;;  a               4   51[COMRAM] long 
  2734 ;; Auto vars:     Size  Location     Type
  2735 ;;  prod            4   66[COMRAM] struct .
  2736 ;;  grs             4   60[COMRAM] unsigned long 
  2737 ;;  temp            2   70[COMRAM] struct .
  2738 ;;  bexp            1   65[COMRAM] unsigned char 
  2739 ;;  aexp            1   64[COMRAM] unsigned char 
  2740 ;;  sign            1   59[COMRAM] unsigned char 
  2741 ;; Return value:  Size  Location     Type
  2742 ;;                  4   47[COMRAM] unsigned char 
  2743 ;; Registers used:
  2744 ;;		wreg, status,2, status,0, prodl, prodh
  2745 ;; Tracked objects:
  2746 ;;		On entry : 0/0
  2747 ;;		On exit  : 0/0
  2748 ;;		Unchanged: 0/0
  2749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2750 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2751 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2752 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2753 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2754 ;;Total ram usage:       25 bytes
  2755 ;; Hardware stack levels used: 1
  2756 ;; Hardware stack levels required when called: 7
  2757 ;; This function calls:
  2758 ;;		Nothing
  2759 ;; This function is called by:
  2760 ;;		_detect_color
  2761 ;; This function uses a non-reentrant model
  2762 ;;
  2763                           
  2764                           	psect	text5
  2765   00067C                     __ptext5:
  2766                           	callstack 0
  2767   00067C                     ___flmul:
  2768                           	callstack 22
  2769   00067C  5033               	movf	(___flmul@b+3)^0,w,c
  2770   00067E  0B80               	andlw	128
  2771   000680  6E3C               	movwf	___flmul@sign^0,c
  2772   000682  5033               	movf	(___flmul@b+3)^0,w,c
  2773   000684  2433               	addwf	(___flmul@b+3)^0,w,c
  2774   000686  6E42               	movwf	___flmul@bexp^0,c
  2775   000688  AE32               	btfss	(___flmul@b+2)^0,7,c
  2776   00068A  EF49  F003         	goto	u2901
  2777   00068E  EF4B  F003         	goto	u2900
  2778   000692                     u2901:
  2779   000692  EF4C  F003         	goto	l3447
  2780   000696                     u2900:
  2781   000696  8042               	bsf	___flmul@bexp^0,0,c
  2782   000698                     l3447:
  2783   000698  5042               	movf	___flmul@bexp^0,w,c
  2784   00069A  B4D8               	btfsc	status,2,c
  2785   00069C  EF52  F003         	goto	u2911
  2786   0006A0  EF54  F003         	goto	u2910
  2787   0006A4                     u2911:
  2788   0006A4  EF67  F003         	goto	l3455
  2789   0006A8                     u2910:
  2790   0006A8  2842               	incf	___flmul@bexp^0,w,c
  2791   0006AA  A4D8               	btfss	status,2,c
  2792   0006AC  EF5A  F003         	goto	u2921
  2793   0006B0  EF5C  F003         	goto	u2920
  2794   0006B4                     u2921:
  2795   0006B4  EF64  F003         	goto	l3453
  2796   0006B8                     u2920:
  2797   0006B8  0E00               	movlw	0
  2798   0006BA  6E30               	movwf	___flmul@b^0,c
  2799   0006BC  0E00               	movlw	0
  2800   0006BE  6E31               	movwf	(___flmul@b+1)^0,c
  2801   0006C0  0E00               	movlw	0
  2802   0006C2  6E32               	movwf	(___flmul@b+2)^0,c
  2803   0006C4  0E00               	movlw	0
  2804   0006C6  6E33               	movwf	(___flmul@b+3)^0,c
  2805   0006C8                     l3453:
  2806   0006C8  8E32               	bsf	(___flmul@b+2)^0,7,c
  2807   0006CA  EF6F  F003         	goto	l3457
  2808   0006CE                     l3455:
  2809   0006CE  0E00               	movlw	0
  2810   0006D0  6E30               	movwf	___flmul@b^0,c
  2811   0006D2  0E00               	movlw	0
  2812   0006D4  6E31               	movwf	(___flmul@b+1)^0,c
  2813   0006D6  0E00               	movlw	0
  2814   0006D8  6E32               	movwf	(___flmul@b+2)^0,c
  2815   0006DA  0E00               	movlw	0
  2816   0006DC  6E33               	movwf	(___flmul@b+3)^0,c
  2817   0006DE                     l3457:
  2818   0006DE  5037               	movf	(___flmul@a+3)^0,w,c
  2819   0006E0  0B80               	andlw	128
  2820   0006E2  1A3C               	xorwf	___flmul@sign^0,f,c
  2821   0006E4  5037               	movf	(___flmul@a+3)^0,w,c
  2822   0006E6  2437               	addwf	(___flmul@a+3)^0,w,c
  2823   0006E8  6E41               	movwf	___flmul@aexp^0,c
  2824   0006EA  AE36               	btfss	(___flmul@a+2)^0,7,c
  2825   0006EC  EF7A  F003         	goto	u2931
  2826   0006F0  EF7C  F003         	goto	u2930
  2827   0006F4                     u2931:
  2828   0006F4  EF7D  F003         	goto	l3465
  2829   0006F8                     u2930:
  2830   0006F8  8041               	bsf	___flmul@aexp^0,0,c
  2831   0006FA                     l3465:
  2832   0006FA  5041               	movf	___flmul@aexp^0,w,c
  2833   0006FC  B4D8               	btfsc	status,2,c
  2834   0006FE  EF83  F003         	goto	u2941
  2835   000702  EF85  F003         	goto	u2940
  2836   000706                     u2941:
  2837   000706  EF98  F003         	goto	l3473
  2838   00070A                     u2940:
  2839   00070A  2841               	incf	___flmul@aexp^0,w,c
  2840   00070C  A4D8               	btfss	status,2,c
  2841   00070E  EF8B  F003         	goto	u2951
  2842   000712  EF8D  F003         	goto	u2950
  2843   000716                     u2951:
  2844   000716  EF95  F003         	goto	l3471
  2845   00071A                     u2950:
  2846   00071A  0E00               	movlw	0
  2847   00071C  6E34               	movwf	___flmul@a^0,c
  2848   00071E  0E00               	movlw	0
  2849   000720  6E35               	movwf	(___flmul@a+1)^0,c
  2850   000722  0E00               	movlw	0
  2851   000724  6E36               	movwf	(___flmul@a+2)^0,c
  2852   000726  0E00               	movlw	0
  2853   000728  6E37               	movwf	(___flmul@a+3)^0,c
  2854   00072A                     l3471:
  2855   00072A  8E36               	bsf	(___flmul@a+2)^0,7,c
  2856   00072C  EFA0  F003         	goto	l1314
  2857   000730                     l3473:
  2858   000730  0E00               	movlw	0
  2859   000732  6E34               	movwf	___flmul@a^0,c
  2860   000734  0E00               	movlw	0
  2861   000736  6E35               	movwf	(___flmul@a+1)^0,c
  2862   000738  0E00               	movlw	0
  2863   00073A  6E36               	movwf	(___flmul@a+2)^0,c
  2864   00073C  0E00               	movlw	0
  2865   00073E  6E37               	movwf	(___flmul@a+3)^0,c
  2866   000740                     l1314:
  2867   000740  5041               	movf	___flmul@aexp^0,w,c
  2868   000742  B4D8               	btfsc	status,2,c
  2869   000744  EFA6  F003         	goto	u2961
  2870   000748  EFA8  F003         	goto	u2960
  2871   00074C                     u2961:
  2872   00074C  EFB0  F003         	goto	l3477
  2873   000750                     u2960:
  2874   000750  5042               	movf	___flmul@bexp^0,w,c
  2875   000752  A4D8               	btfss	status,2,c
  2876   000754  EFAE  F003         	goto	u2971
  2877   000758  EFB0  F003         	goto	u2970
  2878   00075C                     u2971:
  2879   00075C  EFBA  F003         	goto	l3481
  2880   000760                     u2970:
  2881   000760                     l3477:
  2882   000760  0E00               	movlw	0
  2883   000762  6E30               	movwf	?___flmul^0,c
  2884   000764  0E00               	movlw	0
  2885   000766  6E31               	movwf	(?___flmul+1)^0,c
  2886   000768  0E00               	movlw	0
  2887   00076A  6E32               	movwf	(?___flmul+2)^0,c
  2888   00076C  0E00               	movlw	0
  2889   00076E  6E33               	movwf	(?___flmul+3)^0,c
  2890   000770  EF52  F005         	goto	l1318
  2891   000774                     l3481:
  2892   000774  5036               	movf	(___flmul@a+2)^0,w,c
  2893   000776  0230               	mulwf	___flmul@b^0,c
  2894   000778  CFF3 F047          	movff	prodl,___flmul@temp
  2895   00077C  CFF4 F048          	movff	prodh,___flmul@temp+1
  2896   000780  5047               	movf	___flmul@temp^0,w,c
  2897   000782  6E3D               	movwf	___flmul@grs^0,c
  2898   000784  6A3E               	clrf	(___flmul@grs+1)^0,c
  2899   000786  6A3F               	clrf	(___flmul@grs+2)^0,c
  2900   000788  6A40               	clrf	(___flmul@grs+3)^0,c
  2901   00078A  5048               	movf	(___flmul@temp+1)^0,w,c
  2902   00078C  6E43               	movwf	___flmul@prod^0,c
  2903   00078E  6A44               	clrf	(___flmul@prod+1)^0,c
  2904   000790  6A45               	clrf	(___flmul@prod+2)^0,c
  2905   000792  6A46               	clrf	(___flmul@prod+3)^0,c
  2906   000794  5035               	movf	(___flmul@a+1)^0,w,c
  2907   000796  0231               	mulwf	(___flmul@b+1)^0,c
  2908   000798  CFF3 F047          	movff	prodl,___flmul@temp
  2909   00079C  CFF4 F048          	movff	prodh,___flmul@temp+1
  2910   0007A0  5047               	movf	___flmul@temp^0,w,c
  2911   0007A2  263D               	addwf	___flmul@grs^0,f,c
  2912   0007A4  0E00               	movlw	0
  2913   0007A6  223E               	addwfc	(___flmul@grs+1)^0,f,c
  2914   0007A8  223F               	addwfc	(___flmul@grs+2)^0,f,c
  2915   0007AA  2240               	addwfc	(___flmul@grs+3)^0,f,c
  2916   0007AC  5048               	movf	(___flmul@temp+1)^0,w,c
  2917   0007AE  2643               	addwf	___flmul@prod^0,f,c
  2918   0007B0  0E00               	movlw	0
  2919   0007B2  2244               	addwfc	(___flmul@prod+1)^0,f,c
  2920   0007B4  2245               	addwfc	(___flmul@prod+2)^0,f,c
  2921   0007B6  2246               	addwfc	(___flmul@prod+3)^0,f,c
  2922   0007B8  5034               	movf	___flmul@a^0,w,c
  2923   0007BA  0232               	mulwf	(___flmul@b+2)^0,c
  2924   0007BC  CFF3 F047          	movff	prodl,___flmul@temp
  2925   0007C0  CFF4 F048          	movff	prodh,___flmul@temp+1
  2926   0007C4  5047               	movf	___flmul@temp^0,w,c
  2927   0007C6  263D               	addwf	___flmul@grs^0,f,c
  2928   0007C8  0E00               	movlw	0
  2929   0007CA  223E               	addwfc	(___flmul@grs+1)^0,f,c
  2930   0007CC  223F               	addwfc	(___flmul@grs+2)^0,f,c
  2931   0007CE  2240               	addwfc	(___flmul@grs+3)^0,f,c
  2932   0007D0  5048               	movf	(___flmul@temp+1)^0,w,c
  2933   0007D2  2643               	addwf	___flmul@prod^0,f,c
  2934   0007D4  0E00               	movlw	0
  2935   0007D6  2244               	addwfc	(___flmul@prod+1)^0,f,c
  2936   0007D8  2245               	addwfc	(___flmul@prod+2)^0,f,c
  2937   0007DA  2246               	addwfc	(___flmul@prod+3)^0,f,c
  2938   0007DC  C03F  F040         	movff	___flmul@grs+2,___flmul@grs+3
  2939   0007E0  C03E  F03F         	movff	___flmul@grs+1,___flmul@grs+2
  2940   0007E4  C03D  F03E         	movff	___flmul@grs,___flmul@grs+1
  2941   0007E8  6A3D               	clrf	___flmul@grs^0,c
  2942   0007EA  5034               	movf	___flmul@a^0,w,c
  2943   0007EC  0231               	mulwf	(___flmul@b+1)^0,c
  2944   0007EE  CFF3 F047          	movff	prodl,___flmul@temp
  2945   0007F2  CFF4 F048          	movff	prodh,___flmul@temp+1
  2946   0007F6  5047               	movf	___flmul@temp^0,w,c
  2947   0007F8  263D               	addwf	___flmul@grs^0,f,c
  2948   0007FA  5048               	movf	(___flmul@temp+1)^0,w,c
  2949   0007FC  223E               	addwfc	(___flmul@grs+1)^0,f,c
  2950   0007FE  0E00               	movlw	0
  2951   000800  223F               	addwfc	(___flmul@grs+2)^0,f,c
  2952   000802  0E00               	movlw	0
  2953   000804  2240               	addwfc	(___flmul@grs+3)^0,f,c
  2954   000806  5035               	movf	(___flmul@a+1)^0,w,c
  2955   000808  0230               	mulwf	___flmul@b^0,c
  2956   00080A  CFF3 F047          	movff	prodl,___flmul@temp
  2957   00080E  CFF4 F048          	movff	prodh,___flmul@temp+1
  2958   000812  5047               	movf	___flmul@temp^0,w,c
  2959   000814  263D               	addwf	___flmul@grs^0,f,c
  2960   000816  5048               	movf	(___flmul@temp+1)^0,w,c
  2961   000818  223E               	addwfc	(___flmul@grs+1)^0,f,c
  2962   00081A  0E00               	movlw	0
  2963   00081C  223F               	addwfc	(___flmul@grs+2)^0,f,c
  2964   00081E  0E00               	movlw	0
  2965   000820  2240               	addwfc	(___flmul@grs+3)^0,f,c
  2966   000822  C03F  F040         	movff	___flmul@grs+2,___flmul@grs+3
  2967   000826  C03E  F03F         	movff	___flmul@grs+1,___flmul@grs+2
  2968   00082A  C03D  F03E         	movff	___flmul@grs,___flmul@grs+1
  2969   00082E  6A3D               	clrf	___flmul@grs^0,c
  2970   000830  5034               	movf	___flmul@a^0,w,c
  2971   000832  0230               	mulwf	___flmul@b^0,c
  2972   000834  CFF3 F047          	movff	prodl,___flmul@temp
  2973   000838  CFF4 F048          	movff	prodh,___flmul@temp+1
  2974   00083C  5047               	movf	___flmul@temp^0,w,c
  2975   00083E  263D               	addwf	___flmul@grs^0,f,c
  2976   000840  5048               	movf	(___flmul@temp+1)^0,w,c
  2977   000842  223E               	addwfc	(___flmul@grs+1)^0,f,c
  2978   000844  0E00               	movlw	0
  2979   000846  223F               	addwfc	(___flmul@grs+2)^0,f,c
  2980   000848  0E00               	movlw	0
  2981   00084A  2240               	addwfc	(___flmul@grs+3)^0,f,c
  2982   00084C  5036               	movf	(___flmul@a+2)^0,w,c
  2983   00084E  0231               	mulwf	(___flmul@b+1)^0,c
  2984   000850  CFF3 F047          	movff	prodl,___flmul@temp
  2985   000854  CFF4 F048          	movff	prodh,___flmul@temp+1
  2986   000858  5047               	movf	___flmul@temp^0,w,c
  2987   00085A  2643               	addwf	___flmul@prod^0,f,c
  2988   00085C  5048               	movf	(___flmul@temp+1)^0,w,c
  2989   00085E  2244               	addwfc	(___flmul@prod+1)^0,f,c
  2990   000860  0E00               	movlw	0
  2991   000862  2245               	addwfc	(___flmul@prod+2)^0,f,c
  2992   000864  0E00               	movlw	0
  2993   000866  2246               	addwfc	(___flmul@prod+3)^0,f,c
  2994   000868  5035               	movf	(___flmul@a+1)^0,w,c
  2995   00086A  0232               	mulwf	(___flmul@b+2)^0,c
  2996   00086C  CFF3 F047          	movff	prodl,___flmul@temp
  2997   000870  CFF4 F048          	movff	prodh,___flmul@temp+1
  2998   000874  5047               	movf	___flmul@temp^0,w,c
  2999   000876  2643               	addwf	___flmul@prod^0,f,c
  3000   000878  5048               	movf	(___flmul@temp+1)^0,w,c
  3001   00087A  2244               	addwfc	(___flmul@prod+1)^0,f,c
  3002   00087C  0E00               	movlw	0
  3003   00087E  2245               	addwfc	(___flmul@prod+2)^0,f,c
  3004   000880  0E00               	movlw	0
  3005   000882  2246               	addwfc	(___flmul@prod+3)^0,f,c
  3006   000884  5036               	movf	(___flmul@a+2)^0,w,c
  3007   000886  0232               	mulwf	(___flmul@b+2)^0,c
  3008   000888  CFF3 F047          	movff	prodl,___flmul@temp
  3009   00088C  CFF4 F048          	movff	prodh,___flmul@temp+1
  3010   000890  5047               	movf	___flmul@temp^0,w,c
  3011   000892  6E38               	movwf	??___flmul^0,c
  3012   000894  5048               	movf	(___flmul@temp+1)^0,w,c
  3013   000896  6E39               	movwf	(??___flmul+1)^0,c
  3014   000898  6A3A               	clrf	(??___flmul+2)^0,c
  3015   00089A  6A3B               	clrf	(??___flmul+3)^0,c
  3016   00089C  C03A  F03B         	movff	??___flmul+2,??___flmul+3
  3017   0008A0  C039  F03A         	movff	??___flmul+1,??___flmul+2
  3018   0008A4  C038  F039         	movff	??___flmul,??___flmul+1
  3019   0008A8  6A38               	clrf	??___flmul^0,c
  3020   0008AA  5038               	movf	??___flmul^0,w,c
  3021   0008AC  2643               	addwf	___flmul@prod^0,f,c
  3022   0008AE  5039               	movf	(??___flmul+1)^0,w,c
  3023   0008B0  2244               	addwfc	(___flmul@prod+1)^0,f,c
  3024   0008B2  503A               	movf	(??___flmul+2)^0,w,c
  3025   0008B4  2245               	addwfc	(___flmul@prod+2)^0,f,c
  3026   0008B6  503B               	movf	(??___flmul+3)^0,w,c
  3027   0008B8  2246               	addwfc	(___flmul@prod+3)^0,f,c
  3028   0008BA  C03D  F038         	movff	___flmul@grs,??___flmul
  3029   0008BE  C03E  F039         	movff	___flmul@grs+1,??___flmul+1
  3030   0008C2  C03F  F03A         	movff	___flmul@grs+2,??___flmul+2
  3031   0008C6  C040  F03B         	movff	___flmul@grs+3,??___flmul+3
  3032   0008CA  0E19               	movlw	25
  3033   0008CC  EF6D  F004         	goto	u2980
  3034   0008D0                     u2985:
  3035   0008D0  90D8               	bcf	status,0,c
  3036   0008D2  323B               	rrcf	(??___flmul+3)^0,f,c
  3037   0008D4  323A               	rrcf	(??___flmul+2)^0,f,c
  3038   0008D6  3239               	rrcf	(??___flmul+1)^0,f,c
  3039   0008D8  3238               	rrcf	??___flmul^0,f,c
  3040   0008DA                     u2980:
  3041   0008DA  2EE8               	decfsz	wreg,f,c
  3042   0008DC  EF68  F004         	goto	u2985
  3043   0008E0  5038               	movf	??___flmul^0,w,c
  3044   0008E2  2643               	addwf	___flmul@prod^0,f,c
  3045   0008E4  5039               	movf	(??___flmul+1)^0,w,c
  3046   0008E6  2244               	addwfc	(___flmul@prod+1)^0,f,c
  3047   0008E8  503A               	movf	(??___flmul+2)^0,w,c
  3048   0008EA  2245               	addwfc	(___flmul@prod+2)^0,f,c
  3049   0008EC  503B               	movf	(??___flmul+3)^0,w,c
  3050   0008EE  2246               	addwfc	(___flmul@prod+3)^0,f,c
  3051   0008F0  C03F  F040         	movff	___flmul@grs+2,___flmul@grs+3
  3052   0008F4  C03E  F03F         	movff	___flmul@grs+1,___flmul@grs+2
  3053   0008F8  C03D  F03E         	movff	___flmul@grs,___flmul@grs+1
  3054   0008FC  6A3D               	clrf	___flmul@grs^0,c
  3055   0008FE  5041               	movf	___flmul@aexp^0,w,c
  3056   000900  C042  F038         	movff	___flmul@bexp,??___flmul
  3057   000904  6A39               	clrf	(??___flmul+1)^0,c
  3058   000906  2638               	addwf	??___flmul^0,f,c
  3059   000908  0E00               	movlw	0
  3060   00090A  2239               	addwfc	(??___flmul+1)^0,f,c
  3061   00090C  0E82               	movlw	130
  3062   00090E  2438               	addwf	??___flmul^0,w,c
  3063   000910  6E47               	movwf	___flmul@temp^0,c
  3064   000912  0EFF               	movlw	255
  3065   000914  2039               	addwfc	(??___flmul+1)^0,w,c
  3066   000916  6E48               	movwf	(___flmul@temp+1)^0,c
  3067   000918  EFA3  F004         	goto	l3529
  3068   00091C                     l3523:
  3069   00091C  90D8               	bcf	status,0,c
  3070   00091E  3643               	rlcf	___flmul@prod^0,f,c
  3071   000920  3644               	rlcf	(___flmul@prod+1)^0,f,c
  3072   000922  3645               	rlcf	(___flmul@prod+2)^0,f,c
  3073   000924  3646               	rlcf	(___flmul@prod+3)^0,f,c
  3074   000926  AE40               	btfss	(___flmul@grs+3)^0,7,c
  3075   000928  EF98  F004         	goto	u2991
  3076   00092C  EF9A  F004         	goto	u2990
  3077   000930                     u2991:
  3078   000930  EF9B  F004         	goto	l1321
  3079   000934                     u2990:
  3080   000934  8043               	bsf	___flmul@prod^0,0,c
  3081   000936                     l1321:
  3082   000936  90D8               	bcf	status,0,c
  3083   000938  363D               	rlcf	___flmul@grs^0,f,c
  3084   00093A  363E               	rlcf	(___flmul@grs+1)^0,f,c
  3085   00093C  363F               	rlcf	(___flmul@grs+2)^0,f,c
  3086   00093E  3640               	rlcf	(___flmul@grs+3)^0,f,c
  3087   000940  0647               	decf	___flmul@temp^0,f,c
  3088   000942  A0D8               	btfss	status,0,c
  3089   000944  0648               	decf	(___flmul@temp+1)^0,f,c
  3090   000946                     l3529:
  3091   000946  AE45               	btfss	(___flmul@prod+2)^0,7,c
  3092   000948  EFA8  F004         	goto	u3001
  3093   00094C  EFAA  F004         	goto	u3000
  3094   000950                     u3001:
  3095   000950  EF8E  F004         	goto	l3523
  3096   000954                     u3000:
  3097   000954  0E00               	movlw	0
  3098   000956  6E41               	movwf	___flmul@aexp^0,c
  3099   000958  AE40               	btfss	(___flmul@grs+3)^0,7,c
  3100   00095A  EFB1  F004         	goto	u3011
  3101   00095E  EFB3  F004         	goto	u3010
  3102   000962                     u3011:
  3103   000962  EFD7  F004         	goto	l1323
  3104   000966                     u3010:
  3105   000966  0EFF               	movlw	255
  3106   000968  143D               	andwf	___flmul@grs^0,w,c
  3107   00096A  6E38               	movwf	??___flmul^0,c
  3108   00096C  0EFF               	movlw	255
  3109   00096E  143E               	andwf	(___flmul@grs+1)^0,w,c
  3110   000970  6E39               	movwf	(??___flmul+1)^0,c
  3111   000972  0EFF               	movlw	255
  3112   000974  143F               	andwf	(___flmul@grs+2)^0,w,c
  3113   000976  6E3A               	movwf	(??___flmul+2)^0,c
  3114   000978  0E7F               	movlw	127
  3115   00097A  1440               	andwf	(___flmul@grs+3)^0,w,c
  3116   00097C  6E3B               	movwf	(??___flmul+3)^0,c
  3117   00097E  5038               	movf	??___flmul^0,w,c
  3118   000980  1039               	iorwf	(??___flmul+1)^0,w,c
  3119   000982  103A               	iorwf	(??___flmul+2)^0,w,c
  3120   000984  103B               	iorwf	(??___flmul+3)^0,w,c
  3121   000986  B4D8               	btfsc	status,2,c
  3122   000988  EFC8  F004         	goto	u3021
  3123   00098C  EFCA  F004         	goto	u3020
  3124   000990                     u3021:
  3125   000990  EFCE  F004         	goto	l1324
  3126   000994                     u3020:
  3127   000994                     l3537:
  3128   000994  0E01               	movlw	1
  3129   000996  6E41               	movwf	___flmul@aexp^0,c
  3130   000998  EFD7  F004         	goto	l1323
  3131   00099C                     l1324:
  3132   00099C  A043               	btfss	___flmul@prod^0,0,c
  3133   00099E  EFD3  F004         	goto	u3031
  3134   0009A2  EFD5  F004         	goto	u3030
  3135   0009A6                     u3031:
  3136   0009A6  EFD7  F004         	goto	l1323
  3137   0009AA                     u3030:
  3138   0009AA  EFCA  F004         	goto	l3537
  3139   0009AE                     l1323:
  3140   0009AE  5041               	movf	___flmul@aexp^0,w,c
  3141   0009B0  B4D8               	btfsc	status,2,c
  3142   0009B2  EFDD  F004         	goto	u3041
  3143   0009B6  EFDF  F004         	goto	u3040
  3144   0009BA                     u3041:
  3145   0009BA  EF03  F005         	goto	l3549
  3146   0009BE                     u3040:
  3147   0009BE  0E01               	movlw	1
  3148   0009C0  2643               	addwf	___flmul@prod^0,f,c
  3149   0009C2  0E00               	movlw	0
  3150   0009C4  2244               	addwfc	(___flmul@prod+1)^0,f,c
  3151   0009C6  2245               	addwfc	(___flmul@prod+2)^0,f,c
  3152   0009C8  2246               	addwfc	(___flmul@prod+3)^0,f,c
  3153   0009CA  A046               	btfss	(___flmul@prod+3)^0,0,c
  3154   0009CC  EFEA  F004         	goto	u3051
  3155   0009D0  EFEC  F004         	goto	u3050
  3156   0009D4                     u3051:
  3157   0009D4  EF03  F005         	goto	l3549
  3158   0009D8                     u3050:
  3159   0009D8  C043  F038         	movff	___flmul@prod,??___flmul
  3160   0009DC  C044  F039         	movff	___flmul@prod+1,??___flmul+1
  3161   0009E0  C045  F03A         	movff	___flmul@prod+2,??___flmul+2
  3162   0009E4  C046  F03B         	movff	___flmul@prod+3,??___flmul+3
  3163   0009E8  343B               	rlcf	(??___flmul+3)^0,w,c
  3164   0009EA  323B               	rrcf	(??___flmul+3)^0,f,c
  3165   0009EC  323A               	rrcf	(??___flmul+2)^0,f,c
  3166   0009EE  3239               	rrcf	(??___flmul+1)^0,f,c
  3167   0009F0  3238               	rrcf	??___flmul^0,f,c
  3168   0009F2  C038  F043         	movff	??___flmul,___flmul@prod
  3169   0009F6  C039  F044         	movff	??___flmul+1,___flmul@prod+1
  3170   0009FA  C03A  F045         	movff	??___flmul+2,___flmul@prod+2
  3171   0009FE  C03B  F046         	movff	??___flmul+3,___flmul@prod+3
  3172   000A02  4A47               	infsnz	___flmul@temp^0,f,c
  3173   000A04  2A48               	incf	(___flmul@temp+1)^0,f,c
  3174   000A06                     l3549:
  3175   000A06  BE48               	btfsc	(___flmul@temp+1)^0,7,c
  3176   000A08  EF0E  F005         	goto	u3061
  3177   000A0C  5048               	movf	(___flmul@temp+1)^0,w,c
  3178   000A0E  E108               	bnz	u3060
  3179   000A10  2847               	incf	___flmul@temp^0,w,c
  3180   000A12  A0D8               	btfss	status,0,c
  3181   000A14  EF0E  F005         	goto	u3061
  3182   000A18  EF10  F005         	goto	u3060
  3183   000A1C                     u3061:
  3184   000A1C  EF1A  F005         	goto	l3553
  3185   000A20                     u3060:
  3186   000A20  0E00               	movlw	0
  3187   000A22  6E43               	movwf	___flmul@prod^0,c
  3188   000A24  0E00               	movlw	0
  3189   000A26  6E44               	movwf	(___flmul@prod+1)^0,c
  3190   000A28  0E80               	movlw	128
  3191   000A2A  6E45               	movwf	(___flmul@prod+2)^0,c
  3192   000A2C  0E7F               	movlw	127
  3193   000A2E  6E46               	movwf	(___flmul@prod+3)^0,c
  3194   000A30  EF48  F005         	goto	l3565
  3195   000A34                     l3553:
  3196   000A34  BE48               	btfsc	(___flmul@temp+1)^0,7,c
  3197   000A36  EF27  F005         	goto	u3070
  3198   000A3A  5048               	movf	(___flmul@temp+1)^0,w,c
  3199   000A3C  E106               	bnz	u3071
  3200   000A3E  0447               	decf	___flmul@temp^0,w,c
  3201   000A40  B0D8               	btfsc	status,0,c
  3202   000A42  EF25  F005         	goto	u3071
  3203   000A46  EF27  F005         	goto	u3070
  3204   000A4A                     u3071:
  3205   000A4A  EF33  F005         	goto	l1331
  3206   000A4E                     u3070:
  3207   000A4E  0E00               	movlw	0
  3208   000A50  6E43               	movwf	___flmul@prod^0,c
  3209   000A52  0E00               	movlw	0
  3210   000A54  6E44               	movwf	(___flmul@prod+1)^0,c
  3211   000A56  0E00               	movlw	0
  3212   000A58  6E45               	movwf	(___flmul@prod+2)^0,c
  3213   000A5A  0E00               	movlw	0
  3214   000A5C  6E46               	movwf	(___flmul@prod+3)^0,c
  3215   000A5E  0E00               	movlw	0
  3216   000A60  6E3C               	movwf	___flmul@sign^0,c
  3217   000A62  EF48  F005         	goto	l3565
  3218   000A66                     l1331:
  3219   000A66  C047  F042         	movff	___flmul@temp,___flmul@bexp
  3220   000A6A  0EFF               	movlw	255
  3221   000A6C  1643               	andwf	___flmul@prod^0,f,c
  3222   000A6E  0EFF               	movlw	255
  3223   000A70  1644               	andwf	(___flmul@prod+1)^0,f,c
  3224   000A72  0E7F               	movlw	127
  3225   000A74  1645               	andwf	(___flmul@prod+2)^0,f,c
  3226   000A76  0E00               	movlw	0
  3227   000A78  1646               	andwf	(___flmul@prod+3)^0,f,c
  3228   000A7A  A042               	btfss	___flmul@bexp^0,0,c
  3229   000A7C  EF42  F005         	goto	u3081
  3230   000A80  EF44  F005         	goto	u3080
  3231   000A84                     u3081:
  3232   000A84  EF45  F005         	goto	l3563
  3233   000A88                     u3080:
  3234   000A88  8E45               	bsf	(___flmul@prod+2)^0,7,c
  3235   000A8A                     l3563:
  3236   000A8A  90D8               	bcf	status,0,c
  3237   000A8C  3042               	rrcf	___flmul@bexp^0,w,c
  3238   000A8E  6E46               	movwf	(___flmul@prod+3)^0,c
  3239   000A90                     l3565:
  3240   000A90  503C               	movf	___flmul@sign^0,w,c
  3241   000A92  1246               	iorwf	(___flmul@prod+3)^0,f,c
  3242   000A94  C043  F030         	movff	___flmul@prod,?___flmul
  3243   000A98  C044  F031         	movff	___flmul@prod+1,?___flmul+1
  3244   000A9C  C045  F032         	movff	___flmul@prod+2,?___flmul+2
  3245   000AA0  C046  F033         	movff	___flmul@prod+3,?___flmul+3
  3246   000AA4                     l1318:
  3247   000AA4  0012               	return		;funcret
  3248   000AA6                     __end_of___flmul:
  3249                           	callstack 0
  3250                           
  3251 ;; *************** function ___fldiv *****************
  3252 ;; Defined at:
  3253 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  3254 ;; Parameters:    Size  Location     Type
  3255 ;;  b               4   22[COMRAM] unsigned char 
  3256 ;;  a               4   26[COMRAM] unsigned char 
  3257 ;; Auto vars:     Size  Location     Type
  3258 ;;  grs             4   41[COMRAM] unsigned long 
  3259 ;;  rem             4   34[COMRAM] unsigned long 
  3260 ;;  new_exp         2   39[COMRAM] short 
  3261 ;;  aexp            1   46[COMRAM] unsigned char 
  3262 ;;  bexp            1   45[COMRAM] unsigned char 
  3263 ;;  sign            1   38[COMRAM] unsigned char 
  3264 ;; Return value:  Size  Location     Type
  3265 ;;                  4   22[COMRAM] unsigned char 
  3266 ;; Registers used:
  3267 ;;		wreg, status,2, status,0
  3268 ;; Tracked objects:
  3269 ;;		On entry : 0/0
  3270 ;;		On exit  : 0/0
  3271 ;;		Unchanged: 0/0
  3272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3273 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3274 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3275 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3276 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3277 ;;Total ram usage:       25 bytes
  3278 ;; Hardware stack levels used: 1
  3279 ;; Hardware stack levels required when called: 7
  3280 ;; This function calls:
  3281 ;;		Nothing
  3282 ;; This function is called by:
  3283 ;;		_detect_color
  3284 ;; This function uses a non-reentrant model
  3285 ;;
  3286                           
  3287                           	psect	text6
  3288   000AA6                     __ptext6:
  3289                           	callstack 0
  3290   000AA6                     ___fldiv:
  3291                           	callstack 22
  3292   000AA6  501A               	movf	(___fldiv@b+3)^0,w,c
  3293   000AA8  0B80               	andlw	128
  3294   000AAA  6E27               	movwf	___fldiv@sign^0,c
  3295   000AAC  501A               	movf	(___fldiv@b+3)^0,w,c
  3296   000AAE  241A               	addwf	(___fldiv@b+3)^0,w,c
  3297   000AB0  6E2E               	movwf	___fldiv@bexp^0,c
  3298   000AB2  AE19               	btfss	(___fldiv@b+2)^0,7,c
  3299   000AB4  EF5E  F005         	goto	u2671
  3300   000AB8  EF60  F005         	goto	u2670
  3301   000ABC                     u2671:
  3302   000ABC  EF61  F005         	goto	l3309
  3303   000AC0                     u2670:
  3304   000AC0  802E               	bsf	___fldiv@bexp^0,0,c
  3305   000AC2                     l3309:
  3306   000AC2  502E               	movf	___fldiv@bexp^0,w,c
  3307   000AC4  B4D8               	btfsc	status,2,c
  3308   000AC6  EF67  F005         	goto	u2681
  3309   000ACA  EF69  F005         	goto	u2680
  3310   000ACE                     u2681:
  3311   000ACE  EF7E  F005         	goto	l3319
  3312   000AD2                     u2680:
  3313   000AD2  282E               	incf	___fldiv@bexp^0,w,c
  3314   000AD4  A4D8               	btfss	status,2,c
  3315   000AD6  EF6F  F005         	goto	u2691
  3316   000ADA  EF71  F005         	goto	u2690
  3317   000ADE                     u2691:
  3318   000ADE  EF79  F005         	goto	l3315
  3319   000AE2                     u2690:
  3320   000AE2  0E00               	movlw	0
  3321   000AE4  6E17               	movwf	___fldiv@b^0,c
  3322   000AE6  0E00               	movlw	0
  3323   000AE8  6E18               	movwf	(___fldiv@b+1)^0,c
  3324   000AEA  0E00               	movlw	0
  3325   000AEC  6E19               	movwf	(___fldiv@b+2)^0,c
  3326   000AEE  0E00               	movlw	0
  3327   000AF0  6E1A               	movwf	(___fldiv@b+3)^0,c
  3328   000AF2                     l3315:
  3329   000AF2  8E19               	bsf	(___fldiv@b+2)^0,7,c
  3330   000AF4  0E00               	movlw	0
  3331   000AF6  6E1A               	movwf	(___fldiv@b+3)^0,c
  3332   000AF8  EF86  F005         	goto	l3321
  3333   000AFC                     l3319:
  3334   000AFC  0E00               	movlw	0
  3335   000AFE  6E17               	movwf	___fldiv@b^0,c
  3336   000B00  0E00               	movlw	0
  3337   000B02  6E18               	movwf	(___fldiv@b+1)^0,c
  3338   000B04  0E00               	movlw	0
  3339   000B06  6E19               	movwf	(___fldiv@b+2)^0,c
  3340   000B08  0E00               	movlw	0
  3341   000B0A  6E1A               	movwf	(___fldiv@b+3)^0,c
  3342   000B0C                     l3321:
  3343   000B0C  501E               	movf	(___fldiv@a+3)^0,w,c
  3344   000B0E  0B80               	andlw	128
  3345   000B10  1A27               	xorwf	___fldiv@sign^0,f,c
  3346   000B12  501E               	movf	(___fldiv@a+3)^0,w,c
  3347   000B14  241E               	addwf	(___fldiv@a+3)^0,w,c
  3348   000B16  6E2F               	movwf	___fldiv@aexp^0,c
  3349   000B18  AE1D               	btfss	(___fldiv@a+2)^0,7,c
  3350   000B1A  EF91  F005         	goto	u2701
  3351   000B1E  EF93  F005         	goto	u2700
  3352   000B22                     u2701:
  3353   000B22  EF94  F005         	goto	l3329
  3354   000B26                     u2700:
  3355   000B26  802F               	bsf	___fldiv@aexp^0,0,c
  3356   000B28                     l3329:
  3357   000B28  502F               	movf	___fldiv@aexp^0,w,c
  3358   000B2A  B4D8               	btfsc	status,2,c
  3359   000B2C  EF9A  F005         	goto	u2711
  3360   000B30  EF9C  F005         	goto	u2710
  3361   000B34                     u2711:
  3362   000B34  EFB1  F005         	goto	l3339
  3363   000B38                     u2710:
  3364   000B38  282F               	incf	___fldiv@aexp^0,w,c
  3365   000B3A  A4D8               	btfss	status,2,c
  3366   000B3C  EFA2  F005         	goto	u2721
  3367   000B40  EFA4  F005         	goto	u2720
  3368   000B44                     u2721:
  3369   000B44  EFAC  F005         	goto	l3335
  3370   000B48                     u2720:
  3371   000B48  0E00               	movlw	0
  3372   000B4A  6E1B               	movwf	___fldiv@a^0,c
  3373   000B4C  0E00               	movlw	0
  3374   000B4E  6E1C               	movwf	(___fldiv@a+1)^0,c
  3375   000B50  0E00               	movlw	0
  3376   000B52  6E1D               	movwf	(___fldiv@a+2)^0,c
  3377   000B54  0E00               	movlw	0
  3378   000B56  6E1E               	movwf	(___fldiv@a+3)^0,c
  3379   000B58                     l3335:
  3380   000B58  8E1D               	bsf	(___fldiv@a+2)^0,7,c
  3381   000B5A  0E00               	movlw	0
  3382   000B5C  6E1E               	movwf	(___fldiv@a+3)^0,c
  3383   000B5E  EFB9  F005         	goto	l3341
  3384   000B62                     l3339:
  3385   000B62  0E00               	movlw	0
  3386   000B64  6E1B               	movwf	___fldiv@a^0,c
  3387   000B66  0E00               	movlw	0
  3388   000B68  6E1C               	movwf	(___fldiv@a+1)^0,c
  3389   000B6A  0E00               	movlw	0
  3390   000B6C  6E1D               	movwf	(___fldiv@a+2)^0,c
  3391   000B6E  0E00               	movlw	0
  3392   000B70  6E1E               	movwf	(___fldiv@a+3)^0,c
  3393   000B72                     l3341:
  3394   000B72  501B               	movf	___fldiv@a^0,w,c
  3395   000B74  101C               	iorwf	(___fldiv@a+1)^0,w,c
  3396   000B76  101D               	iorwf	(___fldiv@a+2)^0,w,c
  3397   000B78  101E               	iorwf	(___fldiv@a+3)^0,w,c
  3398   000B7A  A4D8               	btfss	status,2,c
  3399   000B7C  EFC2  F005         	goto	u2731
  3400   000B80  EFC4  F005         	goto	u2730
  3401   000B84                     u2731:
  3402   000B84  EFDC  F005         	goto	l3353
  3403   000B88                     u2730:
  3404   000B88  0E00               	movlw	0
  3405   000B8A  6E17               	movwf	___fldiv@b^0,c
  3406   000B8C  0E00               	movlw	0
  3407   000B8E  6E18               	movwf	(___fldiv@b+1)^0,c
  3408   000B90  0E00               	movlw	0
  3409   000B92  6E19               	movwf	(___fldiv@b+2)^0,c
  3410   000B94  0E00               	movlw	0
  3411   000B96  6E1A               	movwf	(___fldiv@b+3)^0,c
  3412   000B98  0E80               	movlw	128
  3413   000B9A  1219               	iorwf	(___fldiv@b+2)^0,f,c
  3414   000B9C  0E7F               	movlw	127
  3415   000B9E  121A               	iorwf	(___fldiv@b+3)^0,f,c
  3416   000BA0                     l3347:
  3417   000BA0  5027               	movf	___fldiv@sign^0,w,c
  3418   000BA2  121A               	iorwf	(___fldiv@b+3)^0,f,c
  3419   000BA4  C017  F017         	movff	___fldiv@b,?___fldiv
  3420   000BA8  C018  F018         	movff	___fldiv@b+1,?___fldiv+1
  3421   000BAC  C019  F019         	movff	___fldiv@b+2,?___fldiv+2
  3422   000BB0  C01A  F01A         	movff	___fldiv@b+3,?___fldiv+3
  3423   000BB4  EF1F  F007         	goto	l1282
  3424   000BB8                     l3353:
  3425   000BB8  502E               	movf	___fldiv@bexp^0,w,c
  3426   000BBA  A4D8               	btfss	status,2,c
  3427   000BBC  EFE2  F005         	goto	u2741
  3428   000BC0  EFE4  F005         	goto	u2740
  3429   000BC4                     u2741:
  3430   000BC4  EFEE  F005         	goto	l3361
  3431   000BC8                     u2740:
  3432   000BC8  0E00               	movlw	0
  3433   000BCA  6E17               	movwf	?___fldiv^0,c
  3434   000BCC  0E00               	movlw	0
  3435   000BCE  6E18               	movwf	(?___fldiv+1)^0,c
  3436   000BD0  0E00               	movlw	0
  3437   000BD2  6E19               	movwf	(?___fldiv+2)^0,c
  3438   000BD4  0E00               	movlw	0
  3439   000BD6  6E1A               	movwf	(?___fldiv+3)^0,c
  3440   000BD8  EF1F  F007         	goto	l1282
  3441   000BDC                     l3361:
  3442   000BDC  502F               	movf	___fldiv@aexp^0,w,c
  3443   000BDE  C02E  F01F         	movff	___fldiv@bexp,??___fldiv
  3444   000BE2  6A20               	clrf	(??___fldiv+1)^0,c
  3445   000BE4  5E1F               	subwf	??___fldiv^0,f,c
  3446   000BE6  0E00               	movlw	0
  3447   000BE8  5A20               	subwfb	(??___fldiv+1)^0,f,c
  3448   000BEA  0E7F               	movlw	127
  3449   000BEC  241F               	addwf	??___fldiv^0,w,c
  3450   000BEE  6E28               	movwf	___fldiv@new_exp^0,c
  3451   000BF0  0E00               	movlw	0
  3452   000BF2  2020               	addwfc	(??___fldiv+1)^0,w,c
  3453   000BF4  6E29               	movwf	(___fldiv@new_exp+1)^0,c
  3454   000BF6  C017  F023         	movff	___fldiv@b,___fldiv@rem
  3455   000BFA  C018  F024         	movff	___fldiv@b+1,___fldiv@rem+1
  3456   000BFE  C019  F025         	movff	___fldiv@b+2,___fldiv@rem+2
  3457   000C02  C01A  F026         	movff	___fldiv@b+3,___fldiv@rem+3
  3458   000C06  0E00               	movlw	0
  3459   000C08  6E17               	movwf	___fldiv@b^0,c
  3460   000C0A  0E00               	movlw	0
  3461   000C0C  6E18               	movwf	(___fldiv@b+1)^0,c
  3462   000C0E  0E00               	movlw	0
  3463   000C10  6E19               	movwf	(___fldiv@b+2)^0,c
  3464   000C12  0E00               	movlw	0
  3465   000C14  6E1A               	movwf	(___fldiv@b+3)^0,c
  3466   000C16  0E00               	movlw	0
  3467   000C18  6E2A               	movwf	___fldiv@grs^0,c
  3468   000C1A  0E00               	movlw	0
  3469   000C1C  6E2B               	movwf	(___fldiv@grs+1)^0,c
  3470   000C1E  0E00               	movlw	0
  3471   000C20  6E2C               	movwf	(___fldiv@grs+2)^0,c
  3472   000C22  0E00               	movlw	0
  3473   000C24  6E2D               	movwf	(___fldiv@grs+3)^0,c
  3474   000C26  0E00               	movlw	0
  3475   000C28  6E2F               	movwf	___fldiv@aexp^0,c
  3476   000C2A  EF4F  F006         	goto	l1284
  3477   000C2E                     l3371:
  3478   000C2E  502F               	movf	___fldiv@aexp^0,w,c
  3479   000C30  B4D8               	btfsc	status,2,c
  3480   000C32  EF1D  F006         	goto	u2751
  3481   000C36  EF1F  F006         	goto	u2750
  3482   000C3A                     u2751:
  3483   000C3A  EF36  F006         	goto	l3379
  3484   000C3E                     u2750:
  3485   000C3E  90D8               	bcf	status,0,c
  3486   000C40  3623               	rlcf	___fldiv@rem^0,f,c
  3487   000C42  3624               	rlcf	(___fldiv@rem+1)^0,f,c
  3488   000C44  3625               	rlcf	(___fldiv@rem+2)^0,f,c
  3489   000C46  3626               	rlcf	(___fldiv@rem+3)^0,f,c
  3490   000C48  90D8               	bcf	status,0,c
  3491   000C4A  3617               	rlcf	___fldiv@b^0,f,c
  3492   000C4C  3618               	rlcf	(___fldiv@b+1)^0,f,c
  3493   000C4E  3619               	rlcf	(___fldiv@b+2)^0,f,c
  3494   000C50  361A               	rlcf	(___fldiv@b+3)^0,f,c
  3495   000C52  AE2D               	btfss	(___fldiv@grs+3)^0,7,c
  3496   000C54  EF2E  F006         	goto	u2761
  3497   000C58  EF30  F006         	goto	u2760
  3498   000C5C                     u2761:
  3499   000C5C  EF31  F006         	goto	l1287
  3500   000C60                     u2760:
  3501   000C60  8017               	bsf	___fldiv@b^0,0,c
  3502   000C62                     l1287:
  3503   000C62  90D8               	bcf	status,0,c
  3504   000C64  362A               	rlcf	___fldiv@grs^0,f,c
  3505   000C66  362B               	rlcf	(___fldiv@grs+1)^0,f,c
  3506   000C68  362C               	rlcf	(___fldiv@grs+2)^0,f,c
  3507   000C6A  362D               	rlcf	(___fldiv@grs+3)^0,f,c
  3508   000C6C                     l3379:
  3509   000C6C  501B               	movf	___fldiv@a^0,w,c
  3510   000C6E  5C23               	subwf	___fldiv@rem^0,w,c
  3511   000C70  501C               	movf	(___fldiv@a+1)^0,w,c
  3512   000C72  5824               	subwfb	(___fldiv@rem+1)^0,w,c
  3513   000C74  501D               	movf	(___fldiv@a+2)^0,w,c
  3514   000C76  5825               	subwfb	(___fldiv@rem+2)^0,w,c
  3515   000C78  501E               	movf	(___fldiv@a+3)^0,w,c
  3516   000C7A  5826               	subwfb	(___fldiv@rem+3)^0,w,c
  3517   000C7C  A0D8               	btfss	status,0,c
  3518   000C7E  EF43  F006         	goto	u2771
  3519   000C82  EF45  F006         	goto	u2770
  3520   000C86                     u2771:
  3521   000C86  EF4E  F006         	goto	l3385
  3522   000C8A                     u2770:
  3523   000C8A  8C2D               	bsf	(___fldiv@grs+3)^0,6,c
  3524   000C8C  501B               	movf	___fldiv@a^0,w,c
  3525   000C8E  5E23               	subwf	___fldiv@rem^0,f,c
  3526   000C90  501C               	movf	(___fldiv@a+1)^0,w,c
  3527   000C92  5A24               	subwfb	(___fldiv@rem+1)^0,f,c
  3528   000C94  501D               	movf	(___fldiv@a+2)^0,w,c
  3529   000C96  5A25               	subwfb	(___fldiv@rem+2)^0,f,c
  3530   000C98  501E               	movf	(___fldiv@a+3)^0,w,c
  3531   000C9A  5A26               	subwfb	(___fldiv@rem+3)^0,f,c
  3532   000C9C                     l3385:
  3533   000C9C  2A2F               	incf	___fldiv@aexp^0,f,c
  3534   000C9E                     l1284:
  3535   000C9E  0E19               	movlw	25
  3536   000CA0  642F               	cpfsgt	___fldiv@aexp^0,c
  3537   000CA2  EF55  F006         	goto	u2781
  3538   000CA6  EF57  F006         	goto	u2780
  3539   000CAA                     u2781:
  3540   000CAA  EF17  F006         	goto	l3371
  3541   000CAE                     u2780:
  3542   000CAE  5023               	movf	___fldiv@rem^0,w,c
  3543   000CB0  1024               	iorwf	(___fldiv@rem+1)^0,w,c
  3544   000CB2  1025               	iorwf	(___fldiv@rem+2)^0,w,c
  3545   000CB4  1026               	iorwf	(___fldiv@rem+3)^0,w,c
  3546   000CB6  B4D8               	btfsc	status,2,c
  3547   000CB8  EF60  F006         	goto	u2791
  3548   000CBC  EF62  F006         	goto	u2790
  3549   000CC0                     u2791:
  3550   000CC0  EF7A  F006         	goto	l3397
  3551   000CC4                     u2790:
  3552   000CC4  802A               	bsf	___fldiv@grs^0,0,c
  3553   000CC6  EF7A  F006         	goto	l3397
  3554   000CCA                     l3391:
  3555   000CCA  90D8               	bcf	status,0,c
  3556   000CCC  3617               	rlcf	___fldiv@b^0,f,c
  3557   000CCE  3618               	rlcf	(___fldiv@b+1)^0,f,c
  3558   000CD0  3619               	rlcf	(___fldiv@b+2)^0,f,c
  3559   000CD2  361A               	rlcf	(___fldiv@b+3)^0,f,c
  3560   000CD4  AE2D               	btfss	(___fldiv@grs+3)^0,7,c
  3561   000CD6  EF6F  F006         	goto	u2801
  3562   000CDA  EF71  F006         	goto	u2800
  3563   000CDE                     u2801:
  3564   000CDE  EF72  F006         	goto	l1293
  3565   000CE2                     u2800:
  3566   000CE2  8017               	bsf	___fldiv@b^0,0,c
  3567   000CE4                     l1293:
  3568   000CE4  90D8               	bcf	status,0,c
  3569   000CE6  362A               	rlcf	___fldiv@grs^0,f,c
  3570   000CE8  362B               	rlcf	(___fldiv@grs+1)^0,f,c
  3571   000CEA  362C               	rlcf	(___fldiv@grs+2)^0,f,c
  3572   000CEC  362D               	rlcf	(___fldiv@grs+3)^0,f,c
  3573   000CEE  0628               	decf	___fldiv@new_exp^0,f,c
  3574   000CF0  A0D8               	btfss	status,0,c
  3575   000CF2  0629               	decf	(___fldiv@new_exp+1)^0,f,c
  3576   000CF4                     l3397:
  3577   000CF4  AE19               	btfss	(___fldiv@b+2)^0,7,c
  3578   000CF6  EF7F  F006         	goto	u2811
  3579   000CFA  EF81  F006         	goto	u2810
  3580   000CFE                     u2811:
  3581   000CFE  EF65  F006         	goto	l3391
  3582   000D02                     u2810:
  3583   000D02  0E00               	movlw	0
  3584   000D04  6E2F               	movwf	___fldiv@aexp^0,c
  3585   000D06  AE2D               	btfss	(___fldiv@grs+3)^0,7,c
  3586   000D08  EF88  F006         	goto	u2821
  3587   000D0C  EF8A  F006         	goto	u2820
  3588   000D10                     u2821:
  3589   000D10  EFAE  F006         	goto	l1295
  3590   000D14                     u2820:
  3591   000D14  0EFF               	movlw	255
  3592   000D16  142A               	andwf	___fldiv@grs^0,w,c
  3593   000D18  6E1F               	movwf	??___fldiv^0,c
  3594   000D1A  0EFF               	movlw	255
  3595   000D1C  142B               	andwf	(___fldiv@grs+1)^0,w,c
  3596   000D1E  6E20               	movwf	(??___fldiv+1)^0,c
  3597   000D20  0EFF               	movlw	255
  3598   000D22  142C               	andwf	(___fldiv@grs+2)^0,w,c
  3599   000D24  6E21               	movwf	(??___fldiv+2)^0,c
  3600   000D26  0E7F               	movlw	127
  3601   000D28  142D               	andwf	(___fldiv@grs+3)^0,w,c
  3602   000D2A  6E22               	movwf	(??___fldiv+3)^0,c
  3603   000D2C  501F               	movf	??___fldiv^0,w,c
  3604   000D2E  1020               	iorwf	(??___fldiv+1)^0,w,c
  3605   000D30  1021               	iorwf	(??___fldiv+2)^0,w,c
  3606   000D32  1022               	iorwf	(??___fldiv+3)^0,w,c
  3607   000D34  B4D8               	btfsc	status,2,c
  3608   000D36  EF9F  F006         	goto	u2831
  3609   000D3A  EFA1  F006         	goto	u2830
  3610   000D3E                     u2831:
  3611   000D3E  EFA5  F006         	goto	l1296
  3612   000D42                     u2830:
  3613   000D42                     l3405:
  3614   000D42  0E01               	movlw	1
  3615   000D44  6E2F               	movwf	___fldiv@aexp^0,c
  3616   000D46  EFAE  F006         	goto	l1295
  3617   000D4A                     l1296:
  3618   000D4A  A017               	btfss	___fldiv@b^0,0,c
  3619   000D4C  EFAA  F006         	goto	u2841
  3620   000D50  EFAC  F006         	goto	u2840
  3621   000D54                     u2841:
  3622   000D54  EFAE  F006         	goto	l1295
  3623   000D58                     u2840:
  3624   000D58  EFA1  F006         	goto	l3405
  3625   000D5C                     l1295:
  3626   000D5C  502F               	movf	___fldiv@aexp^0,w,c
  3627   000D5E  B4D8               	btfsc	status,2,c
  3628   000D60  EFB4  F006         	goto	u2851
  3629   000D64  EFB6  F006         	goto	u2850
  3630   000D68                     u2851:
  3631   000D68  EFDA  F006         	goto	l3417
  3632   000D6C                     u2850:
  3633   000D6C  0E01               	movlw	1
  3634   000D6E  2617               	addwf	___fldiv@b^0,f,c
  3635   000D70  0E00               	movlw	0
  3636   000D72  2218               	addwfc	(___fldiv@b+1)^0,f,c
  3637   000D74  2219               	addwfc	(___fldiv@b+2)^0,f,c
  3638   000D76  221A               	addwfc	(___fldiv@b+3)^0,f,c
  3639   000D78  A01A               	btfss	(___fldiv@b+3)^0,0,c
  3640   000D7A  EFC1  F006         	goto	u2861
  3641   000D7E  EFC3  F006         	goto	u2860
  3642   000D82                     u2861:
  3643   000D82  EFDA  F006         	goto	l3417
  3644   000D86                     u2860:
  3645   000D86  C017  F01F         	movff	___fldiv@b,??___fldiv
  3646   000D8A  C018  F020         	movff	___fldiv@b+1,??___fldiv+1
  3647   000D8E  C019  F021         	movff	___fldiv@b+2,??___fldiv+2
  3648   000D92  C01A  F022         	movff	___fldiv@b+3,??___fldiv+3
  3649   000D96  3422               	rlcf	(??___fldiv+3)^0,w,c
  3650   000D98  3222               	rrcf	(??___fldiv+3)^0,f,c
  3651   000D9A  3221               	rrcf	(??___fldiv+2)^0,f,c
  3652   000D9C  3220               	rrcf	(??___fldiv+1)^0,f,c
  3653   000D9E  321F               	rrcf	??___fldiv^0,f,c
  3654   000DA0  C01F  F017         	movff	??___fldiv,___fldiv@b
  3655   000DA4  C020  F018         	movff	??___fldiv+1,___fldiv@b+1
  3656   000DA8  C021  F019         	movff	??___fldiv+2,___fldiv@b+2
  3657   000DAC  C022  F01A         	movff	??___fldiv+3,___fldiv@b+3
  3658   000DB0  4A28               	infsnz	___fldiv@new_exp^0,f,c
  3659   000DB2  2A29               	incf	(___fldiv@new_exp+1)^0,f,c
  3660   000DB4                     l3417:
  3661   000DB4  BE29               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3662   000DB6  EFE5  F006         	goto	u2871
  3663   000DBA  5029               	movf	(___fldiv@new_exp+1)^0,w,c
  3664   000DBC  E108               	bnz	u2870
  3665   000DBE  2828               	incf	___fldiv@new_exp^0,w,c
  3666   000DC0  A0D8               	btfss	status,0,c
  3667   000DC2  EFE5  F006         	goto	u2871
  3668   000DC6  EFE7  F006         	goto	u2870
  3669   000DCA                     u2871:
  3670   000DCA  EFF2  F006         	goto	l3421
  3671   000DCE                     u2870:
  3672   000DCE  0E00               	movlw	0
  3673   000DD0  6E29               	movwf	(___fldiv@new_exp+1)^0,c
  3674   000DD2  6828               	setf	___fldiv@new_exp^0,c
  3675   000DD4  0E00               	movlw	0
  3676   000DD6  6E17               	movwf	___fldiv@b^0,c
  3677   000DD8  0E00               	movlw	0
  3678   000DDA  6E18               	movwf	(___fldiv@b+1)^0,c
  3679   000DDC  0E00               	movlw	0
  3680   000DDE  6E19               	movwf	(___fldiv@b+2)^0,c
  3681   000DE0  0E00               	movlw	0
  3682   000DE2  6E1A               	movwf	(___fldiv@b+3)^0,c
  3683   000DE4                     l3421:
  3684   000DE4  BE29               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3685   000DE6  EFFF  F006         	goto	u2880
  3686   000DEA  5029               	movf	(___fldiv@new_exp+1)^0,w,c
  3687   000DEC  E106               	bnz	u2881
  3688   000DEE  0428               	decf	___fldiv@new_exp^0,w,c
  3689   000DF0  B0D8               	btfsc	status,0,c
  3690   000DF2  EFFD  F006         	goto	u2881
  3691   000DF6  EFFF  F006         	goto	u2880
  3692   000DFA                     u2881:
  3693   000DFA  EF0D  F007         	goto	l3425
  3694   000DFE                     u2880:
  3695   000DFE  0E00               	movlw	0
  3696   000E00  6E29               	movwf	(___fldiv@new_exp+1)^0,c
  3697   000E02  0E00               	movlw	0
  3698   000E04  6E28               	movwf	___fldiv@new_exp^0,c
  3699   000E06  0E00               	movlw	0
  3700   000E08  6E17               	movwf	___fldiv@b^0,c
  3701   000E0A  0E00               	movlw	0
  3702   000E0C  6E18               	movwf	(___fldiv@b+1)^0,c
  3703   000E0E  0E00               	movlw	0
  3704   000E10  6E19               	movwf	(___fldiv@b+2)^0,c
  3705   000E12  0E00               	movlw	0
  3706   000E14  6E1A               	movwf	(___fldiv@b+3)^0,c
  3707   000E16  0E00               	movlw	0
  3708   000E18  6E27               	movwf	___fldiv@sign^0,c
  3709   000E1A                     l3425:
  3710   000E1A  C028  F02E         	movff	___fldiv@new_exp,___fldiv@bexp
  3711   000E1E  A02E               	btfss	___fldiv@bexp^0,0,c
  3712   000E20  EF14  F007         	goto	u2891
  3713   000E24  EF16  F007         	goto	u2890
  3714   000E28                     u2891:
  3715   000E28  EF19  F007         	goto	l3431
  3716   000E2C                     u2890:
  3717   000E2C  8E19               	bsf	(___fldiv@b+2)^0,7,c
  3718   000E2E  EF1A  F007         	goto	l3433
  3719   000E32                     l3431:
  3720   000E32  9E19               	bcf	(___fldiv@b+2)^0,7,c
  3721   000E34                     l3433:
  3722   000E34  90D8               	bcf	status,0,c
  3723   000E36  302E               	rrcf	___fldiv@bexp^0,w,c
  3724   000E38  6E1A               	movwf	(___fldiv@b+3)^0,c
  3725   000E3A  EFD0  F005         	goto	l3347
  3726   000E3E                     l1282:
  3727   000E3E  0012               	return		;funcret
  3728   000E40                     __end_of___fldiv:
  3729                           	callstack 0
  3730                           
  3731 ;; *************** function _color_click_init *****************
  3732 ;; Defined at:
  3733 ;;		line 6 in file "color.c"
  3734 ;; Parameters:    Size  Location     Type
  3735 ;;		None
  3736 ;; Auto vars:     Size  Location     Type
  3737 ;;		None
  3738 ;; Return value:  Size  Location     Type
  3739 ;;                  1    wreg      void 
  3740 ;; Registers used:
  3741 ;;		wreg, status,2, status,0, cstack
  3742 ;; Tracked objects:
  3743 ;;		On entry : 0/0
  3744 ;;		On exit  : 0/0
  3745 ;;		Unchanged: 0/0
  3746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3749 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3750 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3751 ;;Total ram usage:        1 bytes
  3752 ;; Hardware stack levels used: 1
  3753 ;; Hardware stack levels required when called: 10
  3754 ;; This function calls:
  3755 ;;		_I2C_2_Master_Init
  3756 ;;		_color_writetoaddr
  3757 ;; This function is called by:
  3758 ;;		_main
  3759 ;; This function uses a non-reentrant model
  3760 ;;
  3761                           
  3762                           	psect	text7
  3763   0027F0                     __ptext7:
  3764                           	callstack 0
  3765   0027F0                     _color_click_init:
  3766                           	callstack 20
  3767   0027F0                     
  3768                           ;color.c: 9:     I2C_2_Master_Init();
  3769   0027F0  EC2B  F014         	call	_I2C_2_Master_Init	;wreg free
  3770   0027F4                     
  3771                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  3772   0027F4  0E01               	movlw	1
  3773   0027F6  6E0B               	movwf	color_writetoaddr@value^0,c
  3774   0027F8  0E00               	movlw	0
  3775   0027FA  ECAE  F014         	call	_color_writetoaddr
  3776   0027FE                     
  3777                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3778   0027FE  0E3F               	movlw	63
  3779   002800  6E0D               	movwf	??_color_click_init^0,c
  3780   002802  0E55               	movlw	85
  3781   002804                     u4577:
  3782   002804  2EE8               	decfsz	wreg,f,c
  3783   002806  D7FE               	bra	u4577
  3784   002808  2E0D               	decfsz	??_color_click_init^0,f,c
  3785   00280A  D7FC               	bra	u4577
  3786   00280C  F000               	nop	
  3787   00280E                     
  3788                           ;color.c: 16:  color_writetoaddr(0x00, 0x03);
  3789   00280E  0E03               	movlw	3
  3790   002810  6E0B               	movwf	color_writetoaddr@value^0,c
  3791   002812  0E00               	movlw	0
  3792   002814  ECAE  F014         	call	_color_writetoaddr
  3793   002818                     
  3794                           ;color.c: 19:  color_writetoaddr(0x01, 0xD5);
  3795   002818  0ED5               	movlw	213
  3796   00281A  6E0B               	movwf	color_writetoaddr@value^0,c
  3797   00281C  0E01               	movlw	1
  3798   00281E  ECAE  F014         	call	_color_writetoaddr
  3799   002822  0012               	return		;funcret
  3800   002824                     __end_of_color_click_init:
  3801                           	callstack 0
  3802                           
  3803 ;; *************** function _I2C_2_Master_Init *****************
  3804 ;; Defined at:
  3805 ;;		line 4 in file "i2c.c"
  3806 ;; Parameters:    Size  Location     Type
  3807 ;;		None
  3808 ;; Auto vars:     Size  Location     Type
  3809 ;;		None
  3810 ;; Return value:  Size  Location     Type
  3811 ;;                  1    wreg      void 
  3812 ;; Registers used:
  3813 ;;		wreg, status,2
  3814 ;; Tracked objects:
  3815 ;;		On entry : 0/0
  3816 ;;		On exit  : 0/0
  3817 ;;		Unchanged: 0/0
  3818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3823 ;;Total ram usage:        0 bytes
  3824 ;; Hardware stack levels used: 1
  3825 ;; Hardware stack levels required when called: 7
  3826 ;; This function calls:
  3827 ;;		Nothing
  3828 ;; This function is called by:
  3829 ;;		_color_click_init
  3830 ;; This function uses a non-reentrant model
  3831 ;;
  3832                           
  3833                           	psect	text8
  3834   002856                     __ptext8:
  3835                           	callstack 0
  3836   002856                     _I2C_2_Master_Init:
  3837                           	callstack 22
  3838   002856                     
  3839                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3840   002856  010E               	movlb	14	; () banked
  3841   002858  51D9               	movf	217,w,b	;volatile
  3842   00285A  0BF0               	andlw	-16
  3843   00285C  0908               	iorlw	8
  3844   00285E  6FD9               	movwf	217,b	;volatile
  3845   002860                     
  3846                           ; BSR set to: 14
  3847                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3848   002860  8BD9               	bsf	217,5,b	;volatile
  3849                           
  3850                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3851   002862  0E9F               	movlw	159
  3852   002864  6FD6               	movwf	214,b	;volatile
  3853   002866                     
  3854                           ; BSR set to: 14
  3855                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3856   002866  8A84               	bsf	132,5,c	;volatile
  3857   002868                     
  3858                           ; BSR set to: 14
  3859                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3860   002868  8C84               	bsf	132,6,c	;volatile
  3861   00286A                     
  3862                           ; BSR set to: 14
  3863                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3864   00286A  9BA7               	bcf	167,5,b	;volatile
  3865   00286C                     
  3866                           ; BSR set to: 14
  3867                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3868   00286C  9DA7               	bcf	167,6,b	;volatile
  3869                           
  3870                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3871   00286E  0E1D               	movlw	29
  3872   002870  6F1D               	movwf	29,b	;volatile
  3873                           
  3874                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3875   002872  0E1E               	movlw	30
  3876   002874  6F1C               	movwf	28,b	;volatile
  3877                           
  3878                           ;i2c.c: 18:   RD5PPS=0x1C;
  3879   002876  0E1C               	movlw	28
  3880   002878  6F6F               	movwf	111,b	;volatile
  3881                           
  3882                           ;i2c.c: 19:   RD6PPS=0x1B;
  3883   00287A  0E1B               	movlw	27
  3884   00287C  6F70               	movwf	112,b	;volatile
  3885   00287E                     
  3886                           ; BSR set to: 14
  3887   00287E  0012               	return		;funcret
  3888   002880                     __end_of_I2C_2_Master_Init:
  3889                           	callstack 0
  3890                           
  3891 ;; *************** function _WhiteLight *****************
  3892 ;; Defined at:
  3893 ;;		line 20 in file "LED_Buttons.c"
  3894 ;; Parameters:    Size  Location     Type
  3895 ;;		None
  3896 ;; Auto vars:     Size  Location     Type
  3897 ;;		None
  3898 ;; Return value:  Size  Location     Type
  3899 ;;                  1    wreg      void 
  3900 ;; Registers used:
  3901 ;;		None
  3902 ;; Tracked objects:
  3903 ;;		On entry : 0/0
  3904 ;;		On exit  : 0/0
  3905 ;;		Unchanged: 0/0
  3906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3911 ;;Total ram usage:        0 bytes
  3912 ;; Hardware stack levels used: 1
  3913 ;; Hardware stack levels required when called: 7
  3914 ;; This function calls:
  3915 ;;		Nothing
  3916 ;; This function is called by:
  3917 ;;		_main
  3918 ;; This function uses a non-reentrant model
  3919 ;;
  3920                           
  3921                           	psect	text9
  3922   002A68                     __ptext9:
  3923                           	callstack 0
  3924   002A68                     _WhiteLight:
  3925                           	callstack 23
  3926   002A68                     
  3927                           ;LED_Buttons.c: 21:     LATGbits.LATG1 = 1;
  3928   002A68  827F               	bsf	127,1,c	;volatile
  3929                           
  3930                           ;LED_Buttons.c: 22:     LATAbits.LATA4 = 1;
  3931   002A6A  8879               	bsf	121,4,c	;volatile
  3932                           
  3933                           ;LED_Buttons.c: 23:     LATFbits.LATF7 = 1;
  3934   002A6C  8E7E               	bsf	126,7,c	;volatile
  3935   002A6E  0012               	return		;funcret
  3936   002A70                     __end_of_WhiteLight:
  3937                           	callstack 0
  3938                           
  3939 ;; *************** function _WhiteInstructions *****************
  3940 ;; Defined at:
  3941 ;;		line 157 in file "color_instructions.c"
  3942 ;; Parameters:    Size  Location     Type
  3943 ;;  mL              2   58[COMRAM] PTR struct DC_motor
  3944 ;;		 -> main@motorL(9), 
  3945 ;;  mR              2   60[COMRAM] PTR struct DC_motor
  3946 ;;		 -> main@motorR(9), 
  3947 ;; Auto vars:     Size  Location     Type
  3948 ;;  a               2   67[COMRAM] unsigned int 
  3949 ;;  c               2   64[COMRAM] unsigned int 
  3950 ;;  anticolor       1   66[COMRAM] unsigned char 
  3951 ;; Return value:  Size  Location     Type
  3952 ;;                  1    wreg      void 
  3953 ;; Registers used:
  3954 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3955 ;; Tracked objects:
  3956 ;;		On entry : 0/0
  3957 ;;		On exit  : 0/0
  3958 ;;		Unchanged: 0/0
  3959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3960 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3961 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3962 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3963 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3964 ;;Total ram usage:       11 bytes
  3965 ;; Hardware stack levels used: 1
  3966 ;; Hardware stack levels required when called: 14
  3967 ;; This function calls:
  3968 ;;		_BlueInstructions
  3969 ;;		_MoveBuggy
  3970 ;;		_Return_Anti_Moves
  3971 ;;		_Return_Time
  3972 ;;		_fullSpeedAhead
  3973 ;;		_stop
  3974 ;; This function is called by:
  3975 ;;		_main
  3976 ;; This function uses a non-reentrant model
  3977 ;;
  3978                           
  3979                           	psect	text10
  3980   001AE6                     __ptext10:
  3981                           	callstack 0
  3982   001AE6                     _WhiteInstructions:
  3983                           	callstack 16
  3984   001AE6                     
  3985                           ;color_instructions.c: 159:     BlueInstructions(mL,mR);
  3986   001AE6  C03B  F027         	movff	WhiteInstructions@mL,BlueInstructions@mL
  3987   001AEA  C03C  F028         	movff	WhiteInstructions@mL+1,BlueInstructions@mL+1
  3988   001AEE  C03D  F029         	movff	WhiteInstructions@mR,BlueInstructions@mR
  3989   001AF2  C03E  F02A         	movff	WhiteInstructions@mR+1,BlueInstructions@mR+1
  3990   001AF6  EC04  F00F         	call	_BlueInstructions	;wreg free
  3991                           
  3992                           ;color_instructions.c: 161:     while(time_index>0){
  3993   001AFA  EFDE  F00D         	goto	l3891
  3994   001AFE                     l3871:
  3995                           
  3996                           ; BSR set to: 0
  3997                           ;color_instructions.c: 163:         unsigned int a = 0;
  3998   001AFE  0E00               	movlw	0
  3999   001B00  6E45               	movwf	(WhiteInstructions@a+1)^0,c
  4000   001B02  0E00               	movlw	0
  4001   001B04  6E44               	movwf	WhiteInstructions@a^0,c
  4002   001B06                     
  4003                           ; BSR set to: 0
  4004                           ;color_instructions.c: 164:         unsigned int c = Return_Time(&time_index,time_array)
      +                          ;
  4005   001B06  0E9D               	movlw	low _time_index
  4006   001B08  6E09               	movwf	Return_Time@time_index^0,c
  4007   001B0A  0E00               	movlw	high _time_index
  4008   001B0C  6E0A               	movwf	(Return_Time@time_index+1)^0,c
  4009   001B0E  0E3C               	movlw	low _time_array
  4010   001B10  6E0B               	movwf	Return_Time@time_array^0,c
  4011   001B12  0E01               	movlw	high _time_array
  4012   001B14  6E0C               	movwf	(Return_Time@time_array+1)^0,c
  4013   001B16  ECDC  F013         	call	_Return_Time	;wreg free
  4014   001B1A  C009  F041         	movff	?_Return_Time,WhiteInstructions@c
  4015   001B1E  C00A  F042         	movff	?_Return_Time+1,WhiteInstructions@c+1
  4016                           
  4017                           ;color_instructions.c: 165:         while(a<c){
  4018   001B22  EF9F  F00D         	goto	l3879
  4019   001B26                     l3875:
  4020                           
  4021                           ;color_instructions.c: 166:             fullSpeedAhead(mL,mR);
  4022   001B26  C03B  F01C         	movff	WhiteInstructions@mL,fullSpeedAhead@mL
  4023   001B2A  C03C  F01D         	movff	WhiteInstructions@mL+1,fullSpeedAhead@mL+1
  4024   001B2E  C03D  F01E         	movff	WhiteInstructions@mR,fullSpeedAhead@mR
  4025   001B32  C03E  F01F         	movff	WhiteInstructions@mR+1,fullSpeedAhead@mR+1
  4026   001B36  EC0E  F00C         	call	_fullSpeedAhead	;wreg free
  4027   001B3A                     
  4028                           ;color_instructions.c: 167:             a++;
  4029   001B3A  4A44               	infsnz	WhiteInstructions@a^0,f,c
  4030   001B3C  2A45               	incf	(WhiteInstructions@a+1)^0,f,c
  4031   001B3E                     l3879:
  4032                           
  4033                           ;color_instructions.c: 165:         while(a<c){
  4034   001B3E  5041               	movf	WhiteInstructions@c^0,w,c
  4035   001B40  5C44               	subwf	WhiteInstructions@a^0,w,c
  4036   001B42  5042               	movf	(WhiteInstructions@c+1)^0,w,c
  4037   001B44  5845               	subwfb	(WhiteInstructions@a+1)^0,w,c
  4038   001B46  A0D8               	btfss	status,0,c
  4039   001B48  EFA8  F00D         	goto	u3761
  4040   001B4C  EFAA  F00D         	goto	u3760
  4041   001B50                     u3761:
  4042   001B50  EF93  F00D         	goto	l3875
  4043   001B54                     u3760:
  4044   001B54  EFB9  F00D         	goto	l3885
  4045   001B58                     l3881:
  4046                           
  4047                           ;color_instructions.c: 171:             stop(mL,mR);
  4048   001B58  C03B  F01C         	movff	WhiteInstructions@mL,stop@mL
  4049   001B5C  C03C  F01D         	movff	WhiteInstructions@mL+1,stop@mL+1
  4050   001B60  C03D  F01E         	movff	WhiteInstructions@mR,stop@mR
  4051   001B64  C03E  F01F         	movff	WhiteInstructions@mR+1,stop@mR+1
  4052   001B68  ECE8  F00D         	call	_stop	;wreg free
  4053   001B6C                     
  4054                           ;color_instructions.c: 172:             a--;
  4055   001B6C  0644               	decf	WhiteInstructions@a^0,f,c
  4056   001B6E  A0D8               	btfss	status,0,c
  4057   001B70  0645               	decf	(WhiteInstructions@a+1)^0,f,c
  4058   001B72                     l3885:
  4059                           
  4060                           ;color_instructions.c: 170:         while(a>0){
  4061   001B72  5044               	movf	WhiteInstructions@a^0,w,c
  4062   001B74  1045               	iorwf	(WhiteInstructions@a+1)^0,w,c
  4063   001B76  A4D8               	btfss	status,2,c
  4064   001B78  EFC0  F00D         	goto	u3771
  4065   001B7C  EFC2  F00D         	goto	u3770
  4066   001B80                     u3771:
  4067   001B80  EFAC  F00D         	goto	l3881
  4068   001B84                     u3770:
  4069   001B84                     
  4070                           ;color_instructions.c: 175:         unsigned char anticolor = Return_Anti_Moves(&moves_i
      +                          ndex, anti_moves_array);
  4071   001B84  0E56               	movlw	low _moves_index
  4072   001B86  6E09               	movwf	Return_Anti_Moves@moves_index^0,c
  4073   001B88  0E00               	movlw	high _moves_index
  4074   001B8A  6E0A               	movwf	(Return_Anti_Moves@moves_index+1)^0,c
  4075   001B8C  0E75               	movlw	low _anti_moves_array
  4076   001B8E  6E0B               	movwf	Return_Anti_Moves@anti_moves_array^0,c
  4077   001B90  0E00               	movlw	high _anti_moves_array
  4078   001B92  6E0C               	movwf	(Return_Anti_Moves@anti_moves_array+1)^0,c
  4079   001B94  EC8D  F014         	call	_Return_Anti_Moves	;wreg free
  4080   001B98  6E43               	movwf	WhiteInstructions@anticolor^0,c
  4081   001B9A                     
  4082                           ;color_instructions.c: 176:         MoveBuggy(anticolor,mL,mR);
  4083   001B9A  5043               	movf	WhiteInstructions@anticolor^0,w,c
  4084   001B9C  6E3F               	movwf	??_WhiteInstructions^0,c
  4085   001B9E  6A40               	clrf	(??_WhiteInstructions+1)^0,c
  4086   001BA0  C03F  F035         	movff	??_WhiteInstructions,MoveBuggy@color_detected
  4087   001BA4  C040  F036         	movff	??_WhiteInstructions+1,MoveBuggy@color_detected+1
  4088   001BA8  C03B  F037         	movff	WhiteInstructions@mL,MoveBuggy@mL
  4089   001BAC  C03C  F038         	movff	WhiteInstructions@mL+1,MoveBuggy@mL+1
  4090   001BB0  C03D  F039         	movff	WhiteInstructions@mR,MoveBuggy@mR
  4091   001BB4  C03E  F03A         	movff	WhiteInstructions@mR+1,MoveBuggy@mR+1
  4092   001BB8  EC20  F007         	call	_MoveBuggy	;wreg free
  4093   001BBC                     l3891:
  4094                           
  4095                           ;color_instructions.c: 161:     while(time_index>0){
  4096   001BBC  0100               	movlb	0	; () banked
  4097   001BBE  519D               	movf	_time_index& (0+255),w,b
  4098   001BC0  A4D8               	btfss	status,2,c
  4099   001BC2  EFE5  F00D         	goto	u3781
  4100   001BC6  EFE7  F00D         	goto	u3780
  4101   001BCA                     u3781:
  4102   001BCA  EF7F  F00D         	goto	l3871
  4103   001BCE                     u3780:
  4104   001BCE                     
  4105                           ; BSR set to: 0
  4106   001BCE  0012               	return		;funcret
  4107   001BD0                     __end_of_WhiteInstructions:
  4108                           	callstack 0
  4109                           
  4110 ;; *************** function _Return_Time *****************
  4111 ;; Defined at:
  4112 ;;		line 40 in file "Memorization.c"
  4113 ;; Parameters:    Size  Location     Type
  4114 ;;  time_index      2    8[COMRAM] PTR unsigned char 
  4115 ;;		 -> time_index(1), 
  4116 ;;  time_array      2   10[COMRAM] PTR unsigned int 
  4117 ;;		 -> time_array(80), 
  4118 ;; Auto vars:     Size  Location     Type
  4119 ;;  temp            2   15[COMRAM] unsigned int 
  4120 ;; Return value:  Size  Location     Type
  4121 ;;                  2    8[COMRAM] unsigned int 
  4122 ;; Registers used:
  4123 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4124 ;; Tracked objects:
  4125 ;;		On entry : 0/0
  4126 ;;		On exit  : 0/0
  4127 ;;		Unchanged: 0/0
  4128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4129 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4130 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4131 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4132 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4133 ;;Total ram usage:        9 bytes
  4134 ;; Hardware stack levels used: 1
  4135 ;; Hardware stack levels required when called: 7
  4136 ;; This function calls:
  4137 ;;		Nothing
  4138 ;; This function is called by:
  4139 ;;		_WhiteInstructions
  4140 ;; This function uses a non-reentrant model
  4141 ;;
  4142                           
  4143                           	psect	text11
  4144   0027B8                     __ptext11:
  4145                           	callstack 0
  4146   0027B8                     _Return_Time:
  4147                           	callstack 22
  4148   0027B8                     
  4149                           ;Memorization.c: 41:     unsigned int temp;;Memorization.c: 43:     temp = time_array[--
      +                          (*time_index)];
  4150   0027B8  C009  FFD9         	movff	Return_Time@time_index,fsr2l
  4151   0027BC  C00A  FFDA         	movff	Return_Time@time_index+1,fsr2h
  4152   0027C0  06DF               	decf	indf2,f,c
  4153   0027C2  50DF               	movf	indf2,w,c
  4154   0027C4  6E0D               	movwf	??_Return_Time^0,c
  4155   0027C6  500D               	movf	??_Return_Time^0,w,c
  4156   0027C8  0D02               	mullw	2
  4157   0027CA  CFF3 F00E          	movff	prodl,??_Return_Time+1
  4158   0027CE  CFF4 F00F          	movff	prodh,??_Return_Time+2
  4159   0027D2  500E               	movf	(??_Return_Time+1)^0,w,c
  4160   0027D4  240B               	addwf	Return_Time@time_array^0,w,c
  4161   0027D6  6ED9               	movwf	fsr2l,c
  4162   0027D8  500F               	movf	(??_Return_Time+2)^0,w,c
  4163   0027DA  200C               	addwfc	(Return_Time@time_array+1)^0,w,c
  4164   0027DC  6EDA               	movwf	fsr2h,c
  4165   0027DE  CFDE F010          	movff	postinc2,Return_Time@temp
  4166   0027E2  CFDD F011          	movff	postdec2,Return_Time@temp+1
  4167   0027E6                     
  4168                           ;Memorization.c: 44:     return temp;
  4169   0027E6  C010  F009         	movff	Return_Time@temp,?_Return_Time
  4170   0027EA  C011  F00A         	movff	Return_Time@temp+1,?_Return_Time+1
  4171   0027EE  0012               	return		;funcret
  4172   0027F0                     __end_of_Return_Time:
  4173                           	callstack 0
  4174                           
  4175 ;; *************** function _Return_Anti_Moves *****************
  4176 ;; Defined at:
  4177 ;;		line 32 in file "Memorization.c"
  4178 ;; Parameters:    Size  Location     Type
  4179 ;;  moves_index     2    8[COMRAM] PTR unsigned char 
  4180 ;;		 -> moves_index(1), 
  4181 ;;  anti_moves_a    2   10[COMRAM] PTR unsigned char 
  4182 ;;		 -> anti_moves_array(40), 
  4183 ;; Auto vars:     Size  Location     Type
  4184 ;;  temp            1   13[COMRAM] unsigned char 
  4185 ;; Return value:  Size  Location     Type
  4186 ;;                  1    wreg      unsigned char 
  4187 ;; Registers used:
  4188 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4189 ;; Tracked objects:
  4190 ;;		On entry : 0/0
  4191 ;;		On exit  : 0/0
  4192 ;;		Unchanged: 0/0
  4193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4194 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4195 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4196 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4197 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4198 ;;Total ram usage:        6 bytes
  4199 ;; Hardware stack levels used: 1
  4200 ;; Hardware stack levels required when called: 7
  4201 ;; This function calls:
  4202 ;;		Nothing
  4203 ;; This function is called by:
  4204 ;;		_WhiteInstructions
  4205 ;; This function uses a non-reentrant model
  4206 ;;
  4207                           
  4208                           	psect	text12
  4209   00291A                     __ptext12:
  4210                           	callstack 0
  4211   00291A                     _Return_Anti_Moves:
  4212                           	callstack 22
  4213   00291A                     
  4214                           ;Memorization.c: 33:     unsigned char temp;;Memorization.c: 35:     temp = anti_moves_a
      +                          rray[--(*moves_index)];
  4215   00291A  C009  FFD9         	movff	Return_Anti_Moves@moves_index,fsr2l
  4216   00291E  C00A  FFDA         	movff	Return_Anti_Moves@moves_index+1,fsr2h
  4217   002922  06DF               	decf	indf2,f,c
  4218   002924  50DF               	movf	indf2,w,c
  4219   002926  6E0D               	movwf	??_Return_Anti_Moves^0,c
  4220   002928  500D               	movf	??_Return_Anti_Moves^0,w,c
  4221   00292A  240B               	addwf	Return_Anti_Moves@anti_moves_array^0,w,c
  4222   00292C  6ED9               	movwf	fsr2l,c
  4223   00292E  0E00               	movlw	0
  4224   002930  200C               	addwfc	(Return_Anti_Moves@anti_moves_array+1)^0,w,c
  4225   002932  6EDA               	movwf	fsr2h,c
  4226   002934  50DF               	movf	indf2,w,c
  4227   002936  6E0E               	movwf	Return_Anti_Moves@temp^0,c
  4228   002938                     
  4229                           ;Memorization.c: 36:     return temp;
  4230   002938  500E               	movf	Return_Anti_Moves@temp^0,w,c
  4231   00293A  0012               	return		;funcret
  4232   00293C                     __end_of_Return_Anti_Moves:
  4233                           	callstack 0
  4234                           
  4235 ;; *************** function _MoveBuggy *****************
  4236 ;; Defined at:
  4237 ;;		line 182 in file "color_instructions.c"
  4238 ;; Parameters:    Size  Location     Type
  4239 ;;  color_detect    2   52[COMRAM] PTR unsigned char 
  4240 ;;		 -> RAM(3561), 
  4241 ;;  mL              2   54[COMRAM] PTR struct DC_motor
  4242 ;;		 -> main@motorL(9), 
  4243 ;;  mR              2   56[COMRAM] PTR struct DC_motor
  4244 ;;		 -> main@motorR(9), 
  4245 ;; Auto vars:     Size  Location     Type
  4246 ;;		None
  4247 ;; Return value:  Size  Location     Type
  4248 ;;                  1    wreg      void 
  4249 ;; Registers used:
  4250 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4251 ;; Tracked objects:
  4252 ;;		On entry : 0/0
  4253 ;;		On exit  : 0/0
  4254 ;;		Unchanged: 0/0
  4255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4256 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4259 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4260 ;;Total ram usage:        6 bytes
  4261 ;; Hardware stack levels used: 1
  4262 ;; Hardware stack levels required when called: 13
  4263 ;; This function calls:
  4264 ;;		_AntiPink
  4265 ;;		_AntiYellow
  4266 ;;		_AppendMoves
  4267 ;;		_BlueInstructions
  4268 ;;		_GreenInstructions
  4269 ;;		_LightBlueInstructions
  4270 ;;		_OrangeInstructions
  4271 ;;		_PinkInstructions
  4272 ;;		_RedInstructions
  4273 ;;		_YellowInstructions
  4274 ;; This function is called by:
  4275 ;;		_main
  4276 ;;		_WhiteInstructions
  4277 ;; This function uses a non-reentrant model
  4278 ;;
  4279                           
  4280                           	psect	text13
  4281   000E40                     __ptext13:
  4282                           	callstack 0
  4283   000E40                     _MoveBuggy:
  4284                           	callstack 16
  4285   000E40                     
  4286                           ;color_instructions.c: 183:     if (color_detected==1){
  4287   000E40  0435               	decf	MoveBuggy@color_detected^0,w,c
  4288   000E42  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4289   000E44  A4D8               	btfss	status,2,c
  4290   000E46  EF27  F007         	goto	u2511
  4291   000E4A  EF29  F007         	goto	u2510
  4292   000E4E                     u2511:
  4293   000E4E  EF47  F007         	goto	l3235
  4294   000E52                     u2510:
  4295   000E52                     
  4296                           ;color_instructions.c: 184:         RedInstructions(mL, mR);
  4297   000E52  C037  F027         	movff	MoveBuggy@mL,RedInstructions@mL
  4298   000E56  C038  F028         	movff	MoveBuggy@mL+1,RedInstructions@mL+1
  4299   000E5A  C039  F029         	movff	MoveBuggy@mR,RedInstructions@mR
  4300   000E5E  C03A  F02A         	movff	MoveBuggy@mR+1,RedInstructions@mR+1
  4301   000E62  EC96  F010         	call	_RedInstructions	;wreg free
  4302   000E66                     
  4303                           ;color_instructions.c: 185:         if(LATDbits.LATD7 != 1){
  4304   000E66  BE7C               	btfsc	124,7,c	;volatile
  4305   000E68  EF38  F007         	goto	u2521
  4306   000E6C  EF3A  F007         	goto	u2520
  4307   000E70                     u2521:
  4308   000E70  EF61  F008         	goto	l677
  4309   000E74                     u2520:
  4310   000E74                     
  4311                           ;color_instructions.c: 186:             AppendMoves(2,&moves_index,anti_moves_array);
  4312   000E74  0E56               	movlw	low _moves_index
  4313   000E76  6E09               	movwf	AppendMoves@moves_index^0,c
  4314   000E78  0E00               	movlw	high _moves_index
  4315   000E7A  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4316   000E7C  0E75               	movlw	low _anti_moves_array
  4317   000E7E  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4318   000E80  0E00               	movlw	high _anti_moves_array
  4319   000E82  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4320   000E84  0E02               	movlw	2
  4321   000E86  EC7B  F014         	call	_AppendMoves
  4322   000E8A  EF61  F008         	goto	l677
  4323   000E8E                     l3235:
  4324   000E8E  0E02               	movlw	2
  4325   000E90  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4326   000E92  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4327   000E94  A4D8               	btfss	status,2,c
  4328   000E96  EF4F  F007         	goto	u2531
  4329   000E9A  EF51  F007         	goto	u2530
  4330   000E9E                     u2531:
  4331   000E9E  EF6F  F007         	goto	l3243
  4332   000EA2                     u2530:
  4333   000EA2                     
  4334                           ;color_instructions.c: 190:         GreenInstructions(mL, mR);
  4335   000EA2  C037  F027         	movff	MoveBuggy@mL,GreenInstructions@mL
  4336   000EA6  C038  F028         	movff	MoveBuggy@mL+1,GreenInstructions@mL+1
  4337   000EAA  C039  F029         	movff	MoveBuggy@mR,GreenInstructions@mR
  4338   000EAE  C03A  F02A         	movff	MoveBuggy@mR+1,GreenInstructions@mR+1
  4339   000EB2  ECA2  F011         	call	_GreenInstructions	;wreg free
  4340   000EB6                     
  4341                           ;color_instructions.c: 191:         if(LATDbits.LATD7 != 1){
  4342   000EB6  BE7C               	btfsc	124,7,c	;volatile
  4343   000EB8  EF60  F007         	goto	u2541
  4344   000EBC  EF62  F007         	goto	u2540
  4345   000EC0                     u2541:
  4346   000EC0  EF61  F008         	goto	l677
  4347   000EC4                     u2540:
  4348   000EC4                     
  4349                           ;color_instructions.c: 192:             AppendMoves(1,&moves_index,anti_moves_array);
  4350   000EC4  0E56               	movlw	low _moves_index
  4351   000EC6  6E09               	movwf	AppendMoves@moves_index^0,c
  4352   000EC8  0E00               	movlw	high _moves_index
  4353   000ECA  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4354   000ECC  0E75               	movlw	low _anti_moves_array
  4355   000ECE  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4356   000ED0  0E00               	movlw	high _anti_moves_array
  4357   000ED2  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4358   000ED4  0E01               	movlw	1
  4359   000ED6  EC7B  F014         	call	_AppendMoves
  4360   000EDA  EF61  F008         	goto	l677
  4361   000EDE                     l3243:
  4362   000EDE  0E03               	movlw	3
  4363   000EE0  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4364   000EE2  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4365   000EE4  A4D8               	btfss	status,2,c
  4366   000EE6  EF77  F007         	goto	u2551
  4367   000EEA  EF79  F007         	goto	u2550
  4368   000EEE                     u2551:
  4369   000EEE  EF97  F007         	goto	l3251
  4370   000EF2                     u2550:
  4371   000EF2                     
  4372                           ;color_instructions.c: 196:         BlueInstructions(mL, mR);
  4373   000EF2  C037  F027         	movff	MoveBuggy@mL,BlueInstructions@mL
  4374   000EF6  C038  F028         	movff	MoveBuggy@mL+1,BlueInstructions@mL+1
  4375   000EFA  C039  F029         	movff	MoveBuggy@mR,BlueInstructions@mR
  4376   000EFE  C03A  F02A         	movff	MoveBuggy@mR+1,BlueInstructions@mR+1
  4377   000F02  EC04  F00F         	call	_BlueInstructions	;wreg free
  4378   000F06                     
  4379                           ;color_instructions.c: 197:         if(LATDbits.LATD7 != 1){
  4380   000F06  BE7C               	btfsc	124,7,c	;volatile
  4381   000F08  EF88  F007         	goto	u2561
  4382   000F0C  EF8A  F007         	goto	u2560
  4383   000F10                     u2561:
  4384   000F10  EF61  F008         	goto	l677
  4385   000F14                     u2560:
  4386   000F14                     
  4387                           ;color_instructions.c: 198:             AppendMoves(3,&moves_index,anti_moves_array);
  4388   000F14  0E56               	movlw	low _moves_index
  4389   000F16  6E09               	movwf	AppendMoves@moves_index^0,c
  4390   000F18  0E00               	movlw	high _moves_index
  4391   000F1A  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4392   000F1C  0E75               	movlw	low _anti_moves_array
  4393   000F1E  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4394   000F20  0E00               	movlw	high _anti_moves_array
  4395   000F22  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4396   000F24  0E03               	movlw	3
  4397   000F26  EC7B  F014         	call	_AppendMoves
  4398   000F2A  EF61  F008         	goto	l677
  4399   000F2E                     l3251:
  4400   000F2E  0E04               	movlw	4
  4401   000F30  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4402   000F32  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4403   000F34  A4D8               	btfss	status,2,c
  4404   000F36  EF9F  F007         	goto	u2571
  4405   000F3A  EFA1  F007         	goto	u2570
  4406   000F3E                     u2571:
  4407   000F3E  EFBF  F007         	goto	l3259
  4408   000F42                     u2570:
  4409   000F42                     
  4410                           ;color_instructions.c: 202:         YellowInstructions(mL, mR);
  4411   000F42  C037  F027         	movff	MoveBuggy@mL,YellowInstructions@mL
  4412   000F46  C038  F028         	movff	MoveBuggy@mL+1,YellowInstructions@mL+1
  4413   000F4A  C039  F029         	movff	MoveBuggy@mR,YellowInstructions@mR
  4414   000F4E  C03A  F02A         	movff	MoveBuggy@mR+1,YellowInstructions@mR+1
  4415   000F52  EC53  F010         	call	_YellowInstructions	;wreg free
  4416   000F56                     
  4417                           ;color_instructions.c: 204:         if(LATDbits.LATD7 != 1){
  4418   000F56  BE7C               	btfsc	124,7,c	;volatile
  4419   000F58  EFB0  F007         	goto	u2581
  4420   000F5C  EFB2  F007         	goto	u2580
  4421   000F60                     u2581:
  4422   000F60  EF61  F008         	goto	l677
  4423   000F64                     u2580:
  4424   000F64                     
  4425                           ;color_instructions.c: 205:             AppendMoves(9,&moves_index,anti_moves_array);
  4426   000F64  0E56               	movlw	low _moves_index
  4427   000F66  6E09               	movwf	AppendMoves@moves_index^0,c
  4428   000F68  0E00               	movlw	high _moves_index
  4429   000F6A  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4430   000F6C  0E75               	movlw	low _anti_moves_array
  4431   000F6E  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4432   000F70  0E00               	movlw	high _anti_moves_array
  4433   000F72  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4434   000F74  0E09               	movlw	9
  4435   000F76  EC7B  F014         	call	_AppendMoves
  4436   000F7A  EF61  F008         	goto	l677
  4437   000F7E                     l3259:
  4438   000F7E  0E05               	movlw	5
  4439   000F80  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4440   000F82  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4441   000F84  A4D8               	btfss	status,2,c
  4442   000F86  EFC7  F007         	goto	u2591
  4443   000F8A  EFC9  F007         	goto	u2590
  4444   000F8E                     u2591:
  4445   000F8E  EFE7  F007         	goto	l3267
  4446   000F92                     u2590:
  4447   000F92                     
  4448                           ;color_instructions.c: 209:         PinkInstructions(mL, mR);
  4449   000F92  C037  F027         	movff	MoveBuggy@mL,PinkInstructions@mL
  4450   000F96  C038  F028         	movff	MoveBuggy@mL+1,PinkInstructions@mL+1
  4451   000F9A  C039  F029         	movff	MoveBuggy@mR,PinkInstructions@mR
  4452   000F9E  C03A  F02A         	movff	MoveBuggy@mR+1,PinkInstructions@mR+1
  4453   000FA2  ECD9  F010         	call	_PinkInstructions	;wreg free
  4454   000FA6                     
  4455                           ;color_instructions.c: 211:         if(LATDbits.LATD7 != 1){
  4456   000FA6  BE7C               	btfsc	124,7,c	;volatile
  4457   000FA8  EFD8  F007         	goto	u2601
  4458   000FAC  EFDA  F007         	goto	u2600
  4459   000FB0                     u2601:
  4460   000FB0  EF61  F008         	goto	l677
  4461   000FB4                     u2600:
  4462   000FB4                     
  4463                           ;color_instructions.c: 212:             AppendMoves(10,&moves_index,anti_moves_array);
  4464   000FB4  0E56               	movlw	low _moves_index
  4465   000FB6  6E09               	movwf	AppendMoves@moves_index^0,c
  4466   000FB8  0E00               	movlw	high _moves_index
  4467   000FBA  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4468   000FBC  0E75               	movlw	low _anti_moves_array
  4469   000FBE  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4470   000FC0  0E00               	movlw	high _anti_moves_array
  4471   000FC2  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4472   000FC4  0E0A               	movlw	10
  4473   000FC6  EC7B  F014         	call	_AppendMoves
  4474   000FCA  EF61  F008         	goto	l677
  4475   000FCE                     l3267:
  4476   000FCE  0E06               	movlw	6
  4477   000FD0  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4478   000FD2  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4479   000FD4  A4D8               	btfss	status,2,c
  4480   000FD6  EFEF  F007         	goto	u2611
  4481   000FDA  EFF1  F007         	goto	u2610
  4482   000FDE                     u2611:
  4483   000FDE  EF0F  F008         	goto	l3275
  4484   000FE2                     u2610:
  4485   000FE2                     
  4486                           ;color_instructions.c: 216:         OrangeInstructions(mL, mR);
  4487   000FE2  C037  F027         	movff	MoveBuggy@mL,OrangeInstructions@mL
  4488   000FE6  C038  F028         	movff	MoveBuggy@mL+1,OrangeInstructions@mL+1
  4489   000FEA  C039  F029         	movff	MoveBuggy@mR,OrangeInstructions@mR
  4490   000FEE  C03A  F02A         	movff	MoveBuggy@mR+1,OrangeInstructions@mR+1
  4491   000FF2  EC1C  F011         	call	_OrangeInstructions	;wreg free
  4492   000FF6                     
  4493                           ;color_instructions.c: 217:         if(LATDbits.LATD7 != 1){
  4494   000FF6  BE7C               	btfsc	124,7,c	;volatile
  4495   000FF8  EF00  F008         	goto	u2621
  4496   000FFC  EF02  F008         	goto	u2620
  4497   001000                     u2621:
  4498   001000  EF61  F008         	goto	l677
  4499   001004                     u2620:
  4500   001004                     
  4501                           ;color_instructions.c: 218:             AppendMoves(7,&moves_index,anti_moves_array);
  4502   001004  0E56               	movlw	low _moves_index
  4503   001006  6E09               	movwf	AppendMoves@moves_index^0,c
  4504   001008  0E00               	movlw	high _moves_index
  4505   00100A  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4506   00100C  0E75               	movlw	low _anti_moves_array
  4507   00100E  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4508   001010  0E00               	movlw	high _anti_moves_array
  4509   001012  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4510   001014  0E07               	movlw	7
  4511   001016  EC7B  F014         	call	_AppendMoves
  4512   00101A  EF61  F008         	goto	l677
  4513   00101E                     l3275:
  4514   00101E  0E07               	movlw	7
  4515   001020  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4516   001022  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4517   001024  A4D8               	btfss	status,2,c
  4518   001026  EF17  F008         	goto	u2631
  4519   00102A  EF19  F008         	goto	u2630
  4520   00102E                     u2631:
  4521   00102E  EF37  F008         	goto	l3283
  4522   001032                     u2630:
  4523   001032                     
  4524                           ;color_instructions.c: 222:         LightBlueInstructions(mL, mR);
  4525   001032  C037  F027         	movff	MoveBuggy@mL,LightBlueInstructions@mL
  4526   001036  C038  F028         	movff	MoveBuggy@mL+1,LightBlueInstructions@mL+1
  4527   00103A  C039  F029         	movff	MoveBuggy@mR,LightBlueInstructions@mR
  4528   00103E  C03A  F02A         	movff	MoveBuggy@mR+1,LightBlueInstructions@mR+1
  4529   001042  EC5F  F011         	call	_LightBlueInstructions	;wreg free
  4530   001046                     
  4531                           ;color_instructions.c: 223:         if(LATDbits.LATD7 != 1){
  4532   001046  BE7C               	btfsc	124,7,c	;volatile
  4533   001048  EF28  F008         	goto	u2641
  4534   00104C  EF2A  F008         	goto	u2640
  4535   001050                     u2641:
  4536   001050  EF61  F008         	goto	l677
  4537   001054                     u2640:
  4538   001054                     
  4539                           ;color_instructions.c: 224:             AppendMoves(6,&moves_index,anti_moves_array);
  4540   001054  0E56               	movlw	low _moves_index
  4541   001056  6E09               	movwf	AppendMoves@moves_index^0,c
  4542   001058  0E00               	movlw	high _moves_index
  4543   00105A  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4544   00105C  0E75               	movlw	low _anti_moves_array
  4545   00105E  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4546   001060  0E00               	movlw	high _anti_moves_array
  4547   001062  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4548   001064  0E06               	movlw	6
  4549   001066  EC7B  F014         	call	_AppendMoves
  4550   00106A  EF61  F008         	goto	l677
  4551   00106E                     l3283:
  4552   00106E  0E09               	movlw	9
  4553   001070  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4554   001072  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4555   001074  A4D8               	btfss	status,2,c
  4556   001076  EF3F  F008         	goto	u2651
  4557   00107A  EF41  F008         	goto	u2650
  4558   00107E                     u2651:
  4559   00107E  EF4D  F008         	goto	l3287
  4560   001082                     u2650:
  4561   001082                     
  4562                           ;color_instructions.c: 230:         AntiYellow(mL, mR);
  4563   001082  C037  F02E         	movff	MoveBuggy@mL,AntiYellow@mL
  4564   001086  C038  F02F         	movff	MoveBuggy@mL+1,AntiYellow@mL+1
  4565   00108A  C039  F030         	movff	MoveBuggy@mR,AntiYellow@mR
  4566   00108E  C03A  F031         	movff	MoveBuggy@mR+1,AntiYellow@mR+1
  4567   001092  EC52  F00E         	call	_AntiYellow	;wreg free
  4568                           
  4569                           ;color_instructions.c: 231:     }
  4570   001096  EF61  F008         	goto	l677
  4571   00109A                     l3287:
  4572   00109A  0E0A               	movlw	10
  4573   00109C  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4574   00109E  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4575   0010A0  A4D8               	btfss	status,2,c
  4576   0010A2  EF55  F008         	goto	u2661
  4577   0010A6  EF57  F008         	goto	u2660
  4578   0010AA                     u2661:
  4579   0010AA  EF61  F008         	goto	l677
  4580   0010AE                     u2660:
  4581   0010AE                     
  4582                           ;color_instructions.c: 233:         AntiPink(mL, mR);
  4583   0010AE  C037  F02E         	movff	MoveBuggy@mL,AntiPink@mL
  4584   0010B2  C038  F02F         	movff	MoveBuggy@mL+1,AntiPink@mL+1
  4585   0010B6  C039  F030         	movff	MoveBuggy@mR,AntiPink@mR
  4586   0010BA  C03A  F031         	movff	MoveBuggy@mR+1,AntiPink@mR+1
  4587   0010BE  ECAB  F00E         	call	_AntiPink	;wreg free
  4588   0010C2                     l677:
  4589   0010C2  0012               	return		;funcret
  4590   0010C4                     __end_of_MoveBuggy:
  4591                           	callstack 0
  4592                           
  4593 ;; *************** function _YellowInstructions *****************
  4594 ;; Defined at:
  4595 ;;		line 58 in file "color_instructions.c"
  4596 ;; Parameters:    Size  Location     Type
  4597 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  4598 ;;		 -> main@motorL(9), 
  4599 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  4600 ;;		 -> main@motorR(9), 
  4601 ;; Auto vars:     Size  Location     Type
  4602 ;;  a               1   44[COMRAM] unsigned char 
  4603 ;; Return value:  Size  Location     Type
  4604 ;;                  1    wreg      void 
  4605 ;; Registers used:
  4606 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4607 ;; Tracked objects:
  4608 ;;		On entry : 0/0
  4609 ;;		On exit  : 0/0
  4610 ;;		Unchanged: 0/0
  4611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4612 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4613 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4614 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4615 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4616 ;;Total ram usage:        7 bytes
  4617 ;; Hardware stack levels used: 1
  4618 ;; Hardware stack levels required when called: 11
  4619 ;; This function calls:
  4620 ;;		_fullSpeedBackwards
  4621 ;;		_stop
  4622 ;;		_turnRight90
  4623 ;; This function is called by:
  4624 ;;		_MoveBuggy
  4625 ;; This function uses a non-reentrant model
  4626 ;;
  4627                           
  4628                           	psect	text14
  4629   0020A6                     __ptext14:
  4630                           	callstack 0
  4631   0020A6                     _YellowInstructions:
  4632                           	callstack 17
  4633   0020A6                     
  4634                           ;color_instructions.c: 60:     unsigned char a=0;
  4635   0020A6  0E00               	movlw	0
  4636   0020A8  6E2D               	movwf	YellowInstructions@a^0,c
  4637                           
  4638                           ;color_instructions.c: 61:     while (a<40){
  4639   0020AA  EF62  F010         	goto	l3075
  4640   0020AE                     l3071:
  4641                           
  4642                           ;color_instructions.c: 62:         fullSpeedBackwards(mL, mR);
  4643   0020AE  C027  F01C         	movff	YellowInstructions@mL,fullSpeedBackwards@mL
  4644   0020B2  C028  F01D         	movff	YellowInstructions@mL+1,fullSpeedBackwards@mL+1
  4645   0020B6  C029  F01E         	movff	YellowInstructions@mR,fullSpeedBackwards@mR
  4646   0020BA  C02A  F01F         	movff	YellowInstructions@mR+1,fullSpeedBackwards@mR+1
  4647   0020BE  ECFC  F00C         	call	_fullSpeedBackwards	;wreg free
  4648   0020C2                     
  4649                           ;color_instructions.c: 63:         a++;
  4650   0020C2  2A2D               	incf	YellowInstructions@a^0,f,c
  4651   0020C4                     l3075:
  4652                           
  4653                           ;color_instructions.c: 61:     while (a<40){
  4654   0020C4  0E27               	movlw	39
  4655   0020C6  642D               	cpfsgt	YellowInstructions@a^0,c
  4656   0020C8  EF68  F010         	goto	u2391
  4657   0020CC  EF6A  F010         	goto	u2390
  4658   0020D0                     u2391:
  4659   0020D0  EF57  F010         	goto	l3071
  4660   0020D4                     u2390:
  4661   0020D4  EF77  F010         	goto	l3081
  4662   0020D8                     l3077:
  4663                           
  4664                           ;color_instructions.c: 66:         stop(mL, mR);
  4665   0020D8  C027  F01C         	movff	YellowInstructions@mL,stop@mL
  4666   0020DC  C028  F01D         	movff	YellowInstructions@mL+1,stop@mL+1
  4667   0020E0  C029  F01E         	movff	YellowInstructions@mR,stop@mR
  4668   0020E4  C02A  F01F         	movff	YellowInstructions@mR+1,stop@mR+1
  4669   0020E8  ECE8  F00D         	call	_stop	;wreg free
  4670   0020EC                     
  4671                           ;color_instructions.c: 67:         a--;
  4672   0020EC  062D               	decf	YellowInstructions@a^0,f,c
  4673   0020EE                     l3081:
  4674                           
  4675                           ;color_instructions.c: 65:     while (a>0){
  4676   0020EE  502D               	movf	YellowInstructions@a^0,w,c
  4677   0020F0  A4D8               	btfss	status,2,c
  4678   0020F2  EF7D  F010         	goto	u2401
  4679   0020F6  EF7F  F010         	goto	u2400
  4680   0020FA                     u2401:
  4681   0020FA  EF6C  F010         	goto	l3077
  4682   0020FE                     u2400:
  4683   0020FE                     
  4684                           ;color_instructions.c: 69:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4685   0020FE  0E05               	movlw	5
  4686   002100  6E2C               	movwf	(??_YellowInstructions+1)^0,c
  4687   002102  0E0F               	movlw	15
  4688   002104  6E2B               	movwf	??_YellowInstructions^0,c
  4689   002106  0EF1               	movlw	241
  4690   002108                     u4587:
  4691   002108  2EE8               	decfsz	wreg,f,c
  4692   00210A  D7FE               	bra	u4587
  4693   00210C  2E2B               	decfsz	??_YellowInstructions^0,f,c
  4694   00210E  D7FC               	bra	u4587
  4695   002110  2E2C               	decfsz	(??_YellowInstructions+1)^0,f,c
  4696   002112  D7FA               	bra	u4587
  4697   002114  F000               	nop	
  4698   002116                     
  4699                           ;color_instructions.c: 70:     turnRight90(mL, mR);
  4700   002116  C027  F022         	movff	YellowInstructions@mL,turnRight90@mL
  4701   00211A  C028  F023         	movff	YellowInstructions@mL+1,turnRight90@mL+1
  4702   00211E  C029  F024         	movff	YellowInstructions@mR,turnRight90@mR
  4703   002122  C02A  F025         	movff	YellowInstructions@mR+1,turnRight90@mR+1
  4704   002126  EC5D  F00F         	call	_turnRight90	;wreg free
  4705   00212A  0012               	return		;funcret
  4706   00212C                     __end_of_YellowInstructions:
  4707                           	callstack 0
  4708                           
  4709 ;; *************** function _RedInstructions *****************
  4710 ;; Defined at:
  4711 ;;		line 10 in file "color_instructions.c"
  4712 ;; Parameters:    Size  Location     Type
  4713 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  4714 ;;		 -> main@motorL(9), 
  4715 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  4716 ;;		 -> main@motorR(9), 
  4717 ;; Auto vars:     Size  Location     Type
  4718 ;;  a               1   44[COMRAM] unsigned char 
  4719 ;; Return value:  Size  Location     Type
  4720 ;;                  1    wreg      void 
  4721 ;; Registers used:
  4722 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4723 ;; Tracked objects:
  4724 ;;		On entry : 0/0
  4725 ;;		On exit  : 0/0
  4726 ;;		Unchanged: 0/0
  4727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4728 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4729 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4730 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4731 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4732 ;;Total ram usage:        7 bytes
  4733 ;; Hardware stack levels used: 1
  4734 ;; Hardware stack levels required when called: 11
  4735 ;; This function calls:
  4736 ;;		_fullSpeedBackwards
  4737 ;;		_stop
  4738 ;;		_turnRight90
  4739 ;; This function is called by:
  4740 ;;		_MoveBuggy
  4741 ;; This function uses a non-reentrant model
  4742 ;;
  4743                           
  4744                           	psect	text15
  4745   00212C                     __ptext15:
  4746                           	callstack 0
  4747   00212C                     _RedInstructions:
  4748                           	callstack 17
  4749   00212C                     
  4750                           ;color_instructions.c: 12:     unsigned char a=0;
  4751   00212C  0E00               	movlw	0
  4752   00212E  6E2D               	movwf	RedInstructions@a^0,c
  4753                           
  4754                           ;color_instructions.c: 13:     while (a<16){
  4755   002130  EFA5  F010         	goto	l3039
  4756   002134                     l3035:
  4757                           
  4758                           ;color_instructions.c: 14:         fullSpeedBackwards(mL, mR);
  4759   002134  C027  F01C         	movff	RedInstructions@mL,fullSpeedBackwards@mL
  4760   002138  C028  F01D         	movff	RedInstructions@mL+1,fullSpeedBackwards@mL+1
  4761   00213C  C029  F01E         	movff	RedInstructions@mR,fullSpeedBackwards@mR
  4762   002140  C02A  F01F         	movff	RedInstructions@mR+1,fullSpeedBackwards@mR+1
  4763   002144  ECFC  F00C         	call	_fullSpeedBackwards	;wreg free
  4764   002148                     
  4765                           ;color_instructions.c: 15:         a++;
  4766   002148  2A2D               	incf	RedInstructions@a^0,f,c
  4767   00214A                     l3039:
  4768                           
  4769                           ;color_instructions.c: 13:     while (a<16){
  4770   00214A  0E0F               	movlw	15
  4771   00214C  642D               	cpfsgt	RedInstructions@a^0,c
  4772   00214E  EFAB  F010         	goto	u2351
  4773   002152  EFAD  F010         	goto	u2350
  4774   002156                     u2351:
  4775   002156  EF9A  F010         	goto	l3035
  4776   00215A                     u2350:
  4777   00215A  EFBA  F010         	goto	l3045
  4778   00215E                     l3041:
  4779                           
  4780                           ;color_instructions.c: 18:         stop(mL, mR);
  4781   00215E  C027  F01C         	movff	RedInstructions@mL,stop@mL
  4782   002162  C028  F01D         	movff	RedInstructions@mL+1,stop@mL+1
  4783   002166  C029  F01E         	movff	RedInstructions@mR,stop@mR
  4784   00216A  C02A  F01F         	movff	RedInstructions@mR+1,stop@mR+1
  4785   00216E  ECE8  F00D         	call	_stop	;wreg free
  4786   002172                     
  4787                           ;color_instructions.c: 19:         a--;
  4788   002172  062D               	decf	RedInstructions@a^0,f,c
  4789   002174                     l3045:
  4790                           
  4791                           ;color_instructions.c: 17:     while (a>0){
  4792   002174  502D               	movf	RedInstructions@a^0,w,c
  4793   002176  A4D8               	btfss	status,2,c
  4794   002178  EFC0  F010         	goto	u2361
  4795   00217C  EFC2  F010         	goto	u2360
  4796   002180                     u2361:
  4797   002180  EFAF  F010         	goto	l3041
  4798   002184                     u2360:
  4799   002184                     
  4800                           ;color_instructions.c: 21:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4801   002184  0E05               	movlw	5
  4802   002186  6E2C               	movwf	(??_RedInstructions+1)^0,c
  4803   002188  0E0F               	movlw	15
  4804   00218A  6E2B               	movwf	??_RedInstructions^0,c
  4805   00218C  0EF1               	movlw	241
  4806   00218E                     u4597:
  4807   00218E  2EE8               	decfsz	wreg,f,c
  4808   002190  D7FE               	bra	u4597
  4809   002192  2E2B               	decfsz	??_RedInstructions^0,f,c
  4810   002194  D7FC               	bra	u4597
  4811   002196  2E2C               	decfsz	(??_RedInstructions+1)^0,f,c
  4812   002198  D7FA               	bra	u4597
  4813   00219A  F000               	nop	
  4814   00219C                     
  4815                           ;color_instructions.c: 22:     turnRight90(mL, mR);
  4816   00219C  C027  F022         	movff	RedInstructions@mL,turnRight90@mL
  4817   0021A0  C028  F023         	movff	RedInstructions@mL+1,turnRight90@mL+1
  4818   0021A4  C029  F024         	movff	RedInstructions@mR,turnRight90@mR
  4819   0021A8  C02A  F025         	movff	RedInstructions@mR+1,turnRight90@mR+1
  4820   0021AC  EC5D  F00F         	call	_turnRight90	;wreg free
  4821   0021B0  0012               	return		;funcret
  4822   0021B2                     __end_of_RedInstructions:
  4823                           	callstack 0
  4824                           
  4825 ;; *************** function _PinkInstructions *****************
  4826 ;; Defined at:
  4827 ;;		line 73 in file "color_instructions.c"
  4828 ;; Parameters:    Size  Location     Type
  4829 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  4830 ;;		 -> main@motorL(9), 
  4831 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  4832 ;;		 -> main@motorR(9), 
  4833 ;; Auto vars:     Size  Location     Type
  4834 ;;  a               1   44[COMRAM] unsigned char 
  4835 ;; Return value:  Size  Location     Type
  4836 ;;                  1    wreg      void 
  4837 ;; Registers used:
  4838 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4839 ;; Tracked objects:
  4840 ;;		On entry : 0/0
  4841 ;;		On exit  : 0/0
  4842 ;;		Unchanged: 0/0
  4843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4844 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4845 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4846 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4847 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4848 ;;Total ram usage:        7 bytes
  4849 ;; Hardware stack levels used: 1
  4850 ;; Hardware stack levels required when called: 11
  4851 ;; This function calls:
  4852 ;;		_fullSpeedBackwards
  4853 ;;		_stop
  4854 ;;		_turnLeft90
  4855 ;; This function is called by:
  4856 ;;		_MoveBuggy
  4857 ;; This function uses a non-reentrant model
  4858 ;;
  4859                           
  4860                           	psect	text16
  4861   0021B2                     __ptext16:
  4862                           	callstack 0
  4863   0021B2                     _PinkInstructions:
  4864                           	callstack 17
  4865   0021B2                     
  4866                           ;color_instructions.c: 74:     unsigned char a=0;
  4867   0021B2  0E00               	movlw	0
  4868   0021B4  6E2D               	movwf	PinkInstructions@a^0,c
  4869                           
  4870                           ;color_instructions.c: 75:     while (a<40){
  4871   0021B6  EFE8  F010         	goto	l3093
  4872   0021BA                     l3089:
  4873                           
  4874                           ;color_instructions.c: 76:         fullSpeedBackwards(mL, mR);
  4875   0021BA  C027  F01C         	movff	PinkInstructions@mL,fullSpeedBackwards@mL
  4876   0021BE  C028  F01D         	movff	PinkInstructions@mL+1,fullSpeedBackwards@mL+1
  4877   0021C2  C029  F01E         	movff	PinkInstructions@mR,fullSpeedBackwards@mR
  4878   0021C6  C02A  F01F         	movff	PinkInstructions@mR+1,fullSpeedBackwards@mR+1
  4879   0021CA  ECFC  F00C         	call	_fullSpeedBackwards	;wreg free
  4880   0021CE                     
  4881                           ;color_instructions.c: 77:         a++;
  4882   0021CE  2A2D               	incf	PinkInstructions@a^0,f,c
  4883   0021D0                     l3093:
  4884                           
  4885                           ;color_instructions.c: 75:     while (a<40){
  4886   0021D0  0E27               	movlw	39
  4887   0021D2  642D               	cpfsgt	PinkInstructions@a^0,c
  4888   0021D4  EFEE  F010         	goto	u2411
  4889   0021D8  EFF0  F010         	goto	u2410
  4890   0021DC                     u2411:
  4891   0021DC  EFDD  F010         	goto	l3089
  4892   0021E0                     u2410:
  4893   0021E0  EFFD  F010         	goto	l3099
  4894   0021E4                     l3095:
  4895                           
  4896                           ;color_instructions.c: 80:         stop(mL, mR);
  4897   0021E4  C027  F01C         	movff	PinkInstructions@mL,stop@mL
  4898   0021E8  C028  F01D         	movff	PinkInstructions@mL+1,stop@mL+1
  4899   0021EC  C029  F01E         	movff	PinkInstructions@mR,stop@mR
  4900   0021F0  C02A  F01F         	movff	PinkInstructions@mR+1,stop@mR+1
  4901   0021F4  ECE8  F00D         	call	_stop	;wreg free
  4902   0021F8                     
  4903                           ;color_instructions.c: 81:         a--;
  4904   0021F8  062D               	decf	PinkInstructions@a^0,f,c
  4905   0021FA                     l3099:
  4906                           
  4907                           ;color_instructions.c: 79:     while (a>0){
  4908   0021FA  502D               	movf	PinkInstructions@a^0,w,c
  4909   0021FC  A4D8               	btfss	status,2,c
  4910   0021FE  EF03  F011         	goto	u2421
  4911   002202  EF05  F011         	goto	u2420
  4912   002206                     u2421:
  4913   002206  EFF2  F010         	goto	l3095
  4914   00220A                     u2420:
  4915   00220A                     
  4916                           ;color_instructions.c: 83:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4917   00220A  0E05               	movlw	5
  4918   00220C  6E2C               	movwf	(??_PinkInstructions+1)^0,c
  4919   00220E  0E0F               	movlw	15
  4920   002210  6E2B               	movwf	??_PinkInstructions^0,c
  4921   002212  0EF1               	movlw	241
  4922   002214                     u4607:
  4923   002214  2EE8               	decfsz	wreg,f,c
  4924   002216  D7FE               	bra	u4607
  4925   002218  2E2B               	decfsz	??_PinkInstructions^0,f,c
  4926   00221A  D7FC               	bra	u4607
  4927   00221C  2E2C               	decfsz	(??_PinkInstructions+1)^0,f,c
  4928   00221E  D7FA               	bra	u4607
  4929   002220  F000               	nop	
  4930   002222                     
  4931                           ;color_instructions.c: 84:     turnLeft90(mL, mR);
  4932   002222  C027  F022         	movff	PinkInstructions@mL,turnLeft90@mL
  4933   002226  C028  F023         	movff	PinkInstructions@mL+1,turnLeft90@mL+1
  4934   00222A  C029  F024         	movff	PinkInstructions@mR,turnLeft90@mR
  4935   00222E  C02A  F025         	movff	PinkInstructions@mR+1,turnLeft90@mR+1
  4936   002232  ECB4  F00F         	call	_turnLeft90	;wreg free
  4937   002236  0012               	return		;funcret
  4938   002238                     __end_of_PinkInstructions:
  4939                           	callstack 0
  4940                           
  4941 ;; *************** function _OrangeInstructions *****************
  4942 ;; Defined at:
  4943 ;;		line 88 in file "color_instructions.c"
  4944 ;; Parameters:    Size  Location     Type
  4945 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  4946 ;;		 -> main@motorL(9), 
  4947 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  4948 ;;		 -> main@motorR(9), 
  4949 ;; Auto vars:     Size  Location     Type
  4950 ;;  a               1   44[COMRAM] unsigned char 
  4951 ;; Return value:  Size  Location     Type
  4952 ;;                  1    wreg      void 
  4953 ;; Registers used:
  4954 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4955 ;; Tracked objects:
  4956 ;;		On entry : 0/0
  4957 ;;		On exit  : 0/0
  4958 ;;		Unchanged: 0/0
  4959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4960 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4961 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4962 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4963 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4964 ;;Total ram usage:        7 bytes
  4965 ;; Hardware stack levels used: 1
  4966 ;; Hardware stack levels required when called: 11
  4967 ;; This function calls:
  4968 ;;		_fullSpeedBackwards
  4969 ;;		_stop
  4970 ;;		_turnRight135
  4971 ;; This function is called by:
  4972 ;;		_MoveBuggy
  4973 ;; This function uses a non-reentrant model
  4974 ;;
  4975                           
  4976                           	psect	text17
  4977   002238                     __ptext17:
  4978                           	callstack 0
  4979   002238                     _OrangeInstructions:
  4980                           	callstack 17
  4981   002238                     
  4982                           ;color_instructions.c: 89:     unsigned char a=0;
  4983   002238  0E00               	movlw	0
  4984   00223A  6E2D               	movwf	OrangeInstructions@a^0,c
  4985                           
  4986                           ;color_instructions.c: 90:     while (a<16){
  4987   00223C  EF2B  F011         	goto	l3111
  4988   002240                     l3107:
  4989                           
  4990                           ;color_instructions.c: 91:         fullSpeedBackwards(mL, mR);
  4991   002240  C027  F01C         	movff	OrangeInstructions@mL,fullSpeedBackwards@mL
  4992   002244  C028  F01D         	movff	OrangeInstructions@mL+1,fullSpeedBackwards@mL+1
  4993   002248  C029  F01E         	movff	OrangeInstructions@mR,fullSpeedBackwards@mR
  4994   00224C  C02A  F01F         	movff	OrangeInstructions@mR+1,fullSpeedBackwards@mR+1
  4995   002250  ECFC  F00C         	call	_fullSpeedBackwards	;wreg free
  4996   002254                     
  4997                           ;color_instructions.c: 92:         a++;
  4998   002254  2A2D               	incf	OrangeInstructions@a^0,f,c
  4999   002256                     l3111:
  5000                           
  5001                           ;color_instructions.c: 90:     while (a<16){
  5002   002256  0E0F               	movlw	15
  5003   002258  642D               	cpfsgt	OrangeInstructions@a^0,c
  5004   00225A  EF31  F011         	goto	u2431
  5005   00225E  EF33  F011         	goto	u2430
  5006   002262                     u2431:
  5007   002262  EF20  F011         	goto	l3107
  5008   002266                     u2430:
  5009   002266  EF40  F011         	goto	l3117
  5010   00226A                     l3113:
  5011                           
  5012                           ;color_instructions.c: 95:         stop(mL, mR);
  5013   00226A  C027  F01C         	movff	OrangeInstructions@mL,stop@mL
  5014   00226E  C028  F01D         	movff	OrangeInstructions@mL+1,stop@mL+1
  5015   002272  C029  F01E         	movff	OrangeInstructions@mR,stop@mR
  5016   002276  C02A  F01F         	movff	OrangeInstructions@mR+1,stop@mR+1
  5017   00227A  ECE8  F00D         	call	_stop	;wreg free
  5018   00227E                     
  5019                           ;color_instructions.c: 96:         a--;
  5020   00227E  062D               	decf	OrangeInstructions@a^0,f,c
  5021   002280                     l3117:
  5022                           
  5023                           ;color_instructions.c: 94:     while (a>0){
  5024   002280  502D               	movf	OrangeInstructions@a^0,w,c
  5025   002282  A4D8               	btfss	status,2,c
  5026   002284  EF46  F011         	goto	u2441
  5027   002288  EF48  F011         	goto	u2440
  5028   00228C                     u2441:
  5029   00228C  EF35  F011         	goto	l3113
  5030   002290                     u2440:
  5031   002290                     
  5032                           ;color_instructions.c: 98:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5033   002290  0E05               	movlw	5
  5034   002292  6E2C               	movwf	(??_OrangeInstructions+1)^0,c
  5035   002294  0E0F               	movlw	15
  5036   002296  6E2B               	movwf	??_OrangeInstructions^0,c
  5037   002298  0EF1               	movlw	241
  5038   00229A                     u4617:
  5039   00229A  2EE8               	decfsz	wreg,f,c
  5040   00229C  D7FE               	bra	u4617
  5041   00229E  2E2B               	decfsz	??_OrangeInstructions^0,f,c
  5042   0022A0  D7FC               	bra	u4617
  5043   0022A2  2E2C               	decfsz	(??_OrangeInstructions+1)^0,f,c
  5044   0022A4  D7FA               	bra	u4617
  5045   0022A6  F000               	nop	
  5046   0022A8                     
  5047                           ;color_instructions.c: 100:     turnRight135(mL, mR);
  5048   0022A8  C027  F022         	movff	OrangeInstructions@mL,turnRight135@mL
  5049   0022AC  C028  F023         	movff	OrangeInstructions@mL+1,turnRight135@mL+1
  5050   0022B0  C029  F024         	movff	OrangeInstructions@mR,turnRight135@mR
  5051   0022B4  C02A  F025         	movff	OrangeInstructions@mR+1,turnRight135@mR+1
  5052   0022B8  EC4E  F012         	call	_turnRight135	;wreg free
  5053   0022BC  0012               	return		;funcret
  5054   0022BE                     __end_of_OrangeInstructions:
  5055                           	callstack 0
  5056                           
  5057 ;; *************** function _turnRight135 *****************
  5058 ;; Defined at:
  5059 ;;		line 256 in file "dc_motor.c"
  5060 ;; Parameters:    Size  Location     Type
  5061 ;;  mL              2   33[COMRAM] PTR struct DC_motor
  5062 ;;		 -> main@motorL(9), 
  5063 ;;  mR              2   35[COMRAM] PTR struct DC_motor
  5064 ;;		 -> main@motorR(9), 
  5065 ;; Auto vars:     Size  Location     Type
  5066 ;;  a               1   37[COMRAM] unsigned char 
  5067 ;; Return value:  Size  Location     Type
  5068 ;;                  1    wreg      void 
  5069 ;; Registers used:
  5070 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5071 ;; Tracked objects:
  5072 ;;		On entry : 0/0
  5073 ;;		On exit  : 0/0
  5074 ;;		Unchanged: 0/0
  5075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5076 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5077 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5079 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5080 ;;Total ram usage:        5 bytes
  5081 ;; Hardware stack levels used: 1
  5082 ;; Hardware stack levels required when called: 10
  5083 ;; This function calls:
  5084 ;;		_stop
  5085 ;;		_turnRight
  5086 ;; This function is called by:
  5087 ;;		_OrangeInstructions
  5088 ;; This function uses a non-reentrant model
  5089 ;;
  5090                           
  5091                           	psect	text18
  5092   00249C                     __ptext18:
  5093                           	callstack 0
  5094   00249C                     _turnRight135:
  5095                           	callstack 17
  5096   00249C                     
  5097                           ;dc_motor.c: 258:     unsigned char a=0;
  5098   00249C  0E00               	movlw	0
  5099   00249E  6E26               	movwf	turnRight135@a^0,c
  5100                           
  5101                           ;dc_motor.c: 259:     while(a<22){
  5102   0024A0  EF5D  F012         	goto	l2947
  5103   0024A4                     l2943:
  5104                           
  5105                           ;dc_motor.c: 260:         turnRight(mL, mR);
  5106   0024A4  C022  F01C         	movff	turnRight135@mL,turnRight@mL
  5107   0024A8  C023  F01D         	movff	turnRight135@mL+1,turnRight@mL+1
  5108   0024AC  C024  F01E         	movff	turnRight135@mR,turnRight@mR
  5109   0024B0  C025  F01F         	movff	turnRight135@mR+1,turnRight@mR+1
  5110   0024B4  EC97  F00B         	call	_turnRight	;wreg free
  5111   0024B8                     
  5112                           ;dc_motor.c: 261:         a++;
  5113   0024B8  2A26               	incf	turnRight135@a^0,f,c
  5114   0024BA                     l2947:
  5115                           
  5116                           ;dc_motor.c: 259:     while(a<22){
  5117   0024BA  0E15               	movlw	21
  5118   0024BC  6426               	cpfsgt	turnRight135@a^0,c
  5119   0024BE  EF63  F012         	goto	u2271
  5120   0024C2  EF65  F012         	goto	u2270
  5121   0024C6                     u2271:
  5122   0024C6  EF52  F012         	goto	l2943
  5123   0024CA                     u2270:
  5124   0024CA  EF72  F012         	goto	l2953
  5125   0024CE                     l2949:
  5126                           
  5127                           ;dc_motor.c: 264:         stop(mL, mR);
  5128   0024CE  C022  F01C         	movff	turnRight135@mL,stop@mL
  5129   0024D2  C023  F01D         	movff	turnRight135@mL+1,stop@mL+1
  5130   0024D6  C024  F01E         	movff	turnRight135@mR,stop@mR
  5131   0024DA  C025  F01F         	movff	turnRight135@mR+1,stop@mR+1
  5132   0024DE  ECE8  F00D         	call	_stop	;wreg free
  5133   0024E2                     
  5134                           ;dc_motor.c: 265:         a--;
  5135   0024E2  0626               	decf	turnRight135@a^0,f,c
  5136   0024E4                     l2953:
  5137                           
  5138                           ;dc_motor.c: 263:     while(a>0){
  5139   0024E4  5026               	movf	turnRight135@a^0,w,c
  5140   0024E6  A4D8               	btfss	status,2,c
  5141   0024E8  EF78  F012         	goto	u2281
  5142   0024EC  EF7A  F012         	goto	u2280
  5143   0024F0                     u2281:
  5144   0024F0  EF67  F012         	goto	l2949
  5145   0024F4                     u2280:
  5146   0024F4  0012               	return		;funcret
  5147   0024F6                     __end_of_turnRight135:
  5148                           	callstack 0
  5149                           
  5150 ;; *************** function _LightBlueInstructions *****************
  5151 ;; Defined at:
  5152 ;;		line 103 in file "color_instructions.c"
  5153 ;; Parameters:    Size  Location     Type
  5154 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  5155 ;;		 -> main@motorL(9), 
  5156 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  5157 ;;		 -> main@motorR(9), 
  5158 ;; Auto vars:     Size  Location     Type
  5159 ;;  a               1   44[COMRAM] unsigned char 
  5160 ;; Return value:  Size  Location     Type
  5161 ;;                  1    wreg      void 
  5162 ;; Registers used:
  5163 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5164 ;; Tracked objects:
  5165 ;;		On entry : 0/0
  5166 ;;		On exit  : 0/0
  5167 ;;		Unchanged: 0/0
  5168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5169 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5170 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5171 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5172 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5173 ;;Total ram usage:        7 bytes
  5174 ;; Hardware stack levels used: 1
  5175 ;; Hardware stack levels required when called: 11
  5176 ;; This function calls:
  5177 ;;		_fullSpeedBackwards
  5178 ;;		_stop
  5179 ;;		_turnLeft135
  5180 ;; This function is called by:
  5181 ;;		_MoveBuggy
  5182 ;; This function uses a non-reentrant model
  5183 ;;
  5184                           
  5185                           	psect	text19
  5186   0022BE                     __ptext19:
  5187                           	callstack 0
  5188   0022BE                     _LightBlueInstructions:
  5189                           	callstack 17
  5190   0022BE                     
  5191                           ;color_instructions.c: 104:     unsigned char a=0;
  5192   0022BE  0E00               	movlw	0
  5193   0022C0  6E2D               	movwf	LightBlueInstructions@a^0,c
  5194                           
  5195                           ;color_instructions.c: 105:     while (a<16){
  5196   0022C2  EF6E  F011         	goto	l3129
  5197   0022C6                     l3125:
  5198                           
  5199                           ;color_instructions.c: 106:         fullSpeedBackwards(mL, mR);
  5200   0022C6  C027  F01C         	movff	LightBlueInstructions@mL,fullSpeedBackwards@mL
  5201   0022CA  C028  F01D         	movff	LightBlueInstructions@mL+1,fullSpeedBackwards@mL+1
  5202   0022CE  C029  F01E         	movff	LightBlueInstructions@mR,fullSpeedBackwards@mR
  5203   0022D2  C02A  F01F         	movff	LightBlueInstructions@mR+1,fullSpeedBackwards@mR+1
  5204   0022D6  ECFC  F00C         	call	_fullSpeedBackwards	;wreg free
  5205   0022DA                     
  5206                           ;color_instructions.c: 107:         a++;
  5207   0022DA  2A2D               	incf	LightBlueInstructions@a^0,f,c
  5208   0022DC                     l3129:
  5209                           
  5210                           ;color_instructions.c: 105:     while (a<16){
  5211   0022DC  0E0F               	movlw	15
  5212   0022DE  642D               	cpfsgt	LightBlueInstructions@a^0,c
  5213   0022E0  EF74  F011         	goto	u2451
  5214   0022E4  EF76  F011         	goto	u2450
  5215   0022E8                     u2451:
  5216   0022E8  EF63  F011         	goto	l3125
  5217   0022EC                     u2450:
  5218   0022EC  EF83  F011         	goto	l3135
  5219   0022F0                     l3131:
  5220                           
  5221                           ;color_instructions.c: 110:         stop(mL, mR);
  5222   0022F0  C027  F01C         	movff	LightBlueInstructions@mL,stop@mL
  5223   0022F4  C028  F01D         	movff	LightBlueInstructions@mL+1,stop@mL+1
  5224   0022F8  C029  F01E         	movff	LightBlueInstructions@mR,stop@mR
  5225   0022FC  C02A  F01F         	movff	LightBlueInstructions@mR+1,stop@mR+1
  5226   002300  ECE8  F00D         	call	_stop	;wreg free
  5227   002304                     
  5228                           ;color_instructions.c: 111:         a--;
  5229   002304  062D               	decf	LightBlueInstructions@a^0,f,c
  5230   002306                     l3135:
  5231                           
  5232                           ;color_instructions.c: 109:     while (a>0){
  5233   002306  502D               	movf	LightBlueInstructions@a^0,w,c
  5234   002308  A4D8               	btfss	status,2,c
  5235   00230A  EF89  F011         	goto	u2461
  5236   00230E  EF8B  F011         	goto	u2460
  5237   002312                     u2461:
  5238   002312  EF78  F011         	goto	l3131
  5239   002316                     u2460:
  5240   002316                     
  5241                           ;color_instructions.c: 113:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5242   002316  0E05               	movlw	5
  5243   002318  6E2C               	movwf	(??_LightBlueInstructions+1)^0,c
  5244   00231A  0E0F               	movlw	15
  5245   00231C  6E2B               	movwf	??_LightBlueInstructions^0,c
  5246   00231E  0EF1               	movlw	241
  5247   002320                     u4627:
  5248   002320  2EE8               	decfsz	wreg,f,c
  5249   002322  D7FE               	bra	u4627
  5250   002324  2E2B               	decfsz	??_LightBlueInstructions^0,f,c
  5251   002326  D7FC               	bra	u4627
  5252   002328  2E2C               	decfsz	(??_LightBlueInstructions+1)^0,f,c
  5253   00232A  D7FA               	bra	u4627
  5254   00232C  F000               	nop	
  5255   00232E                     
  5256                           ;color_instructions.c: 115:     turnLeft135(mL, mR);
  5257   00232E  C027  F022         	movff	LightBlueInstructions@mL,turnLeft135@mL
  5258   002332  C028  F023         	movff	LightBlueInstructions@mL+1,turnLeft135@mL+1
  5259   002336  C029  F024         	movff	LightBlueInstructions@mR,turnLeft135@mR
  5260   00233A  C02A  F025         	movff	LightBlueInstructions@mR+1,turnLeft135@mR+1
  5261   00233E  EC7B  F012         	call	_turnLeft135	;wreg free
  5262   002342  0012               	return		;funcret
  5263   002344                     __end_of_LightBlueInstructions:
  5264                           	callstack 0
  5265                           
  5266 ;; *************** function _turnLeft135 *****************
  5267 ;; Defined at:
  5268 ;;		line 269 in file "dc_motor.c"
  5269 ;; Parameters:    Size  Location     Type
  5270 ;;  mL              2   33[COMRAM] PTR struct DC_motor
  5271 ;;		 -> main@motorL(9), 
  5272 ;;  mR              2   35[COMRAM] PTR struct DC_motor
  5273 ;;		 -> main@motorR(9), 
  5274 ;; Auto vars:     Size  Location     Type
  5275 ;;  a               1   37[COMRAM] unsigned char 
  5276 ;; Return value:  Size  Location     Type
  5277 ;;                  1    wreg      void 
  5278 ;; Registers used:
  5279 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5280 ;; Tracked objects:
  5281 ;;		On entry : 0/0
  5282 ;;		On exit  : 0/0
  5283 ;;		Unchanged: 0/0
  5284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5285 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5286 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5288 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5289 ;;Total ram usage:        5 bytes
  5290 ;; Hardware stack levels used: 1
  5291 ;; Hardware stack levels required when called: 10
  5292 ;; This function calls:
  5293 ;;		_stop
  5294 ;;		_turnLeft
  5295 ;; This function is called by:
  5296 ;;		_LightBlueInstructions
  5297 ;; This function uses a non-reentrant model
  5298 ;;
  5299                           
  5300                           	psect	text20
  5301   0024F6                     __ptext20:
  5302                           	callstack 0
  5303   0024F6                     _turnLeft135:
  5304                           	callstack 17
  5305   0024F6                     
  5306                           ;dc_motor.c: 271:     unsigned char a=0;
  5307   0024F6  0E00               	movlw	0
  5308   0024F8  6E26               	movwf	turnLeft135@a^0,c
  5309                           
  5310                           ;dc_motor.c: 272:     while(a<22){
  5311   0024FA  EF8A  F012         	goto	l2961
  5312   0024FE                     l2957:
  5313                           
  5314                           ;dc_motor.c: 273:         turnLeft(mL, mR);
  5315   0024FE  C022  F01C         	movff	turnLeft135@mL,turnLeft@mL
  5316   002502  C023  F01D         	movff	turnLeft135@mL+1,turnLeft@mL+1
  5317   002506  C024  F01E         	movff	turnLeft135@mR,turnLeft@mR
  5318   00250A  C025  F01F         	movff	turnLeft135@mR+1,turnLeft@mR+1
  5319   00250E  EC85  F00C         	call	_turnLeft	;wreg free
  5320   002512                     
  5321                           ;dc_motor.c: 274:         a++;
  5322   002512  2A26               	incf	turnLeft135@a^0,f,c
  5323   002514                     l2961:
  5324                           
  5325                           ;dc_motor.c: 272:     while(a<22){
  5326   002514  0E15               	movlw	21
  5327   002516  6426               	cpfsgt	turnLeft135@a^0,c
  5328   002518  EF90  F012         	goto	u2291
  5329   00251C  EF92  F012         	goto	u2290
  5330   002520                     u2291:
  5331   002520  EF7F  F012         	goto	l2957
  5332   002524                     u2290:
  5333   002524  EF9F  F012         	goto	l2967
  5334   002528                     l2963:
  5335                           
  5336                           ;dc_motor.c: 277:         stop(mL, mR);
  5337   002528  C022  F01C         	movff	turnLeft135@mL,stop@mL
  5338   00252C  C023  F01D         	movff	turnLeft135@mL+1,stop@mL+1
  5339   002530  C024  F01E         	movff	turnLeft135@mR,stop@mR
  5340   002534  C025  F01F         	movff	turnLeft135@mR+1,stop@mR+1
  5341   002538  ECE8  F00D         	call	_stop	;wreg free
  5342   00253C                     
  5343                           ;dc_motor.c: 278:         a--;
  5344   00253C  0626               	decf	turnLeft135@a^0,f,c
  5345   00253E                     l2967:
  5346                           
  5347                           ;dc_motor.c: 276:     while(a>0){
  5348   00253E  5026               	movf	turnLeft135@a^0,w,c
  5349   002540  A4D8               	btfss	status,2,c
  5350   002542  EFA5  F012         	goto	u2301
  5351   002546  EFA7  F012         	goto	u2300
  5352   00254A                     u2301:
  5353   00254A  EF94  F012         	goto	l2963
  5354   00254E                     u2300:
  5355   00254E  0012               	return		;funcret
  5356   002550                     __end_of_turnLeft135:
  5357                           	callstack 0
  5358                           
  5359 ;; *************** function _GreenInstructions *****************
  5360 ;; Defined at:
  5361 ;;		line 25 in file "color_instructions.c"
  5362 ;; Parameters:    Size  Location     Type
  5363 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  5364 ;;		 -> main@motorL(9), 
  5365 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  5366 ;;		 -> main@motorR(9), 
  5367 ;; Auto vars:     Size  Location     Type
  5368 ;;  a               1   44[COMRAM] unsigned char 
  5369 ;; Return value:  Size  Location     Type
  5370 ;;                  1    wreg      void 
  5371 ;; Registers used:
  5372 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5373 ;; Tracked objects:
  5374 ;;		On entry : 0/0
  5375 ;;		On exit  : 0/0
  5376 ;;		Unchanged: 0/0
  5377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5378 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5379 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5380 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5381 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5382 ;;Total ram usage:        7 bytes
  5383 ;; Hardware stack levels used: 1
  5384 ;; Hardware stack levels required when called: 11
  5385 ;; This function calls:
  5386 ;;		_fullSpeedBackwards
  5387 ;;		_stop
  5388 ;;		_turnLeft90
  5389 ;; This function is called by:
  5390 ;;		_MoveBuggy
  5391 ;; This function uses a non-reentrant model
  5392 ;;
  5393                           
  5394                           	psect	text21
  5395   002344                     __ptext21:
  5396                           	callstack 0
  5397   002344                     _GreenInstructions:
  5398                           	callstack 17
  5399   002344                     
  5400                           ;color_instructions.c: 26:     unsigned char a=0;
  5401   002344  0E00               	movlw	0
  5402   002346  6E2D               	movwf	GreenInstructions@a^0,c
  5403                           
  5404                           ;color_instructions.c: 27:     while (a<16){
  5405   002348  EFB1  F011         	goto	l3057
  5406   00234C                     l3053:
  5407                           
  5408                           ;color_instructions.c: 28:         fullSpeedBackwards(mL, mR);
  5409   00234C  C027  F01C         	movff	GreenInstructions@mL,fullSpeedBackwards@mL
  5410   002350  C028  F01D         	movff	GreenInstructions@mL+1,fullSpeedBackwards@mL+1
  5411   002354  C029  F01E         	movff	GreenInstructions@mR,fullSpeedBackwards@mR
  5412   002358  C02A  F01F         	movff	GreenInstructions@mR+1,fullSpeedBackwards@mR+1
  5413   00235C  ECFC  F00C         	call	_fullSpeedBackwards	;wreg free
  5414   002360                     
  5415                           ;color_instructions.c: 29:         a++;
  5416   002360  2A2D               	incf	GreenInstructions@a^0,f,c
  5417   002362                     l3057:
  5418                           
  5419                           ;color_instructions.c: 27:     while (a<16){
  5420   002362  0E0F               	movlw	15
  5421   002364  642D               	cpfsgt	GreenInstructions@a^0,c
  5422   002366  EFB7  F011         	goto	u2371
  5423   00236A  EFB9  F011         	goto	u2370
  5424   00236E                     u2371:
  5425   00236E  EFA6  F011         	goto	l3053
  5426   002372                     u2370:
  5427   002372  EFC6  F011         	goto	l3063
  5428   002376                     l3059:
  5429                           
  5430                           ;color_instructions.c: 32:         stop(mL, mR);
  5431   002376  C027  F01C         	movff	GreenInstructions@mL,stop@mL
  5432   00237A  C028  F01D         	movff	GreenInstructions@mL+1,stop@mL+1
  5433   00237E  C029  F01E         	movff	GreenInstructions@mR,stop@mR
  5434   002382  C02A  F01F         	movff	GreenInstructions@mR+1,stop@mR+1
  5435   002386  ECE8  F00D         	call	_stop	;wreg free
  5436   00238A                     
  5437                           ;color_instructions.c: 33:         a--;
  5438   00238A  062D               	decf	GreenInstructions@a^0,f,c
  5439   00238C                     l3063:
  5440                           
  5441                           ;color_instructions.c: 31:     while (a>0){
  5442   00238C  502D               	movf	GreenInstructions@a^0,w,c
  5443   00238E  A4D8               	btfss	status,2,c
  5444   002390  EFCC  F011         	goto	u2381
  5445   002394  EFCE  F011         	goto	u2380
  5446   002398                     u2381:
  5447   002398  EFBB  F011         	goto	l3059
  5448   00239C                     u2380:
  5449   00239C                     
  5450                           ;color_instructions.c: 35:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5451   00239C  0E05               	movlw	5
  5452   00239E  6E2C               	movwf	(??_GreenInstructions+1)^0,c
  5453   0023A0  0E0F               	movlw	15
  5454   0023A2  6E2B               	movwf	??_GreenInstructions^0,c
  5455   0023A4  0EF1               	movlw	241
  5456   0023A6                     u4637:
  5457   0023A6  2EE8               	decfsz	wreg,f,c
  5458   0023A8  D7FE               	bra	u4637
  5459   0023AA  2E2B               	decfsz	??_GreenInstructions^0,f,c
  5460   0023AC  D7FC               	bra	u4637
  5461   0023AE  2E2C               	decfsz	(??_GreenInstructions+1)^0,f,c
  5462   0023B0  D7FA               	bra	u4637
  5463   0023B2  F000               	nop	
  5464   0023B4                     
  5465                           ;color_instructions.c: 36:     turnLeft90(mL, mR);
  5466   0023B4  C027  F022         	movff	GreenInstructions@mL,turnLeft90@mL
  5467   0023B8  C028  F023         	movff	GreenInstructions@mL+1,turnLeft90@mL+1
  5468   0023BC  C029  F024         	movff	GreenInstructions@mR,turnLeft90@mR
  5469   0023C0  C02A  F025         	movff	GreenInstructions@mR+1,turnLeft90@mR+1
  5470   0023C4  ECB4  F00F         	call	_turnLeft90	;wreg free
  5471   0023C8  0012               	return		;funcret
  5472   0023CA                     __end_of_GreenInstructions:
  5473                           	callstack 0
  5474                           
  5475 ;; *************** function _AppendMoves *****************
  5476 ;; Defined at:
  5477 ;;		line 17 in file "Memorization.c"
  5478 ;; Parameters:    Size  Location     Type
  5479 ;;  temp            1    wreg     unsigned char 
  5480 ;;  moves_index     2    8[COMRAM] PTR unsigned char 
  5481 ;;		 -> moves_index(1), 
  5482 ;;  anti_moves_a    2   10[COMRAM] PTR unsigned char 
  5483 ;;		 -> anti_moves_array(40), 
  5484 ;; Auto vars:     Size  Location     Type
  5485 ;;  temp            1   13[COMRAM] unsigned char 
  5486 ;; Return value:  Size  Location     Type
  5487 ;;                  1    wreg      void 
  5488 ;; Registers used:
  5489 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5490 ;; Tracked objects:
  5491 ;;		On entry : 0/0
  5492 ;;		On exit  : 0/0
  5493 ;;		Unchanged: 0/0
  5494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5495 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5496 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5497 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5498 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5499 ;;Total ram usage:        6 bytes
  5500 ;; Hardware stack levels used: 1
  5501 ;; Hardware stack levels required when called: 7
  5502 ;; This function calls:
  5503 ;;		Nothing
  5504 ;; This function is called by:
  5505 ;;		_MoveBuggy
  5506 ;; This function uses a non-reentrant model
  5507 ;;
  5508                           
  5509                           	psect	text22
  5510   0028F6                     __ptext22:
  5511                           	callstack 0
  5512   0028F6                     _AppendMoves:
  5513                           	callstack 21
  5514                           
  5515                           ;incstack = 0
  5516                           ;AppendMoves@temp stored from wreg
  5517   0028F6  6E0E               	movwf	AppendMoves@temp^0,c
  5518   0028F8                     
  5519                           ;Memorization.c: 19:     anti_moves_array[(*moves_index)++] = temp;
  5520   0028F8  C009  FFD9         	movff	AppendMoves@moves_index,fsr2l
  5521   0028FC  C00A  FFDA         	movff	AppendMoves@moves_index+1,fsr2h
  5522   002900  CFDF F00D          	movff	indf2,??_AppendMoves
  5523   002904  0E01               	movlw	1
  5524   002906  26DF               	addwf	indf2,f,c
  5525   002908  500D               	movf	??_AppendMoves^0,w,c
  5526   00290A  240B               	addwf	AppendMoves@anti_moves_array^0,w,c
  5527   00290C  6ED9               	movwf	fsr2l,c
  5528   00290E  0E00               	movlw	0
  5529   002910  200C               	addwfc	(AppendMoves@anti_moves_array+1)^0,w,c
  5530   002912  6EDA               	movwf	fsr2h,c
  5531   002914  C00E  FFDF         	movff	AppendMoves@temp,indf2
  5532   002918  0012               	return		;funcret
  5533   00291A                     __end_of_AppendMoves:
  5534                           	callstack 0
  5535                           
  5536 ;; *************** function _AntiYellow *****************
  5537 ;; Defined at:
  5538 ;;		line 118 in file "color_instructions.c"
  5539 ;; Parameters:    Size  Location     Type
  5540 ;;  mL              2   45[COMRAM] PTR struct DC_motor
  5541 ;;		 -> main@motorL(9), 
  5542 ;;  mR              2   47[COMRAM] PTR struct DC_motor
  5543 ;;		 -> main@motorR(9), 
  5544 ;; Auto vars:     Size  Location     Type
  5545 ;;  a               1   51[COMRAM] unsigned char 
  5546 ;; Return value:  Size  Location     Type
  5547 ;;                  1    wreg      void 
  5548 ;; Registers used:
  5549 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5550 ;; Tracked objects:
  5551 ;;		On entry : 0/0
  5552 ;;		On exit  : 0/0
  5553 ;;		Unchanged: 0/0
  5554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5555 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5556 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5557 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5558 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5559 ;;Total ram usage:        7 bytes
  5560 ;; Hardware stack levels used: 1
  5561 ;; Hardware stack levels required when called: 12
  5562 ;; This function calls:
  5563 ;;		_BlueInstructions
  5564 ;;		_fullSpeedAhead
  5565 ;;		_stop
  5566 ;;		_turnRight90
  5567 ;; This function is called by:
  5568 ;;		_MoveBuggy
  5569 ;; This function uses a non-reentrant model
  5570 ;;
  5571                           
  5572                           	psect	text23
  5573   001CA4                     __ptext23:
  5574                           	callstack 0
  5575   001CA4                     _AntiYellow:
  5576                           	callstack 16
  5577   001CA4                     
  5578                           ;color_instructions.c: 119:     unsigned char a=0;
  5579   001CA4  0E00               	movlw	0
  5580   001CA6  6E34               	movwf	AntiYellow@a^0,c
  5581   001CA8                     
  5582                           ;color_instructions.c: 121:     turnRight90(mL, mR);
  5583   001CA8  C02E  F022         	movff	AntiYellow@mL,turnRight90@mL
  5584   001CAC  C02F  F023         	movff	AntiYellow@mL+1,turnRight90@mL+1
  5585   001CB0  C030  F024         	movff	AntiYellow@mR,turnRight90@mR
  5586   001CB4  C031  F025         	movff	AntiYellow@mR+1,turnRight90@mR+1
  5587   001CB8  EC5D  F00F         	call	_turnRight90	;wreg free
  5588   001CBC                     
  5589                           ;color_instructions.c: 122:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5590   001CBC  0E05               	movlw	5
  5591   001CBE  6E33               	movwf	(??_AntiYellow+1)^0,c
  5592   001CC0  0E0F               	movlw	15
  5593   001CC2  6E32               	movwf	??_AntiYellow^0,c
  5594   001CC4  0EF1               	movlw	241
  5595   001CC6                     u4647:
  5596   001CC6  2EE8               	decfsz	wreg,f,c
  5597   001CC8  D7FE               	bra	u4647
  5598   001CCA  2E32               	decfsz	??_AntiYellow^0,f,c
  5599   001CCC  D7FC               	bra	u4647
  5600   001CCE  2E33               	decfsz	(??_AntiYellow+1)^0,f,c
  5601   001CD0  D7FA               	bra	u4647
  5602   001CD2  F000               	nop	
  5603                           
  5604                           ;color_instructions.c: 124:     while (a<40){
  5605   001CD4  EF77  F00E         	goto	l3151
  5606   001CD8                     l3147:
  5607                           
  5608                           ;color_instructions.c: 125:         fullSpeedAhead(mL, mR);
  5609   001CD8  C02E  F01C         	movff	AntiYellow@mL,fullSpeedAhead@mL
  5610   001CDC  C02F  F01D         	movff	AntiYellow@mL+1,fullSpeedAhead@mL+1
  5611   001CE0  C030  F01E         	movff	AntiYellow@mR,fullSpeedAhead@mR
  5612   001CE4  C031  F01F         	movff	AntiYellow@mR+1,fullSpeedAhead@mR+1
  5613   001CE8  EC0E  F00C         	call	_fullSpeedAhead	;wreg free
  5614   001CEC                     
  5615                           ;color_instructions.c: 126:         a++;
  5616   001CEC  2A34               	incf	AntiYellow@a^0,f,c
  5617   001CEE                     l3151:
  5618                           
  5619                           ;color_instructions.c: 124:     while (a<40){
  5620   001CEE  0E27               	movlw	39
  5621   001CF0  6434               	cpfsgt	AntiYellow@a^0,c
  5622   001CF2  EF7D  F00E         	goto	u2471
  5623   001CF6  EF7F  F00E         	goto	u2470
  5624   001CFA                     u2471:
  5625   001CFA  EF6C  F00E         	goto	l3147
  5626   001CFE                     u2470:
  5627   001CFE  EF8C  F00E         	goto	l3157
  5628   001D02                     l3153:
  5629                           
  5630                           ;color_instructions.c: 129:         stop(mL, mR);
  5631   001D02  C02E  F01C         	movff	AntiYellow@mL,stop@mL
  5632   001D06  C02F  F01D         	movff	AntiYellow@mL+1,stop@mL+1
  5633   001D0A  C030  F01E         	movff	AntiYellow@mR,stop@mR
  5634   001D0E  C031  F01F         	movff	AntiYellow@mR+1,stop@mR+1
  5635   001D12  ECE8  F00D         	call	_stop	;wreg free
  5636   001D16                     
  5637                           ;color_instructions.c: 130:         a--;
  5638   001D16  0634               	decf	AntiYellow@a^0,f,c
  5639   001D18                     l3157:
  5640                           
  5641                           ;color_instructions.c: 128:     while (a>0){
  5642   001D18  5034               	movf	AntiYellow@a^0,w,c
  5643   001D1A  A4D8               	btfss	status,2,c
  5644   001D1C  EF92  F00E         	goto	u2481
  5645   001D20  EF94  F00E         	goto	u2480
  5646   001D24                     u2481:
  5647   001D24  EF81  F00E         	goto	l3153
  5648   001D28                     u2480:
  5649   001D28                     
  5650                           ;color_instructions.c: 132:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5651   001D28  0E05               	movlw	5
  5652   001D2A  6E33               	movwf	(??_AntiYellow+1)^0,c
  5653   001D2C  0E0F               	movlw	15
  5654   001D2E  6E32               	movwf	??_AntiYellow^0,c
  5655   001D30  0EF1               	movlw	241
  5656   001D32                     u4657:
  5657   001D32  2EE8               	decfsz	wreg,f,c
  5658   001D34  D7FE               	bra	u4657
  5659   001D36  2E32               	decfsz	??_AntiYellow^0,f,c
  5660   001D38  D7FC               	bra	u4657
  5661   001D3A  2E33               	decfsz	(??_AntiYellow+1)^0,f,c
  5662   001D3C  D7FA               	bra	u4657
  5663   001D3E  F000               	nop	
  5664   001D40                     
  5665                           ;color_instructions.c: 134:     BlueInstructions(mL, mR);
  5666   001D40  C02E  F027         	movff	AntiYellow@mL,BlueInstructions@mL
  5667   001D44  C02F  F028         	movff	AntiYellow@mL+1,BlueInstructions@mL+1
  5668   001D48  C030  F029         	movff	AntiYellow@mR,BlueInstructions@mR
  5669   001D4C  C031  F02A         	movff	AntiYellow@mR+1,BlueInstructions@mR+1
  5670   001D50  EC04  F00F         	call	_BlueInstructions	;wreg free
  5671   001D54  0012               	return		;funcret
  5672   001D56                     __end_of_AntiYellow:
  5673                           	callstack 0
  5674                           
  5675 ;; *************** function _turnRight90 *****************
  5676 ;; Defined at:
  5677 ;;		line 221 in file "dc_motor.c"
  5678 ;; Parameters:    Size  Location     Type
  5679 ;;  mL              2   33[COMRAM] PTR struct DC_motor
  5680 ;;		 -> main@motorL(9), 
  5681 ;;  mR              2   35[COMRAM] PTR struct DC_motor
  5682 ;;		 -> main@motorR(9), 
  5683 ;; Auto vars:     Size  Location     Type
  5684 ;;  a               1   37[COMRAM] unsigned char 
  5685 ;; Return value:  Size  Location     Type
  5686 ;;                  1    wreg      void 
  5687 ;; Registers used:
  5688 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5689 ;; Tracked objects:
  5690 ;;		On entry : 0/0
  5691 ;;		On exit  : 0/0
  5692 ;;		Unchanged: 0/0
  5693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5694 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5695 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5697 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5698 ;;Total ram usage:        5 bytes
  5699 ;; Hardware stack levels used: 1
  5700 ;; Hardware stack levels required when called: 10
  5701 ;; This function calls:
  5702 ;;		_stop
  5703 ;;		_turnRight
  5704 ;; This function is called by:
  5705 ;;		_RedInstructions
  5706 ;;		_YellowInstructions
  5707 ;;		_AntiYellow
  5708 ;; This function uses a non-reentrant model
  5709 ;;
  5710                           
  5711                           	psect	text24
  5712   001EBA                     __ptext24:
  5713                           	callstack 0
  5714   001EBA                     _turnRight90:
  5715                           	callstack 17
  5716   001EBA                     
  5717                           ;dc_motor.c: 223:     unsigned char a=0;
  5718   001EBA  0E00               	movlw	0
  5719   001EBC  6E26               	movwf	turnRight90@a^0,c
  5720                           
  5721                           ;dc_motor.c: 224:     while(a<27){
  5722   001EBE  EF6C  F00F         	goto	l2921
  5723   001EC2                     l2917:
  5724                           
  5725                           ;dc_motor.c: 225:         turnRight(mL, mR);
  5726   001EC2  C022  F01C         	movff	turnRight90@mL,turnRight@mL
  5727   001EC6  C023  F01D         	movff	turnRight90@mL+1,turnRight@mL+1
  5728   001ECA  C024  F01E         	movff	turnRight90@mR,turnRight@mR
  5729   001ECE  C025  F01F         	movff	turnRight90@mR+1,turnRight@mR+1
  5730   001ED2  EC97  F00B         	call	_turnRight	;wreg free
  5731   001ED6                     
  5732                           ;dc_motor.c: 226:         a++;
  5733   001ED6  2A26               	incf	turnRight90@a^0,f,c
  5734   001ED8                     l2921:
  5735                           
  5736                           ;dc_motor.c: 224:     while(a<27){
  5737   001ED8  0E1A               	movlw	26
  5738   001EDA  6426               	cpfsgt	turnRight90@a^0,c
  5739   001EDC  EF72  F00F         	goto	u2231
  5740   001EE0  EF74  F00F         	goto	u2230
  5741   001EE4                     u2231:
  5742   001EE4  EF61  F00F         	goto	l2917
  5743   001EE8                     u2230:
  5744   001EE8  EF81  F00F         	goto	l2927
  5745   001EEC                     l2923:
  5746                           
  5747                           ;dc_motor.c: 229:         stop(mL, mR);
  5748   001EEC  C022  F01C         	movff	turnRight90@mL,stop@mL
  5749   001EF0  C023  F01D         	movff	turnRight90@mL+1,stop@mL+1
  5750   001EF4  C024  F01E         	movff	turnRight90@mR,stop@mR
  5751   001EF8  C025  F01F         	movff	turnRight90@mR+1,stop@mR+1
  5752   001EFC  ECE8  F00D         	call	_stop	;wreg free
  5753   001F00                     
  5754                           ;dc_motor.c: 230:         a--;
  5755   001F00  0626               	decf	turnRight90@a^0,f,c
  5756   001F02                     l2927:
  5757                           
  5758                           ;dc_motor.c: 228:     while(a>0){
  5759   001F02  5026               	movf	turnRight90@a^0,w,c
  5760   001F04  A4D8               	btfss	status,2,c
  5761   001F06  EF87  F00F         	goto	u2241
  5762   001F0A  EF89  F00F         	goto	u2240
  5763   001F0E                     u2241:
  5764   001F0E  EF76  F00F         	goto	l2923
  5765   001F12                     u2240:
  5766   001F12  EF96  F00F         	goto	l2933
  5767   001F16                     l2929:
  5768                           
  5769                           ;dc_motor.c: 233:         turnRight(mL, mR);
  5770   001F16  C022  F01C         	movff	turnRight90@mL,turnRight@mL
  5771   001F1A  C023  F01D         	movff	turnRight90@mL+1,turnRight@mL+1
  5772   001F1E  C024  F01E         	movff	turnRight90@mR,turnRight@mR
  5773   001F22  C025  F01F         	movff	turnRight90@mR+1,turnRight@mR+1
  5774   001F26  EC97  F00B         	call	_turnRight	;wreg free
  5775   001F2A                     
  5776                           ;dc_motor.c: 234:         a++;
  5777   001F2A  2A26               	incf	turnRight90@a^0,f,c
  5778   001F2C                     l2933:
  5779                           
  5780                           ;dc_motor.c: 232:     while(a<27){
  5781   001F2C  0E1A               	movlw	26
  5782   001F2E  6426               	cpfsgt	turnRight90@a^0,c
  5783   001F30  EF9C  F00F         	goto	u2251
  5784   001F34  EF9E  F00F         	goto	u2250
  5785   001F38                     u2251:
  5786   001F38  EF8B  F00F         	goto	l2929
  5787   001F3C                     u2250:
  5788   001F3C  EFAB  F00F         	goto	l2939
  5789   001F40                     l2935:
  5790                           
  5791                           ;dc_motor.c: 237:         stop(mL, mR);
  5792   001F40  C022  F01C         	movff	turnRight90@mL,stop@mL
  5793   001F44  C023  F01D         	movff	turnRight90@mL+1,stop@mL+1
  5794   001F48  C024  F01E         	movff	turnRight90@mR,stop@mR
  5795   001F4C  C025  F01F         	movff	turnRight90@mR+1,stop@mR+1
  5796   001F50  ECE8  F00D         	call	_stop	;wreg free
  5797   001F54                     
  5798                           ;dc_motor.c: 238:         a--;
  5799   001F54  0626               	decf	turnRight90@a^0,f,c
  5800   001F56                     l2939:
  5801                           
  5802                           ;dc_motor.c: 236:     while(a>0){
  5803   001F56  5026               	movf	turnRight90@a^0,w,c
  5804   001F58  A4D8               	btfss	status,2,c
  5805   001F5A  EFB1  F00F         	goto	u2261
  5806   001F5E  EFB3  F00F         	goto	u2260
  5807   001F62                     u2261:
  5808   001F62  EFA0  F00F         	goto	l2935
  5809   001F66                     u2260:
  5810   001F66  0012               	return		;funcret
  5811   001F68                     __end_of_turnRight90:
  5812                           	callstack 0
  5813                           
  5814 ;; *************** function _turnRight *****************
  5815 ;; Defined at:
  5816 ;;		line 129 in file "dc_motor.c"
  5817 ;; Parameters:    Size  Location     Type
  5818 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  5819 ;;		 -> main@motorL(9), 
  5820 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  5821 ;;		 -> main@motorR(9), 
  5822 ;; Auto vars:     Size  Location     Type
  5823 ;;		None
  5824 ;; Return value:  Size  Location     Type
  5825 ;;                  1    wreg      void 
  5826 ;; Registers used:
  5827 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5828 ;; Tracked objects:
  5829 ;;		On entry : 0/0
  5830 ;;		On exit  : 0/0
  5831 ;;		Unchanged: 0/0
  5832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5833 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5835 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5836 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5837 ;;Total ram usage:        6 bytes
  5838 ;; Hardware stack levels used: 1
  5839 ;; Hardware stack levels required when called: 9
  5840 ;; This function calls:
  5841 ;;		_setMotorPWM
  5842 ;; This function is called by:
  5843 ;;		_turnRight90
  5844 ;;		_turnRight135
  5845 ;;		_turn180
  5846 ;; This function uses a non-reentrant model
  5847 ;;
  5848                           
  5849                           	psect	text25
  5850   00172E                     __ptext25:
  5851                           	callstack 0
  5852   00172E                     _turnRight:
  5853                           	callstack 17
  5854   00172E                     
  5855                           ;dc_motor.c: 129: void turnRight(DC_motor *mL, DC_motor *mR);dc_motor.c: 130: {;dc_motor
      +                          .c: 132:     mL->direction = 1;
  5856   00172E  EE20 F001          	lfsr	2,1
  5857   001732  501C               	movf	turnRight@mL^0,w,c
  5858   001734  26D9               	addwf	fsr2l,f,c
  5859   001736  501D               	movf	(turnRight@mL+1)^0,w,c
  5860   001738  22DA               	addwfc	fsr2h,f,c
  5861   00173A  0E01               	movlw	1
  5862   00173C  6EDF               	movwf	indf2,c
  5863                           
  5864                           ;dc_motor.c: 133:     mL->brakemode = 0;
  5865   00173E  EE20 F002          	lfsr	2,2
  5866   001742  501C               	movf	turnRight@mL^0,w,c
  5867   001744  26D9               	addwf	fsr2l,f,c
  5868   001746  501D               	movf	(turnRight@mL+1)^0,w,c
  5869   001748  22DA               	addwfc	fsr2h,f,c
  5870   00174A  0E00               	movlw	0
  5871   00174C  6EDF               	movwf	indf2,c
  5872                           
  5873                           ;dc_motor.c: 135:     mR->direction = 0;
  5874   00174E  EE20 F001          	lfsr	2,1
  5875   001752  501E               	movf	turnRight@mR^0,w,c
  5876   001754  26D9               	addwf	fsr2l,f,c
  5877   001756  501F               	movf	(turnRight@mR+1)^0,w,c
  5878   001758  22DA               	addwfc	fsr2h,f,c
  5879   00175A  0E00               	movlw	0
  5880   00175C  6EDF               	movwf	indf2,c
  5881                           
  5882                           ;dc_motor.c: 136:     mR->brakemode = 0;
  5883   00175E  EE20 F002          	lfsr	2,2
  5884   001762  501E               	movf	turnRight@mR^0,w,c
  5885   001764  26D9               	addwf	fsr2l,f,c
  5886   001766  501F               	movf	(turnRight@mR+1)^0,w,c
  5887   001768  22DA               	addwfc	fsr2h,f,c
  5888   00176A  0E00               	movlw	0
  5889   00176C  6EDF               	movwf	indf2,c
  5890                           
  5891                           ;dc_motor.c: 139:     if(mL->power>40){mL->power=40;}
  5892   00176E  C01C  FFD9         	movff	turnRight@mL,fsr2l
  5893   001772  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  5894   001776  50DF               	movf	indf2,w,c
  5895   001778  0A80               	xorlw	128
  5896   00177A  0F57               	addlw	-169
  5897   00177C  A0D8               	btfss	status,0,c
  5898   00177E  EFC3  F00B         	goto	u2111
  5899   001782  EFC5  F00B         	goto	u2110
  5900   001786                     u2111:
  5901   001786  EFCB  F00B         	goto	l2833
  5902   00178A                     u2110:
  5903   00178A  C01C  FFD9         	movff	turnRight@mL,fsr2l
  5904   00178E  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  5905   001792  0E28               	movlw	40
  5906   001794  6EDF               	movwf	indf2,c
  5907   001796                     l2833:
  5908                           
  5909                           ;dc_motor.c: 140:     if(mR->power>40){mR->power=40;}
  5910   001796  C01E  FFD9         	movff	turnRight@mR,fsr2l
  5911   00179A  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  5912   00179E  50DF               	movf	indf2,w,c
  5913   0017A0  0A80               	xorlw	128
  5914   0017A2  0F57               	addlw	-169
  5915   0017A4  A0D8               	btfss	status,0,c
  5916   0017A6  EFD7  F00B         	goto	u2121
  5917   0017AA  EFD9  F00B         	goto	u2120
  5918   0017AE                     u2121:
  5919   0017AE  EFDF  F00B         	goto	l2837
  5920   0017B2                     u2120:
  5921   0017B2  C01E  FFD9         	movff	turnRight@mR,fsr2l
  5922   0017B6  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  5923   0017BA  0E28               	movlw	40
  5924   0017BC  6EDF               	movwf	indf2,c
  5925   0017BE                     l2837:
  5926                           
  5927                           ;dc_motor.c: 142:     mL->power = mL->power + 10 ;
  5928   0017BE  C01C  FFD9         	movff	turnRight@mL,fsr2l
  5929   0017C2  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  5930   0017C6  50DF               	movf	indf2,w,c
  5931   0017C8  0F0A               	addlw	10
  5932   0017CA  C01C  FFD9         	movff	turnRight@mL,fsr2l
  5933   0017CE  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  5934   0017D2  6EDF               	movwf	indf2,c
  5935   0017D4                     
  5936                           ;dc_motor.c: 143:     mR->power = mR->power + 10;
  5937   0017D4  C01E  FFD9         	movff	turnRight@mR,fsr2l
  5938   0017D8  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  5939   0017DC  50DF               	movf	indf2,w,c
  5940   0017DE  0F0A               	addlw	10
  5941   0017E0  C01E  FFD9         	movff	turnRight@mR,fsr2l
  5942   0017E4  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  5943   0017E8  6EDF               	movwf	indf2,c
  5944   0017EA                     
  5945                           ;dc_motor.c: 145:     setMotorPWM(mL);
  5946   0017EA  C01C  F016         	movff	turnRight@mL,setMotorPWM@m
  5947   0017EE  C01D  F017         	movff	turnRight@mL+1,setMotorPWM@m+1
  5948   0017F2  EC5D  F00A         	call	_setMotorPWM	;wreg free
  5949   0017F6                     
  5950                           ;dc_motor.c: 146:     setMotorPWM(mR);
  5951   0017F6  C01E  F016         	movff	turnRight@mR,setMotorPWM@m
  5952   0017FA  C01F  F017         	movff	turnRight@mR+1,setMotorPWM@m+1
  5953   0017FE  EC5D  F00A         	call	_setMotorPWM	;wreg free
  5954   001802                     
  5955                           ;dc_motor.c: 147:     _delay((unsigned long)((20)*(64000000/4000.0)));
  5956   001802  0E02               	movlw	2
  5957   001804  6E21               	movwf	(??_turnRight+1)^0,c
  5958   001806  0EA0               	movlw	160
  5959   001808  6E20               	movwf	??_turnRight^0,c
  5960   00180A  0E92               	movlw	146
  5961   00180C                     u4667:
  5962   00180C  2EE8               	decfsz	wreg,f,c
  5963   00180E  D7FE               	bra	u4667
  5964   001810  2E20               	decfsz	??_turnRight^0,f,c
  5965   001812  D7FC               	bra	u4667
  5966   001814  2E21               	decfsz	(??_turnRight+1)^0,f,c
  5967   001816  D7FA               	bra	u4667
  5968   001818  D000               	nop2	
  5969   00181A  0012               	return		;funcret
  5970   00181C                     __end_of_turnRight:
  5971                           	callstack 0
  5972                           
  5973 ;; *************** function _AntiPink *****************
  5974 ;; Defined at:
  5975 ;;		line 137 in file "color_instructions.c"
  5976 ;; Parameters:    Size  Location     Type
  5977 ;;  mL              2   45[COMRAM] PTR struct DC_motor
  5978 ;;		 -> main@motorL(9), 
  5979 ;;  mR              2   47[COMRAM] PTR struct DC_motor
  5980 ;;		 -> main@motorR(9), 
  5981 ;; Auto vars:     Size  Location     Type
  5982 ;;  a               1   51[COMRAM] unsigned char 
  5983 ;; Return value:  Size  Location     Type
  5984 ;;                  1    wreg      void 
  5985 ;; Registers used:
  5986 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5987 ;; Tracked objects:
  5988 ;;		On entry : 0/0
  5989 ;;		On exit  : 0/0
  5990 ;;		Unchanged: 0/0
  5991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5992 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5993 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5994 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5995 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5996 ;;Total ram usage:        7 bytes
  5997 ;; Hardware stack levels used: 1
  5998 ;; Hardware stack levels required when called: 12
  5999 ;; This function calls:
  6000 ;;		_BlueInstructions
  6001 ;;		_fullSpeedAhead
  6002 ;;		_stop
  6003 ;;		_turnLeft90
  6004 ;; This function is called by:
  6005 ;;		_MoveBuggy
  6006 ;; This function uses a non-reentrant model
  6007 ;;
  6008                           
  6009                           	psect	text26
  6010   001D56                     __ptext26:
  6011                           	callstack 0
  6012   001D56                     _AntiPink:
  6013                           	callstack 16
  6014   001D56                     
  6015                           ;color_instructions.c: 138:     unsigned char a=0;
  6016   001D56  0E00               	movlw	0
  6017   001D58  6E34               	movwf	AntiPink@a^0,c
  6018   001D5A                     
  6019                           ;color_instructions.c: 140:     turnLeft90(mL, mR);
  6020   001D5A  C02E  F022         	movff	AntiPink@mL,turnLeft90@mL
  6021   001D5E  C02F  F023         	movff	AntiPink@mL+1,turnLeft90@mL+1
  6022   001D62  C030  F024         	movff	AntiPink@mR,turnLeft90@mR
  6023   001D66  C031  F025         	movff	AntiPink@mR+1,turnLeft90@mR+1
  6024   001D6A  ECB4  F00F         	call	_turnLeft90	;wreg free
  6025   001D6E                     
  6026                           ;color_instructions.c: 141:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6027   001D6E  0E05               	movlw	5
  6028   001D70  6E33               	movwf	(??_AntiPink+1)^0,c
  6029   001D72  0E0F               	movlw	15
  6030   001D74  6E32               	movwf	??_AntiPink^0,c
  6031   001D76  0EF1               	movlw	241
  6032   001D78                     u4677:
  6033   001D78  2EE8               	decfsz	wreg,f,c
  6034   001D7A  D7FE               	bra	u4677
  6035   001D7C  2E32               	decfsz	??_AntiPink^0,f,c
  6036   001D7E  D7FC               	bra	u4677
  6037   001D80  2E33               	decfsz	(??_AntiPink+1)^0,f,c
  6038   001D82  D7FA               	bra	u4677
  6039   001D84  F000               	nop	
  6040                           
  6041                           ;color_instructions.c: 143:     while (a<40){
  6042   001D86  EFD0  F00E         	goto	l3173
  6043   001D8A                     l3169:
  6044                           
  6045                           ;color_instructions.c: 144:         fullSpeedAhead(mL, mR);
  6046   001D8A  C02E  F01C         	movff	AntiPink@mL,fullSpeedAhead@mL
  6047   001D8E  C02F  F01D         	movff	AntiPink@mL+1,fullSpeedAhead@mL+1
  6048   001D92  C030  F01E         	movff	AntiPink@mR,fullSpeedAhead@mR
  6049   001D96  C031  F01F         	movff	AntiPink@mR+1,fullSpeedAhead@mR+1
  6050   001D9A  EC0E  F00C         	call	_fullSpeedAhead	;wreg free
  6051   001D9E                     
  6052                           ;color_instructions.c: 145:         a++;
  6053   001D9E  2A34               	incf	AntiPink@a^0,f,c
  6054   001DA0                     l3173:
  6055                           
  6056                           ;color_instructions.c: 143:     while (a<40){
  6057   001DA0  0E27               	movlw	39
  6058   001DA2  6434               	cpfsgt	AntiPink@a^0,c
  6059   001DA4  EFD6  F00E         	goto	u2491
  6060   001DA8  EFD8  F00E         	goto	u2490
  6061   001DAC                     u2491:
  6062   001DAC  EFC5  F00E         	goto	l3169
  6063   001DB0                     u2490:
  6064   001DB0  EFE5  F00E         	goto	l3179
  6065   001DB4                     l3175:
  6066                           
  6067                           ;color_instructions.c: 148:         stop(mL, mR);
  6068   001DB4  C02E  F01C         	movff	AntiPink@mL,stop@mL
  6069   001DB8  C02F  F01D         	movff	AntiPink@mL+1,stop@mL+1
  6070   001DBC  C030  F01E         	movff	AntiPink@mR,stop@mR
  6071   001DC0  C031  F01F         	movff	AntiPink@mR+1,stop@mR+1
  6072   001DC4  ECE8  F00D         	call	_stop	;wreg free
  6073   001DC8                     
  6074                           ;color_instructions.c: 149:         a--;
  6075   001DC8  0634               	decf	AntiPink@a^0,f,c
  6076   001DCA                     l3179:
  6077                           
  6078                           ;color_instructions.c: 147:     while (a>0){
  6079   001DCA  5034               	movf	AntiPink@a^0,w,c
  6080   001DCC  A4D8               	btfss	status,2,c
  6081   001DCE  EFEB  F00E         	goto	u2501
  6082   001DD2  EFED  F00E         	goto	u2500
  6083   001DD6                     u2501:
  6084   001DD6  EFDA  F00E         	goto	l3175
  6085   001DDA                     u2500:
  6086   001DDA                     
  6087                           ;color_instructions.c: 151:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6088   001DDA  0E05               	movlw	5
  6089   001DDC  6E33               	movwf	(??_AntiPink+1)^0,c
  6090   001DDE  0E0F               	movlw	15
  6091   001DE0  6E32               	movwf	??_AntiPink^0,c
  6092   001DE2  0EF1               	movlw	241
  6093   001DE4                     u4687:
  6094   001DE4  2EE8               	decfsz	wreg,f,c
  6095   001DE6  D7FE               	bra	u4687
  6096   001DE8  2E32               	decfsz	??_AntiPink^0,f,c
  6097   001DEA  D7FC               	bra	u4687
  6098   001DEC  2E33               	decfsz	(??_AntiPink+1)^0,f,c
  6099   001DEE  D7FA               	bra	u4687
  6100   001DF0  F000               	nop	
  6101   001DF2                     
  6102                           ;color_instructions.c: 153:     BlueInstructions(mL, mR);
  6103   001DF2  C02E  F027         	movff	AntiPink@mL,BlueInstructions@mL
  6104   001DF6  C02F  F028         	movff	AntiPink@mL+1,BlueInstructions@mL+1
  6105   001DFA  C030  F029         	movff	AntiPink@mR,BlueInstructions@mR
  6106   001DFE  C031  F02A         	movff	AntiPink@mR+1,BlueInstructions@mR+1
  6107   001E02  EC04  F00F         	call	_BlueInstructions	;wreg free
  6108   001E06  0012               	return		;funcret
  6109   001E08                     __end_of_AntiPink:
  6110                           	callstack 0
  6111                           
  6112 ;; *************** function _fullSpeedAhead *****************
  6113 ;; Defined at:
  6114 ;;		line 151 in file "dc_motor.c"
  6115 ;; Parameters:    Size  Location     Type
  6116 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6117 ;;		 -> main@motorL(9), 
  6118 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6119 ;;		 -> main@motorR(9), 
  6120 ;; Auto vars:     Size  Location     Type
  6121 ;;		None
  6122 ;; Return value:  Size  Location     Type
  6123 ;;                  1    wreg      void 
  6124 ;; Registers used:
  6125 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6126 ;; Tracked objects:
  6127 ;;		On entry : 0/0
  6128 ;;		On exit  : 0/0
  6129 ;;		Unchanged: 0/0
  6130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6131 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6133 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6134 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6135 ;;Total ram usage:        6 bytes
  6136 ;; Hardware stack levels used: 1
  6137 ;; Hardware stack levels required when called: 9
  6138 ;; This function calls:
  6139 ;;		_setMotorPWM
  6140 ;; This function is called by:
  6141 ;;		_main
  6142 ;;		_AntiYellow
  6143 ;;		_AntiPink
  6144 ;;		_WhiteInstructions
  6145 ;; This function uses a non-reentrant model
  6146 ;;
  6147                           
  6148                           	psect	text27
  6149   00181C                     __ptext27:
  6150                           	callstack 0
  6151   00181C                     _fullSpeedAhead:
  6152                           	callstack 21
  6153   00181C                     
  6154                           ;dc_motor.c: 151: void fullSpeedAhead(DC_motor *mL, DC_motor *mR);dc_motor.c: 152: {;dc_
      +                          motor.c: 154:     mL->direction = 1;
  6155   00181C  EE20 F001          	lfsr	2,1
  6156   001820  501C               	movf	fullSpeedAhead@mL^0,w,c
  6157   001822  26D9               	addwf	fsr2l,f,c
  6158   001824  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  6159   001826  22DA               	addwfc	fsr2h,f,c
  6160   001828  0E01               	movlw	1
  6161   00182A  6EDF               	movwf	indf2,c
  6162                           
  6163                           ;dc_motor.c: 155:     mL->brakemode = 0;
  6164   00182C  EE20 F002          	lfsr	2,2
  6165   001830  501C               	movf	fullSpeedAhead@mL^0,w,c
  6166   001832  26D9               	addwf	fsr2l,f,c
  6167   001834  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  6168   001836  22DA               	addwfc	fsr2h,f,c
  6169   001838  0E00               	movlw	0
  6170   00183A  6EDF               	movwf	indf2,c
  6171                           
  6172                           ;dc_motor.c: 157:     mR->direction = 1;
  6173   00183C  EE20 F001          	lfsr	2,1
  6174   001840  501E               	movf	fullSpeedAhead@mR^0,w,c
  6175   001842  26D9               	addwf	fsr2l,f,c
  6176   001844  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  6177   001846  22DA               	addwfc	fsr2h,f,c
  6178   001848  0E01               	movlw	1
  6179   00184A  6EDF               	movwf	indf2,c
  6180                           
  6181                           ;dc_motor.c: 158:     mR->brakemode = 0;
  6182   00184C  EE20 F002          	lfsr	2,2
  6183   001850  501E               	movf	fullSpeedAhead@mR^0,w,c
  6184   001852  26D9               	addwf	fsr2l,f,c
  6185   001854  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  6186   001856  22DA               	addwfc	fsr2h,f,c
  6187   001858  0E00               	movlw	0
  6188   00185A  6EDF               	movwf	indf2,c
  6189                           
  6190                           ;dc_motor.c: 162:     if(mL->power>40){mL->power=40;}
  6191   00185C  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  6192   001860  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  6193   001864  50DF               	movf	indf2,w,c
  6194   001866  0A80               	xorlw	128
  6195   001868  0F57               	addlw	-169
  6196   00186A  A0D8               	btfss	status,0,c
  6197   00186C  EF3A  F00C         	goto	u2211
  6198   001870  EF3C  F00C         	goto	u2210
  6199   001874                     u2211:
  6200   001874  EF42  F00C         	goto	l2901
  6201   001878                     u2210:
  6202   001878  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  6203   00187C  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  6204   001880  0E28               	movlw	40
  6205   001882  6EDF               	movwf	indf2,c
  6206   001884                     l2901:
  6207                           
  6208                           ;dc_motor.c: 163:     if(mR->power>42){mR->power=42;}
  6209   001884  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  6210   001888  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  6211   00188C  50DF               	movf	indf2,w,c
  6212   00188E  0A80               	xorlw	128
  6213   001890  0F55               	addlw	-171
  6214   001892  A0D8               	btfss	status,0,c
  6215   001894  EF4E  F00C         	goto	u2221
  6216   001898  EF50  F00C         	goto	u2220
  6217   00189C                     u2221:
  6218   00189C  EF56  F00C         	goto	l2905
  6219   0018A0                     u2220:
  6220   0018A0  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  6221   0018A4  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  6222   0018A8  0E2A               	movlw	42
  6223   0018AA  6EDF               	movwf	indf2,c
  6224   0018AC                     l2905:
  6225                           
  6226                           ;dc_motor.c: 165:     mL->power = mL->power + 5 ;
  6227   0018AC  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  6228   0018B0  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  6229   0018B4  50DF               	movf	indf2,w,c
  6230   0018B6  0F05               	addlw	5
  6231   0018B8  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  6232   0018BC  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  6233   0018C0  6EDF               	movwf	indf2,c
  6234   0018C2                     
  6235                           ;dc_motor.c: 166:     mR->power = mR->power + 6;
  6236   0018C2  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  6237   0018C6  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  6238   0018CA  50DF               	movf	indf2,w,c
  6239   0018CC  0F06               	addlw	6
  6240   0018CE  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  6241   0018D2  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  6242   0018D6  6EDF               	movwf	indf2,c
  6243   0018D8                     
  6244                           ;dc_motor.c: 168:     setMotorPWM(mL);
  6245   0018D8  C01C  F016         	movff	fullSpeedAhead@mL,setMotorPWM@m
  6246   0018DC  C01D  F017         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  6247   0018E0  EC5D  F00A         	call	_setMotorPWM	;wreg free
  6248   0018E4                     
  6249                           ;dc_motor.c: 169:     setMotorPWM(mR);
  6250   0018E4  C01E  F016         	movff	fullSpeedAhead@mR,setMotorPWM@m
  6251   0018E8  C01F  F017         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  6252   0018EC  EC5D  F00A         	call	_setMotorPWM	;wreg free
  6253   0018F0                     
  6254                           ;dc_motor.c: 170:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6255   0018F0  0E05               	movlw	5
  6256   0018F2  6E21               	movwf	(??_fullSpeedAhead+1)^0,c
  6257   0018F4  0E0F               	movlw	15
  6258   0018F6  6E20               	movwf	??_fullSpeedAhead^0,c
  6259   0018F8  0EF1               	movlw	241
  6260   0018FA                     u4697:
  6261   0018FA  2EE8               	decfsz	wreg,f,c
  6262   0018FC  D7FE               	bra	u4697
  6263   0018FE  2E20               	decfsz	??_fullSpeedAhead^0,f,c
  6264   001900  D7FC               	bra	u4697
  6265   001902  2E21               	decfsz	(??_fullSpeedAhead+1)^0,f,c
  6266   001904  D7FA               	bra	u4697
  6267   001906  F000               	nop	
  6268   001908  0012               	return		;funcret
  6269   00190A                     __end_of_fullSpeedAhead:
  6270                           	callstack 0
  6271                           
  6272 ;; *************** function _BlueInstructions *****************
  6273 ;; Defined at:
  6274 ;;		line 39 in file "color_instructions.c"
  6275 ;; Parameters:    Size  Location     Type
  6276 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  6277 ;;		 -> main@motorL(9), 
  6278 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  6279 ;;		 -> main@motorR(9), 
  6280 ;; Auto vars:     Size  Location     Type
  6281 ;;  a               1   44[COMRAM] unsigned char 
  6282 ;; Return value:  Size  Location     Type
  6283 ;;                  1    wreg      void 
  6284 ;; Registers used:
  6285 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6286 ;; Tracked objects:
  6287 ;;		On entry : 0/0
  6288 ;;		On exit  : 0/0
  6289 ;;		Unchanged: 0/0
  6290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6291 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6292 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6293 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6294 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6295 ;;Total ram usage:        7 bytes
  6296 ;; Hardware stack levels used: 1
  6297 ;; Hardware stack levels required when called: 11
  6298 ;; This function calls:
  6299 ;;		_fullSpeedBackwards
  6300 ;;		_stop
  6301 ;;		_turnLeft90
  6302 ;; This function is called by:
  6303 ;;		_AntiYellow
  6304 ;;		_AntiPink
  6305 ;;		_WhiteInstructions
  6306 ;;		_MoveBuggy
  6307 ;; This function uses a non-reentrant model
  6308 ;;
  6309                           
  6310                           	psect	text28
  6311   001E08                     __ptext28:
  6312                           	callstack 0
  6313   001E08                     _BlueInstructions:
  6314                           	callstack 17
  6315   001E08                     
  6316                           ;color_instructions.c: 40:     unsigned char a=0;
  6317   001E08  0E00               	movlw	0
  6318   001E0A  6E2D               	movwf	BlueInstructions@a^0,c
  6319                           
  6320                           ;color_instructions.c: 41:     while (a<16){
  6321   001E0C  EF13  F00F         	goto	l2975
  6322   001E10                     l2971:
  6323                           
  6324                           ;color_instructions.c: 42:         fullSpeedBackwards(mL, mR);
  6325   001E10  C027  F01C         	movff	BlueInstructions@mL,fullSpeedBackwards@mL
  6326   001E14  C028  F01D         	movff	BlueInstructions@mL+1,fullSpeedBackwards@mL+1
  6327   001E18  C029  F01E         	movff	BlueInstructions@mR,fullSpeedBackwards@mR
  6328   001E1C  C02A  F01F         	movff	BlueInstructions@mR+1,fullSpeedBackwards@mR+1
  6329   001E20  ECFC  F00C         	call	_fullSpeedBackwards	;wreg free
  6330   001E24                     
  6331                           ;color_instructions.c: 43:         a++;
  6332   001E24  2A2D               	incf	BlueInstructions@a^0,f,c
  6333   001E26                     l2975:
  6334                           
  6335                           ;color_instructions.c: 41:     while (a<16){
  6336   001E26  0E0F               	movlw	15
  6337   001E28  642D               	cpfsgt	BlueInstructions@a^0,c
  6338   001E2A  EF19  F00F         	goto	u2311
  6339   001E2E  EF1B  F00F         	goto	u2310
  6340   001E32                     u2311:
  6341   001E32  EF08  F00F         	goto	l2971
  6342   001E36                     u2310:
  6343   001E36  EF28  F00F         	goto	l2981
  6344   001E3A                     l2977:
  6345                           
  6346                           ;color_instructions.c: 46:         stop(mL, mR);
  6347   001E3A  C027  F01C         	movff	BlueInstructions@mL,stop@mL
  6348   001E3E  C028  F01D         	movff	BlueInstructions@mL+1,stop@mL+1
  6349   001E42  C029  F01E         	movff	BlueInstructions@mR,stop@mR
  6350   001E46  C02A  F01F         	movff	BlueInstructions@mR+1,stop@mR+1
  6351   001E4A  ECE8  F00D         	call	_stop	;wreg free
  6352   001E4E                     
  6353                           ;color_instructions.c: 47:         a--;
  6354   001E4E  062D               	decf	BlueInstructions@a^0,f,c
  6355   001E50                     l2981:
  6356                           
  6357                           ;color_instructions.c: 45:     while (a>0){
  6358   001E50  502D               	movf	BlueInstructions@a^0,w,c
  6359   001E52  A4D8               	btfss	status,2,c
  6360   001E54  EF2E  F00F         	goto	u2321
  6361   001E58  EF30  F00F         	goto	u2320
  6362   001E5C                     u2321:
  6363   001E5C  EF1D  F00F         	goto	l2977
  6364   001E60                     u2320:
  6365   001E60                     
  6366                           ;color_instructions.c: 49:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6367   001E60  0E05               	movlw	5
  6368   001E62  6E2C               	movwf	(??_BlueInstructions+1)^0,c
  6369   001E64  0E0F               	movlw	15
  6370   001E66  6E2B               	movwf	??_BlueInstructions^0,c
  6371   001E68  0EF1               	movlw	241
  6372   001E6A                     u4707:
  6373   001E6A  2EE8               	decfsz	wreg,f,c
  6374   001E6C  D7FE               	bra	u4707
  6375   001E6E  2E2B               	decfsz	??_BlueInstructions^0,f,c
  6376   001E70  D7FC               	bra	u4707
  6377   001E72  2E2C               	decfsz	(??_BlueInstructions+1)^0,f,c
  6378   001E74  D7FA               	bra	u4707
  6379   001E76  F000               	nop	
  6380   001E78                     
  6381                           ;color_instructions.c: 52:     turnLeft90(mL, mR);
  6382   001E78  C027  F022         	movff	BlueInstructions@mL,turnLeft90@mL
  6383   001E7C  C028  F023         	movff	BlueInstructions@mL+1,turnLeft90@mL+1
  6384   001E80  C029  F024         	movff	BlueInstructions@mR,turnLeft90@mR
  6385   001E84  C02A  F025         	movff	BlueInstructions@mR+1,turnLeft90@mR+1
  6386   001E88  ECB4  F00F         	call	_turnLeft90	;wreg free
  6387   001E8C                     
  6388                           ;color_instructions.c: 53:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6389   001E8C  0E05               	movlw	5
  6390   001E8E  6E2C               	movwf	(??_BlueInstructions+1)^0,c
  6391   001E90  0E0F               	movlw	15
  6392   001E92  6E2B               	movwf	??_BlueInstructions^0,c
  6393   001E94  0EF1               	movlw	241
  6394   001E96                     u4717:
  6395   001E96  2EE8               	decfsz	wreg,f,c
  6396   001E98  D7FE               	bra	u4717
  6397   001E9A  2E2B               	decfsz	??_BlueInstructions^0,f,c
  6398   001E9C  D7FC               	bra	u4717
  6399   001E9E  2E2C               	decfsz	(??_BlueInstructions+1)^0,f,c
  6400   001EA0  D7FA               	bra	u4717
  6401   001EA2  F000               	nop	
  6402                           
  6403                           ;color_instructions.c: 54:     turnLeft90(mL, mR);
  6404   001EA4  C027  F022         	movff	BlueInstructions@mL,turnLeft90@mL
  6405   001EA8  C028  F023         	movff	BlueInstructions@mL+1,turnLeft90@mL+1
  6406   001EAC  C029  F024         	movff	BlueInstructions@mR,turnLeft90@mR
  6407   001EB0  C02A  F025         	movff	BlueInstructions@mR+1,turnLeft90@mR+1
  6408   001EB4  ECB4  F00F         	call	_turnLeft90	;wreg free
  6409   001EB8  0012               	return		;funcret
  6410   001EBA                     __end_of_BlueInstructions:
  6411                           	callstack 0
  6412                           
  6413 ;; *************** function _turnLeft90 *****************
  6414 ;; Defined at:
  6415 ;;		line 200 in file "dc_motor.c"
  6416 ;; Parameters:    Size  Location     Type
  6417 ;;  mL              2   33[COMRAM] PTR struct DC_motor
  6418 ;;		 -> main@motorL(9), 
  6419 ;;  mR              2   35[COMRAM] PTR struct DC_motor
  6420 ;;		 -> main@motorR(9), 
  6421 ;; Auto vars:     Size  Location     Type
  6422 ;;  a               1   37[COMRAM] unsigned char 
  6423 ;; Return value:  Size  Location     Type
  6424 ;;                  1    wreg      void 
  6425 ;; Registers used:
  6426 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6427 ;; Tracked objects:
  6428 ;;		On entry : 0/0
  6429 ;;		On exit  : 0/0
  6430 ;;		Unchanged: 0/0
  6431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6432 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6433 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6435 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6436 ;;Total ram usage:        5 bytes
  6437 ;; Hardware stack levels used: 1
  6438 ;; Hardware stack levels required when called: 10
  6439 ;; This function calls:
  6440 ;;		_stop
  6441 ;;		_turnLeft
  6442 ;; This function is called by:
  6443 ;;		_GreenInstructions
  6444 ;;		_BlueInstructions
  6445 ;;		_PinkInstructions
  6446 ;;		_AntiPink
  6447 ;; This function uses a non-reentrant model
  6448 ;;
  6449                           
  6450                           	psect	text29
  6451   001F68                     __ptext29:
  6452                           	callstack 0
  6453   001F68                     _turnLeft90:
  6454                           	callstack 17
  6455   001F68                     
  6456                           ;dc_motor.c: 202:     unsigned char a=0;
  6457   001F68  0E00               	movlw	0
  6458   001F6A  6E26               	movwf	turnLeft90@a^0,c
  6459                           
  6460                           ;dc_motor.c: 203:     while(a<28){
  6461   001F6C  EFC3  F00F         	goto	l2871
  6462   001F70                     l2867:
  6463                           
  6464                           ;dc_motor.c: 204:         turnLeft(mL, mR);
  6465   001F70  C022  F01C         	movff	turnLeft90@mL,turnLeft@mL
  6466   001F74  C023  F01D         	movff	turnLeft90@mL+1,turnLeft@mL+1
  6467   001F78  C024  F01E         	movff	turnLeft90@mR,turnLeft@mR
  6468   001F7C  C025  F01F         	movff	turnLeft90@mR+1,turnLeft@mR+1
  6469   001F80  EC85  F00C         	call	_turnLeft	;wreg free
  6470   001F84                     
  6471                           ;dc_motor.c: 205:         a++;
  6472   001F84  2A26               	incf	turnLeft90@a^0,f,c
  6473   001F86                     l2871:
  6474                           
  6475                           ;dc_motor.c: 203:     while(a<28){
  6476   001F86  0E1B               	movlw	27
  6477   001F88  6426               	cpfsgt	turnLeft90@a^0,c
  6478   001F8A  EFC9  F00F         	goto	u2151
  6479   001F8E  EFCB  F00F         	goto	u2150
  6480   001F92                     u2151:
  6481   001F92  EFB8  F00F         	goto	l2867
  6482   001F96                     u2150:
  6483   001F96  EFD8  F00F         	goto	l2877
  6484   001F9A                     l2873:
  6485                           
  6486                           ;dc_motor.c: 208:         stop(mL, mR);
  6487   001F9A  C022  F01C         	movff	turnLeft90@mL,stop@mL
  6488   001F9E  C023  F01D         	movff	turnLeft90@mL+1,stop@mL+1
  6489   001FA2  C024  F01E         	movff	turnLeft90@mR,stop@mR
  6490   001FA6  C025  F01F         	movff	turnLeft90@mR+1,stop@mR+1
  6491   001FAA  ECE8  F00D         	call	_stop	;wreg free
  6492   001FAE                     
  6493                           ;dc_motor.c: 209:         a--;
  6494   001FAE  0626               	decf	turnLeft90@a^0,f,c
  6495   001FB0                     l2877:
  6496                           
  6497                           ;dc_motor.c: 207:     while(a>0){
  6498   001FB0  5026               	movf	turnLeft90@a^0,w,c
  6499   001FB2  A4D8               	btfss	status,2,c
  6500   001FB4  EFDE  F00F         	goto	u2161
  6501   001FB8  EFE0  F00F         	goto	u2160
  6502   001FBC                     u2161:
  6503   001FBC  EFCD  F00F         	goto	l2873
  6504   001FC0                     u2160:
  6505   001FC0  EFED  F00F         	goto	l2883
  6506   001FC4                     l2879:
  6507                           
  6508                           ;dc_motor.c: 212:         turnLeft(mL, mR);
  6509   001FC4  C022  F01C         	movff	turnLeft90@mL,turnLeft@mL
  6510   001FC8  C023  F01D         	movff	turnLeft90@mL+1,turnLeft@mL+1
  6511   001FCC  C024  F01E         	movff	turnLeft90@mR,turnLeft@mR
  6512   001FD0  C025  F01F         	movff	turnLeft90@mR+1,turnLeft@mR+1
  6513   001FD4  EC85  F00C         	call	_turnLeft	;wreg free
  6514   001FD8                     
  6515                           ;dc_motor.c: 213:         a++;
  6516   001FD8  2A26               	incf	turnLeft90@a^0,f,c
  6517   001FDA                     l2883:
  6518                           
  6519                           ;dc_motor.c: 211:     while(a<28){
  6520   001FDA  0E1B               	movlw	27
  6521   001FDC  6426               	cpfsgt	turnLeft90@a^0,c
  6522   001FDE  EFF3  F00F         	goto	u2171
  6523   001FE2  EFF5  F00F         	goto	u2170
  6524   001FE6                     u2171:
  6525   001FE6  EFE2  F00F         	goto	l2879
  6526   001FEA                     u2170:
  6527   001FEA  EF02  F010         	goto	l2889
  6528   001FEE                     l2885:
  6529                           
  6530                           ;dc_motor.c: 216:         stop(mL, mR);
  6531   001FEE  C022  F01C         	movff	turnLeft90@mL,stop@mL
  6532   001FF2  C023  F01D         	movff	turnLeft90@mL+1,stop@mL+1
  6533   001FF6  C024  F01E         	movff	turnLeft90@mR,stop@mR
  6534   001FFA  C025  F01F         	movff	turnLeft90@mR+1,stop@mR+1
  6535   001FFE  ECE8  F00D         	call	_stop	;wreg free
  6536   002002                     
  6537                           ;dc_motor.c: 217:         a--;
  6538   002002  0626               	decf	turnLeft90@a^0,f,c
  6539   002004                     l2889:
  6540                           
  6541                           ;dc_motor.c: 215:     while(a>0){
  6542   002004  5026               	movf	turnLeft90@a^0,w,c
  6543   002006  A4D8               	btfss	status,2,c
  6544   002008  EF08  F010         	goto	u2181
  6545   00200C  EF0A  F010         	goto	u2180
  6546   002010                     u2181:
  6547   002010  EFF7  F00F         	goto	l2885
  6548   002014                     u2180:
  6549   002014  0012               	return		;funcret
  6550   002016                     __end_of_turnLeft90:
  6551                           	callstack 0
  6552                           
  6553 ;; *************** function _turnLeft *****************
  6554 ;; Defined at:
  6555 ;;		line 107 in file "dc_motor.c"
  6556 ;; Parameters:    Size  Location     Type
  6557 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6558 ;;		 -> main@motorL(9), 
  6559 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6560 ;;		 -> main@motorR(9), 
  6561 ;; Auto vars:     Size  Location     Type
  6562 ;;		None
  6563 ;; Return value:  Size  Location     Type
  6564 ;;                  1    wreg      void 
  6565 ;; Registers used:
  6566 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6567 ;; Tracked objects:
  6568 ;;		On entry : 0/0
  6569 ;;		On exit  : 0/0
  6570 ;;		Unchanged: 0/0
  6571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6572 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6574 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6575 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6576 ;;Total ram usage:        6 bytes
  6577 ;; Hardware stack levels used: 1
  6578 ;; Hardware stack levels required when called: 9
  6579 ;; This function calls:
  6580 ;;		_setMotorPWM
  6581 ;; This function is called by:
  6582 ;;		_turnLeft90
  6583 ;;		_turnLeft135
  6584 ;; This function uses a non-reentrant model
  6585 ;;
  6586                           
  6587                           	psect	text30
  6588   00190A                     __ptext30:
  6589                           	callstack 0
  6590   00190A                     _turnLeft:
  6591                           	callstack 17
  6592   00190A                     
  6593                           ;dc_motor.c: 107: void turnLeft(DC_motor *mL, DC_motor *mR);dc_motor.c: 108: {;dc_motor.
      +                          c: 110:     mL->direction = 0;
  6594   00190A  EE20 F001          	lfsr	2,1
  6595   00190E  501C               	movf	turnLeft@mL^0,w,c
  6596   001910  26D9               	addwf	fsr2l,f,c
  6597   001912  501D               	movf	(turnLeft@mL+1)^0,w,c
  6598   001914  22DA               	addwfc	fsr2h,f,c
  6599   001916  0E00               	movlw	0
  6600   001918  6EDF               	movwf	indf2,c
  6601                           
  6602                           ;dc_motor.c: 111:     mL->brakemode = 0;
  6603   00191A  EE20 F002          	lfsr	2,2
  6604   00191E  501C               	movf	turnLeft@mL^0,w,c
  6605   001920  26D9               	addwf	fsr2l,f,c
  6606   001922  501D               	movf	(turnLeft@mL+1)^0,w,c
  6607   001924  22DA               	addwfc	fsr2h,f,c
  6608   001926  0E00               	movlw	0
  6609   001928  6EDF               	movwf	indf2,c
  6610                           
  6611                           ;dc_motor.c: 113:     mR->direction = 1;
  6612   00192A  EE20 F001          	lfsr	2,1
  6613   00192E  501E               	movf	turnLeft@mR^0,w,c
  6614   001930  26D9               	addwf	fsr2l,f,c
  6615   001932  501F               	movf	(turnLeft@mR+1)^0,w,c
  6616   001934  22DA               	addwfc	fsr2h,f,c
  6617   001936  0E01               	movlw	1
  6618   001938  6EDF               	movwf	indf2,c
  6619                           
  6620                           ;dc_motor.c: 114:     mR->brakemode = 0;
  6621   00193A  EE20 F002          	lfsr	2,2
  6622   00193E  501E               	movf	turnLeft@mR^0,w,c
  6623   001940  26D9               	addwf	fsr2l,f,c
  6624   001942  501F               	movf	(turnLeft@mR+1)^0,w,c
  6625   001944  22DA               	addwfc	fsr2h,f,c
  6626   001946  0E00               	movlw	0
  6627   001948  6EDF               	movwf	indf2,c
  6628                           
  6629                           ;dc_motor.c: 117:     if(mL->power>40){mL->power=40;}
  6630   00194A  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6631   00194E  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6632   001952  50DF               	movf	indf2,w,c
  6633   001954  0A80               	xorlw	128
  6634   001956  0F57               	addlw	-169
  6635   001958  A0D8               	btfss	status,0,c
  6636   00195A  EFB1  F00C         	goto	u2091
  6637   00195E  EFB3  F00C         	goto	u2090
  6638   001962                     u2091:
  6639   001962  EFB9  F00C         	goto	l2803
  6640   001966                     u2090:
  6641   001966  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6642   00196A  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6643   00196E  0E28               	movlw	40
  6644   001970  6EDF               	movwf	indf2,c
  6645   001972                     l2803:
  6646                           
  6647                           ;dc_motor.c: 118:     if(mR->power>40){mR->power=40;}
  6648   001972  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6649   001976  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6650   00197A  50DF               	movf	indf2,w,c
  6651   00197C  0A80               	xorlw	128
  6652   00197E  0F57               	addlw	-169
  6653   001980  A0D8               	btfss	status,0,c
  6654   001982  EFC5  F00C         	goto	u2101
  6655   001986  EFC7  F00C         	goto	u2100
  6656   00198A                     u2101:
  6657   00198A  EFCD  F00C         	goto	l2807
  6658   00198E                     u2100:
  6659   00198E  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6660   001992  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6661   001996  0E28               	movlw	40
  6662   001998  6EDF               	movwf	indf2,c
  6663   00199A                     l2807:
  6664                           
  6665                           ;dc_motor.c: 120:     mL->power = mL->power + 10 ;
  6666   00199A  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6667   00199E  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6668   0019A2  50DF               	movf	indf2,w,c
  6669   0019A4  0F0A               	addlw	10
  6670   0019A6  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6671   0019AA  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6672   0019AE  6EDF               	movwf	indf2,c
  6673   0019B0                     
  6674                           ;dc_motor.c: 121:     mR->power = mR->power + 10;
  6675   0019B0  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6676   0019B4  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6677   0019B8  50DF               	movf	indf2,w,c
  6678   0019BA  0F0A               	addlw	10
  6679   0019BC  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6680   0019C0  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6681   0019C4  6EDF               	movwf	indf2,c
  6682   0019C6                     
  6683                           ;dc_motor.c: 123:     setMotorPWM(mL);
  6684   0019C6  C01C  F016         	movff	turnLeft@mL,setMotorPWM@m
  6685   0019CA  C01D  F017         	movff	turnLeft@mL+1,setMotorPWM@m+1
  6686   0019CE  EC5D  F00A         	call	_setMotorPWM	;wreg free
  6687   0019D2                     
  6688                           ;dc_motor.c: 124:     setMotorPWM(mR);
  6689   0019D2  C01E  F016         	movff	turnLeft@mR,setMotorPWM@m
  6690   0019D6  C01F  F017         	movff	turnLeft@mR+1,setMotorPWM@m+1
  6691   0019DA  EC5D  F00A         	call	_setMotorPWM	;wreg free
  6692   0019DE                     
  6693                           ;dc_motor.c: 125:     _delay((unsigned long)((20)*(64000000/4000.0)));
  6694   0019DE  0E02               	movlw	2
  6695   0019E0  6E21               	movwf	(??_turnLeft+1)^0,c
  6696   0019E2  0EA0               	movlw	160
  6697   0019E4  6E20               	movwf	??_turnLeft^0,c
  6698   0019E6  0E92               	movlw	146
  6699   0019E8                     u4727:
  6700   0019E8  2EE8               	decfsz	wreg,f,c
  6701   0019EA  D7FE               	bra	u4727
  6702   0019EC  2E20               	decfsz	??_turnLeft^0,f,c
  6703   0019EE  D7FC               	bra	u4727
  6704   0019F0  2E21               	decfsz	(??_turnLeft+1)^0,f,c
  6705   0019F2  D7FA               	bra	u4727
  6706   0019F4  D000               	nop2	
  6707   0019F6  0012               	return		;funcret
  6708   0019F8                     __end_of_turnLeft:
  6709                           	callstack 0
  6710                           
  6711 ;; *************** function _stop *****************
  6712 ;; Defined at:
  6713 ;;		line 87 in file "dc_motor.c"
  6714 ;; Parameters:    Size  Location     Type
  6715 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6716 ;;		 -> main@motorL(9), 
  6717 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6718 ;;		 -> main@motorR(9), 
  6719 ;; Auto vars:     Size  Location     Type
  6720 ;;		None
  6721 ;; Return value:  Size  Location     Type
  6722 ;;                  1    wreg      void 
  6723 ;; Registers used:
  6724 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6725 ;; Tracked objects:
  6726 ;;		On entry : 0/0
  6727 ;;		On exit  : 0/0
  6728 ;;		Unchanged: 0/0
  6729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6730 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6732 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6733 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6734 ;;Total ram usage:        5 bytes
  6735 ;; Hardware stack levels used: 1
  6736 ;; Hardware stack levels required when called: 9
  6737 ;; This function calls:
  6738 ;;		_setMotorPWM
  6739 ;; This function is called by:
  6740 ;;		_turnLeft90
  6741 ;;		_turnRight90
  6742 ;;		_turnRight135
  6743 ;;		_turnLeft135
  6744 ;;		_main
  6745 ;;		_RedInstructions
  6746 ;;		_GreenInstructions
  6747 ;;		_BlueInstructions
  6748 ;;		_YellowInstructions
  6749 ;;		_PinkInstructions
  6750 ;;		_OrangeInstructions
  6751 ;;		_LightBlueInstructions
  6752 ;;		_AntiYellow
  6753 ;;		_AntiPink
  6754 ;;		_WhiteInstructions
  6755 ;;		_turn180
  6756 ;; This function uses a non-reentrant model
  6757 ;;
  6758                           
  6759                           	psect	text31
  6760   001BD0                     __ptext31:
  6761                           	callstack 0
  6762   001BD0                     _stop:
  6763                           	callstack 21
  6764   001BD0                     
  6765                           ;dc_motor.c: 87: void stop(DC_motor *mL, DC_motor *mR);dc_motor.c: 88: {;dc_motor.c: 90:
      +                               mL->brakemode = 1;
  6766   001BD0  EE20 F002          	lfsr	2,2
  6767   001BD4  501C               	movf	stop@mL^0,w,c
  6768   001BD6  26D9               	addwf	fsr2l,f,c
  6769   001BD8  501D               	movf	(stop@mL+1)^0,w,c
  6770   001BDA  22DA               	addwfc	fsr2h,f,c
  6771   001BDC  0E01               	movlw	1
  6772   001BDE  6EDF               	movwf	indf2,c
  6773                           
  6774                           ;dc_motor.c: 91:     mR->brakemode = 1;
  6775   001BE0  EE20 F002          	lfsr	2,2
  6776   001BE4  501E               	movf	stop@mR^0,w,c
  6777   001BE6  26D9               	addwf	fsr2l,f,c
  6778   001BE8  501F               	movf	(stop@mR+1)^0,w,c
  6779   001BEA  22DA               	addwfc	fsr2h,f,c
  6780   001BEC  0E01               	movlw	1
  6781   001BEE  6EDF               	movwf	indf2,c
  6782                           
  6783                           ;dc_motor.c: 93:     if(mL->power<0){mL->power=0;}
  6784   001BF0  C01C  FFD9         	movff	stop@mL,fsr2l
  6785   001BF4  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6786   001BF8  0E00               	movlw	0
  6787   001BFA  BEDB               	btfsc	plusw2,7,c
  6788   001BFC  EF04  F00E         	goto	u2070
  6789   001C00  EF02  F00E         	goto	u2071
  6790   001C04                     u2071:
  6791   001C04  EF0A  F00E         	goto	l2785
  6792   001C08                     u2070:
  6793   001C08  C01C  FFD9         	movff	stop@mL,fsr2l
  6794   001C0C  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6795   001C10  0E00               	movlw	0
  6796   001C12  6EDF               	movwf	indf2,c
  6797   001C14                     l2785:
  6798                           
  6799                           ;dc_motor.c: 94:     if(mR->power<0){mR->power=0;}
  6800   001C14  C01E  FFD9         	movff	stop@mR,fsr2l
  6801   001C18  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6802   001C1C  0E00               	movlw	0
  6803   001C1E  BEDB               	btfsc	plusw2,7,c
  6804   001C20  EF16  F00E         	goto	u2080
  6805   001C24  EF14  F00E         	goto	u2081
  6806   001C28                     u2081:
  6807   001C28  EF1C  F00E         	goto	l2789
  6808   001C2C                     u2080:
  6809   001C2C  C01E  FFD9         	movff	stop@mR,fsr2l
  6810   001C30  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6811   001C34  0E00               	movlw	0
  6812   001C36  6EDF               	movwf	indf2,c
  6813   001C38                     l2789:
  6814                           
  6815                           ;dc_motor.c: 96:     mL->power = mL->power - 5 ;
  6816   001C38  C01C  FFD9         	movff	stop@mL,fsr2l
  6817   001C3C  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6818   001C40  50DF               	movf	indf2,w,c
  6819   001C42  0FFB               	addlw	251
  6820   001C44  C01C  FFD9         	movff	stop@mL,fsr2l
  6821   001C48  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6822   001C4C  6EDF               	movwf	indf2,c
  6823   001C4E                     
  6824                           ;dc_motor.c: 97:     mR->power = mR->power - 5;
  6825   001C4E  C01E  FFD9         	movff	stop@mR,fsr2l
  6826   001C52  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6827   001C56  50DF               	movf	indf2,w,c
  6828   001C58  0FFB               	addlw	251
  6829   001C5A  C01E  FFD9         	movff	stop@mR,fsr2l
  6830   001C5E  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6831   001C62  6EDF               	movwf	indf2,c
  6832                           
  6833                           ;dc_motor.c: 99:     mL->power = 0;
  6834   001C64  C01C  FFD9         	movff	stop@mL,fsr2l
  6835   001C68  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6836   001C6C  0E00               	movlw	0
  6837   001C6E  6EDF               	movwf	indf2,c
  6838                           
  6839                           ;dc_motor.c: 100:     mR->power = 0;
  6840   001C70  C01E  FFD9         	movff	stop@mR,fsr2l
  6841   001C74  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6842   001C78  0E00               	movlw	0
  6843   001C7A  6EDF               	movwf	indf2,c
  6844   001C7C                     
  6845                           ;dc_motor.c: 101:     setMotorPWM(mL);
  6846   001C7C  C01C  F016         	movff	stop@mL,setMotorPWM@m
  6847   001C80  C01D  F017         	movff	stop@mL+1,setMotorPWM@m+1
  6848   001C84  EC5D  F00A         	call	_setMotorPWM	;wreg free
  6849   001C88                     
  6850                           ;dc_motor.c: 102:     setMotorPWM(mR);
  6851   001C88  C01E  F016         	movff	stop@mR,setMotorPWM@m
  6852   001C8C  C01F  F017         	movff	stop@mR+1,setMotorPWM@m+1
  6853   001C90  EC5D  F00A         	call	_setMotorPWM	;wreg free
  6854   001C94                     
  6855                           ;dc_motor.c: 103:     _delay((unsigned long)((10)*(64000000/4000.0)));
  6856   001C94  0ED0               	movlw	208
  6857   001C96  6E20               	movwf	??_stop^0,c
  6858   001C98  0ECA               	movlw	202
  6859   001C9A                     u4737:
  6860   001C9A  2EE8               	decfsz	wreg,f,c
  6861   001C9C  D7FE               	bra	u4737
  6862   001C9E  2E20               	decfsz	??_stop^0,f,c
  6863   001CA0  D7FC               	bra	u4737
  6864   001CA2  0012               	return		;funcret
  6865   001CA4                     __end_of_stop:
  6866                           	callstack 0
  6867                           
  6868 ;; *************** function _fullSpeedBackwards *****************
  6869 ;; Defined at:
  6870 ;;		line 174 in file "dc_motor.c"
  6871 ;; Parameters:    Size  Location     Type
  6872 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6873 ;;		 -> main@motorL(9), 
  6874 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6875 ;;		 -> main@motorR(9), 
  6876 ;; Auto vars:     Size  Location     Type
  6877 ;;		None
  6878 ;; Return value:  Size  Location     Type
  6879 ;;                  1    wreg      void 
  6880 ;; Registers used:
  6881 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6882 ;; Tracked objects:
  6883 ;;		On entry : 0/0
  6884 ;;		On exit  : 0/0
  6885 ;;		Unchanged: 0/0
  6886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6887 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6889 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6890 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6891 ;;Total ram usage:        6 bytes
  6892 ;; Hardware stack levels used: 1
  6893 ;; Hardware stack levels required when called: 9
  6894 ;; This function calls:
  6895 ;;		_setMotorPWM
  6896 ;; This function is called by:
  6897 ;;		_RedInstructions
  6898 ;;		_GreenInstructions
  6899 ;;		_BlueInstructions
  6900 ;;		_YellowInstructions
  6901 ;;		_PinkInstructions
  6902 ;;		_OrangeInstructions
  6903 ;;		_LightBlueInstructions
  6904 ;; This function uses a non-reentrant model
  6905 ;;
  6906                           
  6907                           	psect	text32
  6908   0019F8                     __ptext32:
  6909                           	callstack 0
  6910   0019F8                     _fullSpeedBackwards:
  6911                           	callstack 18
  6912   0019F8                     
  6913                           ;dc_motor.c: 177:     mL->direction = 0;
  6914   0019F8  EE20 F001          	lfsr	2,1
  6915   0019FC  501C               	movf	fullSpeedBackwards@mL^0,w,c
  6916   0019FE  26D9               	addwf	fsr2l,f,c
  6917   001A00  501D               	movf	(fullSpeedBackwards@mL+1)^0,w,c
  6918   001A02  22DA               	addwfc	fsr2h,f,c
  6919   001A04  0E00               	movlw	0
  6920   001A06  6EDF               	movwf	indf2,c
  6921                           
  6922                           ;dc_motor.c: 178:     mL->brakemode = 0;
  6923   001A08  EE20 F002          	lfsr	2,2
  6924   001A0C  501C               	movf	fullSpeedBackwards@mL^0,w,c
  6925   001A0E  26D9               	addwf	fsr2l,f,c
  6926   001A10  501D               	movf	(fullSpeedBackwards@mL+1)^0,w,c
  6927   001A12  22DA               	addwfc	fsr2h,f,c
  6928   001A14  0E00               	movlw	0
  6929   001A16  6EDF               	movwf	indf2,c
  6930                           
  6931                           ;dc_motor.c: 180:     mR->direction = 0;
  6932   001A18  EE20 F001          	lfsr	2,1
  6933   001A1C  501E               	movf	fullSpeedBackwards@mR^0,w,c
  6934   001A1E  26D9               	addwf	fsr2l,f,c
  6935   001A20  501F               	movf	(fullSpeedBackwards@mR+1)^0,w,c
  6936   001A22  22DA               	addwfc	fsr2h,f,c
  6937   001A24  0E00               	movlw	0
  6938   001A26  6EDF               	movwf	indf2,c
  6939                           
  6940                           ;dc_motor.c: 181:     mR->brakemode = 0;
  6941   001A28  EE20 F002          	lfsr	2,2
  6942   001A2C  501E               	movf	fullSpeedBackwards@mR^0,w,c
  6943   001A2E  26D9               	addwf	fsr2l,f,c
  6944   001A30  501F               	movf	(fullSpeedBackwards@mR+1)^0,w,c
  6945   001A32  22DA               	addwfc	fsr2h,f,c
  6946   001A34  0E00               	movlw	0
  6947   001A36  6EDF               	movwf	indf2,c
  6948                           
  6949                           ;dc_motor.c: 184:     if(mL->power>40){mL->power=40;}
  6950   001A38  C01C  FFD9         	movff	fullSpeedBackwards@mL,fsr2l
  6951   001A3C  C01D  FFDA         	movff	fullSpeedBackwards@mL+1,fsr2h
  6952   001A40  50DF               	movf	indf2,w,c
  6953   001A42  0A80               	xorlw	128
  6954   001A44  0F57               	addlw	-169
  6955   001A46  A0D8               	btfss	status,0,c
  6956   001A48  EF28  F00D         	goto	u2131
  6957   001A4C  EF2A  F00D         	goto	u2130
  6958   001A50                     u2131:
  6959   001A50  EF30  F00D         	goto	l2851
  6960   001A54                     u2130:
  6961   001A54  C01C  FFD9         	movff	fullSpeedBackwards@mL,fsr2l
  6962   001A58  C01D  FFDA         	movff	fullSpeedBackwards@mL+1,fsr2h
  6963   001A5C  0E28               	movlw	40
  6964   001A5E  6EDF               	movwf	indf2,c
  6965   001A60                     l2851:
  6966                           
  6967                           ;dc_motor.c: 185:     if(mR->power>42){mR->power=42;}
  6968   001A60  C01E  FFD9         	movff	fullSpeedBackwards@mR,fsr2l
  6969   001A64  C01F  FFDA         	movff	fullSpeedBackwards@mR+1,fsr2h
  6970   001A68  50DF               	movf	indf2,w,c
  6971   001A6A  0A80               	xorlw	128
  6972   001A6C  0F55               	addlw	-171
  6973   001A6E  A0D8               	btfss	status,0,c
  6974   001A70  EF3C  F00D         	goto	u2141
  6975   001A74  EF3E  F00D         	goto	u2140
  6976   001A78                     u2141:
  6977   001A78  EF44  F00D         	goto	l2855
  6978   001A7C                     u2140:
  6979   001A7C  C01E  FFD9         	movff	fullSpeedBackwards@mR,fsr2l
  6980   001A80  C01F  FFDA         	movff	fullSpeedBackwards@mR+1,fsr2h
  6981   001A84  0E2A               	movlw	42
  6982   001A86  6EDF               	movwf	indf2,c
  6983   001A88                     l2855:
  6984                           
  6985                           ;dc_motor.c: 187:     mL->power = mL->power + 5 ;
  6986   001A88  C01C  FFD9         	movff	fullSpeedBackwards@mL,fsr2l
  6987   001A8C  C01D  FFDA         	movff	fullSpeedBackwards@mL+1,fsr2h
  6988   001A90  50DF               	movf	indf2,w,c
  6989   001A92  0F05               	addlw	5
  6990   001A94  C01C  FFD9         	movff	fullSpeedBackwards@mL,fsr2l
  6991   001A98  C01D  FFDA         	movff	fullSpeedBackwards@mL+1,fsr2h
  6992   001A9C  6EDF               	movwf	indf2,c
  6993   001A9E                     
  6994                           ;dc_motor.c: 188:     mR->power = mR->power + 6;
  6995   001A9E  C01E  FFD9         	movff	fullSpeedBackwards@mR,fsr2l
  6996   001AA2  C01F  FFDA         	movff	fullSpeedBackwards@mR+1,fsr2h
  6997   001AA6  50DF               	movf	indf2,w,c
  6998   001AA8  0F06               	addlw	6
  6999   001AAA  C01E  FFD9         	movff	fullSpeedBackwards@mR,fsr2l
  7000   001AAE  C01F  FFDA         	movff	fullSpeedBackwards@mR+1,fsr2h
  7001   001AB2  6EDF               	movwf	indf2,c
  7002   001AB4                     
  7003                           ;dc_motor.c: 190:     setMotorPWM(mL);
  7004   001AB4  C01C  F016         	movff	fullSpeedBackwards@mL,setMotorPWM@m
  7005   001AB8  C01D  F017         	movff	fullSpeedBackwards@mL+1,setMotorPWM@m+1
  7006   001ABC  EC5D  F00A         	call	_setMotorPWM	;wreg free
  7007   001AC0                     
  7008                           ;dc_motor.c: 191:     setMotorPWM(mR);
  7009   001AC0  C01E  F016         	movff	fullSpeedBackwards@mR,setMotorPWM@m
  7010   001AC4  C01F  F017         	movff	fullSpeedBackwards@mR+1,setMotorPWM@m+1
  7011   001AC8  EC5D  F00A         	call	_setMotorPWM	;wreg free
  7012   001ACC                     
  7013                           ;dc_motor.c: 192:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7014   001ACC  0E05               	movlw	5
  7015   001ACE  6E21               	movwf	(??_fullSpeedBackwards+1)^0,c
  7016   001AD0  0E0F               	movlw	15
  7017   001AD2  6E20               	movwf	??_fullSpeedBackwards^0,c
  7018   001AD4  0EF1               	movlw	241
  7019   001AD6                     u4747:
  7020   001AD6  2EE8               	decfsz	wreg,f,c
  7021   001AD8  D7FE               	bra	u4747
  7022   001ADA  2E20               	decfsz	??_fullSpeedBackwards^0,f,c
  7023   001ADC  D7FC               	bra	u4747
  7024   001ADE  2E21               	decfsz	(??_fullSpeedBackwards+1)^0,f,c
  7025   001AE0  D7FA               	bra	u4747
  7026   001AE2  F000               	nop	
  7027   001AE4  0012               	return		;funcret
  7028   001AE6                     __end_of_fullSpeedBackwards:
  7029                           	callstack 0
  7030                           
  7031 ;; *************** function _setMotorPWM *****************
  7032 ;; Defined at:
  7033 ;;		line 64 in file "dc_motor.c"
  7034 ;; Parameters:    Size  Location     Type
  7035 ;;  m               2   21[COMRAM] PTR struct DC_motor
  7036 ;;		 -> main@motorR(9), main@motorL(9), 
  7037 ;; Auto vars:     Size  Location     Type
  7038 ;;  negDuty         1   26[COMRAM] unsigned char 
  7039 ;;  posDuty         1   25[COMRAM] unsigned char 
  7040 ;; Return value:  Size  Location     Type
  7041 ;;                  1    wreg      void 
  7042 ;; Registers used:
  7043 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7044 ;; Tracked objects:
  7045 ;;		On entry : 0/0
  7046 ;;		On exit  : 0/0
  7047 ;;		Unchanged: 0/0
  7048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7049 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7050 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7051 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7052 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7053 ;;Total ram usage:        6 bytes
  7054 ;; Hardware stack levels used: 1
  7055 ;; Hardware stack levels required when called: 8
  7056 ;; This function calls:
  7057 ;;		___lwdiv
  7058 ;;		___wmul
  7059 ;; This function is called by:
  7060 ;;		_stop
  7061 ;;		_turnLeft
  7062 ;;		_turnRight
  7063 ;;		_fullSpeedAhead
  7064 ;;		_fullSpeedBackwards
  7065 ;; This function uses a non-reentrant model
  7066 ;;
  7067                           
  7068                           	psect	text33
  7069   0014BA                     __ptext33:
  7070                           	callstack 0
  7071   0014BA                     _setMotorPWM:
  7072                           	callstack 21
  7073   0014BA                     
  7074                           ;dc_motor.c: 64: void setMotorPWM(DC_motor *m);dc_motor.c: 65: {;dc_motor.c: 66:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 68:     if(m->brakemode) {
  7075   0014BA  EE20 F002          	lfsr	2,2
  7076   0014BE  5016               	movf	setMotorPWM@m^0,w,c
  7077   0014C0  26D9               	addwf	fsr2l,f,c
  7078   0014C2  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7079   0014C4  22DA               	addwfc	fsr2h,f,c
  7080   0014C6  50DF               	movf	indf2,w,c
  7081   0014C8  B4D8               	btfsc	status,2,c
  7082   0014CA  EF69  F00A         	goto	u2031
  7083   0014CE  EF6B  F00A         	goto	u2030
  7084   0014D2                     u2031:
  7085   0014D2  EF9F  F00A         	goto	l2767
  7086   0014D6                     u2030:
  7087   0014D6                     
  7088                           ;dc_motor.c: 69:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  7089   0014D6  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  7090   0014DA  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  7091   0014DE  50DF               	movf	indf2,w,c
  7092   0014E0  6E09               	movwf	___wmul@multiplier^0,c
  7093   0014E2  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  7094   0014E4  BE09               	btfsc	___wmul@multiplier^0,7,c
  7095   0014E6  060A               	decf	(___wmul@multiplier+1)^0,f,c
  7096   0014E8  EE20 F003          	lfsr	2,3
  7097   0014EC  5016               	movf	setMotorPWM@m^0,w,c
  7098   0014EE  26D9               	addwf	fsr2l,f,c
  7099   0014F0  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7100   0014F2  22DA               	addwfc	fsr2h,f,c
  7101   0014F4  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  7102   0014F8  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  7103   0014FC  EC68  F014         	call	___wmul	;wreg free
  7104   001500  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  7105   001504  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  7106   001508  0E00               	movlw	0
  7107   00150A  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  7108   00150C  0E64               	movlw	100
  7109   00150E  6E11               	movwf	___lwdiv@divisor^0,c
  7110   001510  ECE5  F011         	call	___lwdiv	;wreg free
  7111   001514  EE20 F003          	lfsr	2,3
  7112   001518  5016               	movf	setMotorPWM@m^0,w,c
  7113   00151A  26D9               	addwf	fsr2l,f,c
  7114   00151C  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7115   00151E  22DA               	addwfc	fsr2h,f,c
  7116   001520  50DF               	movf	indf2,w,c
  7117   001522  6E18               	movwf	??_setMotorPWM^0,c
  7118   001524  500F               	movf	?___lwdiv^0,w,c
  7119   001526  5C18               	subwf	??_setMotorPWM^0,w,c
  7120   001528  6E1A               	movwf	setMotorPWM@posDuty^0,c
  7121   00152A                     
  7122                           ;dc_motor.c: 70:         negDuty=m->PWMperiod;
  7123   00152A  EE20 F003          	lfsr	2,3
  7124   00152E  5016               	movf	setMotorPWM@m^0,w,c
  7125   001530  26D9               	addwf	fsr2l,f,c
  7126   001532  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7127   001534  22DA               	addwfc	fsr2h,f,c
  7128   001536  50DF               	movf	indf2,w,c
  7129   001538  6E1B               	movwf	setMotorPWM@negDuty^0,c
  7130                           
  7131                           ;dc_motor.c: 71:     }
  7132   00153A  EFC2  F00A         	goto	l2771
  7133   00153E                     l2767:
  7134                           
  7135                           ;dc_motor.c: 73:         posDuty=0;
  7136   00153E  0E00               	movlw	0
  7137   001540  6E1A               	movwf	setMotorPWM@posDuty^0,c
  7138   001542                     
  7139                           ;dc_motor.c: 74:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  7140   001542  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  7141   001546  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  7142   00154A  50DF               	movf	indf2,w,c
  7143   00154C  6E09               	movwf	___wmul@multiplier^0,c
  7144   00154E  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  7145   001550  BE09               	btfsc	___wmul@multiplier^0,7,c
  7146   001552  060A               	decf	(___wmul@multiplier+1)^0,f,c
  7147   001554  EE20 F003          	lfsr	2,3
  7148   001558  5016               	movf	setMotorPWM@m^0,w,c
  7149   00155A  26D9               	addwf	fsr2l,f,c
  7150   00155C  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7151   00155E  22DA               	addwfc	fsr2h,f,c
  7152   001560  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  7153   001564  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  7154   001568  EC68  F014         	call	___wmul	;wreg free
  7155   00156C  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  7156   001570  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  7157   001574  0E00               	movlw	0
  7158   001576  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  7159   001578  0E64               	movlw	100
  7160   00157A  6E11               	movwf	___lwdiv@divisor^0,c
  7161   00157C  ECE5  F011         	call	___lwdiv	;wreg free
  7162   001580  500F               	movf	?___lwdiv^0,w,c
  7163   001582  6E1B               	movwf	setMotorPWM@negDuty^0,c
  7164   001584                     l2771:
  7165                           
  7166                           ;dc_motor.c: 77:     if (m->direction) {
  7167   001584  EE20 F001          	lfsr	2,1
  7168   001588  5016               	movf	setMotorPWM@m^0,w,c
  7169   00158A  26D9               	addwf	fsr2l,f,c
  7170   00158C  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7171   00158E  22DA               	addwfc	fsr2h,f,c
  7172   001590  50DF               	movf	indf2,w,c
  7173   001592  B4D8               	btfsc	status,2,c
  7174   001594  EFCE  F00A         	goto	u2041
  7175   001598  EFD0  F00A         	goto	u2040
  7176   00159C                     u2041:
  7177   00159C  EFF2  F00A         	goto	l2775
  7178   0015A0                     u2040:
  7179   0015A0                     
  7180                           ;dc_motor.c: 78:         *(m->posDutyHighByte)=posDuty;
  7181   0015A0  EE20 F005          	lfsr	2,5
  7182   0015A4  5016               	movf	setMotorPWM@m^0,w,c
  7183   0015A6  26D9               	addwf	fsr2l,f,c
  7184   0015A8  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7185   0015AA  22DA               	addwfc	fsr2h,f,c
  7186   0015AC  CFDE F018          	movff	postinc2,??_setMotorPWM
  7187   0015B0  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  7188   0015B4  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  7189   0015B8  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  7190   0015BC  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  7191                           
  7192                           ;dc_motor.c: 79:         *(m->negDutyHighByte)=negDuty;
  7193   0015C0  EE20 F007          	lfsr	2,7
  7194   0015C4  5016               	movf	setMotorPWM@m^0,w,c
  7195   0015C6  26D9               	addwf	fsr2l,f,c
  7196   0015C8  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7197   0015CA  22DA               	addwfc	fsr2h,f,c
  7198   0015CC  CFDE F018          	movff	postinc2,??_setMotorPWM
  7199   0015D0  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  7200   0015D4  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  7201   0015D8  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  7202   0015DC  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  7203                           
  7204                           ;dc_motor.c: 80:     } else {
  7205   0015E0  EF12  F00B         	goto	l191
  7206   0015E4                     l2775:
  7207                           
  7208                           ;dc_motor.c: 81:         *(m->posDutyHighByte)=negDuty;
  7209   0015E4  EE20 F005          	lfsr	2,5
  7210   0015E8  5016               	movf	setMotorPWM@m^0,w,c
  7211   0015EA  26D9               	addwf	fsr2l,f,c
  7212   0015EC  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7213   0015EE  22DA               	addwfc	fsr2h,f,c
  7214   0015F0  CFDE F018          	movff	postinc2,??_setMotorPWM
  7215   0015F4  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  7216   0015F8  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  7217   0015FC  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  7218   001600  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  7219                           
  7220                           ;dc_motor.c: 82:         *(m->negDutyHighByte)=posDuty;
  7221   001604  EE20 F007          	lfsr	2,7
  7222   001608  5016               	movf	setMotorPWM@m^0,w,c
  7223   00160A  26D9               	addwf	fsr2l,f,c
  7224   00160C  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7225   00160E  22DA               	addwfc	fsr2h,f,c
  7226   001610  CFDE F018          	movff	postinc2,??_setMotorPWM
  7227   001614  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  7228   001618  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  7229   00161C  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  7230   001620  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  7231   001624                     l191:
  7232   001624  0012               	return		;funcret
  7233   001626                     __end_of_setMotorPWM:
  7234                           	callstack 0
  7235                           
  7236 ;; *************** function ___wmul *****************
  7237 ;; Defined at:
  7238 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  7239 ;; Parameters:    Size  Location     Type
  7240 ;;  multiplier      2    8[COMRAM] unsigned int 
  7241 ;;  multiplicand    2   10[COMRAM] unsigned int 
  7242 ;; Auto vars:     Size  Location     Type
  7243 ;;  product         2   12[COMRAM] unsigned int 
  7244 ;; Return value:  Size  Location     Type
  7245 ;;                  2    8[COMRAM] unsigned int 
  7246 ;; Registers used:
  7247 ;;		wreg, status,2, status,0, prodl, prodh
  7248 ;; Tracked objects:
  7249 ;;		On entry : 0/0
  7250 ;;		On exit  : 0/0
  7251 ;;		Unchanged: 0/0
  7252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7253 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7254 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7256 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7257 ;;Total ram usage:        6 bytes
  7258 ;; Hardware stack levels used: 1
  7259 ;; Hardware stack levels required when called: 7
  7260 ;; This function calls:
  7261 ;;		Nothing
  7262 ;; This function is called by:
  7263 ;;		_setMotorPWM
  7264 ;; This function uses a non-reentrant model
  7265 ;;
  7266                           
  7267                           	psect	text34
  7268   0028D0                     __ptext34:
  7269                           	callstack 0
  7270   0028D0                     ___wmul:
  7271                           	callstack 21
  7272   0028D0  5009               	movf	___wmul@multiplier^0,w,c
  7273   0028D2  020B               	mulwf	___wmul@multiplicand^0,c
  7274   0028D4  CFF3 F00D          	movff	prodl,___wmul@product
  7275   0028D8  CFF4 F00E          	movff	prodh,___wmul@product+1
  7276   0028DC  5009               	movf	___wmul@multiplier^0,w,c
  7277   0028DE  020C               	mulwf	(___wmul@multiplicand+1)^0,c
  7278   0028E0  50F3               	movf	243,w,c
  7279   0028E2  260E               	addwf	(___wmul@product+1)^0,f,c
  7280   0028E4  500A               	movf	(___wmul@multiplier+1)^0,w,c
  7281   0028E6  020B               	mulwf	___wmul@multiplicand^0,c
  7282   0028E8  50F3               	movf	243,w,c
  7283   0028EA  260E               	addwf	(___wmul@product+1)^0,f,c
  7284   0028EC  C00D  F009         	movff	___wmul@product,?___wmul
  7285   0028F0  C00E  F00A         	movff	___wmul@product+1,?___wmul+1
  7286   0028F4  0012               	return		;funcret
  7287   0028F6                     __end_of___wmul:
  7288                           	callstack 0
  7289                           
  7290 ;; *************** function ___lwdiv *****************
  7291 ;; Defined at:
  7292 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  7293 ;; Parameters:    Size  Location     Type
  7294 ;;  dividend        2   14[COMRAM] unsigned int 
  7295 ;;  divisor         2   16[COMRAM] unsigned int 
  7296 ;; Auto vars:     Size  Location     Type
  7297 ;;  quotient        2   18[COMRAM] unsigned int 
  7298 ;;  counter         1   20[COMRAM] unsigned char 
  7299 ;; Return value:  Size  Location     Type
  7300 ;;                  2   14[COMRAM] unsigned int 
  7301 ;; Registers used:
  7302 ;;		wreg, status,2, status,0
  7303 ;; Tracked objects:
  7304 ;;		On entry : 0/0
  7305 ;;		On exit  : 0/0
  7306 ;;		Unchanged: 0/0
  7307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7308 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7309 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7311 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7312 ;;Total ram usage:        7 bytes
  7313 ;; Hardware stack levels used: 1
  7314 ;; Hardware stack levels required when called: 7
  7315 ;; This function calls:
  7316 ;;		Nothing
  7317 ;; This function is called by:
  7318 ;;		_setMotorPWM
  7319 ;; This function uses a non-reentrant model
  7320 ;;
  7321                           
  7322                           	psect	text35
  7323   0023CA                     __ptext35:
  7324                           	callstack 0
  7325   0023CA                     ___lwdiv:
  7326                           	callstack 21
  7327   0023CA  0E00               	movlw	0
  7328   0023CC  6E14               	movwf	(___lwdiv@quotient+1)^0,c
  7329   0023CE  0E00               	movlw	0
  7330   0023D0  6E13               	movwf	___lwdiv@quotient^0,c
  7331   0023D2  5011               	movf	___lwdiv@divisor^0,w,c
  7332   0023D4  1012               	iorwf	(___lwdiv@divisor+1)^0,w,c
  7333   0023D6  B4D8               	btfsc	status,2,c
  7334   0023D8  EFF0  F011         	goto	u2001
  7335   0023DC  EFF2  F011         	goto	u2000
  7336   0023E0                     u2001:
  7337   0023E0  EF1A  F012         	goto	l1191
  7338   0023E4                     u2000:
  7339   0023E4  0E01               	movlw	1
  7340   0023E6  6E15               	movwf	___lwdiv@counter^0,c
  7341   0023E8  EFFA  F011         	goto	l2747
  7342   0023EC                     l2745:
  7343   0023EC  90D8               	bcf	status,0,c
  7344   0023EE  3611               	rlcf	___lwdiv@divisor^0,f,c
  7345   0023F0  3612               	rlcf	(___lwdiv@divisor+1)^0,f,c
  7346   0023F2  2A15               	incf	___lwdiv@counter^0,f,c
  7347   0023F4                     l2747:
  7348   0023F4  AE12               	btfss	(___lwdiv@divisor+1)^0,7,c
  7349   0023F6  EFFF  F011         	goto	u2011
  7350   0023FA  EF01  F012         	goto	u2010
  7351   0023FE                     u2011:
  7352   0023FE  EFF6  F011         	goto	l2745
  7353   002402                     u2010:
  7354   002402                     l2749:
  7355   002402  90D8               	bcf	status,0,c
  7356   002404  3613               	rlcf	___lwdiv@quotient^0,f,c
  7357   002406  3614               	rlcf	(___lwdiv@quotient+1)^0,f,c
  7358   002408  5011               	movf	___lwdiv@divisor^0,w,c
  7359   00240A  5C0F               	subwf	___lwdiv@dividend^0,w,c
  7360   00240C  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  7361   00240E  5810               	subwfb	(___lwdiv@dividend+1)^0,w,c
  7362   002410  A0D8               	btfss	status,0,c
  7363   002412  EF0D  F012         	goto	u2021
  7364   002416  EF0F  F012         	goto	u2020
  7365   00241A                     u2021:
  7366   00241A  EF14  F012         	goto	l2757
  7367   00241E                     u2020:
  7368   00241E  5011               	movf	___lwdiv@divisor^0,w,c
  7369   002420  5E0F               	subwf	___lwdiv@dividend^0,f,c
  7370   002422  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  7371   002424  5A10               	subwfb	(___lwdiv@dividend+1)^0,f,c
  7372   002426  8013               	bsf	___lwdiv@quotient^0,0,c
  7373   002428                     l2757:
  7374   002428  90D8               	bcf	status,0,c
  7375   00242A  3212               	rrcf	(___lwdiv@divisor+1)^0,f,c
  7376   00242C  3211               	rrcf	___lwdiv@divisor^0,f,c
  7377   00242E  2E15               	decfsz	___lwdiv@counter^0,f,c
  7378   002430  EF01  F012         	goto	l2749
  7379   002434                     l1191:
  7380   002434  C013  F00F         	movff	___lwdiv@quotient,?___lwdiv
  7381   002438  C014  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7382   00243C  0012               	return		;funcret
  7383   00243E                     __end_of___lwdiv:
  7384                           	callstack 0
  7385                           
  7386 ;; *************** function _Update_RGBC *****************
  7387 ;; Defined at:
  7388 ;;		line 90 in file "color.c"
  7389 ;; Parameters:    Size  Location     Type
  7390 ;;  tempval         2   19[COMRAM] PTR struct RGB_val
  7391 ;;		 -> main@initial_color(8), 
  7392 ;; Auto vars:     Size  Location     Type
  7393 ;;		None
  7394 ;; Return value:  Size  Location     Type
  7395 ;;                  1    wreg      void 
  7396 ;; Registers used:
  7397 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7398 ;; Tracked objects:
  7399 ;;		On entry : 0/0
  7400 ;;		On exit  : 0/0
  7401 ;;		Unchanged: 0/0
  7402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7403 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7406 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7407 ;;Total ram usage:        2 bytes
  7408 ;; Hardware stack levels used: 1
  7409 ;; Hardware stack levels required when called: 10
  7410 ;; This function calls:
  7411 ;;		_color_read_Blue
  7412 ;;		_color_read_Clear
  7413 ;;		_color_read_Green
  7414 ;;		_color_read_Red
  7415 ;; This function is called by:
  7416 ;;		_main
  7417 ;; This function uses a non-reentrant model
  7418 ;;
  7419                           
  7420                           	psect	text36
  7421   00243E                     __ptext36:
  7422                           	callstack 0
  7423   00243E                     _Update_RGBC:
  7424                           	callstack 20
  7425   00243E                     
  7426                           ;color.c: 92:     tempval->R = color_read_Red();
  7427   00243E  ECA8  F012         	call	_color_read_Red	;wreg free
  7428   002442  C014  FFD9         	movff	Update_RGBC@tempval,fsr2l
  7429   002446  C015  FFDA         	movff	Update_RGBC@tempval+1,fsr2h
  7430   00244A  C00D  FFDE         	movff	?_color_read_Red,postinc2
  7431   00244E  C00E  FFDD         	movff	?_color_read_Red+1,postdec2
  7432                           
  7433                           ;color.c: 93:     tempval->G = color_read_Green();
  7434   002452  ECD0  F012         	call	_color_read_Green	;wreg free
  7435   002456  EE20 F002          	lfsr	2,2
  7436   00245A  5014               	movf	Update_RGBC@tempval^0,w,c
  7437   00245C  26D9               	addwf	fsr2l,f,c
  7438   00245E  5015               	movf	(Update_RGBC@tempval+1)^0,w,c
  7439   002460  22DA               	addwfc	fsr2h,f,c
  7440   002462  C00D  FFDE         	movff	?_color_read_Green,postinc2
  7441   002466  C00E  FFDD         	movff	?_color_read_Green+1,postdec2
  7442                           
  7443                           ;color.c: 94:     tempval->B = color_read_Blue();
  7444   00246A  EC20  F013         	call	_color_read_Blue	;wreg free
  7445   00246E  EE20 F004          	lfsr	2,4
  7446   002472  5014               	movf	Update_RGBC@tempval^0,w,c
  7447   002474  26D9               	addwf	fsr2l,f,c
  7448   002476  5015               	movf	(Update_RGBC@tempval+1)^0,w,c
  7449   002478  22DA               	addwfc	fsr2h,f,c
  7450   00247A  C00D  FFDE         	movff	?_color_read_Blue,postinc2
  7451   00247E  C00E  FFDD         	movff	?_color_read_Blue+1,postdec2
  7452                           
  7453                           ;color.c: 95:     tempval->C = color_read_Clear();
  7454   002482  ECF8  F012         	call	_color_read_Clear	;wreg free
  7455   002486  EE20 F006          	lfsr	2,6
  7456   00248A  5014               	movf	Update_RGBC@tempval^0,w,c
  7457   00248C  26D9               	addwf	fsr2l,f,c
  7458   00248E  5015               	movf	(Update_RGBC@tempval+1)^0,w,c
  7459   002490  22DA               	addwfc	fsr2h,f,c
  7460   002492  C00D  FFDE         	movff	?_color_read_Clear,postinc2
  7461   002496  C00E  FFDD         	movff	?_color_read_Clear+1,postdec2
  7462   00249A  0012               	return		;funcret
  7463   00249C                     __end_of_Update_RGBC:
  7464                           	callstack 0
  7465                           
  7466 ;; *************** function _color_read_Red *****************
  7467 ;; Defined at:
  7468 ;;		line 32 in file "color.c"
  7469 ;; Parameters:    Size  Location     Type
  7470 ;;		None
  7471 ;; Auto vars:     Size  Location     Type
  7472 ;;  tmp             2   17[COMRAM] unsigned int 
  7473 ;; Return value:  Size  Location     Type
  7474 ;;                  2   12[COMRAM] unsigned int 
  7475 ;; Registers used:
  7476 ;;		wreg, status,2, status,0, cstack
  7477 ;; Tracked objects:
  7478 ;;		On entry : 0/0
  7479 ;;		On exit  : 0/0
  7480 ;;		Unchanged: 0/0
  7481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7482 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7483 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7484 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7485 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7486 ;;Total ram usage:        7 bytes
  7487 ;; Hardware stack levels used: 1
  7488 ;; Hardware stack levels required when called: 9
  7489 ;; This function calls:
  7490 ;;		_I2C_2_Master_Read
  7491 ;;		_I2C_2_Master_RepStart
  7492 ;;		_I2C_2_Master_Start
  7493 ;;		_I2C_2_Master_Stop
  7494 ;;		_I2C_2_Master_Write
  7495 ;; This function is called by:
  7496 ;;		_Update_RGBC
  7497 ;; This function uses a non-reentrant model
  7498 ;;
  7499                           
  7500                           	psect	text37
  7501   002550                     __ptext37:
  7502                           	callstack 0
  7503   002550                     _color_read_Red:
  7504                           	callstack 20
  7505   002550                     
  7506                           ;color.c: 34:  unsigned int tmp;;color.c: 35:  I2C_2_Master_Start();
  7507   002550  EC25  F015         	call	_I2C_2_Master_Start	;wreg free
  7508                           
  7509                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x00);
  7510   002554  0E52               	movlw	82
  7511   002556  EC0F  F015         	call	_I2C_2_Master_Write
  7512                           
  7513                           ;color.c: 37:  I2C_2_Master_Write(0xA0 | 0x16);
  7514   00255A  0EB6               	movlw	182
  7515   00255C  EC0F  F015         	call	_I2C_2_Master_Write
  7516                           
  7517                           ;color.c: 38:  I2C_2_Master_RepStart();
  7518   002560  EC1B  F015         	call	_I2C_2_Master_RepStart	;wreg free
  7519                           
  7520                           ;color.c: 39:  I2C_2_Master_Write(0x52 | 0x01);
  7521   002564  0E53               	movlw	83
  7522   002566  EC0F  F015         	call	_I2C_2_Master_Write
  7523                           
  7524                           ;color.c: 40:  tmp=I2C_2_Master_Read(1);
  7525   00256A  0E01               	movlw	1
  7526   00256C  ECBB  F013         	call	_I2C_2_Master_Read
  7527   002570  6E0F               	movwf	??_color_read_Red^0,c
  7528   002572  500F               	movf	??_color_read_Red^0,w,c
  7529   002574  6E12               	movwf	color_read_Red@tmp^0,c
  7530   002576  6A13               	clrf	(color_read_Red@tmp+1)^0,c
  7531                           
  7532                           ;color.c: 41:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7533   002578  0E00               	movlw	0
  7534   00257A  ECBB  F013         	call	_I2C_2_Master_Read
  7535   00257E  6E0F               	movwf	??_color_read_Red^0,c
  7536   002580  500F               	movf	??_color_read_Red^0,w,c
  7537   002582  6E11               	movwf	(??_color_read_Red+2)^0,c
  7538   002584  6A10               	clrf	(??_color_read_Red+1)^0,c
  7539   002586  5012               	movf	color_read_Red@tmp^0,w,c
  7540   002588  1010               	iorwf	(??_color_read_Red+1)^0,w,c
  7541   00258A  6E12               	movwf	color_read_Red@tmp^0,c
  7542   00258C  5013               	movf	(color_read_Red@tmp+1)^0,w,c
  7543   00258E  1011               	iorwf	(??_color_read_Red+2)^0,w,c
  7544   002590  6E13               	movwf	(color_read_Red@tmp+1)^0,c
  7545                           
  7546                           ;color.c: 42:  I2C_2_Master_Stop();
  7547   002592  EC20  F015         	call	_I2C_2_Master_Stop	;wreg free
  7548   002596                     
  7549                           ;color.c: 43:  return tmp;
  7550   002596  C012  F00D         	movff	color_read_Red@tmp,?_color_read_Red
  7551   00259A  C013  F00E         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  7552   00259E  0012               	return		;funcret
  7553   0025A0                     __end_of_color_read_Red:
  7554                           	callstack 0
  7555                           
  7556 ;; *************** function _color_read_Green *****************
  7557 ;; Defined at:
  7558 ;;		line 46 in file "color.c"
  7559 ;; Parameters:    Size  Location     Type
  7560 ;;		None
  7561 ;; Auto vars:     Size  Location     Type
  7562 ;;  tmp             2   17[COMRAM] unsigned int 
  7563 ;; Return value:  Size  Location     Type
  7564 ;;                  2   12[COMRAM] unsigned int 
  7565 ;; Registers used:
  7566 ;;		wreg, status,2, status,0, cstack
  7567 ;; Tracked objects:
  7568 ;;		On entry : 0/0
  7569 ;;		On exit  : 0/0
  7570 ;;		Unchanged: 0/0
  7571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7572 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7573 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7574 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7575 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7576 ;;Total ram usage:        7 bytes
  7577 ;; Hardware stack levels used: 1
  7578 ;; Hardware stack levels required when called: 9
  7579 ;; This function calls:
  7580 ;;		_I2C_2_Master_Read
  7581 ;;		_I2C_2_Master_RepStart
  7582 ;;		_I2C_2_Master_Start
  7583 ;;		_I2C_2_Master_Stop
  7584 ;;		_I2C_2_Master_Write
  7585 ;; This function is called by:
  7586 ;;		_Update_RGBC
  7587 ;; This function uses a non-reentrant model
  7588 ;;
  7589                           
  7590                           	psect	text38
  7591   0025A0                     __ptext38:
  7592                           	callstack 0
  7593   0025A0                     _color_read_Green:
  7594                           	callstack 20
  7595   0025A0                     
  7596                           ;color.c: 48:  unsigned int tmp;;color.c: 49:  I2C_2_Master_Start();
  7597   0025A0  EC25  F015         	call	_I2C_2_Master_Start	;wreg free
  7598                           
  7599                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x00);
  7600   0025A4  0E52               	movlw	82
  7601   0025A6  EC0F  F015         	call	_I2C_2_Master_Write
  7602                           
  7603                           ;color.c: 51:  I2C_2_Master_Write(0xA0 | 0x18);
  7604   0025AA  0EB8               	movlw	184
  7605   0025AC  EC0F  F015         	call	_I2C_2_Master_Write
  7606                           
  7607                           ;color.c: 52:  I2C_2_Master_RepStart();
  7608   0025B0  EC1B  F015         	call	_I2C_2_Master_RepStart	;wreg free
  7609                           
  7610                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x01);
  7611   0025B4  0E53               	movlw	83
  7612   0025B6  EC0F  F015         	call	_I2C_2_Master_Write
  7613                           
  7614                           ;color.c: 54:  tmp=I2C_2_Master_Read(1);
  7615   0025BA  0E01               	movlw	1
  7616   0025BC  ECBB  F013         	call	_I2C_2_Master_Read
  7617   0025C0  6E0F               	movwf	??_color_read_Green^0,c
  7618   0025C2  500F               	movf	??_color_read_Green^0,w,c
  7619   0025C4  6E12               	movwf	color_read_Green@tmp^0,c
  7620   0025C6  6A13               	clrf	(color_read_Green@tmp+1)^0,c
  7621                           
  7622                           ;color.c: 55:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7623   0025C8  0E00               	movlw	0
  7624   0025CA  ECBB  F013         	call	_I2C_2_Master_Read
  7625   0025CE  6E0F               	movwf	??_color_read_Green^0,c
  7626   0025D0  500F               	movf	??_color_read_Green^0,w,c
  7627   0025D2  6E11               	movwf	(??_color_read_Green+2)^0,c
  7628   0025D4  6A10               	clrf	(??_color_read_Green+1)^0,c
  7629   0025D6  5012               	movf	color_read_Green@tmp^0,w,c
  7630   0025D8  1010               	iorwf	(??_color_read_Green+1)^0,w,c
  7631   0025DA  6E12               	movwf	color_read_Green@tmp^0,c
  7632   0025DC  5013               	movf	(color_read_Green@tmp+1)^0,w,c
  7633   0025DE  1011               	iorwf	(??_color_read_Green+2)^0,w,c
  7634   0025E0  6E13               	movwf	(color_read_Green@tmp+1)^0,c
  7635                           
  7636                           ;color.c: 56:  I2C_2_Master_Stop();
  7637   0025E2  EC20  F015         	call	_I2C_2_Master_Stop	;wreg free
  7638   0025E6                     
  7639                           ;color.c: 57:  return tmp;
  7640   0025E6  C012  F00D         	movff	color_read_Green@tmp,?_color_read_Green
  7641   0025EA  C013  F00E         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  7642   0025EE  0012               	return		;funcret
  7643   0025F0                     __end_of_color_read_Green:
  7644                           	callstack 0
  7645                           
  7646 ;; *************** function _color_read_Clear *****************
  7647 ;; Defined at:
  7648 ;;		line 74 in file "color.c"
  7649 ;; Parameters:    Size  Location     Type
  7650 ;;		None
  7651 ;; Auto vars:     Size  Location     Type
  7652 ;;  tmp             2   17[COMRAM] unsigned int 
  7653 ;; Return value:  Size  Location     Type
  7654 ;;                  2   12[COMRAM] unsigned int 
  7655 ;; Registers used:
  7656 ;;		wreg, status,2, status,0, cstack
  7657 ;; Tracked objects:
  7658 ;;		On entry : 0/0
  7659 ;;		On exit  : 0/0
  7660 ;;		Unchanged: 0/0
  7661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7662 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7663 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7664 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7665 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7666 ;;Total ram usage:        7 bytes
  7667 ;; Hardware stack levels used: 1
  7668 ;; Hardware stack levels required when called: 9
  7669 ;; This function calls:
  7670 ;;		_I2C_2_Master_Read
  7671 ;;		_I2C_2_Master_RepStart
  7672 ;;		_I2C_2_Master_Start
  7673 ;;		_I2C_2_Master_Stop
  7674 ;;		_I2C_2_Master_Write
  7675 ;; This function is called by:
  7676 ;;		_Update_RGBC
  7677 ;; This function uses a non-reentrant model
  7678 ;;
  7679                           
  7680                           	psect	text39
  7681   0025F0                     __ptext39:
  7682                           	callstack 0
  7683   0025F0                     _color_read_Clear:
  7684                           	callstack 20
  7685   0025F0                     
  7686                           ;color.c: 76:  unsigned int tmp;;color.c: 77:  I2C_2_Master_Start();
  7687   0025F0  EC25  F015         	call	_I2C_2_Master_Start	;wreg free
  7688                           
  7689                           ;color.c: 78:  I2C_2_Master_Write(0x52 | 0x00);
  7690   0025F4  0E52               	movlw	82
  7691   0025F6  EC0F  F015         	call	_I2C_2_Master_Write
  7692                           
  7693                           ;color.c: 79:  I2C_2_Master_Write(0xA0 | 0x14);
  7694   0025FA  0EB4               	movlw	180
  7695   0025FC  EC0F  F015         	call	_I2C_2_Master_Write
  7696                           
  7697                           ;color.c: 80:  I2C_2_Master_RepStart();
  7698   002600  EC1B  F015         	call	_I2C_2_Master_RepStart	;wreg free
  7699                           
  7700                           ;color.c: 81:  I2C_2_Master_Write(0x52 | 0x01);
  7701   002604  0E53               	movlw	83
  7702   002606  EC0F  F015         	call	_I2C_2_Master_Write
  7703                           
  7704                           ;color.c: 82:  tmp=I2C_2_Master_Read(1);
  7705   00260A  0E01               	movlw	1
  7706   00260C  ECBB  F013         	call	_I2C_2_Master_Read
  7707   002610  6E0F               	movwf	??_color_read_Clear^0,c
  7708   002612  500F               	movf	??_color_read_Clear^0,w,c
  7709   002614  6E12               	movwf	color_read_Clear@tmp^0,c
  7710   002616  6A13               	clrf	(color_read_Clear@tmp+1)^0,c
  7711                           
  7712                           ;color.c: 83:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7713   002618  0E00               	movlw	0
  7714   00261A  ECBB  F013         	call	_I2C_2_Master_Read
  7715   00261E  6E0F               	movwf	??_color_read_Clear^0,c
  7716   002620  500F               	movf	??_color_read_Clear^0,w,c
  7717   002622  6E11               	movwf	(??_color_read_Clear+2)^0,c
  7718   002624  6A10               	clrf	(??_color_read_Clear+1)^0,c
  7719   002626  5012               	movf	color_read_Clear@tmp^0,w,c
  7720   002628  1010               	iorwf	(??_color_read_Clear+1)^0,w,c
  7721   00262A  6E12               	movwf	color_read_Clear@tmp^0,c
  7722   00262C  5013               	movf	(color_read_Clear@tmp+1)^0,w,c
  7723   00262E  1011               	iorwf	(??_color_read_Clear+2)^0,w,c
  7724   002630  6E13               	movwf	(color_read_Clear@tmp+1)^0,c
  7725                           
  7726                           ;color.c: 84:  I2C_2_Master_Stop();
  7727   002632  EC20  F015         	call	_I2C_2_Master_Stop	;wreg free
  7728   002636                     
  7729                           ;color.c: 85:  return tmp;
  7730   002636  C012  F00D         	movff	color_read_Clear@tmp,?_color_read_Clear
  7731   00263A  C013  F00E         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  7732   00263E  0012               	return		;funcret
  7733   002640                     __end_of_color_read_Clear:
  7734                           	callstack 0
  7735                           
  7736 ;; *************** function _color_read_Blue *****************
  7737 ;; Defined at:
  7738 ;;		line 60 in file "color.c"
  7739 ;; Parameters:    Size  Location     Type
  7740 ;;		None
  7741 ;; Auto vars:     Size  Location     Type
  7742 ;;  tmp             2   17[COMRAM] unsigned int 
  7743 ;; Return value:  Size  Location     Type
  7744 ;;                  2   12[COMRAM] unsigned int 
  7745 ;; Registers used:
  7746 ;;		wreg, status,2, status,0, cstack
  7747 ;; Tracked objects:
  7748 ;;		On entry : 0/0
  7749 ;;		On exit  : 0/0
  7750 ;;		Unchanged: 0/0
  7751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7752 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7753 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7754 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7755 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7756 ;;Total ram usage:        7 bytes
  7757 ;; Hardware stack levels used: 1
  7758 ;; Hardware stack levels required when called: 9
  7759 ;; This function calls:
  7760 ;;		_I2C_2_Master_Read
  7761 ;;		_I2C_2_Master_RepStart
  7762 ;;		_I2C_2_Master_Start
  7763 ;;		_I2C_2_Master_Stop
  7764 ;;		_I2C_2_Master_Write
  7765 ;; This function is called by:
  7766 ;;		_Update_RGBC
  7767 ;; This function uses a non-reentrant model
  7768 ;;
  7769                           
  7770                           	psect	text40
  7771   002640                     __ptext40:
  7772                           	callstack 0
  7773   002640                     _color_read_Blue:
  7774                           	callstack 20
  7775   002640                     
  7776                           ;color.c: 62:  unsigned int tmp;;color.c: 63:  I2C_2_Master_Start();
  7777   002640  EC25  F015         	call	_I2C_2_Master_Start	;wreg free
  7778                           
  7779                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x00);
  7780   002644  0E52               	movlw	82
  7781   002646  EC0F  F015         	call	_I2C_2_Master_Write
  7782                           
  7783                           ;color.c: 65:  I2C_2_Master_Write(0xA0 | 0x1A);
  7784   00264A  0EBA               	movlw	186
  7785   00264C  EC0F  F015         	call	_I2C_2_Master_Write
  7786                           
  7787                           ;color.c: 66:  I2C_2_Master_RepStart();
  7788   002650  EC1B  F015         	call	_I2C_2_Master_RepStart	;wreg free
  7789                           
  7790                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x01);
  7791   002654  0E53               	movlw	83
  7792   002656  EC0F  F015         	call	_I2C_2_Master_Write
  7793                           
  7794                           ;color.c: 68:  tmp=I2C_2_Master_Read(1);
  7795   00265A  0E01               	movlw	1
  7796   00265C  ECBB  F013         	call	_I2C_2_Master_Read
  7797   002660  6E0F               	movwf	??_color_read_Blue^0,c
  7798   002662  500F               	movf	??_color_read_Blue^0,w,c
  7799   002664  6E12               	movwf	color_read_Blue@tmp^0,c
  7800   002666  6A13               	clrf	(color_read_Blue@tmp+1)^0,c
  7801                           
  7802                           ;color.c: 69:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7803   002668  0E00               	movlw	0
  7804   00266A  ECBB  F013         	call	_I2C_2_Master_Read
  7805   00266E  6E0F               	movwf	??_color_read_Blue^0,c
  7806   002670  500F               	movf	??_color_read_Blue^0,w,c
  7807   002672  6E11               	movwf	(??_color_read_Blue+2)^0,c
  7808   002674  6A10               	clrf	(??_color_read_Blue+1)^0,c
  7809   002676  5012               	movf	color_read_Blue@tmp^0,w,c
  7810   002678  1010               	iorwf	(??_color_read_Blue+1)^0,w,c
  7811   00267A  6E12               	movwf	color_read_Blue@tmp^0,c
  7812   00267C  5013               	movf	(color_read_Blue@tmp+1)^0,w,c
  7813   00267E  1011               	iorwf	(??_color_read_Blue+2)^0,w,c
  7814   002680  6E13               	movwf	(color_read_Blue@tmp+1)^0,c
  7815                           
  7816                           ;color.c: 70:  I2C_2_Master_Stop();
  7817   002682  EC20  F015         	call	_I2C_2_Master_Stop	;wreg free
  7818   002686                     
  7819                           ;color.c: 71:  return tmp;
  7820   002686  C012  F00D         	movff	color_read_Blue@tmp,?_color_read_Blue
  7821   00268A  C013  F00E         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  7822   00268E  0012               	return		;funcret
  7823   002690                     __end_of_color_read_Blue:
  7824                           	callstack 0
  7825                           
  7826 ;; *************** function _I2C_2_Master_RepStart *****************
  7827 ;; Defined at:
  7828 ;;		line 33 in file "i2c.c"
  7829 ;; Parameters:    Size  Location     Type
  7830 ;;		None
  7831 ;; Auto vars:     Size  Location     Type
  7832 ;;		None
  7833 ;; Return value:  Size  Location     Type
  7834 ;;                  1    wreg      void 
  7835 ;; Registers used:
  7836 ;;		wreg, status,2, status,0, cstack
  7837 ;; Tracked objects:
  7838 ;;		On entry : 0/0
  7839 ;;		On exit  : 0/0
  7840 ;;		Unchanged: 0/0
  7841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7846 ;;Total ram usage:        0 bytes
  7847 ;; Hardware stack levels used: 1
  7848 ;; Hardware stack levels required when called: 8
  7849 ;; This function calls:
  7850 ;;		_I2C_2_Master_Idle
  7851 ;; This function is called by:
  7852 ;;		_color_read_Red
  7853 ;;		_color_read_Green
  7854 ;;		_color_read_Blue
  7855 ;;		_color_read_Clear
  7856 ;; This function uses a non-reentrant model
  7857 ;;
  7858                           
  7859                           	psect	text41
  7860   002A36                     __ptext41:
  7861                           	callstack 0
  7862   002A36                     _I2C_2_Master_RepStart:
  7863                           	callstack 20
  7864   002A36                     
  7865                           ;i2c.c: 35:   I2C_2_Master_Idle();
  7866   002A36  EC40  F014         	call	_I2C_2_Master_Idle	;wreg free
  7867   002A3A                     
  7868                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  7869   002A3A  010E               	movlb	14	; () banked
  7870   002A3C  83DA               	bsf	218,1,b	;volatile
  7871   002A3E                     
  7872                           ; BSR set to: 14
  7873   002A3E  0012               	return		;funcret
  7874   002A40                     __end_of_I2C_2_Master_RepStart:
  7875                           	callstack 0
  7876                           
  7877 ;; *************** function _I2C_2_Master_Read *****************
  7878 ;; Defined at:
  7879 ;;		line 51 in file "i2c.c"
  7880 ;; Parameters:    Size  Location     Type
  7881 ;;  ack             1    wreg     unsigned char 
  7882 ;; Auto vars:     Size  Location     Type
  7883 ;;  ack             1   10[COMRAM] unsigned char 
  7884 ;;  tmp             1   11[COMRAM] unsigned char 
  7885 ;; Return value:  Size  Location     Type
  7886 ;;                  1    wreg      unsigned char 
  7887 ;; Registers used:
  7888 ;;		wreg, status,2, status,0, cstack
  7889 ;; Tracked objects:
  7890 ;;		On entry : 0/0
  7891 ;;		On exit  : 0/0
  7892 ;;		Unchanged: 0/0
  7893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7895 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7896 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7897 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7898 ;;Total ram usage:        3 bytes
  7899 ;; Hardware stack levels used: 1
  7900 ;; Hardware stack levels required when called: 8
  7901 ;; This function calls:
  7902 ;;		_I2C_2_Master_Idle
  7903 ;; This function is called by:
  7904 ;;		_color_read_Red
  7905 ;;		_color_read_Green
  7906 ;;		_color_read_Blue
  7907 ;;		_color_read_Clear
  7908 ;; This function uses a non-reentrant model
  7909 ;;
  7910                           
  7911                           	psect	text42
  7912   002776                     __ptext42:
  7913                           	callstack 0
  7914   002776                     _I2C_2_Master_Read:
  7915                           	callstack 20
  7916                           
  7917                           ; BSR set to: 14
  7918                           ;incstack = 0
  7919                           ;I2C_2_Master_Read@ack stored from wreg
  7920   002776  6E0B               	movwf	I2C_2_Master_Read@ack^0,c
  7921   002778                     
  7922                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  7923   002778  EC40  F014         	call	_I2C_2_Master_Idle	;wreg free
  7924   00277C                     
  7925                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  7926   00277C  010E               	movlb	14	; () banked
  7927   00277E  87DA               	bsf	218,3,b	;volatile
  7928                           
  7929                           ;i2c.c: 56:   I2C_2_Master_Idle();
  7930   002780  EC40  F014         	call	_I2C_2_Master_Idle	;wreg free
  7931   002784                     
  7932                           ;i2c.c: 57:   tmp = SSP2BUF;
  7933   002784  CED5 F00C          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  7934                           
  7935                           ;i2c.c: 58:   I2C_2_Master_Idle();
  7936   002788  EC40  F014         	call	_I2C_2_Master_Idle	;wreg free
  7937   00278C                     
  7938                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  7939   00278C  500B               	movf	I2C_2_Master_Read@ack^0,w,c
  7940   00278E  B4D8               	btfsc	status,2,c
  7941   002790  EFCC  F013         	goto	u2331
  7942   002794  EFD0  F013         	goto	u2330
  7943   002798                     u2331:
  7944   002798  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  7945   00279A  2A0A               	incf	??_I2C_2_Master_Read^0,f,c
  7946   00279C  EFD1  F013         	goto	u2348
  7947   0027A0                     u2330:
  7948   0027A0  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  7949   0027A2                     u2348:
  7950   0027A2  3A0A               	swapf	??_I2C_2_Master_Read^0,f,c
  7951   0027A4  460A               	rlncf	??_I2C_2_Master_Read^0,f,c
  7952   0027A6  010E               	movlb	14	; () banked
  7953   0027A8  51DA               	movf	218,w,b	;volatile
  7954   0027AA  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  7955   0027AC  0BDF               	andlw	-33
  7956   0027AE  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  7957   0027B0  6FDA               	movwf	218,b	;volatile
  7958   0027B2                     
  7959                           ; BSR set to: 14
  7960                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  7961   0027B2  89DA               	bsf	218,4,b	;volatile
  7962   0027B4                     
  7963                           ; BSR set to: 14
  7964                           ;i2c.c: 61:   return tmp;
  7965   0027B4  500C               	movf	I2C_2_Master_Read@tmp^0,w,c
  7966   0027B6                     
  7967                           ; BSR set to: 14
  7968   0027B6  0012               	return		;funcret
  7969   0027B8                     __end_of_I2C_2_Master_Read:
  7970                           	callstack 0
  7971                           
  7972 ;; *************** function _Timer0_init *****************
  7973 ;; Defined at:
  7974 ;;		line 7 in file "timers.c"
  7975 ;; Parameters:    Size  Location     Type
  7976 ;;		None
  7977 ;; Auto vars:     Size  Location     Type
  7978 ;;		None
  7979 ;; Return value:  Size  Location     Type
  7980 ;;                  1    wreg      void 
  7981 ;; Registers used:
  7982 ;;		wreg, status,2
  7983 ;; Tracked objects:
  7984 ;;		On entry : 0/0
  7985 ;;		On exit  : 0/0
  7986 ;;		Unchanged: 0/0
  7987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7992 ;;Total ram usage:        0 bytes
  7993 ;; Hardware stack levels used: 1
  7994 ;; Hardware stack levels required when called: 7
  7995 ;; This function calls:
  7996 ;;		Nothing
  7997 ;; This function is called by:
  7998 ;;		_main
  7999 ;; This function uses a non-reentrant model
  8000 ;;
  8001                           
  8002                           	psect	text43
  8003   00293C                     __ptext43:
  8004                           	callstack 0
  8005   00293C                     _Timer0_init:
  8006                           	callstack 23
  8007   00293C                     
  8008                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  8009   00293C  50D6               	movf	214,w,c	;volatile
  8010   00293E  0B1F               	andlw	-225
  8011   002940  0940               	iorlw	64
  8012   002942  6ED6               	movwf	214,c	;volatile
  8013   002944                     
  8014                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  8015   002944  88D6               	bsf	214,4,c	;volatile
  8016                           
  8017                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
  8018   002946  50D6               	movf	214,w,c	;volatile
  8019   002948  0BF0               	andlw	-16
  8020   00294A  0908               	iorlw	8
  8021   00294C  6ED6               	movwf	214,c	;volatile
  8022   00294E                     
  8023                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
  8024   00294E  88D5               	bsf	213,4,c	;volatile
  8025                           
  8026                           ;timers.c: 15:     TMR0H = 0b11000010;
  8027   002950  0EC2               	movlw	194
  8028   002952  6ED4               	movwf	212,c	;volatile
  8029                           
  8030                           ;timers.c: 16:     TMR0L = 0b11110110;
  8031   002954  0EF6               	movlw	246
  8032   002956  6ED3               	movwf	211,c	;volatile
  8033   002958                     
  8034                           ;timers.c: 17:     T0CON0bits.T0EN=1;
  8035   002958  8ED5               	bsf	213,7,c	;volatile
  8036   00295A  0012               	return		;funcret
  8037   00295C                     __end_of_Timer0_init:
  8038                           	callstack 0
  8039                           
  8040 ;; *************** function _LED_init *****************
  8041 ;; Defined at:
  8042 ;;		line 7 in file "LED_Buttons.c"
  8043 ;; Parameters:    Size  Location     Type
  8044 ;;		None
  8045 ;; Auto vars:     Size  Location     Type
  8046 ;;		None
  8047 ;; Return value:  Size  Location     Type
  8048 ;;                  1    wreg      void 
  8049 ;; Registers used:
  8050 ;;		None
  8051 ;; Tracked objects:
  8052 ;;		On entry : 0/0
  8053 ;;		On exit  : 0/0
  8054 ;;		Unchanged: 0/0
  8055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8060 ;;Total ram usage:        0 bytes
  8061 ;; Hardware stack levels used: 1
  8062 ;; Hardware stack levels required when called: 7
  8063 ;; This function calls:
  8064 ;;		Nothing
  8065 ;; This function is called by:
  8066 ;;		_main
  8067 ;; This function uses a non-reentrant model
  8068 ;;
  8069                           
  8070                           	psect	text44
  8071   002A0E                     __ptext44:
  8072                           	callstack 0
  8073   002A0E                     _LED_init:
  8074                           	callstack 23
  8075   002A0E                     
  8076                           ;LED_Buttons.c: 8:     TRISGbits.TRISG1 = 0;
  8077   002A0E  9287               	bcf	135,1,c	;volatile
  8078                           
  8079                           ;LED_Buttons.c: 9:     TRISAbits.TRISA4 = 0;
  8080   002A10  9881               	bcf	129,4,c	;volatile
  8081                           
  8082                           ;LED_Buttons.c: 10:     TRISFbits.TRISF7 = 0;
  8083   002A12  9E86               	bcf	134,7,c	;volatile
  8084                           
  8085                           ;LED_Buttons.c: 12:     LATHbits.LATH3 = 0;
  8086   002A14  9680               	bcf	128,3,c	;volatile
  8087                           
  8088                           ;LED_Buttons.c: 13:     TRISHbits.TRISH3 = 0;
  8089   002A16  9688               	bcf	136,3,c	;volatile
  8090                           
  8091                           ;LED_Buttons.c: 15:     LATDbits.LATD7 = 0;
  8092   002A18  9E7C               	bcf	124,7,c	;volatile
  8093                           
  8094                           ;LED_Buttons.c: 16:     TRISDbits.TRISD7 = 0;
  8095   002A1A  9E84               	bcf	132,7,c	;volatile
  8096   002A1C  0012               	return		;funcret
  8097   002A1E                     __end_of_LED_init:
  8098                           	callstack 0
  8099                           
  8100 ;; *************** function _Interrupts_init *****************
  8101 ;; Defined at:
  8102 ;;		line 12 in file "interrupts.c"
  8103 ;; Parameters:    Size  Location     Type
  8104 ;;		None
  8105 ;; Auto vars:     Size  Location     Type
  8106 ;;		None
  8107 ;; Return value:  Size  Location     Type
  8108 ;;                  1    wreg      void 
  8109 ;; Registers used:
  8110 ;;		wreg, status,2, status,0, cstack
  8111 ;; Tracked objects:
  8112 ;;		On entry : 0/0
  8113 ;;		On exit  : 0/0
  8114 ;;		Unchanged: 0/0
  8115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8120 ;;Total ram usage:        0 bytes
  8121 ;; Hardware stack levels used: 1
  8122 ;; Hardware stack levels required when called: 12
  8123 ;; This function calls:
  8124 ;;		_interrupts_clear_colorclick
  8125 ;; This function is called by:
  8126 ;;		_main
  8127 ;; This function uses a non-reentrant model
  8128 ;;
  8129                           
  8130                           	psect	text45
  8131   0029BC                     __ptext45:
  8132                           	callstack 0
  8133   0029BC                     _Interrupts_init:
  8134                           	callstack 18
  8135   0029BC                     
  8136                           ;interrupts.c: 18:     TRISBbits.TRISB1 = 1;
  8137   0029BC  8282               	bsf	130,1,c	;volatile
  8138                           
  8139                           ;interrupts.c: 19:     ANSELBbits.ANSELB1 = 0;
  8140   0029BE  010E               	movlb	14	; () banked
  8141   0029C0  939A               	bcf	154,1,b	;volatile
  8142                           
  8143                           ;interrupts.c: 21:     PIE0bits.INT1IE = 1;
  8144   0029C2  8329               	bsf	41,1,b	;volatile
  8145                           
  8146                           ;interrupts.c: 22:     IPR0bits.INT1IP = 1;
  8147   0029C4  831F               	bsf	31,1,b	;volatile
  8148                           
  8149                           ;interrupts.c: 23:     INTCONbits.INT1EDG = 0;
  8150   0029C6  92F2               	bcf	242,1,c	;volatile
  8151                           
  8152                           ;interrupts.c: 26:     PIE0bits.TMR0IE=1;
  8153   0029C8  8B29               	bsf	41,5,b	;volatile
  8154                           
  8155                           ;interrupts.c: 27:     IPR0bits.TMR0IP = 0;
  8156   0029CA  9B1F               	bcf	31,5,b	;volatile
  8157                           
  8158                           ;interrupts.c: 30:     PIE4bits.RC4IE=1;
  8159   0029CC  872D               	bsf	45,3,b	;volatile
  8160   0029CE                     
  8161                           ; BSR set to: 14
  8162                           ;interrupts.c: 32:     interrupts_clear_colorclick();
  8163   0029CE  ECED  F014         	call	_interrupts_clear_colorclick	;wreg free
  8164   0029D2                     
  8165                           ;interrupts.c: 34:     INTCONbits.IPEN = 1;
  8166   0029D2  8AF2               	bsf	242,5,c	;volatile
  8167   0029D4                     
  8168                           ;interrupts.c: 35:     INTCONbits.PEIE = 1;
  8169   0029D4  8CF2               	bsf	242,6,c	;volatile
  8170   0029D6                     
  8171                           ;interrupts.c: 36:     INTCONbits.GIE=1;
  8172   0029D6  8EF2               	bsf	242,7,c	;volatile
  8173   0029D8  0012               	return		;funcret
  8174   0029DA                     __end_of_Interrupts_init:
  8175                           	callstack 0
  8176                           
  8177 ;; *************** function _interrupts_clear_colorclick *****************
  8178 ;; Defined at:
  8179 ;;		line 57 in file "interrupts.c"
  8180 ;; Parameters:    Size  Location     Type
  8181 ;;		None
  8182 ;; Auto vars:     Size  Location     Type
  8183 ;;		None
  8184 ;; Return value:  Size  Location     Type
  8185 ;;                  1    wreg      void 
  8186 ;; Registers used:
  8187 ;;		wreg, status,2, status,0, cstack
  8188 ;; Tracked objects:
  8189 ;;		On entry : 0/0
  8190 ;;		On exit  : 0/0
  8191 ;;		Unchanged: 0/0
  8192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8197 ;;Total ram usage:        0 bytes
  8198 ;; Hardware stack levels used: 1
  8199 ;; Hardware stack levels required when called: 11
  8200 ;; This function calls:
  8201 ;;		_I2C_2_Master_Start
  8202 ;;		_I2C_2_Master_Stop
  8203 ;;		_I2C_2_Master_Write
  8204 ;;		_init_colorclick_interrupts
  8205 ;; This function is called by:
  8206 ;;		_Interrupts_init
  8207 ;; This function uses a non-reentrant model
  8208 ;;
  8209                           
  8210                           	psect	text46
  8211   0029DA                     __ptext46:
  8212                           	callstack 0
  8213   0029DA                     _interrupts_clear_colorclick:
  8214                           	callstack 18
  8215   0029DA                     
  8216                           ;interrupts.c: 59:     I2C_2_Master_Start();
  8217   0029DA  EC25  F015         	call	_I2C_2_Master_Start	;wreg free
  8218                           
  8219                           ;interrupts.c: 60:     I2C_2_Master_Write(0x52 | 0x00);
  8220   0029DE  0E52               	movlw	82
  8221   0029E0  EC0F  F015         	call	_I2C_2_Master_Write
  8222                           
  8223                           ;interrupts.c: 61:     I2C_2_Master_Write(0b11100110);
  8224   0029E4  0EE6               	movlw	230
  8225   0029E6  EC0F  F015         	call	_I2C_2_Master_Write
  8226                           
  8227                           ;interrupts.c: 62:     I2C_2_Master_Stop();
  8228   0029EA  EC20  F015         	call	_I2C_2_Master_Stop	;wreg free
  8229                           
  8230                           ;interrupts.c: 64:     init_colorclick_interrupts();
  8231   0029EE  EC48  F013         	call	_init_colorclick_interrupts	;wreg free
  8232   0029F2  0012               	return		;funcret
  8233   0029F4                     __end_of_interrupts_clear_colorclick:
  8234                           	callstack 0
  8235                           
  8236 ;; *************** function _init_colorclick_interrupts *****************
  8237 ;; Defined at:
  8238 ;;		line 43 in file "interrupts.c"
  8239 ;; Parameters:    Size  Location     Type
  8240 ;;		None
  8241 ;; Auto vars:     Size  Location     Type
  8242 ;;		None
  8243 ;; Return value:  Size  Location     Type
  8244 ;;                  1    wreg      void 
  8245 ;; Registers used:
  8246 ;;		wreg, status,2, status,0, cstack
  8247 ;; Tracked objects:
  8248 ;;		On entry : 0/0
  8249 ;;		On exit  : 0/0
  8250 ;;		Unchanged: 0/0
  8251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8254 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8255 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8256 ;;Total ram usage:        1 bytes
  8257 ;; Hardware stack levels used: 1
  8258 ;; Hardware stack levels required when called: 10
  8259 ;; This function calls:
  8260 ;;		_color_writetoaddr
  8261 ;; This function is called by:
  8262 ;;		_interrupts_clear_colorclick
  8263 ;; This function uses a non-reentrant model
  8264 ;;
  8265                           
  8266                           	psect	text47
  8267   002690                     __ptext47:
  8268                           	callstack 0
  8269   002690                     _init_colorclick_interrupts:
  8270                           	callstack 18
  8271   002690                     
  8272                           ;interrupts.c: 45:     color_writetoaddr(0x00,0b10011);
  8273   002690  0E13               	movlw	19
  8274   002692  6E0B               	movwf	color_writetoaddr@value^0,c
  8275   002694  0E00               	movlw	0
  8276   002696  ECAE  F014         	call	_color_writetoaddr
  8277   00269A                     
  8278                           ;interrupts.c: 46:     _delay((unsigned long)((3)*(64000000/4000.0)));
  8279   00269A  0E3F               	movlw	63
  8280   00269C  6E0D               	movwf	??_init_colorclick_interrupts^0,c
  8281   00269E  0E55               	movlw	85
  8282   0026A0                     u4757:
  8283   0026A0  2EE8               	decfsz	wreg,f,c
  8284   0026A2  D7FE               	bra	u4757
  8285   0026A4  2E0D               	decfsz	??_init_colorclick_interrupts^0,f,c
  8286   0026A6  D7FC               	bra	u4757
  8287   0026A8  F000               	nop	
  8288   0026AA                     
  8289                           ;interrupts.c: 48:     color_writetoaddr(0x0C,0b0110);
  8290   0026AA  0E06               	movlw	6
  8291   0026AC  6E0B               	movwf	color_writetoaddr@value^0,c
  8292   0026AE  0E0C               	movlw	12
  8293   0026B0  ECAE  F014         	call	_color_writetoaddr
  8294   0026B4                     
  8295                           ;interrupts.c: 49:     color_writetoaddr(0x04,(int_threshold_low & 0xFF));
  8296   0026B4  C04F  F00B         	movff	_int_threshold_low,color_writetoaddr@value
  8297   0026B8  0E04               	movlw	4
  8298   0026BA  ECAE  F014         	call	_color_writetoaddr
  8299   0026BE                     
  8300                           ;interrupts.c: 50:     color_writetoaddr(0x05,(int_threshold_low >> 8));
  8301   0026BE  5050               	movf	(_int_threshold_low+1)^0,w,c
  8302   0026C0  6E0B               	movwf	color_writetoaddr@value^0,c
  8303   0026C2  0E05               	movlw	5
  8304   0026C4  ECAE  F014         	call	_color_writetoaddr
  8305   0026C8                     
  8306                           ;interrupts.c: 51:     color_writetoaddr(0x06,(int_threshold_high & 0xFF));
  8307   0026C8  C0D3  F00B         	movff	_int_threshold_high,color_writetoaddr@value
  8308   0026CC  0E06               	movlw	6
  8309   0026CE  ECAE  F014         	call	_color_writetoaddr
  8310   0026D2                     
  8311                           ;interrupts.c: 52:     color_writetoaddr(0x07,(int_threshold_high >> 8));
  8312   0026D2  0100               	movlb	0	; () banked
  8313   0026D4  51D4               	movf	(_int_threshold_high+1)& (0+255),w,b
  8314   0026D6  6E0B               	movwf	color_writetoaddr@value^0,c
  8315   0026D8  0E07               	movlw	7
  8316   0026DA  ECAE  F014         	call	_color_writetoaddr
  8317   0026DE  0012               	return		;funcret
  8318   0026E0                     __end_of_init_colorclick_interrupts:
  8319                           	callstack 0
  8320                           
  8321 ;; *************** function _color_writetoaddr *****************
  8322 ;; Defined at:
  8323 ;;		line 22 in file "color.c"
  8324 ;; Parameters:    Size  Location     Type
  8325 ;;  address         1    wreg     unsigned char 
  8326 ;;  value           1   10[COMRAM] unsigned char 
  8327 ;; Auto vars:     Size  Location     Type
  8328 ;;  address         1   11[COMRAM] unsigned char 
  8329 ;; Return value:  Size  Location     Type
  8330 ;;                  1    wreg      void 
  8331 ;; Registers used:
  8332 ;;		wreg, status,2, status,0, cstack
  8333 ;; Tracked objects:
  8334 ;;		On entry : 0/0
  8335 ;;		On exit  : 0/0
  8336 ;;		Unchanged: 0/0
  8337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8338 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8339 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8341 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8342 ;;Total ram usage:        2 bytes
  8343 ;; Hardware stack levels used: 1
  8344 ;; Hardware stack levels required when called: 9
  8345 ;; This function calls:
  8346 ;;		_I2C_2_Master_Start
  8347 ;;		_I2C_2_Master_Stop
  8348 ;;		_I2C_2_Master_Write
  8349 ;; This function is called by:
  8350 ;;		_color_click_init
  8351 ;;		_init_colorclick_interrupts
  8352 ;; This function uses a non-reentrant model
  8353 ;;
  8354                           
  8355                           	psect	text48
  8356   00295C                     __ptext48:
  8357                           	callstack 0
  8358   00295C                     _color_writetoaddr:
  8359                           	callstack 20
  8360                           
  8361                           ;incstack = 0
  8362                           ;color_writetoaddr@address stored from wreg
  8363   00295C  6E0C               	movwf	color_writetoaddr@address^0,c
  8364   00295E                     
  8365                           ;color.c: 23:     I2C_2_Master_Start();
  8366   00295E  EC25  F015         	call	_I2C_2_Master_Start	;wreg free
  8367                           
  8368                           ;color.c: 24:     I2C_2_Master_Write(0x52 | 0x00);
  8369   002962  0E52               	movlw	82
  8370   002964  EC0F  F015         	call	_I2C_2_Master_Write
  8371                           
  8372                           ;color.c: 25:     I2C_2_Master_Write(0x80 | address);
  8373   002968  500C               	movf	color_writetoaddr@address^0,w,c
  8374   00296A  0980               	iorlw	128
  8375   00296C  EC0F  F015         	call	_I2C_2_Master_Write
  8376                           
  8377                           ;color.c: 26:     I2C_2_Master_Write(value);
  8378   002970  500B               	movf	color_writetoaddr@value^0,w,c
  8379   002972  EC0F  F015         	call	_I2C_2_Master_Write
  8380                           
  8381                           ;color.c: 27:     I2C_2_Master_Stop();
  8382   002976  EC20  F015         	call	_I2C_2_Master_Stop	;wreg free
  8383   00297A  0012               	return		;funcret
  8384   00297C                     __end_of_color_writetoaddr:
  8385                           	callstack 0
  8386                           
  8387 ;; *************** function _I2C_2_Master_Write *****************
  8388 ;; Defined at:
  8389 ;;		line 45 in file "i2c.c"
  8390 ;; Parameters:    Size  Location     Type
  8391 ;;  data_byte       1    wreg     unsigned char 
  8392 ;; Auto vars:     Size  Location     Type
  8393 ;;  data_byte       1    9[COMRAM] unsigned char 
  8394 ;; Return value:  Size  Location     Type
  8395 ;;                  1    wreg      void 
  8396 ;; Registers used:
  8397 ;;		wreg, status,2, status,0, cstack
  8398 ;; Tracked objects:
  8399 ;;		On entry : 0/0
  8400 ;;		On exit  : 0/0
  8401 ;;		Unchanged: 0/0
  8402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8404 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8406 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8407 ;;Total ram usage:        1 bytes
  8408 ;; Hardware stack levels used: 1
  8409 ;; Hardware stack levels required when called: 8
  8410 ;; This function calls:
  8411 ;;		_I2C_2_Master_Idle
  8412 ;; This function is called by:
  8413 ;;		_color_writetoaddr
  8414 ;;		_color_read_Red
  8415 ;;		_color_read_Green
  8416 ;;		_color_read_Blue
  8417 ;;		_color_read_Clear
  8418 ;;		_interrupts_clear_colorclick
  8419 ;; This function uses a non-reentrant model
  8420 ;;
  8421                           
  8422                           	psect	text49
  8423   002A1E                     __ptext49:
  8424                           	callstack 0
  8425   002A1E                     _I2C_2_Master_Write:
  8426                           	callstack 20
  8427                           
  8428                           ;incstack = 0
  8429                           ;I2C_2_Master_Write@data_byte stored from wreg
  8430   002A1E  6E0A               	movwf	I2C_2_Master_Write@data_byte^0,c
  8431   002A20                     
  8432                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  8433   002A20  EC40  F014         	call	_I2C_2_Master_Idle	;wreg free
  8434   002A24                     
  8435                           ;i2c.c: 48:   SSP2BUF = data_byte;
  8436   002A24  C00A  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  8437   002A28  0012               	return		;funcret
  8438   002A2A                     __end_of_I2C_2_Master_Write:
  8439                           	callstack 0
  8440                           
  8441 ;; *************** function _I2C_2_Master_Stop *****************
  8442 ;; Defined at:
  8443 ;;		line 39 in file "i2c.c"
  8444 ;; Parameters:    Size  Location     Type
  8445 ;;		None
  8446 ;; Auto vars:     Size  Location     Type
  8447 ;;		None
  8448 ;; Return value:  Size  Location     Type
  8449 ;;                  1    wreg      void 
  8450 ;; Registers used:
  8451 ;;		wreg, status,2, status,0, cstack
  8452 ;; Tracked objects:
  8453 ;;		On entry : 0/0
  8454 ;;		On exit  : 0/0
  8455 ;;		Unchanged: 0/0
  8456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8461 ;;Total ram usage:        0 bytes
  8462 ;; Hardware stack levels used: 1
  8463 ;; Hardware stack levels required when called: 8
  8464 ;; This function calls:
  8465 ;;		_I2C_2_Master_Idle
  8466 ;; This function is called by:
  8467 ;;		_color_writetoaddr
  8468 ;;		_color_read_Red
  8469 ;;		_color_read_Green
  8470 ;;		_color_read_Blue
  8471 ;;		_color_read_Clear
  8472 ;;		_interrupts_clear_colorclick
  8473 ;; This function uses a non-reentrant model
  8474 ;;
  8475                           
  8476                           	psect	text50
  8477   002A40                     __ptext50:
  8478                           	callstack 0
  8479   002A40                     _I2C_2_Master_Stop:
  8480                           	callstack 20
  8481   002A40                     
  8482                           ;i2c.c: 41:   I2C_2_Master_Idle();
  8483   002A40  EC40  F014         	call	_I2C_2_Master_Idle	;wreg free
  8484   002A44                     
  8485                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  8486   002A44  010E               	movlb	14	; () banked
  8487   002A46  85DA               	bsf	218,2,b	;volatile
  8488   002A48                     
  8489                           ; BSR set to: 14
  8490   002A48  0012               	return		;funcret
  8491   002A4A                     __end_of_I2C_2_Master_Stop:
  8492                           	callstack 0
  8493                           
  8494 ;; *************** function _I2C_2_Master_Start *****************
  8495 ;; Defined at:
  8496 ;;		line 27 in file "i2c.c"
  8497 ;; Parameters:    Size  Location     Type
  8498 ;;		None
  8499 ;; Auto vars:     Size  Location     Type
  8500 ;;		None
  8501 ;; Return value:  Size  Location     Type
  8502 ;;                  1    wreg      void 
  8503 ;; Registers used:
  8504 ;;		wreg, status,2, status,0, cstack
  8505 ;; Tracked objects:
  8506 ;;		On entry : 0/0
  8507 ;;		On exit  : 0/0
  8508 ;;		Unchanged: 0/0
  8509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8514 ;;Total ram usage:        0 bytes
  8515 ;; Hardware stack levels used: 1
  8516 ;; Hardware stack levels required when called: 8
  8517 ;; This function calls:
  8518 ;;		_I2C_2_Master_Idle
  8519 ;; This function is called by:
  8520 ;;		_color_writetoaddr
  8521 ;;		_color_read_Red
  8522 ;;		_color_read_Green
  8523 ;;		_color_read_Blue
  8524 ;;		_color_read_Clear
  8525 ;;		_interrupts_clear_colorclick
  8526 ;; This function uses a non-reentrant model
  8527 ;;
  8528                           
  8529                           	psect	text51
  8530   002A4A                     __ptext51:
  8531                           	callstack 0
  8532   002A4A                     _I2C_2_Master_Start:
  8533                           	callstack 20
  8534   002A4A                     
  8535                           ;i2c.c: 29:   I2C_2_Master_Idle();
  8536   002A4A  EC40  F014         	call	_I2C_2_Master_Idle	;wreg free
  8537   002A4E                     
  8538                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  8539   002A4E  010E               	movlb	14	; () banked
  8540   002A50  81DA               	bsf	218,0,b	;volatile
  8541   002A52                     
  8542                           ; BSR set to: 14
  8543   002A52  0012               	return		;funcret
  8544   002A54                     __end_of_I2C_2_Master_Start:
  8545                           	callstack 0
  8546                           
  8547 ;; *************** function _I2C_2_Master_Idle *****************
  8548 ;; Defined at:
  8549 ;;		line 22 in file "i2c.c"
  8550 ;; Parameters:    Size  Location     Type
  8551 ;;		None
  8552 ;; Auto vars:     Size  Location     Type
  8553 ;;		None
  8554 ;; Return value:  Size  Location     Type
  8555 ;;                  1    wreg      void 
  8556 ;; Registers used:
  8557 ;;		wreg, status,2, status,0
  8558 ;; Tracked objects:
  8559 ;;		On entry : 0/0
  8560 ;;		On exit  : 0/0
  8561 ;;		Unchanged: 0/0
  8562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8565 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8566 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8567 ;;Total ram usage:        1 bytes
  8568 ;; Hardware stack levels used: 1
  8569 ;; Hardware stack levels required when called: 7
  8570 ;; This function calls:
  8571 ;;		Nothing
  8572 ;; This function is called by:
  8573 ;;		_I2C_2_Master_Start
  8574 ;;		_I2C_2_Master_RepStart
  8575 ;;		_I2C_2_Master_Stop
  8576 ;;		_I2C_2_Master_Write
  8577 ;;		_I2C_2_Master_Read
  8578 ;; This function uses a non-reentrant model
  8579 ;;
  8580                           
  8581                           	psect	text52
  8582   002880                     __ptext52:
  8583                           	callstack 0
  8584   002880                     _I2C_2_Master_Idle:
  8585                           	callstack 20
  8586   002880                     l89:
  8587   002880  010E               	movlb	14	; () banked
  8588   002882  B5D8               	btfsc	216,2,b	;volatile
  8589   002884  EF46  F014         	goto	u2051
  8590   002888  EF48  F014         	goto	u2050
  8591   00288C                     u2051:
  8592   00288C  EF40  F014         	goto	l89
  8593   002890                     u2050:
  8594   002890                     
  8595                           ; BSR set to: 14
  8596   002890  CEDA F009          	movff	3802,??_I2C_2_Master_Idle	;volatile
  8597   002894  0E1F               	movlw	31
  8598   002896  1609               	andwf	??_I2C_2_Master_Idle^0,f,c
  8599   002898  A4D8               	btfss	status,2,c
  8600   00289A  EF51  F014         	goto	u2061
  8601   00289E  EF53  F014         	goto	u2060
  8602   0028A2                     u2061:
  8603   0028A2  EF40  F014         	goto	l89
  8604   0028A6                     u2060:
  8605   0028A6                     
  8606                           ; BSR set to: 14
  8607   0028A6  0012               	return		;funcret
  8608   0028A8                     __end_of_I2C_2_Master_Idle:
  8609                           	callstack 0
  8610                           
  8611 ;; *************** function _AppendTime *****************
  8612 ;; Defined at:
  8613 ;;		line 23 in file "Memorization.c"
  8614 ;; Parameters:    Size  Location     Type
  8615 ;;  temp            2    8[COMRAM] unsigned int 
  8616 ;;  time_index      2   10[COMRAM] PTR unsigned char 
  8617 ;;		 -> time_index(1), 
  8618 ;;  time_array      2   12[COMRAM] PTR unsigned int 
  8619 ;;		 -> time_array(80), 
  8620 ;; Auto vars:     Size  Location     Type
  8621 ;;		None
  8622 ;; Return value:  Size  Location     Type
  8623 ;;                  1    wreg      void 
  8624 ;; Registers used:
  8625 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8626 ;; Tracked objects:
  8627 ;;		On entry : 0/0
  8628 ;;		On exit  : 0/0
  8629 ;;		Unchanged: 0/0
  8630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8631 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8633 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8634 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8635 ;;Total ram usage:        9 bytes
  8636 ;; Hardware stack levels used: 1
  8637 ;; Hardware stack levels required when called: 7
  8638 ;; This function calls:
  8639 ;;		Nothing
  8640 ;; This function is called by:
  8641 ;;		_main
  8642 ;; This function uses a non-reentrant model
  8643 ;;
  8644                           
  8645                           	psect	text53
  8646   002824                     __ptext53:
  8647                           	callstack 0
  8648   002824                     _AppendTime:
  8649                           	callstack 23
  8650   002824                     
  8651                           ;Memorization.c: 25:     time_array[(*time_index)++] = temp;
  8652   002824  C00B  FFD9         	movff	AppendTime@time_index,fsr2l
  8653   002828  C00C  FFDA         	movff	AppendTime@time_index+1,fsr2h
  8654   00282C  CFDF F00F          	movff	indf2,??_AppendTime
  8655   002830  0E01               	movlw	1
  8656   002832  26DF               	addwf	indf2,f,c
  8657   002834  500F               	movf	??_AppendTime^0,w,c
  8658   002836  0D02               	mullw	2
  8659   002838  CFF3 F010          	movff	prodl,??_AppendTime+1
  8660   00283C  CFF4 F011          	movff	prodh,??_AppendTime+2
  8661   002840  5010               	movf	(??_AppendTime+1)^0,w,c
  8662   002842  240D               	addwf	AppendTime@time_array^0,w,c
  8663   002844  6ED9               	movwf	fsr2l,c
  8664   002846  5011               	movf	(??_AppendTime+2)^0,w,c
  8665   002848  200E               	addwfc	(AppendTime@time_array+1)^0,w,c
  8666   00284A  6EDA               	movwf	fsr2h,c
  8667   00284C  C009  FFDE         	movff	AppendTime@temp,postinc2
  8668   002850  C00A  FFDD         	movff	AppendTime@temp+1,postdec2
  8669   002854  0012               	return		;funcret
  8670   002856                     __end_of_AppendTime:
  8671                           	callstack 0
  8672                           
  8673 ;; *************** function _LowISR *****************
  8674 ;; Defined at:
  8675 ;;		line 74 in file "interrupts.c"
  8676 ;; Parameters:    Size  Location     Type
  8677 ;;		None
  8678 ;; Auto vars:     Size  Location     Type
  8679 ;;		None
  8680 ;; Return value:  Size  Location     Type
  8681 ;;                  1    wreg      void 
  8682 ;; Registers used:
  8683 ;;		wreg, status,2
  8684 ;; Tracked objects:
  8685 ;;		On entry : 0/0
  8686 ;;		On exit  : 0/0
  8687 ;;		Unchanged: 0/0
  8688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8691 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8692 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8693 ;;Total ram usage:        3 bytes
  8694 ;; Hardware stack levels used: 1
  8695 ;; Hardware stack levels required when called: 6
  8696 ;; This function calls:
  8697 ;;		Nothing
  8698 ;; This function is called by:
  8699 ;;		Interrupt level 1
  8700 ;; This function uses a non-reentrant model
  8701 ;;
  8702                           
  8703                           	psect	intcodelo
  8704   000018                     __pintcodelo:
  8705                           	callstack 0
  8706   000018                     _LowISR:
  8707                           	callstack 16
  8708                           
  8709                           ;incstack = 0
  8710   000018  8057               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  8711   00001A  CFD8 F006          	movff	status,??_LowISR
  8712   00001E  CFE8 F007          	movff	wreg,??_LowISR+1
  8713   000022  CFE0 F008          	movff	bsr,??_LowISR+2
  8714   000026                     
  8715                           ;interrupts.c: 77:     if(PIR0bits.TMR0IF){
  8716   000026  010E               	movlb	14	; () banked
  8717   000028  AB33               	btfss	51,5,b	;volatile
  8718   00002A  EF19  F000         	goto	i1u381_21
  8719   00002E  EF1B  F000         	goto	i1u381_20
  8720   000032                     i1u381_21:
  8721   000032  EF24  F000         	goto	i1l336
  8722   000036                     i1u381_20:
  8723   000036                     
  8724                           ; BSR set to: 14
  8725                           ;interrupts.c: 78:         TMR0H = 0b11000010;
  8726   000036  0EC2               	movlw	194
  8727   000038  6ED4               	movwf	212,c	;volatile
  8728                           
  8729                           ;interrupts.c: 79:         TMR0L = 0b11110110;
  8730   00003A  0EF6               	movlw	246
  8731   00003C  6ED3               	movwf	211,c	;volatile
  8732                           
  8733                           ;interrupts.c: 80:         tmr_ovf = 1;
  8734   00003E  0E01               	movlw	1
  8735   000040  0100               	movlb	0	; () banked
  8736   000042  6F74               	movwf	_tmr_ovf& (0+255),b
  8737   000044                     
  8738                           ; BSR set to: 0
  8739                           ;interrupts.c: 81:         PIR0bits.TMR0IF=0;
  8740   000044  010E               	movlb	14	; () banked
  8741   000046  9B33               	bcf	51,5,b	;volatile
  8742   000048                     i1l336:
  8743                           
  8744                           ; BSR set to: 14
  8745   000048  C008  FFE0         	movff	??_LowISR+2,bsr
  8746   00004C  C007  FFE8         	movff	??_LowISR+1,wreg
  8747   000050  C006  FFD8         	movff	??_LowISR,status
  8748   000054  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  8749   000056  0010               	retfie	
  8750   000058                     __end_of_LowISR:
  8751                           	callstack 0
  8752                           
  8753 ;; *************** function _HighISR *****************
  8754 ;; Defined at:
  8755 ;;		line 88 in file "interrupts.c"
  8756 ;; Parameters:    Size  Location     Type
  8757 ;;		None
  8758 ;; Auto vars:     Size  Location     Type
  8759 ;;		None
  8760 ;; Return value:  Size  Location     Type
  8761 ;;                  1    wreg      void 
  8762 ;; Registers used:
  8763 ;;		wreg, status,2, status,0, cstack
  8764 ;; Tracked objects:
  8765 ;;		On entry : 0/0
  8766 ;;		On exit  : 0/0
  8767 ;;		Unchanged: 0/0
  8768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8773 ;;Total ram usage:        0 bytes
  8774 ;; Hardware stack levels used: 1
  8775 ;; Hardware stack levels required when called: 5
  8776 ;; This function calls:
  8777 ;;		i2_interrupts_clear_colorclick
  8778 ;; This function is called by:
  8779 ;;		Interrupt level 2
  8780 ;; This function uses a non-reentrant model
  8781 ;;
  8782                           
  8783                           	psect	intcode
  8784   000008                     __pintcode:
  8785                           	callstack 0
  8786   000008                     _HighISR:
  8787                           	callstack 16
  8788                           
  8789                           ; BSR set to: 14
  8790                           ;incstack = 0
  8791   000008  8257               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8792   00000A  EFBE  F014         	goto	int_func
  8793                           
  8794                           	psect	intcode_body
  8795   00297C                     __pintcode_body:
  8796                           	callstack 16
  8797   00297C                     int_func:
  8798                           	callstack 16
  8799   00297C                     
  8800                           ;interrupts.c: 115:     if(PIR0bits.INT1IF){
  8801   00297C  010E               	movlb	14	; () banked
  8802   00297E  A333               	btfss	51,1,b	;volatile
  8803   002980  EFC4  F014         	goto	i2u382_41
  8804   002984  EFC6  F014         	goto	i2u382_40
  8805   002988                     i2u382_41:
  8806   002988  EFCC  F014         	goto	i2l344
  8807   00298C                     i2u382_40:
  8808   00298C                     
  8809                           ; BSR set to: 14
  8810                           ;interrupts.c: 116:         color_flag = 1;
  8811   00298C  0E01               	movlw	1
  8812   00298E  6E55               	movwf	_color_flag^0,c
  8813   002990                     
  8814                           ; BSR set to: 14
  8815                           ;interrupts.c: 118:         interrupts_clear_colorclick();
  8816   002990  ECFA  F014         	call	i2_interrupts_clear_colorclick	;wreg free
  8817   002994                     
  8818                           ;interrupts.c: 119:         PIR0bits.INT1IF = 0;
  8819   002994  010E               	movlb	14	; () banked
  8820   002996  9333               	bcf	51,1,b	;volatile
  8821   002998                     i2l344:
  8822                           
  8823                           ; BSR set to: 14
  8824   002998  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8825   00299A  0011               	retfie		f
  8826   00299C                     __end_of_HighISR:
  8827                           	callstack 0
  8828                           
  8829 ;; *************** function i2_interrupts_clear_colorclick *****************
  8830 ;; Defined at:
  8831 ;;		line 57 in file "interrupts.c"
  8832 ;; Parameters:    Size  Location     Type
  8833 ;;		None
  8834 ;; Auto vars:     Size  Location     Type
  8835 ;;		None
  8836 ;; Return value:  Size  Location     Type
  8837 ;;                  1    wreg      void 
  8838 ;; Registers used:
  8839 ;;		wreg, status,2, status,0, cstack
  8840 ;; Tracked objects:
  8841 ;;		On entry : 0/0
  8842 ;;		On exit  : 0/0
  8843 ;;		Unchanged: 0/0
  8844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8849 ;;Total ram usage:        0 bytes
  8850 ;; Hardware stack levels used: 1
  8851 ;; Hardware stack levels required when called: 4
  8852 ;; This function calls:
  8853 ;;		i2_I2C_2_Master_Start
  8854 ;;		i2_I2C_2_Master_Stop
  8855 ;;		i2_I2C_2_Master_Write
  8856 ;;		i2_init_colorclick_interrupts
  8857 ;; This function is called by:
  8858 ;;		_HighISR
  8859 ;; This function uses a non-reentrant model
  8860 ;;
  8861                           
  8862                           	psect	text56
  8863   0029F4                     __ptext56:
  8864                           	callstack 0
  8865   0029F4                     i2_interrupts_clear_colorclick:
  8866                           	callstack 16
  8867   0029F4                     
  8868                           ;interrupts.c: 59:     I2C_2_Master_Start();
  8869   0029F4  EC2F  F015         	call	i2_I2C_2_Master_Start	;wreg free
  8870                           
  8871                           ;interrupts.c: 60:     I2C_2_Master_Write(0x52 | 0x00);
  8872   0029F8  0E52               	movlw	82
  8873   0029FA  EC15  F015         	call	i2_I2C_2_Master_Write
  8874                           
  8875                           ;interrupts.c: 61:     I2C_2_Master_Write(0b11100110);
  8876   0029FE  0EE6               	movlw	230
  8877   002A00  EC15  F015         	call	i2_I2C_2_Master_Write
  8878                           
  8879                           ;interrupts.c: 62:     I2C_2_Master_Stop();
  8880   002A04  EC2A  F015         	call	i2_I2C_2_Master_Stop	;wreg free
  8881                           
  8882                           ;interrupts.c: 64:     init_colorclick_interrupts();
  8883   002A08  EC70  F013         	call	i2_init_colorclick_interrupts	;wreg free
  8884   002A0C  0012               	return		;funcret
  8885   002A0E                     __end_ofi2_interrupts_clear_colorclick:
  8886                           	callstack 0
  8887                           
  8888 ;; *************** function i2_init_colorclick_interrupts *****************
  8889 ;; Defined at:
  8890 ;;		line 43 in file "interrupts.c"
  8891 ;; Parameters:    Size  Location     Type
  8892 ;;		None
  8893 ;; Auto vars:     Size  Location     Type
  8894 ;;		None
  8895 ;; Return value:  Size  Location     Type
  8896 ;;                  1    wreg      void 
  8897 ;; Registers used:
  8898 ;;		wreg, status,2, status,0, cstack
  8899 ;; Tracked objects:
  8900 ;;		On entry : 0/0
  8901 ;;		On exit  : 0/0
  8902 ;;		Unchanged: 0/0
  8903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8906 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8907 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8908 ;;Total ram usage:        1 bytes
  8909 ;; Hardware stack levels used: 1
  8910 ;; Hardware stack levels required when called: 3
  8911 ;; This function calls:
  8912 ;;		i2_color_writetoaddr
  8913 ;; This function is called by:
  8914 ;;		i2_interrupts_clear_colorclick
  8915 ;; This function uses a non-reentrant model
  8916 ;;
  8917                           
  8918                           	psect	text57
  8919   0026E0                     __ptext57:
  8920                           	callstack 0
  8921   0026E0                     i2_init_colorclick_interrupts:
  8922                           	callstack 16
  8923   0026E0                     
  8924                           ;interrupts.c: 45:     color_writetoaddr(0x00,0b10011);
  8925   0026E0  0E13               	movlw	19
  8926   0026E2  6E03               	movwf	i2color_writetoaddr@value^0,c
  8927   0026E4  0E00               	movlw	0
  8928   0026E6  ECCE  F014         	call	i2_color_writetoaddr
  8929   0026EA                     
  8930                           ;interrupts.c: 46:     _delay((unsigned long)((3)*(64000000/4000.0)));
  8931   0026EA  0E3F               	movlw	63
  8932   0026EC  6E05               	movwf	??i2_init_colorclick_interrupts^0,c
  8933   0026EE  0E55               	movlw	85
  8934   0026F0                     i2u476_47:
  8935   0026F0  2EE8               	decfsz	wreg,f,c
  8936   0026F2  D7FE               	bra	i2u476_47
  8937   0026F4  2E05               	decfsz	??i2_init_colorclick_interrupts^0,f,c
  8938   0026F6  D7FC               	bra	i2u476_47
  8939   0026F8  F000               	nop	
  8940   0026FA                     
  8941                           ;interrupts.c: 48:     color_writetoaddr(0x0C,0b0110);
  8942   0026FA  0E06               	movlw	6
  8943   0026FC  6E03               	movwf	i2color_writetoaddr@value^0,c
  8944   0026FE  0E0C               	movlw	12
  8945   002700  ECCE  F014         	call	i2_color_writetoaddr
  8946   002704                     
  8947                           ;interrupts.c: 49:     color_writetoaddr(0x04,(int_threshold_low & 0xFF));
  8948   002704  C04F  F003         	movff	_int_threshold_low,i2color_writetoaddr@value
  8949   002708  0E04               	movlw	4
  8950   00270A  ECCE  F014         	call	i2_color_writetoaddr
  8951   00270E                     
  8952                           ;interrupts.c: 50:     color_writetoaddr(0x05,(int_threshold_low >> 8));
  8953   00270E  5050               	movf	(_int_threshold_low+1)^0,w,c
  8954   002710  6E03               	movwf	i2color_writetoaddr@value^0,c
  8955   002712  0E05               	movlw	5
  8956   002714  ECCE  F014         	call	i2_color_writetoaddr
  8957   002718                     
  8958                           ;interrupts.c: 51:     color_writetoaddr(0x06,(int_threshold_high & 0xFF));
  8959   002718  C0D3  F003         	movff	_int_threshold_high,i2color_writetoaddr@value
  8960   00271C  0E06               	movlw	6
  8961   00271E  ECCE  F014         	call	i2_color_writetoaddr
  8962   002722                     
  8963                           ;interrupts.c: 52:     color_writetoaddr(0x07,(int_threshold_high >> 8));
  8964   002722  0100               	movlb	0	; () banked
  8965   002724  51D4               	movf	(_int_threshold_high+1)& (0+255),w,b
  8966   002726  6E03               	movwf	i2color_writetoaddr@value^0,c
  8967   002728  0E07               	movlw	7
  8968   00272A  ECCE  F014         	call	i2_color_writetoaddr
  8969   00272E  0012               	return		;funcret
  8970   002730                     __end_ofi2_init_colorclick_interrupts:
  8971                           	callstack 0
  8972                           
  8973 ;; *************** function i2_color_writetoaddr *****************
  8974 ;; Defined at:
  8975 ;;		line 22 in file "color.c"
  8976 ;; Parameters:    Size  Location     Type
  8977 ;;  address         1    wreg     unsigned char 
  8978 ;;  value           1    2[COMRAM] unsigned char 
  8979 ;; Auto vars:     Size  Location     Type
  8980 ;;  address         1    3[COMRAM] unsigned char 
  8981 ;; Return value:  Size  Location     Type
  8982 ;;                  1    wreg      void 
  8983 ;; Registers used:
  8984 ;;		wreg, status,2, status,0, cstack
  8985 ;; Tracked objects:
  8986 ;;		On entry : 0/0
  8987 ;;		On exit  : 0/0
  8988 ;;		Unchanged: 0/0
  8989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8990 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8991 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8993 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8994 ;;Total ram usage:        2 bytes
  8995 ;; Hardware stack levels used: 1
  8996 ;; Hardware stack levels required when called: 2
  8997 ;; This function calls:
  8998 ;;		i2_I2C_2_Master_Start
  8999 ;;		i2_I2C_2_Master_Stop
  9000 ;;		i2_I2C_2_Master_Write
  9001 ;; This function is called by:
  9002 ;;		i2_init_colorclick_interrupts
  9003 ;; This function uses a non-reentrant model
  9004 ;;
  9005                           
  9006                           	psect	text58
  9007   00299C                     __ptext58:
  9008                           	callstack 0
  9009   00299C                     i2_color_writetoaddr:
  9010                           	callstack 16
  9011                           
  9012                           ;incstack = 0
  9013                           ;i2color_writetoaddr@address stored from wreg
  9014   00299C  6E04               	movwf	i2color_writetoaddr@address^0,c
  9015   00299E                     
  9016                           ;color.c: 23:     I2C_2_Master_Start();
  9017   00299E  EC2F  F015         	call	i2_I2C_2_Master_Start	;wreg free
  9018                           
  9019                           ;color.c: 24:     I2C_2_Master_Write(0x52 | 0x00);
  9020   0029A2  0E52               	movlw	82
  9021   0029A4  EC15  F015         	call	i2_I2C_2_Master_Write
  9022                           
  9023                           ;color.c: 25:     I2C_2_Master_Write(0x80 | address);
  9024   0029A8  5004               	movf	i2color_writetoaddr@address^0,w,c
  9025   0029AA  0980               	iorlw	128
  9026   0029AC  EC15  F015         	call	i2_I2C_2_Master_Write
  9027                           
  9028                           ;color.c: 26:     I2C_2_Master_Write(value);
  9029   0029B0  5003               	movf	i2color_writetoaddr@value^0,w,c
  9030   0029B2  EC15  F015         	call	i2_I2C_2_Master_Write
  9031                           
  9032                           ;color.c: 27:     I2C_2_Master_Stop();
  9033   0029B6  EC2A  F015         	call	i2_I2C_2_Master_Stop	;wreg free
  9034   0029BA  0012               	return		;funcret
  9035   0029BC                     __end_ofi2_color_writetoaddr:
  9036                           	callstack 0
  9037                           
  9038 ;; *************** function i2_I2C_2_Master_Write *****************
  9039 ;; Defined at:
  9040 ;;		line 45 in file "i2c.c"
  9041 ;; Parameters:    Size  Location     Type
  9042 ;;  data_byte       1    wreg     unsigned char 
  9043 ;; Auto vars:     Size  Location     Type
  9044 ;;  data_byte       1    1[COMRAM] unsigned char 
  9045 ;; Return value:  Size  Location     Type
  9046 ;;                  1    wreg      void 
  9047 ;; Registers used:
  9048 ;;		wreg, status,2, status,0, cstack
  9049 ;; Tracked objects:
  9050 ;;		On entry : 0/0
  9051 ;;		On exit  : 0/0
  9052 ;;		Unchanged: 0/0
  9053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9055 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9057 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9058 ;;Total ram usage:        1 bytes
  9059 ;; Hardware stack levels used: 1
  9060 ;; Hardware stack levels required when called: 1
  9061 ;; This function calls:
  9062 ;;		i2_I2C_2_Master_Idle
  9063 ;; This function is called by:
  9064 ;;		i2_color_writetoaddr
  9065 ;;		i2_interrupts_clear_colorclick
  9066 ;; This function uses a non-reentrant model
  9067 ;;
  9068                           
  9069                           	psect	text59
  9070   002A2A                     __ptext59:
  9071                           	callstack 0
  9072   002A2A                     i2_I2C_2_Master_Write:
  9073                           	callstack 16
  9074                           
  9075                           ;incstack = 0
  9076                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  9077   002A2A  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  9078   002A2C                     
  9079                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  9080   002A2C  EC54  F014         	call	i2_I2C_2_Master_Idle	;wreg free
  9081   002A30                     
  9082                           ;i2c.c: 48:   SSP2BUF = data_byte;
  9083   002A30  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  9084   002A34  0012               	return		;funcret
  9085   002A36                     __end_ofi2_I2C_2_Master_Write:
  9086                           	callstack 0
  9087                           
  9088 ;; *************** function i2_I2C_2_Master_Stop *****************
  9089 ;; Defined at:
  9090 ;;		line 39 in file "i2c.c"
  9091 ;; Parameters:    Size  Location     Type
  9092 ;;		None
  9093 ;; Auto vars:     Size  Location     Type
  9094 ;;		None
  9095 ;; Return value:  Size  Location     Type
  9096 ;;                  1    wreg      void 
  9097 ;; Registers used:
  9098 ;;		wreg, status,2, status,0, cstack
  9099 ;; Tracked objects:
  9100 ;;		On entry : 0/0
  9101 ;;		On exit  : 0/0
  9102 ;;		Unchanged: 0/0
  9103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9108 ;;Total ram usage:        0 bytes
  9109 ;; Hardware stack levels used: 1
  9110 ;; Hardware stack levels required when called: 1
  9111 ;; This function calls:
  9112 ;;		i2_I2C_2_Master_Idle
  9113 ;; This function is called by:
  9114 ;;		i2_color_writetoaddr
  9115 ;;		i2_interrupts_clear_colorclick
  9116 ;; This function uses a non-reentrant model
  9117 ;;
  9118                           
  9119                           	psect	text60
  9120   002A54                     __ptext60:
  9121                           	callstack 0
  9122   002A54                     i2_I2C_2_Master_Stop:
  9123                           	callstack 16
  9124   002A54                     
  9125                           ;i2c.c: 41:   I2C_2_Master_Idle();
  9126   002A54  EC54  F014         	call	i2_I2C_2_Master_Idle	;wreg free
  9127   002A58                     
  9128                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  9129   002A58  010E               	movlb	14	; () banked
  9130   002A5A  85DA               	bsf	218,2,b	;volatile
  9131   002A5C                     
  9132                           ; BSR set to: 14
  9133   002A5C  0012               	return		;funcret
  9134   002A5E                     __end_ofi2_I2C_2_Master_Stop:
  9135                           	callstack 0
  9136                           
  9137 ;; *************** function i2_I2C_2_Master_Start *****************
  9138 ;; Defined at:
  9139 ;;		line 27 in file "i2c.c"
  9140 ;; Parameters:    Size  Location     Type
  9141 ;;		None
  9142 ;; Auto vars:     Size  Location     Type
  9143 ;;		None
  9144 ;; Return value:  Size  Location     Type
  9145 ;;                  1    wreg      void 
  9146 ;; Registers used:
  9147 ;;		wreg, status,2, status,0, cstack
  9148 ;; Tracked objects:
  9149 ;;		On entry : 0/0
  9150 ;;		On exit  : 0/0
  9151 ;;		Unchanged: 0/0
  9152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9157 ;;Total ram usage:        0 bytes
  9158 ;; Hardware stack levels used: 1
  9159 ;; Hardware stack levels required when called: 1
  9160 ;; This function calls:
  9161 ;;		i2_I2C_2_Master_Idle
  9162 ;; This function is called by:
  9163 ;;		i2_color_writetoaddr
  9164 ;;		i2_interrupts_clear_colorclick
  9165 ;; This function uses a non-reentrant model
  9166 ;;
  9167                           
  9168                           	psect	text61
  9169   002A5E                     __ptext61:
  9170                           	callstack 0
  9171   002A5E                     i2_I2C_2_Master_Start:
  9172                           	callstack 16
  9173   002A5E                     
  9174                           ;i2c.c: 29:   I2C_2_Master_Idle();
  9175   002A5E  EC54  F014         	call	i2_I2C_2_Master_Idle	;wreg free
  9176   002A62                     
  9177                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  9178   002A62  010E               	movlb	14	; () banked
  9179   002A64  81DA               	bsf	218,0,b	;volatile
  9180   002A66                     
  9181                           ; BSR set to: 14
  9182   002A66  0012               	return		;funcret
  9183   002A68                     __end_ofi2_I2C_2_Master_Start:
  9184                           	callstack 0
  9185                           
  9186 ;; *************** function i2_I2C_2_Master_Idle *****************
  9187 ;; Defined at:
  9188 ;;		line 22 in file "i2c.c"
  9189 ;; Parameters:    Size  Location     Type
  9190 ;;		None
  9191 ;; Auto vars:     Size  Location     Type
  9192 ;;		None
  9193 ;; Return value:  Size  Location     Type
  9194 ;;                  1    wreg      void 
  9195 ;; Registers used:
  9196 ;;		wreg, status,2, status,0
  9197 ;; Tracked objects:
  9198 ;;		On entry : 0/0
  9199 ;;		On exit  : 0/0
  9200 ;;		Unchanged: 0/0
  9201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9204 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9205 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9206 ;;Total ram usage:        1 bytes
  9207 ;; Hardware stack levels used: 1
  9208 ;; This function calls:
  9209 ;;		Nothing
  9210 ;; This function is called by:
  9211 ;;		i2_I2C_2_Master_Start
  9212 ;;		i2_I2C_2_Master_Stop
  9213 ;;		i2_I2C_2_Master_Write
  9214 ;; This function uses a non-reentrant model
  9215 ;;
  9216                           
  9217                           	psect	text62
  9218   0028A8                     __ptext62:
  9219                           	callstack 0
  9220   0028A8                     i2_I2C_2_Master_Idle:
  9221                           	callstack 16
  9222   0028A8                     i2l89:
  9223   0028A8  010E               	movlb	14	; () banked
  9224   0028AA  B5D8               	btfsc	216,2,b	;volatile
  9225   0028AC  EF5A  F014         	goto	i2u219_41
  9226   0028B0  EF5C  F014         	goto	i2u219_40
  9227   0028B4                     i2u219_41:
  9228   0028B4  EF54  F014         	goto	i2l89
  9229   0028B8                     i2u219_40:
  9230   0028B8                     
  9231                           ; BSR set to: 14
  9232   0028B8  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  9233   0028BC  0E1F               	movlw	31
  9234   0028BE  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  9235   0028C0  A4D8               	btfss	status,2,c
  9236   0028C2  EF65  F014         	goto	i2u220_41
  9237   0028C6  EF67  F014         	goto	i2u220_40
  9238   0028CA                     i2u220_41:
  9239   0028CA  EF54  F014         	goto	i2l89
  9240   0028CE                     i2u220_40:
  9241   0028CE                     
  9242                           ; BSR set to: 14
  9243   0028CE  0012               	return		;funcret
  9244   0028D0                     __end_ofi2_I2C_2_Master_Idle:
  9245                           	callstack 0
  9246   000000                     
  9247                           	psect	rparam
  9248   000000                     
  9249                           	psect	temp
  9250   000057                     btemp:
  9251                           	callstack 0
  9252   000057                     	ds	1
  9253   000000                     int$flags	set	btemp
  9254   000000                     wtemp8	set	btemp+1
  9255   000000                     ttemp5	set	btemp+1
  9256   000000                     ttemp6	set	btemp+4
  9257   000000                     ttemp7	set	btemp+8
  9258                           
  9259                           	psect	idloc
  9260                           
  9261                           ;Config register IDLOC0 @ 0x200000
  9262                           ;	unspecified, using default values
  9263   200000                     	org	2097152
  9264   200000  0FFF               	dw	4095
  9265                           
  9266                           ;Config register IDLOC1 @ 0x200002
  9267                           ;	unspecified, using default values
  9268   200002                     	org	2097154
  9269   200002  0FFF               	dw	4095
  9270                           
  9271                           ;Config register IDLOC2 @ 0x200004
  9272                           ;	unspecified, using default values
  9273   200004                     	org	2097156
  9274   200004  0FFF               	dw	4095
  9275                           
  9276                           ;Config register IDLOC3 @ 0x200006
  9277                           ;	unspecified, using default values
  9278   200006                     	org	2097158
  9279   200006  0FFF               	dw	4095
  9280                           
  9281                           ;Config register IDLOC4 @ 0x200008
  9282                           ;	unspecified, using default values
  9283   200008                     	org	2097160
  9284   200008  0FFF               	dw	4095
  9285                           
  9286                           ;Config register IDLOC5 @ 0x20000A
  9287                           ;	unspecified, using default values
  9288   20000A                     	org	2097162
  9289   20000A  0FFF               	dw	4095
  9290                           
  9291                           ;Config register IDLOC6 @ 0x20000C
  9292                           ;	unspecified, using default values
  9293   20000C                     	org	2097164
  9294   20000C  0FFF               	dw	4095
  9295                           
  9296                           ;Config register IDLOC7 @ 0x20000E
  9297                           ;	unspecified, using default values
  9298   20000E                     	org	2097166
  9299   20000E  0FFF               	dw	4095
  9300                           
  9301                           	psect	config
  9302                           
  9303                           ;Config register CONFIG1L @ 0x300000
  9304                           ;	External Oscillator mode Selection bits
  9305                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  9306                           ;	Power-up default value for COSC bits
  9307                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  9308   300000                     	org	3145728
  9309   300000  AA                 	db	170
  9310                           
  9311                           ;Config register CONFIG1H @ 0x300001
  9312                           ;	unspecified, using default values
  9313                           ;	Clock Out Enable bit
  9314                           ;	CLKOUTEN = 0x1, unprogrammed default
  9315                           ;	Clock Switch Enable bit
  9316                           ;	CSWEN = 0x1, unprogrammed default
  9317                           ;	Fail-Safe Clock Monitor Enable bit
  9318                           ;	FCMEN = 0x1, unprogrammed default
  9319   300001                     	org	3145729
  9320   300001  FF                 	db	255
  9321                           
  9322                           ;Config register CONFIG2L @ 0x300002
  9323                           ;	unspecified, using default values
  9324                           ;	Master Clear Enable bit
  9325                           ;	MCLRE = 0x1, unprogrammed default
  9326                           ;	Power-up Timer Enable bit
  9327                           ;	PWRTE = 0x1, unprogrammed default
  9328                           ;	Low-power BOR enable bit
  9329                           ;	LPBOREN = 0x1, unprogrammed default
  9330                           ;	Brown-out Reset Enable bits
  9331                           ;	BOREN = 0x3, unprogrammed default
  9332   300002                     	org	3145730
  9333   300002  FF                 	db	255
  9334                           
  9335                           ;Config register CONFIG2H @ 0x300003
  9336                           ;	unspecified, using default values
  9337                           ;	Brown Out Reset Voltage selection bits
  9338                           ;	BORV = 0x3, unprogrammed default
  9339                           ;	ZCD Disable bit
  9340                           ;	ZCD = 0x1, unprogrammed default
  9341                           ;	PPSLOCK bit One-Way Set Enable bit
  9342                           ;	PPS1WAY = 0x1, unprogrammed default
  9343                           ;	Stack Full/Underflow Reset Enable bit
  9344                           ;	STVREN = 0x1, unprogrammed default
  9345                           ;	Debugger Enable bit
  9346                           ;	DEBUG = 0x1, unprogrammed default
  9347                           ;	Extended Instruction Set Enable bit
  9348                           ;	XINST = 0x1, unprogrammed default
  9349   300003                     	org	3145731
  9350   300003  FF                 	db	255
  9351                           
  9352                           ;Config register CONFIG3L @ 0x300004
  9353                           ;	WDT Period Select bits
  9354                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  9355                           ;	WDT operating mode
  9356                           ;	WDTE = OFF, WDT Disabled
  9357   300004                     	org	3145732
  9358   300004  9F                 	db	159
  9359                           
  9360                           ;Config register CONFIG3H @ 0x300005
  9361                           ;	unspecified, using default values
  9362                           ;	WDT Window Select bits
  9363                           ;	WDTCWS = 0x7, unprogrammed default
  9364                           ;	WDT input clock selector
  9365                           ;	WDTCCS = 0x7, unprogrammed default
  9366   300005                     	org	3145733
  9367   300005  FF                 	db	255
  9368                           
  9369                           ;Config register CONFIG4L @ 0x300006
  9370                           ;	unspecified, using default values
  9371                           ;	Write Protection Block 0
  9372                           ;	WRT0 = 0x1, unprogrammed default
  9373                           ;	Write Protection Block 1
  9374                           ;	WRT1 = 0x1, unprogrammed default
  9375                           ;	Write Protection Block 2
  9376                           ;	WRT2 = 0x1, unprogrammed default
  9377                           ;	Write Protection Block 3
  9378                           ;	WRT3 = 0x1, unprogrammed default
  9379                           ;	Write Protection Block 3
  9380                           ;	WRT4 = 0x1, unprogrammed default
  9381                           ;	Write Protection Block 3
  9382                           ;	WRT5 = 0x1, unprogrammed default
  9383                           ;	Write Protection Block 3
  9384                           ;	WRT6 = 0x1, unprogrammed default
  9385                           ;	Write Protection Block 3
  9386                           ;	WRT7 = 0x1, unprogrammed default
  9387   300006                     	org	3145734
  9388   300006  FF                 	db	255
  9389                           
  9390                           ;Config register CONFIG4H @ 0x300007
  9391                           ;	unspecified, using default values
  9392                           ;	Configuration Register Write Protection bit
  9393                           ;	WRTC = 0x1, unprogrammed default
  9394                           ;	Boot Block Write Protection bit
  9395                           ;	WRTB = 0x1, unprogrammed default
  9396                           ;	Data EEPROM Write Protection bit
  9397                           ;	WRTD = 0x1, unprogrammed default
  9398                           ;	Scanner Enable bit
  9399                           ;	SCANE = 0x1, unprogrammed default
  9400                           ;	Low Voltage Programming Enable bit
  9401                           ;	LVP = 0x1, unprogrammed default
  9402   300007                     	org	3145735
  9403   300007  FF                 	db	255
  9404                           
  9405                           ;Config register CONFIG5L @ 0x300008
  9406                           ;	unspecified, using default values
  9407                           ;	UserNVM Program Memory Code Protection bit
  9408                           ;	CP = 0x1, unprogrammed default
  9409                           ;	DataNVM Memory Code Protection bit
  9410                           ;	CPD = 0x1, unprogrammed default
  9411   300008                     	org	3145736
  9412   300008  FF                 	db	255
  9413                           
  9414                           ;Config register CONFIG5H @ 0x300009
  9415                           ;	unspecified, using default values
  9416   300009                     	org	3145737
  9417   300009  FF                 	db	255
  9418                           
  9419                           ;Config register CONFIG6L @ 0x30000A
  9420                           ;	unspecified, using default values
  9421                           ;	Table Read Protection Block 0
  9422                           ;	EBTR0 = 0x1, unprogrammed default
  9423                           ;	Table Read Protection Block 1
  9424                           ;	EBTR1 = 0x1, unprogrammed default
  9425                           ;	Table Read Protection Block 2
  9426                           ;	EBTR2 = 0x1, unprogrammed default
  9427                           ;	Table Read Protection Block 3
  9428                           ;	EBTR3 = 0x1, unprogrammed default
  9429                           ;	Table Read Protection Block 4
  9430                           ;	EBTR4 = 0x1, unprogrammed default
  9431                           ;	Table Read Protection Block 5
  9432                           ;	EBTR5 = 0x1, unprogrammed default
  9433                           ;	Table Read Protection Block 6
  9434                           ;	EBTR6 = 0x1, unprogrammed default
  9435                           ;	Table Read Protection Block 7
  9436                           ;	EBTR7 = 0x1, unprogrammed default
  9437   30000A                     	org	3145738
  9438   30000A  FF                 	db	255
  9439                           
  9440                           ;Config register CONFIG6H @ 0x30000B
  9441                           ;	unspecified, using default values
  9442                           ;	Boot Block Table Read Protection bit
  9443                           ;	EBTRB = 0x1, unprogrammed default
  9444   30000B                     	org	3145739
  9445   30000B  FF                 	db	255
  9446                           tosu	equ	0xFFF
  9447                           tosh	equ	0xFFE
  9448                           tosl	equ	0xFFD
  9449                           stkptr	equ	0xFFC
  9450                           pclatu	equ	0xFFB
  9451                           pclath	equ	0xFFA
  9452                           pcl	equ	0xFF9
  9453                           tblptru	equ	0xFF8
  9454                           tblptrh	equ	0xFF7
  9455                           tblptrl	equ	0xFF6
  9456                           tablat	equ	0xFF5
  9457                           prodh	equ	0xFF4
  9458                           prodl	equ	0xFF3
  9459                           indf0	equ	0xFEF
  9460                           postinc0	equ	0xFEE
  9461                           postdec0	equ	0xFED
  9462                           preinc0	equ	0xFEC
  9463                           plusw0	equ	0xFEB
  9464                           fsr0h	equ	0xFEA
  9465                           fsr0l	equ	0xFE9
  9466                           wreg	equ	0xFE8
  9467                           indf1	equ	0xFE7
  9468                           postinc1	equ	0xFE6
  9469                           postdec1	equ	0xFE5
  9470                           preinc1	equ	0xFE4
  9471                           plusw1	equ	0xFE3
  9472                           fsr1h	equ	0xFE2
  9473                           fsr1l	equ	0xFE1
  9474                           bsr	equ	0xFE0
  9475                           indf2	equ	0xFDF
  9476                           postinc2	equ	0xFDE
  9477                           postdec2	equ	0xFDD
  9478                           preinc2	equ	0xFDC
  9479                           plusw2	equ	0xFDB
  9480                           fsr2h	equ	0xFDA
  9481                           fsr2l	equ	0xFD9
  9482                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         210
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     78      86
    BANK0           160     53     117
    BANK1           256      0     140
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    Return_Time@time_index	PTR unsigned char  size(2) Largest target is 1
		 -> time_index(BANK0[1]), 

    Return_Time@time_array	PTR unsigned int  size(2) Largest target is 80
		 -> time_array(BANK1[80]), 

    Return_Anti_Moves@moves_index	PTR unsigned char  size(2) Largest target is 1
		 -> moves_index(COMRAM[1]), 

    Return_Anti_Moves@anti_moves_array	PTR unsigned char  size(2) Largest target is 40
		 -> anti_moves_array(BANK0[40]), 

    AppendTime@time_index	PTR unsigned char  size(2) Largest target is 1
		 -> time_index(BANK0[1]), 

    AppendTime@time_array	PTR unsigned int  size(2) Largest target is 80
		 -> time_array(BANK1[80]), 

    AppendMoves@moves_index	PTR unsigned char  size(2) Largest target is 1
		 -> moves_index(COMRAM[1]), 

    AppendMoves@anti_moves_array	PTR unsigned char  size(2) Largest target is 40
		 -> anti_moves_array(BANK0[40]), 

    MoveBuggy@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    MoveBuggy@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    MoveBuggy@color_detected	PTR unsigned char  size(2) Largest target is 3561
		 -> RAM(DATA[3561]), 

    WhiteInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    WhiteInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    AntiPink@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    AntiPink@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    AntiYellow@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    AntiYellow@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    LightBlueInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    LightBlueInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    OrangeInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    OrangeInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    PinkInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    PinkInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    YellowInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    YellowInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    BlueInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    BlueInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    GreenInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    GreenInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    RedInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    RedInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnLeft135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnLeft90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    fullSpeedBackwards@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    fullSpeedBackwards@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    fullSpeedBackwards@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    fullSpeedBackwards@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    fullSpeedBackwards@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    fullSpeedBackwards@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    S1213DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    S1213DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), main@motorL(BANK0[9]), 

    detect_color@tempval	PTR struct RGB_val size(2) Largest target is 8
		 -> main@initial_color(BANK0[8]), 

    Update_RGBC@tempval	PTR struct RGB_val size(2) Largest target is 8
		 -> main@initial_color(BANK0[8]), 


Critical Paths under _main in COMRAM

    _detect_color->___fltol
    ___fltol->___flmul
    ___flmul->___fldiv
    ___fldiv->___xxtofl
    _color_click_init->_color_writetoaddr
    _WhiteInstructions->_MoveBuggy
    _MoveBuggy->_AntiPink
    _MoveBuggy->_AntiYellow
    _YellowInstructions->_turnRight90
    _RedInstructions->_turnRight90
    _PinkInstructions->_turnLeft90
    _OrangeInstructions->_turnRight135
    _turnRight135->_turnRight
    _LightBlueInstructions->_turnLeft135
    _turnLeft135->_turnLeft
    _GreenInstructions->_turnLeft90
    _AntiYellow->_BlueInstructions
    _turnRight90->_turnRight
    _turnRight->_setMotorPWM
    _AntiPink->_BlueInstructions
    _fullSpeedAhead->_setMotorPWM
    _BlueInstructions->_turnLeft90
    _turnLeft90->_turnLeft
    _turnLeft->_setMotorPWM
    _stop->_setMotorPWM
    _fullSpeedBackwards->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _Update_RGBC->_color_read_Blue
    _Update_RGBC->_color_read_Clear
    _Update_RGBC->_color_read_Green
    _Update_RGBC->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _interrupts_clear_colorclick->_init_colorclick_interrupts
    _init_colorclick_interrupts->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    i2_interrupts_clear_colorclick->i2_init_colorclick_interrupts
    i2_init_colorclick_interrupts->i2_color_writetoaddr
    i2_color_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_detect_color
    _detect_color->___fltol

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                31    31      0  425662
                                             22 BANK0     31    31      0
                         _AppendTime
                    _Interrupts_init
                           _LED_init
                          _MoveBuggy
                        _Timer0_init
                        _Update_RGBC
                  _WhiteInstructions
                         _WhiteLight
                   _color_click_init
                       _detect_color
                     _fullSpeedAhead
                    _initDCmotorsPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _detect_color                                        18    16      2    6580
                                              4 BANK0     18    16      2
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     616
                                              8 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     517
                                             72 COMRAM     6     2      4
                                              0 BANK0      4     4      0
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    1886
                                             47 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1541
                                             22 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     750
                                             12 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WhiteLight                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WhiteInstructions                                   11     7      4  216645
                                             58 COMRAM    11     7      4
                   _BlueInstructions
                          _MoveBuggy
                  _Return_Anti_Moves
                        _Return_Time
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (2) _Return_Time                                          9     5      4     219
                                              8 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (2) _Return_Anti_Moves                                    6     2      4     219
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _MoveBuggy                                            6     0      6  190312
                                             52 COMRAM     6     0      6
                           _AntiPink
                         _AntiYellow
                        _AppendMoves
                   _BlueInstructions
                  _GreenInstructions
              _LightBlueInstructions
                 _OrangeInstructions
                   _PinkInstructions
                    _RedInstructions
                 _YellowInstructions
 ---------------------------------------------------------------------------------
 (3) _YellowInstructions                                   7     3      4   17052
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                        _turnRight90
 ---------------------------------------------------------------------------------
 (3) _RedInstructions                                      7     3      4   17052
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                        _turnRight90
 ---------------------------------------------------------------------------------
 (3) _PinkInstructions                                     7     3      4   17204
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                         _turnLeft90
 ---------------------------------------------------------------------------------
 (3) _OrangeInstructions                                   7     3      4   16614
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                       _turnRight135
 ---------------------------------------------------------------------------------
 (4) _turnRight135                                         5     1      4    8057
                                             33 COMRAM     5     1      4
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (3) _LightBlueInstructions                                7     3      4   16462
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                        _turnLeft135
 ---------------------------------------------------------------------------------
 (4) _turnLeft135                                          5     1      4    7905
                                             33 COMRAM     5     1      4
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (3) _GreenInstructions                                    7     3      4   17204
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                         _turnLeft90
 ---------------------------------------------------------------------------------
 (3) _AppendMoves                                          6     2      4    1130
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _AntiYellow                                           7     3      4   34344
                                             45 COMRAM     7     3      4
                   _BlueInstructions
                     _fullSpeedAhead
                               _stop
                        _turnRight90
 ---------------------------------------------------------------------------------
 (4) _turnRight90                                          5     1      4    8495
                                             33 COMRAM     5     1      4
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (5) _turnRight                                            6     2      4    2745
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _AntiPink                                             7     3      4   34496
                                             45 COMRAM     7     3      4
                   _BlueInstructions
                     _fullSpeedAhead
                               _stop
                         _turnLeft90
 ---------------------------------------------------------------------------------
 (1) _fullSpeedAhead                                       6     2      4    2745
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _BlueInstructions                                     7     3      4   17704
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                         _turnLeft90
 ---------------------------------------------------------------------------------
 (4) _turnLeft90                                           5     1      4    8647
                                             33 COMRAM     5     1      4
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (5) _turnLeft                                             6     2      4    2593
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _stop                                                 5     1      4    5025
                                             27 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _fullSpeedBackwards                                   6     2      4    3201
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    1829
                                             21 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                             14 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Update_RGBC                                          2     0      2     616
                                             19 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              9 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0     772
        _interrupts_clear_colorclick
 ---------------------------------------------------------------------------------
 (2) _interrupts_clear_colorclick                          0     0      0     772
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
         _init_colorclick_interrupts
 ---------------------------------------------------------------------------------
 (3) _init_colorclick_interrupts                           1     1      0     750
                                             12 COMRAM     1     1      0
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     750
                                             10 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              9 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _AppendTime                                           9     3      6     522
                                              8 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _LowISR                                               3     3      0       0
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _HighISR                                             0     0      0     244
      i2_interrupts_clear_colorclick
 ---------------------------------------------------------------------------------
 (11) i2_interrupts_clear_colorclick                       0     0      0     244
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
       i2_init_colorclick_interrupts
 ---------------------------------------------------------------------------------
 (12) i2_init_colorclick_interrupts                        1     1      0     222
                                              4 COMRAM     1     1      0
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (13) i2_color_writetoaddr                                 2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (14) i2_I2C_2_Master_Write                                1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (14) i2_I2C_2_Master_Stop                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (14) i2_I2C_2_Master_Start                                0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (15) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AppendTime
   _Interrupts_init
     _interrupts_clear_colorclick
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
       _init_colorclick_interrupts
         _color_writetoaddr
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
   _LED_init
   _MoveBuggy
     _AntiPink
       _BlueInstructions
         _fullSpeedBackwards
           _setMotorPWM
             ___lwdiv
               ___wmul (ARG)
             ___wmul
         _stop
           _setMotorPWM
         _turnLeft90
           _stop
           _turnLeft
             _setMotorPWM
       _fullSpeedAhead
         _setMotorPWM
       _stop
       _turnLeft90
     _AntiYellow
       _BlueInstructions
       _fullSpeedAhead
       _stop
       _turnRight90
         _stop
         _turnRight
           _setMotorPWM
     _AppendMoves
     _BlueInstructions
     _GreenInstructions
       _fullSpeedBackwards
       _stop
       _turnLeft90
     _LightBlueInstructions
       _fullSpeedBackwards
       _stop
       _turnLeft135
         _stop
         _turnLeft
     _OrangeInstructions
       _fullSpeedBackwards
       _stop
       _turnRight135
         _stop
         _turnRight
     _PinkInstructions
       _fullSpeedBackwards
       _stop
       _turnLeft90
     _RedInstructions
       _fullSpeedBackwards
       _stop
       _turnRight90
     _YellowInstructions
       _fullSpeedBackwards
       _stop
       _turnRight90
   _Timer0_init
   _Update_RGBC
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _WhiteInstructions
     _BlueInstructions
     _MoveBuggy
     _Return_Anti_Moves
     _Return_Time
     _fullSpeedAhead
     _stop
   _WhiteLight
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
   _detect_color
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       ___fldiv (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _fullSpeedAhead
   _initDCmotorsPWM
   _stop

 _LowISR (ROOT)

 _HighISR (ROOT)
   i2_interrupts_clear_colorclick
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle
     i2_init_colorclick_interrupts
       i2_color_writetoaddr
         i2_I2C_2_Master_Start
         i2_I2C_2_Master_Stop
         i2_I2C_2_Master_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      62        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      8C       7       54.7%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     35      75       5       73.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4E      56       1       91.5%
BITBIGSFRhllllh     52      0       0      40        0.0%
BITBIGSFRhlllll     37      0       0      42        0.0%
BITBIGSFRllh        2D      0       0      45        0.0%
BITBIGSFRlllhll     2A      0       0      53        0.0%
BITBIGSFRlllll      26      0       0      60        0.0%
BITBIGSFRhhhlll     1D      0       0      38        0.0%
BITBIGSFRhhhhlh     1B      0       0      33        0.0%
BITBIGSFRhhhhll     13      0       0      34        0.0%
BITBIGSFRlllhhh     11      0       0      47        0.0%
BITBIGSFRlllhhh     11      0       0      48        0.0%
BITBIGSFRhhhlhh      E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRlllhhh      C      0       0      46        0.0%
BITBIGSFRlllhll      9      0       0      57        0.0%
BITBIGSFRhlllll      8      0       0      43        0.0%
BITBIGSFRllllh       6      0       0      59        0.0%
BITBIGSFRlllhll      6      0       0      52        0.0%
BITBIGSFRlllhll      5      0       0      55        0.0%
BITBIGSFRlllhlh      5      0       0      51        0.0%
BITBIGSFRlllhll      3      0       0      54        0.0%
BITBIGSFRlllhll      3      0       0      56        0.0%
BITBIGSFRlllhhl      3      0       0      50        0.0%
BITBIGSFRhlllll      2      0       0      41        0.0%
BITBIGSFRhhhllh      2      0       0      37        0.0%
BITBIGSFRhhhlhl      1      0       0      36        0.0%
BITBIGSFRlllhhh      1      0       0      49        0.0%
BITBIGSFRhlllh       1      0       0      39        0.0%
BITBIGSFRlllhll      1      0       0      58        0.0%
BITBIGSFRlh          1      0       0      44        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     157      61        0.0%
DATA                 0      0     157       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Mar 11 20:04:15 2023

                       _color_read_Red 2550                           ___fldiv@aexp 002F  
                         ___fldiv@bexp 002E                           ___fldiv@sign 0027  
                      _color_read_Blue 2640                                     l21 2822  
                                   l30 25EE                                     l24 297A  
                                   l33 268E                                     l42 0674  
                                   l27 259E                                     l36 263E  
                                   l39 249A                                     l59 067A  
                                   l92 28A6                                     l86 287E  
                                   l95 2A52                                     l89 2880  
                                   l98 2A3E                                     bsr 000FE0  
                  ___wmul@multiplicand 000B                       _anti_moves_array 0075  
                     _color_read_Clear 25F0                       _color_read_Green 25A0  
           WhiteInstructions@anticolor 0043                      ??_Interrupts_init 000E  
                                  l101 2A48                                    l104 2A28  
                                  l201 19F6                                    l130 2A1C  
                                  l107 27B6                                    l211 1908  
                                  l133 2A6E                                    l206 181A  
                                  l231 2014                                    l216 1AE4  
                                  l325 26DE                                    l318 29D8  
                                  l246 1F66                                    l191 1624  
                                  l328 29F2                                    l264 24F4  
                                  l184 20A4                                    l273 254E  
                                  l442 295A                                    l602 2236  
                                  l611 22BC                                    l700 28F4  
                                  l196 1CA2                                    l620 2342  
                                  l650 1BCE                                    l629 1D54  
                                  l638 1E06                                    l566 21B0  
                                  l575 23C8                                    l584 1EB8  
                                  l593 212A                                    l691 2854  
                                  l677 10C2                                    l694 293A  
                                  l688 2918                                    l697 27EE  
                                  l997 172C                    i2_color_writetoaddr 299C  
                                  wreg 000FE8                           ___flmul@aexp 0041  
                         ___flmul@bexp 0042                           ___flmul@sign 003C  
                         ___flmul@temp 0047                           ___flmul@prod 0043  
                         ___fltol@exp1 004E                                   l3001 2A36  
                                 l1321 0936                                   l1314 0740  
                                 l3011 278C                                   l3003 2A3A  
                                 l1331 0A66                                   l1323 09AE  
                                 l1324 099C                                   l3021 269A  
                                 l3013 27B2                                   l3005 2778  
                                 l3101 220A                                   l1318 0AA4  
                                 l3031 26D2                                   l3023 26AA  
                                 l3015 27B4                                   l3007 277C  
                                 l1191 2434                                   l3111 2256  
                                 l3103 2222                                   l3025 26B4  
                                 l3009 2784                                   l3201 2550  
                                 l3121 22A8                                   l3113 226A  
                                 l3105 2238                                   l3041 215E  
                                 l3033 212C                                   l1282 0E3E  
                                 l1362 13F4                                   l3027 26BE  
                                 l3019 2690                                   l3203 2596  
                                 l3051 2344                                   l3131 22F0  
                                 l3123 22BE                                   l3115 227E  
                                 l3107 2240                                   l3043 2172  
                                 l3035 2134                                   l1355 135C  
                                 l1284 0C9E                                   l3029 26C8  
                                 l3213 2640                                   l3221 2636  
                                 l3141 1CA4                                   l3061 238A  
                                 l3053 234C                                   l3133 2304  
                                 l3125 22C6                                   l3117 2280  
                                 l3109 2254                                   l3045 2174  
                                 l3037 2148                                   l1293 0CE4  
                                 l4101 0330                                   l1198 243C  
                                 l1358 14B8                                   l3215 2686  
                                 l3207 25A0                                   l3151 1CEE  
                                 l3143 1CA8                                   l3063 238C  
                                 l3055 2360                                   l3135 2306  
                                 l3127 22DA                                   l3119 2290  
                                 l3047 2184                                   l3039 214A  
                                 l3071 20AE                                   l3231 0E66  
                                 l1295 0D5C                                   l1287 0C62  
                                 l3311 0AD2                                   l3303 0AA6  
                                 l4111 0380                                   l4103 0340  
                                 l1296 0D4A                                   l3225 29DA  
                                 l3209 25E6                                   l3161 1D40  
                                 l3153 1D02                                   l3145 1CBC  
                                 l3065 239C                                   l3057 2362  
                                 l3137 2316                                   l3129 22DC  
                                 l3049 219C                                   l3081 20EE  
                                 l3073 20C2                                   l3241 0EC4  
                                 l3233 0E74                                   l3401 0D06  
                                 l3321 0B0C                                   l3313 0AE2  
                                 l3305 0AB2                                   l1369 1450  
                                 l4201 0618                                   l4121 03C8  
                                 l4113 0390                                   l4105 0350  
                                 l3219 25F0                                   l3171 1D9E  
                                 l3163 1D56                                   l3155 1D16  
                                 l3147 1CD8                                   l3067 23B4  
                                 l3059 2376                                   l3139 232E  
                                 l3091 21CE                                   l3083 20FE  
                                 l3075 20C4                                   l3251 0F2E  
                                 l3243 0EDE                                   l3235 0E8E  
                                 l3227 0E40                                   l3411 0D78  
                                 l3403 0D14                                   l3331 0B38  
                                 l3323 0B12                                   l3315 0AF2  
                                 l3307 0AC0                                   l4211 0668  
                                 l4203 0628                                   l4131 0410  
                                 l4123 03D8                                   l4107 0360  
                                 l4115 0398                                   l3181 1DDA  
                                 l3173 1DA0                                   l3165 1D5A  
                                 l3157 1D18                                   l3149 1CEC  
                                 l3093 21D0                                   l3085 2116  
                                 l3077 20D8                                   l3069 20A6  
                                 l3261 0F92                                   l3253 0F42  
                                 l3245 0EF2                                   l3237 0EA2  
                                 l3229 0E52                                   l3421 0DE4  
                                 l3413 0D86                                   l3405 0D42  
                                 l3341 0B72                                   l3333 0B48  
                                 l3325 0B18                                   l3317 0AF4  
                                 l3309 0AC2                                   l3501 0806  
                                 l4061 1692                                   l4053 1650  
                                 l4205 0638                                   l4213 0670  
                                 l4141 0460                                   l4133 0420  
                                 l4125 03E8                                   l4117 03A8  
                                 l4109 0370                                   l4301 12FC  
                                 l4221 10EA                                   l3183 1DF2  
                                 l3175 1DB4                                   l3167 1D6E  
                                 l3159 1D28                                   l3095 21E4  
                                 l3087 21B2                                   l3079 20EC  
                                 l3271 0FF6                                   l3263 0FA6  
                                 l3255 0F56                                   l3247 0F06  
                                 l3239 0EB6                                   l3191 2860  
                                 l3431 0E32                                   l3423 0DFE  
                                 l3415 0DB0                                   l3343 0B88  
                                 l3335 0B58                                   l3327 0B26  
                                 l3319 0AFC                                   l3511 0868  
                                 l3503 0812                                   l4071 16C2  
                                 l4063 16A0                                   l4055 167C  
                                 l4047 1626                                   l4207 0648  
                                 l4151 04A8                                   l4135 0430  
                                 l4143 0468                                   l4127 03F8  
                                 l4119 03B8                                   l4231 1110  
                                 l4223 10EE                                   l2801 1966  
                                 l3177 1DC8                                   l3169 1D8A  
                                 l3185 28F8                                   l3097 21F8  
                                 l3089 21BA                                   l3281 1054  
                                 l3273 1004                                   l3265 0FB4  
                                 l3257 0F64                                   l3249 0F14  
                                 l3193 2866                                   l3433 0E34  
                                 l3425 0E1A                                   l3409 0D6C  
                                 l3417 0DB4                                   l3361 0BDC  
                                 l3345 0B98                                   l3353 0BB8  
                                 l3337 0B5A                                   l3329 0B28  
                                 l3521 08FE                                   l3513 0874  
                                 l3505 0822                                   l3441 067C  
                                 l4081 16EC                                   l4073 16CC  
                                 l4057 167E                                   l4049 163C  
                                 l4209 0658                                   l4161 04F0  
                                 l4153 04B8                                   l4145 0478  
                                 l4137 0440                                   l4129 0400  
                                 l4241 112E                                   l4233 1118  
                                 l4225 1102                                   l4217 10C4  
                                 l2811 19C6                                   l2803 1972  
                                 l3179 1DCA                                   l3099 21FA  
                                 l3283 106E                                   l3275 101E  
                                 l3267 0FCE                                   l3259 0F7E  
                                 l3291 27B8                                   l3195 2868  
                                 l3427 0E1E                                   l3419 0DCE  
                                 l3371 0C2E                                   l3363 0BF6  
                                 l3355 0BC8                                   l3347 0BA0  
                                 l3339 0B62                                   l3531 0954  
                                 l3523 091C                                   l3515 0890  
                                 l3507 083C                                   l3451 06B8  
                                 l3443 0688                                   l4083 16FC  
                                 l4059 168E                                   l4163 0500  
                                 l4171 0538                                   l4155 04C8  
                                 l4147 0488                                   l4139 0450  
                                 l4091 005C                                   l4251 1150  
                                 l4243 1132                                   l4235 1120  
                                 l4227 1108                                   l4219 10E6  
                                 l2821 2A20                                   l2741 23D2  
                                 l2733 28D0                                   l2813 19D2  
                                 l2805 198E                                   l2901 1884  
                                 l3285 1082                                   l3277 1032  
                                 l3269 0FE2                                   l3293 27E6  
                                 l3197 286A                                   l3189 2856  
                                 l3429 0E2C                                   l3381 0C8A  
                                 l3373 0C3E                                   l3365 0C06  
                                 l3357 0BC8                                   l3349 0BA4  
                                 l3541 09BE                                   l3533 0958  
                                 l3525 0926                                   l3517 08BA  
                                 l3509 084C                                   l3461 06EA  
                                 l3453 06C8                                   l3445 0696  
                                 l4085 170C                                   l4069 16B8  
                                 l3621 136C                                   l4181 0588  
                                 l4173 0548                                   l4165 0510  
                                 l4149 0498                                   l4157 04D0  
                                 l4093 0062                                   l4253 115E  
                                 l4261 1194                                   l4245 113A  
                                 l4237 1126                                   l4229 110C  
                                 l2823 2A24                                   l2751 2408  
                                 l2743 23E4                                   l2735 28EC  
                                 l2815 19DE                                   l2807 199A  
                                 l2911 18E4                                   l2903 18A0  
                                 l2831 178A                                   l3287 109A  
                                 l3279 1046                                   l3199 286C  
                                 l3391 0CCA                                   l3383 0C8C  
                                 l3375 0C52                                   l3367 0C16  
                                 l3551 0A20                                   l3543 09CA  
                                 l3535 0966                                   l3527 0934  
                                 l3519 08F0                                   l3471 072A  
                                 l3463 06F8                                   l3455 06CE  
                                 l3447 0698                                   l4087 171C  
                                 l4079 16E0                                   l3631 13AA  
                                 l3623 1382                                   l3615 1308  
                                 l4191 05D0                                   l4183 0598  
                                 l4175 0558                                   l4167 0520  
                                 l4159 04E0                                   l4095 0148  
                                 l4271 11EC                                   l4263 11A4  
                                 l4255 1172                                   l4247 1142  
                                 l4239 112A                                   l2817 2A4A  
                                 l2825 2A40                                   l2753 241E  
                                 l2745 23EC                                   l2761 14BA  
                                 l2809 19B0                                   l2913 18F0  
                                 l2905 18AC                                   l2841 17EA  
                                 l2833 1796                                   l2921 1ED8  
                                 l3289 10AE                                   l3297 291A  
                                 l3393 0CD4                                   l3385 0C9C  
                                 l3377 0C60                                   l3369 0C26  
                                 l3561 0A88                                   l3553 0A34  
                                 l3545 09D8                                   l3537 0994  
                                 l3529 0946                                   l3481 0774  
                                 l3473 0730                                   l3465 06FA  
                                 l3457 06DE                                   l3449 06A8  
                                 l3641 1432                                   l3633 13DC  
                                 l3617 1318                                   l4193 05E0  
                                 l4177 0568                                   l4185 05A0  
                                 l4169 0530                                   l4097 0234  
                                 l4281 1238                                   l4273 1200  
                                 l4265 11B4                                   l4257 117E  
                                 l4249 1148                                   l2819 2A4E  
                                 l2827 2A44                                   l2755 2426  
                                 l2747 23F4                                   l2739 23CA  
                                 l2771 1584                                   l2763 14D6  
                                 l2851 1A60                                   l2907 18C2  
                                 l2843 17F6                                   l2835 17B2  
                                 l2931 1F2A                                   l2923 1EEC  
                                 l2915 1EBA                                   l3299 2938  
                                 l3395 0CE2                                   l3387 0CAE  
                                 l3379 0C6C                                   l3563 0A8A  
                                 l3555 0A4E                                   l3547 0A02  
                                 l3491 07C4                                   l3483 0780  
                                 l3475 0750                                   l3467 070A  
                                 l3459 06E4                                   l3651 1488  
                                 l3643 1440                                   l3635 13DE  
                                 l3627 1396                                   l3619 1326  
                                 l4195 05F0                                   l4187 05B0  
                                 l4179 0578                                   l4099 0320  
                                 l4291 129E                                   l4283 125C  
                                 l4275 1208                                   l4267 11C6  
                                 l4259 1190                                   l3813 2A0E  
                                 l2757 2428                                   l2749 2402  
                                 l2773 15A0                                   l2765 152A  
                                 l2861 1AC0                                   l2853 1A7C  
                                 l2781 1BD0                                   l2909 18D8  
                                 l2845 1802                                   l2837 17BE  
                                 l2829 172E                                   l2933 1F2C  
                                 l2925 1F00                                   l2917 1EC2  
                                 l2941 249C                                   l3389 0CC4  
                                 l3397 0CF4                                   l3557 0A6A  
                                 l3565 0A90                                   l3549 0A06  
                                 l3493 07D0                                   l3485 078A  
                                 l3477 0760                                   l3469 071A  
                                 l3653 1498                                   l3645 145E  
                                 l3637 13EA                                   l3629 139E  
                                 l4197 0600                                   l4189 05C0  
                                 l3821 204C                                   l4293 12B2  
                                 l4277 121C                                   l4269 11E6  
                                 l4285 1266                                   l2759 242E  
                                 l2775 15E4                                   l2767 153E  
                                 l2863 1ACC                                   l2855 1A88  
                                 l2847 19F8                                   l2791 1C4E  
                                 l2783 1C08                                   l2871 1F86  
                                 l2839 17D4                                   l2935 1F40  
                                 l2927 1F02                                   l2919 1ED6  
                                 l2951 24E2                                   l2943 24A4  
                                 l3815 2A68                                   l3399 0D02  
                                 l3567 0A94                                   l3559 0A7A  
                                 l3495 07DC                                   l3487 07A0  
                                 l3655 14A6                                   l3647 1460  
                                 l3639 1426                                   l4199 0608  
                                 l3831 208A                                   l3823 2050  
                                 l4295 12BA                                   l4287 1278  
                                 l4279 1236                                   l2777 2880  
                                 l3841 29BC                                   l2769 1542  
                                 l2857 1A9E                                   l2849 1A54  
                                 l2793 1C7C                                   l2785 1C14  
                                 l2881 1FD8                                   l2873 1F9A  
                                 l2865 1F68                                   l2937 1F54  
                                 l2929 1F16                                   l2961 2514  
                                 l2953 24E4                                   l2945 24B8  
                                 l3681 280E                                   l3497 07EA  
                                 l3489 07AC                                   l3657 14A8  
                                 l3649 1464                                   l3833 208C  
                                 l3825 2074                                   l3817 2016  
                                 l4297 12CE                                   l4289 1298  
                                 l2779 2890                                   l3843 29CE  
                                 l2859 1AB4                                   l2795 1C88  
                                 l2787 1C2C                                   l2883 1FDA  
                                 l2875 1FAE                                   l2867 1F70  
                                 l2971 1E10                                   l2939 1F56  
                                 l2963 2528                                   l2955 24F6  
                                 l2947 24BA                                   l3683 2818  
                                 l3675 27F0                                   l3499 07F6  
                                 l3835 2096                                   l3827 207E  
                                 l3819 2026                                   l4299 12E8  
                                 l3845 29D2                                   l3861 2944  
                                 l3685 243E                                   l2797 1C94  
                                 l2789 1C38                                   l2885 1FEE  
                                 l2877 1FB0                                   l2869 1F84  
                                 l2981 1E50                                   l2973 1E24  
                                 l2965 253C                                   l2957 24FE  
                                 l2949 24CE                                   l3677 27F4  
                                 l3837 2098                                   l3829 2080  
                                 l2895 295E                                   l3847 29D4  
                                 l3863 294E                                   l2799 190A  
                                 l2887 2002                                   l2879 1FC4  
                                 l2983 1E60                                   l2975 1E26  
                                 l2967 253E                                   l2959 2512  
                                 l3871 1AFE                                   l3679 27FE  
                                 l3839 20A2                                   l3849 29D6  
                                 l3865 2958                                   l2889 2004  
                                 l2985 1E78                                   l2977 1E3A  
                                 l2969 1E08                                   l2897 181C  
                                 l3881 1B58                                   l3873 1B06  
                                 l3867 2824                                   l3859 293C  
                                 l2987 1E8C                                   l2979 1E4E  
                                 l2899 1878                                   l3883 1B6C  
                                 l3875 1B26                                   l3891 1BBC  
                                 l3885 1B72                                   l3877 1B3A  
                                 l3869 1AE6                                   l3887 1B84  
                                 l3879 1B3E                                   l3889 1B9A  
                                 u2000 23E4                                   u2001 23E0  
                                 u2010 2402                                   u2011 23FE  
                                 u2020 241E                                   u2100 198E  
                                 u2021 241A                                   u2101 198A  
                                 u2030 14D6                                   u2110 178A  
                                 u2031 14D2                                   u2111 1786  
                                 u2040 15A0                                   u2120 17B2  
                                 u3000 0954                                   u2041 159C  
                                 u2121 17AE                                   u3001 0950  
                                 u2050 2890                                   u2130 1A54  
                                 u2210 1878                                   u3010 0966  
                                 u2051 288C                                   u2131 1A50  
                                 u2211 1874                                   u3011 0962  
                                 u2060 28A6                                   u2140 1A7C  
                                 u2220 18A0                                   u2300 254E  
                                 u3020 0994                                   u2061 28A2  
                                 u2141 1A78                                   u2221 189C  
                                 u2301 254A                                   u3021 0990  
                                 u2070 1C08                                   u2150 1F96  
                                 u2310 1E36                                   u2230 1EE8  
                                 u3030 09AA                                   u2071 1C04  
                                 u2151 1F92                                   u2311 1E32  
                                 u2231 1EE4                                   u3031 09A6  
                                 u2080 1C2C                                   u2160 1FC0  
                                 u2320 1E60                                   u2240 1F12  
                                 u2400 20FE                                   u3040 09BE  
                                 u3200 1422                                   u4000 0330  
                         _BAUD4CONbits 000EE9                                   u2081 1C28  
                                 u2161 1FBC                                   u2321 1E5C  
                                 u2241 1F0E                                   u2401 20FA  
                                 u3041 09BA                                   u3201 141E  
                                 u4001 032C                                   u2330 27A0  
                                 u2090 1966                                   u2170 1FEA  
                                 u2250 1F3C                                   u2410 21E0  
                                 u3050 09D8                                   u3210 1440  
                                 u4010 0340                                   u2331 2798  
                                 u2091 1962                                   u2171 1FE6  
                                 u2251 1F38                                   u2411 21DC  
                                 u3051 09D4                                   u3211 143C  
                                 u4011 033C                                   u2180 2014  
                                 u2500 1DDA                                   u2260 1F66  
                                 u2420 220A                                   u3060 0A20  
                                 u3220 1450                                   u4100 03D8  
                                 u4020 0350                                   u2181 2010  
                                 u2501 1DD6                                   u2261 1F62  
                                 u2421 2206                                   u3061 0A1C  
                                 u3221 144C                                   u4101 03D4  
                                 u4021 034C                                   u2270 24CA  
                                 u2430 2266                                   u2350 215A  
                                 u2510 0E52                                   u3070 0A4E  
                                 u3230 145E                                   u4110 03E8  
                                 u4030 0360                                   u2271 24C6  
                                 u2431 2262                                   u2351 2156  
                                 u2511 0E4E                                   u3071 0A4A  
                                 u3231 145A                                   u4111 03E4  
                                 u4031 035C                                   u2280 24F4  
                                 u2440 2290                                   u2360 2184  
                                 u2600 0FB4                                   u2520 0E74  
                                 u3080 0A88                                   u3240 1498  
                                 u3160 1318                                   u4200 0488  
                                 u4120 03F8                                   u4040 0370  
                                 u2281 24F0                                   u2441 228C  
                                 u2361 2180                                   u2601 0FB0  
                                 u2521 0E70                                   u3081 0A84  
                                 u3241 1494                                   u3161 1314  
                                 u4201 0484                                   u4121 03F4  
                                 u4041 036C                                   u2370 2372  
                                 u2290 2524                                   u2450 22EC  
                                 u2610 0FE2                                   u2530 0EA2  
                                 u3250 14A6                                   u3170 1326  
                                 u4210 0498                                   u4130 0410  
                                 u4050 0380                                   _T2PR 000FBC  
                                 u2371 236E                                   u2291 2520  
                                 u2451 22E8                                   u2611 0FDE  
                                 u2531 0E9E                                   u3251 14A2  
                                 u3171 1322                                   u4211 0494  
                                 u4131 040C                                   u4051 037C  
                                 u2348 27A2                                   u2380 239C  
                                 u2460 2316                                   u2620 1004  
                                 u2540 0EC4                                   u2700 0B26  
                                 u3180 1382                                   u4300 0530  
                                 u4220 04A8                                   u4140 0420  
                                 u4060 0390                                   u2381 2398  
                                 u2461 2312                                   u2621 1000  
                                 u2541 0EC0                                   u2701 0B22  
                                 u3181 137E                                   u4301 052C  
                                 u4221 04A4                                   u4141 041C  
                                 u4061 038C                                   u2470 1CFE  
                                 u2390 20D4                                   u2630 1032  
                                 u2550 0EF2                                   u2710 0B38  
                                 u3190 13D8                                   u4310 0548  
                                 u4230 04B8                                   u4150 0430  
                                 u4070 03A8                                   u2471 1CFA  
                                 u2391 20D0                                   u2631 102E  
                                 u2551 0EEE                                   u2711 0B34  
                                 u3191 13D4                                   u4311 0544  
                                 u4231 04B4                                   u4151 042C  
                                 u4071 03A4                                   u2480 1D28  
                                 u2640 1054                                   u2560 0F14  
                                 u2800 0CE2                                   u2720 0B48  
                                 u4400 05E0                                   u4320 0558  
                                 u4240 04C8                                   u4160 0440  
                                 u4080 03B8                                   u2481 1D24  
                                 u2641 1050                                   u2561 0F10  
                                 u2801 0CDE                                   u2721 0B44  
                                 u4401 05DC                                   u4321 0554  
                                 u4241 04C4                                   u4161 043C  
                                 u4081 03B4                                   u2490 1DB0  
                                 u2650 1082                                   u2570 0F42  
                                 u2810 0D02                                   u2730 0B88  
                                 u4410 05F0                                   u4330 0568  
                                 u4250 04E0                                   u4170 0450  
                                 u4090 03C8                                   u2491 1DAC  
                                 u2651 107E                                   u2571 0F3E  
                                 u2811 0CFE                                   u2731 0B84  
                                 u4411 05EC                                   u4331 0564  
                                 u4251 04DC                                   u4171 044C  
                                 u4091 03C4                                   u2660 10AE  
                                 u2580 0F64                                   u2820 0D14  
                                 u2740 0BC8                                   u2900 0696  
                                 u4420 0600                                   u4340 0578  
                                 u4260 04F0                                   u4180 0460  
                                 u4500 11B4                                   u2661 10AA  
                                 u2581 0F60                                   u2821 0D10  
                                 u2741 0BC4                                   u2901 0692  
                                 u4421 05FC                                   u4341 0574  
                                 u4261 04EC                                   u4181 045C  
                                 u4501 11B0                                   u2590 0F92  
                                 u2830 0D42                                   u2750 0C3E  
                                 u2670 0AC0                                   u2910 06A8  
                                 u4430 0618                                   u4350 0588  
                                 u4270 0500                                   u4190 0478  
                                 u4510 11C6                                   u2591 0F8E  
                                 u2831 0D3E                                   u2751 0C3A  
                                 u2671 0ABC                                   u2911 06A4  
                                 u4431 0614                                   u4351 0584  
                                 u4271 04FC                                   u4191 0474  
                                 u4511 11C2                                   u2840 0D58  
                                 u2760 0C60                                   u2680 0AD2  
                                 u2920 06B8                                   u4440 0628  
                                 u4360 0598                                   u4280 0510  
                                 u4520 121C                                   u2841 0D54  
                                 u2761 0C5C                                   u2681 0ACE  
                                 u2921 06B4                                   u4441 0624  
                                 u4361 0594                                   u4281 050C  
                                 u4521 1218                                   u2850 0D6C  
                                 u2770 0C8A                                   u2690 0AE2  
                                 u2930 06F8                                   u4450 0638  
                                 u4370 05B0                                   u4290 0520  
                                 u4530 1278                                   u2851 0D68  
                                 u2771 0C86                                   u2691 0ADE  
                                 u2931 06F4                                   u4451 0634  
                                 u4371 05AC                                   u4291 051C  
                                 u4531 1274                                   u2860 0D86  
                                 u2780 0CAE                                   u2940 070A  
                                 u4460 0648                                   u4380 05C0  
                                 u4540 12CE                                   u2861 0D82  
                                 u2781 0CAA                                   u2941 0706  
                                 u4461 0644                                   u4381 05BC  
                                 u4541 12CA                                   u2870 0DCE  
                                 u2790 0CC4                                   u2950 071A  
                                 u4470 0658                                   u4390 05D0  
                                 u4607 2214                                   u2871 0DCA  
                                 u2791 0CC0                                   u2951 0716  
                                 u4471 0654                                   u4391 05CC  
                                 u3760 1B54                                   u2880 0DFE  
                                 u2960 0750                                   u4480 0668  
                                 u4617 229A                                   u3761 1B50  
                                 u2881 0DFA                                   u2961 074C  
                                 u4481 0664                                   u3770 1B84  
                                 u2890 0E2C                                   u2970 0760  
                                 u3930 163C                                   u4490 11A4  
                                 u4707 1E6A                                   u4627 2320  
                                 u3771 1B80                                   u2891 0E28  
                                 u2971 075C                                   u3931 1638  
                                 u4491 11A0                                   u3780 1BCE  
                                 u2980 08DA                                   u3940 1672  
                                 u4717 1E96                                   u4637 23A6  
                                 u3781 1BCA                                   u4557 1228  
                                 u2990 0934                                   u3950 16A0  
                                 u4727 19E8                                   u4647 1CC6  
                                 u2991 0930                                   u3951 169C  
                                 u4567 12DA                                   i2l24 29BA  
                                 u3960 16B4                                   u4737 1C9A  
                                 u4657 1D32                                   u4577 2804  
                                 u2985 08D0                                   u3961 16B0  
                                 u3945 1666                                   u3970 16DC  
                                 u4747 1AD6                                   u4667 180C  
                                 u4587 2108                                   u3971 16D8  
                                 u3980 16FC                                   u4757 26A0  
                                 u4677 1D78                                   u4597 218E  
                                 u3981 16F8                                   u3990 170C  
                                 u4687 1DE4                                   u3991 1708  
                                 u4697 18FA                                   i2l92 28CE  
                                 i2l95 2A66                                   i2l89 28A8  
    Return_Anti_Moves@anti_moves_array 000B                                   _main 10C4  
                  __end_of_AppendMoves 291A                     _YellowInstructions 20A6  
                                 fsr2h 000FDA                                   indf2 000FDF  
                                 fsr2l 000FD9                                   btemp 0057  
                                 _stop 1BD0         ??i2_init_colorclick_interrupts 0005  
                    main@initial_color 00B9                                   prodh 000FF4  
                                 prodl 000FF3                                   start 0058  
                 ?i2_color_writetoaddr 0003                        ___fldiv@new_exp 0028  
               __end_of_color_read_Red 25A0                        __end_of_HighISR 299C  
                         ___param_bank 000000                            _turnLeft135 24F6  
                  ?_YellowInstructions 0027                            _turnRight90 1EBA  
                           _AntiYellow 1CA4                       __end_of_LED_init 2A1E  
                        ___fltol@sign1 004D                             _AppendTime 2824  
                                ?_main 0001                        __end_of___fldiv 0E40  
                      __end_of___flmul 0AA6                        __end_of___fltol 172E  
                                ?_stop 001C                        __end_of___lwdiv 243E  
                                i2l101 2A5C                                  i2l104 2A34  
                                i1l336 0048                                  i2l325 272E  
                                i2l328 2A0C                                  i2l344 2998  
                                _TMR0H 000FD4                                  _TMR0L 000FD3  
           __end_of_I2C_2_Master_Start 2A54                   ??_YellowInstructions 002B  
           __end_of_I2C_2_Master_Write 2A2A                       _PinkInstructions 21B2  
                   _int_threshold_high 00D3                                  main@b 00B6  
             __end_of_BlueInstructions 1EBA                                  tablat 000FF5  
                                plusw2 000FDB                                  ttemp5 0058  
                                ttemp6 005B                                  ttemp7 005F  
                                status 000FD8                                  wtemp8 0058  
                  detect_color@tempval 00A2                  ??i2_color_writetoaddr 0004  
              __end_of_color_read_Blue 2690                  _I2C_2_Master_RepStart 2A36  
                 fullSpeedBackwards@mL 001C                   fullSpeedBackwards@mR 001E  
                     __end_of_AntiPink 1E08                        ?_color_read_Red 000D  
                      __initialization 2730                           __end_of_main 1306  
                 __end_of_detect_color 067C                           __end_of_stop 1CA4  
                _LightBlueInstructions 22BE                      ??_RedInstructions 002B  
  __end_of_interrupts_clear_colorclick 29F4         ?i2_interrupts_clear_colorclick 0001  
          _interrupts_clear_colorclick 29DA                                 ??_main 00B4  
                               ??_stop 0020                          __activetblptr 000000  
                         _turnRight135 249C                      _Return_Anti_Moves 291A  
                          _AppendMoves 28F6                           ?_setMotorPWM 0016  
                               _CCPR1H 000FAA                                 _CCPR2H 000FA6  
                               _CCPR3H 000F25                                 _CCPR4H 000F21  
                   ?_Return_Anti_Moves 0009                                 _RC0PPS 000E62  
                               _RC4REG 000EE3                                 _RE2PPS 000E74  
                               _RD5PPS 000E6F                                 _RC7PPS 000E69  
                               _RE4PPS 000E76                                 _RD6PPS 000E70  
                               i1l3911 0036                                 i1l3913 0044  
                               i1l3909 0026                                 i2l3187 299E  
                               i2l3661 26E0                                 i2l3671 2718  
                               i2l3663 26EA                                 i2l3673 2722  
                               i2l3665 26FA                                 i2l3921 2994  
                               i2l2891 28A8                                 i2l3667 2704  
                               i2l3915 297C                                 _RG6PPS 000E88  
                               i2l2893 28B8                                 i2l3669 270E  
                               i2l3917 298C                                 i2l2991 2A62  
                               i2l3919 2990                                 i2l2993 2A54  
                               i2l2995 2A58                                 i2l2989 2A5E  
                               i2l2997 2A2C                                 i2l3893 29F4  
                               i2l2999 2A30                              ??_HighISR 0006  
             __end_of_color_click_init 2824                                 _RX4PPS 000E15  
                               _TX4REG 000EE4                       __end_of___xxtofl 14BA  
                  ??_Return_Anti_Moves 000D                                 _LowISR 0018  
                        ??_Timer0_init 0009                           _CCPTMRS0bits 000FAD  
          AppendMoves@anti_moves_array 000B                  Return_Time@time_array 000B  
                Return_Time@time_index 0009                                 ___wmul 28D0  
                            ??___fldiv 001F                              ??___flmul 0038  
                            ??___fltol 009E                              ??___lwdiv 0013  
                               clear_0 274E                                 clear_1 275A  
                               clear_2 2766                            ?_AntiYellow 002E  
                               isa$std 000001                            ?_AppendTime 0009  
                        ??_Return_Time 000D              __end_of_Return_Anti_Moves 293C  
                           _WhiteLight 2A68                                 tblptrh 000FF7  
                               tblptrl 000FF6                                 tblptru 000FF8  
                               stop@mL 001C                                 stop@mR 001E  
                    ??_initDCmotorsPWM 000B             i2color_writetoaddr@address 0004  
                     __end_of_turnLeft 19F8                           ___xxtofl@arg 0013  
                         ___xxtofl@exp 0012                           ___xxtofl@val 0009  
                        ??_Update_RGBC 0016                             __accesstop 0060  
              __end_of__initialization 276C               __end_of_color_read_Clear 2640  
             __end_of_color_read_Green 25F0                 ?_I2C_2_Master_RepStart 0001  
                        ___rparam_used 000001                              ?_LED_init 0001  
                           ___fltol@f1 0049                       ?_color_read_Blue 000D  
                    _GreenInstructions 2344                        _Interrupts_init 29BC  
                       __pcstackCOMRAM 0001                 ?_LightBlueInstructions 0027  
                         __pidataBANK0 2A70                     ?_GreenInstructions 0027  
                       AppendTime@temp 0009                      detect_color@color 00B0  
                  __end_of_Timer0_init 295C                            MoveBuggy@mL 0037  
                          MoveBuggy@mR 0039                    OrangeInstructions@a 002D  
                  ??_GreenInstructions 002B                MoveBuggy@color_detected 0035  
                            ?_AntiPink 002E           ??_init_colorclick_interrupts 000D  
                  __end_of_Return_Time 27F0                      __end_of_MoveBuggy 10C4  
                           __pbssBANK0 0060                             __pbssBANK1 0100  
            __end_of_GreenInstructions 23CA                             ??_LED_init 0009  
                              ?_LowISR 0001                      _color_writetoaddr 295C  
                         _T2CLKCONbits 000FBF                           ?_turnLeft135 0022  
                  __end_of_Update_RGBC 249C                     ?_color_writetoaddr 000B  
                              ?___wmul 0009               __end_of_PinkInstructions 2238  
                         ?_turnRight90 0022                    ??_color_writetoaddr 000C  
                            ?___xxtofl 0009                            ?_WhiteLight 0001  
                              _SP4BRGH 000EE6                                _SP4BRGL 000EE5  
                           ??_AntiPink 0032                                _SSP2ADD 000ED6  
                              _SSP2BUF 000ED5                             _color_flag 0055  
                         _detect_color 005C                __end_of_Interrupts_init 29DA  
                    ?_BlueInstructions 0027                 color_writetoaddr@value 000B  
                     ??_color_read_Red 000F                                _HighISR 0008  
            __end_of_color_writetoaddr 297C                     WhiteInstructions@a 0044  
                   WhiteInstructions@c 0041                     ??_BlueInstructions 002B  
                      _RedInstructions 212C                     _I2C_2_Master_Start 2A4A  
                  i2_I2C_2_Master_Idle 28A8                     _I2C_2_Master_Write 2A1E  
                              __Hparam 0000                    i2_I2C_2_Master_Stop 2A54  
                              __Lparam 0000                      color_read_Red@tmp 0012  
                          _Timer0_init 293C                    GreenInstructions@mL 0027  
                  GreenInstructions@mR 0029             __end_of_fullSpeedBackwards 1AE6  
                              ___fldiv 0AA6                                ___flmul 067C  
                              ___fltol 1626                    ?_I2C_2_Master_Start 0001  
                         turnLeft135@a 0026                                ___lwdiv 23CA  
                  ?_I2C_2_Master_Write 0001                           turnLeft90@mL 0022  
                         turnLeft90@mR 0024                                __pcinit 2730  
                              __ramtop 0E00                              ?_turnLeft 001C  
                              __ptext0 10C4                                __ptext1 2016  
                              __ptext2 005C                                __ptext3 1306  
                              __ptext4 1626                                __ptext5 067C  
                              __ptext6 0AA6                                __ptext7 27F0  
                              __ptext8 2856                                __ptext9 2A68  
                 ?i2_I2C_2_Master_Idle 0001   __end_ofi2_init_colorclick_interrupts 2730  
         i2_init_colorclick_interrupts 26E0                              _T2CONbits 000FBD  
                          _Return_Time 27B8                             ??___xxtofl 000D  
                 ?i2_I2C_2_Master_Stop 0001                              _T2HLTbits 000FBE  
                        _RxBufWriteCnt 0054                           ?_AppendMoves 0009  
                              _tmr_ovf 0074                   ??_I2C_2_Master_Start 000A  
                 ??_I2C_2_Master_Write 000A                         __pintcode_body 297C  
                 end_of_initialization 276C            __end_ofi2_color_writetoaddr 29BC  
         Return_Anti_Moves@moves_index 0009                      RedInstructions@mL 0027  
                   main@color_detected 00B8                      RedInstructions@mR 0029  
                              int_func 297C                            _Update_RGBC 243E  
                    ?_color_click_init 0001                           turnRight90@a 0026  
           __end_of_OrangeInstructions 22BE                     ??_color_click_init 000D  
                            AntiPink@a 0034                                postdec2 000FDD  
                              postinc0 000FEE                                postinc2 000FDE  
                           _time_array 013C                             _time_index 009D  
                         ??_AntiYellow 0032                        _initDCmotorsPWM 2016  
                           ??_turnLeft 0020                           ??_AppendTime 000F  
                   setMotorPWM@negDuty 001B                  ??i2_I2C_2_Master_Idle 0001  
                    __end_of_turnRight 181C                  ??i2_I2C_2_Master_Stop 0002  
                        ___xxtofl@sign 0011                    YellowInstructions@a 002D  
                            _TRISAbits 000F81                     setMotorPWM@posDuty 001A  
                            _TRISBbits 000F82                              _TRISCbits 000F83  
                            _TRISDbits 000F84     __end_of_init_colorclick_interrupts 26E0  
        ?i2_init_colorclick_interrupts 0001             _init_colorclick_interrupts 2690  
                            _TRISEbits 000F85                              _TRISFbits 000F86  
                            _TRISGbits 000F87                              _TRISHbits 000F88  
                          ___fldiv@grs 002A                            ___fldiv@rem 0023  
                   PinkInstructions@mL 0027                     PinkInstructions@mR 0029  
                     fullSpeedAhead@mL 001C                       fullSpeedAhead@mR 001E  
              __end_of_RedInstructions 21B2               color_writetoaddr@address 000C  
              ??_I2C_2_Master_RepStart 000A                       ?_Interrupts_init 0001  
                          ___flmul@grs 003D                            _CCP1CONbits 000FAB  
                    ?_color_read_Clear 000D                           _EUSART4RXbuf 0060  
                         _EUSART4TXbuf 0100                            _CCP2CONbits 000FA7  
                    ?_color_read_Green 000D                     __end_of_AntiYellow 1D56  
                          _CCP3CONbits 000F26                            _CCP4CONbits 000F22  
                   __end_of_AppendTime 2856                ??_LightBlueInstructions 002B  
                           main@motorL 00C1                             main@motorR 00CA  
                   ??_color_read_Clear 000F                     ??_color_read_Green 000F  
                           _turnLeft90 1F68                         __end_of_LowISR 0058  
               AppendMoves@moves_index 0009                         _fullSpeedAhead 181C  
                       __end_of___wmul 28F6                        AppendMoves@temp 000E  
                   detect_color@dist_B 00B3                     detect_color@dist_G 00B2  
                   detect_color@dist_R 00B1                      _int_threshold_low 004F  
                  color_read_Clear@tmp 0012                    start_initialization 2730  
                        _TxBufWriteCnt 0052                   OrangeInstructions@mL 0027  
                 OrangeInstructions@mR 0029                  Return_Anti_Moves@temp 000E  
                            _MoveBuggy 0E40                    color_read_Green@tmp 0012  
                             ??_LowISR 0006                __end_of_initDCmotorsPWM 20A6  
               __end_of_fullSpeedAhead 190A                               ??___wmul 000D  
                          __pdataBANK0 00D3          i2I2C_2_Master_Write@data_byte 0002  
                    ?_PinkInstructions 0027                     Update_RGBC@tempval 0014  
                   ??_PinkInstructions 002B           __end_ofi2_I2C_2_Master_Start 2A68  
         __end_ofi2_I2C_2_Master_Write 2A36                              ___fldiv@a 001B  
                            ___fldiv@b 0017                              ___flmul@a 0034  
                            ___flmul@b 0030                            __pbssCOMRAM 004F  
                         ??_WhiteLight 0009                          __pcstackBANK0 009E  
                 AppendTime@time_array 000D                   AppendTime@time_index 000B  
                     ?_RedInstructions 0027                               ?_HighISR 0001  
                           ?_MoveBuggy 0035                       ___lwdiv@dividend 000F  
                         ?_Timer0_init 0001                            ?_turnLeft90 0022  
                      ?_fullSpeedAhead 001C                     BlueInstructions@mL 0027  
                   BlueInstructions@mR 0029                              __pintcode 0008  
                   __end_of_WhiteLight 2A70                               ?___fldiv 0017  
                             ?___flmul 0030                               ?___fltol 0049  
                             ?___lwdiv 000F                            __pintcodelo 0018  
         ?_interrupts_clear_colorclick 0001                   I2C_2_Master_Read@ack 000B  
                    _WhiteInstructions 1AE6                   I2C_2_Master_Read@tmp 000C  
                        ?_turnRight135 0022                           ?_Return_Time 0009  
                    _I2C_2_Master_Idle 2880                     _fullSpeedBackwards 19F8  
                    _I2C_2_Master_Init 2856                      _I2C_2_Master_Read 2776  
                   ?_WhiteInstructions 003B                      _I2C_2_Master_Stop 2A40  
                         _RxBufReadCnt 0053                     GreenInstructions@a 002D  
                   ?_I2C_2_Master_Idle 0001                     ?_I2C_2_Master_Init 0001  
                   ?_I2C_2_Master_Read 0001                          ??_setMotorPWM 0018  
                   ?_I2C_2_Master_Stop 0001                       ___lwdiv@quotient 0013  
                          turnLeft90@a 0026               initDCmotorsPWM@PWMperiod 0009  
              LightBlueInstructions@mL 0027                LightBlueInstructions@mR 0029  
                  ?_fullSpeedBackwards 001C                    ??_WhiteInstructions 003F  
                  ??_I2C_2_Master_Idle 0009                    ??_I2C_2_Master_Init 0009  
                         ?_Update_RGBC 0014                    ??_I2C_2_Master_Read 000A  
                       ___wmul@product 000D                               _LATAbits 000F79  
                  ??_I2C_2_Master_Stop 000A                               _LATCbits 000F7B  
                             _LATDbits 000F7C                               _LATEbits 000F7D  
                             _LATFbits 000F7E                        Return_Time@temp 0010  
                             _LATGbits 000F7F                               _LATHbits 000F80  
                             _IPR0bits 000E1F                               _PIE0bits 000E29  
                             _LED_init 2A0E                       RedInstructions@a 002D  
                             _PIE4bits 000E2D                               i2u220_40 28CE  
                             i2u220_41 28CA                               i1u381_20 0036  
                             i1u381_21 0032                            turnRight@mL 001C  
                          turnRight@mR 001E                               i2u219_40 28B8  
                             i2u219_41 28B4                               _PIR0bits 000E33  
                             i2u382_40 298C                               i2u382_41 2988  
                             _PIR4bits 000E37                               i2u476_47 26F0  
                     ?_initDCmotorsPWM 0009                               _SSP2CON2 000EDA  
                             _SSP2STAT 000ED8                   ??_fullSpeedBackwards 0020  
            __end_of_WhiteInstructions 1BD0                     _OrangeInstructions 2238  
                    PinkInstructions@a 002D              __end_of_I2C_2_Master_Idle 28A8  
            __end_of_I2C_2_Master_Init 2880              __end_of_I2C_2_Master_Read 27B8  
                    ___wmul@multiplier 0009                         ??_turnRight135 0026  
            __end_of_I2C_2_Master_Stop 2A4A                           setMotorPWM@m 0016  
          I2C_2_Master_Write@data_byte 000A          ??_interrupts_clear_colorclick 000E  
           __end_of_YellowInstructions 212C                      ??_color_read_Blue 000F  
                  ?_OrangeInstructions 0027                           _TxBufReadCnt 0051  
          ?_init_colorclick_interrupts 0001                               _AntiPink 1D56  
             i2color_writetoaddr@value 0003                              _turnRight 172E  
                  WhiteInstructions@mL 003B                    WhiteInstructions@mR 003D  
        __end_of_I2C_2_Master_RepStart 2A40                     color_read_Blue@tmp 0012  
                  __end_of_setMotorPWM 1626                            ??_MoveBuggy 003B  
                 i2_I2C_2_Master_Start 2A5E                   i2_I2C_2_Master_Write 2A2A  
                         AntiYellow@mL 002E                           AntiYellow@mR 0030  
                             __Hrparam 0000                   ??_OrangeInstructions 002B  
                             __Lrparam 0000          __end_of_LightBlueInstructions 2344  
          __end_ofi2_I2C_2_Master_Idle 28D0            __end_ofi2_I2C_2_Master_Stop 2A5E  
                       turnRight135@mL 0022                         turnRight135@mR 0024  
                        turnLeft135@mL 0022                          turnLeft135@mR 0024  
                           _ANSELBbits 000E9A                             _ANSELDbits 000EA7  
                             ___xxtofl 1306                             _T0CON0bits 000FD5  
                           _T0CON1bits 000FD6                        ___lwdiv@divisor 0011  
                    BlueInstructions@a 002D                        ___lwdiv@counter 0015  
                           ?_turnRight 001C                               __ptext10 1AE6  
                             __ptext11 27B8                               __ptext20 24F6  
                             __ptext12 291A                               __ptext21 2344  
                             __ptext13 0E40                               __ptext30 190A  
                             __ptext22 28F6                               __ptext14 20A6  
                             __ptext31 1BD0                               __ptext23 1CA4  
                             __ptext15 212C                               __ptext40 2640  
                             __ptext32 19F8                               __ptext24 1EBA  
                             __ptext16 21B2                               __ptext41 2A36  
                             __ptext33 14BA                               __ptext25 172E  
                             __ptext17 2238                               __ptext50 2A40  
                             __ptext42 2776                               __ptext34 28D0  
                             __ptext26 1D56                               __ptext18 249C  
                             __ptext51 2A4A                               __ptext43 293C  
                             __ptext35 23CA                               __ptext27 181C  
                             __ptext19 22BE                               __ptext60 2A54  
                             __ptext52 2880                               __ptext44 2A0E  
                             __ptext36 243E                               __ptext28 1E08  
                             __ptext61 2A5E                               __ptext53 2824  
                             __ptext45 29BC                               __ptext37 2550  
                             __ptext29 1F68                               __ptext62 28A8  
                             __ptext46 29DA                               __ptext38 25A0  
                             __ptext47 2690                               __ptext39 25F0  
                             __ptext56 29F4                               __ptext48 295C  
                             __ptext57 26E0                               __ptext49 2A1E  
                             __ptext58 299C                               __ptext59 2A2A  
                         _SSP2CON1bits 000ED9                           _SSP2CON2bits 000EDA  
      ??i2_interrupts_clear_colorclick 0006                 LightBlueInstructions@a 002D  
                           turnLeft@mL 001C                             turnLeft@mR 001E  
                ?i2_I2C_2_Master_Start 0001                  ?i2_I2C_2_Master_Write 0001  
                        ??_turnLeft135 0026                               isa$xinst 000000  
                           _RC4STAbits 000EE7                               int$flags 0057  
                        ??_turnRight90 0026                       _BlueInstructions 1E08  
                             _turnLeft 190A                             _INTCONbits 000FF2  
                          AntiYellow@a 0034                            _setMotorPWM 14BA  
                        ?_detect_color 00A2                          turnRight135@a 0026  
                             intlevel1 0000                               intlevel2 0000  
                        turnRight90@mL 0022                          turnRight90@mR 0024  
                     ??_fullSpeedAhead 0020                   __end_of_turnRight135 24F6  
                         ??_turnLeft90 0026                             AntiPink@mL 002E  
                           AntiPink@mR 0030                            _moves_index 0056  
                     _color_click_init 27F0                    __end_of_turnLeft135 2550  
                           _SSP2DATPPS 000E1D                             _SSP2CLKPPS 000E1C  
                  __end_of_turnRight90 1F68                          ??_AppendMoves 000D  
                       ??_detect_color 00A4                            ??_turnRight 0020  
                   __end_of_turnLeft90 2016                             _TX4STAbits 000EE8  
               ??i2_I2C_2_Master_Start 0002                 ??i2_I2C_2_Master_Write 0002  
                 YellowInstructions@mL 0027                   YellowInstructions@mR 0029  
__end_ofi2_interrupts_clear_colorclick 2A0E          i2_interrupts_clear_colorclick 29F4  
