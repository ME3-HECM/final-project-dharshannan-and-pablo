

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Mar 13 18:21:50 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    68                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    69                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    78                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    79                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    80                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    81                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    82   000000                     
    83                           ; Generated 06/04/2022 GMT
    84                           ; 
    85                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    86                           ; All rights reserved.
    87                           ; 
    88                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    89                           ; 
    90                           ; Redistribution and use in source and binary forms, with or without modification, are
    91                           ; permitted provided that the following conditions are met:
    92                           ; 
    93                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    94                           ;        conditions and the following disclaimer.
    95                           ; 
    96                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    97                           ;        of conditions and the following disclaimer in the documentation and/or other
    98                           ;        materials provided with the distribution. Publication is not required when
    99                           ;        this file is used in an embedded application.
   100                           ; 
   101                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   102                           ;        software without specific prior written permission.
   103                           ; 
   104                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   105                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   106                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   107                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   108                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   109                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   110                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   111                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   112                           ; 
   113                           ; 
   114                           ; Code-generator required, PIC18F67K40 Definitions
   115                           ; 
   116                           ; SFR Addresses
   117   000000                     
   118                           	psect	idataBANK0
   119   002ABE                     __pidataBANK0:
   120                           	callstack 0
   121                           
   122                           ;initializer for _int_threshold_high
   123   002ABE  0B54               	dw	2900
   124   000000                     _T0CON0bits	set	4053
   125   000000                     _T0CON1bits	set	4054
   126   000000                     _TX4REG	set	3812
   127   000000                     _RC4STAbits	set	3815
   128   000000                     _SP4BRGH	set	3814
   129   000000                     _TRISBbits	set	3970
   130   000000                     _TRISCbits	set	3971
   131   000000                     _TRISEbits	set	3973
   132   000000                     _LATEbits	set	3965
   133   000000                     _LATFbits	set	3966
   134   000000                     _LATGbits	set	3967
   135   000000                     _TRISFbits	set	3974
   136   000000                     _TRISGbits	set	3975
   137   000000                     _SSP2CON2bits	set	3802
   138   000000                     _RX4PPS	set	3605
   139   000000                     _SSP2CLKPPS	set	3612
   140   000000                     _SSP2DATPPS	set	3613
   141   000000                     _ANSELDbits	set	3751
   142   000000                     _SSP2ADD	set	3798
   143   000000                     _SSP2CON1bits	set	3801
   144   000000                     _RC4REG	set	3811
   145   000000                     _SP4BRGL	set	3813
   146   000000                     _TX4STAbits	set	3816
   147   000000                     _BAUD4CONbits	set	3817
   148   000000                     _LATAbits	set	3961
   149   000000                     _LATDbits	set	3964
   150   000000                     _LATHbits	set	3968
   151   000000                     _TRISAbits	set	3969
   152   000000                     _SSP2CON2	set	3802
   153   000000                     _TRISDbits	set	3972
   154   000000                     _CCPR4H	set	3873
   155   000000                     _CCPR3H	set	3877
   156   000000                     _SSP2STAT	set	3800
   157   000000                     _SSP2BUF	set	3797
   158   000000                     _IPR0bits	set	3615
   159   000000                     _PIE0bits	set	3625
   160   000000                     _RC7PPS	set	3689
   161   000000                     _RD5PPS	set	3695
   162   000000                     _RE2PPS	set	3700
   163   000000                     _RD6PPS	set	3696
   164   000000                     _T2PR	set	4028
   165   000000                     _T2CONbits	set	4029
   166   000000                     _TRISHbits	set	3976
   167   000000                     _CCPR2H	set	4006
   168   000000                     _CCPR1H	set	4010
   169   000000                     _LATCbits	set	3963
   170   000000                     _RE4PPS	set	3702
   171   000000                     _RG6PPS	set	3720
   172   000000                     _ANSELBbits	set	3738
   173   000000                     _TMR0L	set	4051
   174   000000                     _TMR0H	set	4052
   175   000000                     _INTCONbits	set	4082
   176   000000                     _T2CLKCONbits	set	4031
   177   000000                     _T2HLTbits	set	4030
   178   000000                     _CCP1CONbits	set	4011
   179   000000                     _CCPTMRS0bits	set	4013
   180   000000                     _CCP2CONbits	set	4007
   181   000000                     _CCP3CONbits	set	3878
   182   000000                     _CCP4CONbits	set	3874
   183   000000                     _PIE4bits	set	3629
   184   000000                     _PIR0bits	set	3635
   185   000000                     _PIR4bits	set	3639
   186   000000                     _RC0PPS	set	3682
   187                           
   188                           ; #config settings
   189                           
   190                           	psect	cinit
   191   00277E                     __pcinit:
   192                           	callstack 0
   193   00277E                     start_initialization:
   194                           	callstack 0
   195   00277E                     __initialization:
   196                           	callstack 0
   197                           
   198                           ; Initialize objects allocated to BANK0 (2 bytes)
   199                           ; load TBLPTR registers with __pidataBANK0
   200   00277E  0EBE               	movlw	low __pidataBANK0
   201   002780  6EF6               	movwf	tblptrl,c
   202   002782  0E2A               	movlw	high __pidataBANK0
   203   002784  6EF7               	movwf	tblptrh,c
   204   002786  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   205   002788  6EF8               	movwf	tblptru,c
   206   00278A  0009               	tblrd		*+	;fetch initializer
   207   00278C  CFF5 F0D7          	movff	tablat,__pdataBANK0
   208   002790  0009               	tblrd		*+	;fetch initializer
   209   002792  CFF5 F0D8          	movff	tablat,__pdataBANK0+1
   210                           
   211                           ; Clear objects allocated to BANK1 (140 bytes)
   212   002796  EE01  F000         	lfsr	0,__pbssBANK1
   213   00279A  0E8C               	movlw	140
   214   00279C                     clear_0:
   215   00279C  6AEE               	clrf	postinc0,c
   216   00279E  06E8               	decf	wreg,f,c
   217   0027A0  E1FD               	bnz	clear_0
   218                           
   219                           ; Clear objects allocated to BANK0 (63 bytes)
   220   0027A2  EE00  F060         	lfsr	0,__pbssBANK0
   221   0027A6  0E3F               	movlw	63
   222   0027A8                     clear_1:
   223   0027A8  6AEE               	clrf	postinc0,c
   224   0027AA  06E8               	decf	wreg,f,c
   225   0027AC  E1FD               	bnz	clear_1
   226                           
   227                           ; Clear objects allocated to COMRAM (8 bytes)
   228   0027AE  EE00  F04F         	lfsr	0,__pbssCOMRAM
   229   0027B2  0E08               	movlw	8
   230   0027B4                     clear_2:
   231   0027B4  6AEE               	clrf	postinc0,c
   232   0027B6  06E8               	decf	wreg,f,c
   233   0027B8  E1FD               	bnz	clear_2
   234   0027BA                     end_of_initialization:
   235                           	callstack 0
   236   0027BA                     __end_of__initialization:
   237                           	callstack 0
   238   0027BA  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   239   0027BC  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   240   0027BE  0100               	movlb	0
   241   0027C0  EF62  F008         	goto	_main	;jump to C main() function
   242                           
   243                           	psect	bssCOMRAM
   244   00004F                     __pbssCOMRAM:
   245                           	callstack 0
   246   00004F                     _int_threshold_low:
   247                           	callstack 0
   248   00004F                     	ds	2
   249   000051                     _TxBufReadCnt:
   250                           	callstack 0
   251   000051                     	ds	1
   252   000052                     _TxBufWriteCnt:
   253                           	callstack 0
   254   000052                     	ds	1
   255   000053                     _RxBufReadCnt:
   256                           	callstack 0
   257   000053                     	ds	1
   258   000054                     _RxBufWriteCnt:
   259                           	callstack 0
   260   000054                     	ds	1
   261   000055                     _color_flag:
   262                           	callstack 0
   263   000055                     	ds	1
   264   000056                     _moves_index:
   265                           	callstack 0
   266   000056                     	ds	1
   267                           
   268                           	psect	bssBANK0
   269   000060                     __pbssBANK0:
   270                           	callstack 0
   271   000060                     _EUSART4RXbuf:
   272                           	callstack 0
   273   000060                     	ds	20
   274   000074                     _lost_flag:
   275                           	callstack 0
   276   000074                     	ds	1
   277   000075                     _tmr_ovf:
   278                           	callstack 0
   279   000075                     	ds	1
   280   000076                     _anti_moves_array:
   281                           	callstack 0
   282   000076                     	ds	40
   283   00009E                     _time_index:
   284                           	callstack 0
   285   00009E                     	ds	1
   286                           
   287                           	psect	dataBANK0
   288   0000D7                     __pdataBANK0:
   289                           	callstack 0
   290   0000D7                     _int_threshold_high:
   291                           	callstack 0
   292   0000D7                     	ds	2
   293                           
   294                           	psect	bssBANK1
   295   000100                     __pbssBANK1:
   296                           	callstack 0
   297   000100                     _EUSART4TXbuf:
   298                           	callstack 0
   299   000100                     	ds	60
   300   00013C                     _time_array:
   301                           	callstack 0
   302   00013C                     	ds	80
   303                           
   304                           	psect	cstackBANK0
   305   00009F                     __pcstackBANK0:
   306                           	callstack 0
   307   00009F                     ??___fltol:
   308                           
   309                           ; 1 bytes @ 0x0
   310   00009F                     	ds	4
   311   0000A3                     detect_color@tempval:
   312                           	callstack 0
   313                           
   314                           ; 2 bytes @ 0x4
   315   0000A3                     	ds	2
   316   0000A5                     detect_color@lost_timer:
   317                           	callstack 0
   318                           
   319                           ; 2 bytes @ 0x6
   320   0000A5                     	ds	2
   321   0000A7                     ??_detect_color:
   322                           
   323                           ; 1 bytes @ 0x8
   324   0000A7                     	ds	12
   325   0000B3                     detect_color@color:
   326                           	callstack 0
   327                           
   328                           ; 1 bytes @ 0x14
   329   0000B3                     	ds	1
   330   0000B4                     detect_color@dist_R:
   331                           	callstack 0
   332                           
   333                           ; 1 bytes @ 0x15
   334   0000B4                     	ds	1
   335   0000B5                     detect_color@dist_G:
   336                           	callstack 0
   337                           
   338                           ; 1 bytes @ 0x16
   339   0000B5                     	ds	1
   340   0000B6                     detect_color@dist_B:
   341                           	callstack 0
   342                           
   343                           ; 1 bytes @ 0x17
   344   0000B6                     	ds	1
   345   0000B7                     ??_main:
   346                           
   347                           ; 1 bytes @ 0x18
   348   0000B7                     	ds	2
   349   0000B9                     main@lost_timer:
   350                           	callstack 0
   351                           
   352                           ; 1 bytes @ 0x1A
   353   0000B9                     	ds	1
   354   0000BA                     main@b:
   355                           	callstack 0
   356                           
   357                           ; 2 bytes @ 0x1B
   358   0000BA                     	ds	2
   359   0000BC                     main@color_detected:
   360                           	callstack 0
   361                           
   362                           ; 1 bytes @ 0x1D
   363   0000BC                     	ds	1
   364   0000BD                     main@initial_color:
   365                           	callstack 0
   366                           
   367                           ; 8 bytes @ 0x1E
   368   0000BD                     	ds	8
   369   0000C5                     main@motorL:
   370                           	callstack 0
   371                           
   372                           ; 9 bytes @ 0x26
   373   0000C5                     	ds	9
   374   0000CE                     main@motorR:
   375                           	callstack 0
   376                           
   377                           ; 9 bytes @ 0x2F
   378   0000CE                     	ds	9
   379                           
   380                           	psect	cstackCOMRAM
   381   000001                     __pcstackCOMRAM:
   382                           	callstack 0
   383   000001                     ??i2_I2C_2_Master_Idle:
   384   000001                     
   385                           ; 1 bytes @ 0x0
   386   000001                     	ds	1
   387   000002                     i2I2C_2_Master_Write@data_byte:
   388                           	callstack 0
   389                           
   390                           ; 1 bytes @ 0x1
   391   000002                     	ds	1
   392   000003                     i2color_writetoaddr@value:
   393                           	callstack 0
   394                           
   395                           ; 1 bytes @ 0x2
   396   000003                     	ds	1
   397   000004                     i2color_writetoaddr@address:
   398                           	callstack 0
   399                           
   400                           ; 1 bytes @ 0x3
   401   000004                     	ds	1
   402   000005                     ??i2_init_colorclick_interrupts:
   403                           
   404                           ; 1 bytes @ 0x4
   405   000005                     	ds	1
   406   000006                     ??_LowISR:
   407   000006                     
   408                           ; 1 bytes @ 0x5
   409   000006                     	ds	3
   410   000009                     ??_I2C_2_Master_Idle:
   411   000009                     ?_Return_Time:
   412                           	callstack 0
   413   000009                     ?___wmul:
   414                           	callstack 0
   415   000009                     ?___xxtofl:
   416                           	callstack 0
   417   000009                     initDCmotorsPWM@PWMperiod:
   418                           	callstack 0
   419   000009                     AppendMoves@moves_index:
   420                           	callstack 0
   421   000009                     AppendTime@temp:
   422                           	callstack 0
   423   000009                     Return_Anti_Moves@moves_index:
   424                           	callstack 0
   425   000009                     Return_Time@time_index:
   426                           	callstack 0
   427   000009                     ___wmul@multiplier:
   428                           	callstack 0
   429   000009                     ___xxtofl@val:
   430                           	callstack 0
   431                           
   432                           ; 4 bytes @ 0x8
   433   000009                     	ds	1
   434   00000A                     ??_I2C_2_Master_Read:
   435   00000A                     I2C_2_Master_Write@data_byte:
   436                           	callstack 0
   437                           
   438                           ; 1 bytes @ 0x9
   439   00000A                     	ds	1
   440   00000B                     color_writetoaddr@value:
   441                           	callstack 0
   442   00000B                     I2C_2_Master_Read@ack:
   443                           	callstack 0
   444   00000B                     AppendMoves@anti_moves_array:
   445                           	callstack 0
   446   00000B                     AppendTime@time_index:
   447                           	callstack 0
   448   00000B                     Return_Anti_Moves@anti_moves_array:
   449                           	callstack 0
   450   00000B                     Return_Time@time_array:
   451                           	callstack 0
   452   00000B                     ___wmul@multiplicand:
   453                           	callstack 0
   454                           
   455                           ; 2 bytes @ 0xA
   456   00000B                     	ds	1
   457   00000C                     color_writetoaddr@address:
   458                           	callstack 0
   459   00000C                     I2C_2_Master_Read@tmp:
   460                           	callstack 0
   461                           
   462                           ; 1 bytes @ 0xB
   463   00000C                     	ds	1
   464   00000D                     ??_Return_Time:
   465   00000D                     ??_Return_Anti_Moves:
   466   00000D                     ??_AppendMoves:
   467   00000D                     ??_color_click_init:
   468   00000D                     ??_init_colorclick_interrupts:
   469   00000D                     ??___xxtofl:
   470   00000D                     ?_color_read_Red:
   471                           	callstack 0
   472   00000D                     ?_color_read_Green:
   473                           	callstack 0
   474   00000D                     ?_color_read_Blue:
   475                           	callstack 0
   476   00000D                     ?_color_read_Clear:
   477                           	callstack 0
   478   00000D                     AppendTime@time_array:
   479                           	callstack 0
   480   00000D                     ___wmul@product:
   481                           	callstack 0
   482                           
   483                           ; 2 bytes @ 0xC
   484   00000D                     	ds	1
   485   00000E                     AppendMoves@temp:
   486                           	callstack 0
   487   00000E                     Return_Anti_Moves@temp:
   488                           	callstack 0
   489                           
   490                           ; 1 bytes @ 0xD
   491   00000E                     	ds	1
   492   00000F                     ??_AppendTime:
   493   00000F                     ??_color_read_Red:
   494   00000F                     ??_color_read_Green:
   495   00000F                     ??_color_read_Blue:
   496   00000F                     ??_color_read_Clear:
   497   00000F                     ?___lwdiv:
   498                           	callstack 0
   499   00000F                     ___lwdiv@dividend:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0xE
   503   00000F                     	ds	1
   504   000010                     Return_Time@temp:
   505                           	callstack 0
   506                           
   507                           ; 2 bytes @ 0xF
   508   000010                     	ds	1
   509   000011                     ___xxtofl@sign:
   510                           	callstack 0
   511   000011                     ___lwdiv@divisor:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0x10
   515   000011                     	ds	1
   516   000012                     ___xxtofl@exp:
   517                           	callstack 0
   518   000012                     color_read_Red@tmp:
   519                           	callstack 0
   520   000012                     color_read_Green@tmp:
   521                           	callstack 0
   522   000012                     color_read_Blue@tmp:
   523                           	callstack 0
   524   000012                     color_read_Clear@tmp:
   525                           	callstack 0
   526                           
   527                           ; 2 bytes @ 0x11
   528   000012                     	ds	1
   529   000013                     ___lwdiv@quotient:
   530                           	callstack 0
   531   000013                     ___xxtofl@arg:
   532                           	callstack 0
   533                           
   534                           ; 4 bytes @ 0x12
   535   000013                     	ds	1
   536   000014                     Update_RGBC@tempval:
   537                           	callstack 0
   538                           
   539                           ; 2 bytes @ 0x13
   540   000014                     	ds	1
   541   000015                     ___lwdiv@counter:
   542                           	callstack 0
   543                           
   544                           ; 1 bytes @ 0x14
   545   000015                     	ds	1
   546   000016                     setMotorPWM@m:
   547                           	callstack 0
   548                           
   549                           ; 2 bytes @ 0x15
   550   000016                     	ds	1
   551   000017                     ?___fldiv:
   552                           	callstack 0
   553   000017                     ___fldiv@b:
   554                           	callstack 0
   555                           
   556                           ; 4 bytes @ 0x16
   557   000017                     	ds	1
   558   000018                     ??_setMotorPWM:
   559                           
   560                           ; 1 bytes @ 0x17
   561   000018                     	ds	2
   562   00001A                     setMotorPWM@posDuty:
   563                           	callstack 0
   564                           
   565                           ; 1 bytes @ 0x19
   566   00001A                     	ds	1
   567   00001B                     setMotorPWM@negDuty:
   568                           	callstack 0
   569   00001B                     ___fldiv@a:
   570                           	callstack 0
   571                           
   572                           ; 4 bytes @ 0x1A
   573   00001B                     	ds	1
   574   00001C                     stop@mL:
   575                           	callstack 0
   576   00001C                     turnLeft@mL:
   577                           	callstack 0
   578   00001C                     turnRight@mL:
   579                           	callstack 0
   580   00001C                     fullSpeedAhead@mL:
   581                           	callstack 0
   582   00001C                     fullSpeedBackwards@mL:
   583                           	callstack 0
   584                           
   585                           ; 2 bytes @ 0x1B
   586   00001C                     	ds	2
   587   00001E                     stop@mR:
   588                           	callstack 0
   589   00001E                     turnLeft@mR:
   590                           	callstack 0
   591   00001E                     turnRight@mR:
   592                           	callstack 0
   593   00001E                     fullSpeedAhead@mR:
   594                           	callstack 0
   595   00001E                     fullSpeedBackwards@mR:
   596                           	callstack 0
   597                           
   598                           ; 2 bytes @ 0x1D
   599   00001E                     	ds	1
   600   00001F                     ??___fldiv:
   601                           
   602                           ; 1 bytes @ 0x1E
   603   00001F                     	ds	1
   604   000020                     ??_stop:
   605   000020                     ??_turnLeft:
   606   000020                     ??_turnRight:
   607   000020                     ??_fullSpeedAhead:
   608   000020                     ??_fullSpeedBackwards:
   609                           
   610                           ; 1 bytes @ 0x1F
   611   000020                     	ds	2
   612   000022                     turnLeft90@mL:
   613                           	callstack 0
   614   000022                     turnRight90@mL:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0x21
   618   000022                     	ds	1
   619   000023                     ___fldiv@rem:
   620                           	callstack 0
   621                           
   622                           ; 4 bytes @ 0x22
   623   000023                     	ds	1
   624   000024                     turnLeft90@mR:
   625                           	callstack 0
   626   000024                     turnRight90@mR:
   627                           	callstack 0
   628                           
   629                           ; 2 bytes @ 0x23
   630   000024                     	ds	2
   631   000026                     turnLeft90@a:
   632                           	callstack 0
   633   000026                     turnRight90@a:
   634                           	callstack 0
   635                           
   636                           ; 1 bytes @ 0x25
   637   000026                     	ds	1
   638   000027                     ___fldiv@sign:
   639                           	callstack 0
   640   000027                     turnRight135@mL:
   641                           	callstack 0
   642   000027                     turnLeft135@mL:
   643                           	callstack 0
   644   000027                     RedInstructions@mL:
   645                           	callstack 0
   646   000027                     GreenInstructions@mL:
   647                           	callstack 0
   648   000027                     BlueInstructions@mL:
   649                           	callstack 0
   650   000027                     YellowInstructions@mL:
   651                           	callstack 0
   652   000027                     PinkInstructions@mL:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0x26
   656   000027                     	ds	1
   657   000028                     ___fldiv@new_exp:
   658                           	callstack 0
   659                           
   660                           ; 2 bytes @ 0x27
   661   000028                     	ds	1
   662   000029                     turnRight135@mR:
   663                           	callstack 0
   664   000029                     turnLeft135@mR:
   665                           	callstack 0
   666   000029                     RedInstructions@mR:
   667                           	callstack 0
   668   000029                     GreenInstructions@mR:
   669                           	callstack 0
   670   000029                     BlueInstructions@mR:
   671                           	callstack 0
   672   000029                     YellowInstructions@mR:
   673                           	callstack 0
   674   000029                     PinkInstructions@mR:
   675                           	callstack 0
   676                           
   677                           ; 2 bytes @ 0x28
   678   000029                     	ds	1
   679   00002A                     ___fldiv@grs:
   680                           	callstack 0
   681                           
   682                           ; 4 bytes @ 0x29
   683   00002A                     	ds	1
   684   00002B                     ??_RedInstructions:
   685   00002B                     ??_GreenInstructions:
   686   00002B                     ??_BlueInstructions:
   687   00002B                     ??_YellowInstructions:
   688   00002B                     ??_PinkInstructions:
   689   00002B                     turnRight135@a:
   690                           	callstack 0
   691   00002B                     turnLeft135@a:
   692                           	callstack 0
   693                           
   694                           ; 1 bytes @ 0x2A
   695   00002B                     	ds	1
   696   00002C                     OrangeInstructions@mL:
   697                           	callstack 0
   698   00002C                     LightBlueInstructions@mL:
   699                           	callstack 0
   700                           
   701                           ; 2 bytes @ 0x2B
   702   00002C                     	ds	1
   703   00002D                     RedInstructions@a:
   704                           	callstack 0
   705   00002D                     GreenInstructions@a:
   706                           	callstack 0
   707   00002D                     BlueInstructions@a:
   708                           	callstack 0
   709   00002D                     YellowInstructions@a:
   710                           	callstack 0
   711   00002D                     PinkInstructions@a:
   712                           	callstack 0
   713                           
   714                           ; 1 bytes @ 0x2C
   715   00002D                     	ds	1
   716   00002E                     ___fldiv@bexp:
   717                           	callstack 0
   718   00002E                     OrangeInstructions@mR:
   719                           	callstack 0
   720   00002E                     LightBlueInstructions@mR:
   721                           	callstack 0
   722   00002E                     AntiYellow@mL:
   723                           	callstack 0
   724   00002E                     AntiPink@mL:
   725                           	callstack 0
   726                           
   727                           ; 2 bytes @ 0x2D
   728   00002E                     	ds	1
   729   00002F                     ___fldiv@aexp:
   730                           	callstack 0
   731                           
   732                           ; 1 bytes @ 0x2E
   733   00002F                     	ds	1
   734   000030                     ??_OrangeInstructions:
   735   000030                     ??_LightBlueInstructions:
   736   000030                     ?___flmul:
   737                           	callstack 0
   738   000030                     AntiYellow@mR:
   739                           	callstack 0
   740   000030                     AntiPink@mR:
   741                           	callstack 0
   742   000030                     ___flmul@b:
   743                           	callstack 0
   744                           
   745                           ; 4 bytes @ 0x2F
   746   000030                     	ds	2
   747   000032                     ??_AntiYellow:
   748   000032                     ??_AntiPink:
   749   000032                     OrangeInstructions@a:
   750                           	callstack 0
   751   000032                     LightBlueInstructions@a:
   752                           	callstack 0
   753                           
   754                           ; 1 bytes @ 0x31
   755   000032                     	ds	2
   756   000034                     AntiYellow@a:
   757                           	callstack 0
   758   000034                     AntiPink@a:
   759                           	callstack 0
   760   000034                     ___flmul@a:
   761                           	callstack 0
   762                           
   763                           ; 4 bytes @ 0x33
   764   000034                     	ds	1
   765   000035                     MoveBuggy@color_detected:
   766                           	callstack 0
   767                           
   768                           ; 2 bytes @ 0x34
   769   000035                     	ds	2
   770   000037                     MoveBuggy@mL:
   771                           	callstack 0
   772                           
   773                           ; 2 bytes @ 0x36
   774   000037                     	ds	1
   775   000038                     ??___flmul:
   776                           
   777                           ; 1 bytes @ 0x37
   778   000038                     	ds	1
   779   000039                     MoveBuggy@mR:
   780                           	callstack 0
   781                           
   782                           ; 2 bytes @ 0x38
   783   000039                     	ds	2
   784   00003B                     WhiteInstructions@mL:
   785                           	callstack 0
   786                           
   787                           ; 2 bytes @ 0x3A
   788   00003B                     	ds	1
   789   00003C                     ___flmul@sign:
   790                           	callstack 0
   791                           
   792                           ; 1 bytes @ 0x3B
   793   00003C                     	ds	1
   794   00003D                     WhiteInstructions@mR:
   795                           	callstack 0
   796   00003D                     ___flmul@grs:
   797                           	callstack 0
   798                           
   799                           ; 4 bytes @ 0x3C
   800   00003D                     	ds	2
   801   00003F                     ??_WhiteInstructions:
   802                           
   803                           ; 1 bytes @ 0x3E
   804   00003F                     	ds	2
   805   000041                     ___flmul@aexp:
   806                           	callstack 0
   807   000041                     WhiteInstructions@c:
   808                           	callstack 0
   809                           
   810                           ; 2 bytes @ 0x40
   811   000041                     	ds	1
   812   000042                     ___flmul@bexp:
   813                           	callstack 0
   814                           
   815                           ; 1 bytes @ 0x41
   816   000042                     	ds	1
   817   000043                     WhiteInstructions@anticolor:
   818                           	callstack 0
   819   000043                     ___flmul@prod:
   820                           	callstack 0
   821                           
   822                           ; 4 bytes @ 0x42
   823   000043                     	ds	1
   824   000044                     WhiteInstructions@a:
   825                           	callstack 0
   826                           
   827                           ; 2 bytes @ 0x43
   828   000044                     	ds	3
   829   000047                     ___flmul@temp:
   830                           	callstack 0
   831                           
   832                           ; 2 bytes @ 0x46
   833   000047                     	ds	2
   834   000049                     ?___fltol:
   835                           	callstack 0
   836   000049                     ___fltol@f1:
   837                           	callstack 0
   838                           
   839                           ; 4 bytes @ 0x48
   840   000049                     	ds	4
   841   00004D                     ___fltol@sign1:
   842                           	callstack 0
   843                           
   844                           ; 1 bytes @ 0x4C
   845   00004D                     	ds	1
   846   00004E                     ___fltol@exp1:
   847                           	callstack 0
   848                           
   849                           ; 1 bytes @ 0x4D
   850   00004E                     	ds	1
   851                           
   852 ;;
   853 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   854 ;;
   855 ;; *************** function _main *****************
   856 ;; Defined at:
   857 ;;		line 22 in file "main_motor.c"
   858 ;; Parameters:    Size  Location     Type
   859 ;;		None
   860 ;; Auto vars:     Size  Location     Type
   861 ;;  b               2   27[BANK0 ] unsigned int 
   862 ;;  motorR          9   47[BANK0 ] struct DC_motor
   863 ;;  motorL          9   38[BANK0 ] struct DC_motor
   864 ;;  initial_colo    8   30[BANK0 ] struct RGB_val
   865 ;;  color_detect    1   29[BANK0 ] unsigned char 
   866 ;;  lost_timer      1   26[BANK0 ] unsigned char 
   867 ;; Return value:  Size  Location     Type
   868 ;;                  1    wreg      void 
   869 ;; Registers used:
   870 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   871 ;; Tracked objects:
   872 ;;		On entry : 0/0
   873 ;;		On exit  : 0/0
   874 ;;		Unchanged: 0/0
   875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   877 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   878 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   879 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   880 ;;Total ram usage:       32 bytes
   881 ;; Hardware stack levels required when called: 15
   882 ;; This function calls:
   883 ;;		_AppendTime
   884 ;;		_Interrupts_init
   885 ;;		_LED_init
   886 ;;		_MoveBuggy
   887 ;;		_Timer0_init
   888 ;;		_Update_RGBC
   889 ;;		_WhiteInstructions
   890 ;;		_WhiteLight
   891 ;;		_color_click_init
   892 ;;		_detect_color
   893 ;;		_fullSpeedAhead
   894 ;;		_initDCmotorsPWM
   895 ;;		_stop
   896 ;; This function is called by:
   897 ;;		Startup code after reset
   898 ;; This function uses a non-reentrant model
   899 ;;
   900                           
   901                           	psect	text0
   902   0010C4                     __ptext0:
   903                           	callstack 0
   904   0010C4                     _main:
   905                           	callstack 16
   906   0010C4                     
   907                           ;main_motor.c: 25:     RGB_val initial_color;;main_motor.c: 26:     initial_color.R = 0;
   908   0010C4  0E00               	movlw	0
   909   0010C6  0100               	movlb	0	; () banked
   910   0010C8  6FBE               	movwf	(main@initial_color+1)& (0+255),b
   911   0010CA  0E00               	movlw	0
   912   0010CC  6FBD               	movwf	main@initial_color& (0+255),b
   913                           
   914                           ;main_motor.c: 27:     initial_color.G = 0;
   915   0010CE  0E00               	movlw	0
   916   0010D0  6FC0               	movwf	(main@initial_color+3)& (0+255),b
   917   0010D2  0E00               	movlw	0
   918   0010D4  6FBF               	movwf	(main@initial_color+2)& (0+255),b
   919                           
   920                           ;main_motor.c: 28:     initial_color.B = 0;
   921   0010D6  0E00               	movlw	0
   922   0010D8  6FC2               	movwf	(main@initial_color+5)& (0+255),b
   923   0010DA  0E00               	movlw	0
   924   0010DC  6FC1               	movwf	(main@initial_color+4)& (0+255),b
   925                           
   926                           ;main_motor.c: 29:     initial_color.C = 0;
   927   0010DE  0E00               	movlw	0
   928   0010E0  6FC4               	movwf	(main@initial_color+7)& (0+255),b
   929   0010E2  0E00               	movlw	0
   930   0010E4  6FC3               	movwf	(main@initial_color+6)& (0+255),b
   931   0010E6                     
   932                           ; BSR set to: 0
   933                           ;main_motor.c: 31:     LED_init();
   934   0010E6  EC2E  F015         	call	_LED_init	;wreg free
   935   0010EA                     
   936                           ;main_motor.c: 32:     color_click_init();
   937   0010EA  EC1F  F014         	call	_color_click_init	;wreg free
   938   0010EE                     
   939                           ;main_motor.c: 33:     Interrupts_init();
   940   0010EE  EC05  F015         	call	_Interrupts_init	;wreg free
   941                           
   942                           ;main_motor.c: 35:     Timer0_init();
   943   0010F2  ECC5  F014         	call	_Timer0_init	;wreg free
   944                           
   945                           ;main_motor.c: 38:     initDCmotorsPWM(99);
   946   0010F6  0E00               	movlw	0
   947   0010F8  6E0A               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   948   0010FA  0E63               	movlw	99
   949   0010FC  6E09               	movwf	initDCmotorsPWM@PWMperiod^0,c
   950   0010FE  EC1E  F010         	call	_initDCmotorsPWM	;wreg free
   951   001102                     
   952                           ;main_motor.c: 40:     struct DC_motor motorL, motorR;;main_motor.c: 42:     motorL.powe
      +                          r=0;
   953   001102  0E00               	movlw	0
   954   001104  0100               	movlb	0	; () banked
   955   001106  6FC5               	movwf	main@motorL& (0+255),b
   956   001108                     
   957                           ; BSR set to: 0
   958                           ;main_motor.c: 43:     motorL.direction=1;
   959   001108  0E01               	movlw	1
   960   00110A  6FC6               	movwf	(main@motorL+1)& (0+255),b
   961   00110C                     
   962                           ; BSR set to: 0
   963                           ;main_motor.c: 44:     motorL.brakemode=1;
   964   00110C  0E01               	movlw	1
   965   00110E  6FC7               	movwf	(main@motorL+2)& (0+255),b
   966   001110                     
   967                           ; BSR set to: 0
   968                           ;main_motor.c: 45:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
   969   001110  0EAA               	movlw	170
   970   001112  6FCA               	movwf	(main@motorL+5)& (0+255),b
   971   001114  0E0F               	movlw	15
   972   001116  6FCB               	movwf	(main@motorL+6)& (0+255),b
   973   001118                     
   974                           ; BSR set to: 0
   975                           ;main_motor.c: 46:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
   976   001118  0EA6               	movlw	166
   977   00111A  6FCC               	movwf	(main@motorL+7)& (0+255),b
   978   00111C  0E0F               	movlw	15
   979   00111E  6FCD               	movwf	(main@motorL+8)& (0+255),b
   980   001120                     
   981                           ; BSR set to: 0
   982                           ;main_motor.c: 47:     motorL.PWMperiod= T2PR;
   983   001120  CFBC F0C8          	movff	4028,main@motorL+3	;volatile
   984   001124  6BC9               	clrf	(main@motorL+4)& (0+255),b
   985   001126                     
   986                           ; BSR set to: 0
   987                           ;main_motor.c: 49:     motorR.power=0;
   988   001126  0E00               	movlw	0
   989   001128  6FCE               	movwf	main@motorR& (0+255),b
   990   00112A                     
   991                           ; BSR set to: 0
   992                           ;main_motor.c: 50:     motorR.direction=1;
   993   00112A  0E01               	movlw	1
   994   00112C  6FCF               	movwf	(main@motorR+1)& (0+255),b
   995   00112E                     
   996                           ; BSR set to: 0
   997                           ;main_motor.c: 51:     motorR.brakemode=1;
   998   00112E  0E01               	movlw	1
   999   001130  6FD0               	movwf	(main@motorR+2)& (0+255),b
  1000   001132                     
  1001                           ; BSR set to: 0
  1002                           ;main_motor.c: 52:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1003   001132  0E25               	movlw	37
  1004   001134  6FD3               	movwf	(main@motorR+5)& (0+255),b
  1005   001136  0E0F               	movlw	15
  1006   001138  6FD4               	movwf	(main@motorR+6)& (0+255),b
  1007   00113A                     
  1008                           ; BSR set to: 0
  1009                           ;main_motor.c: 53:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1010   00113A  0E21               	movlw	33
  1011   00113C  6FD5               	movwf	(main@motorR+7)& (0+255),b
  1012   00113E  0E0F               	movlw	15
  1013   001140  6FD6               	movwf	(main@motorR+8)& (0+255),b
  1014   001142                     
  1015                           ; BSR set to: 0
  1016                           ;main_motor.c: 54:     motorR.PWMperiod= T2PR;
  1017   001142  CFBC F0D1          	movff	4028,main@motorR+3	;volatile
  1018   001146  6BD2               	clrf	(main@motorR+4)& (0+255),b
  1019   001148                     
  1020                           ; BSR set to: 0
  1021                           ;main_motor.c: 57:     unsigned char color_detected = 0;
  1022   001148  0E00               	movlw	0
  1023   00114A  6FBC               	movwf	main@color_detected& (0+255),b
  1024   00114C                     
  1025                           ; BSR set to: 0
  1026                           ;main_motor.c: 58:     unsigned char lost_timer = 0;
  1027   00114C  0E00               	movlw	0
  1028   00114E  6FB9               	movwf	main@lost_timer& (0+255),b
  1029   001150                     
  1030                           ; BSR set to: 0
  1031                           ;main_motor.c: 59:     WhiteLight();
  1032   001150  EC5B  F015         	call	_WhiteLight	;wreg free
  1033   001154                     l506:
  1034                           
  1035                           ;main_motor.c: 64:         unsigned int b = 0;
  1036   001154  0E00               	movlw	0
  1037   001156  0100               	movlb	0	; () banked
  1038   001158  6FBB               	movwf	(main@b+1)& (0+255),b
  1039   00115A  0E00               	movlw	0
  1040   00115C  6FBA               	movwf	main@b& (0+255),b
  1041                           
  1042                           ;main_motor.c: 65:         while(color_detected == 0){
  1043   00115E  EFD3  F008         	goto	l4261
  1044   001162                     l4253:
  1045                           
  1046                           ; BSR set to: 0
  1047                           ;main_motor.c: 66:             fullSpeedAhead(&motorL,&motorR);
  1048   001162  0EC5               	movlw	low main@motorL
  1049   001164  6E1C               	movwf	fullSpeedAhead@mL^0,c
  1050   001166  0E00               	movlw	high main@motorL
  1051   001168  6E1D               	movwf	(fullSpeedAhead@mL+1)^0,c
  1052   00116A  0ECE               	movlw	low main@motorR
  1053   00116C  6E1E               	movwf	fullSpeedAhead@mR^0,c
  1054   00116E  0E00               	movlw	high main@motorR
  1055   001170  6E1F               	movwf	(fullSpeedAhead@mR+1)^0,c
  1056   001172  EC21  F00C         	call	_fullSpeedAhead	;wreg free
  1057   001176                     
  1058                           ;main_motor.c: 67:             Update_RGBC(&initial_color);
  1059   001176  0EBD               	movlw	low main@initial_color
  1060   001178  6E14               	movwf	Update_RGBC@tempval^0,c
  1061   00117A  0E00               	movlw	high main@initial_color
  1062   00117C  6E15               	movwf	(Update_RGBC@tempval+1)^0,c
  1063   00117E  ECA0  F012         	call	_Update_RGBC	;wreg free
  1064   001182                     
  1065                           ;main_motor.c: 68:             color_detected = detect_color(&initial_color, lost_timer)
      +                          ;
  1066   001182  0EBD               	movlw	low main@initial_color
  1067   001184  0100               	movlb	0	; () banked
  1068   001186  6FA3               	movwf	detect_color@tempval& (0+255),b
  1069   001188  0E00               	movlw	high main@initial_color
  1070   00118A  6FA4               	movwf	(detect_color@tempval+1)& (0+255),b
  1071   00118C  51B9               	movf	main@lost_timer& (0+255),w,b
  1072   00118E  6FB7               	movwf	??_main& (0+255),b
  1073   001190  6BB8               	clrf	(??_main+1)& (0+255),b
  1074   001192  C0B7  F0A5         	movff	??_main,detect_color@lost_timer
  1075   001196  C0B8  F0A6         	movff	??_main+1,detect_color@lost_timer+1
  1076   00119A  EC2E  F000         	call	_detect_color	;wreg free
  1077   00119E  0100               	movlb	0	; () banked
  1078   0011A0  6FBC               	movwf	main@color_detected& (0+255),b
  1079   0011A2                     
  1080                           ; BSR set to: 0
  1081                           ;main_motor.c: 69:             b++;
  1082   0011A2  4BBA               	infsnz	main@b& (0+255),f,b
  1083   0011A4  2BBB               	incf	(main@b+1)& (0+255),f,b
  1084   0011A6                     l4261:
  1085                           
  1086                           ; BSR set to: 0
  1087                           ;main_motor.c: 65:         while(color_detected == 0){
  1088   0011A6  51BC               	movf	main@color_detected& (0+255),w,b
  1089   0011A8  B4D8               	btfsc	status,2,c
  1090   0011AA  EFD9  F008         	goto	u4451
  1091   0011AE  EFDB  F008         	goto	u4450
  1092   0011B2                     u4451:
  1093   0011B2  EFB1  F008         	goto	l4253
  1094   0011B6                     u4450:
  1095   0011B6                     
  1096                           ; BSR set to: 0
  1097                           ;main_motor.c: 72:         if(color_detected != 0 && color_detected != 8){
  1098   0011B6  51BC               	movf	main@color_detected& (0+255),w,b
  1099   0011B8  B4D8               	btfsc	status,2,c
  1100   0011BA  EFE1  F008         	goto	u4461
  1101   0011BE  EFE3  F008         	goto	u4460
  1102   0011C2                     u4461:
  1103   0011C2  EF40  F009         	goto	l4289
  1104   0011C6                     u4460:
  1105   0011C6                     
  1106                           ; BSR set to: 0
  1107   0011C6  0E08               	movlw	8
  1108   0011C8  19BC               	xorwf	main@color_detected& (0+255),w,b
  1109   0011CA  B4D8               	btfsc	status,2,c
  1110   0011CC  EFEA  F008         	goto	u4471
  1111   0011D0  EFEC  F008         	goto	u4470
  1112   0011D4                     u4471:
  1113   0011D4  EF40  F009         	goto	l4289
  1114   0011D8                     u4470:
  1115   0011D8                     
  1116                           ; BSR set to: 0
  1117                           ;main_motor.c: 73:             AppendTime((b-6),&time_index,time_array);
  1118   0011D8  0EFA               	movlw	250
  1119   0011DA  25BA               	addwf	main@b& (0+255),w,b
  1120   0011DC  6E09               	movwf	AppendTime@temp^0,c
  1121   0011DE  0EFF               	movlw	255
  1122   0011E0  21BB               	addwfc	(main@b+1)& (0+255),w,b
  1123   0011E2  6E0A               	movwf	(AppendTime@temp+1)^0,c
  1124   0011E4  0E9E               	movlw	low _time_index
  1125   0011E6  6E0B               	movwf	AppendTime@time_index^0,c
  1126   0011E8  0E00               	movlw	high _time_index
  1127   0011EA  6E0C               	movwf	(AppendTime@time_index+1)^0,c
  1128   0011EC  0E3C               	movlw	low _time_array
  1129   0011EE  6E0D               	movwf	AppendTime@time_array^0,c
  1130   0011F0  0E01               	movlw	high _time_array
  1131   0011F2  6E0E               	movwf	(AppendTime@time_array+1)^0,c
  1132   0011F4  EC39  F014         	call	_AppendTime	;wreg free
  1133   0011F8                     
  1134                           ;main_motor.c: 74:             LATHbits.LATH3 = 1;
  1135   0011F8  8680               	bsf	128,3,c	;volatile
  1136                           
  1137                           ;main_motor.c: 76:             while(b>0){
  1138   0011FA  EF0D  F009         	goto	l4275
  1139   0011FE                     l4271:
  1140                           
  1141                           ; BSR set to: 0
  1142                           ;main_motor.c: 77:                 stop(&motorL,&motorR);
  1143   0011FE  0EC5               	movlw	low main@motorL
  1144   001200  6E1C               	movwf	stop@mL^0,c
  1145   001202  0E00               	movlw	high main@motorL
  1146   001204  6E1D               	movwf	(stop@mL+1)^0,c
  1147   001206  0ECE               	movlw	low main@motorR
  1148   001208  6E1E               	movwf	stop@mR^0,c
  1149   00120A  0E00               	movlw	high main@motorR
  1150   00120C  6E1F               	movwf	(stop@mR+1)^0,c
  1151   00120E  ECFB  F00D         	call	_stop	;wreg free
  1152   001212                     
  1153                           ;main_motor.c: 78:                 b--;
  1154   001212  0100               	movlb	0	; () banked
  1155   001214  07BA               	decf	main@b& (0+255),f,b
  1156   001216  A0D8               	btfss	status,0,c
  1157   001218  07BB               	decf	(main@b+1)& (0+255),f,b
  1158   00121A                     l4275:
  1159                           
  1160                           ;main_motor.c: 76:             while(b>0){
  1161   00121A  0100               	movlb	0	; () banked
  1162   00121C  51BA               	movf	main@b& (0+255),w,b
  1163   00121E  11BB               	iorwf	(main@b+1)& (0+255),w,b
  1164   001220  A4D8               	btfss	status,2,c
  1165   001222  EF15  F009         	goto	u4481
  1166   001226  EF17  F009         	goto	u4480
  1167   00122A                     u4481:
  1168   00122A  EFFF  F008         	goto	l4271
  1169   00122E                     u4480:
  1170   00122E                     
  1171                           ; BSR set to: 0
  1172                           ;main_motor.c: 80:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1173   00122E  0E09               	movlw	9
  1174   001230  0100               	movlb	0	; () banked
  1175   001232  6FB8               	movwf	(??_main+1)& (0+255),b
  1176   001234  0E1E               	movlw	30
  1177   001236  6FB7               	movwf	??_main& (0+255),b
  1178   001238  0EE4               	movlw	228
  1179   00123A                     u4517:
  1180   00123A  2EE8               	decfsz	wreg,f,c
  1181   00123C  D7FE               	bra	u4517
  1182   00123E  2FB7               	decfsz	??_main& (0+255),f,b
  1183   001240  D7FC               	bra	u4517
  1184   001242  2FB8               	decfsz	(??_main+1)& (0+255),f,b
  1185   001244  D7FA               	bra	u4517
  1186   001246  F000               	nop	
  1187   001248                     
  1188                           ;main_motor.c: 81:             LATHbits.LATH3 = 0;
  1189   001248  9680               	bcf	128,3,c	;volatile
  1190   00124A                     
  1191                           ;main_motor.c: 83:             MoveBuggy(color_detected,&motorL,&motorR);
  1192   00124A  0100               	movlb	0	; () banked
  1193   00124C  51BC               	movf	main@color_detected& (0+255),w,b
  1194   00124E  6FB7               	movwf	??_main& (0+255),b
  1195   001250  6BB8               	clrf	(??_main+1)& (0+255),b
  1196   001252  C0B7  F035         	movff	??_main,MoveBuggy@color_detected
  1197   001256  C0B8  F036         	movff	??_main+1,MoveBuggy@color_detected+1
  1198   00125A  0EC5               	movlw	low main@motorL
  1199   00125C  6E37               	movwf	MoveBuggy@mL^0,c
  1200   00125E  0E00               	movlw	high main@motorL
  1201   001260  6E38               	movwf	(MoveBuggy@mL+1)^0,c
  1202   001262  0ECE               	movlw	low main@motorR
  1203   001264  6E39               	movwf	MoveBuggy@mR^0,c
  1204   001266  0E00               	movlw	high main@motorR
  1205   001268  6E3A               	movwf	(MoveBuggy@mR+1)^0,c
  1206   00126A  EC20  F007         	call	_MoveBuggy	;wreg free
  1207   00126E                     
  1208                           ;main_motor.c: 84:             color_detected = 0;
  1209   00126E  0E00               	movlw	0
  1210   001270  0100               	movlb	0	; () banked
  1211   001272  6FBC               	movwf	main@color_detected& (0+255),b
  1212   001274                     
  1213                           ; BSR set to: 0
  1214                           ;main_motor.c: 85:             color_flag = 0;
  1215   001274  0E00               	movlw	0
  1216   001276  6E55               	movwf	_color_flag^0,c
  1217   001278                     
  1218                           ; BSR set to: 0
  1219                           ;main_motor.c: 86:             lost_timer = 0;
  1220   001278  0E00               	movlw	0
  1221   00127A  6FB9               	movwf	main@lost_timer& (0+255),b
  1222                           
  1223                           ;main_motor.c: 87:         }
  1224   00127C  EFAA  F008         	goto	l506
  1225   001280                     l4289:
  1226                           
  1227                           ; BSR set to: 0
  1228   001280  0E08               	movlw	8
  1229   001282  19BC               	xorwf	main@color_detected& (0+255),w,b
  1230   001284  A4D8               	btfss	status,2,c
  1231   001286  EF47  F009         	goto	u4491
  1232   00128A  EF49  F009         	goto	u4490
  1233   00128E                     u4491:
  1234   00128E  EFAA  F008         	goto	l506
  1235   001292                     u4490:
  1236   001292                     
  1237                           ; BSR set to: 0
  1238                           ;main_motor.c: 91:             AppendTime((b-6),&time_index,time_array);
  1239   001292  0EFA               	movlw	250
  1240   001294  25BA               	addwf	main@b& (0+255),w,b
  1241   001296  6E09               	movwf	AppendTime@temp^0,c
  1242   001298  0EFF               	movlw	255
  1243   00129A  21BB               	addwfc	(main@b+1)& (0+255),w,b
  1244   00129C  6E0A               	movwf	(AppendTime@temp+1)^0,c
  1245   00129E  0E9E               	movlw	low _time_index
  1246   0012A0  6E0B               	movwf	AppendTime@time_index^0,c
  1247   0012A2  0E00               	movlw	high _time_index
  1248   0012A4  6E0C               	movwf	(AppendTime@time_index+1)^0,c
  1249   0012A6  0E3C               	movlw	low _time_array
  1250   0012A8  6E0D               	movwf	AppendTime@time_array^0,c
  1251   0012AA  0E01               	movlw	high _time_array
  1252   0012AC  6E0E               	movwf	(AppendTime@time_array+1)^0,c
  1253   0012AE  EC39  F014         	call	_AppendTime	;wreg free
  1254   0012B2                     
  1255                           ;main_motor.c: 92:             LATDbits.LATD7 = 1;
  1256   0012B2  8E7C               	bsf	124,7,c	;volatile
  1257                           
  1258                           ;main_motor.c: 94:             while(b>0){
  1259   0012B4  EF6A  F009         	goto	l4299
  1260   0012B8                     l4295:
  1261                           
  1262                           ; BSR set to: 0
  1263                           ;main_motor.c: 95:                 stop(&motorL,&motorR);
  1264   0012B8  0EC5               	movlw	low main@motorL
  1265   0012BA  6E1C               	movwf	stop@mL^0,c
  1266   0012BC  0E00               	movlw	high main@motorL
  1267   0012BE  6E1D               	movwf	(stop@mL+1)^0,c
  1268   0012C0  0ECE               	movlw	low main@motorR
  1269   0012C2  6E1E               	movwf	stop@mR^0,c
  1270   0012C4  0E00               	movlw	high main@motorR
  1271   0012C6  6E1F               	movwf	(stop@mR+1)^0,c
  1272   0012C8  ECFB  F00D         	call	_stop	;wreg free
  1273   0012CC                     
  1274                           ;main_motor.c: 96:                 b--;
  1275   0012CC  0100               	movlb	0	; () banked
  1276   0012CE  07BA               	decf	main@b& (0+255),f,b
  1277   0012D0  A0D8               	btfss	status,0,c
  1278   0012D2  07BB               	decf	(main@b+1)& (0+255),f,b
  1279   0012D4                     l4299:
  1280                           
  1281                           ;main_motor.c: 94:             while(b>0){
  1282   0012D4  0100               	movlb	0	; () banked
  1283   0012D6  51BA               	movf	main@b& (0+255),w,b
  1284   0012D8  11BB               	iorwf	(main@b+1)& (0+255),w,b
  1285   0012DA  A4D8               	btfss	status,2,c
  1286   0012DC  EF72  F009         	goto	u4501
  1287   0012E0  EF74  F009         	goto	u4500
  1288   0012E4                     u4501:
  1289   0012E4  EF5C  F009         	goto	l4295
  1290   0012E8                     u4500:
  1291   0012E8                     
  1292                           ; BSR set to: 0
  1293                           ;main_motor.c: 98:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1294   0012E8  0E09               	movlw	9
  1295   0012EA  0100               	movlb	0	; () banked
  1296   0012EC  6FB8               	movwf	(??_main+1)& (0+255),b
  1297   0012EE  0E1E               	movlw	30
  1298   0012F0  6FB7               	movwf	??_main& (0+255),b
  1299   0012F2  0EE4               	movlw	228
  1300   0012F4                     u4527:
  1301   0012F4  2EE8               	decfsz	wreg,f,c
  1302   0012F6  D7FE               	bra	u4527
  1303   0012F8  2FB7               	decfsz	??_main& (0+255),f,b
  1304   0012FA  D7FC               	bra	u4527
  1305   0012FC  2FB8               	decfsz	(??_main+1)& (0+255),f,b
  1306   0012FE  D7FA               	bra	u4527
  1307   001300  F000               	nop	
  1308   001302                     
  1309                           ;main_motor.c: 99:             WhiteInstructions(&motorL,&motorR);
  1310   001302  0EC5               	movlw	low main@motorL
  1311   001304  6E3B               	movwf	WhiteInstructions@mL^0,c
  1312   001306  0E00               	movlw	high main@motorL
  1313   001308  6E3C               	movwf	(WhiteInstructions@mL+1)^0,c
  1314   00130A  0ECE               	movlw	low main@motorR
  1315   00130C  6E3D               	movwf	WhiteInstructions@mR^0,c
  1316   00130E  0E00               	movlw	high main@motorR
  1317   001310  6E3E               	movwf	(WhiteInstructions@mR+1)^0,c
  1318   001312  EC86  F00D         	call	_WhiteInstructions	;wreg free
  1319   001316                     
  1320                           ;main_motor.c: 100:             LATDbits.LATD7 = 0;
  1321   001316  9E7C               	bcf	124,7,c	;volatile
  1322   001318                     
  1323                           ;main_motor.c: 101:             color_detected = 0;
  1324   001318  0E00               	movlw	0
  1325   00131A  0100               	movlb	0	; () banked
  1326   00131C  6FBC               	movwf	main@color_detected& (0+255),b
  1327   00131E                     
  1328                           ; BSR set to: 0
  1329                           ;main_motor.c: 102:             lost_timer = 0;
  1330   00131E  0E00               	movlw	0
  1331   001320  6FB9               	movwf	main@lost_timer& (0+255),b
  1332   001322  0003               	sleep		;# 
  1333   001324  EFAA  F008         	goto	l506
  1334   001328  EF2C  F000         	goto	start
  1335   00132C                     __end_of_main:
  1336                           	callstack 0
  1337                           
  1338 ;; *************** function _initDCmotorsPWM *****************
  1339 ;; Defined at:
  1340 ;;		line 5 in file "dc_motor.c"
  1341 ;; Parameters:    Size  Location     Type
  1342 ;;  PWMperiod       2    8[COMRAM] unsigned int 
  1343 ;; Auto vars:     Size  Location     Type
  1344 ;;		None
  1345 ;; Return value:  Size  Location     Type
  1346 ;;                  1    wreg      void 
  1347 ;; Registers used:
  1348 ;;		wreg, status,2
  1349 ;; Tracked objects:
  1350 ;;		On entry : 0/0
  1351 ;;		On exit  : 0/0
  1352 ;;		Unchanged: 0/0
  1353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1354 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1357 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1358 ;;Total ram usage:        2 bytes
  1359 ;; Hardware stack levels used: 1
  1360 ;; Hardware stack levels required when called: 7
  1361 ;; This function calls:
  1362 ;;		Nothing
  1363 ;; This function is called by:
  1364 ;;		_main
  1365 ;; This function uses a non-reentrant model
  1366 ;;
  1367                           
  1368                           	psect	text1
  1369   00203C                     __ptext1:
  1370                           	callstack 0
  1371   00203C                     _initDCmotorsPWM:
  1372                           	callstack 23
  1373   00203C                     
  1374                           ;dc_motor.c: 7:     LATEbits.LATE2 = 0;
  1375   00203C  947D               	bcf	125,2,c	;volatile
  1376                           
  1377                           ;dc_motor.c: 8:     TRISEbits.TRISE2 = 0;
  1378   00203E  9485               	bcf	133,2,c	;volatile
  1379                           
  1380                           ;dc_motor.c: 9:     LATEbits.LATE4 = 0;
  1381   002040  987D               	bcf	125,4,c	;volatile
  1382                           
  1383                           ;dc_motor.c: 10:     TRISEbits.TRISE4 = 0;
  1384   002042  9885               	bcf	133,4,c	;volatile
  1385                           
  1386                           ;dc_motor.c: 11:     LATCbits.LATC7 = 0;
  1387   002044  9E7B               	bcf	123,7,c	;volatile
  1388                           
  1389                           ;dc_motor.c: 12:     TRISCbits.TRISC7 = 0;
  1390   002046  9E83               	bcf	131,7,c	;volatile
  1391                           
  1392                           ;dc_motor.c: 13:     LATGbits.LATG6 = 0;
  1393   002048  9C7F               	bcf	127,6,c	;volatile
  1394                           
  1395                           ;dc_motor.c: 14:     TRISGbits.TRISG6 = 0;
  1396   00204A  9C87               	bcf	135,6,c	;volatile
  1397   00204C                     
  1398                           ;dc_motor.c: 17:     RE2PPS=0x05;
  1399   00204C  0E05               	movlw	5
  1400   00204E  010E               	movlb	14	; () banked
  1401   002050  6F74               	movwf	116,b	;volatile
  1402                           
  1403                           ;dc_motor.c: 18:     RE4PPS=0x06;
  1404   002052  0E06               	movlw	6
  1405   002054  6F76               	movwf	118,b	;volatile
  1406                           
  1407                           ;dc_motor.c: 19:     RC7PPS=0x07;
  1408   002056  0E07               	movlw	7
  1409   002058  6F69               	movwf	105,b	;volatile
  1410                           
  1411                           ;dc_motor.c: 20:     RG6PPS=0x08;
  1412   00205A  0E08               	movlw	8
  1413   00205C  6F88               	movwf	136,b	;volatile
  1414                           
  1415                           ;dc_motor.c: 23:     T2CONbits.CKPS=0b100;
  1416   00205E  50BD               	movf	189,w,c	;volatile
  1417   002060  0B8F               	andlw	-113
  1418   002062  0940               	iorlw	64
  1419   002064  6EBD               	movwf	189,c	;volatile
  1420                           
  1421                           ;dc_motor.c: 24:     T2HLTbits.MODE=0b00000;
  1422   002066  0EE0               	movlw	-32
  1423   002068  16BE               	andwf	190,f,c	;volatile
  1424                           
  1425                           ;dc_motor.c: 25:     T2CLKCONbits.CS=0b0001;
  1426   00206A  50BF               	movf	191,w,c	;volatile
  1427   00206C  0BF0               	andlw	-16
  1428   00206E  0901               	iorlw	1
  1429   002070  6EBF               	movwf	191,c	;volatile
  1430   002072                     
  1431                           ; BSR set to: 14
  1432                           ;dc_motor.c: 29:     T2PR=PWMperiod;
  1433   002072  C009  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  1434   002076                     
  1435                           ; BSR set to: 14
  1436                           ;dc_motor.c: 30:     T2CONbits.ON=1;
  1437   002076  8EBD               	bsf	189,7,c	;volatile
  1438                           
  1439                           ;dc_motor.c: 34:     CCPR1H=0;
  1440   002078  0E00               	movlw	0
  1441   00207A  6EAA               	movwf	170,c	;volatile
  1442                           
  1443                           ;dc_motor.c: 35:     CCPR2H=0;
  1444   00207C  0E00               	movlw	0
  1445   00207E  6EA6               	movwf	166,c	;volatile
  1446                           
  1447                           ;dc_motor.c: 36:     CCPR3H=0;
  1448   002080  0E00               	movlw	0
  1449   002082  010F               	movlb	15	; () banked
  1450   002084  6F25               	movwf	37,b	;volatile
  1451                           
  1452                           ;dc_motor.c: 37:     CCPR4H=0;
  1453   002086  0E00               	movlw	0
  1454   002088  6F21               	movwf	33,b	;volatile
  1455                           
  1456                           ;dc_motor.c: 40:     CCPTMRS0bits.C1TSEL=0;
  1457   00208A  0EFC               	movlw	-4
  1458   00208C  16AD               	andwf	173,f,c	;volatile
  1459                           
  1460                           ;dc_motor.c: 41:     CCPTMRS0bits.C2TSEL=0;
  1461   00208E  0EF3               	movlw	-13
  1462   002090  16AD               	andwf	173,f,c	;volatile
  1463                           
  1464                           ;dc_motor.c: 42:     CCPTMRS0bits.C3TSEL=0;
  1465   002092  0ECF               	movlw	-49
  1466   002094  16AD               	andwf	173,f,c	;volatile
  1467                           
  1468                           ;dc_motor.c: 43:     CCPTMRS0bits.C4TSEL=0;
  1469   002096  0E3F               	movlw	-193
  1470   002098  16AD               	andwf	173,f,c	;volatile
  1471   00209A                     
  1472                           ; BSR set to: 15
  1473                           ;dc_motor.c: 46:     CCP1CONbits.FMT=1;
  1474   00209A  88AB               	bsf	171,4,c	;volatile
  1475                           
  1476                           ;dc_motor.c: 47:     CCP1CONbits.CCP1MODE=0b1100;
  1477   00209C  50AB               	movf	171,w,c	;volatile
  1478   00209E  0BF0               	andlw	-16
  1479   0020A0  090C               	iorlw	12
  1480   0020A2  6EAB               	movwf	171,c	;volatile
  1481   0020A4                     
  1482                           ; BSR set to: 15
  1483                           ;dc_motor.c: 48:     CCP1CONbits.EN=1;
  1484   0020A4  8EAB               	bsf	171,7,c	;volatile
  1485   0020A6                     
  1486                           ; BSR set to: 15
  1487                           ;dc_motor.c: 50:     CCP2CONbits.FMT=1;
  1488   0020A6  88A7               	bsf	167,4,c	;volatile
  1489                           
  1490                           ;dc_motor.c: 51:     CCP2CONbits.CCP2MODE=0b1100;
  1491   0020A8  50A7               	movf	167,w,c	;volatile
  1492   0020AA  0BF0               	andlw	-16
  1493   0020AC  090C               	iorlw	12
  1494   0020AE  6EA7               	movwf	167,c	;volatile
  1495   0020B0                     
  1496                           ; BSR set to: 15
  1497                           ;dc_motor.c: 52:     CCP2CONbits.EN=1;
  1498   0020B0  8EA7               	bsf	167,7,c	;volatile
  1499   0020B2                     
  1500                           ; BSR set to: 15
  1501                           ;dc_motor.c: 54:     CCP3CONbits.FMT=1;
  1502   0020B2  8926               	bsf	38,4,b	;volatile
  1503                           
  1504                           ;dc_motor.c: 55:     CCP3CONbits.CCP3MODE=0b1100;
  1505   0020B4  5126               	movf	38,w,b	;volatile
  1506   0020B6  0BF0               	andlw	-16
  1507   0020B8  090C               	iorlw	12
  1508   0020BA  6F26               	movwf	38,b	;volatile
  1509   0020BC                     
  1510                           ; BSR set to: 15
  1511                           ;dc_motor.c: 56:     CCP3CONbits.EN=1;
  1512   0020BC  8F26               	bsf	38,7,b	;volatile
  1513   0020BE                     
  1514                           ; BSR set to: 15
  1515                           ;dc_motor.c: 58:     CCP4CONbits.FMT=1;
  1516   0020BE  8922               	bsf	34,4,b	;volatile
  1517                           
  1518                           ;dc_motor.c: 59:     CCP4CONbits.CCP4MODE=0b1100;
  1519   0020C0  5122               	movf	34,w,b	;volatile
  1520   0020C2  0BF0               	andlw	-16
  1521   0020C4  090C               	iorlw	12
  1522   0020C6  6F22               	movwf	34,b	;volatile
  1523   0020C8                     
  1524                           ; BSR set to: 15
  1525                           ;dc_motor.c: 60:     CCP4CONbits.EN=1;
  1526   0020C8  8F22               	bsf	34,7,b	;volatile
  1527   0020CA                     
  1528                           ; BSR set to: 15
  1529   0020CA  0012               	return		;funcret
  1530   0020CC                     __end_of_initDCmotorsPWM:
  1531                           	callstack 0
  1532                           
  1533 ;; *************** function _detect_color *****************
  1534 ;; Defined at:
  1535 ;;		line 99 in file "color.c"
  1536 ;; Parameters:    Size  Location     Type
  1537 ;;  tempval         2    4[BANK0 ] PTR struct RGB_val
  1538 ;;		 -> main@initial_color(8), 
  1539 ;;  lost_timer      2    6[BANK0 ] PTR unsigned char 
  1540 ;;		 -> RAM(3561), 
  1541 ;; Auto vars:     Size  Location     Type
  1542 ;;  dist_B          1   23[BANK0 ] unsigned char 
  1543 ;;  dist_G          1   22[BANK0 ] unsigned char 
  1544 ;;  dist_R          1   21[BANK0 ] unsigned char 
  1545 ;;  color           1   20[BANK0 ] unsigned char 
  1546 ;; Return value:  Size  Location     Type
  1547 ;;                  1    wreg      unsigned char 
  1548 ;; Registers used:
  1549 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1550 ;; Tracked objects:
  1551 ;;		On entry : 0/0
  1552 ;;		On exit  : 0/0
  1553 ;;		Unchanged: 0/0
  1554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1555 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1556 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1557 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1558 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1559 ;;Total ram usage:       20 bytes
  1560 ;; Hardware stack levels used: 1
  1561 ;; Hardware stack levels required when called: 8
  1562 ;; This function calls:
  1563 ;;		___fldiv
  1564 ;;		___flmul
  1565 ;;		___fltol
  1566 ;;		___xxtofl
  1567 ;; This function is called by:
  1568 ;;		_main
  1569 ;; This function uses a non-reentrant model
  1570 ;;
  1571                           
  1572                           	psect	text2
  1573   00005C                     __ptext2:
  1574                           	callstack 0
  1575   00005C                     _detect_color:
  1576                           	callstack 22
  1577   00005C                     
  1578                           ;color.c: 99: unsigned char detect_color(RGB_val *tempval, unsigned char *lost_timer);co
      +                          lor.c: 100: {;color.c: 101:     unsigned char color = 0;
  1579   00005C  0E00               	movlw	0
  1580   00005E  0100               	movlb	0	; () banked
  1581   000060  6FB3               	movwf	detect_color@color& (0+255),b
  1582   000062                     
  1583                           ; BSR set to: 0
  1584                           ;color.c: 104:     unsigned char dist_R, dist_G, dist_B;;color.c: 105:     dist_R = ((fl
      +                          oat)(tempval->R)/(float)(tempval->R + tempval->G + tempval->B))*100;
  1585   000062  0E00               	movlw	0
  1586   000064  6E34               	movwf	___flmul@a^0,c
  1587   000066  0E00               	movlw	0
  1588   000068  6E35               	movwf	(___flmul@a+1)^0,c
  1589   00006A  0EC8               	movlw	200
  1590   00006C  6E36               	movwf	(___flmul@a+2)^0,c
  1591   00006E  0E42               	movlw	66
  1592   000070  6E37               	movwf	(___flmul@a+3)^0,c
  1593   000072  EE20 F004          	lfsr	2,4
  1594   000076  51A3               	movf	detect_color@tempval& (0+255),w,b
  1595   000078  26D9               	addwf	fsr2l,f,c
  1596   00007A  51A4               	movf	(detect_color@tempval+1)& (0+255),w,b
  1597   00007C  22DA               	addwfc	fsr2h,f,c
  1598   00007E  CFDE F0A7          	movff	postinc2,??_detect_color
  1599   000082  CFDD F0A8          	movff	postdec2,??_detect_color+1
  1600   000086  EE20 F002          	lfsr	2,2
  1601   00008A  51A3               	movf	detect_color@tempval& (0+255),w,b
  1602   00008C  26D9               	addwf	fsr2l,f,c
  1603   00008E  51A4               	movf	(detect_color@tempval+1)& (0+255),w,b
  1604   000090  22DA               	addwfc	fsr2h,f,c
  1605   000092  CFDE F0A9          	movff	postinc2,??_detect_color+2
  1606   000096  CFDD F0AA          	movff	postdec2,??_detect_color+3
  1607   00009A  C0A3  FFD9         	movff	detect_color@tempval,fsr2l
  1608   00009E  C0A4  FFDA         	movff	detect_color@tempval+1,fsr2h
  1609   0000A2  CFDE F0AB          	movff	postinc2,??_detect_color+4
  1610   0000A6  CFDD F0AC          	movff	postdec2,??_detect_color+5
  1611   0000AA  51A9               	movf	(??_detect_color+2)& (0+255),w,b
  1612   0000AC  25AB               	addwf	(??_detect_color+4)& (0+255),w,b
  1613   0000AE  6FAD               	movwf	(??_detect_color+6)& (0+255),b
  1614   0000B0  51AA               	movf	(??_detect_color+3)& (0+255),w,b
  1615   0000B2  21AC               	addwfc	(??_detect_color+5)& (0+255),w,b
  1616   0000B4  6FAE               	movwf	(??_detect_color+7)& (0+255),b
  1617   0000B6  51A7               	movf	??_detect_color& (0+255),w,b
  1618   0000B8  25AD               	addwf	(??_detect_color+6)& (0+255),w,b
  1619   0000BA  6FAF               	movwf	(??_detect_color+8)& (0+255),b
  1620   0000BC  51A8               	movf	(??_detect_color+1)& (0+255),w,b
  1621   0000BE  21AE               	addwfc	(??_detect_color+7)& (0+255),w,b
  1622   0000C0  6FB0               	movwf	(??_detect_color+9)& (0+255),b
  1623   0000C2  C0AF  F009         	movff	??_detect_color+8,___xxtofl@val
  1624   0000C6  C0B0  F00A         	movff	??_detect_color+9,___xxtofl@val+1
  1625   0000CA  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1626   0000CC  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1627   0000CE  0E00               	movlw	0
  1628   0000D0  EC96  F009         	call	___xxtofl
  1629   0000D4  C009  F01B         	movff	?___xxtofl,___fldiv@a
  1630   0000D8  C00A  F01C         	movff	?___xxtofl+1,___fldiv@a+1
  1631   0000DC  C00B  F01D         	movff	?___xxtofl+2,___fldiv@a+2
  1632   0000E0  C00C  F01E         	movff	?___xxtofl+3,___fldiv@a+3
  1633   0000E4  C0A3  FFD9         	movff	detect_color@tempval,fsr2l
  1634   0000E8  C0A4  FFDA         	movff	detect_color@tempval+1,fsr2h
  1635   0000EC  CFDE F0B1          	movff	postinc2,??_detect_color+10
  1636   0000F0  CFDD F0B2          	movff	postdec2,??_detect_color+11
  1637   0000F4  C0B1  F009         	movff	??_detect_color+10,___xxtofl@val
  1638   0000F8  C0B2  F00A         	movff	??_detect_color+11,___xxtofl@val+1
  1639   0000FC  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1640   0000FE  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1641   000100  0E00               	movlw	0
  1642   000102  EC96  F009         	call	___xxtofl
  1643   000106  C009  F017         	movff	?___xxtofl,___fldiv@b
  1644   00010A  C00A  F018         	movff	?___xxtofl+1,___fldiv@b+1
  1645   00010E  C00B  F019         	movff	?___xxtofl+2,___fldiv@b+2
  1646   000112  C00C  F01A         	movff	?___xxtofl+3,___fldiv@b+3
  1647   000116  EC53  F005         	call	___fldiv	;wreg free
  1648   00011A  C017  F030         	movff	?___fldiv,___flmul@b
  1649   00011E  C018  F031         	movff	?___fldiv+1,___flmul@b+1
  1650   000122  C019  F032         	movff	?___fldiv+2,___flmul@b+2
  1651   000126  C01A  F033         	movff	?___fldiv+3,___flmul@b+3
  1652   00012A  EC3E  F003         	call	___flmul	;wreg free
  1653   00012E  C030  F049         	movff	?___flmul,___fltol@f1
  1654   000132  C031  F04A         	movff	?___flmul+1,___fltol@f1+1
  1655   000136  C032  F04B         	movff	?___flmul+2,___fltol@f1+2
  1656   00013A  C033  F04C         	movff	?___flmul+3,___fltol@f1+3
  1657   00013E  EC26  F00B         	call	___fltol	;wreg free
  1658   000142  5049               	movf	?___fltol^0,w,c
  1659   000144  0100               	movlb	0	; () banked
  1660   000146  6FB4               	movwf	detect_color@dist_R& (0+255),b
  1661   000148                     
  1662                           ; BSR set to: 0
  1663                           ;color.c: 106:     dist_G = ((float)(tempval->G)/(float)(tempval->R + tempval->G + tempv
      +                          al->B))*100;
  1664   000148  0E00               	movlw	0
  1665   00014A  6E34               	movwf	___flmul@a^0,c
  1666   00014C  0E00               	movlw	0
  1667   00014E  6E35               	movwf	(___flmul@a+1)^0,c
  1668   000150  0EC8               	movlw	200
  1669   000152  6E36               	movwf	(___flmul@a+2)^0,c
  1670   000154  0E42               	movlw	66
  1671   000156  6E37               	movwf	(___flmul@a+3)^0,c
  1672   000158  EE20 F004          	lfsr	2,4
  1673   00015C  51A3               	movf	detect_color@tempval& (0+255),w,b
  1674   00015E  26D9               	addwf	fsr2l,f,c
  1675   000160  51A4               	movf	(detect_color@tempval+1)& (0+255),w,b
  1676   000162  22DA               	addwfc	fsr2h,f,c
  1677   000164  CFDE F0A7          	movff	postinc2,??_detect_color
  1678   000168  CFDD F0A8          	movff	postdec2,??_detect_color+1
  1679   00016C  EE20 F002          	lfsr	2,2
  1680   000170  51A3               	movf	detect_color@tempval& (0+255),w,b
  1681   000172  26D9               	addwf	fsr2l,f,c
  1682   000174  51A4               	movf	(detect_color@tempval+1)& (0+255),w,b
  1683   000176  22DA               	addwfc	fsr2h,f,c
  1684   000178  CFDE F0A9          	movff	postinc2,??_detect_color+2
  1685   00017C  CFDD F0AA          	movff	postdec2,??_detect_color+3
  1686   000180  C0A3  FFD9         	movff	detect_color@tempval,fsr2l
  1687   000184  C0A4  FFDA         	movff	detect_color@tempval+1,fsr2h
  1688   000188  CFDE F0AB          	movff	postinc2,??_detect_color+4
  1689   00018C  CFDD F0AC          	movff	postdec2,??_detect_color+5
  1690   000190  51A9               	movf	(??_detect_color+2)& (0+255),w,b
  1691   000192  25AB               	addwf	(??_detect_color+4)& (0+255),w,b
  1692   000194  6FAD               	movwf	(??_detect_color+6)& (0+255),b
  1693   000196  51AA               	movf	(??_detect_color+3)& (0+255),w,b
  1694   000198  21AC               	addwfc	(??_detect_color+5)& (0+255),w,b
  1695   00019A  6FAE               	movwf	(??_detect_color+7)& (0+255),b
  1696   00019C  51A7               	movf	??_detect_color& (0+255),w,b
  1697   00019E  25AD               	addwf	(??_detect_color+6)& (0+255),w,b
  1698   0001A0  6FAF               	movwf	(??_detect_color+8)& (0+255),b
  1699   0001A2  51A8               	movf	(??_detect_color+1)& (0+255),w,b
  1700   0001A4  21AE               	addwfc	(??_detect_color+7)& (0+255),w,b
  1701   0001A6  6FB0               	movwf	(??_detect_color+9)& (0+255),b
  1702   0001A8  C0AF  F009         	movff	??_detect_color+8,___xxtofl@val
  1703   0001AC  C0B0  F00A         	movff	??_detect_color+9,___xxtofl@val+1
  1704   0001B0  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1705   0001B2  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1706   0001B4  0E00               	movlw	0
  1707   0001B6  EC96  F009         	call	___xxtofl
  1708   0001BA  C009  F01B         	movff	?___xxtofl,___fldiv@a
  1709   0001BE  C00A  F01C         	movff	?___xxtofl+1,___fldiv@a+1
  1710   0001C2  C00B  F01D         	movff	?___xxtofl+2,___fldiv@a+2
  1711   0001C6  C00C  F01E         	movff	?___xxtofl+3,___fldiv@a+3
  1712   0001CA  0100               	movlb	0	; () banked
  1713   0001CC  EE20 F002          	lfsr	2,2
  1714   0001D0  51A3               	movf	detect_color@tempval& (0+255),w,b
  1715   0001D2  26D9               	addwf	fsr2l,f,c
  1716   0001D4  51A4               	movf	(detect_color@tempval+1)& (0+255),w,b
  1717   0001D6  22DA               	addwfc	fsr2h,f,c
  1718   0001D8  CFDE F0B1          	movff	postinc2,??_detect_color+10
  1719   0001DC  CFDD F0B2          	movff	postdec2,??_detect_color+11
  1720   0001E0  C0B1  F009         	movff	??_detect_color+10,___xxtofl@val
  1721   0001E4  C0B2  F00A         	movff	??_detect_color+11,___xxtofl@val+1
  1722   0001E8  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1723   0001EA  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1724   0001EC  0E00               	movlw	0
  1725   0001EE  EC96  F009         	call	___xxtofl
  1726   0001F2  C009  F017         	movff	?___xxtofl,___fldiv@b
  1727   0001F6  C00A  F018         	movff	?___xxtofl+1,___fldiv@b+1
  1728   0001FA  C00B  F019         	movff	?___xxtofl+2,___fldiv@b+2
  1729   0001FE  C00C  F01A         	movff	?___xxtofl+3,___fldiv@b+3
  1730   000202  EC53  F005         	call	___fldiv	;wreg free
  1731   000206  C017  F030         	movff	?___fldiv,___flmul@b
  1732   00020A  C018  F031         	movff	?___fldiv+1,___flmul@b+1
  1733   00020E  C019  F032         	movff	?___fldiv+2,___flmul@b+2
  1734   000212  C01A  F033         	movff	?___fldiv+3,___flmul@b+3
  1735   000216  EC3E  F003         	call	___flmul	;wreg free
  1736   00021A  C030  F049         	movff	?___flmul,___fltol@f1
  1737   00021E  C031  F04A         	movff	?___flmul+1,___fltol@f1+1
  1738   000222  C032  F04B         	movff	?___flmul+2,___fltol@f1+2
  1739   000226  C033  F04C         	movff	?___flmul+3,___fltol@f1+3
  1740   00022A  EC26  F00B         	call	___fltol	;wreg free
  1741   00022E  5049               	movf	?___fltol^0,w,c
  1742   000230  0100               	movlb	0	; () banked
  1743   000232  6FB5               	movwf	detect_color@dist_G& (0+255),b
  1744   000234                     
  1745                           ; BSR set to: 0
  1746                           ;color.c: 107:     dist_B = ((float)(tempval->B)/(float)(tempval->R + tempval->G + tempv
      +                          al->B))*100;
  1747   000234  0E00               	movlw	0
  1748   000236  6E34               	movwf	___flmul@a^0,c
  1749   000238  0E00               	movlw	0
  1750   00023A  6E35               	movwf	(___flmul@a+1)^0,c
  1751   00023C  0EC8               	movlw	200
  1752   00023E  6E36               	movwf	(___flmul@a+2)^0,c
  1753   000240  0E42               	movlw	66
  1754   000242  6E37               	movwf	(___flmul@a+3)^0,c
  1755   000244  EE20 F004          	lfsr	2,4
  1756   000248  51A3               	movf	detect_color@tempval& (0+255),w,b
  1757   00024A  26D9               	addwf	fsr2l,f,c
  1758   00024C  51A4               	movf	(detect_color@tempval+1)& (0+255),w,b
  1759   00024E  22DA               	addwfc	fsr2h,f,c
  1760   000250  CFDE F0A7          	movff	postinc2,??_detect_color
  1761   000254  CFDD F0A8          	movff	postdec2,??_detect_color+1
  1762   000258  EE20 F002          	lfsr	2,2
  1763   00025C  51A3               	movf	detect_color@tempval& (0+255),w,b
  1764   00025E  26D9               	addwf	fsr2l,f,c
  1765   000260  51A4               	movf	(detect_color@tempval+1)& (0+255),w,b
  1766   000262  22DA               	addwfc	fsr2h,f,c
  1767   000264  CFDE F0A9          	movff	postinc2,??_detect_color+2
  1768   000268  CFDD F0AA          	movff	postdec2,??_detect_color+3
  1769   00026C  C0A3  FFD9         	movff	detect_color@tempval,fsr2l
  1770   000270  C0A4  FFDA         	movff	detect_color@tempval+1,fsr2h
  1771   000274  CFDE F0AB          	movff	postinc2,??_detect_color+4
  1772   000278  CFDD F0AC          	movff	postdec2,??_detect_color+5
  1773   00027C  51A9               	movf	(??_detect_color+2)& (0+255),w,b
  1774   00027E  25AB               	addwf	(??_detect_color+4)& (0+255),w,b
  1775   000280  6FAD               	movwf	(??_detect_color+6)& (0+255),b
  1776   000282  51AA               	movf	(??_detect_color+3)& (0+255),w,b
  1777   000284  21AC               	addwfc	(??_detect_color+5)& (0+255),w,b
  1778   000286  6FAE               	movwf	(??_detect_color+7)& (0+255),b
  1779   000288  51A7               	movf	??_detect_color& (0+255),w,b
  1780   00028A  25AD               	addwf	(??_detect_color+6)& (0+255),w,b
  1781   00028C  6FAF               	movwf	(??_detect_color+8)& (0+255),b
  1782   00028E  51A8               	movf	(??_detect_color+1)& (0+255),w,b
  1783   000290  21AE               	addwfc	(??_detect_color+7)& (0+255),w,b
  1784   000292  6FB0               	movwf	(??_detect_color+9)& (0+255),b
  1785   000294  C0AF  F009         	movff	??_detect_color+8,___xxtofl@val
  1786   000298  C0B0  F00A         	movff	??_detect_color+9,___xxtofl@val+1
  1787   00029C  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1788   00029E  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1789   0002A0  0E00               	movlw	0
  1790   0002A2  EC96  F009         	call	___xxtofl
  1791   0002A6  C009  F01B         	movff	?___xxtofl,___fldiv@a
  1792   0002AA  C00A  F01C         	movff	?___xxtofl+1,___fldiv@a+1
  1793   0002AE  C00B  F01D         	movff	?___xxtofl+2,___fldiv@a+2
  1794   0002B2  C00C  F01E         	movff	?___xxtofl+3,___fldiv@a+3
  1795   0002B6  0100               	movlb	0	; () banked
  1796   0002B8  EE20 F004          	lfsr	2,4
  1797   0002BC  51A3               	movf	detect_color@tempval& (0+255),w,b
  1798   0002BE  26D9               	addwf	fsr2l,f,c
  1799   0002C0  51A4               	movf	(detect_color@tempval+1)& (0+255),w,b
  1800   0002C2  22DA               	addwfc	fsr2h,f,c
  1801   0002C4  CFDE F0B1          	movff	postinc2,??_detect_color+10
  1802   0002C8  CFDD F0B2          	movff	postdec2,??_detect_color+11
  1803   0002CC  C0B1  F009         	movff	??_detect_color+10,___xxtofl@val
  1804   0002D0  C0B2  F00A         	movff	??_detect_color+11,___xxtofl@val+1
  1805   0002D4  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1806   0002D6  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1807   0002D8  0E00               	movlw	0
  1808   0002DA  EC96  F009         	call	___xxtofl
  1809   0002DE  C009  F017         	movff	?___xxtofl,___fldiv@b
  1810   0002E2  C00A  F018         	movff	?___xxtofl+1,___fldiv@b+1
  1811   0002E6  C00B  F019         	movff	?___xxtofl+2,___fldiv@b+2
  1812   0002EA  C00C  F01A         	movff	?___xxtofl+3,___fldiv@b+3
  1813   0002EE  EC53  F005         	call	___fldiv	;wreg free
  1814   0002F2  C017  F030         	movff	?___fldiv,___flmul@b
  1815   0002F6  C018  F031         	movff	?___fldiv+1,___flmul@b+1
  1816   0002FA  C019  F032         	movff	?___fldiv+2,___flmul@b+2
  1817   0002FE  C01A  F033         	movff	?___fldiv+3,___flmul@b+3
  1818   000302  EC3E  F003         	call	___flmul	;wreg free
  1819   000306  C030  F049         	movff	?___flmul,___fltol@f1
  1820   00030A  C031  F04A         	movff	?___flmul+1,___fltol@f1+1
  1821   00030E  C032  F04B         	movff	?___flmul+2,___fltol@f1+2
  1822   000312  C033  F04C         	movff	?___flmul+3,___fltol@f1+3
  1823   000316  EC26  F00B         	call	___fltol	;wreg free
  1824   00031A  5049               	movf	?___fltol^0,w,c
  1825   00031C  0100               	movlb	0	; () banked
  1826   00031E  6FB6               	movwf	detect_color@dist_B& (0+255),b
  1827   000320                     
  1828                           ; BSR set to: 0
  1829                           ;color.c: 109:     if(color_flag){
  1830   000320  5055               	movf	_color_flag^0,w,c
  1831   000322  B4D8               	btfsc	status,2,c
  1832   000324  EF96  F001         	goto	u3961
  1833   000328  EF98  F001         	goto	u3960
  1834   00032C                     u3961:
  1835   00032C  EF3A  F003         	goto	l42
  1836   000330                     u3960:
  1837   000330                     
  1838                           ; BSR set to: 0
  1839                           ;color.c: 110:         if((74<=dist_R) && (dist_R<=76) && (10<=dist_G) && (dist_G<=12) &
      +                          & (13<=dist_B) && (dist_B<=15)){
  1840   000330  0E49               	movlw	73
  1841   000332  65B4               	cpfsgt	detect_color@dist_R& (0+255),b
  1842   000334  EF9E  F001         	goto	u3971
  1843   000338  EFA0  F001         	goto	u3970
  1844   00033C                     u3971:
  1845   00033C  EFCC  F001         	goto	l4113
  1846   000340                     u3970:
  1847   000340                     
  1848                           ; BSR set to: 0
  1849   000340  0E4D               	movlw	77
  1850   000342  61B4               	cpfslt	detect_color@dist_R& (0+255),b
  1851   000344  EFA6  F001         	goto	u3981
  1852   000348  EFA8  F001         	goto	u3980
  1853   00034C                     u3981:
  1854   00034C  EFCC  F001         	goto	l4113
  1855   000350                     u3980:
  1856   000350                     
  1857                           ; BSR set to: 0
  1858   000350  0E09               	movlw	9
  1859   000352  65B5               	cpfsgt	detect_color@dist_G& (0+255),b
  1860   000354  EFAE  F001         	goto	u3991
  1861   000358  EFB0  F001         	goto	u3990
  1862   00035C                     u3991:
  1863   00035C  EFCC  F001         	goto	l4113
  1864   000360                     u3990:
  1865   000360                     
  1866                           ; BSR set to: 0
  1867   000360  0E0D               	movlw	13
  1868   000362  61B5               	cpfslt	detect_color@dist_G& (0+255),b
  1869   000364  EFB6  F001         	goto	u4001
  1870   000368  EFB8  F001         	goto	u4000
  1871   00036C                     u4001:
  1872   00036C  EFCC  F001         	goto	l4113
  1873   000370                     u4000:
  1874   000370                     
  1875                           ; BSR set to: 0
  1876   000370  0E0C               	movlw	12
  1877   000372  65B6               	cpfsgt	detect_color@dist_B& (0+255),b
  1878   000374  EFBE  F001         	goto	u4011
  1879   000378  EFC0  F001         	goto	u4010
  1880   00037C                     u4011:
  1881   00037C  EFCC  F001         	goto	l4113
  1882   000380                     u4010:
  1883   000380                     
  1884                           ; BSR set to: 0
  1885   000380  0E10               	movlw	16
  1886   000382  61B6               	cpfslt	detect_color@dist_B& (0+255),b
  1887   000384  EFC6  F001         	goto	u4021
  1888   000388  EFC8  F001         	goto	u4020
  1889   00038C                     u4021:
  1890   00038C  EFCC  F001         	goto	l4113
  1891   000390                     u4020:
  1892   000390                     
  1893                           ; BSR set to: 0
  1894                           ;color.c: 111:             color = 1;
  1895   000390  0E01               	movlw	1
  1896   000392  6FB3               	movwf	detect_color@color& (0+255),b
  1897                           
  1898                           ;color.c: 112:         }
  1899   000394  EF3A  F003         	goto	l42
  1900   000398                     l4113:
  1901                           
  1902                           ; BSR set to: 0
  1903   000398  0E23               	movlw	35
  1904   00039A  65B4               	cpfsgt	detect_color@dist_R& (0+255),b
  1905   00039C  EFD2  F001         	goto	u4031
  1906   0003A0  EFD4  F001         	goto	u4030
  1907   0003A4                     u4031:
  1908   0003A4  EF00  F002         	goto	l4127
  1909   0003A8                     u4030:
  1910   0003A8                     
  1911                           ; BSR set to: 0
  1912   0003A8  0E27               	movlw	39
  1913   0003AA  61B4               	cpfslt	detect_color@dist_R& (0+255),b
  1914   0003AC  EFDA  F001         	goto	u4041
  1915   0003B0  EFDC  F001         	goto	u4040
  1916   0003B4                     u4041:
  1917   0003B4  EF00  F002         	goto	l4127
  1918   0003B8                     u4040:
  1919   0003B8                     
  1920                           ; BSR set to: 0
  1921   0003B8  0E28               	movlw	40
  1922   0003BA  65B5               	cpfsgt	detect_color@dist_G& (0+255),b
  1923   0003BC  EFE2  F001         	goto	u4051
  1924   0003C0  EFE4  F001         	goto	u4050
  1925   0003C4                     u4051:
  1926   0003C4  EF00  F002         	goto	l4127
  1927   0003C8                     u4050:
  1928   0003C8                     
  1929                           ; BSR set to: 0
  1930   0003C8  0E2C               	movlw	44
  1931   0003CA  61B5               	cpfslt	detect_color@dist_G& (0+255),b
  1932   0003CC  EFEA  F001         	goto	u4061
  1933   0003D0  EFEC  F001         	goto	u4060
  1934   0003D4                     u4061:
  1935   0003D4  EF00  F002         	goto	l4127
  1936   0003D8                     u4060:
  1937   0003D8                     
  1938                           ; BSR set to: 0
  1939   0003D8  0E13               	movlw	19
  1940   0003DA  65B6               	cpfsgt	detect_color@dist_B& (0+255),b
  1941   0003DC  EFF2  F001         	goto	u4071
  1942   0003E0  EFF4  F001         	goto	u4070
  1943   0003E4                     u4071:
  1944   0003E4  EF00  F002         	goto	l4127
  1945   0003E8                     u4070:
  1946   0003E8                     
  1947                           ; BSR set to: 0
  1948   0003E8  0E17               	movlw	23
  1949   0003EA  61B6               	cpfslt	detect_color@dist_B& (0+255),b
  1950   0003EC  EFFA  F001         	goto	u4081
  1951   0003F0  EFFC  F001         	goto	u4080
  1952   0003F4                     u4081:
  1953   0003F4  EF00  F002         	goto	l4127
  1954   0003F8                     u4080:
  1955   0003F8                     
  1956                           ; BSR set to: 0
  1957                           ;color.c: 114:             color = 2;
  1958   0003F8  0E02               	movlw	2
  1959   0003FA  6FB3               	movwf	detect_color@color& (0+255),b
  1960                           
  1961                           ;color.c: 115:         }
  1962   0003FC  EF3A  F003         	goto	l42
  1963   000400                     l4127:
  1964                           
  1965                           ; BSR set to: 0
  1966   000400  0E1C               	movlw	28
  1967   000402  65B4               	cpfsgt	detect_color@dist_R& (0+255),b
  1968   000404  EF06  F002         	goto	u4091
  1969   000408  EF08  F002         	goto	u4090
  1970   00040C                     u4091:
  1971   00040C  EF34  F002         	goto	l4141
  1972   000410                     u4090:
  1973   000410                     
  1974                           ; BSR set to: 0
  1975   000410  0E23               	movlw	35
  1976   000412  61B4               	cpfslt	detect_color@dist_R& (0+255),b
  1977   000414  EF0E  F002         	goto	u4101
  1978   000418  EF10  F002         	goto	u4100
  1979   00041C                     u4101:
  1980   00041C  EF34  F002         	goto	l4141
  1981   000420                     u4100:
  1982   000420                     
  1983                           ; BSR set to: 0
  1984   000420  0E1F               	movlw	31
  1985   000422  65B5               	cpfsgt	detect_color@dist_G& (0+255),b
  1986   000424  EF16  F002         	goto	u4111
  1987   000428  EF18  F002         	goto	u4110
  1988   00042C                     u4111:
  1989   00042C  EF34  F002         	goto	l4141
  1990   000430                     u4110:
  1991   000430                     
  1992                           ; BSR set to: 0
  1993   000430  0E27               	movlw	39
  1994   000432  61B5               	cpfslt	detect_color@dist_G& (0+255),b
  1995   000434  EF1E  F002         	goto	u4121
  1996   000438  EF20  F002         	goto	u4120
  1997   00043C                     u4121:
  1998   00043C  EF34  F002         	goto	l4141
  1999   000440                     u4120:
  2000   000440                     
  2001                           ; BSR set to: 0
  2002   000440  0E1E               	movlw	30
  2003   000442  65B6               	cpfsgt	detect_color@dist_B& (0+255),b
  2004   000444  EF26  F002         	goto	u4131
  2005   000448  EF28  F002         	goto	u4130
  2006   00044C                     u4131:
  2007   00044C  EF34  F002         	goto	l4141
  2008   000450                     u4130:
  2009   000450                     
  2010                           ; BSR set to: 0
  2011   000450  0E26               	movlw	38
  2012   000452  61B6               	cpfslt	detect_color@dist_B& (0+255),b
  2013   000454  EF2E  F002         	goto	u4141
  2014   000458  EF30  F002         	goto	u4140
  2015   00045C                     u4141:
  2016   00045C  EF34  F002         	goto	l4141
  2017   000460                     u4140:
  2018   000460                     
  2019                           ; BSR set to: 0
  2020                           ;color.c: 117:             color = 3;
  2021   000460  0E03               	movlw	3
  2022   000462  6FB3               	movwf	detect_color@color& (0+255),b
  2023                           
  2024                           ;color.c: 118:         }
  2025   000464  EF3A  F003         	goto	l42
  2026   000468                     l4141:
  2027                           
  2028                           ; BSR set to: 0
  2029   000468  0E31               	movlw	49
  2030   00046A  65B4               	cpfsgt	detect_color@dist_R& (0+255),b
  2031   00046C  EF3A  F002         	goto	u4151
  2032   000470  EF3C  F002         	goto	u4150
  2033   000474                     u4151:
  2034   000474  EF68  F002         	goto	l4155
  2035   000478                     u4150:
  2036   000478                     
  2037                           ; BSR set to: 0
  2038   000478  0E35               	movlw	53
  2039   00047A  61B4               	cpfslt	detect_color@dist_R& (0+255),b
  2040   00047C  EF42  F002         	goto	u4161
  2041   000480  EF44  F002         	goto	u4160
  2042   000484                     u4161:
  2043   000484  EF68  F002         	goto	l4155
  2044   000488                     u4160:
  2045   000488                     
  2046                           ; BSR set to: 0
  2047   000488  0E1D               	movlw	29
  2048   00048A  65B5               	cpfsgt	detect_color@dist_G& (0+255),b
  2049   00048C  EF4A  F002         	goto	u4171
  2050   000490  EF4C  F002         	goto	u4170
  2051   000494                     u4171:
  2052   000494  EF68  F002         	goto	l4155
  2053   000498                     u4170:
  2054   000498                     
  2055                           ; BSR set to: 0
  2056   000498  0E21               	movlw	33
  2057   00049A  61B5               	cpfslt	detect_color@dist_G& (0+255),b
  2058   00049C  EF52  F002         	goto	u4181
  2059   0004A0  EF54  F002         	goto	u4180
  2060   0004A4                     u4181:
  2061   0004A4  EF68  F002         	goto	l4155
  2062   0004A8                     u4180:
  2063   0004A8                     
  2064                           ; BSR set to: 0
  2065   0004A8  0E10               	movlw	16
  2066   0004AA  65B6               	cpfsgt	detect_color@dist_B& (0+255),b
  2067   0004AC  EF5A  F002         	goto	u4191
  2068   0004B0  EF5C  F002         	goto	u4190
  2069   0004B4                     u4191:
  2070   0004B4  EF68  F002         	goto	l4155
  2071   0004B8                     u4190:
  2072   0004B8                     
  2073                           ; BSR set to: 0
  2074   0004B8  0E14               	movlw	20
  2075   0004BA  61B6               	cpfslt	detect_color@dist_B& (0+255),b
  2076   0004BC  EF62  F002         	goto	u4201
  2077   0004C0  EF64  F002         	goto	u4200
  2078   0004C4                     u4201:
  2079   0004C4  EF68  F002         	goto	l4155
  2080   0004C8                     u4200:
  2081   0004C8                     
  2082                           ; BSR set to: 0
  2083                           ;color.c: 120:             color = 4;
  2084   0004C8  0E04               	movlw	4
  2085   0004CA  6FB3               	movwf	detect_color@color& (0+255),b
  2086                           
  2087                           ;color.c: 121:         }
  2088   0004CC  EF3A  F003         	goto	l42
  2089   0004D0                     l4155:
  2090                           
  2091                           ; BSR set to: 0
  2092   0004D0  0E2F               	movlw	47
  2093   0004D2  65B4               	cpfsgt	detect_color@dist_R& (0+255),b
  2094   0004D4  EF6E  F002         	goto	u4211
  2095   0004D8  EF70  F002         	goto	u4210
  2096   0004DC                     u4211:
  2097   0004DC  EF9C  F002         	goto	l4169
  2098   0004E0                     u4210:
  2099   0004E0                     
  2100                           ; BSR set to: 0
  2101   0004E0  0E33               	movlw	51
  2102   0004E2  61B4               	cpfslt	detect_color@dist_R& (0+255),b
  2103   0004E4  EF76  F002         	goto	u4221
  2104   0004E8  EF78  F002         	goto	u4220
  2105   0004EC                     u4221:
  2106   0004EC  EF9C  F002         	goto	l4169
  2107   0004F0                     u4220:
  2108   0004F0                     
  2109                           ; BSR set to: 0
  2110   0004F0  0E1B               	movlw	27
  2111   0004F2  65B5               	cpfsgt	detect_color@dist_G& (0+255),b
  2112   0004F4  EF7E  F002         	goto	u4231
  2113   0004F8  EF80  F002         	goto	u4230
  2114   0004FC                     u4231:
  2115   0004FC  EF9C  F002         	goto	l4169
  2116   000500                     u4230:
  2117   000500                     
  2118                           ; BSR set to: 0
  2119   000500  0E1F               	movlw	31
  2120   000502  61B5               	cpfslt	detect_color@dist_G& (0+255),b
  2121   000504  EF86  F002         	goto	u4241
  2122   000508  EF88  F002         	goto	u4240
  2123   00050C                     u4241:
  2124   00050C  EF9C  F002         	goto	l4169
  2125   000510                     u4240:
  2126   000510                     
  2127                           ; BSR set to: 0
  2128   000510  0E14               	movlw	20
  2129   000512  65B6               	cpfsgt	detect_color@dist_B& (0+255),b
  2130   000514  EF8E  F002         	goto	u4251
  2131   000518  EF90  F002         	goto	u4250
  2132   00051C                     u4251:
  2133   00051C  EF9C  F002         	goto	l4169
  2134   000520                     u4250:
  2135   000520                     
  2136                           ; BSR set to: 0
  2137   000520  0E18               	movlw	24
  2138   000522  61B6               	cpfslt	detect_color@dist_B& (0+255),b
  2139   000524  EF96  F002         	goto	u4261
  2140   000528  EF98  F002         	goto	u4260
  2141   00052C                     u4261:
  2142   00052C  EF9C  F002         	goto	l4169
  2143   000530                     u4260:
  2144   000530                     
  2145                           ; BSR set to: 0
  2146                           ;color.c: 123:             color = 5;
  2147   000530  0E05               	movlw	5
  2148   000532  6FB3               	movwf	detect_color@color& (0+255),b
  2149                           
  2150                           ;color.c: 124:         }
  2151   000534  EF3A  F003         	goto	l42
  2152   000538                     l4169:
  2153                           
  2154                           ; BSR set to: 0
  2155   000538  0E3A               	movlw	58
  2156   00053A  65B4               	cpfsgt	detect_color@dist_R& (0+255),b
  2157   00053C  EFA2  F002         	goto	u4271
  2158   000540  EFA4  F002         	goto	u4270
  2159   000544                     u4271:
  2160   000544  EFD0  F002         	goto	l4183
  2161   000548                     u4270:
  2162   000548                     
  2163                           ; BSR set to: 0
  2164   000548  0E3E               	movlw	62
  2165   00054A  61B4               	cpfslt	detect_color@dist_R& (0+255),b
  2166   00054C  EFAA  F002         	goto	u4281
  2167   000550  EFAC  F002         	goto	u4280
  2168   000554                     u4281:
  2169   000554  EFD0  F002         	goto	l4183
  2170   000558                     u4280:
  2171   000558                     
  2172                           ; BSR set to: 0
  2173   000558  0E15               	movlw	21
  2174   00055A  65B5               	cpfsgt	detect_color@dist_G& (0+255),b
  2175   00055C  EFB2  F002         	goto	u4291
  2176   000560  EFB4  F002         	goto	u4290
  2177   000564                     u4291:
  2178   000564  EFD0  F002         	goto	l4183
  2179   000568                     u4290:
  2180   000568                     
  2181                           ; BSR set to: 0
  2182   000568  0E19               	movlw	25
  2183   00056A  61B5               	cpfslt	detect_color@dist_G& (0+255),b
  2184   00056C  EFBA  F002         	goto	u4301
  2185   000570  EFBC  F002         	goto	u4300
  2186   000574                     u4301:
  2187   000574  EFD0  F002         	goto	l4183
  2188   000578                     u4300:
  2189   000578                     
  2190                           ; BSR set to: 0
  2191   000578  0E0F               	movlw	15
  2192   00057A  65B6               	cpfsgt	detect_color@dist_B& (0+255),b
  2193   00057C  EFC2  F002         	goto	u4311
  2194   000580  EFC4  F002         	goto	u4310
  2195   000584                     u4311:
  2196   000584  EFD0  F002         	goto	l4183
  2197   000588                     u4310:
  2198   000588                     
  2199                           ; BSR set to: 0
  2200   000588  0E13               	movlw	19
  2201   00058A  61B6               	cpfslt	detect_color@dist_B& (0+255),b
  2202   00058C  EFCA  F002         	goto	u4321
  2203   000590  EFCC  F002         	goto	u4320
  2204   000594                     u4321:
  2205   000594  EFD0  F002         	goto	l4183
  2206   000598                     u4320:
  2207   000598                     
  2208                           ; BSR set to: 0
  2209                           ;color.c: 126:             color = 6;
  2210   000598  0E06               	movlw	6
  2211   00059A  6FB3               	movwf	detect_color@color& (0+255),b
  2212                           
  2213                           ;color.c: 127:         }
  2214   00059C  EF3A  F003         	goto	l42
  2215   0005A0                     l4183:
  2216                           
  2217                           ; BSR set to: 0
  2218   0005A0  0E20               	movlw	32
  2219   0005A2  65B4               	cpfsgt	detect_color@dist_R& (0+255),b
  2220   0005A4  EFD6  F002         	goto	u4331
  2221   0005A8  EFD8  F002         	goto	u4330
  2222   0005AC                     u4331:
  2223   0005AC  EF04  F003         	goto	l4197
  2224   0005B0                     u4330:
  2225   0005B0                     
  2226                           ; BSR set to: 0
  2227   0005B0  0E24               	movlw	36
  2228   0005B2  61B4               	cpfslt	detect_color@dist_R& (0+255),b
  2229   0005B4  EFDE  F002         	goto	u4341
  2230   0005B8  EFE0  F002         	goto	u4340
  2231   0005BC                     u4341:
  2232   0005BC  EF04  F003         	goto	l4197
  2233   0005C0                     u4340:
  2234   0005C0                     
  2235                           ; BSR set to: 0
  2236   0005C0  0E25               	movlw	37
  2237   0005C2  65B5               	cpfsgt	detect_color@dist_G& (0+255),b
  2238   0005C4  EFE6  F002         	goto	u4351
  2239   0005C8  EFE8  F002         	goto	u4350
  2240   0005CC                     u4351:
  2241   0005CC  EF04  F003         	goto	l4197
  2242   0005D0                     u4350:
  2243   0005D0                     
  2244                           ; BSR set to: 0
  2245   0005D0  0E29               	movlw	41
  2246   0005D2  61B5               	cpfslt	detect_color@dist_G& (0+255),b
  2247   0005D4  EFEE  F002         	goto	u4361
  2248   0005D8  EFF0  F002         	goto	u4360
  2249   0005DC                     u4361:
  2250   0005DC  EF04  F003         	goto	l4197
  2251   0005E0                     u4360:
  2252   0005E0                     
  2253                           ; BSR set to: 0
  2254   0005E0  0E19               	movlw	25
  2255   0005E2  65B6               	cpfsgt	detect_color@dist_B& (0+255),b
  2256   0005E4  EFF6  F002         	goto	u4371
  2257   0005E8  EFF8  F002         	goto	u4370
  2258   0005EC                     u4371:
  2259   0005EC  EF04  F003         	goto	l4197
  2260   0005F0                     u4370:
  2261   0005F0                     
  2262                           ; BSR set to: 0
  2263   0005F0  0E1D               	movlw	29
  2264   0005F2  61B6               	cpfslt	detect_color@dist_B& (0+255),b
  2265   0005F4  EFFE  F002         	goto	u4381
  2266   0005F8  EF00  F003         	goto	u4380
  2267   0005FC                     u4381:
  2268   0005FC  EF04  F003         	goto	l4197
  2269   000600                     u4380:
  2270   000600                     
  2271                           ; BSR set to: 0
  2272                           ;color.c: 129:             color = 7;
  2273   000600  0E07               	movlw	7
  2274   000602  6FB3               	movwf	detect_color@color& (0+255),b
  2275                           
  2276                           ;color.c: 130:         }
  2277   000604  EF3A  F003         	goto	l42
  2278   000608                     l4197:
  2279                           
  2280                           ; BSR set to: 0
  2281   000608  0E2A               	movlw	42
  2282   00060A  65B4               	cpfsgt	detect_color@dist_R& (0+255),b
  2283   00060C  EF0A  F003         	goto	u4391
  2284   000610  EF0C  F003         	goto	u4390
  2285   000614                     u4391:
  2286   000614  EF38  F003         	goto	l4211
  2287   000618                     u4390:
  2288   000618                     
  2289                           ; BSR set to: 0
  2290   000618  0E2E               	movlw	46
  2291   00061A  61B4               	cpfslt	detect_color@dist_R& (0+255),b
  2292   00061C  EF12  F003         	goto	u4401
  2293   000620  EF14  F003         	goto	u4400
  2294   000624                     u4401:
  2295   000624  EF38  F003         	goto	l4211
  2296   000628                     u4400:
  2297   000628                     
  2298                           ; BSR set to: 0
  2299   000628  0E1F               	movlw	31
  2300   00062A  65B5               	cpfsgt	detect_color@dist_G& (0+255),b
  2301   00062C  EF1A  F003         	goto	u4411
  2302   000630  EF1C  F003         	goto	u4410
  2303   000634                     u4411:
  2304   000634  EF38  F003         	goto	l4211
  2305   000638                     u4410:
  2306   000638                     
  2307                           ; BSR set to: 0
  2308   000638  0E23               	movlw	35
  2309   00063A  61B5               	cpfslt	detect_color@dist_G& (0+255),b
  2310   00063C  EF22  F003         	goto	u4421
  2311   000640  EF24  F003         	goto	u4420
  2312   000644                     u4421:
  2313   000644  EF38  F003         	goto	l4211
  2314   000648                     u4420:
  2315   000648                     
  2316                           ; BSR set to: 0
  2317   000648  0E15               	movlw	21
  2318   00064A  65B6               	cpfsgt	detect_color@dist_B& (0+255),b
  2319   00064C  EF2A  F003         	goto	u4431
  2320   000650  EF2C  F003         	goto	u4430
  2321   000654                     u4431:
  2322   000654  EF38  F003         	goto	l4211
  2323   000658                     u4430:
  2324   000658                     
  2325                           ; BSR set to: 0
  2326   000658  0E19               	movlw	25
  2327   00065A  61B6               	cpfslt	detect_color@dist_B& (0+255),b
  2328   00065C  EF32  F003         	goto	u4441
  2329   000660  EF34  F003         	goto	u4440
  2330   000664                     u4441:
  2331   000664  EF38  F003         	goto	l4211
  2332   000668                     u4440:
  2333   000668                     
  2334                           ; BSR set to: 0
  2335                           ;color.c: 132:             color = 8;
  2336   000668  0E08               	movlw	8
  2337   00066A  6FB3               	movwf	detect_color@color& (0+255),b
  2338                           
  2339                           ;color.c: 133:         }
  2340   00066C  EF3A  F003         	goto	l42
  2341   000670                     l4211:
  2342                           
  2343                           ; BSR set to: 0
  2344                           ;color.c: 135:             color = 0;
  2345   000670  0E00               	movlw	0
  2346   000672  6FB3               	movwf	detect_color@color& (0+255),b
  2347   000674                     l42:
  2348                           
  2349                           ; BSR set to: 0
  2350                           ;color.c: 138:     color_flag = 0;
  2351   000674  0E00               	movlw	0
  2352   000676  6E55               	movwf	_color_flag^0,c
  2353                           
  2354                           ;color.c: 139:     return color;
  2355   000678  51B3               	movf	detect_color@color& (0+255),w,b
  2356   00067A                     
  2357                           ; BSR set to: 0
  2358   00067A  0012               	return		;funcret
  2359   00067C                     __end_of_detect_color:
  2360                           	callstack 0
  2361                           
  2362 ;; *************** function ___xxtofl *****************
  2363 ;; Defined at:
  2364 ;;		line 10 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\xxtofl.c"
  2365 ;; Parameters:    Size  Location     Type
  2366 ;;  sign            1    wreg     unsigned char 
  2367 ;;  val             4    8[COMRAM] long 
  2368 ;; Auto vars:     Size  Location     Type
  2369 ;;  sign            1   16[COMRAM] unsigned char 
  2370 ;;  arg             4   18[COMRAM] unsigned long 
  2371 ;;  exp             1   17[COMRAM] unsigned char 
  2372 ;; Return value:  Size  Location     Type
  2373 ;;                  4    8[COMRAM] unsigned char 
  2374 ;; Registers used:
  2375 ;;		wreg, status,2, status,0
  2376 ;; Tracked objects:
  2377 ;;		On entry : 0/0
  2378 ;;		On exit  : 0/0
  2379 ;;		Unchanged: 0/0
  2380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2381 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2382 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2383 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2384 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2385 ;;Total ram usage:       14 bytes
  2386 ;; Hardware stack levels used: 1
  2387 ;; Hardware stack levels required when called: 7
  2388 ;; This function calls:
  2389 ;;		Nothing
  2390 ;; This function is called by:
  2391 ;;		_detect_color
  2392 ;; This function uses a non-reentrant model
  2393 ;;
  2394                           
  2395                           	psect	text3
  2396   00132C                     __ptext3:
  2397                           	callstack 0
  2398   00132C                     ___xxtofl:
  2399                           	callstack 22
  2400                           
  2401                           ; BSR set to: 0
  2402                           ;incstack = 0
  2403                           ;___xxtofl@sign stored from wreg
  2404   00132C  6E11               	movwf	___xxtofl@sign^0,c
  2405   00132E  5011               	movf	___xxtofl@sign^0,w,c
  2406   001330  B4D8               	btfsc	status,2,c
  2407   001332  EF9D  F009         	goto	u3141
  2408   001336  EF9F  F009         	goto	u3140
  2409   00133A                     u3141:
  2410   00133A  EFC1  F009         	goto	l1353
  2411   00133E                     u3140:
  2412   00133E  BE0C               	btfsc	(___xxtofl@val+3)^0,7,c
  2413   001340  EFA6  F009         	goto	u3150
  2414   001344  EFA4  F009         	goto	u3151
  2415   001348                     u3151:
  2416   001348  EFC1  F009         	goto	l1353
  2417   00134C                     u3150:
  2418   00134C  C009  F00D         	movff	___xxtofl@val,??___xxtofl
  2419   001350  C00A  F00E         	movff	___xxtofl@val+1,??___xxtofl+1
  2420   001354  C00B  F00F         	movff	___xxtofl@val+2,??___xxtofl+2
  2421   001358  C00C  F010         	movff	___xxtofl@val+3,??___xxtofl+3
  2422   00135C  1E0D               	comf	??___xxtofl^0,f,c
  2423   00135E  1E0E               	comf	(??___xxtofl+1)^0,f,c
  2424   001360  1E0F               	comf	(??___xxtofl+2)^0,f,c
  2425   001362  1E10               	comf	(??___xxtofl+3)^0,f,c
  2426   001364  2A0D               	incf	??___xxtofl^0,f,c
  2427   001366  0E00               	movlw	0
  2428   001368  220E               	addwfc	(??___xxtofl+1)^0,f,c
  2429   00136A  220F               	addwfc	(??___xxtofl+2)^0,f,c
  2430   00136C  2210               	addwfc	(??___xxtofl+3)^0,f,c
  2431   00136E  C00D  F013         	movff	??___xxtofl,___xxtofl@arg
  2432   001372  C00E  F014         	movff	??___xxtofl+1,___xxtofl@arg+1
  2433   001376  C00F  F015         	movff	??___xxtofl+2,___xxtofl@arg+2
  2434   00137A  C010  F016         	movff	??___xxtofl+3,___xxtofl@arg+3
  2435   00137E  EFC9  F009         	goto	l3623
  2436   001382                     l1353:
  2437   001382  C009  F013         	movff	___xxtofl@val,___xxtofl@arg
  2438   001386  C00A  F014         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2439   00138A  C00B  F015         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2440   00138E  C00C  F016         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2441   001392                     l3623:
  2442   001392  5009               	movf	___xxtofl@val^0,w,c
  2443   001394  100A               	iorwf	(___xxtofl@val+1)^0,w,c
  2444   001396  100B               	iorwf	(___xxtofl@val+2)^0,w,c
  2445   001398  100C               	iorwf	(___xxtofl@val+3)^0,w,c
  2446   00139A  A4D8               	btfss	status,2,c
  2447   00139C  EFD2  F009         	goto	u3161
  2448   0013A0  EFD4  F009         	goto	u3160
  2449   0013A4                     u3161:
  2450   0013A4  EFDE  F009         	goto	l3629
  2451   0013A8                     u3160:
  2452   0013A8  0E00               	movlw	0
  2453   0013AA  6E09               	movwf	?___xxtofl^0,c
  2454   0013AC  0E00               	movlw	0
  2455   0013AE  6E0A               	movwf	(?___xxtofl+1)^0,c
  2456   0013B0  0E00               	movlw	0
  2457   0013B2  6E0B               	movwf	(?___xxtofl+2)^0,c
  2458   0013B4  0E00               	movlw	0
  2459   0013B6  6E0C               	movwf	(?___xxtofl+3)^0,c
  2460   0013B8  EF6F  F00A         	goto	l1356
  2461   0013BC                     l3629:
  2462   0013BC  0E96               	movlw	150
  2463   0013BE  6E12               	movwf	___xxtofl@exp^0,c
  2464   0013C0  EFE8  F009         	goto	l3633
  2465   0013C4                     l3631:
  2466   0013C4  2A12               	incf	___xxtofl@exp^0,f,c
  2467   0013C6  90D8               	bcf	status,0,c
  2468   0013C8  3216               	rrcf	(___xxtofl@arg+3)^0,f,c
  2469   0013CA  3215               	rrcf	(___xxtofl@arg+2)^0,f,c
  2470   0013CC  3214               	rrcf	(___xxtofl@arg+1)^0,f,c
  2471   0013CE  3213               	rrcf	___xxtofl@arg^0,f,c
  2472   0013D0                     l3633:
  2473   0013D0  0E00               	movlw	0
  2474   0013D2  1413               	andwf	___xxtofl@arg^0,w,c
  2475   0013D4  6E0D               	movwf	??___xxtofl^0,c
  2476   0013D6  0E00               	movlw	0
  2477   0013D8  1414               	andwf	(___xxtofl@arg+1)^0,w,c
  2478   0013DA  6E0E               	movwf	(??___xxtofl+1)^0,c
  2479   0013DC  0E00               	movlw	0
  2480   0013DE  1415               	andwf	(___xxtofl@arg+2)^0,w,c
  2481   0013E0  6E0F               	movwf	(??___xxtofl+2)^0,c
  2482   0013E2  0EFE               	movlw	254
  2483   0013E4  1416               	andwf	(___xxtofl@arg+3)^0,w,c
  2484   0013E6  6E10               	movwf	(??___xxtofl+3)^0,c
  2485   0013E8  500D               	movf	??___xxtofl^0,w,c
  2486   0013EA  100E               	iorwf	(??___xxtofl+1)^0,w,c
  2487   0013EC  100F               	iorwf	(??___xxtofl+2)^0,w,c
  2488   0013EE  1010               	iorwf	(??___xxtofl+3)^0,w,c
  2489   0013F0  A4D8               	btfss	status,2,c
  2490   0013F2  EFFD  F009         	goto	u3171
  2491   0013F6  EFFF  F009         	goto	u3170
  2492   0013FA                     u3171:
  2493   0013FA  EFE2  F009         	goto	l3631
  2494   0013FE                     u3170:
  2495   0013FE  EF0D  F00A         	goto	l1360
  2496   001402                     l3635:
  2497   001402  2A12               	incf	___xxtofl@exp^0,f,c
  2498   001404  0E01               	movlw	1
  2499   001406  2613               	addwf	___xxtofl@arg^0,f,c
  2500   001408  0E00               	movlw	0
  2501   00140A  2214               	addwfc	(___xxtofl@arg+1)^0,f,c
  2502   00140C  2215               	addwfc	(___xxtofl@arg+2)^0,f,c
  2503   00140E  2216               	addwfc	(___xxtofl@arg+3)^0,f,c
  2504   001410  90D8               	bcf	status,0,c
  2505   001412  3216               	rrcf	(___xxtofl@arg+3)^0,f,c
  2506   001414  3215               	rrcf	(___xxtofl@arg+2)^0,f,c
  2507   001416  3214               	rrcf	(___xxtofl@arg+1)^0,f,c
  2508   001418  3213               	rrcf	___xxtofl@arg^0,f,c
  2509   00141A                     l1360:
  2510   00141A  0E00               	movlw	0
  2511   00141C  1413               	andwf	___xxtofl@arg^0,w,c
  2512   00141E  6E0D               	movwf	??___xxtofl^0,c
  2513   001420  0E00               	movlw	0
  2514   001422  1414               	andwf	(___xxtofl@arg+1)^0,w,c
  2515   001424  6E0E               	movwf	(??___xxtofl+1)^0,c
  2516   001426  0E00               	movlw	0
  2517   001428  1415               	andwf	(___xxtofl@arg+2)^0,w,c
  2518   00142A  6E0F               	movwf	(??___xxtofl+2)^0,c
  2519   00142C  0EFF               	movlw	255
  2520   00142E  1416               	andwf	(___xxtofl@arg+3)^0,w,c
  2521   001430  6E10               	movwf	(??___xxtofl+3)^0,c
  2522   001432  500D               	movf	??___xxtofl^0,w,c
  2523   001434  100E               	iorwf	(??___xxtofl+1)^0,w,c
  2524   001436  100F               	iorwf	(??___xxtofl+2)^0,w,c
  2525   001438  1010               	iorwf	(??___xxtofl+3)^0,w,c
  2526   00143A  A4D8               	btfss	status,2,c
  2527   00143C  EF22  F00A         	goto	u3181
  2528   001440  EF24  F00A         	goto	u3180
  2529   001444                     u3181:
  2530   001444  EF01  F00A         	goto	l3635
  2531   001448                     u3180:
  2532   001448  EF2C  F00A         	goto	l3643
  2533   00144C                     l3641:
  2534   00144C  0612               	decf	___xxtofl@exp^0,f,c
  2535   00144E  90D8               	bcf	status,0,c
  2536   001450  3613               	rlcf	___xxtofl@arg^0,f,c
  2537   001452  3614               	rlcf	(___xxtofl@arg+1)^0,f,c
  2538   001454  3615               	rlcf	(___xxtofl@arg+2)^0,f,c
  2539   001456  3616               	rlcf	(___xxtofl@arg+3)^0,f,c
  2540   001458                     l3643:
  2541   001458  BE15               	btfsc	(___xxtofl@arg+2)^0,7,c
  2542   00145A  EF31  F00A         	goto	u3191
  2543   00145E  EF33  F00A         	goto	u3190
  2544   001462                     u3191:
  2545   001462  EF3B  F00A         	goto	l1367
  2546   001466                     u3190:
  2547   001466  0E02               	movlw	2
  2548   001468  6012               	cpfslt	___xxtofl@exp^0,c
  2549   00146A  EF39  F00A         	goto	u3201
  2550   00146E  EF3B  F00A         	goto	u3200
  2551   001472                     u3201:
  2552   001472  EF26  F00A         	goto	l3641
  2553   001476                     u3200:
  2554   001476                     l1367:
  2555   001476  B012               	btfsc	___xxtofl@exp^0,0,c
  2556   001478  EF40  F00A         	goto	u3211
  2557   00147C  EF42  F00A         	goto	u3210
  2558   001480                     u3211:
  2559   001480  EF43  F00A         	goto	l3649
  2560   001484                     u3210:
  2561   001484  9E15               	bcf	(___xxtofl@arg+2)^0,7,c
  2562   001486                     l3649:
  2563   001486  90D8               	bcf	status,0,c
  2564   001488  3212               	rrcf	___xxtofl@exp^0,f,c
  2565   00148A  C012  F00D         	movff	___xxtofl@exp,??___xxtofl
  2566   00148E  6A0E               	clrf	(??___xxtofl+1)^0,c
  2567   001490  6A0F               	clrf	(??___xxtofl+2)^0,c
  2568   001492  6A10               	clrf	(??___xxtofl+3)^0,c
  2569   001494  C00D  F010         	movff	??___xxtofl,??___xxtofl+3
  2570   001498  6A0F               	clrf	(??___xxtofl+2)^0,c
  2571   00149A  6A0E               	clrf	(??___xxtofl+1)^0,c
  2572   00149C  6A0D               	clrf	??___xxtofl^0,c
  2573   00149E  500D               	movf	??___xxtofl^0,w,c
  2574   0014A0  1213               	iorwf	___xxtofl@arg^0,f,c
  2575   0014A2  500E               	movf	(??___xxtofl+1)^0,w,c
  2576   0014A4  1214               	iorwf	(___xxtofl@arg+1)^0,f,c
  2577   0014A6  500F               	movf	(??___xxtofl+2)^0,w,c
  2578   0014A8  1215               	iorwf	(___xxtofl@arg+2)^0,f,c
  2579   0014AA  5010               	movf	(??___xxtofl+3)^0,w,c
  2580   0014AC  1216               	iorwf	(___xxtofl@arg+3)^0,f,c
  2581   0014AE  5011               	movf	___xxtofl@sign^0,w,c
  2582   0014B0  B4D8               	btfsc	status,2,c
  2583   0014B2  EF5D  F00A         	goto	u3221
  2584   0014B6  EF5F  F00A         	goto	u3220
  2585   0014BA                     u3221:
  2586   0014BA  EF67  F00A         	goto	l3659
  2587   0014BE                     u3220:
  2588   0014BE  BE0C               	btfsc	(___xxtofl@val+3)^0,7,c
  2589   0014C0  EF66  F00A         	goto	u3230
  2590   0014C4  EF64  F00A         	goto	u3231
  2591   0014C8                     u3231:
  2592   0014C8  EF67  F00A         	goto	l3659
  2593   0014CC                     u3230:
  2594   0014CC  8E16               	bsf	(___xxtofl@arg+3)^0,7,c
  2595   0014CE                     l3659:
  2596   0014CE  C013  F009         	movff	___xxtofl@arg,?___xxtofl
  2597   0014D2  C014  F00A         	movff	___xxtofl@arg+1,?___xxtofl+1
  2598   0014D6  C015  F00B         	movff	___xxtofl@arg+2,?___xxtofl+2
  2599   0014DA  C016  F00C         	movff	___xxtofl@arg+3,?___xxtofl+3
  2600   0014DE                     l1356:
  2601   0014DE  0012               	return		;funcret
  2602   0014E0                     __end_of___xxtofl:
  2603                           	callstack 0
  2604                           
  2605 ;; *************** function ___fltol *****************
  2606 ;; Defined at:
  2607 ;;		line 43 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\fltol.c"
  2608 ;; Parameters:    Size  Location     Type
  2609 ;;  f1              4   72[COMRAM] unsigned char 
  2610 ;; Auto vars:     Size  Location     Type
  2611 ;;  exp1            1   77[COMRAM] unsigned char 
  2612 ;;  sign1           1   76[COMRAM] unsigned char 
  2613 ;; Return value:  Size  Location     Type
  2614 ;;                  4   72[COMRAM] long 
  2615 ;; Registers used:
  2616 ;;		wreg, status,2, status,0
  2617 ;; Tracked objects:
  2618 ;;		On entry : 0/0
  2619 ;;		On exit  : 0/0
  2620 ;;		Unchanged: 0/0
  2621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2622 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2623 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2624 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2625 ;;      Totals:         6       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2626 ;;Total ram usage:       10 bytes
  2627 ;; Hardware stack levels used: 1
  2628 ;; Hardware stack levels required when called: 7
  2629 ;; This function calls:
  2630 ;;		Nothing
  2631 ;; This function is called by:
  2632 ;;		_detect_color
  2633 ;; This function uses a non-reentrant model
  2634 ;;
  2635                           
  2636                           	psect	text4
  2637   00164C                     __ptext4:
  2638                           	callstack 0
  2639   00164C                     ___fltol:
  2640                           	callstack 22
  2641   00164C  344B               	rlcf	(___fltol@f1+2)^0,w,c
  2642   00164E  344C               	rlcf	(___fltol@f1+3)^0,w,c
  2643   001650  6E4E               	movwf	___fltol@exp1^0,c
  2644   001652  504E               	movf	___fltol@exp1^0,w,c
  2645   001654  A4D8               	btfss	status,2,c
  2646   001656  EF2F  F00B         	goto	u3891
  2647   00165A  EF31  F00B         	goto	u3890
  2648   00165E                     u3891:
  2649   00165E  EF3B  F00B         	goto	l4051
  2650   001662                     u3890:
  2651   001662                     l4047:
  2652   001662  0E00               	movlw	0
  2653   001664  6E49               	movwf	?___fltol^0,c
  2654   001666  0E00               	movlw	0
  2655   001668  6E4A               	movwf	(?___fltol+1)^0,c
  2656   00166A  0E00               	movlw	0
  2657   00166C  6E4B               	movwf	(?___fltol+2)^0,c
  2658   00166E  0E00               	movlw	0
  2659   001670  6E4C               	movwf	(?___fltol+3)^0,c
  2660   001672  EFA9  F00B         	goto	l995
  2661   001676                     l4051:
  2662   001676  C049  F09F         	movff	___fltol@f1,??___fltol
  2663   00167A  C04A  F0A0         	movff	___fltol@f1+1,??___fltol+1
  2664   00167E  C04B  F0A1         	movff	___fltol@f1+2,??___fltol+2
  2665   001682  C04C  F0A2         	movff	___fltol@f1+3,??___fltol+3
  2666   001686  0E20               	movlw	32
  2667   001688  EF4C  F00B         	goto	u3900
  2668   00168C                     u3905:
  2669   00168C  0100               	movlb	0	; () banked
  2670   00168E  90D8               	bcf	status,0,c
  2671   001690  33A2               	rrcf	(??___fltol+3)& (0+255),f,b
  2672   001692  33A1               	rrcf	(??___fltol+2)& (0+255),f,b
  2673   001694  33A0               	rrcf	(??___fltol+1)& (0+255),f,b
  2674   001696  339F               	rrcf	??___fltol& (0+255),f,b
  2675   001698                     u3900:
  2676   001698  2EE8               	decfsz	wreg,f,c
  2677   00169A  EF46  F00B         	goto	u3905
  2678   00169E  519F               	movf	??___fltol& (0+255),w,b
  2679   0016A0  6E4D               	movwf	___fltol@sign1^0,c
  2680   0016A2                     
  2681                           ; BSR set to: 0
  2682   0016A2  8E4B               	bsf	(___fltol@f1+2)^0,7,c
  2683   0016A4                     
  2684                           ; BSR set to: 0
  2685   0016A4  0EFF               	movlw	255
  2686   0016A6  1649               	andwf	___fltol@f1^0,f,c
  2687   0016A8  0EFF               	movlw	255
  2688   0016AA  164A               	andwf	(___fltol@f1+1)^0,f,c
  2689   0016AC  0EFF               	movlw	255
  2690   0016AE  164B               	andwf	(___fltol@f1+2)^0,f,c
  2691   0016B0  0E00               	movlw	0
  2692   0016B2  164C               	andwf	(___fltol@f1+3)^0,f,c
  2693   0016B4                     
  2694                           ; BSR set to: 0
  2695   0016B4  0E96               	movlw	150
  2696   0016B6  5E4E               	subwf	___fltol@exp1^0,f,c
  2697   0016B8                     
  2698                           ; BSR set to: 0
  2699   0016B8  BE4E               	btfsc	___fltol@exp1^0,7,c
  2700   0016BA  EF63  F00B         	goto	u3910
  2701   0016BE  EF61  F00B         	goto	u3911
  2702   0016C2                     u3911:
  2703   0016C2  EF79  F00B         	goto	l4071
  2704   0016C6                     u3910:
  2705   0016C6                     
  2706                           ; BSR set to: 0
  2707   0016C6  504E               	movf	___fltol@exp1^0,w,c
  2708   0016C8  0A80               	xorlw	128
  2709   0016CA  0F97               	addlw	151
  2710   0016CC  B0D8               	btfsc	status,0,c
  2711   0016CE  EF6B  F00B         	goto	u3921
  2712   0016D2  EF6D  F00B         	goto	u3920
  2713   0016D6                     u3921:
  2714   0016D6  EF6F  F00B         	goto	l4067
  2715   0016DA                     u3920:
  2716   0016DA  EF31  F00B         	goto	l4047
  2717   0016DE                     l4067:
  2718   0016DE  90D8               	bcf	status,0,c
  2719   0016E0  324C               	rrcf	(___fltol@f1+3)^0,f,c
  2720   0016E2  324B               	rrcf	(___fltol@f1+2)^0,f,c
  2721   0016E4  324A               	rrcf	(___fltol@f1+1)^0,f,c
  2722   0016E6  3249               	rrcf	___fltol@f1^0,f,c
  2723   0016E8  3E4E               	incfsz	___fltol@exp1^0,f,c
  2724   0016EA  EF6F  F00B         	goto	l4067
  2725   0016EE  EF91  F00B         	goto	l4081
  2726   0016F2                     l4071:
  2727                           
  2728                           ; BSR set to: 0
  2729   0016F2  0E1F               	movlw	31
  2730   0016F4  644E               	cpfsgt	___fltol@exp1^0,c
  2731   0016F6  EF7F  F00B         	goto	u3931
  2732   0016FA  EF81  F00B         	goto	u3930
  2733   0016FE                     u3931:
  2734   0016FE  EF89  F00B         	goto	l4079
  2735   001702                     u3930:
  2736   001702  EF31  F00B         	goto	l4047
  2737   001706                     l4077:
  2738   001706  90D8               	bcf	status,0,c
  2739   001708  3649               	rlcf	___fltol@f1^0,f,c
  2740   00170A  364A               	rlcf	(___fltol@f1+1)^0,f,c
  2741   00170C  364B               	rlcf	(___fltol@f1+2)^0,f,c
  2742   00170E  364C               	rlcf	(___fltol@f1+3)^0,f,c
  2743   001710  064E               	decf	___fltol@exp1^0,f,c
  2744   001712                     l4079:
  2745   001712  504E               	movf	___fltol@exp1^0,w,c
  2746   001714  A4D8               	btfss	status,2,c
  2747   001716  EF8F  F00B         	goto	u3941
  2748   00171A  EF91  F00B         	goto	u3940
  2749   00171E                     u3941:
  2750   00171E  EF83  F00B         	goto	l4077
  2751   001722                     u3940:
  2752   001722                     l4081:
  2753   001722  504D               	movf	___fltol@sign1^0,w,c
  2754   001724  B4D8               	btfsc	status,2,c
  2755   001726  EF97  F00B         	goto	u3951
  2756   00172A  EF99  F00B         	goto	u3950
  2757   00172E                     u3951:
  2758   00172E  EFA1  F00B         	goto	l4085
  2759   001732                     u3950:
  2760   001732  1E4C               	comf	(___fltol@f1+3)^0,f,c
  2761   001734  1E4B               	comf	(___fltol@f1+2)^0,f,c
  2762   001736  1E4A               	comf	(___fltol@f1+1)^0,f,c
  2763   001738  6C49               	negf	___fltol@f1^0,c
  2764   00173A  0E00               	movlw	0
  2765   00173C  224A               	addwfc	(___fltol@f1+1)^0,f,c
  2766   00173E  224B               	addwfc	(___fltol@f1+2)^0,f,c
  2767   001740  224C               	addwfc	(___fltol@f1+3)^0,f,c
  2768   001742                     l4085:
  2769   001742  C049  F049         	movff	___fltol@f1,?___fltol
  2770   001746  C04A  F04A         	movff	___fltol@f1+1,?___fltol+1
  2771   00174A  C04B  F04B         	movff	___fltol@f1+2,?___fltol+2
  2772   00174E  C04C  F04C         	movff	___fltol@f1+3,?___fltol+3
  2773   001752                     l995:
  2774   001752  0012               	return		;funcret
  2775   001754                     __end_of___fltol:
  2776                           	callstack 0
  2777                           
  2778 ;; *************** function ___flmul *****************
  2779 ;; Defined at:
  2780 ;;		line 8 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\sprcmul.c"
  2781 ;; Parameters:    Size  Location     Type
  2782 ;;  b               4   47[COMRAM] long 
  2783 ;;  a               4   51[COMRAM] long 
  2784 ;; Auto vars:     Size  Location     Type
  2785 ;;  prod            4   66[COMRAM] struct .
  2786 ;;  grs             4   60[COMRAM] unsigned long 
  2787 ;;  temp            2   70[COMRAM] struct .
  2788 ;;  bexp            1   65[COMRAM] unsigned char 
  2789 ;;  aexp            1   64[COMRAM] unsigned char 
  2790 ;;  sign            1   59[COMRAM] unsigned char 
  2791 ;; Return value:  Size  Location     Type
  2792 ;;                  4   47[COMRAM] unsigned char 
  2793 ;; Registers used:
  2794 ;;		wreg, status,2, status,0, prodl, prodh
  2795 ;; Tracked objects:
  2796 ;;		On entry : 0/0
  2797 ;;		On exit  : 0/0
  2798 ;;		Unchanged: 0/0
  2799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2800 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2801 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2802 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2803 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2804 ;;Total ram usage:       25 bytes
  2805 ;; Hardware stack levels used: 1
  2806 ;; Hardware stack levels required when called: 7
  2807 ;; This function calls:
  2808 ;;		Nothing
  2809 ;; This function is called by:
  2810 ;;		_detect_color
  2811 ;; This function uses a non-reentrant model
  2812 ;;
  2813                           
  2814                           	psect	text5
  2815   00067C                     __ptext5:
  2816                           	callstack 0
  2817   00067C                     ___flmul:
  2818                           	callstack 22
  2819   00067C  5033               	movf	(___flmul@b+3)^0,w,c
  2820   00067E  0B80               	andlw	128
  2821   000680  6E3C               	movwf	___flmul@sign^0,c
  2822   000682  5033               	movf	(___flmul@b+3)^0,w,c
  2823   000684  2433               	addwf	(___flmul@b+3)^0,w,c
  2824   000686  6E42               	movwf	___flmul@bexp^0,c
  2825   000688  AE32               	btfss	(___flmul@b+2)^0,7,c
  2826   00068A  EF49  F003         	goto	u2881
  2827   00068E  EF4B  F003         	goto	u2880
  2828   000692                     u2881:
  2829   000692  EF4C  F003         	goto	l3449
  2830   000696                     u2880:
  2831   000696  8042               	bsf	___flmul@bexp^0,0,c
  2832   000698                     l3449:
  2833   000698  5042               	movf	___flmul@bexp^0,w,c
  2834   00069A  B4D8               	btfsc	status,2,c
  2835   00069C  EF52  F003         	goto	u2891
  2836   0006A0  EF54  F003         	goto	u2890
  2837   0006A4                     u2891:
  2838   0006A4  EF67  F003         	goto	l3457
  2839   0006A8                     u2890:
  2840   0006A8  2842               	incf	___flmul@bexp^0,w,c
  2841   0006AA  A4D8               	btfss	status,2,c
  2842   0006AC  EF5A  F003         	goto	u2901
  2843   0006B0  EF5C  F003         	goto	u2900
  2844   0006B4                     u2901:
  2845   0006B4  EF64  F003         	goto	l3455
  2846   0006B8                     u2900:
  2847   0006B8  0E00               	movlw	0
  2848   0006BA  6E30               	movwf	___flmul@b^0,c
  2849   0006BC  0E00               	movlw	0
  2850   0006BE  6E31               	movwf	(___flmul@b+1)^0,c
  2851   0006C0  0E00               	movlw	0
  2852   0006C2  6E32               	movwf	(___flmul@b+2)^0,c
  2853   0006C4  0E00               	movlw	0
  2854   0006C6  6E33               	movwf	(___flmul@b+3)^0,c
  2855   0006C8                     l3455:
  2856   0006C8  8E32               	bsf	(___flmul@b+2)^0,7,c
  2857   0006CA  EF6F  F003         	goto	l3459
  2858   0006CE                     l3457:
  2859   0006CE  0E00               	movlw	0
  2860   0006D0  6E30               	movwf	___flmul@b^0,c
  2861   0006D2  0E00               	movlw	0
  2862   0006D4  6E31               	movwf	(___flmul@b+1)^0,c
  2863   0006D6  0E00               	movlw	0
  2864   0006D8  6E32               	movwf	(___flmul@b+2)^0,c
  2865   0006DA  0E00               	movlw	0
  2866   0006DC  6E33               	movwf	(___flmul@b+3)^0,c
  2867   0006DE                     l3459:
  2868   0006DE  5037               	movf	(___flmul@a+3)^0,w,c
  2869   0006E0  0B80               	andlw	128
  2870   0006E2  1A3C               	xorwf	___flmul@sign^0,f,c
  2871   0006E4  5037               	movf	(___flmul@a+3)^0,w,c
  2872   0006E6  2437               	addwf	(___flmul@a+3)^0,w,c
  2873   0006E8  6E41               	movwf	___flmul@aexp^0,c
  2874   0006EA  AE36               	btfss	(___flmul@a+2)^0,7,c
  2875   0006EC  EF7A  F003         	goto	u2911
  2876   0006F0  EF7C  F003         	goto	u2910
  2877   0006F4                     u2911:
  2878   0006F4  EF7D  F003         	goto	l3467
  2879   0006F8                     u2910:
  2880   0006F8  8041               	bsf	___flmul@aexp^0,0,c
  2881   0006FA                     l3467:
  2882   0006FA  5041               	movf	___flmul@aexp^0,w,c
  2883   0006FC  B4D8               	btfsc	status,2,c
  2884   0006FE  EF83  F003         	goto	u2921
  2885   000702  EF85  F003         	goto	u2920
  2886   000706                     u2921:
  2887   000706  EF98  F003         	goto	l3475
  2888   00070A                     u2920:
  2889   00070A  2841               	incf	___flmul@aexp^0,w,c
  2890   00070C  A4D8               	btfss	status,2,c
  2891   00070E  EF8B  F003         	goto	u2931
  2892   000712  EF8D  F003         	goto	u2930
  2893   000716                     u2931:
  2894   000716  EF95  F003         	goto	l3473
  2895   00071A                     u2930:
  2896   00071A  0E00               	movlw	0
  2897   00071C  6E34               	movwf	___flmul@a^0,c
  2898   00071E  0E00               	movlw	0
  2899   000720  6E35               	movwf	(___flmul@a+1)^0,c
  2900   000722  0E00               	movlw	0
  2901   000724  6E36               	movwf	(___flmul@a+2)^0,c
  2902   000726  0E00               	movlw	0
  2903   000728  6E37               	movwf	(___flmul@a+3)^0,c
  2904   00072A                     l3473:
  2905   00072A  8E36               	bsf	(___flmul@a+2)^0,7,c
  2906   00072C  EFA0  F003         	goto	l1312
  2907   000730                     l3475:
  2908   000730  0E00               	movlw	0
  2909   000732  6E34               	movwf	___flmul@a^0,c
  2910   000734  0E00               	movlw	0
  2911   000736  6E35               	movwf	(___flmul@a+1)^0,c
  2912   000738  0E00               	movlw	0
  2913   00073A  6E36               	movwf	(___flmul@a+2)^0,c
  2914   00073C  0E00               	movlw	0
  2915   00073E  6E37               	movwf	(___flmul@a+3)^0,c
  2916   000740                     l1312:
  2917   000740  5041               	movf	___flmul@aexp^0,w,c
  2918   000742  B4D8               	btfsc	status,2,c
  2919   000744  EFA6  F003         	goto	u2941
  2920   000748  EFA8  F003         	goto	u2940
  2921   00074C                     u2941:
  2922   00074C  EFB0  F003         	goto	l3479
  2923   000750                     u2940:
  2924   000750  5042               	movf	___flmul@bexp^0,w,c
  2925   000752  A4D8               	btfss	status,2,c
  2926   000754  EFAE  F003         	goto	u2951
  2927   000758  EFB0  F003         	goto	u2950
  2928   00075C                     u2951:
  2929   00075C  EFBA  F003         	goto	l3483
  2930   000760                     u2950:
  2931   000760                     l3479:
  2932   000760  0E00               	movlw	0
  2933   000762  6E30               	movwf	?___flmul^0,c
  2934   000764  0E00               	movlw	0
  2935   000766  6E31               	movwf	(?___flmul+1)^0,c
  2936   000768  0E00               	movlw	0
  2937   00076A  6E32               	movwf	(?___flmul+2)^0,c
  2938   00076C  0E00               	movlw	0
  2939   00076E  6E33               	movwf	(?___flmul+3)^0,c
  2940   000770  EF52  F005         	goto	l1316
  2941   000774                     l3483:
  2942   000774  5036               	movf	(___flmul@a+2)^0,w,c
  2943   000776  0230               	mulwf	___flmul@b^0,c
  2944   000778  CFF3 F047          	movff	prodl,___flmul@temp
  2945   00077C  CFF4 F048          	movff	prodh,___flmul@temp+1
  2946   000780  5047               	movf	___flmul@temp^0,w,c
  2947   000782  6E3D               	movwf	___flmul@grs^0,c
  2948   000784  6A3E               	clrf	(___flmul@grs+1)^0,c
  2949   000786  6A3F               	clrf	(___flmul@grs+2)^0,c
  2950   000788  6A40               	clrf	(___flmul@grs+3)^0,c
  2951   00078A  5048               	movf	(___flmul@temp+1)^0,w,c
  2952   00078C  6E43               	movwf	___flmul@prod^0,c
  2953   00078E  6A44               	clrf	(___flmul@prod+1)^0,c
  2954   000790  6A45               	clrf	(___flmul@prod+2)^0,c
  2955   000792  6A46               	clrf	(___flmul@prod+3)^0,c
  2956   000794  5035               	movf	(___flmul@a+1)^0,w,c
  2957   000796  0231               	mulwf	(___flmul@b+1)^0,c
  2958   000798  CFF3 F047          	movff	prodl,___flmul@temp
  2959   00079C  CFF4 F048          	movff	prodh,___flmul@temp+1
  2960   0007A0  5047               	movf	___flmul@temp^0,w,c
  2961   0007A2  263D               	addwf	___flmul@grs^0,f,c
  2962   0007A4  0E00               	movlw	0
  2963   0007A6  223E               	addwfc	(___flmul@grs+1)^0,f,c
  2964   0007A8  223F               	addwfc	(___flmul@grs+2)^0,f,c
  2965   0007AA  2240               	addwfc	(___flmul@grs+3)^0,f,c
  2966   0007AC  5048               	movf	(___flmul@temp+1)^0,w,c
  2967   0007AE  2643               	addwf	___flmul@prod^0,f,c
  2968   0007B0  0E00               	movlw	0
  2969   0007B2  2244               	addwfc	(___flmul@prod+1)^0,f,c
  2970   0007B4  2245               	addwfc	(___flmul@prod+2)^0,f,c
  2971   0007B6  2246               	addwfc	(___flmul@prod+3)^0,f,c
  2972   0007B8  5034               	movf	___flmul@a^0,w,c
  2973   0007BA  0232               	mulwf	(___flmul@b+2)^0,c
  2974   0007BC  CFF3 F047          	movff	prodl,___flmul@temp
  2975   0007C0  CFF4 F048          	movff	prodh,___flmul@temp+1
  2976   0007C4  5047               	movf	___flmul@temp^0,w,c
  2977   0007C6  263D               	addwf	___flmul@grs^0,f,c
  2978   0007C8  0E00               	movlw	0
  2979   0007CA  223E               	addwfc	(___flmul@grs+1)^0,f,c
  2980   0007CC  223F               	addwfc	(___flmul@grs+2)^0,f,c
  2981   0007CE  2240               	addwfc	(___flmul@grs+3)^0,f,c
  2982   0007D0  5048               	movf	(___flmul@temp+1)^0,w,c
  2983   0007D2  2643               	addwf	___flmul@prod^0,f,c
  2984   0007D4  0E00               	movlw	0
  2985   0007D6  2244               	addwfc	(___flmul@prod+1)^0,f,c
  2986   0007D8  2245               	addwfc	(___flmul@prod+2)^0,f,c
  2987   0007DA  2246               	addwfc	(___flmul@prod+3)^0,f,c
  2988   0007DC  C03F  F040         	movff	___flmul@grs+2,___flmul@grs+3
  2989   0007E0  C03E  F03F         	movff	___flmul@grs+1,___flmul@grs+2
  2990   0007E4  C03D  F03E         	movff	___flmul@grs,___flmul@grs+1
  2991   0007E8  6A3D               	clrf	___flmul@grs^0,c
  2992   0007EA  5034               	movf	___flmul@a^0,w,c
  2993   0007EC  0231               	mulwf	(___flmul@b+1)^0,c
  2994   0007EE  CFF3 F047          	movff	prodl,___flmul@temp
  2995   0007F2  CFF4 F048          	movff	prodh,___flmul@temp+1
  2996   0007F6  5047               	movf	___flmul@temp^0,w,c
  2997   0007F8  263D               	addwf	___flmul@grs^0,f,c
  2998   0007FA  5048               	movf	(___flmul@temp+1)^0,w,c
  2999   0007FC  223E               	addwfc	(___flmul@grs+1)^0,f,c
  3000   0007FE  0E00               	movlw	0
  3001   000800  223F               	addwfc	(___flmul@grs+2)^0,f,c
  3002   000802  0E00               	movlw	0
  3003   000804  2240               	addwfc	(___flmul@grs+3)^0,f,c
  3004   000806  5035               	movf	(___flmul@a+1)^0,w,c
  3005   000808  0230               	mulwf	___flmul@b^0,c
  3006   00080A  CFF3 F047          	movff	prodl,___flmul@temp
  3007   00080E  CFF4 F048          	movff	prodh,___flmul@temp+1
  3008   000812  5047               	movf	___flmul@temp^0,w,c
  3009   000814  263D               	addwf	___flmul@grs^0,f,c
  3010   000816  5048               	movf	(___flmul@temp+1)^0,w,c
  3011   000818  223E               	addwfc	(___flmul@grs+1)^0,f,c
  3012   00081A  0E00               	movlw	0
  3013   00081C  223F               	addwfc	(___flmul@grs+2)^0,f,c
  3014   00081E  0E00               	movlw	0
  3015   000820  2240               	addwfc	(___flmul@grs+3)^0,f,c
  3016   000822  C03F  F040         	movff	___flmul@grs+2,___flmul@grs+3
  3017   000826  C03E  F03F         	movff	___flmul@grs+1,___flmul@grs+2
  3018   00082A  C03D  F03E         	movff	___flmul@grs,___flmul@grs+1
  3019   00082E  6A3D               	clrf	___flmul@grs^0,c
  3020   000830  5034               	movf	___flmul@a^0,w,c
  3021   000832  0230               	mulwf	___flmul@b^0,c
  3022   000834  CFF3 F047          	movff	prodl,___flmul@temp
  3023   000838  CFF4 F048          	movff	prodh,___flmul@temp+1
  3024   00083C  5047               	movf	___flmul@temp^0,w,c
  3025   00083E  263D               	addwf	___flmul@grs^0,f,c
  3026   000840  5048               	movf	(___flmul@temp+1)^0,w,c
  3027   000842  223E               	addwfc	(___flmul@grs+1)^0,f,c
  3028   000844  0E00               	movlw	0
  3029   000846  223F               	addwfc	(___flmul@grs+2)^0,f,c
  3030   000848  0E00               	movlw	0
  3031   00084A  2240               	addwfc	(___flmul@grs+3)^0,f,c
  3032   00084C  5036               	movf	(___flmul@a+2)^0,w,c
  3033   00084E  0231               	mulwf	(___flmul@b+1)^0,c
  3034   000850  CFF3 F047          	movff	prodl,___flmul@temp
  3035   000854  CFF4 F048          	movff	prodh,___flmul@temp+1
  3036   000858  5047               	movf	___flmul@temp^0,w,c
  3037   00085A  2643               	addwf	___flmul@prod^0,f,c
  3038   00085C  5048               	movf	(___flmul@temp+1)^0,w,c
  3039   00085E  2244               	addwfc	(___flmul@prod+1)^0,f,c
  3040   000860  0E00               	movlw	0
  3041   000862  2245               	addwfc	(___flmul@prod+2)^0,f,c
  3042   000864  0E00               	movlw	0
  3043   000866  2246               	addwfc	(___flmul@prod+3)^0,f,c
  3044   000868  5035               	movf	(___flmul@a+1)^0,w,c
  3045   00086A  0232               	mulwf	(___flmul@b+2)^0,c
  3046   00086C  CFF3 F047          	movff	prodl,___flmul@temp
  3047   000870  CFF4 F048          	movff	prodh,___flmul@temp+1
  3048   000874  5047               	movf	___flmul@temp^0,w,c
  3049   000876  2643               	addwf	___flmul@prod^0,f,c
  3050   000878  5048               	movf	(___flmul@temp+1)^0,w,c
  3051   00087A  2244               	addwfc	(___flmul@prod+1)^0,f,c
  3052   00087C  0E00               	movlw	0
  3053   00087E  2245               	addwfc	(___flmul@prod+2)^0,f,c
  3054   000880  0E00               	movlw	0
  3055   000882  2246               	addwfc	(___flmul@prod+3)^0,f,c
  3056   000884  5036               	movf	(___flmul@a+2)^0,w,c
  3057   000886  0232               	mulwf	(___flmul@b+2)^0,c
  3058   000888  CFF3 F047          	movff	prodl,___flmul@temp
  3059   00088C  CFF4 F048          	movff	prodh,___flmul@temp+1
  3060   000890  5047               	movf	___flmul@temp^0,w,c
  3061   000892  6E38               	movwf	??___flmul^0,c
  3062   000894  5048               	movf	(___flmul@temp+1)^0,w,c
  3063   000896  6E39               	movwf	(??___flmul+1)^0,c
  3064   000898  6A3A               	clrf	(??___flmul+2)^0,c
  3065   00089A  6A3B               	clrf	(??___flmul+3)^0,c
  3066   00089C  C03A  F03B         	movff	??___flmul+2,??___flmul+3
  3067   0008A0  C039  F03A         	movff	??___flmul+1,??___flmul+2
  3068   0008A4  C038  F039         	movff	??___flmul,??___flmul+1
  3069   0008A8  6A38               	clrf	??___flmul^0,c
  3070   0008AA  5038               	movf	??___flmul^0,w,c
  3071   0008AC  2643               	addwf	___flmul@prod^0,f,c
  3072   0008AE  5039               	movf	(??___flmul+1)^0,w,c
  3073   0008B0  2244               	addwfc	(___flmul@prod+1)^0,f,c
  3074   0008B2  503A               	movf	(??___flmul+2)^0,w,c
  3075   0008B4  2245               	addwfc	(___flmul@prod+2)^0,f,c
  3076   0008B6  503B               	movf	(??___flmul+3)^0,w,c
  3077   0008B8  2246               	addwfc	(___flmul@prod+3)^0,f,c
  3078   0008BA  C03D  F038         	movff	___flmul@grs,??___flmul
  3079   0008BE  C03E  F039         	movff	___flmul@grs+1,??___flmul+1
  3080   0008C2  C03F  F03A         	movff	___flmul@grs+2,??___flmul+2
  3081   0008C6  C040  F03B         	movff	___flmul@grs+3,??___flmul+3
  3082   0008CA  0E19               	movlw	25
  3083   0008CC  EF6D  F004         	goto	u2960
  3084   0008D0                     u2965:
  3085   0008D0  90D8               	bcf	status,0,c
  3086   0008D2  323B               	rrcf	(??___flmul+3)^0,f,c
  3087   0008D4  323A               	rrcf	(??___flmul+2)^0,f,c
  3088   0008D6  3239               	rrcf	(??___flmul+1)^0,f,c
  3089   0008D8  3238               	rrcf	??___flmul^0,f,c
  3090   0008DA                     u2960:
  3091   0008DA  2EE8               	decfsz	wreg,f,c
  3092   0008DC  EF68  F004         	goto	u2965
  3093   0008E0  5038               	movf	??___flmul^0,w,c
  3094   0008E2  2643               	addwf	___flmul@prod^0,f,c
  3095   0008E4  5039               	movf	(??___flmul+1)^0,w,c
  3096   0008E6  2244               	addwfc	(___flmul@prod+1)^0,f,c
  3097   0008E8  503A               	movf	(??___flmul+2)^0,w,c
  3098   0008EA  2245               	addwfc	(___flmul@prod+2)^0,f,c
  3099   0008EC  503B               	movf	(??___flmul+3)^0,w,c
  3100   0008EE  2246               	addwfc	(___flmul@prod+3)^0,f,c
  3101   0008F0  C03F  F040         	movff	___flmul@grs+2,___flmul@grs+3
  3102   0008F4  C03E  F03F         	movff	___flmul@grs+1,___flmul@grs+2
  3103   0008F8  C03D  F03E         	movff	___flmul@grs,___flmul@grs+1
  3104   0008FC  6A3D               	clrf	___flmul@grs^0,c
  3105   0008FE  5041               	movf	___flmul@aexp^0,w,c
  3106   000900  C042  F038         	movff	___flmul@bexp,??___flmul
  3107   000904  6A39               	clrf	(??___flmul+1)^0,c
  3108   000906  2638               	addwf	??___flmul^0,f,c
  3109   000908  0E00               	movlw	0
  3110   00090A  2239               	addwfc	(??___flmul+1)^0,f,c
  3111   00090C  0E82               	movlw	130
  3112   00090E  2438               	addwf	??___flmul^0,w,c
  3113   000910  6E47               	movwf	___flmul@temp^0,c
  3114   000912  0EFF               	movlw	255
  3115   000914  2039               	addwfc	(??___flmul+1)^0,w,c
  3116   000916  6E48               	movwf	(___flmul@temp+1)^0,c
  3117   000918  EFA3  F004         	goto	l3531
  3118   00091C                     l3525:
  3119   00091C  90D8               	bcf	status,0,c
  3120   00091E  3643               	rlcf	___flmul@prod^0,f,c
  3121   000920  3644               	rlcf	(___flmul@prod+1)^0,f,c
  3122   000922  3645               	rlcf	(___flmul@prod+2)^0,f,c
  3123   000924  3646               	rlcf	(___flmul@prod+3)^0,f,c
  3124   000926  AE40               	btfss	(___flmul@grs+3)^0,7,c
  3125   000928  EF98  F004         	goto	u2971
  3126   00092C  EF9A  F004         	goto	u2970
  3127   000930                     u2971:
  3128   000930  EF9B  F004         	goto	l1319
  3129   000934                     u2970:
  3130   000934  8043               	bsf	___flmul@prod^0,0,c
  3131   000936                     l1319:
  3132   000936  90D8               	bcf	status,0,c
  3133   000938  363D               	rlcf	___flmul@grs^0,f,c
  3134   00093A  363E               	rlcf	(___flmul@grs+1)^0,f,c
  3135   00093C  363F               	rlcf	(___flmul@grs+2)^0,f,c
  3136   00093E  3640               	rlcf	(___flmul@grs+3)^0,f,c
  3137   000940  0647               	decf	___flmul@temp^0,f,c
  3138   000942  A0D8               	btfss	status,0,c
  3139   000944  0648               	decf	(___flmul@temp+1)^0,f,c
  3140   000946                     l3531:
  3141   000946  AE45               	btfss	(___flmul@prod+2)^0,7,c
  3142   000948  EFA8  F004         	goto	u2981
  3143   00094C  EFAA  F004         	goto	u2980
  3144   000950                     u2981:
  3145   000950  EF8E  F004         	goto	l3525
  3146   000954                     u2980:
  3147   000954  0E00               	movlw	0
  3148   000956  6E41               	movwf	___flmul@aexp^0,c
  3149   000958  AE40               	btfss	(___flmul@grs+3)^0,7,c
  3150   00095A  EFB1  F004         	goto	u2991
  3151   00095E  EFB3  F004         	goto	u2990
  3152   000962                     u2991:
  3153   000962  EFD7  F004         	goto	l1321
  3154   000966                     u2990:
  3155   000966  0EFF               	movlw	255
  3156   000968  143D               	andwf	___flmul@grs^0,w,c
  3157   00096A  6E38               	movwf	??___flmul^0,c
  3158   00096C  0EFF               	movlw	255
  3159   00096E  143E               	andwf	(___flmul@grs+1)^0,w,c
  3160   000970  6E39               	movwf	(??___flmul+1)^0,c
  3161   000972  0EFF               	movlw	255
  3162   000974  143F               	andwf	(___flmul@grs+2)^0,w,c
  3163   000976  6E3A               	movwf	(??___flmul+2)^0,c
  3164   000978  0E7F               	movlw	127
  3165   00097A  1440               	andwf	(___flmul@grs+3)^0,w,c
  3166   00097C  6E3B               	movwf	(??___flmul+3)^0,c
  3167   00097E  5038               	movf	??___flmul^0,w,c
  3168   000980  1039               	iorwf	(??___flmul+1)^0,w,c
  3169   000982  103A               	iorwf	(??___flmul+2)^0,w,c
  3170   000984  103B               	iorwf	(??___flmul+3)^0,w,c
  3171   000986  B4D8               	btfsc	status,2,c
  3172   000988  EFC8  F004         	goto	u3001
  3173   00098C  EFCA  F004         	goto	u3000
  3174   000990                     u3001:
  3175   000990  EFCE  F004         	goto	l1322
  3176   000994                     u3000:
  3177   000994                     l3539:
  3178   000994  0E01               	movlw	1
  3179   000996  6E41               	movwf	___flmul@aexp^0,c
  3180   000998  EFD7  F004         	goto	l1321
  3181   00099C                     l1322:
  3182   00099C  A043               	btfss	___flmul@prod^0,0,c
  3183   00099E  EFD3  F004         	goto	u3011
  3184   0009A2  EFD5  F004         	goto	u3010
  3185   0009A6                     u3011:
  3186   0009A6  EFD7  F004         	goto	l1321
  3187   0009AA                     u3010:
  3188   0009AA  EFCA  F004         	goto	l3539
  3189   0009AE                     l1321:
  3190   0009AE  5041               	movf	___flmul@aexp^0,w,c
  3191   0009B0  B4D8               	btfsc	status,2,c
  3192   0009B2  EFDD  F004         	goto	u3021
  3193   0009B6  EFDF  F004         	goto	u3020
  3194   0009BA                     u3021:
  3195   0009BA  EF03  F005         	goto	l3551
  3196   0009BE                     u3020:
  3197   0009BE  0E01               	movlw	1
  3198   0009C0  2643               	addwf	___flmul@prod^0,f,c
  3199   0009C2  0E00               	movlw	0
  3200   0009C4  2244               	addwfc	(___flmul@prod+1)^0,f,c
  3201   0009C6  2245               	addwfc	(___flmul@prod+2)^0,f,c
  3202   0009C8  2246               	addwfc	(___flmul@prod+3)^0,f,c
  3203   0009CA  A046               	btfss	(___flmul@prod+3)^0,0,c
  3204   0009CC  EFEA  F004         	goto	u3031
  3205   0009D0  EFEC  F004         	goto	u3030
  3206   0009D4                     u3031:
  3207   0009D4  EF03  F005         	goto	l3551
  3208   0009D8                     u3030:
  3209   0009D8  C043  F038         	movff	___flmul@prod,??___flmul
  3210   0009DC  C044  F039         	movff	___flmul@prod+1,??___flmul+1
  3211   0009E0  C045  F03A         	movff	___flmul@prod+2,??___flmul+2
  3212   0009E4  C046  F03B         	movff	___flmul@prod+3,??___flmul+3
  3213   0009E8  343B               	rlcf	(??___flmul+3)^0,w,c
  3214   0009EA  323B               	rrcf	(??___flmul+3)^0,f,c
  3215   0009EC  323A               	rrcf	(??___flmul+2)^0,f,c
  3216   0009EE  3239               	rrcf	(??___flmul+1)^0,f,c
  3217   0009F0  3238               	rrcf	??___flmul^0,f,c
  3218   0009F2  C038  F043         	movff	??___flmul,___flmul@prod
  3219   0009F6  C039  F044         	movff	??___flmul+1,___flmul@prod+1
  3220   0009FA  C03A  F045         	movff	??___flmul+2,___flmul@prod+2
  3221   0009FE  C03B  F046         	movff	??___flmul+3,___flmul@prod+3
  3222   000A02  4A47               	infsnz	___flmul@temp^0,f,c
  3223   000A04  2A48               	incf	(___flmul@temp+1)^0,f,c
  3224   000A06                     l3551:
  3225   000A06  BE48               	btfsc	(___flmul@temp+1)^0,7,c
  3226   000A08  EF0E  F005         	goto	u3041
  3227   000A0C  5048               	movf	(___flmul@temp+1)^0,w,c
  3228   000A0E  E108               	bnz	u3040
  3229   000A10  2847               	incf	___flmul@temp^0,w,c
  3230   000A12  A0D8               	btfss	status,0,c
  3231   000A14  EF0E  F005         	goto	u3041
  3232   000A18  EF10  F005         	goto	u3040
  3233   000A1C                     u3041:
  3234   000A1C  EF1A  F005         	goto	l3555
  3235   000A20                     u3040:
  3236   000A20  0E00               	movlw	0
  3237   000A22  6E43               	movwf	___flmul@prod^0,c
  3238   000A24  0E00               	movlw	0
  3239   000A26  6E44               	movwf	(___flmul@prod+1)^0,c
  3240   000A28  0E80               	movlw	128
  3241   000A2A  6E45               	movwf	(___flmul@prod+2)^0,c
  3242   000A2C  0E7F               	movlw	127
  3243   000A2E  6E46               	movwf	(___flmul@prod+3)^0,c
  3244   000A30  EF48  F005         	goto	l3567
  3245   000A34                     l3555:
  3246   000A34  BE48               	btfsc	(___flmul@temp+1)^0,7,c
  3247   000A36  EF27  F005         	goto	u3050
  3248   000A3A  5048               	movf	(___flmul@temp+1)^0,w,c
  3249   000A3C  E106               	bnz	u3051
  3250   000A3E  0447               	decf	___flmul@temp^0,w,c
  3251   000A40  B0D8               	btfsc	status,0,c
  3252   000A42  EF25  F005         	goto	u3051
  3253   000A46  EF27  F005         	goto	u3050
  3254   000A4A                     u3051:
  3255   000A4A  EF33  F005         	goto	l1329
  3256   000A4E                     u3050:
  3257   000A4E  0E00               	movlw	0
  3258   000A50  6E43               	movwf	___flmul@prod^0,c
  3259   000A52  0E00               	movlw	0
  3260   000A54  6E44               	movwf	(___flmul@prod+1)^0,c
  3261   000A56  0E00               	movlw	0
  3262   000A58  6E45               	movwf	(___flmul@prod+2)^0,c
  3263   000A5A  0E00               	movlw	0
  3264   000A5C  6E46               	movwf	(___flmul@prod+3)^0,c
  3265   000A5E  0E00               	movlw	0
  3266   000A60  6E3C               	movwf	___flmul@sign^0,c
  3267   000A62  EF48  F005         	goto	l3567
  3268   000A66                     l1329:
  3269   000A66  C047  F042         	movff	___flmul@temp,___flmul@bexp
  3270   000A6A  0EFF               	movlw	255
  3271   000A6C  1643               	andwf	___flmul@prod^0,f,c
  3272   000A6E  0EFF               	movlw	255
  3273   000A70  1644               	andwf	(___flmul@prod+1)^0,f,c
  3274   000A72  0E7F               	movlw	127
  3275   000A74  1645               	andwf	(___flmul@prod+2)^0,f,c
  3276   000A76  0E00               	movlw	0
  3277   000A78  1646               	andwf	(___flmul@prod+3)^0,f,c
  3278   000A7A  A042               	btfss	___flmul@bexp^0,0,c
  3279   000A7C  EF42  F005         	goto	u3061
  3280   000A80  EF44  F005         	goto	u3060
  3281   000A84                     u3061:
  3282   000A84  EF45  F005         	goto	l3565
  3283   000A88                     u3060:
  3284   000A88  8E45               	bsf	(___flmul@prod+2)^0,7,c
  3285   000A8A                     l3565:
  3286   000A8A  90D8               	bcf	status,0,c
  3287   000A8C  3042               	rrcf	___flmul@bexp^0,w,c
  3288   000A8E  6E46               	movwf	(___flmul@prod+3)^0,c
  3289   000A90                     l3567:
  3290   000A90  503C               	movf	___flmul@sign^0,w,c
  3291   000A92  1246               	iorwf	(___flmul@prod+3)^0,f,c
  3292   000A94  C043  F030         	movff	___flmul@prod,?___flmul
  3293   000A98  C044  F031         	movff	___flmul@prod+1,?___flmul+1
  3294   000A9C  C045  F032         	movff	___flmul@prod+2,?___flmul+2
  3295   000AA0  C046  F033         	movff	___flmul@prod+3,?___flmul+3
  3296   000AA4                     l1316:
  3297   000AA4  0012               	return		;funcret
  3298   000AA6                     __end_of___flmul:
  3299                           	callstack 0
  3300                           
  3301 ;; *************** function ___fldiv *****************
  3302 ;; Defined at:
  3303 ;;		line 11 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\sprcdiv.c"
  3304 ;; Parameters:    Size  Location     Type
  3305 ;;  b               4   22[COMRAM] unsigned char 
  3306 ;;  a               4   26[COMRAM] unsigned char 
  3307 ;; Auto vars:     Size  Location     Type
  3308 ;;  grs             4   41[COMRAM] unsigned long 
  3309 ;;  rem             4   34[COMRAM] unsigned long 
  3310 ;;  new_exp         2   39[COMRAM] short 
  3311 ;;  aexp            1   46[COMRAM] unsigned char 
  3312 ;;  bexp            1   45[COMRAM] unsigned char 
  3313 ;;  sign            1   38[COMRAM] unsigned char 
  3314 ;; Return value:  Size  Location     Type
  3315 ;;                  4   22[COMRAM] unsigned char 
  3316 ;; Registers used:
  3317 ;;		wreg, status,2, status,0
  3318 ;; Tracked objects:
  3319 ;;		On entry : 0/0
  3320 ;;		On exit  : 0/0
  3321 ;;		Unchanged: 0/0
  3322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3323 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3324 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3325 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3326 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3327 ;;Total ram usage:       25 bytes
  3328 ;; Hardware stack levels used: 1
  3329 ;; Hardware stack levels required when called: 7
  3330 ;; This function calls:
  3331 ;;		Nothing
  3332 ;; This function is called by:
  3333 ;;		_detect_color
  3334 ;; This function uses a non-reentrant model
  3335 ;;
  3336                           
  3337                           	psect	text6
  3338   000AA6                     __ptext6:
  3339                           	callstack 0
  3340   000AA6                     ___fldiv:
  3341                           	callstack 22
  3342   000AA6  501A               	movf	(___fldiv@b+3)^0,w,c
  3343   000AA8  0B80               	andlw	128
  3344   000AAA  6E27               	movwf	___fldiv@sign^0,c
  3345   000AAC  501A               	movf	(___fldiv@b+3)^0,w,c
  3346   000AAE  241A               	addwf	(___fldiv@b+3)^0,w,c
  3347   000AB0  6E2E               	movwf	___fldiv@bexp^0,c
  3348   000AB2  AE19               	btfss	(___fldiv@b+2)^0,7,c
  3349   000AB4  EF5E  F005         	goto	u2651
  3350   000AB8  EF60  F005         	goto	u2650
  3351   000ABC                     u2651:
  3352   000ABC  EF61  F005         	goto	l3311
  3353   000AC0                     u2650:
  3354   000AC0  802E               	bsf	___fldiv@bexp^0,0,c
  3355   000AC2                     l3311:
  3356   000AC2  502E               	movf	___fldiv@bexp^0,w,c
  3357   000AC4  B4D8               	btfsc	status,2,c
  3358   000AC6  EF67  F005         	goto	u2661
  3359   000ACA  EF69  F005         	goto	u2660
  3360   000ACE                     u2661:
  3361   000ACE  EF7E  F005         	goto	l3321
  3362   000AD2                     u2660:
  3363   000AD2  282E               	incf	___fldiv@bexp^0,w,c
  3364   000AD4  A4D8               	btfss	status,2,c
  3365   000AD6  EF6F  F005         	goto	u2671
  3366   000ADA  EF71  F005         	goto	u2670
  3367   000ADE                     u2671:
  3368   000ADE  EF79  F005         	goto	l3317
  3369   000AE2                     u2670:
  3370   000AE2  0E00               	movlw	0
  3371   000AE4  6E17               	movwf	___fldiv@b^0,c
  3372   000AE6  0E00               	movlw	0
  3373   000AE8  6E18               	movwf	(___fldiv@b+1)^0,c
  3374   000AEA  0E00               	movlw	0
  3375   000AEC  6E19               	movwf	(___fldiv@b+2)^0,c
  3376   000AEE  0E00               	movlw	0
  3377   000AF0  6E1A               	movwf	(___fldiv@b+3)^0,c
  3378   000AF2                     l3317:
  3379   000AF2  8E19               	bsf	(___fldiv@b+2)^0,7,c
  3380   000AF4  0E00               	movlw	0
  3381   000AF6  6E1A               	movwf	(___fldiv@b+3)^0,c
  3382   000AF8  EF86  F005         	goto	l3323
  3383   000AFC                     l3321:
  3384   000AFC  0E00               	movlw	0
  3385   000AFE  6E17               	movwf	___fldiv@b^0,c
  3386   000B00  0E00               	movlw	0
  3387   000B02  6E18               	movwf	(___fldiv@b+1)^0,c
  3388   000B04  0E00               	movlw	0
  3389   000B06  6E19               	movwf	(___fldiv@b+2)^0,c
  3390   000B08  0E00               	movlw	0
  3391   000B0A  6E1A               	movwf	(___fldiv@b+3)^0,c
  3392   000B0C                     l3323:
  3393   000B0C  501E               	movf	(___fldiv@a+3)^0,w,c
  3394   000B0E  0B80               	andlw	128
  3395   000B10  1A27               	xorwf	___fldiv@sign^0,f,c
  3396   000B12  501E               	movf	(___fldiv@a+3)^0,w,c
  3397   000B14  241E               	addwf	(___fldiv@a+3)^0,w,c
  3398   000B16  6E2F               	movwf	___fldiv@aexp^0,c
  3399   000B18  AE1D               	btfss	(___fldiv@a+2)^0,7,c
  3400   000B1A  EF91  F005         	goto	u2681
  3401   000B1E  EF93  F005         	goto	u2680
  3402   000B22                     u2681:
  3403   000B22  EF94  F005         	goto	l3331
  3404   000B26                     u2680:
  3405   000B26  802F               	bsf	___fldiv@aexp^0,0,c
  3406   000B28                     l3331:
  3407   000B28  502F               	movf	___fldiv@aexp^0,w,c
  3408   000B2A  B4D8               	btfsc	status,2,c
  3409   000B2C  EF9A  F005         	goto	u2691
  3410   000B30  EF9C  F005         	goto	u2690
  3411   000B34                     u2691:
  3412   000B34  EFB1  F005         	goto	l3341
  3413   000B38                     u2690:
  3414   000B38  282F               	incf	___fldiv@aexp^0,w,c
  3415   000B3A  A4D8               	btfss	status,2,c
  3416   000B3C  EFA2  F005         	goto	u2701
  3417   000B40  EFA4  F005         	goto	u2700
  3418   000B44                     u2701:
  3419   000B44  EFAC  F005         	goto	l3337
  3420   000B48                     u2700:
  3421   000B48  0E00               	movlw	0
  3422   000B4A  6E1B               	movwf	___fldiv@a^0,c
  3423   000B4C  0E00               	movlw	0
  3424   000B4E  6E1C               	movwf	(___fldiv@a+1)^0,c
  3425   000B50  0E00               	movlw	0
  3426   000B52  6E1D               	movwf	(___fldiv@a+2)^0,c
  3427   000B54  0E00               	movlw	0
  3428   000B56  6E1E               	movwf	(___fldiv@a+3)^0,c
  3429   000B58                     l3337:
  3430   000B58  8E1D               	bsf	(___fldiv@a+2)^0,7,c
  3431   000B5A  0E00               	movlw	0
  3432   000B5C  6E1E               	movwf	(___fldiv@a+3)^0,c
  3433   000B5E  EFB9  F005         	goto	l3343
  3434   000B62                     l3341:
  3435   000B62  0E00               	movlw	0
  3436   000B64  6E1B               	movwf	___fldiv@a^0,c
  3437   000B66  0E00               	movlw	0
  3438   000B68  6E1C               	movwf	(___fldiv@a+1)^0,c
  3439   000B6A  0E00               	movlw	0
  3440   000B6C  6E1D               	movwf	(___fldiv@a+2)^0,c
  3441   000B6E  0E00               	movlw	0
  3442   000B70  6E1E               	movwf	(___fldiv@a+3)^0,c
  3443   000B72                     l3343:
  3444   000B72  501B               	movf	___fldiv@a^0,w,c
  3445   000B74  101C               	iorwf	(___fldiv@a+1)^0,w,c
  3446   000B76  101D               	iorwf	(___fldiv@a+2)^0,w,c
  3447   000B78  101E               	iorwf	(___fldiv@a+3)^0,w,c
  3448   000B7A  A4D8               	btfss	status,2,c
  3449   000B7C  EFC2  F005         	goto	u2711
  3450   000B80  EFC4  F005         	goto	u2710
  3451   000B84                     u2711:
  3452   000B84  EFDC  F005         	goto	l3355
  3453   000B88                     u2710:
  3454   000B88  0E00               	movlw	0
  3455   000B8A  6E17               	movwf	___fldiv@b^0,c
  3456   000B8C  0E00               	movlw	0
  3457   000B8E  6E18               	movwf	(___fldiv@b+1)^0,c
  3458   000B90  0E00               	movlw	0
  3459   000B92  6E19               	movwf	(___fldiv@b+2)^0,c
  3460   000B94  0E00               	movlw	0
  3461   000B96  6E1A               	movwf	(___fldiv@b+3)^0,c
  3462   000B98  0E80               	movlw	128
  3463   000B9A  1219               	iorwf	(___fldiv@b+2)^0,f,c
  3464   000B9C  0E7F               	movlw	127
  3465   000B9E  121A               	iorwf	(___fldiv@b+3)^0,f,c
  3466   000BA0                     l3349:
  3467   000BA0  5027               	movf	___fldiv@sign^0,w,c
  3468   000BA2  121A               	iorwf	(___fldiv@b+3)^0,f,c
  3469   000BA4  C017  F017         	movff	___fldiv@b,?___fldiv
  3470   000BA8  C018  F018         	movff	___fldiv@b+1,?___fldiv+1
  3471   000BAC  C019  F019         	movff	___fldiv@b+2,?___fldiv+2
  3472   000BB0  C01A  F01A         	movff	___fldiv@b+3,?___fldiv+3
  3473   000BB4  EF1F  F007         	goto	l1280
  3474   000BB8                     l3355:
  3475   000BB8  502E               	movf	___fldiv@bexp^0,w,c
  3476   000BBA  A4D8               	btfss	status,2,c
  3477   000BBC  EFE2  F005         	goto	u2721
  3478   000BC0  EFE4  F005         	goto	u2720
  3479   000BC4                     u2721:
  3480   000BC4  EFEE  F005         	goto	l3363
  3481   000BC8                     u2720:
  3482   000BC8  0E00               	movlw	0
  3483   000BCA  6E17               	movwf	?___fldiv^0,c
  3484   000BCC  0E00               	movlw	0
  3485   000BCE  6E18               	movwf	(?___fldiv+1)^0,c
  3486   000BD0  0E00               	movlw	0
  3487   000BD2  6E19               	movwf	(?___fldiv+2)^0,c
  3488   000BD4  0E00               	movlw	0
  3489   000BD6  6E1A               	movwf	(?___fldiv+3)^0,c
  3490   000BD8  EF1F  F007         	goto	l1280
  3491   000BDC                     l3363:
  3492   000BDC  502F               	movf	___fldiv@aexp^0,w,c
  3493   000BDE  C02E  F01F         	movff	___fldiv@bexp,??___fldiv
  3494   000BE2  6A20               	clrf	(??___fldiv+1)^0,c
  3495   000BE4  5E1F               	subwf	??___fldiv^0,f,c
  3496   000BE6  0E00               	movlw	0
  3497   000BE8  5A20               	subwfb	(??___fldiv+1)^0,f,c
  3498   000BEA  0E7F               	movlw	127
  3499   000BEC  241F               	addwf	??___fldiv^0,w,c
  3500   000BEE  6E28               	movwf	___fldiv@new_exp^0,c
  3501   000BF0  0E00               	movlw	0
  3502   000BF2  2020               	addwfc	(??___fldiv+1)^0,w,c
  3503   000BF4  6E29               	movwf	(___fldiv@new_exp+1)^0,c
  3504   000BF6  C017  F023         	movff	___fldiv@b,___fldiv@rem
  3505   000BFA  C018  F024         	movff	___fldiv@b+1,___fldiv@rem+1
  3506   000BFE  C019  F025         	movff	___fldiv@b+2,___fldiv@rem+2
  3507   000C02  C01A  F026         	movff	___fldiv@b+3,___fldiv@rem+3
  3508   000C06  0E00               	movlw	0
  3509   000C08  6E17               	movwf	___fldiv@b^0,c
  3510   000C0A  0E00               	movlw	0
  3511   000C0C  6E18               	movwf	(___fldiv@b+1)^0,c
  3512   000C0E  0E00               	movlw	0
  3513   000C10  6E19               	movwf	(___fldiv@b+2)^0,c
  3514   000C12  0E00               	movlw	0
  3515   000C14  6E1A               	movwf	(___fldiv@b+3)^0,c
  3516   000C16  0E00               	movlw	0
  3517   000C18  6E2A               	movwf	___fldiv@grs^0,c
  3518   000C1A  0E00               	movlw	0
  3519   000C1C  6E2B               	movwf	(___fldiv@grs+1)^0,c
  3520   000C1E  0E00               	movlw	0
  3521   000C20  6E2C               	movwf	(___fldiv@grs+2)^0,c
  3522   000C22  0E00               	movlw	0
  3523   000C24  6E2D               	movwf	(___fldiv@grs+3)^0,c
  3524   000C26  0E00               	movlw	0
  3525   000C28  6E2F               	movwf	___fldiv@aexp^0,c
  3526   000C2A  EF4F  F006         	goto	l1282
  3527   000C2E                     l3373:
  3528   000C2E  502F               	movf	___fldiv@aexp^0,w,c
  3529   000C30  B4D8               	btfsc	status,2,c
  3530   000C32  EF1D  F006         	goto	u2731
  3531   000C36  EF1F  F006         	goto	u2730
  3532   000C3A                     u2731:
  3533   000C3A  EF36  F006         	goto	l3381
  3534   000C3E                     u2730:
  3535   000C3E  90D8               	bcf	status,0,c
  3536   000C40  3623               	rlcf	___fldiv@rem^0,f,c
  3537   000C42  3624               	rlcf	(___fldiv@rem+1)^0,f,c
  3538   000C44  3625               	rlcf	(___fldiv@rem+2)^0,f,c
  3539   000C46  3626               	rlcf	(___fldiv@rem+3)^0,f,c
  3540   000C48  90D8               	bcf	status,0,c
  3541   000C4A  3617               	rlcf	___fldiv@b^0,f,c
  3542   000C4C  3618               	rlcf	(___fldiv@b+1)^0,f,c
  3543   000C4E  3619               	rlcf	(___fldiv@b+2)^0,f,c
  3544   000C50  361A               	rlcf	(___fldiv@b+3)^0,f,c
  3545   000C52  AE2D               	btfss	(___fldiv@grs+3)^0,7,c
  3546   000C54  EF2E  F006         	goto	u2741
  3547   000C58  EF30  F006         	goto	u2740
  3548   000C5C                     u2741:
  3549   000C5C  EF31  F006         	goto	l1285
  3550   000C60                     u2740:
  3551   000C60  8017               	bsf	___fldiv@b^0,0,c
  3552   000C62                     l1285:
  3553   000C62  90D8               	bcf	status,0,c
  3554   000C64  362A               	rlcf	___fldiv@grs^0,f,c
  3555   000C66  362B               	rlcf	(___fldiv@grs+1)^0,f,c
  3556   000C68  362C               	rlcf	(___fldiv@grs+2)^0,f,c
  3557   000C6A  362D               	rlcf	(___fldiv@grs+3)^0,f,c
  3558   000C6C                     l3381:
  3559   000C6C  501B               	movf	___fldiv@a^0,w,c
  3560   000C6E  5C23               	subwf	___fldiv@rem^0,w,c
  3561   000C70  501C               	movf	(___fldiv@a+1)^0,w,c
  3562   000C72  5824               	subwfb	(___fldiv@rem+1)^0,w,c
  3563   000C74  501D               	movf	(___fldiv@a+2)^0,w,c
  3564   000C76  5825               	subwfb	(___fldiv@rem+2)^0,w,c
  3565   000C78  501E               	movf	(___fldiv@a+3)^0,w,c
  3566   000C7A  5826               	subwfb	(___fldiv@rem+3)^0,w,c
  3567   000C7C  A0D8               	btfss	status,0,c
  3568   000C7E  EF43  F006         	goto	u2751
  3569   000C82  EF45  F006         	goto	u2750
  3570   000C86                     u2751:
  3571   000C86  EF4E  F006         	goto	l3387
  3572   000C8A                     u2750:
  3573   000C8A  8C2D               	bsf	(___fldiv@grs+3)^0,6,c
  3574   000C8C  501B               	movf	___fldiv@a^0,w,c
  3575   000C8E  5E23               	subwf	___fldiv@rem^0,f,c
  3576   000C90  501C               	movf	(___fldiv@a+1)^0,w,c
  3577   000C92  5A24               	subwfb	(___fldiv@rem+1)^0,f,c
  3578   000C94  501D               	movf	(___fldiv@a+2)^0,w,c
  3579   000C96  5A25               	subwfb	(___fldiv@rem+2)^0,f,c
  3580   000C98  501E               	movf	(___fldiv@a+3)^0,w,c
  3581   000C9A  5A26               	subwfb	(___fldiv@rem+3)^0,f,c
  3582   000C9C                     l3387:
  3583   000C9C  2A2F               	incf	___fldiv@aexp^0,f,c
  3584   000C9E                     l1282:
  3585   000C9E  0E19               	movlw	25
  3586   000CA0  642F               	cpfsgt	___fldiv@aexp^0,c
  3587   000CA2  EF55  F006         	goto	u2761
  3588   000CA6  EF57  F006         	goto	u2760
  3589   000CAA                     u2761:
  3590   000CAA  EF17  F006         	goto	l3373
  3591   000CAE                     u2760:
  3592   000CAE  5023               	movf	___fldiv@rem^0,w,c
  3593   000CB0  1024               	iorwf	(___fldiv@rem+1)^0,w,c
  3594   000CB2  1025               	iorwf	(___fldiv@rem+2)^0,w,c
  3595   000CB4  1026               	iorwf	(___fldiv@rem+3)^0,w,c
  3596   000CB6  B4D8               	btfsc	status,2,c
  3597   000CB8  EF60  F006         	goto	u2771
  3598   000CBC  EF62  F006         	goto	u2770
  3599   000CC0                     u2771:
  3600   000CC0  EF7A  F006         	goto	l3399
  3601   000CC4                     u2770:
  3602   000CC4  802A               	bsf	___fldiv@grs^0,0,c
  3603   000CC6  EF7A  F006         	goto	l3399
  3604   000CCA                     l3393:
  3605   000CCA  90D8               	bcf	status,0,c
  3606   000CCC  3617               	rlcf	___fldiv@b^0,f,c
  3607   000CCE  3618               	rlcf	(___fldiv@b+1)^0,f,c
  3608   000CD0  3619               	rlcf	(___fldiv@b+2)^0,f,c
  3609   000CD2  361A               	rlcf	(___fldiv@b+3)^0,f,c
  3610   000CD4  AE2D               	btfss	(___fldiv@grs+3)^0,7,c
  3611   000CD6  EF6F  F006         	goto	u2781
  3612   000CDA  EF71  F006         	goto	u2780
  3613   000CDE                     u2781:
  3614   000CDE  EF72  F006         	goto	l1291
  3615   000CE2                     u2780:
  3616   000CE2  8017               	bsf	___fldiv@b^0,0,c
  3617   000CE4                     l1291:
  3618   000CE4  90D8               	bcf	status,0,c
  3619   000CE6  362A               	rlcf	___fldiv@grs^0,f,c
  3620   000CE8  362B               	rlcf	(___fldiv@grs+1)^0,f,c
  3621   000CEA  362C               	rlcf	(___fldiv@grs+2)^0,f,c
  3622   000CEC  362D               	rlcf	(___fldiv@grs+3)^0,f,c
  3623   000CEE  0628               	decf	___fldiv@new_exp^0,f,c
  3624   000CF0  A0D8               	btfss	status,0,c
  3625   000CF2  0629               	decf	(___fldiv@new_exp+1)^0,f,c
  3626   000CF4                     l3399:
  3627   000CF4  AE19               	btfss	(___fldiv@b+2)^0,7,c
  3628   000CF6  EF7F  F006         	goto	u2791
  3629   000CFA  EF81  F006         	goto	u2790
  3630   000CFE                     u2791:
  3631   000CFE  EF65  F006         	goto	l3393
  3632   000D02                     u2790:
  3633   000D02  0E00               	movlw	0
  3634   000D04  6E2F               	movwf	___fldiv@aexp^0,c
  3635   000D06  AE2D               	btfss	(___fldiv@grs+3)^0,7,c
  3636   000D08  EF88  F006         	goto	u2801
  3637   000D0C  EF8A  F006         	goto	u2800
  3638   000D10                     u2801:
  3639   000D10  EFAE  F006         	goto	l1293
  3640   000D14                     u2800:
  3641   000D14  0EFF               	movlw	255
  3642   000D16  142A               	andwf	___fldiv@grs^0,w,c
  3643   000D18  6E1F               	movwf	??___fldiv^0,c
  3644   000D1A  0EFF               	movlw	255
  3645   000D1C  142B               	andwf	(___fldiv@grs+1)^0,w,c
  3646   000D1E  6E20               	movwf	(??___fldiv+1)^0,c
  3647   000D20  0EFF               	movlw	255
  3648   000D22  142C               	andwf	(___fldiv@grs+2)^0,w,c
  3649   000D24  6E21               	movwf	(??___fldiv+2)^0,c
  3650   000D26  0E7F               	movlw	127
  3651   000D28  142D               	andwf	(___fldiv@grs+3)^0,w,c
  3652   000D2A  6E22               	movwf	(??___fldiv+3)^0,c
  3653   000D2C  501F               	movf	??___fldiv^0,w,c
  3654   000D2E  1020               	iorwf	(??___fldiv+1)^0,w,c
  3655   000D30  1021               	iorwf	(??___fldiv+2)^0,w,c
  3656   000D32  1022               	iorwf	(??___fldiv+3)^0,w,c
  3657   000D34  B4D8               	btfsc	status,2,c
  3658   000D36  EF9F  F006         	goto	u2811
  3659   000D3A  EFA1  F006         	goto	u2810
  3660   000D3E                     u2811:
  3661   000D3E  EFA5  F006         	goto	l1294
  3662   000D42                     u2810:
  3663   000D42                     l3407:
  3664   000D42  0E01               	movlw	1
  3665   000D44  6E2F               	movwf	___fldiv@aexp^0,c
  3666   000D46  EFAE  F006         	goto	l1293
  3667   000D4A                     l1294:
  3668   000D4A  A017               	btfss	___fldiv@b^0,0,c
  3669   000D4C  EFAA  F006         	goto	u2821
  3670   000D50  EFAC  F006         	goto	u2820
  3671   000D54                     u2821:
  3672   000D54  EFAE  F006         	goto	l1293
  3673   000D58                     u2820:
  3674   000D58  EFA1  F006         	goto	l3407
  3675   000D5C                     l1293:
  3676   000D5C  502F               	movf	___fldiv@aexp^0,w,c
  3677   000D5E  B4D8               	btfsc	status,2,c
  3678   000D60  EFB4  F006         	goto	u2831
  3679   000D64  EFB6  F006         	goto	u2830
  3680   000D68                     u2831:
  3681   000D68  EFDA  F006         	goto	l3419
  3682   000D6C                     u2830:
  3683   000D6C  0E01               	movlw	1
  3684   000D6E  2617               	addwf	___fldiv@b^0,f,c
  3685   000D70  0E00               	movlw	0
  3686   000D72  2218               	addwfc	(___fldiv@b+1)^0,f,c
  3687   000D74  2219               	addwfc	(___fldiv@b+2)^0,f,c
  3688   000D76  221A               	addwfc	(___fldiv@b+3)^0,f,c
  3689   000D78  A01A               	btfss	(___fldiv@b+3)^0,0,c
  3690   000D7A  EFC1  F006         	goto	u2841
  3691   000D7E  EFC3  F006         	goto	u2840
  3692   000D82                     u2841:
  3693   000D82  EFDA  F006         	goto	l3419
  3694   000D86                     u2840:
  3695   000D86  C017  F01F         	movff	___fldiv@b,??___fldiv
  3696   000D8A  C018  F020         	movff	___fldiv@b+1,??___fldiv+1
  3697   000D8E  C019  F021         	movff	___fldiv@b+2,??___fldiv+2
  3698   000D92  C01A  F022         	movff	___fldiv@b+3,??___fldiv+3
  3699   000D96  3422               	rlcf	(??___fldiv+3)^0,w,c
  3700   000D98  3222               	rrcf	(??___fldiv+3)^0,f,c
  3701   000D9A  3221               	rrcf	(??___fldiv+2)^0,f,c
  3702   000D9C  3220               	rrcf	(??___fldiv+1)^0,f,c
  3703   000D9E  321F               	rrcf	??___fldiv^0,f,c
  3704   000DA0  C01F  F017         	movff	??___fldiv,___fldiv@b
  3705   000DA4  C020  F018         	movff	??___fldiv+1,___fldiv@b+1
  3706   000DA8  C021  F019         	movff	??___fldiv+2,___fldiv@b+2
  3707   000DAC  C022  F01A         	movff	??___fldiv+3,___fldiv@b+3
  3708   000DB0  4A28               	infsnz	___fldiv@new_exp^0,f,c
  3709   000DB2  2A29               	incf	(___fldiv@new_exp+1)^0,f,c
  3710   000DB4                     l3419:
  3711   000DB4  BE29               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3712   000DB6  EFE5  F006         	goto	u2851
  3713   000DBA  5029               	movf	(___fldiv@new_exp+1)^0,w,c
  3714   000DBC  E108               	bnz	u2850
  3715   000DBE  2828               	incf	___fldiv@new_exp^0,w,c
  3716   000DC0  A0D8               	btfss	status,0,c
  3717   000DC2  EFE5  F006         	goto	u2851
  3718   000DC6  EFE7  F006         	goto	u2850
  3719   000DCA                     u2851:
  3720   000DCA  EFF2  F006         	goto	l3423
  3721   000DCE                     u2850:
  3722   000DCE  0E00               	movlw	0
  3723   000DD0  6E29               	movwf	(___fldiv@new_exp+1)^0,c
  3724   000DD2  6828               	setf	___fldiv@new_exp^0,c
  3725   000DD4  0E00               	movlw	0
  3726   000DD6  6E17               	movwf	___fldiv@b^0,c
  3727   000DD8  0E00               	movlw	0
  3728   000DDA  6E18               	movwf	(___fldiv@b+1)^0,c
  3729   000DDC  0E00               	movlw	0
  3730   000DDE  6E19               	movwf	(___fldiv@b+2)^0,c
  3731   000DE0  0E00               	movlw	0
  3732   000DE2  6E1A               	movwf	(___fldiv@b+3)^0,c
  3733   000DE4                     l3423:
  3734   000DE4  BE29               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3735   000DE6  EFFF  F006         	goto	u2860
  3736   000DEA  5029               	movf	(___fldiv@new_exp+1)^0,w,c
  3737   000DEC  E106               	bnz	u2861
  3738   000DEE  0428               	decf	___fldiv@new_exp^0,w,c
  3739   000DF0  B0D8               	btfsc	status,0,c
  3740   000DF2  EFFD  F006         	goto	u2861
  3741   000DF6  EFFF  F006         	goto	u2860
  3742   000DFA                     u2861:
  3743   000DFA  EF0D  F007         	goto	l3427
  3744   000DFE                     u2860:
  3745   000DFE  0E00               	movlw	0
  3746   000E00  6E29               	movwf	(___fldiv@new_exp+1)^0,c
  3747   000E02  0E00               	movlw	0
  3748   000E04  6E28               	movwf	___fldiv@new_exp^0,c
  3749   000E06  0E00               	movlw	0
  3750   000E08  6E17               	movwf	___fldiv@b^0,c
  3751   000E0A  0E00               	movlw	0
  3752   000E0C  6E18               	movwf	(___fldiv@b+1)^0,c
  3753   000E0E  0E00               	movlw	0
  3754   000E10  6E19               	movwf	(___fldiv@b+2)^0,c
  3755   000E12  0E00               	movlw	0
  3756   000E14  6E1A               	movwf	(___fldiv@b+3)^0,c
  3757   000E16  0E00               	movlw	0
  3758   000E18  6E27               	movwf	___fldiv@sign^0,c
  3759   000E1A                     l3427:
  3760   000E1A  C028  F02E         	movff	___fldiv@new_exp,___fldiv@bexp
  3761   000E1E  A02E               	btfss	___fldiv@bexp^0,0,c
  3762   000E20  EF14  F007         	goto	u2871
  3763   000E24  EF16  F007         	goto	u2870
  3764   000E28                     u2871:
  3765   000E28  EF19  F007         	goto	l3433
  3766   000E2C                     u2870:
  3767   000E2C  8E19               	bsf	(___fldiv@b+2)^0,7,c
  3768   000E2E  EF1A  F007         	goto	l3435
  3769   000E32                     l3433:
  3770   000E32  9E19               	bcf	(___fldiv@b+2)^0,7,c
  3771   000E34                     l3435:
  3772   000E34  90D8               	bcf	status,0,c
  3773   000E36  302E               	rrcf	___fldiv@bexp^0,w,c
  3774   000E38  6E1A               	movwf	(___fldiv@b+3)^0,c
  3775   000E3A  EFD0  F005         	goto	l3349
  3776   000E3E                     l1280:
  3777   000E3E  0012               	return		;funcret
  3778   000E40                     __end_of___fldiv:
  3779                           	callstack 0
  3780                           
  3781 ;; *************** function _color_click_init *****************
  3782 ;; Defined at:
  3783 ;;		line 6 in file "color.c"
  3784 ;; Parameters:    Size  Location     Type
  3785 ;;		None
  3786 ;; Auto vars:     Size  Location     Type
  3787 ;;		None
  3788 ;; Return value:  Size  Location     Type
  3789 ;;                  1    wreg      void 
  3790 ;; Registers used:
  3791 ;;		wreg, status,2, status,0, cstack
  3792 ;; Tracked objects:
  3793 ;;		On entry : 0/0
  3794 ;;		On exit  : 0/0
  3795 ;;		Unchanged: 0/0
  3796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3799 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3800 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3801 ;;Total ram usage:        1 bytes
  3802 ;; Hardware stack levels used: 1
  3803 ;; Hardware stack levels required when called: 10
  3804 ;; This function calls:
  3805 ;;		_I2C_2_Master_Init
  3806 ;;		_color_writetoaddr
  3807 ;; This function is called by:
  3808 ;;		_main
  3809 ;; This function uses a non-reentrant model
  3810 ;;
  3811                           
  3812                           	psect	text7
  3813   00283E                     __ptext7:
  3814                           	callstack 0
  3815   00283E                     _color_click_init:
  3816                           	callstack 20
  3817   00283E                     
  3818                           ;color.c: 9:     I2C_2_Master_Init();
  3819   00283E  EC52  F014         	call	_I2C_2_Master_Init	;wreg free
  3820   002842                     
  3821                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  3822   002842  0E01               	movlw	1
  3823   002844  6E0B               	movwf	color_writetoaddr@value^0,c
  3824   002846  0E00               	movlw	0
  3825   002848  ECD5  F014         	call	_color_writetoaddr
  3826   00284C                     
  3827                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3828   00284C  0E3F               	movlw	63
  3829   00284E  6E0D               	movwf	??_color_click_init^0,c
  3830   002850  0E55               	movlw	85
  3831   002852                     u4537:
  3832   002852  2EE8               	decfsz	wreg,f,c
  3833   002854  D7FE               	bra	u4537
  3834   002856  2E0D               	decfsz	??_color_click_init^0,f,c
  3835   002858  D7FC               	bra	u4537
  3836   00285A  F000               	nop	
  3837   00285C                     
  3838                           ;color.c: 16:  color_writetoaddr(0x00, 0x03);
  3839   00285C  0E03               	movlw	3
  3840   00285E  6E0B               	movwf	color_writetoaddr@value^0,c
  3841   002860  0E00               	movlw	0
  3842   002862  ECD5  F014         	call	_color_writetoaddr
  3843   002866                     
  3844                           ;color.c: 19:  color_writetoaddr(0x01, 0xD5);
  3845   002866  0ED5               	movlw	213
  3846   002868  6E0B               	movwf	color_writetoaddr@value^0,c
  3847   00286A  0E01               	movlw	1
  3848   00286C  ECD5  F014         	call	_color_writetoaddr
  3849   002870  0012               	return		;funcret
  3850   002872                     __end_of_color_click_init:
  3851                           	callstack 0
  3852                           
  3853 ;; *************** function _I2C_2_Master_Init *****************
  3854 ;; Defined at:
  3855 ;;		line 4 in file "i2c.c"
  3856 ;; Parameters:    Size  Location     Type
  3857 ;;		None
  3858 ;; Auto vars:     Size  Location     Type
  3859 ;;		None
  3860 ;; Return value:  Size  Location     Type
  3861 ;;                  1    wreg      void 
  3862 ;; Registers used:
  3863 ;;		wreg, status,2
  3864 ;; Tracked objects:
  3865 ;;		On entry : 0/0
  3866 ;;		On exit  : 0/0
  3867 ;;		Unchanged: 0/0
  3868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3873 ;;Total ram usage:        0 bytes
  3874 ;; Hardware stack levels used: 1
  3875 ;; Hardware stack levels required when called: 7
  3876 ;; This function calls:
  3877 ;;		Nothing
  3878 ;; This function is called by:
  3879 ;;		_color_click_init
  3880 ;; This function uses a non-reentrant model
  3881 ;;
  3882                           
  3883                           	psect	text8
  3884   0028A4                     __ptext8:
  3885                           	callstack 0
  3886   0028A4                     _I2C_2_Master_Init:
  3887                           	callstack 22
  3888   0028A4                     
  3889                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3890   0028A4  010E               	movlb	14	; () banked
  3891   0028A6  51D9               	movf	217,w,b	;volatile
  3892   0028A8  0BF0               	andlw	-16
  3893   0028AA  0908               	iorlw	8
  3894   0028AC  6FD9               	movwf	217,b	;volatile
  3895   0028AE                     
  3896                           ; BSR set to: 14
  3897                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3898   0028AE  8BD9               	bsf	217,5,b	;volatile
  3899                           
  3900                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3901   0028B0  0E9F               	movlw	159
  3902   0028B2  6FD6               	movwf	214,b	;volatile
  3903   0028B4                     
  3904                           ; BSR set to: 14
  3905                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3906   0028B4  8A84               	bsf	132,5,c	;volatile
  3907   0028B6                     
  3908                           ; BSR set to: 14
  3909                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3910   0028B6  8C84               	bsf	132,6,c	;volatile
  3911   0028B8                     
  3912                           ; BSR set to: 14
  3913                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3914   0028B8  9BA7               	bcf	167,5,b	;volatile
  3915   0028BA                     
  3916                           ; BSR set to: 14
  3917                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3918   0028BA  9DA7               	bcf	167,6,b	;volatile
  3919                           
  3920                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3921   0028BC  0E1D               	movlw	29
  3922   0028BE  6F1D               	movwf	29,b	;volatile
  3923                           
  3924                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3925   0028C0  0E1E               	movlw	30
  3926   0028C2  6F1C               	movwf	28,b	;volatile
  3927                           
  3928                           ;i2c.c: 18:   RD5PPS=0x1C;
  3929   0028C4  0E1C               	movlw	28
  3930   0028C6  6F6F               	movwf	111,b	;volatile
  3931                           
  3932                           ;i2c.c: 19:   RD6PPS=0x1B;
  3933   0028C8  0E1B               	movlw	27
  3934   0028CA  6F70               	movwf	112,b	;volatile
  3935   0028CC                     
  3936                           ; BSR set to: 14
  3937   0028CC  0012               	return		;funcret
  3938   0028CE                     __end_of_I2C_2_Master_Init:
  3939                           	callstack 0
  3940                           
  3941 ;; *************** function _WhiteLight *****************
  3942 ;; Defined at:
  3943 ;;		line 20 in file "LED_Buttons.c"
  3944 ;; Parameters:    Size  Location     Type
  3945 ;;		None
  3946 ;; Auto vars:     Size  Location     Type
  3947 ;;		None
  3948 ;; Return value:  Size  Location     Type
  3949 ;;                  1    wreg      void 
  3950 ;; Registers used:
  3951 ;;		None
  3952 ;; Tracked objects:
  3953 ;;		On entry : 0/0
  3954 ;;		On exit  : 0/0
  3955 ;;		Unchanged: 0/0
  3956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3961 ;;Total ram usage:        0 bytes
  3962 ;; Hardware stack levels used: 1
  3963 ;; Hardware stack levels required when called: 7
  3964 ;; This function calls:
  3965 ;;		Nothing
  3966 ;; This function is called by:
  3967 ;;		_main
  3968 ;; This function uses a non-reentrant model
  3969 ;;
  3970                           
  3971                           	psect	text9
  3972   002AB6                     __ptext9:
  3973                           	callstack 0
  3974   002AB6                     _WhiteLight:
  3975                           	callstack 23
  3976   002AB6                     
  3977                           ;LED_Buttons.c: 21:     LATGbits.LATG1 = 1;
  3978   002AB6  827F               	bsf	127,1,c	;volatile
  3979                           
  3980                           ;LED_Buttons.c: 22:     LATAbits.LATA4 = 1;
  3981   002AB8  8879               	bsf	121,4,c	;volatile
  3982                           
  3983                           ;LED_Buttons.c: 23:     LATFbits.LATF7 = 1;
  3984   002ABA  8E7E               	bsf	126,7,c	;volatile
  3985   002ABC  0012               	return		;funcret
  3986   002ABE                     __end_of_WhiteLight:
  3987                           	callstack 0
  3988                           
  3989 ;; *************** function _WhiteInstructions *****************
  3990 ;; Defined at:
  3991 ;;		line 154 in file "color_instructions.c"
  3992 ;; Parameters:    Size  Location     Type
  3993 ;;  mL              2   58[COMRAM] PTR struct DC_motor
  3994 ;;		 -> main@motorL(9), 
  3995 ;;  mR              2   60[COMRAM] PTR struct DC_motor
  3996 ;;		 -> main@motorR(9), 
  3997 ;; Auto vars:     Size  Location     Type
  3998 ;;  a               2   67[COMRAM] unsigned int 
  3999 ;;  c               2   64[COMRAM] unsigned int 
  4000 ;;  anticolor       1   66[COMRAM] unsigned char 
  4001 ;; Return value:  Size  Location     Type
  4002 ;;                  1    wreg      void 
  4003 ;; Registers used:
  4004 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4005 ;; Tracked objects:
  4006 ;;		On entry : 0/0
  4007 ;;		On exit  : 0/0
  4008 ;;		Unchanged: 0/0
  4009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4010 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4011 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4012 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4013 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4014 ;;Total ram usage:       11 bytes
  4015 ;; Hardware stack levels used: 1
  4016 ;; Hardware stack levels required when called: 14
  4017 ;; This function calls:
  4018 ;;		_BlueInstructions
  4019 ;;		_MoveBuggy
  4020 ;;		_Return_Anti_Moves
  4021 ;;		_Return_Time
  4022 ;;		_fullSpeedAhead
  4023 ;;		_stop
  4024 ;; This function is called by:
  4025 ;;		_main
  4026 ;; This function uses a non-reentrant model
  4027 ;;
  4028                           
  4029                           	psect	text10
  4030   001B0C                     __ptext10:
  4031                           	callstack 0
  4032   001B0C                     _WhiteInstructions:
  4033                           	callstack 16
  4034   001B0C                     
  4035                           ;color_instructions.c: 156:     BlueInstructions(mL,mR);
  4036   001B0C  C03B  F027         	movff	WhiteInstructions@mL,BlueInstructions@mL
  4037   001B10  C03C  F028         	movff	WhiteInstructions@mL+1,BlueInstructions@mL+1
  4038   001B14  C03D  F029         	movff	WhiteInstructions@mR,BlueInstructions@mR
  4039   001B18  C03E  F02A         	movff	WhiteInstructions@mR+1,BlueInstructions@mR+1
  4040   001B1C  EC17  F00F         	call	_BlueInstructions	;wreg free
  4041                           
  4042                           ;color_instructions.c: 158:     while(time_index>0){
  4043   001B20  EFF1  F00D         	goto	l3893
  4044   001B24                     l3873:
  4045                           
  4046                           ; BSR set to: 0
  4047                           ;color_instructions.c: 160:         unsigned int a = 0;
  4048   001B24  0E00               	movlw	0
  4049   001B26  6E45               	movwf	(WhiteInstructions@a+1)^0,c
  4050   001B28  0E00               	movlw	0
  4051   001B2A  6E44               	movwf	WhiteInstructions@a^0,c
  4052   001B2C                     
  4053                           ; BSR set to: 0
  4054                           ;color_instructions.c: 161:         unsigned int c = Return_Time(&time_index,time_array)
      +                          ;
  4055   001B2C  0E9E               	movlw	low _time_index
  4056   001B2E  6E09               	movwf	Return_Time@time_index^0,c
  4057   001B30  0E00               	movlw	high _time_index
  4058   001B32  6E0A               	movwf	(Return_Time@time_index+1)^0,c
  4059   001B34  0E3C               	movlw	low _time_array
  4060   001B36  6E0B               	movwf	Return_Time@time_array^0,c
  4061   001B38  0E01               	movlw	high _time_array
  4062   001B3A  6E0C               	movwf	(Return_Time@time_array+1)^0,c
  4063   001B3C  EC03  F014         	call	_Return_Time	;wreg free
  4064   001B40  C009  F041         	movff	?_Return_Time,WhiteInstructions@c
  4065   001B44  C00A  F042         	movff	?_Return_Time+1,WhiteInstructions@c+1
  4066                           
  4067                           ;color_instructions.c: 162:         while(a<c){
  4068   001B48  EFB2  F00D         	goto	l3881
  4069   001B4C                     l3877:
  4070                           
  4071                           ;color_instructions.c: 163:             fullSpeedAhead(mL,mR);
  4072   001B4C  C03B  F01C         	movff	WhiteInstructions@mL,fullSpeedAhead@mL
  4073   001B50  C03C  F01D         	movff	WhiteInstructions@mL+1,fullSpeedAhead@mL+1
  4074   001B54  C03D  F01E         	movff	WhiteInstructions@mR,fullSpeedAhead@mR
  4075   001B58  C03E  F01F         	movff	WhiteInstructions@mR+1,fullSpeedAhead@mR+1
  4076   001B5C  EC21  F00C         	call	_fullSpeedAhead	;wreg free
  4077   001B60                     
  4078                           ;color_instructions.c: 164:             a++;
  4079   001B60  4A44               	infsnz	WhiteInstructions@a^0,f,c
  4080   001B62  2A45               	incf	(WhiteInstructions@a+1)^0,f,c
  4081   001B64                     l3881:
  4082                           
  4083                           ;color_instructions.c: 162:         while(a<c){
  4084   001B64  5041               	movf	WhiteInstructions@c^0,w,c
  4085   001B66  5C44               	subwf	WhiteInstructions@a^0,w,c
  4086   001B68  5042               	movf	(WhiteInstructions@c+1)^0,w,c
  4087   001B6A  5845               	subwfb	(WhiteInstructions@a+1)^0,w,c
  4088   001B6C  A0D8               	btfss	status,0,c
  4089   001B6E  EFBB  F00D         	goto	u3741
  4090   001B72  EFBD  F00D         	goto	u3740
  4091   001B76                     u3741:
  4092   001B76  EFA6  F00D         	goto	l3877
  4093   001B7A                     u3740:
  4094   001B7A  EFCC  F00D         	goto	l3887
  4095   001B7E                     l3883:
  4096                           
  4097                           ;color_instructions.c: 168:             stop(mL,mR);
  4098   001B7E  C03B  F01C         	movff	WhiteInstructions@mL,stop@mL
  4099   001B82  C03C  F01D         	movff	WhiteInstructions@mL+1,stop@mL+1
  4100   001B86  C03D  F01E         	movff	WhiteInstructions@mR,stop@mR
  4101   001B8A  C03E  F01F         	movff	WhiteInstructions@mR+1,stop@mR+1
  4102   001B8E  ECFB  F00D         	call	_stop	;wreg free
  4103   001B92                     
  4104                           ;color_instructions.c: 169:             a--;
  4105   001B92  0644               	decf	WhiteInstructions@a^0,f,c
  4106   001B94  A0D8               	btfss	status,0,c
  4107   001B96  0645               	decf	(WhiteInstructions@a+1)^0,f,c
  4108   001B98                     l3887:
  4109                           
  4110                           ;color_instructions.c: 167:         while(a>0){
  4111   001B98  5044               	movf	WhiteInstructions@a^0,w,c
  4112   001B9A  1045               	iorwf	(WhiteInstructions@a+1)^0,w,c
  4113   001B9C  A4D8               	btfss	status,2,c
  4114   001B9E  EFD3  F00D         	goto	u3751
  4115   001BA2  EFD5  F00D         	goto	u3750
  4116   001BA6                     u3751:
  4117   001BA6  EFBF  F00D         	goto	l3883
  4118   001BAA                     u3750:
  4119   001BAA                     
  4120                           ;color_instructions.c: 172:         unsigned char anticolor = Return_Anti_Moves(&moves_i
      +                          ndex, anti_moves_array);
  4121   001BAA  0E56               	movlw	low _moves_index
  4122   001BAC  6E09               	movwf	Return_Anti_Moves@moves_index^0,c
  4123   001BAE  0E00               	movlw	high _moves_index
  4124   001BB0  6E0A               	movwf	(Return_Anti_Moves@moves_index+1)^0,c
  4125   001BB2  0E76               	movlw	low _anti_moves_array
  4126   001BB4  6E0B               	movwf	Return_Anti_Moves@anti_moves_array^0,c
  4127   001BB6  0E00               	movlw	high _anti_moves_array
  4128   001BB8  6E0C               	movwf	(Return_Anti_Moves@anti_moves_array+1)^0,c
  4129   001BBA  ECB4  F014         	call	_Return_Anti_Moves	;wreg free
  4130   001BBE  6E43               	movwf	WhiteInstructions@anticolor^0,c
  4131   001BC0                     
  4132                           ;color_instructions.c: 173:         MoveBuggy(anticolor,mL,mR);
  4133   001BC0  5043               	movf	WhiteInstructions@anticolor^0,w,c
  4134   001BC2  6E3F               	movwf	??_WhiteInstructions^0,c
  4135   001BC4  6A40               	clrf	(??_WhiteInstructions+1)^0,c
  4136   001BC6  C03F  F035         	movff	??_WhiteInstructions,MoveBuggy@color_detected
  4137   001BCA  C040  F036         	movff	??_WhiteInstructions+1,MoveBuggy@color_detected+1
  4138   001BCE  C03B  F037         	movff	WhiteInstructions@mL,MoveBuggy@mL
  4139   001BD2  C03C  F038         	movff	WhiteInstructions@mL+1,MoveBuggy@mL+1
  4140   001BD6  C03D  F039         	movff	WhiteInstructions@mR,MoveBuggy@mR
  4141   001BDA  C03E  F03A         	movff	WhiteInstructions@mR+1,MoveBuggy@mR+1
  4142   001BDE  EC20  F007         	call	_MoveBuggy	;wreg free
  4143   001BE2                     l3893:
  4144                           
  4145                           ;color_instructions.c: 158:     while(time_index>0){
  4146   001BE2  0100               	movlb	0	; () banked
  4147   001BE4  519E               	movf	_time_index& (0+255),w,b
  4148   001BE6  A4D8               	btfss	status,2,c
  4149   001BE8  EFF8  F00D         	goto	u3761
  4150   001BEC  EFFA  F00D         	goto	u3760
  4151   001BF0                     u3761:
  4152   001BF0  EF92  F00D         	goto	l3873
  4153   001BF4                     u3760:
  4154   001BF4                     
  4155                           ; BSR set to: 0
  4156   001BF4  0012               	return		;funcret
  4157   001BF6                     __end_of_WhiteInstructions:
  4158                           	callstack 0
  4159                           
  4160 ;; *************** function _Return_Time *****************
  4161 ;; Defined at:
  4162 ;;		line 40 in file "Memorization.c"
  4163 ;; Parameters:    Size  Location     Type
  4164 ;;  time_index      2    8[COMRAM] PTR unsigned char 
  4165 ;;		 -> time_index(1), 
  4166 ;;  time_array      2   10[COMRAM] PTR unsigned int 
  4167 ;;		 -> time_array(80), 
  4168 ;; Auto vars:     Size  Location     Type
  4169 ;;  temp            2   15[COMRAM] unsigned int 
  4170 ;; Return value:  Size  Location     Type
  4171 ;;                  2    8[COMRAM] unsigned int 
  4172 ;; Registers used:
  4173 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4174 ;; Tracked objects:
  4175 ;;		On entry : 0/0
  4176 ;;		On exit  : 0/0
  4177 ;;		Unchanged: 0/0
  4178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4179 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4180 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4181 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4182 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4183 ;;Total ram usage:        9 bytes
  4184 ;; Hardware stack levels used: 1
  4185 ;; Hardware stack levels required when called: 7
  4186 ;; This function calls:
  4187 ;;		Nothing
  4188 ;; This function is called by:
  4189 ;;		_WhiteInstructions
  4190 ;; This function uses a non-reentrant model
  4191 ;;
  4192                           
  4193                           	psect	text11
  4194   002806                     __ptext11:
  4195                           	callstack 0
  4196   002806                     _Return_Time:
  4197                           	callstack 22
  4198   002806                     
  4199                           ;Memorization.c: 41:     unsigned int temp;;Memorization.c: 43:     temp = time_array[--
      +                          (*time_index)];
  4200   002806  C009  FFD9         	movff	Return_Time@time_index,fsr2l
  4201   00280A  C00A  FFDA         	movff	Return_Time@time_index+1,fsr2h
  4202   00280E  06DF               	decf	indf2,f,c
  4203   002810  50DF               	movf	indf2,w,c
  4204   002812  6E0D               	movwf	??_Return_Time^0,c
  4205   002814  500D               	movf	??_Return_Time^0,w,c
  4206   002816  0D02               	mullw	2
  4207   002818  CFF3 F00E          	movff	prodl,??_Return_Time+1
  4208   00281C  CFF4 F00F          	movff	prodh,??_Return_Time+2
  4209   002820  500E               	movf	(??_Return_Time+1)^0,w,c
  4210   002822  240B               	addwf	Return_Time@time_array^0,w,c
  4211   002824  6ED9               	movwf	fsr2l,c
  4212   002826  500F               	movf	(??_Return_Time+2)^0,w,c
  4213   002828  200C               	addwfc	(Return_Time@time_array+1)^0,w,c
  4214   00282A  6EDA               	movwf	fsr2h,c
  4215   00282C  CFDE F010          	movff	postinc2,Return_Time@temp
  4216   002830  CFDD F011          	movff	postdec2,Return_Time@temp+1
  4217   002834                     
  4218                           ;Memorization.c: 44:     return temp;
  4219   002834  C010  F009         	movff	Return_Time@temp,?_Return_Time
  4220   002838  C011  F00A         	movff	Return_Time@temp+1,?_Return_Time+1
  4221   00283C  0012               	return		;funcret
  4222   00283E                     __end_of_Return_Time:
  4223                           	callstack 0
  4224                           
  4225 ;; *************** function _Return_Anti_Moves *****************
  4226 ;; Defined at:
  4227 ;;		line 32 in file "Memorization.c"
  4228 ;; Parameters:    Size  Location     Type
  4229 ;;  moves_index     2    8[COMRAM] PTR unsigned char 
  4230 ;;		 -> moves_index(1), 
  4231 ;;  anti_moves_a    2   10[COMRAM] PTR unsigned char 
  4232 ;;		 -> anti_moves_array(40), 
  4233 ;; Auto vars:     Size  Location     Type
  4234 ;;  temp            1   13[COMRAM] unsigned char 
  4235 ;; Return value:  Size  Location     Type
  4236 ;;                  1    wreg      unsigned char 
  4237 ;; Registers used:
  4238 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4239 ;; Tracked objects:
  4240 ;;		On entry : 0/0
  4241 ;;		On exit  : 0/0
  4242 ;;		Unchanged: 0/0
  4243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4244 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4245 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4246 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4247 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4248 ;;Total ram usage:        6 bytes
  4249 ;; Hardware stack levels used: 1
  4250 ;; Hardware stack levels required when called: 7
  4251 ;; This function calls:
  4252 ;;		Nothing
  4253 ;; This function is called by:
  4254 ;;		_WhiteInstructions
  4255 ;; This function uses a non-reentrant model
  4256 ;;
  4257                           
  4258                           	psect	text12
  4259   002968                     __ptext12:
  4260                           	callstack 0
  4261   002968                     _Return_Anti_Moves:
  4262                           	callstack 22
  4263   002968                     
  4264                           ;Memorization.c: 33:     unsigned char temp;;Memorization.c: 35:     temp = anti_moves_a
      +                          rray[--(*moves_index)];
  4265   002968  C009  FFD9         	movff	Return_Anti_Moves@moves_index,fsr2l
  4266   00296C  C00A  FFDA         	movff	Return_Anti_Moves@moves_index+1,fsr2h
  4267   002970  06DF               	decf	indf2,f,c
  4268   002972  50DF               	movf	indf2,w,c
  4269   002974  6E0D               	movwf	??_Return_Anti_Moves^0,c
  4270   002976  500D               	movf	??_Return_Anti_Moves^0,w,c
  4271   002978  240B               	addwf	Return_Anti_Moves@anti_moves_array^0,w,c
  4272   00297A  6ED9               	movwf	fsr2l,c
  4273   00297C  0E00               	movlw	0
  4274   00297E  200C               	addwfc	(Return_Anti_Moves@anti_moves_array+1)^0,w,c
  4275   002980  6EDA               	movwf	fsr2h,c
  4276   002982  50DF               	movf	indf2,w,c
  4277   002984  6E0E               	movwf	Return_Anti_Moves@temp^0,c
  4278   002986                     
  4279                           ;Memorization.c: 36:     return temp;
  4280   002986  500E               	movf	Return_Anti_Moves@temp^0,w,c
  4281   002988  0012               	return		;funcret
  4282   00298A                     __end_of_Return_Anti_Moves:
  4283                           	callstack 0
  4284                           
  4285 ;; *************** function _MoveBuggy *****************
  4286 ;; Defined at:
  4287 ;;		line 179 in file "color_instructions.c"
  4288 ;; Parameters:    Size  Location     Type
  4289 ;;  color_detect    2   52[COMRAM] PTR unsigned char 
  4290 ;;		 -> RAM(3561), 
  4291 ;;  mL              2   54[COMRAM] PTR struct DC_motor
  4292 ;;		 -> main@motorL(9), 
  4293 ;;  mR              2   56[COMRAM] PTR struct DC_motor
  4294 ;;		 -> main@motorR(9), 
  4295 ;; Auto vars:     Size  Location     Type
  4296 ;;		None
  4297 ;; Return value:  Size  Location     Type
  4298 ;;                  1    wreg      void 
  4299 ;; Registers used:
  4300 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4301 ;; Tracked objects:
  4302 ;;		On entry : 0/0
  4303 ;;		On exit  : 0/0
  4304 ;;		Unchanged: 0/0
  4305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4306 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4309 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4310 ;;Total ram usage:        6 bytes
  4311 ;; Hardware stack levels used: 1
  4312 ;; Hardware stack levels required when called: 13
  4313 ;; This function calls:
  4314 ;;		_AntiPink
  4315 ;;		_AntiYellow
  4316 ;;		_AppendMoves
  4317 ;;		_BlueInstructions
  4318 ;;		_GreenInstructions
  4319 ;;		_LightBlueInstructions
  4320 ;;		_OrangeInstructions
  4321 ;;		_PinkInstructions
  4322 ;;		_RedInstructions
  4323 ;;		_YellowInstructions
  4324 ;; This function is called by:
  4325 ;;		_main
  4326 ;;		_WhiteInstructions
  4327 ;; This function uses a non-reentrant model
  4328 ;;
  4329                           
  4330                           	psect	text13
  4331   000E40                     __ptext13:
  4332                           	callstack 0
  4333   000E40                     _MoveBuggy:
  4334                           	callstack 16
  4335   000E40                     
  4336                           ;color_instructions.c: 180:     if (color_detected==1){
  4337   000E40  0435               	decf	MoveBuggy@color_detected^0,w,c
  4338   000E42  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4339   000E44  A4D8               	btfss	status,2,c
  4340   000E46  EF27  F007         	goto	u2491
  4341   000E4A  EF29  F007         	goto	u2490
  4342   000E4E                     u2491:
  4343   000E4E  EF47  F007         	goto	l3237
  4344   000E52                     u2490:
  4345   000E52                     
  4346                           ;color_instructions.c: 181:         RedInstructions(mL, mR);
  4347   000E52  C037  F027         	movff	MoveBuggy@mL,RedInstructions@mL
  4348   000E56  C038  F028         	movff	MoveBuggy@mL+1,RedInstructions@mL+1
  4349   000E5A  C039  F029         	movff	MoveBuggy@mR,RedInstructions@mR
  4350   000E5E  C03A  F02A         	movff	MoveBuggy@mR+1,RedInstructions@mR+1
  4351   000E62  EC72  F011         	call	_RedInstructions	;wreg free
  4352   000E66                     
  4353                           ;color_instructions.c: 182:         if(LATDbits.LATD7 != 1){
  4354   000E66  BE7C               	btfsc	124,7,c	;volatile
  4355   000E68  EF38  F007         	goto	u2501
  4356   000E6C  EF3A  F007         	goto	u2500
  4357   000E70                     u2501:
  4358   000E70  EF61  F008         	goto	l675
  4359   000E74                     u2500:
  4360   000E74                     
  4361                           ;color_instructions.c: 183:             AppendMoves(2,&moves_index,anti_moves_array);
  4362   000E74  0E56               	movlw	low _moves_index
  4363   000E76  6E09               	movwf	AppendMoves@moves_index^0,c
  4364   000E78  0E00               	movlw	high _moves_index
  4365   000E7A  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4366   000E7C  0E76               	movlw	low _anti_moves_array
  4367   000E7E  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4368   000E80  0E00               	movlw	high _anti_moves_array
  4369   000E82  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4370   000E84  0E02               	movlw	2
  4371   000E86  ECA2  F014         	call	_AppendMoves
  4372   000E8A  EF61  F008         	goto	l675
  4373   000E8E                     l3237:
  4374   000E8E  0E02               	movlw	2
  4375   000E90  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4376   000E92  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4377   000E94  A4D8               	btfss	status,2,c
  4378   000E96  EF4F  F007         	goto	u2511
  4379   000E9A  EF51  F007         	goto	u2510
  4380   000E9E                     u2511:
  4381   000E9E  EF6F  F007         	goto	l3245
  4382   000EA2                     u2510:
  4383   000EA2                     
  4384                           ;color_instructions.c: 187:         GreenInstructions(mL, mR);
  4385   000EA2  C037  F027         	movff	MoveBuggy@mL,GreenInstructions@mL
  4386   000EA6  C038  F028         	movff	MoveBuggy@mL+1,GreenInstructions@mL+1
  4387   000EAA  C039  F029         	movff	MoveBuggy@mR,GreenInstructions@mR
  4388   000EAE  C03A  F02A         	movff	MoveBuggy@mR+1,GreenInstructions@mR+1
  4389   000EB2  ECB5  F011         	call	_GreenInstructions	;wreg free
  4390   000EB6                     
  4391                           ;color_instructions.c: 188:         if(LATDbits.LATD7 != 1){
  4392   000EB6  BE7C               	btfsc	124,7,c	;volatile
  4393   000EB8  EF60  F007         	goto	u2521
  4394   000EBC  EF62  F007         	goto	u2520
  4395   000EC0                     u2521:
  4396   000EC0  EF61  F008         	goto	l675
  4397   000EC4                     u2520:
  4398   000EC4                     
  4399                           ;color_instructions.c: 189:             AppendMoves(1,&moves_index,anti_moves_array);
  4400   000EC4  0E56               	movlw	low _moves_index
  4401   000EC6  6E09               	movwf	AppendMoves@moves_index^0,c
  4402   000EC8  0E00               	movlw	high _moves_index
  4403   000ECA  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4404   000ECC  0E76               	movlw	low _anti_moves_array
  4405   000ECE  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4406   000ED0  0E00               	movlw	high _anti_moves_array
  4407   000ED2  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4408   000ED4  0E01               	movlw	1
  4409   000ED6  ECA2  F014         	call	_AppendMoves
  4410   000EDA  EF61  F008         	goto	l675
  4411   000EDE                     l3245:
  4412   000EDE  0E03               	movlw	3
  4413   000EE0  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4414   000EE2  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4415   000EE4  A4D8               	btfss	status,2,c
  4416   000EE6  EF77  F007         	goto	u2531
  4417   000EEA  EF79  F007         	goto	u2530
  4418   000EEE                     u2531:
  4419   000EEE  EF97  F007         	goto	l3253
  4420   000EF2                     u2530:
  4421   000EF2                     
  4422                           ;color_instructions.c: 193:         BlueInstructions(mL, mR);
  4423   000EF2  C037  F027         	movff	MoveBuggy@mL,BlueInstructions@mL
  4424   000EF6  C038  F028         	movff	MoveBuggy@mL+1,BlueInstructions@mL+1
  4425   000EFA  C039  F029         	movff	MoveBuggy@mR,BlueInstructions@mR
  4426   000EFE  C03A  F02A         	movff	MoveBuggy@mR+1,BlueInstructions@mR+1
  4427   000F02  EC17  F00F         	call	_BlueInstructions	;wreg free
  4428   000F06                     
  4429                           ;color_instructions.c: 194:         if(LATDbits.LATD7 != 1){
  4430   000F06  BE7C               	btfsc	124,7,c	;volatile
  4431   000F08  EF88  F007         	goto	u2541
  4432   000F0C  EF8A  F007         	goto	u2540
  4433   000F10                     u2541:
  4434   000F10  EF61  F008         	goto	l675
  4435   000F14                     u2540:
  4436   000F14                     
  4437                           ;color_instructions.c: 195:             AppendMoves(3,&moves_index,anti_moves_array);
  4438   000F14  0E56               	movlw	low _moves_index
  4439   000F16  6E09               	movwf	AppendMoves@moves_index^0,c
  4440   000F18  0E00               	movlw	high _moves_index
  4441   000F1A  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4442   000F1C  0E76               	movlw	low _anti_moves_array
  4443   000F1E  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4444   000F20  0E00               	movlw	high _anti_moves_array
  4445   000F22  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4446   000F24  0E03               	movlw	3
  4447   000F26  ECA2  F014         	call	_AppendMoves
  4448   000F2A  EF61  F008         	goto	l675
  4449   000F2E                     l3253:
  4450   000F2E  0E04               	movlw	4
  4451   000F30  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4452   000F32  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4453   000F34  A4D8               	btfss	status,2,c
  4454   000F36  EF9F  F007         	goto	u2551
  4455   000F3A  EFA1  F007         	goto	u2550
  4456   000F3E                     u2551:
  4457   000F3E  EFBF  F007         	goto	l3261
  4458   000F42                     u2550:
  4459   000F42                     
  4460                           ;color_instructions.c: 199:         YellowInstructions(mL, mR);
  4461   000F42  C037  F027         	movff	MoveBuggy@mL,YellowInstructions@mL
  4462   000F46  C038  F028         	movff	MoveBuggy@mL+1,YellowInstructions@mL+1
  4463   000F4A  C039  F029         	movff	MoveBuggy@mR,YellowInstructions@mR
  4464   000F4E  C03A  F02A         	movff	MoveBuggy@mR+1,YellowInstructions@mR+1
  4465   000F52  EC66  F010         	call	_YellowInstructions	;wreg free
  4466   000F56                     
  4467                           ;color_instructions.c: 201:         if(LATDbits.LATD7 != 1){
  4468   000F56  BE7C               	btfsc	124,7,c	;volatile
  4469   000F58  EFB0  F007         	goto	u2561
  4470   000F5C  EFB2  F007         	goto	u2560
  4471   000F60                     u2561:
  4472   000F60  EF61  F008         	goto	l675
  4473   000F64                     u2560:
  4474   000F64                     
  4475                           ;color_instructions.c: 202:             AppendMoves(9,&moves_index,anti_moves_array);
  4476   000F64  0E56               	movlw	low _moves_index
  4477   000F66  6E09               	movwf	AppendMoves@moves_index^0,c
  4478   000F68  0E00               	movlw	high _moves_index
  4479   000F6A  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4480   000F6C  0E76               	movlw	low _anti_moves_array
  4481   000F6E  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4482   000F70  0E00               	movlw	high _anti_moves_array
  4483   000F72  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4484   000F74  0E09               	movlw	9
  4485   000F76  ECA2  F014         	call	_AppendMoves
  4486   000F7A  EF61  F008         	goto	l675
  4487   000F7E                     l3261:
  4488   000F7E  0E05               	movlw	5
  4489   000F80  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4490   000F82  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4491   000F84  A4D8               	btfss	status,2,c
  4492   000F86  EFC7  F007         	goto	u2571
  4493   000F8A  EFC9  F007         	goto	u2570
  4494   000F8E                     u2571:
  4495   000F8E  EFE7  F007         	goto	l3269
  4496   000F92                     u2570:
  4497   000F92                     
  4498                           ;color_instructions.c: 206:         PinkInstructions(mL, mR);
  4499   000F92  C037  F027         	movff	MoveBuggy@mL,PinkInstructions@mL
  4500   000F96  C038  F028         	movff	MoveBuggy@mL+1,PinkInstructions@mL+1
  4501   000F9A  C039  F029         	movff	MoveBuggy@mR,PinkInstructions@mR
  4502   000F9E  C03A  F02A         	movff	MoveBuggy@mR+1,PinkInstructions@mR+1
  4503   000FA2  ECA9  F010         	call	_PinkInstructions	;wreg free
  4504   000FA6                     
  4505                           ;color_instructions.c: 208:         if(LATDbits.LATD7 != 1){
  4506   000FA6  BE7C               	btfsc	124,7,c	;volatile
  4507   000FA8  EFD8  F007         	goto	u2581
  4508   000FAC  EFDA  F007         	goto	u2580
  4509   000FB0                     u2581:
  4510   000FB0  EF61  F008         	goto	l675
  4511   000FB4                     u2580:
  4512   000FB4                     
  4513                           ;color_instructions.c: 209:             AppendMoves(10,&moves_index,anti_moves_array);
  4514   000FB4  0E56               	movlw	low _moves_index
  4515   000FB6  6E09               	movwf	AppendMoves@moves_index^0,c
  4516   000FB8  0E00               	movlw	high _moves_index
  4517   000FBA  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4518   000FBC  0E76               	movlw	low _anti_moves_array
  4519   000FBE  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4520   000FC0  0E00               	movlw	high _anti_moves_array
  4521   000FC2  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4522   000FC4  0E0A               	movlw	10
  4523   000FC6  ECA2  F014         	call	_AppendMoves
  4524   000FCA  EF61  F008         	goto	l675
  4525   000FCE                     l3269:
  4526   000FCE  0E06               	movlw	6
  4527   000FD0  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4528   000FD2  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4529   000FD4  A4D8               	btfss	status,2,c
  4530   000FD6  EFEF  F007         	goto	u2591
  4531   000FDA  EFF1  F007         	goto	u2590
  4532   000FDE                     u2591:
  4533   000FDE  EF0F  F008         	goto	l3277
  4534   000FE2                     u2590:
  4535   000FE2                     
  4536                           ;color_instructions.c: 213:         OrangeInstructions(mL, mR);
  4537   000FE2  C037  F02C         	movff	MoveBuggy@mL,OrangeInstructions@mL
  4538   000FE6  C038  F02D         	movff	MoveBuggy@mL+1,OrangeInstructions@mL+1
  4539   000FEA  C039  F02E         	movff	MoveBuggy@mR,OrangeInstructions@mR
  4540   000FEE  C03A  F02F         	movff	MoveBuggy@mR+1,OrangeInstructions@mR+1
  4541   000FF2  ECEC  F010         	call	_OrangeInstructions	;wreg free
  4542   000FF6                     
  4543                           ;color_instructions.c: 214:         if(LATDbits.LATD7 != 1){
  4544   000FF6  BE7C               	btfsc	124,7,c	;volatile
  4545   000FF8  EF00  F008         	goto	u2601
  4546   000FFC  EF02  F008         	goto	u2600
  4547   001000                     u2601:
  4548   001000  EF61  F008         	goto	l675
  4549   001004                     u2600:
  4550   001004                     
  4551                           ;color_instructions.c: 215:             AppendMoves(7,&moves_index,anti_moves_array);
  4552   001004  0E56               	movlw	low _moves_index
  4553   001006  6E09               	movwf	AppendMoves@moves_index^0,c
  4554   001008  0E00               	movlw	high _moves_index
  4555   00100A  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4556   00100C  0E76               	movlw	low _anti_moves_array
  4557   00100E  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4558   001010  0E00               	movlw	high _anti_moves_array
  4559   001012  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4560   001014  0E07               	movlw	7
  4561   001016  ECA2  F014         	call	_AppendMoves
  4562   00101A  EF61  F008         	goto	l675
  4563   00101E                     l3277:
  4564   00101E  0E07               	movlw	7
  4565   001020  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4566   001022  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4567   001024  A4D8               	btfss	status,2,c
  4568   001026  EF17  F008         	goto	u2611
  4569   00102A  EF19  F008         	goto	u2610
  4570   00102E                     u2611:
  4571   00102E  EF37  F008         	goto	l3285
  4572   001032                     u2610:
  4573   001032                     
  4574                           ;color_instructions.c: 219:         LightBlueInstructions(mL, mR);
  4575   001032  C037  F02C         	movff	MoveBuggy@mL,LightBlueInstructions@mL
  4576   001036  C038  F02D         	movff	MoveBuggy@mL+1,LightBlueInstructions@mL+1
  4577   00103A  C039  F02E         	movff	MoveBuggy@mR,LightBlueInstructions@mR
  4578   00103E  C03A  F02F         	movff	MoveBuggy@mR+1,LightBlueInstructions@mR+1
  4579   001042  EC2F  F011         	call	_LightBlueInstructions	;wreg free
  4580   001046                     
  4581                           ;color_instructions.c: 220:         if(LATDbits.LATD7 != 1){
  4582   001046  BE7C               	btfsc	124,7,c	;volatile
  4583   001048  EF28  F008         	goto	u2621
  4584   00104C  EF2A  F008         	goto	u2620
  4585   001050                     u2621:
  4586   001050  EF61  F008         	goto	l675
  4587   001054                     u2620:
  4588   001054                     
  4589                           ;color_instructions.c: 221:             AppendMoves(6,&moves_index,anti_moves_array);
  4590   001054  0E56               	movlw	low _moves_index
  4591   001056  6E09               	movwf	AppendMoves@moves_index^0,c
  4592   001058  0E00               	movlw	high _moves_index
  4593   00105A  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4594   00105C  0E76               	movlw	low _anti_moves_array
  4595   00105E  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4596   001060  0E00               	movlw	high _anti_moves_array
  4597   001062  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4598   001064  0E06               	movlw	6
  4599   001066  ECA2  F014         	call	_AppendMoves
  4600   00106A  EF61  F008         	goto	l675
  4601   00106E                     l3285:
  4602   00106E  0E09               	movlw	9
  4603   001070  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4604   001072  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4605   001074  A4D8               	btfss	status,2,c
  4606   001076  EF3F  F008         	goto	u2631
  4607   00107A  EF41  F008         	goto	u2630
  4608   00107E                     u2631:
  4609   00107E  EF4D  F008         	goto	l3289
  4610   001082                     u2630:
  4611   001082                     
  4612                           ;color_instructions.c: 227:         AntiYellow(mL, mR);
  4613   001082  C037  F02E         	movff	MoveBuggy@mL,AntiYellow@mL
  4614   001086  C038  F02F         	movff	MoveBuggy@mL+1,AntiYellow@mL+1
  4615   00108A  C039  F030         	movff	MoveBuggy@mR,AntiYellow@mR
  4616   00108E  C03A  F031         	movff	MoveBuggy@mR+1,AntiYellow@mR+1
  4617   001092  EC65  F00E         	call	_AntiYellow	;wreg free
  4618                           
  4619                           ;color_instructions.c: 228:     }
  4620   001096  EF61  F008         	goto	l675
  4621   00109A                     l3289:
  4622   00109A  0E0A               	movlw	10
  4623   00109C  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4624   00109E  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4625   0010A0  A4D8               	btfss	status,2,c
  4626   0010A2  EF55  F008         	goto	u2641
  4627   0010A6  EF57  F008         	goto	u2640
  4628   0010AA                     u2641:
  4629   0010AA  EF61  F008         	goto	l675
  4630   0010AE                     u2640:
  4631   0010AE                     
  4632                           ;color_instructions.c: 230:         AntiPink(mL, mR);
  4633   0010AE  C037  F02E         	movff	MoveBuggy@mL,AntiPink@mL
  4634   0010B2  C038  F02F         	movff	MoveBuggy@mL+1,AntiPink@mL+1
  4635   0010B6  C039  F030         	movff	MoveBuggy@mR,AntiPink@mR
  4636   0010BA  C03A  F031         	movff	MoveBuggy@mR+1,AntiPink@mR+1
  4637   0010BE  ECBE  F00E         	call	_AntiPink	;wreg free
  4638   0010C2                     l675:
  4639   0010C2  0012               	return		;funcret
  4640   0010C4                     __end_of_MoveBuggy:
  4641                           	callstack 0
  4642                           
  4643 ;; *************** function _YellowInstructions *****************
  4644 ;; Defined at:
  4645 ;;		line 57 in file "color_instructions.c"
  4646 ;; Parameters:    Size  Location     Type
  4647 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  4648 ;;		 -> main@motorL(9), 
  4649 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  4650 ;;		 -> main@motorR(9), 
  4651 ;; Auto vars:     Size  Location     Type
  4652 ;;  a               1   44[COMRAM] unsigned char 
  4653 ;; Return value:  Size  Location     Type
  4654 ;;                  1    wreg      void 
  4655 ;; Registers used:
  4656 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4657 ;; Tracked objects:
  4658 ;;		On entry : 0/0
  4659 ;;		On exit  : 0/0
  4660 ;;		Unchanged: 0/0
  4661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4662 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4663 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4664 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4665 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4666 ;;Total ram usage:        7 bytes
  4667 ;; Hardware stack levels used: 1
  4668 ;; Hardware stack levels required when called: 11
  4669 ;; This function calls:
  4670 ;;		_fullSpeedBackwards
  4671 ;;		_stop
  4672 ;;		_turnRight90
  4673 ;; This function is called by:
  4674 ;;		_MoveBuggy
  4675 ;; This function uses a non-reentrant model
  4676 ;;
  4677                           
  4678                           	psect	text14
  4679   0020CC                     __ptext14:
  4680                           	callstack 0
  4681   0020CC                     _YellowInstructions:
  4682                           	callstack 17
  4683   0020CC                     
  4684                           ;color_instructions.c: 59:     unsigned char a=0;
  4685   0020CC  0E00               	movlw	0
  4686   0020CE  6E2D               	movwf	YellowInstructions@a^0,c
  4687                           
  4688                           ;color_instructions.c: 60:     while (a<45){
  4689   0020D0  EF75  F010         	goto	l3077
  4690   0020D4                     l3073:
  4691                           
  4692                           ;color_instructions.c: 61:         fullSpeedBackwards(mL, mR);
  4693   0020D4  C027  F01C         	movff	YellowInstructions@mL,fullSpeedBackwards@mL
  4694   0020D8  C028  F01D         	movff	YellowInstructions@mL+1,fullSpeedBackwards@mL+1
  4695   0020DC  C029  F01E         	movff	YellowInstructions@mR,fullSpeedBackwards@mR
  4696   0020E0  C02A  F01F         	movff	YellowInstructions@mR+1,fullSpeedBackwards@mR+1
  4697   0020E4  EC0F  F00D         	call	_fullSpeedBackwards	;wreg free
  4698   0020E8                     
  4699                           ;color_instructions.c: 62:         a++;
  4700   0020E8  2A2D               	incf	YellowInstructions@a^0,f,c
  4701   0020EA                     l3077:
  4702                           
  4703                           ;color_instructions.c: 60:     while (a<45){
  4704   0020EA  0E2C               	movlw	44
  4705   0020EC  642D               	cpfsgt	YellowInstructions@a^0,c
  4706   0020EE  EF7B  F010         	goto	u2371
  4707   0020F2  EF7D  F010         	goto	u2370
  4708   0020F6                     u2371:
  4709   0020F6  EF6A  F010         	goto	l3073
  4710   0020FA                     u2370:
  4711   0020FA  EF8A  F010         	goto	l3083
  4712   0020FE                     l3079:
  4713                           
  4714                           ;color_instructions.c: 65:         stop(mL, mR);
  4715   0020FE  C027  F01C         	movff	YellowInstructions@mL,stop@mL
  4716   002102  C028  F01D         	movff	YellowInstructions@mL+1,stop@mL+1
  4717   002106  C029  F01E         	movff	YellowInstructions@mR,stop@mR
  4718   00210A  C02A  F01F         	movff	YellowInstructions@mR+1,stop@mR+1
  4719   00210E  ECFB  F00D         	call	_stop	;wreg free
  4720   002112                     
  4721                           ;color_instructions.c: 66:         a--;
  4722   002112  062D               	decf	YellowInstructions@a^0,f,c
  4723   002114                     l3083:
  4724                           
  4725                           ;color_instructions.c: 64:     while (a>0){
  4726   002114  502D               	movf	YellowInstructions@a^0,w,c
  4727   002116  A4D8               	btfss	status,2,c
  4728   002118  EF90  F010         	goto	u2381
  4729   00211C  EF92  F010         	goto	u2380
  4730   002120                     u2381:
  4731   002120  EF7F  F010         	goto	l3079
  4732   002124                     u2380:
  4733   002124                     
  4734                           ;color_instructions.c: 68:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4735   002124  0E05               	movlw	5
  4736   002126  6E2C               	movwf	(??_YellowInstructions+1)^0,c
  4737   002128  0E0F               	movlw	15
  4738   00212A  6E2B               	movwf	??_YellowInstructions^0,c
  4739   00212C  0EF1               	movlw	241
  4740   00212E                     u4547:
  4741   00212E  2EE8               	decfsz	wreg,f,c
  4742   002130  D7FE               	bra	u4547
  4743   002132  2E2B               	decfsz	??_YellowInstructions^0,f,c
  4744   002134  D7FC               	bra	u4547
  4745   002136  2E2C               	decfsz	(??_YellowInstructions+1)^0,f,c
  4746   002138  D7FA               	bra	u4547
  4747   00213A  F000               	nop	
  4748   00213C                     
  4749                           ;color_instructions.c: 69:     turnRight90(mL, mR);
  4750   00213C  C027  F022         	movff	YellowInstructions@mL,turnRight90@mL
  4751   002140  C028  F023         	movff	YellowInstructions@mL+1,turnRight90@mL+1
  4752   002144  C029  F024         	movff	YellowInstructions@mR,turnRight90@mR
  4753   002148  C02A  F025         	movff	YellowInstructions@mR+1,turnRight90@mR+1
  4754   00214C  EC70  F00F         	call	_turnRight90	;wreg free
  4755   002150  0012               	return		;funcret
  4756   002152                     __end_of_YellowInstructions:
  4757                           	callstack 0
  4758                           
  4759 ;; *************** function _PinkInstructions *****************
  4760 ;; Defined at:
  4761 ;;		line 72 in file "color_instructions.c"
  4762 ;; Parameters:    Size  Location     Type
  4763 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  4764 ;;		 -> main@motorL(9), 
  4765 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  4766 ;;		 -> main@motorR(9), 
  4767 ;; Auto vars:     Size  Location     Type
  4768 ;;  a               1   44[COMRAM] unsigned char 
  4769 ;; Return value:  Size  Location     Type
  4770 ;;                  1    wreg      void 
  4771 ;; Registers used:
  4772 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4773 ;; Tracked objects:
  4774 ;;		On entry : 0/0
  4775 ;;		On exit  : 0/0
  4776 ;;		Unchanged: 0/0
  4777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4778 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4779 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4780 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4781 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4782 ;;Total ram usage:        7 bytes
  4783 ;; Hardware stack levels used: 1
  4784 ;; Hardware stack levels required when called: 11
  4785 ;; This function calls:
  4786 ;;		_fullSpeedBackwards
  4787 ;;		_stop
  4788 ;;		_turnLeft90
  4789 ;; This function is called by:
  4790 ;;		_MoveBuggy
  4791 ;; This function uses a non-reentrant model
  4792 ;;
  4793                           
  4794                           	psect	text15
  4795   002152                     __ptext15:
  4796                           	callstack 0
  4797   002152                     _PinkInstructions:
  4798                           	callstack 17
  4799   002152                     
  4800                           ;color_instructions.c: 73:     unsigned char a=0;
  4801   002152  0E00               	movlw	0
  4802   002154  6E2D               	movwf	PinkInstructions@a^0,c
  4803                           
  4804                           ;color_instructions.c: 74:     while (a<45){
  4805   002156  EFB8  F010         	goto	l3095
  4806   00215A                     l3091:
  4807                           
  4808                           ;color_instructions.c: 75:         fullSpeedBackwards(mL, mR);
  4809   00215A  C027  F01C         	movff	PinkInstructions@mL,fullSpeedBackwards@mL
  4810   00215E  C028  F01D         	movff	PinkInstructions@mL+1,fullSpeedBackwards@mL+1
  4811   002162  C029  F01E         	movff	PinkInstructions@mR,fullSpeedBackwards@mR
  4812   002166  C02A  F01F         	movff	PinkInstructions@mR+1,fullSpeedBackwards@mR+1
  4813   00216A  EC0F  F00D         	call	_fullSpeedBackwards	;wreg free
  4814   00216E                     
  4815                           ;color_instructions.c: 76:         a++;
  4816   00216E  2A2D               	incf	PinkInstructions@a^0,f,c
  4817   002170                     l3095:
  4818                           
  4819                           ;color_instructions.c: 74:     while (a<45){
  4820   002170  0E2C               	movlw	44
  4821   002172  642D               	cpfsgt	PinkInstructions@a^0,c
  4822   002174  EFBE  F010         	goto	u2391
  4823   002178  EFC0  F010         	goto	u2390
  4824   00217C                     u2391:
  4825   00217C  EFAD  F010         	goto	l3091
  4826   002180                     u2390:
  4827   002180  EFCD  F010         	goto	l3101
  4828   002184                     l3097:
  4829                           
  4830                           ;color_instructions.c: 79:         stop(mL, mR);
  4831   002184  C027  F01C         	movff	PinkInstructions@mL,stop@mL
  4832   002188  C028  F01D         	movff	PinkInstructions@mL+1,stop@mL+1
  4833   00218C  C029  F01E         	movff	PinkInstructions@mR,stop@mR
  4834   002190  C02A  F01F         	movff	PinkInstructions@mR+1,stop@mR+1
  4835   002194  ECFB  F00D         	call	_stop	;wreg free
  4836   002198                     
  4837                           ;color_instructions.c: 80:         a--;
  4838   002198  062D               	decf	PinkInstructions@a^0,f,c
  4839   00219A                     l3101:
  4840                           
  4841                           ;color_instructions.c: 78:     while (a>0){
  4842   00219A  502D               	movf	PinkInstructions@a^0,w,c
  4843   00219C  A4D8               	btfss	status,2,c
  4844   00219E  EFD3  F010         	goto	u2401
  4845   0021A2  EFD5  F010         	goto	u2400
  4846   0021A6                     u2401:
  4847   0021A6  EFC2  F010         	goto	l3097
  4848   0021AA                     u2400:
  4849   0021AA                     
  4850                           ;color_instructions.c: 82:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4851   0021AA  0E05               	movlw	5
  4852   0021AC  6E2C               	movwf	(??_PinkInstructions+1)^0,c
  4853   0021AE  0E0F               	movlw	15
  4854   0021B0  6E2B               	movwf	??_PinkInstructions^0,c
  4855   0021B2  0EF1               	movlw	241
  4856   0021B4                     u4557:
  4857   0021B4  2EE8               	decfsz	wreg,f,c
  4858   0021B6  D7FE               	bra	u4557
  4859   0021B8  2E2B               	decfsz	??_PinkInstructions^0,f,c
  4860   0021BA  D7FC               	bra	u4557
  4861   0021BC  2E2C               	decfsz	(??_PinkInstructions+1)^0,f,c
  4862   0021BE  D7FA               	bra	u4557
  4863   0021C0  F000               	nop	
  4864   0021C2                     
  4865                           ;color_instructions.c: 83:     turnLeft90(mL, mR);
  4866   0021C2  C027  F022         	movff	PinkInstructions@mL,turnLeft90@mL
  4867   0021C6  C028  F023         	movff	PinkInstructions@mL+1,turnLeft90@mL+1
  4868   0021CA  C029  F024         	movff	PinkInstructions@mR,turnLeft90@mR
  4869   0021CE  C02A  F025         	movff	PinkInstructions@mR+1,turnLeft90@mR+1
  4870   0021D2  ECC7  F00F         	call	_turnLeft90	;wreg free
  4871   0021D6  0012               	return		;funcret
  4872   0021D8                     __end_of_PinkInstructions:
  4873                           	callstack 0
  4874                           
  4875 ;; *************** function _OrangeInstructions *****************
  4876 ;; Defined at:
  4877 ;;		line 87 in file "color_instructions.c"
  4878 ;; Parameters:    Size  Location     Type
  4879 ;;  mL              2   43[COMRAM] PTR struct DC_motor
  4880 ;;		 -> main@motorL(9), 
  4881 ;;  mR              2   45[COMRAM] PTR struct DC_motor
  4882 ;;		 -> main@motorR(9), 
  4883 ;; Auto vars:     Size  Location     Type
  4884 ;;  a               1   49[COMRAM] unsigned char 
  4885 ;; Return value:  Size  Location     Type
  4886 ;;                  1    wreg      void 
  4887 ;; Registers used:
  4888 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4889 ;; Tracked objects:
  4890 ;;		On entry : 0/0
  4891 ;;		On exit  : 0/0
  4892 ;;		Unchanged: 0/0
  4893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4894 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4895 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4896 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4897 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4898 ;;Total ram usage:        7 bytes
  4899 ;; Hardware stack levels used: 1
  4900 ;; Hardware stack levels required when called: 12
  4901 ;; This function calls:
  4902 ;;		_fullSpeedBackwards
  4903 ;;		_stop
  4904 ;;		_turnRight135
  4905 ;; This function is called by:
  4906 ;;		_MoveBuggy
  4907 ;; This function uses a non-reentrant model
  4908 ;;
  4909                           
  4910                           	psect	text16
  4911   0021D8                     __ptext16:
  4912                           	callstack 0
  4913   0021D8                     _OrangeInstructions:
  4914                           	callstack 16
  4915   0021D8                     
  4916                           ;color_instructions.c: 88:     unsigned char a=0;
  4917   0021D8  0E00               	movlw	0
  4918   0021DA  6E32               	movwf	OrangeInstructions@a^0,c
  4919                           
  4920                           ;color_instructions.c: 89:     while (a<16){
  4921   0021DC  EFFB  F010         	goto	l3113
  4922   0021E0                     l3109:
  4923                           
  4924                           ;color_instructions.c: 90:         fullSpeedBackwards(mL, mR);
  4925   0021E0  C02C  F01C         	movff	OrangeInstructions@mL,fullSpeedBackwards@mL
  4926   0021E4  C02D  F01D         	movff	OrangeInstructions@mL+1,fullSpeedBackwards@mL+1
  4927   0021E8  C02E  F01E         	movff	OrangeInstructions@mR,fullSpeedBackwards@mR
  4928   0021EC  C02F  F01F         	movff	OrangeInstructions@mR+1,fullSpeedBackwards@mR+1
  4929   0021F0  EC0F  F00D         	call	_fullSpeedBackwards	;wreg free
  4930   0021F4                     
  4931                           ;color_instructions.c: 91:         a++;
  4932   0021F4  2A32               	incf	OrangeInstructions@a^0,f,c
  4933   0021F6                     l3113:
  4934                           
  4935                           ;color_instructions.c: 89:     while (a<16){
  4936   0021F6  0E0F               	movlw	15
  4937   0021F8  6432               	cpfsgt	OrangeInstructions@a^0,c
  4938   0021FA  EF01  F011         	goto	u2411
  4939   0021FE  EF03  F011         	goto	u2410
  4940   002202                     u2411:
  4941   002202  EFF0  F010         	goto	l3109
  4942   002206                     u2410:
  4943   002206  EF10  F011         	goto	l3119
  4944   00220A                     l3115:
  4945                           
  4946                           ;color_instructions.c: 94:         stop(mL, mR);
  4947   00220A  C02C  F01C         	movff	OrangeInstructions@mL,stop@mL
  4948   00220E  C02D  F01D         	movff	OrangeInstructions@mL+1,stop@mL+1
  4949   002212  C02E  F01E         	movff	OrangeInstructions@mR,stop@mR
  4950   002216  C02F  F01F         	movff	OrangeInstructions@mR+1,stop@mR+1
  4951   00221A  ECFB  F00D         	call	_stop	;wreg free
  4952   00221E                     
  4953                           ;color_instructions.c: 95:         a--;
  4954   00221E  0632               	decf	OrangeInstructions@a^0,f,c
  4955   002220                     l3119:
  4956                           
  4957                           ;color_instructions.c: 93:     while (a>0){
  4958   002220  5032               	movf	OrangeInstructions@a^0,w,c
  4959   002222  A4D8               	btfss	status,2,c
  4960   002224  EF16  F011         	goto	u2421
  4961   002228  EF18  F011         	goto	u2420
  4962   00222C                     u2421:
  4963   00222C  EF05  F011         	goto	l3115
  4964   002230                     u2420:
  4965   002230                     
  4966                           ;color_instructions.c: 97:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4967   002230  0E05               	movlw	5
  4968   002232  6E31               	movwf	(??_OrangeInstructions+1)^0,c
  4969   002234  0E0F               	movlw	15
  4970   002236  6E30               	movwf	??_OrangeInstructions^0,c
  4971   002238  0EF1               	movlw	241
  4972   00223A                     u4567:
  4973   00223A  2EE8               	decfsz	wreg,f,c
  4974   00223C  D7FE               	bra	u4567
  4975   00223E  2E30               	decfsz	??_OrangeInstructions^0,f,c
  4976   002240  D7FC               	bra	u4567
  4977   002242  2E31               	decfsz	(??_OrangeInstructions+1)^0,f,c
  4978   002244  D7FA               	bra	u4567
  4979   002246  F000               	nop	
  4980   002248                     
  4981                           ;color_instructions.c: 98:     turnRight135(mL, mR);
  4982   002248  C02C  F027         	movff	OrangeInstructions@mL,turnRight135@mL
  4983   00224C  C02D  F028         	movff	OrangeInstructions@mL+1,turnRight135@mL+1
  4984   002250  C02E  F029         	movff	OrangeInstructions@mR,turnRight135@mR
  4985   002254  C02F  F02A         	movff	OrangeInstructions@mR+1,turnRight135@mR+1
  4986   002258  EC32  F012         	call	_turnRight135	;wreg free
  4987   00225C  0012               	return		;funcret
  4988   00225E                     __end_of_OrangeInstructions:
  4989                           	callstack 0
  4990                           
  4991 ;; *************** function _turnRight135 *****************
  4992 ;; Defined at:
  4993 ;;		line 249 in file "dc_motor.c"
  4994 ;; Parameters:    Size  Location     Type
  4995 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  4996 ;;		 -> main@motorL(9), 
  4997 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  4998 ;;		 -> main@motorR(9), 
  4999 ;; Auto vars:     Size  Location     Type
  5000 ;;  a               1   42[COMRAM] unsigned char 
  5001 ;; Return value:  Size  Location     Type
  5002 ;;                  1    wreg      void 
  5003 ;; Registers used:
  5004 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5005 ;; Tracked objects:
  5006 ;;		On entry : 0/0
  5007 ;;		On exit  : 0/0
  5008 ;;		Unchanged: 0/0
  5009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5010 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5011 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5013 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5014 ;;Total ram usage:        5 bytes
  5015 ;; Hardware stack levels used: 1
  5016 ;; Hardware stack levels required when called: 11
  5017 ;; This function calls:
  5018 ;;		_stop
  5019 ;;		_turnRight
  5020 ;;		_turnRight90
  5021 ;; This function is called by:
  5022 ;;		_OrangeInstructions
  5023 ;; This function uses a non-reentrant model
  5024 ;;
  5025                           
  5026                           	psect	text17
  5027   002464                     __ptext17:
  5028                           	callstack 0
  5029   002464                     _turnRight135:
  5030                           	callstack 16
  5031   002464                     
  5032                           ;dc_motor.c: 251:     turnRight90(mL,mR);
  5033   002464  C027  F022         	movff	turnRight135@mL,turnRight90@mL
  5034   002468  C028  F023         	movff	turnRight135@mL+1,turnRight90@mL+1
  5035   00246C  C029  F024         	movff	turnRight135@mR,turnRight90@mR
  5036   002470  C02A  F025         	movff	turnRight135@mR+1,turnRight90@mR+1
  5037   002474  EC70  F00F         	call	_turnRight90	;wreg free
  5038   002478                     
  5039                           ;dc_motor.c: 252:     unsigned char a=0;
  5040   002478  0E00               	movlw	0
  5041   00247A  6E2B               	movwf	turnRight135@a^0,c
  5042                           
  5043                           ;dc_motor.c: 253:     while(a<15){
  5044   00247C  EF4B  F012         	goto	l2947
  5045   002480                     l2943:
  5046                           
  5047                           ;dc_motor.c: 254:         turnRight(mL, mR);
  5048   002480  C027  F01C         	movff	turnRight135@mL,turnRight@mL
  5049   002484  C028  F01D         	movff	turnRight135@mL+1,turnRight@mL+1
  5050   002488  C029  F01E         	movff	turnRight135@mR,turnRight@mR
  5051   00248C  C02A  F01F         	movff	turnRight135@mR+1,turnRight@mR+1
  5052   002490  ECAA  F00B         	call	_turnRight	;wreg free
  5053   002494                     
  5054                           ;dc_motor.c: 255:         a++;
  5055   002494  2A2B               	incf	turnRight135@a^0,f,c
  5056   002496                     l2947:
  5057                           
  5058                           ;dc_motor.c: 253:     while(a<15){
  5059   002496  0E0E               	movlw	14
  5060   002498  642B               	cpfsgt	turnRight135@a^0,c
  5061   00249A  EF51  F012         	goto	u2251
  5062   00249E  EF53  F012         	goto	u2250
  5063   0024A2                     u2251:
  5064   0024A2  EF40  F012         	goto	l2943
  5065   0024A6                     u2250:
  5066   0024A6  EF60  F012         	goto	l2953
  5067   0024AA                     l2949:
  5068                           
  5069                           ;dc_motor.c: 258:         stop(mL, mR);
  5070   0024AA  C027  F01C         	movff	turnRight135@mL,stop@mL
  5071   0024AE  C028  F01D         	movff	turnRight135@mL+1,stop@mL+1
  5072   0024B2  C029  F01E         	movff	turnRight135@mR,stop@mR
  5073   0024B6  C02A  F01F         	movff	turnRight135@mR+1,stop@mR+1
  5074   0024BA  ECFB  F00D         	call	_stop	;wreg free
  5075   0024BE                     
  5076                           ;dc_motor.c: 259:         a--;
  5077   0024BE  062B               	decf	turnRight135@a^0,f,c
  5078   0024C0                     l2953:
  5079                           
  5080                           ;dc_motor.c: 257:     while(a>0){
  5081   0024C0  502B               	movf	turnRight135@a^0,w,c
  5082   0024C2  A4D8               	btfss	status,2,c
  5083   0024C4  EF66  F012         	goto	u2261
  5084   0024C8  EF68  F012         	goto	u2260
  5085   0024CC                     u2261:
  5086   0024CC  EF55  F012         	goto	l2949
  5087   0024D0                     u2260:
  5088   0024D0  0012               	return		;funcret
  5089   0024D2                     __end_of_turnRight135:
  5090                           	callstack 0
  5091                           
  5092 ;; *************** function _LightBlueInstructions *****************
  5093 ;; Defined at:
  5094 ;;		line 101 in file "color_instructions.c"
  5095 ;; Parameters:    Size  Location     Type
  5096 ;;  mL              2   43[COMRAM] PTR struct DC_motor
  5097 ;;		 -> main@motorL(9), 
  5098 ;;  mR              2   45[COMRAM] PTR struct DC_motor
  5099 ;;		 -> main@motorR(9), 
  5100 ;; Auto vars:     Size  Location     Type
  5101 ;;  a               1   49[COMRAM] unsigned char 
  5102 ;; Return value:  Size  Location     Type
  5103 ;;                  1    wreg      void 
  5104 ;; Registers used:
  5105 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5106 ;; Tracked objects:
  5107 ;;		On entry : 0/0
  5108 ;;		On exit  : 0/0
  5109 ;;		Unchanged: 0/0
  5110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5111 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5112 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5113 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5114 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5115 ;;Total ram usage:        7 bytes
  5116 ;; Hardware stack levels used: 1
  5117 ;; Hardware stack levels required when called: 12
  5118 ;; This function calls:
  5119 ;;		_fullSpeedBackwards
  5120 ;;		_stop
  5121 ;;		_turnLeft135
  5122 ;; This function is called by:
  5123 ;;		_MoveBuggy
  5124 ;; This function uses a non-reentrant model
  5125 ;;
  5126                           
  5127                           	psect	text18
  5128   00225E                     __ptext18:
  5129                           	callstack 0
  5130   00225E                     _LightBlueInstructions:
  5131                           	callstack 16
  5132   00225E                     
  5133                           ;color_instructions.c: 102:     unsigned char a=0;
  5134   00225E  0E00               	movlw	0
  5135   002260  6E32               	movwf	LightBlueInstructions@a^0,c
  5136                           
  5137                           ;color_instructions.c: 103:     while (a<16){
  5138   002262  EF3E  F011         	goto	l3131
  5139   002266                     l3127:
  5140                           
  5141                           ;color_instructions.c: 104:         fullSpeedBackwards(mL, mR);
  5142   002266  C02C  F01C         	movff	LightBlueInstructions@mL,fullSpeedBackwards@mL
  5143   00226A  C02D  F01D         	movff	LightBlueInstructions@mL+1,fullSpeedBackwards@mL+1
  5144   00226E  C02E  F01E         	movff	LightBlueInstructions@mR,fullSpeedBackwards@mR
  5145   002272  C02F  F01F         	movff	LightBlueInstructions@mR+1,fullSpeedBackwards@mR+1
  5146   002276  EC0F  F00D         	call	_fullSpeedBackwards	;wreg free
  5147   00227A                     
  5148                           ;color_instructions.c: 105:         a++;
  5149   00227A  2A32               	incf	LightBlueInstructions@a^0,f,c
  5150   00227C                     l3131:
  5151                           
  5152                           ;color_instructions.c: 103:     while (a<16){
  5153   00227C  0E0F               	movlw	15
  5154   00227E  6432               	cpfsgt	LightBlueInstructions@a^0,c
  5155   002280  EF44  F011         	goto	u2431
  5156   002284  EF46  F011         	goto	u2430
  5157   002288                     u2431:
  5158   002288  EF33  F011         	goto	l3127
  5159   00228C                     u2430:
  5160   00228C  EF53  F011         	goto	l3137
  5161   002290                     l3133:
  5162                           
  5163                           ;color_instructions.c: 108:         stop(mL, mR);
  5164   002290  C02C  F01C         	movff	LightBlueInstructions@mL,stop@mL
  5165   002294  C02D  F01D         	movff	LightBlueInstructions@mL+1,stop@mL+1
  5166   002298  C02E  F01E         	movff	LightBlueInstructions@mR,stop@mR
  5167   00229C  C02F  F01F         	movff	LightBlueInstructions@mR+1,stop@mR+1
  5168   0022A0  ECFB  F00D         	call	_stop	;wreg free
  5169   0022A4                     
  5170                           ;color_instructions.c: 109:         a--;
  5171   0022A4  0632               	decf	LightBlueInstructions@a^0,f,c
  5172   0022A6                     l3137:
  5173                           
  5174                           ;color_instructions.c: 107:     while (a>0){
  5175   0022A6  5032               	movf	LightBlueInstructions@a^0,w,c
  5176   0022A8  A4D8               	btfss	status,2,c
  5177   0022AA  EF59  F011         	goto	u2441
  5178   0022AE  EF5B  F011         	goto	u2440
  5179   0022B2                     u2441:
  5180   0022B2  EF48  F011         	goto	l3133
  5181   0022B6                     u2440:
  5182   0022B6                     
  5183                           ;color_instructions.c: 111:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5184   0022B6  0E05               	movlw	5
  5185   0022B8  6E31               	movwf	(??_LightBlueInstructions+1)^0,c
  5186   0022BA  0E0F               	movlw	15
  5187   0022BC  6E30               	movwf	??_LightBlueInstructions^0,c
  5188   0022BE  0EF1               	movlw	241
  5189   0022C0                     u4577:
  5190   0022C0  2EE8               	decfsz	wreg,f,c
  5191   0022C2  D7FE               	bra	u4577
  5192   0022C4  2E30               	decfsz	??_LightBlueInstructions^0,f,c
  5193   0022C6  D7FC               	bra	u4577
  5194   0022C8  2E31               	decfsz	(??_LightBlueInstructions+1)^0,f,c
  5195   0022CA  D7FA               	bra	u4577
  5196   0022CC  F000               	nop	
  5197   0022CE                     
  5198                           ;color_instructions.c: 112:     turnLeft135(mL, mR);
  5199   0022CE  C02C  F027         	movff	LightBlueInstructions@mL,turnLeft135@mL
  5200   0022D2  C02D  F028         	movff	LightBlueInstructions@mL+1,turnLeft135@mL+1
  5201   0022D6  C02E  F029         	movff	LightBlueInstructions@mR,turnLeft135@mR
  5202   0022DA  C02F  F02A         	movff	LightBlueInstructions@mR+1,turnLeft135@mR+1
  5203   0022DE  EC69  F012         	call	_turnLeft135	;wreg free
  5204   0022E2  0012               	return		;funcret
  5205   0022E4                     __end_of_LightBlueInstructions:
  5206                           	callstack 0
  5207                           
  5208 ;; *************** function _turnLeft135 *****************
  5209 ;; Defined at:
  5210 ;;		line 263 in file "dc_motor.c"
  5211 ;; Parameters:    Size  Location     Type
  5212 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  5213 ;;		 -> main@motorL(9), 
  5214 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  5215 ;;		 -> main@motorR(9), 
  5216 ;; Auto vars:     Size  Location     Type
  5217 ;;  a               1   42[COMRAM] unsigned char 
  5218 ;; Return value:  Size  Location     Type
  5219 ;;                  1    wreg      void 
  5220 ;; Registers used:
  5221 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5222 ;; Tracked objects:
  5223 ;;		On entry : 0/0
  5224 ;;		On exit  : 0/0
  5225 ;;		Unchanged: 0/0
  5226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5227 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5228 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5230 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5231 ;;Total ram usage:        5 bytes
  5232 ;; Hardware stack levels used: 1
  5233 ;; Hardware stack levels required when called: 11
  5234 ;; This function calls:
  5235 ;;		_stop
  5236 ;;		_turnLeft
  5237 ;;		_turnLeft90
  5238 ;; This function is called by:
  5239 ;;		_LightBlueInstructions
  5240 ;; This function uses a non-reentrant model
  5241 ;;
  5242                           
  5243                           	psect	text19
  5244   0024D2                     __ptext19:
  5245                           	callstack 0
  5246   0024D2                     _turnLeft135:
  5247                           	callstack 16
  5248   0024D2                     
  5249                           ;dc_motor.c: 265:     turnLeft90(mL,mR);
  5250   0024D2  C027  F022         	movff	turnLeft135@mL,turnLeft90@mL
  5251   0024D6  C028  F023         	movff	turnLeft135@mL+1,turnLeft90@mL+1
  5252   0024DA  C029  F024         	movff	turnLeft135@mR,turnLeft90@mR
  5253   0024DE  C02A  F025         	movff	turnLeft135@mR+1,turnLeft90@mR+1
  5254   0024E2  ECC7  F00F         	call	_turnLeft90	;wreg free
  5255   0024E6                     
  5256                           ;dc_motor.c: 266:     unsigned char a=0;
  5257   0024E6  0E00               	movlw	0
  5258   0024E8  6E2B               	movwf	turnLeft135@a^0,c
  5259                           
  5260                           ;dc_motor.c: 267:     while(a<16){
  5261   0024EA  EF82  F012         	goto	l2963
  5262   0024EE                     l2959:
  5263                           
  5264                           ;dc_motor.c: 268:         turnLeft(mL, mR);
  5265   0024EE  C027  F01C         	movff	turnLeft135@mL,turnLeft@mL
  5266   0024F2  C028  F01D         	movff	turnLeft135@mL+1,turnLeft@mL+1
  5267   0024F6  C029  F01E         	movff	turnLeft135@mR,turnLeft@mR
  5268   0024FA  C02A  F01F         	movff	turnLeft135@mR+1,turnLeft@mR+1
  5269   0024FE  EC98  F00C         	call	_turnLeft	;wreg free
  5270   002502                     
  5271                           ;dc_motor.c: 269:         a++;
  5272   002502  2A2B               	incf	turnLeft135@a^0,f,c
  5273   002504                     l2963:
  5274                           
  5275                           ;dc_motor.c: 267:     while(a<16){
  5276   002504  0E0F               	movlw	15
  5277   002506  642B               	cpfsgt	turnLeft135@a^0,c
  5278   002508  EF88  F012         	goto	u2271
  5279   00250C  EF8A  F012         	goto	u2270
  5280   002510                     u2271:
  5281   002510  EF77  F012         	goto	l2959
  5282   002514                     u2270:
  5283   002514  EF97  F012         	goto	l2969
  5284   002518                     l2965:
  5285                           
  5286                           ;dc_motor.c: 272:         stop(mL, mR);
  5287   002518  C027  F01C         	movff	turnLeft135@mL,stop@mL
  5288   00251C  C028  F01D         	movff	turnLeft135@mL+1,stop@mL+1
  5289   002520  C029  F01E         	movff	turnLeft135@mR,stop@mR
  5290   002524  C02A  F01F         	movff	turnLeft135@mR+1,stop@mR+1
  5291   002528  ECFB  F00D         	call	_stop	;wreg free
  5292   00252C                     
  5293                           ;dc_motor.c: 273:         a--;
  5294   00252C  062B               	decf	turnLeft135@a^0,f,c
  5295   00252E                     l2969:
  5296                           
  5297                           ;dc_motor.c: 271:     while(a>0){
  5298   00252E  502B               	movf	turnLeft135@a^0,w,c
  5299   002530  A4D8               	btfss	status,2,c
  5300   002532  EF9D  F012         	goto	u2281
  5301   002536  EF9F  F012         	goto	u2280
  5302   00253A                     u2281:
  5303   00253A  EF8C  F012         	goto	l2965
  5304   00253E                     u2280:
  5305   00253E  0012               	return		;funcret
  5306   002540                     __end_of_turnLeft135:
  5307                           	callstack 0
  5308                           
  5309 ;; *************** function _AppendMoves *****************
  5310 ;; Defined at:
  5311 ;;		line 17 in file "Memorization.c"
  5312 ;; Parameters:    Size  Location     Type
  5313 ;;  temp            1    wreg     unsigned char 
  5314 ;;  moves_index     2    8[COMRAM] PTR unsigned char 
  5315 ;;		 -> moves_index(1), 
  5316 ;;  anti_moves_a    2   10[COMRAM] PTR unsigned char 
  5317 ;;		 -> anti_moves_array(40), 
  5318 ;; Auto vars:     Size  Location     Type
  5319 ;;  temp            1   13[COMRAM] unsigned char 
  5320 ;; Return value:  Size  Location     Type
  5321 ;;                  1    wreg      void 
  5322 ;; Registers used:
  5323 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5324 ;; Tracked objects:
  5325 ;;		On entry : 0/0
  5326 ;;		On exit  : 0/0
  5327 ;;		Unchanged: 0/0
  5328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5329 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5330 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5331 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5332 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5333 ;;Total ram usage:        6 bytes
  5334 ;; Hardware stack levels used: 1
  5335 ;; Hardware stack levels required when called: 7
  5336 ;; This function calls:
  5337 ;;		Nothing
  5338 ;; This function is called by:
  5339 ;;		_MoveBuggy
  5340 ;; This function uses a non-reentrant model
  5341 ;;
  5342                           
  5343                           	psect	text20
  5344   002944                     __ptext20:
  5345                           	callstack 0
  5346   002944                     _AppendMoves:
  5347                           	callstack 21
  5348                           
  5349                           ;incstack = 0
  5350                           ;AppendMoves@temp stored from wreg
  5351   002944  6E0E               	movwf	AppendMoves@temp^0,c
  5352   002946                     
  5353                           ;Memorization.c: 19:     anti_moves_array[(*moves_index)++] = temp;
  5354   002946  C009  FFD9         	movff	AppendMoves@moves_index,fsr2l
  5355   00294A  C00A  FFDA         	movff	AppendMoves@moves_index+1,fsr2h
  5356   00294E  CFDF F00D          	movff	indf2,??_AppendMoves
  5357   002952  0E01               	movlw	1
  5358   002954  26DF               	addwf	indf2,f,c
  5359   002956  500D               	movf	??_AppendMoves^0,w,c
  5360   002958  240B               	addwf	AppendMoves@anti_moves_array^0,w,c
  5361   00295A  6ED9               	movwf	fsr2l,c
  5362   00295C  0E00               	movlw	0
  5363   00295E  200C               	addwfc	(AppendMoves@anti_moves_array+1)^0,w,c
  5364   002960  6EDA               	movwf	fsr2h,c
  5365   002962  C00E  FFDF         	movff	AppendMoves@temp,indf2
  5366   002966  0012               	return		;funcret
  5367   002968                     __end_of_AppendMoves:
  5368                           	callstack 0
  5369                           
  5370 ;; *************** function _AntiYellow *****************
  5371 ;; Defined at:
  5372 ;;		line 115 in file "color_instructions.c"
  5373 ;; Parameters:    Size  Location     Type
  5374 ;;  mL              2   45[COMRAM] PTR struct DC_motor
  5375 ;;		 -> main@motorL(9), 
  5376 ;;  mR              2   47[COMRAM] PTR struct DC_motor
  5377 ;;		 -> main@motorR(9), 
  5378 ;; Auto vars:     Size  Location     Type
  5379 ;;  a               1   51[COMRAM] unsigned char 
  5380 ;; Return value:  Size  Location     Type
  5381 ;;                  1    wreg      void 
  5382 ;; Registers used:
  5383 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5384 ;; Tracked objects:
  5385 ;;		On entry : 0/0
  5386 ;;		On exit  : 0/0
  5387 ;;		Unchanged: 0/0
  5388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5389 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5390 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5391 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5392 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5393 ;;Total ram usage:        7 bytes
  5394 ;; Hardware stack levels used: 1
  5395 ;; Hardware stack levels required when called: 12
  5396 ;; This function calls:
  5397 ;;		_BlueInstructions
  5398 ;;		_RedInstructions
  5399 ;;		_fullSpeedAhead
  5400 ;;		_stop
  5401 ;; This function is called by:
  5402 ;;		_MoveBuggy
  5403 ;; This function uses a non-reentrant model
  5404 ;;
  5405                           
  5406                           	psect	text21
  5407   001CCA                     __ptext21:
  5408                           	callstack 0
  5409   001CCA                     _AntiYellow:
  5410                           	callstack 16
  5411   001CCA                     
  5412                           ;color_instructions.c: 116:     unsigned char a=0;
  5413   001CCA  0E00               	movlw	0
  5414   001CCC  6E34               	movwf	AntiYellow@a^0,c
  5415   001CCE                     
  5416                           ;color_instructions.c: 118:     RedInstructions(mL, mR);
  5417   001CCE  C02E  F027         	movff	AntiYellow@mL,RedInstructions@mL
  5418   001CD2  C02F  F028         	movff	AntiYellow@mL+1,RedInstructions@mL+1
  5419   001CD6  C030  F029         	movff	AntiYellow@mR,RedInstructions@mR
  5420   001CDA  C031  F02A         	movff	AntiYellow@mR+1,RedInstructions@mR+1
  5421   001CDE  EC72  F011         	call	_RedInstructions	;wreg free
  5422   001CE2                     
  5423                           ;color_instructions.c: 119:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5424   001CE2  0E05               	movlw	5
  5425   001CE4  6E33               	movwf	(??_AntiYellow+1)^0,c
  5426   001CE6  0E0F               	movlw	15
  5427   001CE8  6E32               	movwf	??_AntiYellow^0,c
  5428   001CEA  0EF1               	movlw	241
  5429   001CEC                     u4587:
  5430   001CEC  2EE8               	decfsz	wreg,f,c
  5431   001CEE  D7FE               	bra	u4587
  5432   001CF0  2E32               	decfsz	??_AntiYellow^0,f,c
  5433   001CF2  D7FC               	bra	u4587
  5434   001CF4  2E33               	decfsz	(??_AntiYellow+1)^0,f,c
  5435   001CF6  D7FA               	bra	u4587
  5436   001CF8  F000               	nop	
  5437                           
  5438                           ;color_instructions.c: 121:     while (a<45){
  5439   001CFA  EF8A  F00E         	goto	l3153
  5440   001CFE                     l3149:
  5441                           
  5442                           ;color_instructions.c: 122:         fullSpeedAhead(mL, mR);
  5443   001CFE  C02E  F01C         	movff	AntiYellow@mL,fullSpeedAhead@mL
  5444   001D02  C02F  F01D         	movff	AntiYellow@mL+1,fullSpeedAhead@mL+1
  5445   001D06  C030  F01E         	movff	AntiYellow@mR,fullSpeedAhead@mR
  5446   001D0A  C031  F01F         	movff	AntiYellow@mR+1,fullSpeedAhead@mR+1
  5447   001D0E  EC21  F00C         	call	_fullSpeedAhead	;wreg free
  5448   001D12                     
  5449                           ;color_instructions.c: 123:         a++;
  5450   001D12  2A34               	incf	AntiYellow@a^0,f,c
  5451   001D14                     l3153:
  5452                           
  5453                           ;color_instructions.c: 121:     while (a<45){
  5454   001D14  0E2C               	movlw	44
  5455   001D16  6434               	cpfsgt	AntiYellow@a^0,c
  5456   001D18  EF90  F00E         	goto	u2451
  5457   001D1C  EF92  F00E         	goto	u2450
  5458   001D20                     u2451:
  5459   001D20  EF7F  F00E         	goto	l3149
  5460   001D24                     u2450:
  5461   001D24  EF9F  F00E         	goto	l3159
  5462   001D28                     l3155:
  5463                           
  5464                           ;color_instructions.c: 126:         stop(mL, mR);
  5465   001D28  C02E  F01C         	movff	AntiYellow@mL,stop@mL
  5466   001D2C  C02F  F01D         	movff	AntiYellow@mL+1,stop@mL+1
  5467   001D30  C030  F01E         	movff	AntiYellow@mR,stop@mR
  5468   001D34  C031  F01F         	movff	AntiYellow@mR+1,stop@mR+1
  5469   001D38  ECFB  F00D         	call	_stop	;wreg free
  5470   001D3C                     
  5471                           ;color_instructions.c: 127:         a--;
  5472   001D3C  0634               	decf	AntiYellow@a^0,f,c
  5473   001D3E                     l3159:
  5474                           
  5475                           ;color_instructions.c: 125:     while (a>0){
  5476   001D3E  5034               	movf	AntiYellow@a^0,w,c
  5477   001D40  A4D8               	btfss	status,2,c
  5478   001D42  EFA5  F00E         	goto	u2461
  5479   001D46  EFA7  F00E         	goto	u2460
  5480   001D4A                     u2461:
  5481   001D4A  EF94  F00E         	goto	l3155
  5482   001D4E                     u2460:
  5483   001D4E                     
  5484                           ;color_instructions.c: 129:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5485   001D4E  0E05               	movlw	5
  5486   001D50  6E33               	movwf	(??_AntiYellow+1)^0,c
  5487   001D52  0E0F               	movlw	15
  5488   001D54  6E32               	movwf	??_AntiYellow^0,c
  5489   001D56  0EF1               	movlw	241
  5490   001D58                     u4597:
  5491   001D58  2EE8               	decfsz	wreg,f,c
  5492   001D5A  D7FE               	bra	u4597
  5493   001D5C  2E32               	decfsz	??_AntiYellow^0,f,c
  5494   001D5E  D7FC               	bra	u4597
  5495   001D60  2E33               	decfsz	(??_AntiYellow+1)^0,f,c
  5496   001D62  D7FA               	bra	u4597
  5497   001D64  F000               	nop	
  5498   001D66                     
  5499                           ;color_instructions.c: 131:     BlueInstructions(mL, mR);
  5500   001D66  C02E  F027         	movff	AntiYellow@mL,BlueInstructions@mL
  5501   001D6A  C02F  F028         	movff	AntiYellow@mL+1,BlueInstructions@mL+1
  5502   001D6E  C030  F029         	movff	AntiYellow@mR,BlueInstructions@mR
  5503   001D72  C031  F02A         	movff	AntiYellow@mR+1,BlueInstructions@mR+1
  5504   001D76  EC17  F00F         	call	_BlueInstructions	;wreg free
  5505   001D7A  0012               	return		;funcret
  5506   001D7C                     __end_of_AntiYellow:
  5507                           	callstack 0
  5508                           
  5509 ;; *************** function _RedInstructions *****************
  5510 ;; Defined at:
  5511 ;;		line 10 in file "color_instructions.c"
  5512 ;; Parameters:    Size  Location     Type
  5513 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  5514 ;;		 -> main@motorL(9), 
  5515 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  5516 ;;		 -> main@motorR(9), 
  5517 ;; Auto vars:     Size  Location     Type
  5518 ;;  a               1   44[COMRAM] unsigned char 
  5519 ;; Return value:  Size  Location     Type
  5520 ;;                  1    wreg      void 
  5521 ;; Registers used:
  5522 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5523 ;; Tracked objects:
  5524 ;;		On entry : 0/0
  5525 ;;		On exit  : 0/0
  5526 ;;		Unchanged: 0/0
  5527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5528 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5529 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5530 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5531 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5532 ;;Total ram usage:        7 bytes
  5533 ;; Hardware stack levels used: 1
  5534 ;; Hardware stack levels required when called: 11
  5535 ;; This function calls:
  5536 ;;		_fullSpeedBackwards
  5537 ;;		_stop
  5538 ;;		_turnRight90
  5539 ;; This function is called by:
  5540 ;;		_AntiYellow
  5541 ;;		_MoveBuggy
  5542 ;; This function uses a non-reentrant model
  5543 ;;
  5544                           
  5545                           	psect	text22
  5546   0022E4                     __ptext22:
  5547                           	callstack 0
  5548   0022E4                     _RedInstructions:
  5549                           	callstack 17
  5550   0022E4                     
  5551                           ;color_instructions.c: 12:     unsigned char a=0;
  5552   0022E4  0E00               	movlw	0
  5553   0022E6  6E2D               	movwf	RedInstructions@a^0,c
  5554                           
  5555                           ;color_instructions.c: 13:     while (a<16){
  5556   0022E8  EF81  F011         	goto	l2977
  5557   0022EC                     l2973:
  5558                           
  5559                           ;color_instructions.c: 14:         fullSpeedBackwards(mL, mR);
  5560   0022EC  C027  F01C         	movff	RedInstructions@mL,fullSpeedBackwards@mL
  5561   0022F0  C028  F01D         	movff	RedInstructions@mL+1,fullSpeedBackwards@mL+1
  5562   0022F4  C029  F01E         	movff	RedInstructions@mR,fullSpeedBackwards@mR
  5563   0022F8  C02A  F01F         	movff	RedInstructions@mR+1,fullSpeedBackwards@mR+1
  5564   0022FC  EC0F  F00D         	call	_fullSpeedBackwards	;wreg free
  5565   002300                     
  5566                           ;color_instructions.c: 15:         a++;
  5567   002300  2A2D               	incf	RedInstructions@a^0,f,c
  5568   002302                     l2977:
  5569                           
  5570                           ;color_instructions.c: 13:     while (a<16){
  5571   002302  0E0F               	movlw	15
  5572   002304  642D               	cpfsgt	RedInstructions@a^0,c
  5573   002306  EF87  F011         	goto	u2291
  5574   00230A  EF89  F011         	goto	u2290
  5575   00230E                     u2291:
  5576   00230E  EF76  F011         	goto	l2973
  5577   002312                     u2290:
  5578   002312  EF96  F011         	goto	l2983
  5579   002316                     l2979:
  5580                           
  5581                           ;color_instructions.c: 18:         stop(mL, mR);
  5582   002316  C027  F01C         	movff	RedInstructions@mL,stop@mL
  5583   00231A  C028  F01D         	movff	RedInstructions@mL+1,stop@mL+1
  5584   00231E  C029  F01E         	movff	RedInstructions@mR,stop@mR
  5585   002322  C02A  F01F         	movff	RedInstructions@mR+1,stop@mR+1
  5586   002326  ECFB  F00D         	call	_stop	;wreg free
  5587   00232A                     
  5588                           ;color_instructions.c: 19:         a--;
  5589   00232A  062D               	decf	RedInstructions@a^0,f,c
  5590   00232C                     l2983:
  5591                           
  5592                           ;color_instructions.c: 17:     while (a>0){
  5593   00232C  502D               	movf	RedInstructions@a^0,w,c
  5594   00232E  A4D8               	btfss	status,2,c
  5595   002330  EF9C  F011         	goto	u2301
  5596   002334  EF9E  F011         	goto	u2300
  5597   002338                     u2301:
  5598   002338  EF8B  F011         	goto	l2979
  5599   00233C                     u2300:
  5600   00233C                     
  5601                           ;color_instructions.c: 21:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5602   00233C  0E05               	movlw	5
  5603   00233E  6E2C               	movwf	(??_RedInstructions+1)^0,c
  5604   002340  0E0F               	movlw	15
  5605   002342  6E2B               	movwf	??_RedInstructions^0,c
  5606   002344  0EF1               	movlw	241
  5607   002346                     u4607:
  5608   002346  2EE8               	decfsz	wreg,f,c
  5609   002348  D7FE               	bra	u4607
  5610   00234A  2E2B               	decfsz	??_RedInstructions^0,f,c
  5611   00234C  D7FC               	bra	u4607
  5612   00234E  2E2C               	decfsz	(??_RedInstructions+1)^0,f,c
  5613   002350  D7FA               	bra	u4607
  5614   002352  F000               	nop	
  5615   002354                     
  5616                           ;color_instructions.c: 22:     turnRight90(mL, mR);
  5617   002354  C027  F022         	movff	RedInstructions@mL,turnRight90@mL
  5618   002358  C028  F023         	movff	RedInstructions@mL+1,turnRight90@mL+1
  5619   00235C  C029  F024         	movff	RedInstructions@mR,turnRight90@mR
  5620   002360  C02A  F025         	movff	RedInstructions@mR+1,turnRight90@mR+1
  5621   002364  EC70  F00F         	call	_turnRight90	;wreg free
  5622   002368  0012               	return		;funcret
  5623   00236A                     __end_of_RedInstructions:
  5624                           	callstack 0
  5625                           
  5626 ;; *************** function _turnRight90 *****************
  5627 ;; Defined at:
  5628 ;;		line 221 in file "dc_motor.c"
  5629 ;; Parameters:    Size  Location     Type
  5630 ;;  mL              2   33[COMRAM] PTR struct DC_motor
  5631 ;;		 -> main@motorL(9), 
  5632 ;;  mR              2   35[COMRAM] PTR struct DC_motor
  5633 ;;		 -> main@motorR(9), 
  5634 ;; Auto vars:     Size  Location     Type
  5635 ;;  a               1   37[COMRAM] unsigned char 
  5636 ;; Return value:  Size  Location     Type
  5637 ;;                  1    wreg      void 
  5638 ;; Registers used:
  5639 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5640 ;; Tracked objects:
  5641 ;;		On entry : 0/0
  5642 ;;		On exit  : 0/0
  5643 ;;		Unchanged: 0/0
  5644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5645 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5646 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5648 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5649 ;;Total ram usage:        5 bytes
  5650 ;; Hardware stack levels used: 1
  5651 ;; Hardware stack levels required when called: 10
  5652 ;; This function calls:
  5653 ;;		_stop
  5654 ;;		_turnRight
  5655 ;; This function is called by:
  5656 ;;		_turnRight135
  5657 ;;		_RedInstructions
  5658 ;;		_YellowInstructions
  5659 ;; This function uses a non-reentrant model
  5660 ;;
  5661                           
  5662                           	psect	text23
  5663   001EE0                     __ptext23:
  5664                           	callstack 0
  5665   001EE0                     _turnRight90:
  5666                           	callstack 17
  5667   001EE0                     
  5668                           ;dc_motor.c: 223:     unsigned char a=0;
  5669   001EE0  0E00               	movlw	0
  5670   001EE2  6E26               	movwf	turnRight90@a^0,c
  5671                           
  5672                           ;dc_motor.c: 224:     while(a<15){
  5673   001EE4  EF7F  F00F         	goto	l2895
  5674   001EE8                     l2891:
  5675                           
  5676                           ;dc_motor.c: 225:         turnRight(mL, mR);
  5677   001EE8  C022  F01C         	movff	turnRight90@mL,turnRight@mL
  5678   001EEC  C023  F01D         	movff	turnRight90@mL+1,turnRight@mL+1
  5679   001EF0  C024  F01E         	movff	turnRight90@mR,turnRight@mR
  5680   001EF4  C025  F01F         	movff	turnRight90@mR+1,turnRight@mR+1
  5681   001EF8  ECAA  F00B         	call	_turnRight	;wreg free
  5682   001EFC                     
  5683                           ;dc_motor.c: 226:         a++;
  5684   001EFC  2A26               	incf	turnRight90@a^0,f,c
  5685   001EFE                     l2895:
  5686                           
  5687                           ;dc_motor.c: 224:     while(a<15){
  5688   001EFE  0E0E               	movlw	14
  5689   001F00  6426               	cpfsgt	turnRight90@a^0,c
  5690   001F02  EF85  F00F         	goto	u2171
  5691   001F06  EF87  F00F         	goto	u2170
  5692   001F0A                     u2171:
  5693   001F0A  EF74  F00F         	goto	l2891
  5694   001F0E                     u2170:
  5695   001F0E  EF94  F00F         	goto	l2901
  5696   001F12                     l2897:
  5697                           
  5698                           ;dc_motor.c: 229:         stop(mL, mR);
  5699   001F12  C022  F01C         	movff	turnRight90@mL,stop@mL
  5700   001F16  C023  F01D         	movff	turnRight90@mL+1,stop@mL+1
  5701   001F1A  C024  F01E         	movff	turnRight90@mR,stop@mR
  5702   001F1E  C025  F01F         	movff	turnRight90@mR+1,stop@mR+1
  5703   001F22  ECFB  F00D         	call	_stop	;wreg free
  5704   001F26                     
  5705                           ;dc_motor.c: 230:         a--;
  5706   001F26  0626               	decf	turnRight90@a^0,f,c
  5707   001F28                     l2901:
  5708                           
  5709                           ;dc_motor.c: 228:     while(a>0){
  5710   001F28  5026               	movf	turnRight90@a^0,w,c
  5711   001F2A  A4D8               	btfss	status,2,c
  5712   001F2C  EF9A  F00F         	goto	u2181
  5713   001F30  EF9C  F00F         	goto	u2180
  5714   001F34                     u2181:
  5715   001F34  EF89  F00F         	goto	l2897
  5716   001F38                     u2180:
  5717   001F38  EFA9  F00F         	goto	l2907
  5718   001F3C                     l2903:
  5719                           
  5720                           ;dc_motor.c: 233:         turnRight(mL, mR);
  5721   001F3C  C022  F01C         	movff	turnRight90@mL,turnRight@mL
  5722   001F40  C023  F01D         	movff	turnRight90@mL+1,turnRight@mL+1
  5723   001F44  C024  F01E         	movff	turnRight90@mR,turnRight@mR
  5724   001F48  C025  F01F         	movff	turnRight90@mR+1,turnRight@mR+1
  5725   001F4C  ECAA  F00B         	call	_turnRight	;wreg free
  5726   001F50                     
  5727                           ;dc_motor.c: 234:         a++;
  5728   001F50  2A26               	incf	turnRight90@a^0,f,c
  5729   001F52                     l2907:
  5730                           
  5731                           ;dc_motor.c: 232:     while(a<15){
  5732   001F52  0E0E               	movlw	14
  5733   001F54  6426               	cpfsgt	turnRight90@a^0,c
  5734   001F56  EFAF  F00F         	goto	u2191
  5735   001F5A  EFB1  F00F         	goto	u2190
  5736   001F5E                     u2191:
  5737   001F5E  EF9E  F00F         	goto	l2903
  5738   001F62                     u2190:
  5739   001F62  EFBE  F00F         	goto	l2913
  5740   001F66                     l2909:
  5741                           
  5742                           ;dc_motor.c: 237:         stop(mL, mR);
  5743   001F66  C022  F01C         	movff	turnRight90@mL,stop@mL
  5744   001F6A  C023  F01D         	movff	turnRight90@mL+1,stop@mL+1
  5745   001F6E  C024  F01E         	movff	turnRight90@mR,stop@mR
  5746   001F72  C025  F01F         	movff	turnRight90@mR+1,stop@mR+1
  5747   001F76  ECFB  F00D         	call	_stop	;wreg free
  5748   001F7A                     
  5749                           ;dc_motor.c: 238:         a--;
  5750   001F7A  0626               	decf	turnRight90@a^0,f,c
  5751   001F7C                     l2913:
  5752                           
  5753                           ;dc_motor.c: 236:     while(a>0){
  5754   001F7C  5026               	movf	turnRight90@a^0,w,c
  5755   001F7E  A4D8               	btfss	status,2,c
  5756   001F80  EFC4  F00F         	goto	u2201
  5757   001F84  EFC6  F00F         	goto	u2200
  5758   001F88                     u2201:
  5759   001F88  EFB3  F00F         	goto	l2909
  5760   001F8C                     u2200:
  5761   001F8C  0012               	return		;funcret
  5762   001F8E                     __end_of_turnRight90:
  5763                           	callstack 0
  5764                           
  5765 ;; *************** function _turnRight *****************
  5766 ;; Defined at:
  5767 ;;		line 129 in file "dc_motor.c"
  5768 ;; Parameters:    Size  Location     Type
  5769 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  5770 ;;		 -> main@motorL(9), 
  5771 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  5772 ;;		 -> main@motorR(9), 
  5773 ;; Auto vars:     Size  Location     Type
  5774 ;;		None
  5775 ;; Return value:  Size  Location     Type
  5776 ;;                  1    wreg      void 
  5777 ;; Registers used:
  5778 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5779 ;; Tracked objects:
  5780 ;;		On entry : 0/0
  5781 ;;		On exit  : 0/0
  5782 ;;		Unchanged: 0/0
  5783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5784 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5786 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5787 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5788 ;;Total ram usage:        6 bytes
  5789 ;; Hardware stack levels used: 1
  5790 ;; Hardware stack levels required when called: 9
  5791 ;; This function calls:
  5792 ;;		_setMotorPWM
  5793 ;; This function is called by:
  5794 ;;		_turnRight90
  5795 ;;		_turnRight135
  5796 ;; This function uses a non-reentrant model
  5797 ;;
  5798                           
  5799                           	psect	text24
  5800   001754                     __ptext24:
  5801                           	callstack 0
  5802   001754                     _turnRight:
  5803                           	callstack 17
  5804   001754                     
  5805                           ;dc_motor.c: 129: void turnRight(DC_motor *mL, DC_motor *mR);dc_motor.c: 130: {;dc_motor
      +                          .c: 132:     mL->direction = 1;
  5806   001754  EE20 F001          	lfsr	2,1
  5807   001758  501C               	movf	turnRight@mL^0,w,c
  5808   00175A  26D9               	addwf	fsr2l,f,c
  5809   00175C  501D               	movf	(turnRight@mL+1)^0,w,c
  5810   00175E  22DA               	addwfc	fsr2h,f,c
  5811   001760  0E01               	movlw	1
  5812   001762  6EDF               	movwf	indf2,c
  5813                           
  5814                           ;dc_motor.c: 133:     mL->brakemode = 0;
  5815   001764  EE20 F002          	lfsr	2,2
  5816   001768  501C               	movf	turnRight@mL^0,w,c
  5817   00176A  26D9               	addwf	fsr2l,f,c
  5818   00176C  501D               	movf	(turnRight@mL+1)^0,w,c
  5819   00176E  22DA               	addwfc	fsr2h,f,c
  5820   001770  0E00               	movlw	0
  5821   001772  6EDF               	movwf	indf2,c
  5822                           
  5823                           ;dc_motor.c: 135:     mR->direction = 0;
  5824   001774  EE20 F001          	lfsr	2,1
  5825   001778  501E               	movf	turnRight@mR^0,w,c
  5826   00177A  26D9               	addwf	fsr2l,f,c
  5827   00177C  501F               	movf	(turnRight@mR+1)^0,w,c
  5828   00177E  22DA               	addwfc	fsr2h,f,c
  5829   001780  0E00               	movlw	0
  5830   001782  6EDF               	movwf	indf2,c
  5831                           
  5832                           ;dc_motor.c: 136:     mR->brakemode = 0;
  5833   001784  EE20 F002          	lfsr	2,2
  5834   001788  501E               	movf	turnRight@mR^0,w,c
  5835   00178A  26D9               	addwf	fsr2l,f,c
  5836   00178C  501F               	movf	(turnRight@mR+1)^0,w,c
  5837   00178E  22DA               	addwfc	fsr2h,f,c
  5838   001790  0E00               	movlw	0
  5839   001792  6EDF               	movwf	indf2,c
  5840                           
  5841                           ;dc_motor.c: 139:     if(mL->power>62){mL->power=62;}
  5842   001794  C01C  FFD9         	movff	turnRight@mL,fsr2l
  5843   001798  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  5844   00179C  50DF               	movf	indf2,w,c
  5845   00179E  0A80               	xorlw	128
  5846   0017A0  0F41               	addlw	-191
  5847   0017A2  A0D8               	btfss	status,0,c
  5848   0017A4  EFD6  F00B         	goto	u2091
  5849   0017A8  EFD8  F00B         	goto	u2090
  5850   0017AC                     u2091:
  5851   0017AC  EFDE  F00B         	goto	l2819
  5852   0017B0                     u2090:
  5853   0017B0  C01C  FFD9         	movff	turnRight@mL,fsr2l
  5854   0017B4  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  5855   0017B8  0E3E               	movlw	62
  5856   0017BA  6EDF               	movwf	indf2,c
  5857   0017BC                     l2819:
  5858                           
  5859                           ;dc_motor.c: 140:     if(mR->power>62){mR->power=62;}
  5860   0017BC  C01E  FFD9         	movff	turnRight@mR,fsr2l
  5861   0017C0  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  5862   0017C4  50DF               	movf	indf2,w,c
  5863   0017C6  0A80               	xorlw	128
  5864   0017C8  0F41               	addlw	-191
  5865   0017CA  A0D8               	btfss	status,0,c
  5866   0017CC  EFEA  F00B         	goto	u2101
  5867   0017D0  EFEC  F00B         	goto	u2100
  5868   0017D4                     u2101:
  5869   0017D4  EFF2  F00B         	goto	l2823
  5870   0017D8                     u2100:
  5871   0017D8  C01E  FFD9         	movff	turnRight@mR,fsr2l
  5872   0017DC  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  5873   0017E0  0E3E               	movlw	62
  5874   0017E2  6EDF               	movwf	indf2,c
  5875   0017E4                     l2823:
  5876                           
  5877                           ;dc_motor.c: 142:     mL->power = mL->power + 10 ;
  5878   0017E4  C01C  FFD9         	movff	turnRight@mL,fsr2l
  5879   0017E8  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  5880   0017EC  50DF               	movf	indf2,w,c
  5881   0017EE  0F0A               	addlw	10
  5882   0017F0  C01C  FFD9         	movff	turnRight@mL,fsr2l
  5883   0017F4  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  5884   0017F8  6EDF               	movwf	indf2,c
  5885   0017FA                     
  5886                           ;dc_motor.c: 143:     mR->power = mR->power + 10;
  5887   0017FA  C01E  FFD9         	movff	turnRight@mR,fsr2l
  5888   0017FE  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  5889   001802  50DF               	movf	indf2,w,c
  5890   001804  0F0A               	addlw	10
  5891   001806  C01E  FFD9         	movff	turnRight@mR,fsr2l
  5892   00180A  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  5893   00180E  6EDF               	movwf	indf2,c
  5894   001810                     
  5895                           ;dc_motor.c: 145:     setMotorPWM(mL);
  5896   001810  C01C  F016         	movff	turnRight@mL,setMotorPWM@m
  5897   001814  C01D  F017         	movff	turnRight@mL+1,setMotorPWM@m+1
  5898   001818  EC70  F00A         	call	_setMotorPWM	;wreg free
  5899   00181C                     
  5900                           ;dc_motor.c: 146:     setMotorPWM(mR);
  5901   00181C  C01E  F016         	movff	turnRight@mR,setMotorPWM@m
  5902   001820  C01F  F017         	movff	turnRight@mR+1,setMotorPWM@m+1
  5903   001824  EC70  F00A         	call	_setMotorPWM	;wreg free
  5904   001828                     
  5905                           ;dc_motor.c: 147:     _delay((unsigned long)((20)*(64000000/4000.0)));
  5906   001828  0E02               	movlw	2
  5907   00182A  6E21               	movwf	(??_turnRight+1)^0,c
  5908   00182C  0EA0               	movlw	160
  5909   00182E  6E20               	movwf	??_turnRight^0,c
  5910   001830  0E92               	movlw	146
  5911   001832                     u4617:
  5912   001832  2EE8               	decfsz	wreg,f,c
  5913   001834  D7FE               	bra	u4617
  5914   001836  2E20               	decfsz	??_turnRight^0,f,c
  5915   001838  D7FC               	bra	u4617
  5916   00183A  2E21               	decfsz	(??_turnRight+1)^0,f,c
  5917   00183C  D7FA               	bra	u4617
  5918   00183E  D000               	nop2	
  5919   001840  0012               	return		;funcret
  5920   001842                     __end_of_turnRight:
  5921                           	callstack 0
  5922                           
  5923 ;; *************** function _AntiPink *****************
  5924 ;; Defined at:
  5925 ;;		line 134 in file "color_instructions.c"
  5926 ;; Parameters:    Size  Location     Type
  5927 ;;  mL              2   45[COMRAM] PTR struct DC_motor
  5928 ;;		 -> main@motorL(9), 
  5929 ;;  mR              2   47[COMRAM] PTR struct DC_motor
  5930 ;;		 -> main@motorR(9), 
  5931 ;; Auto vars:     Size  Location     Type
  5932 ;;  a               1   51[COMRAM] unsigned char 
  5933 ;; Return value:  Size  Location     Type
  5934 ;;                  1    wreg      void 
  5935 ;; Registers used:
  5936 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5937 ;; Tracked objects:
  5938 ;;		On entry : 0/0
  5939 ;;		On exit  : 0/0
  5940 ;;		Unchanged: 0/0
  5941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5942 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5943 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5944 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5945 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5946 ;;Total ram usage:        7 bytes
  5947 ;; Hardware stack levels used: 1
  5948 ;; Hardware stack levels required when called: 12
  5949 ;; This function calls:
  5950 ;;		_BlueInstructions
  5951 ;;		_GreenInstructions
  5952 ;;		_fullSpeedAhead
  5953 ;;		_stop
  5954 ;; This function is called by:
  5955 ;;		_MoveBuggy
  5956 ;; This function uses a non-reentrant model
  5957 ;;
  5958                           
  5959                           	psect	text25
  5960   001D7C                     __ptext25:
  5961                           	callstack 0
  5962   001D7C                     _AntiPink:
  5963                           	callstack 16
  5964   001D7C                     
  5965                           ;color_instructions.c: 135:     unsigned char a=0;
  5966   001D7C  0E00               	movlw	0
  5967   001D7E  6E34               	movwf	AntiPink@a^0,c
  5968   001D80                     
  5969                           ;color_instructions.c: 137:     GreenInstructions(mL, mR);
  5970   001D80  C02E  F027         	movff	AntiPink@mL,GreenInstructions@mL
  5971   001D84  C02F  F028         	movff	AntiPink@mL+1,GreenInstructions@mL+1
  5972   001D88  C030  F029         	movff	AntiPink@mR,GreenInstructions@mR
  5973   001D8C  C031  F02A         	movff	AntiPink@mR+1,GreenInstructions@mR+1
  5974   001D90  ECB5  F011         	call	_GreenInstructions	;wreg free
  5975   001D94                     
  5976                           ;color_instructions.c: 138:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5977   001D94  0E05               	movlw	5
  5978   001D96  6E33               	movwf	(??_AntiPink+1)^0,c
  5979   001D98  0E0F               	movlw	15
  5980   001D9A  6E32               	movwf	??_AntiPink^0,c
  5981   001D9C  0EF1               	movlw	241
  5982   001D9E                     u4627:
  5983   001D9E  2EE8               	decfsz	wreg,f,c
  5984   001DA0  D7FE               	bra	u4627
  5985   001DA2  2E32               	decfsz	??_AntiPink^0,f,c
  5986   001DA4  D7FC               	bra	u4627
  5987   001DA6  2E33               	decfsz	(??_AntiPink+1)^0,f,c
  5988   001DA8  D7FA               	bra	u4627
  5989   001DAA  F000               	nop	
  5990                           
  5991                           ;color_instructions.c: 140:     while (a<45){
  5992   001DAC  EFE3  F00E         	goto	l3175
  5993   001DB0                     l3171:
  5994                           
  5995                           ;color_instructions.c: 141:         fullSpeedAhead(mL, mR);
  5996   001DB0  C02E  F01C         	movff	AntiPink@mL,fullSpeedAhead@mL
  5997   001DB4  C02F  F01D         	movff	AntiPink@mL+1,fullSpeedAhead@mL+1
  5998   001DB8  C030  F01E         	movff	AntiPink@mR,fullSpeedAhead@mR
  5999   001DBC  C031  F01F         	movff	AntiPink@mR+1,fullSpeedAhead@mR+1
  6000   001DC0  EC21  F00C         	call	_fullSpeedAhead	;wreg free
  6001   001DC4                     
  6002                           ;color_instructions.c: 142:         a++;
  6003   001DC4  2A34               	incf	AntiPink@a^0,f,c
  6004   001DC6                     l3175:
  6005                           
  6006                           ;color_instructions.c: 140:     while (a<45){
  6007   001DC6  0E2C               	movlw	44
  6008   001DC8  6434               	cpfsgt	AntiPink@a^0,c
  6009   001DCA  EFE9  F00E         	goto	u2471
  6010   001DCE  EFEB  F00E         	goto	u2470
  6011   001DD2                     u2471:
  6012   001DD2  EFD8  F00E         	goto	l3171
  6013   001DD6                     u2470:
  6014   001DD6  EFF8  F00E         	goto	l3181
  6015   001DDA                     l3177:
  6016                           
  6017                           ;color_instructions.c: 145:         stop(mL, mR);
  6018   001DDA  C02E  F01C         	movff	AntiPink@mL,stop@mL
  6019   001DDE  C02F  F01D         	movff	AntiPink@mL+1,stop@mL+1
  6020   001DE2  C030  F01E         	movff	AntiPink@mR,stop@mR
  6021   001DE6  C031  F01F         	movff	AntiPink@mR+1,stop@mR+1
  6022   001DEA  ECFB  F00D         	call	_stop	;wreg free
  6023   001DEE                     
  6024                           ;color_instructions.c: 146:         a--;
  6025   001DEE  0634               	decf	AntiPink@a^0,f,c
  6026   001DF0                     l3181:
  6027                           
  6028                           ;color_instructions.c: 144:     while (a>0){
  6029   001DF0  5034               	movf	AntiPink@a^0,w,c
  6030   001DF2  A4D8               	btfss	status,2,c
  6031   001DF4  EFFE  F00E         	goto	u2481
  6032   001DF8  EF00  F00F         	goto	u2480
  6033   001DFC                     u2481:
  6034   001DFC  EFED  F00E         	goto	l3177
  6035   001E00                     u2480:
  6036   001E00                     
  6037                           ;color_instructions.c: 148:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6038   001E00  0E05               	movlw	5
  6039   001E02  6E33               	movwf	(??_AntiPink+1)^0,c
  6040   001E04  0E0F               	movlw	15
  6041   001E06  6E32               	movwf	??_AntiPink^0,c
  6042   001E08  0EF1               	movlw	241
  6043   001E0A                     u4637:
  6044   001E0A  2EE8               	decfsz	wreg,f,c
  6045   001E0C  D7FE               	bra	u4637
  6046   001E0E  2E32               	decfsz	??_AntiPink^0,f,c
  6047   001E10  D7FC               	bra	u4637
  6048   001E12  2E33               	decfsz	(??_AntiPink+1)^0,f,c
  6049   001E14  D7FA               	bra	u4637
  6050   001E16  F000               	nop	
  6051   001E18                     
  6052                           ;color_instructions.c: 150:     BlueInstructions(mL, mR);
  6053   001E18  C02E  F027         	movff	AntiPink@mL,BlueInstructions@mL
  6054   001E1C  C02F  F028         	movff	AntiPink@mL+1,BlueInstructions@mL+1
  6055   001E20  C030  F029         	movff	AntiPink@mR,BlueInstructions@mR
  6056   001E24  C031  F02A         	movff	AntiPink@mR+1,BlueInstructions@mR+1
  6057   001E28  EC17  F00F         	call	_BlueInstructions	;wreg free
  6058   001E2C  0012               	return		;funcret
  6059   001E2E                     __end_of_AntiPink:
  6060                           	callstack 0
  6061                           
  6062 ;; *************** function _fullSpeedAhead *****************
  6063 ;; Defined at:
  6064 ;;		line 151 in file "dc_motor.c"
  6065 ;; Parameters:    Size  Location     Type
  6066 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6067 ;;		 -> main@motorL(9), 
  6068 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6069 ;;		 -> main@motorR(9), 
  6070 ;; Auto vars:     Size  Location     Type
  6071 ;;		None
  6072 ;; Return value:  Size  Location     Type
  6073 ;;                  1    wreg      void 
  6074 ;; Registers used:
  6075 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6076 ;; Tracked objects:
  6077 ;;		On entry : 0/0
  6078 ;;		On exit  : 0/0
  6079 ;;		Unchanged: 0/0
  6080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6081 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6083 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6084 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6085 ;;Total ram usage:        6 bytes
  6086 ;; Hardware stack levels used: 1
  6087 ;; Hardware stack levels required when called: 9
  6088 ;; This function calls:
  6089 ;;		_setMotorPWM
  6090 ;; This function is called by:
  6091 ;;		_main
  6092 ;;		_AntiYellow
  6093 ;;		_AntiPink
  6094 ;;		_WhiteInstructions
  6095 ;; This function uses a non-reentrant model
  6096 ;;
  6097                           
  6098                           	psect	text26
  6099   001842                     __ptext26:
  6100                           	callstack 0
  6101   001842                     _fullSpeedAhead:
  6102                           	callstack 21
  6103   001842                     
  6104                           ;dc_motor.c: 151: void fullSpeedAhead(DC_motor *mL, DC_motor *mR);dc_motor.c: 152: {;dc_
      +                          motor.c: 154:     mL->direction = 1;
  6105   001842  EE20 F001          	lfsr	2,1
  6106   001846  501C               	movf	fullSpeedAhead@mL^0,w,c
  6107   001848  26D9               	addwf	fsr2l,f,c
  6108   00184A  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  6109   00184C  22DA               	addwfc	fsr2h,f,c
  6110   00184E  0E01               	movlw	1
  6111   001850  6EDF               	movwf	indf2,c
  6112                           
  6113                           ;dc_motor.c: 155:     mL->brakemode = 0;
  6114   001852  EE20 F002          	lfsr	2,2
  6115   001856  501C               	movf	fullSpeedAhead@mL^0,w,c
  6116   001858  26D9               	addwf	fsr2l,f,c
  6117   00185A  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  6118   00185C  22DA               	addwfc	fsr2h,f,c
  6119   00185E  0E00               	movlw	0
  6120   001860  6EDF               	movwf	indf2,c
  6121                           
  6122                           ;dc_motor.c: 157:     mR->direction = 1;
  6123   001862  EE20 F001          	lfsr	2,1
  6124   001866  501E               	movf	fullSpeedAhead@mR^0,w,c
  6125   001868  26D9               	addwf	fsr2l,f,c
  6126   00186A  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  6127   00186C  22DA               	addwfc	fsr2h,f,c
  6128   00186E  0E01               	movlw	1
  6129   001870  6EDF               	movwf	indf2,c
  6130                           
  6131                           ;dc_motor.c: 158:     mR->brakemode = 0;
  6132   001872  EE20 F002          	lfsr	2,2
  6133   001876  501E               	movf	fullSpeedAhead@mR^0,w,c
  6134   001878  26D9               	addwf	fsr2l,f,c
  6135   00187A  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  6136   00187C  22DA               	addwfc	fsr2h,f,c
  6137   00187E  0E00               	movlw	0
  6138   001880  6EDF               	movwf	indf2,c
  6139                           
  6140                           ;dc_motor.c: 162:     if(mL->power>40){mL->power=40;}
  6141   001882  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  6142   001886  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  6143   00188A  50DF               	movf	indf2,w,c
  6144   00188C  0A80               	xorlw	128
  6145   00188E  0F57               	addlw	-169
  6146   001890  A0D8               	btfss	status,0,c
  6147   001892  EF4D  F00C         	goto	u2231
  6148   001896  EF4F  F00C         	goto	u2230
  6149   00189A                     u2231:
  6150   00189A  EF55  F00C         	goto	l2925
  6151   00189E                     u2230:
  6152   00189E  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  6153   0018A2  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  6154   0018A6  0E28               	movlw	40
  6155   0018A8  6EDF               	movwf	indf2,c
  6156   0018AA                     l2925:
  6157                           
  6158                           ;dc_motor.c: 163:     if(mR->power>43){mR->power=43;}
  6159   0018AA  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  6160   0018AE  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  6161   0018B2  50DF               	movf	indf2,w,c
  6162   0018B4  0A80               	xorlw	128
  6163   0018B6  0F54               	addlw	-172
  6164   0018B8  A0D8               	btfss	status,0,c
  6165   0018BA  EF61  F00C         	goto	u2241
  6166   0018BE  EF63  F00C         	goto	u2240
  6167   0018C2                     u2241:
  6168   0018C2  EF69  F00C         	goto	l2929
  6169   0018C6                     u2240:
  6170   0018C6  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  6171   0018CA  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  6172   0018CE  0E2B               	movlw	43
  6173   0018D0  6EDF               	movwf	indf2,c
  6174   0018D2                     l2929:
  6175                           
  6176                           ;dc_motor.c: 165:     mL->power = mL->power + 5 ;
  6177   0018D2  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  6178   0018D6  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  6179   0018DA  50DF               	movf	indf2,w,c
  6180   0018DC  0F05               	addlw	5
  6181   0018DE  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  6182   0018E2  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  6183   0018E6  6EDF               	movwf	indf2,c
  6184   0018E8                     
  6185                           ;dc_motor.c: 166:     mR->power = mR->power + 7;
  6186   0018E8  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  6187   0018EC  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  6188   0018F0  50DF               	movf	indf2,w,c
  6189   0018F2  0F07               	addlw	7
  6190   0018F4  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  6191   0018F8  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  6192   0018FC  6EDF               	movwf	indf2,c
  6193   0018FE                     
  6194                           ;dc_motor.c: 168:     setMotorPWM(mL);
  6195   0018FE  C01C  F016         	movff	fullSpeedAhead@mL,setMotorPWM@m
  6196   001902  C01D  F017         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  6197   001906  EC70  F00A         	call	_setMotorPWM	;wreg free
  6198   00190A                     
  6199                           ;dc_motor.c: 169:     setMotorPWM(mR);
  6200   00190A  C01E  F016         	movff	fullSpeedAhead@mR,setMotorPWM@m
  6201   00190E  C01F  F017         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  6202   001912  EC70  F00A         	call	_setMotorPWM	;wreg free
  6203   001916                     
  6204                           ;dc_motor.c: 170:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6205   001916  0E05               	movlw	5
  6206   001918  6E21               	movwf	(??_fullSpeedAhead+1)^0,c
  6207   00191A  0E0F               	movlw	15
  6208   00191C  6E20               	movwf	??_fullSpeedAhead^0,c
  6209   00191E  0EF1               	movlw	241
  6210   001920                     u4647:
  6211   001920  2EE8               	decfsz	wreg,f,c
  6212   001922  D7FE               	bra	u4647
  6213   001924  2E20               	decfsz	??_fullSpeedAhead^0,f,c
  6214   001926  D7FC               	bra	u4647
  6215   001928  2E21               	decfsz	(??_fullSpeedAhead+1)^0,f,c
  6216   00192A  D7FA               	bra	u4647
  6217   00192C  F000               	nop	
  6218   00192E  0012               	return		;funcret
  6219   001930                     __end_of_fullSpeedAhead:
  6220                           	callstack 0
  6221                           
  6222 ;; *************** function _GreenInstructions *****************
  6223 ;; Defined at:
  6224 ;;		line 25 in file "color_instructions.c"
  6225 ;; Parameters:    Size  Location     Type
  6226 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  6227 ;;		 -> main@motorL(9), 
  6228 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  6229 ;;		 -> main@motorR(9), 
  6230 ;; Auto vars:     Size  Location     Type
  6231 ;;  a               1   44[COMRAM] unsigned char 
  6232 ;; Return value:  Size  Location     Type
  6233 ;;                  1    wreg      void 
  6234 ;; Registers used:
  6235 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6236 ;; Tracked objects:
  6237 ;;		On entry : 0/0
  6238 ;;		On exit  : 0/0
  6239 ;;		Unchanged: 0/0
  6240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6241 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6242 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6243 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6244 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6245 ;;Total ram usage:        7 bytes
  6246 ;; Hardware stack levels used: 1
  6247 ;; Hardware stack levels required when called: 11
  6248 ;; This function calls:
  6249 ;;		_fullSpeedBackwards
  6250 ;;		_stop
  6251 ;;		_turnLeft90
  6252 ;; This function is called by:
  6253 ;;		_AntiPink
  6254 ;;		_MoveBuggy
  6255 ;; This function uses a non-reentrant model
  6256 ;;
  6257                           
  6258                           	psect	text27
  6259   00236A                     __ptext27:
  6260                           	callstack 0
  6261   00236A                     _GreenInstructions:
  6262                           	callstack 17
  6263   00236A                     
  6264                           ;color_instructions.c: 26:     unsigned char a=0;
  6265   00236A  0E00               	movlw	0
  6266   00236C  6E2D               	movwf	GreenInstructions@a^0,c
  6267                           
  6268                           ;color_instructions.c: 27:     while (a<16){
  6269   00236E  EFC4  F011         	goto	l2995
  6270   002372                     l2991:
  6271                           
  6272                           ;color_instructions.c: 28:         fullSpeedBackwards(mL, mR);
  6273   002372  C027  F01C         	movff	GreenInstructions@mL,fullSpeedBackwards@mL
  6274   002376  C028  F01D         	movff	GreenInstructions@mL+1,fullSpeedBackwards@mL+1
  6275   00237A  C029  F01E         	movff	GreenInstructions@mR,fullSpeedBackwards@mR
  6276   00237E  C02A  F01F         	movff	GreenInstructions@mR+1,fullSpeedBackwards@mR+1
  6277   002382  EC0F  F00D         	call	_fullSpeedBackwards	;wreg free
  6278   002386                     
  6279                           ;color_instructions.c: 29:         a++;
  6280   002386  2A2D               	incf	GreenInstructions@a^0,f,c
  6281   002388                     l2995:
  6282                           
  6283                           ;color_instructions.c: 27:     while (a<16){
  6284   002388  0E0F               	movlw	15
  6285   00238A  642D               	cpfsgt	GreenInstructions@a^0,c
  6286   00238C  EFCA  F011         	goto	u2311
  6287   002390  EFCC  F011         	goto	u2310
  6288   002394                     u2311:
  6289   002394  EFB9  F011         	goto	l2991
  6290   002398                     u2310:
  6291   002398  EFD9  F011         	goto	l3001
  6292   00239C                     l2997:
  6293                           
  6294                           ;color_instructions.c: 32:         stop(mL, mR);
  6295   00239C  C027  F01C         	movff	GreenInstructions@mL,stop@mL
  6296   0023A0  C028  F01D         	movff	GreenInstructions@mL+1,stop@mL+1
  6297   0023A4  C029  F01E         	movff	GreenInstructions@mR,stop@mR
  6298   0023A8  C02A  F01F         	movff	GreenInstructions@mR+1,stop@mR+1
  6299   0023AC  ECFB  F00D         	call	_stop	;wreg free
  6300   0023B0                     
  6301                           ;color_instructions.c: 33:         a--;
  6302   0023B0  062D               	decf	GreenInstructions@a^0,f,c
  6303   0023B2                     l3001:
  6304                           
  6305                           ;color_instructions.c: 31:     while (a>0){
  6306   0023B2  502D               	movf	GreenInstructions@a^0,w,c
  6307   0023B4  A4D8               	btfss	status,2,c
  6308   0023B6  EFDF  F011         	goto	u2321
  6309   0023BA  EFE1  F011         	goto	u2320
  6310   0023BE                     u2321:
  6311   0023BE  EFCE  F011         	goto	l2997
  6312   0023C2                     u2320:
  6313   0023C2                     
  6314                           ;color_instructions.c: 35:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6315   0023C2  0E05               	movlw	5
  6316   0023C4  6E2C               	movwf	(??_GreenInstructions+1)^0,c
  6317   0023C6  0E0F               	movlw	15
  6318   0023C8  6E2B               	movwf	??_GreenInstructions^0,c
  6319   0023CA  0EF1               	movlw	241
  6320   0023CC                     u4657:
  6321   0023CC  2EE8               	decfsz	wreg,f,c
  6322   0023CE  D7FE               	bra	u4657
  6323   0023D0  2E2B               	decfsz	??_GreenInstructions^0,f,c
  6324   0023D2  D7FC               	bra	u4657
  6325   0023D4  2E2C               	decfsz	(??_GreenInstructions+1)^0,f,c
  6326   0023D6  D7FA               	bra	u4657
  6327   0023D8  F000               	nop	
  6328   0023DA                     
  6329                           ;color_instructions.c: 36:     turnLeft90(mL, mR);
  6330   0023DA  C027  F022         	movff	GreenInstructions@mL,turnLeft90@mL
  6331   0023DE  C028  F023         	movff	GreenInstructions@mL+1,turnLeft90@mL+1
  6332   0023E2  C029  F024         	movff	GreenInstructions@mR,turnLeft90@mR
  6333   0023E6  C02A  F025         	movff	GreenInstructions@mR+1,turnLeft90@mR+1
  6334   0023EA  ECC7  F00F         	call	_turnLeft90	;wreg free
  6335   0023EE  0012               	return		;funcret
  6336   0023F0                     __end_of_GreenInstructions:
  6337                           	callstack 0
  6338                           
  6339 ;; *************** function _BlueInstructions *****************
  6340 ;; Defined at:
  6341 ;;		line 39 in file "color_instructions.c"
  6342 ;; Parameters:    Size  Location     Type
  6343 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  6344 ;;		 -> main@motorL(9), 
  6345 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  6346 ;;		 -> main@motorR(9), 
  6347 ;; Auto vars:     Size  Location     Type
  6348 ;;  a               1   44[COMRAM] unsigned char 
  6349 ;; Return value:  Size  Location     Type
  6350 ;;                  1    wreg      void 
  6351 ;; Registers used:
  6352 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6353 ;; Tracked objects:
  6354 ;;		On entry : 0/0
  6355 ;;		On exit  : 0/0
  6356 ;;		Unchanged: 0/0
  6357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6358 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6359 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6360 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6361 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6362 ;;Total ram usage:        7 bytes
  6363 ;; Hardware stack levels used: 1
  6364 ;; Hardware stack levels required when called: 11
  6365 ;; This function calls:
  6366 ;;		_fullSpeedBackwards
  6367 ;;		_stop
  6368 ;;		_turnLeft90
  6369 ;; This function is called by:
  6370 ;;		_AntiYellow
  6371 ;;		_AntiPink
  6372 ;;		_WhiteInstructions
  6373 ;;		_MoveBuggy
  6374 ;; This function uses a non-reentrant model
  6375 ;;
  6376                           
  6377                           	psect	text28
  6378   001E2E                     __ptext28:
  6379                           	callstack 0
  6380   001E2E                     _BlueInstructions:
  6381                           	callstack 17
  6382   001E2E                     
  6383                           ;color_instructions.c: 40:     unsigned char a=0;
  6384   001E2E  0E00               	movlw	0
  6385   001E30  6E2D               	movwf	BlueInstructions@a^0,c
  6386                           
  6387                           ;color_instructions.c: 41:     while (a<16){
  6388   001E32  EF26  F00F         	goto	l3013
  6389   001E36                     l3009:
  6390                           
  6391                           ;color_instructions.c: 42:         fullSpeedBackwards(mL, mR);
  6392   001E36  C027  F01C         	movff	BlueInstructions@mL,fullSpeedBackwards@mL
  6393   001E3A  C028  F01D         	movff	BlueInstructions@mL+1,fullSpeedBackwards@mL+1
  6394   001E3E  C029  F01E         	movff	BlueInstructions@mR,fullSpeedBackwards@mR
  6395   001E42  C02A  F01F         	movff	BlueInstructions@mR+1,fullSpeedBackwards@mR+1
  6396   001E46  EC0F  F00D         	call	_fullSpeedBackwards	;wreg free
  6397   001E4A                     
  6398                           ;color_instructions.c: 43:         a++;
  6399   001E4A  2A2D               	incf	BlueInstructions@a^0,f,c
  6400   001E4C                     l3013:
  6401                           
  6402                           ;color_instructions.c: 41:     while (a<16){
  6403   001E4C  0E0F               	movlw	15
  6404   001E4E  642D               	cpfsgt	BlueInstructions@a^0,c
  6405   001E50  EF2C  F00F         	goto	u2331
  6406   001E54  EF2E  F00F         	goto	u2330
  6407   001E58                     u2331:
  6408   001E58  EF1B  F00F         	goto	l3009
  6409   001E5C                     u2330:
  6410   001E5C  EF3B  F00F         	goto	l3019
  6411   001E60                     l3015:
  6412                           
  6413                           ;color_instructions.c: 46:         stop(mL, mR);
  6414   001E60  C027  F01C         	movff	BlueInstructions@mL,stop@mL
  6415   001E64  C028  F01D         	movff	BlueInstructions@mL+1,stop@mL+1
  6416   001E68  C029  F01E         	movff	BlueInstructions@mR,stop@mR
  6417   001E6C  C02A  F01F         	movff	BlueInstructions@mR+1,stop@mR+1
  6418   001E70  ECFB  F00D         	call	_stop	;wreg free
  6419   001E74                     
  6420                           ;color_instructions.c: 47:         a--;
  6421   001E74  062D               	decf	BlueInstructions@a^0,f,c
  6422   001E76                     l3019:
  6423                           
  6424                           ;color_instructions.c: 45:     while (a>0){
  6425   001E76  502D               	movf	BlueInstructions@a^0,w,c
  6426   001E78  A4D8               	btfss	status,2,c
  6427   001E7A  EF41  F00F         	goto	u2341
  6428   001E7E  EF43  F00F         	goto	u2340
  6429   001E82                     u2341:
  6430   001E82  EF30  F00F         	goto	l3015
  6431   001E86                     u2340:
  6432   001E86                     
  6433                           ;color_instructions.c: 49:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6434   001E86  0E05               	movlw	5
  6435   001E88  6E2C               	movwf	(??_BlueInstructions+1)^0,c
  6436   001E8A  0E0F               	movlw	15
  6437   001E8C  6E2B               	movwf	??_BlueInstructions^0,c
  6438   001E8E  0EF1               	movlw	241
  6439   001E90                     u4667:
  6440   001E90  2EE8               	decfsz	wreg,f,c
  6441   001E92  D7FE               	bra	u4667
  6442   001E94  2E2B               	decfsz	??_BlueInstructions^0,f,c
  6443   001E96  D7FC               	bra	u4667
  6444   001E98  2E2C               	decfsz	(??_BlueInstructions+1)^0,f,c
  6445   001E9A  D7FA               	bra	u4667
  6446   001E9C  F000               	nop	
  6447   001E9E                     
  6448                           ;color_instructions.c: 51:     turnLeft90(mL, mR);
  6449   001E9E  C027  F022         	movff	BlueInstructions@mL,turnLeft90@mL
  6450   001EA2  C028  F023         	movff	BlueInstructions@mL+1,turnLeft90@mL+1
  6451   001EA6  C029  F024         	movff	BlueInstructions@mR,turnLeft90@mR
  6452   001EAA  C02A  F025         	movff	BlueInstructions@mR+1,turnLeft90@mR+1
  6453   001EAE  ECC7  F00F         	call	_turnLeft90	;wreg free
  6454   001EB2                     
  6455                           ;color_instructions.c: 52:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6456   001EB2  0E05               	movlw	5
  6457   001EB4  6E2C               	movwf	(??_BlueInstructions+1)^0,c
  6458   001EB6  0E0F               	movlw	15
  6459   001EB8  6E2B               	movwf	??_BlueInstructions^0,c
  6460   001EBA  0EF1               	movlw	241
  6461   001EBC                     u4677:
  6462   001EBC  2EE8               	decfsz	wreg,f,c
  6463   001EBE  D7FE               	bra	u4677
  6464   001EC0  2E2B               	decfsz	??_BlueInstructions^0,f,c
  6465   001EC2  D7FC               	bra	u4677
  6466   001EC4  2E2C               	decfsz	(??_BlueInstructions+1)^0,f,c
  6467   001EC6  D7FA               	bra	u4677
  6468   001EC8  F000               	nop	
  6469                           
  6470                           ;color_instructions.c: 53:     turnLeft90(mL, mR);
  6471   001ECA  C027  F022         	movff	BlueInstructions@mL,turnLeft90@mL
  6472   001ECE  C028  F023         	movff	BlueInstructions@mL+1,turnLeft90@mL+1
  6473   001ED2  C029  F024         	movff	BlueInstructions@mR,turnLeft90@mR
  6474   001ED6  C02A  F025         	movff	BlueInstructions@mR+1,turnLeft90@mR+1
  6475   001EDA  ECC7  F00F         	call	_turnLeft90	;wreg free
  6476   001EDE  0012               	return		;funcret
  6477   001EE0                     __end_of_BlueInstructions:
  6478                           	callstack 0
  6479                           
  6480 ;; *************** function _turnLeft90 *****************
  6481 ;; Defined at:
  6482 ;;		line 200 in file "dc_motor.c"
  6483 ;; Parameters:    Size  Location     Type
  6484 ;;  mL              2   33[COMRAM] PTR struct DC_motor
  6485 ;;		 -> main@motorL(9), 
  6486 ;;  mR              2   35[COMRAM] PTR struct DC_motor
  6487 ;;		 -> main@motorR(9), 
  6488 ;; Auto vars:     Size  Location     Type
  6489 ;;  a               1   37[COMRAM] unsigned char 
  6490 ;; Return value:  Size  Location     Type
  6491 ;;                  1    wreg      void 
  6492 ;; Registers used:
  6493 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6494 ;; Tracked objects:
  6495 ;;		On entry : 0/0
  6496 ;;		On exit  : 0/0
  6497 ;;		Unchanged: 0/0
  6498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6499 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6500 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6502 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6503 ;;Total ram usage:        5 bytes
  6504 ;; Hardware stack levels used: 1
  6505 ;; Hardware stack levels required when called: 10
  6506 ;; This function calls:
  6507 ;;		_stop
  6508 ;;		_turnLeft
  6509 ;; This function is called by:
  6510 ;;		_turnLeft135
  6511 ;;		_GreenInstructions
  6512 ;;		_BlueInstructions
  6513 ;;		_PinkInstructions
  6514 ;;		_turn180
  6515 ;; This function uses a non-reentrant model
  6516 ;;
  6517                           
  6518                           	psect	text29
  6519   001F8E                     __ptext29:
  6520                           	callstack 0
  6521   001F8E                     _turnLeft90:
  6522                           	callstack 17
  6523   001F8E                     
  6524                           ;dc_motor.c: 202:     unsigned char a=0;
  6525   001F8E  0E00               	movlw	0
  6526   001F90  6E26               	movwf	turnLeft90@a^0,c
  6527                           
  6528                           ;dc_motor.c: 203:     while(a<16){
  6529   001F92  EFD6  F00F         	goto	l2869
  6530   001F96                     l2865:
  6531                           
  6532                           ;dc_motor.c: 204:         turnLeft(mL, mR);
  6533   001F96  C022  F01C         	movff	turnLeft90@mL,turnLeft@mL
  6534   001F9A  C023  F01D         	movff	turnLeft90@mL+1,turnLeft@mL+1
  6535   001F9E  C024  F01E         	movff	turnLeft90@mR,turnLeft@mR
  6536   001FA2  C025  F01F         	movff	turnLeft90@mR+1,turnLeft@mR+1
  6537   001FA6  EC98  F00C         	call	_turnLeft	;wreg free
  6538   001FAA                     
  6539                           ;dc_motor.c: 205:         a++;
  6540   001FAA  2A26               	incf	turnLeft90@a^0,f,c
  6541   001FAC                     l2869:
  6542                           
  6543                           ;dc_motor.c: 203:     while(a<16){
  6544   001FAC  0E0F               	movlw	15
  6545   001FAE  6426               	cpfsgt	turnLeft90@a^0,c
  6546   001FB0  EFDC  F00F         	goto	u2131
  6547   001FB4  EFDE  F00F         	goto	u2130
  6548   001FB8                     u2131:
  6549   001FB8  EFCB  F00F         	goto	l2865
  6550   001FBC                     u2130:
  6551   001FBC  EFEB  F00F         	goto	l2875
  6552   001FC0                     l2871:
  6553                           
  6554                           ;dc_motor.c: 208:         stop(mL, mR);
  6555   001FC0  C022  F01C         	movff	turnLeft90@mL,stop@mL
  6556   001FC4  C023  F01D         	movff	turnLeft90@mL+1,stop@mL+1
  6557   001FC8  C024  F01E         	movff	turnLeft90@mR,stop@mR
  6558   001FCC  C025  F01F         	movff	turnLeft90@mR+1,stop@mR+1
  6559   001FD0  ECFB  F00D         	call	_stop	;wreg free
  6560   001FD4                     
  6561                           ;dc_motor.c: 209:         a--;
  6562   001FD4  0626               	decf	turnLeft90@a^0,f,c
  6563   001FD6                     l2875:
  6564                           
  6565                           ;dc_motor.c: 207:     while(a>0){
  6566   001FD6  5026               	movf	turnLeft90@a^0,w,c
  6567   001FD8  A4D8               	btfss	status,2,c
  6568   001FDA  EFF1  F00F         	goto	u2141
  6569   001FDE  EFF3  F00F         	goto	u2140
  6570   001FE2                     u2141:
  6571   001FE2  EFE0  F00F         	goto	l2871
  6572   001FE6                     u2140:
  6573   001FE6  EF00  F010         	goto	l2881
  6574   001FEA                     l2877:
  6575                           
  6576                           ;dc_motor.c: 212:         turnLeft(mL, mR);
  6577   001FEA  C022  F01C         	movff	turnLeft90@mL,turnLeft@mL
  6578   001FEE  C023  F01D         	movff	turnLeft90@mL+1,turnLeft@mL+1
  6579   001FF2  C024  F01E         	movff	turnLeft90@mR,turnLeft@mR
  6580   001FF6  C025  F01F         	movff	turnLeft90@mR+1,turnLeft@mR+1
  6581   001FFA  EC98  F00C         	call	_turnLeft	;wreg free
  6582   001FFE                     
  6583                           ;dc_motor.c: 213:         a++;
  6584   001FFE  2A26               	incf	turnLeft90@a^0,f,c
  6585   002000                     l2881:
  6586                           
  6587                           ;dc_motor.c: 211:     while(a<15){
  6588   002000  0E0E               	movlw	14
  6589   002002  6426               	cpfsgt	turnLeft90@a^0,c
  6590   002004  EF06  F010         	goto	u2151
  6591   002008  EF08  F010         	goto	u2150
  6592   00200C                     u2151:
  6593   00200C  EFF5  F00F         	goto	l2877
  6594   002010                     u2150:
  6595   002010  EF15  F010         	goto	l2887
  6596   002014                     l2883:
  6597                           
  6598                           ;dc_motor.c: 216:         stop(mL, mR);
  6599   002014  C022  F01C         	movff	turnLeft90@mL,stop@mL
  6600   002018  C023  F01D         	movff	turnLeft90@mL+1,stop@mL+1
  6601   00201C  C024  F01E         	movff	turnLeft90@mR,stop@mR
  6602   002020  C025  F01F         	movff	turnLeft90@mR+1,stop@mR+1
  6603   002024  ECFB  F00D         	call	_stop	;wreg free
  6604   002028                     
  6605                           ;dc_motor.c: 217:         a--;
  6606   002028  0626               	decf	turnLeft90@a^0,f,c
  6607   00202A                     l2887:
  6608                           
  6609                           ;dc_motor.c: 215:     while(a>0){
  6610   00202A  5026               	movf	turnLeft90@a^0,w,c
  6611   00202C  A4D8               	btfss	status,2,c
  6612   00202E  EF1B  F010         	goto	u2161
  6613   002032  EF1D  F010         	goto	u2160
  6614   002036                     u2161:
  6615   002036  EF0A  F010         	goto	l2883
  6616   00203A                     u2160:
  6617   00203A  0012               	return		;funcret
  6618   00203C                     __end_of_turnLeft90:
  6619                           	callstack 0
  6620                           
  6621 ;; *************** function _turnLeft *****************
  6622 ;; Defined at:
  6623 ;;		line 107 in file "dc_motor.c"
  6624 ;; Parameters:    Size  Location     Type
  6625 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6626 ;;		 -> main@motorL(9), 
  6627 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6628 ;;		 -> main@motorR(9), 
  6629 ;; Auto vars:     Size  Location     Type
  6630 ;;		None
  6631 ;; Return value:  Size  Location     Type
  6632 ;;                  1    wreg      void 
  6633 ;; Registers used:
  6634 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6635 ;; Tracked objects:
  6636 ;;		On entry : 0/0
  6637 ;;		On exit  : 0/0
  6638 ;;		Unchanged: 0/0
  6639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6640 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6642 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6643 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6644 ;;Total ram usage:        6 bytes
  6645 ;; Hardware stack levels used: 1
  6646 ;; Hardware stack levels required when called: 9
  6647 ;; This function calls:
  6648 ;;		_setMotorPWM
  6649 ;; This function is called by:
  6650 ;;		_turnLeft90
  6651 ;;		_turnLeft135
  6652 ;; This function uses a non-reentrant model
  6653 ;;
  6654                           
  6655                           	psect	text30
  6656   001930                     __ptext30:
  6657                           	callstack 0
  6658   001930                     _turnLeft:
  6659                           	callstack 17
  6660   001930                     
  6661                           ;dc_motor.c: 107: void turnLeft(DC_motor *mL, DC_motor *mR);dc_motor.c: 108: {;dc_motor.
      +                          c: 110:     mL->direction = 0;
  6662   001930  EE20 F001          	lfsr	2,1
  6663   001934  501C               	movf	turnLeft@mL^0,w,c
  6664   001936  26D9               	addwf	fsr2l,f,c
  6665   001938  501D               	movf	(turnLeft@mL+1)^0,w,c
  6666   00193A  22DA               	addwfc	fsr2h,f,c
  6667   00193C  0E00               	movlw	0
  6668   00193E  6EDF               	movwf	indf2,c
  6669                           
  6670                           ;dc_motor.c: 111:     mL->brakemode = 0;
  6671   001940  EE20 F002          	lfsr	2,2
  6672   001944  501C               	movf	turnLeft@mL^0,w,c
  6673   001946  26D9               	addwf	fsr2l,f,c
  6674   001948  501D               	movf	(turnLeft@mL+1)^0,w,c
  6675   00194A  22DA               	addwfc	fsr2h,f,c
  6676   00194C  0E00               	movlw	0
  6677   00194E  6EDF               	movwf	indf2,c
  6678                           
  6679                           ;dc_motor.c: 113:     mR->direction = 1;
  6680   001950  EE20 F001          	lfsr	2,1
  6681   001954  501E               	movf	turnLeft@mR^0,w,c
  6682   001956  26D9               	addwf	fsr2l,f,c
  6683   001958  501F               	movf	(turnLeft@mR+1)^0,w,c
  6684   00195A  22DA               	addwfc	fsr2h,f,c
  6685   00195C  0E01               	movlw	1
  6686   00195E  6EDF               	movwf	indf2,c
  6687                           
  6688                           ;dc_motor.c: 114:     mR->brakemode = 0;
  6689   001960  EE20 F002          	lfsr	2,2
  6690   001964  501E               	movf	turnLeft@mR^0,w,c
  6691   001966  26D9               	addwf	fsr2l,f,c
  6692   001968  501F               	movf	(turnLeft@mR+1)^0,w,c
  6693   00196A  22DA               	addwfc	fsr2h,f,c
  6694   00196C  0E00               	movlw	0
  6695   00196E  6EDF               	movwf	indf2,c
  6696                           
  6697                           ;dc_motor.c: 117:     if(mL->power>62){mL->power=62;}
  6698   001970  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6699   001974  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6700   001978  50DF               	movf	indf2,w,c
  6701   00197A  0A80               	xorlw	128
  6702   00197C  0F41               	addlw	-191
  6703   00197E  A0D8               	btfss	status,0,c
  6704   001980  EFC4  F00C         	goto	u2071
  6705   001984  EFC6  F00C         	goto	u2070
  6706   001988                     u2071:
  6707   001988  EFCC  F00C         	goto	l2801
  6708   00198C                     u2070:
  6709   00198C  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6710   001990  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6711   001994  0E3E               	movlw	62
  6712   001996  6EDF               	movwf	indf2,c
  6713   001998                     l2801:
  6714                           
  6715                           ;dc_motor.c: 118:     if(mR->power>62){mR->power=62;}
  6716   001998  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6717   00199C  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6718   0019A0  50DF               	movf	indf2,w,c
  6719   0019A2  0A80               	xorlw	128
  6720   0019A4  0F41               	addlw	-191
  6721   0019A6  A0D8               	btfss	status,0,c
  6722   0019A8  EFD8  F00C         	goto	u2081
  6723   0019AC  EFDA  F00C         	goto	u2080
  6724   0019B0                     u2081:
  6725   0019B0  EFE0  F00C         	goto	l2805
  6726   0019B4                     u2080:
  6727   0019B4  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6728   0019B8  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6729   0019BC  0E3E               	movlw	62
  6730   0019BE  6EDF               	movwf	indf2,c
  6731   0019C0                     l2805:
  6732                           
  6733                           ;dc_motor.c: 120:     mL->power = mL->power + 10 ;
  6734   0019C0  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6735   0019C4  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6736   0019C8  50DF               	movf	indf2,w,c
  6737   0019CA  0F0A               	addlw	10
  6738   0019CC  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6739   0019D0  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6740   0019D4  6EDF               	movwf	indf2,c
  6741   0019D6                     
  6742                           ;dc_motor.c: 121:     mR->power = mR->power + 10;
  6743   0019D6  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6744   0019DA  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6745   0019DE  50DF               	movf	indf2,w,c
  6746   0019E0  0F0A               	addlw	10
  6747   0019E2  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6748   0019E6  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6749   0019EA  6EDF               	movwf	indf2,c
  6750   0019EC                     
  6751                           ;dc_motor.c: 123:     setMotorPWM(mL);
  6752   0019EC  C01C  F016         	movff	turnLeft@mL,setMotorPWM@m
  6753   0019F0  C01D  F017         	movff	turnLeft@mL+1,setMotorPWM@m+1
  6754   0019F4  EC70  F00A         	call	_setMotorPWM	;wreg free
  6755   0019F8                     
  6756                           ;dc_motor.c: 124:     setMotorPWM(mR);
  6757   0019F8  C01E  F016         	movff	turnLeft@mR,setMotorPWM@m
  6758   0019FC  C01F  F017         	movff	turnLeft@mR+1,setMotorPWM@m+1
  6759   001A00  EC70  F00A         	call	_setMotorPWM	;wreg free
  6760   001A04                     
  6761                           ;dc_motor.c: 125:     _delay((unsigned long)((20)*(64000000/4000.0)));
  6762   001A04  0E02               	movlw	2
  6763   001A06  6E21               	movwf	(??_turnLeft+1)^0,c
  6764   001A08  0EA0               	movlw	160
  6765   001A0A  6E20               	movwf	??_turnLeft^0,c
  6766   001A0C  0E92               	movlw	146
  6767   001A0E                     u4687:
  6768   001A0E  2EE8               	decfsz	wreg,f,c
  6769   001A10  D7FE               	bra	u4687
  6770   001A12  2E20               	decfsz	??_turnLeft^0,f,c
  6771   001A14  D7FC               	bra	u4687
  6772   001A16  2E21               	decfsz	(??_turnLeft+1)^0,f,c
  6773   001A18  D7FA               	bra	u4687
  6774   001A1A  D000               	nop2	
  6775   001A1C  0012               	return		;funcret
  6776   001A1E                     __end_of_turnLeft:
  6777                           	callstack 0
  6778                           
  6779 ;; *************** function _stop *****************
  6780 ;; Defined at:
  6781 ;;		line 87 in file "dc_motor.c"
  6782 ;; Parameters:    Size  Location     Type
  6783 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6784 ;;		 -> main@motorL(9), 
  6785 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6786 ;;		 -> main@motorR(9), 
  6787 ;; Auto vars:     Size  Location     Type
  6788 ;;		None
  6789 ;; Return value:  Size  Location     Type
  6790 ;;                  1    wreg      void 
  6791 ;; Registers used:
  6792 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6793 ;; Tracked objects:
  6794 ;;		On entry : 0/0
  6795 ;;		On exit  : 0/0
  6796 ;;		Unchanged: 0/0
  6797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6798 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6800 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6801 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6802 ;;Total ram usage:        5 bytes
  6803 ;; Hardware stack levels used: 1
  6804 ;; Hardware stack levels required when called: 9
  6805 ;; This function calls:
  6806 ;;		_setMotorPWM
  6807 ;; This function is called by:
  6808 ;;		_turnLeft90
  6809 ;;		_turnRight90
  6810 ;;		_turnRight135
  6811 ;;		_turnLeft135
  6812 ;;		_main
  6813 ;;		_RedInstructions
  6814 ;;		_GreenInstructions
  6815 ;;		_BlueInstructions
  6816 ;;		_YellowInstructions
  6817 ;;		_PinkInstructions
  6818 ;;		_OrangeInstructions
  6819 ;;		_LightBlueInstructions
  6820 ;;		_AntiYellow
  6821 ;;		_AntiPink
  6822 ;;		_WhiteInstructions
  6823 ;; This function uses a non-reentrant model
  6824 ;;
  6825                           
  6826                           	psect	text31
  6827   001BF6                     __ptext31:
  6828                           	callstack 0
  6829   001BF6                     _stop:
  6830                           	callstack 21
  6831   001BF6                     
  6832                           ;dc_motor.c: 87: void stop(DC_motor *mL, DC_motor *mR);dc_motor.c: 88: {;dc_motor.c: 90:
      +                               mL->brakemode = 1;
  6833   001BF6  EE20 F002          	lfsr	2,2
  6834   001BFA  501C               	movf	stop@mL^0,w,c
  6835   001BFC  26D9               	addwf	fsr2l,f,c
  6836   001BFE  501D               	movf	(stop@mL+1)^0,w,c
  6837   001C00  22DA               	addwfc	fsr2h,f,c
  6838   001C02  0E01               	movlw	1
  6839   001C04  6EDF               	movwf	indf2,c
  6840                           
  6841                           ;dc_motor.c: 91:     mR->brakemode = 1;
  6842   001C06  EE20 F002          	lfsr	2,2
  6843   001C0A  501E               	movf	stop@mR^0,w,c
  6844   001C0C  26D9               	addwf	fsr2l,f,c
  6845   001C0E  501F               	movf	(stop@mR+1)^0,w,c
  6846   001C10  22DA               	addwfc	fsr2h,f,c
  6847   001C12  0E01               	movlw	1
  6848   001C14  6EDF               	movwf	indf2,c
  6849                           
  6850                           ;dc_motor.c: 93:     if(mL->power<0){mL->power=0;}
  6851   001C16  C01C  FFD9         	movff	stop@mL,fsr2l
  6852   001C1A  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6853   001C1E  0E00               	movlw	0
  6854   001C20  BEDB               	btfsc	plusw2,7,c
  6855   001C22  EF17  F00E         	goto	u2050
  6856   001C26  EF15  F00E         	goto	u2051
  6857   001C2A                     u2051:
  6858   001C2A  EF1D  F00E         	goto	l2783
  6859   001C2E                     u2050:
  6860   001C2E  C01C  FFD9         	movff	stop@mL,fsr2l
  6861   001C32  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6862   001C36  0E00               	movlw	0
  6863   001C38  6EDF               	movwf	indf2,c
  6864   001C3A                     l2783:
  6865                           
  6866                           ;dc_motor.c: 94:     if(mR->power<0){mR->power=0;}
  6867   001C3A  C01E  FFD9         	movff	stop@mR,fsr2l
  6868   001C3E  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6869   001C42  0E00               	movlw	0
  6870   001C44  BEDB               	btfsc	plusw2,7,c
  6871   001C46  EF29  F00E         	goto	u2060
  6872   001C4A  EF27  F00E         	goto	u2061
  6873   001C4E                     u2061:
  6874   001C4E  EF2F  F00E         	goto	l2787
  6875   001C52                     u2060:
  6876   001C52  C01E  FFD9         	movff	stop@mR,fsr2l
  6877   001C56  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6878   001C5A  0E00               	movlw	0
  6879   001C5C  6EDF               	movwf	indf2,c
  6880   001C5E                     l2787:
  6881                           
  6882                           ;dc_motor.c: 96:     mL->power = mL->power - 5 ;
  6883   001C5E  C01C  FFD9         	movff	stop@mL,fsr2l
  6884   001C62  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6885   001C66  50DF               	movf	indf2,w,c
  6886   001C68  0FFB               	addlw	251
  6887   001C6A  C01C  FFD9         	movff	stop@mL,fsr2l
  6888   001C6E  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6889   001C72  6EDF               	movwf	indf2,c
  6890   001C74                     
  6891                           ;dc_motor.c: 97:     mR->power = mR->power - 5;
  6892   001C74  C01E  FFD9         	movff	stop@mR,fsr2l
  6893   001C78  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6894   001C7C  50DF               	movf	indf2,w,c
  6895   001C7E  0FFB               	addlw	251
  6896   001C80  C01E  FFD9         	movff	stop@mR,fsr2l
  6897   001C84  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6898   001C88  6EDF               	movwf	indf2,c
  6899                           
  6900                           ;dc_motor.c: 99:     mL->power = 0;
  6901   001C8A  C01C  FFD9         	movff	stop@mL,fsr2l
  6902   001C8E  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6903   001C92  0E00               	movlw	0
  6904   001C94  6EDF               	movwf	indf2,c
  6905                           
  6906                           ;dc_motor.c: 100:     mR->power = 0;
  6907   001C96  C01E  FFD9         	movff	stop@mR,fsr2l
  6908   001C9A  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6909   001C9E  0E00               	movlw	0
  6910   001CA0  6EDF               	movwf	indf2,c
  6911   001CA2                     
  6912                           ;dc_motor.c: 101:     setMotorPWM(mL);
  6913   001CA2  C01C  F016         	movff	stop@mL,setMotorPWM@m
  6914   001CA6  C01D  F017         	movff	stop@mL+1,setMotorPWM@m+1
  6915   001CAA  EC70  F00A         	call	_setMotorPWM	;wreg free
  6916   001CAE                     
  6917                           ;dc_motor.c: 102:     setMotorPWM(mR);
  6918   001CAE  C01E  F016         	movff	stop@mR,setMotorPWM@m
  6919   001CB2  C01F  F017         	movff	stop@mR+1,setMotorPWM@m+1
  6920   001CB6  EC70  F00A         	call	_setMotorPWM	;wreg free
  6921   001CBA                     
  6922                           ;dc_motor.c: 103:     _delay((unsigned long)((10)*(64000000/4000.0)));
  6923   001CBA  0ED0               	movlw	208
  6924   001CBC  6E20               	movwf	??_stop^0,c
  6925   001CBE  0ECA               	movlw	202
  6926   001CC0                     u4697:
  6927   001CC0  2EE8               	decfsz	wreg,f,c
  6928   001CC2  D7FE               	bra	u4697
  6929   001CC4  2E20               	decfsz	??_stop^0,f,c
  6930   001CC6  D7FC               	bra	u4697
  6931   001CC8  0012               	return		;funcret
  6932   001CCA                     __end_of_stop:
  6933                           	callstack 0
  6934                           
  6935 ;; *************** function _fullSpeedBackwards *****************
  6936 ;; Defined at:
  6937 ;;		line 174 in file "dc_motor.c"
  6938 ;; Parameters:    Size  Location     Type
  6939 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6940 ;;		 -> main@motorL(9), 
  6941 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6942 ;;		 -> main@motorR(9), 
  6943 ;; Auto vars:     Size  Location     Type
  6944 ;;		None
  6945 ;; Return value:  Size  Location     Type
  6946 ;;                  1    wreg      void 
  6947 ;; Registers used:
  6948 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6949 ;; Tracked objects:
  6950 ;;		On entry : 0/0
  6951 ;;		On exit  : 0/0
  6952 ;;		Unchanged: 0/0
  6953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6954 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6956 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6957 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6958 ;;Total ram usage:        6 bytes
  6959 ;; Hardware stack levels used: 1
  6960 ;; Hardware stack levels required when called: 9
  6961 ;; This function calls:
  6962 ;;		_setMotorPWM
  6963 ;; This function is called by:
  6964 ;;		_RedInstructions
  6965 ;;		_GreenInstructions
  6966 ;;		_BlueInstructions
  6967 ;;		_YellowInstructions
  6968 ;;		_PinkInstructions
  6969 ;;		_OrangeInstructions
  6970 ;;		_LightBlueInstructions
  6971 ;; This function uses a non-reentrant model
  6972 ;;
  6973                           
  6974                           	psect	text32
  6975   001A1E                     __ptext32:
  6976                           	callstack 0
  6977   001A1E                     _fullSpeedBackwards:
  6978                           	callstack 18
  6979   001A1E                     
  6980                           ;dc_motor.c: 177:     mL->direction = 0;
  6981   001A1E  EE20 F001          	lfsr	2,1
  6982   001A22  501C               	movf	fullSpeedBackwards@mL^0,w,c
  6983   001A24  26D9               	addwf	fsr2l,f,c
  6984   001A26  501D               	movf	(fullSpeedBackwards@mL+1)^0,w,c
  6985   001A28  22DA               	addwfc	fsr2h,f,c
  6986   001A2A  0E00               	movlw	0
  6987   001A2C  6EDF               	movwf	indf2,c
  6988                           
  6989                           ;dc_motor.c: 178:     mL->brakemode = 0;
  6990   001A2E  EE20 F002          	lfsr	2,2
  6991   001A32  501C               	movf	fullSpeedBackwards@mL^0,w,c
  6992   001A34  26D9               	addwf	fsr2l,f,c
  6993   001A36  501D               	movf	(fullSpeedBackwards@mL+1)^0,w,c
  6994   001A38  22DA               	addwfc	fsr2h,f,c
  6995   001A3A  0E00               	movlw	0
  6996   001A3C  6EDF               	movwf	indf2,c
  6997                           
  6998                           ;dc_motor.c: 180:     mR->direction = 0;
  6999   001A3E  EE20 F001          	lfsr	2,1
  7000   001A42  501E               	movf	fullSpeedBackwards@mR^0,w,c
  7001   001A44  26D9               	addwf	fsr2l,f,c
  7002   001A46  501F               	movf	(fullSpeedBackwards@mR+1)^0,w,c
  7003   001A48  22DA               	addwfc	fsr2h,f,c
  7004   001A4A  0E00               	movlw	0
  7005   001A4C  6EDF               	movwf	indf2,c
  7006                           
  7007                           ;dc_motor.c: 181:     mR->brakemode = 0;
  7008   001A4E  EE20 F002          	lfsr	2,2
  7009   001A52  501E               	movf	fullSpeedBackwards@mR^0,w,c
  7010   001A54  26D9               	addwf	fsr2l,f,c
  7011   001A56  501F               	movf	(fullSpeedBackwards@mR+1)^0,w,c
  7012   001A58  22DA               	addwfc	fsr2h,f,c
  7013   001A5A  0E00               	movlw	0
  7014   001A5C  6EDF               	movwf	indf2,c
  7015                           
  7016                           ;dc_motor.c: 184:     if(mL->power>38){mL->power=38;}
  7017   001A5E  C01C  FFD9         	movff	fullSpeedBackwards@mL,fsr2l
  7018   001A62  C01D  FFDA         	movff	fullSpeedBackwards@mL+1,fsr2h
  7019   001A66  50DF               	movf	indf2,w,c
  7020   001A68  0A80               	xorlw	128
  7021   001A6A  0F59               	addlw	-167
  7022   001A6C  A0D8               	btfss	status,0,c
  7023   001A6E  EF3B  F00D         	goto	u2111
  7024   001A72  EF3D  F00D         	goto	u2110
  7025   001A76                     u2111:
  7026   001A76  EF43  F00D         	goto	l2849
  7027   001A7A                     u2110:
  7028   001A7A  C01C  FFD9         	movff	fullSpeedBackwards@mL,fsr2l
  7029   001A7E  C01D  FFDA         	movff	fullSpeedBackwards@mL+1,fsr2h
  7030   001A82  0E26               	movlw	38
  7031   001A84  6EDF               	movwf	indf2,c
  7032   001A86                     l2849:
  7033                           
  7034                           ;dc_motor.c: 185:     if(mR->power>46){mR->power=46;}
  7035   001A86  C01E  FFD9         	movff	fullSpeedBackwards@mR,fsr2l
  7036   001A8A  C01F  FFDA         	movff	fullSpeedBackwards@mR+1,fsr2h
  7037   001A8E  50DF               	movf	indf2,w,c
  7038   001A90  0A80               	xorlw	128
  7039   001A92  0F51               	addlw	-175
  7040   001A94  A0D8               	btfss	status,0,c
  7041   001A96  EF4F  F00D         	goto	u2121
  7042   001A9A  EF51  F00D         	goto	u2120
  7043   001A9E                     u2121:
  7044   001A9E  EF57  F00D         	goto	l2853
  7045   001AA2                     u2120:
  7046   001AA2  C01E  FFD9         	movff	fullSpeedBackwards@mR,fsr2l
  7047   001AA6  C01F  FFDA         	movff	fullSpeedBackwards@mR+1,fsr2h
  7048   001AAA  0E2E               	movlw	46
  7049   001AAC  6EDF               	movwf	indf2,c
  7050   001AAE                     l2853:
  7051                           
  7052                           ;dc_motor.c: 187:     mL->power = mL->power + 5 ;
  7053   001AAE  C01C  FFD9         	movff	fullSpeedBackwards@mL,fsr2l
  7054   001AB2  C01D  FFDA         	movff	fullSpeedBackwards@mL+1,fsr2h
  7055   001AB6  50DF               	movf	indf2,w,c
  7056   001AB8  0F05               	addlw	5
  7057   001ABA  C01C  FFD9         	movff	fullSpeedBackwards@mL,fsr2l
  7058   001ABE  C01D  FFDA         	movff	fullSpeedBackwards@mL+1,fsr2h
  7059   001AC2  6EDF               	movwf	indf2,c
  7060   001AC4                     
  7061                           ;dc_motor.c: 188:     mR->power = mR->power + 8;
  7062   001AC4  C01E  FFD9         	movff	fullSpeedBackwards@mR,fsr2l
  7063   001AC8  C01F  FFDA         	movff	fullSpeedBackwards@mR+1,fsr2h
  7064   001ACC  50DF               	movf	indf2,w,c
  7065   001ACE  0F08               	addlw	8
  7066   001AD0  C01E  FFD9         	movff	fullSpeedBackwards@mR,fsr2l
  7067   001AD4  C01F  FFDA         	movff	fullSpeedBackwards@mR+1,fsr2h
  7068   001AD8  6EDF               	movwf	indf2,c
  7069   001ADA                     
  7070                           ;dc_motor.c: 190:     setMotorPWM(mL);
  7071   001ADA  C01C  F016         	movff	fullSpeedBackwards@mL,setMotorPWM@m
  7072   001ADE  C01D  F017         	movff	fullSpeedBackwards@mL+1,setMotorPWM@m+1
  7073   001AE2  EC70  F00A         	call	_setMotorPWM	;wreg free
  7074   001AE6                     
  7075                           ;dc_motor.c: 191:     setMotorPWM(mR);
  7076   001AE6  C01E  F016         	movff	fullSpeedBackwards@mR,setMotorPWM@m
  7077   001AEA  C01F  F017         	movff	fullSpeedBackwards@mR+1,setMotorPWM@m+1
  7078   001AEE  EC70  F00A         	call	_setMotorPWM	;wreg free
  7079   001AF2                     
  7080                           ;dc_motor.c: 192:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7081   001AF2  0E05               	movlw	5
  7082   001AF4  6E21               	movwf	(??_fullSpeedBackwards+1)^0,c
  7083   001AF6  0E0F               	movlw	15
  7084   001AF8  6E20               	movwf	??_fullSpeedBackwards^0,c
  7085   001AFA  0EF1               	movlw	241
  7086   001AFC                     u4707:
  7087   001AFC  2EE8               	decfsz	wreg,f,c
  7088   001AFE  D7FE               	bra	u4707
  7089   001B00  2E20               	decfsz	??_fullSpeedBackwards^0,f,c
  7090   001B02  D7FC               	bra	u4707
  7091   001B04  2E21               	decfsz	(??_fullSpeedBackwards+1)^0,f,c
  7092   001B06  D7FA               	bra	u4707
  7093   001B08  F000               	nop	
  7094   001B0A  0012               	return		;funcret
  7095   001B0C                     __end_of_fullSpeedBackwards:
  7096                           	callstack 0
  7097                           
  7098 ;; *************** function _setMotorPWM *****************
  7099 ;; Defined at:
  7100 ;;		line 64 in file "dc_motor.c"
  7101 ;; Parameters:    Size  Location     Type
  7102 ;;  m               2   21[COMRAM] PTR struct DC_motor
  7103 ;;		 -> main@motorR(9), main@motorL(9), 
  7104 ;; Auto vars:     Size  Location     Type
  7105 ;;  negDuty         1   26[COMRAM] unsigned char 
  7106 ;;  posDuty         1   25[COMRAM] unsigned char 
  7107 ;; Return value:  Size  Location     Type
  7108 ;;                  1    wreg      void 
  7109 ;; Registers used:
  7110 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7111 ;; Tracked objects:
  7112 ;;		On entry : 0/0
  7113 ;;		On exit  : 0/0
  7114 ;;		Unchanged: 0/0
  7115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7116 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7117 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7118 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7119 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7120 ;;Total ram usage:        6 bytes
  7121 ;; Hardware stack levels used: 1
  7122 ;; Hardware stack levels required when called: 8
  7123 ;; This function calls:
  7124 ;;		___lwdiv
  7125 ;;		___wmul
  7126 ;; This function is called by:
  7127 ;;		_stop
  7128 ;;		_turnLeft
  7129 ;;		_turnRight
  7130 ;;		_fullSpeedAhead
  7131 ;;		_fullSpeedBackwards
  7132 ;; This function uses a non-reentrant model
  7133 ;;
  7134                           
  7135                           	psect	text33
  7136   0014E0                     __ptext33:
  7137                           	callstack 0
  7138   0014E0                     _setMotorPWM:
  7139                           	callstack 21
  7140   0014E0                     
  7141                           ;dc_motor.c: 64: void setMotorPWM(DC_motor *m);dc_motor.c: 65: {;dc_motor.c: 66:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 68:     if(m->brakemode) {
  7142   0014E0  EE20 F002          	lfsr	2,2
  7143   0014E4  5016               	movf	setMotorPWM@m^0,w,c
  7144   0014E6  26D9               	addwf	fsr2l,f,c
  7145   0014E8  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7146   0014EA  22DA               	addwfc	fsr2h,f,c
  7147   0014EC  50DF               	movf	indf2,w,c
  7148   0014EE  B4D8               	btfsc	status,2,c
  7149   0014F0  EF7C  F00A         	goto	u2011
  7150   0014F4  EF7E  F00A         	goto	u2010
  7151   0014F8                     u2011:
  7152   0014F8  EFB2  F00A         	goto	l2765
  7153   0014FC                     u2010:
  7154   0014FC                     
  7155                           ;dc_motor.c: 69:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  7156   0014FC  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  7157   001500  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  7158   001504  50DF               	movf	indf2,w,c
  7159   001506  6E09               	movwf	___wmul@multiplier^0,c
  7160   001508  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  7161   00150A  BE09               	btfsc	___wmul@multiplier^0,7,c
  7162   00150C  060A               	decf	(___wmul@multiplier+1)^0,f,c
  7163   00150E  EE20 F003          	lfsr	2,3
  7164   001512  5016               	movf	setMotorPWM@m^0,w,c
  7165   001514  26D9               	addwf	fsr2l,f,c
  7166   001516  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7167   001518  22DA               	addwfc	fsr2h,f,c
  7168   00151A  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  7169   00151E  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  7170   001522  EC8F  F014         	call	___wmul	;wreg free
  7171   001526  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  7172   00152A  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  7173   00152E  0E00               	movlw	0
  7174   001530  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  7175   001532  0E64               	movlw	100
  7176   001534  6E11               	movwf	___lwdiv@divisor^0,c
  7177   001536  ECF8  F011         	call	___lwdiv	;wreg free
  7178   00153A  EE20 F003          	lfsr	2,3
  7179   00153E  5016               	movf	setMotorPWM@m^0,w,c
  7180   001540  26D9               	addwf	fsr2l,f,c
  7181   001542  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7182   001544  22DA               	addwfc	fsr2h,f,c
  7183   001546  50DF               	movf	indf2,w,c
  7184   001548  6E18               	movwf	??_setMotorPWM^0,c
  7185   00154A  500F               	movf	?___lwdiv^0,w,c
  7186   00154C  5C18               	subwf	??_setMotorPWM^0,w,c
  7187   00154E  6E1A               	movwf	setMotorPWM@posDuty^0,c
  7188   001550                     
  7189                           ;dc_motor.c: 70:         negDuty=m->PWMperiod;
  7190   001550  EE20 F003          	lfsr	2,3
  7191   001554  5016               	movf	setMotorPWM@m^0,w,c
  7192   001556  26D9               	addwf	fsr2l,f,c
  7193   001558  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7194   00155A  22DA               	addwfc	fsr2h,f,c
  7195   00155C  50DF               	movf	indf2,w,c
  7196   00155E  6E1B               	movwf	setMotorPWM@negDuty^0,c
  7197                           
  7198                           ;dc_motor.c: 71:     }
  7199   001560  EFD5  F00A         	goto	l2769
  7200   001564                     l2765:
  7201                           
  7202                           ;dc_motor.c: 73:         posDuty=0;
  7203   001564  0E00               	movlw	0
  7204   001566  6E1A               	movwf	setMotorPWM@posDuty^0,c
  7205   001568                     
  7206                           ;dc_motor.c: 74:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  7207   001568  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  7208   00156C  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  7209   001570  50DF               	movf	indf2,w,c
  7210   001572  6E09               	movwf	___wmul@multiplier^0,c
  7211   001574  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  7212   001576  BE09               	btfsc	___wmul@multiplier^0,7,c
  7213   001578  060A               	decf	(___wmul@multiplier+1)^0,f,c
  7214   00157A  EE20 F003          	lfsr	2,3
  7215   00157E  5016               	movf	setMotorPWM@m^0,w,c
  7216   001580  26D9               	addwf	fsr2l,f,c
  7217   001582  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7218   001584  22DA               	addwfc	fsr2h,f,c
  7219   001586  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  7220   00158A  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  7221   00158E  EC8F  F014         	call	___wmul	;wreg free
  7222   001592  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  7223   001596  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  7224   00159A  0E00               	movlw	0
  7225   00159C  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  7226   00159E  0E64               	movlw	100
  7227   0015A0  6E11               	movwf	___lwdiv@divisor^0,c
  7228   0015A2  ECF8  F011         	call	___lwdiv	;wreg free
  7229   0015A6  500F               	movf	?___lwdiv^0,w,c
  7230   0015A8  6E1B               	movwf	setMotorPWM@negDuty^0,c
  7231   0015AA                     l2769:
  7232                           
  7233                           ;dc_motor.c: 77:     if (m->direction) {
  7234   0015AA  EE20 F001          	lfsr	2,1
  7235   0015AE  5016               	movf	setMotorPWM@m^0,w,c
  7236   0015B0  26D9               	addwf	fsr2l,f,c
  7237   0015B2  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7238   0015B4  22DA               	addwfc	fsr2h,f,c
  7239   0015B6  50DF               	movf	indf2,w,c
  7240   0015B8  B4D8               	btfsc	status,2,c
  7241   0015BA  EFE1  F00A         	goto	u2021
  7242   0015BE  EFE3  F00A         	goto	u2020
  7243   0015C2                     u2021:
  7244   0015C2  EF05  F00B         	goto	l2773
  7245   0015C6                     u2020:
  7246   0015C6                     
  7247                           ;dc_motor.c: 78:         *(m->posDutyHighByte)=posDuty;
  7248   0015C6  EE20 F005          	lfsr	2,5
  7249   0015CA  5016               	movf	setMotorPWM@m^0,w,c
  7250   0015CC  26D9               	addwf	fsr2l,f,c
  7251   0015CE  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7252   0015D0  22DA               	addwfc	fsr2h,f,c
  7253   0015D2  CFDE F018          	movff	postinc2,??_setMotorPWM
  7254   0015D6  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  7255   0015DA  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  7256   0015DE  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  7257   0015E2  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  7258                           
  7259                           ;dc_motor.c: 79:         *(m->negDutyHighByte)=negDuty;
  7260   0015E6  EE20 F007          	lfsr	2,7
  7261   0015EA  5016               	movf	setMotorPWM@m^0,w,c
  7262   0015EC  26D9               	addwf	fsr2l,f,c
  7263   0015EE  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7264   0015F0  22DA               	addwfc	fsr2h,f,c
  7265   0015F2  CFDE F018          	movff	postinc2,??_setMotorPWM
  7266   0015F6  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  7267   0015FA  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  7268   0015FE  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  7269   001602  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  7270                           
  7271                           ;dc_motor.c: 80:     } else {
  7272   001606  EF25  F00B         	goto	l191
  7273   00160A                     l2773:
  7274                           
  7275                           ;dc_motor.c: 81:         *(m->posDutyHighByte)=negDuty;
  7276   00160A  EE20 F005          	lfsr	2,5
  7277   00160E  5016               	movf	setMotorPWM@m^0,w,c
  7278   001610  26D9               	addwf	fsr2l,f,c
  7279   001612  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7280   001614  22DA               	addwfc	fsr2h,f,c
  7281   001616  CFDE F018          	movff	postinc2,??_setMotorPWM
  7282   00161A  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  7283   00161E  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  7284   001622  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  7285   001626  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  7286                           
  7287                           ;dc_motor.c: 82:         *(m->negDutyHighByte)=posDuty;
  7288   00162A  EE20 F007          	lfsr	2,7
  7289   00162E  5016               	movf	setMotorPWM@m^0,w,c
  7290   001630  26D9               	addwf	fsr2l,f,c
  7291   001632  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7292   001634  22DA               	addwfc	fsr2h,f,c
  7293   001636  CFDE F018          	movff	postinc2,??_setMotorPWM
  7294   00163A  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  7295   00163E  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  7296   001642  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  7297   001646  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  7298   00164A                     l191:
  7299   00164A  0012               	return		;funcret
  7300   00164C                     __end_of_setMotorPWM:
  7301                           	callstack 0
  7302                           
  7303 ;; *************** function ___wmul *****************
  7304 ;; Defined at:
  7305 ;;		line 15 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\Umul16.c"
  7306 ;; Parameters:    Size  Location     Type
  7307 ;;  multiplier      2    8[COMRAM] unsigned int 
  7308 ;;  multiplicand    2   10[COMRAM] unsigned int 
  7309 ;; Auto vars:     Size  Location     Type
  7310 ;;  product         2   12[COMRAM] unsigned int 
  7311 ;; Return value:  Size  Location     Type
  7312 ;;                  2    8[COMRAM] unsigned int 
  7313 ;; Registers used:
  7314 ;;		wreg, status,2, status,0, prodl, prodh
  7315 ;; Tracked objects:
  7316 ;;		On entry : 0/0
  7317 ;;		On exit  : 0/0
  7318 ;;		Unchanged: 0/0
  7319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7320 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7321 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7323 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7324 ;;Total ram usage:        6 bytes
  7325 ;; Hardware stack levels used: 1
  7326 ;; Hardware stack levels required when called: 7
  7327 ;; This function calls:
  7328 ;;		Nothing
  7329 ;; This function is called by:
  7330 ;;		_setMotorPWM
  7331 ;; This function uses a non-reentrant model
  7332 ;;
  7333                           
  7334                           	psect	text34
  7335   00291E                     __ptext34:
  7336                           	callstack 0
  7337   00291E                     ___wmul:
  7338                           	callstack 21
  7339   00291E  5009               	movf	___wmul@multiplier^0,w,c
  7340   002920  020B               	mulwf	___wmul@multiplicand^0,c
  7341   002922  CFF3 F00D          	movff	prodl,___wmul@product
  7342   002926  CFF4 F00E          	movff	prodh,___wmul@product+1
  7343   00292A  5009               	movf	___wmul@multiplier^0,w,c
  7344   00292C  020C               	mulwf	(___wmul@multiplicand+1)^0,c
  7345   00292E  50F3               	movf	243,w,c
  7346   002930  260E               	addwf	(___wmul@product+1)^0,f,c
  7347   002932  500A               	movf	(___wmul@multiplier+1)^0,w,c
  7348   002934  020B               	mulwf	___wmul@multiplicand^0,c
  7349   002936  50F3               	movf	243,w,c
  7350   002938  260E               	addwf	(___wmul@product+1)^0,f,c
  7351   00293A  C00D  F009         	movff	___wmul@product,?___wmul
  7352   00293E  C00E  F00A         	movff	___wmul@product+1,?___wmul+1
  7353   002942  0012               	return		;funcret
  7354   002944                     __end_of___wmul:
  7355                           	callstack 0
  7356                           
  7357 ;; *************** function ___lwdiv *****************
  7358 ;; Defined at:
  7359 ;;		line 7 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\lwdiv.c"
  7360 ;; Parameters:    Size  Location     Type
  7361 ;;  dividend        2   14[COMRAM] unsigned int 
  7362 ;;  divisor         2   16[COMRAM] unsigned int 
  7363 ;; Auto vars:     Size  Location     Type
  7364 ;;  quotient        2   18[COMRAM] unsigned int 
  7365 ;;  counter         1   20[COMRAM] unsigned char 
  7366 ;; Return value:  Size  Location     Type
  7367 ;;                  2   14[COMRAM] unsigned int 
  7368 ;; Registers used:
  7369 ;;		wreg, status,2, status,0
  7370 ;; Tracked objects:
  7371 ;;		On entry : 0/0
  7372 ;;		On exit  : 0/0
  7373 ;;		Unchanged: 0/0
  7374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7375 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7376 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7378 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7379 ;;Total ram usage:        7 bytes
  7380 ;; Hardware stack levels used: 1
  7381 ;; Hardware stack levels required when called: 7
  7382 ;; This function calls:
  7383 ;;		Nothing
  7384 ;; This function is called by:
  7385 ;;		_setMotorPWM
  7386 ;; This function uses a non-reentrant model
  7387 ;;
  7388                           
  7389                           	psect	text35
  7390   0023F0                     __ptext35:
  7391                           	callstack 0
  7392   0023F0                     ___lwdiv:
  7393                           	callstack 21
  7394   0023F0  0E00               	movlw	0
  7395   0023F2  6E14               	movwf	(___lwdiv@quotient+1)^0,c
  7396   0023F4  0E00               	movlw	0
  7397   0023F6  6E13               	movwf	___lwdiv@quotient^0,c
  7398   0023F8  5011               	movf	___lwdiv@divisor^0,w,c
  7399   0023FA  1012               	iorwf	(___lwdiv@divisor+1)^0,w,c
  7400   0023FC  B4D8               	btfsc	status,2,c
  7401   0023FE  EF03  F012         	goto	u1981
  7402   002402  EF05  F012         	goto	u1980
  7403   002406                     u1981:
  7404   002406  EF2D  F012         	goto	l1189
  7405   00240A                     u1980:
  7406   00240A  0E01               	movlw	1
  7407   00240C  6E15               	movwf	___lwdiv@counter^0,c
  7408   00240E  EF0D  F012         	goto	l2745
  7409   002412                     l2743:
  7410   002412  90D8               	bcf	status,0,c
  7411   002414  3611               	rlcf	___lwdiv@divisor^0,f,c
  7412   002416  3612               	rlcf	(___lwdiv@divisor+1)^0,f,c
  7413   002418  2A15               	incf	___lwdiv@counter^0,f,c
  7414   00241A                     l2745:
  7415   00241A  AE12               	btfss	(___lwdiv@divisor+1)^0,7,c
  7416   00241C  EF12  F012         	goto	u1991
  7417   002420  EF14  F012         	goto	u1990
  7418   002424                     u1991:
  7419   002424  EF09  F012         	goto	l2743
  7420   002428                     u1990:
  7421   002428                     l2747:
  7422   002428  90D8               	bcf	status,0,c
  7423   00242A  3613               	rlcf	___lwdiv@quotient^0,f,c
  7424   00242C  3614               	rlcf	(___lwdiv@quotient+1)^0,f,c
  7425   00242E  5011               	movf	___lwdiv@divisor^0,w,c
  7426   002430  5C0F               	subwf	___lwdiv@dividend^0,w,c
  7427   002432  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  7428   002434  5810               	subwfb	(___lwdiv@dividend+1)^0,w,c
  7429   002436  A0D8               	btfss	status,0,c
  7430   002438  EF20  F012         	goto	u2001
  7431   00243C  EF22  F012         	goto	u2000
  7432   002440                     u2001:
  7433   002440  EF27  F012         	goto	l2755
  7434   002444                     u2000:
  7435   002444  5011               	movf	___lwdiv@divisor^0,w,c
  7436   002446  5E0F               	subwf	___lwdiv@dividend^0,f,c
  7437   002448  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  7438   00244A  5A10               	subwfb	(___lwdiv@dividend+1)^0,f,c
  7439   00244C  8013               	bsf	___lwdiv@quotient^0,0,c
  7440   00244E                     l2755:
  7441   00244E  90D8               	bcf	status,0,c
  7442   002450  3212               	rrcf	(___lwdiv@divisor+1)^0,f,c
  7443   002452  3211               	rrcf	___lwdiv@divisor^0,f,c
  7444   002454  2E15               	decfsz	___lwdiv@counter^0,f,c
  7445   002456  EF14  F012         	goto	l2747
  7446   00245A                     l1189:
  7447   00245A  C013  F00F         	movff	___lwdiv@quotient,?___lwdiv
  7448   00245E  C014  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7449   002462  0012               	return		;funcret
  7450   002464                     __end_of___lwdiv:
  7451                           	callstack 0
  7452                           
  7453 ;; *************** function _Update_RGBC *****************
  7454 ;; Defined at:
  7455 ;;		line 90 in file "color.c"
  7456 ;; Parameters:    Size  Location     Type
  7457 ;;  tempval         2   19[COMRAM] PTR struct RGB_val
  7458 ;;		 -> main@initial_color(8), 
  7459 ;; Auto vars:     Size  Location     Type
  7460 ;;		None
  7461 ;; Return value:  Size  Location     Type
  7462 ;;                  1    wreg      void 
  7463 ;; Registers used:
  7464 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7465 ;; Tracked objects:
  7466 ;;		On entry : 0/0
  7467 ;;		On exit  : 0/0
  7468 ;;		Unchanged: 0/0
  7469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7470 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7473 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7474 ;;Total ram usage:        2 bytes
  7475 ;; Hardware stack levels used: 1
  7476 ;; Hardware stack levels required when called: 10
  7477 ;; This function calls:
  7478 ;;		_color_read_Blue
  7479 ;;		_color_read_Clear
  7480 ;;		_color_read_Green
  7481 ;;		_color_read_Red
  7482 ;; This function is called by:
  7483 ;;		_main
  7484 ;; This function uses a non-reentrant model
  7485 ;;
  7486                           
  7487                           	psect	text36
  7488   002540                     __ptext36:
  7489                           	callstack 0
  7490   002540                     _Update_RGBC:
  7491                           	callstack 20
  7492   002540                     
  7493                           ;color.c: 92:     tempval->R = color_read_Red();
  7494   002540  ECCF  F012         	call	_color_read_Red	;wreg free
  7495   002544  C014  FFD9         	movff	Update_RGBC@tempval,fsr2l
  7496   002548  C015  FFDA         	movff	Update_RGBC@tempval+1,fsr2h
  7497   00254C  C00D  FFDE         	movff	?_color_read_Red,postinc2
  7498   002550  C00E  FFDD         	movff	?_color_read_Red+1,postdec2
  7499                           
  7500                           ;color.c: 93:     tempval->G = color_read_Green();
  7501   002554  ECF7  F012         	call	_color_read_Green	;wreg free
  7502   002558  EE20 F002          	lfsr	2,2
  7503   00255C  5014               	movf	Update_RGBC@tempval^0,w,c
  7504   00255E  26D9               	addwf	fsr2l,f,c
  7505   002560  5015               	movf	(Update_RGBC@tempval+1)^0,w,c
  7506   002562  22DA               	addwfc	fsr2h,f,c
  7507   002564  C00D  FFDE         	movff	?_color_read_Green,postinc2
  7508   002568  C00E  FFDD         	movff	?_color_read_Green+1,postdec2
  7509                           
  7510                           ;color.c: 94:     tempval->B = color_read_Blue();
  7511   00256C  EC47  F013         	call	_color_read_Blue	;wreg free
  7512   002570  EE20 F004          	lfsr	2,4
  7513   002574  5014               	movf	Update_RGBC@tempval^0,w,c
  7514   002576  26D9               	addwf	fsr2l,f,c
  7515   002578  5015               	movf	(Update_RGBC@tempval+1)^0,w,c
  7516   00257A  22DA               	addwfc	fsr2h,f,c
  7517   00257C  C00D  FFDE         	movff	?_color_read_Blue,postinc2
  7518   002580  C00E  FFDD         	movff	?_color_read_Blue+1,postdec2
  7519                           
  7520                           ;color.c: 95:     tempval->C = color_read_Clear();
  7521   002584  EC1F  F013         	call	_color_read_Clear	;wreg free
  7522   002588  EE20 F006          	lfsr	2,6
  7523   00258C  5014               	movf	Update_RGBC@tempval^0,w,c
  7524   00258E  26D9               	addwf	fsr2l,f,c
  7525   002590  5015               	movf	(Update_RGBC@tempval+1)^0,w,c
  7526   002592  22DA               	addwfc	fsr2h,f,c
  7527   002594  C00D  FFDE         	movff	?_color_read_Clear,postinc2
  7528   002598  C00E  FFDD         	movff	?_color_read_Clear+1,postdec2
  7529   00259C  0012               	return		;funcret
  7530   00259E                     __end_of_Update_RGBC:
  7531                           	callstack 0
  7532                           
  7533 ;; *************** function _color_read_Red *****************
  7534 ;; Defined at:
  7535 ;;		line 32 in file "color.c"
  7536 ;; Parameters:    Size  Location     Type
  7537 ;;		None
  7538 ;; Auto vars:     Size  Location     Type
  7539 ;;  tmp             2   17[COMRAM] unsigned int 
  7540 ;; Return value:  Size  Location     Type
  7541 ;;                  2   12[COMRAM] unsigned int 
  7542 ;; Registers used:
  7543 ;;		wreg, status,2, status,0, cstack
  7544 ;; Tracked objects:
  7545 ;;		On entry : 0/0
  7546 ;;		On exit  : 0/0
  7547 ;;		Unchanged: 0/0
  7548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7549 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7550 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7551 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7552 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7553 ;;Total ram usage:        7 bytes
  7554 ;; Hardware stack levels used: 1
  7555 ;; Hardware stack levels required when called: 9
  7556 ;; This function calls:
  7557 ;;		_I2C_2_Master_Read
  7558 ;;		_I2C_2_Master_RepStart
  7559 ;;		_I2C_2_Master_Start
  7560 ;;		_I2C_2_Master_Stop
  7561 ;;		_I2C_2_Master_Write
  7562 ;; This function is called by:
  7563 ;;		_Update_RGBC
  7564 ;; This function uses a non-reentrant model
  7565 ;;
  7566                           
  7567                           	psect	text37
  7568   00259E                     __ptext37:
  7569                           	callstack 0
  7570   00259E                     _color_read_Red:
  7571                           	callstack 20
  7572   00259E                     
  7573                           ;color.c: 34:  unsigned int tmp;;color.c: 35:  I2C_2_Master_Start();
  7574   00259E  EC4C  F015         	call	_I2C_2_Master_Start	;wreg free
  7575                           
  7576                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x00);
  7577   0025A2  0E52               	movlw	82
  7578   0025A4  EC36  F015         	call	_I2C_2_Master_Write
  7579                           
  7580                           ;color.c: 37:  I2C_2_Master_Write(0xA0 | 0x16);
  7581   0025A8  0EB6               	movlw	182
  7582   0025AA  EC36  F015         	call	_I2C_2_Master_Write
  7583                           
  7584                           ;color.c: 38:  I2C_2_Master_RepStart();
  7585   0025AE  EC42  F015         	call	_I2C_2_Master_RepStart	;wreg free
  7586                           
  7587                           ;color.c: 39:  I2C_2_Master_Write(0x52 | 0x01);
  7588   0025B2  0E53               	movlw	83
  7589   0025B4  EC36  F015         	call	_I2C_2_Master_Write
  7590                           
  7591                           ;color.c: 40:  tmp=I2C_2_Master_Read(1);
  7592   0025B8  0E01               	movlw	1
  7593   0025BA  ECE2  F013         	call	_I2C_2_Master_Read
  7594   0025BE  6E0F               	movwf	??_color_read_Red^0,c
  7595   0025C0  500F               	movf	??_color_read_Red^0,w,c
  7596   0025C2  6E12               	movwf	color_read_Red@tmp^0,c
  7597   0025C4  6A13               	clrf	(color_read_Red@tmp+1)^0,c
  7598                           
  7599                           ;color.c: 41:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7600   0025C6  0E00               	movlw	0
  7601   0025C8  ECE2  F013         	call	_I2C_2_Master_Read
  7602   0025CC  6E0F               	movwf	??_color_read_Red^0,c
  7603   0025CE  500F               	movf	??_color_read_Red^0,w,c
  7604   0025D0  6E11               	movwf	(??_color_read_Red+2)^0,c
  7605   0025D2  6A10               	clrf	(??_color_read_Red+1)^0,c
  7606   0025D4  5012               	movf	color_read_Red@tmp^0,w,c
  7607   0025D6  1010               	iorwf	(??_color_read_Red+1)^0,w,c
  7608   0025D8  6E12               	movwf	color_read_Red@tmp^0,c
  7609   0025DA  5013               	movf	(color_read_Red@tmp+1)^0,w,c
  7610   0025DC  1011               	iorwf	(??_color_read_Red+2)^0,w,c
  7611   0025DE  6E13               	movwf	(color_read_Red@tmp+1)^0,c
  7612                           
  7613                           ;color.c: 42:  I2C_2_Master_Stop();
  7614   0025E0  EC47  F015         	call	_I2C_2_Master_Stop	;wreg free
  7615   0025E4                     
  7616                           ;color.c: 43:  return tmp;
  7617   0025E4  C012  F00D         	movff	color_read_Red@tmp,?_color_read_Red
  7618   0025E8  C013  F00E         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  7619   0025EC  0012               	return		;funcret
  7620   0025EE                     __end_of_color_read_Red:
  7621                           	callstack 0
  7622                           
  7623 ;; *************** function _color_read_Green *****************
  7624 ;; Defined at:
  7625 ;;		line 46 in file "color.c"
  7626 ;; Parameters:    Size  Location     Type
  7627 ;;		None
  7628 ;; Auto vars:     Size  Location     Type
  7629 ;;  tmp             2   17[COMRAM] unsigned int 
  7630 ;; Return value:  Size  Location     Type
  7631 ;;                  2   12[COMRAM] unsigned int 
  7632 ;; Registers used:
  7633 ;;		wreg, status,2, status,0, cstack
  7634 ;; Tracked objects:
  7635 ;;		On entry : 0/0
  7636 ;;		On exit  : 0/0
  7637 ;;		Unchanged: 0/0
  7638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7639 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7640 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7641 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7642 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7643 ;;Total ram usage:        7 bytes
  7644 ;; Hardware stack levels used: 1
  7645 ;; Hardware stack levels required when called: 9
  7646 ;; This function calls:
  7647 ;;		_I2C_2_Master_Read
  7648 ;;		_I2C_2_Master_RepStart
  7649 ;;		_I2C_2_Master_Start
  7650 ;;		_I2C_2_Master_Stop
  7651 ;;		_I2C_2_Master_Write
  7652 ;; This function is called by:
  7653 ;;		_Update_RGBC
  7654 ;; This function uses a non-reentrant model
  7655 ;;
  7656                           
  7657                           	psect	text38
  7658   0025EE                     __ptext38:
  7659                           	callstack 0
  7660   0025EE                     _color_read_Green:
  7661                           	callstack 20
  7662   0025EE                     
  7663                           ;color.c: 48:  unsigned int tmp;;color.c: 49:  I2C_2_Master_Start();
  7664   0025EE  EC4C  F015         	call	_I2C_2_Master_Start	;wreg free
  7665                           
  7666                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x00);
  7667   0025F2  0E52               	movlw	82
  7668   0025F4  EC36  F015         	call	_I2C_2_Master_Write
  7669                           
  7670                           ;color.c: 51:  I2C_2_Master_Write(0xA0 | 0x18);
  7671   0025F8  0EB8               	movlw	184
  7672   0025FA  EC36  F015         	call	_I2C_2_Master_Write
  7673                           
  7674                           ;color.c: 52:  I2C_2_Master_RepStart();
  7675   0025FE  EC42  F015         	call	_I2C_2_Master_RepStart	;wreg free
  7676                           
  7677                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x01);
  7678   002602  0E53               	movlw	83
  7679   002604  EC36  F015         	call	_I2C_2_Master_Write
  7680                           
  7681                           ;color.c: 54:  tmp=I2C_2_Master_Read(1);
  7682   002608  0E01               	movlw	1
  7683   00260A  ECE2  F013         	call	_I2C_2_Master_Read
  7684   00260E  6E0F               	movwf	??_color_read_Green^0,c
  7685   002610  500F               	movf	??_color_read_Green^0,w,c
  7686   002612  6E12               	movwf	color_read_Green@tmp^0,c
  7687   002614  6A13               	clrf	(color_read_Green@tmp+1)^0,c
  7688                           
  7689                           ;color.c: 55:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7690   002616  0E00               	movlw	0
  7691   002618  ECE2  F013         	call	_I2C_2_Master_Read
  7692   00261C  6E0F               	movwf	??_color_read_Green^0,c
  7693   00261E  500F               	movf	??_color_read_Green^0,w,c
  7694   002620  6E11               	movwf	(??_color_read_Green+2)^0,c
  7695   002622  6A10               	clrf	(??_color_read_Green+1)^0,c
  7696   002624  5012               	movf	color_read_Green@tmp^0,w,c
  7697   002626  1010               	iorwf	(??_color_read_Green+1)^0,w,c
  7698   002628  6E12               	movwf	color_read_Green@tmp^0,c
  7699   00262A  5013               	movf	(color_read_Green@tmp+1)^0,w,c
  7700   00262C  1011               	iorwf	(??_color_read_Green+2)^0,w,c
  7701   00262E  6E13               	movwf	(color_read_Green@tmp+1)^0,c
  7702                           
  7703                           ;color.c: 56:  I2C_2_Master_Stop();
  7704   002630  EC47  F015         	call	_I2C_2_Master_Stop	;wreg free
  7705   002634                     
  7706                           ;color.c: 57:  return tmp;
  7707   002634  C012  F00D         	movff	color_read_Green@tmp,?_color_read_Green
  7708   002638  C013  F00E         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  7709   00263C  0012               	return		;funcret
  7710   00263E                     __end_of_color_read_Green:
  7711                           	callstack 0
  7712                           
  7713 ;; *************** function _color_read_Clear *****************
  7714 ;; Defined at:
  7715 ;;		line 74 in file "color.c"
  7716 ;; Parameters:    Size  Location     Type
  7717 ;;		None
  7718 ;; Auto vars:     Size  Location     Type
  7719 ;;  tmp             2   17[COMRAM] unsigned int 
  7720 ;; Return value:  Size  Location     Type
  7721 ;;                  2   12[COMRAM] unsigned int 
  7722 ;; Registers used:
  7723 ;;		wreg, status,2, status,0, cstack
  7724 ;; Tracked objects:
  7725 ;;		On entry : 0/0
  7726 ;;		On exit  : 0/0
  7727 ;;		Unchanged: 0/0
  7728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7729 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7730 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7731 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7732 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7733 ;;Total ram usage:        7 bytes
  7734 ;; Hardware stack levels used: 1
  7735 ;; Hardware stack levels required when called: 9
  7736 ;; This function calls:
  7737 ;;		_I2C_2_Master_Read
  7738 ;;		_I2C_2_Master_RepStart
  7739 ;;		_I2C_2_Master_Start
  7740 ;;		_I2C_2_Master_Stop
  7741 ;;		_I2C_2_Master_Write
  7742 ;; This function is called by:
  7743 ;;		_Update_RGBC
  7744 ;; This function uses a non-reentrant model
  7745 ;;
  7746                           
  7747                           	psect	text39
  7748   00263E                     __ptext39:
  7749                           	callstack 0
  7750   00263E                     _color_read_Clear:
  7751                           	callstack 20
  7752   00263E                     
  7753                           ;color.c: 76:  unsigned int tmp;;color.c: 77:  I2C_2_Master_Start();
  7754   00263E  EC4C  F015         	call	_I2C_2_Master_Start	;wreg free
  7755                           
  7756                           ;color.c: 78:  I2C_2_Master_Write(0x52 | 0x00);
  7757   002642  0E52               	movlw	82
  7758   002644  EC36  F015         	call	_I2C_2_Master_Write
  7759                           
  7760                           ;color.c: 79:  I2C_2_Master_Write(0xA0 | 0x14);
  7761   002648  0EB4               	movlw	180
  7762   00264A  EC36  F015         	call	_I2C_2_Master_Write
  7763                           
  7764                           ;color.c: 80:  I2C_2_Master_RepStart();
  7765   00264E  EC42  F015         	call	_I2C_2_Master_RepStart	;wreg free
  7766                           
  7767                           ;color.c: 81:  I2C_2_Master_Write(0x52 | 0x01);
  7768   002652  0E53               	movlw	83
  7769   002654  EC36  F015         	call	_I2C_2_Master_Write
  7770                           
  7771                           ;color.c: 82:  tmp=I2C_2_Master_Read(1);
  7772   002658  0E01               	movlw	1
  7773   00265A  ECE2  F013         	call	_I2C_2_Master_Read
  7774   00265E  6E0F               	movwf	??_color_read_Clear^0,c
  7775   002660  500F               	movf	??_color_read_Clear^0,w,c
  7776   002662  6E12               	movwf	color_read_Clear@tmp^0,c
  7777   002664  6A13               	clrf	(color_read_Clear@tmp+1)^0,c
  7778                           
  7779                           ;color.c: 83:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7780   002666  0E00               	movlw	0
  7781   002668  ECE2  F013         	call	_I2C_2_Master_Read
  7782   00266C  6E0F               	movwf	??_color_read_Clear^0,c
  7783   00266E  500F               	movf	??_color_read_Clear^0,w,c
  7784   002670  6E11               	movwf	(??_color_read_Clear+2)^0,c
  7785   002672  6A10               	clrf	(??_color_read_Clear+1)^0,c
  7786   002674  5012               	movf	color_read_Clear@tmp^0,w,c
  7787   002676  1010               	iorwf	(??_color_read_Clear+1)^0,w,c
  7788   002678  6E12               	movwf	color_read_Clear@tmp^0,c
  7789   00267A  5013               	movf	(color_read_Clear@tmp+1)^0,w,c
  7790   00267C  1011               	iorwf	(??_color_read_Clear+2)^0,w,c
  7791   00267E  6E13               	movwf	(color_read_Clear@tmp+1)^0,c
  7792                           
  7793                           ;color.c: 84:  I2C_2_Master_Stop();
  7794   002680  EC47  F015         	call	_I2C_2_Master_Stop	;wreg free
  7795   002684                     
  7796                           ;color.c: 85:  return tmp;
  7797   002684  C012  F00D         	movff	color_read_Clear@tmp,?_color_read_Clear
  7798   002688  C013  F00E         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  7799   00268C  0012               	return		;funcret
  7800   00268E                     __end_of_color_read_Clear:
  7801                           	callstack 0
  7802                           
  7803 ;; *************** function _color_read_Blue *****************
  7804 ;; Defined at:
  7805 ;;		line 60 in file "color.c"
  7806 ;; Parameters:    Size  Location     Type
  7807 ;;		None
  7808 ;; Auto vars:     Size  Location     Type
  7809 ;;  tmp             2   17[COMRAM] unsigned int 
  7810 ;; Return value:  Size  Location     Type
  7811 ;;                  2   12[COMRAM] unsigned int 
  7812 ;; Registers used:
  7813 ;;		wreg, status,2, status,0, cstack
  7814 ;; Tracked objects:
  7815 ;;		On entry : 0/0
  7816 ;;		On exit  : 0/0
  7817 ;;		Unchanged: 0/0
  7818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7819 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7820 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7821 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7822 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7823 ;;Total ram usage:        7 bytes
  7824 ;; Hardware stack levels used: 1
  7825 ;; Hardware stack levels required when called: 9
  7826 ;; This function calls:
  7827 ;;		_I2C_2_Master_Read
  7828 ;;		_I2C_2_Master_RepStart
  7829 ;;		_I2C_2_Master_Start
  7830 ;;		_I2C_2_Master_Stop
  7831 ;;		_I2C_2_Master_Write
  7832 ;; This function is called by:
  7833 ;;		_Update_RGBC
  7834 ;; This function uses a non-reentrant model
  7835 ;;
  7836                           
  7837                           	psect	text40
  7838   00268E                     __ptext40:
  7839                           	callstack 0
  7840   00268E                     _color_read_Blue:
  7841                           	callstack 20
  7842   00268E                     
  7843                           ;color.c: 62:  unsigned int tmp;;color.c: 63:  I2C_2_Master_Start();
  7844   00268E  EC4C  F015         	call	_I2C_2_Master_Start	;wreg free
  7845                           
  7846                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x00);
  7847   002692  0E52               	movlw	82
  7848   002694  EC36  F015         	call	_I2C_2_Master_Write
  7849                           
  7850                           ;color.c: 65:  I2C_2_Master_Write(0xA0 | 0x1A);
  7851   002698  0EBA               	movlw	186
  7852   00269A  EC36  F015         	call	_I2C_2_Master_Write
  7853                           
  7854                           ;color.c: 66:  I2C_2_Master_RepStart();
  7855   00269E  EC42  F015         	call	_I2C_2_Master_RepStart	;wreg free
  7856                           
  7857                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x01);
  7858   0026A2  0E53               	movlw	83
  7859   0026A4  EC36  F015         	call	_I2C_2_Master_Write
  7860                           
  7861                           ;color.c: 68:  tmp=I2C_2_Master_Read(1);
  7862   0026A8  0E01               	movlw	1
  7863   0026AA  ECE2  F013         	call	_I2C_2_Master_Read
  7864   0026AE  6E0F               	movwf	??_color_read_Blue^0,c
  7865   0026B0  500F               	movf	??_color_read_Blue^0,w,c
  7866   0026B2  6E12               	movwf	color_read_Blue@tmp^0,c
  7867   0026B4  6A13               	clrf	(color_read_Blue@tmp+1)^0,c
  7868                           
  7869                           ;color.c: 69:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7870   0026B6  0E00               	movlw	0
  7871   0026B8  ECE2  F013         	call	_I2C_2_Master_Read
  7872   0026BC  6E0F               	movwf	??_color_read_Blue^0,c
  7873   0026BE  500F               	movf	??_color_read_Blue^0,w,c
  7874   0026C0  6E11               	movwf	(??_color_read_Blue+2)^0,c
  7875   0026C2  6A10               	clrf	(??_color_read_Blue+1)^0,c
  7876   0026C4  5012               	movf	color_read_Blue@tmp^0,w,c
  7877   0026C6  1010               	iorwf	(??_color_read_Blue+1)^0,w,c
  7878   0026C8  6E12               	movwf	color_read_Blue@tmp^0,c
  7879   0026CA  5013               	movf	(color_read_Blue@tmp+1)^0,w,c
  7880   0026CC  1011               	iorwf	(??_color_read_Blue+2)^0,w,c
  7881   0026CE  6E13               	movwf	(color_read_Blue@tmp+1)^0,c
  7882                           
  7883                           ;color.c: 70:  I2C_2_Master_Stop();
  7884   0026D0  EC47  F015         	call	_I2C_2_Master_Stop	;wreg free
  7885   0026D4                     
  7886                           ;color.c: 71:  return tmp;
  7887   0026D4  C012  F00D         	movff	color_read_Blue@tmp,?_color_read_Blue
  7888   0026D8  C013  F00E         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  7889   0026DC  0012               	return		;funcret
  7890   0026DE                     __end_of_color_read_Blue:
  7891                           	callstack 0
  7892                           
  7893 ;; *************** function _I2C_2_Master_RepStart *****************
  7894 ;; Defined at:
  7895 ;;		line 33 in file "i2c.c"
  7896 ;; Parameters:    Size  Location     Type
  7897 ;;		None
  7898 ;; Auto vars:     Size  Location     Type
  7899 ;;		None
  7900 ;; Return value:  Size  Location     Type
  7901 ;;                  1    wreg      void 
  7902 ;; Registers used:
  7903 ;;		wreg, status,2, status,0, cstack
  7904 ;; Tracked objects:
  7905 ;;		On entry : 0/0
  7906 ;;		On exit  : 0/0
  7907 ;;		Unchanged: 0/0
  7908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7913 ;;Total ram usage:        0 bytes
  7914 ;; Hardware stack levels used: 1
  7915 ;; Hardware stack levels required when called: 8
  7916 ;; This function calls:
  7917 ;;		_I2C_2_Master_Idle
  7918 ;; This function is called by:
  7919 ;;		_color_read_Red
  7920 ;;		_color_read_Green
  7921 ;;		_color_read_Blue
  7922 ;;		_color_read_Clear
  7923 ;; This function uses a non-reentrant model
  7924 ;;
  7925                           
  7926                           	psect	text41
  7927   002A84                     __ptext41:
  7928                           	callstack 0
  7929   002A84                     _I2C_2_Master_RepStart:
  7930                           	callstack 20
  7931   002A84                     
  7932                           ;i2c.c: 35:   I2C_2_Master_Idle();
  7933   002A84  EC67  F014         	call	_I2C_2_Master_Idle	;wreg free
  7934   002A88                     
  7935                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  7936   002A88  010E               	movlb	14	; () banked
  7937   002A8A  83DA               	bsf	218,1,b	;volatile
  7938   002A8C                     
  7939                           ; BSR set to: 14
  7940   002A8C  0012               	return		;funcret
  7941   002A8E                     __end_of_I2C_2_Master_RepStart:
  7942                           	callstack 0
  7943                           
  7944 ;; *************** function _I2C_2_Master_Read *****************
  7945 ;; Defined at:
  7946 ;;		line 51 in file "i2c.c"
  7947 ;; Parameters:    Size  Location     Type
  7948 ;;  ack             1    wreg     unsigned char 
  7949 ;; Auto vars:     Size  Location     Type
  7950 ;;  ack             1   10[COMRAM] unsigned char 
  7951 ;;  tmp             1   11[COMRAM] unsigned char 
  7952 ;; Return value:  Size  Location     Type
  7953 ;;                  1    wreg      unsigned char 
  7954 ;; Registers used:
  7955 ;;		wreg, status,2, status,0, cstack
  7956 ;; Tracked objects:
  7957 ;;		On entry : 0/0
  7958 ;;		On exit  : 0/0
  7959 ;;		Unchanged: 0/0
  7960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7962 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7963 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7964 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7965 ;;Total ram usage:        3 bytes
  7966 ;; Hardware stack levels used: 1
  7967 ;; Hardware stack levels required when called: 8
  7968 ;; This function calls:
  7969 ;;		_I2C_2_Master_Idle
  7970 ;; This function is called by:
  7971 ;;		_color_read_Red
  7972 ;;		_color_read_Green
  7973 ;;		_color_read_Blue
  7974 ;;		_color_read_Clear
  7975 ;; This function uses a non-reentrant model
  7976 ;;
  7977                           
  7978                           	psect	text42
  7979   0027C4                     __ptext42:
  7980                           	callstack 0
  7981   0027C4                     _I2C_2_Master_Read:
  7982                           	callstack 20
  7983                           
  7984                           ; BSR set to: 14
  7985                           ;incstack = 0
  7986                           ;I2C_2_Master_Read@ack stored from wreg
  7987   0027C4  6E0B               	movwf	I2C_2_Master_Read@ack^0,c
  7988   0027C6                     
  7989                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  7990   0027C6  EC67  F014         	call	_I2C_2_Master_Idle	;wreg free
  7991   0027CA                     
  7992                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  7993   0027CA  010E               	movlb	14	; () banked
  7994   0027CC  87DA               	bsf	218,3,b	;volatile
  7995                           
  7996                           ;i2c.c: 56:   I2C_2_Master_Idle();
  7997   0027CE  EC67  F014         	call	_I2C_2_Master_Idle	;wreg free
  7998   0027D2                     
  7999                           ;i2c.c: 57:   tmp = SSP2BUF;
  8000   0027D2  CED5 F00C          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  8001                           
  8002                           ;i2c.c: 58:   I2C_2_Master_Idle();
  8003   0027D6  EC67  F014         	call	_I2C_2_Master_Idle	;wreg free
  8004   0027DA                     
  8005                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  8006   0027DA  500B               	movf	I2C_2_Master_Read@ack^0,w,c
  8007   0027DC  B4D8               	btfsc	status,2,c
  8008   0027DE  EFF3  F013         	goto	u2351
  8009   0027E2  EFF7  F013         	goto	u2350
  8010   0027E6                     u2351:
  8011   0027E6  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  8012   0027E8  2A0A               	incf	??_I2C_2_Master_Read^0,f,c
  8013   0027EA  EFF8  F013         	goto	u2368
  8014   0027EE                     u2350:
  8015   0027EE  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  8016   0027F0                     u2368:
  8017   0027F0  3A0A               	swapf	??_I2C_2_Master_Read^0,f,c
  8018   0027F2  460A               	rlncf	??_I2C_2_Master_Read^0,f,c
  8019   0027F4  010E               	movlb	14	; () banked
  8020   0027F6  51DA               	movf	218,w,b	;volatile
  8021   0027F8  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  8022   0027FA  0BDF               	andlw	-33
  8023   0027FC  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  8024   0027FE  6FDA               	movwf	218,b	;volatile
  8025   002800                     
  8026                           ; BSR set to: 14
  8027                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  8028   002800  89DA               	bsf	218,4,b	;volatile
  8029   002802                     
  8030                           ; BSR set to: 14
  8031                           ;i2c.c: 61:   return tmp;
  8032   002802  500C               	movf	I2C_2_Master_Read@tmp^0,w,c
  8033   002804                     
  8034                           ; BSR set to: 14
  8035   002804  0012               	return		;funcret
  8036   002806                     __end_of_I2C_2_Master_Read:
  8037                           	callstack 0
  8038                           
  8039 ;; *************** function _Timer0_init *****************
  8040 ;; Defined at:
  8041 ;;		line 7 in file "timers.c"
  8042 ;; Parameters:    Size  Location     Type
  8043 ;;		None
  8044 ;; Auto vars:     Size  Location     Type
  8045 ;;		None
  8046 ;; Return value:  Size  Location     Type
  8047 ;;                  1    wreg      void 
  8048 ;; Registers used:
  8049 ;;		wreg, status,2
  8050 ;; Tracked objects:
  8051 ;;		On entry : 0/0
  8052 ;;		On exit  : 0/0
  8053 ;;		Unchanged: 0/0
  8054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8059 ;;Total ram usage:        0 bytes
  8060 ;; Hardware stack levels used: 1
  8061 ;; Hardware stack levels required when called: 7
  8062 ;; This function calls:
  8063 ;;		Nothing
  8064 ;; This function is called by:
  8065 ;;		_main
  8066 ;; This function uses a non-reentrant model
  8067 ;;
  8068                           
  8069                           	psect	text43
  8070   00298A                     __ptext43:
  8071                           	callstack 0
  8072   00298A                     _Timer0_init:
  8073                           	callstack 23
  8074   00298A                     
  8075                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  8076   00298A  50D6               	movf	214,w,c	;volatile
  8077   00298C  0B1F               	andlw	-225
  8078   00298E  0940               	iorlw	64
  8079   002990  6ED6               	movwf	214,c	;volatile
  8080   002992                     
  8081                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  8082   002992  88D6               	bsf	214,4,c	;volatile
  8083                           
  8084                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
  8085   002994  50D6               	movf	214,w,c	;volatile
  8086   002996  0BF0               	andlw	-16
  8087   002998  0908               	iorlw	8
  8088   00299A  6ED6               	movwf	214,c	;volatile
  8089   00299C                     
  8090                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
  8091   00299C  88D5               	bsf	213,4,c	;volatile
  8092                           
  8093                           ;timers.c: 15:     TMR0H = 0b00001011;
  8094   00299E  0E0B               	movlw	11
  8095   0029A0  6ED4               	movwf	212,c	;volatile
  8096                           
  8097                           ;timers.c: 16:     TMR0L = 0b11011011;
  8098   0029A2  0EDB               	movlw	219
  8099   0029A4  6ED3               	movwf	211,c	;volatile
  8100   0029A6                     
  8101                           ;timers.c: 17:     T0CON0bits.T0EN=1;
  8102   0029A6  8ED5               	bsf	213,7,c	;volatile
  8103   0029A8  0012               	return		;funcret
  8104   0029AA                     __end_of_Timer0_init:
  8105                           	callstack 0
  8106                           
  8107 ;; *************** function _LED_init *****************
  8108 ;; Defined at:
  8109 ;;		line 7 in file "LED_Buttons.c"
  8110 ;; Parameters:    Size  Location     Type
  8111 ;;		None
  8112 ;; Auto vars:     Size  Location     Type
  8113 ;;		None
  8114 ;; Return value:  Size  Location     Type
  8115 ;;                  1    wreg      void 
  8116 ;; Registers used:
  8117 ;;		None
  8118 ;; Tracked objects:
  8119 ;;		On entry : 0/0
  8120 ;;		On exit  : 0/0
  8121 ;;		Unchanged: 0/0
  8122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8127 ;;Total ram usage:        0 bytes
  8128 ;; Hardware stack levels used: 1
  8129 ;; Hardware stack levels required when called: 7
  8130 ;; This function calls:
  8131 ;;		Nothing
  8132 ;; This function is called by:
  8133 ;;		_main
  8134 ;; This function uses a non-reentrant model
  8135 ;;
  8136                           
  8137                           	psect	text44
  8138   002A5C                     __ptext44:
  8139                           	callstack 0
  8140   002A5C                     _LED_init:
  8141                           	callstack 23
  8142   002A5C                     
  8143                           ;LED_Buttons.c: 8:     TRISGbits.TRISG1 = 0;
  8144   002A5C  9287               	bcf	135,1,c	;volatile
  8145                           
  8146                           ;LED_Buttons.c: 9:     TRISAbits.TRISA4 = 0;
  8147   002A5E  9881               	bcf	129,4,c	;volatile
  8148                           
  8149                           ;LED_Buttons.c: 10:     TRISFbits.TRISF7 = 0;
  8150   002A60  9E86               	bcf	134,7,c	;volatile
  8151                           
  8152                           ;LED_Buttons.c: 12:     LATHbits.LATH3 = 0;
  8153   002A62  9680               	bcf	128,3,c	;volatile
  8154                           
  8155                           ;LED_Buttons.c: 13:     TRISHbits.TRISH3 = 0;
  8156   002A64  9688               	bcf	136,3,c	;volatile
  8157                           
  8158                           ;LED_Buttons.c: 15:     LATDbits.LATD7 = 0;
  8159   002A66  9E7C               	bcf	124,7,c	;volatile
  8160                           
  8161                           ;LED_Buttons.c: 16:     TRISDbits.TRISD7 = 0;
  8162   002A68  9E84               	bcf	132,7,c	;volatile
  8163   002A6A  0012               	return		;funcret
  8164   002A6C                     __end_of_LED_init:
  8165                           	callstack 0
  8166                           
  8167 ;; *************** function _Interrupts_init *****************
  8168 ;; Defined at:
  8169 ;;		line 12 in file "interrupts.c"
  8170 ;; Parameters:    Size  Location     Type
  8171 ;;		None
  8172 ;; Auto vars:     Size  Location     Type
  8173 ;;		None
  8174 ;; Return value:  Size  Location     Type
  8175 ;;                  1    wreg      void 
  8176 ;; Registers used:
  8177 ;;		wreg, status,2, status,0, cstack
  8178 ;; Tracked objects:
  8179 ;;		On entry : 0/0
  8180 ;;		On exit  : 0/0
  8181 ;;		Unchanged: 0/0
  8182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8187 ;;Total ram usage:        0 bytes
  8188 ;; Hardware stack levels used: 1
  8189 ;; Hardware stack levels required when called: 12
  8190 ;; This function calls:
  8191 ;;		_interrupts_clear_colorclick
  8192 ;; This function is called by:
  8193 ;;		_main
  8194 ;; This function uses a non-reentrant model
  8195 ;;
  8196                           
  8197                           	psect	text45
  8198   002A0A                     __ptext45:
  8199                           	callstack 0
  8200   002A0A                     _Interrupts_init:
  8201                           	callstack 18
  8202   002A0A                     
  8203                           ;interrupts.c: 18:     TRISBbits.TRISB1 = 1;
  8204   002A0A  8282               	bsf	130,1,c	;volatile
  8205                           
  8206                           ;interrupts.c: 19:     ANSELBbits.ANSELB1 = 0;
  8207   002A0C  010E               	movlb	14	; () banked
  8208   002A0E  939A               	bcf	154,1,b	;volatile
  8209                           
  8210                           ;interrupts.c: 21:     PIE0bits.INT1IE = 1;
  8211   002A10  8329               	bsf	41,1,b	;volatile
  8212                           
  8213                           ;interrupts.c: 22:     IPR0bits.INT1IP = 1;
  8214   002A12  831F               	bsf	31,1,b	;volatile
  8215                           
  8216                           ;interrupts.c: 23:     INTCONbits.INT1EDG = 0;
  8217   002A14  92F2               	bcf	242,1,c	;volatile
  8218                           
  8219                           ;interrupts.c: 26:     PIE0bits.TMR0IE=1;
  8220   002A16  8B29               	bsf	41,5,b	;volatile
  8221                           
  8222                           ;interrupts.c: 27:     IPR0bits.TMR0IP = 0;
  8223   002A18  9B1F               	bcf	31,5,b	;volatile
  8224                           
  8225                           ;interrupts.c: 30:     PIE4bits.RC4IE=1;
  8226   002A1A  872D               	bsf	45,3,b	;volatile
  8227   002A1C                     
  8228                           ; BSR set to: 14
  8229                           ;interrupts.c: 32:     interrupts_clear_colorclick();
  8230   002A1C  EC14  F015         	call	_interrupts_clear_colorclick	;wreg free
  8231   002A20                     
  8232                           ;interrupts.c: 34:     INTCONbits.IPEN = 1;
  8233   002A20  8AF2               	bsf	242,5,c	;volatile
  8234   002A22                     
  8235                           ;interrupts.c: 35:     INTCONbits.PEIE = 1;
  8236   002A22  8CF2               	bsf	242,6,c	;volatile
  8237   002A24                     
  8238                           ;interrupts.c: 36:     INTCONbits.GIE=1;
  8239   002A24  8EF2               	bsf	242,7,c	;volatile
  8240   002A26  0012               	return		;funcret
  8241   002A28                     __end_of_Interrupts_init:
  8242                           	callstack 0
  8243                           
  8244 ;; *************** function _interrupts_clear_colorclick *****************
  8245 ;; Defined at:
  8246 ;;		line 57 in file "interrupts.c"
  8247 ;; Parameters:    Size  Location     Type
  8248 ;;		None
  8249 ;; Auto vars:     Size  Location     Type
  8250 ;;		None
  8251 ;; Return value:  Size  Location     Type
  8252 ;;                  1    wreg      void 
  8253 ;; Registers used:
  8254 ;;		wreg, status,2, status,0, cstack
  8255 ;; Tracked objects:
  8256 ;;		On entry : 0/0
  8257 ;;		On exit  : 0/0
  8258 ;;		Unchanged: 0/0
  8259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8264 ;;Total ram usage:        0 bytes
  8265 ;; Hardware stack levels used: 1
  8266 ;; Hardware stack levels required when called: 11
  8267 ;; This function calls:
  8268 ;;		_I2C_2_Master_Start
  8269 ;;		_I2C_2_Master_Stop
  8270 ;;		_I2C_2_Master_Write
  8271 ;;		_init_colorclick_interrupts
  8272 ;; This function is called by:
  8273 ;;		_Interrupts_init
  8274 ;; This function uses a non-reentrant model
  8275 ;;
  8276                           
  8277                           	psect	text46
  8278   002A28                     __ptext46:
  8279                           	callstack 0
  8280   002A28                     _interrupts_clear_colorclick:
  8281                           	callstack 18
  8282   002A28                     
  8283                           ;interrupts.c: 59:     I2C_2_Master_Start();
  8284   002A28  EC4C  F015         	call	_I2C_2_Master_Start	;wreg free
  8285                           
  8286                           ;interrupts.c: 60:     I2C_2_Master_Write(0x52 | 0x00);
  8287   002A2C  0E52               	movlw	82
  8288   002A2E  EC36  F015         	call	_I2C_2_Master_Write
  8289                           
  8290                           ;interrupts.c: 61:     I2C_2_Master_Write(0b11100110);
  8291   002A32  0EE6               	movlw	230
  8292   002A34  EC36  F015         	call	_I2C_2_Master_Write
  8293                           
  8294                           ;interrupts.c: 62:     I2C_2_Master_Stop();
  8295   002A38  EC47  F015         	call	_I2C_2_Master_Stop	;wreg free
  8296                           
  8297                           ;interrupts.c: 64:     init_colorclick_interrupts();
  8298   002A3C  EC6F  F013         	call	_init_colorclick_interrupts	;wreg free
  8299   002A40  0012               	return		;funcret
  8300   002A42                     __end_of_interrupts_clear_colorclick:
  8301                           	callstack 0
  8302                           
  8303 ;; *************** function _init_colorclick_interrupts *****************
  8304 ;; Defined at:
  8305 ;;		line 43 in file "interrupts.c"
  8306 ;; Parameters:    Size  Location     Type
  8307 ;;		None
  8308 ;; Auto vars:     Size  Location     Type
  8309 ;;		None
  8310 ;; Return value:  Size  Location     Type
  8311 ;;                  1    wreg      void 
  8312 ;; Registers used:
  8313 ;;		wreg, status,2, status,0, cstack
  8314 ;; Tracked objects:
  8315 ;;		On entry : 0/0
  8316 ;;		On exit  : 0/0
  8317 ;;		Unchanged: 0/0
  8318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8321 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8322 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8323 ;;Total ram usage:        1 bytes
  8324 ;; Hardware stack levels used: 1
  8325 ;; Hardware stack levels required when called: 10
  8326 ;; This function calls:
  8327 ;;		_color_writetoaddr
  8328 ;; This function is called by:
  8329 ;;		_interrupts_clear_colorclick
  8330 ;; This function uses a non-reentrant model
  8331 ;;
  8332                           
  8333                           	psect	text47
  8334   0026DE                     __ptext47:
  8335                           	callstack 0
  8336   0026DE                     _init_colorclick_interrupts:
  8337                           	callstack 18
  8338   0026DE                     
  8339                           ;interrupts.c: 45:     color_writetoaddr(0x00,0b10011);
  8340   0026DE  0E13               	movlw	19
  8341   0026E0  6E0B               	movwf	color_writetoaddr@value^0,c
  8342   0026E2  0E00               	movlw	0
  8343   0026E4  ECD5  F014         	call	_color_writetoaddr
  8344   0026E8                     
  8345                           ;interrupts.c: 46:     _delay((unsigned long)((3)*(64000000/4000.0)));
  8346   0026E8  0E3F               	movlw	63
  8347   0026EA  6E0D               	movwf	??_init_colorclick_interrupts^0,c
  8348   0026EC  0E55               	movlw	85
  8349   0026EE                     u4717:
  8350   0026EE  2EE8               	decfsz	wreg,f,c
  8351   0026F0  D7FE               	bra	u4717
  8352   0026F2  2E0D               	decfsz	??_init_colorclick_interrupts^0,f,c
  8353   0026F4  D7FC               	bra	u4717
  8354   0026F6  F000               	nop	
  8355   0026F8                     
  8356                           ;interrupts.c: 48:     color_writetoaddr(0x0C,0b0100);
  8357   0026F8  0E04               	movlw	4
  8358   0026FA  6E0B               	movwf	color_writetoaddr@value^0,c
  8359   0026FC  0E0C               	movlw	12
  8360   0026FE  ECD5  F014         	call	_color_writetoaddr
  8361   002702                     
  8362                           ;interrupts.c: 49:     color_writetoaddr(0x04,(int_threshold_low & 0xFF));
  8363   002702  C04F  F00B         	movff	_int_threshold_low,color_writetoaddr@value
  8364   002706  0E04               	movlw	4
  8365   002708  ECD5  F014         	call	_color_writetoaddr
  8366   00270C                     
  8367                           ;interrupts.c: 50:     color_writetoaddr(0x05,(int_threshold_low >> 8));
  8368   00270C  5050               	movf	(_int_threshold_low+1)^0,w,c
  8369   00270E  6E0B               	movwf	color_writetoaddr@value^0,c
  8370   002710  0E05               	movlw	5
  8371   002712  ECD5  F014         	call	_color_writetoaddr
  8372   002716                     
  8373                           ;interrupts.c: 51:     color_writetoaddr(0x06,(int_threshold_high & 0xFF));
  8374   002716  C0D7  F00B         	movff	_int_threshold_high,color_writetoaddr@value
  8375   00271A  0E06               	movlw	6
  8376   00271C  ECD5  F014         	call	_color_writetoaddr
  8377   002720                     
  8378                           ;interrupts.c: 52:     color_writetoaddr(0x07,(int_threshold_high >> 8));
  8379   002720  0100               	movlb	0	; () banked
  8380   002722  51D8               	movf	(_int_threshold_high+1)& (0+255),w,b
  8381   002724  6E0B               	movwf	color_writetoaddr@value^0,c
  8382   002726  0E07               	movlw	7
  8383   002728  ECD5  F014         	call	_color_writetoaddr
  8384   00272C  0012               	return		;funcret
  8385   00272E                     __end_of_init_colorclick_interrupts:
  8386                           	callstack 0
  8387                           
  8388 ;; *************** function _color_writetoaddr *****************
  8389 ;; Defined at:
  8390 ;;		line 22 in file "color.c"
  8391 ;; Parameters:    Size  Location     Type
  8392 ;;  address         1    wreg     unsigned char 
  8393 ;;  value           1   10[COMRAM] unsigned char 
  8394 ;; Auto vars:     Size  Location     Type
  8395 ;;  address         1   11[COMRAM] unsigned char 
  8396 ;; Return value:  Size  Location     Type
  8397 ;;                  1    wreg      void 
  8398 ;; Registers used:
  8399 ;;		wreg, status,2, status,0, cstack
  8400 ;; Tracked objects:
  8401 ;;		On entry : 0/0
  8402 ;;		On exit  : 0/0
  8403 ;;		Unchanged: 0/0
  8404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8405 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8406 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8408 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8409 ;;Total ram usage:        2 bytes
  8410 ;; Hardware stack levels used: 1
  8411 ;; Hardware stack levels required when called: 9
  8412 ;; This function calls:
  8413 ;;		_I2C_2_Master_Start
  8414 ;;		_I2C_2_Master_Stop
  8415 ;;		_I2C_2_Master_Write
  8416 ;; This function is called by:
  8417 ;;		_color_click_init
  8418 ;;		_init_colorclick_interrupts
  8419 ;; This function uses a non-reentrant model
  8420 ;;
  8421                           
  8422                           	psect	text48
  8423   0029AA                     __ptext48:
  8424                           	callstack 0
  8425   0029AA                     _color_writetoaddr:
  8426                           	callstack 20
  8427                           
  8428                           ;incstack = 0
  8429                           ;color_writetoaddr@address stored from wreg
  8430   0029AA  6E0C               	movwf	color_writetoaddr@address^0,c
  8431   0029AC                     
  8432                           ;color.c: 23:     I2C_2_Master_Start();
  8433   0029AC  EC4C  F015         	call	_I2C_2_Master_Start	;wreg free
  8434                           
  8435                           ;color.c: 24:     I2C_2_Master_Write(0x52 | 0x00);
  8436   0029B0  0E52               	movlw	82
  8437   0029B2  EC36  F015         	call	_I2C_2_Master_Write
  8438                           
  8439                           ;color.c: 25:     I2C_2_Master_Write(0x80 | address);
  8440   0029B6  500C               	movf	color_writetoaddr@address^0,w,c
  8441   0029B8  0980               	iorlw	128
  8442   0029BA  EC36  F015         	call	_I2C_2_Master_Write
  8443                           
  8444                           ;color.c: 26:     I2C_2_Master_Write(value);
  8445   0029BE  500B               	movf	color_writetoaddr@value^0,w,c
  8446   0029C0  EC36  F015         	call	_I2C_2_Master_Write
  8447                           
  8448                           ;color.c: 27:     I2C_2_Master_Stop();
  8449   0029C4  EC47  F015         	call	_I2C_2_Master_Stop	;wreg free
  8450   0029C8  0012               	return		;funcret
  8451   0029CA                     __end_of_color_writetoaddr:
  8452                           	callstack 0
  8453                           
  8454 ;; *************** function _I2C_2_Master_Write *****************
  8455 ;; Defined at:
  8456 ;;		line 45 in file "i2c.c"
  8457 ;; Parameters:    Size  Location     Type
  8458 ;;  data_byte       1    wreg     unsigned char 
  8459 ;; Auto vars:     Size  Location     Type
  8460 ;;  data_byte       1    9[COMRAM] unsigned char 
  8461 ;; Return value:  Size  Location     Type
  8462 ;;                  1    wreg      void 
  8463 ;; Registers used:
  8464 ;;		wreg, status,2, status,0, cstack
  8465 ;; Tracked objects:
  8466 ;;		On entry : 0/0
  8467 ;;		On exit  : 0/0
  8468 ;;		Unchanged: 0/0
  8469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8471 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8473 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8474 ;;Total ram usage:        1 bytes
  8475 ;; Hardware stack levels used: 1
  8476 ;; Hardware stack levels required when called: 8
  8477 ;; This function calls:
  8478 ;;		_I2C_2_Master_Idle
  8479 ;; This function is called by:
  8480 ;;		_color_writetoaddr
  8481 ;;		_color_read_Red
  8482 ;;		_color_read_Green
  8483 ;;		_color_read_Blue
  8484 ;;		_color_read_Clear
  8485 ;;		_interrupts_clear_colorclick
  8486 ;; This function uses a non-reentrant model
  8487 ;;
  8488                           
  8489                           	psect	text49
  8490   002A6C                     __ptext49:
  8491                           	callstack 0
  8492   002A6C                     _I2C_2_Master_Write:
  8493                           	callstack 20
  8494                           
  8495                           ;incstack = 0
  8496                           ;I2C_2_Master_Write@data_byte stored from wreg
  8497   002A6C  6E0A               	movwf	I2C_2_Master_Write@data_byte^0,c
  8498   002A6E                     
  8499                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  8500   002A6E  EC67  F014         	call	_I2C_2_Master_Idle	;wreg free
  8501   002A72                     
  8502                           ;i2c.c: 48:   SSP2BUF = data_byte;
  8503   002A72  C00A  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  8504   002A76  0012               	return		;funcret
  8505   002A78                     __end_of_I2C_2_Master_Write:
  8506                           	callstack 0
  8507                           
  8508 ;; *************** function _I2C_2_Master_Stop *****************
  8509 ;; Defined at:
  8510 ;;		line 39 in file "i2c.c"
  8511 ;; Parameters:    Size  Location     Type
  8512 ;;		None
  8513 ;; Auto vars:     Size  Location     Type
  8514 ;;		None
  8515 ;; Return value:  Size  Location     Type
  8516 ;;                  1    wreg      void 
  8517 ;; Registers used:
  8518 ;;		wreg, status,2, status,0, cstack
  8519 ;; Tracked objects:
  8520 ;;		On entry : 0/0
  8521 ;;		On exit  : 0/0
  8522 ;;		Unchanged: 0/0
  8523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8528 ;;Total ram usage:        0 bytes
  8529 ;; Hardware stack levels used: 1
  8530 ;; Hardware stack levels required when called: 8
  8531 ;; This function calls:
  8532 ;;		_I2C_2_Master_Idle
  8533 ;; This function is called by:
  8534 ;;		_color_writetoaddr
  8535 ;;		_color_read_Red
  8536 ;;		_color_read_Green
  8537 ;;		_color_read_Blue
  8538 ;;		_color_read_Clear
  8539 ;;		_interrupts_clear_colorclick
  8540 ;; This function uses a non-reentrant model
  8541 ;;
  8542                           
  8543                           	psect	text50
  8544   002A8E                     __ptext50:
  8545                           	callstack 0
  8546   002A8E                     _I2C_2_Master_Stop:
  8547                           	callstack 20
  8548   002A8E                     
  8549                           ;i2c.c: 41:   I2C_2_Master_Idle();
  8550   002A8E  EC67  F014         	call	_I2C_2_Master_Idle	;wreg free
  8551   002A92                     
  8552                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  8553   002A92  010E               	movlb	14	; () banked
  8554   002A94  85DA               	bsf	218,2,b	;volatile
  8555   002A96                     
  8556                           ; BSR set to: 14
  8557   002A96  0012               	return		;funcret
  8558   002A98                     __end_of_I2C_2_Master_Stop:
  8559                           	callstack 0
  8560                           
  8561 ;; *************** function _I2C_2_Master_Start *****************
  8562 ;; Defined at:
  8563 ;;		line 27 in file "i2c.c"
  8564 ;; Parameters:    Size  Location     Type
  8565 ;;		None
  8566 ;; Auto vars:     Size  Location     Type
  8567 ;;		None
  8568 ;; Return value:  Size  Location     Type
  8569 ;;                  1    wreg      void 
  8570 ;; Registers used:
  8571 ;;		wreg, status,2, status,0, cstack
  8572 ;; Tracked objects:
  8573 ;;		On entry : 0/0
  8574 ;;		On exit  : 0/0
  8575 ;;		Unchanged: 0/0
  8576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8581 ;;Total ram usage:        0 bytes
  8582 ;; Hardware stack levels used: 1
  8583 ;; Hardware stack levels required when called: 8
  8584 ;; This function calls:
  8585 ;;		_I2C_2_Master_Idle
  8586 ;; This function is called by:
  8587 ;;		_color_writetoaddr
  8588 ;;		_color_read_Red
  8589 ;;		_color_read_Green
  8590 ;;		_color_read_Blue
  8591 ;;		_color_read_Clear
  8592 ;;		_interrupts_clear_colorclick
  8593 ;; This function uses a non-reentrant model
  8594 ;;
  8595                           
  8596                           	psect	text51
  8597   002A98                     __ptext51:
  8598                           	callstack 0
  8599   002A98                     _I2C_2_Master_Start:
  8600                           	callstack 20
  8601   002A98                     
  8602                           ;i2c.c: 29:   I2C_2_Master_Idle();
  8603   002A98  EC67  F014         	call	_I2C_2_Master_Idle	;wreg free
  8604   002A9C                     
  8605                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  8606   002A9C  010E               	movlb	14	; () banked
  8607   002A9E  81DA               	bsf	218,0,b	;volatile
  8608   002AA0                     
  8609                           ; BSR set to: 14
  8610   002AA0  0012               	return		;funcret
  8611   002AA2                     __end_of_I2C_2_Master_Start:
  8612                           	callstack 0
  8613                           
  8614 ;; *************** function _I2C_2_Master_Idle *****************
  8615 ;; Defined at:
  8616 ;;		line 22 in file "i2c.c"
  8617 ;; Parameters:    Size  Location     Type
  8618 ;;		None
  8619 ;; Auto vars:     Size  Location     Type
  8620 ;;		None
  8621 ;; Return value:  Size  Location     Type
  8622 ;;                  1    wreg      void 
  8623 ;; Registers used:
  8624 ;;		wreg, status,2, status,0
  8625 ;; Tracked objects:
  8626 ;;		On entry : 0/0
  8627 ;;		On exit  : 0/0
  8628 ;;		Unchanged: 0/0
  8629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8632 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8633 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8634 ;;Total ram usage:        1 bytes
  8635 ;; Hardware stack levels used: 1
  8636 ;; Hardware stack levels required when called: 7
  8637 ;; This function calls:
  8638 ;;		Nothing
  8639 ;; This function is called by:
  8640 ;;		_I2C_2_Master_Start
  8641 ;;		_I2C_2_Master_RepStart
  8642 ;;		_I2C_2_Master_Stop
  8643 ;;		_I2C_2_Master_Write
  8644 ;;		_I2C_2_Master_Read
  8645 ;; This function uses a non-reentrant model
  8646 ;;
  8647                           
  8648                           	psect	text52
  8649   0028CE                     __ptext52:
  8650                           	callstack 0
  8651   0028CE                     _I2C_2_Master_Idle:
  8652                           	callstack 20
  8653   0028CE                     l89:
  8654   0028CE  010E               	movlb	14	; () banked
  8655   0028D0  B5D8               	btfsc	216,2,b	;volatile
  8656   0028D2  EF6D  F014         	goto	u2031
  8657   0028D6  EF6F  F014         	goto	u2030
  8658   0028DA                     u2031:
  8659   0028DA  EF67  F014         	goto	l89
  8660   0028DE                     u2030:
  8661   0028DE                     
  8662                           ; BSR set to: 14
  8663   0028DE  CEDA F009          	movff	3802,??_I2C_2_Master_Idle	;volatile
  8664   0028E2  0E1F               	movlw	31
  8665   0028E4  1609               	andwf	??_I2C_2_Master_Idle^0,f,c
  8666   0028E6  A4D8               	btfss	status,2,c
  8667   0028E8  EF78  F014         	goto	u2041
  8668   0028EC  EF7A  F014         	goto	u2040
  8669   0028F0                     u2041:
  8670   0028F0  EF67  F014         	goto	l89
  8671   0028F4                     u2040:
  8672   0028F4                     
  8673                           ; BSR set to: 14
  8674   0028F4  0012               	return		;funcret
  8675   0028F6                     __end_of_I2C_2_Master_Idle:
  8676                           	callstack 0
  8677                           
  8678 ;; *************** function _AppendTime *****************
  8679 ;; Defined at:
  8680 ;;		line 23 in file "Memorization.c"
  8681 ;; Parameters:    Size  Location     Type
  8682 ;;  temp            2    8[COMRAM] unsigned int 
  8683 ;;  time_index      2   10[COMRAM] PTR unsigned char 
  8684 ;;		 -> time_index(1), 
  8685 ;;  time_array      2   12[COMRAM] PTR unsigned int 
  8686 ;;		 -> time_array(80), 
  8687 ;; Auto vars:     Size  Location     Type
  8688 ;;		None
  8689 ;; Return value:  Size  Location     Type
  8690 ;;                  1    wreg      void 
  8691 ;; Registers used:
  8692 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8693 ;; Tracked objects:
  8694 ;;		On entry : 0/0
  8695 ;;		On exit  : 0/0
  8696 ;;		Unchanged: 0/0
  8697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8698 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8700 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8701 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8702 ;;Total ram usage:        9 bytes
  8703 ;; Hardware stack levels used: 1
  8704 ;; Hardware stack levels required when called: 7
  8705 ;; This function calls:
  8706 ;;		Nothing
  8707 ;; This function is called by:
  8708 ;;		_main
  8709 ;; This function uses a non-reentrant model
  8710 ;;
  8711                           
  8712                           	psect	text53
  8713   002872                     __ptext53:
  8714                           	callstack 0
  8715   002872                     _AppendTime:
  8716                           	callstack 23
  8717   002872                     
  8718                           ;Memorization.c: 25:     time_array[(*time_index)++] = temp;
  8719   002872  C00B  FFD9         	movff	AppendTime@time_index,fsr2l
  8720   002876  C00C  FFDA         	movff	AppendTime@time_index+1,fsr2h
  8721   00287A  CFDF F00F          	movff	indf2,??_AppendTime
  8722   00287E  0E01               	movlw	1
  8723   002880  26DF               	addwf	indf2,f,c
  8724   002882  500F               	movf	??_AppendTime^0,w,c
  8725   002884  0D02               	mullw	2
  8726   002886  CFF3 F010          	movff	prodl,??_AppendTime+1
  8727   00288A  CFF4 F011          	movff	prodh,??_AppendTime+2
  8728   00288E  5010               	movf	(??_AppendTime+1)^0,w,c
  8729   002890  240D               	addwf	AppendTime@time_array^0,w,c
  8730   002892  6ED9               	movwf	fsr2l,c
  8731   002894  5011               	movf	(??_AppendTime+2)^0,w,c
  8732   002896  200E               	addwfc	(AppendTime@time_array+1)^0,w,c
  8733   002898  6EDA               	movwf	fsr2h,c
  8734   00289A  C009  FFDE         	movff	AppendTime@temp,postinc2
  8735   00289E  C00A  FFDD         	movff	AppendTime@temp+1,postdec2
  8736   0028A2  0012               	return		;funcret
  8737   0028A4                     __end_of_AppendTime:
  8738                           	callstack 0
  8739                           
  8740 ;; *************** function _LowISR *****************
  8741 ;; Defined at:
  8742 ;;		line 75 in file "interrupts.c"
  8743 ;; Parameters:    Size  Location     Type
  8744 ;;		None
  8745 ;; Auto vars:     Size  Location     Type
  8746 ;;		None
  8747 ;; Return value:  Size  Location     Type
  8748 ;;                  1    wreg      void 
  8749 ;; Registers used:
  8750 ;;		wreg, status,2
  8751 ;; Tracked objects:
  8752 ;;		On entry : 0/0
  8753 ;;		On exit  : 0/0
  8754 ;;		Unchanged: 0/0
  8755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8758 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8759 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8760 ;;Total ram usage:        3 bytes
  8761 ;; Hardware stack levels used: 1
  8762 ;; Hardware stack levels required when called: 6
  8763 ;; This function calls:
  8764 ;;		Nothing
  8765 ;; This function is called by:
  8766 ;;		Interrupt level 1
  8767 ;; This function uses a non-reentrant model
  8768 ;;
  8769                           
  8770                           	psect	intcodelo
  8771   000018                     __pintcodelo:
  8772                           	callstack 0
  8773   000018                     _LowISR:
  8774                           	callstack 16
  8775                           
  8776                           ;incstack = 0
  8777   000018  8057               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  8778   00001A  CFD8 F006          	movff	status,??_LowISR
  8779   00001E  CFE8 F007          	movff	wreg,??_LowISR+1
  8780   000022  CFE0 F008          	movff	bsr,??_LowISR+2
  8781   000026                     
  8782                           ;interrupts.c: 78:     if(PIR0bits.TMR0IF){
  8783   000026  010E               	movlb	14	; () banked
  8784   000028  AB33               	btfss	51,5,b	;volatile
  8785   00002A  EF19  F000         	goto	i1u377_21
  8786   00002E  EF1B  F000         	goto	i1u377_20
  8787   000032                     i1u377_21:
  8788   000032  EF24  F000         	goto	i1l332
  8789   000036                     i1u377_20:
  8790   000036                     
  8791                           ; BSR set to: 14
  8792                           ;interrupts.c: 79:         TMR0H = 0b00001011;
  8793   000036  0E0B               	movlw	11
  8794   000038  6ED4               	movwf	212,c	;volatile
  8795                           
  8796                           ;interrupts.c: 80:         TMR0L = 0b11011011;
  8797   00003A  0EDB               	movlw	219
  8798   00003C  6ED3               	movwf	211,c	;volatile
  8799                           
  8800                           ;interrupts.c: 81:         tmr_ovf = 1;
  8801   00003E  0E01               	movlw	1
  8802   000040  0100               	movlb	0	; () banked
  8803   000042  6F75               	movwf	_tmr_ovf& (0+255),b
  8804   000044                     
  8805                           ; BSR set to: 0
  8806                           ;interrupts.c: 82:         PIR0bits.TMR0IF=0;
  8807   000044  010E               	movlb	14	; () banked
  8808   000046  9B33               	bcf	51,5,b	;volatile
  8809   000048                     i1l332:
  8810                           
  8811                           ; BSR set to: 14
  8812   000048  C008  FFE0         	movff	??_LowISR+2,bsr
  8813   00004C  C007  FFE8         	movff	??_LowISR+1,wreg
  8814   000050  C006  FFD8         	movff	??_LowISR,status
  8815   000054  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  8816   000056  0010               	retfie	
  8817   000058                     __end_of_LowISR:
  8818                           	callstack 0
  8819                           
  8820 ;; *************** function _HighISR *****************
  8821 ;; Defined at:
  8822 ;;		line 89 in file "interrupts.c"
  8823 ;; Parameters:    Size  Location     Type
  8824 ;;		None
  8825 ;; Auto vars:     Size  Location     Type
  8826 ;;		None
  8827 ;; Return value:  Size  Location     Type
  8828 ;;                  1    wreg      void 
  8829 ;; Registers used:
  8830 ;;		wreg, status,2, status,0, cstack
  8831 ;; Tracked objects:
  8832 ;;		On entry : 0/0
  8833 ;;		On exit  : 0/0
  8834 ;;		Unchanged: 0/0
  8835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8840 ;;Total ram usage:        0 bytes
  8841 ;; Hardware stack levels used: 1
  8842 ;; Hardware stack levels required when called: 5
  8843 ;; This function calls:
  8844 ;;		i2_interrupts_clear_colorclick
  8845 ;; This function is called by:
  8846 ;;		Interrupt level 2
  8847 ;; This function uses a non-reentrant model
  8848 ;;
  8849                           
  8850                           	psect	intcode
  8851   000008                     __pintcode:
  8852                           	callstack 0
  8853   000008                     _HighISR:
  8854                           	callstack 16
  8855                           
  8856                           ; BSR set to: 14
  8857                           ;incstack = 0
  8858   000008  8257               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8859   00000A  EFE5  F014         	goto	int_func
  8860                           
  8861                           	psect	intcode_body
  8862   0029CA                     __pintcode_body:
  8863                           	callstack 16
  8864   0029CA                     int_func:
  8865                           	callstack 16
  8866   0029CA                     
  8867                           ;interrupts.c: 116:     if(PIR0bits.INT1IF){
  8868   0029CA  010E               	movlb	14	; () banked
  8869   0029CC  A333               	btfss	51,1,b	;volatile
  8870   0029CE  EFEB  F014         	goto	i2u378_41
  8871   0029D2  EFED  F014         	goto	i2u378_40
  8872   0029D6                     i2u378_41:
  8873   0029D6  EFF3  F014         	goto	i2l340
  8874   0029DA                     i2u378_40:
  8875   0029DA                     
  8876                           ; BSR set to: 14
  8877                           ;interrupts.c: 117:         color_flag = 1;
  8878   0029DA  0E01               	movlw	1
  8879   0029DC  6E55               	movwf	_color_flag^0,c
  8880   0029DE                     
  8881                           ; BSR set to: 14
  8882                           ;interrupts.c: 119:         interrupts_clear_colorclick();
  8883   0029DE  EC21  F015         	call	i2_interrupts_clear_colorclick	;wreg free
  8884   0029E2                     
  8885                           ;interrupts.c: 120:         PIR0bits.INT1IF = 0;
  8886   0029E2  010E               	movlb	14	; () banked
  8887   0029E4  9333               	bcf	51,1,b	;volatile
  8888   0029E6                     i2l340:
  8889                           
  8890                           ; BSR set to: 14
  8891   0029E6  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8892   0029E8  0011               	retfie		f
  8893   0029EA                     __end_of_HighISR:
  8894                           	callstack 0
  8895                           
  8896 ;; *************** function i2_interrupts_clear_colorclick *****************
  8897 ;; Defined at:
  8898 ;;		line 57 in file "interrupts.c"
  8899 ;; Parameters:    Size  Location     Type
  8900 ;;		None
  8901 ;; Auto vars:     Size  Location     Type
  8902 ;;		None
  8903 ;; Return value:  Size  Location     Type
  8904 ;;                  1    wreg      void 
  8905 ;; Registers used:
  8906 ;;		wreg, status,2, status,0, cstack
  8907 ;; Tracked objects:
  8908 ;;		On entry : 0/0
  8909 ;;		On exit  : 0/0
  8910 ;;		Unchanged: 0/0
  8911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8916 ;;Total ram usage:        0 bytes
  8917 ;; Hardware stack levels used: 1
  8918 ;; Hardware stack levels required when called: 4
  8919 ;; This function calls:
  8920 ;;		i2_I2C_2_Master_Start
  8921 ;;		i2_I2C_2_Master_Stop
  8922 ;;		i2_I2C_2_Master_Write
  8923 ;;		i2_init_colorclick_interrupts
  8924 ;; This function is called by:
  8925 ;;		_HighISR
  8926 ;; This function uses a non-reentrant model
  8927 ;;
  8928                           
  8929                           	psect	text56
  8930   002A42                     __ptext56:
  8931                           	callstack 0
  8932   002A42                     i2_interrupts_clear_colorclick:
  8933                           	callstack 16
  8934   002A42                     
  8935                           ;interrupts.c: 59:     I2C_2_Master_Start();
  8936   002A42  EC56  F015         	call	i2_I2C_2_Master_Start	;wreg free
  8937                           
  8938                           ;interrupts.c: 60:     I2C_2_Master_Write(0x52 | 0x00);
  8939   002A46  0E52               	movlw	82
  8940   002A48  EC3C  F015         	call	i2_I2C_2_Master_Write
  8941                           
  8942                           ;interrupts.c: 61:     I2C_2_Master_Write(0b11100110);
  8943   002A4C  0EE6               	movlw	230
  8944   002A4E  EC3C  F015         	call	i2_I2C_2_Master_Write
  8945                           
  8946                           ;interrupts.c: 62:     I2C_2_Master_Stop();
  8947   002A52  EC51  F015         	call	i2_I2C_2_Master_Stop	;wreg free
  8948                           
  8949                           ;interrupts.c: 64:     init_colorclick_interrupts();
  8950   002A56  EC97  F013         	call	i2_init_colorclick_interrupts	;wreg free
  8951   002A5A  0012               	return		;funcret
  8952   002A5C                     __end_ofi2_interrupts_clear_colorclick:
  8953                           	callstack 0
  8954                           
  8955 ;; *************** function i2_init_colorclick_interrupts *****************
  8956 ;; Defined at:
  8957 ;;		line 43 in file "interrupts.c"
  8958 ;; Parameters:    Size  Location     Type
  8959 ;;		None
  8960 ;; Auto vars:     Size  Location     Type
  8961 ;;		None
  8962 ;; Return value:  Size  Location     Type
  8963 ;;                  1    wreg      void 
  8964 ;; Registers used:
  8965 ;;		wreg, status,2, status,0, cstack
  8966 ;; Tracked objects:
  8967 ;;		On entry : 0/0
  8968 ;;		On exit  : 0/0
  8969 ;;		Unchanged: 0/0
  8970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8973 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8974 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8975 ;;Total ram usage:        1 bytes
  8976 ;; Hardware stack levels used: 1
  8977 ;; Hardware stack levels required when called: 3
  8978 ;; This function calls:
  8979 ;;		i2_color_writetoaddr
  8980 ;; This function is called by:
  8981 ;;		i2_interrupts_clear_colorclick
  8982 ;; This function uses a non-reentrant model
  8983 ;;
  8984                           
  8985                           	psect	text57
  8986   00272E                     __ptext57:
  8987                           	callstack 0
  8988   00272E                     i2_init_colorclick_interrupts:
  8989                           	callstack 16
  8990   00272E                     
  8991                           ;interrupts.c: 45:     color_writetoaddr(0x00,0b10011);
  8992   00272E  0E13               	movlw	19
  8993   002730  6E03               	movwf	i2color_writetoaddr@value^0,c
  8994   002732  0E00               	movlw	0
  8995   002734  ECF5  F014         	call	i2_color_writetoaddr
  8996   002738                     
  8997                           ;interrupts.c: 46:     _delay((unsigned long)((3)*(64000000/4000.0)));
  8998   002738  0E3F               	movlw	63
  8999   00273A  6E05               	movwf	??i2_init_colorclick_interrupts^0,c
  9000   00273C  0E55               	movlw	85
  9001   00273E                     i2u472_47:
  9002   00273E  2EE8               	decfsz	wreg,f,c
  9003   002740  D7FE               	bra	i2u472_47
  9004   002742  2E05               	decfsz	??i2_init_colorclick_interrupts^0,f,c
  9005   002744  D7FC               	bra	i2u472_47
  9006   002746  F000               	nop	
  9007   002748                     
  9008                           ;interrupts.c: 48:     color_writetoaddr(0x0C,0b0100);
  9009   002748  0E04               	movlw	4
  9010   00274A  6E03               	movwf	i2color_writetoaddr@value^0,c
  9011   00274C  0E0C               	movlw	12
  9012   00274E  ECF5  F014         	call	i2_color_writetoaddr
  9013   002752                     
  9014                           ;interrupts.c: 49:     color_writetoaddr(0x04,(int_threshold_low & 0xFF));
  9015   002752  C04F  F003         	movff	_int_threshold_low,i2color_writetoaddr@value
  9016   002756  0E04               	movlw	4
  9017   002758  ECF5  F014         	call	i2_color_writetoaddr
  9018   00275C                     
  9019                           ;interrupts.c: 50:     color_writetoaddr(0x05,(int_threshold_low >> 8));
  9020   00275C  5050               	movf	(_int_threshold_low+1)^0,w,c
  9021   00275E  6E03               	movwf	i2color_writetoaddr@value^0,c
  9022   002760  0E05               	movlw	5
  9023   002762  ECF5  F014         	call	i2_color_writetoaddr
  9024   002766                     
  9025                           ;interrupts.c: 51:     color_writetoaddr(0x06,(int_threshold_high & 0xFF));
  9026   002766  C0D7  F003         	movff	_int_threshold_high,i2color_writetoaddr@value
  9027   00276A  0E06               	movlw	6
  9028   00276C  ECF5  F014         	call	i2_color_writetoaddr
  9029   002770                     
  9030                           ;interrupts.c: 52:     color_writetoaddr(0x07,(int_threshold_high >> 8));
  9031   002770  0100               	movlb	0	; () banked
  9032   002772  51D8               	movf	(_int_threshold_high+1)& (0+255),w,b
  9033   002774  6E03               	movwf	i2color_writetoaddr@value^0,c
  9034   002776  0E07               	movlw	7
  9035   002778  ECF5  F014         	call	i2_color_writetoaddr
  9036   00277C  0012               	return		;funcret
  9037   00277E                     __end_ofi2_init_colorclick_interrupts:
  9038                           	callstack 0
  9039                           
  9040 ;; *************** function i2_color_writetoaddr *****************
  9041 ;; Defined at:
  9042 ;;		line 22 in file "color.c"
  9043 ;; Parameters:    Size  Location     Type
  9044 ;;  address         1    wreg     unsigned char 
  9045 ;;  value           1    2[COMRAM] unsigned char 
  9046 ;; Auto vars:     Size  Location     Type
  9047 ;;  address         1    3[COMRAM] unsigned char 
  9048 ;; Return value:  Size  Location     Type
  9049 ;;                  1    wreg      void 
  9050 ;; Registers used:
  9051 ;;		wreg, status,2, status,0, cstack
  9052 ;; Tracked objects:
  9053 ;;		On entry : 0/0
  9054 ;;		On exit  : 0/0
  9055 ;;		Unchanged: 0/0
  9056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9057 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9058 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9060 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9061 ;;Total ram usage:        2 bytes
  9062 ;; Hardware stack levels used: 1
  9063 ;; Hardware stack levels required when called: 2
  9064 ;; This function calls:
  9065 ;;		i2_I2C_2_Master_Start
  9066 ;;		i2_I2C_2_Master_Stop
  9067 ;;		i2_I2C_2_Master_Write
  9068 ;; This function is called by:
  9069 ;;		i2_init_colorclick_interrupts
  9070 ;; This function uses a non-reentrant model
  9071 ;;
  9072                           
  9073                           	psect	text58
  9074   0029EA                     __ptext58:
  9075                           	callstack 0
  9076   0029EA                     i2_color_writetoaddr:
  9077                           	callstack 16
  9078                           
  9079                           ;incstack = 0
  9080                           ;i2color_writetoaddr@address stored from wreg
  9081   0029EA  6E04               	movwf	i2color_writetoaddr@address^0,c
  9082   0029EC                     
  9083                           ;color.c: 23:     I2C_2_Master_Start();
  9084   0029EC  EC56  F015         	call	i2_I2C_2_Master_Start	;wreg free
  9085                           
  9086                           ;color.c: 24:     I2C_2_Master_Write(0x52 | 0x00);
  9087   0029F0  0E52               	movlw	82
  9088   0029F2  EC3C  F015         	call	i2_I2C_2_Master_Write
  9089                           
  9090                           ;color.c: 25:     I2C_2_Master_Write(0x80 | address);
  9091   0029F6  5004               	movf	i2color_writetoaddr@address^0,w,c
  9092   0029F8  0980               	iorlw	128
  9093   0029FA  EC3C  F015         	call	i2_I2C_2_Master_Write
  9094                           
  9095                           ;color.c: 26:     I2C_2_Master_Write(value);
  9096   0029FE  5003               	movf	i2color_writetoaddr@value^0,w,c
  9097   002A00  EC3C  F015         	call	i2_I2C_2_Master_Write
  9098                           
  9099                           ;color.c: 27:     I2C_2_Master_Stop();
  9100   002A04  EC51  F015         	call	i2_I2C_2_Master_Stop	;wreg free
  9101   002A08  0012               	return		;funcret
  9102   002A0A                     __end_ofi2_color_writetoaddr:
  9103                           	callstack 0
  9104                           
  9105 ;; *************** function i2_I2C_2_Master_Write *****************
  9106 ;; Defined at:
  9107 ;;		line 45 in file "i2c.c"
  9108 ;; Parameters:    Size  Location     Type
  9109 ;;  data_byte       1    wreg     unsigned char 
  9110 ;; Auto vars:     Size  Location     Type
  9111 ;;  data_byte       1    1[COMRAM] unsigned char 
  9112 ;; Return value:  Size  Location     Type
  9113 ;;                  1    wreg      void 
  9114 ;; Registers used:
  9115 ;;		wreg, status,2, status,0, cstack
  9116 ;; Tracked objects:
  9117 ;;		On entry : 0/0
  9118 ;;		On exit  : 0/0
  9119 ;;		Unchanged: 0/0
  9120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9122 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9124 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9125 ;;Total ram usage:        1 bytes
  9126 ;; Hardware stack levels used: 1
  9127 ;; Hardware stack levels required when called: 1
  9128 ;; This function calls:
  9129 ;;		i2_I2C_2_Master_Idle
  9130 ;; This function is called by:
  9131 ;;		i2_color_writetoaddr
  9132 ;;		i2_interrupts_clear_colorclick
  9133 ;; This function uses a non-reentrant model
  9134 ;;
  9135                           
  9136                           	psect	text59
  9137   002A78                     __ptext59:
  9138                           	callstack 0
  9139   002A78                     i2_I2C_2_Master_Write:
  9140                           	callstack 16
  9141                           
  9142                           ;incstack = 0
  9143                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  9144   002A78  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  9145   002A7A                     
  9146                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  9147   002A7A  EC7B  F014         	call	i2_I2C_2_Master_Idle	;wreg free
  9148   002A7E                     
  9149                           ;i2c.c: 48:   SSP2BUF = data_byte;
  9150   002A7E  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  9151   002A82  0012               	return		;funcret
  9152   002A84                     __end_ofi2_I2C_2_Master_Write:
  9153                           	callstack 0
  9154                           
  9155 ;; *************** function i2_I2C_2_Master_Stop *****************
  9156 ;; Defined at:
  9157 ;;		line 39 in file "i2c.c"
  9158 ;; Parameters:    Size  Location     Type
  9159 ;;		None
  9160 ;; Auto vars:     Size  Location     Type
  9161 ;;		None
  9162 ;; Return value:  Size  Location     Type
  9163 ;;                  1    wreg      void 
  9164 ;; Registers used:
  9165 ;;		wreg, status,2, status,0, cstack
  9166 ;; Tracked objects:
  9167 ;;		On entry : 0/0
  9168 ;;		On exit  : 0/0
  9169 ;;		Unchanged: 0/0
  9170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9175 ;;Total ram usage:        0 bytes
  9176 ;; Hardware stack levels used: 1
  9177 ;; Hardware stack levels required when called: 1
  9178 ;; This function calls:
  9179 ;;		i2_I2C_2_Master_Idle
  9180 ;; This function is called by:
  9181 ;;		i2_color_writetoaddr
  9182 ;;		i2_interrupts_clear_colorclick
  9183 ;; This function uses a non-reentrant model
  9184 ;;
  9185                           
  9186                           	psect	text60
  9187   002AA2                     __ptext60:
  9188                           	callstack 0
  9189   002AA2                     i2_I2C_2_Master_Stop:
  9190                           	callstack 16
  9191   002AA2                     
  9192                           ;i2c.c: 41:   I2C_2_Master_Idle();
  9193   002AA2  EC7B  F014         	call	i2_I2C_2_Master_Idle	;wreg free
  9194   002AA6                     
  9195                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  9196   002AA6  010E               	movlb	14	; () banked
  9197   002AA8  85DA               	bsf	218,2,b	;volatile
  9198   002AAA                     
  9199                           ; BSR set to: 14
  9200   002AAA  0012               	return		;funcret
  9201   002AAC                     __end_ofi2_I2C_2_Master_Stop:
  9202                           	callstack 0
  9203                           
  9204 ;; *************** function i2_I2C_2_Master_Start *****************
  9205 ;; Defined at:
  9206 ;;		line 27 in file "i2c.c"
  9207 ;; Parameters:    Size  Location     Type
  9208 ;;		None
  9209 ;; Auto vars:     Size  Location     Type
  9210 ;;		None
  9211 ;; Return value:  Size  Location     Type
  9212 ;;                  1    wreg      void 
  9213 ;; Registers used:
  9214 ;;		wreg, status,2, status,0, cstack
  9215 ;; Tracked objects:
  9216 ;;		On entry : 0/0
  9217 ;;		On exit  : 0/0
  9218 ;;		Unchanged: 0/0
  9219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9224 ;;Total ram usage:        0 bytes
  9225 ;; Hardware stack levels used: 1
  9226 ;; Hardware stack levels required when called: 1
  9227 ;; This function calls:
  9228 ;;		i2_I2C_2_Master_Idle
  9229 ;; This function is called by:
  9230 ;;		i2_color_writetoaddr
  9231 ;;		i2_interrupts_clear_colorclick
  9232 ;; This function uses a non-reentrant model
  9233 ;;
  9234                           
  9235                           	psect	text61
  9236   002AAC                     __ptext61:
  9237                           	callstack 0
  9238   002AAC                     i2_I2C_2_Master_Start:
  9239                           	callstack 16
  9240   002AAC                     
  9241                           ;i2c.c: 29:   I2C_2_Master_Idle();
  9242   002AAC  EC7B  F014         	call	i2_I2C_2_Master_Idle	;wreg free
  9243   002AB0                     
  9244                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  9245   002AB0  010E               	movlb	14	; () banked
  9246   002AB2  81DA               	bsf	218,0,b	;volatile
  9247   002AB4                     
  9248                           ; BSR set to: 14
  9249   002AB4  0012               	return		;funcret
  9250   002AB6                     __end_ofi2_I2C_2_Master_Start:
  9251                           	callstack 0
  9252                           
  9253 ;; *************** function i2_I2C_2_Master_Idle *****************
  9254 ;; Defined at:
  9255 ;;		line 22 in file "i2c.c"
  9256 ;; Parameters:    Size  Location     Type
  9257 ;;		None
  9258 ;; Auto vars:     Size  Location     Type
  9259 ;;		None
  9260 ;; Return value:  Size  Location     Type
  9261 ;;                  1    wreg      void 
  9262 ;; Registers used:
  9263 ;;		wreg, status,2, status,0
  9264 ;; Tracked objects:
  9265 ;;		On entry : 0/0
  9266 ;;		On exit  : 0/0
  9267 ;;		Unchanged: 0/0
  9268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9271 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9272 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9273 ;;Total ram usage:        1 bytes
  9274 ;; Hardware stack levels used: 1
  9275 ;; This function calls:
  9276 ;;		Nothing
  9277 ;; This function is called by:
  9278 ;;		i2_I2C_2_Master_Start
  9279 ;;		i2_I2C_2_Master_Stop
  9280 ;;		i2_I2C_2_Master_Write
  9281 ;; This function uses a non-reentrant model
  9282 ;;
  9283                           
  9284                           	psect	text62
  9285   0028F6                     __ptext62:
  9286                           	callstack 0
  9287   0028F6                     i2_I2C_2_Master_Idle:
  9288                           	callstack 16
  9289   0028F6                     i2l89:
  9290   0028F6  010E               	movlb	14	; () banked
  9291   0028F8  B5D8               	btfsc	216,2,b	;volatile
  9292   0028FA  EF81  F014         	goto	i2u221_41
  9293   0028FE  EF83  F014         	goto	i2u221_40
  9294   002902                     i2u221_41:
  9295   002902  EF7B  F014         	goto	i2l89
  9296   002906                     i2u221_40:
  9297   002906                     
  9298                           ; BSR set to: 14
  9299   002906  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  9300   00290A  0E1F               	movlw	31
  9301   00290C  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  9302   00290E  A4D8               	btfss	status,2,c
  9303   002910  EF8C  F014         	goto	i2u222_41
  9304   002914  EF8E  F014         	goto	i2u222_40
  9305   002918                     i2u222_41:
  9306   002918  EF7B  F014         	goto	i2l89
  9307   00291C                     i2u222_40:
  9308   00291C                     
  9309                           ; BSR set to: 14
  9310   00291C  0012               	return		;funcret
  9311   00291E                     __end_ofi2_I2C_2_Master_Idle:
  9312                           	callstack 0
  9313   000000                     
  9314                           	psect	rparam
  9315   000000                     
  9316                           	psect	temp
  9317   000057                     btemp:
  9318                           	callstack 0
  9319   000057                     	ds	1
  9320   000000                     int$flags	set	btemp
  9321   000000                     wtemp8	set	btemp+1
  9322   000000                     ttemp5	set	btemp+1
  9323   000000                     ttemp6	set	btemp+4
  9324   000000                     ttemp7	set	btemp+8
  9325                           
  9326                           	psect	idloc
  9327                           
  9328                           ;Config register IDLOC0 @ 0x200000
  9329                           ;	unspecified, using default values
  9330   200000                     	org	2097152
  9331   200000  0FFF               	dw	4095
  9332                           
  9333                           ;Config register IDLOC1 @ 0x200002
  9334                           ;	unspecified, using default values
  9335   200002                     	org	2097154
  9336   200002  0FFF               	dw	4095
  9337                           
  9338                           ;Config register IDLOC2 @ 0x200004
  9339                           ;	unspecified, using default values
  9340   200004                     	org	2097156
  9341   200004  0FFF               	dw	4095
  9342                           
  9343                           ;Config register IDLOC3 @ 0x200006
  9344                           ;	unspecified, using default values
  9345   200006                     	org	2097158
  9346   200006  0FFF               	dw	4095
  9347                           
  9348                           ;Config register IDLOC4 @ 0x200008
  9349                           ;	unspecified, using default values
  9350   200008                     	org	2097160
  9351   200008  0FFF               	dw	4095
  9352                           
  9353                           ;Config register IDLOC5 @ 0x20000A
  9354                           ;	unspecified, using default values
  9355   20000A                     	org	2097162
  9356   20000A  0FFF               	dw	4095
  9357                           
  9358                           ;Config register IDLOC6 @ 0x20000C
  9359                           ;	unspecified, using default values
  9360   20000C                     	org	2097164
  9361   20000C  0FFF               	dw	4095
  9362                           
  9363                           ;Config register IDLOC7 @ 0x20000E
  9364                           ;	unspecified, using default values
  9365   20000E                     	org	2097166
  9366   20000E  0FFF               	dw	4095
  9367                           
  9368                           	psect	config
  9369                           
  9370                           ;Config register CONFIG1L @ 0x300000
  9371                           ;	External Oscillator mode Selection bits
  9372                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  9373                           ;	Power-up default value for COSC bits
  9374                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  9375   300000                     	org	3145728
  9376   300000  AA                 	db	170
  9377                           
  9378                           ;Config register CONFIG1H @ 0x300001
  9379                           ;	unspecified, using default values
  9380                           ;	Clock Out Enable bit
  9381                           ;	CLKOUTEN = 0x1, unprogrammed default
  9382                           ;	Clock Switch Enable bit
  9383                           ;	CSWEN = 0x1, unprogrammed default
  9384                           ;	Fail-Safe Clock Monitor Enable bit
  9385                           ;	FCMEN = 0x1, unprogrammed default
  9386   300001                     	org	3145729
  9387   300001  FF                 	db	255
  9388                           
  9389                           ;Config register CONFIG2L @ 0x300002
  9390                           ;	unspecified, using default values
  9391                           ;	Master Clear Enable bit
  9392                           ;	MCLRE = 0x1, unprogrammed default
  9393                           ;	Power-up Timer Enable bit
  9394                           ;	PWRTE = 0x1, unprogrammed default
  9395                           ;	Low-power BOR enable bit
  9396                           ;	LPBOREN = 0x1, unprogrammed default
  9397                           ;	Brown-out Reset Enable bits
  9398                           ;	BOREN = 0x3, unprogrammed default
  9399   300002                     	org	3145730
  9400   300002  FF                 	db	255
  9401                           
  9402                           ;Config register CONFIG2H @ 0x300003
  9403                           ;	unspecified, using default values
  9404                           ;	Brown Out Reset Voltage selection bits
  9405                           ;	BORV = 0x3, unprogrammed default
  9406                           ;	ZCD Disable bit
  9407                           ;	ZCD = 0x1, unprogrammed default
  9408                           ;	PPSLOCK bit One-Way Set Enable bit
  9409                           ;	PPS1WAY = 0x1, unprogrammed default
  9410                           ;	Stack Full/Underflow Reset Enable bit
  9411                           ;	STVREN = 0x1, unprogrammed default
  9412                           ;	Debugger Enable bit
  9413                           ;	DEBUG = 0x1, unprogrammed default
  9414                           ;	Extended Instruction Set Enable bit
  9415                           ;	XINST = 0x1, unprogrammed default
  9416   300003                     	org	3145731
  9417   300003  FF                 	db	255
  9418                           
  9419                           ;Config register CONFIG3L @ 0x300004
  9420                           ;	WDT Period Select bits
  9421                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  9422                           ;	WDT operating mode
  9423                           ;	WDTE = OFF, WDT Disabled
  9424   300004                     	org	3145732
  9425   300004  9F                 	db	159
  9426                           
  9427                           ;Config register CONFIG3H @ 0x300005
  9428                           ;	unspecified, using default values
  9429                           ;	WDT Window Select bits
  9430                           ;	WDTCWS = 0x7, unprogrammed default
  9431                           ;	WDT input clock selector
  9432                           ;	WDTCCS = 0x7, unprogrammed default
  9433   300005                     	org	3145733
  9434   300005  FF                 	db	255
  9435                           
  9436                           ;Config register CONFIG4L @ 0x300006
  9437                           ;	unspecified, using default values
  9438                           ;	Write Protection Block 0
  9439                           ;	WRT0 = 0x1, unprogrammed default
  9440                           ;	Write Protection Block 1
  9441                           ;	WRT1 = 0x1, unprogrammed default
  9442                           ;	Write Protection Block 2
  9443                           ;	WRT2 = 0x1, unprogrammed default
  9444                           ;	Write Protection Block 3
  9445                           ;	WRT3 = 0x1, unprogrammed default
  9446                           ;	Write Protection Block 3
  9447                           ;	WRT4 = 0x1, unprogrammed default
  9448                           ;	Write Protection Block 3
  9449                           ;	WRT5 = 0x1, unprogrammed default
  9450                           ;	Write Protection Block 3
  9451                           ;	WRT6 = 0x1, unprogrammed default
  9452                           ;	Write Protection Block 3
  9453                           ;	WRT7 = 0x1, unprogrammed default
  9454   300006                     	org	3145734
  9455   300006  FF                 	db	255
  9456                           
  9457                           ;Config register CONFIG4H @ 0x300007
  9458                           ;	unspecified, using default values
  9459                           ;	Configuration Register Write Protection bit
  9460                           ;	WRTC = 0x1, unprogrammed default
  9461                           ;	Boot Block Write Protection bit
  9462                           ;	WRTB = 0x1, unprogrammed default
  9463                           ;	Data EEPROM Write Protection bit
  9464                           ;	WRTD = 0x1, unprogrammed default
  9465                           ;	Scanner Enable bit
  9466                           ;	SCANE = 0x1, unprogrammed default
  9467                           ;	Low Voltage Programming Enable bit
  9468                           ;	LVP = 0x1, unprogrammed default
  9469   300007                     	org	3145735
  9470   300007  FF                 	db	255
  9471                           
  9472                           ;Config register CONFIG5L @ 0x300008
  9473                           ;	unspecified, using default values
  9474                           ;	UserNVM Program Memory Code Protection bit
  9475                           ;	CP = 0x1, unprogrammed default
  9476                           ;	DataNVM Memory Code Protection bit
  9477                           ;	CPD = 0x1, unprogrammed default
  9478   300008                     	org	3145736
  9479   300008  FF                 	db	255
  9480                           
  9481                           ;Config register CONFIG5H @ 0x300009
  9482                           ;	unspecified, using default values
  9483   300009                     	org	3145737
  9484   300009  FF                 	db	255
  9485                           
  9486                           ;Config register CONFIG6L @ 0x30000A
  9487                           ;	unspecified, using default values
  9488                           ;	Table Read Protection Block 0
  9489                           ;	EBTR0 = 0x1, unprogrammed default
  9490                           ;	Table Read Protection Block 1
  9491                           ;	EBTR1 = 0x1, unprogrammed default
  9492                           ;	Table Read Protection Block 2
  9493                           ;	EBTR2 = 0x1, unprogrammed default
  9494                           ;	Table Read Protection Block 3
  9495                           ;	EBTR3 = 0x1, unprogrammed default
  9496                           ;	Table Read Protection Block 4
  9497                           ;	EBTR4 = 0x1, unprogrammed default
  9498                           ;	Table Read Protection Block 5
  9499                           ;	EBTR5 = 0x1, unprogrammed default
  9500                           ;	Table Read Protection Block 6
  9501                           ;	EBTR6 = 0x1, unprogrammed default
  9502                           ;	Table Read Protection Block 7
  9503                           ;	EBTR7 = 0x1, unprogrammed default
  9504   30000A                     	org	3145738
  9505   30000A  FF                 	db	255
  9506                           
  9507                           ;Config register CONFIG6H @ 0x30000B
  9508                           ;	unspecified, using default values
  9509                           ;	Boot Block Table Read Protection bit
  9510                           ;	EBTRB = 0x1, unprogrammed default
  9511   30000B                     	org	3145739
  9512   30000B  FF                 	db	255
  9513                           tosu	equ	0xFFF
  9514                           tosh	equ	0xFFE
  9515                           tosl	equ	0xFFD
  9516                           stkptr	equ	0xFFC
  9517                           pclatu	equ	0xFFB
  9518                           pclath	equ	0xFFA
  9519                           pcl	equ	0xFF9
  9520                           tblptru	equ	0xFF8
  9521                           tblptrh	equ	0xFF7
  9522                           tblptrl	equ	0xFF6
  9523                           tablat	equ	0xFF5
  9524                           prodh	equ	0xFF4
  9525                           prodl	equ	0xFF3
  9526                           indf0	equ	0xFEF
  9527                           postinc0	equ	0xFEE
  9528                           postdec0	equ	0xFED
  9529                           preinc0	equ	0xFEC
  9530                           plusw0	equ	0xFEB
  9531                           fsr0h	equ	0xFEA
  9532                           fsr0l	equ	0xFE9
  9533                           wreg	equ	0xFE8
  9534                           indf1	equ	0xFE7
  9535                           postinc1	equ	0xFE6
  9536                           postdec1	equ	0xFE5
  9537                           preinc1	equ	0xFE4
  9538                           plusw1	equ	0xFE3
  9539                           fsr1h	equ	0xFE2
  9540                           fsr1l	equ	0xFE1
  9541                           bsr	equ	0xFE0
  9542                           indf2	equ	0xFDF
  9543                           postinc2	equ	0xFDE
  9544                           postdec2	equ	0xFDD
  9545                           preinc2	equ	0xFDC
  9546                           plusw2	equ	0xFDB
  9547                           fsr2h	equ	0xFDA
  9548                           fsr2l	equ	0xFD9
  9549                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         211
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     78      86
    BANK0           160     56     121
    BANK1           256      0     140
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    detect_color@lost_timer	PTR unsigned char  size(2) Largest target is 3561
		 -> RAM(DATA[3561]), 

    Return_Time@time_index	PTR unsigned char  size(2) Largest target is 1
		 -> time_index(BANK0[1]), 

    Return_Time@time_array	PTR unsigned int  size(2) Largest target is 80
		 -> time_array(BANK1[80]), 

    Return_Anti_Moves@moves_index	PTR unsigned char  size(2) Largest target is 1
		 -> moves_index(COMRAM[1]), 

    Return_Anti_Moves@anti_moves_array	PTR unsigned char  size(2) Largest target is 40
		 -> anti_moves_array(BANK0[40]), 

    AppendTime@time_index	PTR unsigned char  size(2) Largest target is 1
		 -> time_index(BANK0[1]), 

    AppendTime@time_array	PTR unsigned int  size(2) Largest target is 80
		 -> time_array(BANK1[80]), 

    AppendMoves@moves_index	PTR unsigned char  size(2) Largest target is 1
		 -> moves_index(COMRAM[1]), 

    AppendMoves@anti_moves_array	PTR unsigned char  size(2) Largest target is 40
		 -> anti_moves_array(BANK0[40]), 

    MoveBuggy@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    MoveBuggy@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    MoveBuggy@color_detected	PTR unsigned char  size(2) Largest target is 3561
		 -> RAM(DATA[3561]), 

    WhiteInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    WhiteInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    AntiPink@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    AntiPink@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    AntiYellow@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    AntiYellow@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    LightBlueInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    LightBlueInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    OrangeInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    OrangeInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    PinkInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    PinkInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    YellowInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    YellowInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    BlueInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    BlueInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    GreenInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    GreenInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    RedInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    RedInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnLeft135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnLeft90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    fullSpeedBackwards@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    fullSpeedBackwards@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    fullSpeedBackwards@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    fullSpeedBackwards@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    fullSpeedBackwards@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    fullSpeedBackwards@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    S1214DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    S1214DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), main@motorL(BANK0[9]), 

    detect_color@tempval	PTR struct RGB_val size(2) Largest target is 8
		 -> main@initial_color(BANK0[8]), 

    Update_RGBC@tempval	PTR struct RGB_val size(2) Largest target is 8
		 -> main@initial_color(BANK0[8]), 


Critical Paths under _main in COMRAM

    _detect_color->___fltol
    ___fltol->___flmul
    ___flmul->___fldiv
    ___fldiv->___xxtofl
    _color_click_init->_color_writetoaddr
    _WhiteInstructions->_MoveBuggy
    _MoveBuggy->_AntiPink
    _MoveBuggy->_AntiYellow
    _YellowInstructions->_turnRight90
    _PinkInstructions->_turnLeft90
    _OrangeInstructions->_turnRight135
    _turnRight135->_turnRight90
    _LightBlueInstructions->_turnLeft135
    _turnLeft135->_turnLeft90
    _AntiYellow->_BlueInstructions
    _AntiYellow->_RedInstructions
    _RedInstructions->_turnRight90
    _turnRight90->_turnRight
    _turnRight->_setMotorPWM
    _AntiPink->_BlueInstructions
    _AntiPink->_GreenInstructions
    _fullSpeedAhead->_setMotorPWM
    _GreenInstructions->_turnLeft90
    _BlueInstructions->_turnLeft90
    _turnLeft90->_turnLeft
    _turnLeft->_setMotorPWM
    _stop->_setMotorPWM
    _fullSpeedBackwards->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _Update_RGBC->_color_read_Blue
    _Update_RGBC->_color_read_Clear
    _Update_RGBC->_color_read_Green
    _Update_RGBC->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _interrupts_clear_colorclick->_init_colorclick_interrupts
    _init_colorclick_interrupts->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    i2_interrupts_clear_colorclick->i2_init_colorclick_interrupts
    i2_init_colorclick_interrupts->i2_color_writetoaddr
    i2_color_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_detect_color
    _detect_color->___fltol

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                32    32      0  490224
                                             24 BANK0     32    32      0
                         _AppendTime
                    _Interrupts_init
                           _LED_init
                          _MoveBuggy
                        _Timer0_init
                        _Update_RGBC
                  _WhiteInstructions
                         _WhiteLight
                   _color_click_init
                       _detect_color
                     _fullSpeedAhead
                    _initDCmotorsPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _detect_color                                        20    16      4    6670
                                              4 BANK0     20    16      4
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     616
                                              8 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     517
                                             72 COMRAM     6     2      4
                                              0 BANK0      4     4      0
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    1886
                                             47 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1541
                                             22 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     750
                                             12 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WhiteLight                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WhiteInstructions                                   11     7      4  248861
                                             58 COMRAM    11     7      4
                   _BlueInstructions
                          _MoveBuggy
                  _Return_Anti_Moves
                        _Return_Time
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (2) _Return_Time                                          9     5      4     219
                                              8 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (2) _Return_Anti_Moves                                    6     2      4     219
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _MoveBuggy                                            6     0      6  222680
                                             52 COMRAM     6     0      6
                           _AntiPink
                         _AntiYellow
                        _AppendMoves
                   _BlueInstructions
                  _GreenInstructions
              _LightBlueInstructions
                 _OrangeInstructions
                   _PinkInstructions
                    _RedInstructions
                 _YellowInstructions
 ---------------------------------------------------------------------------------
 (3) _YellowInstructions                                   7     3      4   16596
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                        _turnRight90
 ---------------------------------------------------------------------------------
 (3) _PinkInstructions                                     7     3      4   17204
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                         _turnLeft90
 ---------------------------------------------------------------------------------
 (3) _OrangeInstructions                                   7     3      4   24393
                                             43 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                       _turnRight135
 ---------------------------------------------------------------------------------
 (4) _turnRight135                                         5     1      4   15988
                                             38 COMRAM     5     1      4
                               _stop
                          _turnRight
                        _turnRight90
 ---------------------------------------------------------------------------------
 (3) _LightBlueInstructions                                7     3      4   25001
                                             43 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                        _turnLeft135
 ---------------------------------------------------------------------------------
 (4) _turnLeft135                                          5     1      4   16596
                                             38 COMRAM     5     1      4
                               _stop
                           _turnLeft
                         _turnLeft90
 ---------------------------------------------------------------------------------
 (3) _AppendMoves                                          6     2      4    1130
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _AntiYellow                                           7     3      4   42445
                                             45 COMRAM     7     3      4
                   _BlueInstructions
                    _RedInstructions
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (3) _RedInstructions                                      7     3      4   16748
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                        _turnRight90
 ---------------------------------------------------------------------------------
 (4) _turnRight90                                          5     1      4    8191
                                             33 COMRAM     5     1      4
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (5) _turnRight                                            6     2      4    2593
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _AntiPink                                             7     3      4   43053
                                             45 COMRAM     7     3      4
                   _BlueInstructions
                  _GreenInstructions
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (1) _fullSpeedAhead                                       6     2      4    2745
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _GreenInstructions                                    7     3      4   17356
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                         _turnLeft90
 ---------------------------------------------------------------------------------
 (3) _BlueInstructions                                     7     3      4   17704
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                         _turnLeft90
 ---------------------------------------------------------------------------------
 (4) _turnLeft90                                           5     1      4    8799
                                             33 COMRAM     5     1      4
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (5) _turnLeft                                             6     2      4    2593
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _stop                                                 5     1      4    4873
                                             27 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _fullSpeedBackwards                                   6     2      4    3201
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    1829
                                             21 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                             14 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Update_RGBC                                          2     0      2     616
                                             19 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              9 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0     772
        _interrupts_clear_colorclick
 ---------------------------------------------------------------------------------
 (2) _interrupts_clear_colorclick                          0     0      0     772
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
         _init_colorclick_interrupts
 ---------------------------------------------------------------------------------
 (3) _init_colorclick_interrupts                           1     1      0     750
                                             12 COMRAM     1     1      0
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     750
                                             10 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              9 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _AppendTime                                           9     3      6     522
                                              8 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _LowISR                                               3     3      0       0
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _HighISR                                             0     0      0     244
      i2_interrupts_clear_colorclick
 ---------------------------------------------------------------------------------
 (11) i2_interrupts_clear_colorclick                       0     0      0     244
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
       i2_init_colorclick_interrupts
 ---------------------------------------------------------------------------------
 (12) i2_init_colorclick_interrupts                        1     1      0     222
                                              4 COMRAM     1     1      0
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (13) i2_color_writetoaddr                                 2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (14) i2_I2C_2_Master_Write                                1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (14) i2_I2C_2_Master_Stop                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (14) i2_I2C_2_Master_Start                                0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (15) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AppendTime
   _Interrupts_init
     _interrupts_clear_colorclick
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
       _init_colorclick_interrupts
         _color_writetoaddr
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
   _LED_init
   _MoveBuggy
     _AntiPink
       _BlueInstructions
         _fullSpeedBackwards
           _setMotorPWM
             ___lwdiv
               ___wmul (ARG)
             ___wmul
         _stop
           _setMotorPWM
         _turnLeft90
           _stop
           _turnLeft
             _setMotorPWM
       _GreenInstructions
         _fullSpeedBackwards
         _stop
         _turnLeft90
       _fullSpeedAhead
         _setMotorPWM
       _stop
     _AntiYellow
       _BlueInstructions
       _RedInstructions
         _fullSpeedBackwards
         _stop
         _turnRight90
           _stop
           _turnRight
             _setMotorPWM
       _fullSpeedAhead
       _stop
     _AppendMoves
     _BlueInstructions
     _GreenInstructions
     _LightBlueInstructions
       _fullSpeedBackwards
       _stop
       _turnLeft135
         _stop
         _turnLeft
         _turnLeft90
     _OrangeInstructions
       _fullSpeedBackwards
       _stop
       _turnRight135
         _stop
         _turnRight
         _turnRight90
     _PinkInstructions
       _fullSpeedBackwards
       _stop
       _turnLeft90
     _RedInstructions
     _YellowInstructions
       _fullSpeedBackwards
       _stop
       _turnRight90
   _Timer0_init
   _Update_RGBC
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _WhiteInstructions
     _BlueInstructions
     _MoveBuggy
     _Return_Anti_Moves
     _Return_Time
     _fullSpeedAhead
     _stop
   _WhiteLight
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
   _detect_color
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       ___fldiv (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _fullSpeedAhead
   _initDCmotorsPWM
   _stop

 _LowISR (ROOT)

 _HighISR (ROOT)
   i2_interrupts_clear_colorclick
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle
     i2_init_colorclick_interrupts
       i2_color_writetoaddr
         i2_I2C_2_Master_Start
         i2_I2C_2_Master_Stop
         i2_I2C_2_Master_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      62        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      8C       7       54.7%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     38      79       5       75.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4E      56       1       91.5%
BITBIGSFRhllllh     52      0       0      40        0.0%
BITBIGSFRhlllll     37      0       0      42        0.0%
BITBIGSFRllh        2D      0       0      45        0.0%
BITBIGSFRlllhll     2A      0       0      53        0.0%
BITBIGSFRlllll      26      0       0      60        0.0%
BITBIGSFRhhhlll     1D      0       0      38        0.0%
BITBIGSFRhhhhlh     1B      0       0      33        0.0%
BITBIGSFRhhhhll     13      0       0      34        0.0%
BITBIGSFRlllhhh     11      0       0      47        0.0%
BITBIGSFRlllhhh     11      0       0      48        0.0%
BITBIGSFRhhhlhh      E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRlllhhh      C      0       0      46        0.0%
BITBIGSFRlllhll      9      0       0      57        0.0%
BITBIGSFRhlllll      8      0       0      43        0.0%
BITBIGSFRllllh       6      0       0      59        0.0%
BITBIGSFRlllhll      6      0       0      52        0.0%
BITBIGSFRlllhll      5      0       0      55        0.0%
BITBIGSFRlllhlh      5      0       0      51        0.0%
BITBIGSFRlllhll      3      0       0      54        0.0%
BITBIGSFRlllhll      3      0       0      56        0.0%
BITBIGSFRlllhhl      3      0       0      50        0.0%
BITBIGSFRhlllll      2      0       0      41        0.0%
BITBIGSFRhhhllh      2      0       0      37        0.0%
BITBIGSFRhhhlhl      1      0       0      36        0.0%
BITBIGSFRlllhhh      1      0       0      49        0.0%
BITBIGSFRhlllh       1      0       0      39        0.0%
BITBIGSFRlllhll      1      0       0      58        0.0%
BITBIGSFRlh          1      0       0      44        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     15B      61        0.0%
DATA                 0      0     15B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Mar 13 18:21:50 2023

                       _color_read_Red 259E                           ___fldiv@aexp 002F  
                         ___fldiv@bexp 002E                           ___fldiv@sign 0027  
                      _color_read_Blue 268E                                     l21 2870  
                                   l30 263C                                     l24 29C8  
                                   l33 26DC                                     l42 0674  
                                   l27 25EC                                     l36 268C  
                                   l39 259C                                     l59 067A  
                                   l92 28F4                                     l86 28CC  
                                   l95 2AA0                                     l89 28CE  
                                   l98 2A8C                                     bsr 000FE0  
                  ___wmul@multiplicand 000B                       _anti_moves_array 0076  
                     _color_read_Clear 263E                       _color_read_Green 25EE  
           WhiteInstructions@anticolor 0043                      ??_Interrupts_init 000E  
                                  l101 2A96                                    l104 2A76  
                                  l201 1A1C                                    l130 2A6A  
                                  l107 2804                                    l211 192E  
                                  l133 2ABC                                    l206 1840  
                                  l231 203A                                    l312 2A26  
                                  l216 1B0A                                    l322 2A40  
                                  l246 1F8C                                    l319 272C  
                                  l191 164A                                    l600 21D6  
                                  l184 20CA                                    l258 24D0  
                                  l506 1154                                    l267 253E  
                                  l196 1CC8                                    l438 29A8  
                                  l609 225C                                    l618 22E2  
                                  l627 1D7A                                    l636 1E2C  
                                  l564 2368                                    l573 23EE  
                                  l582 1EDE                                    l591 2150  
                                  l648 1BF4                                    l675 10C2  
                                  l692 2988                                    l686 2966  
                                  l695 283C                                    l689 28A2  
                                  l698 2942                                    l995 1752  
                  i2_color_writetoaddr 29EA                                    wreg 000FE8  
                         ___flmul@aexp 0041                           ___flmul@bexp 0042  
                         ___flmul@sign 003C                           ___flmul@temp 0047  
                         ___flmul@prod 0043                           ___fltol@exp1 004E  
                                 l1312 0740                                   l3001 23B2  
                                 l1321 09AE                                   l1322 099C  
                                 l3011 1E4A                                   l3003 23C2  
                                 l1316 0AA4                                   l3021 1E86  
                                 l3013 1E4C                                   l3005 23DA  
                                 l3101 219A                                   l3023 1E9E  
                                 l3015 1E60                                   l3007 1E2E  
                                 l3111 21F4                                   l3103 21AA  
                                 l1319 0936                                   l1280 0E3E  
                                 l1360 141A                                   l3041 2A88  
                                 l3025 1EB2                                   l3017 1E74  
                                 l3009 1E36                                   l3121 2230  
                                 l3113 21F6                                   l3105 21C2  
                                 l3201 28BA                                   l1329 0A66  
                                 l1353 1382                                   l1282 0C9E  
                                 l3051 2800                                   l3043 27C6  
                                 l3211 2634                                   l3203 259E  
                                 l3019 1E76                                   l3131 227C  
                                 l3123 2248                                   l3115 220A  
                                 l3107 21D8                                   l1291 0CE4  
                                 l1196 2462                                   l1356 14DE  
                                 l3061 26F8                                   l3053 2802  
                                 l3045 27CA                                   l3221 263E  
                                 l3205 25E4                                   l1189 245A  
                                 l3141 22CE                                   l3133 2290  
                                 l3125 225E                                   l3117 221E  
                                 l3109 21E0                                   l3301 2986  
                                 l1293 0D5C                                   l1285 0C62  
                                 l4101 0340                                   l1294 0D4A  
                                 l3063 2702                                   l3047 27D2  
                                 l3039 2A84                                   l3215 268E  
                                 l3223 2684                                   l3151 1D12  
                                 l3143 1CCA                                   l3135 22A4  
                                 l3127 2266                                   l3119 2220  
                                 l3071 20CC                                   l3231 0E52  
                                 l3311 0AC2                                   l1367 1476  
                                 l4111 0390                                   l4103 0350  
                                 l3065 270C                                   l3057 26DE  
                                 l3049 27DA                                   l3217 26D4  
                                 l3209 25EE                                   l3161 1D4E  
                                 l3153 1D14                                   l3145 1CCE  
                                 l3137 22A6                                   l3129 227A  
                                 l3081 2112                                   l3073 20D4  
                                 l3241 0EB6                                   l3233 0E66  
                                 l3401 0D02                                   l3313 0AD2  
                                 l3321 0AFC                                   l3305 0AA6  
                                 l4201 0628                                   l4121 03D8  
                                 l4105 0360                                   l4113 0398  
                                 l3067 2716                                   l3059 26E8  
                                 l3227 2A28                                   l3171 1DB0  
                                 l3163 1D66                                   l3155 1D28  
                                 l3147 1CE2                                   l3139 22B6  
                                 l3091 215A                                   l3083 2114  
                                 l3075 20E8                                   l3251 0F14  
                                 l3243 0EC4                                   l3235 0E74  
                                 l3411 0D6C                                   l3403 0D06  
                                 l3331 0B28                                   l3323 0B0C  
                                 l3315 0AE2                                   l3307 0AB2  
                                 l4051 1676                                   l4203 0638  
                                 l4211 0670                                   l4131 0420  
                                 l4123 03E8                                   l4115 03A8  
                                 l4107 0370                                   l3069 2720  
                                 l3181 1DF0                                   l3173 1DC4  
                                 l3165 1D7C                                   l3157 1D3C  
                                 l3149 1CFE                                   l3093 216E  
                                 l3085 2124                                   l3077 20EA  
                                 l3261 0F7E                                   l3253 0F2E  
                                 l3245 0EDE                                   l3237 0E8E  
                                 l3229 0E40                                   l3421 0DCE  
                                 l3413 0D78                                   l3405 0D14  
                                 l3333 0B38                                   l3341 0B62  
                                 l3325 0B12                                   l3317 0AF2  
                                 l3309 0AC0                                   l3501 07F6  
                                 l4061 16C6                                   l4053 16A2  
                                 l4045 164C                                   l4205 0648  
                                 l4133 0430                                   l4141 0468  
                                 l4125 03F8                                   l4117 03B8  
                                 l4109 0380                                   l4301 12E8  
                                 l4221 10EE                                   l3183 1E00  
                                 l3175 1DC6                                   l3167 1D80  
                                 l3159 1D3E                                   l3095 2170  
                                 l3087 213C                                   l3079 20FE  
                                 l3271 0FE2                                   l3263 0F92  
                                 l3255 0F42                                   l3247 0EF2  
                                 l3239 0EA2                                   l3191 28A4  
                                 l3431 0E2C                                   l3423 0DE4  
                                 l3415 0D86                                   l3407 0D42  
                                 l3351 0BA4                                   l3343 0B72  
                                 l3335 0B48                                   l3327 0B18  
                                 l3319 0AF4                                   l3511 084C  
                                 l3503 0806                                   l4071 16F2  
                                 l4055 16A4                                   l4047 1662  
                                 l4207 0658                                   l4151 04B8  
                                 l4143 0478                                   l4135 0440  
                                 l4119 03C8                                   l4127 0400  
                                 l4303 1302                                   l4231 1118  
                                 l4223 1102                                   l4215 10C4  
                                 l2801 1998                                   l3185 1E18  
                                 l3177 1DDA                                   l3169 1D94  
                                 l3097 2184                                   l3089 2152  
                                 l3281 1046                                   l3273 0FF6  
                                 l3265 0FA6                                   l3257 0F56  
                                 l3249 0F06                                   l3193 28AE  
                                 l3433 0E32                                   l3425 0DFE  
                                 l3417 0DB0                                   l3345 0B88  
                                 l3337 0B58                                   l3329 0B26  
                                 l3521 08F0                                   l3513 0868  
                                 l3505 0812                                   l4081 1722  
                                 l4057 16B4                                   l4209 0668  
                                 l4161 0500                                   l4153 04C8  
                                 l4145 0488                                   l4137 0450  
                                 l4129 0410                                   l4305 1316  
                                 l4241 1132                                   l4233 1120  
                                 l4225 1108                                   l4217 10E6  
                                 l2731 291E                                   l2811 19F8  
                                 l2803 19B4                                   l3179 1DEE  
                                 l3187 2946                                   l3099 2198  
                                 l3291 10AE                                   l3283 1054  
                                 l3275 1004                                   l3267 0FB4  
                                 l3259 0F64                                   l3195 28B4  
                                 l3435 0E34                                   l3427 0E1A  
                                 l3419 0DB4                                   l3371 0C26  
                                 l3363 0BDC                                   l3347 0B98  
                                 l3355 0BB8                                   l3339 0B5A  
                                 l3531 0946                                   l3523 08FE  
                                 l3515 0874                                   l3507 0822  
                                 l3451 06A8                                   l3443 067C  
                                 l4083 1732                                   l4067 16DE  
                                 l4059 16B8                                   l4171 0548  
                                 l4163 0510                                   l4147 0498  
                                 l4155 04D0                                   l4139 0460  
                                 l4091 0062                                   l4307 1318  
                                 l4251 1150                                   l4243 113A  
                                 l4235 1126                                   l4227 110C  
                                 l4219 10EA                                   l2741 240A  
                                 l2733 293A                                   l2813 1A04  
                                 l2805 19C0                                   l2821 17D8  
                                 l2901 1F28                                   l3285 106E  
                                 l3277 101E                                   l3269 0FCE  
                                 l3293 2806                                   l3197 28B6  
                                 l3429 0E1E                                   l3381 0C6C  
                                 l3373 0C2E                                   l3365 0BF6  
                                 l3357 0BC8                                   l3349 0BA0  
                                 l3533 0954                                   l3525 091C  
                                 l3517 0890                                   l3509 083C  
                                 l3461 06E4                                   l3453 06B8  
                                 l3445 0688                                   l4085 1742  
                                 l4077 1706                                   l4069 16E8  
                                 l3621 134C                                   l4181 0598  
                                 l4173 0558                                   l4165 0520  
                                 l4157 04E0                                   l4149 04A8  
                                 l4093 0148                                   l4309 131E  
                                 l4253 1162                                   l4261 11A6  
                                 l4245 1142                                   l4237 112A  
                                 l4229 1110                                   l2751 2444  
                                 l2743 2412                                   l2807 19D6  
                                 l2831 1828                                   l2823 17E4  
                                 l2815 1754                                   l2911 1F7A  
                                 l2903 1F3C                                   l3287 1082  
                                 l3279 1032                                   l3295 2834  
                                 l3199 28B8                                   l3391 0CC4  
                                 l3383 0C8A                                   l3375 0C3E  
                                 l3367 0C06                                   l3359 0BC8  
                                 l3543 09BE                                   l3551 0A06  
                                 l3535 0958                                   l3527 0926  
                                 l3519 08BA                                   l3471 071A  
                                 l3463 06EA                                   l3455 06C8  
                                 l3447 0696                                   l4079 1712  
                                 l3631 13C4                                   l3623 1392  
                                 l4191 05E0                                   l4175 0568  
                                 l4183 05A0                                   l4167 0530  
                                 l4159 04F0                                   l4095 0234  
                                 l4271 11FE                                   l4263 11B6  
                                 l4255 1176                                   l4247 1148  
                                 l4239 112E                                   l2833 2A98  
                                 l2841 2A8E                                   l2753 244C  
                                 l2745 241A                                   l2737 23F0  
                                 l2761 14FC                                   l2809 19EC  
                                 l2921 1842                                   l2825 17FA  
                                 l2817 17B0                                   l2913 1F7C  
                                 l2905 1F50                                   l3289 109A  
                                 l3393 0CCA                                   l3385 0C8C  
                                 l3377 0C52                                   l3369 0C16  
                                 l3561 0A7A                                   l3553 0A20  
                                 l3545 09CA                                   l3537 0966  
                                 l3529 0934                                   l3473 072A  
                                 l3465 06F8                                   l3457 06CE  
                                 l3449 0698                                   l3641 144C  
                                 l3633 13D0                                   l3625 13A8  
                                 l3617 132E                                   l4193 05F0  
                                 l4185 05B0                                   l4177 0578  
                                 l4169 0538                                   l4097 0320  
                                 l4089 005C                                   l4281 124A  
                                 l4273 1212                                   l4265 11C6  
                                 l4257 1182                                   l4249 114C  
                                 l2835 2A9C                                   l2843 2A92  
                                 l2755 244E                                   l2747 2428  
                                 l2739 23F8                                   l2771 15C6  
                                 l2763 1550                                   l2851 1AA2  
                                 l2931 18E8                                   l2923 189E  
                                 l2827 1810                                   l2819 17BC  
                                 l2907 1F52                                   l3299 2968  
                                 l3395 0CD4                                   l3387 0C9C  
                                 l3379 0C60                                   l3563 0A88  
                                 l3555 0A34                                   l3547 09D8  
                                 l3539 0994                                   l3491 07AC  
                                 l3483 0774                                   l3475 0730  
                                 l3467 06FA                                   l3459 06DE  
                                 l3651 148A                                   l3643 1458  
                                 l3635 1402                                   l3619 133E  
                                 l4195 0600                                   l4187 05C0  
                                 l4179 0588                                   l4099 0330  
                                 l4291 1292                                   l4283 126E  
                                 l4275 121A                                   l4267 11D8  
                                 l4259 11A2                                   l2837 2A6E  
                                 l2757 2454                                   l2749 242E  
                                 l2773 160A                                   l2765 1564  
                                 l2861 1AF2                                   l2853 1AAE  
                                 l2845 1A1E                                   l2781 1C2E  
                                 l2933 18FE                                   l2925 18AA  
                                 l2829 181C                                   l2909 1F66  
                                 l2941 2478                                   l3397 0CE2  
                                 l3389 0CAE                                   l3565 0A8A  
                                 l3557 0A4E                                   l3549 0A02  
                                 l3493 07C4                                   l3485 0780  
                                 l3477 0750                                   l3469 070A  
                                 l3653 14AE                                   l3645 1466  
                                 l3637 1404                                   l3629 13BC  
                                 l4189 05D0                                   l4197 0608  
                                 l3821 204C                                   l4293 12B2  
                                 l4285 1274                                   l4277 122E  
                                 l4269 11F8                                   l2775 28CE  
                                 l2839 2A72                                   l2919 29AC  
                                 l3815 2A5C                                   l2767 1568  
                                 l2759 14E0                                   l2855 1AC4  
                                 l2847 1A7A                                   l2791 1CA2  
                                 l2783 1C3A                                   l2871 1FC0  
                                 l2863 1F8E                                   l2935 190A  
                                 l2927 18C6                                   l2951 24BE  
                                 l2943 2480                                   l3399 0CF4  
                                 l3559 0A6A                                   l3567 0A90  
                                 l3495 07D0                                   l3487 078A  
                                 l3479 0760                                   l3655 14BE  
                                 l3647 1484                                   l3639 1410  
                                 l4199 0618                                   l3831 20A6  
                                 l3823 2072                                   l4295 12B8  
                                 l4287 1278                                   l4279 1248  
                                 l2777 28DE                                   l2769 15AA  
                                 l2857 1ADA                                   l2849 1A86  
                                 l2793 1CAE                                   l2785 1C52  
                                 l2881 2000                                   l2873 1FD4  
                                 l2865 1F96                                   l2937 1916  
                                 l2929 18D2                                   l2961 2502  
                                 l2953 24C0                                   l2945 2494  
                                 l3817 2AB6                                   l3681 284C  
                                 l3569 0A94                                   l3497 07DC  
                                 l3489 07A0                                   l3657 14CC  
                                 l3649 1486                                   l3841 20C8  
                                 l3833 20B0                                   l3825 2076  
                                 l4297 12CC                                   l4289 1280  
                                 l3851 2A24                                   l3843 2A0A  
                                 l2859 1AE6                                   l2795 1CBA  
                                 l2787 1C5E                                   l2779 1BF6  
                                 l2883 2014                                   l2875 1FD6  
                                 l2867 1FAA                                   l2891 1EE8  
                                 l2971 22E4                                   l2963 2504  
                                 l2955 24D2                                   l2947 2496  
                                 l2939 2464                                   l3683 285C  
                                 l3499 07EA                                   l3659 14CE  
                                 l3835 20B2                                   l3827 209A  
                                 l3819 203C                                   l4299 12D4  
                                 l3845 2A1C                                   l3861 298A  
                                 l2789 1C74                                   l2797 1930  
                                 l2885 2028                                   l2877 1FEA  
                                 l2869 1FAC                                   l2893 1EFC  
                                 l2981 232A                                   l2973 22EC  
                                 l2965 2518                                   l2957 24E6  
                                 l2949 24AA                                   l3685 2866  
                                 l3677 283E                                   l3837 20BC  
                                 l3829 20A4                                   l3847 2A20  
                                 l3863 2992                                   l3687 2540  
                                 l2799 198C                                   l2887 202A  
                                 l2879 1FFE                                   l2991 2372  
                                 l2895 1EFE                                   l2983 232C  
                                 l2975 2300                                   l2967 252C  
                                 l2959 24EE                                   l3871 1B0C  
                                 l3679 2842                                   l3839 20BE  
                                 l3849 2A22                                   l3865 299C  
                                 l2993 2386                                   l2897 1F12  
                                 l2889 1EE0                                   l2985 233C  
                                 l2977 2302                                   l2969 252E  
                                 l3881 1B64                                   l3873 1B24  
                                 l3867 29A6                                   l2995 2388  
                                 l2899 1F26                                   l2987 2354  
                                 l2979 2316                                   l3891 1BC0  
                                 l3883 1B7E                                   l3875 1B2C  
                                 l3869 2872                                   l2997 239C  
                                 l2989 236A                                   l3885 1B92  
                                 l3877 1B4C                                   l3893 1BE2  
                                 l2999 23B0                                   l3887 1B98  
                                 l3879 1B60                                   l3889 1BAA  
                                 u2000 2444                                   u2001 2440  
                                 u2010 14FC                                   u2011 14F8  
                                 u2020 15C6                                   u2100 17D8  
                                 u2021 15C2                                   u2101 17D4  
                                 u2030 28DE                                   u2110 1A7A  
                                 u2031 28DA                                   u2111 1A76  
                                 u2040 28F4                                   u2120 1AA2  
                                 u2200 1F8C                                   u3000 0994  
                                 u2041 28F0                                   u2121 1A9E  
                                 u2201 1F88                                   u3001 0990  
                                 u2050 1C2E                                   u2130 1FBC  
                                 u3010 09AA                                   u2051 1C2A  
                                 u2131 1FB8                                   u3011 09A6  
                                 u2060 1C52                                   u2140 1FE6  
                                 u2300 233C                                   u3020 09BE  
                                 u2061 1C4E                                   u2141 1FE2  
                                 u2301 2338                                   u3021 09BA  
                                 u2070 198C                                   u2150 2010  
                                 u2310 2398                                   u2230 189E  
                                 u3030 09D8                                   u2071 1988  
                                 u2151 200C                                   u2311 2394  
                                 u2231 189A                                   u3031 09D4  
                                 u2080 19B4                                   u2160 203A  
                                 u2320 23C2                                   u2240 18C6  
                                 u2400 21AA                                   u3040 0A20  
                                 u3200 1476                                   u4000 0370  
                         _BAUD4CONbits 000EE9                                   u2081 19B0  
                                 u2161 2036                                   u2321 23BE  
                                 u2241 18C2                                   u2401 21A6  
                                 u3041 0A1C                                   u3201 1472  
                                 u4001 036C                                   u2330 1E5C  
                                 u2090 17B0                                   u2170 1F0E  
                                 u2250 24A6                                   u2410 2206  
                                 u3050 0A4E                                   u3210 1484  
                                 u4010 0380                                   u2331 1E58  
                                 u2091 17AC                                   u2171 1F0A  
                                 u2251 24A2                                   u2411 2202  
                                 u3051 0A4A                                   u3211 1480  
                                 u4011 037C                                   u2340 1E86  
                                 u2180 1F38                                   u2260 24D0  
                                 u2420 2230                                   u2500 0E74  
                                 u3060 0A88                                   u3220 14BE  
                                 u3140 133E                                   u4100 0420  
                                 u4020 0390                                   u2341 1E82  
                                 u2181 1F34                                   u2261 24CC  
                                 u2421 222C                                   u2501 0E70  
                                 u3061 0A84                                   u3221 14BA  
                                 u3141 133A                                   u4101 041C  
                                 u4021 038C                                   u2350 27EE  
                                 u2190 1F62                                   u2270 2514  
                                 u2430 228C                                   u2510 0EA2  
                                 u3230 14CC                                   u3150 134C  
                                 u4110 0430                                   u4030 03A8  
                                 u2351 27E6                                   u2191 1F5E  
                                 u2271 2510                                   u2431 2288  
                                 u2511 0E9E                                   u3231 14C8  
                                 u3151 1348                                   u4111 042C  
                                 u4031 03A4                                   u2280 253E  
                                 u2440 22B6                                   u2600 1004  
                                 u2520 0EC4                                   u3160 13A8  
                                 u4200 04C8                                   u4120 0440  
                                 u4040 03B8                                   u2281 253A  
                                 u2441 22B2                                   u2601 1000  
                                 u2521 0EC0                                   u3161 13A4  
                                 u4201 04C4                                   u4121 043C  
                                 u4041 03B4                                   u2290 2312  
                                 u2450 1D24                                   u2370 20FA  
                                 u2610 1032                                   u2530 0EF2  
                                 u3170 13FE                                   u4210 04E0  
                                 u4130 0450                                   u4050 03C8  
                                 _T2PR 000FBC                                   u2291 230E  
                                 u2451 1D20                                   u2371 20F6  
                                 u2611 102E                                   u2531 0EEE  
                                 u3171 13FA                                   u4211 04DC  
                                 u4131 044C                                   u4051 03C4  
                                 u2460 1D4E                                   u2380 2124  
                                 u2620 1054                                   u2540 0F14  
                                 u2700 0B48                                   u3180 1448  
                                 u4300 0578                                   u4220 04F0  
                                 u4140 0460                                   u4060 03D8  
                                 u2461 1D4A                                   u2381 2120  
                                 u2621 1050                                   u2541 0F10  
                                 u2701 0B44                                   u3181 1444  
                                 u4301 0574                                   u4221 04EC  
                                 u4141 045C                                   u4061 03D4  
                                 u2470 1DD6                                   u2390 2180  
                                 u2630 1082                                   u2550 0F42  
                                 u2710 0B88                                   u3190 1466  
                                 u4310 0588                                   u4230 0500  
                                 u4150 0478                                   u4070 03E8  
                                 u2471 1DD2                                   u2391 217C  
                                 u2631 107E                                   u2551 0F3E  
                                 u2711 0B84                                   u3191 1462  
                                 u4311 0584                                   u4231 04FC  
                                 u4151 0474                                   u4071 03E4  
                                 u2368 27F0                                   u2480 1E00  
                                 u2640 10AE                                   u2560 0F64  
                                 u2800 0D14                                   u2720 0BC8  
                                 u4400 0628                                   u4320 0598  
                                 u4240 0510                                   u4160 0488  
                                 u4080 03F8                                   u2481 1DFC  
                                 u2641 10AA                                   u2561 0F60  
                                 u2801 0D10                                   u2721 0BC4  
                                 u4401 0624                                   u4321 0594  
                                 u4241 050C                                   u4161 0484  
                                 u4081 03F4                                   u2570 0F92  
                                 u2490 0E52                                   u2810 0D42  
                                 u2730 0C3E                                   u2650 0AC0  
                                 u4410 0638                                   u4330 05B0  
                                 u4250 0520                                   u4170 0498  
                                 u4090 0410                                   u2571 0F8E  
                                 u2491 0E4E                                   u2811 0D3E  
                                 u2731 0C3A                                   u2651 0ABC  
                                 u4411 0634                                   u4331 05AC  
                                 u4251 051C                                   u4171 0494  
                                 u4091 040C                                   u2580 0FB4  
                                 u2820 0D58                                   u2740 0C60  
                                 u2660 0AD2                                   u2900 06B8  
                                 u4420 0648                                   u4340 05C0  
                                 u4260 0530                                   u4180 04A8  
                                 u4500 12E8                                   u2581 0FB0  
                                 u2821 0D54                                   u2741 0C5C  
                                 u2661 0ACE                                   u2901 06B4  
                                 u4421 0644                                   u4341 05BC  
                                 u4261 052C                                   u4181 04A4  
                                 u4501 12E4                                   u2590 0FE2  
                                 u2830 0D6C                                   u2750 0C8A  
                                 u2670 0AE2                                   u2910 06F8  
                                 u4430 0658                                   u4350 05D0  
                                 u4270 0548                                   u4190 04B8  
                                 u2591 0FDE                                   u2831 0D68  
                                 u2751 0C86                                   u2671 0ADE  
                                 u2911 06F4                                   u4431 0654  
                                 u4351 05CC                                   u4271 0544  
                                 u4191 04B4                                   u2840 0D86  
                                 u2760 0CAE                                   u2680 0B26  
                                 u2920 070A                                   u4440 0668  
                                 u4360 05E0                                   u4280 0558  
                                 u2841 0D82                                   u2761 0CAA  
                                 u2681 0B22                                   u2921 0706  
                                 u4441 0664                                   u4361 05DC  
                                 u4281 0554                                   u2850 0DCE  
                                 u2770 0CC4                                   u2690 0B38  
                                 u2930 071A                                   u4370 05F0  
                                 u4290 0568                                   u4450 11B6  
                                 u2851 0DCA                                   u2771 0CC0  
                                 u2691 0B34                                   u2931 0716  
                                 u4371 05EC                                   u4291 0564  
                                 u4451 11B2                                   u1980 240A  
                                 u3740 1B7A                                   u2860 0DFE  
                                 u2780 0CE2                                   u2940 0750  
                                 u3900 1698                                   u4380 0600  
                                 u4460 11C6                                   u1981 2406  
                                 u3741 1B76                                   u2861 0DFA  
                                 u2781 0CDE                                   u2941 074C  
                                 u4381 05FC                                   u4517 123A  
                                 u4461 11C2                                   u1990 2428  
                                 u3750 1BAA                                   u2870 0E2C  
                                 u2790 0D02                                   u2950 0760  
                                 u3910 16C6                                   u4390 0618  
                                 u4470 11D8                                   u1991 2424  
                                 u4607 2346                                   u3751 1BA6  
                                 u2871 0E28                                   u2791 0CFE  
                                 u2951 075C                                   u3911 16C2  
                                 u4391 0614                                   u4527 12F4  
                                 u4471 11D4                                   u3760 1BF4  
                                 u2960 08DA                                   u2880 0696  
                                 u3920 16DA                                   u4480 122E  
                                 u4617 1832                                   u3761 1BF0  
                                 u4537 2852                                   u2881 0692  
                                 u3921 16D6                                   u3905 168C  
                                 u4481 122A                                   u2970 0934  
                                 u2890 06A8                                   u3930 1702  
                                 u4490 1292                                   u4707 1AFC  
                                 u4627 1D9E                                   u4547 212E  
                                 u2971 0930                                   u2891 06A4  
                                 u3931 16FE                                   u4491 128E  
                                 u2980 0954                                   u3940 1722  
                                 u4717 26EE                                   u4637 1E0A  
                                 u4557 21B4                                   u2981 0950  
                                 u2965 08D0                                   u3941 171E  
                                 u2990 0966                                   u3950 1732  
                                 u4647 1920                                   u4567 223A  
                                 u2991 0962                                   u3951 172E  
                                 i2l24 2A08                                   u3960 0330  
                                 u4657 23CC                                   u4577 22C0  
                                 u3961 032C                                   u3890 1662  
                                 u3970 0340                                   u4667 1E90  
                                 u4587 1CEC                                   u3891 165E  
                                 u3971 033C                                   u3980 0350  
                                 u4677 1EBC                                   u4597 1D58  
                                 u3981 034C                                   u3990 0360  
                                 u4687 1A0E                                   u3991 035C  
                                 u4697 1CC0                                   i2l92 291C  
                                 i2l95 2AB4                                   i2l89 28F6  
    Return_Anti_Moves@anti_moves_array 000B                                   _main 10C4  
                  __end_of_AppendMoves 2968                     _YellowInstructions 20CC  
                                 fsr2h 000FDA                                   indf2 000FDF  
                                 fsr2l 000FD9                                   btemp 0057  
                                 _stop 1BF6         ??i2_init_colorclick_interrupts 0005  
                    main@initial_color 00BD                                   prodh 000FF4  
                                 prodl 000FF3                                   start 0058  
                 ?i2_color_writetoaddr 0003                        ___fldiv@new_exp 0028  
               __end_of_color_read_Red 25EE                        __end_of_HighISR 29EA  
                         ___param_bank 000000                            _turnLeft135 24D2  
                  ?_YellowInstructions 0027                            _turnRight90 1EE0  
                           _AntiYellow 1CCA                       __end_of_LED_init 2A6C  
                        ___fltol@sign1 004D                             _AppendTime 2872  
                                ?_main 0001                        __end_of___fldiv 0E40  
                      __end_of___flmul 0AA6                        __end_of___fltol 1754  
                                ?_stop 001C                        __end_of___lwdiv 2464  
                                i1l332 0048                                  i2l101 2AAA  
                                i2l104 2A82                                  i2l322 2A5A  
                                i2l340 29E6                                  i2l319 277C  
                                _TMR0H 000FD4                                  _TMR0L 000FD3  
           __end_of_I2C_2_Master_Start 2AA2                   ??_YellowInstructions 002B  
           __end_of_I2C_2_Master_Write 2A78                       _PinkInstructions 2152  
                   _int_threshold_high 00D7                                  main@b 00BA  
             __end_of_BlueInstructions 1EE0                                  tablat 000FF5  
                                plusw2 000FDB                                  ttemp5 0058  
                                ttemp6 005B                                  ttemp7 005F  
                                status 000FD8                                  wtemp8 0058  
                  detect_color@tempval 00A3                  ??i2_color_writetoaddr 0004  
              __end_of_color_read_Blue 26DE                  _I2C_2_Master_RepStart 2A84  
                 fullSpeedBackwards@mL 001C                   fullSpeedBackwards@mR 001E  
                     __end_of_AntiPink 1E2E                        ?_color_read_Red 000D  
                      __initialization 277E                           __end_of_main 132C  
                 __end_of_detect_color 067C                           __end_of_stop 1CCA  
                _LightBlueInstructions 225E                      ??_RedInstructions 002B  
  __end_of_interrupts_clear_colorclick 2A42         ?i2_interrupts_clear_colorclick 0001  
          _interrupts_clear_colorclick 2A28                                 ??_main 00B7  
                               ??_stop 0020                          __activetblptr 000000  
                         _turnRight135 2464                      _Return_Anti_Moves 2968  
                          _AppendMoves 2944                           ?_setMotorPWM 0016  
                               _CCPR1H 000FAA                                 _CCPR2H 000FA6  
                               _CCPR3H 000F25                                 _CCPR4H 000F21  
                   ?_Return_Anti_Moves 0009                                 _RC0PPS 000E62  
                               _RC4REG 000EE3                                 _RE2PPS 000E74  
                               _RD5PPS 000E6F                                 _RC7PPS 000E69  
                               _RE4PPS 000E76                                 _RD6PPS 000E70  
                               i1l3901 0036                                 i2l3031 2AA2  
                               i1l3903 0044                                 i2l3033 2AA6  
                               i2l3027 2AAC                                 i2l3035 2A7A  
                               i2l3029 2AB0                                 i2l3037 2A7E  
                               i1l3899 0026                                 i2l3189 29EC  
                               i2l2915 28F6                                 i2l2917 2906  
                               i2l3671 275C                                 i2l3663 272E  
                               i2l3911 29E2                                 i2l3673 2766  
                               i2l3665 2738                                 i2l3905 29CA  
                               i2l3675 2770                                 i2l3667 2748  
                               i2l3907 29DA                                 _RG6PPS 000E88  
                               i2l3669 2752                                 i2l3909 29DE  
                               i2l3895 2A42                              ??_HighISR 0006  
             __end_of_color_click_init 2872                                 _RX4PPS 000E15  
                               _TX4REG 000EE4                       __end_of___xxtofl 14E0  
                  ??_Return_Anti_Moves 000D                                 _LowISR 0018  
                        ??_Timer0_init 0009                           _CCPTMRS0bits 000FAD  
          AppendMoves@anti_moves_array 000B                  Return_Time@time_array 000B  
                Return_Time@time_index 0009                                 ___wmul 291E  
                            ??___fldiv 001F                              ??___flmul 0038  
                            ??___fltol 009F                              ??___lwdiv 0013  
                               clear_0 279C                                 clear_1 27A8  
                               clear_2 27B4                            ?_AntiYellow 002E  
                               isa$std 000001                            ?_AppendTime 0009  
                        ??_Return_Time 000D              __end_of_Return_Anti_Moves 298A  
                           _WhiteLight 2AB6                                 tblptrh 000FF7  
                               tblptrl 000FF6                                 tblptru 000FF8  
                               stop@mL 001C                                 stop@mR 001E  
                    ??_initDCmotorsPWM 000B             i2color_writetoaddr@address 0004  
                     __end_of_turnLeft 1A1E                           ___xxtofl@arg 0013  
                         ___xxtofl@exp 0012                           ___xxtofl@val 0009  
                        ??_Update_RGBC 0016                             __accesstop 0060  
              __end_of__initialization 27BA               __end_of_color_read_Clear 268E  
             __end_of_color_read_Green 263E                 ?_I2C_2_Master_RepStart 0001  
                        ___rparam_used 000001                              ?_LED_init 0001  
                           ___fltol@f1 0049                       ?_color_read_Blue 000D  
                    _GreenInstructions 236A                        _Interrupts_init 2A0A  
                       __pcstackCOMRAM 0001                 ?_LightBlueInstructions 002C  
                         __pidataBANK0 2ABE                     ?_GreenInstructions 0027  
                       AppendTime@temp 0009                      detect_color@color 00B3  
                  __end_of_Timer0_init 29AA                            MoveBuggy@mL 0037  
                          MoveBuggy@mR 0039                    OrangeInstructions@a 0032  
                  ??_GreenInstructions 002B                MoveBuggy@color_detected 0035  
                            ?_AntiPink 002E           ??_init_colorclick_interrupts 000D  
                  __end_of_Return_Time 283E                      __end_of_MoveBuggy 10C4  
                           __pbssBANK0 0060                             __pbssBANK1 0100  
            __end_of_GreenInstructions 23F0                             ??_LED_init 0009  
                              ?_LowISR 0001                      _color_writetoaddr 29AA  
                         _T2CLKCONbits 000FBF                           ?_turnLeft135 0027  
                  __end_of_Update_RGBC 259E                     ?_color_writetoaddr 000B  
                              ?___wmul 0009               __end_of_PinkInstructions 21D8  
                         ?_turnRight90 0022                    ??_color_writetoaddr 000C  
                            ?___xxtofl 0009                            ?_WhiteLight 0001  
                              _SP4BRGH 000EE6                                _SP4BRGL 000EE5  
                           ??_AntiPink 0032                                _SSP2ADD 000ED6  
                              _SSP2BUF 000ED5                             _color_flag 0055  
                         _detect_color 005C                __end_of_Interrupts_init 2A28  
                    ?_BlueInstructions 0027                 color_writetoaddr@value 000B  
                     ??_color_read_Red 000F                                _HighISR 0008  
            __end_of_color_writetoaddr 29CA                     WhiteInstructions@a 0044  
                   WhiteInstructions@c 0041                     ??_BlueInstructions 002B  
                      _RedInstructions 22E4                     _I2C_2_Master_Start 2A98  
                  i2_I2C_2_Master_Idle 28F6                     _I2C_2_Master_Write 2A6C  
                              __Hparam 0000                    i2_I2C_2_Master_Stop 2AA2  
                              __Lparam 0000                      color_read_Red@tmp 0012  
                          _Timer0_init 298A                    GreenInstructions@mL 0027  
                  GreenInstructions@mR 0029             __end_of_fullSpeedBackwards 1B0C  
                              ___fldiv 0AA6                                ___flmul 067C  
                              ___fltol 164C                    ?_I2C_2_Master_Start 0001  
                         turnLeft135@a 002B                                ___lwdiv 23F0  
                  ?_I2C_2_Master_Write 0001                           turnLeft90@mL 0022  
                         turnLeft90@mR 0024                                __pcinit 277E  
                              __ramtop 0E00                              ?_turnLeft 001C  
                              __ptext0 10C4                                __ptext1 203C  
                              __ptext2 005C                                __ptext3 132C  
                              __ptext4 164C                                __ptext5 067C  
                              __ptext6 0AA6                                __ptext7 283E  
                              __ptext8 28A4                                __ptext9 2AB6  
                 ?i2_I2C_2_Master_Idle 0001   __end_ofi2_init_colorclick_interrupts 277E  
         i2_init_colorclick_interrupts 272E                              _T2CONbits 000FBD  
                          _Return_Time 2806                             ??___xxtofl 000D  
                 ?i2_I2C_2_Master_Stop 0001                              _T2HLTbits 000FBE  
                       main@lost_timer 00B9                          _RxBufWriteCnt 0054  
                         ?_AppendMoves 0009                                _tmr_ovf 0075  
                 ??_I2C_2_Master_Start 000A                   ??_I2C_2_Master_Write 000A  
                       __pintcode_body 29CA                   end_of_initialization 27BA  
          __end_ofi2_color_writetoaddr 2A0A           Return_Anti_Moves@moves_index 0009  
                    RedInstructions@mL 0027                     main@color_detected 00BC  
                    RedInstructions@mR 0029                                int_func 29CA  
                          _Update_RGBC 2540                      ?_color_click_init 0001  
                         turnRight90@a 0026             __end_of_OrangeInstructions 225E  
                   ??_color_click_init 000D                              AntiPink@a 0034  
                              postdec2 000FDD                                postinc0 000FEE  
                              postinc2 000FDE                             _time_array 013C  
                           _time_index 009E                           ??_AntiYellow 0032  
                      _initDCmotorsPWM 203C                             ??_turnLeft 0020  
                         ??_AppendTime 000F                     setMotorPWM@negDuty 001B  
                ??i2_I2C_2_Master_Idle 0001                      __end_of_turnRight 1842  
                ??i2_I2C_2_Master_Stop 0002                          ___xxtofl@sign 0011  
                  YellowInstructions@a 002D                              _TRISAbits 000F81  
                   setMotorPWM@posDuty 001A                              _TRISBbits 000F82  
                            _TRISCbits 000F83                              _TRISDbits 000F84  
   __end_of_init_colorclick_interrupts 272E          ?i2_init_colorclick_interrupts 0001  
           _init_colorclick_interrupts 26DE                              _TRISEbits 000F85  
                            _TRISFbits 000F86                              _TRISGbits 000F87  
                            _TRISHbits 000F88                            ___fldiv@grs 002A  
                          ___fldiv@rem 0023                     PinkInstructions@mL 0027  
                   PinkInstructions@mR 0029                       fullSpeedAhead@mL 001C  
                     fullSpeedAhead@mR 001E                __end_of_RedInstructions 236A  
             color_writetoaddr@address 000C                ??_I2C_2_Master_RepStart 000A  
                     ?_Interrupts_init 0001                            ___flmul@grs 003D  
                          _CCP1CONbits 000FAB                      ?_color_read_Clear 000D  
                         _EUSART4RXbuf 0060                           _EUSART4TXbuf 0100  
                          _CCP2CONbits 000FA7                      ?_color_read_Green 000D  
                   __end_of_AntiYellow 1D7C                            _CCP3CONbits 000F26  
                          _CCP4CONbits 000F22                     __end_of_AppendTime 28A4  
              ??_LightBlueInstructions 0030                             main@motorL 00C5  
                           main@motorR 00CE                     ??_color_read_Clear 000F  
                   ??_color_read_Green 000F                             _turnLeft90 1F8E  
                       __end_of_LowISR 0058                 AppendMoves@moves_index 0009  
                       _fullSpeedAhead 1842                         __end_of___wmul 2944  
                      AppendMoves@temp 000E                     detect_color@dist_B 00B6  
                   detect_color@dist_G 00B5                     detect_color@dist_R 00B4  
                    _int_threshold_low 004F                    color_read_Clear@tmp 0012  
                  start_initialization 277E                          _TxBufWriteCnt 0052  
                 OrangeInstructions@mL 002C                   OrangeInstructions@mR 002E  
                Return_Anti_Moves@temp 000E                              _MoveBuggy 0E40  
                  color_read_Green@tmp 0012                               ??_LowISR 0006  
              __end_of_initDCmotorsPWM 20CC                 __end_of_fullSpeedAhead 1930  
                             ??___wmul 000D                            __pdataBANK0 00D7  
        i2I2C_2_Master_Write@data_byte 0002                      ?_PinkInstructions 0027  
                   Update_RGBC@tempval 0014                     ??_PinkInstructions 002B  
         __end_ofi2_I2C_2_Master_Start 2AB6           __end_ofi2_I2C_2_Master_Write 2A84  
                            ___fldiv@a 001B                              ___fldiv@b 0017  
                            ___flmul@a 0034                              ___flmul@b 0030  
                          __pbssCOMRAM 004F                           ??_WhiteLight 0009  
                        __pcstackBANK0 009F                   AppendTime@time_array 000D  
                 AppendTime@time_index 000B                       ?_RedInstructions 0027  
                             ?_HighISR 0001                             ?_MoveBuggy 0035  
                     ___lwdiv@dividend 000F                           ?_Timer0_init 0001  
                          ?_turnLeft90 0022                        ?_fullSpeedAhead 001C  
                   BlueInstructions@mL 0027                     BlueInstructions@mR 0029  
                            __pintcode 0008                     __end_of_WhiteLight 2ABE  
                             ?___fldiv 0017                               ?___flmul 0030  
                             ?___fltol 0049                               ?___lwdiv 000F  
                          __pintcodelo 0018           ?_interrupts_clear_colorclick 0001  
                 I2C_2_Master_Read@ack 000B                      _WhiteInstructions 1B0C  
                 I2C_2_Master_Read@tmp 000C                          ?_turnRight135 0027  
                         ?_Return_Time 0009                      _I2C_2_Master_Idle 28CE  
                   _fullSpeedBackwards 1A1E                      _I2C_2_Master_Init 28A4  
                    _I2C_2_Master_Read 27C4                     ?_WhiteInstructions 003B  
                    _I2C_2_Master_Stop 2A8E                           _RxBufReadCnt 0053  
                   GreenInstructions@a 002D                     ?_I2C_2_Master_Idle 0001  
                   ?_I2C_2_Master_Init 0001                     ?_I2C_2_Master_Read 0001  
                        ??_setMotorPWM 0018                     ?_I2C_2_Master_Stop 0001  
                     ___lwdiv@quotient 0013                            turnLeft90@a 0026  
             initDCmotorsPWM@PWMperiod 0009                LightBlueInstructions@mL 002C  
              LightBlueInstructions@mR 002E                    ?_fullSpeedBackwards 001C  
                  ??_WhiteInstructions 003F                    ??_I2C_2_Master_Idle 0009  
                  ??_I2C_2_Master_Init 0009                           ?_Update_RGBC 0014  
                  ??_I2C_2_Master_Read 000A                         ___wmul@product 000D  
                             _LATAbits 000F79                    ??_I2C_2_Master_Stop 000A  
                             _LATCbits 000F7B                               _LATDbits 000F7C  
                             _LATEbits 000F7D                               _LATFbits 000F7E  
                      Return_Time@temp 0010                               _LATGbits 000F7F  
                             _LATHbits 000F80                               _IPR0bits 000E1F  
                             _PIE0bits 000E29                               _LED_init 2A5C  
                     RedInstructions@a 002D                               _PIE4bits 000E2D  
                             i2u221_40 2906                               i2u221_41 2902  
                             i2u222_40 291C                               i2u222_41 2918  
                          turnRight@mL 001C                            turnRight@mR 001E  
                             i1u377_20 0036                               i1u377_21 0032  
                            _lost_flag 0074                               _PIR0bits 000E33  
                             _PIR4bits 000E37                               i2u472_47 273E  
                             i2u378_40 29DA                               i2u378_41 29D6  
                     ?_initDCmotorsPWM 0009                               _SSP2CON2 000EDA  
                             _SSP2STAT 000ED8                   ??_fullSpeedBackwards 0020  
            __end_of_WhiteInstructions 1BF6                     _OrangeInstructions 21D8  
                    PinkInstructions@a 002D              __end_of_I2C_2_Master_Idle 28F6  
            __end_of_I2C_2_Master_Init 28CE              __end_of_I2C_2_Master_Read 2806  
                    ___wmul@multiplier 0009                         ??_turnRight135 002B  
            __end_of_I2C_2_Master_Stop 2A98                           setMotorPWM@m 0016  
          I2C_2_Master_Write@data_byte 000A          ??_interrupts_clear_colorclick 000E  
           __end_of_YellowInstructions 2152                      ??_color_read_Blue 000F  
                  ?_OrangeInstructions 002C                           _TxBufReadCnt 0051  
          ?_init_colorclick_interrupts 0001                               _AntiPink 1D7C  
             i2color_writetoaddr@value 0003                              _turnRight 1754  
                  WhiteInstructions@mL 003B                    WhiteInstructions@mR 003D  
        __end_of_I2C_2_Master_RepStart 2A8E                     color_read_Blue@tmp 0012  
                  __end_of_setMotorPWM 164C                            ??_MoveBuggy 003B  
                 i2_I2C_2_Master_Start 2AAC                   i2_I2C_2_Master_Write 2A78  
                         AntiYellow@mL 002E                           AntiYellow@mR 0030  
                             __Hrparam 0000                   ??_OrangeInstructions 0030  
                             __Lrparam 0000          __end_of_LightBlueInstructions 22E4  
          __end_ofi2_I2C_2_Master_Idle 291E            __end_ofi2_I2C_2_Master_Stop 2AAC  
                       turnRight135@mL 0027                         turnRight135@mR 0029  
                        turnLeft135@mL 0027                          turnLeft135@mR 0029  
                           _ANSELBbits 000E9A                             _ANSELDbits 000EA7  
                             ___xxtofl 132C                             _T0CON0bits 000FD5  
                           _T0CON1bits 000FD6                        ___lwdiv@divisor 0011  
                    BlueInstructions@a 002D                        ___lwdiv@counter 0015  
                           ?_turnRight 001C                               __ptext10 1B0C  
                             __ptext11 2806                               __ptext20 2944  
                             __ptext12 2968                               __ptext21 1CCA  
                             __ptext13 0E40                               __ptext30 1930  
                             __ptext22 22E4                               __ptext14 20CC  
                             __ptext31 1BF6                               __ptext23 1EE0  
                             __ptext15 2152                               __ptext40 268E  
                             __ptext32 1A1E                               __ptext24 1754  
                             __ptext16 21D8                               __ptext41 2A84  
                             __ptext33 14E0                               __ptext25 1D7C  
                             __ptext17 2464                               __ptext50 2A8E  
                             __ptext42 27C4                               __ptext34 291E  
                             __ptext26 1842                               __ptext18 225E  
                             __ptext51 2A98                               __ptext43 298A  
                             __ptext35 23F0                               __ptext27 236A  
                             __ptext19 24D2                               __ptext60 2AA2  
                             __ptext52 28CE                               __ptext44 2A5C  
                             __ptext36 2540                               __ptext28 1E2E  
                             __ptext61 2AAC                               __ptext53 2872  
                             __ptext45 2A0A                               __ptext37 259E  
                             __ptext29 1F8E                               __ptext62 28F6  
                             __ptext46 2A28                               __ptext38 25EE  
                             __ptext47 26DE                               __ptext39 263E  
                             __ptext56 2A42                               __ptext48 29AA  
                             __ptext57 272E                               __ptext49 2A6C  
                             __ptext58 29EA                               __ptext59 2A78  
                         _SSP2CON1bits 000ED9                           _SSP2CON2bits 000EDA  
      ??i2_interrupts_clear_colorclick 0006                 LightBlueInstructions@a 0032  
                           turnLeft@mL 001C                             turnLeft@mR 001E  
                ?i2_I2C_2_Master_Start 0001                  ?i2_I2C_2_Master_Write 0001  
                        ??_turnLeft135 002B                               isa$xinst 000000  
                           _RC4STAbits 000EE7                               int$flags 0057  
                        ??_turnRight90 0026                       _BlueInstructions 1E2E  
                             _turnLeft 1930                             _INTCONbits 000FF2  
                          AntiYellow@a 0034                            _setMotorPWM 14E0  
                        ?_detect_color 00A3                          turnRight135@a 002B  
                             intlevel1 0000                               intlevel2 0000  
                        turnRight90@mL 0022                          turnRight90@mR 0024  
                     ??_fullSpeedAhead 0020                   __end_of_turnRight135 24D2  
                         ??_turnLeft90 0026                             AntiPink@mL 002E  
                           AntiPink@mR 0030                            _moves_index 0056  
                     _color_click_init 283E                    __end_of_turnLeft135 2540  
                           _SSP2DATPPS 000E1D                             _SSP2CLKPPS 000E1C  
               detect_color@lost_timer 00A5                    __end_of_turnRight90 1F8E  
                        ??_AppendMoves 000D                         ??_detect_color 00A7  
                          ??_turnRight 0020                     __end_of_turnLeft90 203C  
                           _TX4STAbits 000EE8                 ??i2_I2C_2_Master_Start 0002  
               ??i2_I2C_2_Master_Write 0002                   YellowInstructions@mL 0027  
                 YellowInstructions@mR 0029  __end_ofi2_interrupts_clear_colorclick 2A5C  
        i2_interrupts_clear_colorclick 2A42  
