

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Feb 25 13:50:53 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    65                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    66                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    67                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    68                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    69   000000                     
    70                           ; Generated 06/04/2022 GMT
    71                           ; 
    72                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    73                           ; All rights reserved.
    74                           ; 
    75                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    76                           ; 
    77                           ; Redistribution and use in source and binary forms, with or without modification, are
    78                           ; permitted provided that the following conditions are met:
    79                           ; 
    80                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    81                           ;        conditions and the following disclaimer.
    82                           ; 
    83                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    84                           ;        of conditions and the following disclaimer in the documentation and/or other
    85                           ;        materials provided with the distribution. Publication is not required when
    86                           ;        this file is used in an embedded application.
    87                           ; 
    88                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    89                           ;        software without specific prior written permission.
    90                           ; 
    91                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    92                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    93                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    94                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    95                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    96                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    97                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    98                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    99                           ; 
   100                           ; 
   101                           ; Code-generator required, PIC18F67K40 Definitions
   102                           ; 
   103                           ; SFR Addresses
   104   000000                     _LATHbits	set	3968
   105   000000                     _TX4REG	set	3812
   106   000000                     _RC4STAbits	set	3815
   107   000000                     _SP4BRGH	set	3814
   108   000000                     _TRISEbits	set	3973
   109   000000                     _TRISFbits	set	3974
   110   000000                     _TRISGbits	set	3975
   111   000000                     _SSP2CON2bits	set	3802
   112   000000                     _RX4PPS	set	3605
   113   000000                     _SSP2CLKPPS	set	3612
   114   000000                     _SSP2DATPPS	set	3613
   115   000000                     _ANSELDbits	set	3751
   116   000000                     _SSP2ADD	set	3798
   117   000000                     _SSP2CON1bits	set	3801
   118   000000                     _RC4REG	set	3811
   119   000000                     _SP4BRGL	set	3813
   120   000000                     _TX4STAbits	set	3816
   121   000000                     _BAUD4CONbits	set	3817
   122   000000                     _CCPR4H	set	3873
   123   000000                     _CCPR3H	set	3877
   124   000000                     _LATAbits	set	3961
   125   000000                     _LATGbits	set	3967
   126   000000                     _TRISAbits	set	3969
   127   000000                     _SSP2CON2	set	3802
   128   000000                     _TRISDbits	set	3972
   129   000000                     _SSP2STAT	set	3800
   130   000000                     _SSP2BUF	set	3797
   131   000000                     _IPR0bits	set	3615
   132   000000                     _PIE0bits	set	3625
   133   000000                     _PIE4bits	set	3629
   134   000000                     _PIR4bits	set	3639
   135   000000                     _RC0PPS	set	3682
   136   000000                     _RC7PPS	set	3689
   137   000000                     _RD5PPS	set	3695
   138   000000                     _RE2PPS	set	3700
   139   000000                     _RD6PPS	set	3696
   140   000000                     _CCPR2H	set	4006
   141   000000                     _CCPR1H	set	4010
   142   000000                     _T2PR	set	4028
   143   000000                     _T2CONbits	set	4029
   144   000000                     _TRISCbits	set	3971
   145   000000                     _LATCbits	set	3963
   146   000000                     _LATEbits	set	3965
   147   000000                     _LATFbits	set	3966
   148   000000                     _RE4PPS	set	3702
   149   000000                     _RG6PPS	set	3720
   150   000000                     _TMR0L	set	4051
   151   000000                     _TMR0H	set	4052
   152   000000                     _T0CON0bits	set	4053
   153   000000                     _T0CON1bits	set	4054
   154   000000                     _T2CLKCONbits	set	4031
   155   000000                     _T2HLTbits	set	4030
   156   000000                     _CCP1CONbits	set	4011
   157   000000                     _CCPTMRS0bits	set	4013
   158   000000                     _CCP2CONbits	set	4007
   159   000000                     _CCP3CONbits	set	3878
   160   000000                     _CCP4CONbits	set	3874
   161   000000                     _PIR0bits	set	3635
   162   000000                     _INTCONbits	set	4082
   163                           
   164                           	psect	smallconst
   165   000E00                     __psmallconst:
   166                           	callstack 0
   167   000E00  00                 	db	0
   168   000E01                     STR_1:
   169   000E01  0A                 	db	10
   170   000E02  52                 	db	82	;'R'
   171   000E03  47                 	db	71	;'G'
   172   000E04  42                 	db	66	;'B'
   173   000E05  43                 	db	67	;'C'
   174   000E06  20                 	db	32
   175   000E07  3D                 	db	61	;'='
   176   000E08  20                 	db	32
   177   000E09  25                 	db	37
   178   000E0A  30                 	db	48	;'0'
   179   000E0B  35                 	db	53	;'5'
   180   000E0C  64                 	db	100	;'d'
   181   000E0D  20                 	db	32
   182   000E0E  25                 	db	37
   183   000E0F  30                 	db	48	;'0'
   184   000E10  35                 	db	53	;'5'
   185   000E11  64                 	db	100	;'d'
   186   000E12  20                 	db	32
   187   000E13  25                 	db	37
   188   000E14  30                 	db	48	;'0'
   189   000E15  35                 	db	53	;'5'
   190   000E16  64                 	db	100	;'d'
   191   000E17  20                 	db	32
   192   000E18  25                 	db	37
   193   000E19  30                 	db	48	;'0'
   194   000E1A  35                 	db	53	;'5'
   195   000E1B  64                 	db	100	;'d'
   196   000E1C  0A                 	db	10
   197   000E1D  00                 	db	0
   198   000E1E  00                 	db	0	; dummy byte at the end
   199   000000                     
   200                           ; #config settings
   201                           
   202                           	psect	cinit
   203   001F2C                     __pcinit:
   204                           	callstack 0
   205   001F2C                     start_initialization:
   206                           	callstack 0
   207   001F2C                     __initialization:
   208                           	callstack 0
   209                           
   210                           ; Clear objects allocated to BANK5 (60 bytes)
   211   001F2C  EE05  F000         	lfsr	0,__pbssBANK5
   212   001F30  0E3C               	movlw	60
   213   001F32                     clear_0:
   214   001F32  6AEE               	clrf	postinc0,c
   215   001F34  06E8               	decf	wreg,f,c
   216   001F36  E1FD               	bnz	clear_0
   217                           
   218                           ; Clear objects allocated to BANK1 (32 bytes)
   219   001F38  EE01  F0D0         	lfsr	0,__pbssBANK1
   220   001F3C  0E20               	movlw	32
   221   001F3E                     clear_1:
   222   001F3E  6AEE               	clrf	postinc0,c
   223   001F40  06E8               	decf	wreg,f,c
   224   001F42  E1FD               	bnz	clear_1
   225                           
   226                           ; Clear objects allocated to BANK0 (21 bytes)
   227   001F44  EE00  F0E6         	lfsr	0,__pbssBANK0
   228   001F48  0E15               	movlw	21
   229   001F4A                     clear_2:
   230   001F4A  6AEE               	clrf	postinc0,c
   231   001F4C  06E8               	decf	wreg,f,c
   232   001F4E  E1FD               	bnz	clear_2
   233                           
   234                           ; Clear objects allocated to COMRAM (9 bytes)
   235   001F50  EE00  F04D         	lfsr	0,__pbssCOMRAM
   236   001F54  0E09               	movlw	9
   237   001F56                     clear_3:
   238   001F56  6AEE               	clrf	postinc0,c
   239   001F58  06E8               	decf	wreg,f,c
   240   001F5A  E1FD               	bnz	clear_3
   241   001F5C                     end_of_initialization:
   242                           	callstack 0
   243   001F5C                     __end_of__initialization:
   244                           	callstack 0
   245   001F5C  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   246   001F5E  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   247   001F60  0100               	movlb	0
   248   001F62  EFC7  F009         	goto	_main	;jump to C main() function
   249                           
   250                           	psect	bssCOMRAM
   251   00004D                     __pbssCOMRAM:
   252                           	callstack 0
   253   00004D                     _width:
   254                           	callstack 0
   255   00004D                     	ds	2
   256   00004F                     _prec:
   257                           	callstack 0
   258   00004F                     	ds	2
   259   000051                     _flags:
   260                           	callstack 0
   261   000051                     	ds	1
   262   000052                     _TxBufReadCnt:
   263                           	callstack 0
   264   000052                     	ds	1
   265   000053                     _TxBufWriteCnt:
   266                           	callstack 0
   267   000053                     	ds	1
   268   000054                     _RxBufReadCnt:
   269                           	callstack 0
   270   000054                     	ds	1
   271   000055                     _RxBufWriteCnt:
   272                           	callstack 0
   273   000055                     	ds	1
   274                           
   275                           	psect	bssBANK0
   276   0000E6                     __pbssBANK0:
   277                           	callstack 0
   278   0000E6                     _EUSART4RXbuf:
   279                           	callstack 0
   280   0000E6                     	ds	20
   281   0000FA                     _tmr_ovf:
   282                           	callstack 0
   283   0000FA                     	ds	1
   284                           
   285                           	psect	bssBANK1
   286   0001D0                     __pbssBANK1:
   287                           	callstack 0
   288   0001D0                     _dbuf:
   289                           	callstack 0
   290   0001D0                     	ds	32
   291                           
   292                           	psect	bssBANK5
   293   000500                     __pbssBANK5:
   294                           	callstack 0
   295   000500                     _EUSART4TXbuf:
   296                           	callstack 0
   297   000500                     	ds	60
   298                           
   299                           	psect	cstackBANK4
   300   000400                     __pcstackBANK4:
   301                           	callstack 0
   302   000400                     main@readingsC:
   303                           	callstack 0
   304                           
   305                           ; 200 bytes @ 0x0
   306   000400                     	ds	200
   307                           
   308                           	psect	cstackBANK3
   309   000300                     __pcstackBANK3:
   310                           	callstack 0
   311   000300                     main@readingsB:
   312                           	callstack 0
   313                           
   314                           ; 200 bytes @ 0x0
   315   000300                     	ds	200
   316                           
   317                           	psect	cstackBANK2
   318   000200                     __pcstackBANK2:
   319                           	callstack 0
   320   000200                     main@readingsG:
   321                           	callstack 0
   322                           
   323                           ; 200 bytes @ 0x0
   324   000200                     	ds	200
   325                           
   326                           	psect	cstackBANK1
   327   000100                     __pcstackBANK1:
   328                           	callstack 0
   329   000100                     main@readingsR:
   330                           	callstack 0
   331                           
   332                           ; 200 bytes @ 0x0
   333   000100                     	ds	200
   334   0001C8                     main@initial_color:
   335                           	callstack 0
   336                           
   337                           ; 8 bytes @ 0xC8
   338   0001C8                     	ds	8
   339                           
   340                           	psect	cstackBANK0
   341   000060                     __pcstackBANK0:
   342                           	callstack 0
   343   000060                     vfpfcnvrt@fp:
   344                           	callstack 0
   345                           
   346                           ; 2 bytes @ 0x0
   347   000060                     	ds	2
   348   000062                     vfpfcnvrt@fmt:
   349                           	callstack 0
   350                           
   351                           ; 2 bytes @ 0x2
   352   000062                     	ds	2
   353   000064                     vfpfcnvrt@ap:
   354                           	callstack 0
   355                           
   356                           ; 2 bytes @ 0x4
   357   000064                     	ds	2
   358   000066                     vfpfcnvrt@convarg:
   359                           	callstack 0
   360                           
   361                           ; 8 bytes @ 0x6
   362   000066                     	ds	8
   363   00006E                     vfpfcnvrt@done:
   364                           	callstack 0
   365                           
   366                           ; 2 bytes @ 0xE
   367   00006E                     	ds	2
   368   000070                     vfpfcnvrt@cp:
   369                           	callstack 0
   370                           
   371                           ; 2 bytes @ 0x10
   372   000070                     	ds	2
   373   000072                     ?_vfprintf:
   374                           	callstack 0
   375   000072                     vfprintf@fp:
   376                           	callstack 0
   377                           
   378                           ; 2 bytes @ 0x12
   379   000072                     	ds	2
   380   000074                     vfprintf@fmt:
   381                           	callstack 0
   382                           
   383                           ; 2 bytes @ 0x14
   384   000074                     	ds	2
   385   000076                     vfprintf@ap:
   386                           	callstack 0
   387                           
   388                           ; 2 bytes @ 0x16
   389   000076                     	ds	2
   390   000078                     ?_sprintf:
   391                           	callstack 0
   392   000078                     sprintf@s:
   393                           	callstack 0
   394                           
   395                           ; 2 bytes @ 0x18
   396   000078                     	ds	2
   397   00007A                     sprintf@fmt:
   398                           	callstack 0
   399                           
   400                           ; 2 bytes @ 0x1A
   401   00007A                     	ds	10
   402   000084                     sprintf@ap:
   403                           	callstack 0
   404                           
   405                           ; 2 bytes @ 0x24
   406   000084                     	ds	2
   407   000086                     sprintf@f:
   408                           	callstack 0
   409                           
   410                           ; 11 bytes @ 0x26
   411   000086                     	ds	11
   412   000091                     ??_main:
   413                           
   414                           ; 1 bytes @ 0x31
   415   000091                     	ds	2
   416   000093                     main@string:
   417                           	callstack 0
   418                           
   419                           ; 40 bytes @ 0x33
   420   000093                     	ds	40
   421   0000BB                     main@string2:
   422                           	callstack 0
   423                           
   424                           ; 40 bytes @ 0x5B
   425   0000BB                     	ds	40
   426   0000E3                     main@cont:
   427                           	callstack 0
   428                           
   429                           ; 1 bytes @ 0x83
   430   0000E3                     	ds	1
   431   0000E4                     main@i:
   432                           	callstack 0
   433                           
   434                           ; 1 bytes @ 0x84
   435   0000E4                     	ds	1
   436   0000E5                     main@a:
   437                           	callstack 0
   438                           
   439                           ; 1 bytes @ 0x85
   440   0000E5                     	ds	1
   441                           
   442                           	psect	cstackCOMRAM
   443   000001                     __pcstackCOMRAM:
   444                           	callstack 0
   445   000001                     ??_getCharFromTxBuf:
   446   000001                     putCharToRxBuf@byte:
   447                           	callstack 0
   448   000001                     
   449                           ; 1 bytes @ 0x0
   450   000001                     	ds	2
   451   000003                     ??_HighISR:
   452                           
   453                           ; 1 bytes @ 0x2
   454   000003                     	ds	2
   455   000005                     HighISR@a:
   456                           	callstack 0
   457                           
   458                           ; 1 bytes @ 0x4
   459   000005                     	ds	1
   460   000006                     ??_LowISR:
   461                           
   462                           ; 1 bytes @ 0x5
   463   000006                     	ds	4
   464   00000A                     ??_I2C_2_Master_Idle:
   465   00000A                     ??_getCharFromRxBuf:
   466   00000A                     ?_isdigit:
   467                           	callstack 0
   468   00000A                     ?_isspace:
   469                           	callstack 0
   470   00000A                     ?___wmul:
   471                           	callstack 0
   472   00000A                     ?___aodiv:
   473                           	callstack 0
   474   00000A                     ?___aomod:
   475                           	callstack 0
   476   00000A                     putCharToTxBuf@byte:
   477                           	callstack 0
   478   00000A                     ___wmul@multiplier:
   479                           	callstack 0
   480   00000A                     isdigit@c:
   481                           	callstack 0
   482   00000A                     isspace@c:
   483                           	callstack 0
   484   00000A                     fputc@c:
   485                           	callstack 0
   486   00000A                     ___aodiv@dividend:
   487                           	callstack 0
   488   00000A                     ___aomod@dividend:
   489                           	callstack 0
   490                           
   491                           ; 8 bytes @ 0x9
   492   00000A                     	ds	1
   493   00000B                     ??_I2C_2_Master_Read:
   494   00000B                     I2C_2_Master_Write@data_byte:
   495                           	callstack 0
   496   00000B                     TxBufferedString@string:
   497                           	callstack 0
   498                           
   499                           ; 2 bytes @ 0xA
   500   00000B                     	ds	1
   501   00000C                     ??_isdigit:
   502   00000C                     ??_isspace:
   503   00000C                     color_writetoaddr@value:
   504                           	callstack 0
   505   00000C                     I2C_2_Master_Read@ack:
   506                           	callstack 0
   507   00000C                     ___wmul@multiplicand:
   508                           	callstack 0
   509   00000C                     fputc@fp:
   510                           	callstack 0
   511                           
   512                           ; 2 bytes @ 0xB
   513   00000C                     	ds	1
   514   00000D                     color_writetoaddr@address:
   515                           	callstack 0
   516   00000D                     I2C_2_Master_Read@tmp:
   517                           	callstack 0
   518                           
   519                           ; 1 bytes @ 0xC
   520   00000D                     	ds	1
   521   00000E                     ??_fputc:
   522   00000E                     ??_color_click_init:
   523   00000E                     ?_color_read_Red:
   524                           	callstack 0
   525   00000E                     ?_color_read_Green:
   526                           	callstack 0
   527   00000E                     ?_color_read_Blue:
   528                           	callstack 0
   529   00000E                     ?_color_read_Clear:
   530                           	callstack 0
   531   00000E                     _isspace$2347:
   532                           	callstack 0
   533   00000E                     ___wmul@product:
   534                           	callstack 0
   535                           
   536                           ; 2 bytes @ 0xD
   537   00000E                     	ds	2
   538   000010                     ??_color_read_Red:
   539   000010                     ??_color_read_Green:
   540   000010                     ??_color_read_Blue:
   541   000010                     ??_color_read_Clear:
   542   000010                     ?_atoi:
   543                           	callstack 0
   544   000010                     atoi@s:
   545                           	callstack 0
   546                           
   547                           ; 2 bytes @ 0xF
   548   000010                     	ds	2
   549   000012                     ??_atoi:
   550   000012                     ___aodiv@divisor:
   551                           	callstack 0
   552   000012                     ___aomod@divisor:
   553                           	callstack 0
   554                           
   555                           ; 8 bytes @ 0x11
   556   000012                     	ds	1
   557   000013                     color_read_Red@tmp:
   558                           	callstack 0
   559   000013                     color_read_Green@tmp:
   560                           	callstack 0
   561   000013                     color_read_Blue@tmp:
   562                           	callstack 0
   563   000013                     color_read_Clear@tmp:
   564                           	callstack 0
   565   000013                     fputs@s:
   566                           	callstack 0
   567                           
   568                           ; 2 bytes @ 0x12
   569   000013                     	ds	2
   570   000015                     Update_RGBC@tempval:
   571                           	callstack 0
   572   000015                     atoi@neg:
   573                           	callstack 0
   574   000015                     fputs@fp:
   575                           	callstack 0
   576                           
   577                           ; 2 bytes @ 0x14
   578   000015                     	ds	2
   579   000017                     fputs@c:
   580                           	callstack 0
   581   000017                     atoi@n:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0x16
   585   000017                     	ds	1
   586   000018                     fputs@i:
   587                           	callstack 0
   588                           
   589                           ; 2 bytes @ 0x17
   590   000018                     	ds	2
   591   00001A                     ___aodiv@counter:
   592                           	callstack 0
   593   00001A                     ___aomod@counter:
   594                           	callstack 0
   595   00001A                     pad@fp:
   596                           	callstack 0
   597                           
   598                           ; 2 bytes @ 0x19
   599   00001A                     	ds	1
   600   00001B                     ___aodiv@sign:
   601                           	callstack 0
   602   00001B                     ___aomod@sign:
   603                           	callstack 0
   604                           
   605                           ; 1 bytes @ 0x1A
   606   00001B                     	ds	1
   607   00001C                     ?_abs:
   608                           	callstack 0
   609   00001C                     pad@buf:
   610                           	callstack 0
   611   00001C                     abs@a:
   612                           	callstack 0
   613   00001C                     ___aodiv@quotient:
   614                           	callstack 0
   615                           
   616                           ; 8 bytes @ 0x1B
   617   00001C                     	ds	2
   618   00001E                     ??_abs:
   619   00001E                     pad@p:
   620                           	callstack 0
   621                           
   622                           ; 2 bytes @ 0x1D
   623   00001E                     	ds	2
   624   000020                     ??_pad:
   625                           
   626                           ; 1 bytes @ 0x1F
   627   000020                     	ds	1
   628   000021                     pad@i:
   629                           	callstack 0
   630                           
   631                           ; 2 bytes @ 0x20
   632   000021                     	ds	2
   633   000023                     pad@w:
   634                           	callstack 0
   635                           
   636                           ; 2 bytes @ 0x22
   637   000023                     	ds	2
   638   000025                     dtoa@fp:
   639                           	callstack 0
   640                           
   641                           ; 2 bytes @ 0x24
   642   000025                     	ds	2
   643   000027                     dtoa@d:
   644                           	callstack 0
   645                           
   646                           ; 8 bytes @ 0x26
   647   000027                     	ds	8
   648   00002F                     ??_dtoa:
   649                           
   650                           ; 1 bytes @ 0x2E
   651   00002F                     	ds	8
   652   000037                     _dtoa$2298:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0x36
   656   000037                     	ds	2
   657   000039                     dtoa@p:
   658                           	callstack 0
   659                           
   660                           ; 2 bytes @ 0x38
   661   000039                     	ds	2
   662   00003B                     dtoa@w:
   663                           	callstack 0
   664                           
   665                           ; 2 bytes @ 0x3A
   666   00003B                     	ds	2
   667   00003D                     dtoa@n:
   668                           	callstack 0
   669                           
   670                           ; 8 bytes @ 0x3C
   671   00003D                     	ds	8
   672   000045                     dtoa@s:
   673                           	callstack 0
   674                           
   675                           ; 1 bytes @ 0x44
   676   000045                     	ds	1
   677   000046                     dtoa@i:
   678                           	callstack 0
   679                           
   680                           ; 2 bytes @ 0x45
   681   000046                     	ds	2
   682   000048                     ??_vfpfcnvrt:
   683                           
   684                           ; 1 bytes @ 0x47
   685   000048                     	ds	3
   686   00004B                     vfprintf@cfmt:
   687                           	callstack 0
   688                           
   689                           ; 2 bytes @ 0x4A
   690   00004B                     	ds	2
   691   00004D                     
   692                           ; 1 bytes @ 0x4C
   693 ;;
   694 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   695 ;;
   696 ;; *************** function _main *****************
   697 ;; Defined at:
   698 ;;		line 20 in file "main_calibration.c"
   699 ;; Parameters:    Size  Location     Type
   700 ;;		None
   701 ;; Auto vars:     Size  Location     Type
   702 ;;  string         40   51[BANK0 ] unsigned char [40]
   703 ;;  string2        40   91[BANK0 ] unsigned char [40]
   704 ;;  i               1  132[BANK0 ] unsigned char 
   705 ;;  cont            1  131[BANK0 ] unsigned char 
   706 ;;  readingsC     200    0[BANK4 ] int [100]
   707 ;;  readingsB     200    0[BANK3 ] int [100]
   708 ;;  readingsG     200    0[BANK2 ] int [100]
   709 ;;  readingsR     200    0[BANK1 ] int [100]
   710 ;;  initial_colo    8  200[BANK1 ] struct RGB_val
   711 ;;  a               1  133[BANK0 ] unsigned char 
   712 ;; Return value:  Size  Location     Type
   713 ;;                  1    wreg      void 
   714 ;; Registers used:
   715 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   716 ;; Tracked objects:
   717 ;;		On entry : 0/0
   718 ;;		On exit  : 0/0
   719 ;;		Unchanged: 0/0
   720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   722 ;;      Locals:         0      83     208     200     200     200       0       0       0       0       0       0       
      +0       0       0
   723 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   724 ;;      Totals:         0      85     208     200     200     200       0       0       0       0       0       0       
      +0       0       0
   725 ;;Total ram usage:      893 bytes
   726 ;; Hardware stack levels required when called: 11
   727 ;; This function calls:
   728 ;;		_Interrupts_init
   729 ;;		_LED_init
   730 ;;		_Timer0_init
   731 ;;		_TxBufferedString
   732 ;;		_Update_RGBC
   733 ;;		_WhiteLight
   734 ;;		_color_click_init
   735 ;;		_getCharFromRxBuf
   736 ;;		_initUSART4
   737 ;;		_isDataInRxBuf
   738 ;;		_sendTxBuf
   739 ;;		_sprintf
   740 ;; This function is called by:
   741 ;;		Startup code after reset
   742 ;; This function uses a non-reentrant model
   743 ;;
   744                           
   745                           	psect	text0
   746   00138E                     __ptext0:
   747                           	callstack 0
   748   00138E                     _main:
   749                           	callstack 20
   750   00138E                     
   751                           ;main_calibration.c: 23:     RGB_val initial_color;;main_calibration.c: 24:     initial_
      +                          color.R = 0;
   752   00138E  0E00               	movlw	0
   753   001390  0101               	movlb	1	; () banked
   754   001392  6FC9               	movwf	(main@initial_color+1)& (0+255),b
   755   001394  0E00               	movlw	0
   756   001396  6FC8               	movwf	main@initial_color& (0+255),b
   757                           
   758                           ;main_calibration.c: 25:     initial_color.G = 0;
   759   001398  0E00               	movlw	0
   760   00139A  6FCB               	movwf	(main@initial_color+3)& (0+255),b
   761   00139C  0E00               	movlw	0
   762   00139E  6FCA               	movwf	(main@initial_color+2)& (0+255),b
   763                           
   764                           ;main_calibration.c: 26:     initial_color.B = 0;
   765   0013A0  0E00               	movlw	0
   766   0013A2  6FCD               	movwf	(main@initial_color+5)& (0+255),b
   767   0013A4  0E00               	movlw	0
   768   0013A6  6FCC               	movwf	(main@initial_color+4)& (0+255),b
   769                           
   770                           ;main_calibration.c: 27:     initial_color.C = 0;
   771   0013A8  0E00               	movlw	0
   772   0013AA  6FCF               	movwf	(main@initial_color+7)& (0+255),b
   773   0013AC  0E00               	movlw	0
   774   0013AE  6FCE               	movwf	(main@initial_color+6)& (0+255),b
   775   0013B0                     
   776                           ; BSR set to: 1
   777                           ;main_calibration.c: 29:     LED_init();
   778   0013B0  EC0E  F011         	call	_LED_init	;wreg free
   779   0013B4                     
   780                           ;main_calibration.c: 30:     color_click_init();
   781   0013B4  ECB3  F00F         	call	_color_click_init	;wreg free
   782   0013B8                     
   783                           ;main_calibration.c: 31:     Interrupts_init();
   784   0013B8  ECED  F010         	call	_Interrupts_init	;wreg free
   785   0013BC                     
   786                           ;main_calibration.c: 32:     initUSART4();
   787   0013BC  ECAD  F010         	call	_initUSART4	;wreg free
   788   0013C0                     
   789                           ;main_calibration.c: 33:     Timer0_init();
   790   0013C0  EC9D  F010         	call	_Timer0_init	;wreg free
   791   0013C4                     
   792                           ;main_calibration.c: 35:     char a = 0;
   793   0013C4  0E00               	movlw	0
   794   0013C6  0100               	movlb	0	; () banked
   795   0013C8  6FE5               	movwf	main@a& (0+255),b
   796   0013CA                     l3251:
   797                           
   798                           ;main_calibration.c: 42:         WhiteLight();
   799   0013CA  EC0A  F011         	call	_WhiteLight	;wreg free
   800   0013CE                     
   801                           ;main_calibration.c: 43:         Update_RGBC(&initial_color);
   802   0013CE  0EC8               	movlw	low main@initial_color
   803   0013D0  6E15               	movwf	Update_RGBC@tempval^0,c
   804   0013D2  0E01               	movlw	high main@initial_color
   805   0013D4  6E16               	movwf	(Update_RGBC@tempval+1)^0,c
   806   0013D6  ECBE  F00D         	call	_Update_RGBC	;wreg free
   807                           
   808                           ;main_calibration.c: 46:         while(tmr_ovf==1 && a<100){
   809   0013DA  EF22  F00A         	goto	l3261
   810   0013DE                     l3255:
   811                           
   812                           ; BSR set to: 0
   813                           ;main_calibration.c: 47:             readingsR[a] = initial_color.R;
   814   0013DE  51E5               	movf	main@a& (0+255),w,b
   815   0013E0  0D02               	mullw	2
   816   0013E2  0E00               	movlw	low main@readingsR
   817   0013E4  24F3               	addwf	243,w,c
   818   0013E6  6ED9               	movwf	fsr2l,c
   819   0013E8  0E01               	movlw	high main@readingsR
   820   0013EA  20F4               	addwfc	prodh,w,c
   821   0013EC  6EDA               	movwf	fsr2h,c
   822   0013EE  C1C8  FFDE         	movff	main@initial_color,postinc2
   823   0013F2  C1C9  FFDD         	movff	main@initial_color+1,postdec2
   824                           
   825                           ;main_calibration.c: 48:             readingsG[a] = initial_color.G;
   826   0013F6  51E5               	movf	main@a& (0+255),w,b
   827   0013F8  0D02               	mullw	2
   828   0013FA  0E00               	movlw	low main@readingsG
   829   0013FC  24F3               	addwf	243,w,c
   830   0013FE  6ED9               	movwf	fsr2l,c
   831   001400  0E02               	movlw	high main@readingsG
   832   001402  20F4               	addwfc	prodh,w,c
   833   001404  6EDA               	movwf	fsr2h,c
   834   001406  C1CA  FFDE         	movff	main@initial_color+2,postinc2
   835   00140A  C1CB  FFDD         	movff	main@initial_color+3,postdec2
   836                           
   837                           ;main_calibration.c: 49:             readingsB[a] = initial_color.B;
   838   00140E  51E5               	movf	main@a& (0+255),w,b
   839   001410  0D02               	mullw	2
   840   001412  0E00               	movlw	low main@readingsB
   841   001414  24F3               	addwf	243,w,c
   842   001416  6ED9               	movwf	fsr2l,c
   843   001418  0E03               	movlw	high main@readingsB
   844   00141A  20F4               	addwfc	prodh,w,c
   845   00141C  6EDA               	movwf	fsr2h,c
   846   00141E  C1CC  FFDE         	movff	main@initial_color+4,postinc2
   847   001422  C1CD  FFDD         	movff	main@initial_color+5,postdec2
   848                           
   849                           ;main_calibration.c: 50:             readingsC[a] = initial_color.C;
   850   001426  51E5               	movf	main@a& (0+255),w,b
   851   001428  0D02               	mullw	2
   852   00142A  0E00               	movlw	low main@readingsC
   853   00142C  24F3               	addwf	243,w,c
   854   00142E  6ED9               	movwf	fsr2l,c
   855   001430  0E04               	movlw	high main@readingsC
   856   001432  20F4               	addwfc	prodh,w,c
   857   001434  6EDA               	movwf	fsr2h,c
   858   001436  C1CE  FFDE         	movff	main@initial_color+6,postinc2
   859   00143A  C1CF  FFDD         	movff	main@initial_color+7,postdec2
   860   00143E                     
   861                           ; BSR set to: 0
   862                           ;main_calibration.c: 51:             a++;
   863   00143E  2BE5               	incf	main@a& (0+255),f,b
   864   001440                     
   865                           ; BSR set to: 0
   866                           ;main_calibration.c: 52:             tmr_ovf = 0;
   867   001440  0E00               	movlw	0
   868   001442  6FFA               	movwf	_tmr_ovf& (0+255),b
   869   001444                     l3261:
   870                           
   871                           ;main_calibration.c: 46:         while(tmr_ovf==1 && a<100){
   872   001444  0100               	movlb	0	; () banked
   873   001446  05FA               	decf	_tmr_ovf& (0+255),w,b
   874   001448  A4D8               	btfss	status,2,c
   875   00144A  EF29  F00A         	goto	u2471
   876   00144E  EF2B  F00A         	goto	u2470
   877   001452                     u2471:
   878   001452  EF33  F00A         	goto	l3265
   879   001456                     u2470:
   880   001456                     
   881                           ; BSR set to: 0
   882   001456  0E63               	movlw	99
   883   001458  65E5               	cpfsgt	main@a& (0+255),b
   884   00145A  EF31  F00A         	goto	u2481
   885   00145E  EF33  F00A         	goto	u2480
   886   001462                     u2481:
   887   001462  EFEF  F009         	goto	l3255
   888   001466                     u2480:
   889   001466                     l3265:
   890                           
   891                           ; BSR set to: 0
   892                           ;main_calibration.c: 56:         char cont = 0x00;
   893   001466  0E00               	movlw	0
   894   001468  6FE3               	movwf	main@cont& (0+255),b
   895                           
   896                           ;main_calibration.c: 58:         while(isDataInRxBuf()){
   897   00146A  EF3B  F00A         	goto	l3269
   898   00146E                     l3267:
   899                           
   900                           ;main_calibration.c: 60:             cont = getCharFromRxBuf();
   901   00146E  ECFB  F00F         	call	_getCharFromRxBuf	;wreg free
   902   001472  0100               	movlb	0	; () banked
   903   001474  6FE3               	movwf	main@cont& (0+255),b
   904   001476                     l3269:
   905                           
   906                           ; BSR set to: 0
   907                           ;main_calibration.c: 58:         while(isDataInRxBuf()){
   908   001476  ECD5  F010         	call	_isDataInRxBuf	;wreg free
   909   00147A  0900               	iorlw	0
   910   00147C  A4D8               	btfss	status,2,c
   911   00147E  EF43  F00A         	goto	u2491
   912   001482  EF45  F00A         	goto	u2490
   913   001486                     u2491:
   914   001486  EF37  F00A         	goto	l3267
   915   00148A                     u2490:
   916   00148A                     
   917                           ;main_calibration.c: 65:         if(cont == 0x10){
   918   00148A  0E10               	movlw	16
   919   00148C  0100               	movlb	0	; () banked
   920   00148E  19E3               	xorwf	main@cont& (0+255),w,b
   921   001490  A4D8               	btfss	status,2,c
   922   001492  EF4D  F00A         	goto	u2501
   923   001496  EF4F  F00A         	goto	u2500
   924   00149A                     u2501:
   925   00149A  EFB1  F00A         	goto	l3289
   926   00149E                     u2500:
   927   00149E                     
   928                           ; BSR set to: 0
   929                           ;main_calibration.c: 66:             unsigned char i;;main_calibration.c: 67:           
      +                            for(i=0;i<a;i++){
   930   00149E  0E00               	movlw	0
   931   0014A0  6FE4               	movwf	main@i& (0+255),b
   932   0014A2  EFA4  F00A         	goto	l3285
   933   0014A6                     l3275:
   934                           
   935                           ; BSR set to: 0
   936                           ;main_calibration.c: 69:                 char string[40];;main_calibration.c: 70:       
      +                                    sprintf(string,"\nRGBC = %05d %05d %05d %05d\n",readingsR[i],readingsG[i],read
      +                          ingsB[i],readingsC[i]);
   937   0014A6  0E93               	movlw	low main@string
   938   0014A8  6F78               	movwf	sprintf@s& (0+255),b
   939   0014AA  0E00               	movlw	high main@string
   940   0014AC  6F79               	movwf	(sprintf@s+1)& (0+255),b
   941   0014AE  0E01               	movlw	low STR_1
   942   0014B0  6F7A               	movwf	sprintf@fmt& (0+255),b
   943   0014B2  0E0E               	movlw	high STR_1
   944   0014B4  6F7B               	movwf	(sprintf@fmt+1)& (0+255),b
   945   0014B6  51E4               	movf	main@i& (0+255),w,b
   946   0014B8  0D02               	mullw	2
   947   0014BA  0E00               	movlw	low main@readingsR
   948   0014BC  24F3               	addwf	243,w,c
   949   0014BE  6ED9               	movwf	fsr2l,c
   950   0014C0  0E01               	movlw	high main@readingsR
   951   0014C2  20F4               	addwfc	prodh,w,c
   952   0014C4  6EDA               	movwf	fsr2h,c
   953   0014C6  CFDE F07C          	movff	postinc2,?_sprintf+4
   954   0014CA  CFDD F07D          	movff	postdec2,?_sprintf+5
   955   0014CE  51E4               	movf	main@i& (0+255),w,b
   956   0014D0  0D02               	mullw	2
   957   0014D2  0E00               	movlw	low main@readingsG
   958   0014D4  24F3               	addwf	243,w,c
   959   0014D6  6ED9               	movwf	fsr2l,c
   960   0014D8  0E02               	movlw	high main@readingsG
   961   0014DA  20F4               	addwfc	prodh,w,c
   962   0014DC  6EDA               	movwf	fsr2h,c
   963   0014DE  CFDE F07E          	movff	postinc2,?_sprintf+6
   964   0014E2  CFDD F07F          	movff	postdec2,?_sprintf+7
   965   0014E6  51E4               	movf	main@i& (0+255),w,b
   966   0014E8  0D02               	mullw	2
   967   0014EA  0E00               	movlw	low main@readingsB
   968   0014EC  24F3               	addwf	243,w,c
   969   0014EE  6ED9               	movwf	fsr2l,c
   970   0014F0  0E03               	movlw	high main@readingsB
   971   0014F2  20F4               	addwfc	prodh,w,c
   972   0014F4  6EDA               	movwf	fsr2h,c
   973   0014F6  CFDE F080          	movff	postinc2,?_sprintf+8
   974   0014FA  CFDD F081          	movff	postdec2,?_sprintf+9
   975   0014FE  51E4               	movf	main@i& (0+255),w,b
   976   001500  0D02               	mullw	2
   977   001502  0E00               	movlw	low main@readingsC
   978   001504  24F3               	addwf	243,w,c
   979   001506  6ED9               	movwf	fsr2l,c
   980   001508  0E04               	movlw	high main@readingsC
   981   00150A  20F4               	addwfc	prodh,w,c
   982   00150C  6EDA               	movwf	fsr2h,c
   983   00150E  CFDE F082          	movff	postinc2,?_sprintf+10
   984   001512  CFDD F083          	movff	postdec2,?_sprintf+11
   985   001516  EC47  F00E         	call	_sprintf	;wreg free
   986   00151A                     
   987                           ;main_calibration.c: 71:                 TxBufferedString(string);
   988   00151A  0E93               	movlw	low main@string
   989   00151C  6E0B               	movwf	TxBufferedString@string^0,c
   990   00151E  0E00               	movlw	high main@string
   991   001520  6E0C               	movwf	(TxBufferedString@string+1)^0,c
   992   001522  ECCD  F00F         	call	_TxBufferedString	;wreg free
   993   001526                     
   994                           ;main_calibration.c: 73:                 sendTxBuf();
   995   001526  ECBC  F010         	call	_sendTxBuf	;wreg free
   996   00152A                     
   997                           ;main_calibration.c: 74:                 _delay((unsigned long)((250)*(64000000/4000.0))
      +                          );
   998   00152A  0E15               	movlw	21
   999   00152C  0100               	movlb	0	; () banked
  1000   00152E  6F92               	movwf	(??_main+1)& (0+255),b
  1001   001530  0E4B               	movlw	75
  1002   001532  6F91               	movwf	??_main& (0+255),b
  1003   001534  0EBE               	movlw	190
  1004   001536                     u2537:
  1005   001536  2EE8               	decfsz	wreg,f,c
  1006   001538  D7FE               	bra	u2537
  1007   00153A  2F91               	decfsz	??_main& (0+255),f,b
  1008   00153C  D7FC               	bra	u2537
  1009   00153E  2F92               	decfsz	(??_main+1)& (0+255),f,b
  1010   001540  D7FA               	bra	u2537
  1011   001542  F000               	nop	
  1012   001544                     
  1013                           ;main_calibration.c: 75:             }
  1014   001544  0100               	movlb	0	; () banked
  1015   001546  2BE4               	incf	main@i& (0+255),f,b
  1016   001548                     l3285:
  1017                           
  1018                           ; BSR set to: 0
  1019   001548  51E5               	movf	main@a& (0+255),w,b
  1020   00154A  5DE4               	subwf	main@i& (0+255),w,b
  1021   00154C  A0D8               	btfss	status,0,c
  1022   00154E  EFAB  F00A         	goto	u2511
  1023   001552  EFAD  F00A         	goto	u2510
  1024   001556                     u2511:
  1025   001556  EF53  F00A         	goto	l3275
  1026   00155A                     u2510:
  1027   00155A                     
  1028                           ; BSR set to: 0
  1029                           ;main_calibration.c: 76:             cont = 0x00;
  1030   00155A  0E00               	movlw	0
  1031   00155C  6FE3               	movwf	main@cont& (0+255),b
  1032                           
  1033                           ;main_calibration.c: 77:             a = 0;
  1034   00155E  0E00               	movlw	0
  1035   001560  6FE5               	movwf	main@a& (0+255),b
  1036   001562                     l3289:
  1037                           
  1038                           ; BSR set to: 0
  1039                           ;main_calibration.c: 81:         if(cont == 0x01){
  1040   001562  05E3               	decf	main@cont& (0+255),w,b
  1041   001564  A4D8               	btfss	status,2,c
  1042   001566  EFB7  F00A         	goto	u2521
  1043   00156A  EFB9  F00A         	goto	u2520
  1044   00156E                     u2521:
  1045   00156E  EFE5  F009         	goto	l3251
  1046   001572                     u2520:
  1047   001572                     
  1048                           ; BSR set to: 0
  1049                           ;main_calibration.c: 83:             char string2[40];;main_calibration.c: 84:          
      +                             sprintf(string2,"\nRGBC = %05d %05d %05d %05d\n",initial_color.R,initial_color.G,init
      +                          ial_color.B,initial_color.C);
  1050   001572  0EBB               	movlw	low main@string2
  1051   001574  6F78               	movwf	sprintf@s& (0+255),b
  1052   001576  0E00               	movlw	high main@string2
  1053   001578  6F79               	movwf	(sprintf@s+1)& (0+255),b
  1054   00157A  0E01               	movlw	low STR_1
  1055   00157C  6F7A               	movwf	sprintf@fmt& (0+255),b
  1056   00157E  0E0E               	movlw	high STR_1
  1057   001580  6F7B               	movwf	(sprintf@fmt+1)& (0+255),b
  1058   001582  C1C8  F07C         	movff	main@initial_color,?_sprintf+4
  1059   001586  C1C9  F07D         	movff	main@initial_color+1,?_sprintf+5
  1060   00158A  C1CA  F07E         	movff	main@initial_color+2,?_sprintf+6
  1061   00158E  C1CB  F07F         	movff	main@initial_color+3,?_sprintf+7
  1062   001592  C1CC  F080         	movff	main@initial_color+4,?_sprintf+8
  1063   001596  C1CD  F081         	movff	main@initial_color+5,?_sprintf+9
  1064   00159A  C1CE  F082         	movff	main@initial_color+6,?_sprintf+10
  1065   00159E  C1CF  F083         	movff	main@initial_color+7,?_sprintf+11
  1066   0015A2  EC47  F00E         	call	_sprintf	;wreg free
  1067   0015A6                     
  1068                           ;main_calibration.c: 85:             TxBufferedString(string2);
  1069   0015A6  0EBB               	movlw	low main@string2
  1070   0015A8  6E0B               	movwf	TxBufferedString@string^0,c
  1071   0015AA  0E00               	movlw	high main@string2
  1072   0015AC  6E0C               	movwf	(TxBufferedString@string+1)^0,c
  1073   0015AE  ECCD  F00F         	call	_TxBufferedString	;wreg free
  1074   0015B2                     
  1075                           ;main_calibration.c: 87:             sendTxBuf();
  1076   0015B2  ECBC  F010         	call	_sendTxBuf	;wreg free
  1077   0015B6  EFE5  F009         	goto	l3251
  1078   0015BA  EF3E  F000         	goto	start
  1079   0015BE                     __end_of_main:
  1080                           	callstack 0
  1081                           
  1082 ;; *************** function _sprintf *****************
  1083 ;; Defined at:
  1084 ;;		line 9 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\nf_sprintf.c"
  1085 ;; Parameters:    Size  Location     Type
  1086 ;;  s               2   24[BANK0 ] PTR unsigned char 
  1087 ;;		 -> main@string2(40), main@string(40), 
  1088 ;;  fmt             2   26[BANK0 ] PTR const unsigned char 
  1089 ;;		 -> STR_2(29), STR_1(29), 
  1090 ;; Auto vars:     Size  Location     Type
  1091 ;;  f              11   38[BANK0 ] struct _IO_FILE
  1092 ;;  ap              2   36[BANK0 ] PTR void [1]
  1093 ;;		 -> ?_sprintf(2), 
  1094 ;;  ret             2    0        int 
  1095 ;; Return value:  Size  Location     Type
  1096 ;;                  2   24[BANK0 ] int 
  1097 ;; Registers used:
  1098 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1099 ;; Tracked objects:
  1100 ;;		On entry : 0/0
  1101 ;;		On exit  : 0/0
  1102 ;;		Unchanged: 0/0
  1103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1104 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1105 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1107 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1108 ;;Total ram usage:       25 bytes
  1109 ;; Hardware stack levels used: 1
  1110 ;; Hardware stack levels required when called: 10
  1111 ;; This function calls:
  1112 ;;		_vfprintf
  1113 ;; This function is called by:
  1114 ;;		_main
  1115 ;; This function uses a non-reentrant model
  1116 ;;
  1117                           
  1118                           	psect	text1
  1119   001C8E                     __ptext1:
  1120                           	callstack 0
  1121   001C8E                     _sprintf:
  1122                           	callstack 20
  1123   001C8E  0E7C               	movlw	low (?_sprintf+4)
  1124   001C90  0100               	movlb	0	; () banked
  1125   001C92  6F84               	movwf	sprintf@ap& (0+255),b
  1126   001C94  0E00               	movlw	high (?_sprintf+4)
  1127   001C96  6F85               	movwf	(sprintf@ap+1)& (0+255),b
  1128   001C98  C078  F086         	movff	sprintf@s,sprintf@f
  1129   001C9C  C079  F087         	movff	sprintf@s+1,sprintf@f+1
  1130   001CA0                     
  1131                           ; BSR set to: 0
  1132   001CA0  0E00               	movlw	0
  1133   001CA2  6F8A               	movwf	(sprintf@f+4)& (0+255),b
  1134   001CA4  0E00               	movlw	0
  1135   001CA6  6F89               	movwf	(sprintf@f+3)& (0+255),b
  1136   001CA8                     
  1137                           ; BSR set to: 0
  1138   001CA8  0E00               	movlw	0
  1139   001CAA  6F90               	movwf	(sprintf@f+10)& (0+255),b
  1140   001CAC  0E00               	movlw	0
  1141   001CAE  6F8F               	movwf	(sprintf@f+9)& (0+255),b
  1142   001CB0                     
  1143                           ; BSR set to: 0
  1144   001CB0  0E86               	movlw	low sprintf@f
  1145   001CB2  6F72               	movwf	vfprintf@fp& (0+255),b
  1146   001CB4  0E00               	movlw	high sprintf@f
  1147   001CB6  6F73               	movwf	(vfprintf@fp+1)& (0+255),b
  1148   001CB8  C07A  F074         	movff	sprintf@fmt,vfprintf@fmt
  1149   001CBC  C07B  F075         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1150   001CC0  0E84               	movlw	low sprintf@ap
  1151   001CC2  6F76               	movwf	vfprintf@ap& (0+255),b
  1152   001CC4  0E00               	movlw	high sprintf@ap
  1153   001CC6  6F77               	movwf	(vfprintf@ap+1)& (0+255),b
  1154   001CC8  EC1C  F00E         	call	_vfprintf	;wreg free
  1155   001CCC  0100               	movlb	0	; () banked
  1156   001CCE  5189               	movf	(sprintf@f+3)& (0+255),w,b
  1157   001CD0  2578               	addwf	sprintf@s& (0+255),w,b
  1158   001CD2  6ED9               	movwf	fsr2l,c
  1159   001CD4  518A               	movf	(sprintf@f+4)& (0+255),w,b
  1160   001CD6  2179               	addwfc	(sprintf@s+1)& (0+255),w,b
  1161   001CD8  6EDA               	movwf	fsr2h,c
  1162   001CDA  0E00               	movlw	0
  1163   001CDC  6EDF               	movwf	indf2,c
  1164   001CDE                     
  1165                           ; BSR set to: 0
  1166   001CDE  0012               	return		;funcret
  1167   001CE0                     __end_of_sprintf:
  1168                           	callstack 0
  1169                           
  1170 ;; *************** function _vfprintf *****************
  1171 ;; Defined at:
  1172 ;;		line 1520 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c"
  1173 ;; Parameters:    Size  Location     Type
  1174 ;;  fp              2   18[BANK0 ] PTR struct _IO_FILE
  1175 ;;		 -> sprintf@f(11), 
  1176 ;;  fmt             2   20[BANK0 ] PTR const unsigned char 
  1177 ;;		 -> STR_2(29), STR_1(29), 
  1178 ;;  ap              2   22[BANK0 ] PTR PTR void 
  1179 ;;		 -> sprintf@ap(2), 
  1180 ;; Auto vars:     Size  Location     Type
  1181 ;;  cfmt            2   74[COMRAM] PTR unsigned char 
  1182 ;;		 -> STR_2(29), STR_1(29), 
  1183 ;; Return value:  Size  Location     Type
  1184 ;;                  2   18[BANK0 ] int 
  1185 ;; Registers used:
  1186 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1187 ;; Tracked objects:
  1188 ;;		On entry : 0/0
  1189 ;;		On exit  : 0/0
  1190 ;;		Unchanged: 0/0
  1191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1192 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1193 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1195 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1196 ;;Total ram usage:        8 bytes
  1197 ;; Hardware stack levels used: 1
  1198 ;; Hardware stack levels required when called: 9
  1199 ;; This function calls:
  1200 ;;		_vfpfcnvrt
  1201 ;; This function is called by:
  1202 ;;		_sprintf
  1203 ;; This function uses a non-reentrant model
  1204 ;;
  1205                           
  1206                           	psect	text2
  1207   001C38                     __ptext2:
  1208                           	callstack 0
  1209   001C38                     _vfprintf:
  1210                           	callstack 20
  1211   001C38                     
  1212                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1520: int vfprintf(FILE *fp, const c
      +                          har *fmt, va_list ap);D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1521: {;D:\MPLA
      +                          B_COMPILER\pic\sources\c99\common\doprnt.c: 1523:     char *cfmt;;D:\MPLAB_COMPILER\pic\
      +                          sources\c99\common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1213   001C38  C074  F04B         	movff	vfprintf@fmt,vfprintf@cfmt
  1214   001C3C  C075  F04C         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1215                           
  1216                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1529:     while (*cfmt) {
  1217   001C40  EF31  F00E         	goto	l3083
  1218   001C44                     l3081:
  1219                           
  1220                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvrt(fp, &cfmt, ap);
  1221   001C44  C072  F060         	movff	vfprintf@fp,vfpfcnvrt@fp
  1222   001C48  C073  F061         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1223   001C4C  0E4B               	movlw	low vfprintf@cfmt
  1224   001C4E  0100               	movlb	0	; () banked
  1225   001C50  6F62               	movwf	vfpfcnvrt@fmt& (0+255),b
  1226   001C52  0E00               	movlw	high vfprintf@cfmt
  1227   001C54  6F63               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1228   001C56  C076  F064         	movff	vfprintf@ap,vfpfcnvrt@ap
  1229   001C5A  C077  F065         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1230   001C5E  EC10  F007         	call	_vfpfcnvrt	;wreg free
  1231   001C62                     l3083:
  1232                           
  1233                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1529:     while (*cfmt) {
  1234   001C62  C04B  FFF6         	movff	vfprintf@cfmt,tblptrl
  1235   001C66  C04C  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1236   001C6A                     	if	0	;tblptru may be non-zero
  1237   001C6A                     	endif
  1238   001C6A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1239   001C6A  0E00               	movlw	low (__mediumconst shr (0+16))
  1240   001C6C  6EF8               	movwf	tblptru,c
  1241   001C6E                     	endif
  1242   001C6E  0008               	tblrd		*
  1243   001C70  50F5               	movf	tablat,w,c
  1244   001C72  0900               	iorlw	0
  1245   001C74  A4D8               	btfss	status,2,c
  1246   001C76  EF3F  F00E         	goto	u2341
  1247   001C7A  EF41  F00E         	goto	u2340
  1248   001C7E                     u2341:
  1249   001C7E  EF22  F00E         	goto	l3081
  1250   001C82                     u2340:
  1251   001C82                     
  1252                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1253   001C82  0E00               	movlw	0
  1254   001C84  0100               	movlb	0	; () banked
  1255   001C86  6F73               	movwf	(?_vfprintf+1)& (0+255),b
  1256   001C88  0E00               	movlw	0
  1257   001C8A  6F72               	movwf	?_vfprintf& (0+255),b
  1258   001C8C                     
  1259                           ; BSR set to: 0
  1260   001C8C  0012               	return		;funcret
  1261   001C8E                     __end_of_vfprintf:
  1262                           	callstack 0
  1263                           
  1264 ;; *************** function _vfpfcnvrt *****************
  1265 ;; Defined at:
  1266 ;;		line 1007 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c"
  1267 ;; Parameters:    Size  Location     Type
  1268 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  1269 ;;		 -> sprintf@f(11), 
  1270 ;;  fmt             2    2[BANK0 ] PTR PTR unsigned char 
  1271 ;;		 -> vfprintf@cfmt(2), 
  1272 ;;  ap              2    4[BANK0 ] PTR PTR void 
  1273 ;;		 -> sprintf@ap(2), 
  1274 ;; Auto vars:     Size  Location     Type
  1275 ;;  convarg         8    6[BANK0 ] struct .
  1276 ;;  cp              2   16[BANK0 ] PTR unsigned char 
  1277 ;;		 -> STR_2(29), STR_1(29), 
  1278 ;;  done            2   14[BANK0 ] int 
  1279 ;;  i               2    0        int 
  1280 ;;  c               1    0        unsigned char 
  1281 ;; Return value:  Size  Location     Type
  1282 ;;                  1    wreg      void 
  1283 ;; Registers used:
  1284 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1285 ;; Tracked objects:
  1286 ;;		On entry : 0/0
  1287 ;;		On exit  : 0/0
  1288 ;;		Unchanged: 0/0
  1289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1290 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1291 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1292 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1293 ;;      Totals:         3      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1294 ;;Total ram usage:       21 bytes
  1295 ;; Hardware stack levels used: 1
  1296 ;; Hardware stack levels required when called: 8
  1297 ;; This function calls:
  1298 ;;		_atoi
  1299 ;;		_dtoa
  1300 ;;		_fputc
  1301 ;;		_isdigit
  1302 ;; This function is called by:
  1303 ;;		_vfprintf
  1304 ;; This function uses a non-reentrant model
  1305 ;;
  1306                           
  1307                           	psect	text3
  1308   000E20                     __ptext3:
  1309                           	callstack 0
  1310   000E20                     _vfpfcnvrt:
  1311                           	callstack 20
  1312   000E20                     
  1313                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(FILE *fp, char *fmt[
      +                          ], va_list ap);D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1008: {;D:\MPLAB_COMPI
      +                          LER\pic\sources\c99\common\doprnt.c: 1009:     char c, *cp;;D:\MPLAB_COMPILER\pic\source
      +                          s\c99\common\doprnt.c: 1010:     int done, i;;D:\MPLAB_COMPILER\pic\sources\c99\common\d
      +                          oprnt.c: 1016:  } convarg;;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1019:     
      +                          if ((*fmt)[0] == '%') {
  1314   000E20  C062  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1315   000E24  C063  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1316   000E28  CFDE FFF6          	movff	postinc2,tblptrl
  1317   000E2C  CFDD FFF7          	movff	postdec2,tblptrh
  1318   000E30                     	if	0	;tblptru may be non-zero
  1319   000E30                     	endif
  1320   000E30                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1321   000E30  0E00               	movlw	low (__mediumconst shr (0+16))
  1322   000E32  6EF8               	movwf	tblptru,c
  1323   000E34                     	endif
  1324   000E34  0008               	tblrd		*
  1325   000E36  50F5               	movf	tablat,w,c
  1326   000E38  0A25               	xorlw	37
  1327   000E3A  A4D8               	btfss	status,2,c
  1328   000E3C  EF22  F007         	goto	u2241
  1329   000E40  EF24  F007         	goto	u2240
  1330   000E44                     u2241:
  1331   000E44  EF56  F008         	goto	l3015
  1332   000E48                     u2240:
  1333   000E48                     
  1334                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1020:         ++*fmt;
  1335   000E48  C062  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1336   000E4C  C063  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1337   000E50  2ADE               	incf	postinc2,f,c
  1338   000E52  0E00               	movlw	0
  1339   000E54  22DD               	addwfc	postdec2,f,c
  1340   000E56                     
  1341                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1022:         flags = width = 0;
  1342   000E56  0E00               	movlw	0
  1343   000E58  6E4E               	movwf	(_width+1)^0,c
  1344   000E5A  0E00               	movlw	0
  1345   000E5C  6E4D               	movwf	_width^0,c
  1346   000E5E  C04D  F051         	movff	_width,_flags
  1347   000E62                     
  1348                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1023:         prec = -1;
  1349   000E62  684F               	setf	_prec^0,c
  1350   000E64  6850               	setf	(_prec+1)^0,c
  1351   000E66                     
  1352                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1027:         done = 0;
  1353   000E66  0E00               	movlw	0
  1354   000E68  0100               	movlb	0	; () banked
  1355   000E6A  6F6F               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1356   000E6C  0E00               	movlw	0
  1357   000E6E  6F6E               	movwf	vfpfcnvrt@done& (0+255),b
  1358                           
  1359                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1028:         while (!done) {
  1360   000E70  EF66  F007         	goto	l2981
  1361   000E74                     l2971:
  1362                           
  1363                           ; BSR set to: 0
  1364                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1038:                     flags |= (
      +                          1 << 1);
  1365   000E74  8251               	bsf	_flags^0,1,c
  1366   000E76                     
  1367                           ; BSR set to: 0
  1368                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1039:                     ++*fmt;
  1369   000E76  C062  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1370   000E7A  C063  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1371   000E7E  2ADE               	incf	postinc2,f,c
  1372   000E80  0E00               	movlw	0
  1373   000E82  22DD               	addwfc	postdec2,f,c
  1374                           
  1375                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1040:                     break;
  1376   000E84  EF66  F007         	goto	l2981
  1377   000E88                     l2975:
  1378                           
  1379                           ; BSR set to: 0
  1380                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1061:                     done = 1;
  1381   000E88  0E00               	movlw	0
  1382   000E8A  6F6F               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1383   000E8C  0E01               	movlw	1
  1384   000E8E  6F6E               	movwf	vfpfcnvrt@done& (0+255),b
  1385                           
  1386                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1062:                     break;
  1387   000E90  EF66  F007         	goto	l2981
  1388   000E94                     l2979:
  1389                           
  1390                           ; BSR set to: 0
  1391   000E94  C062  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1392   000E98  C063  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1393   000E9C  CFDE FFF6          	movff	postinc2,tblptrl
  1394   000EA0  CFDD FFF7          	movff	postdec2,tblptrh
  1395   000EA4                     	if	0	;tblptru may be non-zero
  1396   000EA4                     	endif
  1397   000EA4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1398   000EA4  0E00               	movlw	low (__mediumconst shr (0+16))
  1399   000EA6  6EF8               	movwf	tblptru,c
  1400   000EA8                     	endif
  1401   000EA8  0008               	tblrd		*
  1402   000EAA  50F5               	movf	tablat,w,c
  1403   000EAC  6E48               	movwf	??_vfpfcnvrt^0,c
  1404   000EAE  6A49               	clrf	(??_vfpfcnvrt+1)^0,c
  1405                           
  1406                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1407                           ; Switch size 1, requested type "simple"
  1408                           ; Number of cases is 1, Range of values is 0 to 0
  1409                           ; switch strategies available:
  1410                           ; Name         Instructions Cycles
  1411                           ; simple_byte            4     3 (average)
  1412                           ;	Chosen strategy is simple_byte
  1413   000EB0  5049               	movf	(??_vfpfcnvrt+1)^0,w,c
  1414   000EB2  0A00               	xorlw	0	; case 0
  1415   000EB4  B4D8               	btfsc	status,2,c
  1416   000EB6  EF5F  F007         	goto	l3359
  1417   000EBA  EF44  F007         	goto	l2975
  1418   000EBE                     l3359:
  1419                           
  1420                           ; BSR set to: 0
  1421                           ; Switch size 1, requested type "simple"
  1422                           ; Number of cases is 1, Range of values is 48 to 48
  1423                           ; switch strategies available:
  1424                           ; Name         Instructions Cycles
  1425                           ; simple_byte            4     3 (average)
  1426                           ;	Chosen strategy is simple_byte
  1427   000EBE  5048               	movf	??_vfpfcnvrt^0,w,c
  1428   000EC0  0A30               	xorlw	48	; case 48
  1429   000EC2  B4D8               	btfsc	status,2,c
  1430   000EC4  EF3A  F007         	goto	l2971
  1431   000EC8  EF44  F007         	goto	l2975
  1432   000ECC                     l2981:
  1433                           
  1434                           ; BSR set to: 0
  1435                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1028:         while (!done) {
  1436   000ECC  516E               	movf	vfpfcnvrt@done& (0+255),w,b
  1437   000ECE  116F               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  1438   000ED0  B4D8               	btfsc	status,2,c
  1439   000ED2  EF6D  F007         	goto	u2251
  1440   000ED6  EF6F  F007         	goto	u2250
  1441   000EDA                     u2251:
  1442   000EDA  EF4A  F007         	goto	l2979
  1443   000EDE                     u2250:
  1444   000EDE                     
  1445                           ; BSR set to: 0
  1446                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1074:         if ((*fmt)[0] == '*') 
      +                          {
  1447   000EDE  C062  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1448   000EE2  C063  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1449   000EE6  CFDE FFF6          	movff	postinc2,tblptrl
  1450   000EEA  CFDD FFF7          	movff	postdec2,tblptrh
  1451   000EEE                     	if	0	;tblptru may be non-zero
  1452   000EEE                     	endif
  1453   000EEE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1454   000EEE  0E00               	movlw	low (__mediumconst shr (0+16))
  1455   000EF0  6EF8               	movwf	tblptru,c
  1456   000EF2                     	endif
  1457   000EF2  0008               	tblrd		*
  1458   000EF4  50F5               	movf	tablat,w,c
  1459   000EF6  0A2A               	xorlw	42
  1460   000EF8  A4D8               	btfss	status,2,c
  1461   000EFA  EF81  F007         	goto	u2261
  1462   000EFE  EF83  F007         	goto	u2260
  1463   000F02                     u2261:
  1464   000F02  EFAC  F007         	goto	l2991
  1465   000F06                     u2260:
  1466   000F06                     
  1467                           ; BSR set to: 0
  1468                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1075:             ++*fmt;
  1469   000F06  C062  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1470   000F0A  C063  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1471   000F0E  2ADE               	incf	postinc2,f,c
  1472   000F10  0E00               	movlw	0
  1473   000F12  22DD               	addwfc	postdec2,f,c
  1474                           
  1475                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1076:             width = (*(int *)_
      +                          _va_arg(*(int **)ap, (int)0));
  1476   000F14  C064  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1477   000F18  C065  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1478   000F1C  CFDF F048          	movff	indf2,??_vfpfcnvrt
  1479   000F20  0E02               	movlw	2
  1480   000F22  26DE               	addwf	postinc2,f,c
  1481   000F24  CFDF F049          	movff	indf2,??_vfpfcnvrt+1
  1482   000F28  0E00               	movlw	0
  1483   000F2A  22DD               	addwfc	postdec2,f,c
  1484   000F2C  C048  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1485   000F30  C049  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1486   000F34  CFDE F04D          	movff	postinc2,_width
  1487   000F38  CFDD F04E          	movff	postdec2,_width+1
  1488   000F3C                     
  1489                           ; BSR set to: 0
  1490                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1077:             if (width < 0) {
  1491   000F3C  BE4E               	btfsc	(_width+1)^0,7,c
  1492   000F3E  EFA5  F007         	goto	u2270
  1493   000F42  EFA3  F007         	goto	u2271
  1494   000F46                     u2271:
  1495   000F46  EFE1  F007         	goto	l2999
  1496   000F4A                     u2270:
  1497   000F4A                     
  1498                           ; BSR set to: 0
  1499                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1078:                 flags |= (1 <<
      +                           0);
  1500   000F4A  8051               	bsf	_flags^0,0,c
  1501                           
  1502                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1079:                 width = -width
      +                          ;
  1503   000F4C  6C4D               	negf	_width^0,c
  1504   000F4E  1E4E               	comf	(_width+1)^0,f,c
  1505   000F50  B0D8               	btfsc	status,0,c
  1506   000F52  2A4E               	incf	(_width+1)^0,f,c
  1507   000F54  EFE1  F007         	goto	l2999
  1508   000F58                     l2991:
  1509                           
  1510                           ; BSR set to: 0
  1511                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1082:             width = atoi(*fmt)
      +                          ;
  1512   000F58  C062  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1513   000F5C  C063  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1514   000F60  CFDE F010          	movff	postinc2,atoi@s
  1515   000F64  CFDD F011          	movff	postdec2,atoi@s+1
  1516   000F68  EC55  F00C         	call	_atoi	;wreg free
  1517   000F6C  C010  F04D         	movff	?_atoi,_width
  1518   000F70  C011  F04E         	movff	?_atoi+1,_width+1
  1519                           
  1520                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1083:             while ((0 && isdig
      +                          it((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  1521   000F74  EFC3  F007         	goto	l2997
  1522   000F78                     l2993:
  1523                           
  1524                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1084:                 ++*fmt;
  1525   000F78  C062  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1526   000F7C  C063  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1527   000F80  2ADE               	incf	postinc2,f,c
  1528   000F82  0E00               	movlw	0
  1529   000F84  22DD               	addwfc	postdec2,f,c
  1530   000F86                     l2997:
  1531   000F86  C062  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1532   000F8A  C063  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1533   000F8E  CFDE FFF6          	movff	postinc2,tblptrl
  1534   000F92  CFDD FFF7          	movff	postdec2,tblptrh
  1535   000F96                     	if	0	;tblptru may be non-zero
  1536   000F96                     	endif
  1537   000F96                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1538   000F96  0E00               	movlw	low (__mediumconst shr (0+16))
  1539   000F98  6EF8               	movwf	tblptru,c
  1540   000F9A                     	endif
  1541   000F9A  0008               	tblrd		*
  1542   000F9C  CFF5 F048          	movff	tablat,??_vfpfcnvrt
  1543   000FA0  0ED0               	movlw	208
  1544   000FA2  2448               	addwf	??_vfpfcnvrt^0,w,c
  1545   000FA4  6E49               	movwf	(??_vfpfcnvrt+1)^0,c
  1546   000FA6  6A4A               	clrf	(??_vfpfcnvrt+2)^0,c
  1547   000FA8  0EFF               	movlw	255
  1548   000FAA  224A               	addwfc	(??_vfpfcnvrt+2)^0,f,c
  1549   000FAC  504A               	movf	(??_vfpfcnvrt+2)^0,w,c
  1550   000FAE  E109               	bnz	u2280
  1551   000FB0  0E0A               	movlw	10
  1552   000FB2  5C49               	subwf	(??_vfpfcnvrt+1)^0,w,c
  1553   000FB4  A0D8               	btfss	status,0,c
  1554   000FB6  EFDF  F007         	goto	u2281
  1555   000FBA  EFE1  F007         	goto	u2280
  1556   000FBE                     u2281:
  1557   000FBE  EFBC  F007         	goto	l2993
  1558   000FC2                     u2280:
  1559   000FC2                     l2999:
  1560                           
  1561                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt;
  1562   000FC2  C062  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1563   000FC6  C063  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1564   000FCA  CFDE F070          	movff	postinc2,vfpfcnvrt@cp
  1565   000FCE  CFDD F071          	movff	postdec2,vfpfcnvrt@cp+1
  1566   000FD2                     
  1567                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1187:   if (*cp == 'd' || *cp == 'i'
      +                          ) {
  1568   000FD2  C070  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1569   000FD6  C071  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1570   000FDA                     	if	0	;tblptru may be non-zero
  1571   000FDA                     	endif
  1572   000FDA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1573   000FDA  0E00               	movlw	low (__mediumconst shr (0+16))
  1574   000FDC  6EF8               	movwf	tblptru,c
  1575   000FDE                     	endif
  1576   000FDE  0008               	tblrd		*
  1577   000FE0  50F5               	movf	tablat,w,c
  1578   000FE2  0A64               	xorlw	100
  1579   000FE4  B4D8               	btfsc	status,2,c
  1580   000FE6  EFF7  F007         	goto	u2291
  1581   000FEA  EFF9  F007         	goto	u2290
  1582   000FEE                     u2291:
  1583   000FEE  EF09  F008         	goto	l3005
  1584   000FF2                     u2290:
  1585   000FF2  C070  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1586   000FF6  C071  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1587   000FFA                     	if	0	;tblptru may be non-zero
  1588   000FFA                     	endif
  1589   000FFA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1590   000FFA  0E00               	movlw	low (__mediumconst shr (0+16))
  1591   000FFC  6EF8               	movwf	tblptru,c
  1592   000FFE                     	endif
  1593   000FFE  0008               	tblrd		*
  1594   001000  50F5               	movf	tablat,w,c
  1595   001002  0A69               	xorlw	105
  1596   001004  A4D8               	btfss	status,2,c
  1597   001006  EF07  F008         	goto	u2301
  1598   00100A  EF09  F008         	goto	u2300
  1599   00100E                     u2301:
  1600   00100E  EF4D  F008         	goto	l3011
  1601   001012                     u2300:
  1602   001012                     l3005:
  1603                           
  1604                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1230:    convarg.ll = (long long)(in
      +                          t)(*(int *)__va_arg(*(int **)ap, (int)0));
  1605   001012  C064  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1606   001016  C065  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1607   00101A  CFDF F048          	movff	indf2,??_vfpfcnvrt
  1608   00101E  0E02               	movlw	2
  1609   001020  26DE               	addwf	postinc2,f,c
  1610   001022  CFDF F049          	movff	indf2,??_vfpfcnvrt+1
  1611   001026  0E00               	movlw	0
  1612   001028  22DD               	addwfc	postdec2,f,c
  1613   00102A  C048  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1614   00102E  C049  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1615   001032  CFDE F066          	movff	postinc2,vfpfcnvrt@convarg
  1616   001036  CFDD F067          	movff	postdec2,vfpfcnvrt@convarg+1
  1617   00103A  0100               	movlb	0	; () banked
  1618   00103C  0E00               	movlw	0
  1619   00103E  BF67               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  1620   001040  0EFF               	movlw	-1
  1621   001042  6F68               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  1622   001044  6F69               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  1623   001046  6F6A               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  1624   001048  6F6B               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  1625   00104A  6F6C               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  1626   00104C  6F6D               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  1627                           
  1628                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1232:    *fmt = cp+1;
  1629   00104E  0E01               	movlw	1
  1630   001050  2570               	addwf	vfpfcnvrt@cp& (0+255),w,b
  1631   001052  6E48               	movwf	??_vfpfcnvrt^0,c
  1632   001054  0E00               	movlw	0
  1633   001056  2171               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  1634   001058  6E49               	movwf	(??_vfpfcnvrt+1)^0,c
  1635   00105A  C062  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1636   00105E  C063  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1637   001062  C048  FFDE         	movff	??_vfpfcnvrt,postinc2
  1638   001066  C049  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1639   00106A                     
  1640                           ; BSR set to: 0
  1641                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1233:    return (void) dtoa(fp, conv
      +                          arg.ll);;	Return value of _vfpfcnvrt is never used
  1642   00106A  C060  F025         	movff	vfpfcnvrt@fp,dtoa@fp
  1643   00106E  C061  F026         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1644   001072  C066  F027         	movff	vfpfcnvrt@convarg,dtoa@d
  1645   001076  C067  F028         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1646   00107A  C068  F029         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1647   00107E  C069  F02A         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1648   001082  C06A  F02B         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1649   001086  C06B  F02C         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1650   00108A  C06C  F02D         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1651   00108E  C06D  F02E         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1652   001092  EC6D  F008         	call	_dtoa	;wreg free
  1653   001096  EF6C  F008         	goto	l1166
  1654   00109A                     l3011:
  1655                           
  1656                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1509:         ++*fmt;
  1657   00109A  C062  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1658   00109E  C063  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1659   0010A2  2ADE               	incf	postinc2,f,c
  1660   0010A4  0E00               	movlw	0
  1661   0010A6  22DD               	addwfc	postdec2,f,c
  1662   0010A8  EF6C  F008         	goto	l1166
  1663   0010AC                     l3015:
  1664                           
  1665                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1514:     fputc((int)(*fmt)[0], fp);
  1666   0010AC  C062  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1667   0010B0  C063  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1668   0010B4  CFDE FFF6          	movff	postinc2,tblptrl
  1669   0010B8  CFDD FFF7          	movff	postdec2,tblptrh
  1670   0010BC                     	if	0	;tblptru may be non-zero
  1671   0010BC                     	endif
  1672   0010BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1673   0010BC  0E00               	movlw	low (__mediumconst shr (0+16))
  1674   0010BE  6EF8               	movwf	tblptru,c
  1675   0010C0                     	endif
  1676   0010C0  0008               	tblrd		*
  1677   0010C2  50F5               	movf	tablat,w,c
  1678   0010C4  6E0A               	movwf	fputc@c^0,c
  1679   0010C6  6A0B               	clrf	(fputc@c+1)^0,c
  1680   0010C8  C060  F00C         	movff	vfpfcnvrt@fp,fputc@fp
  1681   0010CC  C061  F00D         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1682   0010D0  EC04  F00D         	call	_fputc	;wreg free
  1683   0010D4  EF4D  F008         	goto	l3011
  1684   0010D8                     l1166:
  1685   0010D8  0012               	return		;funcret
  1686   0010DA                     __end_of_vfpfcnvrt:
  1687                           	callstack 0
  1688                           
  1689 ;; *************** function _dtoa *****************
  1690 ;; Defined at:
  1691 ;;		line 443 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c"
  1692 ;; Parameters:    Size  Location     Type
  1693 ;;  fp              2   36[COMRAM] PTR struct _IO_FILE
  1694 ;;		 -> sprintf@f(11), 
  1695 ;;  d               8   38[COMRAM] long long 
  1696 ;; Auto vars:     Size  Location     Type
  1697 ;;  n               8   60[COMRAM] long long 
  1698 ;;  i               2   69[COMRAM] int 
  1699 ;;  w               2   58[COMRAM] int 
  1700 ;;  p               2   56[COMRAM] int 
  1701 ;;  s               1   68[COMRAM] unsigned char 
  1702 ;; Return value:  Size  Location     Type
  1703 ;;                  1    wreg      void 
  1704 ;; Registers used:
  1705 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1706 ;; Tracked objects:
  1707 ;;		On entry : 0/0
  1708 ;;		On exit  : 0/0
  1709 ;;		Unchanged: 0/0
  1710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1711 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1712 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1713 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1714 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1715 ;;Total ram usage:       35 bytes
  1716 ;; Hardware stack levels used: 1
  1717 ;; Hardware stack levels required when called: 7
  1718 ;; This function calls:
  1719 ;;		___aodiv
  1720 ;;		___aomod
  1721 ;;		_abs
  1722 ;;		_pad
  1723 ;; This function is called by:
  1724 ;;		_vfpfcnvrt
  1725 ;; This function uses a non-reentrant model
  1726 ;;
  1727                           
  1728                           	psect	text4
  1729   0010DA                     __ptext4:
  1730                           	callstack 0
  1731   0010DA                     _dtoa:
  1732                           	callstack 20
  1733   0010DA                     
  1734                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 443: static void dtoa(FILE *fp, long
      +                           long d);D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 444: {;D:\MPLAB_COMPILER\pic
      +                          \sources\c99\common\doprnt.c: 445:  char s;;D:\MPLAB_COMPILER\pic\sources\c99\common\dop
      +                          rnt.c: 446:     int i, p, w;;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 447:    
      +                           long long n;;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 450:     n = d;
  1735   0010DA  C027  F03D         	movff	dtoa@d,dtoa@n
  1736   0010DE  C028  F03E         	movff	dtoa@d+1,dtoa@n+1
  1737   0010E2  C029  F03F         	movff	dtoa@d+2,dtoa@n+2
  1738   0010E6  C02A  F040         	movff	dtoa@d+3,dtoa@n+3
  1739   0010EA  C02B  F041         	movff	dtoa@d+4,dtoa@n+4
  1740   0010EE  C02C  F042         	movff	dtoa@d+5,dtoa@n+5
  1741   0010F2  C02D  F043         	movff	dtoa@d+6,dtoa@n+6
  1742   0010F6  C02E  F044         	movff	dtoa@d+7,dtoa@n+7
  1743   0010FA                     
  1744                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 451:     s = n < 0 ? 1 : 0;
  1745   0010FA  BE44               	btfsc	(dtoa@n+7)^0,7,c
  1746   0010FC  EF82  F008         	goto	u2051
  1747   001100  EF85  F008         	goto	u2050
  1748   001104                     u2051:
  1749   001104  0E01               	movlw	1
  1750   001106  EF86  F008         	goto	u2060
  1751   00110A                     u2050:
  1752   00110A  0E00               	movlw	0
  1753   00110C                     u2060:
  1754   00110C  6E45               	movwf	dtoa@s^0,c
  1755   00110E                     
  1756                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  1757   00110E  5045               	movf	dtoa@s^0,w,c
  1758   001110  B4D8               	btfsc	status,2,c
  1759   001112  EF8D  F008         	goto	u2071
  1760   001116  EF8F  F008         	goto	u2070
  1761   00111A                     u2071:
  1762   00111A  EF9F  F008         	goto	l2847
  1763   00111E                     u2070:
  1764   00111E                     
  1765                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 453:         n = -n;
  1766   00111E  1E44               	comf	(dtoa@n+7)^0,f,c
  1767   001120  1E43               	comf	(dtoa@n+6)^0,f,c
  1768   001122  1E42               	comf	(dtoa@n+5)^0,f,c
  1769   001124  1E41               	comf	(dtoa@n+4)^0,f,c
  1770   001126  1E40               	comf	(dtoa@n+3)^0,f,c
  1771   001128  1E3F               	comf	(dtoa@n+2)^0,f,c
  1772   00112A  1E3E               	comf	(dtoa@n+1)^0,f,c
  1773   00112C  6C3D               	negf	dtoa@n^0,c
  1774   00112E  0E00               	movlw	0
  1775   001130  223E               	addwfc	(dtoa@n+1)^0,f,c
  1776   001132  223F               	addwfc	(dtoa@n+2)^0,f,c
  1777   001134  2240               	addwfc	(dtoa@n+3)^0,f,c
  1778   001136  2241               	addwfc	(dtoa@n+4)^0,f,c
  1779   001138  2242               	addwfc	(dtoa@n+5)^0,f,c
  1780   00113A  2243               	addwfc	(dtoa@n+6)^0,f,c
  1781   00113C  2244               	addwfc	(dtoa@n+7)^0,f,c
  1782   00113E                     l2847:
  1783                           
  1784                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 458:     if (!(prec < 0)) {
  1785   00113E  BE50               	btfsc	(_prec+1)^0,7,c
  1786   001140  EFA4  F008         	goto	u2081
  1787   001144  EFA6  F008         	goto	u2080
  1788   001148                     u2081:
  1789   001148  EFA7  F008         	goto	l2851
  1790   00114C                     u2080:
  1791   00114C                     
  1792                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 459:         flags &= ~(1 << 1);
  1793   00114C  9251               	bcf	_flags^0,1,c
  1794   00114E                     l2851:
  1795                           
  1796                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 462:     p = (0 < prec) ? prec : 1;
  1797   00114E  BE50               	btfsc	(_prec+1)^0,7,c
  1798   001150  EFB4  F008         	goto	u2090
  1799   001154  5050               	movf	(_prec+1)^0,w,c
  1800   001156  E106               	bnz	u2091
  1801   001158  044F               	decf	_prec^0,w,c
  1802   00115A  B0D8               	btfsc	status,0,c
  1803   00115C  EFB2  F008         	goto	u2091
  1804   001160  EFB4  F008         	goto	u2090
  1805   001164                     u2091:
  1806   001164  EFBA  F008         	goto	l1128
  1807   001168                     u2090:
  1808   001168  0E00               	movlw	0
  1809   00116A  6E3A               	movwf	(dtoa@p+1)^0,c
  1810   00116C  0E01               	movlw	1
  1811   00116E  6E39               	movwf	dtoa@p^0,c
  1812   001170  EFBE  F008         	goto	l1130
  1813   001174                     l1128:
  1814   001174  C04F  F039         	movff	_prec,dtoa@p
  1815   001178  C050  F03A         	movff	_prec+1,dtoa@p+1
  1816   00117C                     l1130:
  1817                           
  1818                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 463:     w = width;
  1819   00117C  C04D  F03B         	movff	_width,dtoa@w
  1820   001180  C04E  F03C         	movff	_width+1,dtoa@w+1
  1821   001184                     
  1822                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 464:     if (s
  1823   001184  5045               	movf	dtoa@s^0,w,c
  1824   001186  B4D8               	btfsc	status,2,c
  1825   001188  EFC8  F008         	goto	u2101
  1826   00118C  EFCA  F008         	goto	u2100
  1827   001190                     u2101:
  1828   001190  EFE1  F008         	goto	l1131
  1829   001194                     u2100:
  1830   001194                     
  1831                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 468:     ) {;D:\MPLAB_COMPILER\pic\s
      +                          ources\c99\common\doprnt.c: 469:         --w;
  1832   001194  063B               	decf	dtoa@w^0,f,c
  1833   001196  A0D8               	btfss	status,0,c
  1834   001198  063C               	decf	(dtoa@w+1)^0,f,c
  1835   00119A                     
  1836                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-' : '+';
  1837   00119A  5045               	movf	dtoa@s^0,w,c
  1838   00119C  A4D8               	btfss	status,2,c
  1839   00119E  EFD3  F008         	goto	u2111
  1840   0011A2  EFD5  F008         	goto	u2110
  1841   0011A6                     u2111:
  1842   0011A6  EFDB  F008         	goto	l2863
  1843   0011AA                     u2110:
  1844   0011AA  0E00               	movlw	0
  1845   0011AC  6E38               	movwf	(_dtoa$2298+1)^0,c
  1846   0011AE  0E2B               	movlw	43
  1847   0011B0  6E37               	movwf	_dtoa$2298^0,c
  1848   0011B2  EFDF  F008         	goto	l2865
  1849   0011B6                     l2863:
  1850   0011B6  0E00               	movlw	0
  1851   0011B8  6E38               	movwf	(_dtoa$2298+1)^0,c
  1852   0011BA  0E2D               	movlw	45
  1853   0011BC  6E37               	movwf	_dtoa$2298^0,c
  1854   0011BE                     l2865:
  1855   0011BE  C037  F045         	movff	_dtoa$2298,dtoa@s
  1856   0011C2                     l1131:
  1857                           
  1858                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 480:     i = sizeof(dbuf) - 1;
  1859   0011C2  0E00               	movlw	0
  1860   0011C4  6E47               	movwf	(dtoa@i+1)^0,c
  1861   0011C6  0E1F               	movlw	31
  1862   0011C8  6E46               	movwf	dtoa@i^0,c
  1863   0011CA                     
  1864                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] = '\0';
  1865   0011CA  0E00               	movlw	0
  1866   0011CC  0101               	movlb	1	; () banked
  1867   0011CE  6FEF               	movwf	(_dbuf+31)& (0+255),b
  1868                           
  1869                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 482:     while (!(i < 1) && (n || (0
      +                           < p)
  1870   0011D0  EF66  F009         	goto	l2879
  1871   0011D4                     l2869:
  1872                           
  1873                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 486:     )) {;D:\MPLAB_COMPILER\pic\
      +                          sources\c99\common\doprnt.c: 487:         --i;
  1874   0011D4  0646               	decf	dtoa@i^0,f,c
  1875   0011D6  A0D8               	btfss	status,0,c
  1876   0011D8  0647               	decf	(dtoa@i+1)^0,f,c
  1877   0011DA                     
  1878                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 488:         dbuf[i] = (char)((int)'
      +                          0' + abs(n % 10));
  1879   0011DA  0ED0               	movlw	low _dbuf
  1880   0011DC  2446               	addwf	dtoa@i^0,w,c
  1881   0011DE  6ED9               	movwf	fsr2l,c
  1882   0011E0  0E01               	movlw	high _dbuf
  1883   0011E2  2047               	addwfc	(dtoa@i+1)^0,w,c
  1884   0011E4  6EDA               	movwf	fsr2h,c
  1885   0011E6  C03D  F00A         	movff	dtoa@n,___aomod@dividend
  1886   0011EA  C03E  F00B         	movff	dtoa@n+1,___aomod@dividend+1
  1887   0011EE  C03F  F00C         	movff	dtoa@n+2,___aomod@dividend+2
  1888   0011F2  C040  F00D         	movff	dtoa@n+3,___aomod@dividend+3
  1889   0011F6  C041  F00E         	movff	dtoa@n+4,___aomod@dividend+4
  1890   0011FA  C042  F00F         	movff	dtoa@n+5,___aomod@dividend+5
  1891   0011FE  C043  F010         	movff	dtoa@n+6,___aomod@dividend+6
  1892   001202  C044  F011         	movff	dtoa@n+7,___aomod@dividend+7
  1893   001206  0E0A               	movlw	10
  1894   001208  6E12               	movwf	___aomod@divisor^0,c
  1895   00120A  0E00               	movlw	0
  1896   00120C  6E13               	movwf	(___aomod@divisor+1)^0,c
  1897   00120E  0E00               	movlw	0
  1898   001210  6E14               	movwf	(___aomod@divisor+2)^0,c
  1899   001212  0E00               	movlw	0
  1900   001214  6E15               	movwf	(___aomod@divisor+3)^0,c
  1901   001216  0E00               	movlw	0
  1902   001218  6E16               	movwf	(___aomod@divisor+4)^0,c
  1903   00121A  0E00               	movlw	0
  1904   00121C  6E17               	movwf	(___aomod@divisor+5)^0,c
  1905   00121E  0E00               	movlw	0
  1906   001220  6E18               	movwf	(___aomod@divisor+6)^0,c
  1907   001222  0E00               	movlw	0
  1908   001224  6E19               	movwf	(___aomod@divisor+7)^0,c
  1909   001226  ECA3  F00B         	call	___aomod	;wreg free
  1910   00122A  C00A  F02F         	movff	?___aomod,??_dtoa
  1911   00122E  C00B  F030         	movff	?___aomod+1,??_dtoa+1
  1912   001232  C00C  F031         	movff	?___aomod+2,??_dtoa+2
  1913   001236  C00D  F032         	movff	?___aomod+3,??_dtoa+3
  1914   00123A  C00E  F033         	movff	?___aomod+4,??_dtoa+4
  1915   00123E  C00F  F034         	movff	?___aomod+5,??_dtoa+5
  1916   001242  C010  F035         	movff	?___aomod+6,??_dtoa+6
  1917   001246  C011  F036         	movff	?___aomod+7,??_dtoa+7
  1918   00124A  C02F  F01C         	movff	??_dtoa,abs@a
  1919   00124E  C030  F01D         	movff	??_dtoa+1,abs@a+1
  1920   001252  EC76  F00F         	call	_abs	;wreg free
  1921   001256  501C               	movf	?_abs^0,w,c
  1922   001258  0F30               	addlw	48
  1923   00125A  6EDF               	movwf	indf2,c
  1924   00125C                     
  1925                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 489:         --p;
  1926   00125C  0639               	decf	dtoa@p^0,f,c
  1927   00125E  A0D8               	btfss	status,0,c
  1928   001260  063A               	decf	(dtoa@p+1)^0,f,c
  1929   001262                     
  1930                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 490:         --w;
  1931   001262  063B               	decf	dtoa@w^0,f,c
  1932   001264  A0D8               	btfss	status,0,c
  1933   001266  063C               	decf	(dtoa@w+1)^0,f,c
  1934   001268                     
  1935                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 491:         n = n / 10;
  1936   001268  C03D  F00A         	movff	dtoa@n,___aodiv@dividend
  1937   00126C  C03E  F00B         	movff	dtoa@n+1,___aodiv@dividend+1
  1938   001270  C03F  F00C         	movff	dtoa@n+2,___aodiv@dividend+2
  1939   001274  C040  F00D         	movff	dtoa@n+3,___aodiv@dividend+3
  1940   001278  C041  F00E         	movff	dtoa@n+4,___aodiv@dividend+4
  1941   00127C  C042  F00F         	movff	dtoa@n+5,___aodiv@dividend+5
  1942   001280  C043  F010         	movff	dtoa@n+6,___aodiv@dividend+6
  1943   001284  C044  F011         	movff	dtoa@n+7,___aodiv@dividend+7
  1944   001288  0E0A               	movlw	10
  1945   00128A  6E12               	movwf	___aodiv@divisor^0,c
  1946   00128C  0E00               	movlw	0
  1947   00128E  6E13               	movwf	(___aodiv@divisor+1)^0,c
  1948   001290  0E00               	movlw	0
  1949   001292  6E14               	movwf	(___aodiv@divisor+2)^0,c
  1950   001294  0E00               	movlw	0
  1951   001296  6E15               	movwf	(___aodiv@divisor+3)^0,c
  1952   001298  0E00               	movlw	0
  1953   00129A  6E16               	movwf	(___aodiv@divisor+4)^0,c
  1954   00129C  0E00               	movlw	0
  1955   00129E  6E17               	movwf	(___aodiv@divisor+5)^0,c
  1956   0012A0  0E00               	movlw	0
  1957   0012A2  6E18               	movwf	(___aodiv@divisor+6)^0,c
  1958   0012A4  0E00               	movlw	0
  1959   0012A6  6E19               	movwf	(___aodiv@divisor+7)^0,c
  1960   0012A8  ECDF  F00A         	call	___aodiv	;wreg free
  1961   0012AC  C00A  F03D         	movff	?___aodiv,dtoa@n
  1962   0012B0  C00B  F03E         	movff	?___aodiv+1,dtoa@n+1
  1963   0012B4  C00C  F03F         	movff	?___aodiv+2,dtoa@n+2
  1964   0012B8  C00D  F040         	movff	?___aodiv+3,dtoa@n+3
  1965   0012BC  C00E  F041         	movff	?___aodiv+4,dtoa@n+4
  1966   0012C0  C00F  F042         	movff	?___aodiv+5,dtoa@n+5
  1967   0012C4  C010  F043         	movff	?___aodiv+6,dtoa@n+6
  1968   0012C8  C011  F044         	movff	?___aodiv+7,dtoa@n+7
  1969   0012CC                     l2879:
  1970                           
  1971                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 482:     while (!(i < 1) && (n || (0
      +                           < p)
  1972   0012CC  BE47               	btfsc	(dtoa@i+1)^0,7,c
  1973   0012CE  EF71  F009         	goto	u2121
  1974   0012D2  5047               	movf	(dtoa@i+1)^0,w,c
  1975   0012D4  E108               	bnz	u2120
  1976   0012D6  0446               	decf	dtoa@i^0,w,c
  1977   0012D8  A0D8               	btfss	status,0,c
  1978   0012DA  EF71  F009         	goto	u2121
  1979   0012DE  EF73  F009         	goto	u2120
  1980   0012E2                     u2121:
  1981   0012E2  EFA3  F009         	goto	l2889
  1982   0012E6                     u2120:
  1983   0012E6  503D               	movf	dtoa@n^0,w,c
  1984   0012E8  103E               	iorwf	(dtoa@n+1)^0,w,c
  1985   0012EA  103F               	iorwf	(dtoa@n+2)^0,w,c
  1986   0012EC  1040               	iorwf	(dtoa@n+3)^0,w,c
  1987   0012EE  1041               	iorwf	(dtoa@n+4)^0,w,c
  1988   0012F0  1042               	iorwf	(dtoa@n+5)^0,w,c
  1989   0012F2  1043               	iorwf	(dtoa@n+6)^0,w,c
  1990   0012F4  1044               	iorwf	(dtoa@n+7)^0,w,c
  1991   0012F6  A4D8               	btfss	status,2,c
  1992   0012F8  EF80  F009         	goto	u2131
  1993   0012FC  EF82  F009         	goto	u2130
  1994   001300                     u2131:
  1995   001300  EFEA  F008         	goto	l2869
  1996   001304                     u2130:
  1997   001304  BE3A               	btfsc	(dtoa@p+1)^0,7,c
  1998   001306  EF8F  F009         	goto	u2140
  1999   00130A  503A               	movf	(dtoa@p+1)^0,w,c
  2000   00130C  E106               	bnz	u2141
  2001   00130E  0439               	decf	dtoa@p^0,w,c
  2002   001310  B0D8               	btfsc	status,0,c
  2003   001312  EF8D  F009         	goto	u2141
  2004   001316  EF8F  F009         	goto	u2140
  2005   00131A                     u2141:
  2006   00131A  EFEA  F008         	goto	l2869
  2007   00131E                     u2140:
  2008   00131E  BE3C               	btfsc	(dtoa@w+1)^0,7,c
  2009   001320  EF9A  F009         	goto	u2151
  2010   001324  503C               	movf	(dtoa@w+1)^0,w,c
  2011   001326  E108               	bnz	u2150
  2012   001328  043B               	decf	dtoa@w^0,w,c
  2013   00132A  A0D8               	btfss	status,0,c
  2014   00132C  EF9A  F009         	goto	u2151
  2015   001330  EF9C  F009         	goto	u2150
  2016   001334                     u2151:
  2017   001334  EFA3  F009         	goto	l2889
  2018   001338                     u2150:
  2019   001338  B251               	btfsc	_flags^0,1,c
  2020   00133A  EFA1  F009         	goto	u2161
  2021   00133E  EFA3  F009         	goto	u2160
  2022   001342                     u2161:
  2023   001342  EFEA  F008         	goto	l2869
  2024   001346                     u2160:
  2025   001346                     l2889:
  2026                           
  2027                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 495:     if (s != 0) {
  2028   001346  5045               	movf	dtoa@s^0,w,c
  2029   001348  B4D8               	btfsc	status,2,c
  2030   00134A  EFA9  F009         	goto	u2171
  2031   00134E  EFAB  F009         	goto	u2170
  2032   001352                     u2171:
  2033   001352  EFB6  F009         	goto	l2895
  2034   001356                     u2170:
  2035   001356                     
  2036                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 496:         --i;
  2037   001356  0646               	decf	dtoa@i^0,f,c
  2038   001358  A0D8               	btfss	status,0,c
  2039   00135A  0647               	decf	(dtoa@i+1)^0,f,c
  2040   00135C                     
  2041                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 497:         dbuf[i] = s;
  2042   00135C  0ED0               	movlw	low _dbuf
  2043   00135E  2446               	addwf	dtoa@i^0,w,c
  2044   001360  6ED9               	movwf	fsr2l,c
  2045   001362  0E01               	movlw	high _dbuf
  2046   001364  2047               	addwfc	(dtoa@i+1)^0,w,c
  2047   001366  6EDA               	movwf	fsr2h,c
  2048   001368  C045  FFDF         	movff	dtoa@s,indf2
  2049   00136C                     l2895:
  2050                           
  2051                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 501:     return (void) pad(fp, &dbuf
      +                          [i], w);
  2052   00136C  C025  F01A         	movff	dtoa@fp,pad@fp
  2053   001370  C026  F01B         	movff	dtoa@fp+1,pad@fp+1
  2054   001374  0ED0               	movlw	low _dbuf
  2055   001376  2446               	addwf	dtoa@i^0,w,c
  2056   001378  6E1C               	movwf	pad@buf^0,c
  2057   00137A  0E01               	movlw	high _dbuf
  2058   00137C  2047               	addwfc	(dtoa@i+1)^0,w,c
  2059   00137E  6E1D               	movwf	(pad@buf+1)^0,c
  2060   001380  C03B  F01E         	movff	dtoa@w,pad@p
  2061   001384  C03C  F01F         	movff	dtoa@w+1,pad@p+1
  2062   001388  EC69  F00D         	call	_pad	;wreg free
  2063   00138C  0012               	return		;funcret
  2064   00138E                     __end_of_dtoa:
  2065                           	callstack 0
  2066                           
  2067 ;; *************** function _pad *****************
  2068 ;; Defined at:
  2069 ;;		line 133 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c"
  2070 ;; Parameters:    Size  Location     Type
  2071 ;;  fp              2   25[COMRAM] PTR struct _IO_FILE
  2072 ;;		 -> sprintf@f(11), 
  2073 ;;  buf             2   27[COMRAM] PTR unsigned char 
  2074 ;;		 -> dbuf(32), 
  2075 ;;  p               2   29[COMRAM] int 
  2076 ;; Auto vars:     Size  Location     Type
  2077 ;;  w               2   34[COMRAM] int 
  2078 ;;  i               2   32[COMRAM] int 
  2079 ;; Return value:  Size  Location     Type
  2080 ;;                  1    wreg      void 
  2081 ;; Registers used:
  2082 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2083 ;; Tracked objects:
  2084 ;;		On entry : 0/0
  2085 ;;		On exit  : 0/0
  2086 ;;		Unchanged: 0/0
  2087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2088 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2089 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2090 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2091 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2092 ;;Total ram usage:       11 bytes
  2093 ;; Hardware stack levels used: 1
  2094 ;; Hardware stack levels required when called: 6
  2095 ;; This function calls:
  2096 ;;		_fputc
  2097 ;;		_fputs
  2098 ;; This function is called by:
  2099 ;;		_dtoa
  2100 ;; This function uses a non-reentrant model
  2101 ;;
  2102                           
  2103                           	psect	text5
  2104   001AD2                     __ptext5:
  2105                           	callstack 0
  2106   001AD2                     _pad:
  2107                           	callstack 20
  2108   001AD2                     
  2109                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 133: static void pad(FILE *fp, char 
      +                          *buf, int p);D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 134: {;D:\MPLAB_COMPILER
      +                          \pic\sources\c99\common\doprnt.c: 135:     int i, w;;D:\MPLAB_COMPILER\pic\sources\c99\c
      +                          ommon\doprnt.c: 139:     if (flags & (1 << 0)) {
  2110   001AD2  A051               	btfss	_flags^0,0,c
  2111   001AD4  EF6E  F00D         	goto	u1941
  2112   001AD8  EF70  F00D         	goto	u1940
  2113   001ADC                     u1941:
  2114   001ADC  EF7A  F00D         	goto	l2801
  2115   001AE0                     u1940:
  2116   001AE0                     
  2117                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 140:         fputs((const char *)buf
      +                          , fp);
  2118   001AE0  C01C  F013         	movff	pad@buf,fputs@s
  2119   001AE4  C01D  F014         	movff	pad@buf+1,fputs@s+1
  2120   001AE8  C01A  F015         	movff	pad@fp,fputs@fp
  2121   001AEC  C01B  F016         	movff	pad@fp+1,fputs@fp+1
  2122   001AF0  EC33  F00F         	call	_fputs	;wreg free
  2123   001AF4                     l2801:
  2124                           
  2125                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 145:     w = (p < 0) ? 0 : p;
  2126   001AF4  BE1F               	btfsc	(pad@p+1)^0,7,c
  2127   001AF6  EF7F  F00D         	goto	u1951
  2128   001AFA  EF81  F00D         	goto	u1950
  2129   001AFE                     u1951:
  2130   001AFE  EF87  F00D         	goto	l2805
  2131   001B02                     u1950:
  2132   001B02  C01E  F023         	movff	pad@p,pad@w
  2133   001B06  C01F  F024         	movff	pad@p+1,pad@w+1
  2134   001B0A  EF8B  F00D         	goto	l1117
  2135   001B0E                     l2805:
  2136   001B0E  0E00               	movlw	0
  2137   001B10  6E24               	movwf	(pad@w+1)^0,c
  2138   001B12  0E00               	movlw	0
  2139   001B14  6E23               	movwf	pad@w^0,c
  2140   001B16                     l1117:
  2141                           
  2142                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  2143   001B16  0E00               	movlw	0
  2144   001B18  6E22               	movwf	(pad@i+1)^0,c
  2145   001B1A  0E00               	movlw	0
  2146   001B1C  6E21               	movwf	pad@i^0,c
  2147                           
  2148                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 147:     while (i < w) {
  2149   001B1E  EF9D  F00D         	goto	l2811
  2150   001B22                     l2807:
  2151                           
  2152                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 148:         fputc(' ', fp);
  2153   001B22  0E00               	movlw	0
  2154   001B24  6E0B               	movwf	(fputc@c+1)^0,c
  2155   001B26  0E20               	movlw	32
  2156   001B28  6E0A               	movwf	fputc@c^0,c
  2157   001B2A  C01A  F00C         	movff	pad@fp,fputc@fp
  2158   001B2E  C01B  F00D         	movff	pad@fp+1,fputc@fp+1
  2159   001B32  EC04  F00D         	call	_fputc	;wreg free
  2160   001B36                     
  2161                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 149:         ++i;
  2162   001B36  4A21               	infsnz	pad@i^0,f,c
  2163   001B38  2A22               	incf	(pad@i+1)^0,f,c
  2164   001B3A                     l2811:
  2165                           
  2166                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 147:     while (i < w) {
  2167   001B3A  5023               	movf	pad@w^0,w,c
  2168   001B3C  5C21               	subwf	pad@i^0,w,c
  2169   001B3E  5022               	movf	(pad@i+1)^0,w,c
  2170   001B40  0A80               	xorlw	128
  2171   001B42  6E20               	movwf	??_pad^0,c
  2172   001B44  5024               	movf	(pad@w+1)^0,w,c
  2173   001B46  0A80               	xorlw	128
  2174   001B48  5820               	subwfb	??_pad^0,w,c
  2175   001B4A  A0D8               	btfss	status,0,c
  2176   001B4C  EFAA  F00D         	goto	u1961
  2177   001B50  EFAC  F00D         	goto	u1960
  2178   001B54                     u1961:
  2179   001B54  EF91  F00D         	goto	l2807
  2180   001B58                     u1960:
  2181   001B58                     
  2182                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 154:     if (!(flags & (1 << 0))) {
  2183   001B58  B051               	btfsc	_flags^0,0,c
  2184   001B5A  EFB1  F00D         	goto	u1971
  2185   001B5E  EFB3  F00D         	goto	u1970
  2186   001B62                     u1971:
  2187   001B62  EFBD  F00D         	goto	l1122
  2188   001B66                     u1970:
  2189   001B66                     
  2190                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 156:         fputs((const char *)buf
      +                          , fp);
  2191   001B66  C01C  F013         	movff	pad@buf,fputs@s
  2192   001B6A  C01D  F014         	movff	pad@buf+1,fputs@s+1
  2193   001B6E  C01A  F015         	movff	pad@fp,fputs@fp
  2194   001B72  C01B  F016         	movff	pad@fp+1,fputs@fp+1
  2195   001B76  EC33  F00F         	call	_fputs	;wreg free
  2196   001B7A                     l1122:
  2197   001B7A  0012               	return		;funcret
  2198   001B7C                     __end_of_pad:
  2199                           	callstack 0
  2200                           
  2201 ;; *************** function _fputs *****************
  2202 ;; Defined at:
  2203 ;;		line 8 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\nf_fputs.c"
  2204 ;; Parameters:    Size  Location     Type
  2205 ;;  s               2   18[COMRAM] PTR const unsigned char 
  2206 ;;		 -> dbuf(32), 
  2207 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  2208 ;;		 -> sprintf@f(11), 
  2209 ;; Auto vars:     Size  Location     Type
  2210 ;;  i               2   23[COMRAM] int 
  2211 ;;  c               1   22[COMRAM] unsigned char 
  2212 ;; Return value:  Size  Location     Type
  2213 ;;                  2   18[COMRAM] int 
  2214 ;; Registers used:
  2215 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2216 ;; Tracked objects:
  2217 ;;		On entry : 0/0
  2218 ;;		On exit  : 0/0
  2219 ;;		Unchanged: 0/0
  2220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2221 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2222 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2224 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2225 ;;Total ram usage:        7 bytes
  2226 ;; Hardware stack levels used: 1
  2227 ;; Hardware stack levels required when called: 5
  2228 ;; This function calls:
  2229 ;;		_fputc
  2230 ;; This function is called by:
  2231 ;;		_pad
  2232 ;; This function uses a non-reentrant model
  2233 ;;
  2234                           
  2235                           	psect	text6
  2236   001E66                     __ptext6:
  2237                           	callstack 0
  2238   001E66                     _fputs:
  2239                           	callstack 20
  2240   001E66  0E00               	movlw	0
  2241   001E68  6E19               	movwf	(fputs@i+1)^0,c
  2242   001E6A  0E00               	movlw	0
  2243   001E6C  6E18               	movwf	fputs@i^0,c
  2244   001E6E  EF44  F00F         	goto	l2709
  2245   001E72                     l2705:
  2246   001E72  C017  F00A         	movff	fputs@c,fputc@c
  2247   001E76  6A0B               	clrf	(fputc@c+1)^0,c
  2248   001E78  C015  F00C         	movff	fputs@fp,fputc@fp
  2249   001E7C  C016  F00D         	movff	fputs@fp+1,fputc@fp+1
  2250   001E80  EC04  F00D         	call	_fputc	;wreg free
  2251   001E84  4A18               	infsnz	fputs@i^0,f,c
  2252   001E86  2A19               	incf	(fputs@i+1)^0,f,c
  2253   001E88                     l2709:
  2254   001E88  5018               	movf	fputs@i^0,w,c
  2255   001E8A  2413               	addwf	fputs@s^0,w,c
  2256   001E8C  6ED9               	movwf	fsr2l,c
  2257   001E8E  5019               	movf	(fputs@i+1)^0,w,c
  2258   001E90  2014               	addwfc	(fputs@s+1)^0,w,c
  2259   001E92  6EDA               	movwf	fsr2h,c
  2260   001E94  50DF               	movf	indf2,w,c
  2261   001E96  6E17               	movwf	fputs@c^0,c
  2262   001E98  5017               	movf	fputs@c^0,w,c
  2263   001E9A  A4D8               	btfss	status,2,c
  2264   001E9C  EF52  F00F         	goto	u1801
  2265   001EA0  EF54  F00F         	goto	u1800
  2266   001EA4                     u1801:
  2267   001EA4  EF39  F00F         	goto	l2705
  2268   001EA8                     u1800:
  2269   001EA8  0012               	return		;funcret
  2270   001EAA                     __end_of_fputs:
  2271                           	callstack 0
  2272                           
  2273 ;; *************** function _fputc *****************
  2274 ;; Defined at:
  2275 ;;		line 8 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\nf_fputc.c"
  2276 ;; Parameters:    Size  Location     Type
  2277 ;;  c               2    9[COMRAM] int 
  2278 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2279 ;;		 -> sprintf@f(11), 
  2280 ;; Auto vars:     Size  Location     Type
  2281 ;;		None
  2282 ;; Return value:  Size  Location     Type
  2283 ;;                  2    9[COMRAM] int 
  2284 ;; Registers used:
  2285 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2286 ;; Tracked objects:
  2287 ;;		On entry : 0/0
  2288 ;;		On exit  : 0/0
  2289 ;;		Unchanged: 0/0
  2290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2291 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2293 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2294 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2295 ;;Total ram usage:        9 bytes
  2296 ;; Hardware stack levels used: 1
  2297 ;; Hardware stack levels required when called: 4
  2298 ;; This function calls:
  2299 ;;		_putch
  2300 ;; This function is called by:
  2301 ;;		_pad
  2302 ;;		_vfpfcnvrt
  2303 ;;		_fputs
  2304 ;; This function uses a non-reentrant model
  2305 ;;
  2306                           
  2307                           	psect	text7
  2308   001A08                     __ptext7:
  2309                           	callstack 0
  2310   001A08                     _fputc:
  2311                           	callstack 23
  2312   001A08  500C               	movf	fputc@fp^0,w,c
  2313   001A0A  100D               	iorwf	(fputc@fp+1)^0,w,c
  2314   001A0C  B4D8               	btfsc	status,2,c
  2315   001A0E  EF0B  F00D         	goto	u1761
  2316   001A12  EF0D  F00D         	goto	u1760
  2317   001A16                     u1761:
  2318   001A16  EF16  F00D         	goto	l2693
  2319   001A1A                     u1760:
  2320   001A1A  500C               	movf	fputc@fp^0,w,c
  2321   001A1C  100D               	iorwf	(fputc@fp+1)^0,w,c
  2322   001A1E  A4D8               	btfss	status,2,c
  2323   001A20  EF14  F00D         	goto	u1771
  2324   001A24  EF16  F00D         	goto	u1770
  2325   001A28                     u1771:
  2326   001A28  EF1B  F00D         	goto	l2695
  2327   001A2C                     u1770:
  2328   001A2C                     l2693:
  2329   001A2C  500A               	movf	fputc@c^0,w,c
  2330   001A2E  EC12  F011         	call	_putch
  2331   001A32  EF68  F00D         	goto	l1230
  2332   001A36                     l2695:
  2333   001A36  EE20 F009          	lfsr	2,9
  2334   001A3A  500C               	movf	fputc@fp^0,w,c
  2335   001A3C  26D9               	addwf	fsr2l,f,c
  2336   001A3E  500D               	movf	(fputc@fp+1)^0,w,c
  2337   001A40  22DA               	addwfc	fsr2h,f,c
  2338   001A42  50DE               	movf	postinc2,w,c
  2339   001A44  10DE               	iorwf	postinc2,w,c
  2340   001A46  B4D8               	btfsc	status,2,c
  2341   001A48  EF28  F00D         	goto	u1781
  2342   001A4C  EF2A  F00D         	goto	u1780
  2343   001A50                     u1781:
  2344   001A50  EF45  F00D         	goto	l2699
  2345   001A54                     u1780:
  2346   001A54  EE20 F009          	lfsr	2,9
  2347   001A58  500C               	movf	fputc@fp^0,w,c
  2348   001A5A  26D9               	addwf	fsr2l,f,c
  2349   001A5C  500D               	movf	(fputc@fp+1)^0,w,c
  2350   001A5E  22DA               	addwfc	fsr2h,f,c
  2351   001A60  EE10 F003          	lfsr	1,3
  2352   001A64  500C               	movf	fputc@fp^0,w,c
  2353   001A66  26E1               	addwf	fsr1l,f,c
  2354   001A68  500D               	movf	(fputc@fp+1)^0,w,c
  2355   001A6A  22E2               	addwfc	fsr1h,f,c
  2356   001A6C  50DE               	movf	postinc2,w,c
  2357   001A6E  5CE6               	subwf	postinc1,w,c
  2358   001A70  50E6               	movf	postinc1,w,c
  2359   001A72  0A80               	xorlw	128
  2360   001A74  6E12               	movwf	(??_fputc+4)^0,c
  2361   001A76  50DE               	movf	postinc2,w,c
  2362   001A78  0A80               	xorlw	128
  2363   001A7A  5812               	subwfb	(??_fputc+4)^0,w,c
  2364   001A7C  B0D8               	btfsc	status,0,c
  2365   001A7E  EF43  F00D         	goto	u1791
  2366   001A82  EF45  F00D         	goto	u1790
  2367   001A86                     u1791:
  2368   001A86  EF68  F00D         	goto	l1230
  2369   001A8A                     u1790:
  2370   001A8A                     l2699:
  2371   001A8A  EE20 F003          	lfsr	2,3
  2372   001A8E  500C               	movf	fputc@fp^0,w,c
  2373   001A90  26D9               	addwf	fsr2l,f,c
  2374   001A92  500D               	movf	(fputc@fp+1)^0,w,c
  2375   001A94  22DA               	addwfc	fsr2h,f,c
  2376   001A96  CFDE F00E          	movff	postinc2,??_fputc
  2377   001A9A  CFDD F00F          	movff	postdec2,??_fputc+1
  2378   001A9E  C00C  FFD9         	movff	fputc@fp,fsr2l
  2379   001AA2  C00D  FFDA         	movff	fputc@fp+1,fsr2h
  2380   001AA6  CFDE F010          	movff	postinc2,??_fputc+2
  2381   001AAA  CFDD F011          	movff	postdec2,??_fputc+3
  2382   001AAE  500E               	movf	??_fputc^0,w,c
  2383   001AB0  2410               	addwf	(??_fputc+2)^0,w,c
  2384   001AB2  6ED9               	movwf	fsr2l,c
  2385   001AB4  500F               	movf	(??_fputc+1)^0,w,c
  2386   001AB6  2011               	addwfc	(??_fputc+3)^0,w,c
  2387   001AB8  6EDA               	movwf	fsr2h,c
  2388   001ABA  C00A  FFDF         	movff	fputc@c,indf2
  2389   001ABE  EE20 F003          	lfsr	2,3
  2390   001AC2  500C               	movf	fputc@fp^0,w,c
  2391   001AC4  26D9               	addwf	fsr2l,f,c
  2392   001AC6  500D               	movf	(fputc@fp+1)^0,w,c
  2393   001AC8  22DA               	addwfc	fsr2h,f,c
  2394   001ACA  2ADE               	incf	postinc2,f,c
  2395   001ACC  0E00               	movlw	0
  2396   001ACE  22DD               	addwfc	postdec2,f,c
  2397   001AD0                     l1230:
  2398   001AD0  0012               	return		;funcret
  2399   001AD2                     __end_of_fputc:
  2400                           	callstack 0
  2401                           
  2402 ;; *************** function _putch *****************
  2403 ;; Defined at:
  2404 ;;		line 7 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\putch.c"
  2405 ;; Parameters:    Size  Location     Type
  2406 ;;  c               1    wreg     unsigned char 
  2407 ;; Auto vars:     Size  Location     Type
  2408 ;;  c               1    0[COMRAM] unsigned char 
  2409 ;; Return value:  Size  Location     Type
  2410 ;;                  1    wreg      void 
  2411 ;; Registers used:
  2412 ;;		wreg
  2413 ;; Tracked objects:
  2414 ;;		On entry : 0/0
  2415 ;;		On exit  : 0/0
  2416 ;;		Unchanged: 0/0
  2417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2422 ;;Total ram usage:        0 bytes
  2423 ;; Hardware stack levels used: 1
  2424 ;; Hardware stack levels required when called: 3
  2425 ;; This function calls:
  2426 ;;		Nothing
  2427 ;; This function is called by:
  2428 ;;		_fputc
  2429 ;; This function uses a non-reentrant model
  2430 ;;
  2431                           
  2432                           	psect	text8
  2433   002224                     __ptext8:
  2434                           	callstack 0
  2435   002224                     _putch:
  2436                           	callstack 23
  2437   002224  0012               	return		;funcret
  2438   002226                     __end_of_putch:
  2439                           	callstack 0
  2440                           
  2441 ;; *************** function _abs *****************
  2442 ;; Defined at:
  2443 ;;		line 1 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\abs.c"
  2444 ;; Parameters:    Size  Location     Type
  2445 ;;  a               2   27[COMRAM] int 
  2446 ;; Auto vars:     Size  Location     Type
  2447 ;;		None
  2448 ;; Return value:  Size  Location     Type
  2449 ;;                  2   27[COMRAM] int 
  2450 ;; Registers used:
  2451 ;;		wreg, status,2, status,0
  2452 ;; Tracked objects:
  2453 ;;		On entry : 0/0
  2454 ;;		On exit  : 0/0
  2455 ;;		Unchanged: 0/0
  2456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2457 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2459 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2460 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2461 ;;Total ram usage:        4 bytes
  2462 ;; Hardware stack levels used: 1
  2463 ;; Hardware stack levels required when called: 3
  2464 ;; This function calls:
  2465 ;;		Nothing
  2466 ;; This function is called by:
  2467 ;;		_dtoa
  2468 ;; This function uses a non-reentrant model
  2469 ;;
  2470                           
  2471                           	psect	text9
  2472   001EEC                     __ptext9:
  2473                           	callstack 0
  2474   001EEC                     _abs:
  2475                           	callstack 23
  2476   001EEC  BE1D               	btfsc	(abs@a+1)^0,7,c
  2477   001EEE  EF83  F00F         	goto	u1980
  2478   001EF2  501D               	movf	(abs@a+1)^0,w,c
  2479   001EF4  E106               	bnz	u1981
  2480   001EF6  041C               	decf	abs@a^0,w,c
  2481   001EF8  B0D8               	btfsc	status,0,c
  2482   001EFA  EF81  F00F         	goto	u1981
  2483   001EFE  EF83  F00F         	goto	u1980
  2484   001F02                     u1981:
  2485   001F02  EF91  F00F         	goto	l1176
  2486   001F06                     u1980:
  2487   001F06  C01C  F01E         	movff	abs@a,??_abs
  2488   001F0A  C01D  F01F         	movff	abs@a+1,??_abs+1
  2489   001F0E  1E1E               	comf	??_abs^0,f,c
  2490   001F10  1E1F               	comf	(??_abs+1)^0,f,c
  2491   001F12  4A1E               	infsnz	??_abs^0,f,c
  2492   001F14  2A1F               	incf	(??_abs+1)^0,f,c
  2493   001F16  C01E  F01C         	movff	??_abs,?_abs
  2494   001F1A  C01F  F01D         	movff	??_abs+1,?_abs+1
  2495   001F1E  EF95  F00F         	goto	l1179
  2496   001F22                     l1176:
  2497   001F22  C01C  F01C         	movff	abs@a,?_abs
  2498   001F26  C01D  F01D         	movff	abs@a+1,?_abs+1
  2499   001F2A                     l1179:
  2500   001F2A  0012               	return		;funcret
  2501   001F2C                     __end_of_abs:
  2502                           	callstack 0
  2503                           
  2504 ;; *************** function ___aomod *****************
  2505 ;; Defined at:
  2506 ;;		line 9 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\aomod.c"
  2507 ;; Parameters:    Size  Location     Type
  2508 ;;  dividend        8    9[COMRAM] long long 
  2509 ;;  divisor         8   17[COMRAM] long long 
  2510 ;; Auto vars:     Size  Location     Type
  2511 ;;  sign            1   26[COMRAM] unsigned char 
  2512 ;;  counter         1   25[COMRAM] unsigned char 
  2513 ;; Return value:  Size  Location     Type
  2514 ;;                  8    9[COMRAM] long long 
  2515 ;; Registers used:
  2516 ;;		wreg, status,2, status,0
  2517 ;; Tracked objects:
  2518 ;;		On entry : 0/0
  2519 ;;		On exit  : 0/0
  2520 ;;		Unchanged: 0/0
  2521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2522 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2523 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2525 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2526 ;;Total ram usage:       18 bytes
  2527 ;; Hardware stack levels used: 1
  2528 ;; Hardware stack levels required when called: 3
  2529 ;; This function calls:
  2530 ;;		Nothing
  2531 ;; This function is called by:
  2532 ;;		_dtoa
  2533 ;; This function uses a non-reentrant model
  2534 ;;
  2535                           
  2536                           	psect	text10
  2537   001746                     __ptext10:
  2538                           	callstack 0
  2539   001746                     ___aomod:
  2540                           	callstack 23
  2541   001746  0E00               	movlw	0
  2542   001748  6E1B               	movwf	___aomod@sign^0,c
  2543   00174A  BE11               	btfsc	(___aomod@dividend+7)^0,7,c
  2544   00174C  EFAC  F00B         	goto	u1880
  2545   001750  EFAA  F00B         	goto	u1881
  2546   001754                     u1881:
  2547   001754  EFBE  F00B         	goto	l2769
  2548   001758                     u1880:
  2549   001758  1E11               	comf	(___aomod@dividend+7)^0,f,c
  2550   00175A  1E10               	comf	(___aomod@dividend+6)^0,f,c
  2551   00175C  1E0F               	comf	(___aomod@dividend+5)^0,f,c
  2552   00175E  1E0E               	comf	(___aomod@dividend+4)^0,f,c
  2553   001760  1E0D               	comf	(___aomod@dividend+3)^0,f,c
  2554   001762  1E0C               	comf	(___aomod@dividend+2)^0,f,c
  2555   001764  1E0B               	comf	(___aomod@dividend+1)^0,f,c
  2556   001766  6C0A               	negf	___aomod@dividend^0,c
  2557   001768  0E00               	movlw	0
  2558   00176A  220B               	addwfc	(___aomod@dividend+1)^0,f,c
  2559   00176C  220C               	addwfc	(___aomod@dividend+2)^0,f,c
  2560   00176E  220D               	addwfc	(___aomod@dividend+3)^0,f,c
  2561   001770  220E               	addwfc	(___aomod@dividend+4)^0,f,c
  2562   001772  220F               	addwfc	(___aomod@dividend+5)^0,f,c
  2563   001774  2210               	addwfc	(___aomod@dividend+6)^0,f,c
  2564   001776  2211               	addwfc	(___aomod@dividend+7)^0,f,c
  2565   001778  0E01               	movlw	1
  2566   00177A  6E1B               	movwf	___aomod@sign^0,c
  2567   00177C                     l2769:
  2568   00177C  BE19               	btfsc	(___aomod@divisor+7)^0,7,c
  2569   00177E  EFC5  F00B         	goto	u1890
  2570   001782  EFC3  F00B         	goto	u1891
  2571   001786                     u1891:
  2572   001786  EFD5  F00B         	goto	l2773
  2573   00178A                     u1890:
  2574   00178A  1E19               	comf	(___aomod@divisor+7)^0,f,c
  2575   00178C  1E18               	comf	(___aomod@divisor+6)^0,f,c
  2576   00178E  1E17               	comf	(___aomod@divisor+5)^0,f,c
  2577   001790  1E16               	comf	(___aomod@divisor+4)^0,f,c
  2578   001792  1E15               	comf	(___aomod@divisor+3)^0,f,c
  2579   001794  1E14               	comf	(___aomod@divisor+2)^0,f,c
  2580   001796  1E13               	comf	(___aomod@divisor+1)^0,f,c
  2581   001798  6C12               	negf	___aomod@divisor^0,c
  2582   00179A  0E00               	movlw	0
  2583   00179C  2213               	addwfc	(___aomod@divisor+1)^0,f,c
  2584   00179E  2214               	addwfc	(___aomod@divisor+2)^0,f,c
  2585   0017A0  2215               	addwfc	(___aomod@divisor+3)^0,f,c
  2586   0017A2  2216               	addwfc	(___aomod@divisor+4)^0,f,c
  2587   0017A4  2217               	addwfc	(___aomod@divisor+5)^0,f,c
  2588   0017A6  2218               	addwfc	(___aomod@divisor+6)^0,f,c
  2589   0017A8  2219               	addwfc	(___aomod@divisor+7)^0,f,c
  2590   0017AA                     l2773:
  2591   0017AA  5012               	movf	___aomod@divisor^0,w,c
  2592   0017AC  1013               	iorwf	(___aomod@divisor+1)^0,w,c
  2593   0017AE  1014               	iorwf	(___aomod@divisor+2)^0,w,c
  2594   0017B0  1015               	iorwf	(___aomod@divisor+3)^0,w,c
  2595   0017B2  1016               	iorwf	(___aomod@divisor+4)^0,w,c
  2596   0017B4  1017               	iorwf	(___aomod@divisor+5)^0,w,c
  2597   0017B6  1018               	iorwf	(___aomod@divisor+6)^0,w,c
  2598   0017B8  1019               	iorwf	(___aomod@divisor+7)^0,w,c
  2599   0017BA  B4D8               	btfsc	status,2,c
  2600   0017BC  EFE2  F00B         	goto	u1901
  2601   0017C0  EFE4  F00B         	goto	u1900
  2602   0017C4                     u1901:
  2603   0017C4  EF2C  F00C         	goto	l2789
  2604   0017C8                     u1900:
  2605   0017C8  0E01               	movlw	1
  2606   0017CA  6E1A               	movwf	___aomod@counter^0,c
  2607   0017CC  EFF2  F00B         	goto	l2779
  2608   0017D0                     l2777:
  2609   0017D0  90D8               	bcf	status,0,c
  2610   0017D2  3612               	rlcf	___aomod@divisor^0,f,c
  2611   0017D4  3613               	rlcf	(___aomod@divisor+1)^0,f,c
  2612   0017D6  3614               	rlcf	(___aomod@divisor+2)^0,f,c
  2613   0017D8  3615               	rlcf	(___aomod@divisor+3)^0,f,c
  2614   0017DA  3616               	rlcf	(___aomod@divisor+4)^0,f,c
  2615   0017DC  3617               	rlcf	(___aomod@divisor+5)^0,f,c
  2616   0017DE  3618               	rlcf	(___aomod@divisor+6)^0,f,c
  2617   0017E0  3619               	rlcf	(___aomod@divisor+7)^0,f,c
  2618   0017E2  2A1A               	incf	___aomod@counter^0,f,c
  2619   0017E4                     l2779:
  2620   0017E4  AE19               	btfss	(___aomod@divisor+7)^0,7,c
  2621   0017E6  EFF7  F00B         	goto	u1911
  2622   0017EA  EFF9  F00B         	goto	u1910
  2623   0017EE                     u1911:
  2624   0017EE  EFE8  F00B         	goto	l2777
  2625   0017F2                     u1910:
  2626   0017F2                     l2781:
  2627   0017F2  5012               	movf	___aomod@divisor^0,w,c
  2628   0017F4  5C0A               	subwf	___aomod@dividend^0,w,c
  2629   0017F6  5013               	movf	(___aomod@divisor+1)^0,w,c
  2630   0017F8  580B               	subwfb	(___aomod@dividend+1)^0,w,c
  2631   0017FA  5014               	movf	(___aomod@divisor+2)^0,w,c
  2632   0017FC  580C               	subwfb	(___aomod@dividend+2)^0,w,c
  2633   0017FE  5015               	movf	(___aomod@divisor+3)^0,w,c
  2634   001800  580D               	subwfb	(___aomod@dividend+3)^0,w,c
  2635   001802  5016               	movf	(___aomod@divisor+4)^0,w,c
  2636   001804  580E               	subwfb	(___aomod@dividend+4)^0,w,c
  2637   001806  5017               	movf	(___aomod@divisor+5)^0,w,c
  2638   001808  580F               	subwfb	(___aomod@dividend+5)^0,w,c
  2639   00180A  5018               	movf	(___aomod@divisor+6)^0,w,c
  2640   00180C  5810               	subwfb	(___aomod@dividend+6)^0,w,c
  2641   00180E  5019               	movf	(___aomod@divisor+7)^0,w,c
  2642   001810  5811               	subwfb	(___aomod@dividend+7)^0,w,c
  2643   001812  A0D8               	btfss	status,0,c
  2644   001814  EF0E  F00C         	goto	u1921
  2645   001818  EF10  F00C         	goto	u1920
  2646   00181C                     u1921:
  2647   00181C  EF20  F00C         	goto	l2785
  2648   001820                     u1920:
  2649   001820  5012               	movf	___aomod@divisor^0,w,c
  2650   001822  5E0A               	subwf	___aomod@dividend^0,f,c
  2651   001824  5013               	movf	(___aomod@divisor+1)^0,w,c
  2652   001826  5A0B               	subwfb	(___aomod@dividend+1)^0,f,c
  2653   001828  5014               	movf	(___aomod@divisor+2)^0,w,c
  2654   00182A  5A0C               	subwfb	(___aomod@dividend+2)^0,f,c
  2655   00182C  5015               	movf	(___aomod@divisor+3)^0,w,c
  2656   00182E  5A0D               	subwfb	(___aomod@dividend+3)^0,f,c
  2657   001830  5016               	movf	(___aomod@divisor+4)^0,w,c
  2658   001832  5A0E               	subwfb	(___aomod@dividend+4)^0,f,c
  2659   001834  5017               	movf	(___aomod@divisor+5)^0,w,c
  2660   001836  5A0F               	subwfb	(___aomod@dividend+5)^0,f,c
  2661   001838  5018               	movf	(___aomod@divisor+6)^0,w,c
  2662   00183A  5A10               	subwfb	(___aomod@dividend+6)^0,f,c
  2663   00183C  5019               	movf	(___aomod@divisor+7)^0,w,c
  2664   00183E  5A11               	subwfb	(___aomod@dividend+7)^0,f,c
  2665   001840                     l2785:
  2666   001840  90D8               	bcf	status,0,c
  2667   001842  3219               	rrcf	(___aomod@divisor+7)^0,f,c
  2668   001844  3218               	rrcf	(___aomod@divisor+6)^0,f,c
  2669   001846  3217               	rrcf	(___aomod@divisor+5)^0,f,c
  2670   001848  3216               	rrcf	(___aomod@divisor+4)^0,f,c
  2671   00184A  3215               	rrcf	(___aomod@divisor+3)^0,f,c
  2672   00184C  3214               	rrcf	(___aomod@divisor+2)^0,f,c
  2673   00184E  3213               	rrcf	(___aomod@divisor+1)^0,f,c
  2674   001850  3212               	rrcf	___aomod@divisor^0,f,c
  2675   001852  2E1A               	decfsz	___aomod@counter^0,f,c
  2676   001854  EFF9  F00B         	goto	l2781
  2677   001858                     l2789:
  2678   001858  501B               	movf	___aomod@sign^0,w,c
  2679   00185A  B4D8               	btfsc	status,2,c
  2680   00185C  EF32  F00C         	goto	u1931
  2681   001860  EF34  F00C         	goto	u1930
  2682   001864                     u1931:
  2683   001864  EF44  F00C         	goto	l2793
  2684   001868                     u1930:
  2685   001868  1E11               	comf	(___aomod@dividend+7)^0,f,c
  2686   00186A  1E10               	comf	(___aomod@dividend+6)^0,f,c
  2687   00186C  1E0F               	comf	(___aomod@dividend+5)^0,f,c
  2688   00186E  1E0E               	comf	(___aomod@dividend+4)^0,f,c
  2689   001870  1E0D               	comf	(___aomod@dividend+3)^0,f,c
  2690   001872  1E0C               	comf	(___aomod@dividend+2)^0,f,c
  2691   001874  1E0B               	comf	(___aomod@dividend+1)^0,f,c
  2692   001876  6C0A               	negf	___aomod@dividend^0,c
  2693   001878  0E00               	movlw	0
  2694   00187A  220B               	addwfc	(___aomod@dividend+1)^0,f,c
  2695   00187C  220C               	addwfc	(___aomod@dividend+2)^0,f,c
  2696   00187E  220D               	addwfc	(___aomod@dividend+3)^0,f,c
  2697   001880  220E               	addwfc	(___aomod@dividend+4)^0,f,c
  2698   001882  220F               	addwfc	(___aomod@dividend+5)^0,f,c
  2699   001884  2210               	addwfc	(___aomod@dividend+6)^0,f,c
  2700   001886  2211               	addwfc	(___aomod@dividend+7)^0,f,c
  2701   001888                     l2793:
  2702   001888  C00A  F00A         	movff	___aomod@dividend,?___aomod
  2703   00188C  C00B  F00B         	movff	___aomod@dividend+1,?___aomod+1
  2704   001890  C00C  F00C         	movff	___aomod@dividend+2,?___aomod+2
  2705   001894  C00D  F00D         	movff	___aomod@dividend+3,?___aomod+3
  2706   001898  C00E  F00E         	movff	___aomod@dividend+4,?___aomod+4
  2707   00189C  C00F  F00F         	movff	___aomod@dividend+5,?___aomod+5
  2708   0018A0  C010  F010         	movff	___aomod@dividend+6,?___aomod+6
  2709   0018A4  C011  F011         	movff	___aomod@dividend+7,?___aomod+7
  2710   0018A8  0012               	return		;funcret
  2711   0018AA                     __end_of___aomod:
  2712                           	callstack 0
  2713                           
  2714 ;; *************** function ___aodiv *****************
  2715 ;; Defined at:
  2716 ;;		line 9 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\aodiv.c"
  2717 ;; Parameters:    Size  Location     Type
  2718 ;;  dividend        8    9[COMRAM] long long 
  2719 ;;  divisor         8   17[COMRAM] long long 
  2720 ;; Auto vars:     Size  Location     Type
  2721 ;;  quotient        8   27[COMRAM] long long 
  2722 ;;  sign            1   26[COMRAM] unsigned char 
  2723 ;;  counter         1   25[COMRAM] unsigned char 
  2724 ;; Return value:  Size  Location     Type
  2725 ;;                  8    9[COMRAM] long long 
  2726 ;; Registers used:
  2727 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2728 ;; Tracked objects:
  2729 ;;		On entry : 0/0
  2730 ;;		On exit  : 0/0
  2731 ;;		Unchanged: 0/0
  2732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2733 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2734 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2736 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2737 ;;Total ram usage:       26 bytes
  2738 ;; Hardware stack levels used: 1
  2739 ;; Hardware stack levels required when called: 3
  2740 ;; This function calls:
  2741 ;;		Nothing
  2742 ;; This function is called by:
  2743 ;;		_dtoa
  2744 ;; This function uses a non-reentrant model
  2745 ;;
  2746                           
  2747                           	psect	text11
  2748   0015BE                     __ptext11:
  2749                           	callstack 0
  2750   0015BE                     ___aodiv:
  2751                           	callstack 23
  2752   0015BE  0E00               	movlw	0
  2753   0015C0  6E1B               	movwf	___aodiv@sign^0,c
  2754   0015C2  BE19               	btfsc	(___aodiv@divisor+7)^0,7,c
  2755   0015C4  EFE8  F00A         	goto	u1810
  2756   0015C8  EFE6  F00A         	goto	u1811
  2757   0015CC                     u1811:
  2758   0015CC  EFFA  F00A         	goto	l2725
  2759   0015D0                     u1810:
  2760   0015D0  1E19               	comf	(___aodiv@divisor+7)^0,f,c
  2761   0015D2  1E18               	comf	(___aodiv@divisor+6)^0,f,c
  2762   0015D4  1E17               	comf	(___aodiv@divisor+5)^0,f,c
  2763   0015D6  1E16               	comf	(___aodiv@divisor+4)^0,f,c
  2764   0015D8  1E15               	comf	(___aodiv@divisor+3)^0,f,c
  2765   0015DA  1E14               	comf	(___aodiv@divisor+2)^0,f,c
  2766   0015DC  1E13               	comf	(___aodiv@divisor+1)^0,f,c
  2767   0015DE  6C12               	negf	___aodiv@divisor^0,c
  2768   0015E0  0E00               	movlw	0
  2769   0015E2  2213               	addwfc	(___aodiv@divisor+1)^0,f,c
  2770   0015E4  2214               	addwfc	(___aodiv@divisor+2)^0,f,c
  2771   0015E6  2215               	addwfc	(___aodiv@divisor+3)^0,f,c
  2772   0015E8  2216               	addwfc	(___aodiv@divisor+4)^0,f,c
  2773   0015EA  2217               	addwfc	(___aodiv@divisor+5)^0,f,c
  2774   0015EC  2218               	addwfc	(___aodiv@divisor+6)^0,f,c
  2775   0015EE  2219               	addwfc	(___aodiv@divisor+7)^0,f,c
  2776   0015F0  0E01               	movlw	1
  2777   0015F2  6E1B               	movwf	___aodiv@sign^0,c
  2778   0015F4                     l2725:
  2779   0015F4  BE11               	btfsc	(___aodiv@dividend+7)^0,7,c
  2780   0015F6  EF01  F00B         	goto	u1820
  2781   0015FA  EFFF  F00A         	goto	u1821
  2782   0015FE                     u1821:
  2783   0015FE  EF13  F00B         	goto	l2731
  2784   001602                     u1820:
  2785   001602  1E11               	comf	(___aodiv@dividend+7)^0,f,c
  2786   001604  1E10               	comf	(___aodiv@dividend+6)^0,f,c
  2787   001606  1E0F               	comf	(___aodiv@dividend+5)^0,f,c
  2788   001608  1E0E               	comf	(___aodiv@dividend+4)^0,f,c
  2789   00160A  1E0D               	comf	(___aodiv@dividend+3)^0,f,c
  2790   00160C  1E0C               	comf	(___aodiv@dividend+2)^0,f,c
  2791   00160E  1E0B               	comf	(___aodiv@dividend+1)^0,f,c
  2792   001610  6C0A               	negf	___aodiv@dividend^0,c
  2793   001612  0E00               	movlw	0
  2794   001614  220B               	addwfc	(___aodiv@dividend+1)^0,f,c
  2795   001616  220C               	addwfc	(___aodiv@dividend+2)^0,f,c
  2796   001618  220D               	addwfc	(___aodiv@dividend+3)^0,f,c
  2797   00161A  220E               	addwfc	(___aodiv@dividend+4)^0,f,c
  2798   00161C  220F               	addwfc	(___aodiv@dividend+5)^0,f,c
  2799   00161E  2210               	addwfc	(___aodiv@dividend+6)^0,f,c
  2800   001620  2211               	addwfc	(___aodiv@dividend+7)^0,f,c
  2801   001622  0E01               	movlw	1
  2802   001624  1A1B               	xorwf	___aodiv@sign^0,f,c
  2803   001626                     l2731:
  2804   001626  EE20  F01C         	lfsr	2,___aodiv@quotient
  2805   00162A  0E07               	movlw	7
  2806   00162C                     u1831:
  2807   00162C  6ADE               	clrf	postinc2,c
  2808   00162E  06E8               	decf	wreg,f,c
  2809   001630  E2FD               	bc	u1831
  2810   001632  5012               	movf	___aodiv@divisor^0,w,c
  2811   001634  1013               	iorwf	(___aodiv@divisor+1)^0,w,c
  2812   001636  1014               	iorwf	(___aodiv@divisor+2)^0,w,c
  2813   001638  1015               	iorwf	(___aodiv@divisor+3)^0,w,c
  2814   00163A  1016               	iorwf	(___aodiv@divisor+4)^0,w,c
  2815   00163C  1017               	iorwf	(___aodiv@divisor+5)^0,w,c
  2816   00163E  1018               	iorwf	(___aodiv@divisor+6)^0,w,c
  2817   001640  1019               	iorwf	(___aodiv@divisor+7)^0,w,c
  2818   001642  B4D8               	btfsc	status,2,c
  2819   001644  EF26  F00B         	goto	u1841
  2820   001648  EF28  F00B         	goto	u1840
  2821   00164C                     u1841:
  2822   00164C  EF7A  F00B         	goto	l2753
  2823   001650                     u1840:
  2824   001650  0E01               	movlw	1
  2825   001652  6E1A               	movwf	___aodiv@counter^0,c
  2826   001654  EF36  F00B         	goto	l2739
  2827   001658                     l2737:
  2828   001658  90D8               	bcf	status,0,c
  2829   00165A  3612               	rlcf	___aodiv@divisor^0,f,c
  2830   00165C  3613               	rlcf	(___aodiv@divisor+1)^0,f,c
  2831   00165E  3614               	rlcf	(___aodiv@divisor+2)^0,f,c
  2832   001660  3615               	rlcf	(___aodiv@divisor+3)^0,f,c
  2833   001662  3616               	rlcf	(___aodiv@divisor+4)^0,f,c
  2834   001664  3617               	rlcf	(___aodiv@divisor+5)^0,f,c
  2835   001666  3618               	rlcf	(___aodiv@divisor+6)^0,f,c
  2836   001668  3619               	rlcf	(___aodiv@divisor+7)^0,f,c
  2837   00166A  2A1A               	incf	___aodiv@counter^0,f,c
  2838   00166C                     l2739:
  2839   00166C  AE19               	btfss	(___aodiv@divisor+7)^0,7,c
  2840   00166E  EF3B  F00B         	goto	u1851
  2841   001672  EF3D  F00B         	goto	u1850
  2842   001676                     u1851:
  2843   001676  EF2C  F00B         	goto	l2737
  2844   00167A                     u1850:
  2845   00167A                     l2741:
  2846   00167A  90D8               	bcf	status,0,c
  2847   00167C  361C               	rlcf	___aodiv@quotient^0,f,c
  2848   00167E  361D               	rlcf	(___aodiv@quotient+1)^0,f,c
  2849   001680  361E               	rlcf	(___aodiv@quotient+2)^0,f,c
  2850   001682  361F               	rlcf	(___aodiv@quotient+3)^0,f,c
  2851   001684  3620               	rlcf	(___aodiv@quotient+4)^0,f,c
  2852   001686  3621               	rlcf	(___aodiv@quotient+5)^0,f,c
  2853   001688  3622               	rlcf	(___aodiv@quotient+6)^0,f,c
  2854   00168A  3623               	rlcf	(___aodiv@quotient+7)^0,f,c
  2855   00168C  5012               	movf	___aodiv@divisor^0,w,c
  2856   00168E  5C0A               	subwf	___aodiv@dividend^0,w,c
  2857   001690  5013               	movf	(___aodiv@divisor+1)^0,w,c
  2858   001692  580B               	subwfb	(___aodiv@dividend+1)^0,w,c
  2859   001694  5014               	movf	(___aodiv@divisor+2)^0,w,c
  2860   001696  580C               	subwfb	(___aodiv@dividend+2)^0,w,c
  2861   001698  5015               	movf	(___aodiv@divisor+3)^0,w,c
  2862   00169A  580D               	subwfb	(___aodiv@dividend+3)^0,w,c
  2863   00169C  5016               	movf	(___aodiv@divisor+4)^0,w,c
  2864   00169E  580E               	subwfb	(___aodiv@dividend+4)^0,w,c
  2865   0016A0  5017               	movf	(___aodiv@divisor+5)^0,w,c
  2866   0016A2  580F               	subwfb	(___aodiv@dividend+5)^0,w,c
  2867   0016A4  5018               	movf	(___aodiv@divisor+6)^0,w,c
  2868   0016A6  5810               	subwfb	(___aodiv@dividend+6)^0,w,c
  2869   0016A8  5019               	movf	(___aodiv@divisor+7)^0,w,c
  2870   0016AA  5811               	subwfb	(___aodiv@dividend+7)^0,w,c
  2871   0016AC  A0D8               	btfss	status,0,c
  2872   0016AE  EF5B  F00B         	goto	u1861
  2873   0016B2  EF5D  F00B         	goto	u1860
  2874   0016B6                     u1861:
  2875   0016B6  EF6E  F00B         	goto	l2749
  2876   0016BA                     u1860:
  2877   0016BA  5012               	movf	___aodiv@divisor^0,w,c
  2878   0016BC  5E0A               	subwf	___aodiv@dividend^0,f,c
  2879   0016BE  5013               	movf	(___aodiv@divisor+1)^0,w,c
  2880   0016C0  5A0B               	subwfb	(___aodiv@dividend+1)^0,f,c
  2881   0016C2  5014               	movf	(___aodiv@divisor+2)^0,w,c
  2882   0016C4  5A0C               	subwfb	(___aodiv@dividend+2)^0,f,c
  2883   0016C6  5015               	movf	(___aodiv@divisor+3)^0,w,c
  2884   0016C8  5A0D               	subwfb	(___aodiv@dividend+3)^0,f,c
  2885   0016CA  5016               	movf	(___aodiv@divisor+4)^0,w,c
  2886   0016CC  5A0E               	subwfb	(___aodiv@dividend+4)^0,f,c
  2887   0016CE  5017               	movf	(___aodiv@divisor+5)^0,w,c
  2888   0016D0  5A0F               	subwfb	(___aodiv@dividend+5)^0,f,c
  2889   0016D2  5018               	movf	(___aodiv@divisor+6)^0,w,c
  2890   0016D4  5A10               	subwfb	(___aodiv@dividend+6)^0,f,c
  2891   0016D6  5019               	movf	(___aodiv@divisor+7)^0,w,c
  2892   0016D8  5A11               	subwfb	(___aodiv@dividend+7)^0,f,c
  2893   0016DA  801C               	bsf	___aodiv@quotient^0,0,c
  2894   0016DC                     l2749:
  2895   0016DC  90D8               	bcf	status,0,c
  2896   0016DE  3219               	rrcf	(___aodiv@divisor+7)^0,f,c
  2897   0016E0  3218               	rrcf	(___aodiv@divisor+6)^0,f,c
  2898   0016E2  3217               	rrcf	(___aodiv@divisor+5)^0,f,c
  2899   0016E4  3216               	rrcf	(___aodiv@divisor+4)^0,f,c
  2900   0016E6  3215               	rrcf	(___aodiv@divisor+3)^0,f,c
  2901   0016E8  3214               	rrcf	(___aodiv@divisor+2)^0,f,c
  2902   0016EA  3213               	rrcf	(___aodiv@divisor+1)^0,f,c
  2903   0016EC  3212               	rrcf	___aodiv@divisor^0,f,c
  2904   0016EE  2E1A               	decfsz	___aodiv@counter^0,f,c
  2905   0016F0  EF3D  F00B         	goto	l2741
  2906   0016F4                     l2753:
  2907   0016F4  501B               	movf	___aodiv@sign^0,w,c
  2908   0016F6  B4D8               	btfsc	status,2,c
  2909   0016F8  EF80  F00B         	goto	u1871
  2910   0016FC  EF82  F00B         	goto	u1870
  2911   001700                     u1871:
  2912   001700  EF92  F00B         	goto	l2757
  2913   001704                     u1870:
  2914   001704  1E23               	comf	(___aodiv@quotient+7)^0,f,c
  2915   001706  1E22               	comf	(___aodiv@quotient+6)^0,f,c
  2916   001708  1E21               	comf	(___aodiv@quotient+5)^0,f,c
  2917   00170A  1E20               	comf	(___aodiv@quotient+4)^0,f,c
  2918   00170C  1E1F               	comf	(___aodiv@quotient+3)^0,f,c
  2919   00170E  1E1E               	comf	(___aodiv@quotient+2)^0,f,c
  2920   001710  1E1D               	comf	(___aodiv@quotient+1)^0,f,c
  2921   001712  6C1C               	negf	___aodiv@quotient^0,c
  2922   001714  0E00               	movlw	0
  2923   001716  221D               	addwfc	(___aodiv@quotient+1)^0,f,c
  2924   001718  221E               	addwfc	(___aodiv@quotient+2)^0,f,c
  2925   00171A  221F               	addwfc	(___aodiv@quotient+3)^0,f,c
  2926   00171C  2220               	addwfc	(___aodiv@quotient+4)^0,f,c
  2927   00171E  2221               	addwfc	(___aodiv@quotient+5)^0,f,c
  2928   001720  2222               	addwfc	(___aodiv@quotient+6)^0,f,c
  2929   001722  2223               	addwfc	(___aodiv@quotient+7)^0,f,c
  2930   001724                     l2757:
  2931   001724  C01C  F00A         	movff	___aodiv@quotient,?___aodiv
  2932   001728  C01D  F00B         	movff	___aodiv@quotient+1,?___aodiv+1
  2933   00172C  C01E  F00C         	movff	___aodiv@quotient+2,?___aodiv+2
  2934   001730  C01F  F00D         	movff	___aodiv@quotient+3,?___aodiv+3
  2935   001734  C020  F00E         	movff	___aodiv@quotient+4,?___aodiv+4
  2936   001738  C021  F00F         	movff	___aodiv@quotient+5,?___aodiv+5
  2937   00173C  C022  F010         	movff	___aodiv@quotient+6,?___aodiv+6
  2938   001740  C023  F011         	movff	___aodiv@quotient+7,?___aodiv+7
  2939   001744  0012               	return		;funcret
  2940   001746                     __end_of___aodiv:
  2941                           	callstack 0
  2942                           
  2943 ;; *************** function _atoi *****************
  2944 ;; Defined at:
  2945 ;;		line 4 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\atoi.c"
  2946 ;; Parameters:    Size  Location     Type
  2947 ;;  s               2   15[COMRAM] PTR const unsigned char 
  2948 ;;		 -> STR_2(29), STR_1(29), 
  2949 ;; Auto vars:     Size  Location     Type
  2950 ;;  n               2   22[COMRAM] int 
  2951 ;;  neg             2   20[COMRAM] int 
  2952 ;; Return value:  Size  Location     Type
  2953 ;;                  2   15[COMRAM] int 
  2954 ;; Registers used:
  2955 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2956 ;; Tracked objects:
  2957 ;;		On entry : 0/0
  2958 ;;		On exit  : 0/0
  2959 ;;		Unchanged: 0/0
  2960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2961 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2962 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2963 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2964 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2965 ;;Total ram usage:        9 bytes
  2966 ;; Hardware stack levels used: 1
  2967 ;; Hardware stack levels required when called: 4
  2968 ;; This function calls:
  2969 ;;		___wmul
  2970 ;;		_isdigit
  2971 ;;		_isspace
  2972 ;; This function is called by:
  2973 ;;		_vfpfcnvrt
  2974 ;; This function uses a non-reentrant model
  2975 ;;
  2976                           
  2977                           	psect	text12
  2978   0018AA                     __ptext12:
  2979                           	callstack 0
  2980   0018AA                     _atoi:
  2981                           	callstack 23
  2982   0018AA  0E00               	movlw	0
  2983   0018AC  6E18               	movwf	(atoi@n+1)^0,c
  2984   0018AE  0E00               	movlw	0
  2985   0018B0  6E17               	movwf	atoi@n^0,c
  2986   0018B2  0E00               	movlw	0
  2987   0018B4  6E16               	movwf	(atoi@neg+1)^0,c
  2988   0018B6  0E00               	movlw	0
  2989   0018B8  6E15               	movwf	atoi@neg^0,c
  2990   0018BA  EF61  F00C         	goto	l2905
  2991   0018BE                     l2901:
  2992   0018BE  4A10               	infsnz	atoi@s^0,f,c
  2993   0018C0  2A11               	incf	(atoi@s+1)^0,f,c
  2994   0018C2                     l2905:
  2995   0018C2  C010  FFF6         	movff	atoi@s,tblptrl
  2996   0018C6  C011  FFF7         	movff	atoi@s+1,tblptrh
  2997   0018CA                     	if	0	;tblptru may be non-zero
  2998   0018CA                     	endif
  2999   0018CA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3000   0018CA  0E00               	movlw	low (__mediumconst shr (0+16))
  3001   0018CC  6EF8               	movwf	tblptru,c
  3002   0018CE                     	endif
  3003   0018CE  0008               	tblrd		*
  3004   0018D0  50F5               	movf	tablat,w,c
  3005   0018D2  0A20               	xorlw	32
  3006   0018D4  B4D8               	btfsc	status,2,c
  3007   0018D6  EF6F  F00C         	goto	u2181
  3008   0018DA  EF71  F00C         	goto	u2180
  3009   0018DE                     u2181:
  3010   0018DE  EF5F  F00C         	goto	l2901
  3011   0018E2                     u2180:
  3012   0018E2  C010  FFF6         	movff	atoi@s,tblptrl
  3013   0018E6  C011  FFF7         	movff	atoi@s+1,tblptrh
  3014   0018EA                     	if	0	;tblptru may be non-zero
  3015   0018EA                     	endif
  3016   0018EA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3017   0018EA  0E00               	movlw	low (__mediumconst shr (0+16))
  3018   0018EC  6EF8               	movwf	tblptru,c
  3019   0018EE                     	endif
  3020   0018EE  0008               	tblrd		*
  3021   0018F0  CFF5 F012          	movff	tablat,??_atoi
  3022   0018F4  0EF7               	movlw	247
  3023   0018F6  2412               	addwf	??_atoi^0,w,c
  3024   0018F8  6E13               	movwf	(??_atoi+1)^0,c
  3025   0018FA  6A14               	clrf	(??_atoi+2)^0,c
  3026   0018FC  0EFF               	movlw	255
  3027   0018FE  2214               	addwfc	(??_atoi+2)^0,f,c
  3028   001900  5014               	movf	(??_atoi+2)^0,w,c
  3029   001902  E109               	bnz	u2190
  3030   001904  0E05               	movlw	5
  3031   001906  5C13               	subwf	(??_atoi+1)^0,w,c
  3032   001908  A0D8               	btfss	status,0,c
  3033   00190A  EF89  F00C         	goto	u2191
  3034   00190E  EF8B  F00C         	goto	u2190
  3035   001912                     u2191:
  3036   001912  EF5F  F00C         	goto	l2901
  3037   001916                     u2190:
  3038   001916  EF95  F00C         	goto	l2913
  3039   00191A                     l2909:
  3040   00191A  0E00               	movlw	0
  3041   00191C  6E16               	movwf	(atoi@neg+1)^0,c
  3042   00191E  0E01               	movlw	1
  3043   001920  6E15               	movwf	atoi@neg^0,c
  3044   001922                     l2911:
  3045   001922  4A10               	infsnz	atoi@s^0,f,c
  3046   001924  2A11               	incf	(atoi@s+1)^0,f,c
  3047   001926  EFCE  F00C         	goto	l2921
  3048   00192A                     l2913:
  3049   00192A  C010  FFF6         	movff	atoi@s,tblptrl
  3050   00192E  C011  FFF7         	movff	atoi@s+1,tblptrh
  3051   001932                     	if	0	;tblptru may be non-zero
  3052   001932                     	endif
  3053   001932                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3054   001932  0E00               	movlw	low (__mediumconst shr (0+16))
  3055   001934  6EF8               	movwf	tblptru,c
  3056   001936                     	endif
  3057   001936  0008               	tblrd		*
  3058   001938  50F5               	movf	tablat,w,c
  3059   00193A  6E12               	movwf	??_atoi^0,c
  3060   00193C  6A13               	clrf	(??_atoi+1)^0,c
  3061                           
  3062                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3063                           ; Switch size 1, requested type "simple"
  3064                           ; Number of cases is 1, Range of values is 0 to 0
  3065                           ; switch strategies available:
  3066                           ; Name         Instructions Cycles
  3067                           ; simple_byte            4     3 (average)
  3068                           ;	Chosen strategy is simple_byte
  3069   00193E  5013               	movf	(??_atoi+1)^0,w,c
  3070   001940  0A00               	xorlw	0	; case 0
  3071   001942  B4D8               	btfsc	status,2,c
  3072   001944  EFA6  F00C         	goto	l3361
  3073   001948  EFCE  F00C         	goto	l2921
  3074   00194C                     l3361:
  3075                           
  3076                           ; Switch size 1, requested type "simple"
  3077                           ; Number of cases is 2, Range of values is 43 to 45
  3078                           ; switch strategies available:
  3079                           ; Name         Instructions Cycles
  3080                           ; simple_byte            7     4 (average)
  3081                           ;	Chosen strategy is simple_byte
  3082   00194C  5012               	movf	??_atoi^0,w,c
  3083   00194E  0A2B               	xorlw	43	; case 43
  3084   001950  B4D8               	btfsc	status,2,c
  3085   001952  EF91  F00C         	goto	l2911
  3086   001956  0A06               	xorlw	6	; case 45
  3087   001958  B4D8               	btfsc	status,2,c
  3088   00195A  EF8D  F00C         	goto	l2909
  3089   00195E  EFCE  F00C         	goto	l2921
  3090   001962                     l2915:
  3091   001962  C017  F00A         	movff	atoi@n,___wmul@multiplier
  3092   001966  C018  F00B         	movff	atoi@n+1,___wmul@multiplier+1
  3093   00196A  0E00               	movlw	0
  3094   00196C  6E0D               	movwf	(___wmul@multiplicand+1)^0,c
  3095   00196E  0E0A               	movlw	10
  3096   001970  6E0C               	movwf	___wmul@multiplicand^0,c
  3097   001972  EC7A  F010         	call	___wmul	;wreg free
  3098   001976  C010  FFF6         	movff	atoi@s,tblptrl
  3099   00197A  C011  FFF7         	movff	atoi@s+1,tblptrh
  3100   00197E                     	if	0	;tblptru may be non-zero
  3101   00197E                     	endif
  3102   00197E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3103   00197E  0E00               	movlw	low (__mediumconst shr (0+16))
  3104   001980  6EF8               	movwf	tblptru,c
  3105   001982                     	endif
  3106   001982  0008               	tblrd		*
  3107   001984  50F5               	movf	tablat,w,c
  3108   001986  5E0A               	subwf	?___wmul^0,f,c
  3109   001988  0E00               	movlw	0
  3110   00198A  5A0B               	subwfb	(?___wmul+1)^0,f,c
  3111   00198C  0E30               	movlw	48
  3112   00198E  240A               	addwf	?___wmul^0,w,c
  3113   001990  6E17               	movwf	atoi@n^0,c
  3114   001992  0E00               	movlw	0
  3115   001994  200B               	addwfc	(?___wmul+1)^0,w,c
  3116   001996  6E18               	movwf	(atoi@n+1)^0,c
  3117   001998  EF91  F00C         	goto	l2911
  3118   00199C                     l2921:
  3119   00199C  C010  FFF6         	movff	atoi@s,tblptrl
  3120   0019A0  C011  FFF7         	movff	atoi@s+1,tblptrh
  3121   0019A4                     	if	0	;tblptru may be non-zero
  3122   0019A4                     	endif
  3123   0019A4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3124   0019A4  0E00               	movlw	low (__mediumconst shr (0+16))
  3125   0019A6  6EF8               	movwf	tblptru,c
  3126   0019A8                     	endif
  3127   0019A8  0008               	tblrd		*
  3128   0019AA  CFF5 F012          	movff	tablat,??_atoi
  3129   0019AE  0ED0               	movlw	208
  3130   0019B0  2412               	addwf	??_atoi^0,w,c
  3131   0019B2  6E13               	movwf	(??_atoi+1)^0,c
  3132   0019B4  6A14               	clrf	(??_atoi+2)^0,c
  3133   0019B6  0EFF               	movlw	255
  3134   0019B8  2214               	addwfc	(??_atoi+2)^0,f,c
  3135   0019BA  5014               	movf	(??_atoi+2)^0,w,c
  3136   0019BC  E109               	bnz	u2200
  3137   0019BE  0E0A               	movlw	10
  3138   0019C0  5C13               	subwf	(??_atoi+1)^0,w,c
  3139   0019C2  A0D8               	btfss	status,0,c
  3140   0019C4  EFE6  F00C         	goto	u2201
  3141   0019C8  EFE8  F00C         	goto	u2200
  3142   0019CC                     u2201:
  3143   0019CC  EFB1  F00C         	goto	l2915
  3144   0019D0                     u2200:
  3145   0019D0  5015               	movf	atoi@neg^0,w,c
  3146   0019D2  1016               	iorwf	(atoi@neg+1)^0,w,c
  3147   0019D4  A4D8               	btfss	status,2,c
  3148   0019D6  EFEF  F00C         	goto	u2211
  3149   0019DA  EFF1  F00C         	goto	u2210
  3150   0019DE                     u2211:
  3151   0019DE  EFFF  F00C         	goto	l1201
  3152   0019E2                     u2210:
  3153   0019E2  C017  F012         	movff	atoi@n,??_atoi
  3154   0019E6  C018  F013         	movff	atoi@n+1,??_atoi+1
  3155   0019EA  1E12               	comf	??_atoi^0,f,c
  3156   0019EC  1E13               	comf	(??_atoi+1)^0,f,c
  3157   0019EE  4A12               	infsnz	??_atoi^0,f,c
  3158   0019F0  2A13               	incf	(??_atoi+1)^0,f,c
  3159   0019F2  C012  F010         	movff	??_atoi,?_atoi
  3160   0019F6  C013  F011         	movff	??_atoi+1,?_atoi+1
  3161   0019FA  EF03  F00D         	goto	l1204
  3162   0019FE                     l1201:
  3163   0019FE  C017  F010         	movff	atoi@n,?_atoi
  3164   001A02  C018  F011         	movff	atoi@n+1,?_atoi+1
  3165   001A06                     l1204:
  3166   001A06  0012               	return		;funcret
  3167   001A08                     __end_of_atoi:
  3168                           	callstack 0
  3169                           
  3170 ;; *************** function _isspace *****************
  3171 ;; Defined at:
  3172 ;;		line 5 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\isspace.c"
  3173 ;; Parameters:    Size  Location     Type
  3174 ;;  c               2    9[COMRAM] int 
  3175 ;; Auto vars:     Size  Location     Type
  3176 ;;		None
  3177 ;; Return value:  Size  Location     Type
  3178 ;;                  2    9[COMRAM] int 
  3179 ;; Registers used:
  3180 ;;		wreg, status,2, status,0
  3181 ;; Tracked objects:
  3182 ;;		On entry : 0/0
  3183 ;;		On exit  : 0/0
  3184 ;;		Unchanged: 0/0
  3185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3186 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3187 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3188 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3189 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3190 ;;Total ram usage:        5 bytes
  3191 ;; Hardware stack levels used: 1
  3192 ;; Hardware stack levels required when called: 3
  3193 ;; This function calls:
  3194 ;;		Nothing
  3195 ;; This function is called by:
  3196 ;;		_atoi
  3197 ;; This function uses a non-reentrant model
  3198 ;;
  3199                           
  3200                           	psect	text13
  3201   001E20                     __ptext13:
  3202                           	callstack 0
  3203   001E20                     _isspace:
  3204                           	callstack 23
  3205   001E20  0E01               	movlw	1
  3206   001E22  6E0E               	movwf	_isspace$2347^0,c
  3207   001E24  0E20               	movlw	32
  3208   001E26  180A               	xorwf	isspace@c^0,w,c
  3209   001E28  100B               	iorwf	(isspace@c+1)^0,w,c
  3210   001E2A  B4D8               	btfsc	status,2,c
  3211   001E2C  EF1A  F00F         	goto	u2011
  3212   001E30  EF1C  F00F         	goto	u2010
  3213   001E34                     u2011:
  3214   001E34  EF2F  F00F         	goto	l2831
  3215   001E38                     u2010:
  3216   001E38  0EF7               	movlw	247
  3217   001E3A  240A               	addwf	isspace@c^0,w,c
  3218   001E3C  6E0C               	movwf	??_isspace^0,c
  3219   001E3E  0EFF               	movlw	255
  3220   001E40  200B               	addwfc	(isspace@c+1)^0,w,c
  3221   001E42  6E0D               	movwf	(??_isspace+1)^0,c
  3222   001E44  500D               	movf	(??_isspace+1)^0,w,c
  3223   001E46  E109               	bnz	u2020
  3224   001E48  0E05               	movlw	5
  3225   001E4A  5C0C               	subwf	??_isspace^0,w,c
  3226   001E4C  A0D8               	btfss	status,0,c
  3227   001E4E  EF2B  F00F         	goto	u2021
  3228   001E52  EF2D  F00F         	goto	u2020
  3229   001E56                     u2021:
  3230   001E56  EF2F  F00F         	goto	l2831
  3231   001E5A                     u2020:
  3232   001E5A  0E00               	movlw	0
  3233   001E5C  6E0E               	movwf	_isspace$2347^0,c
  3234   001E5E                     l2831:
  3235   001E5E  C00E  F00A         	movff	_isspace$2347,?_isspace
  3236   001E62  6A0B               	clrf	(?_isspace+1)^0,c
  3237   001E64  0012               	return		;funcret
  3238   001E66                     __end_of_isspace:
  3239                           	callstack 0
  3240                           
  3241 ;; *************** function _isdigit *****************
  3242 ;; Defined at:
  3243 ;;		line 5 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\isdigit.c"
  3244 ;; Parameters:    Size  Location     Type
  3245 ;;  c               2    9[COMRAM] int 
  3246 ;; Auto vars:     Size  Location     Type
  3247 ;;		None
  3248 ;; Return value:  Size  Location     Type
  3249 ;;                  2    9[COMRAM] int 
  3250 ;; Registers used:
  3251 ;;		wreg, status,2, status,0
  3252 ;; Tracked objects:
  3253 ;;		On entry : 0/0
  3254 ;;		On exit  : 0/0
  3255 ;;		Unchanged: 0/0
  3256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3257 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3259 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3260 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3261 ;;Total ram usage:        4 bytes
  3262 ;; Hardware stack levels used: 1
  3263 ;; Hardware stack levels required when called: 3
  3264 ;; This function calls:
  3265 ;;		Nothing
  3266 ;; This function is called by:
  3267 ;;		_vfpfcnvrt
  3268 ;;		_atoi
  3269 ;; This function uses a non-reentrant model
  3270 ;;
  3271                           
  3272                           	psect	text14
  3273   001FCA                     __ptext14:
  3274                           	callstack 0
  3275   001FCA                     _isdigit:
  3276                           	callstack 24
  3277   001FCA  0ED0               	movlw	208
  3278   001FCC  240A               	addwf	isdigit@c^0,w,c
  3279   001FCE  6E0C               	movwf	??_isdigit^0,c
  3280   001FD0  0EFF               	movlw	255
  3281   001FD2  200B               	addwfc	(isdigit@c+1)^0,w,c
  3282   001FD4  6E0D               	movwf	(??_isdigit+1)^0,c
  3283   001FD6  500D               	movf	(??_isdigit+1)^0,w,c
  3284   001FD8  E10A               	bnz	u1990
  3285   001FDA  0E0A               	movlw	10
  3286   001FDC  5C0C               	subwf	??_isdigit^0,w,c
  3287   001FDE  A0D8               	btfss	status,0,c
  3288   001FE0  EFF4  F00F         	goto	u1991
  3289   001FE4  EFF7  F00F         	goto	u1990
  3290   001FE8                     u1991:
  3291   001FE8  0E01               	movlw	1
  3292   001FEA  EFF8  F00F         	goto	u2000
  3293   001FEE                     u1990:
  3294   001FEE  0E00               	movlw	0
  3295   001FF0                     u2000:
  3296   001FF0  6E0A               	movwf	?_isdigit^0,c
  3297   001FF2  6A0B               	clrf	(?_isdigit+1)^0,c
  3298   001FF4  0012               	return		;funcret
  3299   001FF6                     __end_of_isdigit:
  3300                           	callstack 0
  3301                           
  3302 ;; *************** function ___wmul *****************
  3303 ;; Defined at:
  3304 ;;		line 15 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\Umul16.c"
  3305 ;; Parameters:    Size  Location     Type
  3306 ;;  multiplier      2    9[COMRAM] unsigned int 
  3307 ;;  multiplicand    2   11[COMRAM] unsigned int 
  3308 ;; Auto vars:     Size  Location     Type
  3309 ;;  product         2   13[COMRAM] unsigned int 
  3310 ;; Return value:  Size  Location     Type
  3311 ;;                  2    9[COMRAM] unsigned int 
  3312 ;; Registers used:
  3313 ;;		wreg, status,2, status,0, prodl, prodh
  3314 ;; Tracked objects:
  3315 ;;		On entry : 0/0
  3316 ;;		On exit  : 0/0
  3317 ;;		Unchanged: 0/0
  3318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3319 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3320 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3322 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3323 ;;Total ram usage:        6 bytes
  3324 ;; Hardware stack levels used: 1
  3325 ;; Hardware stack levels required when called: 3
  3326 ;; This function calls:
  3327 ;;		Nothing
  3328 ;; This function is called by:
  3329 ;;		_atoi
  3330 ;;		_setMotorPWM
  3331 ;; This function uses a non-reentrant model
  3332 ;;
  3333                           
  3334                           	psect	text15
  3335   0020F4                     __ptext15:
  3336                           	callstack 0
  3337   0020F4                     ___wmul:
  3338                           	callstack 23
  3339   0020F4  500A               	movf	___wmul@multiplier^0,w,c
  3340   0020F6  020C               	mulwf	___wmul@multiplicand^0,c
  3341   0020F8  CFF3 F00E          	movff	prodl,___wmul@product
  3342   0020FC  CFF4 F00F          	movff	prodh,___wmul@product+1
  3343   002100  500A               	movf	___wmul@multiplier^0,w,c
  3344   002102  020D               	mulwf	(___wmul@multiplicand+1)^0,c
  3345   002104  50F3               	movf	243,w,c
  3346   002106  260F               	addwf	(___wmul@product+1)^0,f,c
  3347   002108  500B               	movf	(___wmul@multiplier+1)^0,w,c
  3348   00210A  020C               	mulwf	___wmul@multiplicand^0,c
  3349   00210C  50F3               	movf	243,w,c
  3350   00210E  260F               	addwf	(___wmul@product+1)^0,f,c
  3351   002110  C00E  F00A         	movff	___wmul@product,?___wmul
  3352   002114  C00F  F00B         	movff	___wmul@product+1,?___wmul+1
  3353   002118  0012               	return		;funcret
  3354   00211A                     __end_of___wmul:
  3355                           	callstack 0
  3356                           
  3357 ;; *************** function _sendTxBuf *****************
  3358 ;; Defined at:
  3359 ;;		line 97 in file "serial.c"
  3360 ;; Parameters:    Size  Location     Type
  3361 ;;		None
  3362 ;; Auto vars:     Size  Location     Type
  3363 ;;		None
  3364 ;; Return value:  Size  Location     Type
  3365 ;;                  1    wreg      void 
  3366 ;; Registers used:
  3367 ;;		wreg, status,2, status,0, cstack
  3368 ;; Tracked objects:
  3369 ;;		On entry : 0/0
  3370 ;;		On exit  : 0/0
  3371 ;;		Unchanged: 0/0
  3372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3377 ;;Total ram usage:        0 bytes
  3378 ;; Hardware stack levels used: 1
  3379 ;; Hardware stack levels required when called: 4
  3380 ;; This function calls:
  3381 ;;		_isDataInTxBuf
  3382 ;; This function is called by:
  3383 ;;		_main
  3384 ;; This function uses a non-reentrant model
  3385 ;;
  3386                           
  3387                           	psect	text16
  3388   002178                     __ptext16:
  3389                           	callstack 0
  3390   002178                     _sendTxBuf:
  3391                           	callstack 26
  3392   002178                     
  3393                           ;serial.c: 98:     if (isDataInTxBuf()) {PIE4bits.TX4IE=1;}
  3394   002178  ECC9  F010         	call	_isDataInTxBuf	;wreg free
  3395   00217C  0900               	iorlw	0
  3396   00217E  B4D8               	btfsc	status,2,c
  3397   002180  EFC4  F010         	goto	u2401
  3398   002184  EFC6  F010         	goto	u2400
  3399   002188                     u2401:
  3400   002188  EFC8  F010         	goto	l275
  3401   00218C                     u2400:
  3402   00218C  010E               	movlb	14	; () banked
  3403   00218E  852D               	bsf	45,2,b	;volatile
  3404   002190                     l275:
  3405   002190  0012               	return		;funcret
  3406   002192                     __end_of_sendTxBuf:
  3407                           	callstack 0
  3408                           
  3409 ;; *************** function _isDataInTxBuf *****************
  3410 ;; Defined at:
  3411 ;;		line 82 in file "serial.c"
  3412 ;; Parameters:    Size  Location     Type
  3413 ;;		None
  3414 ;; Auto vars:     Size  Location     Type
  3415 ;;		None
  3416 ;; Return value:  Size  Location     Type
  3417 ;;                  1    wreg      unsigned char 
  3418 ;; Registers used:
  3419 ;;		wreg, status,2, status,0
  3420 ;; Tracked objects:
  3421 ;;		On entry : 0/0
  3422 ;;		On exit  : 0/0
  3423 ;;		Unchanged: 0/0
  3424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3429 ;;Total ram usage:        0 bytes
  3430 ;; Hardware stack levels used: 1
  3431 ;; Hardware stack levels required when called: 3
  3432 ;; This function calls:
  3433 ;;		Nothing
  3434 ;; This function is called by:
  3435 ;;		_sendTxBuf
  3436 ;; This function uses a non-reentrant model
  3437 ;;
  3438                           
  3439                           	psect	text17
  3440   002192                     __ptext17:
  3441                           	callstack 0
  3442   002192                     _isDataInTxBuf:
  3443                           	callstack 26
  3444   002192                     
  3445                           ;serial.c: 83:     return (TxBufWriteCnt!=TxBufReadCnt);
  3446   002192  5052               	movf	_TxBufReadCnt^0,w,c	;volatile
  3447   002194  1853               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  3448   002196  A4D8               	btfss	status,2,c
  3449   002198  EFD0  F010         	goto	u2321
  3450   00219C  EFD3  F010         	goto	u2320
  3451   0021A0                     u2321:
  3452   0021A0  0E01               	movlw	1
  3453   0021A2  EFD4  F010         	goto	u2330
  3454   0021A6                     u2320:
  3455   0021A6  0E00               	movlw	0
  3456   0021A8                     u2330:
  3457   0021A8  0012               	return		;funcret
  3458   0021AA                     __end_of_isDataInTxBuf:
  3459                           	callstack 0
  3460                           
  3461 ;; *************** function _isDataInRxBuf *****************
  3462 ;; Defined at:
  3463 ;;		line 62 in file "serial.c"
  3464 ;; Parameters:    Size  Location     Type
  3465 ;;		None
  3466 ;; Auto vars:     Size  Location     Type
  3467 ;;		None
  3468 ;; Return value:  Size  Location     Type
  3469 ;;                  1    wreg      unsigned char 
  3470 ;; Registers used:
  3471 ;;		wreg, status,2, status,0
  3472 ;; Tracked objects:
  3473 ;;		On entry : 0/0
  3474 ;;		On exit  : 0/0
  3475 ;;		Unchanged: 0/0
  3476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3481 ;;Total ram usage:        0 bytes
  3482 ;; Hardware stack levels used: 1
  3483 ;; Hardware stack levels required when called: 3
  3484 ;; This function calls:
  3485 ;;		Nothing
  3486 ;; This function is called by:
  3487 ;;		_main
  3488 ;; This function uses a non-reentrant model
  3489 ;;
  3490                           
  3491                           	psect	text18
  3492   0021AA                     __ptext18:
  3493                           	callstack 0
  3494   0021AA                     _isDataInRxBuf:
  3495                           	callstack 27
  3496   0021AA                     
  3497                           ;serial.c: 63:     return (RxBufWriteCnt!=RxBufReadCnt);
  3498   0021AA  5054               	movf	_RxBufReadCnt^0,w,c	;volatile
  3499   0021AC  1855               	xorwf	_RxBufWriteCnt^0,w,c	;volatile
  3500   0021AE  A4D8               	btfss	status,2,c
  3501   0021B0  EFDC  F010         	goto	u2371
  3502   0021B4  EFDF  F010         	goto	u2370
  3503   0021B8                     u2371:
  3504   0021B8  0E01               	movlw	1
  3505   0021BA  EFE0  F010         	goto	u2380
  3506   0021BE                     u2370:
  3507   0021BE  0E00               	movlw	0
  3508   0021C0                     u2380:
  3509   0021C0  0012               	return		;funcret
  3510   0021C2                     __end_of_isDataInRxBuf:
  3511                           	callstack 0
  3512                           
  3513 ;; *************** function _initUSART4 *****************
  3514 ;; Defined at:
  3515 ;;		line 5 in file "serial.c"
  3516 ;; Parameters:    Size  Location     Type
  3517 ;;		None
  3518 ;; Auto vars:     Size  Location     Type
  3519 ;;		None
  3520 ;; Return value:  Size  Location     Type
  3521 ;;                  1    wreg      void 
  3522 ;; Registers used:
  3523 ;;		wreg, status,2
  3524 ;; Tracked objects:
  3525 ;;		On entry : 0/0
  3526 ;;		On exit  : 0/0
  3527 ;;		Unchanged: 0/0
  3528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3533 ;;Total ram usage:        0 bytes
  3534 ;; Hardware stack levels used: 1
  3535 ;; Hardware stack levels required when called: 3
  3536 ;; This function calls:
  3537 ;;		Nothing
  3538 ;; This function is called by:
  3539 ;;		_main
  3540 ;; This function uses a non-reentrant model
  3541 ;;
  3542                           
  3543                           	psect	text19
  3544   00215A                     __ptext19:
  3545                           	callstack 0
  3546   00215A                     _initUSART4:
  3547                           	callstack 27
  3548   00215A                     
  3549                           ;serial.c: 8:     RC0PPS = 0x12;
  3550   00215A  0E12               	movlw	18
  3551   00215C  010E               	movlb	14	; () banked
  3552   00215E  6F62               	movwf	98,b	;volatile
  3553                           
  3554                           ;serial.c: 9:     RX4PPS = 0x11;
  3555   002160  0E11               	movlw	17
  3556   002162  6F15               	movwf	21,b	;volatile
  3557   002164                     
  3558                           ; BSR set to: 14
  3559                           ;serial.c: 11:     BAUD4CONbits.BRG16 = 0;
  3560   002164  97E9               	bcf	233,3,b	;volatile
  3561   002166                     
  3562                           ; BSR set to: 14
  3563                           ;serial.c: 12:     TX4STAbits.BRGH = 0;
  3564   002166  95E8               	bcf	232,2,b	;volatile
  3565                           
  3566                           ;serial.c: 13:     SP4BRGL = 51;
  3567   002168  0E33               	movlw	51
  3568   00216A  6FE5               	movwf	229,b	;volatile
  3569                           
  3570                           ;serial.c: 14:     SP4BRGH = 0;
  3571   00216C  0E00               	movlw	0
  3572   00216E  6FE6               	movwf	230,b	;volatile
  3573   002170                     
  3574                           ; BSR set to: 14
  3575                           ;serial.c: 16:     RC4STAbits.CREN = 1;
  3576   002170  89E7               	bsf	231,4,b	;volatile
  3577   002172                     
  3578                           ; BSR set to: 14
  3579                           ;serial.c: 17:     TX4STAbits.TXEN = 1;
  3580   002172  8BE8               	bsf	232,5,b	;volatile
  3581   002174                     
  3582                           ; BSR set to: 14
  3583                           ;serial.c: 18:     RC4STAbits.SPEN = 1;
  3584   002174  8FE7               	bsf	231,7,b	;volatile
  3585   002176                     
  3586                           ; BSR set to: 14
  3587   002176  0012               	return		;funcret
  3588   002178                     __end_of_initUSART4:
  3589                           	callstack 0
  3590                           
  3591 ;; *************** function _getCharFromRxBuf *****************
  3592 ;; Defined at:
  3593 ;;		line 48 in file "serial.c"
  3594 ;; Parameters:    Size  Location     Type
  3595 ;;		None
  3596 ;; Auto vars:     Size  Location     Type
  3597 ;;		None
  3598 ;; Return value:  Size  Location     Type
  3599 ;;                  1    wreg      unsigned char 
  3600 ;; Registers used:
  3601 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3602 ;; Tracked objects:
  3603 ;;		On entry : 0/0
  3604 ;;		On exit  : 0/0
  3605 ;;		Unchanged: 0/0
  3606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3609 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3610 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3611 ;;Total ram usage:        2 bytes
  3612 ;; Hardware stack levels used: 1
  3613 ;; Hardware stack levels required when called: 3
  3614 ;; This function calls:
  3615 ;;		Nothing
  3616 ;; This function is called by:
  3617 ;;		_main
  3618 ;; This function uses a non-reentrant model
  3619 ;;
  3620                           
  3621                           	psect	text20
  3622   001FF6                     __ptext20:
  3623                           	callstack 0
  3624   001FF6                     _getCharFromRxBuf:
  3625                           	callstack 27
  3626   001FF6                     
  3627                           ;serial.c: 49:     if (RxBufReadCnt>=20) {RxBufReadCnt=0;}
  3628   001FF6  0E13               	movlw	19
  3629   001FF8  6454               	cpfsgt	_RxBufReadCnt^0,c	;volatile
  3630   001FFA  EF01  F010         	goto	u2361
  3631   001FFE  EF03  F010         	goto	u2360
  3632   002002                     u2361:
  3633   002002  EF05  F010         	goto	l3135
  3634   002006                     u2360:
  3635   002006  0E00               	movlw	0
  3636   002008  6E54               	movwf	_RxBufReadCnt^0,c	;volatile
  3637   00200A                     l3135:
  3638                           
  3639                           ;serial.c: 50:     return EUSART4RXbuf[RxBufReadCnt++];
  3640   00200A  2A54               	incf	_RxBufReadCnt^0,f,c	;volatile
  3641   00200C  0454               	decf	_RxBufReadCnt^0,w,c	;volatile
  3642   00200E  6E0A               	movwf	??_getCharFromRxBuf^0,c
  3643   002010  6A0B               	clrf	(??_getCharFromRxBuf+1)^0,c
  3644   002012  0EE6               	movlw	low _EUSART4RXbuf
  3645   002014  240A               	addwf	??_getCharFromRxBuf^0,w,c
  3646   002016  6ED9               	movwf	fsr2l,c
  3647   002018  0E00               	movlw	high _EUSART4RXbuf
  3648   00201A  200B               	addwfc	(??_getCharFromRxBuf+1)^0,w,c
  3649   00201C  6EDA               	movwf	fsr2h,c
  3650   00201E  50DF               	movf	indf2,w,c
  3651   002020  0012               	return		;funcret
  3652   002022                     __end_of_getCharFromRxBuf:
  3653                           	callstack 0
  3654                           
  3655 ;; *************** function _color_click_init *****************
  3656 ;; Defined at:
  3657 ;;		line 5 in file "color.c"
  3658 ;; Parameters:    Size  Location     Type
  3659 ;;		None
  3660 ;; Auto vars:     Size  Location     Type
  3661 ;;		None
  3662 ;; Return value:  Size  Location     Type
  3663 ;;                  1    wreg      void 
  3664 ;; Registers used:
  3665 ;;		wreg, status,2, status,0, cstack
  3666 ;; Tracked objects:
  3667 ;;		On entry : 0/0
  3668 ;;		On exit  : 0/0
  3669 ;;		Unchanged: 0/0
  3670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3673 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3674 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3675 ;;Total ram usage:        1 bytes
  3676 ;; Hardware stack levels used: 1
  3677 ;; Hardware stack levels required when called: 6
  3678 ;; This function calls:
  3679 ;;		_I2C_2_Master_Init
  3680 ;;		_color_writetoaddr
  3681 ;; This function is called by:
  3682 ;;		_main
  3683 ;; This function uses a non-reentrant model
  3684 ;;
  3685                           
  3686                           	psect	text21
  3687   001F66                     __ptext21:
  3688                           	callstack 0
  3689   001F66                     _color_click_init:
  3690                           	callstack 24
  3691   001F66                     
  3692                           ;color.c: 8:     I2C_2_Master_Init();
  3693   001F66  EC27  F010         	call	_I2C_2_Master_Init	;wreg free
  3694   001F6A                     
  3695                           ;color.c: 11:   color_writetoaddr(0x00, 0x01);
  3696   001F6A  0E01               	movlw	1
  3697   001F6C  6E0C               	movwf	color_writetoaddr@value^0,c
  3698   001F6E  0E00               	movlw	0
  3699   001F70  EC8D  F010         	call	_color_writetoaddr
  3700   001F74                     
  3701                           ;color.c: 12:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3702   001F74  0E3F               	movlw	63
  3703   001F76  6E0E               	movwf	??_color_click_init^0,c
  3704   001F78  0E55               	movlw	85
  3705   001F7A                     u2547:
  3706   001F7A  2EE8               	decfsz	wreg,f,c
  3707   001F7C  D7FE               	bra	u2547
  3708   001F7E  2E0E               	decfsz	??_color_click_init^0,f,c
  3709   001F80  D7FC               	bra	u2547
  3710   001F82  F000               	nop	
  3711   001F84                     
  3712                           ;color.c: 15:  color_writetoaddr(0x00, 0x03);
  3713   001F84  0E03               	movlw	3
  3714   001F86  6E0C               	movwf	color_writetoaddr@value^0,c
  3715   001F88  0E00               	movlw	0
  3716   001F8A  EC8D  F010         	call	_color_writetoaddr
  3717   001F8E                     
  3718                           ;color.c: 18:  color_writetoaddr(0x01, 0xD5);
  3719   001F8E  0ED5               	movlw	213
  3720   001F90  6E0C               	movwf	color_writetoaddr@value^0,c
  3721   001F92  0E01               	movlw	1
  3722   001F94  EC8D  F010         	call	_color_writetoaddr
  3723   001F98  0012               	return		;funcret
  3724   001F9A                     __end_of_color_click_init:
  3725                           	callstack 0
  3726                           
  3727 ;; *************** function _color_writetoaddr *****************
  3728 ;; Defined at:
  3729 ;;		line 21 in file "color.c"
  3730 ;; Parameters:    Size  Location     Type
  3731 ;;  address         1    wreg     unsigned char 
  3732 ;;  value           1   11[COMRAM] unsigned char 
  3733 ;; Auto vars:     Size  Location     Type
  3734 ;;  address         1   12[COMRAM] unsigned char 
  3735 ;; Return value:  Size  Location     Type
  3736 ;;                  1    wreg      void 
  3737 ;; Registers used:
  3738 ;;		wreg, status,2, status,0, cstack
  3739 ;; Tracked objects:
  3740 ;;		On entry : 0/0
  3741 ;;		On exit  : 0/0
  3742 ;;		Unchanged: 0/0
  3743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3744 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3745 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3747 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3748 ;;Total ram usage:        2 bytes
  3749 ;; Hardware stack levels used: 1
  3750 ;; Hardware stack levels required when called: 5
  3751 ;; This function calls:
  3752 ;;		_I2C_2_Master_Start
  3753 ;;		_I2C_2_Master_Stop
  3754 ;;		_I2C_2_Master_Write
  3755 ;; This function is called by:
  3756 ;;		_color_click_init
  3757 ;; This function uses a non-reentrant model
  3758 ;;
  3759                           
  3760                           	psect	text22
  3761   00211A                     __ptext22:
  3762                           	callstack 0
  3763   00211A                     _color_writetoaddr:
  3764                           	callstack 24
  3765                           
  3766                           ;incstack = 0
  3767                           ;color_writetoaddr@address stored from wreg
  3768   00211A  6E0D               	movwf	color_writetoaddr@address^0,c
  3769   00211C                     
  3770                           ;color.c: 22:     I2C_2_Master_Start();
  3771   00211C  EC00  F011         	call	_I2C_2_Master_Start	;wreg free
  3772                           
  3773                           ;color.c: 23:     I2C_2_Master_Write(0x52 | 0x00);
  3774   002120  0E52               	movlw	82
  3775   002122  ECF5  F010         	call	_I2C_2_Master_Write
  3776                           
  3777                           ;color.c: 24:     I2C_2_Master_Write(0x80 | address);
  3778   002126  500D               	movf	color_writetoaddr@address^0,w,c
  3779   002128  0980               	iorlw	128
  3780   00212A  ECF5  F010         	call	_I2C_2_Master_Write
  3781                           
  3782                           ;color.c: 25:     I2C_2_Master_Write(value);
  3783   00212E  500C               	movf	color_writetoaddr@value^0,w,c
  3784   002130  ECF5  F010         	call	_I2C_2_Master_Write
  3785                           
  3786                           ;color.c: 26:     I2C_2_Master_Stop();
  3787   002134  ECFB  F010         	call	_I2C_2_Master_Stop	;wreg free
  3788   002138  0012               	return		;funcret
  3789   00213A                     __end_of_color_writetoaddr:
  3790                           	callstack 0
  3791                           
  3792 ;; *************** function _I2C_2_Master_Init *****************
  3793 ;; Defined at:
  3794 ;;		line 4 in file "i2c.c"
  3795 ;; Parameters:    Size  Location     Type
  3796 ;;		None
  3797 ;; Auto vars:     Size  Location     Type
  3798 ;;		None
  3799 ;; Return value:  Size  Location     Type
  3800 ;;                  1    wreg      void 
  3801 ;; Registers used:
  3802 ;;		wreg, status,2
  3803 ;; Tracked objects:
  3804 ;;		On entry : 0/0
  3805 ;;		On exit  : 0/0
  3806 ;;		Unchanged: 0/0
  3807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3812 ;;Total ram usage:        0 bytes
  3813 ;; Hardware stack levels used: 1
  3814 ;; Hardware stack levels required when called: 3
  3815 ;; This function calls:
  3816 ;;		Nothing
  3817 ;; This function is called by:
  3818 ;;		_color_click_init
  3819 ;; This function uses a non-reentrant model
  3820 ;;
  3821                           
  3822                           	psect	text23
  3823   00204E                     __ptext23:
  3824                           	callstack 0
  3825   00204E                     _I2C_2_Master_Init:
  3826                           	callstack 26
  3827   00204E                     
  3828                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3829   00204E  010E               	movlb	14	; () banked
  3830   002050  51D9               	movf	217,w,b	;volatile
  3831   002052  0BF0               	andlw	-16
  3832   002054  0908               	iorlw	8
  3833   002056  6FD9               	movwf	217,b	;volatile
  3834   002058                     
  3835                           ; BSR set to: 14
  3836                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3837   002058  8BD9               	bsf	217,5,b	;volatile
  3838                           
  3839                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3840   00205A  0E9F               	movlw	159
  3841   00205C  6FD6               	movwf	214,b	;volatile
  3842   00205E                     
  3843                           ; BSR set to: 14
  3844                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3845   00205E  8A84               	bsf	132,5,c	;volatile
  3846   002060                     
  3847                           ; BSR set to: 14
  3848                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3849   002060  8C84               	bsf	132,6,c	;volatile
  3850   002062                     
  3851                           ; BSR set to: 14
  3852                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3853   002062  9BA7               	bcf	167,5,b	;volatile
  3854   002064                     
  3855                           ; BSR set to: 14
  3856                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3857   002064  9DA7               	bcf	167,6,b	;volatile
  3858                           
  3859                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3860   002066  0E1D               	movlw	29
  3861   002068  6F1D               	movwf	29,b	;volatile
  3862                           
  3863                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3864   00206A  0E1E               	movlw	30
  3865   00206C  6F1C               	movwf	28,b	;volatile
  3866                           
  3867                           ;i2c.c: 18:   RD5PPS=0x1C;
  3868   00206E  0E1C               	movlw	28
  3869   002070  6F6F               	movwf	111,b	;volatile
  3870                           
  3871                           ;i2c.c: 19:   RD6PPS=0x1B;
  3872   002072  0E1B               	movlw	27
  3873   002074  6F70               	movwf	112,b	;volatile
  3874   002076                     
  3875                           ; BSR set to: 14
  3876   002076  0012               	return		;funcret
  3877   002078                     __end_of_I2C_2_Master_Init:
  3878                           	callstack 0
  3879                           
  3880 ;; *************** function _WhiteLight *****************
  3881 ;; Defined at:
  3882 ;;		line 14 in file "LED_Buttons.c"
  3883 ;; Parameters:    Size  Location     Type
  3884 ;;		None
  3885 ;; Auto vars:     Size  Location     Type
  3886 ;;		None
  3887 ;; Return value:  Size  Location     Type
  3888 ;;                  1    wreg      void 
  3889 ;; Registers used:
  3890 ;;		None
  3891 ;; Tracked objects:
  3892 ;;		On entry : 0/0
  3893 ;;		On exit  : 0/0
  3894 ;;		Unchanged: 0/0
  3895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3900 ;;Total ram usage:        0 bytes
  3901 ;; Hardware stack levels used: 1
  3902 ;; Hardware stack levels required when called: 3
  3903 ;; This function calls:
  3904 ;;		Nothing
  3905 ;; This function is called by:
  3906 ;;		_main
  3907 ;; This function uses a non-reentrant model
  3908 ;;
  3909                           
  3910                           	psect	text24
  3911   002214                     __ptext24:
  3912                           	callstack 0
  3913   002214                     _WhiteLight:
  3914                           	callstack 27
  3915   002214                     
  3916                           ;LED_Buttons.c: 15:     LATGbits.LATG1 = 1;
  3917   002214  827F               	bsf	127,1,c	;volatile
  3918                           
  3919                           ;LED_Buttons.c: 16:     LATAbits.LATA4 = 1;
  3920   002216  8879               	bsf	121,4,c	;volatile
  3921                           
  3922                           ;LED_Buttons.c: 17:     LATFbits.LATF7 = 1;
  3923   002218  8E7E               	bsf	126,7,c	;volatile
  3924   00221A  0012               	return		;funcret
  3925   00221C                     __end_of_WhiteLight:
  3926                           	callstack 0
  3927                           
  3928 ;; *************** function _Update_RGBC *****************
  3929 ;; Defined at:
  3930 ;;		line 89 in file "color.c"
  3931 ;; Parameters:    Size  Location     Type
  3932 ;;  tempval         2   20[COMRAM] PTR struct RGB_val
  3933 ;;		 -> main@initial_color(8), 
  3934 ;; Auto vars:     Size  Location     Type
  3935 ;;		None
  3936 ;; Return value:  Size  Location     Type
  3937 ;;                  1    wreg      void 
  3938 ;; Registers used:
  3939 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3940 ;; Tracked objects:
  3941 ;;		On entry : 0/0
  3942 ;;		On exit  : 0/0
  3943 ;;		Unchanged: 0/0
  3944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3945 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3948 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3949 ;;Total ram usage:        2 bytes
  3950 ;; Hardware stack levels used: 1
  3951 ;; Hardware stack levels required when called: 6
  3952 ;; This function calls:
  3953 ;;		_color_read_Blue
  3954 ;;		_color_read_Clear
  3955 ;;		_color_read_Green
  3956 ;;		_color_read_Red
  3957 ;; This function is called by:
  3958 ;;		_main
  3959 ;; This function uses a non-reentrant model
  3960 ;;
  3961                           
  3962                           	psect	text25
  3963   001B7C                     __ptext25:
  3964                           	callstack 0
  3965   001B7C                     _Update_RGBC:
  3966                           	callstack 24
  3967   001B7C                     
  3968                           ;color.c: 91:     tempval->R = color_read_Red();
  3969   001B7C  EC70  F00E         	call	_color_read_Red	;wreg free
  3970   001B80  C015  FFD9         	movff	Update_RGBC@tempval,fsr2l
  3971   001B84  C016  FFDA         	movff	Update_RGBC@tempval+1,fsr2h
  3972   001B88  C00E  FFDE         	movff	?_color_read_Red,postinc2
  3973   001B8C  C00F  FFDD         	movff	?_color_read_Red+1,postdec2
  3974                           
  3975                           ;color.c: 92:     tempval->G = color_read_Green();
  3976   001B90  EC98  F00E         	call	_color_read_Green	;wreg free
  3977   001B94  EE20 F002          	lfsr	2,2
  3978   001B98  5015               	movf	Update_RGBC@tempval^0,w,c
  3979   001B9A  26D9               	addwf	fsr2l,f,c
  3980   001B9C  5016               	movf	(Update_RGBC@tempval+1)^0,w,c
  3981   001B9E  22DA               	addwfc	fsr2h,f,c
  3982   001BA0  C00E  FFDE         	movff	?_color_read_Green,postinc2
  3983   001BA4  C00F  FFDD         	movff	?_color_read_Green+1,postdec2
  3984                           
  3985                           ;color.c: 93:     tempval->B = color_read_Blue();
  3986   001BA8  ECE8  F00E         	call	_color_read_Blue	;wreg free
  3987   001BAC  EE20 F004          	lfsr	2,4
  3988   001BB0  5015               	movf	Update_RGBC@tempval^0,w,c
  3989   001BB2  26D9               	addwf	fsr2l,f,c
  3990   001BB4  5016               	movf	(Update_RGBC@tempval+1)^0,w,c
  3991   001BB6  22DA               	addwfc	fsr2h,f,c
  3992   001BB8  C00E  FFDE         	movff	?_color_read_Blue,postinc2
  3993   001BBC  C00F  FFDD         	movff	?_color_read_Blue+1,postdec2
  3994                           
  3995                           ;color.c: 94:     tempval->C = color_read_Clear();
  3996   001BC0  ECC0  F00E         	call	_color_read_Clear	;wreg free
  3997   001BC4  EE20 F006          	lfsr	2,6
  3998   001BC8  5015               	movf	Update_RGBC@tempval^0,w,c
  3999   001BCA  26D9               	addwf	fsr2l,f,c
  4000   001BCC  5016               	movf	(Update_RGBC@tempval+1)^0,w,c
  4001   001BCE  22DA               	addwfc	fsr2h,f,c
  4002   001BD0  C00E  FFDE         	movff	?_color_read_Clear,postinc2
  4003   001BD4  C00F  FFDD         	movff	?_color_read_Clear+1,postdec2
  4004   001BD8  0012               	return		;funcret
  4005   001BDA                     __end_of_Update_RGBC:
  4006                           	callstack 0
  4007                           
  4008 ;; *************** function _color_read_Red *****************
  4009 ;; Defined at:
  4010 ;;		line 31 in file "color.c"
  4011 ;; Parameters:    Size  Location     Type
  4012 ;;		None
  4013 ;; Auto vars:     Size  Location     Type
  4014 ;;  tmp             2   18[COMRAM] unsigned int 
  4015 ;; Return value:  Size  Location     Type
  4016 ;;                  2   13[COMRAM] unsigned int 
  4017 ;; Registers used:
  4018 ;;		wreg, status,2, status,0, cstack
  4019 ;; Tracked objects:
  4020 ;;		On entry : 0/0
  4021 ;;		On exit  : 0/0
  4022 ;;		Unchanged: 0/0
  4023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4024 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4025 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4026 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4027 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4028 ;;Total ram usage:        7 bytes
  4029 ;; Hardware stack levels used: 1
  4030 ;; Hardware stack levels required when called: 5
  4031 ;; This function calls:
  4032 ;;		_I2C_2_Master_Read
  4033 ;;		_I2C_2_Master_RepStart
  4034 ;;		_I2C_2_Master_Start
  4035 ;;		_I2C_2_Master_Stop
  4036 ;;		_I2C_2_Master_Write
  4037 ;; This function is called by:
  4038 ;;		_Update_RGBC
  4039 ;; This function uses a non-reentrant model
  4040 ;;
  4041                           
  4042                           	psect	text26
  4043   001CE0                     __ptext26:
  4044                           	callstack 0
  4045   001CE0                     _color_read_Red:
  4046                           	callstack 24
  4047   001CE0                     
  4048                           ;color.c: 33:  unsigned int tmp;;color.c: 34:  I2C_2_Master_Start();
  4049   001CE0  EC00  F011         	call	_I2C_2_Master_Start	;wreg free
  4050                           
  4051                           ;color.c: 35:  I2C_2_Master_Write(0x52 | 0x00);
  4052   001CE4  0E52               	movlw	82
  4053   001CE6  ECF5  F010         	call	_I2C_2_Master_Write
  4054                           
  4055                           ;color.c: 36:  I2C_2_Master_Write(0xA0 | 0x16);
  4056   001CEA  0EB6               	movlw	182
  4057   001CEC  ECF5  F010         	call	_I2C_2_Master_Write
  4058                           
  4059                           ;color.c: 37:  I2C_2_Master_RepStart();
  4060   001CF0  EC05  F011         	call	_I2C_2_Master_RepStart	;wreg free
  4061                           
  4062                           ;color.c: 38:  I2C_2_Master_Write(0x52 | 0x01);
  4063   001CF4  0E53               	movlw	83
  4064   001CF6  ECF5  F010         	call	_I2C_2_Master_Write
  4065                           
  4066                           ;color.c: 39:  tmp=I2C_2_Master_Read(1);
  4067   001CFA  0E01               	movlw	1
  4068   001CFC  EC55  F00F         	call	_I2C_2_Master_Read
  4069   001D00  6E10               	movwf	??_color_read_Red^0,c
  4070   001D02  5010               	movf	??_color_read_Red^0,w,c
  4071   001D04  6E13               	movwf	color_read_Red@tmp^0,c
  4072   001D06  6A14               	clrf	(color_read_Red@tmp+1)^0,c
  4073                           
  4074                           ;color.c: 40:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4075   001D08  0E00               	movlw	0
  4076   001D0A  EC55  F00F         	call	_I2C_2_Master_Read
  4077   001D0E  6E10               	movwf	??_color_read_Red^0,c
  4078   001D10  5010               	movf	??_color_read_Red^0,w,c
  4079   001D12  6E12               	movwf	(??_color_read_Red+2)^0,c
  4080   001D14  6A11               	clrf	(??_color_read_Red+1)^0,c
  4081   001D16  5013               	movf	color_read_Red@tmp^0,w,c
  4082   001D18  1011               	iorwf	(??_color_read_Red+1)^0,w,c
  4083   001D1A  6E13               	movwf	color_read_Red@tmp^0,c
  4084   001D1C  5014               	movf	(color_read_Red@tmp+1)^0,w,c
  4085   001D1E  1012               	iorwf	(??_color_read_Red+2)^0,w,c
  4086   001D20  6E14               	movwf	(color_read_Red@tmp+1)^0,c
  4087                           
  4088                           ;color.c: 41:  I2C_2_Master_Stop();
  4089   001D22  ECFB  F010         	call	_I2C_2_Master_Stop	;wreg free
  4090   001D26                     
  4091                           ;color.c: 42:  return tmp;
  4092   001D26  C013  F00E         	movff	color_read_Red@tmp,?_color_read_Red
  4093   001D2A  C014  F00F         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  4094   001D2E  0012               	return		;funcret
  4095   001D30                     __end_of_color_read_Red:
  4096                           	callstack 0
  4097                           
  4098 ;; *************** function _color_read_Green *****************
  4099 ;; Defined at:
  4100 ;;		line 45 in file "color.c"
  4101 ;; Parameters:    Size  Location     Type
  4102 ;;		None
  4103 ;; Auto vars:     Size  Location     Type
  4104 ;;  tmp             2   18[COMRAM] unsigned int 
  4105 ;; Return value:  Size  Location     Type
  4106 ;;                  2   13[COMRAM] unsigned int 
  4107 ;; Registers used:
  4108 ;;		wreg, status,2, status,0, cstack
  4109 ;; Tracked objects:
  4110 ;;		On entry : 0/0
  4111 ;;		On exit  : 0/0
  4112 ;;		Unchanged: 0/0
  4113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4114 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4115 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4116 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4117 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4118 ;;Total ram usage:        7 bytes
  4119 ;; Hardware stack levels used: 1
  4120 ;; Hardware stack levels required when called: 5
  4121 ;; This function calls:
  4122 ;;		_I2C_2_Master_Read
  4123 ;;		_I2C_2_Master_RepStart
  4124 ;;		_I2C_2_Master_Start
  4125 ;;		_I2C_2_Master_Stop
  4126 ;;		_I2C_2_Master_Write
  4127 ;; This function is called by:
  4128 ;;		_Update_RGBC
  4129 ;; This function uses a non-reentrant model
  4130 ;;
  4131                           
  4132                           	psect	text27
  4133   001D30                     __ptext27:
  4134                           	callstack 0
  4135   001D30                     _color_read_Green:
  4136                           	callstack 24
  4137   001D30                     
  4138                           ;color.c: 47:  unsigned int tmp;;color.c: 48:  I2C_2_Master_Start();
  4139   001D30  EC00  F011         	call	_I2C_2_Master_Start	;wreg free
  4140                           
  4141                           ;color.c: 49:  I2C_2_Master_Write(0x52 | 0x00);
  4142   001D34  0E52               	movlw	82
  4143   001D36  ECF5  F010         	call	_I2C_2_Master_Write
  4144                           
  4145                           ;color.c: 50:  I2C_2_Master_Write(0xA0 | 0x18);
  4146   001D3A  0EB8               	movlw	184
  4147   001D3C  ECF5  F010         	call	_I2C_2_Master_Write
  4148                           
  4149                           ;color.c: 51:  I2C_2_Master_RepStart();
  4150   001D40  EC05  F011         	call	_I2C_2_Master_RepStart	;wreg free
  4151                           
  4152                           ;color.c: 52:  I2C_2_Master_Write(0x52 | 0x01);
  4153   001D44  0E53               	movlw	83
  4154   001D46  ECF5  F010         	call	_I2C_2_Master_Write
  4155                           
  4156                           ;color.c: 53:  tmp=I2C_2_Master_Read(1);
  4157   001D4A  0E01               	movlw	1
  4158   001D4C  EC55  F00F         	call	_I2C_2_Master_Read
  4159   001D50  6E10               	movwf	??_color_read_Green^0,c
  4160   001D52  5010               	movf	??_color_read_Green^0,w,c
  4161   001D54  6E13               	movwf	color_read_Green@tmp^0,c
  4162   001D56  6A14               	clrf	(color_read_Green@tmp+1)^0,c
  4163                           
  4164                           ;color.c: 54:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4165   001D58  0E00               	movlw	0
  4166   001D5A  EC55  F00F         	call	_I2C_2_Master_Read
  4167   001D5E  6E10               	movwf	??_color_read_Green^0,c
  4168   001D60  5010               	movf	??_color_read_Green^0,w,c
  4169   001D62  6E12               	movwf	(??_color_read_Green+2)^0,c
  4170   001D64  6A11               	clrf	(??_color_read_Green+1)^0,c
  4171   001D66  5013               	movf	color_read_Green@tmp^0,w,c
  4172   001D68  1011               	iorwf	(??_color_read_Green+1)^0,w,c
  4173   001D6A  6E13               	movwf	color_read_Green@tmp^0,c
  4174   001D6C  5014               	movf	(color_read_Green@tmp+1)^0,w,c
  4175   001D6E  1012               	iorwf	(??_color_read_Green+2)^0,w,c
  4176   001D70  6E14               	movwf	(color_read_Green@tmp+1)^0,c
  4177                           
  4178                           ;color.c: 55:  I2C_2_Master_Stop();
  4179   001D72  ECFB  F010         	call	_I2C_2_Master_Stop	;wreg free
  4180   001D76                     
  4181                           ;color.c: 56:  return tmp;
  4182   001D76  C013  F00E         	movff	color_read_Green@tmp,?_color_read_Green
  4183   001D7A  C014  F00F         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  4184   001D7E  0012               	return		;funcret
  4185   001D80                     __end_of_color_read_Green:
  4186                           	callstack 0
  4187                           
  4188 ;; *************** function _color_read_Clear *****************
  4189 ;; Defined at:
  4190 ;;		line 73 in file "color.c"
  4191 ;; Parameters:    Size  Location     Type
  4192 ;;		None
  4193 ;; Auto vars:     Size  Location     Type
  4194 ;;  tmp             2   18[COMRAM] unsigned int 
  4195 ;; Return value:  Size  Location     Type
  4196 ;;                  2   13[COMRAM] unsigned int 
  4197 ;; Registers used:
  4198 ;;		wreg, status,2, status,0, cstack
  4199 ;; Tracked objects:
  4200 ;;		On entry : 0/0
  4201 ;;		On exit  : 0/0
  4202 ;;		Unchanged: 0/0
  4203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4204 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4205 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4206 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4207 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4208 ;;Total ram usage:        7 bytes
  4209 ;; Hardware stack levels used: 1
  4210 ;; Hardware stack levels required when called: 5
  4211 ;; This function calls:
  4212 ;;		_I2C_2_Master_Read
  4213 ;;		_I2C_2_Master_RepStart
  4214 ;;		_I2C_2_Master_Start
  4215 ;;		_I2C_2_Master_Stop
  4216 ;;		_I2C_2_Master_Write
  4217 ;; This function is called by:
  4218 ;;		_Update_RGBC
  4219 ;; This function uses a non-reentrant model
  4220 ;;
  4221                           
  4222                           	psect	text28
  4223   001D80                     __ptext28:
  4224                           	callstack 0
  4225   001D80                     _color_read_Clear:
  4226                           	callstack 24
  4227   001D80                     
  4228                           ;color.c: 75:  unsigned int tmp;;color.c: 76:  I2C_2_Master_Start();
  4229   001D80  EC00  F011         	call	_I2C_2_Master_Start	;wreg free
  4230                           
  4231                           ;color.c: 77:  I2C_2_Master_Write(0x52 | 0x00);
  4232   001D84  0E52               	movlw	82
  4233   001D86  ECF5  F010         	call	_I2C_2_Master_Write
  4234                           
  4235                           ;color.c: 78:  I2C_2_Master_Write(0xA0 | 0x14);
  4236   001D8A  0EB4               	movlw	180
  4237   001D8C  ECF5  F010         	call	_I2C_2_Master_Write
  4238                           
  4239                           ;color.c: 79:  I2C_2_Master_RepStart();
  4240   001D90  EC05  F011         	call	_I2C_2_Master_RepStart	;wreg free
  4241                           
  4242                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x01);
  4243   001D94  0E53               	movlw	83
  4244   001D96  ECF5  F010         	call	_I2C_2_Master_Write
  4245                           
  4246                           ;color.c: 81:  tmp=I2C_2_Master_Read(1);
  4247   001D9A  0E01               	movlw	1
  4248   001D9C  EC55  F00F         	call	_I2C_2_Master_Read
  4249   001DA0  6E10               	movwf	??_color_read_Clear^0,c
  4250   001DA2  5010               	movf	??_color_read_Clear^0,w,c
  4251   001DA4  6E13               	movwf	color_read_Clear@tmp^0,c
  4252   001DA6  6A14               	clrf	(color_read_Clear@tmp+1)^0,c
  4253                           
  4254                           ;color.c: 82:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4255   001DA8  0E00               	movlw	0
  4256   001DAA  EC55  F00F         	call	_I2C_2_Master_Read
  4257   001DAE  6E10               	movwf	??_color_read_Clear^0,c
  4258   001DB0  5010               	movf	??_color_read_Clear^0,w,c
  4259   001DB2  6E12               	movwf	(??_color_read_Clear+2)^0,c
  4260   001DB4  6A11               	clrf	(??_color_read_Clear+1)^0,c
  4261   001DB6  5013               	movf	color_read_Clear@tmp^0,w,c
  4262   001DB8  1011               	iorwf	(??_color_read_Clear+1)^0,w,c
  4263   001DBA  6E13               	movwf	color_read_Clear@tmp^0,c
  4264   001DBC  5014               	movf	(color_read_Clear@tmp+1)^0,w,c
  4265   001DBE  1012               	iorwf	(??_color_read_Clear+2)^0,w,c
  4266   001DC0  6E14               	movwf	(color_read_Clear@tmp+1)^0,c
  4267                           
  4268                           ;color.c: 83:  I2C_2_Master_Stop();
  4269   001DC2  ECFB  F010         	call	_I2C_2_Master_Stop	;wreg free
  4270   001DC6                     
  4271                           ;color.c: 84:  return tmp;
  4272   001DC6  C013  F00E         	movff	color_read_Clear@tmp,?_color_read_Clear
  4273   001DCA  C014  F00F         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  4274   001DCE  0012               	return		;funcret
  4275   001DD0                     __end_of_color_read_Clear:
  4276                           	callstack 0
  4277                           
  4278 ;; *************** function _color_read_Blue *****************
  4279 ;; Defined at:
  4280 ;;		line 59 in file "color.c"
  4281 ;; Parameters:    Size  Location     Type
  4282 ;;		None
  4283 ;; Auto vars:     Size  Location     Type
  4284 ;;  tmp             2   18[COMRAM] unsigned int 
  4285 ;; Return value:  Size  Location     Type
  4286 ;;                  2   13[COMRAM] unsigned int 
  4287 ;; Registers used:
  4288 ;;		wreg, status,2, status,0, cstack
  4289 ;; Tracked objects:
  4290 ;;		On entry : 0/0
  4291 ;;		On exit  : 0/0
  4292 ;;		Unchanged: 0/0
  4293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4294 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4295 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4296 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4297 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4298 ;;Total ram usage:        7 bytes
  4299 ;; Hardware stack levels used: 1
  4300 ;; Hardware stack levels required when called: 5
  4301 ;; This function calls:
  4302 ;;		_I2C_2_Master_Read
  4303 ;;		_I2C_2_Master_RepStart
  4304 ;;		_I2C_2_Master_Start
  4305 ;;		_I2C_2_Master_Stop
  4306 ;;		_I2C_2_Master_Write
  4307 ;; This function is called by:
  4308 ;;		_Update_RGBC
  4309 ;; This function uses a non-reentrant model
  4310 ;;
  4311                           
  4312                           	psect	text29
  4313   001DD0                     __ptext29:
  4314                           	callstack 0
  4315   001DD0                     _color_read_Blue:
  4316                           	callstack 24
  4317   001DD0                     
  4318                           ;color.c: 61:  unsigned int tmp;;color.c: 62:  I2C_2_Master_Start();
  4319   001DD0  EC00  F011         	call	_I2C_2_Master_Start	;wreg free
  4320                           
  4321                           ;color.c: 63:  I2C_2_Master_Write(0x52 | 0x00);
  4322   001DD4  0E52               	movlw	82
  4323   001DD6  ECF5  F010         	call	_I2C_2_Master_Write
  4324                           
  4325                           ;color.c: 64:  I2C_2_Master_Write(0xA0 | 0x1A);
  4326   001DDA  0EBA               	movlw	186
  4327   001DDC  ECF5  F010         	call	_I2C_2_Master_Write
  4328                           
  4329                           ;color.c: 65:  I2C_2_Master_RepStart();
  4330   001DE0  EC05  F011         	call	_I2C_2_Master_RepStart	;wreg free
  4331                           
  4332                           ;color.c: 66:  I2C_2_Master_Write(0x52 | 0x01);
  4333   001DE4  0E53               	movlw	83
  4334   001DE6  ECF5  F010         	call	_I2C_2_Master_Write
  4335                           
  4336                           ;color.c: 67:  tmp=I2C_2_Master_Read(1);
  4337   001DEA  0E01               	movlw	1
  4338   001DEC  EC55  F00F         	call	_I2C_2_Master_Read
  4339   001DF0  6E10               	movwf	??_color_read_Blue^0,c
  4340   001DF2  5010               	movf	??_color_read_Blue^0,w,c
  4341   001DF4  6E13               	movwf	color_read_Blue@tmp^0,c
  4342   001DF6  6A14               	clrf	(color_read_Blue@tmp+1)^0,c
  4343                           
  4344                           ;color.c: 68:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4345   001DF8  0E00               	movlw	0
  4346   001DFA  EC55  F00F         	call	_I2C_2_Master_Read
  4347   001DFE  6E10               	movwf	??_color_read_Blue^0,c
  4348   001E00  5010               	movf	??_color_read_Blue^0,w,c
  4349   001E02  6E12               	movwf	(??_color_read_Blue+2)^0,c
  4350   001E04  6A11               	clrf	(??_color_read_Blue+1)^0,c
  4351   001E06  5013               	movf	color_read_Blue@tmp^0,w,c
  4352   001E08  1011               	iorwf	(??_color_read_Blue+1)^0,w,c
  4353   001E0A  6E13               	movwf	color_read_Blue@tmp^0,c
  4354   001E0C  5014               	movf	(color_read_Blue@tmp+1)^0,w,c
  4355   001E0E  1012               	iorwf	(??_color_read_Blue+2)^0,w,c
  4356   001E10  6E14               	movwf	(color_read_Blue@tmp+1)^0,c
  4357                           
  4358                           ;color.c: 69:  I2C_2_Master_Stop();
  4359   001E12  ECFB  F010         	call	_I2C_2_Master_Stop	;wreg free
  4360   001E16                     
  4361                           ;color.c: 70:  return tmp;
  4362   001E16  C013  F00E         	movff	color_read_Blue@tmp,?_color_read_Blue
  4363   001E1A  C014  F00F         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  4364   001E1E  0012               	return		;funcret
  4365   001E20                     __end_of_color_read_Blue:
  4366                           	callstack 0
  4367                           
  4368 ;; *************** function _I2C_2_Master_Write *****************
  4369 ;; Defined at:
  4370 ;;		line 45 in file "i2c.c"
  4371 ;; Parameters:    Size  Location     Type
  4372 ;;  data_byte       1    wreg     unsigned char 
  4373 ;; Auto vars:     Size  Location     Type
  4374 ;;  data_byte       1   10[COMRAM] unsigned char 
  4375 ;; Return value:  Size  Location     Type
  4376 ;;                  1    wreg      void 
  4377 ;; Registers used:
  4378 ;;		wreg, status,2, status,0, cstack
  4379 ;; Tracked objects:
  4380 ;;		On entry : 0/0
  4381 ;;		On exit  : 0/0
  4382 ;;		Unchanged: 0/0
  4383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4385 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4387 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4388 ;;Total ram usage:        1 bytes
  4389 ;; Hardware stack levels used: 1
  4390 ;; Hardware stack levels required when called: 4
  4391 ;; This function calls:
  4392 ;;		_I2C_2_Master_Idle
  4393 ;; This function is called by:
  4394 ;;		_color_writetoaddr
  4395 ;;		_color_read_Red
  4396 ;;		_color_read_Green
  4397 ;;		_color_read_Blue
  4398 ;;		_color_read_Clear
  4399 ;; This function uses a non-reentrant model
  4400 ;;
  4401                           
  4402                           	psect	text30
  4403   0021EA                     __ptext30:
  4404                           	callstack 0
  4405   0021EA                     _I2C_2_Master_Write:
  4406                           	callstack 24
  4407                           
  4408                           ;incstack = 0
  4409                           ;I2C_2_Master_Write@data_byte stored from wreg
  4410   0021EA  6E0B               	movwf	I2C_2_Master_Write@data_byte^0,c
  4411   0021EC                     
  4412                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  4413   0021EC  EC66  F010         	call	_I2C_2_Master_Idle	;wreg free
  4414   0021F0                     
  4415                           ;i2c.c: 48:   SSP2BUF = data_byte;
  4416   0021F0  C00B  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  4417   0021F4  0012               	return		;funcret
  4418   0021F6                     __end_of_I2C_2_Master_Write:
  4419                           	callstack 0
  4420                           
  4421 ;; *************** function _I2C_2_Master_Stop *****************
  4422 ;; Defined at:
  4423 ;;		line 39 in file "i2c.c"
  4424 ;; Parameters:    Size  Location     Type
  4425 ;;		None
  4426 ;; Auto vars:     Size  Location     Type
  4427 ;;		None
  4428 ;; Return value:  Size  Location     Type
  4429 ;;                  1    wreg      void 
  4430 ;; Registers used:
  4431 ;;		wreg, status,2, status,0, cstack
  4432 ;; Tracked objects:
  4433 ;;		On entry : 0/0
  4434 ;;		On exit  : 0/0
  4435 ;;		Unchanged: 0/0
  4436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4441 ;;Total ram usage:        0 bytes
  4442 ;; Hardware stack levels used: 1
  4443 ;; Hardware stack levels required when called: 4
  4444 ;; This function calls:
  4445 ;;		_I2C_2_Master_Idle
  4446 ;; This function is called by:
  4447 ;;		_color_writetoaddr
  4448 ;;		_color_read_Red
  4449 ;;		_color_read_Green
  4450 ;;		_color_read_Blue
  4451 ;;		_color_read_Clear
  4452 ;; This function uses a non-reentrant model
  4453 ;;
  4454                           
  4455                           	psect	text31
  4456   0021F6                     __ptext31:
  4457                           	callstack 0
  4458   0021F6                     _I2C_2_Master_Stop:
  4459                           	callstack 24
  4460   0021F6                     
  4461                           ;i2c.c: 41:   I2C_2_Master_Idle();
  4462   0021F6  EC66  F010         	call	_I2C_2_Master_Idle	;wreg free
  4463   0021FA                     
  4464                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  4465   0021FA  010E               	movlb	14	; () banked
  4466   0021FC  85DA               	bsf	218,2,b	;volatile
  4467   0021FE                     
  4468                           ; BSR set to: 14
  4469   0021FE  0012               	return		;funcret
  4470   002200                     __end_of_I2C_2_Master_Stop:
  4471                           	callstack 0
  4472                           
  4473 ;; *************** function _I2C_2_Master_Start *****************
  4474 ;; Defined at:
  4475 ;;		line 27 in file "i2c.c"
  4476 ;; Parameters:    Size  Location     Type
  4477 ;;		None
  4478 ;; Auto vars:     Size  Location     Type
  4479 ;;		None
  4480 ;; Return value:  Size  Location     Type
  4481 ;;                  1    wreg      void 
  4482 ;; Registers used:
  4483 ;;		wreg, status,2, status,0, cstack
  4484 ;; Tracked objects:
  4485 ;;		On entry : 0/0
  4486 ;;		On exit  : 0/0
  4487 ;;		Unchanged: 0/0
  4488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4493 ;;Total ram usage:        0 bytes
  4494 ;; Hardware stack levels used: 1
  4495 ;; Hardware stack levels required when called: 4
  4496 ;; This function calls:
  4497 ;;		_I2C_2_Master_Idle
  4498 ;; This function is called by:
  4499 ;;		_color_writetoaddr
  4500 ;;		_color_read_Red
  4501 ;;		_color_read_Green
  4502 ;;		_color_read_Blue
  4503 ;;		_color_read_Clear
  4504 ;; This function uses a non-reentrant model
  4505 ;;
  4506                           
  4507                           	psect	text32
  4508   002200                     __ptext32:
  4509                           	callstack 0
  4510   002200                     _I2C_2_Master_Start:
  4511                           	callstack 24
  4512   002200                     
  4513                           ;i2c.c: 29:   I2C_2_Master_Idle();
  4514   002200  EC66  F010         	call	_I2C_2_Master_Idle	;wreg free
  4515   002204                     
  4516                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  4517   002204  010E               	movlb	14	; () banked
  4518   002206  81DA               	bsf	218,0,b	;volatile
  4519   002208                     
  4520                           ; BSR set to: 14
  4521   002208  0012               	return		;funcret
  4522   00220A                     __end_of_I2C_2_Master_Start:
  4523                           	callstack 0
  4524                           
  4525 ;; *************** function _I2C_2_Master_RepStart *****************
  4526 ;; Defined at:
  4527 ;;		line 33 in file "i2c.c"
  4528 ;; Parameters:    Size  Location     Type
  4529 ;;		None
  4530 ;; Auto vars:     Size  Location     Type
  4531 ;;		None
  4532 ;; Return value:  Size  Location     Type
  4533 ;;                  1    wreg      void 
  4534 ;; Registers used:
  4535 ;;		wreg, status,2, status,0, cstack
  4536 ;; Tracked objects:
  4537 ;;		On entry : 0/0
  4538 ;;		On exit  : 0/0
  4539 ;;		Unchanged: 0/0
  4540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4545 ;;Total ram usage:        0 bytes
  4546 ;; Hardware stack levels used: 1
  4547 ;; Hardware stack levels required when called: 4
  4548 ;; This function calls:
  4549 ;;		_I2C_2_Master_Idle
  4550 ;; This function is called by:
  4551 ;;		_color_read_Red
  4552 ;;		_color_read_Green
  4553 ;;		_color_read_Blue
  4554 ;;		_color_read_Clear
  4555 ;; This function uses a non-reentrant model
  4556 ;;
  4557                           
  4558                           	psect	text33
  4559   00220A                     __ptext33:
  4560                           	callstack 0
  4561   00220A                     _I2C_2_Master_RepStart:
  4562                           	callstack 24
  4563   00220A                     
  4564                           ;i2c.c: 35:   I2C_2_Master_Idle();
  4565   00220A  EC66  F010         	call	_I2C_2_Master_Idle	;wreg free
  4566   00220E                     
  4567                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  4568   00220E  010E               	movlb	14	; () banked
  4569   002210  83DA               	bsf	218,1,b	;volatile
  4570   002212                     
  4571                           ; BSR set to: 14
  4572   002212  0012               	return		;funcret
  4573   002214                     __end_of_I2C_2_Master_RepStart:
  4574                           	callstack 0
  4575                           
  4576 ;; *************** function _I2C_2_Master_Read *****************
  4577 ;; Defined at:
  4578 ;;		line 51 in file "i2c.c"
  4579 ;; Parameters:    Size  Location     Type
  4580 ;;  ack             1    wreg     unsigned char 
  4581 ;; Auto vars:     Size  Location     Type
  4582 ;;  ack             1   11[COMRAM] unsigned char 
  4583 ;;  tmp             1   12[COMRAM] unsigned char 
  4584 ;; Return value:  Size  Location     Type
  4585 ;;                  1    wreg      unsigned char 
  4586 ;; Registers used:
  4587 ;;		wreg, status,2, status,0, cstack
  4588 ;; Tracked objects:
  4589 ;;		On entry : 0/0
  4590 ;;		On exit  : 0/0
  4591 ;;		Unchanged: 0/0
  4592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4594 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4595 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4596 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4597 ;;Total ram usage:        3 bytes
  4598 ;; Hardware stack levels used: 1
  4599 ;; Hardware stack levels required when called: 4
  4600 ;; This function calls:
  4601 ;;		_I2C_2_Master_Idle
  4602 ;; This function is called by:
  4603 ;;		_color_read_Red
  4604 ;;		_color_read_Green
  4605 ;;		_color_read_Blue
  4606 ;;		_color_read_Clear
  4607 ;; This function uses a non-reentrant model
  4608 ;;
  4609                           
  4610                           	psect	text34
  4611   001EAA                     __ptext34:
  4612                           	callstack 0
  4613   001EAA                     _I2C_2_Master_Read:
  4614                           	callstack 24
  4615                           
  4616                           ; BSR set to: 14
  4617                           ;incstack = 0
  4618                           ;I2C_2_Master_Read@ack stored from wreg
  4619   001EAA  6E0C               	movwf	I2C_2_Master_Read@ack^0,c
  4620   001EAC                     
  4621                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  4622   001EAC  EC66  F010         	call	_I2C_2_Master_Idle	;wreg free
  4623   001EB0                     
  4624                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  4625   001EB0  010E               	movlb	14	; () banked
  4626   001EB2  87DA               	bsf	218,3,b	;volatile
  4627                           
  4628                           ;i2c.c: 56:   I2C_2_Master_Idle();
  4629   001EB4  EC66  F010         	call	_I2C_2_Master_Idle	;wreg free
  4630   001EB8                     
  4631                           ;i2c.c: 57:   tmp = SSP2BUF;
  4632   001EB8  CED5 F00D          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  4633                           
  4634                           ;i2c.c: 58:   I2C_2_Master_Idle();
  4635   001EBC  EC66  F010         	call	_I2C_2_Master_Idle	;wreg free
  4636   001EC0                     
  4637                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  4638   001EC0  500C               	movf	I2C_2_Master_Read@ack^0,w,c
  4639   001EC2  B4D8               	btfsc	status,2,c
  4640   001EC4  EF66  F00F         	goto	u2221
  4641   001EC8  EF6A  F00F         	goto	u2220
  4642   001ECC                     u2221:
  4643   001ECC  6A0B               	clrf	??_I2C_2_Master_Read^0,c
  4644   001ECE  2A0B               	incf	??_I2C_2_Master_Read^0,f,c
  4645   001ED0  EF6B  F00F         	goto	u2238
  4646   001ED4                     u2220:
  4647   001ED4  6A0B               	clrf	??_I2C_2_Master_Read^0,c
  4648   001ED6                     u2238:
  4649   001ED6  3A0B               	swapf	??_I2C_2_Master_Read^0,f,c
  4650   001ED8  460B               	rlncf	??_I2C_2_Master_Read^0,f,c
  4651   001EDA  010E               	movlb	14	; () banked
  4652   001EDC  51DA               	movf	218,w,b	;volatile
  4653   001EDE  180B               	xorwf	??_I2C_2_Master_Read^0,w,c
  4654   001EE0  0BDF               	andlw	-33
  4655   001EE2  180B               	xorwf	??_I2C_2_Master_Read^0,w,c
  4656   001EE4  6FDA               	movwf	218,b	;volatile
  4657   001EE6                     
  4658                           ; BSR set to: 14
  4659                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  4660   001EE6  89DA               	bsf	218,4,b	;volatile
  4661   001EE8                     
  4662                           ; BSR set to: 14
  4663                           ;i2c.c: 61:   return tmp;
  4664   001EE8  500D               	movf	I2C_2_Master_Read@tmp^0,w,c
  4665   001EEA                     
  4666                           ; BSR set to: 14
  4667   001EEA  0012               	return		;funcret
  4668   001EEC                     __end_of_I2C_2_Master_Read:
  4669                           	callstack 0
  4670                           
  4671 ;; *************** function _I2C_2_Master_Idle *****************
  4672 ;; Defined at:
  4673 ;;		line 22 in file "i2c.c"
  4674 ;; Parameters:    Size  Location     Type
  4675 ;;		None
  4676 ;; Auto vars:     Size  Location     Type
  4677 ;;		None
  4678 ;; Return value:  Size  Location     Type
  4679 ;;                  1    wreg      void 
  4680 ;; Registers used:
  4681 ;;		wreg, status,2, status,0
  4682 ;; Tracked objects:
  4683 ;;		On entry : 0/0
  4684 ;;		On exit  : 0/0
  4685 ;;		Unchanged: 0/0
  4686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4689 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4690 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4691 ;;Total ram usage:        1 bytes
  4692 ;; Hardware stack levels used: 1
  4693 ;; Hardware stack levels required when called: 3
  4694 ;; This function calls:
  4695 ;;		Nothing
  4696 ;; This function is called by:
  4697 ;;		_I2C_2_Master_Start
  4698 ;;		_I2C_2_Master_RepStart
  4699 ;;		_I2C_2_Master_Stop
  4700 ;;		_I2C_2_Master_Write
  4701 ;;		_I2C_2_Master_Read
  4702 ;; This function uses a non-reentrant model
  4703 ;;
  4704                           
  4705                           	psect	text35
  4706   0020CC                     __ptext35:
  4707                           	callstack 0
  4708   0020CC                     _I2C_2_Master_Idle:
  4709                           	callstack 24
  4710   0020CC                     l67:
  4711   0020CC  010E               	movlb	14	; () banked
  4712   0020CE  B5D8               	btfsc	216,2,b	;volatile
  4713   0020D0  EF6C  F010         	goto	u2031
  4714   0020D4  EF6E  F010         	goto	u2030
  4715   0020D8                     u2031:
  4716   0020D8  EF66  F010         	goto	l67
  4717   0020DC                     u2030:
  4718   0020DC                     
  4719                           ; BSR set to: 14
  4720   0020DC  CEDA F00A          	movff	3802,??_I2C_2_Master_Idle	;volatile
  4721   0020E0  0E1F               	movlw	31
  4722   0020E2  160A               	andwf	??_I2C_2_Master_Idle^0,f,c
  4723   0020E4  A4D8               	btfss	status,2,c
  4724   0020E6  EF77  F010         	goto	u2041
  4725   0020EA  EF79  F010         	goto	u2040
  4726   0020EE                     u2041:
  4727   0020EE  EF66  F010         	goto	l67
  4728   0020F2                     u2040:
  4729   0020F2                     
  4730                           ; BSR set to: 14
  4731   0020F2  0012               	return		;funcret
  4732   0020F4                     __end_of_I2C_2_Master_Idle:
  4733                           	callstack 0
  4734                           
  4735 ;; *************** function _TxBufferedString *****************
  4736 ;; Defined at:
  4737 ;;		line 87 in file "serial.c"
  4738 ;; Parameters:    Size  Location     Type
  4739 ;;  string          2   10[COMRAM] PTR unsigned char 
  4740 ;;		 -> main@string2(40), main@string(40), 
  4741 ;; Auto vars:     Size  Location     Type
  4742 ;;		None
  4743 ;; Return value:  Size  Location     Type
  4744 ;;                  1    wreg      void 
  4745 ;; Registers used:
  4746 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4747 ;; Tracked objects:
  4748 ;;		On entry : 0/0
  4749 ;;		On exit  : 0/0
  4750 ;;		Unchanged: 0/0
  4751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4752 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4755 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4756 ;;Total ram usage:        2 bytes
  4757 ;; Hardware stack levels used: 1
  4758 ;; Hardware stack levels required when called: 4
  4759 ;; This function calls:
  4760 ;;		_putCharToTxBuf
  4761 ;; This function is called by:
  4762 ;;		_main
  4763 ;; This function uses a non-reentrant model
  4764 ;;
  4765                           
  4766                           	psect	text36
  4767   001F9A                     __ptext36:
  4768                           	callstack 0
  4769   001F9A                     _TxBufferedString:
  4770                           	callstack 26
  4771   001F9A                     
  4772                           ;serial.c: 90:     while(*string != 0){
  4773   001F9A  EFD8  F00F         	goto	l3149
  4774   001F9E                     l3145:
  4775                           
  4776                           ;serial.c: 91:   putCharToTxBuf(*string++);
  4777   001F9E  C00B  FFD9         	movff	TxBufferedString@string,fsr2l
  4778   001FA2  C00C  FFDA         	movff	TxBufferedString@string+1,fsr2h
  4779   001FA6  50DF               	movf	indf2,w,c
  4780   001FA8  EC3C  F010         	call	_putCharToTxBuf
  4781   001FAC  4A0B               	infsnz	TxBufferedString@string^0,f,c
  4782   001FAE  2A0C               	incf	(TxBufferedString@string+1)^0,f,c
  4783   001FB0                     l3149:
  4784                           
  4785                           ;serial.c: 90:     while(*string != 0){
  4786   001FB0  C00B  FFD9         	movff	TxBufferedString@string,fsr2l
  4787   001FB4  C00C  FFDA         	movff	TxBufferedString@string+1,fsr2h
  4788   001FB8  50DF               	movf	indf2,w,c
  4789   001FBA  A4D8               	btfss	status,2,c
  4790   001FBC  EFE2  F00F         	goto	u2391
  4791   001FC0  EFE4  F00F         	goto	u2390
  4792   001FC4                     u2391:
  4793   001FC4  EFCF  F00F         	goto	l3145
  4794   001FC8                     u2390:
  4795   001FC8  0012               	return		;funcret
  4796   001FCA                     __end_of_TxBufferedString:
  4797                           	callstack 0
  4798                           
  4799 ;; *************** function _putCharToTxBuf *****************
  4800 ;; Defined at:
  4801 ;;		line 74 in file "serial.c"
  4802 ;; Parameters:    Size  Location     Type
  4803 ;;  byte            1    wreg     unsigned char 
  4804 ;; Auto vars:     Size  Location     Type
  4805 ;;  byte            1    9[COMRAM] unsigned char 
  4806 ;; Return value:  Size  Location     Type
  4807 ;;                  1    wreg      void 
  4808 ;; Registers used:
  4809 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4810 ;; Tracked objects:
  4811 ;;		On entry : 0/0
  4812 ;;		On exit  : 0/0
  4813 ;;		Unchanged: 0/0
  4814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4816 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4818 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4819 ;;Total ram usage:        1 bytes
  4820 ;; Hardware stack levels used: 1
  4821 ;; Hardware stack levels required when called: 3
  4822 ;; This function calls:
  4823 ;;		Nothing
  4824 ;; This function is called by:
  4825 ;;		_TxBufferedString
  4826 ;; This function uses a non-reentrant model
  4827 ;;
  4828                           
  4829                           	psect	text37
  4830   002078                     __ptext37:
  4831                           	callstack 0
  4832   002078                     _putCharToTxBuf:
  4833                           	callstack 26
  4834                           
  4835                           ;incstack = 0
  4836                           ;putCharToTxBuf@byte stored from wreg
  4837   002078  6E0A               	movwf	putCharToTxBuf@byte^0,c
  4838   00207A                     
  4839                           ;serial.c: 75:     if (TxBufWriteCnt>=60) {TxBufWriteCnt=0;}
  4840   00207A  0E3B               	movlw	59
  4841   00207C  6453               	cpfsgt	_TxBufWriteCnt^0,c	;volatile
  4842   00207E  EF43  F010         	goto	u2311
  4843   002082  EF45  F010         	goto	u2310
  4844   002086                     u2311:
  4845   002086  EF47  F010         	goto	l3071
  4846   00208A                     u2310:
  4847   00208A  0E00               	movlw	0
  4848   00208C  6E53               	movwf	_TxBufWriteCnt^0,c	;volatile
  4849   00208E                     l3071:
  4850                           
  4851                           ;serial.c: 76:     EUSART4TXbuf[TxBufWriteCnt++]=byte;
  4852   00208E  0E00               	movlw	low _EUSART4TXbuf
  4853   002090  2453               	addwf	_TxBufWriteCnt^0,w,c	;volatile
  4854   002092  6ED9               	movwf	fsr2l,c
  4855   002094  6ADA               	clrf	fsr2h,c
  4856   002096  0E05               	movlw	high _EUSART4TXbuf
  4857   002098  22DA               	addwfc	fsr2h,f,c
  4858   00209A  C00A  FFDF         	movff	putCharToTxBuf@byte,indf2
  4859   00209E  2A53               	incf	_TxBufWriteCnt^0,f,c	;volatile
  4860   0020A0  0012               	return		;funcret
  4861   0020A2                     __end_of_putCharToTxBuf:
  4862                           	callstack 0
  4863                           
  4864 ;; *************** function _Timer0_init *****************
  4865 ;; Defined at:
  4866 ;;		line 7 in file "timers.c"
  4867 ;; Parameters:    Size  Location     Type
  4868 ;;		None
  4869 ;; Auto vars:     Size  Location     Type
  4870 ;;		None
  4871 ;; Return value:  Size  Location     Type
  4872 ;;                  1    wreg      void 
  4873 ;; Registers used:
  4874 ;;		wreg, status,2
  4875 ;; Tracked objects:
  4876 ;;		On entry : 0/0
  4877 ;;		On exit  : 0/0
  4878 ;;		Unchanged: 0/0
  4879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4884 ;;Total ram usage:        0 bytes
  4885 ;; Hardware stack levels used: 1
  4886 ;; Hardware stack levels required when called: 3
  4887 ;; This function calls:
  4888 ;;		Nothing
  4889 ;; This function is called by:
  4890 ;;		_main
  4891 ;; This function uses a non-reentrant model
  4892 ;;
  4893                           
  4894                           	psect	text38
  4895   00213A                     __ptext38:
  4896                           	callstack 0
  4897   00213A                     _Timer0_init:
  4898                           	callstack 27
  4899   00213A                     
  4900                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  4901   00213A  50D6               	movf	214,w,c	;volatile
  4902   00213C  0B1F               	andlw	-225
  4903   00213E  0940               	iorlw	64
  4904   002140  6ED6               	movwf	214,c	;volatile
  4905   002142                     
  4906                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  4907   002142  88D6               	bsf	214,4,c	;volatile
  4908                           
  4909                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
  4910   002144  50D6               	movf	214,w,c	;volatile
  4911   002146  0BF0               	andlw	-16
  4912   002148  0908               	iorlw	8
  4913   00214A  6ED6               	movwf	214,c	;volatile
  4914   00214C                     
  4915                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
  4916   00214C  88D5               	bsf	213,4,c	;volatile
  4917                           
  4918                           ;timers.c: 15:     TMR0H = 0b11000010;
  4919   00214E  0EC2               	movlw	194
  4920   002150  6ED4               	movwf	212,c	;volatile
  4921                           
  4922                           ;timers.c: 16:     TMR0L = 0b11110110;
  4923   002152  0EF6               	movlw	246
  4924   002154  6ED3               	movwf	211,c	;volatile
  4925   002156                     
  4926                           ;timers.c: 17:     T0CON0bits.T0EN=1;
  4927   002156  8ED5               	bsf	213,7,c	;volatile
  4928   002158  0012               	return		;funcret
  4929   00215A                     __end_of_Timer0_init:
  4930                           	callstack 0
  4931                           
  4932 ;; *************** function _LED_init *****************
  4933 ;; Defined at:
  4934 ;;		line 7 in file "LED_Buttons.c"
  4935 ;; Parameters:    Size  Location     Type
  4936 ;;		None
  4937 ;; Auto vars:     Size  Location     Type
  4938 ;;		None
  4939 ;; Return value:  Size  Location     Type
  4940 ;;                  1    wreg      void 
  4941 ;; Registers used:
  4942 ;;		None
  4943 ;; Tracked objects:
  4944 ;;		On entry : 0/0
  4945 ;;		On exit  : 0/0
  4946 ;;		Unchanged: 0/0
  4947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4952 ;;Total ram usage:        0 bytes
  4953 ;; Hardware stack levels used: 1
  4954 ;; Hardware stack levels required when called: 3
  4955 ;; This function calls:
  4956 ;;		Nothing
  4957 ;; This function is called by:
  4958 ;;		_main
  4959 ;; This function uses a non-reentrant model
  4960 ;;
  4961                           
  4962                           	psect	text39
  4963   00221C                     __ptext39:
  4964                           	callstack 0
  4965   00221C                     _LED_init:
  4966                           	callstack 27
  4967   00221C                     
  4968                           ;LED_Buttons.c: 8:     TRISGbits.TRISG1 = 0;
  4969   00221C  9287               	bcf	135,1,c	;volatile
  4970                           
  4971                           ;LED_Buttons.c: 9:     TRISAbits.TRISA4 = 0;
  4972   00221E  9881               	bcf	129,4,c	;volatile
  4973                           
  4974                           ;LED_Buttons.c: 10:     TRISFbits.TRISF7 = 0;
  4975   002220  9E86               	bcf	134,7,c	;volatile
  4976   002222  0012               	return		;funcret
  4977   002224                     __end_of_LED_init:
  4978                           	callstack 0
  4979                           
  4980 ;; *************** function _Interrupts_init *****************
  4981 ;; Defined at:
  4982 ;;		line 9 in file "interrupts.c"
  4983 ;; Parameters:    Size  Location     Type
  4984 ;;		None
  4985 ;; Auto vars:     Size  Location     Type
  4986 ;;		None
  4987 ;; Return value:  Size  Location     Type
  4988 ;;                  1    wreg      void 
  4989 ;; Registers used:
  4990 ;;		None
  4991 ;; Tracked objects:
  4992 ;;		On entry : 0/0
  4993 ;;		On exit  : 0/0
  4994 ;;		Unchanged: 0/0
  4995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5000 ;;Total ram usage:        0 bytes
  5001 ;; Hardware stack levels used: 1
  5002 ;; Hardware stack levels required when called: 3
  5003 ;; This function calls:
  5004 ;;		Nothing
  5005 ;; This function is called by:
  5006 ;;		_main
  5007 ;; This function uses a non-reentrant model
  5008 ;;
  5009                           
  5010                           	psect	text40
  5011   0021DA                     __ptext40:
  5012                           	callstack 0
  5013   0021DA                     _Interrupts_init:
  5014                           	callstack 27
  5015   0021DA                     
  5016                           ;interrupts.c: 15:     PIE0bits.TMR0IE=1;
  5017   0021DA  010E               	movlb	14	; () banked
  5018   0021DC  8B29               	bsf	41,5,b	;volatile
  5019                           
  5020                           ;interrupts.c: 16:     IPR0bits.TMR0IP = 0;
  5021   0021DE  9B1F               	bcf	31,5,b	;volatile
  5022                           
  5023                           ;interrupts.c: 19:     PIE4bits.RC4IE=1;
  5024   0021E0  872D               	bsf	45,3,b	;volatile
  5025                           
  5026                           ;interrupts.c: 22:     INTCONbits.IPEN = 1;
  5027   0021E2  8AF2               	bsf	242,5,c	;volatile
  5028                           
  5029                           ;interrupts.c: 23:     INTCONbits.PEIE = 1;
  5030   0021E4  8CF2               	bsf	242,6,c	;volatile
  5031                           
  5032                           ;interrupts.c: 24:     INTCONbits.GIE=1;
  5033   0021E6  8EF2               	bsf	242,7,c	;volatile
  5034   0021E8                     
  5035                           ; BSR set to: 14
  5036   0021E8  0012               	return		;funcret
  5037   0021EA                     __end_of_Interrupts_init:
  5038                           	callstack 0
  5039                           
  5040 ;; *************** function _LowISR *****************
  5041 ;; Defined at:
  5042 ;;		line 34 in file "interrupts.c"
  5043 ;; Parameters:    Size  Location     Type
  5044 ;;		None
  5045 ;; Auto vars:     Size  Location     Type
  5046 ;;		None
  5047 ;; Return value:  Size  Location     Type
  5048 ;;                  1    wreg      void 
  5049 ;; Registers used:
  5050 ;;		wreg, status,2, status,0
  5051 ;; Tracked objects:
  5052 ;;		On entry : 0/0
  5053 ;;		On exit  : 0/0
  5054 ;;		Unchanged: 0/0
  5055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5058 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5059 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5060 ;;Total ram usage:        4 bytes
  5061 ;; Hardware stack levels used: 1
  5062 ;; Hardware stack levels required when called: 2
  5063 ;; This function calls:
  5064 ;;		Nothing
  5065 ;; This function is called by:
  5066 ;;		Interrupt level 1
  5067 ;; This function uses a non-reentrant model
  5068 ;;
  5069                           
  5070                           	psect	intcodelo
  5071   000018                     __pintcodelo:
  5072                           	callstack 0
  5073   000018                     _LowISR:
  5074                           	callstack 20
  5075                           
  5076                           ; BSR set to: 14
  5077                           ;incstack = 0
  5078   000018  8056               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  5079   00001A  CFD8 F007          	movff	status,??_LowISR+1
  5080   00001E  CFE8 F008          	movff	wreg,??_LowISR+2
  5081   000022  CFE0 F009          	movff	bsr,??_LowISR+3
  5082   000026                     
  5083                           ;interrupts.c: 37:     if(PIR0bits.TMR0IF){
  5084   000026  010E               	movlb	14	; () banked
  5085   000028  AB33               	btfss	51,5,b	;volatile
  5086   00002A  EF19  F000         	goto	i1u164_21
  5087   00002E  EF1B  F000         	goto	i1u164_20
  5088   000032                     i1u164_21:
  5089   000032  EF36  F000         	goto	i1l340
  5090   000036                     i1u164_20:
  5091   000036                     
  5092                           ; BSR set to: 14
  5093                           ;interrupts.c: 38:         LATHbits.LATH3 = !LATHbits.LATH3;
  5094   000036  A680               	btfss	128,3,c	;volatile
  5095   000038  EF20  F000         	goto	i1u165_21
  5096   00003C  EF24  F000         	goto	i1u165_20
  5097   000040                     i1u165_21:
  5098   000040  6A06               	clrf	??_LowISR^0,c
  5099   000042  2A06               	incf	??_LowISR^0,f,c
  5100   000044  EF25  F000         	goto	i1u166_28
  5101   000048                     i1u165_20:
  5102   000048  6A06               	clrf	??_LowISR^0,c
  5103   00004A                     i1u166_28:
  5104   00004A  4606               	rlncf	??_LowISR^0,f,c
  5105   00004C  4606               	rlncf	??_LowISR^0,f,c
  5106   00004E  4606               	rlncf	??_LowISR^0,f,c
  5107   000050  5080               	movf	128,w,c	;volatile
  5108   000052  1806               	xorwf	??_LowISR^0,w,c
  5109   000054  0BF7               	andlw	-9
  5110   000056  1806               	xorwf	??_LowISR^0,w,c
  5111   000058  6E80               	movwf	128,c	;volatile
  5112   00005A                     
  5113                           ;interrupts.c: 39:         TMR0H = 0b11000010;
  5114   00005A  0EC2               	movlw	194
  5115   00005C  6ED4               	movwf	212,c	;volatile
  5116   00005E                     
  5117                           ;interrupts.c: 40:         TMR0L = 0b11110110;
  5118   00005E  0EF6               	movlw	246
  5119   000060  6ED3               	movwf	211,c	;volatile
  5120   000062                     
  5121                           ;interrupts.c: 41:         tmr_ovf = 1;
  5122   000062  0E01               	movlw	1
  5123   000064  0100               	movlb	0	; () banked
  5124   000066  6FFA               	movwf	_tmr_ovf& (0+255),b
  5125   000068                     
  5126                           ; BSR set to: 0
  5127                           ;interrupts.c: 42:         PIR0bits.TMR0IF=0;
  5128   000068  010E               	movlb	14	; () banked
  5129   00006A  9B33               	bcf	51,5,b	;volatile
  5130   00006C                     i1l340:
  5131                           
  5132                           ; BSR set to: 14
  5133   00006C  C009  FFE0         	movff	??_LowISR+3,bsr
  5134   000070  C008  FFE8         	movff	??_LowISR+2,wreg
  5135   000074  C007  FFD8         	movff	??_LowISR+1,status
  5136   000078  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  5137   00007A  0010               	retfie	
  5138   00007C                     __end_of_LowISR:
  5139                           	callstack 0
  5140                           
  5141 ;; *************** function _HighISR *****************
  5142 ;; Defined at:
  5143 ;;		line 48 in file "interrupts.c"
  5144 ;; Parameters:    Size  Location     Type
  5145 ;;		None
  5146 ;; Auto vars:     Size  Location     Type
  5147 ;;  a               1    4[COMRAM] unsigned char 
  5148 ;; Return value:  Size  Location     Type
  5149 ;;                  1    wreg      void 
  5150 ;; Registers used:
  5151 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5152 ;; Tracked objects:
  5153 ;;		On entry : 0/0
  5154 ;;		On exit  : 0/0
  5155 ;;		Unchanged: 0/0
  5156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5158 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5159 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5160 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5161 ;;Total ram usage:        3 bytes
  5162 ;; Hardware stack levels used: 1
  5163 ;; Hardware stack levels required when called: 1
  5164 ;; This function calls:
  5165 ;;		_getCharFromTxBuf
  5166 ;;		_putCharToRxBuf
  5167 ;;		i2_isDataInTxBuf
  5168 ;; This function is called by:
  5169 ;;		Interrupt level 2
  5170 ;; This function uses a non-reentrant model
  5171 ;;
  5172                           
  5173                           	psect	intcode
  5174   000008                     __pintcode:
  5175                           	callstack 0
  5176   000008                     _HighISR:
  5177                           	callstack 20
  5178                           
  5179                           ; BSR set to: 14
  5180                           ;incstack = 0
  5181   000008  8256               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5182   00000A  EFED  F00D         	goto	int_func
  5183                           
  5184                           	psect	intcode_body
  5185   001BDA                     __pintcode_body:
  5186                           	callstack 20
  5187   001BDA                     int_func:
  5188                           	callstack 20
  5189   001BDA  CFD9 F003          	movff	fsr2l,??_HighISR
  5190   001BDE  CFDA F004          	movff	fsr2h,??_HighISR+1
  5191   001BE2                     
  5192                           ;interrupts.c: 52:     if(PIR4bits.RC4IF){
  5193   001BE2  010E               	movlb	14	; () banked
  5194   001BE4  A737               	btfss	55,3,b	;volatile
  5195   001BE6  EFF7  F00D         	goto	i2u167_41
  5196   001BEA  EFF9  F00D         	goto	i2u167_40
  5197   001BEE                     i2u167_41:
  5198   001BEE  EFFE  F00D         	goto	i2l2561
  5199   001BF2                     i2u167_40:
  5200   001BF2                     
  5201                           ; BSR set to: 14
  5202                           ;interrupts.c: 53:         unsigned char a = RC4REG;
  5203   001BF2  CEE3 F005          	movff	3811,HighISR@a	;volatile
  5204   001BF6                     
  5205                           ; BSR set to: 14
  5206                           ;interrupts.c: 54:         putCharToRxBuf(a);
  5207   001BF6  5005               	movf	HighISR@a^0,w,c
  5208   001BF8  EC51  F010         	call	_putCharToRxBuf
  5209   001BFC                     i2l2561:
  5210                           
  5211                           ;interrupts.c: 58:     if(!isDataInTxBuf()){
  5212   001BFC  ECE1  F010         	call	i2_isDataInTxBuf	;wreg free
  5213   001C00  0900               	iorlw	0
  5214   001C02  A4D8               	btfss	status,2,c
  5215   001C04  EF06  F00E         	goto	i2u168_41
  5216   001C08  EF08  F00E         	goto	i2u168_40
  5217   001C0C                     i2u168_41:
  5218   001C0C  EF0A  F00E         	goto	i2l346
  5219   001C10                     i2u168_40:
  5220   001C10                     
  5221                           ;interrupts.c: 59:         PIE4bits.TX4IE=0;
  5222   001C10  010E               	movlb	14	; () banked
  5223   001C12  952D               	bcf	45,2,b	;volatile
  5224   001C14                     i2l346:
  5225                           
  5226                           ;interrupts.c: 61:     if(PIR4bits.TX4IF){
  5227   001C14  010E               	movlb	14	; () banked
  5228   001C16  A537               	btfss	55,2,b	;volatile
  5229   001C18  EF10  F00E         	goto	i2u169_41
  5230   001C1C  EF12  F00E         	goto	i2u169_40
  5231   001C20                     i2u169_41:
  5232   001C20  EF16  F00E         	goto	i2l348
  5233   001C24                     i2u169_40:
  5234   001C24                     
  5235                           ; BSR set to: 14
  5236                           ;interrupts.c: 62:         TX4REG = getCharFromTxBuf();
  5237   001C24  EC11  F010         	call	_getCharFromTxBuf	;wreg free
  5238   001C28  010E               	movlb	14	; () banked
  5239   001C2A  6FE4               	movwf	228,b	;volatile
  5240   001C2C                     i2l348:
  5241                           
  5242                           ; BSR set to: 14
  5243   001C2C  C004  FFDA         	movff	??_HighISR+1,fsr2h
  5244   001C30  C003  FFD9         	movff	??_HighISR,fsr2l
  5245   001C34  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5246   001C36  0011               	retfie		f
  5247   001C38                     __end_of_HighISR:
  5248                           	callstack 0
  5249                           
  5250 ;; *************** function i2_isDataInTxBuf *****************
  5251 ;; Defined at:
  5252 ;;		line 82 in file "serial.c"
  5253 ;; Parameters:    Size  Location     Type
  5254 ;;		None
  5255 ;; Auto vars:     Size  Location     Type
  5256 ;;		None
  5257 ;; Return value:  Size  Location     Type
  5258 ;;                  1    wreg      unsigned char 
  5259 ;; Registers used:
  5260 ;;		wreg, status,2, status,0
  5261 ;; Tracked objects:
  5262 ;;		On entry : 0/0
  5263 ;;		On exit  : 0/0
  5264 ;;		Unchanged: 0/0
  5265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5270 ;;Total ram usage:        0 bytes
  5271 ;; Hardware stack levels used: 1
  5272 ;; This function calls:
  5273 ;;		Nothing
  5274 ;; This function is called by:
  5275 ;;		_HighISR
  5276 ;; This function uses a non-reentrant model
  5277 ;;
  5278                           
  5279                           	psect	text43
  5280   0021C2                     __ptext43:
  5281                           	callstack 0
  5282   0021C2                     i2_isDataInTxBuf:
  5283                           	callstack 20
  5284   0021C2                     
  5285                           ;serial.c: 83:     return (TxBufWriteCnt!=TxBufReadCnt);
  5286   0021C2  5052               	movf	_TxBufReadCnt^0,w,c	;volatile
  5287   0021C4  1853               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  5288   0021C6  A4D8               	btfss	status,2,c
  5289   0021C8  EFE8  F010         	goto	i2u69_41
  5290   0021CC  EFEB  F010         	goto	i2u69_40
  5291   0021D0                     i2u69_41:
  5292   0021D0  0E01               	movlw	1
  5293   0021D2  EFEC  F010         	goto	i2u70_40
  5294   0021D6                     i2u69_40:
  5295   0021D6  0E00               	movlw	0
  5296   0021D8                     i2u70_40:
  5297   0021D8  0012               	return		;funcret
  5298   0021DA                     __end_ofi2_isDataInTxBuf:
  5299                           	callstack 0
  5300                           
  5301 ;; *************** function _putCharToRxBuf *****************
  5302 ;; Defined at:
  5303 ;;		line 54 in file "serial.c"
  5304 ;; Parameters:    Size  Location     Type
  5305 ;;  byte            1    wreg     unsigned char 
  5306 ;; Auto vars:     Size  Location     Type
  5307 ;;  byte            1    0[COMRAM] unsigned char 
  5308 ;; Return value:  Size  Location     Type
  5309 ;;                  1    wreg      void 
  5310 ;; Registers used:
  5311 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5312 ;; Tracked objects:
  5313 ;;		On entry : 0/0
  5314 ;;		On exit  : 0/0
  5315 ;;		Unchanged: 0/0
  5316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5318 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5320 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5321 ;;Total ram usage:        1 bytes
  5322 ;; Hardware stack levels used: 1
  5323 ;; This function calls:
  5324 ;;		Nothing
  5325 ;; This function is called by:
  5326 ;;		_HighISR
  5327 ;; This function uses a non-reentrant model
  5328 ;;
  5329                           
  5330                           	psect	text44
  5331   0020A2                     __ptext44:
  5332                           	callstack 0
  5333   0020A2                     _putCharToRxBuf:
  5334                           	callstack 20
  5335                           
  5336                           ;incstack = 0
  5337                           ;putCharToRxBuf@byte stored from wreg
  5338   0020A2  6E01               	movwf	putCharToRxBuf@byte^0,c
  5339   0020A4                     
  5340                           ;serial.c: 55:     if (RxBufWriteCnt>=20) {RxBufWriteCnt=0;}
  5341   0020A4  0E13               	movlw	19
  5342   0020A6  6455               	cpfsgt	_RxBufWriteCnt^0,c	;volatile
  5343   0020A8  EF58  F010         	goto	i2u152_41
  5344   0020AC  EF5A  F010         	goto	i2u152_40
  5345   0020B0                     i2u152_41:
  5346   0020B0  EF5C  F010         	goto	i2l2433
  5347   0020B4                     i2u152_40:
  5348   0020B4  0E00               	movlw	0
  5349   0020B6  6E55               	movwf	_RxBufWriteCnt^0,c	;volatile
  5350   0020B8                     i2l2433:
  5351                           
  5352                           ;serial.c: 56:     EUSART4RXbuf[RxBufWriteCnt++]=byte;
  5353   0020B8  0EE6               	movlw	low _EUSART4RXbuf
  5354   0020BA  2455               	addwf	_RxBufWriteCnt^0,w,c	;volatile
  5355   0020BC  6ED9               	movwf	fsr2l,c
  5356   0020BE  6ADA               	clrf	fsr2h,c
  5357   0020C0  0E00               	movlw	high _EUSART4RXbuf
  5358   0020C2  22DA               	addwfc	fsr2h,f,c
  5359   0020C4  C001  FFDF         	movff	putCharToRxBuf@byte,indf2
  5360   0020C8  2A55               	incf	_RxBufWriteCnt^0,f,c	;volatile
  5361   0020CA  0012               	return		;funcret
  5362   0020CC                     __end_of_putCharToRxBuf:
  5363                           	callstack 0
  5364                           
  5365 ;; *************** function _getCharFromTxBuf *****************
  5366 ;; Defined at:
  5367 ;;		line 68 in file "serial.c"
  5368 ;; Parameters:    Size  Location     Type
  5369 ;;		None
  5370 ;; Auto vars:     Size  Location     Type
  5371 ;;		None
  5372 ;; Return value:  Size  Location     Type
  5373 ;;                  1    wreg      unsigned char 
  5374 ;; Registers used:
  5375 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5376 ;; Tracked objects:
  5377 ;;		On entry : 0/0
  5378 ;;		On exit  : 0/0
  5379 ;;		Unchanged: 0/0
  5380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5383 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5384 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5385 ;;Total ram usage:        2 bytes
  5386 ;; Hardware stack levels used: 1
  5387 ;; This function calls:
  5388 ;;		Nothing
  5389 ;; This function is called by:
  5390 ;;		_HighISR
  5391 ;; This function uses a non-reentrant model
  5392 ;;
  5393                           
  5394                           	psect	text45
  5395   002022                     __ptext45:
  5396                           	callstack 0
  5397   002022                     _getCharFromTxBuf:
  5398                           	callstack 20
  5399   002022                     
  5400                           ;serial.c: 69:     if (TxBufReadCnt>=60) {TxBufReadCnt=0;}
  5401   002022  0E3B               	movlw	59
  5402   002024  6452               	cpfsgt	_TxBufReadCnt^0,c	;volatile
  5403   002026  EF17  F010         	goto	i2u155_41
  5404   00202A  EF19  F010         	goto	i2u155_40
  5405   00202E                     i2u155_41:
  5406   00202E  EF1B  F010         	goto	i2l2445
  5407   002032                     i2u155_40:
  5408   002032  0E00               	movlw	0
  5409   002034  6E52               	movwf	_TxBufReadCnt^0,c	;volatile
  5410   002036                     i2l2445:
  5411                           
  5412                           ;serial.c: 70:     return EUSART4TXbuf[TxBufReadCnt++];
  5413   002036  2A52               	incf	_TxBufReadCnt^0,f,c	;volatile
  5414   002038  0452               	decf	_TxBufReadCnt^0,w,c	;volatile
  5415   00203A  6E01               	movwf	??_getCharFromTxBuf^0,c
  5416   00203C  6A02               	clrf	(??_getCharFromTxBuf+1)^0,c
  5417   00203E  0E00               	movlw	low _EUSART4TXbuf
  5418   002040  2401               	addwf	??_getCharFromTxBuf^0,w,c
  5419   002042  6ED9               	movwf	fsr2l,c
  5420   002044  0E05               	movlw	high _EUSART4TXbuf
  5421   002046  2002               	addwfc	(??_getCharFromTxBuf+1)^0,w,c
  5422   002048  6EDA               	movwf	fsr2h,c
  5423   00204A  50DF               	movf	indf2,w,c
  5424   00204C  0012               	return		;funcret
  5425   00204E                     __end_of_getCharFromTxBuf:
  5426                           	callstack 0
  5427                           
  5428                           	psect	rparam
  5429   000000                     
  5430                           	psect	temp
  5431   000056                     btemp:
  5432                           	callstack 0
  5433   000056                     	ds	1
  5434   000000                     int$flags	set	btemp
  5435   000000                     wtemp8	set	btemp+1
  5436   000000                     ttemp5	set	btemp+1
  5437   000000                     ttemp6	set	btemp+4
  5438   000000                     ttemp7	set	btemp+8
  5439                           
  5440                           	psect	idloc
  5441                           
  5442                           ;Config register IDLOC0 @ 0x200000
  5443                           ;	unspecified, using default values
  5444   200000                     	org	2097152
  5445   200000  0FFF               	dw	4095
  5446                           
  5447                           ;Config register IDLOC1 @ 0x200002
  5448                           ;	unspecified, using default values
  5449   200002                     	org	2097154
  5450   200002  0FFF               	dw	4095
  5451                           
  5452                           ;Config register IDLOC2 @ 0x200004
  5453                           ;	unspecified, using default values
  5454   200004                     	org	2097156
  5455   200004  0FFF               	dw	4095
  5456                           
  5457                           ;Config register IDLOC3 @ 0x200006
  5458                           ;	unspecified, using default values
  5459   200006                     	org	2097158
  5460   200006  0FFF               	dw	4095
  5461                           
  5462                           ;Config register IDLOC4 @ 0x200008
  5463                           ;	unspecified, using default values
  5464   200008                     	org	2097160
  5465   200008  0FFF               	dw	4095
  5466                           
  5467                           ;Config register IDLOC5 @ 0x20000A
  5468                           ;	unspecified, using default values
  5469   20000A                     	org	2097162
  5470   20000A  0FFF               	dw	4095
  5471                           
  5472                           ;Config register IDLOC6 @ 0x20000C
  5473                           ;	unspecified, using default values
  5474   20000C                     	org	2097164
  5475   20000C  0FFF               	dw	4095
  5476                           
  5477                           ;Config register IDLOC7 @ 0x20000E
  5478                           ;	unspecified, using default values
  5479   20000E                     	org	2097166
  5480   20000E  0FFF               	dw	4095
  5481                           
  5482                           	psect	config
  5483                           
  5484                           ;Config register CONFIG1L @ 0x300000
  5485                           ;	External Oscillator mode Selection bits
  5486                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  5487                           ;	Power-up default value for COSC bits
  5488                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  5489   300000                     	org	3145728
  5490   300000  AA                 	db	170
  5491                           
  5492                           ;Config register CONFIG1H @ 0x300001
  5493                           ;	unspecified, using default values
  5494                           ;	Clock Out Enable bit
  5495                           ;	CLKOUTEN = 0x1, unprogrammed default
  5496                           ;	Clock Switch Enable bit
  5497                           ;	CSWEN = 0x1, unprogrammed default
  5498                           ;	Fail-Safe Clock Monitor Enable bit
  5499                           ;	FCMEN = 0x1, unprogrammed default
  5500   300001                     	org	3145729
  5501   300001  FF                 	db	255
  5502                           
  5503                           ;Config register CONFIG2L @ 0x300002
  5504                           ;	unspecified, using default values
  5505                           ;	Master Clear Enable bit
  5506                           ;	MCLRE = 0x1, unprogrammed default
  5507                           ;	Power-up Timer Enable bit
  5508                           ;	PWRTE = 0x1, unprogrammed default
  5509                           ;	Low-power BOR enable bit
  5510                           ;	LPBOREN = 0x1, unprogrammed default
  5511                           ;	Brown-out Reset Enable bits
  5512                           ;	BOREN = 0x3, unprogrammed default
  5513   300002                     	org	3145730
  5514   300002  FF                 	db	255
  5515                           
  5516                           ;Config register CONFIG2H @ 0x300003
  5517                           ;	unspecified, using default values
  5518                           ;	Brown Out Reset Voltage selection bits
  5519                           ;	BORV = 0x3, unprogrammed default
  5520                           ;	ZCD Disable bit
  5521                           ;	ZCD = 0x1, unprogrammed default
  5522                           ;	PPSLOCK bit One-Way Set Enable bit
  5523                           ;	PPS1WAY = 0x1, unprogrammed default
  5524                           ;	Stack Full/Underflow Reset Enable bit
  5525                           ;	STVREN = 0x1, unprogrammed default
  5526                           ;	Debugger Enable bit
  5527                           ;	DEBUG = 0x1, unprogrammed default
  5528                           ;	Extended Instruction Set Enable bit
  5529                           ;	XINST = 0x1, unprogrammed default
  5530   300003                     	org	3145731
  5531   300003  FF                 	db	255
  5532                           
  5533                           ;Config register CONFIG3L @ 0x300004
  5534                           ;	WDT Period Select bits
  5535                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  5536                           ;	WDT operating mode
  5537                           ;	WDTE = OFF, WDT Disabled
  5538   300004                     	org	3145732
  5539   300004  9F                 	db	159
  5540                           
  5541                           ;Config register CONFIG3H @ 0x300005
  5542                           ;	unspecified, using default values
  5543                           ;	WDT Window Select bits
  5544                           ;	WDTCWS = 0x7, unprogrammed default
  5545                           ;	WDT input clock selector
  5546                           ;	WDTCCS = 0x7, unprogrammed default
  5547   300005                     	org	3145733
  5548   300005  FF                 	db	255
  5549                           
  5550                           ;Config register CONFIG4L @ 0x300006
  5551                           ;	unspecified, using default values
  5552                           ;	Write Protection Block 0
  5553                           ;	WRT0 = 0x1, unprogrammed default
  5554                           ;	Write Protection Block 1
  5555                           ;	WRT1 = 0x1, unprogrammed default
  5556                           ;	Write Protection Block 2
  5557                           ;	WRT2 = 0x1, unprogrammed default
  5558                           ;	Write Protection Block 3
  5559                           ;	WRT3 = 0x1, unprogrammed default
  5560                           ;	Write Protection Block 3
  5561                           ;	WRT4 = 0x1, unprogrammed default
  5562                           ;	Write Protection Block 3
  5563                           ;	WRT5 = 0x1, unprogrammed default
  5564                           ;	Write Protection Block 3
  5565                           ;	WRT6 = 0x1, unprogrammed default
  5566                           ;	Write Protection Block 3
  5567                           ;	WRT7 = 0x1, unprogrammed default
  5568   300006                     	org	3145734
  5569   300006  FF                 	db	255
  5570                           
  5571                           ;Config register CONFIG4H @ 0x300007
  5572                           ;	unspecified, using default values
  5573                           ;	Configuration Register Write Protection bit
  5574                           ;	WRTC = 0x1, unprogrammed default
  5575                           ;	Boot Block Write Protection bit
  5576                           ;	WRTB = 0x1, unprogrammed default
  5577                           ;	Data EEPROM Write Protection bit
  5578                           ;	WRTD = 0x1, unprogrammed default
  5579                           ;	Scanner Enable bit
  5580                           ;	SCANE = 0x1, unprogrammed default
  5581                           ;	Low Voltage Programming Enable bit
  5582                           ;	LVP = 0x1, unprogrammed default
  5583   300007                     	org	3145735
  5584   300007  FF                 	db	255
  5585                           
  5586                           ;Config register CONFIG5L @ 0x300008
  5587                           ;	unspecified, using default values
  5588                           ;	UserNVM Program Memory Code Protection bit
  5589                           ;	CP = 0x1, unprogrammed default
  5590                           ;	DataNVM Memory Code Protection bit
  5591                           ;	CPD = 0x1, unprogrammed default
  5592   300008                     	org	3145736
  5593   300008  FF                 	db	255
  5594                           
  5595                           ;Config register CONFIG5H @ 0x300009
  5596                           ;	unspecified, using default values
  5597   300009                     	org	3145737
  5598   300009  FF                 	db	255
  5599                           
  5600                           ;Config register CONFIG6L @ 0x30000A
  5601                           ;	unspecified, using default values
  5602                           ;	Table Read Protection Block 0
  5603                           ;	EBTR0 = 0x1, unprogrammed default
  5604                           ;	Table Read Protection Block 1
  5605                           ;	EBTR1 = 0x1, unprogrammed default
  5606                           ;	Table Read Protection Block 2
  5607                           ;	EBTR2 = 0x1, unprogrammed default
  5608                           ;	Table Read Protection Block 3
  5609                           ;	EBTR3 = 0x1, unprogrammed default
  5610                           ;	Table Read Protection Block 4
  5611                           ;	EBTR4 = 0x1, unprogrammed default
  5612                           ;	Table Read Protection Block 5
  5613                           ;	EBTR5 = 0x1, unprogrammed default
  5614                           ;	Table Read Protection Block 6
  5615                           ;	EBTR6 = 0x1, unprogrammed default
  5616                           ;	Table Read Protection Block 7
  5617                           ;	EBTR7 = 0x1, unprogrammed default
  5618   30000A                     	org	3145738
  5619   30000A  FF                 	db	255
  5620                           
  5621                           ;Config register CONFIG6H @ 0x30000B
  5622                           ;	unspecified, using default values
  5623                           ;	Boot Block Table Read Protection bit
  5624                           ;	EBTRB = 0x1, unprogrammed default
  5625   30000B                     	org	3145739
  5626   30000B  FF                 	db	255
  5627                           tosu	equ	0xFFF
  5628                           tosh	equ	0xFFE
  5629                           tosl	equ	0xFFD
  5630                           stkptr	equ	0xFFC
  5631                           pclatu	equ	0xFFB
  5632                           pclath	equ	0xFFA
  5633                           pcl	equ	0xFF9
  5634                           tblptru	equ	0xFF8
  5635                           tblptrh	equ	0xFF7
  5636                           tblptrl	equ	0xFF6
  5637                           tablat	equ	0xFF5
  5638                           prodh	equ	0xFF4
  5639                           prodl	equ	0xFF3
  5640                           indf0	equ	0xFEF
  5641                           postinc0	equ	0xFEE
  5642                           postdec0	equ	0xFED
  5643                           preinc0	equ	0xFEC
  5644                           plusw0	equ	0xFEB
  5645                           fsr0h	equ	0xFEA
  5646                           fsr0l	equ	0xFE9
  5647                           wreg	equ	0xFE8
  5648                           indf1	equ	0xFE7
  5649                           postinc1	equ	0xFE6
  5650                           postdec1	equ	0xFE5
  5651                           preinc1	equ	0xFE4
  5652                           plusw1	equ	0xFE3
  5653                           fsr1h	equ	0xFE2
  5654                           fsr1l	equ	0xFE1
  5655                           bsr	equ	0xFE0
  5656                           indf2	equ	0xFDF
  5657                           postinc2	equ	0xFDE
  5658                           postdec2	equ	0xFDD
  5659                           preinc2	equ	0xFDC
  5660                           plusw2	equ	0xFDB
  5661                           fsr2h	equ	0xFDA
  5662                           fsr2l	equ	0xFD9
  5663                           status	equ	0xFD8

Data Sizes:
    Strings     29
    Constant    0
    Data        0
    BSS         122
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     76      85
    BANK0           160    134     155
    BANK1           256    208     240
    BANK2           256    200     200
    BANK3           256    200     200
    BANK4           256    200     200
    BANK5           256      0      60
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_2(CODE[29]), STR_1(CODE[29]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_2(CODE[29]), STR_1(CODE[29]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 29
		 -> STR_2(CODE[29]), STR_1(CODE[29]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 29
		 -> STR_2(CODE[29]), STR_1(CODE[29]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2260$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_2(CODE[29]), STR_1(CODE[29]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 40
		 -> main@string2(BANK0[40]), main@string(BANK0[40]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2207$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2207$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    TxBufferedString@string	PTR unsigned char  size(2) Largest target is 40
		 -> main@string2(BANK0[40]), main@string(BANK0[40]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    S1069DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    S1069DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    Update_RGBC@tempval	PTR struct RGB_val size(2) Largest target is 8
		 -> main@initial_color(BANK1[8]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->___wmul
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _Update_RGBC->_color_read_Blue
    _Update_RGBC->_color_read_Clear
    _Update_RGBC->_color_read_Green
    _Update_RGBC->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _TxBufferedString->_putCharToTxBuf

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    _HighISR->_getCharFromTxBuf

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               893   893      0   12987
                                             49 BANK0     85    85      0
                                              0 BANK1    208   208      0
                                              0 BANK2    200   200      0
                                              0 BANK3    200   200      0
                                              0 BANK4    200   200      0
                    _Interrupts_init
                           _LED_init
                        _Timer0_init
                   _TxBufferedString
                        _Update_RGBC
                         _WhiteLight
                   _color_click_init
                   _getCharFromRxBuf
                         _initUSART4
                      _isDataInRxBuf
                          _sendTxBuf
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    15     12   10169
                                             24 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    9497
                                             74 COMRAM     2     2      0
                                             18 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           24    18      6    9003
                                             71 COMRAM     3     3      0
                                              0 BANK0     18    12      6
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    5075
                                             36 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2775
                                             25 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1357
                                             18 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     857
                                              9 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             27 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                              9 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                              9 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 9     7      2    1764
                                             15 COMRAM     9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     259
                                              9 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              4     2      2     281
                                              9 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     772
                                              9 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _sendTxBuf                                            0     0      0       0
                      _isDataInTxBuf
 ---------------------------------------------------------------------------------
 (2) _isDataInTxBuf                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _isDataInRxBuf                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getCharFromRxBuf                                     2     2      0       0
                                              9 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     363
                                             13 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     363
                                             11 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WhiteLight                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Update_RGBC                                          2     0      2     870
                                             20 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     164
                                             13 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     164
                                             13 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     164
                                             13 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     164
                                             13 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      31
                                             10 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      65
                                             10 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TxBufferedString                                     2     0      2     276
                                             10 COMRAM     2     0      2
                     _putCharToTxBuf
 ---------------------------------------------------------------------------------
 (2) _putCharToTxBuf                                       1     1      0      31
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _LowISR                                               4     4      0       0
                                              5 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _HighISR                                             3     3      0      45
                                              2 COMRAM     3     3      0
                   _getCharFromTxBuf
                     _putCharToRxBuf
                    i2_isDataInTxBuf
 ---------------------------------------------------------------------------------
 (11) i2_isDataInTxBuf                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _putCharToRxBuf                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _getCharFromTxBuf                                    2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Interrupts_init
   _LED_init
   _Timer0_init
   _TxBufferedString
     _putCharToTxBuf
   _Update_RGBC
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _WhiteLight
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _getCharFromRxBuf
   _initUSART4
   _isDataInRxBuf
   _sendTxBuf
     _isDataInTxBuf
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
         _isdigit

 _LowISR (ROOT)

 _HighISR (ROOT)
   _getCharFromTxBuf
   _putCharToRxBuf
   i2_isDataInTxBuf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      63        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      3C      15       23.4%
BITBANK4           100      0       0      12        0.0%
BANK4              100     C8      C8      13       78.1%
BITBANK3           100      0       0      10        0.0%
BANK3              100     C8      C8      11       78.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100     C8      C8       9       78.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100     D0      F0       7       93.8%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     86      9B       5       96.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4C      55       1       90.4%
BITBIGSFRhllllh     52      0       0      42        0.0%
BITBIGSFRhlllll     37      0       0      44        0.0%
BITBIGSFRllh        2D      0       0      47        0.0%
BITBIGSFRlllhll     2A      0       0      54        0.0%
BITBIGSFRlllll      26      0       0      61        0.0%
BITBIGSFRlllhhh     1E      0       0      48        0.0%
BITBIGSFRhhhlll     1E      0       0      38        0.0%
BITBIGSFRhhhhhl     1B      0       0      33        0.0%
BITBIGSFRhhhhl      13      0       0      34        0.0%
BITBIGSFRlllhhh     11      0       0      49        0.0%
BITBIGSFRhhhlhh      E      0       0      35        0.0%
BITBIGSFRhhhhhh      D      0       0      32        0.0%
BITBIGSFRlllhll      9      0       0      58        0.0%
BITBIGSFRhlllll      8      0       0      45        0.0%
BITBIGSFRllllh       6      0       0      60        0.0%
BITBIGSFRlllhll      6      0       0      53        0.0%
BITBIGSFRlllhll      5      0       0      56        0.0%
BITBIGSFRlllhlh      5      0       0      52        0.0%
BITBIGSFRlllhll      3      0       0      55        0.0%
BITBIGSFRlllhll      3      0       0      57        0.0%
BITBIGSFRlllhhl      3      0       0      51        0.0%
BITBIGSFRhlllll      2      0       0      43        0.0%
BITBIGSFRhhhllh      2      0       0      37        0.0%
BITBIGSFRhhhlhl      1      0       0      36        0.0%
BITBIGSFRlllhhh      1      0       0      50        0.0%
BITBIGSFRhlllhh      1      0       0      40        0.0%
BITBIGSFRhlllhl      1      0       0      41        0.0%
BITBIGSFRhlh         1      0       0      39        0.0%
BITBIGSFRlllhll      1      0       0      59        0.0%
BITBIGSFRlh          1      0       0      46        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     474      62        0.0%
DATA                 0      0     474       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Feb 25 13:50:53 2023

               _color_read_Red 1CE0                _color_read_Blue 1DD0                             l22 2138  
                           l31 1E1E                             l25 1D2E                             l34 1DCE  
                           l19 1F98                             l28 1D7E                             l37 1BD8  
                           l70 20F2                             l64 2076                             l73 2208  
                           l82 21F4                             l67 20CC                             l76 2212  
                           l85 1EEA                             l79 21FE                             bsr 000FE0  
          ___wmul@multiplicand 000C               _color_read_Clear 1D80               _color_read_Green 1D30  
            ??_Interrupts_init 000A                            l100 2222                            l103 221A  
                          l225 2176                            l332 21E8                            l412 2118  
                          l262 20A0                            l254 21C0                            l271 1FC8  
                          l247 2020                            l265 21A8                            l275 2190  
                          l286 2158                            l526 1744                            l539 18A8  
                          _abs 1EEC                            _pad 1AD2                            prod 000FF3  
                          wreg 000FE8                           l1120 1B58                           l1201 19FE  
                         l1122 1B7A                           l1130 117C                           l1131 11C2  
                         ?_abs 001C                           l1204 1A06                           l1117 1B16  
                         l1230 1AD0                           l1207 1FF4                           l1215 1E64  
                         l1144 138C                           l1128 1174                           l1241 2224  
                         l3001 0FD2                           l1090 1CDE                           l3011 109A  
                         l3003 0FF2                           l1172 1C8C                           l3101 221C  
                         l3005 1012                           l1238 1EA8                           l1166 10D8  
                         l3103 2214                           l3031 2058                           l3007 106A  
                         l3015 10AC                           l1176 1F22                           l3033 205E  
                         l3041 211C                           l3121 2164                           l3051 1D76  
                         l3043 1CE0                           l3035 2060                           l3131 1FF6  
                         l3123 2166                           l1179 1F2A                           l3061 1D80  
                         l3045 1D26                           l3037 2062                           l3029 204E  
                         l3133 2006                           l3125 2170                           l3071 208E  
                         l3143 1F9A                           l3055 1DD0                           l3063 1DC6  
                         l3039 2064                           l3135 200A                           l3127 2172  
                         l3119 215A                           l3151 2178                           l3161 2156  
                         l3073 209E                           l3145 1F9E                           l3057 1E16  
                         l3049 1D30                           l3129 2174                           l3153 218C  
                         l3081 1C44                           l3241 13B4                           l3163 21DA  
                         l3155 213A                           l3067 207A                           l3147 1FAC  
                         l3091 1F6A                           l3139 21AA                           l3075 2192  
                         l3083 1C62                           l3171 1CB0                           l3251 13CA  
                         l3243 13B8                           l3157 2142                           l3069 208A  
                         l3149 1FB0                           l3093 1F74                           l3085 1C82  
                         l3173 1CCC                           l3165 1C8E                           l3261 1444  
                         l3253 13CE                           l3245 13BC                           l3237 138E  
                         l3159 214C                           l3095 1F84                           l2711 20F4  
                         l2703 1E66                           l3079 1C38                           l3167 1CA0  
                         l3271 148A                           l3263 1456                           l3255 13DE  
                         l3247 13C0                           l3239 13B0                           l3097 1F8E  
                         l3089 1F66                           l2713 2110                           l3361 194C  
                         l2721 15D0                           l2705 1E72                           l2801 1AF4  
                         l3169 1CA8                           l3281 152A                           l3273 149E  
                         l3265 1466                           l3257 143E                           l3249 13C4  
                         l3099 1B7C                           l2731 1626                           l2723 15F0  
                         l2707 1E84                           l2811 1B3A                           l2803 1B02  
                         l3291 1572                           l3283 1544                           l3275 14A6  
                         l3267 146E                           l3259 1440                           l2901 18BE  
                         l2741 167A                           l2733 1632                           l2725 15F4  
                         l2717 15BE                           l2709 1E88                           l2813 1B66  
                         l2805 1B0E                           l3293 15A6                           l3277 151A  
                         l3285 1548                           l3269 1476                           l2831 1E5E  
                         l2823 1E20                           l2911 1922                           l2751 16EE  
                         l2743 168C                           l2735 1650                           l2727 1602  
                         l2719 15C2                           l2815 1EEC                           l2807 1B22  
                         l3359 0EBE                           l3295 15B2                           l3287 155A  
                         l3279 1526                           l2825 1E24                           l2921 199C  
                         l2913 192A                           l2905 18C2                           l2745 16BA  
                         l2737 1658                           l2753 16F4                           l2729 1622  
                         l2761 1746                           l2817 1F06                           l2809 1B36  
                         l2841 10FA                           l3297 15B6                           l3289 1562  
                         l2835 20CC                           l2931 2200                           l2819 1FCA  
                         l2827 1E38                           l2923 19D0                           l2915 1962  
                         l2907 18E2                           l2755 1704                           l2747 16DA  
                         l2739 166C                           l2771 178A                           l2763 174A  
                         l2691 1A1A                           l2851 114E                           l2843 110E  
                         l2837 20DC                           l2933 2204                           l2941 21FA  
                         l2829 1E5A                           l2925 19E2                           l2909 191A  
                         l2757 1724                           l2749 16DC                           l2781 17F2  
                         l2773 17AA                           l2765 1758                           l2693 1A2C  
                         l2861 11AA                           l2853 1168                           l2845 111E  
                         ?_pad 001A                           l2951 1EB8                           l2943 220A  
                         l2935 21EC                           l2791 1868                           l2783 1820  
                         l2775 17C8                           l2767 1778                           l2695 1A36  
                         l2871 11DA                           l2863 11B6                           l2855 1184  
                         l2847 113E                           l2839 10DA                           l2953 1EC0  
                         l2945 220E                           l2937 21F0                           l2793 1888  
                         l2785 1840                           l2777 17D0                           l2769 177C  
                         l2697 1A54                           l2689 1A08                           l2881 12E6  
                         l2873 125C                           l2865 11BE                           l2857 1194  
                         l2849 114C                           l2961 0E20                           l2955 1EE6  
                         l2947 1EAC                           l2939 21F6                           l2787 1852  
                         l2779 17E4                           l2699 1A8A                           l2891 1356  
                         l2883 1304                           l2875 1262                           l2867 11CA  
                         l2859 119A                           l2971 0E74                           l2963 0E48  
                         l2957 1EE8                           l2949 1EB0                           l2789 1858  
                         l2797 1AD2                           l2893 135C                           l2885 131E  
                         l2877 1268                           l2869 11D4                           l2973 0E76  
                         l2981 0ECC                           l2965 0E56                           l2799 1AE0  
                         l2895 136C                           l2887 1338                           l2879 12CC  
                         l2991 0F58                           l2983 0EDE                           l2975 0E88  
                         l2967 0E62                           l2889 1346                           l2993 0F78  
                         l2985 0F06                           l2969 0E66                           l2899 18AA  
                         l2987 0F3C                           l2979 0E94                           l2997 0F86  
                         l2989 0F4A                           l2999 0FC2                           STR_1 0E01  
                         STR_2 0E01                           u2000 1FF0                           u2010 1E38  
                         u2011 1E34                           u2020 1E5A                           u2100 1194  
                         u2021 1E56                           u2101 1190                           u2030 20DC  
                         u2110 11AA                           u2031 20D8                           u2111 11A6  
                         u2040 20F2                           u2200 19D0                           u2120 12E6  
                         u2041 20EE                           u2201 19CC                           u2121 12E2  
                         u2210 19E2                           u2130 1304                           u2050 110A  
                         u2211 19DE                           u2131 1300                           u2051 1104  
                         u2220 1ED4                           u2140 131E                           u2060 110C  
                         u2300 1012                           u2221 1ECC                           u2141 131A  
                         u2301 100E                           u2310 208A                           u2150 1338  
                         u2070 111E                           u2311 2086                           u2151 1334  
                         u2071 111A                           u2320 21A6                           u2400 218C  
                         u2160 1346                           u2080 114C                           u2240 0E48  
                 _BAUD4CONbits 000EE9                           u2321 21A0                           u2401 2188  
                         u2161 1342                           u2081 1148                           u2241 0E44  
                         u2330 21A8                           u2170 1356                           u2090 1168  
                         u2250 0EDE                           u2171 1352                           u2091 1164  
                         u2251 0EDA                           u2180 18E2                           u2260 0F06  
                         u2340 1C82                           u2500 149E                           u2181 18DE  
                         u2261 0F02                           u2341 1C7E                           u2501 149A  
                         u2238 1ED6                           u2190 1916                           u2270 0F4A  
                         u2510 155A                           u2191 1912                           u2271 0F46  
                         u2511 1556                           u2360 2006                           u1800 1EA8  
                         u2280 0FC2                           u2520 1572                           u2361 2002  
                         u1801 1EA4                           u2281 0FBE                           u2521 156E  
                         u2370 21BE                           u1810 15D0                           u2290 0FF2  
                         _T2PR 000FBC                           u2371 21B8                           u1811 15CC  
                         u2291 0FEE                           u2380 21C0                           u1820 1602  
                         u1900 17C8                           u1821 15FE                           u1901 17C4  
                         u2390 1FC8                           u1910 17F2                           u2470 1456  
                         u2391 1FC4                           u1831 162C                           u1911 17EE  
                         u2471 1452                           u1840 1650                           u1920 1820  
                         u1760 1A1A                           u2480 1466                           u1841 164C  
                         u1921 181C                           u1761 1A16                           u2537 1536  
                         u2481 1462                           u1850 167A                           u1930 1868  
                         u1770 1A2C                           u2490 148A                           u2547 1F7A  
                         u1851 1676                           u1931 1864                           u1771 1A28  
                         u2491 1486                           u1860 16BA                           u1780 1A54  
                         u1940 1AE0                           u1861 16B6                           u1781 1A50  
                         u1941 1ADC                           u1870 1704                           u1790 1A8A  
                         u1950 1B02                           u1871 1700                           u1791 1A86  
                         u1951 1AFE                           u1880 1758                           u1960 1B58  
                         u1881 1754                           u1961 1B54                           u1890 178A  
                         u1970 1B66                           u1891 1786                           u1971 1B62  
                         u1980 1F06                           u1981 1F02                           u1990 1FEE  
                         u1991 1FE8                           abs@a 001C                           _dbuf 01D0  
                         _atoi 18AA                           _main 138E                           _dtoa 10DA  
                         _prec 004F                           pad@i 0021                           pad@p 001E  
                         fsr1h 000FE2                           fsr2h 000FDA                           indf2 000FDF  
                         fsr1l 000FE1                           pad@w 0023                           fsr2l 000FD9  
                         btemp 0056              main@initial_color 01C8                           prodh 000FF4  
                         prodl 000FF3                           start 007C                    main@string2 00BB  
       __end_of_color_read_Red 1D30                __end_of_HighISR 1C38                   ___param_bank 000000  
                        ??_abs 001E                          ??_pad 0020               __end_of_LED_init 2224  
              __end_of___aodiv 1746                          ?_atoi 0010                          ?_main 0001  
                        ?_dtoa 0025                __end_of___aomod 18AA                          i1l340 006C  
                        i2l251 20CA                          i2l265 21D8                          i2l258 204C  
                        i2l346 1C14                          i2l348 1C2C                   vfpfcnvrt@fmt 0062  
                        _TMR0H 000FD4                          _TMR0L 000FD3     __end_of_I2C_2_Master_Start 220A  
   __end_of_I2C_2_Master_Write 21F6                          _flags 0051                          _fputc 1A08  
                        _fputs 1E66                __end_of_isdigit 1FF6                          atoi@n 0017  
                        pad@fp 001A                          atoi@s 0010                          _width 004D  
                        _putch 2224                          main@a 00E5                          main@i 00E4  
                        dtoa@d 0027                          dtoa@i 0046                          dtoa@n 003D  
                        dtoa@p 0039                          dtoa@s 0045                          dtoa@w 003B  
              __end_of_isspace 1E66                          tablat 000FF5                          ttemp5 0057  
                        ttemp6 005A                          ttemp7 005E                          status 000FD8  
                        wtemp8 0057                __end_of_sprintf 1CE0        __end_of_color_read_Blue 1E20  
        _I2C_2_Master_RepStart 220A             putCharToRxBuf@byte 0001                ?_color_read_Red 000E  
              __initialization 1F2C                   __end_of_atoi 1A08                   __end_of_main 15BE  
                 __end_of_dtoa 138E                i2_isDataInTxBuf 21C2             putCharToTxBuf@byte 000A  
                       ??_atoi 0012                         ??_main 0091                         ??_dtoa 002F  
                __activetblptr 000003                         ?_fputc 000A                         ?_fputs 0013  
                       _CCPR1H 000FAA                         _CCPR2H 000FA6                         _CCPR3H 000F25  
                       _CCPR4H 000F21                         ?_putch 0001                         _RC0PPS 000E62  
                       _RC4REG 000EE3                         _RE2PPS 000E74                         _RD5PPS 000E6F  
                       _RC7PPS 000E69                         i1l2551 0062                         i1l2543 0026  
                       i1l2553 0068                         i1l2545 0036                         i1l2547 005A  
                       _RE4PPS 000E76                         _RD6PPS 000E70                         i1l2549 005E  
                       i2l2431 20B4                         i2l2441 2022                         i2l2433 20B8  
                       i2l2443 2032                         i2l2435 20C8                         i2l2445 2036  
                       i2l2429 20A4                         i2l2561 1BFC                         i2l1747 21C2  
                       i2l2563 1C10                         i2l2555 1BE2                         i2l2565 1C24  
                       i2l2557 1BF2                         i2l2559 1BF6                         _RG6PPS 000E88  
                vfpfcnvrt@done 006E                      ??_HighISR 0003       __end_of_color_click_init 1F9A  
                       _RX4PPS 000E15                         _TX4REG 000EE4                  main@readingsB 0300  
                main@readingsC 0400                  main@readingsG 0200                  main@readingsR 0100  
                       _LowISR 0018                  ??_Timer0_init 000A                   _CCPTMRS0bits 000FAD  
                 vfprintf@cfmt 004B               _getCharFromRxBuf 1FF6               _getCharFromTxBuf 2022  
                    ??___aodiv 001A                      ??___aomod 001A                         ___wmul 20F4  
                       clear_0 1F32                         clear_1 1F3E                         clear_2 1F4A  
                       clear_3 1F56                         isa$std 000001                         pad@buf 001C  
                       dtoa@fp 0025                         fputc@c 000A              ?_TxBufferedString 000B  
                       fputs@c 0017                         fputs@i 0018                         fputs@s 0013  
                    ??_isdigit 000C                     _WhiteLight 2214                   __mediumconst 0000  
                    ??_isspace 000C                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8             ??_TxBufferedString 000D                         putch@c 0001  
             __end_of_vfprintf 1C8E                      ??_sprintf 004D          __end_of_isDataInRxBuf 21C2  
        __end_of_isDataInTxBuf 21AA                  ??_Update_RGBC 0017                     __accesstop 0060  
      __end_of__initialization 1F5C       __end_of_color_read_Clear 1DD0       __end_of_color_read_Green 1D80  
       ?_I2C_2_Master_RepStart 0001        __end_ofi2_isDataInTxBuf 21DA                  ___rparam_used 000001  
                    ?_LED_init 0001               ?_color_read_Blue 000E                _Interrupts_init 21DA  
               __pcstackCOMRAM 0001                  __end_of_fputc 1AD2                  __end_of_fputs 1EAA  
                __end_of_putch 2226            __end_of_Timer0_init 215A                        ??_fputc 000E  
                      ??_fputs 0017                        ??_putch 000A                     __pbssBANK0 00E6  
                   __pbssBANK1 01D0                     __pbssBANK5 0500                     ??_LED_init 000A  
                      ?_LowISR 0001              _color_writetoaddr 211A                   _T2CLKCONbits 000FBF  
          __end_of_Update_RGBC 1BDA             ?_color_writetoaddr 000C                        ?___wmul 000A  
          ??_color_writetoaddr 000D                    ?_WhiteLight 0001                        _SP4BRGH 000EE6  
                      _SP4BRGL 000EE5                        i2u70_40 21D8                        i2u69_40 21D6  
                      i2u69_41 21D0                        _SSP2ADD 000ED6                        _SSP2BUF 000ED5  
      __end_of_Interrupts_init 21EA         color_writetoaddr@value 000C               ??_color_read_Red 0010  
                      _HighISR 0008      __end_of_color_writetoaddr 213A               ?i2_isDataInTxBuf 0001  
           _I2C_2_Master_Start 2200                     _initUSART4 215A             _I2C_2_Master_Write 21EA  
                      __Hparam 0000                        __Lparam 0000              color_read_Red@tmp 0013  
                  _Timer0_init 213A                        ___aodiv 15BE                        ___aomod 1746  
          ?_I2C_2_Master_Start 0001            ?_I2C_2_Master_Write 0001                      ?_vfprintf 0072  
                 __psmallconst 0E00                        __pcinit 1F2C                        __ramtop 0E00  
                      __ptext0 138E                        __ptext1 1C8E                        __ptext2 1C38  
                      __ptext3 0E20                        __ptext4 10DA                        __ptext5 1AD2  
                      __ptext6 1E66                        __ptext7 1A08                        __ptext8 2224  
                      __ptext9 1EEC                      _T2CONbits 000FBD                        _isdigit 1FCA  
                      _isspace 1E20                      _T2HLTbits 000FBE                  _RxBufWriteCnt 0055  
                      atoi@neg 0015       __end_of_getCharFromRxBuf 2022       __end_of_getCharFromTxBuf 204E  
                      _tmr_ovf 00FA                        _sprintf 1C8E           ??_I2C_2_Master_Start 000B  
         ??_I2C_2_Master_Write 000B                 __pintcode_body 1BDA           end_of_initialization 1F5C  
            __end_of_sendTxBuf 2192                        fputc@fp 000C                        int_func 1BDA  
                      fputs@fp 0015                    _Update_RGBC 1B7C              ?_color_click_init 0001  
           ??_color_click_init 000E              __end_of_vfpfcnvrt 10DA                        postdec2 000FDD  
                      postinc0 000FEE                        postinc1 000FE6                        postinc2 000FDE  
             vfpfcnvrt@convarg 0066                     ??_vfprintf 004B                      _TRISAbits 000F81  
                    _TRISCbits 000F83                      _TRISDbits 000F84                      _TRISEbits 000F85  
                    _TRISFbits 000F86                      _TRISGbits 000F87       color_writetoaddr@address 000D  
      ??_I2C_2_Master_RepStart 000B               ?_Interrupts_init 0001                    _CCP1CONbits 000FAB  
            ?_color_read_Clear 000E                   _EUSART4RXbuf 00E6                   _EUSART4TXbuf 0500  
                  _CCP2CONbits 000FA7              ?_color_read_Green 000E                    _CCP3CONbits 000F26  
                  ?_initUSART4 0001                    _CCP4CONbits 000F22             ??_color_read_Clear 0010  
           ??_color_read_Green 0010                     main@string 0093                 __end_of_LowISR 007C  
                  vfpfcnvrt@ap 0064                    vfpfcnvrt@cp 0070                    vfpfcnvrt@fp 0060  
               __end_of___wmul 211A            color_read_Clear@tmp 0013            start_initialization 1F2C  
                  __end_of_abs 1F2C                    __end_of_pad 1B7C                  _TxBufWriteCnt 0053  
          color_read_Green@tmp 0013                       ??_LowISR 0006                    vfprintf@fmt 0074  
                     ??___wmul 000E                 _putCharToRxBuf 20A2                 _putCharToTxBuf 2078  
           Update_RGBC@tempval 0015                    __pbssCOMRAM 004D                   ??_WhiteLight 000A  
                __pcstackBANK0 0060                  __pcstackBANK1 0100                  __pcstackBANK2 0200  
                __pcstackBANK3 0300                  __pcstackBANK4 0400               ___aodiv@dividend 000A  
                     ?_HighISR 0001                      _dtoa$2298 0037                   ?_Timer0_init 0001  
       __end_of_putCharToRxBuf 20CC         __end_of_putCharToTxBuf 20A2                      __pintcode 0008  
           __end_of_WhiteLight 221C                       ?___aodiv 000A                       ?___aomod 000A  
             ___aodiv@quotient 001C         TxBufferedString@string 000B                    __pintcodelo 0018  
         I2C_2_Master_Read@ack 000C           I2C_2_Master_Read@tmp 000D                    __smallconst 0E00  
                     ?_isdigit 000A              _I2C_2_Master_Idle 20CC              _I2C_2_Master_Init 204E  
            _I2C_2_Master_Read 1EAA              _I2C_2_Master_Stop 21F6                       ?_isspace 000A  
                 _RxBufReadCnt 0054             ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001  
           ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001              ?_getCharFromRxBuf 0001  
                     ?_sprintf 0078              ?_getCharFromTxBuf 0001             ??_getCharFromRxBuf 000A  
           ??_getCharFromTxBuf 0001            ??_I2C_2_Master_Idle 000A            ??_I2C_2_Master_Init 000A  
                 ?_Update_RGBC 0015            ??_I2C_2_Master_Read 000B                 ___wmul@product 000E  
                     _LATAbits 000F79                  _isDataInRxBuf 21AA            ??_I2C_2_Master_Stop 000B  
                     _LATCbits 000F7B                  _isDataInTxBuf 2192                       _LATEbits 000F7D  
                     _LATFbits 000F7E               _TxBufferedString 1F9A                       _LATGbits 000F7F  
                     _LATHbits 000F80                      _sendTxBuf 2178                       _IPR0bits 000E1F  
                     _PIE0bits 000E29                       _LED_init 221C                       _PIE4bits 000E2D  
                     i1u164_20 0036                       i1u164_21 0032                       i1u165_20 0048  
                     i1u165_21 0040                       i1u166_28 004A                       i2u152_40 20B4  
                     i2u152_41 20B0                       i2u155_40 2032                       i2u155_41 202E  
                     i2u167_40 1BF2                       i2u167_41 1BEE                       _PIR0bits 000E33  
                     HighISR@a 0005                       i2u168_40 1C10                       i2u168_41 1C0C  
                     i2u169_40 1C24                       i2u169_41 1C20                       _PIR4bits 000E37  
              ?_putCharToRxBuf 0001                ?_putCharToTxBuf 0001                       _SSP2CON2 000EDA  
                     _SSP2STAT 000ED8                      _vfpfcnvrt 0E20      __end_of_I2C_2_Master_Idle 20F4  
    __end_of_I2C_2_Master_Init 2078      __end_of_I2C_2_Master_Read 1EEC              ___wmul@multiplier 000A  
    __end_of_I2C_2_Master_Stop 2200    I2C_2_Master_Write@data_byte 000B              ??_color_read_Blue 0010  
                 _TxBufReadCnt 0052                   _isspace$2347 000E                 ?_isDataInRxBuf 0001  
               ?_isDataInTxBuf 0001  __end_of_I2C_2_Master_RepStart 2214             color_read_Blue@tmp 0013  
                   ?_sendTxBuf 0001                   ??_initUSART4 000A                       __Hrparam 0000  
                   vfprintf@ap 0076                       __Lrparam 0000                     vfprintf@fp 0072  
                   ?_vfpfcnvrt 0060                ___aodiv@divisor 0012                ___aodiv@counter 001A  
                   _ANSELDbits 000EA7                     sprintf@fmt 007A                     _T0CON0bits 000FD5  
                   _T0CON1bits 000FD6             __end_of_initUSART4 2178                       __ptext10 1746  
                     __ptext11 15BE                       __ptext20 1FF6                       __ptext12 18AA  
                     __ptext21 1F66                       __ptext13 1E20                       __ptext30 21EA  
                     __ptext22 211A                       __ptext14 1FCA                       __ptext31 21F6  
                     __ptext23 204E                       __ptext15 20F4                       __ptext40 21DA  
                     __ptext32 2200                       __ptext24 2214                       __ptext16 2178  
                     __ptext33 220A                       __ptext25 1B7C                       __ptext17 2192  
                     __ptext34 1EAA                       __ptext26 1CE0                       __ptext18 21AA  
                     __ptext43 21C2                       __ptext35 20CC                       __ptext27 1D30  
                     __ptext19 215A                       __ptext44 20A2                       __ptext36 1F9A  
                     __ptext28 1D80                       __ptext45 2022                       __ptext37 2078  
                     __ptext29 1DD0                       __ptext38 213A                       __ptext39 221C  
                 _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA                       isa$xinst 000000  
                   _RC4STAbits 000EE7                       int$flags 0056                       _vfprintf 1C38  
                     main@cont 00E3               ___aomod@dividend 000A                     _INTCONbits 000FF2  
            ??i2_isDataInTxBuf 0001                       isdigit@c 000A                ??_isDataInRxBuf 000A  
              ??_isDataInTxBuf 000A                       intlevel1 0000                       intlevel2 0000  
                    sprintf@ap 0084                       isspace@c 000A                    ??_sendTxBuf 000A  
              ___aomod@divisor 0012                    ??_vfpfcnvrt 0048                ___aomod@counter 001A  
             _color_click_init 1F66       __end_of_TxBufferedString 1FCA                       sprintf@f 0086  
                     sprintf@s 0078                     _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C  
                   _TX4STAbits 000EE8                   ___aodiv@sign 001B               ??_putCharToRxBuf 0001  
             ??_putCharToTxBuf 000A                   ___aomod@sign 001B  
