

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Mar 13 18:10:44 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    68                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    69                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    78                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    79                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    80                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    81                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    82   000000                     
    83                           ; Generated 06/04/2022 GMT
    84                           ; 
    85                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    86                           ; All rights reserved.
    87                           ; 
    88                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    89                           ; 
    90                           ; Redistribution and use in source and binary forms, with or without modification, are
    91                           ; permitted provided that the following conditions are met:
    92                           ; 
    93                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    94                           ;        conditions and the following disclaimer.
    95                           ; 
    96                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    97                           ;        of conditions and the following disclaimer in the documentation and/or other
    98                           ;        materials provided with the distribution. Publication is not required when
    99                           ;        this file is used in an embedded application.
   100                           ; 
   101                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   102                           ;        software without specific prior written permission.
   103                           ; 
   104                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   105                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   106                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   107                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   108                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   109                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   110                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   111                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   112                           ; 
   113                           ; 
   114                           ; Code-generator required, PIC18F67K40 Definitions
   115                           ; 
   116                           ; SFR Addresses
   117   000000                     
   118                           	psect	idataBANK0
   119   002B12                     __pidataBANK0:
   120                           	callstack 0
   121                           
   122                           ;initializer for _int_threshold_high
   123   002B12  0B54               	dw	2900
   124   000000                     _T0CON0bits	set	4053
   125   000000                     _T0CON1bits	set	4054
   126   000000                     _TX4REG	set	3812
   127   000000                     _RC4STAbits	set	3815
   128   000000                     _SP4BRGH	set	3814
   129   000000                     _TRISBbits	set	3970
   130   000000                     _TRISCbits	set	3971
   131   000000                     _TRISEbits	set	3973
   132   000000                     _LATEbits	set	3965
   133   000000                     _LATFbits	set	3966
   134   000000                     _LATGbits	set	3967
   135   000000                     _TRISFbits	set	3974
   136   000000                     _TRISAbits	set	3969
   137   000000                     _TRISGbits	set	3975
   138   000000                     _TRISDbits	set	3972
   139   000000                     _SSP2CON2bits	set	3802
   140   000000                     _RX4PPS	set	3605
   141   000000                     _SSP2CLKPPS	set	3612
   142   000000                     _SSP2DATPPS	set	3613
   143   000000                     _ANSELDbits	set	3751
   144   000000                     _SSP2ADD	set	3798
   145   000000                     _SSP2CON1bits	set	3801
   146   000000                     _LATHbits	set	3968
   147   000000                     _RC4REG	set	3811
   148   000000                     _SP4BRGL	set	3813
   149   000000                     _TX4STAbits	set	3816
   150   000000                     _BAUD4CONbits	set	3817
   151   000000                     _LATAbits	set	3961
   152   000000                     _LATDbits	set	3964
   153   000000                     _SSP2CON2	set	3802
   154   000000                     _CCPR4H	set	3873
   155   000000                     _CCPR3H	set	3877
   156   000000                     _SSP2STAT	set	3800
   157   000000                     _SSP2BUF	set	3797
   158   000000                     _IPR0bits	set	3615
   159   000000                     _PIE0bits	set	3625
   160   000000                     _RC7PPS	set	3689
   161   000000                     _RD5PPS	set	3695
   162   000000                     _RE2PPS	set	3700
   163   000000                     _RD6PPS	set	3696
   164   000000                     _T2PR	set	4028
   165   000000                     _T2CONbits	set	4029
   166   000000                     _TRISHbits	set	3976
   167   000000                     _CCPR2H	set	4006
   168   000000                     _CCPR1H	set	4010
   169   000000                     _LATCbits	set	3963
   170   000000                     _RE4PPS	set	3702
   171   000000                     _RG6PPS	set	3720
   172   000000                     _ANSELBbits	set	3738
   173   000000                     _TMR0L	set	4051
   174   000000                     _TMR0H	set	4052
   175   000000                     _INTCONbits	set	4082
   176   000000                     _T2CLKCONbits	set	4031
   177   000000                     _T2HLTbits	set	4030
   178   000000                     _CCP1CONbits	set	4011
   179   000000                     _CCPTMRS0bits	set	4013
   180   000000                     _CCP2CONbits	set	4007
   181   000000                     _CCP3CONbits	set	3878
   182   000000                     _CCP4CONbits	set	3874
   183   000000                     _PIE4bits	set	3629
   184   000000                     _PIR0bits	set	3635
   185   000000                     _PIR4bits	set	3639
   186   000000                     _RC0PPS	set	3682
   187                           
   188                           ; #config settings
   189                           
   190                           	psect	cinit
   191   0027D2                     __pcinit:
   192                           	callstack 0
   193   0027D2                     start_initialization:
   194                           	callstack 0
   195   0027D2                     __initialization:
   196                           	callstack 0
   197                           
   198                           ; Initialize objects allocated to BANK0 (2 bytes)
   199                           ; load TBLPTR registers with __pidataBANK0
   200   0027D2  0E12               	movlw	low __pidataBANK0
   201   0027D4  6EF6               	movwf	tblptrl,c
   202   0027D6  0E2B               	movlw	high __pidataBANK0
   203   0027D8  6EF7               	movwf	tblptrh,c
   204   0027DA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   205   0027DC  6EF8               	movwf	tblptru,c
   206   0027DE  0009               	tblrd		*+	;fetch initializer
   207   0027E0  CFF5 F0D7          	movff	tablat,__pdataBANK0
   208   0027E4  0009               	tblrd		*+	;fetch initializer
   209   0027E6  CFF5 F0D8          	movff	tablat,__pdataBANK0+1
   210                           
   211                           ; Clear objects allocated to BANK1 (140 bytes)
   212   0027EA  EE01  F000         	lfsr	0,__pbssBANK1
   213   0027EE  0E8C               	movlw	140
   214   0027F0                     clear_0:
   215   0027F0  6AEE               	clrf	postinc0,c
   216   0027F2  06E8               	decf	wreg,f,c
   217   0027F4  E1FD               	bnz	clear_0
   218                           
   219                           ; Clear objects allocated to BANK0 (63 bytes)
   220   0027F6  EE00  F060         	lfsr	0,__pbssBANK0
   221   0027FA  0E3F               	movlw	63
   222   0027FC                     clear_1:
   223   0027FC  6AEE               	clrf	postinc0,c
   224   0027FE  06E8               	decf	wreg,f,c
   225   002800  E1FD               	bnz	clear_1
   226                           
   227                           ; Clear objects allocated to COMRAM (8 bytes)
   228   002802  EE00  F04F         	lfsr	0,__pbssCOMRAM
   229   002806  0E08               	movlw	8
   230   002808                     clear_2:
   231   002808  6AEE               	clrf	postinc0,c
   232   00280A  06E8               	decf	wreg,f,c
   233   00280C  E1FD               	bnz	clear_2
   234   00280E                     end_of_initialization:
   235                           	callstack 0
   236   00280E                     __end_of__initialization:
   237                           	callstack 0
   238   00280E  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   239   002810  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   240   002812  0100               	movlb	0
   241   002814  EF23  F007         	goto	_main	;jump to C main() function
   242                           
   243                           	psect	bssCOMRAM
   244   00004F                     __pbssCOMRAM:
   245                           	callstack 0
   246   00004F                     _int_threshold_low:
   247                           	callstack 0
   248   00004F                     	ds	2
   249   000051                     _TxBufReadCnt:
   250                           	callstack 0
   251   000051                     	ds	1
   252   000052                     _TxBufWriteCnt:
   253                           	callstack 0
   254   000052                     	ds	1
   255   000053                     _RxBufReadCnt:
   256                           	callstack 0
   257   000053                     	ds	1
   258   000054                     _RxBufWriteCnt:
   259                           	callstack 0
   260   000054                     	ds	1
   261   000055                     _color_flag:
   262                           	callstack 0
   263   000055                     	ds	1
   264   000056                     _moves_index:
   265                           	callstack 0
   266   000056                     	ds	1
   267                           
   268                           	psect	bssBANK0
   269   000060                     __pbssBANK0:
   270                           	callstack 0
   271   000060                     _EUSART4RXbuf:
   272                           	callstack 0
   273   000060                     	ds	20
   274   000074                     _lost_flag:
   275                           	callstack 0
   276   000074                     	ds	1
   277   000075                     _tmr_ovf:
   278                           	callstack 0
   279   000075                     	ds	1
   280   000076                     _anti_moves_array:
   281                           	callstack 0
   282   000076                     	ds	40
   283   00009E                     _time_index:
   284                           	callstack 0
   285   00009E                     	ds	1
   286                           
   287                           	psect	dataBANK0
   288   0000D7                     __pdataBANK0:
   289                           	callstack 0
   290   0000D7                     _int_threshold_high:
   291                           	callstack 0
   292   0000D7                     	ds	2
   293                           
   294                           	psect	bssBANK1
   295   000100                     __pbssBANK1:
   296                           	callstack 0
   297   000100                     _EUSART4TXbuf:
   298                           	callstack 0
   299   000100                     	ds	60
   300   00013C                     _time_array:
   301                           	callstack 0
   302   00013C                     	ds	80
   303                           
   304                           	psect	cstackBANK0
   305   00009F                     __pcstackBANK0:
   306                           	callstack 0
   307   00009F                     ??___fltol:
   308                           
   309                           ; 1 bytes @ 0x0
   310   00009F                     	ds	4
   311   0000A3                     detect_color@tempval:
   312                           	callstack 0
   313                           
   314                           ; 2 bytes @ 0x4
   315   0000A3                     	ds	2
   316   0000A5                     detect_color@lost_timer:
   317                           	callstack 0
   318                           
   319                           ; 2 bytes @ 0x6
   320   0000A5                     	ds	2
   321   0000A7                     ??_detect_color:
   322                           
   323                           ; 1 bytes @ 0x8
   324   0000A7                     	ds	12
   325   0000B3                     detect_color@color:
   326                           	callstack 0
   327                           
   328                           ; 1 bytes @ 0x14
   329   0000B3                     	ds	1
   330   0000B4                     detect_color@dist_R:
   331                           	callstack 0
   332                           
   333                           ; 1 bytes @ 0x15
   334   0000B4                     	ds	1
   335   0000B5                     detect_color@dist_G:
   336                           	callstack 0
   337                           
   338                           ; 1 bytes @ 0x16
   339   0000B5                     	ds	1
   340   0000B6                     detect_color@dist_B:
   341                           	callstack 0
   342                           
   343                           ; 1 bytes @ 0x17
   344   0000B6                     	ds	1
   345   0000B7                     ??_main:
   346                           
   347                           ; 1 bytes @ 0x18
   348   0000B7                     	ds	2
   349   0000B9                     main@lost_timer:
   350                           	callstack 0
   351                           
   352                           ; 1 bytes @ 0x1A
   353   0000B9                     	ds	1
   354   0000BA                     main@b:
   355                           	callstack 0
   356                           
   357                           ; 2 bytes @ 0x1B
   358   0000BA                     	ds	2
   359   0000BC                     main@color_detected:
   360                           	callstack 0
   361                           
   362                           ; 1 bytes @ 0x1D
   363   0000BC                     	ds	1
   364   0000BD                     main@initial_color:
   365                           	callstack 0
   366                           
   367                           ; 8 bytes @ 0x1E
   368   0000BD                     	ds	8
   369   0000C5                     main@motorL:
   370                           	callstack 0
   371                           
   372                           ; 9 bytes @ 0x26
   373   0000C5                     	ds	9
   374   0000CE                     main@motorR:
   375                           	callstack 0
   376                           
   377                           ; 9 bytes @ 0x2F
   378   0000CE                     	ds	9
   379                           
   380                           	psect	cstackCOMRAM
   381   000001                     __pcstackCOMRAM:
   382                           	callstack 0
   383   000001                     ??i2_I2C_2_Master_Idle:
   384   000001                     
   385                           ; 1 bytes @ 0x0
   386   000001                     	ds	1
   387   000002                     i2I2C_2_Master_Write@data_byte:
   388                           	callstack 0
   389                           
   390                           ; 1 bytes @ 0x1
   391   000002                     	ds	1
   392   000003                     i2color_writetoaddr@value:
   393                           	callstack 0
   394                           
   395                           ; 1 bytes @ 0x2
   396   000003                     	ds	1
   397   000004                     i2color_writetoaddr@address:
   398                           	callstack 0
   399                           
   400                           ; 1 bytes @ 0x3
   401   000004                     	ds	1
   402   000005                     ??i2_init_colorclick_interrupts:
   403                           
   404                           ; 1 bytes @ 0x4
   405   000005                     	ds	1
   406   000006                     ??_LowISR:
   407   000006                     
   408                           ; 1 bytes @ 0x5
   409   000006                     	ds	3
   410   000009                     ??_I2C_2_Master_Idle:
   411   000009                     ?_Return_Time:
   412                           	callstack 0
   413   000009                     ?___wmul:
   414                           	callstack 0
   415   000009                     ?___xxtofl:
   416                           	callstack 0
   417   000009                     initDCmotorsPWM@PWMperiod:
   418                           	callstack 0
   419   000009                     AppendMoves@moves_index:
   420                           	callstack 0
   421   000009                     AppendTime@temp:
   422                           	callstack 0
   423   000009                     Return_Anti_Moves@moves_index:
   424                           	callstack 0
   425   000009                     Return_Time@time_index:
   426                           	callstack 0
   427   000009                     ___wmul@multiplier:
   428                           	callstack 0
   429   000009                     ___xxtofl@val:
   430                           	callstack 0
   431                           
   432                           ; 4 bytes @ 0x8
   433   000009                     	ds	1
   434   00000A                     ??_I2C_2_Master_Read:
   435   00000A                     I2C_2_Master_Write@data_byte:
   436                           	callstack 0
   437                           
   438                           ; 1 bytes @ 0x9
   439   00000A                     	ds	1
   440   00000B                     color_writetoaddr@value:
   441                           	callstack 0
   442   00000B                     I2C_2_Master_Read@ack:
   443                           	callstack 0
   444   00000B                     AppendMoves@anti_moves_array:
   445                           	callstack 0
   446   00000B                     AppendTime@time_index:
   447                           	callstack 0
   448   00000B                     Return_Anti_Moves@anti_moves_array:
   449                           	callstack 0
   450   00000B                     Return_Time@time_array:
   451                           	callstack 0
   452   00000B                     ___wmul@multiplicand:
   453                           	callstack 0
   454                           
   455                           ; 2 bytes @ 0xA
   456   00000B                     	ds	1
   457   00000C                     color_writetoaddr@address:
   458                           	callstack 0
   459   00000C                     I2C_2_Master_Read@tmp:
   460                           	callstack 0
   461                           
   462                           ; 1 bytes @ 0xB
   463   00000C                     	ds	1
   464   00000D                     ??_Return_Time:
   465   00000D                     ??_Return_Anti_Moves:
   466   00000D                     ??_AppendMoves:
   467   00000D                     ??_color_click_init:
   468   00000D                     ??_init_colorclick_interrupts:
   469   00000D                     ??___xxtofl:
   470   00000D                     ?_color_read_Red:
   471                           	callstack 0
   472   00000D                     ?_color_read_Green:
   473                           	callstack 0
   474   00000D                     ?_color_read_Blue:
   475                           	callstack 0
   476   00000D                     ?_color_read_Clear:
   477                           	callstack 0
   478   00000D                     AppendTime@time_array:
   479                           	callstack 0
   480   00000D                     ___wmul@product:
   481                           	callstack 0
   482                           
   483                           ; 2 bytes @ 0xC
   484   00000D                     	ds	1
   485   00000E                     AppendMoves@temp:
   486                           	callstack 0
   487   00000E                     Return_Anti_Moves@temp:
   488                           	callstack 0
   489                           
   490                           ; 1 bytes @ 0xD
   491   00000E                     	ds	1
   492   00000F                     ??_AppendTime:
   493   00000F                     ??_color_read_Red:
   494   00000F                     ??_color_read_Green:
   495   00000F                     ??_color_read_Blue:
   496   00000F                     ??_color_read_Clear:
   497   00000F                     ?___lwdiv:
   498                           	callstack 0
   499   00000F                     ___lwdiv@dividend:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0xE
   503   00000F                     	ds	1
   504   000010                     Return_Time@temp:
   505                           	callstack 0
   506                           
   507                           ; 2 bytes @ 0xF
   508   000010                     	ds	1
   509   000011                     ___xxtofl@sign:
   510                           	callstack 0
   511   000011                     ___lwdiv@divisor:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0x10
   515   000011                     	ds	1
   516   000012                     ___xxtofl@exp:
   517                           	callstack 0
   518   000012                     color_read_Red@tmp:
   519                           	callstack 0
   520   000012                     color_read_Green@tmp:
   521                           	callstack 0
   522   000012                     color_read_Blue@tmp:
   523                           	callstack 0
   524   000012                     color_read_Clear@tmp:
   525                           	callstack 0
   526                           
   527                           ; 2 bytes @ 0x11
   528   000012                     	ds	1
   529   000013                     ___lwdiv@quotient:
   530                           	callstack 0
   531   000013                     ___xxtofl@arg:
   532                           	callstack 0
   533                           
   534                           ; 4 bytes @ 0x12
   535   000013                     	ds	1
   536   000014                     Update_RGBC@tempval:
   537                           	callstack 0
   538                           
   539                           ; 2 bytes @ 0x13
   540   000014                     	ds	1
   541   000015                     ___lwdiv@counter:
   542                           	callstack 0
   543                           
   544                           ; 1 bytes @ 0x14
   545   000015                     	ds	1
   546   000016                     setMotorPWM@m:
   547                           	callstack 0
   548                           
   549                           ; 2 bytes @ 0x15
   550   000016                     	ds	1
   551   000017                     ?___fldiv:
   552                           	callstack 0
   553   000017                     ___fldiv@b:
   554                           	callstack 0
   555                           
   556                           ; 4 bytes @ 0x16
   557   000017                     	ds	1
   558   000018                     ??_setMotorPWM:
   559                           
   560                           ; 1 bytes @ 0x17
   561   000018                     	ds	2
   562   00001A                     setMotorPWM@posDuty:
   563                           	callstack 0
   564                           
   565                           ; 1 bytes @ 0x19
   566   00001A                     	ds	1
   567   00001B                     setMotorPWM@negDuty:
   568                           	callstack 0
   569   00001B                     ___fldiv@a:
   570                           	callstack 0
   571                           
   572                           ; 4 bytes @ 0x1A
   573   00001B                     	ds	1
   574   00001C                     stop@mL:
   575                           	callstack 0
   576   00001C                     turnLeft@mL:
   577                           	callstack 0
   578   00001C                     turnRight@mL:
   579                           	callstack 0
   580   00001C                     fullSpeedAhead@mL:
   581                           	callstack 0
   582   00001C                     fullSpeedBackwards@mL:
   583                           	callstack 0
   584                           
   585                           ; 2 bytes @ 0x1B
   586   00001C                     	ds	2
   587   00001E                     stop@mR:
   588                           	callstack 0
   589   00001E                     turnLeft@mR:
   590                           	callstack 0
   591   00001E                     turnRight@mR:
   592                           	callstack 0
   593   00001E                     fullSpeedAhead@mR:
   594                           	callstack 0
   595   00001E                     fullSpeedBackwards@mR:
   596                           	callstack 0
   597                           
   598                           ; 2 bytes @ 0x1D
   599   00001E                     	ds	1
   600   00001F                     ??___fldiv:
   601                           
   602                           ; 1 bytes @ 0x1E
   603   00001F                     	ds	1
   604   000020                     ??_stop:
   605   000020                     ??_turnLeft:
   606   000020                     ??_turnRight:
   607   000020                     ??_fullSpeedAhead:
   608   000020                     ??_fullSpeedBackwards:
   609                           
   610                           ; 1 bytes @ 0x1F
   611   000020                     	ds	2
   612   000022                     turnLeft90@mL:
   613                           	callstack 0
   614   000022                     turnRight90@mL:
   615                           	callstack 0
   616                           
   617                           ; 2 bytes @ 0x21
   618   000022                     	ds	1
   619   000023                     ___fldiv@rem:
   620                           	callstack 0
   621                           
   622                           ; 4 bytes @ 0x22
   623   000023                     	ds	1
   624   000024                     turnLeft90@mR:
   625                           	callstack 0
   626   000024                     turnRight90@mR:
   627                           	callstack 0
   628                           
   629                           ; 2 bytes @ 0x23
   630   000024                     	ds	2
   631   000026                     turnLeft90@a:
   632                           	callstack 0
   633   000026                     turnRight90@a:
   634                           	callstack 0
   635                           
   636                           ; 1 bytes @ 0x25
   637   000026                     	ds	1
   638   000027                     ___fldiv@sign:
   639                           	callstack 0
   640   000027                     turnRight135@mL:
   641                           	callstack 0
   642   000027                     turnLeft135@mL:
   643                           	callstack 0
   644   000027                     RedInstructions@mL:
   645                           	callstack 0
   646   000027                     GreenInstructions@mL:
   647                           	callstack 0
   648   000027                     BlueInstructions@mL:
   649                           	callstack 0
   650   000027                     YellowInstructions@mL:
   651                           	callstack 0
   652   000027                     PinkInstructions@mL:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0x26
   656   000027                     	ds	1
   657   000028                     ___fldiv@new_exp:
   658                           	callstack 0
   659                           
   660                           ; 2 bytes @ 0x27
   661   000028                     	ds	1
   662   000029                     turnRight135@mR:
   663                           	callstack 0
   664   000029                     turnLeft135@mR:
   665                           	callstack 0
   666   000029                     RedInstructions@mR:
   667                           	callstack 0
   668   000029                     GreenInstructions@mR:
   669                           	callstack 0
   670   000029                     BlueInstructions@mR:
   671                           	callstack 0
   672   000029                     YellowInstructions@mR:
   673                           	callstack 0
   674   000029                     PinkInstructions@mR:
   675                           	callstack 0
   676                           
   677                           ; 2 bytes @ 0x28
   678   000029                     	ds	1
   679   00002A                     ___fldiv@grs:
   680                           	callstack 0
   681                           
   682                           ; 4 bytes @ 0x29
   683   00002A                     	ds	1
   684   00002B                     ??_RedInstructions:
   685   00002B                     ??_GreenInstructions:
   686   00002B                     ??_BlueInstructions:
   687   00002B                     ??_YellowInstructions:
   688   00002B                     ??_PinkInstructions:
   689   00002B                     turnRight135@a:
   690                           	callstack 0
   691   00002B                     turnLeft135@a:
   692                           	callstack 0
   693                           
   694                           ; 1 bytes @ 0x2A
   695   00002B                     	ds	1
   696   00002C                     OrangeInstructions@mL:
   697                           	callstack 0
   698   00002C                     LightBlueInstructions@mL:
   699                           	callstack 0
   700                           
   701                           ; 2 bytes @ 0x2B
   702   00002C                     	ds	1
   703   00002D                     RedInstructions@a:
   704                           	callstack 0
   705   00002D                     GreenInstructions@a:
   706                           	callstack 0
   707   00002D                     BlueInstructions@a:
   708                           	callstack 0
   709   00002D                     YellowInstructions@a:
   710                           	callstack 0
   711   00002D                     PinkInstructions@a:
   712                           	callstack 0
   713                           
   714                           ; 1 bytes @ 0x2C
   715   00002D                     	ds	1
   716   00002E                     ___fldiv@bexp:
   717                           	callstack 0
   718   00002E                     OrangeInstructions@mR:
   719                           	callstack 0
   720   00002E                     LightBlueInstructions@mR:
   721                           	callstack 0
   722   00002E                     AntiYellow@mL:
   723                           	callstack 0
   724   00002E                     AntiPink@mL:
   725                           	callstack 0
   726                           
   727                           ; 2 bytes @ 0x2D
   728   00002E                     	ds	1
   729   00002F                     ___fldiv@aexp:
   730                           	callstack 0
   731                           
   732                           ; 1 bytes @ 0x2E
   733   00002F                     	ds	1
   734   000030                     ??_OrangeInstructions:
   735   000030                     ??_LightBlueInstructions:
   736   000030                     ?___flmul:
   737                           	callstack 0
   738   000030                     AntiYellow@mR:
   739                           	callstack 0
   740   000030                     AntiPink@mR:
   741                           	callstack 0
   742   000030                     ___flmul@b:
   743                           	callstack 0
   744                           
   745                           ; 4 bytes @ 0x2F
   746   000030                     	ds	2
   747   000032                     ??_AntiYellow:
   748   000032                     ??_AntiPink:
   749   000032                     OrangeInstructions@a:
   750                           	callstack 0
   751   000032                     LightBlueInstructions@a:
   752                           	callstack 0
   753                           
   754                           ; 1 bytes @ 0x31
   755   000032                     	ds	2
   756   000034                     AntiYellow@a:
   757                           	callstack 0
   758   000034                     AntiPink@a:
   759                           	callstack 0
   760   000034                     ___flmul@a:
   761                           	callstack 0
   762                           
   763                           ; 4 bytes @ 0x33
   764   000034                     	ds	1
   765   000035                     MoveBuggy@color_detected:
   766                           	callstack 0
   767                           
   768                           ; 2 bytes @ 0x34
   769   000035                     	ds	2
   770   000037                     MoveBuggy@mL:
   771                           	callstack 0
   772                           
   773                           ; 2 bytes @ 0x36
   774   000037                     	ds	1
   775   000038                     ??___flmul:
   776                           
   777                           ; 1 bytes @ 0x37
   778   000038                     	ds	1
   779   000039                     MoveBuggy@mR:
   780                           	callstack 0
   781                           
   782                           ; 2 bytes @ 0x38
   783   000039                     	ds	2
   784   00003B                     WhiteInstructions@mL:
   785                           	callstack 0
   786                           
   787                           ; 2 bytes @ 0x3A
   788   00003B                     	ds	1
   789   00003C                     ___flmul@sign:
   790                           	callstack 0
   791                           
   792                           ; 1 bytes @ 0x3B
   793   00003C                     	ds	1
   794   00003D                     WhiteInstructions@mR:
   795                           	callstack 0
   796   00003D                     ___flmul@grs:
   797                           	callstack 0
   798                           
   799                           ; 4 bytes @ 0x3C
   800   00003D                     	ds	2
   801   00003F                     ??_WhiteInstructions:
   802                           
   803                           ; 1 bytes @ 0x3E
   804   00003F                     	ds	2
   805   000041                     ___flmul@aexp:
   806                           	callstack 0
   807   000041                     WhiteInstructions@c:
   808                           	callstack 0
   809                           
   810                           ; 2 bytes @ 0x40
   811   000041                     	ds	1
   812   000042                     ___flmul@bexp:
   813                           	callstack 0
   814                           
   815                           ; 1 bytes @ 0x41
   816   000042                     	ds	1
   817   000043                     WhiteInstructions@anticolor:
   818                           	callstack 0
   819   000043                     ___flmul@prod:
   820                           	callstack 0
   821                           
   822                           ; 4 bytes @ 0x42
   823   000043                     	ds	1
   824   000044                     WhiteInstructions@a:
   825                           	callstack 0
   826                           
   827                           ; 2 bytes @ 0x43
   828   000044                     	ds	3
   829   000047                     ___flmul@temp:
   830                           	callstack 0
   831                           
   832                           ; 2 bytes @ 0x46
   833   000047                     	ds	2
   834   000049                     ?___fltol:
   835                           	callstack 0
   836   000049                     ___fltol@f1:
   837                           	callstack 0
   838                           
   839                           ; 4 bytes @ 0x48
   840   000049                     	ds	4
   841   00004D                     ___fltol@sign1:
   842                           	callstack 0
   843                           
   844                           ; 1 bytes @ 0x4C
   845   00004D                     	ds	1
   846   00004E                     ___fltol@exp1:
   847                           	callstack 0
   848                           
   849                           ; 1 bytes @ 0x4D
   850   00004E                     	ds	1
   851                           
   852 ;;
   853 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   854 ;;
   855 ;; *************** function _main *****************
   856 ;; Defined at:
   857 ;;		line 22 in file "main_motor.c"
   858 ;; Parameters:    Size  Location     Type
   859 ;;		None
   860 ;; Auto vars:     Size  Location     Type
   861 ;;  b               2   27[BANK0 ] unsigned int 
   862 ;;  motorR          9   47[BANK0 ] struct DC_motor
   863 ;;  motorL          9   38[BANK0 ] struct DC_motor
   864 ;;  initial_colo    8   30[BANK0 ] struct RGB_val
   865 ;;  color_detect    1   29[BANK0 ] unsigned char 
   866 ;;  lost_timer      1   26[BANK0 ] unsigned char 
   867 ;; Return value:  Size  Location     Type
   868 ;;                  1    wreg      void 
   869 ;; Registers used:
   870 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   871 ;; Tracked objects:
   872 ;;		On entry : 0/0
   873 ;;		On exit  : 0/0
   874 ;;		Unchanged: 0/0
   875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   877 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   878 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   879 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   880 ;;Total ram usage:       32 bytes
   881 ;; Hardware stack levels required when called: 15
   882 ;; This function calls:
   883 ;;		_AppendTime
   884 ;;		_Interrupts_init
   885 ;;		_LED_init
   886 ;;		_MoveBuggy
   887 ;;		_Timer0_init
   888 ;;		_Update_RGBC
   889 ;;		_WhiteInstructions
   890 ;;		_WhiteLight
   891 ;;		_color_click_init
   892 ;;		_detect_color
   893 ;;		_fullSpeedAhead
   894 ;;		_initDCmotorsPWM
   895 ;;		_stop
   896 ;; This function is called by:
   897 ;;		Startup code after reset
   898 ;; This function uses a non-reentrant model
   899 ;;
   900                           
   901                           	psect	text0
   902   000E46                     __ptext0:
   903                           	callstack 0
   904   000E46                     _main:
   905                           	callstack 16
   906   000E46                     
   907                           ;main_motor.c: 25:     RGB_val initial_color;;main_motor.c: 26:     initial_color.R = 0;
   908   000E46  0E00               	movlw	0
   909   000E48  0100               	movlb	0	; () banked
   910   000E4A  6FBE               	movwf	(main@initial_color+1)& (0+255),b
   911   000E4C  0E00               	movlw	0
   912   000E4E  6FBD               	movwf	main@initial_color& (0+255),b
   913                           
   914                           ;main_motor.c: 27:     initial_color.G = 0;
   915   000E50  0E00               	movlw	0
   916   000E52  6FC0               	movwf	(main@initial_color+3)& (0+255),b
   917   000E54  0E00               	movlw	0
   918   000E56  6FBF               	movwf	(main@initial_color+2)& (0+255),b
   919                           
   920                           ;main_motor.c: 28:     initial_color.B = 0;
   921   000E58  0E00               	movlw	0
   922   000E5A  6FC2               	movwf	(main@initial_color+5)& (0+255),b
   923   000E5C  0E00               	movlw	0
   924   000E5E  6FC1               	movwf	(main@initial_color+4)& (0+255),b
   925                           
   926                           ;main_motor.c: 29:     initial_color.C = 0;
   927   000E60  0E00               	movlw	0
   928   000E62  6FC4               	movwf	(main@initial_color+7)& (0+255),b
   929   000E64  0E00               	movlw	0
   930   000E66  6FC3               	movwf	(main@initial_color+6)& (0+255),b
   931   000E68                     
   932                           ; BSR set to: 0
   933                           ;main_motor.c: 31:     LED_init();
   934   000E68  EC58  F015         	call	_LED_init	;wreg free
   935   000E6C                     
   936                           ;main_motor.c: 32:     color_click_init();
   937   000E6C  EC49  F014         	call	_color_click_init	;wreg free
   938   000E70                     
   939                           ;main_motor.c: 33:     Interrupts_init();
   940   000E70  EC2F  F015         	call	_Interrupts_init	;wreg free
   941                           
   942                           ;main_motor.c: 35:     Timer0_init();
   943   000E74  ECEF  F014         	call	_Timer0_init	;wreg free
   944                           
   945                           ;main_motor.c: 38:     initDCmotorsPWM(99);
   946   000E78  0E00               	movlw	0
   947   000E7A  6E0A               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   948   000E7C  0E63               	movlw	99
   949   000E7E  6E09               	movwf	initDCmotorsPWM@PWMperiod^0,c
   950   000E80  EC48  F010         	call	_initDCmotorsPWM	;wreg free
   951   000E84                     
   952                           ;main_motor.c: 40:     struct DC_motor motorL, motorR;;main_motor.c: 42:     motorL.powe
      +                          r=0;
   953   000E84  0E00               	movlw	0
   954   000E86  0100               	movlb	0	; () banked
   955   000E88  6FC5               	movwf	main@motorL& (0+255),b
   956   000E8A                     
   957                           ; BSR set to: 0
   958                           ;main_motor.c: 43:     motorL.direction=1;
   959   000E8A  0E01               	movlw	1
   960   000E8C  6FC6               	movwf	(main@motorL+1)& (0+255),b
   961   000E8E                     
   962                           ; BSR set to: 0
   963                           ;main_motor.c: 44:     motorL.brakemode=1;
   964   000E8E  0E01               	movlw	1
   965   000E90  6FC7               	movwf	(main@motorL+2)& (0+255),b
   966   000E92                     
   967                           ; BSR set to: 0
   968                           ;main_motor.c: 45:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
   969   000E92  0EAA               	movlw	170
   970   000E94  6FCA               	movwf	(main@motorL+5)& (0+255),b
   971   000E96  0E0F               	movlw	15
   972   000E98  6FCB               	movwf	(main@motorL+6)& (0+255),b
   973   000E9A                     
   974                           ; BSR set to: 0
   975                           ;main_motor.c: 46:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
   976   000E9A  0EA6               	movlw	166
   977   000E9C  6FCC               	movwf	(main@motorL+7)& (0+255),b
   978   000E9E  0E0F               	movlw	15
   979   000EA0  6FCD               	movwf	(main@motorL+8)& (0+255),b
   980   000EA2                     
   981                           ; BSR set to: 0
   982                           ;main_motor.c: 47:     motorL.PWMperiod= T2PR;
   983   000EA2  CFBC F0C8          	movff	4028,main@motorL+3	;volatile
   984   000EA6  6BC9               	clrf	(main@motorL+4)& (0+255),b
   985   000EA8                     
   986                           ; BSR set to: 0
   987                           ;main_motor.c: 49:     motorR.power=0;
   988   000EA8  0E00               	movlw	0
   989   000EAA  6FCE               	movwf	main@motorR& (0+255),b
   990   000EAC                     
   991                           ; BSR set to: 0
   992                           ;main_motor.c: 50:     motorR.direction=1;
   993   000EAC  0E01               	movlw	1
   994   000EAE  6FCF               	movwf	(main@motorR+1)& (0+255),b
   995   000EB0                     
   996                           ; BSR set to: 0
   997                           ;main_motor.c: 51:     motorR.brakemode=1;
   998   000EB0  0E01               	movlw	1
   999   000EB2  6FD0               	movwf	(main@motorR+2)& (0+255),b
  1000   000EB4                     
  1001                           ; BSR set to: 0
  1002                           ;main_motor.c: 52:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1003   000EB4  0E25               	movlw	37
  1004   000EB6  6FD3               	movwf	(main@motorR+5)& (0+255),b
  1005   000EB8  0E0F               	movlw	15
  1006   000EBA  6FD4               	movwf	(main@motorR+6)& (0+255),b
  1007   000EBC                     
  1008                           ; BSR set to: 0
  1009                           ;main_motor.c: 53:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1010   000EBC  0E21               	movlw	33
  1011   000EBE  6FD5               	movwf	(main@motorR+7)& (0+255),b
  1012   000EC0  0E0F               	movlw	15
  1013   000EC2  6FD6               	movwf	(main@motorR+8)& (0+255),b
  1014   000EC4                     
  1015                           ; BSR set to: 0
  1016                           ;main_motor.c: 54:     motorR.PWMperiod= T2PR;
  1017   000EC4  CFBC F0D1          	movff	4028,main@motorR+3	;volatile
  1018   000EC8  6BD2               	clrf	(main@motorR+4)& (0+255),b
  1019   000ECA                     
  1020                           ; BSR set to: 0
  1021                           ;main_motor.c: 57:     unsigned char color_detected = 0;
  1022   000ECA  0E00               	movlw	0
  1023   000ECC  6FBC               	movwf	main@color_detected& (0+255),b
  1024   000ECE                     
  1025                           ; BSR set to: 0
  1026                           ;main_motor.c: 58:     unsigned char lost_timer = 0;
  1027   000ECE  0E00               	movlw	0
  1028   000ED0  6FB9               	movwf	main@lost_timer& (0+255),b
  1029   000ED2                     
  1030                           ; BSR set to: 0
  1031                           ;main_motor.c: 59:     WhiteLight();
  1032   000ED2  EC85  F015         	call	_WhiteLight	;wreg free
  1033   000ED6                     l510:
  1034                           
  1035                           ;main_motor.c: 64:         unsigned int b = 0;
  1036   000ED6  0E00               	movlw	0
  1037   000ED8  0100               	movlb	0	; () banked
  1038   000EDA  6FBB               	movwf	(main@b+1)& (0+255),b
  1039   000EDC  0E00               	movlw	0
  1040   000EDE  6FBA               	movwf	main@b& (0+255),b
  1041                           
  1042                           ;main_motor.c: 65:         while(color_detected == 0){
  1043   000EE0  EFA0  F007         	goto	l511
  1044   000EE4                     l4288:
  1045                           
  1046                           ; BSR set to: 0
  1047                           ;main_motor.c: 66:             fullSpeedAhead(&motorL,&motorR);
  1048   000EE4  0EC5               	movlw	low main@motorL
  1049   000EE6  6E1C               	movwf	fullSpeedAhead@mL^0,c
  1050   000EE8  0E00               	movlw	high main@motorL
  1051   000EEA  6E1D               	movwf	(fullSpeedAhead@mL+1)^0,c
  1052   000EEC  0ECE               	movlw	low main@motorR
  1053   000EEE  6E1E               	movwf	fullSpeedAhead@mR^0,c
  1054   000EF0  0E00               	movlw	high main@motorR
  1055   000EF2  6E1F               	movwf	(fullSpeedAhead@mR+1)^0,c
  1056   000EF4  EC4B  F00C         	call	_fullSpeedAhead	;wreg free
  1057   000EF8                     
  1058                           ;main_motor.c: 67:             Update_RGBC(&initial_color);
  1059   000EF8  0EBD               	movlw	low main@initial_color
  1060   000EFA  6E14               	movwf	Update_RGBC@tempval^0,c
  1061   000EFC  0E00               	movlw	high main@initial_color
  1062   000EFE  6E15               	movwf	(Update_RGBC@tempval+1)^0,c
  1063   000F00  ECCA  F012         	call	_Update_RGBC	;wreg free
  1064   000F04                     
  1065                           ;main_motor.c: 68:             color_detected = detect_color(&initial_color, lost_timer)
      +                          ;
  1066   000F04  0EBD               	movlw	low main@initial_color
  1067   000F06  0100               	movlb	0	; () banked
  1068   000F08  6FA3               	movwf	detect_color@tempval& (0+255),b
  1069   000F0A  0E00               	movlw	high main@initial_color
  1070   000F0C  6FA4               	movwf	(detect_color@tempval+1)& (0+255),b
  1071   000F0E  51B9               	movf	main@lost_timer& (0+255),w,b
  1072   000F10  6FB7               	movwf	??_main& (0+255),b
  1073   000F12  6BB8               	clrf	(??_main+1)& (0+255),b
  1074   000F14  C0B7  F0A5         	movff	??_main,detect_color@lost_timer
  1075   000F18  C0B8  F0A6         	movff	??_main+1,detect_color@lost_timer+1
  1076   000F1C  EC2E  F000         	call	_detect_color	;wreg free
  1077   000F20  0100               	movlb	0	; () banked
  1078   000F22  6FBC               	movwf	main@color_detected& (0+255),b
  1079   000F24                     
  1080                           ; BSR set to: 0
  1081                           ;main_motor.c: 69:             b++;
  1082   000F24  4BBA               	infsnz	main@b& (0+255),f,b
  1083   000F26  2BBB               	incf	(main@b+1)& (0+255),f,b
  1084   000F28                     
  1085                           ; BSR set to: 0
  1086                           ;main_motor.c: 71:             if(lost_timer>=10){
  1087   000F28  0E09               	movlw	9
  1088   000F2A  65B9               	cpfsgt	main@lost_timer& (0+255),b
  1089   000F2C  EF9A  F007         	goto	u4491
  1090   000F30  EF9C  F007         	goto	u4490
  1091   000F34                     u4491:
  1092   000F34  EFA0  F007         	goto	l511
  1093   000F38                     u4490:
  1094   000F38                     
  1095                           ; BSR set to: 0
  1096                           ;main_motor.c: 72:                 color_detected = 8;
  1097   000F38  0E08               	movlw	8
  1098   000F3A  6FBC               	movwf	main@color_detected& (0+255),b
  1099                           
  1100                           ;main_motor.c: 73:                 lost_flag = 1;
  1101   000F3C  0E01               	movlw	1
  1102   000F3E  6F74               	movwf	_lost_flag& (0+255),b
  1103   000F40                     l511:
  1104                           
  1105                           ; BSR set to: 0
  1106                           ;main_motor.c: 65:         while(color_detected == 0){
  1107   000F40  51BC               	movf	main@color_detected& (0+255),w,b
  1108   000F42  B4D8               	btfsc	status,2,c
  1109   000F44  EFA6  F007         	goto	u4501
  1110   000F48  EFA8  F007         	goto	u4500
  1111   000F4C                     u4501:
  1112   000F4C  EF72  F007         	goto	l4288
  1113   000F50                     u4500:
  1114   000F50                     
  1115                           ; BSR set to: 0
  1116                           ;main_motor.c: 77:         if(color_detected != 0 && color_detected != 8){
  1117   000F50  51BC               	movf	main@color_detected& (0+255),w,b
  1118   000F52  B4D8               	btfsc	status,2,c
  1119   000F54  EFAE  F007         	goto	u4511
  1120   000F58  EFB0  F007         	goto	u4510
  1121   000F5C                     u4511:
  1122   000F5C  EF0D  F008         	goto	l4326
  1123   000F60                     u4510:
  1124   000F60                     
  1125                           ; BSR set to: 0
  1126   000F60  0E08               	movlw	8
  1127   000F62  19BC               	xorwf	main@color_detected& (0+255),w,b
  1128   000F64  B4D8               	btfsc	status,2,c
  1129   000F66  EFB7  F007         	goto	u4521
  1130   000F6A  EFB9  F007         	goto	u4520
  1131   000F6E                     u4521:
  1132   000F6E  EF0D  F008         	goto	l4326
  1133   000F72                     u4520:
  1134   000F72                     
  1135                           ; BSR set to: 0
  1136                           ;main_motor.c: 78:             AppendTime((b-6),&time_index,time_array);
  1137   000F72  0EFA               	movlw	250
  1138   000F74  25BA               	addwf	main@b& (0+255),w,b
  1139   000F76  6E09               	movwf	AppendTime@temp^0,c
  1140   000F78  0EFF               	movlw	255
  1141   000F7A  21BB               	addwfc	(main@b+1)& (0+255),w,b
  1142   000F7C  6E0A               	movwf	(AppendTime@temp+1)^0,c
  1143   000F7E  0E9E               	movlw	low _time_index
  1144   000F80  6E0B               	movwf	AppendTime@time_index^0,c
  1145   000F82  0E00               	movlw	high _time_index
  1146   000F84  6E0C               	movwf	(AppendTime@time_index+1)^0,c
  1147   000F86  0E3C               	movlw	low _time_array
  1148   000F88  6E0D               	movwf	AppendTime@time_array^0,c
  1149   000F8A  0E01               	movlw	high _time_array
  1150   000F8C  6E0E               	movwf	(AppendTime@time_array+1)^0,c
  1151   000F8E  EC63  F014         	call	_AppendTime	;wreg free
  1152   000F92                     
  1153                           ;main_motor.c: 79:             LATHbits.LATH3 = 1;
  1154   000F92  8680               	bsf	128,3,c	;volatile
  1155                           
  1156                           ;main_motor.c: 81:             while(b>0){
  1157   000F94  EFDA  F007         	goto	l4312
  1158   000F98                     l4308:
  1159                           
  1160                           ; BSR set to: 0
  1161                           ;main_motor.c: 82:                 stop(&motorL,&motorR);
  1162   000F98  0EC5               	movlw	low main@motorL
  1163   000F9A  6E1C               	movwf	stop@mL^0,c
  1164   000F9C  0E00               	movlw	high main@motorL
  1165   000F9E  6E1D               	movwf	(stop@mL+1)^0,c
  1166   000FA0  0ECE               	movlw	low main@motorR
  1167   000FA2  6E1E               	movwf	stop@mR^0,c
  1168   000FA4  0E00               	movlw	high main@motorR
  1169   000FA6  6E1F               	movwf	(stop@mR+1)^0,c
  1170   000FA8  EC25  F00E         	call	_stop	;wreg free
  1171   000FAC                     
  1172                           ;main_motor.c: 83:                 b--;
  1173   000FAC  0100               	movlb	0	; () banked
  1174   000FAE  07BA               	decf	main@b& (0+255),f,b
  1175   000FB0  A0D8               	btfss	status,0,c
  1176   000FB2  07BB               	decf	(main@b+1)& (0+255),f,b
  1177   000FB4                     l4312:
  1178                           
  1179                           ;main_motor.c: 81:             while(b>0){
  1180   000FB4  0100               	movlb	0	; () banked
  1181   000FB6  51BA               	movf	main@b& (0+255),w,b
  1182   000FB8  11BB               	iorwf	(main@b+1)& (0+255),w,b
  1183   000FBA  A4D8               	btfss	status,2,c
  1184   000FBC  EFE2  F007         	goto	u4531
  1185   000FC0  EFE4  F007         	goto	u4530
  1186   000FC4                     u4531:
  1187   000FC4  EFCC  F007         	goto	l4308
  1188   000FC8                     u4530:
  1189   000FC8                     
  1190                           ; BSR set to: 0
  1191                           ;main_motor.c: 85:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1192   000FC8  0E09               	movlw	9
  1193   000FCA  0100               	movlb	0	; () banked
  1194   000FCC  6FB8               	movwf	(??_main+1)& (0+255),b
  1195   000FCE  0E1E               	movlw	30
  1196   000FD0  6FB7               	movwf	??_main& (0+255),b
  1197   000FD2  0EE4               	movlw	228
  1198   000FD4                     u4577:
  1199   000FD4  2EE8               	decfsz	wreg,f,c
  1200   000FD6  D7FE               	bra	u4577
  1201   000FD8  2FB7               	decfsz	??_main& (0+255),f,b
  1202   000FDA  D7FC               	bra	u4577
  1203   000FDC  2FB8               	decfsz	(??_main+1)& (0+255),f,b
  1204   000FDE  D7FA               	bra	u4577
  1205   000FE0  F000               	nop	
  1206   000FE2                     
  1207                           ;main_motor.c: 86:             LATHbits.LATH3 = 0;
  1208   000FE2  9680               	bcf	128,3,c	;volatile
  1209   000FE4                     
  1210                           ;main_motor.c: 88:             MoveBuggy(color_detected,&motorL,&motorR);
  1211   000FE4  0100               	movlb	0	; () banked
  1212   000FE6  51BC               	movf	main@color_detected& (0+255),w,b
  1213   000FE8  6FB7               	movwf	??_main& (0+255),b
  1214   000FEA  6BB8               	clrf	(??_main+1)& (0+255),b
  1215   000FEC  C0B7  F035         	movff	??_main,MoveBuggy@color_detected
  1216   000FF0  C0B8  F036         	movff	??_main+1,MoveBuggy@color_detected+1
  1217   000FF4  0EC5               	movlw	low main@motorL
  1218   000FF6  6E37               	movwf	MoveBuggy@mL^0,c
  1219   000FF8  0E00               	movlw	high main@motorL
  1220   000FFA  6E38               	movwf	(MoveBuggy@mL+1)^0,c
  1221   000FFC  0ECE               	movlw	low main@motorR
  1222   000FFE  6E39               	movwf	MoveBuggy@mR^0,c
  1223   001000  0E00               	movlw	high main@motorR
  1224   001002  6E3A               	movwf	(MoveBuggy@mR+1)^0,c
  1225   001004  EC7E  F008         	call	_MoveBuggy	;wreg free
  1226   001008                     
  1227                           ;main_motor.c: 89:             color_detected = 0;
  1228   001008  0E00               	movlw	0
  1229   00100A  0100               	movlb	0	; () banked
  1230   00100C  6FBC               	movwf	main@color_detected& (0+255),b
  1231   00100E                     
  1232                           ; BSR set to: 0
  1233                           ;main_motor.c: 90:             color_flag = 0;
  1234   00100E  0E00               	movlw	0
  1235   001010  6E55               	movwf	_color_flag^0,c
  1236   001012                     
  1237                           ; BSR set to: 0
  1238                           ;main_motor.c: 91:             lost_timer = 0;
  1239   001012  0E00               	movlw	0
  1240   001014  6FB9               	movwf	main@lost_timer& (0+255),b
  1241                           
  1242                           ;main_motor.c: 92:         }
  1243   001016  EF6B  F007         	goto	l510
  1244   00101A                     l4326:
  1245                           
  1246                           ; BSR set to: 0
  1247   00101A  0E08               	movlw	8
  1248   00101C  19BC               	xorwf	main@color_detected& (0+255),w,b
  1249   00101E  A4D8               	btfss	status,2,c
  1250   001020  EF14  F008         	goto	u4541
  1251   001024  EF16  F008         	goto	u4540
  1252   001028                     u4541:
  1253   001028  EF6B  F007         	goto	l510
  1254   00102C                     u4540:
  1255   00102C                     
  1256                           ; BSR set to: 0
  1257                           ;main_motor.c: 96:             if(lost_flag){AppendTime((b-lost_timer),&time_index,time_
      +                          array);}
  1258   00102C  5174               	movf	_lost_flag& (0+255),w,b
  1259   00102E  B4D8               	btfsc	status,2,c
  1260   001030  EF1C  F008         	goto	u4551
  1261   001034  EF1E  F008         	goto	u4550
  1262   001038                     u4551:
  1263   001038  EF31  F008         	goto	l4332
  1264   00103C                     u4550:
  1265   00103C                     
  1266                           ; BSR set to: 0
  1267   00103C  51B9               	movf	main@lost_timer& (0+255),w,b
  1268   00103E  5DBA               	subwf	main@b& (0+255),w,b
  1269   001040  6E09               	movwf	AppendTime@temp^0,c
  1270   001042  51BB               	movf	(main@b+1)& (0+255),w,b
  1271   001044  A0D8               	btfss	status,0,c
  1272   001046  05BB               	decf	(main@b+1)& (0+255),w,b
  1273   001048  6E0A               	movwf	(AppendTime@temp+1)^0,c
  1274   00104A  0E9E               	movlw	low _time_index
  1275   00104C  6E0B               	movwf	AppendTime@time_index^0,c
  1276   00104E  0E00               	movlw	high _time_index
  1277   001050  6E0C               	movwf	(AppendTime@time_index+1)^0,c
  1278   001052  0E3C               	movlw	low _time_array
  1279   001054  6E0D               	movwf	AppendTime@time_array^0,c
  1280   001056  0E01               	movlw	high _time_array
  1281   001058  6E0E               	movwf	(AppendTime@time_array+1)^0,c
  1282   00105A  EC63  F014         	call	_AppendTime	;wreg free
  1283   00105E  EF41  F008         	goto	l4334
  1284   001062                     l4332:
  1285                           
  1286                           ; BSR set to: 0
  1287   001062  0EFA               	movlw	250
  1288   001064  25BA               	addwf	main@b& (0+255),w,b
  1289   001066  6E09               	movwf	AppendTime@temp^0,c
  1290   001068  0EFF               	movlw	255
  1291   00106A  21BB               	addwfc	(main@b+1)& (0+255),w,b
  1292   00106C  6E0A               	movwf	(AppendTime@temp+1)^0,c
  1293   00106E  0E9E               	movlw	low _time_index
  1294   001070  6E0B               	movwf	AppendTime@time_index^0,c
  1295   001072  0E00               	movlw	high _time_index
  1296   001074  6E0C               	movwf	(AppendTime@time_index+1)^0,c
  1297   001076  0E3C               	movlw	low _time_array
  1298   001078  6E0D               	movwf	AppendTime@time_array^0,c
  1299   00107A  0E01               	movlw	high _time_array
  1300   00107C  6E0E               	movwf	(AppendTime@time_array+1)^0,c
  1301   00107E  EC63  F014         	call	_AppendTime	;wreg free
  1302   001082                     l4334:
  1303                           
  1304                           ;main_motor.c: 98:             LATDbits.LATD7 = 1;
  1305   001082  8E7C               	bsf	124,7,c	;volatile
  1306                           
  1307                           ;main_motor.c: 100:             while(b>0){
  1308   001084  EF52  F008         	goto	l4340
  1309   001088                     l4336:
  1310                           
  1311                           ; BSR set to: 0
  1312                           ;main_motor.c: 101:                 stop(&motorL,&motorR);
  1313   001088  0EC5               	movlw	low main@motorL
  1314   00108A  6E1C               	movwf	stop@mL^0,c
  1315   00108C  0E00               	movlw	high main@motorL
  1316   00108E  6E1D               	movwf	(stop@mL+1)^0,c
  1317   001090  0ECE               	movlw	low main@motorR
  1318   001092  6E1E               	movwf	stop@mR^0,c
  1319   001094  0E00               	movlw	high main@motorR
  1320   001096  6E1F               	movwf	(stop@mR+1)^0,c
  1321   001098  EC25  F00E         	call	_stop	;wreg free
  1322   00109C                     
  1323                           ;main_motor.c: 102:                 b--;
  1324   00109C  0100               	movlb	0	; () banked
  1325   00109E  07BA               	decf	main@b& (0+255),f,b
  1326   0010A0  A0D8               	btfss	status,0,c
  1327   0010A2  07BB               	decf	(main@b+1)& (0+255),f,b
  1328   0010A4                     l4340:
  1329                           
  1330                           ;main_motor.c: 100:             while(b>0){
  1331   0010A4  0100               	movlb	0	; () banked
  1332   0010A6  51BA               	movf	main@b& (0+255),w,b
  1333   0010A8  11BB               	iorwf	(main@b+1)& (0+255),w,b
  1334   0010AA  A4D8               	btfss	status,2,c
  1335   0010AC  EF5A  F008         	goto	u4561
  1336   0010B0  EF5C  F008         	goto	u4560
  1337   0010B4                     u4561:
  1338   0010B4  EF44  F008         	goto	l4336
  1339   0010B8                     u4560:
  1340   0010B8                     
  1341                           ; BSR set to: 0
  1342                           ;main_motor.c: 104:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1343   0010B8  0E09               	movlw	9
  1344   0010BA  0100               	movlb	0	; () banked
  1345   0010BC  6FB8               	movwf	(??_main+1)& (0+255),b
  1346   0010BE  0E1E               	movlw	30
  1347   0010C0  6FB7               	movwf	??_main& (0+255),b
  1348   0010C2  0EE4               	movlw	228
  1349   0010C4                     u4587:
  1350   0010C4  2EE8               	decfsz	wreg,f,c
  1351   0010C6  D7FE               	bra	u4587
  1352   0010C8  2FB7               	decfsz	??_main& (0+255),f,b
  1353   0010CA  D7FC               	bra	u4587
  1354   0010CC  2FB8               	decfsz	(??_main+1)& (0+255),f,b
  1355   0010CE  D7FA               	bra	u4587
  1356   0010D0  F000               	nop	
  1357   0010D2                     
  1358                           ;main_motor.c: 105:             WhiteInstructions(&motorL,&motorR);
  1359   0010D2  0EC5               	movlw	low main@motorL
  1360   0010D4  6E3B               	movwf	WhiteInstructions@mL^0,c
  1361   0010D6  0E00               	movlw	high main@motorL
  1362   0010D8  6E3C               	movwf	(WhiteInstructions@mL+1)^0,c
  1363   0010DA  0ECE               	movlw	low main@motorR
  1364   0010DC  6E3D               	movwf	WhiteInstructions@mR^0,c
  1365   0010DE  0E00               	movlw	high main@motorR
  1366   0010E0  6E3E               	movwf	(WhiteInstructions@mR+1)^0,c
  1367   0010E2  ECB0  F00D         	call	_WhiteInstructions	;wreg free
  1368   0010E6                     
  1369                           ;main_motor.c: 106:             LATDbits.LATD7 = 0;
  1370   0010E6  9E7C               	bcf	124,7,c	;volatile
  1371   0010E8                     
  1372                           ;main_motor.c: 107:             color_detected = 0;
  1373   0010E8  0E00               	movlw	0
  1374   0010EA  0100               	movlb	0	; () banked
  1375   0010EC  6FBC               	movwf	main@color_detected& (0+255),b
  1376   0010EE                     
  1377                           ; BSR set to: 0
  1378                           ;main_motor.c: 108:             lost_timer = 0;
  1379   0010EE  0E00               	movlw	0
  1380   0010F0  6FB9               	movwf	main@lost_timer& (0+255),b
  1381   0010F2  0003               	sleep		;# 
  1382   0010F4  EF6B  F007         	goto	l510
  1383   0010F8  EF2C  F000         	goto	start
  1384   0010FC                     __end_of_main:
  1385                           	callstack 0
  1386                           
  1387 ;; *************** function _initDCmotorsPWM *****************
  1388 ;; Defined at:
  1389 ;;		line 5 in file "dc_motor.c"
  1390 ;; Parameters:    Size  Location     Type
  1391 ;;  PWMperiod       2    8[COMRAM] unsigned int 
  1392 ;; Auto vars:     Size  Location     Type
  1393 ;;		None
  1394 ;; Return value:  Size  Location     Type
  1395 ;;                  1    wreg      void 
  1396 ;; Registers used:
  1397 ;;		wreg, status,2
  1398 ;; Tracked objects:
  1399 ;;		On entry : 0/0
  1400 ;;		On exit  : 0/0
  1401 ;;		Unchanged: 0/0
  1402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1403 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1406 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1407 ;;Total ram usage:        2 bytes
  1408 ;; Hardware stack levels used: 1
  1409 ;; Hardware stack levels required when called: 7
  1410 ;; This function calls:
  1411 ;;		Nothing
  1412 ;; This function is called by:
  1413 ;;		_main
  1414 ;; This function uses a non-reentrant model
  1415 ;;
  1416                           
  1417                           	psect	text1
  1418   002090                     __ptext1:
  1419                           	callstack 0
  1420   002090                     _initDCmotorsPWM:
  1421                           	callstack 23
  1422   002090                     
  1423                           ;dc_motor.c: 7:     LATEbits.LATE2 = 0;
  1424   002090  947D               	bcf	125,2,c	;volatile
  1425                           
  1426                           ;dc_motor.c: 8:     TRISEbits.TRISE2 = 0;
  1427   002092  9485               	bcf	133,2,c	;volatile
  1428                           
  1429                           ;dc_motor.c: 9:     LATEbits.LATE4 = 0;
  1430   002094  987D               	bcf	125,4,c	;volatile
  1431                           
  1432                           ;dc_motor.c: 10:     TRISEbits.TRISE4 = 0;
  1433   002096  9885               	bcf	133,4,c	;volatile
  1434                           
  1435                           ;dc_motor.c: 11:     LATCbits.LATC7 = 0;
  1436   002098  9E7B               	bcf	123,7,c	;volatile
  1437                           
  1438                           ;dc_motor.c: 12:     TRISCbits.TRISC7 = 0;
  1439   00209A  9E83               	bcf	131,7,c	;volatile
  1440                           
  1441                           ;dc_motor.c: 13:     LATGbits.LATG6 = 0;
  1442   00209C  9C7F               	bcf	127,6,c	;volatile
  1443                           
  1444                           ;dc_motor.c: 14:     TRISGbits.TRISG6 = 0;
  1445   00209E  9C87               	bcf	135,6,c	;volatile
  1446   0020A0                     
  1447                           ;dc_motor.c: 17:     RE2PPS=0x05;
  1448   0020A0  0E05               	movlw	5
  1449   0020A2  010E               	movlb	14	; () banked
  1450   0020A4  6F74               	movwf	116,b	;volatile
  1451                           
  1452                           ;dc_motor.c: 18:     RE4PPS=0x06;
  1453   0020A6  0E06               	movlw	6
  1454   0020A8  6F76               	movwf	118,b	;volatile
  1455                           
  1456                           ;dc_motor.c: 19:     RC7PPS=0x07;
  1457   0020AA  0E07               	movlw	7
  1458   0020AC  6F69               	movwf	105,b	;volatile
  1459                           
  1460                           ;dc_motor.c: 20:     RG6PPS=0x08;
  1461   0020AE  0E08               	movlw	8
  1462   0020B0  6F88               	movwf	136,b	;volatile
  1463                           
  1464                           ;dc_motor.c: 23:     T2CONbits.CKPS=0b100;
  1465   0020B2  50BD               	movf	189,w,c	;volatile
  1466   0020B4  0B8F               	andlw	-113
  1467   0020B6  0940               	iorlw	64
  1468   0020B8  6EBD               	movwf	189,c	;volatile
  1469                           
  1470                           ;dc_motor.c: 24:     T2HLTbits.MODE=0b00000;
  1471   0020BA  0EE0               	movlw	-32
  1472   0020BC  16BE               	andwf	190,f,c	;volatile
  1473                           
  1474                           ;dc_motor.c: 25:     T2CLKCONbits.CS=0b0001;
  1475   0020BE  50BF               	movf	191,w,c	;volatile
  1476   0020C0  0BF0               	andlw	-16
  1477   0020C2  0901               	iorlw	1
  1478   0020C4  6EBF               	movwf	191,c	;volatile
  1479   0020C6                     
  1480                           ; BSR set to: 14
  1481                           ;dc_motor.c: 29:     T2PR=PWMperiod;
  1482   0020C6  C009  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  1483   0020CA                     
  1484                           ; BSR set to: 14
  1485                           ;dc_motor.c: 30:     T2CONbits.ON=1;
  1486   0020CA  8EBD               	bsf	189,7,c	;volatile
  1487                           
  1488                           ;dc_motor.c: 34:     CCPR1H=0;
  1489   0020CC  0E00               	movlw	0
  1490   0020CE  6EAA               	movwf	170,c	;volatile
  1491                           
  1492                           ;dc_motor.c: 35:     CCPR2H=0;
  1493   0020D0  0E00               	movlw	0
  1494   0020D2  6EA6               	movwf	166,c	;volatile
  1495                           
  1496                           ;dc_motor.c: 36:     CCPR3H=0;
  1497   0020D4  0E00               	movlw	0
  1498   0020D6  010F               	movlb	15	; () banked
  1499   0020D8  6F25               	movwf	37,b	;volatile
  1500                           
  1501                           ;dc_motor.c: 37:     CCPR4H=0;
  1502   0020DA  0E00               	movlw	0
  1503   0020DC  6F21               	movwf	33,b	;volatile
  1504                           
  1505                           ;dc_motor.c: 40:     CCPTMRS0bits.C1TSEL=0;
  1506   0020DE  0EFC               	movlw	-4
  1507   0020E0  16AD               	andwf	173,f,c	;volatile
  1508                           
  1509                           ;dc_motor.c: 41:     CCPTMRS0bits.C2TSEL=0;
  1510   0020E2  0EF3               	movlw	-13
  1511   0020E4  16AD               	andwf	173,f,c	;volatile
  1512                           
  1513                           ;dc_motor.c: 42:     CCPTMRS0bits.C3TSEL=0;
  1514   0020E6  0ECF               	movlw	-49
  1515   0020E8  16AD               	andwf	173,f,c	;volatile
  1516                           
  1517                           ;dc_motor.c: 43:     CCPTMRS0bits.C4TSEL=0;
  1518   0020EA  0E3F               	movlw	-193
  1519   0020EC  16AD               	andwf	173,f,c	;volatile
  1520   0020EE                     
  1521                           ; BSR set to: 15
  1522                           ;dc_motor.c: 46:     CCP1CONbits.FMT=1;
  1523   0020EE  88AB               	bsf	171,4,c	;volatile
  1524                           
  1525                           ;dc_motor.c: 47:     CCP1CONbits.CCP1MODE=0b1100;
  1526   0020F0  50AB               	movf	171,w,c	;volatile
  1527   0020F2  0BF0               	andlw	-16
  1528   0020F4  090C               	iorlw	12
  1529   0020F6  6EAB               	movwf	171,c	;volatile
  1530   0020F8                     
  1531                           ; BSR set to: 15
  1532                           ;dc_motor.c: 48:     CCP1CONbits.EN=1;
  1533   0020F8  8EAB               	bsf	171,7,c	;volatile
  1534   0020FA                     
  1535                           ; BSR set to: 15
  1536                           ;dc_motor.c: 50:     CCP2CONbits.FMT=1;
  1537   0020FA  88A7               	bsf	167,4,c	;volatile
  1538                           
  1539                           ;dc_motor.c: 51:     CCP2CONbits.CCP2MODE=0b1100;
  1540   0020FC  50A7               	movf	167,w,c	;volatile
  1541   0020FE  0BF0               	andlw	-16
  1542   002100  090C               	iorlw	12
  1543   002102  6EA7               	movwf	167,c	;volatile
  1544   002104                     
  1545                           ; BSR set to: 15
  1546                           ;dc_motor.c: 52:     CCP2CONbits.EN=1;
  1547   002104  8EA7               	bsf	167,7,c	;volatile
  1548   002106                     
  1549                           ; BSR set to: 15
  1550                           ;dc_motor.c: 54:     CCP3CONbits.FMT=1;
  1551   002106  8926               	bsf	38,4,b	;volatile
  1552                           
  1553                           ;dc_motor.c: 55:     CCP3CONbits.CCP3MODE=0b1100;
  1554   002108  5126               	movf	38,w,b	;volatile
  1555   00210A  0BF0               	andlw	-16
  1556   00210C  090C               	iorlw	12
  1557   00210E  6F26               	movwf	38,b	;volatile
  1558   002110                     
  1559                           ; BSR set to: 15
  1560                           ;dc_motor.c: 56:     CCP3CONbits.EN=1;
  1561   002110  8F26               	bsf	38,7,b	;volatile
  1562   002112                     
  1563                           ; BSR set to: 15
  1564                           ;dc_motor.c: 58:     CCP4CONbits.FMT=1;
  1565   002112  8922               	bsf	34,4,b	;volatile
  1566                           
  1567                           ;dc_motor.c: 59:     CCP4CONbits.CCP4MODE=0b1100;
  1568   002114  5122               	movf	34,w,b	;volatile
  1569   002116  0BF0               	andlw	-16
  1570   002118  090C               	iorlw	12
  1571   00211A  6F22               	movwf	34,b	;volatile
  1572   00211C                     
  1573                           ; BSR set to: 15
  1574                           ;dc_motor.c: 60:     CCP4CONbits.EN=1;
  1575   00211C  8F22               	bsf	34,7,b	;volatile
  1576   00211E                     
  1577                           ; BSR set to: 15
  1578   00211E  0012               	return		;funcret
  1579   002120                     __end_of_initDCmotorsPWM:
  1580                           	callstack 0
  1581                           
  1582 ;; *************** function _detect_color *****************
  1583 ;; Defined at:
  1584 ;;		line 99 in file "color.c"
  1585 ;; Parameters:    Size  Location     Type
  1586 ;;  tempval         2    4[BANK0 ] PTR struct RGB_val
  1587 ;;		 -> main@initial_color(8), 
  1588 ;;  lost_timer      2    6[BANK0 ] PTR unsigned char 
  1589 ;;		 -> RAM(3561), 
  1590 ;; Auto vars:     Size  Location     Type
  1591 ;;  dist_B          1   23[BANK0 ] unsigned char 
  1592 ;;  dist_G          1   22[BANK0 ] unsigned char 
  1593 ;;  dist_R          1   21[BANK0 ] unsigned char 
  1594 ;;  color           1   20[BANK0 ] unsigned char 
  1595 ;; Return value:  Size  Location     Type
  1596 ;;                  1    wreg      unsigned char 
  1597 ;; Registers used:
  1598 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1599 ;; Tracked objects:
  1600 ;;		On entry : 0/0
  1601 ;;		On exit  : 0/0
  1602 ;;		Unchanged: 0/0
  1603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1604 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1605 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1606 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1607 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1608 ;;Total ram usage:       20 bytes
  1609 ;; Hardware stack levels used: 1
  1610 ;; Hardware stack levels required when called: 8
  1611 ;; This function calls:
  1612 ;;		___fldiv
  1613 ;;		___flmul
  1614 ;;		___fltol
  1615 ;;		___xxtofl
  1616 ;; This function is called by:
  1617 ;;		_main
  1618 ;; This function uses a non-reentrant model
  1619 ;;
  1620                           
  1621                           	psect	text2
  1622   00005C                     __ptext2:
  1623                           	callstack 0
  1624   00005C                     _detect_color:
  1625                           	callstack 22
  1626   00005C                     
  1627                           ;color.c: 99: unsigned char detect_color(RGB_val *tempval, unsigned char *lost_timer);co
      +                          lor.c: 100: {;color.c: 101:     unsigned char color = 0;
  1628   00005C  0E00               	movlw	0
  1629   00005E  0100               	movlb	0	; () banked
  1630   000060  6FB3               	movwf	detect_color@color& (0+255),b
  1631   000062                     
  1632                           ; BSR set to: 0
  1633                           ;color.c: 104:     unsigned char dist_R, dist_G, dist_B;;color.c: 105:     dist_R = ((fl
      +                          oat)(tempval->R)/(float)(tempval->R + tempval->G + tempval->B))*100;
  1634   000062  0E00               	movlw	0
  1635   000064  6E34               	movwf	___flmul@a^0,c
  1636   000066  0E00               	movlw	0
  1637   000068  6E35               	movwf	(___flmul@a+1)^0,c
  1638   00006A  0EC8               	movlw	200
  1639   00006C  6E36               	movwf	(___flmul@a+2)^0,c
  1640   00006E  0E42               	movlw	66
  1641   000070  6E37               	movwf	(___flmul@a+3)^0,c
  1642   000072  EE20 F004          	lfsr	2,4
  1643   000076  51A3               	movf	detect_color@tempval& (0+255),w,b
  1644   000078  26D9               	addwf	fsr2l,f,c
  1645   00007A  51A4               	movf	(detect_color@tempval+1)& (0+255),w,b
  1646   00007C  22DA               	addwfc	fsr2h,f,c
  1647   00007E  CFDE F0A7          	movff	postinc2,??_detect_color
  1648   000082  CFDD F0A8          	movff	postdec2,??_detect_color+1
  1649   000086  EE20 F002          	lfsr	2,2
  1650   00008A  51A3               	movf	detect_color@tempval& (0+255),w,b
  1651   00008C  26D9               	addwf	fsr2l,f,c
  1652   00008E  51A4               	movf	(detect_color@tempval+1)& (0+255),w,b
  1653   000090  22DA               	addwfc	fsr2h,f,c
  1654   000092  CFDE F0A9          	movff	postinc2,??_detect_color+2
  1655   000096  CFDD F0AA          	movff	postdec2,??_detect_color+3
  1656   00009A  C0A3  FFD9         	movff	detect_color@tempval,fsr2l
  1657   00009E  C0A4  FFDA         	movff	detect_color@tempval+1,fsr2h
  1658   0000A2  CFDE F0AB          	movff	postinc2,??_detect_color+4
  1659   0000A6  CFDD F0AC          	movff	postdec2,??_detect_color+5
  1660   0000AA  51A9               	movf	(??_detect_color+2)& (0+255),w,b
  1661   0000AC  25AB               	addwf	(??_detect_color+4)& (0+255),w,b
  1662   0000AE  6FAD               	movwf	(??_detect_color+6)& (0+255),b
  1663   0000B0  51AA               	movf	(??_detect_color+3)& (0+255),w,b
  1664   0000B2  21AC               	addwfc	(??_detect_color+5)& (0+255),w,b
  1665   0000B4  6FAE               	movwf	(??_detect_color+7)& (0+255),b
  1666   0000B6  51A7               	movf	??_detect_color& (0+255),w,b
  1667   0000B8  25AD               	addwf	(??_detect_color+6)& (0+255),w,b
  1668   0000BA  6FAF               	movwf	(??_detect_color+8)& (0+255),b
  1669   0000BC  51A8               	movf	(??_detect_color+1)& (0+255),w,b
  1670   0000BE  21AE               	addwfc	(??_detect_color+7)& (0+255),w,b
  1671   0000C0  6FB0               	movwf	(??_detect_color+9)& (0+255),b
  1672   0000C2  C0AF  F009         	movff	??_detect_color+8,___xxtofl@val
  1673   0000C6  C0B0  F00A         	movff	??_detect_color+9,___xxtofl@val+1
  1674   0000CA  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1675   0000CC  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1676   0000CE  0E00               	movlw	0
  1677   0000D0  ECC0  F009         	call	___xxtofl
  1678   0000D4  C009  F01B         	movff	?___xxtofl,___fldiv@a
  1679   0000D8  C00A  F01C         	movff	?___xxtofl+1,___fldiv@a+1
  1680   0000DC  C00B  F01D         	movff	?___xxtofl+2,___fldiv@a+2
  1681   0000E0  C00C  F01E         	movff	?___xxtofl+3,___fldiv@a+3
  1682   0000E4  C0A3  FFD9         	movff	detect_color@tempval,fsr2l
  1683   0000E8  C0A4  FFDA         	movff	detect_color@tempval+1,fsr2h
  1684   0000EC  CFDE F0B1          	movff	postinc2,??_detect_color+10
  1685   0000F0  CFDD F0B2          	movff	postdec2,??_detect_color+11
  1686   0000F4  C0B1  F009         	movff	??_detect_color+10,___xxtofl@val
  1687   0000F8  C0B2  F00A         	movff	??_detect_color+11,___xxtofl@val+1
  1688   0000FC  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1689   0000FE  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1690   000100  0E00               	movlw	0
  1691   000102  ECC0  F009         	call	___xxtofl
  1692   000106  C009  F017         	movff	?___xxtofl,___fldiv@b
  1693   00010A  C00A  F018         	movff	?___xxtofl+1,___fldiv@b+1
  1694   00010E  C00B  F019         	movff	?___xxtofl+2,___fldiv@b+2
  1695   000112  C00C  F01A         	movff	?___xxtofl+3,___fldiv@b+3
  1696   000116  EC56  F005         	call	___fldiv	;wreg free
  1697   00011A  C017  F030         	movff	?___fldiv,___flmul@b
  1698   00011E  C018  F031         	movff	?___fldiv+1,___flmul@b+1
  1699   000122  C019  F032         	movff	?___fldiv+2,___flmul@b+2
  1700   000126  C01A  F033         	movff	?___fldiv+3,___flmul@b+3
  1701   00012A  EC41  F003         	call	___flmul	;wreg free
  1702   00012E  C030  F049         	movff	?___flmul,___fltol@f1
  1703   000132  C031  F04A         	movff	?___flmul+1,___fltol@f1+1
  1704   000136  C032  F04B         	movff	?___flmul+2,___fltol@f1+2
  1705   00013A  C033  F04C         	movff	?___flmul+3,___fltol@f1+3
  1706   00013E  EC50  F00B         	call	___fltol	;wreg free
  1707   000142  5049               	movf	?___fltol^0,w,c
  1708   000144  0100               	movlb	0	; () banked
  1709   000146  6FB4               	movwf	detect_color@dist_R& (0+255),b
  1710   000148                     
  1711                           ; BSR set to: 0
  1712                           ;color.c: 106:     dist_G = ((float)(tempval->G)/(float)(tempval->R + tempval->G + tempv
      +                          al->B))*100;
  1713   000148  0E00               	movlw	0
  1714   00014A  6E34               	movwf	___flmul@a^0,c
  1715   00014C  0E00               	movlw	0
  1716   00014E  6E35               	movwf	(___flmul@a+1)^0,c
  1717   000150  0EC8               	movlw	200
  1718   000152  6E36               	movwf	(___flmul@a+2)^0,c
  1719   000154  0E42               	movlw	66
  1720   000156  6E37               	movwf	(___flmul@a+3)^0,c
  1721   000158  EE20 F004          	lfsr	2,4
  1722   00015C  51A3               	movf	detect_color@tempval& (0+255),w,b
  1723   00015E  26D9               	addwf	fsr2l,f,c
  1724   000160  51A4               	movf	(detect_color@tempval+1)& (0+255),w,b
  1725   000162  22DA               	addwfc	fsr2h,f,c
  1726   000164  CFDE F0A7          	movff	postinc2,??_detect_color
  1727   000168  CFDD F0A8          	movff	postdec2,??_detect_color+1
  1728   00016C  EE20 F002          	lfsr	2,2
  1729   000170  51A3               	movf	detect_color@tempval& (0+255),w,b
  1730   000172  26D9               	addwf	fsr2l,f,c
  1731   000174  51A4               	movf	(detect_color@tempval+1)& (0+255),w,b
  1732   000176  22DA               	addwfc	fsr2h,f,c
  1733   000178  CFDE F0A9          	movff	postinc2,??_detect_color+2
  1734   00017C  CFDD F0AA          	movff	postdec2,??_detect_color+3
  1735   000180  C0A3  FFD9         	movff	detect_color@tempval,fsr2l
  1736   000184  C0A4  FFDA         	movff	detect_color@tempval+1,fsr2h
  1737   000188  CFDE F0AB          	movff	postinc2,??_detect_color+4
  1738   00018C  CFDD F0AC          	movff	postdec2,??_detect_color+5
  1739   000190  51A9               	movf	(??_detect_color+2)& (0+255),w,b
  1740   000192  25AB               	addwf	(??_detect_color+4)& (0+255),w,b
  1741   000194  6FAD               	movwf	(??_detect_color+6)& (0+255),b
  1742   000196  51AA               	movf	(??_detect_color+3)& (0+255),w,b
  1743   000198  21AC               	addwfc	(??_detect_color+5)& (0+255),w,b
  1744   00019A  6FAE               	movwf	(??_detect_color+7)& (0+255),b
  1745   00019C  51A7               	movf	??_detect_color& (0+255),w,b
  1746   00019E  25AD               	addwf	(??_detect_color+6)& (0+255),w,b
  1747   0001A0  6FAF               	movwf	(??_detect_color+8)& (0+255),b
  1748   0001A2  51A8               	movf	(??_detect_color+1)& (0+255),w,b
  1749   0001A4  21AE               	addwfc	(??_detect_color+7)& (0+255),w,b
  1750   0001A6  6FB0               	movwf	(??_detect_color+9)& (0+255),b
  1751   0001A8  C0AF  F009         	movff	??_detect_color+8,___xxtofl@val
  1752   0001AC  C0B0  F00A         	movff	??_detect_color+9,___xxtofl@val+1
  1753   0001B0  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1754   0001B2  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1755   0001B4  0E00               	movlw	0
  1756   0001B6  ECC0  F009         	call	___xxtofl
  1757   0001BA  C009  F01B         	movff	?___xxtofl,___fldiv@a
  1758   0001BE  C00A  F01C         	movff	?___xxtofl+1,___fldiv@a+1
  1759   0001C2  C00B  F01D         	movff	?___xxtofl+2,___fldiv@a+2
  1760   0001C6  C00C  F01E         	movff	?___xxtofl+3,___fldiv@a+3
  1761   0001CA  0100               	movlb	0	; () banked
  1762   0001CC  EE20 F002          	lfsr	2,2
  1763   0001D0  51A3               	movf	detect_color@tempval& (0+255),w,b
  1764   0001D2  26D9               	addwf	fsr2l,f,c
  1765   0001D4  51A4               	movf	(detect_color@tempval+1)& (0+255),w,b
  1766   0001D6  22DA               	addwfc	fsr2h,f,c
  1767   0001D8  CFDE F0B1          	movff	postinc2,??_detect_color+10
  1768   0001DC  CFDD F0B2          	movff	postdec2,??_detect_color+11
  1769   0001E0  C0B1  F009         	movff	??_detect_color+10,___xxtofl@val
  1770   0001E4  C0B2  F00A         	movff	??_detect_color+11,___xxtofl@val+1
  1771   0001E8  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1772   0001EA  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1773   0001EC  0E00               	movlw	0
  1774   0001EE  ECC0  F009         	call	___xxtofl
  1775   0001F2  C009  F017         	movff	?___xxtofl,___fldiv@b
  1776   0001F6  C00A  F018         	movff	?___xxtofl+1,___fldiv@b+1
  1777   0001FA  C00B  F019         	movff	?___xxtofl+2,___fldiv@b+2
  1778   0001FE  C00C  F01A         	movff	?___xxtofl+3,___fldiv@b+3
  1779   000202  EC56  F005         	call	___fldiv	;wreg free
  1780   000206  C017  F030         	movff	?___fldiv,___flmul@b
  1781   00020A  C018  F031         	movff	?___fldiv+1,___flmul@b+1
  1782   00020E  C019  F032         	movff	?___fldiv+2,___flmul@b+2
  1783   000212  C01A  F033         	movff	?___fldiv+3,___flmul@b+3
  1784   000216  EC41  F003         	call	___flmul	;wreg free
  1785   00021A  C030  F049         	movff	?___flmul,___fltol@f1
  1786   00021E  C031  F04A         	movff	?___flmul+1,___fltol@f1+1
  1787   000222  C032  F04B         	movff	?___flmul+2,___fltol@f1+2
  1788   000226  C033  F04C         	movff	?___flmul+3,___fltol@f1+3
  1789   00022A  EC50  F00B         	call	___fltol	;wreg free
  1790   00022E  5049               	movf	?___fltol^0,w,c
  1791   000230  0100               	movlb	0	; () banked
  1792   000232  6FB5               	movwf	detect_color@dist_G& (0+255),b
  1793   000234                     
  1794                           ; BSR set to: 0
  1795                           ;color.c: 107:     dist_B = ((float)(tempval->B)/(float)(tempval->R + tempval->G + tempv
      +                          al->B))*100;
  1796   000234  0E00               	movlw	0
  1797   000236  6E34               	movwf	___flmul@a^0,c
  1798   000238  0E00               	movlw	0
  1799   00023A  6E35               	movwf	(___flmul@a+1)^0,c
  1800   00023C  0EC8               	movlw	200
  1801   00023E  6E36               	movwf	(___flmul@a+2)^0,c
  1802   000240  0E42               	movlw	66
  1803   000242  6E37               	movwf	(___flmul@a+3)^0,c
  1804   000244  EE20 F004          	lfsr	2,4
  1805   000248  51A3               	movf	detect_color@tempval& (0+255),w,b
  1806   00024A  26D9               	addwf	fsr2l,f,c
  1807   00024C  51A4               	movf	(detect_color@tempval+1)& (0+255),w,b
  1808   00024E  22DA               	addwfc	fsr2h,f,c
  1809   000250  CFDE F0A7          	movff	postinc2,??_detect_color
  1810   000254  CFDD F0A8          	movff	postdec2,??_detect_color+1
  1811   000258  EE20 F002          	lfsr	2,2
  1812   00025C  51A3               	movf	detect_color@tempval& (0+255),w,b
  1813   00025E  26D9               	addwf	fsr2l,f,c
  1814   000260  51A4               	movf	(detect_color@tempval+1)& (0+255),w,b
  1815   000262  22DA               	addwfc	fsr2h,f,c
  1816   000264  CFDE F0A9          	movff	postinc2,??_detect_color+2
  1817   000268  CFDD F0AA          	movff	postdec2,??_detect_color+3
  1818   00026C  C0A3  FFD9         	movff	detect_color@tempval,fsr2l
  1819   000270  C0A4  FFDA         	movff	detect_color@tempval+1,fsr2h
  1820   000274  CFDE F0AB          	movff	postinc2,??_detect_color+4
  1821   000278  CFDD F0AC          	movff	postdec2,??_detect_color+5
  1822   00027C  51A9               	movf	(??_detect_color+2)& (0+255),w,b
  1823   00027E  25AB               	addwf	(??_detect_color+4)& (0+255),w,b
  1824   000280  6FAD               	movwf	(??_detect_color+6)& (0+255),b
  1825   000282  51AA               	movf	(??_detect_color+3)& (0+255),w,b
  1826   000284  21AC               	addwfc	(??_detect_color+5)& (0+255),w,b
  1827   000286  6FAE               	movwf	(??_detect_color+7)& (0+255),b
  1828   000288  51A7               	movf	??_detect_color& (0+255),w,b
  1829   00028A  25AD               	addwf	(??_detect_color+6)& (0+255),w,b
  1830   00028C  6FAF               	movwf	(??_detect_color+8)& (0+255),b
  1831   00028E  51A8               	movf	(??_detect_color+1)& (0+255),w,b
  1832   000290  21AE               	addwfc	(??_detect_color+7)& (0+255),w,b
  1833   000292  6FB0               	movwf	(??_detect_color+9)& (0+255),b
  1834   000294  C0AF  F009         	movff	??_detect_color+8,___xxtofl@val
  1835   000298  C0B0  F00A         	movff	??_detect_color+9,___xxtofl@val+1
  1836   00029C  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1837   00029E  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1838   0002A0  0E00               	movlw	0
  1839   0002A2  ECC0  F009         	call	___xxtofl
  1840   0002A6  C009  F01B         	movff	?___xxtofl,___fldiv@a
  1841   0002AA  C00A  F01C         	movff	?___xxtofl+1,___fldiv@a+1
  1842   0002AE  C00B  F01D         	movff	?___xxtofl+2,___fldiv@a+2
  1843   0002B2  C00C  F01E         	movff	?___xxtofl+3,___fldiv@a+3
  1844   0002B6  0100               	movlb	0	; () banked
  1845   0002B8  EE20 F004          	lfsr	2,4
  1846   0002BC  51A3               	movf	detect_color@tempval& (0+255),w,b
  1847   0002BE  26D9               	addwf	fsr2l,f,c
  1848   0002C0  51A4               	movf	(detect_color@tempval+1)& (0+255),w,b
  1849   0002C2  22DA               	addwfc	fsr2h,f,c
  1850   0002C4  CFDE F0B1          	movff	postinc2,??_detect_color+10
  1851   0002C8  CFDD F0B2          	movff	postdec2,??_detect_color+11
  1852   0002CC  C0B1  F009         	movff	??_detect_color+10,___xxtofl@val
  1853   0002D0  C0B2  F00A         	movff	??_detect_color+11,___xxtofl@val+1
  1854   0002D4  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1855   0002D6  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1856   0002D8  0E00               	movlw	0
  1857   0002DA  ECC0  F009         	call	___xxtofl
  1858   0002DE  C009  F017         	movff	?___xxtofl,___fldiv@b
  1859   0002E2  C00A  F018         	movff	?___xxtofl+1,___fldiv@b+1
  1860   0002E6  C00B  F019         	movff	?___xxtofl+2,___fldiv@b+2
  1861   0002EA  C00C  F01A         	movff	?___xxtofl+3,___fldiv@b+3
  1862   0002EE  EC56  F005         	call	___fldiv	;wreg free
  1863   0002F2  C017  F030         	movff	?___fldiv,___flmul@b
  1864   0002F6  C018  F031         	movff	?___fldiv+1,___flmul@b+1
  1865   0002FA  C019  F032         	movff	?___fldiv+2,___flmul@b+2
  1866   0002FE  C01A  F033         	movff	?___fldiv+3,___flmul@b+3
  1867   000302  EC41  F003         	call	___flmul	;wreg free
  1868   000306  C030  F049         	movff	?___flmul,___fltol@f1
  1869   00030A  C031  F04A         	movff	?___flmul+1,___fltol@f1+1
  1870   00030E  C032  F04B         	movff	?___flmul+2,___fltol@f1+2
  1871   000312  C033  F04C         	movff	?___flmul+3,___fltol@f1+3
  1872   000316  EC50  F00B         	call	___fltol	;wreg free
  1873   00031A  5049               	movf	?___fltol^0,w,c
  1874   00031C  0100               	movlb	0	; () banked
  1875   00031E  6FB6               	movwf	detect_color@dist_B& (0+255),b
  1876   000320                     
  1877                           ; BSR set to: 0
  1878                           ;color.c: 109:     if(color_flag){
  1879   000320  5055               	movf	_color_flag^0,w,c
  1880   000322  B4D8               	btfsc	status,2,c
  1881   000324  EF96  F001         	goto	u4001
  1882   000328  EF98  F001         	goto	u4000
  1883   00032C                     u4001:
  1884   00032C  EF3D  F003         	goto	l4244
  1885   000330                     u4000:
  1886   000330                     
  1887                           ; BSR set to: 0
  1888                           ;color.c: 110:         if((74<=dist_R) && (dist_R<=76) && (10<=dist_G) && (dist_G<=12) &
      +                          & (13<=dist_B) && (dist_B<=15)){
  1889   000330  0E49               	movlw	73
  1890   000332  65B4               	cpfsgt	detect_color@dist_R& (0+255),b
  1891   000334  EF9E  F001         	goto	u4011
  1892   000338  EFA0  F001         	goto	u4010
  1893   00033C                     u4011:
  1894   00033C  EFCC  F001         	goto	l4142
  1895   000340                     u4010:
  1896   000340                     
  1897                           ; BSR set to: 0
  1898   000340  0E4D               	movlw	77
  1899   000342  61B4               	cpfslt	detect_color@dist_R& (0+255),b
  1900   000344  EFA6  F001         	goto	u4021
  1901   000348  EFA8  F001         	goto	u4020
  1902   00034C                     u4021:
  1903   00034C  EFCC  F001         	goto	l4142
  1904   000350                     u4020:
  1905   000350                     
  1906                           ; BSR set to: 0
  1907   000350  0E09               	movlw	9
  1908   000352  65B5               	cpfsgt	detect_color@dist_G& (0+255),b
  1909   000354  EFAE  F001         	goto	u4031
  1910   000358  EFB0  F001         	goto	u4030
  1911   00035C                     u4031:
  1912   00035C  EFCC  F001         	goto	l4142
  1913   000360                     u4030:
  1914   000360                     
  1915                           ; BSR set to: 0
  1916   000360  0E0D               	movlw	13
  1917   000362  61B5               	cpfslt	detect_color@dist_G& (0+255),b
  1918   000364  EFB6  F001         	goto	u4041
  1919   000368  EFB8  F001         	goto	u4040
  1920   00036C                     u4041:
  1921   00036C  EFCC  F001         	goto	l4142
  1922   000370                     u4040:
  1923   000370                     
  1924                           ; BSR set to: 0
  1925   000370  0E0C               	movlw	12
  1926   000372  65B6               	cpfsgt	detect_color@dist_B& (0+255),b
  1927   000374  EFBE  F001         	goto	u4051
  1928   000378  EFC0  F001         	goto	u4050
  1929   00037C                     u4051:
  1930   00037C  EFCC  F001         	goto	l4142
  1931   000380                     u4050:
  1932   000380                     
  1933                           ; BSR set to: 0
  1934   000380  0E10               	movlw	16
  1935   000382  61B6               	cpfslt	detect_color@dist_B& (0+255),b
  1936   000384  EFC6  F001         	goto	u4061
  1937   000388  EFC8  F001         	goto	u4060
  1938   00038C                     u4061:
  1939   00038C  EFCC  F001         	goto	l4142
  1940   000390                     u4060:
  1941   000390                     
  1942                           ; BSR set to: 0
  1943                           ;color.c: 111:             color = 1;
  1944   000390  0E01               	movlw	1
  1945   000392  6FB3               	movwf	detect_color@color& (0+255),b
  1946                           
  1947                           ;color.c: 112:         }
  1948   000394  EF3D  F003         	goto	l4244
  1949   000398                     l4142:
  1950                           
  1951                           ; BSR set to: 0
  1952   000398  0E23               	movlw	35
  1953   00039A  65B4               	cpfsgt	detect_color@dist_R& (0+255),b
  1954   00039C  EFD2  F001         	goto	u4071
  1955   0003A0  EFD4  F001         	goto	u4070
  1956   0003A4                     u4071:
  1957   0003A4  EF00  F002         	goto	l4156
  1958   0003A8                     u4070:
  1959   0003A8                     
  1960                           ; BSR set to: 0
  1961   0003A8  0E27               	movlw	39
  1962   0003AA  61B4               	cpfslt	detect_color@dist_R& (0+255),b
  1963   0003AC  EFDA  F001         	goto	u4081
  1964   0003B0  EFDC  F001         	goto	u4080
  1965   0003B4                     u4081:
  1966   0003B4  EF00  F002         	goto	l4156
  1967   0003B8                     u4080:
  1968   0003B8                     
  1969                           ; BSR set to: 0
  1970   0003B8  0E28               	movlw	40
  1971   0003BA  65B5               	cpfsgt	detect_color@dist_G& (0+255),b
  1972   0003BC  EFE2  F001         	goto	u4091
  1973   0003C0  EFE4  F001         	goto	u4090
  1974   0003C4                     u4091:
  1975   0003C4  EF00  F002         	goto	l4156
  1976   0003C8                     u4090:
  1977   0003C8                     
  1978                           ; BSR set to: 0
  1979   0003C8  0E2C               	movlw	44
  1980   0003CA  61B5               	cpfslt	detect_color@dist_G& (0+255),b
  1981   0003CC  EFEA  F001         	goto	u4101
  1982   0003D0  EFEC  F001         	goto	u4100
  1983   0003D4                     u4101:
  1984   0003D4  EF00  F002         	goto	l4156
  1985   0003D8                     u4100:
  1986   0003D8                     
  1987                           ; BSR set to: 0
  1988   0003D8  0E13               	movlw	19
  1989   0003DA  65B6               	cpfsgt	detect_color@dist_B& (0+255),b
  1990   0003DC  EFF2  F001         	goto	u4111
  1991   0003E0  EFF4  F001         	goto	u4110
  1992   0003E4                     u4111:
  1993   0003E4  EF00  F002         	goto	l4156
  1994   0003E8                     u4110:
  1995   0003E8                     
  1996                           ; BSR set to: 0
  1997   0003E8  0E17               	movlw	23
  1998   0003EA  61B6               	cpfslt	detect_color@dist_B& (0+255),b
  1999   0003EC  EFFA  F001         	goto	u4121
  2000   0003F0  EFFC  F001         	goto	u4120
  2001   0003F4                     u4121:
  2002   0003F4  EF00  F002         	goto	l4156
  2003   0003F8                     u4120:
  2004   0003F8                     
  2005                           ; BSR set to: 0
  2006                           ;color.c: 114:             color = 2;
  2007   0003F8  0E02               	movlw	2
  2008   0003FA  6FB3               	movwf	detect_color@color& (0+255),b
  2009                           
  2010                           ;color.c: 115:         }
  2011   0003FC  EF3D  F003         	goto	l4244
  2012   000400                     l4156:
  2013                           
  2014                           ; BSR set to: 0
  2015   000400  0E1C               	movlw	28
  2016   000402  65B4               	cpfsgt	detect_color@dist_R& (0+255),b
  2017   000404  EF06  F002         	goto	u4131
  2018   000408  EF08  F002         	goto	u4130
  2019   00040C                     u4131:
  2020   00040C  EF34  F002         	goto	l4170
  2021   000410                     u4130:
  2022   000410                     
  2023                           ; BSR set to: 0
  2024   000410  0E23               	movlw	35
  2025   000412  61B4               	cpfslt	detect_color@dist_R& (0+255),b
  2026   000414  EF0E  F002         	goto	u4141
  2027   000418  EF10  F002         	goto	u4140
  2028   00041C                     u4141:
  2029   00041C  EF34  F002         	goto	l4170
  2030   000420                     u4140:
  2031   000420                     
  2032                           ; BSR set to: 0
  2033   000420  0E1F               	movlw	31
  2034   000422  65B5               	cpfsgt	detect_color@dist_G& (0+255),b
  2035   000424  EF16  F002         	goto	u4151
  2036   000428  EF18  F002         	goto	u4150
  2037   00042C                     u4151:
  2038   00042C  EF34  F002         	goto	l4170
  2039   000430                     u4150:
  2040   000430                     
  2041                           ; BSR set to: 0
  2042   000430  0E27               	movlw	39
  2043   000432  61B5               	cpfslt	detect_color@dist_G& (0+255),b
  2044   000434  EF1E  F002         	goto	u4161
  2045   000438  EF20  F002         	goto	u4160
  2046   00043C                     u4161:
  2047   00043C  EF34  F002         	goto	l4170
  2048   000440                     u4160:
  2049   000440                     
  2050                           ; BSR set to: 0
  2051   000440  0E1E               	movlw	30
  2052   000442  65B6               	cpfsgt	detect_color@dist_B& (0+255),b
  2053   000444  EF26  F002         	goto	u4171
  2054   000448  EF28  F002         	goto	u4170
  2055   00044C                     u4171:
  2056   00044C  EF34  F002         	goto	l4170
  2057   000450                     u4170:
  2058   000450                     
  2059                           ; BSR set to: 0
  2060   000450  0E26               	movlw	38
  2061   000452  61B6               	cpfslt	detect_color@dist_B& (0+255),b
  2062   000454  EF2E  F002         	goto	u4181
  2063   000458  EF30  F002         	goto	u4180
  2064   00045C                     u4181:
  2065   00045C  EF34  F002         	goto	l4170
  2066   000460                     u4180:
  2067   000460                     
  2068                           ; BSR set to: 0
  2069                           ;color.c: 117:             color = 3;
  2070   000460  0E03               	movlw	3
  2071   000462  6FB3               	movwf	detect_color@color& (0+255),b
  2072                           
  2073                           ;color.c: 118:         }
  2074   000464  EF3D  F003         	goto	l4244
  2075   000468                     l4170:
  2076                           
  2077                           ; BSR set to: 0
  2078   000468  0E31               	movlw	49
  2079   00046A  65B4               	cpfsgt	detect_color@dist_R& (0+255),b
  2080   00046C  EF3A  F002         	goto	u4191
  2081   000470  EF3C  F002         	goto	u4190
  2082   000474                     u4191:
  2083   000474  EF68  F002         	goto	l4184
  2084   000478                     u4190:
  2085   000478                     
  2086                           ; BSR set to: 0
  2087   000478  0E35               	movlw	53
  2088   00047A  61B4               	cpfslt	detect_color@dist_R& (0+255),b
  2089   00047C  EF42  F002         	goto	u4201
  2090   000480  EF44  F002         	goto	u4200
  2091   000484                     u4201:
  2092   000484  EF68  F002         	goto	l4184
  2093   000488                     u4200:
  2094   000488                     
  2095                           ; BSR set to: 0
  2096   000488  0E1D               	movlw	29
  2097   00048A  65B5               	cpfsgt	detect_color@dist_G& (0+255),b
  2098   00048C  EF4A  F002         	goto	u4211
  2099   000490  EF4C  F002         	goto	u4210
  2100   000494                     u4211:
  2101   000494  EF68  F002         	goto	l4184
  2102   000498                     u4210:
  2103   000498                     
  2104                           ; BSR set to: 0
  2105   000498  0E21               	movlw	33
  2106   00049A  61B5               	cpfslt	detect_color@dist_G& (0+255),b
  2107   00049C  EF52  F002         	goto	u4221
  2108   0004A0  EF54  F002         	goto	u4220
  2109   0004A4                     u4221:
  2110   0004A4  EF68  F002         	goto	l4184
  2111   0004A8                     u4220:
  2112   0004A8                     
  2113                           ; BSR set to: 0
  2114   0004A8  0E10               	movlw	16
  2115   0004AA  65B6               	cpfsgt	detect_color@dist_B& (0+255),b
  2116   0004AC  EF5A  F002         	goto	u4231
  2117   0004B0  EF5C  F002         	goto	u4230
  2118   0004B4                     u4231:
  2119   0004B4  EF68  F002         	goto	l4184
  2120   0004B8                     u4230:
  2121   0004B8                     
  2122                           ; BSR set to: 0
  2123   0004B8  0E14               	movlw	20
  2124   0004BA  61B6               	cpfslt	detect_color@dist_B& (0+255),b
  2125   0004BC  EF62  F002         	goto	u4241
  2126   0004C0  EF64  F002         	goto	u4240
  2127   0004C4                     u4241:
  2128   0004C4  EF68  F002         	goto	l4184
  2129   0004C8                     u4240:
  2130   0004C8                     
  2131                           ; BSR set to: 0
  2132                           ;color.c: 120:             color = 4;
  2133   0004C8  0E04               	movlw	4
  2134   0004CA  6FB3               	movwf	detect_color@color& (0+255),b
  2135                           
  2136                           ;color.c: 121:         }
  2137   0004CC  EF3D  F003         	goto	l4244
  2138   0004D0                     l4184:
  2139                           
  2140                           ; BSR set to: 0
  2141   0004D0  0E2F               	movlw	47
  2142   0004D2  65B4               	cpfsgt	detect_color@dist_R& (0+255),b
  2143   0004D4  EF6E  F002         	goto	u4251
  2144   0004D8  EF70  F002         	goto	u4250
  2145   0004DC                     u4251:
  2146   0004DC  EF9C  F002         	goto	l4198
  2147   0004E0                     u4250:
  2148   0004E0                     
  2149                           ; BSR set to: 0
  2150   0004E0  0E33               	movlw	51
  2151   0004E2  61B4               	cpfslt	detect_color@dist_R& (0+255),b
  2152   0004E4  EF76  F002         	goto	u4261
  2153   0004E8  EF78  F002         	goto	u4260
  2154   0004EC                     u4261:
  2155   0004EC  EF9C  F002         	goto	l4198
  2156   0004F0                     u4260:
  2157   0004F0                     
  2158                           ; BSR set to: 0
  2159   0004F0  0E1B               	movlw	27
  2160   0004F2  65B5               	cpfsgt	detect_color@dist_G& (0+255),b
  2161   0004F4  EF7E  F002         	goto	u4271
  2162   0004F8  EF80  F002         	goto	u4270
  2163   0004FC                     u4271:
  2164   0004FC  EF9C  F002         	goto	l4198
  2165   000500                     u4270:
  2166   000500                     
  2167                           ; BSR set to: 0
  2168   000500  0E1F               	movlw	31
  2169   000502  61B5               	cpfslt	detect_color@dist_G& (0+255),b
  2170   000504  EF86  F002         	goto	u4281
  2171   000508  EF88  F002         	goto	u4280
  2172   00050C                     u4281:
  2173   00050C  EF9C  F002         	goto	l4198
  2174   000510                     u4280:
  2175   000510                     
  2176                           ; BSR set to: 0
  2177   000510  0E14               	movlw	20
  2178   000512  65B6               	cpfsgt	detect_color@dist_B& (0+255),b
  2179   000514  EF8E  F002         	goto	u4291
  2180   000518  EF90  F002         	goto	u4290
  2181   00051C                     u4291:
  2182   00051C  EF9C  F002         	goto	l4198
  2183   000520                     u4290:
  2184   000520                     
  2185                           ; BSR set to: 0
  2186   000520  0E18               	movlw	24
  2187   000522  61B6               	cpfslt	detect_color@dist_B& (0+255),b
  2188   000524  EF96  F002         	goto	u4301
  2189   000528  EF98  F002         	goto	u4300
  2190   00052C                     u4301:
  2191   00052C  EF9C  F002         	goto	l4198
  2192   000530                     u4300:
  2193   000530                     
  2194                           ; BSR set to: 0
  2195                           ;color.c: 123:             color = 5;
  2196   000530  0E05               	movlw	5
  2197   000532  6FB3               	movwf	detect_color@color& (0+255),b
  2198                           
  2199                           ;color.c: 124:         }
  2200   000534  EF3D  F003         	goto	l4244
  2201   000538                     l4198:
  2202                           
  2203                           ; BSR set to: 0
  2204   000538  0E3A               	movlw	58
  2205   00053A  65B4               	cpfsgt	detect_color@dist_R& (0+255),b
  2206   00053C  EFA2  F002         	goto	u4311
  2207   000540  EFA4  F002         	goto	u4310
  2208   000544                     u4311:
  2209   000544  EFD0  F002         	goto	l4212
  2210   000548                     u4310:
  2211   000548                     
  2212                           ; BSR set to: 0
  2213   000548  0E3E               	movlw	62
  2214   00054A  61B4               	cpfslt	detect_color@dist_R& (0+255),b
  2215   00054C  EFAA  F002         	goto	u4321
  2216   000550  EFAC  F002         	goto	u4320
  2217   000554                     u4321:
  2218   000554  EFD0  F002         	goto	l4212
  2219   000558                     u4320:
  2220   000558                     
  2221                           ; BSR set to: 0
  2222   000558  0E15               	movlw	21
  2223   00055A  65B5               	cpfsgt	detect_color@dist_G& (0+255),b
  2224   00055C  EFB2  F002         	goto	u4331
  2225   000560  EFB4  F002         	goto	u4330
  2226   000564                     u4331:
  2227   000564  EFD0  F002         	goto	l4212
  2228   000568                     u4330:
  2229   000568                     
  2230                           ; BSR set to: 0
  2231   000568  0E19               	movlw	25
  2232   00056A  61B5               	cpfslt	detect_color@dist_G& (0+255),b
  2233   00056C  EFBA  F002         	goto	u4341
  2234   000570  EFBC  F002         	goto	u4340
  2235   000574                     u4341:
  2236   000574  EFD0  F002         	goto	l4212
  2237   000578                     u4340:
  2238   000578                     
  2239                           ; BSR set to: 0
  2240   000578  0E0F               	movlw	15
  2241   00057A  65B6               	cpfsgt	detect_color@dist_B& (0+255),b
  2242   00057C  EFC2  F002         	goto	u4351
  2243   000580  EFC4  F002         	goto	u4350
  2244   000584                     u4351:
  2245   000584  EFD0  F002         	goto	l4212
  2246   000588                     u4350:
  2247   000588                     
  2248                           ; BSR set to: 0
  2249   000588  0E13               	movlw	19
  2250   00058A  61B6               	cpfslt	detect_color@dist_B& (0+255),b
  2251   00058C  EFCA  F002         	goto	u4361
  2252   000590  EFCC  F002         	goto	u4360
  2253   000594                     u4361:
  2254   000594  EFD0  F002         	goto	l4212
  2255   000598                     u4360:
  2256   000598                     
  2257                           ; BSR set to: 0
  2258                           ;color.c: 126:             color = 6;
  2259   000598  0E06               	movlw	6
  2260   00059A  6FB3               	movwf	detect_color@color& (0+255),b
  2261                           
  2262                           ;color.c: 127:         }
  2263   00059C  EF3D  F003         	goto	l4244
  2264   0005A0                     l4212:
  2265                           
  2266                           ; BSR set to: 0
  2267   0005A0  0E20               	movlw	32
  2268   0005A2  65B4               	cpfsgt	detect_color@dist_R& (0+255),b
  2269   0005A4  EFD6  F002         	goto	u4371
  2270   0005A8  EFD8  F002         	goto	u4370
  2271   0005AC                     u4371:
  2272   0005AC  EF04  F003         	goto	l4226
  2273   0005B0                     u4370:
  2274   0005B0                     
  2275                           ; BSR set to: 0
  2276   0005B0  0E24               	movlw	36
  2277   0005B2  61B4               	cpfslt	detect_color@dist_R& (0+255),b
  2278   0005B4  EFDE  F002         	goto	u4381
  2279   0005B8  EFE0  F002         	goto	u4380
  2280   0005BC                     u4381:
  2281   0005BC  EF04  F003         	goto	l4226
  2282   0005C0                     u4380:
  2283   0005C0                     
  2284                           ; BSR set to: 0
  2285   0005C0  0E25               	movlw	37
  2286   0005C2  65B5               	cpfsgt	detect_color@dist_G& (0+255),b
  2287   0005C4  EFE6  F002         	goto	u4391
  2288   0005C8  EFE8  F002         	goto	u4390
  2289   0005CC                     u4391:
  2290   0005CC  EF04  F003         	goto	l4226
  2291   0005D0                     u4390:
  2292   0005D0                     
  2293                           ; BSR set to: 0
  2294   0005D0  0E29               	movlw	41
  2295   0005D2  61B5               	cpfslt	detect_color@dist_G& (0+255),b
  2296   0005D4  EFEE  F002         	goto	u4401
  2297   0005D8  EFF0  F002         	goto	u4400
  2298   0005DC                     u4401:
  2299   0005DC  EF04  F003         	goto	l4226
  2300   0005E0                     u4400:
  2301   0005E0                     
  2302                           ; BSR set to: 0
  2303   0005E0  0E19               	movlw	25
  2304   0005E2  65B6               	cpfsgt	detect_color@dist_B& (0+255),b
  2305   0005E4  EFF6  F002         	goto	u4411
  2306   0005E8  EFF8  F002         	goto	u4410
  2307   0005EC                     u4411:
  2308   0005EC  EF04  F003         	goto	l4226
  2309   0005F0                     u4410:
  2310   0005F0                     
  2311                           ; BSR set to: 0
  2312   0005F0  0E1D               	movlw	29
  2313   0005F2  61B6               	cpfslt	detect_color@dist_B& (0+255),b
  2314   0005F4  EFFE  F002         	goto	u4421
  2315   0005F8  EF00  F003         	goto	u4420
  2316   0005FC                     u4421:
  2317   0005FC  EF04  F003         	goto	l4226
  2318   000600                     u4420:
  2319   000600                     
  2320                           ; BSR set to: 0
  2321                           ;color.c: 129:             color = 7;
  2322   000600  0E07               	movlw	7
  2323   000602  6FB3               	movwf	detect_color@color& (0+255),b
  2324                           
  2325                           ;color.c: 130:         }
  2326   000604  EF3D  F003         	goto	l4244
  2327   000608                     l4226:
  2328                           
  2329                           ; BSR set to: 0
  2330   000608  0E2A               	movlw	42
  2331   00060A  65B4               	cpfsgt	detect_color@dist_R& (0+255),b
  2332   00060C  EF0A  F003         	goto	u4431
  2333   000610  EF0C  F003         	goto	u4430
  2334   000614                     u4431:
  2335   000614  EF38  F003         	goto	l59
  2336   000618                     u4430:
  2337   000618                     
  2338                           ; BSR set to: 0
  2339   000618  0E2E               	movlw	46
  2340   00061A  61B4               	cpfslt	detect_color@dist_R& (0+255),b
  2341   00061C  EF12  F003         	goto	u4441
  2342   000620  EF14  F003         	goto	u4440
  2343   000624                     u4441:
  2344   000624  EF38  F003         	goto	l59
  2345   000628                     u4440:
  2346   000628                     
  2347                           ; BSR set to: 0
  2348   000628  0E1F               	movlw	31
  2349   00062A  65B5               	cpfsgt	detect_color@dist_G& (0+255),b
  2350   00062C  EF1A  F003         	goto	u4451
  2351   000630  EF1C  F003         	goto	u4450
  2352   000634                     u4451:
  2353   000634  EF38  F003         	goto	l59
  2354   000638                     u4450:
  2355   000638                     
  2356                           ; BSR set to: 0
  2357   000638  0E23               	movlw	35
  2358   00063A  61B5               	cpfslt	detect_color@dist_G& (0+255),b
  2359   00063C  EF22  F003         	goto	u4461
  2360   000640  EF24  F003         	goto	u4460
  2361   000644                     u4461:
  2362   000644  EF38  F003         	goto	l59
  2363   000648                     u4460:
  2364   000648                     
  2365                           ; BSR set to: 0
  2366   000648  0E15               	movlw	21
  2367   00064A  65B6               	cpfsgt	detect_color@dist_B& (0+255),b
  2368   00064C  EF2A  F003         	goto	u4471
  2369   000650  EF2C  F003         	goto	u4470
  2370   000654                     u4471:
  2371   000654  EF38  F003         	goto	l59
  2372   000658                     u4470:
  2373   000658                     
  2374                           ; BSR set to: 0
  2375   000658  0E19               	movlw	25
  2376   00065A  61B6               	cpfslt	detect_color@dist_B& (0+255),b
  2377   00065C  EF32  F003         	goto	u4481
  2378   000660  EF34  F003         	goto	u4480
  2379   000664                     u4481:
  2380   000664  EF38  F003         	goto	l59
  2381   000668                     u4480:
  2382   000668                     
  2383                           ; BSR set to: 0
  2384                           ;color.c: 132:             color = 8;
  2385   000668  0E08               	movlw	8
  2386   00066A  6FB3               	movwf	detect_color@color& (0+255),b
  2387                           
  2388                           ;color.c: 133:         }
  2389   00066C  EF3D  F003         	goto	l4244
  2390   000670                     l59:
  2391                           
  2392                           ; BSR set to: 0
  2393                           ;color.c: 135:             LATHbits.LATH3 = 1;
  2394   000670  8680               	bsf	128,3,c	;volatile
  2395   000672                     
  2396                           ; BSR set to: 0
  2397                           ;color.c: 136:             color = 0;
  2398   000672  0E00               	movlw	0
  2399   000674  6FB3               	movwf	detect_color@color& (0+255),b
  2400   000676                     
  2401                           ; BSR set to: 0
  2402                           ;color.c: 138:             lost_timer++;
  2403   000676  4BA5               	infsnz	detect_color@lost_timer& (0+255),f,b
  2404   000678  2BA6               	incf	(detect_color@lost_timer+1)& (0+255),f,b
  2405   00067A                     l4244:
  2406                           
  2407                           ; BSR set to: 0
  2408                           ;color.c: 141:     color_flag = 0;
  2409   00067A  0E00               	movlw	0
  2410   00067C  6E55               	movwf	_color_flag^0,c
  2411   00067E                     
  2412                           ; BSR set to: 0
  2413                           ;color.c: 142:     return color;
  2414   00067E  51B3               	movf	detect_color@color& (0+255),w,b
  2415   000680                     
  2416                           ; BSR set to: 0
  2417   000680  0012               	return		;funcret
  2418   000682                     __end_of_detect_color:
  2419                           	callstack 0
  2420                           
  2421 ;; *************** function ___xxtofl *****************
  2422 ;; Defined at:
  2423 ;;		line 10 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\xxtofl.c"
  2424 ;; Parameters:    Size  Location     Type
  2425 ;;  sign            1    wreg     unsigned char 
  2426 ;;  val             4    8[COMRAM] long 
  2427 ;; Auto vars:     Size  Location     Type
  2428 ;;  sign            1   16[COMRAM] unsigned char 
  2429 ;;  arg             4   18[COMRAM] unsigned long 
  2430 ;;  exp             1   17[COMRAM] unsigned char 
  2431 ;; Return value:  Size  Location     Type
  2432 ;;                  4    8[COMRAM] unsigned char 
  2433 ;; Registers used:
  2434 ;;		wreg, status,2, status,0
  2435 ;; Tracked objects:
  2436 ;;		On entry : 0/0
  2437 ;;		On exit  : 0/0
  2438 ;;		Unchanged: 0/0
  2439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2440 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2441 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2442 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2443 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2444 ;;Total ram usage:       14 bytes
  2445 ;; Hardware stack levels used: 1
  2446 ;; Hardware stack levels required when called: 7
  2447 ;; This function calls:
  2448 ;;		Nothing
  2449 ;; This function is called by:
  2450 ;;		_detect_color
  2451 ;; This function uses a non-reentrant model
  2452 ;;
  2453                           
  2454                           	psect	text3
  2455   001380                     __ptext3:
  2456                           	callstack 0
  2457   001380                     ___xxtofl:
  2458                           	callstack 22
  2459                           
  2460                           ; BSR set to: 0
  2461                           ;incstack = 0
  2462                           ;___xxtofl@sign stored from wreg
  2463   001380  6E11               	movwf	___xxtofl@sign^0,c
  2464   001382  5011               	movf	___xxtofl@sign^0,w,c
  2465   001384  B4D8               	btfsc	status,2,c
  2466   001386  EFC7  F009         	goto	u3161
  2467   00138A  EFC9  F009         	goto	u3160
  2468   00138E                     u3161:
  2469   00138E  EFEB  F009         	goto	l1360
  2470   001392                     u3160:
  2471   001392  BE0C               	btfsc	(___xxtofl@val+3)^0,7,c
  2472   001394  EFD0  F009         	goto	u3170
  2473   001398  EFCE  F009         	goto	u3171
  2474   00139C                     u3171:
  2475   00139C  EFEB  F009         	goto	l1360
  2476   0013A0                     u3170:
  2477   0013A0  C009  F00D         	movff	___xxtofl@val,??___xxtofl
  2478   0013A4  C00A  F00E         	movff	___xxtofl@val+1,??___xxtofl+1
  2479   0013A8  C00B  F00F         	movff	___xxtofl@val+2,??___xxtofl+2
  2480   0013AC  C00C  F010         	movff	___xxtofl@val+3,??___xxtofl+3
  2481   0013B0  1E0D               	comf	??___xxtofl^0,f,c
  2482   0013B2  1E0E               	comf	(??___xxtofl+1)^0,f,c
  2483   0013B4  1E0F               	comf	(??___xxtofl+2)^0,f,c
  2484   0013B6  1E10               	comf	(??___xxtofl+3)^0,f,c
  2485   0013B8  2A0D               	incf	??___xxtofl^0,f,c
  2486   0013BA  0E00               	movlw	0
  2487   0013BC  220E               	addwfc	(??___xxtofl+1)^0,f,c
  2488   0013BE  220F               	addwfc	(??___xxtofl+2)^0,f,c
  2489   0013C0  2210               	addwfc	(??___xxtofl+3)^0,f,c
  2490   0013C2  C00D  F013         	movff	??___xxtofl,___xxtofl@arg
  2491   0013C6  C00E  F014         	movff	??___xxtofl+1,___xxtofl@arg+1
  2492   0013CA  C00F  F015         	movff	??___xxtofl+2,___xxtofl@arg+2
  2493   0013CE  C010  F016         	movff	??___xxtofl+3,___xxtofl@arg+3
  2494   0013D2  EFF3  F009         	goto	l3640
  2495   0013D6                     l1360:
  2496   0013D6  C009  F013         	movff	___xxtofl@val,___xxtofl@arg
  2497   0013DA  C00A  F014         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2498   0013DE  C00B  F015         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2499   0013E2  C00C  F016         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2500   0013E6                     l3640:
  2501   0013E6  5009               	movf	___xxtofl@val^0,w,c
  2502   0013E8  100A               	iorwf	(___xxtofl@val+1)^0,w,c
  2503   0013EA  100B               	iorwf	(___xxtofl@val+2)^0,w,c
  2504   0013EC  100C               	iorwf	(___xxtofl@val+3)^0,w,c
  2505   0013EE  A4D8               	btfss	status,2,c
  2506   0013F0  EFFC  F009         	goto	u3181
  2507   0013F4  EFFE  F009         	goto	u3180
  2508   0013F8                     u3181:
  2509   0013F8  EF08  F00A         	goto	l3646
  2510   0013FC                     u3180:
  2511   0013FC  0E00               	movlw	0
  2512   0013FE  6E09               	movwf	?___xxtofl^0,c
  2513   001400  0E00               	movlw	0
  2514   001402  6E0A               	movwf	(?___xxtofl+1)^0,c
  2515   001404  0E00               	movlw	0
  2516   001406  6E0B               	movwf	(?___xxtofl+2)^0,c
  2517   001408  0E00               	movlw	0
  2518   00140A  6E0C               	movwf	(?___xxtofl+3)^0,c
  2519   00140C  EF99  F00A         	goto	l1363
  2520   001410                     l3646:
  2521   001410  0E96               	movlw	150
  2522   001412  6E12               	movwf	___xxtofl@exp^0,c
  2523   001414  EF12  F00A         	goto	l3650
  2524   001418                     l3648:
  2525   001418  2A12               	incf	___xxtofl@exp^0,f,c
  2526   00141A  90D8               	bcf	status,0,c
  2527   00141C  3216               	rrcf	(___xxtofl@arg+3)^0,f,c
  2528   00141E  3215               	rrcf	(___xxtofl@arg+2)^0,f,c
  2529   001420  3214               	rrcf	(___xxtofl@arg+1)^0,f,c
  2530   001422  3213               	rrcf	___xxtofl@arg^0,f,c
  2531   001424                     l3650:
  2532   001424  0E00               	movlw	0
  2533   001426  1413               	andwf	___xxtofl@arg^0,w,c
  2534   001428  6E0D               	movwf	??___xxtofl^0,c
  2535   00142A  0E00               	movlw	0
  2536   00142C  1414               	andwf	(___xxtofl@arg+1)^0,w,c
  2537   00142E  6E0E               	movwf	(??___xxtofl+1)^0,c
  2538   001430  0E00               	movlw	0
  2539   001432  1415               	andwf	(___xxtofl@arg+2)^0,w,c
  2540   001434  6E0F               	movwf	(??___xxtofl+2)^0,c
  2541   001436  0EFE               	movlw	254
  2542   001438  1416               	andwf	(___xxtofl@arg+3)^0,w,c
  2543   00143A  6E10               	movwf	(??___xxtofl+3)^0,c
  2544   00143C  500D               	movf	??___xxtofl^0,w,c
  2545   00143E  100E               	iorwf	(??___xxtofl+1)^0,w,c
  2546   001440  100F               	iorwf	(??___xxtofl+2)^0,w,c
  2547   001442  1010               	iorwf	(??___xxtofl+3)^0,w,c
  2548   001444  A4D8               	btfss	status,2,c
  2549   001446  EF27  F00A         	goto	u3191
  2550   00144A  EF29  F00A         	goto	u3190
  2551   00144E                     u3191:
  2552   00144E  EF0C  F00A         	goto	l3648
  2553   001452                     u3190:
  2554   001452  EF37  F00A         	goto	l1367
  2555   001456                     l3652:
  2556   001456  2A12               	incf	___xxtofl@exp^0,f,c
  2557   001458  0E01               	movlw	1
  2558   00145A  2613               	addwf	___xxtofl@arg^0,f,c
  2559   00145C  0E00               	movlw	0
  2560   00145E  2214               	addwfc	(___xxtofl@arg+1)^0,f,c
  2561   001460  2215               	addwfc	(___xxtofl@arg+2)^0,f,c
  2562   001462  2216               	addwfc	(___xxtofl@arg+3)^0,f,c
  2563   001464  90D8               	bcf	status,0,c
  2564   001466  3216               	rrcf	(___xxtofl@arg+3)^0,f,c
  2565   001468  3215               	rrcf	(___xxtofl@arg+2)^0,f,c
  2566   00146A  3214               	rrcf	(___xxtofl@arg+1)^0,f,c
  2567   00146C  3213               	rrcf	___xxtofl@arg^0,f,c
  2568   00146E                     l1367:
  2569   00146E  0E00               	movlw	0
  2570   001470  1413               	andwf	___xxtofl@arg^0,w,c
  2571   001472  6E0D               	movwf	??___xxtofl^0,c
  2572   001474  0E00               	movlw	0
  2573   001476  1414               	andwf	(___xxtofl@arg+1)^0,w,c
  2574   001478  6E0E               	movwf	(??___xxtofl+1)^0,c
  2575   00147A  0E00               	movlw	0
  2576   00147C  1415               	andwf	(___xxtofl@arg+2)^0,w,c
  2577   00147E  6E0F               	movwf	(??___xxtofl+2)^0,c
  2578   001480  0EFF               	movlw	255
  2579   001482  1416               	andwf	(___xxtofl@arg+3)^0,w,c
  2580   001484  6E10               	movwf	(??___xxtofl+3)^0,c
  2581   001486  500D               	movf	??___xxtofl^0,w,c
  2582   001488  100E               	iorwf	(??___xxtofl+1)^0,w,c
  2583   00148A  100F               	iorwf	(??___xxtofl+2)^0,w,c
  2584   00148C  1010               	iorwf	(??___xxtofl+3)^0,w,c
  2585   00148E  A4D8               	btfss	status,2,c
  2586   001490  EF4C  F00A         	goto	u3201
  2587   001494  EF4E  F00A         	goto	u3200
  2588   001498                     u3201:
  2589   001498  EF2B  F00A         	goto	l3652
  2590   00149C                     u3200:
  2591   00149C  EF56  F00A         	goto	l3660
  2592   0014A0                     l3658:
  2593   0014A0  0612               	decf	___xxtofl@exp^0,f,c
  2594   0014A2  90D8               	bcf	status,0,c
  2595   0014A4  3613               	rlcf	___xxtofl@arg^0,f,c
  2596   0014A6  3614               	rlcf	(___xxtofl@arg+1)^0,f,c
  2597   0014A8  3615               	rlcf	(___xxtofl@arg+2)^0,f,c
  2598   0014AA  3616               	rlcf	(___xxtofl@arg+3)^0,f,c
  2599   0014AC                     l3660:
  2600   0014AC  BE15               	btfsc	(___xxtofl@arg+2)^0,7,c
  2601   0014AE  EF5B  F00A         	goto	u3211
  2602   0014B2  EF5D  F00A         	goto	u3210
  2603   0014B6                     u3211:
  2604   0014B6  EF65  F00A         	goto	l1374
  2605   0014BA                     u3210:
  2606   0014BA  0E02               	movlw	2
  2607   0014BC  6012               	cpfslt	___xxtofl@exp^0,c
  2608   0014BE  EF63  F00A         	goto	u3221
  2609   0014C2  EF65  F00A         	goto	u3220
  2610   0014C6                     u3221:
  2611   0014C6  EF50  F00A         	goto	l3658
  2612   0014CA                     u3220:
  2613   0014CA                     l1374:
  2614   0014CA  B012               	btfsc	___xxtofl@exp^0,0,c
  2615   0014CC  EF6A  F00A         	goto	u3231
  2616   0014D0  EF6C  F00A         	goto	u3230
  2617   0014D4                     u3231:
  2618   0014D4  EF6D  F00A         	goto	l3666
  2619   0014D8                     u3230:
  2620   0014D8  9E15               	bcf	(___xxtofl@arg+2)^0,7,c
  2621   0014DA                     l3666:
  2622   0014DA  90D8               	bcf	status,0,c
  2623   0014DC  3212               	rrcf	___xxtofl@exp^0,f,c
  2624   0014DE  C012  F00D         	movff	___xxtofl@exp,??___xxtofl
  2625   0014E2  6A0E               	clrf	(??___xxtofl+1)^0,c
  2626   0014E4  6A0F               	clrf	(??___xxtofl+2)^0,c
  2627   0014E6  6A10               	clrf	(??___xxtofl+3)^0,c
  2628   0014E8  C00D  F010         	movff	??___xxtofl,??___xxtofl+3
  2629   0014EC  6A0F               	clrf	(??___xxtofl+2)^0,c
  2630   0014EE  6A0E               	clrf	(??___xxtofl+1)^0,c
  2631   0014F0  6A0D               	clrf	??___xxtofl^0,c
  2632   0014F2  500D               	movf	??___xxtofl^0,w,c
  2633   0014F4  1213               	iorwf	___xxtofl@arg^0,f,c
  2634   0014F6  500E               	movf	(??___xxtofl+1)^0,w,c
  2635   0014F8  1214               	iorwf	(___xxtofl@arg+1)^0,f,c
  2636   0014FA  500F               	movf	(??___xxtofl+2)^0,w,c
  2637   0014FC  1215               	iorwf	(___xxtofl@arg+2)^0,f,c
  2638   0014FE  5010               	movf	(??___xxtofl+3)^0,w,c
  2639   001500  1216               	iorwf	(___xxtofl@arg+3)^0,f,c
  2640   001502  5011               	movf	___xxtofl@sign^0,w,c
  2641   001504  B4D8               	btfsc	status,2,c
  2642   001506  EF87  F00A         	goto	u3241
  2643   00150A  EF89  F00A         	goto	u3240
  2644   00150E                     u3241:
  2645   00150E  EF91  F00A         	goto	l3676
  2646   001512                     u3240:
  2647   001512  BE0C               	btfsc	(___xxtofl@val+3)^0,7,c
  2648   001514  EF90  F00A         	goto	u3250
  2649   001518  EF8E  F00A         	goto	u3251
  2650   00151C                     u3251:
  2651   00151C  EF91  F00A         	goto	l3676
  2652   001520                     u3250:
  2653   001520  8E16               	bsf	(___xxtofl@arg+3)^0,7,c
  2654   001522                     l3676:
  2655   001522  C013  F009         	movff	___xxtofl@arg,?___xxtofl
  2656   001526  C014  F00A         	movff	___xxtofl@arg+1,?___xxtofl+1
  2657   00152A  C015  F00B         	movff	___xxtofl@arg+2,?___xxtofl+2
  2658   00152E  C016  F00C         	movff	___xxtofl@arg+3,?___xxtofl+3
  2659   001532                     l1363:
  2660   001532  0012               	return		;funcret
  2661   001534                     __end_of___xxtofl:
  2662                           	callstack 0
  2663                           
  2664 ;; *************** function ___fltol *****************
  2665 ;; Defined at:
  2666 ;;		line 43 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\fltol.c"
  2667 ;; Parameters:    Size  Location     Type
  2668 ;;  f1              4   72[COMRAM] unsigned char 
  2669 ;; Auto vars:     Size  Location     Type
  2670 ;;  exp1            1   77[COMRAM] unsigned char 
  2671 ;;  sign1           1   76[COMRAM] unsigned char 
  2672 ;; Return value:  Size  Location     Type
  2673 ;;                  4   72[COMRAM] long 
  2674 ;; Registers used:
  2675 ;;		wreg, status,2, status,0
  2676 ;; Tracked objects:
  2677 ;;		On entry : 0/0
  2678 ;;		On exit  : 0/0
  2679 ;;		Unchanged: 0/0
  2680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2681 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2682 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2683 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2684 ;;      Totals:         6       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2685 ;;Total ram usage:       10 bytes
  2686 ;; Hardware stack levels used: 1
  2687 ;; Hardware stack levels required when called: 7
  2688 ;; This function calls:
  2689 ;;		Nothing
  2690 ;; This function is called by:
  2691 ;;		_detect_color
  2692 ;; This function uses a non-reentrant model
  2693 ;;
  2694                           
  2695                           	psect	text4
  2696   0016A0                     __ptext4:
  2697                           	callstack 0
  2698   0016A0                     ___fltol:
  2699                           	callstack 22
  2700   0016A0  344B               	rlcf	(___fltol@f1+2)^0,w,c
  2701   0016A2  344C               	rlcf	(___fltol@f1+3)^0,w,c
  2702   0016A4  6E4E               	movwf	___fltol@exp1^0,c
  2703   0016A6  504E               	movf	___fltol@exp1^0,w,c
  2704   0016A8  A4D8               	btfss	status,2,c
  2705   0016AA  EF59  F00B         	goto	u3931
  2706   0016AE  EF5B  F00B         	goto	u3930
  2707   0016B2                     u3931:
  2708   0016B2  EF65  F00B         	goto	l4080
  2709   0016B6                     u3930:
  2710   0016B6                     l4076:
  2711   0016B6  0E00               	movlw	0
  2712   0016B8  6E49               	movwf	?___fltol^0,c
  2713   0016BA  0E00               	movlw	0
  2714   0016BC  6E4A               	movwf	(?___fltol+1)^0,c
  2715   0016BE  0E00               	movlw	0
  2716   0016C0  6E4B               	movwf	(?___fltol+2)^0,c
  2717   0016C2  0E00               	movlw	0
  2718   0016C4  6E4C               	movwf	(?___fltol+3)^0,c
  2719   0016C6  EFD3  F00B         	goto	l1002
  2720   0016CA                     l4080:
  2721   0016CA  C049  F09F         	movff	___fltol@f1,??___fltol
  2722   0016CE  C04A  F0A0         	movff	___fltol@f1+1,??___fltol+1
  2723   0016D2  C04B  F0A1         	movff	___fltol@f1+2,??___fltol+2
  2724   0016D6  C04C  F0A2         	movff	___fltol@f1+3,??___fltol+3
  2725   0016DA  0E20               	movlw	32
  2726   0016DC  EF76  F00B         	goto	u3940
  2727   0016E0                     u3945:
  2728   0016E0  0100               	movlb	0	; () banked
  2729   0016E2  90D8               	bcf	status,0,c
  2730   0016E4  33A2               	rrcf	(??___fltol+3)& (0+255),f,b
  2731   0016E6  33A1               	rrcf	(??___fltol+2)& (0+255),f,b
  2732   0016E8  33A0               	rrcf	(??___fltol+1)& (0+255),f,b
  2733   0016EA  339F               	rrcf	??___fltol& (0+255),f,b
  2734   0016EC                     u3940:
  2735   0016EC  2EE8               	decfsz	wreg,f,c
  2736   0016EE  EF70  F00B         	goto	u3945
  2737   0016F2  519F               	movf	??___fltol& (0+255),w,b
  2738   0016F4  6E4D               	movwf	___fltol@sign1^0,c
  2739   0016F6                     
  2740                           ; BSR set to: 0
  2741   0016F6  8E4B               	bsf	(___fltol@f1+2)^0,7,c
  2742   0016F8                     
  2743                           ; BSR set to: 0
  2744   0016F8  0EFF               	movlw	255
  2745   0016FA  1649               	andwf	___fltol@f1^0,f,c
  2746   0016FC  0EFF               	movlw	255
  2747   0016FE  164A               	andwf	(___fltol@f1+1)^0,f,c
  2748   001700  0EFF               	movlw	255
  2749   001702  164B               	andwf	(___fltol@f1+2)^0,f,c
  2750   001704  0E00               	movlw	0
  2751   001706  164C               	andwf	(___fltol@f1+3)^0,f,c
  2752   001708                     
  2753                           ; BSR set to: 0
  2754   001708  0E96               	movlw	150
  2755   00170A  5E4E               	subwf	___fltol@exp1^0,f,c
  2756   00170C                     
  2757                           ; BSR set to: 0
  2758   00170C  BE4E               	btfsc	___fltol@exp1^0,7,c
  2759   00170E  EF8D  F00B         	goto	u3950
  2760   001712  EF8B  F00B         	goto	u3951
  2761   001716                     u3951:
  2762   001716  EFA3  F00B         	goto	l4100
  2763   00171A                     u3950:
  2764   00171A                     
  2765                           ; BSR set to: 0
  2766   00171A  504E               	movf	___fltol@exp1^0,w,c
  2767   00171C  0A80               	xorlw	128
  2768   00171E  0F97               	addlw	151
  2769   001720  B0D8               	btfsc	status,0,c
  2770   001722  EF95  F00B         	goto	u3961
  2771   001726  EF97  F00B         	goto	u3960
  2772   00172A                     u3961:
  2773   00172A  EF99  F00B         	goto	l4096
  2774   00172E                     u3960:
  2775   00172E  EF5B  F00B         	goto	l4076
  2776   001732                     l4096:
  2777   001732  90D8               	bcf	status,0,c
  2778   001734  324C               	rrcf	(___fltol@f1+3)^0,f,c
  2779   001736  324B               	rrcf	(___fltol@f1+2)^0,f,c
  2780   001738  324A               	rrcf	(___fltol@f1+1)^0,f,c
  2781   00173A  3249               	rrcf	___fltol@f1^0,f,c
  2782   00173C  3E4E               	incfsz	___fltol@exp1^0,f,c
  2783   00173E  EF99  F00B         	goto	l4096
  2784   001742  EFBB  F00B         	goto	l4110
  2785   001746                     l4100:
  2786                           
  2787                           ; BSR set to: 0
  2788   001746  0E1F               	movlw	31
  2789   001748  644E               	cpfsgt	___fltol@exp1^0,c
  2790   00174A  EFA9  F00B         	goto	u3971
  2791   00174E  EFAB  F00B         	goto	u3970
  2792   001752                     u3971:
  2793   001752  EFB3  F00B         	goto	l4108
  2794   001756                     u3970:
  2795   001756  EF5B  F00B         	goto	l4076
  2796   00175A                     l4106:
  2797   00175A  90D8               	bcf	status,0,c
  2798   00175C  3649               	rlcf	___fltol@f1^0,f,c
  2799   00175E  364A               	rlcf	(___fltol@f1+1)^0,f,c
  2800   001760  364B               	rlcf	(___fltol@f1+2)^0,f,c
  2801   001762  364C               	rlcf	(___fltol@f1+3)^0,f,c
  2802   001764  064E               	decf	___fltol@exp1^0,f,c
  2803   001766                     l4108:
  2804   001766  504E               	movf	___fltol@exp1^0,w,c
  2805   001768  A4D8               	btfss	status,2,c
  2806   00176A  EFB9  F00B         	goto	u3981
  2807   00176E  EFBB  F00B         	goto	u3980
  2808   001772                     u3981:
  2809   001772  EFAD  F00B         	goto	l4106
  2810   001776                     u3980:
  2811   001776                     l4110:
  2812   001776  504D               	movf	___fltol@sign1^0,w,c
  2813   001778  B4D8               	btfsc	status,2,c
  2814   00177A  EFC1  F00B         	goto	u3991
  2815   00177E  EFC3  F00B         	goto	u3990
  2816   001782                     u3991:
  2817   001782  EFCB  F00B         	goto	l4114
  2818   001786                     u3990:
  2819   001786  1E4C               	comf	(___fltol@f1+3)^0,f,c
  2820   001788  1E4B               	comf	(___fltol@f1+2)^0,f,c
  2821   00178A  1E4A               	comf	(___fltol@f1+1)^0,f,c
  2822   00178C  6C49               	negf	___fltol@f1^0,c
  2823   00178E  0E00               	movlw	0
  2824   001790  224A               	addwfc	(___fltol@f1+1)^0,f,c
  2825   001792  224B               	addwfc	(___fltol@f1+2)^0,f,c
  2826   001794  224C               	addwfc	(___fltol@f1+3)^0,f,c
  2827   001796                     l4114:
  2828   001796  C049  F049         	movff	___fltol@f1,?___fltol
  2829   00179A  C04A  F04A         	movff	___fltol@f1+1,?___fltol+1
  2830   00179E  C04B  F04B         	movff	___fltol@f1+2,?___fltol+2
  2831   0017A2  C04C  F04C         	movff	___fltol@f1+3,?___fltol+3
  2832   0017A6                     l1002:
  2833   0017A6  0012               	return		;funcret
  2834   0017A8                     __end_of___fltol:
  2835                           	callstack 0
  2836                           
  2837 ;; *************** function ___flmul *****************
  2838 ;; Defined at:
  2839 ;;		line 8 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\sprcmul.c"
  2840 ;; Parameters:    Size  Location     Type
  2841 ;;  b               4   47[COMRAM] long 
  2842 ;;  a               4   51[COMRAM] long 
  2843 ;; Auto vars:     Size  Location     Type
  2844 ;;  prod            4   66[COMRAM] struct .
  2845 ;;  grs             4   60[COMRAM] unsigned long 
  2846 ;;  temp            2   70[COMRAM] struct .
  2847 ;;  bexp            1   65[COMRAM] unsigned char 
  2848 ;;  aexp            1   64[COMRAM] unsigned char 
  2849 ;;  sign            1   59[COMRAM] unsigned char 
  2850 ;; Return value:  Size  Location     Type
  2851 ;;                  4   47[COMRAM] unsigned char 
  2852 ;; Registers used:
  2853 ;;		wreg, status,2, status,0, prodl, prodh
  2854 ;; Tracked objects:
  2855 ;;		On entry : 0/0
  2856 ;;		On exit  : 0/0
  2857 ;;		Unchanged: 0/0
  2858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2859 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2860 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2861 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2862 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2863 ;;Total ram usage:       25 bytes
  2864 ;; Hardware stack levels used: 1
  2865 ;; Hardware stack levels required when called: 7
  2866 ;; This function calls:
  2867 ;;		Nothing
  2868 ;; This function is called by:
  2869 ;;		_detect_color
  2870 ;; This function uses a non-reentrant model
  2871 ;;
  2872                           
  2873                           	psect	text5
  2874   000682                     __ptext5:
  2875                           	callstack 0
  2876   000682                     ___flmul:
  2877                           	callstack 22
  2878   000682  5033               	movf	(___flmul@b+3)^0,w,c
  2879   000684  0B80               	andlw	128
  2880   000686  6E3C               	movwf	___flmul@sign^0,c
  2881   000688  5033               	movf	(___flmul@b+3)^0,w,c
  2882   00068A  2433               	addwf	(___flmul@b+3)^0,w,c
  2883   00068C  6E42               	movwf	___flmul@bexp^0,c
  2884   00068E  AE32               	btfss	(___flmul@b+2)^0,7,c
  2885   000690  EF4C  F003         	goto	u2901
  2886   000694  EF4E  F003         	goto	u2900
  2887   000698                     u2901:
  2888   000698  EF4F  F003         	goto	l3466
  2889   00069C                     u2900:
  2890   00069C  8042               	bsf	___flmul@bexp^0,0,c
  2891   00069E                     l3466:
  2892   00069E  5042               	movf	___flmul@bexp^0,w,c
  2893   0006A0  B4D8               	btfsc	status,2,c
  2894   0006A2  EF55  F003         	goto	u2911
  2895   0006A6  EF57  F003         	goto	u2910
  2896   0006AA                     u2911:
  2897   0006AA  EF6A  F003         	goto	l3474
  2898   0006AE                     u2910:
  2899   0006AE  2842               	incf	___flmul@bexp^0,w,c
  2900   0006B0  A4D8               	btfss	status,2,c
  2901   0006B2  EF5D  F003         	goto	u2921
  2902   0006B6  EF5F  F003         	goto	u2920
  2903   0006BA                     u2921:
  2904   0006BA  EF67  F003         	goto	l3472
  2905   0006BE                     u2920:
  2906   0006BE  0E00               	movlw	0
  2907   0006C0  6E30               	movwf	___flmul@b^0,c
  2908   0006C2  0E00               	movlw	0
  2909   0006C4  6E31               	movwf	(___flmul@b+1)^0,c
  2910   0006C6  0E00               	movlw	0
  2911   0006C8  6E32               	movwf	(___flmul@b+2)^0,c
  2912   0006CA  0E00               	movlw	0
  2913   0006CC  6E33               	movwf	(___flmul@b+3)^0,c
  2914   0006CE                     l3472:
  2915   0006CE  8E32               	bsf	(___flmul@b+2)^0,7,c
  2916   0006D0  EF72  F003         	goto	l3476
  2917   0006D4                     l3474:
  2918   0006D4  0E00               	movlw	0
  2919   0006D6  6E30               	movwf	___flmul@b^0,c
  2920   0006D8  0E00               	movlw	0
  2921   0006DA  6E31               	movwf	(___flmul@b+1)^0,c
  2922   0006DC  0E00               	movlw	0
  2923   0006DE  6E32               	movwf	(___flmul@b+2)^0,c
  2924   0006E0  0E00               	movlw	0
  2925   0006E2  6E33               	movwf	(___flmul@b+3)^0,c
  2926   0006E4                     l3476:
  2927   0006E4  5037               	movf	(___flmul@a+3)^0,w,c
  2928   0006E6  0B80               	andlw	128
  2929   0006E8  1A3C               	xorwf	___flmul@sign^0,f,c
  2930   0006EA  5037               	movf	(___flmul@a+3)^0,w,c
  2931   0006EC  2437               	addwf	(___flmul@a+3)^0,w,c
  2932   0006EE  6E41               	movwf	___flmul@aexp^0,c
  2933   0006F0  AE36               	btfss	(___flmul@a+2)^0,7,c
  2934   0006F2  EF7D  F003         	goto	u2931
  2935   0006F6  EF7F  F003         	goto	u2930
  2936   0006FA                     u2931:
  2937   0006FA  EF80  F003         	goto	l3484
  2938   0006FE                     u2930:
  2939   0006FE  8041               	bsf	___flmul@aexp^0,0,c
  2940   000700                     l3484:
  2941   000700  5041               	movf	___flmul@aexp^0,w,c
  2942   000702  B4D8               	btfsc	status,2,c
  2943   000704  EF86  F003         	goto	u2941
  2944   000708  EF88  F003         	goto	u2940
  2945   00070C                     u2941:
  2946   00070C  EF9B  F003         	goto	l3492
  2947   000710                     u2940:
  2948   000710  2841               	incf	___flmul@aexp^0,w,c
  2949   000712  A4D8               	btfss	status,2,c
  2950   000714  EF8E  F003         	goto	u2951
  2951   000718  EF90  F003         	goto	u2950
  2952   00071C                     u2951:
  2953   00071C  EF98  F003         	goto	l3490
  2954   000720                     u2950:
  2955   000720  0E00               	movlw	0
  2956   000722  6E34               	movwf	___flmul@a^0,c
  2957   000724  0E00               	movlw	0
  2958   000726  6E35               	movwf	(___flmul@a+1)^0,c
  2959   000728  0E00               	movlw	0
  2960   00072A  6E36               	movwf	(___flmul@a+2)^0,c
  2961   00072C  0E00               	movlw	0
  2962   00072E  6E37               	movwf	(___flmul@a+3)^0,c
  2963   000730                     l3490:
  2964   000730  8E36               	bsf	(___flmul@a+2)^0,7,c
  2965   000732  EFA3  F003         	goto	l1319
  2966   000736                     l3492:
  2967   000736  0E00               	movlw	0
  2968   000738  6E34               	movwf	___flmul@a^0,c
  2969   00073A  0E00               	movlw	0
  2970   00073C  6E35               	movwf	(___flmul@a+1)^0,c
  2971   00073E  0E00               	movlw	0
  2972   000740  6E36               	movwf	(___flmul@a+2)^0,c
  2973   000742  0E00               	movlw	0
  2974   000744  6E37               	movwf	(___flmul@a+3)^0,c
  2975   000746                     l1319:
  2976   000746  5041               	movf	___flmul@aexp^0,w,c
  2977   000748  B4D8               	btfsc	status,2,c
  2978   00074A  EFA9  F003         	goto	u2961
  2979   00074E  EFAB  F003         	goto	u2960
  2980   000752                     u2961:
  2981   000752  EFB3  F003         	goto	l3496
  2982   000756                     u2960:
  2983   000756  5042               	movf	___flmul@bexp^0,w,c
  2984   000758  A4D8               	btfss	status,2,c
  2985   00075A  EFB1  F003         	goto	u2971
  2986   00075E  EFB3  F003         	goto	u2970
  2987   000762                     u2971:
  2988   000762  EFBD  F003         	goto	l3500
  2989   000766                     u2970:
  2990   000766                     l3496:
  2991   000766  0E00               	movlw	0
  2992   000768  6E30               	movwf	?___flmul^0,c
  2993   00076A  0E00               	movlw	0
  2994   00076C  6E31               	movwf	(?___flmul+1)^0,c
  2995   00076E  0E00               	movlw	0
  2996   000770  6E32               	movwf	(?___flmul+2)^0,c
  2997   000772  0E00               	movlw	0
  2998   000774  6E33               	movwf	(?___flmul+3)^0,c
  2999   000776  EF55  F005         	goto	l1323
  3000   00077A                     l3500:
  3001   00077A  5036               	movf	(___flmul@a+2)^0,w,c
  3002   00077C  0230               	mulwf	___flmul@b^0,c
  3003   00077E  CFF3 F047          	movff	prodl,___flmul@temp
  3004   000782  CFF4 F048          	movff	prodh,___flmul@temp+1
  3005   000786  5047               	movf	___flmul@temp^0,w,c
  3006   000788  6E3D               	movwf	___flmul@grs^0,c
  3007   00078A  6A3E               	clrf	(___flmul@grs+1)^0,c
  3008   00078C  6A3F               	clrf	(___flmul@grs+2)^0,c
  3009   00078E  6A40               	clrf	(___flmul@grs+3)^0,c
  3010   000790  5048               	movf	(___flmul@temp+1)^0,w,c
  3011   000792  6E43               	movwf	___flmul@prod^0,c
  3012   000794  6A44               	clrf	(___flmul@prod+1)^0,c
  3013   000796  6A45               	clrf	(___flmul@prod+2)^0,c
  3014   000798  6A46               	clrf	(___flmul@prod+3)^0,c
  3015   00079A  5035               	movf	(___flmul@a+1)^0,w,c
  3016   00079C  0231               	mulwf	(___flmul@b+1)^0,c
  3017   00079E  CFF3 F047          	movff	prodl,___flmul@temp
  3018   0007A2  CFF4 F048          	movff	prodh,___flmul@temp+1
  3019   0007A6  5047               	movf	___flmul@temp^0,w,c
  3020   0007A8  263D               	addwf	___flmul@grs^0,f,c
  3021   0007AA  0E00               	movlw	0
  3022   0007AC  223E               	addwfc	(___flmul@grs+1)^0,f,c
  3023   0007AE  223F               	addwfc	(___flmul@grs+2)^0,f,c
  3024   0007B0  2240               	addwfc	(___flmul@grs+3)^0,f,c
  3025   0007B2  5048               	movf	(___flmul@temp+1)^0,w,c
  3026   0007B4  2643               	addwf	___flmul@prod^0,f,c
  3027   0007B6  0E00               	movlw	0
  3028   0007B8  2244               	addwfc	(___flmul@prod+1)^0,f,c
  3029   0007BA  2245               	addwfc	(___flmul@prod+2)^0,f,c
  3030   0007BC  2246               	addwfc	(___flmul@prod+3)^0,f,c
  3031   0007BE  5034               	movf	___flmul@a^0,w,c
  3032   0007C0  0232               	mulwf	(___flmul@b+2)^0,c
  3033   0007C2  CFF3 F047          	movff	prodl,___flmul@temp
  3034   0007C6  CFF4 F048          	movff	prodh,___flmul@temp+1
  3035   0007CA  5047               	movf	___flmul@temp^0,w,c
  3036   0007CC  263D               	addwf	___flmul@grs^0,f,c
  3037   0007CE  0E00               	movlw	0
  3038   0007D0  223E               	addwfc	(___flmul@grs+1)^0,f,c
  3039   0007D2  223F               	addwfc	(___flmul@grs+2)^0,f,c
  3040   0007D4  2240               	addwfc	(___flmul@grs+3)^0,f,c
  3041   0007D6  5048               	movf	(___flmul@temp+1)^0,w,c
  3042   0007D8  2643               	addwf	___flmul@prod^0,f,c
  3043   0007DA  0E00               	movlw	0
  3044   0007DC  2244               	addwfc	(___flmul@prod+1)^0,f,c
  3045   0007DE  2245               	addwfc	(___flmul@prod+2)^0,f,c
  3046   0007E0  2246               	addwfc	(___flmul@prod+3)^0,f,c
  3047   0007E2  C03F  F040         	movff	___flmul@grs+2,___flmul@grs+3
  3048   0007E6  C03E  F03F         	movff	___flmul@grs+1,___flmul@grs+2
  3049   0007EA  C03D  F03E         	movff	___flmul@grs,___flmul@grs+1
  3050   0007EE  6A3D               	clrf	___flmul@grs^0,c
  3051   0007F0  5034               	movf	___flmul@a^0,w,c
  3052   0007F2  0231               	mulwf	(___flmul@b+1)^0,c
  3053   0007F4  CFF3 F047          	movff	prodl,___flmul@temp
  3054   0007F8  CFF4 F048          	movff	prodh,___flmul@temp+1
  3055   0007FC  5047               	movf	___flmul@temp^0,w,c
  3056   0007FE  263D               	addwf	___flmul@grs^0,f,c
  3057   000800  5048               	movf	(___flmul@temp+1)^0,w,c
  3058   000802  223E               	addwfc	(___flmul@grs+1)^0,f,c
  3059   000804  0E00               	movlw	0
  3060   000806  223F               	addwfc	(___flmul@grs+2)^0,f,c
  3061   000808  0E00               	movlw	0
  3062   00080A  2240               	addwfc	(___flmul@grs+3)^0,f,c
  3063   00080C  5035               	movf	(___flmul@a+1)^0,w,c
  3064   00080E  0230               	mulwf	___flmul@b^0,c
  3065   000810  CFF3 F047          	movff	prodl,___flmul@temp
  3066   000814  CFF4 F048          	movff	prodh,___flmul@temp+1
  3067   000818  5047               	movf	___flmul@temp^0,w,c
  3068   00081A  263D               	addwf	___flmul@grs^0,f,c
  3069   00081C  5048               	movf	(___flmul@temp+1)^0,w,c
  3070   00081E  223E               	addwfc	(___flmul@grs+1)^0,f,c
  3071   000820  0E00               	movlw	0
  3072   000822  223F               	addwfc	(___flmul@grs+2)^0,f,c
  3073   000824  0E00               	movlw	0
  3074   000826  2240               	addwfc	(___flmul@grs+3)^0,f,c
  3075   000828  C03F  F040         	movff	___flmul@grs+2,___flmul@grs+3
  3076   00082C  C03E  F03F         	movff	___flmul@grs+1,___flmul@grs+2
  3077   000830  C03D  F03E         	movff	___flmul@grs,___flmul@grs+1
  3078   000834  6A3D               	clrf	___flmul@grs^0,c
  3079   000836  5034               	movf	___flmul@a^0,w,c
  3080   000838  0230               	mulwf	___flmul@b^0,c
  3081   00083A  CFF3 F047          	movff	prodl,___flmul@temp
  3082   00083E  CFF4 F048          	movff	prodh,___flmul@temp+1
  3083   000842  5047               	movf	___flmul@temp^0,w,c
  3084   000844  263D               	addwf	___flmul@grs^0,f,c
  3085   000846  5048               	movf	(___flmul@temp+1)^0,w,c
  3086   000848  223E               	addwfc	(___flmul@grs+1)^0,f,c
  3087   00084A  0E00               	movlw	0
  3088   00084C  223F               	addwfc	(___flmul@grs+2)^0,f,c
  3089   00084E  0E00               	movlw	0
  3090   000850  2240               	addwfc	(___flmul@grs+3)^0,f,c
  3091   000852  5036               	movf	(___flmul@a+2)^0,w,c
  3092   000854  0231               	mulwf	(___flmul@b+1)^0,c
  3093   000856  CFF3 F047          	movff	prodl,___flmul@temp
  3094   00085A  CFF4 F048          	movff	prodh,___flmul@temp+1
  3095   00085E  5047               	movf	___flmul@temp^0,w,c
  3096   000860  2643               	addwf	___flmul@prod^0,f,c
  3097   000862  5048               	movf	(___flmul@temp+1)^0,w,c
  3098   000864  2244               	addwfc	(___flmul@prod+1)^0,f,c
  3099   000866  0E00               	movlw	0
  3100   000868  2245               	addwfc	(___flmul@prod+2)^0,f,c
  3101   00086A  0E00               	movlw	0
  3102   00086C  2246               	addwfc	(___flmul@prod+3)^0,f,c
  3103   00086E  5035               	movf	(___flmul@a+1)^0,w,c
  3104   000870  0232               	mulwf	(___flmul@b+2)^0,c
  3105   000872  CFF3 F047          	movff	prodl,___flmul@temp
  3106   000876  CFF4 F048          	movff	prodh,___flmul@temp+1
  3107   00087A  5047               	movf	___flmul@temp^0,w,c
  3108   00087C  2643               	addwf	___flmul@prod^0,f,c
  3109   00087E  5048               	movf	(___flmul@temp+1)^0,w,c
  3110   000880  2244               	addwfc	(___flmul@prod+1)^0,f,c
  3111   000882  0E00               	movlw	0
  3112   000884  2245               	addwfc	(___flmul@prod+2)^0,f,c
  3113   000886  0E00               	movlw	0
  3114   000888  2246               	addwfc	(___flmul@prod+3)^0,f,c
  3115   00088A  5036               	movf	(___flmul@a+2)^0,w,c
  3116   00088C  0232               	mulwf	(___flmul@b+2)^0,c
  3117   00088E  CFF3 F047          	movff	prodl,___flmul@temp
  3118   000892  CFF4 F048          	movff	prodh,___flmul@temp+1
  3119   000896  5047               	movf	___flmul@temp^0,w,c
  3120   000898  6E38               	movwf	??___flmul^0,c
  3121   00089A  5048               	movf	(___flmul@temp+1)^0,w,c
  3122   00089C  6E39               	movwf	(??___flmul+1)^0,c
  3123   00089E  6A3A               	clrf	(??___flmul+2)^0,c
  3124   0008A0  6A3B               	clrf	(??___flmul+3)^0,c
  3125   0008A2  C03A  F03B         	movff	??___flmul+2,??___flmul+3
  3126   0008A6  C039  F03A         	movff	??___flmul+1,??___flmul+2
  3127   0008AA  C038  F039         	movff	??___flmul,??___flmul+1
  3128   0008AE  6A38               	clrf	??___flmul^0,c
  3129   0008B0  5038               	movf	??___flmul^0,w,c
  3130   0008B2  2643               	addwf	___flmul@prod^0,f,c
  3131   0008B4  5039               	movf	(??___flmul+1)^0,w,c
  3132   0008B6  2244               	addwfc	(___flmul@prod+1)^0,f,c
  3133   0008B8  503A               	movf	(??___flmul+2)^0,w,c
  3134   0008BA  2245               	addwfc	(___flmul@prod+2)^0,f,c
  3135   0008BC  503B               	movf	(??___flmul+3)^0,w,c
  3136   0008BE  2246               	addwfc	(___flmul@prod+3)^0,f,c
  3137   0008C0  C03D  F038         	movff	___flmul@grs,??___flmul
  3138   0008C4  C03E  F039         	movff	___flmul@grs+1,??___flmul+1
  3139   0008C8  C03F  F03A         	movff	___flmul@grs+2,??___flmul+2
  3140   0008CC  C040  F03B         	movff	___flmul@grs+3,??___flmul+3
  3141   0008D0  0E19               	movlw	25
  3142   0008D2  EF70  F004         	goto	u2980
  3143   0008D6                     u2985:
  3144   0008D6  90D8               	bcf	status,0,c
  3145   0008D8  323B               	rrcf	(??___flmul+3)^0,f,c
  3146   0008DA  323A               	rrcf	(??___flmul+2)^0,f,c
  3147   0008DC  3239               	rrcf	(??___flmul+1)^0,f,c
  3148   0008DE  3238               	rrcf	??___flmul^0,f,c
  3149   0008E0                     u2980:
  3150   0008E0  2EE8               	decfsz	wreg,f,c
  3151   0008E2  EF6B  F004         	goto	u2985
  3152   0008E6  5038               	movf	??___flmul^0,w,c
  3153   0008E8  2643               	addwf	___flmul@prod^0,f,c
  3154   0008EA  5039               	movf	(??___flmul+1)^0,w,c
  3155   0008EC  2244               	addwfc	(___flmul@prod+1)^0,f,c
  3156   0008EE  503A               	movf	(??___flmul+2)^0,w,c
  3157   0008F0  2245               	addwfc	(___flmul@prod+2)^0,f,c
  3158   0008F2  503B               	movf	(??___flmul+3)^0,w,c
  3159   0008F4  2246               	addwfc	(___flmul@prod+3)^0,f,c
  3160   0008F6  C03F  F040         	movff	___flmul@grs+2,___flmul@grs+3
  3161   0008FA  C03E  F03F         	movff	___flmul@grs+1,___flmul@grs+2
  3162   0008FE  C03D  F03E         	movff	___flmul@grs,___flmul@grs+1
  3163   000902  6A3D               	clrf	___flmul@grs^0,c
  3164   000904  5041               	movf	___flmul@aexp^0,w,c
  3165   000906  C042  F038         	movff	___flmul@bexp,??___flmul
  3166   00090A  6A39               	clrf	(??___flmul+1)^0,c
  3167   00090C  2638               	addwf	??___flmul^0,f,c
  3168   00090E  0E00               	movlw	0
  3169   000910  2239               	addwfc	(??___flmul+1)^0,f,c
  3170   000912  0E82               	movlw	130
  3171   000914  2438               	addwf	??___flmul^0,w,c
  3172   000916  6E47               	movwf	___flmul@temp^0,c
  3173   000918  0EFF               	movlw	255
  3174   00091A  2039               	addwfc	(??___flmul+1)^0,w,c
  3175   00091C  6E48               	movwf	(___flmul@temp+1)^0,c
  3176   00091E  EFA6  F004         	goto	l3548
  3177   000922                     l3542:
  3178   000922  90D8               	bcf	status,0,c
  3179   000924  3643               	rlcf	___flmul@prod^0,f,c
  3180   000926  3644               	rlcf	(___flmul@prod+1)^0,f,c
  3181   000928  3645               	rlcf	(___flmul@prod+2)^0,f,c
  3182   00092A  3646               	rlcf	(___flmul@prod+3)^0,f,c
  3183   00092C  AE40               	btfss	(___flmul@grs+3)^0,7,c
  3184   00092E  EF9B  F004         	goto	u2991
  3185   000932  EF9D  F004         	goto	u2990
  3186   000936                     u2991:
  3187   000936  EF9E  F004         	goto	l1326
  3188   00093A                     u2990:
  3189   00093A  8043               	bsf	___flmul@prod^0,0,c
  3190   00093C                     l1326:
  3191   00093C  90D8               	bcf	status,0,c
  3192   00093E  363D               	rlcf	___flmul@grs^0,f,c
  3193   000940  363E               	rlcf	(___flmul@grs+1)^0,f,c
  3194   000942  363F               	rlcf	(___flmul@grs+2)^0,f,c
  3195   000944  3640               	rlcf	(___flmul@grs+3)^0,f,c
  3196   000946  0647               	decf	___flmul@temp^0,f,c
  3197   000948  A0D8               	btfss	status,0,c
  3198   00094A  0648               	decf	(___flmul@temp+1)^0,f,c
  3199   00094C                     l3548:
  3200   00094C  AE45               	btfss	(___flmul@prod+2)^0,7,c
  3201   00094E  EFAB  F004         	goto	u3001
  3202   000952  EFAD  F004         	goto	u3000
  3203   000956                     u3001:
  3204   000956  EF91  F004         	goto	l3542
  3205   00095A                     u3000:
  3206   00095A  0E00               	movlw	0
  3207   00095C  6E41               	movwf	___flmul@aexp^0,c
  3208   00095E  AE40               	btfss	(___flmul@grs+3)^0,7,c
  3209   000960  EFB4  F004         	goto	u3011
  3210   000964  EFB6  F004         	goto	u3010
  3211   000968                     u3011:
  3212   000968  EFDA  F004         	goto	l1328
  3213   00096C                     u3010:
  3214   00096C  0EFF               	movlw	255
  3215   00096E  143D               	andwf	___flmul@grs^0,w,c
  3216   000970  6E38               	movwf	??___flmul^0,c
  3217   000972  0EFF               	movlw	255
  3218   000974  143E               	andwf	(___flmul@grs+1)^0,w,c
  3219   000976  6E39               	movwf	(??___flmul+1)^0,c
  3220   000978  0EFF               	movlw	255
  3221   00097A  143F               	andwf	(___flmul@grs+2)^0,w,c
  3222   00097C  6E3A               	movwf	(??___flmul+2)^0,c
  3223   00097E  0E7F               	movlw	127
  3224   000980  1440               	andwf	(___flmul@grs+3)^0,w,c
  3225   000982  6E3B               	movwf	(??___flmul+3)^0,c
  3226   000984  5038               	movf	??___flmul^0,w,c
  3227   000986  1039               	iorwf	(??___flmul+1)^0,w,c
  3228   000988  103A               	iorwf	(??___flmul+2)^0,w,c
  3229   00098A  103B               	iorwf	(??___flmul+3)^0,w,c
  3230   00098C  B4D8               	btfsc	status,2,c
  3231   00098E  EFCB  F004         	goto	u3021
  3232   000992  EFCD  F004         	goto	u3020
  3233   000996                     u3021:
  3234   000996  EFD1  F004         	goto	l1329
  3235   00099A                     u3020:
  3236   00099A                     l3556:
  3237   00099A  0E01               	movlw	1
  3238   00099C  6E41               	movwf	___flmul@aexp^0,c
  3239   00099E  EFDA  F004         	goto	l1328
  3240   0009A2                     l1329:
  3241   0009A2  A043               	btfss	___flmul@prod^0,0,c
  3242   0009A4  EFD6  F004         	goto	u3031
  3243   0009A8  EFD8  F004         	goto	u3030
  3244   0009AC                     u3031:
  3245   0009AC  EFDA  F004         	goto	l1328
  3246   0009B0                     u3030:
  3247   0009B0  EFCD  F004         	goto	l3556
  3248   0009B4                     l1328:
  3249   0009B4  5041               	movf	___flmul@aexp^0,w,c
  3250   0009B6  B4D8               	btfsc	status,2,c
  3251   0009B8  EFE0  F004         	goto	u3041
  3252   0009BC  EFE2  F004         	goto	u3040
  3253   0009C0                     u3041:
  3254   0009C0  EF06  F005         	goto	l3568
  3255   0009C4                     u3040:
  3256   0009C4  0E01               	movlw	1
  3257   0009C6  2643               	addwf	___flmul@prod^0,f,c
  3258   0009C8  0E00               	movlw	0
  3259   0009CA  2244               	addwfc	(___flmul@prod+1)^0,f,c
  3260   0009CC  2245               	addwfc	(___flmul@prod+2)^0,f,c
  3261   0009CE  2246               	addwfc	(___flmul@prod+3)^0,f,c
  3262   0009D0  A046               	btfss	(___flmul@prod+3)^0,0,c
  3263   0009D2  EFED  F004         	goto	u3051
  3264   0009D6  EFEF  F004         	goto	u3050
  3265   0009DA                     u3051:
  3266   0009DA  EF06  F005         	goto	l3568
  3267   0009DE                     u3050:
  3268   0009DE  C043  F038         	movff	___flmul@prod,??___flmul
  3269   0009E2  C044  F039         	movff	___flmul@prod+1,??___flmul+1
  3270   0009E6  C045  F03A         	movff	___flmul@prod+2,??___flmul+2
  3271   0009EA  C046  F03B         	movff	___flmul@prod+3,??___flmul+3
  3272   0009EE  343B               	rlcf	(??___flmul+3)^0,w,c
  3273   0009F0  323B               	rrcf	(??___flmul+3)^0,f,c
  3274   0009F2  323A               	rrcf	(??___flmul+2)^0,f,c
  3275   0009F4  3239               	rrcf	(??___flmul+1)^0,f,c
  3276   0009F6  3238               	rrcf	??___flmul^0,f,c
  3277   0009F8  C038  F043         	movff	??___flmul,___flmul@prod
  3278   0009FC  C039  F044         	movff	??___flmul+1,___flmul@prod+1
  3279   000A00  C03A  F045         	movff	??___flmul+2,___flmul@prod+2
  3280   000A04  C03B  F046         	movff	??___flmul+3,___flmul@prod+3
  3281   000A08  4A47               	infsnz	___flmul@temp^0,f,c
  3282   000A0A  2A48               	incf	(___flmul@temp+1)^0,f,c
  3283   000A0C                     l3568:
  3284   000A0C  BE48               	btfsc	(___flmul@temp+1)^0,7,c
  3285   000A0E  EF11  F005         	goto	u3061
  3286   000A12  5048               	movf	(___flmul@temp+1)^0,w,c
  3287   000A14  E108               	bnz	u3060
  3288   000A16  2847               	incf	___flmul@temp^0,w,c
  3289   000A18  A0D8               	btfss	status,0,c
  3290   000A1A  EF11  F005         	goto	u3061
  3291   000A1E  EF13  F005         	goto	u3060
  3292   000A22                     u3061:
  3293   000A22  EF1D  F005         	goto	l3572
  3294   000A26                     u3060:
  3295   000A26  0E00               	movlw	0
  3296   000A28  6E43               	movwf	___flmul@prod^0,c
  3297   000A2A  0E00               	movlw	0
  3298   000A2C  6E44               	movwf	(___flmul@prod+1)^0,c
  3299   000A2E  0E80               	movlw	128
  3300   000A30  6E45               	movwf	(___flmul@prod+2)^0,c
  3301   000A32  0E7F               	movlw	127
  3302   000A34  6E46               	movwf	(___flmul@prod+3)^0,c
  3303   000A36  EF4B  F005         	goto	l3584
  3304   000A3A                     l3572:
  3305   000A3A  BE48               	btfsc	(___flmul@temp+1)^0,7,c
  3306   000A3C  EF2A  F005         	goto	u3070
  3307   000A40  5048               	movf	(___flmul@temp+1)^0,w,c
  3308   000A42  E106               	bnz	u3071
  3309   000A44  0447               	decf	___flmul@temp^0,w,c
  3310   000A46  B0D8               	btfsc	status,0,c
  3311   000A48  EF28  F005         	goto	u3071
  3312   000A4C  EF2A  F005         	goto	u3070
  3313   000A50                     u3071:
  3314   000A50  EF36  F005         	goto	l1336
  3315   000A54                     u3070:
  3316   000A54  0E00               	movlw	0
  3317   000A56  6E43               	movwf	___flmul@prod^0,c
  3318   000A58  0E00               	movlw	0
  3319   000A5A  6E44               	movwf	(___flmul@prod+1)^0,c
  3320   000A5C  0E00               	movlw	0
  3321   000A5E  6E45               	movwf	(___flmul@prod+2)^0,c
  3322   000A60  0E00               	movlw	0
  3323   000A62  6E46               	movwf	(___flmul@prod+3)^0,c
  3324   000A64  0E00               	movlw	0
  3325   000A66  6E3C               	movwf	___flmul@sign^0,c
  3326   000A68  EF4B  F005         	goto	l3584
  3327   000A6C                     l1336:
  3328   000A6C  C047  F042         	movff	___flmul@temp,___flmul@bexp
  3329   000A70  0EFF               	movlw	255
  3330   000A72  1643               	andwf	___flmul@prod^0,f,c
  3331   000A74  0EFF               	movlw	255
  3332   000A76  1644               	andwf	(___flmul@prod+1)^0,f,c
  3333   000A78  0E7F               	movlw	127
  3334   000A7A  1645               	andwf	(___flmul@prod+2)^0,f,c
  3335   000A7C  0E00               	movlw	0
  3336   000A7E  1646               	andwf	(___flmul@prod+3)^0,f,c
  3337   000A80  A042               	btfss	___flmul@bexp^0,0,c
  3338   000A82  EF45  F005         	goto	u3081
  3339   000A86  EF47  F005         	goto	u3080
  3340   000A8A                     u3081:
  3341   000A8A  EF48  F005         	goto	l3582
  3342   000A8E                     u3080:
  3343   000A8E  8E45               	bsf	(___flmul@prod+2)^0,7,c
  3344   000A90                     l3582:
  3345   000A90  90D8               	bcf	status,0,c
  3346   000A92  3042               	rrcf	___flmul@bexp^0,w,c
  3347   000A94  6E46               	movwf	(___flmul@prod+3)^0,c
  3348   000A96                     l3584:
  3349   000A96  503C               	movf	___flmul@sign^0,w,c
  3350   000A98  1246               	iorwf	(___flmul@prod+3)^0,f,c
  3351   000A9A  C043  F030         	movff	___flmul@prod,?___flmul
  3352   000A9E  C044  F031         	movff	___flmul@prod+1,?___flmul+1
  3353   000AA2  C045  F032         	movff	___flmul@prod+2,?___flmul+2
  3354   000AA6  C046  F033         	movff	___flmul@prod+3,?___flmul+3
  3355   000AAA                     l1323:
  3356   000AAA  0012               	return		;funcret
  3357   000AAC                     __end_of___flmul:
  3358                           	callstack 0
  3359                           
  3360 ;; *************** function ___fldiv *****************
  3361 ;; Defined at:
  3362 ;;		line 11 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\sprcdiv.c"
  3363 ;; Parameters:    Size  Location     Type
  3364 ;;  b               4   22[COMRAM] unsigned char 
  3365 ;;  a               4   26[COMRAM] unsigned char 
  3366 ;; Auto vars:     Size  Location     Type
  3367 ;;  grs             4   41[COMRAM] unsigned long 
  3368 ;;  rem             4   34[COMRAM] unsigned long 
  3369 ;;  new_exp         2   39[COMRAM] short 
  3370 ;;  aexp            1   46[COMRAM] unsigned char 
  3371 ;;  bexp            1   45[COMRAM] unsigned char 
  3372 ;;  sign            1   38[COMRAM] unsigned char 
  3373 ;; Return value:  Size  Location     Type
  3374 ;;                  4   22[COMRAM] unsigned char 
  3375 ;; Registers used:
  3376 ;;		wreg, status,2, status,0
  3377 ;; Tracked objects:
  3378 ;;		On entry : 0/0
  3379 ;;		On exit  : 0/0
  3380 ;;		Unchanged: 0/0
  3381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3382 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3383 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3384 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3385 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3386 ;;Total ram usage:       25 bytes
  3387 ;; Hardware stack levels used: 1
  3388 ;; Hardware stack levels required when called: 7
  3389 ;; This function calls:
  3390 ;;		Nothing
  3391 ;; This function is called by:
  3392 ;;		_detect_color
  3393 ;; This function uses a non-reentrant model
  3394 ;;
  3395                           
  3396                           	psect	text6
  3397   000AAC                     __ptext6:
  3398                           	callstack 0
  3399   000AAC                     ___fldiv:
  3400                           	callstack 22
  3401   000AAC  501A               	movf	(___fldiv@b+3)^0,w,c
  3402   000AAE  0B80               	andlw	128
  3403   000AB0  6E27               	movwf	___fldiv@sign^0,c
  3404   000AB2  501A               	movf	(___fldiv@b+3)^0,w,c
  3405   000AB4  241A               	addwf	(___fldiv@b+3)^0,w,c
  3406   000AB6  6E2E               	movwf	___fldiv@bexp^0,c
  3407   000AB8  AE19               	btfss	(___fldiv@b+2)^0,7,c
  3408   000ABA  EF61  F005         	goto	u2671
  3409   000ABE  EF63  F005         	goto	u2670
  3410   000AC2                     u2671:
  3411   000AC2  EF64  F005         	goto	l3328
  3412   000AC6                     u2670:
  3413   000AC6  802E               	bsf	___fldiv@bexp^0,0,c
  3414   000AC8                     l3328:
  3415   000AC8  502E               	movf	___fldiv@bexp^0,w,c
  3416   000ACA  B4D8               	btfsc	status,2,c
  3417   000ACC  EF6A  F005         	goto	u2681
  3418   000AD0  EF6C  F005         	goto	u2680
  3419   000AD4                     u2681:
  3420   000AD4  EF81  F005         	goto	l3338
  3421   000AD8                     u2680:
  3422   000AD8  282E               	incf	___fldiv@bexp^0,w,c
  3423   000ADA  A4D8               	btfss	status,2,c
  3424   000ADC  EF72  F005         	goto	u2691
  3425   000AE0  EF74  F005         	goto	u2690
  3426   000AE4                     u2691:
  3427   000AE4  EF7C  F005         	goto	l3334
  3428   000AE8                     u2690:
  3429   000AE8  0E00               	movlw	0
  3430   000AEA  6E17               	movwf	___fldiv@b^0,c
  3431   000AEC  0E00               	movlw	0
  3432   000AEE  6E18               	movwf	(___fldiv@b+1)^0,c
  3433   000AF0  0E00               	movlw	0
  3434   000AF2  6E19               	movwf	(___fldiv@b+2)^0,c
  3435   000AF4  0E00               	movlw	0
  3436   000AF6  6E1A               	movwf	(___fldiv@b+3)^0,c
  3437   000AF8                     l3334:
  3438   000AF8  8E19               	bsf	(___fldiv@b+2)^0,7,c
  3439   000AFA  0E00               	movlw	0
  3440   000AFC  6E1A               	movwf	(___fldiv@b+3)^0,c
  3441   000AFE  EF89  F005         	goto	l3340
  3442   000B02                     l3338:
  3443   000B02  0E00               	movlw	0
  3444   000B04  6E17               	movwf	___fldiv@b^0,c
  3445   000B06  0E00               	movlw	0
  3446   000B08  6E18               	movwf	(___fldiv@b+1)^0,c
  3447   000B0A  0E00               	movlw	0
  3448   000B0C  6E19               	movwf	(___fldiv@b+2)^0,c
  3449   000B0E  0E00               	movlw	0
  3450   000B10  6E1A               	movwf	(___fldiv@b+3)^0,c
  3451   000B12                     l3340:
  3452   000B12  501E               	movf	(___fldiv@a+3)^0,w,c
  3453   000B14  0B80               	andlw	128
  3454   000B16  1A27               	xorwf	___fldiv@sign^0,f,c
  3455   000B18  501E               	movf	(___fldiv@a+3)^0,w,c
  3456   000B1A  241E               	addwf	(___fldiv@a+3)^0,w,c
  3457   000B1C  6E2F               	movwf	___fldiv@aexp^0,c
  3458   000B1E  AE1D               	btfss	(___fldiv@a+2)^0,7,c
  3459   000B20  EF94  F005         	goto	u2701
  3460   000B24  EF96  F005         	goto	u2700
  3461   000B28                     u2701:
  3462   000B28  EF97  F005         	goto	l3348
  3463   000B2C                     u2700:
  3464   000B2C  802F               	bsf	___fldiv@aexp^0,0,c
  3465   000B2E                     l3348:
  3466   000B2E  502F               	movf	___fldiv@aexp^0,w,c
  3467   000B30  B4D8               	btfsc	status,2,c
  3468   000B32  EF9D  F005         	goto	u2711
  3469   000B36  EF9F  F005         	goto	u2710
  3470   000B3A                     u2711:
  3471   000B3A  EFB4  F005         	goto	l3358
  3472   000B3E                     u2710:
  3473   000B3E  282F               	incf	___fldiv@aexp^0,w,c
  3474   000B40  A4D8               	btfss	status,2,c
  3475   000B42  EFA5  F005         	goto	u2721
  3476   000B46  EFA7  F005         	goto	u2720
  3477   000B4A                     u2721:
  3478   000B4A  EFAF  F005         	goto	l3354
  3479   000B4E                     u2720:
  3480   000B4E  0E00               	movlw	0
  3481   000B50  6E1B               	movwf	___fldiv@a^0,c
  3482   000B52  0E00               	movlw	0
  3483   000B54  6E1C               	movwf	(___fldiv@a+1)^0,c
  3484   000B56  0E00               	movlw	0
  3485   000B58  6E1D               	movwf	(___fldiv@a+2)^0,c
  3486   000B5A  0E00               	movlw	0
  3487   000B5C  6E1E               	movwf	(___fldiv@a+3)^0,c
  3488   000B5E                     l3354:
  3489   000B5E  8E1D               	bsf	(___fldiv@a+2)^0,7,c
  3490   000B60  0E00               	movlw	0
  3491   000B62  6E1E               	movwf	(___fldiv@a+3)^0,c
  3492   000B64  EFBC  F005         	goto	l3360
  3493   000B68                     l3358:
  3494   000B68  0E00               	movlw	0
  3495   000B6A  6E1B               	movwf	___fldiv@a^0,c
  3496   000B6C  0E00               	movlw	0
  3497   000B6E  6E1C               	movwf	(___fldiv@a+1)^0,c
  3498   000B70  0E00               	movlw	0
  3499   000B72  6E1D               	movwf	(___fldiv@a+2)^0,c
  3500   000B74  0E00               	movlw	0
  3501   000B76  6E1E               	movwf	(___fldiv@a+3)^0,c
  3502   000B78                     l3360:
  3503   000B78  501B               	movf	___fldiv@a^0,w,c
  3504   000B7A  101C               	iorwf	(___fldiv@a+1)^0,w,c
  3505   000B7C  101D               	iorwf	(___fldiv@a+2)^0,w,c
  3506   000B7E  101E               	iorwf	(___fldiv@a+3)^0,w,c
  3507   000B80  A4D8               	btfss	status,2,c
  3508   000B82  EFC5  F005         	goto	u2731
  3509   000B86  EFC7  F005         	goto	u2730
  3510   000B8A                     u2731:
  3511   000B8A  EFDF  F005         	goto	l3372
  3512   000B8E                     u2730:
  3513   000B8E  0E00               	movlw	0
  3514   000B90  6E17               	movwf	___fldiv@b^0,c
  3515   000B92  0E00               	movlw	0
  3516   000B94  6E18               	movwf	(___fldiv@b+1)^0,c
  3517   000B96  0E00               	movlw	0
  3518   000B98  6E19               	movwf	(___fldiv@b+2)^0,c
  3519   000B9A  0E00               	movlw	0
  3520   000B9C  6E1A               	movwf	(___fldiv@b+3)^0,c
  3521   000B9E  0E80               	movlw	128
  3522   000BA0  1219               	iorwf	(___fldiv@b+2)^0,f,c
  3523   000BA2  0E7F               	movlw	127
  3524   000BA4  121A               	iorwf	(___fldiv@b+3)^0,f,c
  3525   000BA6                     l3366:
  3526   000BA6  5027               	movf	___fldiv@sign^0,w,c
  3527   000BA8  121A               	iorwf	(___fldiv@b+3)^0,f,c
  3528   000BAA  C017  F017         	movff	___fldiv@b,?___fldiv
  3529   000BAE  C018  F018         	movff	___fldiv@b+1,?___fldiv+1
  3530   000BB2  C019  F019         	movff	___fldiv@b+2,?___fldiv+2
  3531   000BB6  C01A  F01A         	movff	___fldiv@b+3,?___fldiv+3
  3532   000BBA  EF22  F007         	goto	l1287
  3533   000BBE                     l3372:
  3534   000BBE  502E               	movf	___fldiv@bexp^0,w,c
  3535   000BC0  A4D8               	btfss	status,2,c
  3536   000BC2  EFE5  F005         	goto	u2741
  3537   000BC6  EFE7  F005         	goto	u2740
  3538   000BCA                     u2741:
  3539   000BCA  EFF1  F005         	goto	l3380
  3540   000BCE                     u2740:
  3541   000BCE  0E00               	movlw	0
  3542   000BD0  6E17               	movwf	?___fldiv^0,c
  3543   000BD2  0E00               	movlw	0
  3544   000BD4  6E18               	movwf	(?___fldiv+1)^0,c
  3545   000BD6  0E00               	movlw	0
  3546   000BD8  6E19               	movwf	(?___fldiv+2)^0,c
  3547   000BDA  0E00               	movlw	0
  3548   000BDC  6E1A               	movwf	(?___fldiv+3)^0,c
  3549   000BDE  EF22  F007         	goto	l1287
  3550   000BE2                     l3380:
  3551   000BE2  502F               	movf	___fldiv@aexp^0,w,c
  3552   000BE4  C02E  F01F         	movff	___fldiv@bexp,??___fldiv
  3553   000BE8  6A20               	clrf	(??___fldiv+1)^0,c
  3554   000BEA  5E1F               	subwf	??___fldiv^0,f,c
  3555   000BEC  0E00               	movlw	0
  3556   000BEE  5A20               	subwfb	(??___fldiv+1)^0,f,c
  3557   000BF0  0E7F               	movlw	127
  3558   000BF2  241F               	addwf	??___fldiv^0,w,c
  3559   000BF4  6E28               	movwf	___fldiv@new_exp^0,c
  3560   000BF6  0E00               	movlw	0
  3561   000BF8  2020               	addwfc	(??___fldiv+1)^0,w,c
  3562   000BFA  6E29               	movwf	(___fldiv@new_exp+1)^0,c
  3563   000BFC  C017  F023         	movff	___fldiv@b,___fldiv@rem
  3564   000C00  C018  F024         	movff	___fldiv@b+1,___fldiv@rem+1
  3565   000C04  C019  F025         	movff	___fldiv@b+2,___fldiv@rem+2
  3566   000C08  C01A  F026         	movff	___fldiv@b+3,___fldiv@rem+3
  3567   000C0C  0E00               	movlw	0
  3568   000C0E  6E17               	movwf	___fldiv@b^0,c
  3569   000C10  0E00               	movlw	0
  3570   000C12  6E18               	movwf	(___fldiv@b+1)^0,c
  3571   000C14  0E00               	movlw	0
  3572   000C16  6E19               	movwf	(___fldiv@b+2)^0,c
  3573   000C18  0E00               	movlw	0
  3574   000C1A  6E1A               	movwf	(___fldiv@b+3)^0,c
  3575   000C1C  0E00               	movlw	0
  3576   000C1E  6E2A               	movwf	___fldiv@grs^0,c
  3577   000C20  0E00               	movlw	0
  3578   000C22  6E2B               	movwf	(___fldiv@grs+1)^0,c
  3579   000C24  0E00               	movlw	0
  3580   000C26  6E2C               	movwf	(___fldiv@grs+2)^0,c
  3581   000C28  0E00               	movlw	0
  3582   000C2A  6E2D               	movwf	(___fldiv@grs+3)^0,c
  3583   000C2C  0E00               	movlw	0
  3584   000C2E  6E2F               	movwf	___fldiv@aexp^0,c
  3585   000C30  EF52  F006         	goto	l1289
  3586   000C34                     l3390:
  3587   000C34  502F               	movf	___fldiv@aexp^0,w,c
  3588   000C36  B4D8               	btfsc	status,2,c
  3589   000C38  EF20  F006         	goto	u2751
  3590   000C3C  EF22  F006         	goto	u2750
  3591   000C40                     u2751:
  3592   000C40  EF39  F006         	goto	l3398
  3593   000C44                     u2750:
  3594   000C44  90D8               	bcf	status,0,c
  3595   000C46  3623               	rlcf	___fldiv@rem^0,f,c
  3596   000C48  3624               	rlcf	(___fldiv@rem+1)^0,f,c
  3597   000C4A  3625               	rlcf	(___fldiv@rem+2)^0,f,c
  3598   000C4C  3626               	rlcf	(___fldiv@rem+3)^0,f,c
  3599   000C4E  90D8               	bcf	status,0,c
  3600   000C50  3617               	rlcf	___fldiv@b^0,f,c
  3601   000C52  3618               	rlcf	(___fldiv@b+1)^0,f,c
  3602   000C54  3619               	rlcf	(___fldiv@b+2)^0,f,c
  3603   000C56  361A               	rlcf	(___fldiv@b+3)^0,f,c
  3604   000C58  AE2D               	btfss	(___fldiv@grs+3)^0,7,c
  3605   000C5A  EF31  F006         	goto	u2761
  3606   000C5E  EF33  F006         	goto	u2760
  3607   000C62                     u2761:
  3608   000C62  EF34  F006         	goto	l1292
  3609   000C66                     u2760:
  3610   000C66  8017               	bsf	___fldiv@b^0,0,c
  3611   000C68                     l1292:
  3612   000C68  90D8               	bcf	status,0,c
  3613   000C6A  362A               	rlcf	___fldiv@grs^0,f,c
  3614   000C6C  362B               	rlcf	(___fldiv@grs+1)^0,f,c
  3615   000C6E  362C               	rlcf	(___fldiv@grs+2)^0,f,c
  3616   000C70  362D               	rlcf	(___fldiv@grs+3)^0,f,c
  3617   000C72                     l3398:
  3618   000C72  501B               	movf	___fldiv@a^0,w,c
  3619   000C74  5C23               	subwf	___fldiv@rem^0,w,c
  3620   000C76  501C               	movf	(___fldiv@a+1)^0,w,c
  3621   000C78  5824               	subwfb	(___fldiv@rem+1)^0,w,c
  3622   000C7A  501D               	movf	(___fldiv@a+2)^0,w,c
  3623   000C7C  5825               	subwfb	(___fldiv@rem+2)^0,w,c
  3624   000C7E  501E               	movf	(___fldiv@a+3)^0,w,c
  3625   000C80  5826               	subwfb	(___fldiv@rem+3)^0,w,c
  3626   000C82  A0D8               	btfss	status,0,c
  3627   000C84  EF46  F006         	goto	u2771
  3628   000C88  EF48  F006         	goto	u2770
  3629   000C8C                     u2771:
  3630   000C8C  EF51  F006         	goto	l3404
  3631   000C90                     u2770:
  3632   000C90  8C2D               	bsf	(___fldiv@grs+3)^0,6,c
  3633   000C92  501B               	movf	___fldiv@a^0,w,c
  3634   000C94  5E23               	subwf	___fldiv@rem^0,f,c
  3635   000C96  501C               	movf	(___fldiv@a+1)^0,w,c
  3636   000C98  5A24               	subwfb	(___fldiv@rem+1)^0,f,c
  3637   000C9A  501D               	movf	(___fldiv@a+2)^0,w,c
  3638   000C9C  5A25               	subwfb	(___fldiv@rem+2)^0,f,c
  3639   000C9E  501E               	movf	(___fldiv@a+3)^0,w,c
  3640   000CA0  5A26               	subwfb	(___fldiv@rem+3)^0,f,c
  3641   000CA2                     l3404:
  3642   000CA2  2A2F               	incf	___fldiv@aexp^0,f,c
  3643   000CA4                     l1289:
  3644   000CA4  0E19               	movlw	25
  3645   000CA6  642F               	cpfsgt	___fldiv@aexp^0,c
  3646   000CA8  EF58  F006         	goto	u2781
  3647   000CAC  EF5A  F006         	goto	u2780
  3648   000CB0                     u2781:
  3649   000CB0  EF1A  F006         	goto	l3390
  3650   000CB4                     u2780:
  3651   000CB4  5023               	movf	___fldiv@rem^0,w,c
  3652   000CB6  1024               	iorwf	(___fldiv@rem+1)^0,w,c
  3653   000CB8  1025               	iorwf	(___fldiv@rem+2)^0,w,c
  3654   000CBA  1026               	iorwf	(___fldiv@rem+3)^0,w,c
  3655   000CBC  B4D8               	btfsc	status,2,c
  3656   000CBE  EF63  F006         	goto	u2791
  3657   000CC2  EF65  F006         	goto	u2790
  3658   000CC6                     u2791:
  3659   000CC6  EF7D  F006         	goto	l3416
  3660   000CCA                     u2790:
  3661   000CCA  802A               	bsf	___fldiv@grs^0,0,c
  3662   000CCC  EF7D  F006         	goto	l3416
  3663   000CD0                     l3410:
  3664   000CD0  90D8               	bcf	status,0,c
  3665   000CD2  3617               	rlcf	___fldiv@b^0,f,c
  3666   000CD4  3618               	rlcf	(___fldiv@b+1)^0,f,c
  3667   000CD6  3619               	rlcf	(___fldiv@b+2)^0,f,c
  3668   000CD8  361A               	rlcf	(___fldiv@b+3)^0,f,c
  3669   000CDA  AE2D               	btfss	(___fldiv@grs+3)^0,7,c
  3670   000CDC  EF72  F006         	goto	u2801
  3671   000CE0  EF74  F006         	goto	u2800
  3672   000CE4                     u2801:
  3673   000CE4  EF75  F006         	goto	l1298
  3674   000CE8                     u2800:
  3675   000CE8  8017               	bsf	___fldiv@b^0,0,c
  3676   000CEA                     l1298:
  3677   000CEA  90D8               	bcf	status,0,c
  3678   000CEC  362A               	rlcf	___fldiv@grs^0,f,c
  3679   000CEE  362B               	rlcf	(___fldiv@grs+1)^0,f,c
  3680   000CF0  362C               	rlcf	(___fldiv@grs+2)^0,f,c
  3681   000CF2  362D               	rlcf	(___fldiv@grs+3)^0,f,c
  3682   000CF4  0628               	decf	___fldiv@new_exp^0,f,c
  3683   000CF6  A0D8               	btfss	status,0,c
  3684   000CF8  0629               	decf	(___fldiv@new_exp+1)^0,f,c
  3685   000CFA                     l3416:
  3686   000CFA  AE19               	btfss	(___fldiv@b+2)^0,7,c
  3687   000CFC  EF82  F006         	goto	u2811
  3688   000D00  EF84  F006         	goto	u2810
  3689   000D04                     u2811:
  3690   000D04  EF68  F006         	goto	l3410
  3691   000D08                     u2810:
  3692   000D08  0E00               	movlw	0
  3693   000D0A  6E2F               	movwf	___fldiv@aexp^0,c
  3694   000D0C  AE2D               	btfss	(___fldiv@grs+3)^0,7,c
  3695   000D0E  EF8B  F006         	goto	u2821
  3696   000D12  EF8D  F006         	goto	u2820
  3697   000D16                     u2821:
  3698   000D16  EFB1  F006         	goto	l1300
  3699   000D1A                     u2820:
  3700   000D1A  0EFF               	movlw	255
  3701   000D1C  142A               	andwf	___fldiv@grs^0,w,c
  3702   000D1E  6E1F               	movwf	??___fldiv^0,c
  3703   000D20  0EFF               	movlw	255
  3704   000D22  142B               	andwf	(___fldiv@grs+1)^0,w,c
  3705   000D24  6E20               	movwf	(??___fldiv+1)^0,c
  3706   000D26  0EFF               	movlw	255
  3707   000D28  142C               	andwf	(___fldiv@grs+2)^0,w,c
  3708   000D2A  6E21               	movwf	(??___fldiv+2)^0,c
  3709   000D2C  0E7F               	movlw	127
  3710   000D2E  142D               	andwf	(___fldiv@grs+3)^0,w,c
  3711   000D30  6E22               	movwf	(??___fldiv+3)^0,c
  3712   000D32  501F               	movf	??___fldiv^0,w,c
  3713   000D34  1020               	iorwf	(??___fldiv+1)^0,w,c
  3714   000D36  1021               	iorwf	(??___fldiv+2)^0,w,c
  3715   000D38  1022               	iorwf	(??___fldiv+3)^0,w,c
  3716   000D3A  B4D8               	btfsc	status,2,c
  3717   000D3C  EFA2  F006         	goto	u2831
  3718   000D40  EFA4  F006         	goto	u2830
  3719   000D44                     u2831:
  3720   000D44  EFA8  F006         	goto	l1301
  3721   000D48                     u2830:
  3722   000D48                     l3424:
  3723   000D48  0E01               	movlw	1
  3724   000D4A  6E2F               	movwf	___fldiv@aexp^0,c
  3725   000D4C  EFB1  F006         	goto	l1300
  3726   000D50                     l1301:
  3727   000D50  A017               	btfss	___fldiv@b^0,0,c
  3728   000D52  EFAD  F006         	goto	u2841
  3729   000D56  EFAF  F006         	goto	u2840
  3730   000D5A                     u2841:
  3731   000D5A  EFB1  F006         	goto	l1300
  3732   000D5E                     u2840:
  3733   000D5E  EFA4  F006         	goto	l3424
  3734   000D62                     l1300:
  3735   000D62  502F               	movf	___fldiv@aexp^0,w,c
  3736   000D64  B4D8               	btfsc	status,2,c
  3737   000D66  EFB7  F006         	goto	u2851
  3738   000D6A  EFB9  F006         	goto	u2850
  3739   000D6E                     u2851:
  3740   000D6E  EFDD  F006         	goto	l3436
  3741   000D72                     u2850:
  3742   000D72  0E01               	movlw	1
  3743   000D74  2617               	addwf	___fldiv@b^0,f,c
  3744   000D76  0E00               	movlw	0
  3745   000D78  2218               	addwfc	(___fldiv@b+1)^0,f,c
  3746   000D7A  2219               	addwfc	(___fldiv@b+2)^0,f,c
  3747   000D7C  221A               	addwfc	(___fldiv@b+3)^0,f,c
  3748   000D7E  A01A               	btfss	(___fldiv@b+3)^0,0,c
  3749   000D80  EFC4  F006         	goto	u2861
  3750   000D84  EFC6  F006         	goto	u2860
  3751   000D88                     u2861:
  3752   000D88  EFDD  F006         	goto	l3436
  3753   000D8C                     u2860:
  3754   000D8C  C017  F01F         	movff	___fldiv@b,??___fldiv
  3755   000D90  C018  F020         	movff	___fldiv@b+1,??___fldiv+1
  3756   000D94  C019  F021         	movff	___fldiv@b+2,??___fldiv+2
  3757   000D98  C01A  F022         	movff	___fldiv@b+3,??___fldiv+3
  3758   000D9C  3422               	rlcf	(??___fldiv+3)^0,w,c
  3759   000D9E  3222               	rrcf	(??___fldiv+3)^0,f,c
  3760   000DA0  3221               	rrcf	(??___fldiv+2)^0,f,c
  3761   000DA2  3220               	rrcf	(??___fldiv+1)^0,f,c
  3762   000DA4  321F               	rrcf	??___fldiv^0,f,c
  3763   000DA6  C01F  F017         	movff	??___fldiv,___fldiv@b
  3764   000DAA  C020  F018         	movff	??___fldiv+1,___fldiv@b+1
  3765   000DAE  C021  F019         	movff	??___fldiv+2,___fldiv@b+2
  3766   000DB2  C022  F01A         	movff	??___fldiv+3,___fldiv@b+3
  3767   000DB6  4A28               	infsnz	___fldiv@new_exp^0,f,c
  3768   000DB8  2A29               	incf	(___fldiv@new_exp+1)^0,f,c
  3769   000DBA                     l3436:
  3770   000DBA  BE29               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3771   000DBC  EFE8  F006         	goto	u2871
  3772   000DC0  5029               	movf	(___fldiv@new_exp+1)^0,w,c
  3773   000DC2  E108               	bnz	u2870
  3774   000DC4  2828               	incf	___fldiv@new_exp^0,w,c
  3775   000DC6  A0D8               	btfss	status,0,c
  3776   000DC8  EFE8  F006         	goto	u2871
  3777   000DCC  EFEA  F006         	goto	u2870
  3778   000DD0                     u2871:
  3779   000DD0  EFF5  F006         	goto	l3440
  3780   000DD4                     u2870:
  3781   000DD4  0E00               	movlw	0
  3782   000DD6  6E29               	movwf	(___fldiv@new_exp+1)^0,c
  3783   000DD8  6828               	setf	___fldiv@new_exp^0,c
  3784   000DDA  0E00               	movlw	0
  3785   000DDC  6E17               	movwf	___fldiv@b^0,c
  3786   000DDE  0E00               	movlw	0
  3787   000DE0  6E18               	movwf	(___fldiv@b+1)^0,c
  3788   000DE2  0E00               	movlw	0
  3789   000DE4  6E19               	movwf	(___fldiv@b+2)^0,c
  3790   000DE6  0E00               	movlw	0
  3791   000DE8  6E1A               	movwf	(___fldiv@b+3)^0,c
  3792   000DEA                     l3440:
  3793   000DEA  BE29               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3794   000DEC  EF02  F007         	goto	u2880
  3795   000DF0  5029               	movf	(___fldiv@new_exp+1)^0,w,c
  3796   000DF2  E106               	bnz	u2881
  3797   000DF4  0428               	decf	___fldiv@new_exp^0,w,c
  3798   000DF6  B0D8               	btfsc	status,0,c
  3799   000DF8  EF00  F007         	goto	u2881
  3800   000DFC  EF02  F007         	goto	u2880
  3801   000E00                     u2881:
  3802   000E00  EF10  F007         	goto	l3444
  3803   000E04                     u2880:
  3804   000E04  0E00               	movlw	0
  3805   000E06  6E29               	movwf	(___fldiv@new_exp+1)^0,c
  3806   000E08  0E00               	movlw	0
  3807   000E0A  6E28               	movwf	___fldiv@new_exp^0,c
  3808   000E0C  0E00               	movlw	0
  3809   000E0E  6E17               	movwf	___fldiv@b^0,c
  3810   000E10  0E00               	movlw	0
  3811   000E12  6E18               	movwf	(___fldiv@b+1)^0,c
  3812   000E14  0E00               	movlw	0
  3813   000E16  6E19               	movwf	(___fldiv@b+2)^0,c
  3814   000E18  0E00               	movlw	0
  3815   000E1A  6E1A               	movwf	(___fldiv@b+3)^0,c
  3816   000E1C  0E00               	movlw	0
  3817   000E1E  6E27               	movwf	___fldiv@sign^0,c
  3818   000E20                     l3444:
  3819   000E20  C028  F02E         	movff	___fldiv@new_exp,___fldiv@bexp
  3820   000E24  A02E               	btfss	___fldiv@bexp^0,0,c
  3821   000E26  EF17  F007         	goto	u2891
  3822   000E2A  EF19  F007         	goto	u2890
  3823   000E2E                     u2891:
  3824   000E2E  EF1C  F007         	goto	l3450
  3825   000E32                     u2890:
  3826   000E32  8E19               	bsf	(___fldiv@b+2)^0,7,c
  3827   000E34  EF1D  F007         	goto	l3452
  3828   000E38                     l3450:
  3829   000E38  9E19               	bcf	(___fldiv@b+2)^0,7,c
  3830   000E3A                     l3452:
  3831   000E3A  90D8               	bcf	status,0,c
  3832   000E3C  302E               	rrcf	___fldiv@bexp^0,w,c
  3833   000E3E  6E1A               	movwf	(___fldiv@b+3)^0,c
  3834   000E40  EFD3  F005         	goto	l3366
  3835   000E44                     l1287:
  3836   000E44  0012               	return		;funcret
  3837   000E46                     __end_of___fldiv:
  3838                           	callstack 0
  3839                           
  3840 ;; *************** function _color_click_init *****************
  3841 ;; Defined at:
  3842 ;;		line 6 in file "color.c"
  3843 ;; Parameters:    Size  Location     Type
  3844 ;;		None
  3845 ;; Auto vars:     Size  Location     Type
  3846 ;;		None
  3847 ;; Return value:  Size  Location     Type
  3848 ;;                  1    wreg      void 
  3849 ;; Registers used:
  3850 ;;		wreg, status,2, status,0, cstack
  3851 ;; Tracked objects:
  3852 ;;		On entry : 0/0
  3853 ;;		On exit  : 0/0
  3854 ;;		Unchanged: 0/0
  3855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3858 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3859 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3860 ;;Total ram usage:        1 bytes
  3861 ;; Hardware stack levels used: 1
  3862 ;; Hardware stack levels required when called: 10
  3863 ;; This function calls:
  3864 ;;		_I2C_2_Master_Init
  3865 ;;		_color_writetoaddr
  3866 ;; This function is called by:
  3867 ;;		_main
  3868 ;; This function uses a non-reentrant model
  3869 ;;
  3870                           
  3871                           	psect	text7
  3872   002892                     __ptext7:
  3873                           	callstack 0
  3874   002892                     _color_click_init:
  3875                           	callstack 20
  3876   002892                     
  3877                           ;color.c: 9:     I2C_2_Master_Init();
  3878   002892  EC7C  F014         	call	_I2C_2_Master_Init	;wreg free
  3879   002896                     
  3880                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  3881   002896  0E01               	movlw	1
  3882   002898  6E0B               	movwf	color_writetoaddr@value^0,c
  3883   00289A  0E00               	movlw	0
  3884   00289C  ECFF  F014         	call	_color_writetoaddr
  3885   0028A0                     
  3886                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3887   0028A0  0E3F               	movlw	63
  3888   0028A2  6E0D               	movwf	??_color_click_init^0,c
  3889   0028A4  0E55               	movlw	85
  3890   0028A6                     u4597:
  3891   0028A6  2EE8               	decfsz	wreg,f,c
  3892   0028A8  D7FE               	bra	u4597
  3893   0028AA  2E0D               	decfsz	??_color_click_init^0,f,c
  3894   0028AC  D7FC               	bra	u4597
  3895   0028AE  F000               	nop	
  3896   0028B0                     
  3897                           ;color.c: 16:  color_writetoaddr(0x00, 0x03);
  3898   0028B0  0E03               	movlw	3
  3899   0028B2  6E0B               	movwf	color_writetoaddr@value^0,c
  3900   0028B4  0E00               	movlw	0
  3901   0028B6  ECFF  F014         	call	_color_writetoaddr
  3902   0028BA                     
  3903                           ;color.c: 19:  color_writetoaddr(0x01, 0xD5);
  3904   0028BA  0ED5               	movlw	213
  3905   0028BC  6E0B               	movwf	color_writetoaddr@value^0,c
  3906   0028BE  0E01               	movlw	1
  3907   0028C0  ECFF  F014         	call	_color_writetoaddr
  3908   0028C4  0012               	return		;funcret
  3909   0028C6                     __end_of_color_click_init:
  3910                           	callstack 0
  3911                           
  3912 ;; *************** function _I2C_2_Master_Init *****************
  3913 ;; Defined at:
  3914 ;;		line 4 in file "i2c.c"
  3915 ;; Parameters:    Size  Location     Type
  3916 ;;		None
  3917 ;; Auto vars:     Size  Location     Type
  3918 ;;		None
  3919 ;; Return value:  Size  Location     Type
  3920 ;;                  1    wreg      void 
  3921 ;; Registers used:
  3922 ;;		wreg, status,2
  3923 ;; Tracked objects:
  3924 ;;		On entry : 0/0
  3925 ;;		On exit  : 0/0
  3926 ;;		Unchanged: 0/0
  3927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3932 ;;Total ram usage:        0 bytes
  3933 ;; Hardware stack levels used: 1
  3934 ;; Hardware stack levels required when called: 7
  3935 ;; This function calls:
  3936 ;;		Nothing
  3937 ;; This function is called by:
  3938 ;;		_color_click_init
  3939 ;; This function uses a non-reentrant model
  3940 ;;
  3941                           
  3942                           	psect	text8
  3943   0028F8                     __ptext8:
  3944                           	callstack 0
  3945   0028F8                     _I2C_2_Master_Init:
  3946                           	callstack 22
  3947   0028F8                     
  3948                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3949   0028F8  010E               	movlb	14	; () banked
  3950   0028FA  51D9               	movf	217,w,b	;volatile
  3951   0028FC  0BF0               	andlw	-16
  3952   0028FE  0908               	iorlw	8
  3953   002900  6FD9               	movwf	217,b	;volatile
  3954   002902                     
  3955                           ; BSR set to: 14
  3956                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3957   002902  8BD9               	bsf	217,5,b	;volatile
  3958                           
  3959                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3960   002904  0E9F               	movlw	159
  3961   002906  6FD6               	movwf	214,b	;volatile
  3962   002908                     
  3963                           ; BSR set to: 14
  3964                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3965   002908  8A84               	bsf	132,5,c	;volatile
  3966   00290A                     
  3967                           ; BSR set to: 14
  3968                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3969   00290A  8C84               	bsf	132,6,c	;volatile
  3970   00290C                     
  3971                           ; BSR set to: 14
  3972                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3973   00290C  9BA7               	bcf	167,5,b	;volatile
  3974   00290E                     
  3975                           ; BSR set to: 14
  3976                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3977   00290E  9DA7               	bcf	167,6,b	;volatile
  3978                           
  3979                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3980   002910  0E1D               	movlw	29
  3981   002912  6F1D               	movwf	29,b	;volatile
  3982                           
  3983                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3984   002914  0E1E               	movlw	30
  3985   002916  6F1C               	movwf	28,b	;volatile
  3986                           
  3987                           ;i2c.c: 18:   RD5PPS=0x1C;
  3988   002918  0E1C               	movlw	28
  3989   00291A  6F6F               	movwf	111,b	;volatile
  3990                           
  3991                           ;i2c.c: 19:   RD6PPS=0x1B;
  3992   00291C  0E1B               	movlw	27
  3993   00291E  6F70               	movwf	112,b	;volatile
  3994   002920                     
  3995                           ; BSR set to: 14
  3996   002920  0012               	return		;funcret
  3997   002922                     __end_of_I2C_2_Master_Init:
  3998                           	callstack 0
  3999                           
  4000 ;; *************** function _WhiteLight *****************
  4001 ;; Defined at:
  4002 ;;		line 20 in file "LED_Buttons.c"
  4003 ;; Parameters:    Size  Location     Type
  4004 ;;		None
  4005 ;; Auto vars:     Size  Location     Type
  4006 ;;		None
  4007 ;; Return value:  Size  Location     Type
  4008 ;;                  1    wreg      void 
  4009 ;; Registers used:
  4010 ;;		None
  4011 ;; Tracked objects:
  4012 ;;		On entry : 0/0
  4013 ;;		On exit  : 0/0
  4014 ;;		Unchanged: 0/0
  4015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4020 ;;Total ram usage:        0 bytes
  4021 ;; Hardware stack levels used: 1
  4022 ;; Hardware stack levels required when called: 7
  4023 ;; This function calls:
  4024 ;;		Nothing
  4025 ;; This function is called by:
  4026 ;;		_main
  4027 ;; This function uses a non-reentrant model
  4028 ;;
  4029                           
  4030                           	psect	text9
  4031   002B0A                     __ptext9:
  4032                           	callstack 0
  4033   002B0A                     _WhiteLight:
  4034                           	callstack 23
  4035   002B0A                     
  4036                           ;LED_Buttons.c: 21:     LATGbits.LATG1 = 1;
  4037   002B0A  827F               	bsf	127,1,c	;volatile
  4038                           
  4039                           ;LED_Buttons.c: 22:     LATAbits.LATA4 = 1;
  4040   002B0C  8879               	bsf	121,4,c	;volatile
  4041                           
  4042                           ;LED_Buttons.c: 23:     LATFbits.LATF7 = 1;
  4043   002B0E  8E7E               	bsf	126,7,c	;volatile
  4044   002B10  0012               	return		;funcret
  4045   002B12                     __end_of_WhiteLight:
  4046                           	callstack 0
  4047                           
  4048 ;; *************** function _WhiteInstructions *****************
  4049 ;; Defined at:
  4050 ;;		line 154 in file "color_instructions.c"
  4051 ;; Parameters:    Size  Location     Type
  4052 ;;  mL              2   58[COMRAM] PTR struct DC_motor
  4053 ;;		 -> main@motorL(9), 
  4054 ;;  mR              2   60[COMRAM] PTR struct DC_motor
  4055 ;;		 -> main@motorR(9), 
  4056 ;; Auto vars:     Size  Location     Type
  4057 ;;  a               2   67[COMRAM] unsigned int 
  4058 ;;  c               2   64[COMRAM] unsigned int 
  4059 ;;  anticolor       1   66[COMRAM] unsigned char 
  4060 ;; Return value:  Size  Location     Type
  4061 ;;                  1    wreg      void 
  4062 ;; Registers used:
  4063 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4064 ;; Tracked objects:
  4065 ;;		On entry : 0/0
  4066 ;;		On exit  : 0/0
  4067 ;;		Unchanged: 0/0
  4068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4069 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4070 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4071 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4072 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4073 ;;Total ram usage:       11 bytes
  4074 ;; Hardware stack levels used: 1
  4075 ;; Hardware stack levels required when called: 14
  4076 ;; This function calls:
  4077 ;;		_BlueInstructions
  4078 ;;		_MoveBuggy
  4079 ;;		_Return_Anti_Moves
  4080 ;;		_Return_Time
  4081 ;;		_fullSpeedAhead
  4082 ;;		_stop
  4083 ;; This function is called by:
  4084 ;;		_main
  4085 ;; This function uses a non-reentrant model
  4086 ;;
  4087                           
  4088                           	psect	text10
  4089   001B60                     __ptext10:
  4090                           	callstack 0
  4091   001B60                     _WhiteInstructions:
  4092                           	callstack 16
  4093   001B60                     
  4094                           ;color_instructions.c: 156:     BlueInstructions(mL,mR);
  4095   001B60  C03B  F027         	movff	WhiteInstructions@mL,BlueInstructions@mL
  4096   001B64  C03C  F028         	movff	WhiteInstructions@mL+1,BlueInstructions@mL+1
  4097   001B68  C03D  F029         	movff	WhiteInstructions@mR,BlueInstructions@mR
  4098   001B6C  C03E  F02A         	movff	WhiteInstructions@mR+1,BlueInstructions@mR+1
  4099   001B70  EC41  F00F         	call	_BlueInstructions	;wreg free
  4100                           
  4101                           ;color_instructions.c: 158:     while(time_index>0){
  4102   001B74  EF1B  F00E         	goto	l3916
  4103   001B78                     l3896:
  4104                           
  4105                           ; BSR set to: 0
  4106                           ;color_instructions.c: 160:         unsigned int a = 0;
  4107   001B78  0E00               	movlw	0
  4108   001B7A  6E45               	movwf	(WhiteInstructions@a+1)^0,c
  4109   001B7C  0E00               	movlw	0
  4110   001B7E  6E44               	movwf	WhiteInstructions@a^0,c
  4111   001B80                     
  4112                           ; BSR set to: 0
  4113                           ;color_instructions.c: 161:         unsigned int c = Return_Time(&time_index,time_array)
      +                          ;
  4114   001B80  0E9E               	movlw	low _time_index
  4115   001B82  6E09               	movwf	Return_Time@time_index^0,c
  4116   001B84  0E00               	movlw	high _time_index
  4117   001B86  6E0A               	movwf	(Return_Time@time_index+1)^0,c
  4118   001B88  0E3C               	movlw	low _time_array
  4119   001B8A  6E0B               	movwf	Return_Time@time_array^0,c
  4120   001B8C  0E01               	movlw	high _time_array
  4121   001B8E  6E0C               	movwf	(Return_Time@time_array+1)^0,c
  4122   001B90  EC2D  F014         	call	_Return_Time	;wreg free
  4123   001B94  C009  F041         	movff	?_Return_Time,WhiteInstructions@c
  4124   001B98  C00A  F042         	movff	?_Return_Time+1,WhiteInstructions@c+1
  4125                           
  4126                           ;color_instructions.c: 162:         while(a<c){
  4127   001B9C  EFDC  F00D         	goto	l3904
  4128   001BA0                     l3900:
  4129                           
  4130                           ;color_instructions.c: 163:             fullSpeedAhead(mL,mR);
  4131   001BA0  C03B  F01C         	movff	WhiteInstructions@mL,fullSpeedAhead@mL
  4132   001BA4  C03C  F01D         	movff	WhiteInstructions@mL+1,fullSpeedAhead@mL+1
  4133   001BA8  C03D  F01E         	movff	WhiteInstructions@mR,fullSpeedAhead@mR
  4134   001BAC  C03E  F01F         	movff	WhiteInstructions@mR+1,fullSpeedAhead@mR+1
  4135   001BB0  EC4B  F00C         	call	_fullSpeedAhead	;wreg free
  4136   001BB4                     
  4137                           ;color_instructions.c: 164:             a++;
  4138   001BB4  4A44               	infsnz	WhiteInstructions@a^0,f,c
  4139   001BB6  2A45               	incf	(WhiteInstructions@a+1)^0,f,c
  4140   001BB8                     l3904:
  4141                           
  4142                           ;color_instructions.c: 162:         while(a<c){
  4143   001BB8  5041               	movf	WhiteInstructions@c^0,w,c
  4144   001BBA  5C44               	subwf	WhiteInstructions@a^0,w,c
  4145   001BBC  5042               	movf	(WhiteInstructions@c+1)^0,w,c
  4146   001BBE  5845               	subwfb	(WhiteInstructions@a+1)^0,w,c
  4147   001BC0  A0D8               	btfss	status,0,c
  4148   001BC2  EFE5  F00D         	goto	u3761
  4149   001BC6  EFE7  F00D         	goto	u3760
  4150   001BCA                     u3761:
  4151   001BCA  EFD0  F00D         	goto	l3900
  4152   001BCE                     u3760:
  4153   001BCE  EFF6  F00D         	goto	l3910
  4154   001BD2                     l3906:
  4155                           
  4156                           ;color_instructions.c: 168:             stop(mL,mR);
  4157   001BD2  C03B  F01C         	movff	WhiteInstructions@mL,stop@mL
  4158   001BD6  C03C  F01D         	movff	WhiteInstructions@mL+1,stop@mL+1
  4159   001BDA  C03D  F01E         	movff	WhiteInstructions@mR,stop@mR
  4160   001BDE  C03E  F01F         	movff	WhiteInstructions@mR+1,stop@mR+1
  4161   001BE2  EC25  F00E         	call	_stop	;wreg free
  4162   001BE6                     
  4163                           ;color_instructions.c: 169:             a--;
  4164   001BE6  0644               	decf	WhiteInstructions@a^0,f,c
  4165   001BE8  A0D8               	btfss	status,0,c
  4166   001BEA  0645               	decf	(WhiteInstructions@a+1)^0,f,c
  4167   001BEC                     l3910:
  4168                           
  4169                           ;color_instructions.c: 167:         while(a>0){
  4170   001BEC  5044               	movf	WhiteInstructions@a^0,w,c
  4171   001BEE  1045               	iorwf	(WhiteInstructions@a+1)^0,w,c
  4172   001BF0  A4D8               	btfss	status,2,c
  4173   001BF2  EFFD  F00D         	goto	u3771
  4174   001BF6  EFFF  F00D         	goto	u3770
  4175   001BFA                     u3771:
  4176   001BFA  EFE9  F00D         	goto	l3906
  4177   001BFE                     u3770:
  4178   001BFE                     
  4179                           ;color_instructions.c: 172:         unsigned char anticolor = Return_Anti_Moves(&moves_i
      +                          ndex, anti_moves_array);
  4180   001BFE  0E56               	movlw	low _moves_index
  4181   001C00  6E09               	movwf	Return_Anti_Moves@moves_index^0,c
  4182   001C02  0E00               	movlw	high _moves_index
  4183   001C04  6E0A               	movwf	(Return_Anti_Moves@moves_index+1)^0,c
  4184   001C06  0E76               	movlw	low _anti_moves_array
  4185   001C08  6E0B               	movwf	Return_Anti_Moves@anti_moves_array^0,c
  4186   001C0A  0E00               	movlw	high _anti_moves_array
  4187   001C0C  6E0C               	movwf	(Return_Anti_Moves@anti_moves_array+1)^0,c
  4188   001C0E  ECDE  F014         	call	_Return_Anti_Moves	;wreg free
  4189   001C12  6E43               	movwf	WhiteInstructions@anticolor^0,c
  4190   001C14                     
  4191                           ;color_instructions.c: 173:         MoveBuggy(anticolor,mL,mR);
  4192   001C14  5043               	movf	WhiteInstructions@anticolor^0,w,c
  4193   001C16  6E3F               	movwf	??_WhiteInstructions^0,c
  4194   001C18  6A40               	clrf	(??_WhiteInstructions+1)^0,c
  4195   001C1A  C03F  F035         	movff	??_WhiteInstructions,MoveBuggy@color_detected
  4196   001C1E  C040  F036         	movff	??_WhiteInstructions+1,MoveBuggy@color_detected+1
  4197   001C22  C03B  F037         	movff	WhiteInstructions@mL,MoveBuggy@mL
  4198   001C26  C03C  F038         	movff	WhiteInstructions@mL+1,MoveBuggy@mL+1
  4199   001C2A  C03D  F039         	movff	WhiteInstructions@mR,MoveBuggy@mR
  4200   001C2E  C03E  F03A         	movff	WhiteInstructions@mR+1,MoveBuggy@mR+1
  4201   001C32  EC7E  F008         	call	_MoveBuggy	;wreg free
  4202   001C36                     l3916:
  4203                           
  4204                           ;color_instructions.c: 158:     while(time_index>0){
  4205   001C36  0100               	movlb	0	; () banked
  4206   001C38  519E               	movf	_time_index& (0+255),w,b
  4207   001C3A  A4D8               	btfss	status,2,c
  4208   001C3C  EF22  F00E         	goto	u3781
  4209   001C40  EF24  F00E         	goto	u3780
  4210   001C44                     u3781:
  4211   001C44  EFBC  F00D         	goto	l3896
  4212   001C48                     u3780:
  4213   001C48                     
  4214                           ; BSR set to: 0
  4215   001C48  0012               	return		;funcret
  4216   001C4A                     __end_of_WhiteInstructions:
  4217                           	callstack 0
  4218                           
  4219 ;; *************** function _Return_Time *****************
  4220 ;; Defined at:
  4221 ;;		line 40 in file "Memorization.c"
  4222 ;; Parameters:    Size  Location     Type
  4223 ;;  time_index      2    8[COMRAM] PTR unsigned char 
  4224 ;;		 -> time_index(1), 
  4225 ;;  time_array      2   10[COMRAM] PTR unsigned int 
  4226 ;;		 -> time_array(80), 
  4227 ;; Auto vars:     Size  Location     Type
  4228 ;;  temp            2   15[COMRAM] unsigned int 
  4229 ;; Return value:  Size  Location     Type
  4230 ;;                  2    8[COMRAM] unsigned int 
  4231 ;; Registers used:
  4232 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4233 ;; Tracked objects:
  4234 ;;		On entry : 0/0
  4235 ;;		On exit  : 0/0
  4236 ;;		Unchanged: 0/0
  4237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4238 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4239 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4240 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4241 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4242 ;;Total ram usage:        9 bytes
  4243 ;; Hardware stack levels used: 1
  4244 ;; Hardware stack levels required when called: 7
  4245 ;; This function calls:
  4246 ;;		Nothing
  4247 ;; This function is called by:
  4248 ;;		_WhiteInstructions
  4249 ;; This function uses a non-reentrant model
  4250 ;;
  4251                           
  4252                           	psect	text11
  4253   00285A                     __ptext11:
  4254                           	callstack 0
  4255   00285A                     _Return_Time:
  4256                           	callstack 22
  4257   00285A                     
  4258                           ;Memorization.c: 41:     unsigned int temp;;Memorization.c: 43:     temp = time_array[--
      +                          (*time_index)];
  4259   00285A  C009  FFD9         	movff	Return_Time@time_index,fsr2l
  4260   00285E  C00A  FFDA         	movff	Return_Time@time_index+1,fsr2h
  4261   002862  06DF               	decf	indf2,f,c
  4262   002864  50DF               	movf	indf2,w,c
  4263   002866  6E0D               	movwf	??_Return_Time^0,c
  4264   002868  500D               	movf	??_Return_Time^0,w,c
  4265   00286A  0D02               	mullw	2
  4266   00286C  CFF3 F00E          	movff	prodl,??_Return_Time+1
  4267   002870  CFF4 F00F          	movff	prodh,??_Return_Time+2
  4268   002874  500E               	movf	(??_Return_Time+1)^0,w,c
  4269   002876  240B               	addwf	Return_Time@time_array^0,w,c
  4270   002878  6ED9               	movwf	fsr2l,c
  4271   00287A  500F               	movf	(??_Return_Time+2)^0,w,c
  4272   00287C  200C               	addwfc	(Return_Time@time_array+1)^0,w,c
  4273   00287E  6EDA               	movwf	fsr2h,c
  4274   002880  CFDE F010          	movff	postinc2,Return_Time@temp
  4275   002884  CFDD F011          	movff	postdec2,Return_Time@temp+1
  4276   002888                     
  4277                           ;Memorization.c: 44:     return temp;
  4278   002888  C010  F009         	movff	Return_Time@temp,?_Return_Time
  4279   00288C  C011  F00A         	movff	Return_Time@temp+1,?_Return_Time+1
  4280   002890  0012               	return		;funcret
  4281   002892                     __end_of_Return_Time:
  4282                           	callstack 0
  4283                           
  4284 ;; *************** function _Return_Anti_Moves *****************
  4285 ;; Defined at:
  4286 ;;		line 32 in file "Memorization.c"
  4287 ;; Parameters:    Size  Location     Type
  4288 ;;  moves_index     2    8[COMRAM] PTR unsigned char 
  4289 ;;		 -> moves_index(1), 
  4290 ;;  anti_moves_a    2   10[COMRAM] PTR unsigned char 
  4291 ;;		 -> anti_moves_array(40), 
  4292 ;; Auto vars:     Size  Location     Type
  4293 ;;  temp            1   13[COMRAM] unsigned char 
  4294 ;; Return value:  Size  Location     Type
  4295 ;;                  1    wreg      unsigned char 
  4296 ;; Registers used:
  4297 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4298 ;; Tracked objects:
  4299 ;;		On entry : 0/0
  4300 ;;		On exit  : 0/0
  4301 ;;		Unchanged: 0/0
  4302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4303 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4304 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4305 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4306 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4307 ;;Total ram usage:        6 bytes
  4308 ;; Hardware stack levels used: 1
  4309 ;; Hardware stack levels required when called: 7
  4310 ;; This function calls:
  4311 ;;		Nothing
  4312 ;; This function is called by:
  4313 ;;		_WhiteInstructions
  4314 ;; This function uses a non-reentrant model
  4315 ;;
  4316                           
  4317                           	psect	text12
  4318   0029BC                     __ptext12:
  4319                           	callstack 0
  4320   0029BC                     _Return_Anti_Moves:
  4321                           	callstack 22
  4322   0029BC                     
  4323                           ;Memorization.c: 33:     unsigned char temp;;Memorization.c: 35:     temp = anti_moves_a
      +                          rray[--(*moves_index)];
  4324   0029BC  C009  FFD9         	movff	Return_Anti_Moves@moves_index,fsr2l
  4325   0029C0  C00A  FFDA         	movff	Return_Anti_Moves@moves_index+1,fsr2h
  4326   0029C4  06DF               	decf	indf2,f,c
  4327   0029C6  50DF               	movf	indf2,w,c
  4328   0029C8  6E0D               	movwf	??_Return_Anti_Moves^0,c
  4329   0029CA  500D               	movf	??_Return_Anti_Moves^0,w,c
  4330   0029CC  240B               	addwf	Return_Anti_Moves@anti_moves_array^0,w,c
  4331   0029CE  6ED9               	movwf	fsr2l,c
  4332   0029D0  0E00               	movlw	0
  4333   0029D2  200C               	addwfc	(Return_Anti_Moves@anti_moves_array+1)^0,w,c
  4334   0029D4  6EDA               	movwf	fsr2h,c
  4335   0029D6  50DF               	movf	indf2,w,c
  4336   0029D8  6E0E               	movwf	Return_Anti_Moves@temp^0,c
  4337   0029DA                     
  4338                           ;Memorization.c: 36:     return temp;
  4339   0029DA  500E               	movf	Return_Anti_Moves@temp^0,w,c
  4340   0029DC  0012               	return		;funcret
  4341   0029DE                     __end_of_Return_Anti_Moves:
  4342                           	callstack 0
  4343                           
  4344 ;; *************** function _MoveBuggy *****************
  4345 ;; Defined at:
  4346 ;;		line 179 in file "color_instructions.c"
  4347 ;; Parameters:    Size  Location     Type
  4348 ;;  color_detect    2   52[COMRAM] PTR unsigned char 
  4349 ;;		 -> RAM(3561), 
  4350 ;;  mL              2   54[COMRAM] PTR struct DC_motor
  4351 ;;		 -> main@motorL(9), 
  4352 ;;  mR              2   56[COMRAM] PTR struct DC_motor
  4353 ;;		 -> main@motorR(9), 
  4354 ;; Auto vars:     Size  Location     Type
  4355 ;;		None
  4356 ;; Return value:  Size  Location     Type
  4357 ;;                  1    wreg      void 
  4358 ;; Registers used:
  4359 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4360 ;; Tracked objects:
  4361 ;;		On entry : 0/0
  4362 ;;		On exit  : 0/0
  4363 ;;		Unchanged: 0/0
  4364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4365 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4368 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4369 ;;Total ram usage:        6 bytes
  4370 ;; Hardware stack levels used: 1
  4371 ;; Hardware stack levels required when called: 13
  4372 ;; This function calls:
  4373 ;;		_AntiPink
  4374 ;;		_AntiYellow
  4375 ;;		_AppendMoves
  4376 ;;		_BlueInstructions
  4377 ;;		_GreenInstructions
  4378 ;;		_LightBlueInstructions
  4379 ;;		_OrangeInstructions
  4380 ;;		_PinkInstructions
  4381 ;;		_RedInstructions
  4382 ;;		_YellowInstructions
  4383 ;; This function is called by:
  4384 ;;		_main
  4385 ;;		_WhiteInstructions
  4386 ;; This function uses a non-reentrant model
  4387 ;;
  4388                           
  4389                           	psect	text13
  4390   0010FC                     __ptext13:
  4391                           	callstack 0
  4392   0010FC                     _MoveBuggy:
  4393                           	callstack 16
  4394   0010FC                     
  4395                           ;color_instructions.c: 180:     if (color_detected==1){
  4396   0010FC  0435               	decf	MoveBuggy@color_detected^0,w,c
  4397   0010FE  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4398   001100  A4D8               	btfss	status,2,c
  4399   001102  EF85  F008         	goto	u2511
  4400   001106  EF87  F008         	goto	u2510
  4401   00110A                     u2511:
  4402   00110A  EFA5  F008         	goto	l3254
  4403   00110E                     u2510:
  4404   00110E                     
  4405                           ;color_instructions.c: 181:         RedInstructions(mL, mR);
  4406   00110E  C037  F027         	movff	MoveBuggy@mL,RedInstructions@mL
  4407   001112  C038  F028         	movff	MoveBuggy@mL+1,RedInstructions@mL+1
  4408   001116  C039  F029         	movff	MoveBuggy@mR,RedInstructions@mR
  4409   00111A  C03A  F02A         	movff	MoveBuggy@mR+1,RedInstructions@mR+1
  4410   00111E  EC9C  F011         	call	_RedInstructions	;wreg free
  4411   001122                     
  4412                           ;color_instructions.c: 182:         if(LATDbits.LATD7 != 1){
  4413   001122  BE7C               	btfsc	124,7,c	;volatile
  4414   001124  EF96  F008         	goto	u2521
  4415   001128  EF98  F008         	goto	u2520
  4416   00112C                     u2521:
  4417   00112C  EFBF  F009         	goto	l682
  4418   001130                     u2520:
  4419   001130                     
  4420                           ;color_instructions.c: 183:             AppendMoves(2,&moves_index,anti_moves_array);
  4421   001130  0E56               	movlw	low _moves_index
  4422   001132  6E09               	movwf	AppendMoves@moves_index^0,c
  4423   001134  0E00               	movlw	high _moves_index
  4424   001136  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4425   001138  0E76               	movlw	low _anti_moves_array
  4426   00113A  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4427   00113C  0E00               	movlw	high _anti_moves_array
  4428   00113E  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4429   001140  0E02               	movlw	2
  4430   001142  ECCC  F014         	call	_AppendMoves
  4431   001146  EFBF  F009         	goto	l682
  4432   00114A                     l3254:
  4433   00114A  0E02               	movlw	2
  4434   00114C  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4435   00114E  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4436   001150  A4D8               	btfss	status,2,c
  4437   001152  EFAD  F008         	goto	u2531
  4438   001156  EFAF  F008         	goto	u2530
  4439   00115A                     u2531:
  4440   00115A  EFCD  F008         	goto	l3262
  4441   00115E                     u2530:
  4442   00115E                     
  4443                           ;color_instructions.c: 187:         GreenInstructions(mL, mR);
  4444   00115E  C037  F027         	movff	MoveBuggy@mL,GreenInstructions@mL
  4445   001162  C038  F028         	movff	MoveBuggy@mL+1,GreenInstructions@mL+1
  4446   001166  C039  F029         	movff	MoveBuggy@mR,GreenInstructions@mR
  4447   00116A  C03A  F02A         	movff	MoveBuggy@mR+1,GreenInstructions@mR+1
  4448   00116E  ECDF  F011         	call	_GreenInstructions	;wreg free
  4449   001172                     
  4450                           ;color_instructions.c: 188:         if(LATDbits.LATD7 != 1){
  4451   001172  BE7C               	btfsc	124,7,c	;volatile
  4452   001174  EFBE  F008         	goto	u2541
  4453   001178  EFC0  F008         	goto	u2540
  4454   00117C                     u2541:
  4455   00117C  EFBF  F009         	goto	l682
  4456   001180                     u2540:
  4457   001180                     
  4458                           ;color_instructions.c: 189:             AppendMoves(1,&moves_index,anti_moves_array);
  4459   001180  0E56               	movlw	low _moves_index
  4460   001182  6E09               	movwf	AppendMoves@moves_index^0,c
  4461   001184  0E00               	movlw	high _moves_index
  4462   001186  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4463   001188  0E76               	movlw	low _anti_moves_array
  4464   00118A  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4465   00118C  0E00               	movlw	high _anti_moves_array
  4466   00118E  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4467   001190  0E01               	movlw	1
  4468   001192  ECCC  F014         	call	_AppendMoves
  4469   001196  EFBF  F009         	goto	l682
  4470   00119A                     l3262:
  4471   00119A  0E03               	movlw	3
  4472   00119C  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4473   00119E  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4474   0011A0  A4D8               	btfss	status,2,c
  4475   0011A2  EFD5  F008         	goto	u2551
  4476   0011A6  EFD7  F008         	goto	u2550
  4477   0011AA                     u2551:
  4478   0011AA  EFF5  F008         	goto	l3270
  4479   0011AE                     u2550:
  4480   0011AE                     
  4481                           ;color_instructions.c: 193:         BlueInstructions(mL, mR);
  4482   0011AE  C037  F027         	movff	MoveBuggy@mL,BlueInstructions@mL
  4483   0011B2  C038  F028         	movff	MoveBuggy@mL+1,BlueInstructions@mL+1
  4484   0011B6  C039  F029         	movff	MoveBuggy@mR,BlueInstructions@mR
  4485   0011BA  C03A  F02A         	movff	MoveBuggy@mR+1,BlueInstructions@mR+1
  4486   0011BE  EC41  F00F         	call	_BlueInstructions	;wreg free
  4487   0011C2                     
  4488                           ;color_instructions.c: 194:         if(LATDbits.LATD7 != 1){
  4489   0011C2  BE7C               	btfsc	124,7,c	;volatile
  4490   0011C4  EFE6  F008         	goto	u2561
  4491   0011C8  EFE8  F008         	goto	u2560
  4492   0011CC                     u2561:
  4493   0011CC  EFBF  F009         	goto	l682
  4494   0011D0                     u2560:
  4495   0011D0                     
  4496                           ;color_instructions.c: 195:             AppendMoves(3,&moves_index,anti_moves_array);
  4497   0011D0  0E56               	movlw	low _moves_index
  4498   0011D2  6E09               	movwf	AppendMoves@moves_index^0,c
  4499   0011D4  0E00               	movlw	high _moves_index
  4500   0011D6  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4501   0011D8  0E76               	movlw	low _anti_moves_array
  4502   0011DA  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4503   0011DC  0E00               	movlw	high _anti_moves_array
  4504   0011DE  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4505   0011E0  0E03               	movlw	3
  4506   0011E2  ECCC  F014         	call	_AppendMoves
  4507   0011E6  EFBF  F009         	goto	l682
  4508   0011EA                     l3270:
  4509   0011EA  0E04               	movlw	4
  4510   0011EC  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4511   0011EE  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4512   0011F0  A4D8               	btfss	status,2,c
  4513   0011F2  EFFD  F008         	goto	u2571
  4514   0011F6  EFFF  F008         	goto	u2570
  4515   0011FA                     u2571:
  4516   0011FA  EF1D  F009         	goto	l3278
  4517   0011FE                     u2570:
  4518   0011FE                     
  4519                           ;color_instructions.c: 199:         YellowInstructions(mL, mR);
  4520   0011FE  C037  F027         	movff	MoveBuggy@mL,YellowInstructions@mL
  4521   001202  C038  F028         	movff	MoveBuggy@mL+1,YellowInstructions@mL+1
  4522   001206  C039  F029         	movff	MoveBuggy@mR,YellowInstructions@mR
  4523   00120A  C03A  F02A         	movff	MoveBuggy@mR+1,YellowInstructions@mR+1
  4524   00120E  EC90  F010         	call	_YellowInstructions	;wreg free
  4525   001212                     
  4526                           ;color_instructions.c: 201:         if(LATDbits.LATD7 != 1){
  4527   001212  BE7C               	btfsc	124,7,c	;volatile
  4528   001214  EF0E  F009         	goto	u2581
  4529   001218  EF10  F009         	goto	u2580
  4530   00121C                     u2581:
  4531   00121C  EFBF  F009         	goto	l682
  4532   001220                     u2580:
  4533   001220                     
  4534                           ;color_instructions.c: 202:             AppendMoves(9,&moves_index,anti_moves_array);
  4535   001220  0E56               	movlw	low _moves_index
  4536   001222  6E09               	movwf	AppendMoves@moves_index^0,c
  4537   001224  0E00               	movlw	high _moves_index
  4538   001226  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4539   001228  0E76               	movlw	low _anti_moves_array
  4540   00122A  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4541   00122C  0E00               	movlw	high _anti_moves_array
  4542   00122E  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4543   001230  0E09               	movlw	9
  4544   001232  ECCC  F014         	call	_AppendMoves
  4545   001236  EFBF  F009         	goto	l682
  4546   00123A                     l3278:
  4547   00123A  0E05               	movlw	5
  4548   00123C  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4549   00123E  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4550   001240  A4D8               	btfss	status,2,c
  4551   001242  EF25  F009         	goto	u2591
  4552   001246  EF27  F009         	goto	u2590
  4553   00124A                     u2591:
  4554   00124A  EF45  F009         	goto	l3286
  4555   00124E                     u2590:
  4556   00124E                     
  4557                           ;color_instructions.c: 206:         PinkInstructions(mL, mR);
  4558   00124E  C037  F027         	movff	MoveBuggy@mL,PinkInstructions@mL
  4559   001252  C038  F028         	movff	MoveBuggy@mL+1,PinkInstructions@mL+1
  4560   001256  C039  F029         	movff	MoveBuggy@mR,PinkInstructions@mR
  4561   00125A  C03A  F02A         	movff	MoveBuggy@mR+1,PinkInstructions@mR+1
  4562   00125E  ECD3  F010         	call	_PinkInstructions	;wreg free
  4563   001262                     
  4564                           ;color_instructions.c: 208:         if(LATDbits.LATD7 != 1){
  4565   001262  BE7C               	btfsc	124,7,c	;volatile
  4566   001264  EF36  F009         	goto	u2601
  4567   001268  EF38  F009         	goto	u2600
  4568   00126C                     u2601:
  4569   00126C  EFBF  F009         	goto	l682
  4570   001270                     u2600:
  4571   001270                     
  4572                           ;color_instructions.c: 209:             AppendMoves(10,&moves_index,anti_moves_array);
  4573   001270  0E56               	movlw	low _moves_index
  4574   001272  6E09               	movwf	AppendMoves@moves_index^0,c
  4575   001274  0E00               	movlw	high _moves_index
  4576   001276  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4577   001278  0E76               	movlw	low _anti_moves_array
  4578   00127A  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4579   00127C  0E00               	movlw	high _anti_moves_array
  4580   00127E  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4581   001280  0E0A               	movlw	10
  4582   001282  ECCC  F014         	call	_AppendMoves
  4583   001286  EFBF  F009         	goto	l682
  4584   00128A                     l3286:
  4585   00128A  0E06               	movlw	6
  4586   00128C  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4587   00128E  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4588   001290  A4D8               	btfss	status,2,c
  4589   001292  EF4D  F009         	goto	u2611
  4590   001296  EF4F  F009         	goto	u2610
  4591   00129A                     u2611:
  4592   00129A  EF6D  F009         	goto	l3294
  4593   00129E                     u2610:
  4594   00129E                     
  4595                           ;color_instructions.c: 213:         OrangeInstructions(mL, mR);
  4596   00129E  C037  F02C         	movff	MoveBuggy@mL,OrangeInstructions@mL
  4597   0012A2  C038  F02D         	movff	MoveBuggy@mL+1,OrangeInstructions@mL+1
  4598   0012A6  C039  F02E         	movff	MoveBuggy@mR,OrangeInstructions@mR
  4599   0012AA  C03A  F02F         	movff	MoveBuggy@mR+1,OrangeInstructions@mR+1
  4600   0012AE  EC16  F011         	call	_OrangeInstructions	;wreg free
  4601   0012B2                     
  4602                           ;color_instructions.c: 214:         if(LATDbits.LATD7 != 1){
  4603   0012B2  BE7C               	btfsc	124,7,c	;volatile
  4604   0012B4  EF5E  F009         	goto	u2621
  4605   0012B8  EF60  F009         	goto	u2620
  4606   0012BC                     u2621:
  4607   0012BC  EFBF  F009         	goto	l682
  4608   0012C0                     u2620:
  4609   0012C0                     
  4610                           ;color_instructions.c: 215:             AppendMoves(7,&moves_index,anti_moves_array);
  4611   0012C0  0E56               	movlw	low _moves_index
  4612   0012C2  6E09               	movwf	AppendMoves@moves_index^0,c
  4613   0012C4  0E00               	movlw	high _moves_index
  4614   0012C6  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4615   0012C8  0E76               	movlw	low _anti_moves_array
  4616   0012CA  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4617   0012CC  0E00               	movlw	high _anti_moves_array
  4618   0012CE  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4619   0012D0  0E07               	movlw	7
  4620   0012D2  ECCC  F014         	call	_AppendMoves
  4621   0012D6  EFBF  F009         	goto	l682
  4622   0012DA                     l3294:
  4623   0012DA  0E07               	movlw	7
  4624   0012DC  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4625   0012DE  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4626   0012E0  A4D8               	btfss	status,2,c
  4627   0012E2  EF75  F009         	goto	u2631
  4628   0012E6  EF77  F009         	goto	u2630
  4629   0012EA                     u2631:
  4630   0012EA  EF95  F009         	goto	l3302
  4631   0012EE                     u2630:
  4632   0012EE                     
  4633                           ;color_instructions.c: 219:         LightBlueInstructions(mL, mR);
  4634   0012EE  C037  F02C         	movff	MoveBuggy@mL,LightBlueInstructions@mL
  4635   0012F2  C038  F02D         	movff	MoveBuggy@mL+1,LightBlueInstructions@mL+1
  4636   0012F6  C039  F02E         	movff	MoveBuggy@mR,LightBlueInstructions@mR
  4637   0012FA  C03A  F02F         	movff	MoveBuggy@mR+1,LightBlueInstructions@mR+1
  4638   0012FE  EC59  F011         	call	_LightBlueInstructions	;wreg free
  4639   001302                     
  4640                           ;color_instructions.c: 220:         if(LATDbits.LATD7 != 1){
  4641   001302  BE7C               	btfsc	124,7,c	;volatile
  4642   001304  EF86  F009         	goto	u2641
  4643   001308  EF88  F009         	goto	u2640
  4644   00130C                     u2641:
  4645   00130C  EFBF  F009         	goto	l682
  4646   001310                     u2640:
  4647   001310                     
  4648                           ;color_instructions.c: 221:             AppendMoves(6,&moves_index,anti_moves_array);
  4649   001310  0E56               	movlw	low _moves_index
  4650   001312  6E09               	movwf	AppendMoves@moves_index^0,c
  4651   001314  0E00               	movlw	high _moves_index
  4652   001316  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4653   001318  0E76               	movlw	low _anti_moves_array
  4654   00131A  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4655   00131C  0E00               	movlw	high _anti_moves_array
  4656   00131E  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4657   001320  0E06               	movlw	6
  4658   001322  ECCC  F014         	call	_AppendMoves
  4659   001326  EFBF  F009         	goto	l682
  4660   00132A                     l3302:
  4661   00132A  0E09               	movlw	9
  4662   00132C  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4663   00132E  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4664   001330  A4D8               	btfss	status,2,c
  4665   001332  EF9D  F009         	goto	u2651
  4666   001336  EF9F  F009         	goto	u2650
  4667   00133A                     u2651:
  4668   00133A  EFAB  F009         	goto	l3306
  4669   00133E                     u2650:
  4670   00133E                     
  4671                           ;color_instructions.c: 227:         AntiYellow(mL, mR);
  4672   00133E  C037  F02E         	movff	MoveBuggy@mL,AntiYellow@mL
  4673   001342  C038  F02F         	movff	MoveBuggy@mL+1,AntiYellow@mL+1
  4674   001346  C039  F030         	movff	MoveBuggy@mR,AntiYellow@mR
  4675   00134A  C03A  F031         	movff	MoveBuggy@mR+1,AntiYellow@mR+1
  4676   00134E  EC8F  F00E         	call	_AntiYellow	;wreg free
  4677                           
  4678                           ;color_instructions.c: 228:     }
  4679   001352  EFBF  F009         	goto	l682
  4680   001356                     l3306:
  4681   001356  0E0A               	movlw	10
  4682   001358  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4683   00135A  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4684   00135C  A4D8               	btfss	status,2,c
  4685   00135E  EFB3  F009         	goto	u2661
  4686   001362  EFB5  F009         	goto	u2660
  4687   001366                     u2661:
  4688   001366  EFBF  F009         	goto	l682
  4689   00136A                     u2660:
  4690   00136A                     
  4691                           ;color_instructions.c: 230:         AntiPink(mL, mR);
  4692   00136A  C037  F02E         	movff	MoveBuggy@mL,AntiPink@mL
  4693   00136E  C038  F02F         	movff	MoveBuggy@mL+1,AntiPink@mL+1
  4694   001372  C039  F030         	movff	MoveBuggy@mR,AntiPink@mR
  4695   001376  C03A  F031         	movff	MoveBuggy@mR+1,AntiPink@mR+1
  4696   00137A  ECE8  F00E         	call	_AntiPink	;wreg free
  4697   00137E                     l682:
  4698   00137E  0012               	return		;funcret
  4699   001380                     __end_of_MoveBuggy:
  4700                           	callstack 0
  4701                           
  4702 ;; *************** function _YellowInstructions *****************
  4703 ;; Defined at:
  4704 ;;		line 57 in file "color_instructions.c"
  4705 ;; Parameters:    Size  Location     Type
  4706 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  4707 ;;		 -> main@motorL(9), 
  4708 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  4709 ;;		 -> main@motorR(9), 
  4710 ;; Auto vars:     Size  Location     Type
  4711 ;;  a               1   44[COMRAM] unsigned char 
  4712 ;; Return value:  Size  Location     Type
  4713 ;;                  1    wreg      void 
  4714 ;; Registers used:
  4715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4716 ;; Tracked objects:
  4717 ;;		On entry : 0/0
  4718 ;;		On exit  : 0/0
  4719 ;;		Unchanged: 0/0
  4720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4721 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4722 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4723 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4724 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4725 ;;Total ram usage:        7 bytes
  4726 ;; Hardware stack levels used: 1
  4727 ;; Hardware stack levels required when called: 11
  4728 ;; This function calls:
  4729 ;;		_fullSpeedBackwards
  4730 ;;		_stop
  4731 ;;		_turnRight90
  4732 ;; This function is called by:
  4733 ;;		_MoveBuggy
  4734 ;; This function uses a non-reentrant model
  4735 ;;
  4736                           
  4737                           	psect	text14
  4738   002120                     __ptext14:
  4739                           	callstack 0
  4740   002120                     _YellowInstructions:
  4741                           	callstack 17
  4742   002120                     
  4743                           ;color_instructions.c: 59:     unsigned char a=0;
  4744   002120  0E00               	movlw	0
  4745   002122  6E2D               	movwf	YellowInstructions@a^0,c
  4746                           
  4747                           ;color_instructions.c: 60:     while (a<45){
  4748   002124  EF9F  F010         	goto	l3094
  4749   002128                     l3090:
  4750                           
  4751                           ;color_instructions.c: 61:         fullSpeedBackwards(mL, mR);
  4752   002128  C027  F01C         	movff	YellowInstructions@mL,fullSpeedBackwards@mL
  4753   00212C  C028  F01D         	movff	YellowInstructions@mL+1,fullSpeedBackwards@mL+1
  4754   002130  C029  F01E         	movff	YellowInstructions@mR,fullSpeedBackwards@mR
  4755   002134  C02A  F01F         	movff	YellowInstructions@mR+1,fullSpeedBackwards@mR+1
  4756   002138  EC39  F00D         	call	_fullSpeedBackwards	;wreg free
  4757   00213C                     
  4758                           ;color_instructions.c: 62:         a++;
  4759   00213C  2A2D               	incf	YellowInstructions@a^0,f,c
  4760   00213E                     l3094:
  4761                           
  4762                           ;color_instructions.c: 60:     while (a<45){
  4763   00213E  0E2C               	movlw	44
  4764   002140  642D               	cpfsgt	YellowInstructions@a^0,c
  4765   002142  EFA5  F010         	goto	u2391
  4766   002146  EFA7  F010         	goto	u2390
  4767   00214A                     u2391:
  4768   00214A  EF94  F010         	goto	l3090
  4769   00214E                     u2390:
  4770   00214E  EFB4  F010         	goto	l3100
  4771   002152                     l3096:
  4772                           
  4773                           ;color_instructions.c: 65:         stop(mL, mR);
  4774   002152  C027  F01C         	movff	YellowInstructions@mL,stop@mL
  4775   002156  C028  F01D         	movff	YellowInstructions@mL+1,stop@mL+1
  4776   00215A  C029  F01E         	movff	YellowInstructions@mR,stop@mR
  4777   00215E  C02A  F01F         	movff	YellowInstructions@mR+1,stop@mR+1
  4778   002162  EC25  F00E         	call	_stop	;wreg free
  4779   002166                     
  4780                           ;color_instructions.c: 66:         a--;
  4781   002166  062D               	decf	YellowInstructions@a^0,f,c
  4782   002168                     l3100:
  4783                           
  4784                           ;color_instructions.c: 64:     while (a>0){
  4785   002168  502D               	movf	YellowInstructions@a^0,w,c
  4786   00216A  A4D8               	btfss	status,2,c
  4787   00216C  EFBA  F010         	goto	u2401
  4788   002170  EFBC  F010         	goto	u2400
  4789   002174                     u2401:
  4790   002174  EFA9  F010         	goto	l3096
  4791   002178                     u2400:
  4792   002178                     
  4793                           ;color_instructions.c: 68:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4794   002178  0E05               	movlw	5
  4795   00217A  6E2C               	movwf	(??_YellowInstructions+1)^0,c
  4796   00217C  0E0F               	movlw	15
  4797   00217E  6E2B               	movwf	??_YellowInstructions^0,c
  4798   002180  0EF1               	movlw	241
  4799   002182                     u4607:
  4800   002182  2EE8               	decfsz	wreg,f,c
  4801   002184  D7FE               	bra	u4607
  4802   002186  2E2B               	decfsz	??_YellowInstructions^0,f,c
  4803   002188  D7FC               	bra	u4607
  4804   00218A  2E2C               	decfsz	(??_YellowInstructions+1)^0,f,c
  4805   00218C  D7FA               	bra	u4607
  4806   00218E  F000               	nop	
  4807   002190                     
  4808                           ;color_instructions.c: 69:     turnRight90(mL, mR);
  4809   002190  C027  F022         	movff	YellowInstructions@mL,turnRight90@mL
  4810   002194  C028  F023         	movff	YellowInstructions@mL+1,turnRight90@mL+1
  4811   002198  C029  F024         	movff	YellowInstructions@mR,turnRight90@mR
  4812   00219C  C02A  F025         	movff	YellowInstructions@mR+1,turnRight90@mR+1
  4813   0021A0  EC9A  F00F         	call	_turnRight90	;wreg free
  4814   0021A4  0012               	return		;funcret
  4815   0021A6                     __end_of_YellowInstructions:
  4816                           	callstack 0
  4817                           
  4818 ;; *************** function _PinkInstructions *****************
  4819 ;; Defined at:
  4820 ;;		line 72 in file "color_instructions.c"
  4821 ;; Parameters:    Size  Location     Type
  4822 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  4823 ;;		 -> main@motorL(9), 
  4824 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  4825 ;;		 -> main@motorR(9), 
  4826 ;; Auto vars:     Size  Location     Type
  4827 ;;  a               1   44[COMRAM] unsigned char 
  4828 ;; Return value:  Size  Location     Type
  4829 ;;                  1    wreg      void 
  4830 ;; Registers used:
  4831 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4832 ;; Tracked objects:
  4833 ;;		On entry : 0/0
  4834 ;;		On exit  : 0/0
  4835 ;;		Unchanged: 0/0
  4836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4837 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4838 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4839 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4840 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4841 ;;Total ram usage:        7 bytes
  4842 ;; Hardware stack levels used: 1
  4843 ;; Hardware stack levels required when called: 11
  4844 ;; This function calls:
  4845 ;;		_fullSpeedBackwards
  4846 ;;		_stop
  4847 ;;		_turnLeft90
  4848 ;; This function is called by:
  4849 ;;		_MoveBuggy
  4850 ;; This function uses a non-reentrant model
  4851 ;;
  4852                           
  4853                           	psect	text15
  4854   0021A6                     __ptext15:
  4855                           	callstack 0
  4856   0021A6                     _PinkInstructions:
  4857                           	callstack 17
  4858   0021A6                     
  4859                           ;color_instructions.c: 73:     unsigned char a=0;
  4860   0021A6  0E00               	movlw	0
  4861   0021A8  6E2D               	movwf	PinkInstructions@a^0,c
  4862                           
  4863                           ;color_instructions.c: 74:     while (a<45){
  4864   0021AA  EFE2  F010         	goto	l3112
  4865   0021AE                     l3108:
  4866                           
  4867                           ;color_instructions.c: 75:         fullSpeedBackwards(mL, mR);
  4868   0021AE  C027  F01C         	movff	PinkInstructions@mL,fullSpeedBackwards@mL
  4869   0021B2  C028  F01D         	movff	PinkInstructions@mL+1,fullSpeedBackwards@mL+1
  4870   0021B6  C029  F01E         	movff	PinkInstructions@mR,fullSpeedBackwards@mR
  4871   0021BA  C02A  F01F         	movff	PinkInstructions@mR+1,fullSpeedBackwards@mR+1
  4872   0021BE  EC39  F00D         	call	_fullSpeedBackwards	;wreg free
  4873   0021C2                     
  4874                           ;color_instructions.c: 76:         a++;
  4875   0021C2  2A2D               	incf	PinkInstructions@a^0,f,c
  4876   0021C4                     l3112:
  4877                           
  4878                           ;color_instructions.c: 74:     while (a<45){
  4879   0021C4  0E2C               	movlw	44
  4880   0021C6  642D               	cpfsgt	PinkInstructions@a^0,c
  4881   0021C8  EFE8  F010         	goto	u2411
  4882   0021CC  EFEA  F010         	goto	u2410
  4883   0021D0                     u2411:
  4884   0021D0  EFD7  F010         	goto	l3108
  4885   0021D4                     u2410:
  4886   0021D4  EFF7  F010         	goto	l3118
  4887   0021D8                     l3114:
  4888                           
  4889                           ;color_instructions.c: 79:         stop(mL, mR);
  4890   0021D8  C027  F01C         	movff	PinkInstructions@mL,stop@mL
  4891   0021DC  C028  F01D         	movff	PinkInstructions@mL+1,stop@mL+1
  4892   0021E0  C029  F01E         	movff	PinkInstructions@mR,stop@mR
  4893   0021E4  C02A  F01F         	movff	PinkInstructions@mR+1,stop@mR+1
  4894   0021E8  EC25  F00E         	call	_stop	;wreg free
  4895   0021EC                     
  4896                           ;color_instructions.c: 80:         a--;
  4897   0021EC  062D               	decf	PinkInstructions@a^0,f,c
  4898   0021EE                     l3118:
  4899                           
  4900                           ;color_instructions.c: 78:     while (a>0){
  4901   0021EE  502D               	movf	PinkInstructions@a^0,w,c
  4902   0021F0  A4D8               	btfss	status,2,c
  4903   0021F2  EFFD  F010         	goto	u2421
  4904   0021F6  EFFF  F010         	goto	u2420
  4905   0021FA                     u2421:
  4906   0021FA  EFEC  F010         	goto	l3114
  4907   0021FE                     u2420:
  4908   0021FE                     
  4909                           ;color_instructions.c: 82:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4910   0021FE  0E05               	movlw	5
  4911   002200  6E2C               	movwf	(??_PinkInstructions+1)^0,c
  4912   002202  0E0F               	movlw	15
  4913   002204  6E2B               	movwf	??_PinkInstructions^0,c
  4914   002206  0EF1               	movlw	241
  4915   002208                     u4617:
  4916   002208  2EE8               	decfsz	wreg,f,c
  4917   00220A  D7FE               	bra	u4617
  4918   00220C  2E2B               	decfsz	??_PinkInstructions^0,f,c
  4919   00220E  D7FC               	bra	u4617
  4920   002210  2E2C               	decfsz	(??_PinkInstructions+1)^0,f,c
  4921   002212  D7FA               	bra	u4617
  4922   002214  F000               	nop	
  4923   002216                     
  4924                           ;color_instructions.c: 83:     turnLeft90(mL, mR);
  4925   002216  C027  F022         	movff	PinkInstructions@mL,turnLeft90@mL
  4926   00221A  C028  F023         	movff	PinkInstructions@mL+1,turnLeft90@mL+1
  4927   00221E  C029  F024         	movff	PinkInstructions@mR,turnLeft90@mR
  4928   002222  C02A  F025         	movff	PinkInstructions@mR+1,turnLeft90@mR+1
  4929   002226  ECF1  F00F         	call	_turnLeft90	;wreg free
  4930   00222A  0012               	return		;funcret
  4931   00222C                     __end_of_PinkInstructions:
  4932                           	callstack 0
  4933                           
  4934 ;; *************** function _OrangeInstructions *****************
  4935 ;; Defined at:
  4936 ;;		line 87 in file "color_instructions.c"
  4937 ;; Parameters:    Size  Location     Type
  4938 ;;  mL              2   43[COMRAM] PTR struct DC_motor
  4939 ;;		 -> main@motorL(9), 
  4940 ;;  mR              2   45[COMRAM] PTR struct DC_motor
  4941 ;;		 -> main@motorR(9), 
  4942 ;; Auto vars:     Size  Location     Type
  4943 ;;  a               1   49[COMRAM] unsigned char 
  4944 ;; Return value:  Size  Location     Type
  4945 ;;                  1    wreg      void 
  4946 ;; Registers used:
  4947 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4948 ;; Tracked objects:
  4949 ;;		On entry : 0/0
  4950 ;;		On exit  : 0/0
  4951 ;;		Unchanged: 0/0
  4952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4953 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4954 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4955 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4956 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4957 ;;Total ram usage:        7 bytes
  4958 ;; Hardware stack levels used: 1
  4959 ;; Hardware stack levels required when called: 12
  4960 ;; This function calls:
  4961 ;;		_fullSpeedBackwards
  4962 ;;		_stop
  4963 ;;		_turnRight135
  4964 ;; This function is called by:
  4965 ;;		_MoveBuggy
  4966 ;; This function uses a non-reentrant model
  4967 ;;
  4968                           
  4969                           	psect	text16
  4970   00222C                     __ptext16:
  4971                           	callstack 0
  4972   00222C                     _OrangeInstructions:
  4973                           	callstack 16
  4974   00222C                     
  4975                           ;color_instructions.c: 88:     unsigned char a=0;
  4976   00222C  0E00               	movlw	0
  4977   00222E  6E32               	movwf	OrangeInstructions@a^0,c
  4978                           
  4979                           ;color_instructions.c: 89:     while (a<16){
  4980   002230  EF25  F011         	goto	l3130
  4981   002234                     l3126:
  4982                           
  4983                           ;color_instructions.c: 90:         fullSpeedBackwards(mL, mR);
  4984   002234  C02C  F01C         	movff	OrangeInstructions@mL,fullSpeedBackwards@mL
  4985   002238  C02D  F01D         	movff	OrangeInstructions@mL+1,fullSpeedBackwards@mL+1
  4986   00223C  C02E  F01E         	movff	OrangeInstructions@mR,fullSpeedBackwards@mR
  4987   002240  C02F  F01F         	movff	OrangeInstructions@mR+1,fullSpeedBackwards@mR+1
  4988   002244  EC39  F00D         	call	_fullSpeedBackwards	;wreg free
  4989   002248                     
  4990                           ;color_instructions.c: 91:         a++;
  4991   002248  2A32               	incf	OrangeInstructions@a^0,f,c
  4992   00224A                     l3130:
  4993                           
  4994                           ;color_instructions.c: 89:     while (a<16){
  4995   00224A  0E0F               	movlw	15
  4996   00224C  6432               	cpfsgt	OrangeInstructions@a^0,c
  4997   00224E  EF2B  F011         	goto	u2431
  4998   002252  EF2D  F011         	goto	u2430
  4999   002256                     u2431:
  5000   002256  EF1A  F011         	goto	l3126
  5001   00225A                     u2430:
  5002   00225A  EF3A  F011         	goto	l3136
  5003   00225E                     l3132:
  5004                           
  5005                           ;color_instructions.c: 94:         stop(mL, mR);
  5006   00225E  C02C  F01C         	movff	OrangeInstructions@mL,stop@mL
  5007   002262  C02D  F01D         	movff	OrangeInstructions@mL+1,stop@mL+1
  5008   002266  C02E  F01E         	movff	OrangeInstructions@mR,stop@mR
  5009   00226A  C02F  F01F         	movff	OrangeInstructions@mR+1,stop@mR+1
  5010   00226E  EC25  F00E         	call	_stop	;wreg free
  5011   002272                     
  5012                           ;color_instructions.c: 95:         a--;
  5013   002272  0632               	decf	OrangeInstructions@a^0,f,c
  5014   002274                     l3136:
  5015                           
  5016                           ;color_instructions.c: 93:     while (a>0){
  5017   002274  5032               	movf	OrangeInstructions@a^0,w,c
  5018   002276  A4D8               	btfss	status,2,c
  5019   002278  EF40  F011         	goto	u2441
  5020   00227C  EF42  F011         	goto	u2440
  5021   002280                     u2441:
  5022   002280  EF2F  F011         	goto	l3132
  5023   002284                     u2440:
  5024   002284                     
  5025                           ;color_instructions.c: 97:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5026   002284  0E05               	movlw	5
  5027   002286  6E31               	movwf	(??_OrangeInstructions+1)^0,c
  5028   002288  0E0F               	movlw	15
  5029   00228A  6E30               	movwf	??_OrangeInstructions^0,c
  5030   00228C  0EF1               	movlw	241
  5031   00228E                     u4627:
  5032   00228E  2EE8               	decfsz	wreg,f,c
  5033   002290  D7FE               	bra	u4627
  5034   002292  2E30               	decfsz	??_OrangeInstructions^0,f,c
  5035   002294  D7FC               	bra	u4627
  5036   002296  2E31               	decfsz	(??_OrangeInstructions+1)^0,f,c
  5037   002298  D7FA               	bra	u4627
  5038   00229A  F000               	nop	
  5039   00229C                     
  5040                           ;color_instructions.c: 98:     turnRight135(mL, mR);
  5041   00229C  C02C  F027         	movff	OrangeInstructions@mL,turnRight135@mL
  5042   0022A0  C02D  F028         	movff	OrangeInstructions@mL+1,turnRight135@mL+1
  5043   0022A4  C02E  F029         	movff	OrangeInstructions@mR,turnRight135@mR
  5044   0022A8  C02F  F02A         	movff	OrangeInstructions@mR+1,turnRight135@mR+1
  5045   0022AC  EC5C  F012         	call	_turnRight135	;wreg free
  5046   0022B0  0012               	return		;funcret
  5047   0022B2                     __end_of_OrangeInstructions:
  5048                           	callstack 0
  5049                           
  5050 ;; *************** function _turnRight135 *****************
  5051 ;; Defined at:
  5052 ;;		line 249 in file "dc_motor.c"
  5053 ;; Parameters:    Size  Location     Type
  5054 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  5055 ;;		 -> main@motorL(9), 
  5056 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  5057 ;;		 -> main@motorR(9), 
  5058 ;; Auto vars:     Size  Location     Type
  5059 ;;  a               1   42[COMRAM] unsigned char 
  5060 ;; Return value:  Size  Location     Type
  5061 ;;                  1    wreg      void 
  5062 ;; Registers used:
  5063 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5064 ;; Tracked objects:
  5065 ;;		On entry : 0/0
  5066 ;;		On exit  : 0/0
  5067 ;;		Unchanged: 0/0
  5068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5069 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5070 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5072 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5073 ;;Total ram usage:        5 bytes
  5074 ;; Hardware stack levels used: 1
  5075 ;; Hardware stack levels required when called: 11
  5076 ;; This function calls:
  5077 ;;		_stop
  5078 ;;		_turnRight
  5079 ;;		_turnRight90
  5080 ;; This function is called by:
  5081 ;;		_OrangeInstructions
  5082 ;; This function uses a non-reentrant model
  5083 ;;
  5084                           
  5085                           	psect	text17
  5086   0024B8                     __ptext17:
  5087                           	callstack 0
  5088   0024B8                     _turnRight135:
  5089                           	callstack 16
  5090   0024B8                     
  5091                           ;dc_motor.c: 251:     turnRight90(mL,mR);
  5092   0024B8  C027  F022         	movff	turnRight135@mL,turnRight90@mL
  5093   0024BC  C028  F023         	movff	turnRight135@mL+1,turnRight90@mL+1
  5094   0024C0  C029  F024         	movff	turnRight135@mR,turnRight90@mR
  5095   0024C4  C02A  F025         	movff	turnRight135@mR+1,turnRight90@mR+1
  5096   0024C8  EC9A  F00F         	call	_turnRight90	;wreg free
  5097   0024CC                     
  5098                           ;dc_motor.c: 252:     unsigned char a=0;
  5099   0024CC  0E00               	movlw	0
  5100   0024CE  6E2B               	movwf	turnRight135@a^0,c
  5101                           
  5102                           ;dc_motor.c: 253:     while(a<15){
  5103   0024D0  EF75  F012         	goto	l2964
  5104   0024D4                     l2960:
  5105                           
  5106                           ;dc_motor.c: 254:         turnRight(mL, mR);
  5107   0024D4  C027  F01C         	movff	turnRight135@mL,turnRight@mL
  5108   0024D8  C028  F01D         	movff	turnRight135@mL+1,turnRight@mL+1
  5109   0024DC  C029  F01E         	movff	turnRight135@mR,turnRight@mR
  5110   0024E0  C02A  F01F         	movff	turnRight135@mR+1,turnRight@mR+1
  5111   0024E4  ECD4  F00B         	call	_turnRight	;wreg free
  5112   0024E8                     
  5113                           ;dc_motor.c: 255:         a++;
  5114   0024E8  2A2B               	incf	turnRight135@a^0,f,c
  5115   0024EA                     l2964:
  5116                           
  5117                           ;dc_motor.c: 253:     while(a<15){
  5118   0024EA  0E0E               	movlw	14
  5119   0024EC  642B               	cpfsgt	turnRight135@a^0,c
  5120   0024EE  EF7B  F012         	goto	u2271
  5121   0024F2  EF7D  F012         	goto	u2270
  5122   0024F6                     u2271:
  5123   0024F6  EF6A  F012         	goto	l2960
  5124   0024FA                     u2270:
  5125   0024FA  EF8A  F012         	goto	l2970
  5126   0024FE                     l2966:
  5127                           
  5128                           ;dc_motor.c: 258:         stop(mL, mR);
  5129   0024FE  C027  F01C         	movff	turnRight135@mL,stop@mL
  5130   002502  C028  F01D         	movff	turnRight135@mL+1,stop@mL+1
  5131   002506  C029  F01E         	movff	turnRight135@mR,stop@mR
  5132   00250A  C02A  F01F         	movff	turnRight135@mR+1,stop@mR+1
  5133   00250E  EC25  F00E         	call	_stop	;wreg free
  5134   002512                     
  5135                           ;dc_motor.c: 259:         a--;
  5136   002512  062B               	decf	turnRight135@a^0,f,c
  5137   002514                     l2970:
  5138                           
  5139                           ;dc_motor.c: 257:     while(a>0){
  5140   002514  502B               	movf	turnRight135@a^0,w,c
  5141   002516  A4D8               	btfss	status,2,c
  5142   002518  EF90  F012         	goto	u2281
  5143   00251C  EF92  F012         	goto	u2280
  5144   002520                     u2281:
  5145   002520  EF7F  F012         	goto	l2966
  5146   002524                     u2280:
  5147   002524  0012               	return		;funcret
  5148   002526                     __end_of_turnRight135:
  5149                           	callstack 0
  5150                           
  5151 ;; *************** function _LightBlueInstructions *****************
  5152 ;; Defined at:
  5153 ;;		line 101 in file "color_instructions.c"
  5154 ;; Parameters:    Size  Location     Type
  5155 ;;  mL              2   43[COMRAM] PTR struct DC_motor
  5156 ;;		 -> main@motorL(9), 
  5157 ;;  mR              2   45[COMRAM] PTR struct DC_motor
  5158 ;;		 -> main@motorR(9), 
  5159 ;; Auto vars:     Size  Location     Type
  5160 ;;  a               1   49[COMRAM] unsigned char 
  5161 ;; Return value:  Size  Location     Type
  5162 ;;                  1    wreg      void 
  5163 ;; Registers used:
  5164 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5165 ;; Tracked objects:
  5166 ;;		On entry : 0/0
  5167 ;;		On exit  : 0/0
  5168 ;;		Unchanged: 0/0
  5169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5170 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5171 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5172 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5173 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5174 ;;Total ram usage:        7 bytes
  5175 ;; Hardware stack levels used: 1
  5176 ;; Hardware stack levels required when called: 12
  5177 ;; This function calls:
  5178 ;;		_fullSpeedBackwards
  5179 ;;		_stop
  5180 ;;		_turnLeft135
  5181 ;; This function is called by:
  5182 ;;		_MoveBuggy
  5183 ;; This function uses a non-reentrant model
  5184 ;;
  5185                           
  5186                           	psect	text18
  5187   0022B2                     __ptext18:
  5188                           	callstack 0
  5189   0022B2                     _LightBlueInstructions:
  5190                           	callstack 16
  5191   0022B2                     
  5192                           ;color_instructions.c: 102:     unsigned char a=0;
  5193   0022B2  0E00               	movlw	0
  5194   0022B4  6E32               	movwf	LightBlueInstructions@a^0,c
  5195                           
  5196                           ;color_instructions.c: 103:     while (a<16){
  5197   0022B6  EF68  F011         	goto	l3148
  5198   0022BA                     l3144:
  5199                           
  5200                           ;color_instructions.c: 104:         fullSpeedBackwards(mL, mR);
  5201   0022BA  C02C  F01C         	movff	LightBlueInstructions@mL,fullSpeedBackwards@mL
  5202   0022BE  C02D  F01D         	movff	LightBlueInstructions@mL+1,fullSpeedBackwards@mL+1
  5203   0022C2  C02E  F01E         	movff	LightBlueInstructions@mR,fullSpeedBackwards@mR
  5204   0022C6  C02F  F01F         	movff	LightBlueInstructions@mR+1,fullSpeedBackwards@mR+1
  5205   0022CA  EC39  F00D         	call	_fullSpeedBackwards	;wreg free
  5206   0022CE                     
  5207                           ;color_instructions.c: 105:         a++;
  5208   0022CE  2A32               	incf	LightBlueInstructions@a^0,f,c
  5209   0022D0                     l3148:
  5210                           
  5211                           ;color_instructions.c: 103:     while (a<16){
  5212   0022D0  0E0F               	movlw	15
  5213   0022D2  6432               	cpfsgt	LightBlueInstructions@a^0,c
  5214   0022D4  EF6E  F011         	goto	u2451
  5215   0022D8  EF70  F011         	goto	u2450
  5216   0022DC                     u2451:
  5217   0022DC  EF5D  F011         	goto	l3144
  5218   0022E0                     u2450:
  5219   0022E0  EF7D  F011         	goto	l3154
  5220   0022E4                     l3150:
  5221                           
  5222                           ;color_instructions.c: 108:         stop(mL, mR);
  5223   0022E4  C02C  F01C         	movff	LightBlueInstructions@mL,stop@mL
  5224   0022E8  C02D  F01D         	movff	LightBlueInstructions@mL+1,stop@mL+1
  5225   0022EC  C02E  F01E         	movff	LightBlueInstructions@mR,stop@mR
  5226   0022F0  C02F  F01F         	movff	LightBlueInstructions@mR+1,stop@mR+1
  5227   0022F4  EC25  F00E         	call	_stop	;wreg free
  5228   0022F8                     
  5229                           ;color_instructions.c: 109:         a--;
  5230   0022F8  0632               	decf	LightBlueInstructions@a^0,f,c
  5231   0022FA                     l3154:
  5232                           
  5233                           ;color_instructions.c: 107:     while (a>0){
  5234   0022FA  5032               	movf	LightBlueInstructions@a^0,w,c
  5235   0022FC  A4D8               	btfss	status,2,c
  5236   0022FE  EF83  F011         	goto	u2461
  5237   002302  EF85  F011         	goto	u2460
  5238   002306                     u2461:
  5239   002306  EF72  F011         	goto	l3150
  5240   00230A                     u2460:
  5241   00230A                     
  5242                           ;color_instructions.c: 111:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5243   00230A  0E05               	movlw	5
  5244   00230C  6E31               	movwf	(??_LightBlueInstructions+1)^0,c
  5245   00230E  0E0F               	movlw	15
  5246   002310  6E30               	movwf	??_LightBlueInstructions^0,c
  5247   002312  0EF1               	movlw	241
  5248   002314                     u4637:
  5249   002314  2EE8               	decfsz	wreg,f,c
  5250   002316  D7FE               	bra	u4637
  5251   002318  2E30               	decfsz	??_LightBlueInstructions^0,f,c
  5252   00231A  D7FC               	bra	u4637
  5253   00231C  2E31               	decfsz	(??_LightBlueInstructions+1)^0,f,c
  5254   00231E  D7FA               	bra	u4637
  5255   002320  F000               	nop	
  5256   002322                     
  5257                           ;color_instructions.c: 112:     turnLeft135(mL, mR);
  5258   002322  C02C  F027         	movff	LightBlueInstructions@mL,turnLeft135@mL
  5259   002326  C02D  F028         	movff	LightBlueInstructions@mL+1,turnLeft135@mL+1
  5260   00232A  C02E  F029         	movff	LightBlueInstructions@mR,turnLeft135@mR
  5261   00232E  C02F  F02A         	movff	LightBlueInstructions@mR+1,turnLeft135@mR+1
  5262   002332  EC93  F012         	call	_turnLeft135	;wreg free
  5263   002336  0012               	return		;funcret
  5264   002338                     __end_of_LightBlueInstructions:
  5265                           	callstack 0
  5266                           
  5267 ;; *************** function _turnLeft135 *****************
  5268 ;; Defined at:
  5269 ;;		line 263 in file "dc_motor.c"
  5270 ;; Parameters:    Size  Location     Type
  5271 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  5272 ;;		 -> main@motorL(9), 
  5273 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  5274 ;;		 -> main@motorR(9), 
  5275 ;; Auto vars:     Size  Location     Type
  5276 ;;  a               1   42[COMRAM] unsigned char 
  5277 ;; Return value:  Size  Location     Type
  5278 ;;                  1    wreg      void 
  5279 ;; Registers used:
  5280 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5281 ;; Tracked objects:
  5282 ;;		On entry : 0/0
  5283 ;;		On exit  : 0/0
  5284 ;;		Unchanged: 0/0
  5285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5286 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5287 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5289 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5290 ;;Total ram usage:        5 bytes
  5291 ;; Hardware stack levels used: 1
  5292 ;; Hardware stack levels required when called: 11
  5293 ;; This function calls:
  5294 ;;		_stop
  5295 ;;		_turnLeft
  5296 ;;		_turnLeft90
  5297 ;; This function is called by:
  5298 ;;		_LightBlueInstructions
  5299 ;; This function uses a non-reentrant model
  5300 ;;
  5301                           
  5302                           	psect	text19
  5303   002526                     __ptext19:
  5304                           	callstack 0
  5305   002526                     _turnLeft135:
  5306                           	callstack 16
  5307   002526                     
  5308                           ;dc_motor.c: 265:     turnLeft90(mL,mR);
  5309   002526  C027  F022         	movff	turnLeft135@mL,turnLeft90@mL
  5310   00252A  C028  F023         	movff	turnLeft135@mL+1,turnLeft90@mL+1
  5311   00252E  C029  F024         	movff	turnLeft135@mR,turnLeft90@mR
  5312   002532  C02A  F025         	movff	turnLeft135@mR+1,turnLeft90@mR+1
  5313   002536  ECF1  F00F         	call	_turnLeft90	;wreg free
  5314   00253A                     
  5315                           ;dc_motor.c: 266:     unsigned char a=0;
  5316   00253A  0E00               	movlw	0
  5317   00253C  6E2B               	movwf	turnLeft135@a^0,c
  5318                           
  5319                           ;dc_motor.c: 267:     while(a<16){
  5320   00253E  EFAC  F012         	goto	l2980
  5321   002542                     l2976:
  5322                           
  5323                           ;dc_motor.c: 268:         turnLeft(mL, mR);
  5324   002542  C027  F01C         	movff	turnLeft135@mL,turnLeft@mL
  5325   002546  C028  F01D         	movff	turnLeft135@mL+1,turnLeft@mL+1
  5326   00254A  C029  F01E         	movff	turnLeft135@mR,turnLeft@mR
  5327   00254E  C02A  F01F         	movff	turnLeft135@mR+1,turnLeft@mR+1
  5328   002552  ECC2  F00C         	call	_turnLeft	;wreg free
  5329   002556                     
  5330                           ;dc_motor.c: 269:         a++;
  5331   002556  2A2B               	incf	turnLeft135@a^0,f,c
  5332   002558                     l2980:
  5333                           
  5334                           ;dc_motor.c: 267:     while(a<16){
  5335   002558  0E0F               	movlw	15
  5336   00255A  642B               	cpfsgt	turnLeft135@a^0,c
  5337   00255C  EFB2  F012         	goto	u2291
  5338   002560  EFB4  F012         	goto	u2290
  5339   002564                     u2291:
  5340   002564  EFA1  F012         	goto	l2976
  5341   002568                     u2290:
  5342   002568  EFC1  F012         	goto	l2986
  5343   00256C                     l2982:
  5344                           
  5345                           ;dc_motor.c: 272:         stop(mL, mR);
  5346   00256C  C027  F01C         	movff	turnLeft135@mL,stop@mL
  5347   002570  C028  F01D         	movff	turnLeft135@mL+1,stop@mL+1
  5348   002574  C029  F01E         	movff	turnLeft135@mR,stop@mR
  5349   002578  C02A  F01F         	movff	turnLeft135@mR+1,stop@mR+1
  5350   00257C  EC25  F00E         	call	_stop	;wreg free
  5351   002580                     
  5352                           ;dc_motor.c: 273:         a--;
  5353   002580  062B               	decf	turnLeft135@a^0,f,c
  5354   002582                     l2986:
  5355                           
  5356                           ;dc_motor.c: 271:     while(a>0){
  5357   002582  502B               	movf	turnLeft135@a^0,w,c
  5358   002584  A4D8               	btfss	status,2,c
  5359   002586  EFC7  F012         	goto	u2301
  5360   00258A  EFC9  F012         	goto	u2300
  5361   00258E                     u2301:
  5362   00258E  EFB6  F012         	goto	l2982
  5363   002592                     u2300:
  5364   002592  0012               	return		;funcret
  5365   002594                     __end_of_turnLeft135:
  5366                           	callstack 0
  5367                           
  5368 ;; *************** function _AppendMoves *****************
  5369 ;; Defined at:
  5370 ;;		line 17 in file "Memorization.c"
  5371 ;; Parameters:    Size  Location     Type
  5372 ;;  temp            1    wreg     unsigned char 
  5373 ;;  moves_index     2    8[COMRAM] PTR unsigned char 
  5374 ;;		 -> moves_index(1), 
  5375 ;;  anti_moves_a    2   10[COMRAM] PTR unsigned char 
  5376 ;;		 -> anti_moves_array(40), 
  5377 ;; Auto vars:     Size  Location     Type
  5378 ;;  temp            1   13[COMRAM] unsigned char 
  5379 ;; Return value:  Size  Location     Type
  5380 ;;                  1    wreg      void 
  5381 ;; Registers used:
  5382 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5383 ;; Tracked objects:
  5384 ;;		On entry : 0/0
  5385 ;;		On exit  : 0/0
  5386 ;;		Unchanged: 0/0
  5387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5388 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5389 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5390 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5391 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5392 ;;Total ram usage:        6 bytes
  5393 ;; Hardware stack levels used: 1
  5394 ;; Hardware stack levels required when called: 7
  5395 ;; This function calls:
  5396 ;;		Nothing
  5397 ;; This function is called by:
  5398 ;;		_MoveBuggy
  5399 ;; This function uses a non-reentrant model
  5400 ;;
  5401                           
  5402                           	psect	text20
  5403   002998                     __ptext20:
  5404                           	callstack 0
  5405   002998                     _AppendMoves:
  5406                           	callstack 21
  5407                           
  5408                           ;incstack = 0
  5409                           ;AppendMoves@temp stored from wreg
  5410   002998  6E0E               	movwf	AppendMoves@temp^0,c
  5411   00299A                     
  5412                           ;Memorization.c: 19:     anti_moves_array[(*moves_index)++] = temp;
  5413   00299A  C009  FFD9         	movff	AppendMoves@moves_index,fsr2l
  5414   00299E  C00A  FFDA         	movff	AppendMoves@moves_index+1,fsr2h
  5415   0029A2  CFDF F00D          	movff	indf2,??_AppendMoves
  5416   0029A6  0E01               	movlw	1
  5417   0029A8  26DF               	addwf	indf2,f,c
  5418   0029AA  500D               	movf	??_AppendMoves^0,w,c
  5419   0029AC  240B               	addwf	AppendMoves@anti_moves_array^0,w,c
  5420   0029AE  6ED9               	movwf	fsr2l,c
  5421   0029B0  0E00               	movlw	0
  5422   0029B2  200C               	addwfc	(AppendMoves@anti_moves_array+1)^0,w,c
  5423   0029B4  6EDA               	movwf	fsr2h,c
  5424   0029B6  C00E  FFDF         	movff	AppendMoves@temp,indf2
  5425   0029BA  0012               	return		;funcret
  5426   0029BC                     __end_of_AppendMoves:
  5427                           	callstack 0
  5428                           
  5429 ;; *************** function _AntiYellow *****************
  5430 ;; Defined at:
  5431 ;;		line 115 in file "color_instructions.c"
  5432 ;; Parameters:    Size  Location     Type
  5433 ;;  mL              2   45[COMRAM] PTR struct DC_motor
  5434 ;;		 -> main@motorL(9), 
  5435 ;;  mR              2   47[COMRAM] PTR struct DC_motor
  5436 ;;		 -> main@motorR(9), 
  5437 ;; Auto vars:     Size  Location     Type
  5438 ;;  a               1   51[COMRAM] unsigned char 
  5439 ;; Return value:  Size  Location     Type
  5440 ;;                  1    wreg      void 
  5441 ;; Registers used:
  5442 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5443 ;; Tracked objects:
  5444 ;;		On entry : 0/0
  5445 ;;		On exit  : 0/0
  5446 ;;		Unchanged: 0/0
  5447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5448 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5449 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5450 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5451 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5452 ;;Total ram usage:        7 bytes
  5453 ;; Hardware stack levels used: 1
  5454 ;; Hardware stack levels required when called: 12
  5455 ;; This function calls:
  5456 ;;		_BlueInstructions
  5457 ;;		_RedInstructions
  5458 ;;		_fullSpeedAhead
  5459 ;;		_stop
  5460 ;; This function is called by:
  5461 ;;		_MoveBuggy
  5462 ;; This function uses a non-reentrant model
  5463 ;;
  5464                           
  5465                           	psect	text21
  5466   001D1E                     __ptext21:
  5467                           	callstack 0
  5468   001D1E                     _AntiYellow:
  5469                           	callstack 16
  5470   001D1E                     
  5471                           ;color_instructions.c: 116:     unsigned char a=0;
  5472   001D1E  0E00               	movlw	0
  5473   001D20  6E34               	movwf	AntiYellow@a^0,c
  5474   001D22                     
  5475                           ;color_instructions.c: 118:     RedInstructions(mL, mR);
  5476   001D22  C02E  F027         	movff	AntiYellow@mL,RedInstructions@mL
  5477   001D26  C02F  F028         	movff	AntiYellow@mL+1,RedInstructions@mL+1
  5478   001D2A  C030  F029         	movff	AntiYellow@mR,RedInstructions@mR
  5479   001D2E  C031  F02A         	movff	AntiYellow@mR+1,RedInstructions@mR+1
  5480   001D32  EC9C  F011         	call	_RedInstructions	;wreg free
  5481   001D36                     
  5482                           ;color_instructions.c: 119:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5483   001D36  0E05               	movlw	5
  5484   001D38  6E33               	movwf	(??_AntiYellow+1)^0,c
  5485   001D3A  0E0F               	movlw	15
  5486   001D3C  6E32               	movwf	??_AntiYellow^0,c
  5487   001D3E  0EF1               	movlw	241
  5488   001D40                     u4647:
  5489   001D40  2EE8               	decfsz	wreg,f,c
  5490   001D42  D7FE               	bra	u4647
  5491   001D44  2E32               	decfsz	??_AntiYellow^0,f,c
  5492   001D46  D7FC               	bra	u4647
  5493   001D48  2E33               	decfsz	(??_AntiYellow+1)^0,f,c
  5494   001D4A  D7FA               	bra	u4647
  5495   001D4C  F000               	nop	
  5496                           
  5497                           ;color_instructions.c: 121:     while (a<45){
  5498   001D4E  EFB4  F00E         	goto	l3170
  5499   001D52                     l3166:
  5500                           
  5501                           ;color_instructions.c: 122:         fullSpeedAhead(mL, mR);
  5502   001D52  C02E  F01C         	movff	AntiYellow@mL,fullSpeedAhead@mL
  5503   001D56  C02F  F01D         	movff	AntiYellow@mL+1,fullSpeedAhead@mL+1
  5504   001D5A  C030  F01E         	movff	AntiYellow@mR,fullSpeedAhead@mR
  5505   001D5E  C031  F01F         	movff	AntiYellow@mR+1,fullSpeedAhead@mR+1
  5506   001D62  EC4B  F00C         	call	_fullSpeedAhead	;wreg free
  5507   001D66                     
  5508                           ;color_instructions.c: 123:         a++;
  5509   001D66  2A34               	incf	AntiYellow@a^0,f,c
  5510   001D68                     l3170:
  5511                           
  5512                           ;color_instructions.c: 121:     while (a<45){
  5513   001D68  0E2C               	movlw	44
  5514   001D6A  6434               	cpfsgt	AntiYellow@a^0,c
  5515   001D6C  EFBA  F00E         	goto	u2471
  5516   001D70  EFBC  F00E         	goto	u2470
  5517   001D74                     u2471:
  5518   001D74  EFA9  F00E         	goto	l3166
  5519   001D78                     u2470:
  5520   001D78  EFC9  F00E         	goto	l3176
  5521   001D7C                     l3172:
  5522                           
  5523                           ;color_instructions.c: 126:         stop(mL, mR);
  5524   001D7C  C02E  F01C         	movff	AntiYellow@mL,stop@mL
  5525   001D80  C02F  F01D         	movff	AntiYellow@mL+1,stop@mL+1
  5526   001D84  C030  F01E         	movff	AntiYellow@mR,stop@mR
  5527   001D88  C031  F01F         	movff	AntiYellow@mR+1,stop@mR+1
  5528   001D8C  EC25  F00E         	call	_stop	;wreg free
  5529   001D90                     
  5530                           ;color_instructions.c: 127:         a--;
  5531   001D90  0634               	decf	AntiYellow@a^0,f,c
  5532   001D92                     l3176:
  5533                           
  5534                           ;color_instructions.c: 125:     while (a>0){
  5535   001D92  5034               	movf	AntiYellow@a^0,w,c
  5536   001D94  A4D8               	btfss	status,2,c
  5537   001D96  EFCF  F00E         	goto	u2481
  5538   001D9A  EFD1  F00E         	goto	u2480
  5539   001D9E                     u2481:
  5540   001D9E  EFBE  F00E         	goto	l3172
  5541   001DA2                     u2480:
  5542   001DA2                     
  5543                           ;color_instructions.c: 129:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5544   001DA2  0E05               	movlw	5
  5545   001DA4  6E33               	movwf	(??_AntiYellow+1)^0,c
  5546   001DA6  0E0F               	movlw	15
  5547   001DA8  6E32               	movwf	??_AntiYellow^0,c
  5548   001DAA  0EF1               	movlw	241
  5549   001DAC                     u4657:
  5550   001DAC  2EE8               	decfsz	wreg,f,c
  5551   001DAE  D7FE               	bra	u4657
  5552   001DB0  2E32               	decfsz	??_AntiYellow^0,f,c
  5553   001DB2  D7FC               	bra	u4657
  5554   001DB4  2E33               	decfsz	(??_AntiYellow+1)^0,f,c
  5555   001DB6  D7FA               	bra	u4657
  5556   001DB8  F000               	nop	
  5557   001DBA                     
  5558                           ;color_instructions.c: 131:     BlueInstructions(mL, mR);
  5559   001DBA  C02E  F027         	movff	AntiYellow@mL,BlueInstructions@mL
  5560   001DBE  C02F  F028         	movff	AntiYellow@mL+1,BlueInstructions@mL+1
  5561   001DC2  C030  F029         	movff	AntiYellow@mR,BlueInstructions@mR
  5562   001DC6  C031  F02A         	movff	AntiYellow@mR+1,BlueInstructions@mR+1
  5563   001DCA  EC41  F00F         	call	_BlueInstructions	;wreg free
  5564   001DCE  0012               	return		;funcret
  5565   001DD0                     __end_of_AntiYellow:
  5566                           	callstack 0
  5567                           
  5568 ;; *************** function _RedInstructions *****************
  5569 ;; Defined at:
  5570 ;;		line 10 in file "color_instructions.c"
  5571 ;; Parameters:    Size  Location     Type
  5572 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  5573 ;;		 -> main@motorL(9), 
  5574 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  5575 ;;		 -> main@motorR(9), 
  5576 ;; Auto vars:     Size  Location     Type
  5577 ;;  a               1   44[COMRAM] unsigned char 
  5578 ;; Return value:  Size  Location     Type
  5579 ;;                  1    wreg      void 
  5580 ;; Registers used:
  5581 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5582 ;; Tracked objects:
  5583 ;;		On entry : 0/0
  5584 ;;		On exit  : 0/0
  5585 ;;		Unchanged: 0/0
  5586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5587 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5588 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5589 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5590 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5591 ;;Total ram usage:        7 bytes
  5592 ;; Hardware stack levels used: 1
  5593 ;; Hardware stack levels required when called: 11
  5594 ;; This function calls:
  5595 ;;		_fullSpeedBackwards
  5596 ;;		_stop
  5597 ;;		_turnRight90
  5598 ;; This function is called by:
  5599 ;;		_AntiYellow
  5600 ;;		_MoveBuggy
  5601 ;; This function uses a non-reentrant model
  5602 ;;
  5603                           
  5604                           	psect	text22
  5605   002338                     __ptext22:
  5606                           	callstack 0
  5607   002338                     _RedInstructions:
  5608                           	callstack 17
  5609   002338                     
  5610                           ;color_instructions.c: 12:     unsigned char a=0;
  5611   002338  0E00               	movlw	0
  5612   00233A  6E2D               	movwf	RedInstructions@a^0,c
  5613                           
  5614                           ;color_instructions.c: 13:     while (a<16){
  5615   00233C  EFAB  F011         	goto	l2994
  5616   002340                     l2990:
  5617                           
  5618                           ;color_instructions.c: 14:         fullSpeedBackwards(mL, mR);
  5619   002340  C027  F01C         	movff	RedInstructions@mL,fullSpeedBackwards@mL
  5620   002344  C028  F01D         	movff	RedInstructions@mL+1,fullSpeedBackwards@mL+1
  5621   002348  C029  F01E         	movff	RedInstructions@mR,fullSpeedBackwards@mR
  5622   00234C  C02A  F01F         	movff	RedInstructions@mR+1,fullSpeedBackwards@mR+1
  5623   002350  EC39  F00D         	call	_fullSpeedBackwards	;wreg free
  5624   002354                     
  5625                           ;color_instructions.c: 15:         a++;
  5626   002354  2A2D               	incf	RedInstructions@a^0,f,c
  5627   002356                     l2994:
  5628                           
  5629                           ;color_instructions.c: 13:     while (a<16){
  5630   002356  0E0F               	movlw	15
  5631   002358  642D               	cpfsgt	RedInstructions@a^0,c
  5632   00235A  EFB1  F011         	goto	u2311
  5633   00235E  EFB3  F011         	goto	u2310
  5634   002362                     u2311:
  5635   002362  EFA0  F011         	goto	l2990
  5636   002366                     u2310:
  5637   002366  EFC0  F011         	goto	l3000
  5638   00236A                     l2996:
  5639                           
  5640                           ;color_instructions.c: 18:         stop(mL, mR);
  5641   00236A  C027  F01C         	movff	RedInstructions@mL,stop@mL
  5642   00236E  C028  F01D         	movff	RedInstructions@mL+1,stop@mL+1
  5643   002372  C029  F01E         	movff	RedInstructions@mR,stop@mR
  5644   002376  C02A  F01F         	movff	RedInstructions@mR+1,stop@mR+1
  5645   00237A  EC25  F00E         	call	_stop	;wreg free
  5646   00237E                     
  5647                           ;color_instructions.c: 19:         a--;
  5648   00237E  062D               	decf	RedInstructions@a^0,f,c
  5649   002380                     l3000:
  5650                           
  5651                           ;color_instructions.c: 17:     while (a>0){
  5652   002380  502D               	movf	RedInstructions@a^0,w,c
  5653   002382  A4D8               	btfss	status,2,c
  5654   002384  EFC6  F011         	goto	u2321
  5655   002388  EFC8  F011         	goto	u2320
  5656   00238C                     u2321:
  5657   00238C  EFB5  F011         	goto	l2996
  5658   002390                     u2320:
  5659   002390                     
  5660                           ;color_instructions.c: 21:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5661   002390  0E05               	movlw	5
  5662   002392  6E2C               	movwf	(??_RedInstructions+1)^0,c
  5663   002394  0E0F               	movlw	15
  5664   002396  6E2B               	movwf	??_RedInstructions^0,c
  5665   002398  0EF1               	movlw	241
  5666   00239A                     u4667:
  5667   00239A  2EE8               	decfsz	wreg,f,c
  5668   00239C  D7FE               	bra	u4667
  5669   00239E  2E2B               	decfsz	??_RedInstructions^0,f,c
  5670   0023A0  D7FC               	bra	u4667
  5671   0023A2  2E2C               	decfsz	(??_RedInstructions+1)^0,f,c
  5672   0023A4  D7FA               	bra	u4667
  5673   0023A6  F000               	nop	
  5674   0023A8                     
  5675                           ;color_instructions.c: 22:     turnRight90(mL, mR);
  5676   0023A8  C027  F022         	movff	RedInstructions@mL,turnRight90@mL
  5677   0023AC  C028  F023         	movff	RedInstructions@mL+1,turnRight90@mL+1
  5678   0023B0  C029  F024         	movff	RedInstructions@mR,turnRight90@mR
  5679   0023B4  C02A  F025         	movff	RedInstructions@mR+1,turnRight90@mR+1
  5680   0023B8  EC9A  F00F         	call	_turnRight90	;wreg free
  5681   0023BC  0012               	return		;funcret
  5682   0023BE                     __end_of_RedInstructions:
  5683                           	callstack 0
  5684                           
  5685 ;; *************** function _turnRight90 *****************
  5686 ;; Defined at:
  5687 ;;		line 221 in file "dc_motor.c"
  5688 ;; Parameters:    Size  Location     Type
  5689 ;;  mL              2   33[COMRAM] PTR struct DC_motor
  5690 ;;		 -> main@motorL(9), 
  5691 ;;  mR              2   35[COMRAM] PTR struct DC_motor
  5692 ;;		 -> main@motorR(9), 
  5693 ;; Auto vars:     Size  Location     Type
  5694 ;;  a               1   37[COMRAM] unsigned char 
  5695 ;; Return value:  Size  Location     Type
  5696 ;;                  1    wreg      void 
  5697 ;; Registers used:
  5698 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5699 ;; Tracked objects:
  5700 ;;		On entry : 0/0
  5701 ;;		On exit  : 0/0
  5702 ;;		Unchanged: 0/0
  5703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5704 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5705 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5707 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5708 ;;Total ram usage:        5 bytes
  5709 ;; Hardware stack levels used: 1
  5710 ;; Hardware stack levels required when called: 10
  5711 ;; This function calls:
  5712 ;;		_stop
  5713 ;;		_turnRight
  5714 ;; This function is called by:
  5715 ;;		_turnRight135
  5716 ;;		_RedInstructions
  5717 ;;		_YellowInstructions
  5718 ;; This function uses a non-reentrant model
  5719 ;;
  5720                           
  5721                           	psect	text23
  5722   001F34                     __ptext23:
  5723                           	callstack 0
  5724   001F34                     _turnRight90:
  5725                           	callstack 17
  5726   001F34                     
  5727                           ;dc_motor.c: 223:     unsigned char a=0;
  5728   001F34  0E00               	movlw	0
  5729   001F36  6E26               	movwf	turnRight90@a^0,c
  5730                           
  5731                           ;dc_motor.c: 224:     while(a<15){
  5732   001F38  EFA9  F00F         	goto	l2912
  5733   001F3C                     l2908:
  5734                           
  5735                           ;dc_motor.c: 225:         turnRight(mL, mR);
  5736   001F3C  C022  F01C         	movff	turnRight90@mL,turnRight@mL
  5737   001F40  C023  F01D         	movff	turnRight90@mL+1,turnRight@mL+1
  5738   001F44  C024  F01E         	movff	turnRight90@mR,turnRight@mR
  5739   001F48  C025  F01F         	movff	turnRight90@mR+1,turnRight@mR+1
  5740   001F4C  ECD4  F00B         	call	_turnRight	;wreg free
  5741   001F50                     
  5742                           ;dc_motor.c: 226:         a++;
  5743   001F50  2A26               	incf	turnRight90@a^0,f,c
  5744   001F52                     l2912:
  5745                           
  5746                           ;dc_motor.c: 224:     while(a<15){
  5747   001F52  0E0E               	movlw	14
  5748   001F54  6426               	cpfsgt	turnRight90@a^0,c
  5749   001F56  EFAF  F00F         	goto	u2191
  5750   001F5A  EFB1  F00F         	goto	u2190
  5751   001F5E                     u2191:
  5752   001F5E  EF9E  F00F         	goto	l2908
  5753   001F62                     u2190:
  5754   001F62  EFBE  F00F         	goto	l2918
  5755   001F66                     l2914:
  5756                           
  5757                           ;dc_motor.c: 229:         stop(mL, mR);
  5758   001F66  C022  F01C         	movff	turnRight90@mL,stop@mL
  5759   001F6A  C023  F01D         	movff	turnRight90@mL+1,stop@mL+1
  5760   001F6E  C024  F01E         	movff	turnRight90@mR,stop@mR
  5761   001F72  C025  F01F         	movff	turnRight90@mR+1,stop@mR+1
  5762   001F76  EC25  F00E         	call	_stop	;wreg free
  5763   001F7A                     
  5764                           ;dc_motor.c: 230:         a--;
  5765   001F7A  0626               	decf	turnRight90@a^0,f,c
  5766   001F7C                     l2918:
  5767                           
  5768                           ;dc_motor.c: 228:     while(a>0){
  5769   001F7C  5026               	movf	turnRight90@a^0,w,c
  5770   001F7E  A4D8               	btfss	status,2,c
  5771   001F80  EFC4  F00F         	goto	u2201
  5772   001F84  EFC6  F00F         	goto	u2200
  5773   001F88                     u2201:
  5774   001F88  EFB3  F00F         	goto	l2914
  5775   001F8C                     u2200:
  5776   001F8C  EFD3  F00F         	goto	l2924
  5777   001F90                     l2920:
  5778                           
  5779                           ;dc_motor.c: 233:         turnRight(mL, mR);
  5780   001F90  C022  F01C         	movff	turnRight90@mL,turnRight@mL
  5781   001F94  C023  F01D         	movff	turnRight90@mL+1,turnRight@mL+1
  5782   001F98  C024  F01E         	movff	turnRight90@mR,turnRight@mR
  5783   001F9C  C025  F01F         	movff	turnRight90@mR+1,turnRight@mR+1
  5784   001FA0  ECD4  F00B         	call	_turnRight	;wreg free
  5785   001FA4                     
  5786                           ;dc_motor.c: 234:         a++;
  5787   001FA4  2A26               	incf	turnRight90@a^0,f,c
  5788   001FA6                     l2924:
  5789                           
  5790                           ;dc_motor.c: 232:     while(a<15){
  5791   001FA6  0E0E               	movlw	14
  5792   001FA8  6426               	cpfsgt	turnRight90@a^0,c
  5793   001FAA  EFD9  F00F         	goto	u2211
  5794   001FAE  EFDB  F00F         	goto	u2210
  5795   001FB2                     u2211:
  5796   001FB2  EFC8  F00F         	goto	l2920
  5797   001FB6                     u2210:
  5798   001FB6  EFE8  F00F         	goto	l2930
  5799   001FBA                     l2926:
  5800                           
  5801                           ;dc_motor.c: 237:         stop(mL, mR);
  5802   001FBA  C022  F01C         	movff	turnRight90@mL,stop@mL
  5803   001FBE  C023  F01D         	movff	turnRight90@mL+1,stop@mL+1
  5804   001FC2  C024  F01E         	movff	turnRight90@mR,stop@mR
  5805   001FC6  C025  F01F         	movff	turnRight90@mR+1,stop@mR+1
  5806   001FCA  EC25  F00E         	call	_stop	;wreg free
  5807   001FCE                     
  5808                           ;dc_motor.c: 238:         a--;
  5809   001FCE  0626               	decf	turnRight90@a^0,f,c
  5810   001FD0                     l2930:
  5811                           
  5812                           ;dc_motor.c: 236:     while(a>0){
  5813   001FD0  5026               	movf	turnRight90@a^0,w,c
  5814   001FD2  A4D8               	btfss	status,2,c
  5815   001FD4  EFEE  F00F         	goto	u2221
  5816   001FD8  EFF0  F00F         	goto	u2220
  5817   001FDC                     u2221:
  5818   001FDC  EFDD  F00F         	goto	l2926
  5819   001FE0                     u2220:
  5820   001FE0  0012               	return		;funcret
  5821   001FE2                     __end_of_turnRight90:
  5822                           	callstack 0
  5823                           
  5824 ;; *************** function _turnRight *****************
  5825 ;; Defined at:
  5826 ;;		line 129 in file "dc_motor.c"
  5827 ;; Parameters:    Size  Location     Type
  5828 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  5829 ;;		 -> main@motorL(9), 
  5830 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  5831 ;;		 -> main@motorR(9), 
  5832 ;; Auto vars:     Size  Location     Type
  5833 ;;		None
  5834 ;; Return value:  Size  Location     Type
  5835 ;;                  1    wreg      void 
  5836 ;; Registers used:
  5837 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5838 ;; Tracked objects:
  5839 ;;		On entry : 0/0
  5840 ;;		On exit  : 0/0
  5841 ;;		Unchanged: 0/0
  5842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5843 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5845 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5846 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5847 ;;Total ram usage:        6 bytes
  5848 ;; Hardware stack levels used: 1
  5849 ;; Hardware stack levels required when called: 9
  5850 ;; This function calls:
  5851 ;;		_setMotorPWM
  5852 ;; This function is called by:
  5853 ;;		_turnRight90
  5854 ;;		_turnRight135
  5855 ;; This function uses a non-reentrant model
  5856 ;;
  5857                           
  5858                           	psect	text24
  5859   0017A8                     __ptext24:
  5860                           	callstack 0
  5861   0017A8                     _turnRight:
  5862                           	callstack 17
  5863   0017A8                     
  5864                           ;dc_motor.c: 129: void turnRight(DC_motor *mL, DC_motor *mR);dc_motor.c: 130: {;dc_motor
      +                          .c: 132:     mL->direction = 1;
  5865   0017A8  EE20 F001          	lfsr	2,1
  5866   0017AC  501C               	movf	turnRight@mL^0,w,c
  5867   0017AE  26D9               	addwf	fsr2l,f,c
  5868   0017B0  501D               	movf	(turnRight@mL+1)^0,w,c
  5869   0017B2  22DA               	addwfc	fsr2h,f,c
  5870   0017B4  0E01               	movlw	1
  5871   0017B6  6EDF               	movwf	indf2,c
  5872                           
  5873                           ;dc_motor.c: 133:     mL->brakemode = 0;
  5874   0017B8  EE20 F002          	lfsr	2,2
  5875   0017BC  501C               	movf	turnRight@mL^0,w,c
  5876   0017BE  26D9               	addwf	fsr2l,f,c
  5877   0017C0  501D               	movf	(turnRight@mL+1)^0,w,c
  5878   0017C2  22DA               	addwfc	fsr2h,f,c
  5879   0017C4  0E00               	movlw	0
  5880   0017C6  6EDF               	movwf	indf2,c
  5881                           
  5882                           ;dc_motor.c: 135:     mR->direction = 0;
  5883   0017C8  EE20 F001          	lfsr	2,1
  5884   0017CC  501E               	movf	turnRight@mR^0,w,c
  5885   0017CE  26D9               	addwf	fsr2l,f,c
  5886   0017D0  501F               	movf	(turnRight@mR+1)^0,w,c
  5887   0017D2  22DA               	addwfc	fsr2h,f,c
  5888   0017D4  0E00               	movlw	0
  5889   0017D6  6EDF               	movwf	indf2,c
  5890                           
  5891                           ;dc_motor.c: 136:     mR->brakemode = 0;
  5892   0017D8  EE20 F002          	lfsr	2,2
  5893   0017DC  501E               	movf	turnRight@mR^0,w,c
  5894   0017DE  26D9               	addwf	fsr2l,f,c
  5895   0017E0  501F               	movf	(turnRight@mR+1)^0,w,c
  5896   0017E2  22DA               	addwfc	fsr2h,f,c
  5897   0017E4  0E00               	movlw	0
  5898   0017E6  6EDF               	movwf	indf2,c
  5899                           
  5900                           ;dc_motor.c: 139:     if(mL->power>62){mL->power=62;}
  5901   0017E8  C01C  FFD9         	movff	turnRight@mL,fsr2l
  5902   0017EC  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  5903   0017F0  50DF               	movf	indf2,w,c
  5904   0017F2  0A80               	xorlw	128
  5905   0017F4  0F41               	addlw	-191
  5906   0017F6  A0D8               	btfss	status,0,c
  5907   0017F8  EF00  F00C         	goto	u2111
  5908   0017FC  EF02  F00C         	goto	u2110
  5909   001800                     u2111:
  5910   001800  EF08  F00C         	goto	l2836
  5911   001804                     u2110:
  5912   001804  C01C  FFD9         	movff	turnRight@mL,fsr2l
  5913   001808  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  5914   00180C  0E3E               	movlw	62
  5915   00180E  6EDF               	movwf	indf2,c
  5916   001810                     l2836:
  5917                           
  5918                           ;dc_motor.c: 140:     if(mR->power>62){mR->power=62;}
  5919   001810  C01E  FFD9         	movff	turnRight@mR,fsr2l
  5920   001814  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  5921   001818  50DF               	movf	indf2,w,c
  5922   00181A  0A80               	xorlw	128
  5923   00181C  0F41               	addlw	-191
  5924   00181E  A0D8               	btfss	status,0,c
  5925   001820  EF14  F00C         	goto	u2121
  5926   001824  EF16  F00C         	goto	u2120
  5927   001828                     u2121:
  5928   001828  EF1C  F00C         	goto	l2840
  5929   00182C                     u2120:
  5930   00182C  C01E  FFD9         	movff	turnRight@mR,fsr2l
  5931   001830  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  5932   001834  0E3E               	movlw	62
  5933   001836  6EDF               	movwf	indf2,c
  5934   001838                     l2840:
  5935                           
  5936                           ;dc_motor.c: 142:     mL->power = mL->power + 10 ;
  5937   001838  C01C  FFD9         	movff	turnRight@mL,fsr2l
  5938   00183C  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  5939   001840  50DF               	movf	indf2,w,c
  5940   001842  0F0A               	addlw	10
  5941   001844  C01C  FFD9         	movff	turnRight@mL,fsr2l
  5942   001848  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  5943   00184C  6EDF               	movwf	indf2,c
  5944   00184E                     
  5945                           ;dc_motor.c: 143:     mR->power = mR->power + 10;
  5946   00184E  C01E  FFD9         	movff	turnRight@mR,fsr2l
  5947   001852  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  5948   001856  50DF               	movf	indf2,w,c
  5949   001858  0F0A               	addlw	10
  5950   00185A  C01E  FFD9         	movff	turnRight@mR,fsr2l
  5951   00185E  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  5952   001862  6EDF               	movwf	indf2,c
  5953   001864                     
  5954                           ;dc_motor.c: 145:     setMotorPWM(mL);
  5955   001864  C01C  F016         	movff	turnRight@mL,setMotorPWM@m
  5956   001868  C01D  F017         	movff	turnRight@mL+1,setMotorPWM@m+1
  5957   00186C  EC9A  F00A         	call	_setMotorPWM	;wreg free
  5958   001870                     
  5959                           ;dc_motor.c: 146:     setMotorPWM(mR);
  5960   001870  C01E  F016         	movff	turnRight@mR,setMotorPWM@m
  5961   001874  C01F  F017         	movff	turnRight@mR+1,setMotorPWM@m+1
  5962   001878  EC9A  F00A         	call	_setMotorPWM	;wreg free
  5963   00187C                     
  5964                           ;dc_motor.c: 147:     _delay((unsigned long)((20)*(64000000/4000.0)));
  5965   00187C  0E02               	movlw	2
  5966   00187E  6E21               	movwf	(??_turnRight+1)^0,c
  5967   001880  0EA0               	movlw	160
  5968   001882  6E20               	movwf	??_turnRight^0,c
  5969   001884  0E92               	movlw	146
  5970   001886                     u4677:
  5971   001886  2EE8               	decfsz	wreg,f,c
  5972   001888  D7FE               	bra	u4677
  5973   00188A  2E20               	decfsz	??_turnRight^0,f,c
  5974   00188C  D7FC               	bra	u4677
  5975   00188E  2E21               	decfsz	(??_turnRight+1)^0,f,c
  5976   001890  D7FA               	bra	u4677
  5977   001892  D000               	nop2	
  5978   001894  0012               	return		;funcret
  5979   001896                     __end_of_turnRight:
  5980                           	callstack 0
  5981                           
  5982 ;; *************** function _AntiPink *****************
  5983 ;; Defined at:
  5984 ;;		line 134 in file "color_instructions.c"
  5985 ;; Parameters:    Size  Location     Type
  5986 ;;  mL              2   45[COMRAM] PTR struct DC_motor
  5987 ;;		 -> main@motorL(9), 
  5988 ;;  mR              2   47[COMRAM] PTR struct DC_motor
  5989 ;;		 -> main@motorR(9), 
  5990 ;; Auto vars:     Size  Location     Type
  5991 ;;  a               1   51[COMRAM] unsigned char 
  5992 ;; Return value:  Size  Location     Type
  5993 ;;                  1    wreg      void 
  5994 ;; Registers used:
  5995 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5996 ;; Tracked objects:
  5997 ;;		On entry : 0/0
  5998 ;;		On exit  : 0/0
  5999 ;;		Unchanged: 0/0
  6000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6001 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6002 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6003 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6004 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6005 ;;Total ram usage:        7 bytes
  6006 ;; Hardware stack levels used: 1
  6007 ;; Hardware stack levels required when called: 12
  6008 ;; This function calls:
  6009 ;;		_BlueInstructions
  6010 ;;		_GreenInstructions
  6011 ;;		_fullSpeedAhead
  6012 ;;		_stop
  6013 ;; This function is called by:
  6014 ;;		_MoveBuggy
  6015 ;; This function uses a non-reentrant model
  6016 ;;
  6017                           
  6018                           	psect	text25
  6019   001DD0                     __ptext25:
  6020                           	callstack 0
  6021   001DD0                     _AntiPink:
  6022                           	callstack 16
  6023   001DD0                     
  6024                           ;color_instructions.c: 135:     unsigned char a=0;
  6025   001DD0  0E00               	movlw	0
  6026   001DD2  6E34               	movwf	AntiPink@a^0,c
  6027   001DD4                     
  6028                           ;color_instructions.c: 137:     GreenInstructions(mL, mR);
  6029   001DD4  C02E  F027         	movff	AntiPink@mL,GreenInstructions@mL
  6030   001DD8  C02F  F028         	movff	AntiPink@mL+1,GreenInstructions@mL+1
  6031   001DDC  C030  F029         	movff	AntiPink@mR,GreenInstructions@mR
  6032   001DE0  C031  F02A         	movff	AntiPink@mR+1,GreenInstructions@mR+1
  6033   001DE4  ECDF  F011         	call	_GreenInstructions	;wreg free
  6034   001DE8                     
  6035                           ;color_instructions.c: 138:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6036   001DE8  0E05               	movlw	5
  6037   001DEA  6E33               	movwf	(??_AntiPink+1)^0,c
  6038   001DEC  0E0F               	movlw	15
  6039   001DEE  6E32               	movwf	??_AntiPink^0,c
  6040   001DF0  0EF1               	movlw	241
  6041   001DF2                     u4687:
  6042   001DF2  2EE8               	decfsz	wreg,f,c
  6043   001DF4  D7FE               	bra	u4687
  6044   001DF6  2E32               	decfsz	??_AntiPink^0,f,c
  6045   001DF8  D7FC               	bra	u4687
  6046   001DFA  2E33               	decfsz	(??_AntiPink+1)^0,f,c
  6047   001DFC  D7FA               	bra	u4687
  6048   001DFE  F000               	nop	
  6049                           
  6050                           ;color_instructions.c: 140:     while (a<45){
  6051   001E00  EF0D  F00F         	goto	l3192
  6052   001E04                     l3188:
  6053                           
  6054                           ;color_instructions.c: 141:         fullSpeedAhead(mL, mR);
  6055   001E04  C02E  F01C         	movff	AntiPink@mL,fullSpeedAhead@mL
  6056   001E08  C02F  F01D         	movff	AntiPink@mL+1,fullSpeedAhead@mL+1
  6057   001E0C  C030  F01E         	movff	AntiPink@mR,fullSpeedAhead@mR
  6058   001E10  C031  F01F         	movff	AntiPink@mR+1,fullSpeedAhead@mR+1
  6059   001E14  EC4B  F00C         	call	_fullSpeedAhead	;wreg free
  6060   001E18                     
  6061                           ;color_instructions.c: 142:         a++;
  6062   001E18  2A34               	incf	AntiPink@a^0,f,c
  6063   001E1A                     l3192:
  6064                           
  6065                           ;color_instructions.c: 140:     while (a<45){
  6066   001E1A  0E2C               	movlw	44
  6067   001E1C  6434               	cpfsgt	AntiPink@a^0,c
  6068   001E1E  EF13  F00F         	goto	u2491
  6069   001E22  EF15  F00F         	goto	u2490
  6070   001E26                     u2491:
  6071   001E26  EF02  F00F         	goto	l3188
  6072   001E2A                     u2490:
  6073   001E2A  EF22  F00F         	goto	l3198
  6074   001E2E                     l3194:
  6075                           
  6076                           ;color_instructions.c: 145:         stop(mL, mR);
  6077   001E2E  C02E  F01C         	movff	AntiPink@mL,stop@mL
  6078   001E32  C02F  F01D         	movff	AntiPink@mL+1,stop@mL+1
  6079   001E36  C030  F01E         	movff	AntiPink@mR,stop@mR
  6080   001E3A  C031  F01F         	movff	AntiPink@mR+1,stop@mR+1
  6081   001E3E  EC25  F00E         	call	_stop	;wreg free
  6082   001E42                     
  6083                           ;color_instructions.c: 146:         a--;
  6084   001E42  0634               	decf	AntiPink@a^0,f,c
  6085   001E44                     l3198:
  6086                           
  6087                           ;color_instructions.c: 144:     while (a>0){
  6088   001E44  5034               	movf	AntiPink@a^0,w,c
  6089   001E46  A4D8               	btfss	status,2,c
  6090   001E48  EF28  F00F         	goto	u2501
  6091   001E4C  EF2A  F00F         	goto	u2500
  6092   001E50                     u2501:
  6093   001E50  EF17  F00F         	goto	l3194
  6094   001E54                     u2500:
  6095   001E54                     
  6096                           ;color_instructions.c: 148:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6097   001E54  0E05               	movlw	5
  6098   001E56  6E33               	movwf	(??_AntiPink+1)^0,c
  6099   001E58  0E0F               	movlw	15
  6100   001E5A  6E32               	movwf	??_AntiPink^0,c
  6101   001E5C  0EF1               	movlw	241
  6102   001E5E                     u4697:
  6103   001E5E  2EE8               	decfsz	wreg,f,c
  6104   001E60  D7FE               	bra	u4697
  6105   001E62  2E32               	decfsz	??_AntiPink^0,f,c
  6106   001E64  D7FC               	bra	u4697
  6107   001E66  2E33               	decfsz	(??_AntiPink+1)^0,f,c
  6108   001E68  D7FA               	bra	u4697
  6109   001E6A  F000               	nop	
  6110   001E6C                     
  6111                           ;color_instructions.c: 150:     BlueInstructions(mL, mR);
  6112   001E6C  C02E  F027         	movff	AntiPink@mL,BlueInstructions@mL
  6113   001E70  C02F  F028         	movff	AntiPink@mL+1,BlueInstructions@mL+1
  6114   001E74  C030  F029         	movff	AntiPink@mR,BlueInstructions@mR
  6115   001E78  C031  F02A         	movff	AntiPink@mR+1,BlueInstructions@mR+1
  6116   001E7C  EC41  F00F         	call	_BlueInstructions	;wreg free
  6117   001E80  0012               	return		;funcret
  6118   001E82                     __end_of_AntiPink:
  6119                           	callstack 0
  6120                           
  6121 ;; *************** function _fullSpeedAhead *****************
  6122 ;; Defined at:
  6123 ;;		line 151 in file "dc_motor.c"
  6124 ;; Parameters:    Size  Location     Type
  6125 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6126 ;;		 -> main@motorL(9), 
  6127 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6128 ;;		 -> main@motorR(9), 
  6129 ;; Auto vars:     Size  Location     Type
  6130 ;;		None
  6131 ;; Return value:  Size  Location     Type
  6132 ;;                  1    wreg      void 
  6133 ;; Registers used:
  6134 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6135 ;; Tracked objects:
  6136 ;;		On entry : 0/0
  6137 ;;		On exit  : 0/0
  6138 ;;		Unchanged: 0/0
  6139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6140 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6142 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6143 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6144 ;;Total ram usage:        6 bytes
  6145 ;; Hardware stack levels used: 1
  6146 ;; Hardware stack levels required when called: 9
  6147 ;; This function calls:
  6148 ;;		_setMotorPWM
  6149 ;; This function is called by:
  6150 ;;		_main
  6151 ;;		_AntiYellow
  6152 ;;		_AntiPink
  6153 ;;		_WhiteInstructions
  6154 ;; This function uses a non-reentrant model
  6155 ;;
  6156                           
  6157                           	psect	text26
  6158   001896                     __ptext26:
  6159                           	callstack 0
  6160   001896                     _fullSpeedAhead:
  6161                           	callstack 21
  6162   001896                     
  6163                           ;dc_motor.c: 151: void fullSpeedAhead(DC_motor *mL, DC_motor *mR);dc_motor.c: 152: {;dc_
      +                          motor.c: 154:     mL->direction = 1;
  6164   001896  EE20 F001          	lfsr	2,1
  6165   00189A  501C               	movf	fullSpeedAhead@mL^0,w,c
  6166   00189C  26D9               	addwf	fsr2l,f,c
  6167   00189E  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  6168   0018A0  22DA               	addwfc	fsr2h,f,c
  6169   0018A2  0E01               	movlw	1
  6170   0018A4  6EDF               	movwf	indf2,c
  6171                           
  6172                           ;dc_motor.c: 155:     mL->brakemode = 0;
  6173   0018A6  EE20 F002          	lfsr	2,2
  6174   0018AA  501C               	movf	fullSpeedAhead@mL^0,w,c
  6175   0018AC  26D9               	addwf	fsr2l,f,c
  6176   0018AE  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  6177   0018B0  22DA               	addwfc	fsr2h,f,c
  6178   0018B2  0E00               	movlw	0
  6179   0018B4  6EDF               	movwf	indf2,c
  6180                           
  6181                           ;dc_motor.c: 157:     mR->direction = 1;
  6182   0018B6  EE20 F001          	lfsr	2,1
  6183   0018BA  501E               	movf	fullSpeedAhead@mR^0,w,c
  6184   0018BC  26D9               	addwf	fsr2l,f,c
  6185   0018BE  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  6186   0018C0  22DA               	addwfc	fsr2h,f,c
  6187   0018C2  0E01               	movlw	1
  6188   0018C4  6EDF               	movwf	indf2,c
  6189                           
  6190                           ;dc_motor.c: 158:     mR->brakemode = 0;
  6191   0018C6  EE20 F002          	lfsr	2,2
  6192   0018CA  501E               	movf	fullSpeedAhead@mR^0,w,c
  6193   0018CC  26D9               	addwf	fsr2l,f,c
  6194   0018CE  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  6195   0018D0  22DA               	addwfc	fsr2h,f,c
  6196   0018D2  0E00               	movlw	0
  6197   0018D4  6EDF               	movwf	indf2,c
  6198                           
  6199                           ;dc_motor.c: 162:     if(mL->power>40){mL->power=40;}
  6200   0018D6  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  6201   0018DA  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  6202   0018DE  50DF               	movf	indf2,w,c
  6203   0018E0  0A80               	xorlw	128
  6204   0018E2  0F57               	addlw	-169
  6205   0018E4  A0D8               	btfss	status,0,c
  6206   0018E6  EF77  F00C         	goto	u2251
  6207   0018EA  EF79  F00C         	goto	u2250
  6208   0018EE                     u2251:
  6209   0018EE  EF7F  F00C         	goto	l2942
  6210   0018F2                     u2250:
  6211   0018F2  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  6212   0018F6  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  6213   0018FA  0E28               	movlw	40
  6214   0018FC  6EDF               	movwf	indf2,c
  6215   0018FE                     l2942:
  6216                           
  6217                           ;dc_motor.c: 163:     if(mR->power>43){mR->power=43;}
  6218   0018FE  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  6219   001902  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  6220   001906  50DF               	movf	indf2,w,c
  6221   001908  0A80               	xorlw	128
  6222   00190A  0F54               	addlw	-172
  6223   00190C  A0D8               	btfss	status,0,c
  6224   00190E  EF8B  F00C         	goto	u2261
  6225   001912  EF8D  F00C         	goto	u2260
  6226   001916                     u2261:
  6227   001916  EF93  F00C         	goto	l2946
  6228   00191A                     u2260:
  6229   00191A  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  6230   00191E  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  6231   001922  0E2B               	movlw	43
  6232   001924  6EDF               	movwf	indf2,c
  6233   001926                     l2946:
  6234                           
  6235                           ;dc_motor.c: 165:     mL->power = mL->power + 5 ;
  6236   001926  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  6237   00192A  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  6238   00192E  50DF               	movf	indf2,w,c
  6239   001930  0F05               	addlw	5
  6240   001932  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  6241   001936  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  6242   00193A  6EDF               	movwf	indf2,c
  6243   00193C                     
  6244                           ;dc_motor.c: 166:     mR->power = mR->power + 7;
  6245   00193C  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  6246   001940  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  6247   001944  50DF               	movf	indf2,w,c
  6248   001946  0F07               	addlw	7
  6249   001948  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  6250   00194C  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  6251   001950  6EDF               	movwf	indf2,c
  6252   001952                     
  6253                           ;dc_motor.c: 168:     setMotorPWM(mL);
  6254   001952  C01C  F016         	movff	fullSpeedAhead@mL,setMotorPWM@m
  6255   001956  C01D  F017         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  6256   00195A  EC9A  F00A         	call	_setMotorPWM	;wreg free
  6257   00195E                     
  6258                           ;dc_motor.c: 169:     setMotorPWM(mR);
  6259   00195E  C01E  F016         	movff	fullSpeedAhead@mR,setMotorPWM@m
  6260   001962  C01F  F017         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  6261   001966  EC9A  F00A         	call	_setMotorPWM	;wreg free
  6262   00196A                     
  6263                           ;dc_motor.c: 170:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6264   00196A  0E05               	movlw	5
  6265   00196C  6E21               	movwf	(??_fullSpeedAhead+1)^0,c
  6266   00196E  0E0F               	movlw	15
  6267   001970  6E20               	movwf	??_fullSpeedAhead^0,c
  6268   001972  0EF1               	movlw	241
  6269   001974                     u4707:
  6270   001974  2EE8               	decfsz	wreg,f,c
  6271   001976  D7FE               	bra	u4707
  6272   001978  2E20               	decfsz	??_fullSpeedAhead^0,f,c
  6273   00197A  D7FC               	bra	u4707
  6274   00197C  2E21               	decfsz	(??_fullSpeedAhead+1)^0,f,c
  6275   00197E  D7FA               	bra	u4707
  6276   001980  F000               	nop	
  6277   001982  0012               	return		;funcret
  6278   001984                     __end_of_fullSpeedAhead:
  6279                           	callstack 0
  6280                           
  6281 ;; *************** function _GreenInstructions *****************
  6282 ;; Defined at:
  6283 ;;		line 25 in file "color_instructions.c"
  6284 ;; Parameters:    Size  Location     Type
  6285 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  6286 ;;		 -> main@motorL(9), 
  6287 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  6288 ;;		 -> main@motorR(9), 
  6289 ;; Auto vars:     Size  Location     Type
  6290 ;;  a               1   44[COMRAM] unsigned char 
  6291 ;; Return value:  Size  Location     Type
  6292 ;;                  1    wreg      void 
  6293 ;; Registers used:
  6294 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6295 ;; Tracked objects:
  6296 ;;		On entry : 0/0
  6297 ;;		On exit  : 0/0
  6298 ;;		Unchanged: 0/0
  6299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6300 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6301 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6302 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6303 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6304 ;;Total ram usage:        7 bytes
  6305 ;; Hardware stack levels used: 1
  6306 ;; Hardware stack levels required when called: 11
  6307 ;; This function calls:
  6308 ;;		_fullSpeedBackwards
  6309 ;;		_stop
  6310 ;;		_turnLeft90
  6311 ;; This function is called by:
  6312 ;;		_AntiPink
  6313 ;;		_MoveBuggy
  6314 ;; This function uses a non-reentrant model
  6315 ;;
  6316                           
  6317                           	psect	text27
  6318   0023BE                     __ptext27:
  6319                           	callstack 0
  6320   0023BE                     _GreenInstructions:
  6321                           	callstack 17
  6322   0023BE                     
  6323                           ;color_instructions.c: 26:     unsigned char a=0;
  6324   0023BE  0E00               	movlw	0
  6325   0023C0  6E2D               	movwf	GreenInstructions@a^0,c
  6326                           
  6327                           ;color_instructions.c: 27:     while (a<16){
  6328   0023C2  EFEE  F011         	goto	l3012
  6329   0023C6                     l3008:
  6330                           
  6331                           ;color_instructions.c: 28:         fullSpeedBackwards(mL, mR);
  6332   0023C6  C027  F01C         	movff	GreenInstructions@mL,fullSpeedBackwards@mL
  6333   0023CA  C028  F01D         	movff	GreenInstructions@mL+1,fullSpeedBackwards@mL+1
  6334   0023CE  C029  F01E         	movff	GreenInstructions@mR,fullSpeedBackwards@mR
  6335   0023D2  C02A  F01F         	movff	GreenInstructions@mR+1,fullSpeedBackwards@mR+1
  6336   0023D6  EC39  F00D         	call	_fullSpeedBackwards	;wreg free
  6337   0023DA                     
  6338                           ;color_instructions.c: 29:         a++;
  6339   0023DA  2A2D               	incf	GreenInstructions@a^0,f,c
  6340   0023DC                     l3012:
  6341                           
  6342                           ;color_instructions.c: 27:     while (a<16){
  6343   0023DC  0E0F               	movlw	15
  6344   0023DE  642D               	cpfsgt	GreenInstructions@a^0,c
  6345   0023E0  EFF4  F011         	goto	u2331
  6346   0023E4  EFF6  F011         	goto	u2330
  6347   0023E8                     u2331:
  6348   0023E8  EFE3  F011         	goto	l3008
  6349   0023EC                     u2330:
  6350   0023EC  EF03  F012         	goto	l3018
  6351   0023F0                     l3014:
  6352                           
  6353                           ;color_instructions.c: 32:         stop(mL, mR);
  6354   0023F0  C027  F01C         	movff	GreenInstructions@mL,stop@mL
  6355   0023F4  C028  F01D         	movff	GreenInstructions@mL+1,stop@mL+1
  6356   0023F8  C029  F01E         	movff	GreenInstructions@mR,stop@mR
  6357   0023FC  C02A  F01F         	movff	GreenInstructions@mR+1,stop@mR+1
  6358   002400  EC25  F00E         	call	_stop	;wreg free
  6359   002404                     
  6360                           ;color_instructions.c: 33:         a--;
  6361   002404  062D               	decf	GreenInstructions@a^0,f,c
  6362   002406                     l3018:
  6363                           
  6364                           ;color_instructions.c: 31:     while (a>0){
  6365   002406  502D               	movf	GreenInstructions@a^0,w,c
  6366   002408  A4D8               	btfss	status,2,c
  6367   00240A  EF09  F012         	goto	u2341
  6368   00240E  EF0B  F012         	goto	u2340
  6369   002412                     u2341:
  6370   002412  EFF8  F011         	goto	l3014
  6371   002416                     u2340:
  6372   002416                     
  6373                           ;color_instructions.c: 35:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6374   002416  0E05               	movlw	5
  6375   002418  6E2C               	movwf	(??_GreenInstructions+1)^0,c
  6376   00241A  0E0F               	movlw	15
  6377   00241C  6E2B               	movwf	??_GreenInstructions^0,c
  6378   00241E  0EF1               	movlw	241
  6379   002420                     u4717:
  6380   002420  2EE8               	decfsz	wreg,f,c
  6381   002422  D7FE               	bra	u4717
  6382   002424  2E2B               	decfsz	??_GreenInstructions^0,f,c
  6383   002426  D7FC               	bra	u4717
  6384   002428  2E2C               	decfsz	(??_GreenInstructions+1)^0,f,c
  6385   00242A  D7FA               	bra	u4717
  6386   00242C  F000               	nop	
  6387   00242E                     
  6388                           ;color_instructions.c: 36:     turnLeft90(mL, mR);
  6389   00242E  C027  F022         	movff	GreenInstructions@mL,turnLeft90@mL
  6390   002432  C028  F023         	movff	GreenInstructions@mL+1,turnLeft90@mL+1
  6391   002436  C029  F024         	movff	GreenInstructions@mR,turnLeft90@mR
  6392   00243A  C02A  F025         	movff	GreenInstructions@mR+1,turnLeft90@mR+1
  6393   00243E  ECF1  F00F         	call	_turnLeft90	;wreg free
  6394   002442  0012               	return		;funcret
  6395   002444                     __end_of_GreenInstructions:
  6396                           	callstack 0
  6397                           
  6398 ;; *************** function _BlueInstructions *****************
  6399 ;; Defined at:
  6400 ;;		line 39 in file "color_instructions.c"
  6401 ;; Parameters:    Size  Location     Type
  6402 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  6403 ;;		 -> main@motorL(9), 
  6404 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  6405 ;;		 -> main@motorR(9), 
  6406 ;; Auto vars:     Size  Location     Type
  6407 ;;  a               1   44[COMRAM] unsigned char 
  6408 ;; Return value:  Size  Location     Type
  6409 ;;                  1    wreg      void 
  6410 ;; Registers used:
  6411 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6412 ;; Tracked objects:
  6413 ;;		On entry : 0/0
  6414 ;;		On exit  : 0/0
  6415 ;;		Unchanged: 0/0
  6416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6417 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6418 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6419 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6420 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6421 ;;Total ram usage:        7 bytes
  6422 ;; Hardware stack levels used: 1
  6423 ;; Hardware stack levels required when called: 11
  6424 ;; This function calls:
  6425 ;;		_fullSpeedBackwards
  6426 ;;		_stop
  6427 ;;		_turnLeft90
  6428 ;; This function is called by:
  6429 ;;		_AntiYellow
  6430 ;;		_AntiPink
  6431 ;;		_WhiteInstructions
  6432 ;;		_MoveBuggy
  6433 ;; This function uses a non-reentrant model
  6434 ;;
  6435                           
  6436                           	psect	text28
  6437   001E82                     __ptext28:
  6438                           	callstack 0
  6439   001E82                     _BlueInstructions:
  6440                           	callstack 17
  6441   001E82                     
  6442                           ;color_instructions.c: 40:     unsigned char a=0;
  6443   001E82  0E00               	movlw	0
  6444   001E84  6E2D               	movwf	BlueInstructions@a^0,c
  6445                           
  6446                           ;color_instructions.c: 41:     while (a<16){
  6447   001E86  EF50  F00F         	goto	l3030
  6448   001E8A                     l3026:
  6449                           
  6450                           ;color_instructions.c: 42:         fullSpeedBackwards(mL, mR);
  6451   001E8A  C027  F01C         	movff	BlueInstructions@mL,fullSpeedBackwards@mL
  6452   001E8E  C028  F01D         	movff	BlueInstructions@mL+1,fullSpeedBackwards@mL+1
  6453   001E92  C029  F01E         	movff	BlueInstructions@mR,fullSpeedBackwards@mR
  6454   001E96  C02A  F01F         	movff	BlueInstructions@mR+1,fullSpeedBackwards@mR+1
  6455   001E9A  EC39  F00D         	call	_fullSpeedBackwards	;wreg free
  6456   001E9E                     
  6457                           ;color_instructions.c: 43:         a++;
  6458   001E9E  2A2D               	incf	BlueInstructions@a^0,f,c
  6459   001EA0                     l3030:
  6460                           
  6461                           ;color_instructions.c: 41:     while (a<16){
  6462   001EA0  0E0F               	movlw	15
  6463   001EA2  642D               	cpfsgt	BlueInstructions@a^0,c
  6464   001EA4  EF56  F00F         	goto	u2351
  6465   001EA8  EF58  F00F         	goto	u2350
  6466   001EAC                     u2351:
  6467   001EAC  EF45  F00F         	goto	l3026
  6468   001EB0                     u2350:
  6469   001EB0  EF65  F00F         	goto	l3036
  6470   001EB4                     l3032:
  6471                           
  6472                           ;color_instructions.c: 46:         stop(mL, mR);
  6473   001EB4  C027  F01C         	movff	BlueInstructions@mL,stop@mL
  6474   001EB8  C028  F01D         	movff	BlueInstructions@mL+1,stop@mL+1
  6475   001EBC  C029  F01E         	movff	BlueInstructions@mR,stop@mR
  6476   001EC0  C02A  F01F         	movff	BlueInstructions@mR+1,stop@mR+1
  6477   001EC4  EC25  F00E         	call	_stop	;wreg free
  6478   001EC8                     
  6479                           ;color_instructions.c: 47:         a--;
  6480   001EC8  062D               	decf	BlueInstructions@a^0,f,c
  6481   001ECA                     l3036:
  6482                           
  6483                           ;color_instructions.c: 45:     while (a>0){
  6484   001ECA  502D               	movf	BlueInstructions@a^0,w,c
  6485   001ECC  A4D8               	btfss	status,2,c
  6486   001ECE  EF6B  F00F         	goto	u2361
  6487   001ED2  EF6D  F00F         	goto	u2360
  6488   001ED6                     u2361:
  6489   001ED6  EF5A  F00F         	goto	l3032
  6490   001EDA                     u2360:
  6491   001EDA                     
  6492                           ;color_instructions.c: 49:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6493   001EDA  0E05               	movlw	5
  6494   001EDC  6E2C               	movwf	(??_BlueInstructions+1)^0,c
  6495   001EDE  0E0F               	movlw	15
  6496   001EE0  6E2B               	movwf	??_BlueInstructions^0,c
  6497   001EE2  0EF1               	movlw	241
  6498   001EE4                     u4727:
  6499   001EE4  2EE8               	decfsz	wreg,f,c
  6500   001EE6  D7FE               	bra	u4727
  6501   001EE8  2E2B               	decfsz	??_BlueInstructions^0,f,c
  6502   001EEA  D7FC               	bra	u4727
  6503   001EEC  2E2C               	decfsz	(??_BlueInstructions+1)^0,f,c
  6504   001EEE  D7FA               	bra	u4727
  6505   001EF0  F000               	nop	
  6506   001EF2                     
  6507                           ;color_instructions.c: 51:     turnLeft90(mL, mR);
  6508   001EF2  C027  F022         	movff	BlueInstructions@mL,turnLeft90@mL
  6509   001EF6  C028  F023         	movff	BlueInstructions@mL+1,turnLeft90@mL+1
  6510   001EFA  C029  F024         	movff	BlueInstructions@mR,turnLeft90@mR
  6511   001EFE  C02A  F025         	movff	BlueInstructions@mR+1,turnLeft90@mR+1
  6512   001F02  ECF1  F00F         	call	_turnLeft90	;wreg free
  6513   001F06                     
  6514                           ;color_instructions.c: 52:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6515   001F06  0E05               	movlw	5
  6516   001F08  6E2C               	movwf	(??_BlueInstructions+1)^0,c
  6517   001F0A  0E0F               	movlw	15
  6518   001F0C  6E2B               	movwf	??_BlueInstructions^0,c
  6519   001F0E  0EF1               	movlw	241
  6520   001F10                     u4737:
  6521   001F10  2EE8               	decfsz	wreg,f,c
  6522   001F12  D7FE               	bra	u4737
  6523   001F14  2E2B               	decfsz	??_BlueInstructions^0,f,c
  6524   001F16  D7FC               	bra	u4737
  6525   001F18  2E2C               	decfsz	(??_BlueInstructions+1)^0,f,c
  6526   001F1A  D7FA               	bra	u4737
  6527   001F1C  F000               	nop	
  6528                           
  6529                           ;color_instructions.c: 53:     turnLeft90(mL, mR);
  6530   001F1E  C027  F022         	movff	BlueInstructions@mL,turnLeft90@mL
  6531   001F22  C028  F023         	movff	BlueInstructions@mL+1,turnLeft90@mL+1
  6532   001F26  C029  F024         	movff	BlueInstructions@mR,turnLeft90@mR
  6533   001F2A  C02A  F025         	movff	BlueInstructions@mR+1,turnLeft90@mR+1
  6534   001F2E  ECF1  F00F         	call	_turnLeft90	;wreg free
  6535   001F32  0012               	return		;funcret
  6536   001F34                     __end_of_BlueInstructions:
  6537                           	callstack 0
  6538                           
  6539 ;; *************** function _turnLeft90 *****************
  6540 ;; Defined at:
  6541 ;;		line 200 in file "dc_motor.c"
  6542 ;; Parameters:    Size  Location     Type
  6543 ;;  mL              2   33[COMRAM] PTR struct DC_motor
  6544 ;;		 -> main@motorL(9), 
  6545 ;;  mR              2   35[COMRAM] PTR struct DC_motor
  6546 ;;		 -> main@motorR(9), 
  6547 ;; Auto vars:     Size  Location     Type
  6548 ;;  a               1   37[COMRAM] unsigned char 
  6549 ;; Return value:  Size  Location     Type
  6550 ;;                  1    wreg      void 
  6551 ;; Registers used:
  6552 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6553 ;; Tracked objects:
  6554 ;;		On entry : 0/0
  6555 ;;		On exit  : 0/0
  6556 ;;		Unchanged: 0/0
  6557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6558 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6559 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6561 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6562 ;;Total ram usage:        5 bytes
  6563 ;; Hardware stack levels used: 1
  6564 ;; Hardware stack levels required when called: 10
  6565 ;; This function calls:
  6566 ;;		_stop
  6567 ;;		_turnLeft
  6568 ;; This function is called by:
  6569 ;;		_turnLeft135
  6570 ;;		_GreenInstructions
  6571 ;;		_BlueInstructions
  6572 ;;		_PinkInstructions
  6573 ;;		_turn180
  6574 ;; This function uses a non-reentrant model
  6575 ;;
  6576                           
  6577                           	psect	text29
  6578   001FE2                     __ptext29:
  6579                           	callstack 0
  6580   001FE2                     _turnLeft90:
  6581                           	callstack 17
  6582   001FE2                     
  6583                           ;dc_motor.c: 202:     unsigned char a=0;
  6584   001FE2  0E00               	movlw	0
  6585   001FE4  6E26               	movwf	turnLeft90@a^0,c
  6586                           
  6587                           ;dc_motor.c: 203:     while(a<16){
  6588   001FE6  EF00  F010         	goto	l2886
  6589   001FEA                     l2882:
  6590                           
  6591                           ;dc_motor.c: 204:         turnLeft(mL, mR);
  6592   001FEA  C022  F01C         	movff	turnLeft90@mL,turnLeft@mL
  6593   001FEE  C023  F01D         	movff	turnLeft90@mL+1,turnLeft@mL+1
  6594   001FF2  C024  F01E         	movff	turnLeft90@mR,turnLeft@mR
  6595   001FF6  C025  F01F         	movff	turnLeft90@mR+1,turnLeft@mR+1
  6596   001FFA  ECC2  F00C         	call	_turnLeft	;wreg free
  6597   001FFE                     
  6598                           ;dc_motor.c: 205:         a++;
  6599   001FFE  2A26               	incf	turnLeft90@a^0,f,c
  6600   002000                     l2886:
  6601                           
  6602                           ;dc_motor.c: 203:     while(a<16){
  6603   002000  0E0F               	movlw	15
  6604   002002  6426               	cpfsgt	turnLeft90@a^0,c
  6605   002004  EF06  F010         	goto	u2151
  6606   002008  EF08  F010         	goto	u2150
  6607   00200C                     u2151:
  6608   00200C  EFF5  F00F         	goto	l2882
  6609   002010                     u2150:
  6610   002010  EF15  F010         	goto	l2892
  6611   002014                     l2888:
  6612                           
  6613                           ;dc_motor.c: 208:         stop(mL, mR);
  6614   002014  C022  F01C         	movff	turnLeft90@mL,stop@mL
  6615   002018  C023  F01D         	movff	turnLeft90@mL+1,stop@mL+1
  6616   00201C  C024  F01E         	movff	turnLeft90@mR,stop@mR
  6617   002020  C025  F01F         	movff	turnLeft90@mR+1,stop@mR+1
  6618   002024  EC25  F00E         	call	_stop	;wreg free
  6619   002028                     
  6620                           ;dc_motor.c: 209:         a--;
  6621   002028  0626               	decf	turnLeft90@a^0,f,c
  6622   00202A                     l2892:
  6623                           
  6624                           ;dc_motor.c: 207:     while(a>0){
  6625   00202A  5026               	movf	turnLeft90@a^0,w,c
  6626   00202C  A4D8               	btfss	status,2,c
  6627   00202E  EF1B  F010         	goto	u2161
  6628   002032  EF1D  F010         	goto	u2160
  6629   002036                     u2161:
  6630   002036  EF0A  F010         	goto	l2888
  6631   00203A                     u2160:
  6632   00203A  EF2A  F010         	goto	l2898
  6633   00203E                     l2894:
  6634                           
  6635                           ;dc_motor.c: 212:         turnLeft(mL, mR);
  6636   00203E  C022  F01C         	movff	turnLeft90@mL,turnLeft@mL
  6637   002042  C023  F01D         	movff	turnLeft90@mL+1,turnLeft@mL+1
  6638   002046  C024  F01E         	movff	turnLeft90@mR,turnLeft@mR
  6639   00204A  C025  F01F         	movff	turnLeft90@mR+1,turnLeft@mR+1
  6640   00204E  ECC2  F00C         	call	_turnLeft	;wreg free
  6641   002052                     
  6642                           ;dc_motor.c: 213:         a++;
  6643   002052  2A26               	incf	turnLeft90@a^0,f,c
  6644   002054                     l2898:
  6645                           
  6646                           ;dc_motor.c: 211:     while(a<15){
  6647   002054  0E0E               	movlw	14
  6648   002056  6426               	cpfsgt	turnLeft90@a^0,c
  6649   002058  EF30  F010         	goto	u2171
  6650   00205C  EF32  F010         	goto	u2170
  6651   002060                     u2171:
  6652   002060  EF1F  F010         	goto	l2894
  6653   002064                     u2170:
  6654   002064  EF3F  F010         	goto	l2904
  6655   002068                     l2900:
  6656                           
  6657                           ;dc_motor.c: 216:         stop(mL, mR);
  6658   002068  C022  F01C         	movff	turnLeft90@mL,stop@mL
  6659   00206C  C023  F01D         	movff	turnLeft90@mL+1,stop@mL+1
  6660   002070  C024  F01E         	movff	turnLeft90@mR,stop@mR
  6661   002074  C025  F01F         	movff	turnLeft90@mR+1,stop@mR+1
  6662   002078  EC25  F00E         	call	_stop	;wreg free
  6663   00207C                     
  6664                           ;dc_motor.c: 217:         a--;
  6665   00207C  0626               	decf	turnLeft90@a^0,f,c
  6666   00207E                     l2904:
  6667                           
  6668                           ;dc_motor.c: 215:     while(a>0){
  6669   00207E  5026               	movf	turnLeft90@a^0,w,c
  6670   002080  A4D8               	btfss	status,2,c
  6671   002082  EF45  F010         	goto	u2181
  6672   002086  EF47  F010         	goto	u2180
  6673   00208A                     u2181:
  6674   00208A  EF34  F010         	goto	l2900
  6675   00208E                     u2180:
  6676   00208E  0012               	return		;funcret
  6677   002090                     __end_of_turnLeft90:
  6678                           	callstack 0
  6679                           
  6680 ;; *************** function _turnLeft *****************
  6681 ;; Defined at:
  6682 ;;		line 107 in file "dc_motor.c"
  6683 ;; Parameters:    Size  Location     Type
  6684 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6685 ;;		 -> main@motorL(9), 
  6686 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6687 ;;		 -> main@motorR(9), 
  6688 ;; Auto vars:     Size  Location     Type
  6689 ;;		None
  6690 ;; Return value:  Size  Location     Type
  6691 ;;                  1    wreg      void 
  6692 ;; Registers used:
  6693 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6694 ;; Tracked objects:
  6695 ;;		On entry : 0/0
  6696 ;;		On exit  : 0/0
  6697 ;;		Unchanged: 0/0
  6698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6699 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6701 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6702 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6703 ;;Total ram usage:        6 bytes
  6704 ;; Hardware stack levels used: 1
  6705 ;; Hardware stack levels required when called: 9
  6706 ;; This function calls:
  6707 ;;		_setMotorPWM
  6708 ;; This function is called by:
  6709 ;;		_turnLeft90
  6710 ;;		_turnLeft135
  6711 ;; This function uses a non-reentrant model
  6712 ;;
  6713                           
  6714                           	psect	text30
  6715   001984                     __ptext30:
  6716                           	callstack 0
  6717   001984                     _turnLeft:
  6718                           	callstack 17
  6719   001984                     
  6720                           ;dc_motor.c: 107: void turnLeft(DC_motor *mL, DC_motor *mR);dc_motor.c: 108: {;dc_motor.
      +                          c: 110:     mL->direction = 0;
  6721   001984  EE20 F001          	lfsr	2,1
  6722   001988  501C               	movf	turnLeft@mL^0,w,c
  6723   00198A  26D9               	addwf	fsr2l,f,c
  6724   00198C  501D               	movf	(turnLeft@mL+1)^0,w,c
  6725   00198E  22DA               	addwfc	fsr2h,f,c
  6726   001990  0E00               	movlw	0
  6727   001992  6EDF               	movwf	indf2,c
  6728                           
  6729                           ;dc_motor.c: 111:     mL->brakemode = 0;
  6730   001994  EE20 F002          	lfsr	2,2
  6731   001998  501C               	movf	turnLeft@mL^0,w,c
  6732   00199A  26D9               	addwf	fsr2l,f,c
  6733   00199C  501D               	movf	(turnLeft@mL+1)^0,w,c
  6734   00199E  22DA               	addwfc	fsr2h,f,c
  6735   0019A0  0E00               	movlw	0
  6736   0019A2  6EDF               	movwf	indf2,c
  6737                           
  6738                           ;dc_motor.c: 113:     mR->direction = 1;
  6739   0019A4  EE20 F001          	lfsr	2,1
  6740   0019A8  501E               	movf	turnLeft@mR^0,w,c
  6741   0019AA  26D9               	addwf	fsr2l,f,c
  6742   0019AC  501F               	movf	(turnLeft@mR+1)^0,w,c
  6743   0019AE  22DA               	addwfc	fsr2h,f,c
  6744   0019B0  0E01               	movlw	1
  6745   0019B2  6EDF               	movwf	indf2,c
  6746                           
  6747                           ;dc_motor.c: 114:     mR->brakemode = 0;
  6748   0019B4  EE20 F002          	lfsr	2,2
  6749   0019B8  501E               	movf	turnLeft@mR^0,w,c
  6750   0019BA  26D9               	addwf	fsr2l,f,c
  6751   0019BC  501F               	movf	(turnLeft@mR+1)^0,w,c
  6752   0019BE  22DA               	addwfc	fsr2h,f,c
  6753   0019C0  0E00               	movlw	0
  6754   0019C2  6EDF               	movwf	indf2,c
  6755                           
  6756                           ;dc_motor.c: 117:     if(mL->power>62){mL->power=62;}
  6757   0019C4  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6758   0019C8  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6759   0019CC  50DF               	movf	indf2,w,c
  6760   0019CE  0A80               	xorlw	128
  6761   0019D0  0F41               	addlw	-191
  6762   0019D2  A0D8               	btfss	status,0,c
  6763   0019D4  EFEE  F00C         	goto	u2091
  6764   0019D8  EFF0  F00C         	goto	u2090
  6765   0019DC                     u2091:
  6766   0019DC  EFF6  F00C         	goto	l2818
  6767   0019E0                     u2090:
  6768   0019E0  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6769   0019E4  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6770   0019E8  0E3E               	movlw	62
  6771   0019EA  6EDF               	movwf	indf2,c
  6772   0019EC                     l2818:
  6773                           
  6774                           ;dc_motor.c: 118:     if(mR->power>62){mR->power=62;}
  6775   0019EC  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6776   0019F0  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6777   0019F4  50DF               	movf	indf2,w,c
  6778   0019F6  0A80               	xorlw	128
  6779   0019F8  0F41               	addlw	-191
  6780   0019FA  A0D8               	btfss	status,0,c
  6781   0019FC  EF02  F00D         	goto	u2101
  6782   001A00  EF04  F00D         	goto	u2100
  6783   001A04                     u2101:
  6784   001A04  EF0A  F00D         	goto	l2822
  6785   001A08                     u2100:
  6786   001A08  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6787   001A0C  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6788   001A10  0E3E               	movlw	62
  6789   001A12  6EDF               	movwf	indf2,c
  6790   001A14                     l2822:
  6791                           
  6792                           ;dc_motor.c: 120:     mL->power = mL->power + 10 ;
  6793   001A14  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6794   001A18  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6795   001A1C  50DF               	movf	indf2,w,c
  6796   001A1E  0F0A               	addlw	10
  6797   001A20  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6798   001A24  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6799   001A28  6EDF               	movwf	indf2,c
  6800   001A2A                     
  6801                           ;dc_motor.c: 121:     mR->power = mR->power + 10;
  6802   001A2A  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6803   001A2E  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6804   001A32  50DF               	movf	indf2,w,c
  6805   001A34  0F0A               	addlw	10
  6806   001A36  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6807   001A3A  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6808   001A3E  6EDF               	movwf	indf2,c
  6809   001A40                     
  6810                           ;dc_motor.c: 123:     setMotorPWM(mL);
  6811   001A40  C01C  F016         	movff	turnLeft@mL,setMotorPWM@m
  6812   001A44  C01D  F017         	movff	turnLeft@mL+1,setMotorPWM@m+1
  6813   001A48  EC9A  F00A         	call	_setMotorPWM	;wreg free
  6814   001A4C                     
  6815                           ;dc_motor.c: 124:     setMotorPWM(mR);
  6816   001A4C  C01E  F016         	movff	turnLeft@mR,setMotorPWM@m
  6817   001A50  C01F  F017         	movff	turnLeft@mR+1,setMotorPWM@m+1
  6818   001A54  EC9A  F00A         	call	_setMotorPWM	;wreg free
  6819   001A58                     
  6820                           ;dc_motor.c: 125:     _delay((unsigned long)((20)*(64000000/4000.0)));
  6821   001A58  0E02               	movlw	2
  6822   001A5A  6E21               	movwf	(??_turnLeft+1)^0,c
  6823   001A5C  0EA0               	movlw	160
  6824   001A5E  6E20               	movwf	??_turnLeft^0,c
  6825   001A60  0E92               	movlw	146
  6826   001A62                     u4747:
  6827   001A62  2EE8               	decfsz	wreg,f,c
  6828   001A64  D7FE               	bra	u4747
  6829   001A66  2E20               	decfsz	??_turnLeft^0,f,c
  6830   001A68  D7FC               	bra	u4747
  6831   001A6A  2E21               	decfsz	(??_turnLeft+1)^0,f,c
  6832   001A6C  D7FA               	bra	u4747
  6833   001A6E  D000               	nop2	
  6834   001A70  0012               	return		;funcret
  6835   001A72                     __end_of_turnLeft:
  6836                           	callstack 0
  6837                           
  6838 ;; *************** function _stop *****************
  6839 ;; Defined at:
  6840 ;;		line 87 in file "dc_motor.c"
  6841 ;; Parameters:    Size  Location     Type
  6842 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6843 ;;		 -> main@motorL(9), 
  6844 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6845 ;;		 -> main@motorR(9), 
  6846 ;; Auto vars:     Size  Location     Type
  6847 ;;		None
  6848 ;; Return value:  Size  Location     Type
  6849 ;;                  1    wreg      void 
  6850 ;; Registers used:
  6851 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6852 ;; Tracked objects:
  6853 ;;		On entry : 0/0
  6854 ;;		On exit  : 0/0
  6855 ;;		Unchanged: 0/0
  6856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6857 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6859 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6860 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6861 ;;Total ram usage:        5 bytes
  6862 ;; Hardware stack levels used: 1
  6863 ;; Hardware stack levels required when called: 9
  6864 ;; This function calls:
  6865 ;;		_setMotorPWM
  6866 ;; This function is called by:
  6867 ;;		_turnLeft90
  6868 ;;		_turnRight90
  6869 ;;		_turnRight135
  6870 ;;		_turnLeft135
  6871 ;;		_main
  6872 ;;		_RedInstructions
  6873 ;;		_GreenInstructions
  6874 ;;		_BlueInstructions
  6875 ;;		_YellowInstructions
  6876 ;;		_PinkInstructions
  6877 ;;		_OrangeInstructions
  6878 ;;		_LightBlueInstructions
  6879 ;;		_AntiYellow
  6880 ;;		_AntiPink
  6881 ;;		_WhiteInstructions
  6882 ;; This function uses a non-reentrant model
  6883 ;;
  6884                           
  6885                           	psect	text31
  6886   001C4A                     __ptext31:
  6887                           	callstack 0
  6888   001C4A                     _stop:
  6889                           	callstack 21
  6890   001C4A                     
  6891                           ;dc_motor.c: 87: void stop(DC_motor *mL, DC_motor *mR);dc_motor.c: 88: {;dc_motor.c: 90:
      +                               mL->brakemode = 1;
  6892   001C4A  EE20 F002          	lfsr	2,2
  6893   001C4E  501C               	movf	stop@mL^0,w,c
  6894   001C50  26D9               	addwf	fsr2l,f,c
  6895   001C52  501D               	movf	(stop@mL+1)^0,w,c
  6896   001C54  22DA               	addwfc	fsr2h,f,c
  6897   001C56  0E01               	movlw	1
  6898   001C58  6EDF               	movwf	indf2,c
  6899                           
  6900                           ;dc_motor.c: 91:     mR->brakemode = 1;
  6901   001C5A  EE20 F002          	lfsr	2,2
  6902   001C5E  501E               	movf	stop@mR^0,w,c
  6903   001C60  26D9               	addwf	fsr2l,f,c
  6904   001C62  501F               	movf	(stop@mR+1)^0,w,c
  6905   001C64  22DA               	addwfc	fsr2h,f,c
  6906   001C66  0E01               	movlw	1
  6907   001C68  6EDF               	movwf	indf2,c
  6908                           
  6909                           ;dc_motor.c: 93:     if(mL->power<0){mL->power=0;}
  6910   001C6A  C01C  FFD9         	movff	stop@mL,fsr2l
  6911   001C6E  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6912   001C72  0E00               	movlw	0
  6913   001C74  BEDB               	btfsc	plusw2,7,c
  6914   001C76  EF41  F00E         	goto	u2070
  6915   001C7A  EF3F  F00E         	goto	u2071
  6916   001C7E                     u2071:
  6917   001C7E  EF47  F00E         	goto	l2800
  6918   001C82                     u2070:
  6919   001C82  C01C  FFD9         	movff	stop@mL,fsr2l
  6920   001C86  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6921   001C8A  0E00               	movlw	0
  6922   001C8C  6EDF               	movwf	indf2,c
  6923   001C8E                     l2800:
  6924                           
  6925                           ;dc_motor.c: 94:     if(mR->power<0){mR->power=0;}
  6926   001C8E  C01E  FFD9         	movff	stop@mR,fsr2l
  6927   001C92  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6928   001C96  0E00               	movlw	0
  6929   001C98  BEDB               	btfsc	plusw2,7,c
  6930   001C9A  EF53  F00E         	goto	u2080
  6931   001C9E  EF51  F00E         	goto	u2081
  6932   001CA2                     u2081:
  6933   001CA2  EF59  F00E         	goto	l2804
  6934   001CA6                     u2080:
  6935   001CA6  C01E  FFD9         	movff	stop@mR,fsr2l
  6936   001CAA  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6937   001CAE  0E00               	movlw	0
  6938   001CB0  6EDF               	movwf	indf2,c
  6939   001CB2                     l2804:
  6940                           
  6941                           ;dc_motor.c: 96:     mL->power = mL->power - 5 ;
  6942   001CB2  C01C  FFD9         	movff	stop@mL,fsr2l
  6943   001CB6  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6944   001CBA  50DF               	movf	indf2,w,c
  6945   001CBC  0FFB               	addlw	251
  6946   001CBE  C01C  FFD9         	movff	stop@mL,fsr2l
  6947   001CC2  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6948   001CC6  6EDF               	movwf	indf2,c
  6949   001CC8                     
  6950                           ;dc_motor.c: 97:     mR->power = mR->power - 5;
  6951   001CC8  C01E  FFD9         	movff	stop@mR,fsr2l
  6952   001CCC  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6953   001CD0  50DF               	movf	indf2,w,c
  6954   001CD2  0FFB               	addlw	251
  6955   001CD4  C01E  FFD9         	movff	stop@mR,fsr2l
  6956   001CD8  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6957   001CDC  6EDF               	movwf	indf2,c
  6958                           
  6959                           ;dc_motor.c: 99:     mL->power = 0;
  6960   001CDE  C01C  FFD9         	movff	stop@mL,fsr2l
  6961   001CE2  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6962   001CE6  0E00               	movlw	0
  6963   001CE8  6EDF               	movwf	indf2,c
  6964                           
  6965                           ;dc_motor.c: 100:     mR->power = 0;
  6966   001CEA  C01E  FFD9         	movff	stop@mR,fsr2l
  6967   001CEE  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6968   001CF2  0E00               	movlw	0
  6969   001CF4  6EDF               	movwf	indf2,c
  6970   001CF6                     
  6971                           ;dc_motor.c: 101:     setMotorPWM(mL);
  6972   001CF6  C01C  F016         	movff	stop@mL,setMotorPWM@m
  6973   001CFA  C01D  F017         	movff	stop@mL+1,setMotorPWM@m+1
  6974   001CFE  EC9A  F00A         	call	_setMotorPWM	;wreg free
  6975   001D02                     
  6976                           ;dc_motor.c: 102:     setMotorPWM(mR);
  6977   001D02  C01E  F016         	movff	stop@mR,setMotorPWM@m
  6978   001D06  C01F  F017         	movff	stop@mR+1,setMotorPWM@m+1
  6979   001D0A  EC9A  F00A         	call	_setMotorPWM	;wreg free
  6980   001D0E                     
  6981                           ;dc_motor.c: 103:     _delay((unsigned long)((10)*(64000000/4000.0)));
  6982   001D0E  0ED0               	movlw	208
  6983   001D10  6E20               	movwf	??_stop^0,c
  6984   001D12  0ECA               	movlw	202
  6985   001D14                     u4757:
  6986   001D14  2EE8               	decfsz	wreg,f,c
  6987   001D16  D7FE               	bra	u4757
  6988   001D18  2E20               	decfsz	??_stop^0,f,c
  6989   001D1A  D7FC               	bra	u4757
  6990   001D1C  0012               	return		;funcret
  6991   001D1E                     __end_of_stop:
  6992                           	callstack 0
  6993                           
  6994 ;; *************** function _fullSpeedBackwards *****************
  6995 ;; Defined at:
  6996 ;;		line 174 in file "dc_motor.c"
  6997 ;; Parameters:    Size  Location     Type
  6998 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6999 ;;		 -> main@motorL(9), 
  7000 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  7001 ;;		 -> main@motorR(9), 
  7002 ;; Auto vars:     Size  Location     Type
  7003 ;;		None
  7004 ;; Return value:  Size  Location     Type
  7005 ;;                  1    wreg      void 
  7006 ;; Registers used:
  7007 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7008 ;; Tracked objects:
  7009 ;;		On entry : 0/0
  7010 ;;		On exit  : 0/0
  7011 ;;		Unchanged: 0/0
  7012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7013 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7015 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7016 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7017 ;;Total ram usage:        6 bytes
  7018 ;; Hardware stack levels used: 1
  7019 ;; Hardware stack levels required when called: 9
  7020 ;; This function calls:
  7021 ;;		_setMotorPWM
  7022 ;; This function is called by:
  7023 ;;		_RedInstructions
  7024 ;;		_GreenInstructions
  7025 ;;		_BlueInstructions
  7026 ;;		_YellowInstructions
  7027 ;;		_PinkInstructions
  7028 ;;		_OrangeInstructions
  7029 ;;		_LightBlueInstructions
  7030 ;; This function uses a non-reentrant model
  7031 ;;
  7032                           
  7033                           	psect	text32
  7034   001A72                     __ptext32:
  7035                           	callstack 0
  7036   001A72                     _fullSpeedBackwards:
  7037                           	callstack 18
  7038   001A72                     
  7039                           ;dc_motor.c: 177:     mL->direction = 0;
  7040   001A72  EE20 F001          	lfsr	2,1
  7041   001A76  501C               	movf	fullSpeedBackwards@mL^0,w,c
  7042   001A78  26D9               	addwf	fsr2l,f,c
  7043   001A7A  501D               	movf	(fullSpeedBackwards@mL+1)^0,w,c
  7044   001A7C  22DA               	addwfc	fsr2h,f,c
  7045   001A7E  0E00               	movlw	0
  7046   001A80  6EDF               	movwf	indf2,c
  7047                           
  7048                           ;dc_motor.c: 178:     mL->brakemode = 0;
  7049   001A82  EE20 F002          	lfsr	2,2
  7050   001A86  501C               	movf	fullSpeedBackwards@mL^0,w,c
  7051   001A88  26D9               	addwf	fsr2l,f,c
  7052   001A8A  501D               	movf	(fullSpeedBackwards@mL+1)^0,w,c
  7053   001A8C  22DA               	addwfc	fsr2h,f,c
  7054   001A8E  0E00               	movlw	0
  7055   001A90  6EDF               	movwf	indf2,c
  7056                           
  7057                           ;dc_motor.c: 180:     mR->direction = 0;
  7058   001A92  EE20 F001          	lfsr	2,1
  7059   001A96  501E               	movf	fullSpeedBackwards@mR^0,w,c
  7060   001A98  26D9               	addwf	fsr2l,f,c
  7061   001A9A  501F               	movf	(fullSpeedBackwards@mR+1)^0,w,c
  7062   001A9C  22DA               	addwfc	fsr2h,f,c
  7063   001A9E  0E00               	movlw	0
  7064   001AA0  6EDF               	movwf	indf2,c
  7065                           
  7066                           ;dc_motor.c: 181:     mR->brakemode = 0;
  7067   001AA2  EE20 F002          	lfsr	2,2
  7068   001AA6  501E               	movf	fullSpeedBackwards@mR^0,w,c
  7069   001AA8  26D9               	addwf	fsr2l,f,c
  7070   001AAA  501F               	movf	(fullSpeedBackwards@mR+1)^0,w,c
  7071   001AAC  22DA               	addwfc	fsr2h,f,c
  7072   001AAE  0E00               	movlw	0
  7073   001AB0  6EDF               	movwf	indf2,c
  7074                           
  7075                           ;dc_motor.c: 184:     if(mL->power>38){mL->power=38;}
  7076   001AB2  C01C  FFD9         	movff	fullSpeedBackwards@mL,fsr2l
  7077   001AB6  C01D  FFDA         	movff	fullSpeedBackwards@mL+1,fsr2h
  7078   001ABA  50DF               	movf	indf2,w,c
  7079   001ABC  0A80               	xorlw	128
  7080   001ABE  0F59               	addlw	-167
  7081   001AC0  A0D8               	btfss	status,0,c
  7082   001AC2  EF65  F00D         	goto	u2131
  7083   001AC6  EF67  F00D         	goto	u2130
  7084   001ACA                     u2131:
  7085   001ACA  EF6D  F00D         	goto	l2866
  7086   001ACE                     u2130:
  7087   001ACE  C01C  FFD9         	movff	fullSpeedBackwards@mL,fsr2l
  7088   001AD2  C01D  FFDA         	movff	fullSpeedBackwards@mL+1,fsr2h
  7089   001AD6  0E26               	movlw	38
  7090   001AD8  6EDF               	movwf	indf2,c
  7091   001ADA                     l2866:
  7092                           
  7093                           ;dc_motor.c: 185:     if(mR->power>46){mR->power=46;}
  7094   001ADA  C01E  FFD9         	movff	fullSpeedBackwards@mR,fsr2l
  7095   001ADE  C01F  FFDA         	movff	fullSpeedBackwards@mR+1,fsr2h
  7096   001AE2  50DF               	movf	indf2,w,c
  7097   001AE4  0A80               	xorlw	128
  7098   001AE6  0F51               	addlw	-175
  7099   001AE8  A0D8               	btfss	status,0,c
  7100   001AEA  EF79  F00D         	goto	u2141
  7101   001AEE  EF7B  F00D         	goto	u2140
  7102   001AF2                     u2141:
  7103   001AF2  EF81  F00D         	goto	l2870
  7104   001AF6                     u2140:
  7105   001AF6  C01E  FFD9         	movff	fullSpeedBackwards@mR,fsr2l
  7106   001AFA  C01F  FFDA         	movff	fullSpeedBackwards@mR+1,fsr2h
  7107   001AFE  0E2E               	movlw	46
  7108   001B00  6EDF               	movwf	indf2,c
  7109   001B02                     l2870:
  7110                           
  7111                           ;dc_motor.c: 187:     mL->power = mL->power + 5 ;
  7112   001B02  C01C  FFD9         	movff	fullSpeedBackwards@mL,fsr2l
  7113   001B06  C01D  FFDA         	movff	fullSpeedBackwards@mL+1,fsr2h
  7114   001B0A  50DF               	movf	indf2,w,c
  7115   001B0C  0F05               	addlw	5
  7116   001B0E  C01C  FFD9         	movff	fullSpeedBackwards@mL,fsr2l
  7117   001B12  C01D  FFDA         	movff	fullSpeedBackwards@mL+1,fsr2h
  7118   001B16  6EDF               	movwf	indf2,c
  7119   001B18                     
  7120                           ;dc_motor.c: 188:     mR->power = mR->power + 8;
  7121   001B18  C01E  FFD9         	movff	fullSpeedBackwards@mR,fsr2l
  7122   001B1C  C01F  FFDA         	movff	fullSpeedBackwards@mR+1,fsr2h
  7123   001B20  50DF               	movf	indf2,w,c
  7124   001B22  0F08               	addlw	8
  7125   001B24  C01E  FFD9         	movff	fullSpeedBackwards@mR,fsr2l
  7126   001B28  C01F  FFDA         	movff	fullSpeedBackwards@mR+1,fsr2h
  7127   001B2C  6EDF               	movwf	indf2,c
  7128   001B2E                     
  7129                           ;dc_motor.c: 190:     setMotorPWM(mL);
  7130   001B2E  C01C  F016         	movff	fullSpeedBackwards@mL,setMotorPWM@m
  7131   001B32  C01D  F017         	movff	fullSpeedBackwards@mL+1,setMotorPWM@m+1
  7132   001B36  EC9A  F00A         	call	_setMotorPWM	;wreg free
  7133   001B3A                     
  7134                           ;dc_motor.c: 191:     setMotorPWM(mR);
  7135   001B3A  C01E  F016         	movff	fullSpeedBackwards@mR,setMotorPWM@m
  7136   001B3E  C01F  F017         	movff	fullSpeedBackwards@mR+1,setMotorPWM@m+1
  7137   001B42  EC9A  F00A         	call	_setMotorPWM	;wreg free
  7138   001B46                     
  7139                           ;dc_motor.c: 192:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7140   001B46  0E05               	movlw	5
  7141   001B48  6E21               	movwf	(??_fullSpeedBackwards+1)^0,c
  7142   001B4A  0E0F               	movlw	15
  7143   001B4C  6E20               	movwf	??_fullSpeedBackwards^0,c
  7144   001B4E  0EF1               	movlw	241
  7145   001B50                     u4767:
  7146   001B50  2EE8               	decfsz	wreg,f,c
  7147   001B52  D7FE               	bra	u4767
  7148   001B54  2E20               	decfsz	??_fullSpeedBackwards^0,f,c
  7149   001B56  D7FC               	bra	u4767
  7150   001B58  2E21               	decfsz	(??_fullSpeedBackwards+1)^0,f,c
  7151   001B5A  D7FA               	bra	u4767
  7152   001B5C  F000               	nop	
  7153   001B5E  0012               	return		;funcret
  7154   001B60                     __end_of_fullSpeedBackwards:
  7155                           	callstack 0
  7156                           
  7157 ;; *************** function _setMotorPWM *****************
  7158 ;; Defined at:
  7159 ;;		line 64 in file "dc_motor.c"
  7160 ;; Parameters:    Size  Location     Type
  7161 ;;  m               2   21[COMRAM] PTR struct DC_motor
  7162 ;;		 -> main@motorR(9), main@motorL(9), 
  7163 ;; Auto vars:     Size  Location     Type
  7164 ;;  negDuty         1   26[COMRAM] unsigned char 
  7165 ;;  posDuty         1   25[COMRAM] unsigned char 
  7166 ;; Return value:  Size  Location     Type
  7167 ;;                  1    wreg      void 
  7168 ;; Registers used:
  7169 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7170 ;; Tracked objects:
  7171 ;;		On entry : 0/0
  7172 ;;		On exit  : 0/0
  7173 ;;		Unchanged: 0/0
  7174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7175 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7176 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7177 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7178 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7179 ;;Total ram usage:        6 bytes
  7180 ;; Hardware stack levels used: 1
  7181 ;; Hardware stack levels required when called: 8
  7182 ;; This function calls:
  7183 ;;		___lwdiv
  7184 ;;		___wmul
  7185 ;; This function is called by:
  7186 ;;		_stop
  7187 ;;		_turnLeft
  7188 ;;		_turnRight
  7189 ;;		_fullSpeedAhead
  7190 ;;		_fullSpeedBackwards
  7191 ;; This function uses a non-reentrant model
  7192 ;;
  7193                           
  7194                           	psect	text33
  7195   001534                     __ptext33:
  7196                           	callstack 0
  7197   001534                     _setMotorPWM:
  7198                           	callstack 21
  7199   001534                     
  7200                           ;dc_motor.c: 64: void setMotorPWM(DC_motor *m);dc_motor.c: 65: {;dc_motor.c: 66:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 68:     if(m->brakemode) {
  7201   001534  EE20 F002          	lfsr	2,2
  7202   001538  5016               	movf	setMotorPWM@m^0,w,c
  7203   00153A  26D9               	addwf	fsr2l,f,c
  7204   00153C  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7205   00153E  22DA               	addwfc	fsr2h,f,c
  7206   001540  50DF               	movf	indf2,w,c
  7207   001542  B4D8               	btfsc	status,2,c
  7208   001544  EFA6  F00A         	goto	u2031
  7209   001548  EFA8  F00A         	goto	u2030
  7210   00154C                     u2031:
  7211   00154C  EFDC  F00A         	goto	l2782
  7212   001550                     u2030:
  7213   001550                     
  7214                           ;dc_motor.c: 69:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  7215   001550  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  7216   001554  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  7217   001558  50DF               	movf	indf2,w,c
  7218   00155A  6E09               	movwf	___wmul@multiplier^0,c
  7219   00155C  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  7220   00155E  BE09               	btfsc	___wmul@multiplier^0,7,c
  7221   001560  060A               	decf	(___wmul@multiplier+1)^0,f,c
  7222   001562  EE20 F003          	lfsr	2,3
  7223   001566  5016               	movf	setMotorPWM@m^0,w,c
  7224   001568  26D9               	addwf	fsr2l,f,c
  7225   00156A  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7226   00156C  22DA               	addwfc	fsr2h,f,c
  7227   00156E  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  7228   001572  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  7229   001576  ECB9  F014         	call	___wmul	;wreg free
  7230   00157A  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  7231   00157E  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  7232   001582  0E00               	movlw	0
  7233   001584  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  7234   001586  0E64               	movlw	100
  7235   001588  6E11               	movwf	___lwdiv@divisor^0,c
  7236   00158A  EC22  F012         	call	___lwdiv	;wreg free
  7237   00158E  EE20 F003          	lfsr	2,3
  7238   001592  5016               	movf	setMotorPWM@m^0,w,c
  7239   001594  26D9               	addwf	fsr2l,f,c
  7240   001596  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7241   001598  22DA               	addwfc	fsr2h,f,c
  7242   00159A  50DF               	movf	indf2,w,c
  7243   00159C  6E18               	movwf	??_setMotorPWM^0,c
  7244   00159E  500F               	movf	?___lwdiv^0,w,c
  7245   0015A0  5C18               	subwf	??_setMotorPWM^0,w,c
  7246   0015A2  6E1A               	movwf	setMotorPWM@posDuty^0,c
  7247   0015A4                     
  7248                           ;dc_motor.c: 70:         negDuty=m->PWMperiod;
  7249   0015A4  EE20 F003          	lfsr	2,3
  7250   0015A8  5016               	movf	setMotorPWM@m^0,w,c
  7251   0015AA  26D9               	addwf	fsr2l,f,c
  7252   0015AC  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7253   0015AE  22DA               	addwfc	fsr2h,f,c
  7254   0015B0  50DF               	movf	indf2,w,c
  7255   0015B2  6E1B               	movwf	setMotorPWM@negDuty^0,c
  7256                           
  7257                           ;dc_motor.c: 71:     }
  7258   0015B4  EFFF  F00A         	goto	l2786
  7259   0015B8                     l2782:
  7260                           
  7261                           ;dc_motor.c: 73:         posDuty=0;
  7262   0015B8  0E00               	movlw	0
  7263   0015BA  6E1A               	movwf	setMotorPWM@posDuty^0,c
  7264   0015BC                     
  7265                           ;dc_motor.c: 74:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  7266   0015BC  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  7267   0015C0  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  7268   0015C4  50DF               	movf	indf2,w,c
  7269   0015C6  6E09               	movwf	___wmul@multiplier^0,c
  7270   0015C8  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  7271   0015CA  BE09               	btfsc	___wmul@multiplier^0,7,c
  7272   0015CC  060A               	decf	(___wmul@multiplier+1)^0,f,c
  7273   0015CE  EE20 F003          	lfsr	2,3
  7274   0015D2  5016               	movf	setMotorPWM@m^0,w,c
  7275   0015D4  26D9               	addwf	fsr2l,f,c
  7276   0015D6  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7277   0015D8  22DA               	addwfc	fsr2h,f,c
  7278   0015DA  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  7279   0015DE  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  7280   0015E2  ECB9  F014         	call	___wmul	;wreg free
  7281   0015E6  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  7282   0015EA  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  7283   0015EE  0E00               	movlw	0
  7284   0015F0  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  7285   0015F2  0E64               	movlw	100
  7286   0015F4  6E11               	movwf	___lwdiv@divisor^0,c
  7287   0015F6  EC22  F012         	call	___lwdiv	;wreg free
  7288   0015FA  500F               	movf	?___lwdiv^0,w,c
  7289   0015FC  6E1B               	movwf	setMotorPWM@negDuty^0,c
  7290   0015FE                     l2786:
  7291                           
  7292                           ;dc_motor.c: 77:     if (m->direction) {
  7293   0015FE  EE20 F001          	lfsr	2,1
  7294   001602  5016               	movf	setMotorPWM@m^0,w,c
  7295   001604  26D9               	addwf	fsr2l,f,c
  7296   001606  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7297   001608  22DA               	addwfc	fsr2h,f,c
  7298   00160A  50DF               	movf	indf2,w,c
  7299   00160C  B4D8               	btfsc	status,2,c
  7300   00160E  EF0B  F00B         	goto	u2041
  7301   001612  EF0D  F00B         	goto	u2040
  7302   001616                     u2041:
  7303   001616  EF2F  F00B         	goto	l2790
  7304   00161A                     u2040:
  7305   00161A                     
  7306                           ;dc_motor.c: 78:         *(m->posDutyHighByte)=posDuty;
  7307   00161A  EE20 F005          	lfsr	2,5
  7308   00161E  5016               	movf	setMotorPWM@m^0,w,c
  7309   001620  26D9               	addwf	fsr2l,f,c
  7310   001622  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7311   001624  22DA               	addwfc	fsr2h,f,c
  7312   001626  CFDE F018          	movff	postinc2,??_setMotorPWM
  7313   00162A  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  7314   00162E  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  7315   001632  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  7316   001636  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  7317                           
  7318                           ;dc_motor.c: 79:         *(m->negDutyHighByte)=negDuty;
  7319   00163A  EE20 F007          	lfsr	2,7
  7320   00163E  5016               	movf	setMotorPWM@m^0,w,c
  7321   001640  26D9               	addwf	fsr2l,f,c
  7322   001642  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7323   001644  22DA               	addwfc	fsr2h,f,c
  7324   001646  CFDE F018          	movff	postinc2,??_setMotorPWM
  7325   00164A  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  7326   00164E  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  7327   001652  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  7328   001656  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  7329                           
  7330                           ;dc_motor.c: 80:     } else {
  7331   00165A  EF4F  F00B         	goto	l193
  7332   00165E                     l2790:
  7333                           
  7334                           ;dc_motor.c: 81:         *(m->posDutyHighByte)=negDuty;
  7335   00165E  EE20 F005          	lfsr	2,5
  7336   001662  5016               	movf	setMotorPWM@m^0,w,c
  7337   001664  26D9               	addwf	fsr2l,f,c
  7338   001666  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7339   001668  22DA               	addwfc	fsr2h,f,c
  7340   00166A  CFDE F018          	movff	postinc2,??_setMotorPWM
  7341   00166E  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  7342   001672  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  7343   001676  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  7344   00167A  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  7345                           
  7346                           ;dc_motor.c: 82:         *(m->negDutyHighByte)=posDuty;
  7347   00167E  EE20 F007          	lfsr	2,7
  7348   001682  5016               	movf	setMotorPWM@m^0,w,c
  7349   001684  26D9               	addwf	fsr2l,f,c
  7350   001686  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7351   001688  22DA               	addwfc	fsr2h,f,c
  7352   00168A  CFDE F018          	movff	postinc2,??_setMotorPWM
  7353   00168E  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  7354   001692  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  7355   001696  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  7356   00169A  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  7357   00169E                     l193:
  7358   00169E  0012               	return		;funcret
  7359   0016A0                     __end_of_setMotorPWM:
  7360                           	callstack 0
  7361                           
  7362 ;; *************** function ___wmul *****************
  7363 ;; Defined at:
  7364 ;;		line 15 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\Umul16.c"
  7365 ;; Parameters:    Size  Location     Type
  7366 ;;  multiplier      2    8[COMRAM] unsigned int 
  7367 ;;  multiplicand    2   10[COMRAM] unsigned int 
  7368 ;; Auto vars:     Size  Location     Type
  7369 ;;  product         2   12[COMRAM] unsigned int 
  7370 ;; Return value:  Size  Location     Type
  7371 ;;                  2    8[COMRAM] unsigned int 
  7372 ;; Registers used:
  7373 ;;		wreg, status,2, status,0, prodl, prodh
  7374 ;; Tracked objects:
  7375 ;;		On entry : 0/0
  7376 ;;		On exit  : 0/0
  7377 ;;		Unchanged: 0/0
  7378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7379 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7380 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7382 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7383 ;;Total ram usage:        6 bytes
  7384 ;; Hardware stack levels used: 1
  7385 ;; Hardware stack levels required when called: 7
  7386 ;; This function calls:
  7387 ;;		Nothing
  7388 ;; This function is called by:
  7389 ;;		_setMotorPWM
  7390 ;; This function uses a non-reentrant model
  7391 ;;
  7392                           
  7393                           	psect	text34
  7394   002972                     __ptext34:
  7395                           	callstack 0
  7396   002972                     ___wmul:
  7397                           	callstack 21
  7398   002972  5009               	movf	___wmul@multiplier^0,w,c
  7399   002974  020B               	mulwf	___wmul@multiplicand^0,c
  7400   002976  CFF3 F00D          	movff	prodl,___wmul@product
  7401   00297A  CFF4 F00E          	movff	prodh,___wmul@product+1
  7402   00297E  5009               	movf	___wmul@multiplier^0,w,c
  7403   002980  020C               	mulwf	(___wmul@multiplicand+1)^0,c
  7404   002982  50F3               	movf	243,w,c
  7405   002984  260E               	addwf	(___wmul@product+1)^0,f,c
  7406   002986  500A               	movf	(___wmul@multiplier+1)^0,w,c
  7407   002988  020B               	mulwf	___wmul@multiplicand^0,c
  7408   00298A  50F3               	movf	243,w,c
  7409   00298C  260E               	addwf	(___wmul@product+1)^0,f,c
  7410   00298E  C00D  F009         	movff	___wmul@product,?___wmul
  7411   002992  C00E  F00A         	movff	___wmul@product+1,?___wmul+1
  7412   002996  0012               	return		;funcret
  7413   002998                     __end_of___wmul:
  7414                           	callstack 0
  7415                           
  7416 ;; *************** function ___lwdiv *****************
  7417 ;; Defined at:
  7418 ;;		line 7 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\lwdiv.c"
  7419 ;; Parameters:    Size  Location     Type
  7420 ;;  dividend        2   14[COMRAM] unsigned int 
  7421 ;;  divisor         2   16[COMRAM] unsigned int 
  7422 ;; Auto vars:     Size  Location     Type
  7423 ;;  quotient        2   18[COMRAM] unsigned int 
  7424 ;;  counter         1   20[COMRAM] unsigned char 
  7425 ;; Return value:  Size  Location     Type
  7426 ;;                  2   14[COMRAM] unsigned int 
  7427 ;; Registers used:
  7428 ;;		wreg, status,2, status,0
  7429 ;; Tracked objects:
  7430 ;;		On entry : 0/0
  7431 ;;		On exit  : 0/0
  7432 ;;		Unchanged: 0/0
  7433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7434 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7435 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7437 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7438 ;;Total ram usage:        7 bytes
  7439 ;; Hardware stack levels used: 1
  7440 ;; Hardware stack levels required when called: 7
  7441 ;; This function calls:
  7442 ;;		Nothing
  7443 ;; This function is called by:
  7444 ;;		_setMotorPWM
  7445 ;; This function uses a non-reentrant model
  7446 ;;
  7447                           
  7448                           	psect	text35
  7449   002444                     __ptext35:
  7450                           	callstack 0
  7451   002444                     ___lwdiv:
  7452                           	callstack 21
  7453   002444  0E00               	movlw	0
  7454   002446  6E14               	movwf	(___lwdiv@quotient+1)^0,c
  7455   002448  0E00               	movlw	0
  7456   00244A  6E13               	movwf	___lwdiv@quotient^0,c
  7457   00244C  5011               	movf	___lwdiv@divisor^0,w,c
  7458   00244E  1012               	iorwf	(___lwdiv@divisor+1)^0,w,c
  7459   002450  B4D8               	btfsc	status,2,c
  7460   002452  EF2D  F012         	goto	u2001
  7461   002456  EF2F  F012         	goto	u2000
  7462   00245A                     u2001:
  7463   00245A  EF57  F012         	goto	l1196
  7464   00245E                     u2000:
  7465   00245E  0E01               	movlw	1
  7466   002460  6E15               	movwf	___lwdiv@counter^0,c
  7467   002462  EF37  F012         	goto	l2762
  7468   002466                     l2760:
  7469   002466  90D8               	bcf	status,0,c
  7470   002468  3611               	rlcf	___lwdiv@divisor^0,f,c
  7471   00246A  3612               	rlcf	(___lwdiv@divisor+1)^0,f,c
  7472   00246C  2A15               	incf	___lwdiv@counter^0,f,c
  7473   00246E                     l2762:
  7474   00246E  AE12               	btfss	(___lwdiv@divisor+1)^0,7,c
  7475   002470  EF3C  F012         	goto	u2011
  7476   002474  EF3E  F012         	goto	u2010
  7477   002478                     u2011:
  7478   002478  EF33  F012         	goto	l2760
  7479   00247C                     u2010:
  7480   00247C                     l2764:
  7481   00247C  90D8               	bcf	status,0,c
  7482   00247E  3613               	rlcf	___lwdiv@quotient^0,f,c
  7483   002480  3614               	rlcf	(___lwdiv@quotient+1)^0,f,c
  7484   002482  5011               	movf	___lwdiv@divisor^0,w,c
  7485   002484  5C0F               	subwf	___lwdiv@dividend^0,w,c
  7486   002486  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  7487   002488  5810               	subwfb	(___lwdiv@dividend+1)^0,w,c
  7488   00248A  A0D8               	btfss	status,0,c
  7489   00248C  EF4A  F012         	goto	u2021
  7490   002490  EF4C  F012         	goto	u2020
  7491   002494                     u2021:
  7492   002494  EF51  F012         	goto	l2772
  7493   002498                     u2020:
  7494   002498  5011               	movf	___lwdiv@divisor^0,w,c
  7495   00249A  5E0F               	subwf	___lwdiv@dividend^0,f,c
  7496   00249C  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  7497   00249E  5A10               	subwfb	(___lwdiv@dividend+1)^0,f,c
  7498   0024A0  8013               	bsf	___lwdiv@quotient^0,0,c
  7499   0024A2                     l2772:
  7500   0024A2  90D8               	bcf	status,0,c
  7501   0024A4  3212               	rrcf	(___lwdiv@divisor+1)^0,f,c
  7502   0024A6  3211               	rrcf	___lwdiv@divisor^0,f,c
  7503   0024A8  2E15               	decfsz	___lwdiv@counter^0,f,c
  7504   0024AA  EF3E  F012         	goto	l2764
  7505   0024AE                     l1196:
  7506   0024AE  C013  F00F         	movff	___lwdiv@quotient,?___lwdiv
  7507   0024B2  C014  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7508   0024B6  0012               	return		;funcret
  7509   0024B8                     __end_of___lwdiv:
  7510                           	callstack 0
  7511                           
  7512 ;; *************** function _Update_RGBC *****************
  7513 ;; Defined at:
  7514 ;;		line 90 in file "color.c"
  7515 ;; Parameters:    Size  Location     Type
  7516 ;;  tempval         2   19[COMRAM] PTR struct RGB_val
  7517 ;;		 -> main@initial_color(8), 
  7518 ;; Auto vars:     Size  Location     Type
  7519 ;;		None
  7520 ;; Return value:  Size  Location     Type
  7521 ;;                  1    wreg      void 
  7522 ;; Registers used:
  7523 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7524 ;; Tracked objects:
  7525 ;;		On entry : 0/0
  7526 ;;		On exit  : 0/0
  7527 ;;		Unchanged: 0/0
  7528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7529 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7532 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7533 ;;Total ram usage:        2 bytes
  7534 ;; Hardware stack levels used: 1
  7535 ;; Hardware stack levels required when called: 10
  7536 ;; This function calls:
  7537 ;;		_color_read_Blue
  7538 ;;		_color_read_Clear
  7539 ;;		_color_read_Green
  7540 ;;		_color_read_Red
  7541 ;; This function is called by:
  7542 ;;		_main
  7543 ;; This function uses a non-reentrant model
  7544 ;;
  7545                           
  7546                           	psect	text36
  7547   002594                     __ptext36:
  7548                           	callstack 0
  7549   002594                     _Update_RGBC:
  7550                           	callstack 20
  7551   002594                     
  7552                           ;color.c: 92:     tempval->R = color_read_Red();
  7553   002594  ECF9  F012         	call	_color_read_Red	;wreg free
  7554   002598  C014  FFD9         	movff	Update_RGBC@tempval,fsr2l
  7555   00259C  C015  FFDA         	movff	Update_RGBC@tempval+1,fsr2h
  7556   0025A0  C00D  FFDE         	movff	?_color_read_Red,postinc2
  7557   0025A4  C00E  FFDD         	movff	?_color_read_Red+1,postdec2
  7558                           
  7559                           ;color.c: 93:     tempval->G = color_read_Green();
  7560   0025A8  EC21  F013         	call	_color_read_Green	;wreg free
  7561   0025AC  EE20 F002          	lfsr	2,2
  7562   0025B0  5014               	movf	Update_RGBC@tempval^0,w,c
  7563   0025B2  26D9               	addwf	fsr2l,f,c
  7564   0025B4  5015               	movf	(Update_RGBC@tempval+1)^0,w,c
  7565   0025B6  22DA               	addwfc	fsr2h,f,c
  7566   0025B8  C00D  FFDE         	movff	?_color_read_Green,postinc2
  7567   0025BC  C00E  FFDD         	movff	?_color_read_Green+1,postdec2
  7568                           
  7569                           ;color.c: 94:     tempval->B = color_read_Blue();
  7570   0025C0  EC71  F013         	call	_color_read_Blue	;wreg free
  7571   0025C4  EE20 F004          	lfsr	2,4
  7572   0025C8  5014               	movf	Update_RGBC@tempval^0,w,c
  7573   0025CA  26D9               	addwf	fsr2l,f,c
  7574   0025CC  5015               	movf	(Update_RGBC@tempval+1)^0,w,c
  7575   0025CE  22DA               	addwfc	fsr2h,f,c
  7576   0025D0  C00D  FFDE         	movff	?_color_read_Blue,postinc2
  7577   0025D4  C00E  FFDD         	movff	?_color_read_Blue+1,postdec2
  7578                           
  7579                           ;color.c: 95:     tempval->C = color_read_Clear();
  7580   0025D8  EC49  F013         	call	_color_read_Clear	;wreg free
  7581   0025DC  EE20 F006          	lfsr	2,6
  7582   0025E0  5014               	movf	Update_RGBC@tempval^0,w,c
  7583   0025E2  26D9               	addwf	fsr2l,f,c
  7584   0025E4  5015               	movf	(Update_RGBC@tempval+1)^0,w,c
  7585   0025E6  22DA               	addwfc	fsr2h,f,c
  7586   0025E8  C00D  FFDE         	movff	?_color_read_Clear,postinc2
  7587   0025EC  C00E  FFDD         	movff	?_color_read_Clear+1,postdec2
  7588   0025F0  0012               	return		;funcret
  7589   0025F2                     __end_of_Update_RGBC:
  7590                           	callstack 0
  7591                           
  7592 ;; *************** function _color_read_Red *****************
  7593 ;; Defined at:
  7594 ;;		line 32 in file "color.c"
  7595 ;; Parameters:    Size  Location     Type
  7596 ;;		None
  7597 ;; Auto vars:     Size  Location     Type
  7598 ;;  tmp             2   17[COMRAM] unsigned int 
  7599 ;; Return value:  Size  Location     Type
  7600 ;;                  2   12[COMRAM] unsigned int 
  7601 ;; Registers used:
  7602 ;;		wreg, status,2, status,0, cstack
  7603 ;; Tracked objects:
  7604 ;;		On entry : 0/0
  7605 ;;		On exit  : 0/0
  7606 ;;		Unchanged: 0/0
  7607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7608 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7609 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7610 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7611 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7612 ;;Total ram usage:        7 bytes
  7613 ;; Hardware stack levels used: 1
  7614 ;; Hardware stack levels required when called: 9
  7615 ;; This function calls:
  7616 ;;		_I2C_2_Master_Read
  7617 ;;		_I2C_2_Master_RepStart
  7618 ;;		_I2C_2_Master_Start
  7619 ;;		_I2C_2_Master_Stop
  7620 ;;		_I2C_2_Master_Write
  7621 ;; This function is called by:
  7622 ;;		_Update_RGBC
  7623 ;; This function uses a non-reentrant model
  7624 ;;
  7625                           
  7626                           	psect	text37
  7627   0025F2                     __ptext37:
  7628                           	callstack 0
  7629   0025F2                     _color_read_Red:
  7630                           	callstack 20
  7631   0025F2                     
  7632                           ;color.c: 34:  unsigned int tmp;;color.c: 35:  I2C_2_Master_Start();
  7633   0025F2  EC76  F015         	call	_I2C_2_Master_Start	;wreg free
  7634                           
  7635                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x00);
  7636   0025F6  0E52               	movlw	82
  7637   0025F8  EC60  F015         	call	_I2C_2_Master_Write
  7638                           
  7639                           ;color.c: 37:  I2C_2_Master_Write(0xA0 | 0x16);
  7640   0025FC  0EB6               	movlw	182
  7641   0025FE  EC60  F015         	call	_I2C_2_Master_Write
  7642                           
  7643                           ;color.c: 38:  I2C_2_Master_RepStart();
  7644   002602  EC6C  F015         	call	_I2C_2_Master_RepStart	;wreg free
  7645                           
  7646                           ;color.c: 39:  I2C_2_Master_Write(0x52 | 0x01);
  7647   002606  0E53               	movlw	83
  7648   002608  EC60  F015         	call	_I2C_2_Master_Write
  7649                           
  7650                           ;color.c: 40:  tmp=I2C_2_Master_Read(1);
  7651   00260C  0E01               	movlw	1
  7652   00260E  EC0C  F014         	call	_I2C_2_Master_Read
  7653   002612  6E0F               	movwf	??_color_read_Red^0,c
  7654   002614  500F               	movf	??_color_read_Red^0,w,c
  7655   002616  6E12               	movwf	color_read_Red@tmp^0,c
  7656   002618  6A13               	clrf	(color_read_Red@tmp+1)^0,c
  7657                           
  7658                           ;color.c: 41:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7659   00261A  0E00               	movlw	0
  7660   00261C  EC0C  F014         	call	_I2C_2_Master_Read
  7661   002620  6E0F               	movwf	??_color_read_Red^0,c
  7662   002622  500F               	movf	??_color_read_Red^0,w,c
  7663   002624  6E11               	movwf	(??_color_read_Red+2)^0,c
  7664   002626  6A10               	clrf	(??_color_read_Red+1)^0,c
  7665   002628  5012               	movf	color_read_Red@tmp^0,w,c
  7666   00262A  1010               	iorwf	(??_color_read_Red+1)^0,w,c
  7667   00262C  6E12               	movwf	color_read_Red@tmp^0,c
  7668   00262E  5013               	movf	(color_read_Red@tmp+1)^0,w,c
  7669   002630  1011               	iorwf	(??_color_read_Red+2)^0,w,c
  7670   002632  6E13               	movwf	(color_read_Red@tmp+1)^0,c
  7671                           
  7672                           ;color.c: 42:  I2C_2_Master_Stop();
  7673   002634  EC71  F015         	call	_I2C_2_Master_Stop	;wreg free
  7674   002638                     
  7675                           ;color.c: 43:  return tmp;
  7676   002638  C012  F00D         	movff	color_read_Red@tmp,?_color_read_Red
  7677   00263C  C013  F00E         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  7678   002640  0012               	return		;funcret
  7679   002642                     __end_of_color_read_Red:
  7680                           	callstack 0
  7681                           
  7682 ;; *************** function _color_read_Green *****************
  7683 ;; Defined at:
  7684 ;;		line 46 in file "color.c"
  7685 ;; Parameters:    Size  Location     Type
  7686 ;;		None
  7687 ;; Auto vars:     Size  Location     Type
  7688 ;;  tmp             2   17[COMRAM] unsigned int 
  7689 ;; Return value:  Size  Location     Type
  7690 ;;                  2   12[COMRAM] unsigned int 
  7691 ;; Registers used:
  7692 ;;		wreg, status,2, status,0, cstack
  7693 ;; Tracked objects:
  7694 ;;		On entry : 0/0
  7695 ;;		On exit  : 0/0
  7696 ;;		Unchanged: 0/0
  7697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7698 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7699 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7700 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7701 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7702 ;;Total ram usage:        7 bytes
  7703 ;; Hardware stack levels used: 1
  7704 ;; Hardware stack levels required when called: 9
  7705 ;; This function calls:
  7706 ;;		_I2C_2_Master_Read
  7707 ;;		_I2C_2_Master_RepStart
  7708 ;;		_I2C_2_Master_Start
  7709 ;;		_I2C_2_Master_Stop
  7710 ;;		_I2C_2_Master_Write
  7711 ;; This function is called by:
  7712 ;;		_Update_RGBC
  7713 ;; This function uses a non-reentrant model
  7714 ;;
  7715                           
  7716                           	psect	text38
  7717   002642                     __ptext38:
  7718                           	callstack 0
  7719   002642                     _color_read_Green:
  7720                           	callstack 20
  7721   002642                     
  7722                           ;color.c: 48:  unsigned int tmp;;color.c: 49:  I2C_2_Master_Start();
  7723   002642  EC76  F015         	call	_I2C_2_Master_Start	;wreg free
  7724                           
  7725                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x00);
  7726   002646  0E52               	movlw	82
  7727   002648  EC60  F015         	call	_I2C_2_Master_Write
  7728                           
  7729                           ;color.c: 51:  I2C_2_Master_Write(0xA0 | 0x18);
  7730   00264C  0EB8               	movlw	184
  7731   00264E  EC60  F015         	call	_I2C_2_Master_Write
  7732                           
  7733                           ;color.c: 52:  I2C_2_Master_RepStart();
  7734   002652  EC6C  F015         	call	_I2C_2_Master_RepStart	;wreg free
  7735                           
  7736                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x01);
  7737   002656  0E53               	movlw	83
  7738   002658  EC60  F015         	call	_I2C_2_Master_Write
  7739                           
  7740                           ;color.c: 54:  tmp=I2C_2_Master_Read(1);
  7741   00265C  0E01               	movlw	1
  7742   00265E  EC0C  F014         	call	_I2C_2_Master_Read
  7743   002662  6E0F               	movwf	??_color_read_Green^0,c
  7744   002664  500F               	movf	??_color_read_Green^0,w,c
  7745   002666  6E12               	movwf	color_read_Green@tmp^0,c
  7746   002668  6A13               	clrf	(color_read_Green@tmp+1)^0,c
  7747                           
  7748                           ;color.c: 55:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7749   00266A  0E00               	movlw	0
  7750   00266C  EC0C  F014         	call	_I2C_2_Master_Read
  7751   002670  6E0F               	movwf	??_color_read_Green^0,c
  7752   002672  500F               	movf	??_color_read_Green^0,w,c
  7753   002674  6E11               	movwf	(??_color_read_Green+2)^0,c
  7754   002676  6A10               	clrf	(??_color_read_Green+1)^0,c
  7755   002678  5012               	movf	color_read_Green@tmp^0,w,c
  7756   00267A  1010               	iorwf	(??_color_read_Green+1)^0,w,c
  7757   00267C  6E12               	movwf	color_read_Green@tmp^0,c
  7758   00267E  5013               	movf	(color_read_Green@tmp+1)^0,w,c
  7759   002680  1011               	iorwf	(??_color_read_Green+2)^0,w,c
  7760   002682  6E13               	movwf	(color_read_Green@tmp+1)^0,c
  7761                           
  7762                           ;color.c: 56:  I2C_2_Master_Stop();
  7763   002684  EC71  F015         	call	_I2C_2_Master_Stop	;wreg free
  7764   002688                     
  7765                           ;color.c: 57:  return tmp;
  7766   002688  C012  F00D         	movff	color_read_Green@tmp,?_color_read_Green
  7767   00268C  C013  F00E         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  7768   002690  0012               	return		;funcret
  7769   002692                     __end_of_color_read_Green:
  7770                           	callstack 0
  7771                           
  7772 ;; *************** function _color_read_Clear *****************
  7773 ;; Defined at:
  7774 ;;		line 74 in file "color.c"
  7775 ;; Parameters:    Size  Location     Type
  7776 ;;		None
  7777 ;; Auto vars:     Size  Location     Type
  7778 ;;  tmp             2   17[COMRAM] unsigned int 
  7779 ;; Return value:  Size  Location     Type
  7780 ;;                  2   12[COMRAM] unsigned int 
  7781 ;; Registers used:
  7782 ;;		wreg, status,2, status,0, cstack
  7783 ;; Tracked objects:
  7784 ;;		On entry : 0/0
  7785 ;;		On exit  : 0/0
  7786 ;;		Unchanged: 0/0
  7787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7788 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7789 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7790 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7791 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7792 ;;Total ram usage:        7 bytes
  7793 ;; Hardware stack levels used: 1
  7794 ;; Hardware stack levels required when called: 9
  7795 ;; This function calls:
  7796 ;;		_I2C_2_Master_Read
  7797 ;;		_I2C_2_Master_RepStart
  7798 ;;		_I2C_2_Master_Start
  7799 ;;		_I2C_2_Master_Stop
  7800 ;;		_I2C_2_Master_Write
  7801 ;; This function is called by:
  7802 ;;		_Update_RGBC
  7803 ;; This function uses a non-reentrant model
  7804 ;;
  7805                           
  7806                           	psect	text39
  7807   002692                     __ptext39:
  7808                           	callstack 0
  7809   002692                     _color_read_Clear:
  7810                           	callstack 20
  7811   002692                     
  7812                           ;color.c: 76:  unsigned int tmp;;color.c: 77:  I2C_2_Master_Start();
  7813   002692  EC76  F015         	call	_I2C_2_Master_Start	;wreg free
  7814                           
  7815                           ;color.c: 78:  I2C_2_Master_Write(0x52 | 0x00);
  7816   002696  0E52               	movlw	82
  7817   002698  EC60  F015         	call	_I2C_2_Master_Write
  7818                           
  7819                           ;color.c: 79:  I2C_2_Master_Write(0xA0 | 0x14);
  7820   00269C  0EB4               	movlw	180
  7821   00269E  EC60  F015         	call	_I2C_2_Master_Write
  7822                           
  7823                           ;color.c: 80:  I2C_2_Master_RepStart();
  7824   0026A2  EC6C  F015         	call	_I2C_2_Master_RepStart	;wreg free
  7825                           
  7826                           ;color.c: 81:  I2C_2_Master_Write(0x52 | 0x01);
  7827   0026A6  0E53               	movlw	83
  7828   0026A8  EC60  F015         	call	_I2C_2_Master_Write
  7829                           
  7830                           ;color.c: 82:  tmp=I2C_2_Master_Read(1);
  7831   0026AC  0E01               	movlw	1
  7832   0026AE  EC0C  F014         	call	_I2C_2_Master_Read
  7833   0026B2  6E0F               	movwf	??_color_read_Clear^0,c
  7834   0026B4  500F               	movf	??_color_read_Clear^0,w,c
  7835   0026B6  6E12               	movwf	color_read_Clear@tmp^0,c
  7836   0026B8  6A13               	clrf	(color_read_Clear@tmp+1)^0,c
  7837                           
  7838                           ;color.c: 83:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7839   0026BA  0E00               	movlw	0
  7840   0026BC  EC0C  F014         	call	_I2C_2_Master_Read
  7841   0026C0  6E0F               	movwf	??_color_read_Clear^0,c
  7842   0026C2  500F               	movf	??_color_read_Clear^0,w,c
  7843   0026C4  6E11               	movwf	(??_color_read_Clear+2)^0,c
  7844   0026C6  6A10               	clrf	(??_color_read_Clear+1)^0,c
  7845   0026C8  5012               	movf	color_read_Clear@tmp^0,w,c
  7846   0026CA  1010               	iorwf	(??_color_read_Clear+1)^0,w,c
  7847   0026CC  6E12               	movwf	color_read_Clear@tmp^0,c
  7848   0026CE  5013               	movf	(color_read_Clear@tmp+1)^0,w,c
  7849   0026D0  1011               	iorwf	(??_color_read_Clear+2)^0,w,c
  7850   0026D2  6E13               	movwf	(color_read_Clear@tmp+1)^0,c
  7851                           
  7852                           ;color.c: 84:  I2C_2_Master_Stop();
  7853   0026D4  EC71  F015         	call	_I2C_2_Master_Stop	;wreg free
  7854   0026D8                     
  7855                           ;color.c: 85:  return tmp;
  7856   0026D8  C012  F00D         	movff	color_read_Clear@tmp,?_color_read_Clear
  7857   0026DC  C013  F00E         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  7858   0026E0  0012               	return		;funcret
  7859   0026E2                     __end_of_color_read_Clear:
  7860                           	callstack 0
  7861                           
  7862 ;; *************** function _color_read_Blue *****************
  7863 ;; Defined at:
  7864 ;;		line 60 in file "color.c"
  7865 ;; Parameters:    Size  Location     Type
  7866 ;;		None
  7867 ;; Auto vars:     Size  Location     Type
  7868 ;;  tmp             2   17[COMRAM] unsigned int 
  7869 ;; Return value:  Size  Location     Type
  7870 ;;                  2   12[COMRAM] unsigned int 
  7871 ;; Registers used:
  7872 ;;		wreg, status,2, status,0, cstack
  7873 ;; Tracked objects:
  7874 ;;		On entry : 0/0
  7875 ;;		On exit  : 0/0
  7876 ;;		Unchanged: 0/0
  7877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7878 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7879 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7880 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7881 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7882 ;;Total ram usage:        7 bytes
  7883 ;; Hardware stack levels used: 1
  7884 ;; Hardware stack levels required when called: 9
  7885 ;; This function calls:
  7886 ;;		_I2C_2_Master_Read
  7887 ;;		_I2C_2_Master_RepStart
  7888 ;;		_I2C_2_Master_Start
  7889 ;;		_I2C_2_Master_Stop
  7890 ;;		_I2C_2_Master_Write
  7891 ;; This function is called by:
  7892 ;;		_Update_RGBC
  7893 ;; This function uses a non-reentrant model
  7894 ;;
  7895                           
  7896                           	psect	text40
  7897   0026E2                     __ptext40:
  7898                           	callstack 0
  7899   0026E2                     _color_read_Blue:
  7900                           	callstack 20
  7901   0026E2                     
  7902                           ;color.c: 62:  unsigned int tmp;;color.c: 63:  I2C_2_Master_Start();
  7903   0026E2  EC76  F015         	call	_I2C_2_Master_Start	;wreg free
  7904                           
  7905                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x00);
  7906   0026E6  0E52               	movlw	82
  7907   0026E8  EC60  F015         	call	_I2C_2_Master_Write
  7908                           
  7909                           ;color.c: 65:  I2C_2_Master_Write(0xA0 | 0x1A);
  7910   0026EC  0EBA               	movlw	186
  7911   0026EE  EC60  F015         	call	_I2C_2_Master_Write
  7912                           
  7913                           ;color.c: 66:  I2C_2_Master_RepStart();
  7914   0026F2  EC6C  F015         	call	_I2C_2_Master_RepStart	;wreg free
  7915                           
  7916                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x01);
  7917   0026F6  0E53               	movlw	83
  7918   0026F8  EC60  F015         	call	_I2C_2_Master_Write
  7919                           
  7920                           ;color.c: 68:  tmp=I2C_2_Master_Read(1);
  7921   0026FC  0E01               	movlw	1
  7922   0026FE  EC0C  F014         	call	_I2C_2_Master_Read
  7923   002702  6E0F               	movwf	??_color_read_Blue^0,c
  7924   002704  500F               	movf	??_color_read_Blue^0,w,c
  7925   002706  6E12               	movwf	color_read_Blue@tmp^0,c
  7926   002708  6A13               	clrf	(color_read_Blue@tmp+1)^0,c
  7927                           
  7928                           ;color.c: 69:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7929   00270A  0E00               	movlw	0
  7930   00270C  EC0C  F014         	call	_I2C_2_Master_Read
  7931   002710  6E0F               	movwf	??_color_read_Blue^0,c
  7932   002712  500F               	movf	??_color_read_Blue^0,w,c
  7933   002714  6E11               	movwf	(??_color_read_Blue+2)^0,c
  7934   002716  6A10               	clrf	(??_color_read_Blue+1)^0,c
  7935   002718  5012               	movf	color_read_Blue@tmp^0,w,c
  7936   00271A  1010               	iorwf	(??_color_read_Blue+1)^0,w,c
  7937   00271C  6E12               	movwf	color_read_Blue@tmp^0,c
  7938   00271E  5013               	movf	(color_read_Blue@tmp+1)^0,w,c
  7939   002720  1011               	iorwf	(??_color_read_Blue+2)^0,w,c
  7940   002722  6E13               	movwf	(color_read_Blue@tmp+1)^0,c
  7941                           
  7942                           ;color.c: 70:  I2C_2_Master_Stop();
  7943   002724  EC71  F015         	call	_I2C_2_Master_Stop	;wreg free
  7944   002728                     
  7945                           ;color.c: 71:  return tmp;
  7946   002728  C012  F00D         	movff	color_read_Blue@tmp,?_color_read_Blue
  7947   00272C  C013  F00E         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  7948   002730  0012               	return		;funcret
  7949   002732                     __end_of_color_read_Blue:
  7950                           	callstack 0
  7951                           
  7952 ;; *************** function _I2C_2_Master_RepStart *****************
  7953 ;; Defined at:
  7954 ;;		line 33 in file "i2c.c"
  7955 ;; Parameters:    Size  Location     Type
  7956 ;;		None
  7957 ;; Auto vars:     Size  Location     Type
  7958 ;;		None
  7959 ;; Return value:  Size  Location     Type
  7960 ;;                  1    wreg      void 
  7961 ;; Registers used:
  7962 ;;		wreg, status,2, status,0, cstack
  7963 ;; Tracked objects:
  7964 ;;		On entry : 0/0
  7965 ;;		On exit  : 0/0
  7966 ;;		Unchanged: 0/0
  7967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7971 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7972 ;;Total ram usage:        0 bytes
  7973 ;; Hardware stack levels used: 1
  7974 ;; Hardware stack levels required when called: 8
  7975 ;; This function calls:
  7976 ;;		_I2C_2_Master_Idle
  7977 ;; This function is called by:
  7978 ;;		_color_read_Red
  7979 ;;		_color_read_Green
  7980 ;;		_color_read_Blue
  7981 ;;		_color_read_Clear
  7982 ;; This function uses a non-reentrant model
  7983 ;;
  7984                           
  7985                           	psect	text41
  7986   002AD8                     __ptext41:
  7987                           	callstack 0
  7988   002AD8                     _I2C_2_Master_RepStart:
  7989                           	callstack 20
  7990   002AD8                     
  7991                           ;i2c.c: 35:   I2C_2_Master_Idle();
  7992   002AD8  EC91  F014         	call	_I2C_2_Master_Idle	;wreg free
  7993   002ADC                     
  7994                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  7995   002ADC  010E               	movlb	14	; () banked
  7996   002ADE  83DA               	bsf	218,1,b	;volatile
  7997   002AE0                     
  7998                           ; BSR set to: 14
  7999   002AE0  0012               	return		;funcret
  8000   002AE2                     __end_of_I2C_2_Master_RepStart:
  8001                           	callstack 0
  8002                           
  8003 ;; *************** function _I2C_2_Master_Read *****************
  8004 ;; Defined at:
  8005 ;;		line 51 in file "i2c.c"
  8006 ;; Parameters:    Size  Location     Type
  8007 ;;  ack             1    wreg     unsigned char 
  8008 ;; Auto vars:     Size  Location     Type
  8009 ;;  ack             1   10[COMRAM] unsigned char 
  8010 ;;  tmp             1   11[COMRAM] unsigned char 
  8011 ;; Return value:  Size  Location     Type
  8012 ;;                  1    wreg      unsigned char 
  8013 ;; Registers used:
  8014 ;;		wreg, status,2, status,0, cstack
  8015 ;; Tracked objects:
  8016 ;;		On entry : 0/0
  8017 ;;		On exit  : 0/0
  8018 ;;		Unchanged: 0/0
  8019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8021 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8022 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8023 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8024 ;;Total ram usage:        3 bytes
  8025 ;; Hardware stack levels used: 1
  8026 ;; Hardware stack levels required when called: 8
  8027 ;; This function calls:
  8028 ;;		_I2C_2_Master_Idle
  8029 ;; This function is called by:
  8030 ;;		_color_read_Red
  8031 ;;		_color_read_Green
  8032 ;;		_color_read_Blue
  8033 ;;		_color_read_Clear
  8034 ;; This function uses a non-reentrant model
  8035 ;;
  8036                           
  8037                           	psect	text42
  8038   002818                     __ptext42:
  8039                           	callstack 0
  8040   002818                     _I2C_2_Master_Read:
  8041                           	callstack 20
  8042                           
  8043                           ; BSR set to: 14
  8044                           ;incstack = 0
  8045                           ;I2C_2_Master_Read@ack stored from wreg
  8046   002818  6E0B               	movwf	I2C_2_Master_Read@ack^0,c
  8047   00281A                     
  8048                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  8049   00281A  EC91  F014         	call	_I2C_2_Master_Idle	;wreg free
  8050   00281E                     
  8051                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  8052   00281E  010E               	movlb	14	; () banked
  8053   002820  87DA               	bsf	218,3,b	;volatile
  8054                           
  8055                           ;i2c.c: 56:   I2C_2_Master_Idle();
  8056   002822  EC91  F014         	call	_I2C_2_Master_Idle	;wreg free
  8057   002826                     
  8058                           ;i2c.c: 57:   tmp = SSP2BUF;
  8059   002826  CED5 F00C          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  8060                           
  8061                           ;i2c.c: 58:   I2C_2_Master_Idle();
  8062   00282A  EC91  F014         	call	_I2C_2_Master_Idle	;wreg free
  8063   00282E                     
  8064                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  8065   00282E  500B               	movf	I2C_2_Master_Read@ack^0,w,c
  8066   002830  B4D8               	btfsc	status,2,c
  8067   002832  EF1D  F014         	goto	u2371
  8068   002836  EF21  F014         	goto	u2370
  8069   00283A                     u2371:
  8070   00283A  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  8071   00283C  2A0A               	incf	??_I2C_2_Master_Read^0,f,c
  8072   00283E  EF22  F014         	goto	u2388
  8073   002842                     u2370:
  8074   002842  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  8075   002844                     u2388:
  8076   002844  3A0A               	swapf	??_I2C_2_Master_Read^0,f,c
  8077   002846  460A               	rlncf	??_I2C_2_Master_Read^0,f,c
  8078   002848  010E               	movlb	14	; () banked
  8079   00284A  51DA               	movf	218,w,b	;volatile
  8080   00284C  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  8081   00284E  0BDF               	andlw	-33
  8082   002850  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  8083   002852  6FDA               	movwf	218,b	;volatile
  8084   002854                     
  8085                           ; BSR set to: 14
  8086                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  8087   002854  89DA               	bsf	218,4,b	;volatile
  8088   002856                     
  8089                           ; BSR set to: 14
  8090                           ;i2c.c: 61:   return tmp;
  8091   002856  500C               	movf	I2C_2_Master_Read@tmp^0,w,c
  8092   002858                     
  8093                           ; BSR set to: 14
  8094   002858  0012               	return		;funcret
  8095   00285A                     __end_of_I2C_2_Master_Read:
  8096                           	callstack 0
  8097                           
  8098 ;; *************** function _Timer0_init *****************
  8099 ;; Defined at:
  8100 ;;		line 7 in file "timers.c"
  8101 ;; Parameters:    Size  Location     Type
  8102 ;;		None
  8103 ;; Auto vars:     Size  Location     Type
  8104 ;;		None
  8105 ;; Return value:  Size  Location     Type
  8106 ;;                  1    wreg      void 
  8107 ;; Registers used:
  8108 ;;		wreg, status,2
  8109 ;; Tracked objects:
  8110 ;;		On entry : 0/0
  8111 ;;		On exit  : 0/0
  8112 ;;		Unchanged: 0/0
  8113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8118 ;;Total ram usage:        0 bytes
  8119 ;; Hardware stack levels used: 1
  8120 ;; Hardware stack levels required when called: 7
  8121 ;; This function calls:
  8122 ;;		Nothing
  8123 ;; This function is called by:
  8124 ;;		_main
  8125 ;; This function uses a non-reentrant model
  8126 ;;
  8127                           
  8128                           	psect	text43
  8129   0029DE                     __ptext43:
  8130                           	callstack 0
  8131   0029DE                     _Timer0_init:
  8132                           	callstack 23
  8133   0029DE                     
  8134                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  8135   0029DE  50D6               	movf	214,w,c	;volatile
  8136   0029E0  0B1F               	andlw	-225
  8137   0029E2  0940               	iorlw	64
  8138   0029E4  6ED6               	movwf	214,c	;volatile
  8139   0029E6                     
  8140                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  8141   0029E6  88D6               	bsf	214,4,c	;volatile
  8142                           
  8143                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
  8144   0029E8  50D6               	movf	214,w,c	;volatile
  8145   0029EA  0BF0               	andlw	-16
  8146   0029EC  0908               	iorlw	8
  8147   0029EE  6ED6               	movwf	214,c	;volatile
  8148   0029F0                     
  8149                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
  8150   0029F0  88D5               	bsf	213,4,c	;volatile
  8151                           
  8152                           ;timers.c: 15:     TMR0H = 0b00001011;
  8153   0029F2  0E0B               	movlw	11
  8154   0029F4  6ED4               	movwf	212,c	;volatile
  8155                           
  8156                           ;timers.c: 16:     TMR0L = 0b11011011;
  8157   0029F6  0EDB               	movlw	219
  8158   0029F8  6ED3               	movwf	211,c	;volatile
  8159   0029FA                     
  8160                           ;timers.c: 17:     T0CON0bits.T0EN=1;
  8161   0029FA  8ED5               	bsf	213,7,c	;volatile
  8162   0029FC  0012               	return		;funcret
  8163   0029FE                     __end_of_Timer0_init:
  8164                           	callstack 0
  8165                           
  8166 ;; *************** function _LED_init *****************
  8167 ;; Defined at:
  8168 ;;		line 7 in file "LED_Buttons.c"
  8169 ;; Parameters:    Size  Location     Type
  8170 ;;		None
  8171 ;; Auto vars:     Size  Location     Type
  8172 ;;		None
  8173 ;; Return value:  Size  Location     Type
  8174 ;;                  1    wreg      void 
  8175 ;; Registers used:
  8176 ;;		None
  8177 ;; Tracked objects:
  8178 ;;		On entry : 0/0
  8179 ;;		On exit  : 0/0
  8180 ;;		Unchanged: 0/0
  8181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8186 ;;Total ram usage:        0 bytes
  8187 ;; Hardware stack levels used: 1
  8188 ;; Hardware stack levels required when called: 7
  8189 ;; This function calls:
  8190 ;;		Nothing
  8191 ;; This function is called by:
  8192 ;;		_main
  8193 ;; This function uses a non-reentrant model
  8194 ;;
  8195                           
  8196                           	psect	text44
  8197   002AB0                     __ptext44:
  8198                           	callstack 0
  8199   002AB0                     _LED_init:
  8200                           	callstack 23
  8201   002AB0                     
  8202                           ;LED_Buttons.c: 8:     TRISGbits.TRISG1 = 0;
  8203   002AB0  9287               	bcf	135,1,c	;volatile
  8204                           
  8205                           ;LED_Buttons.c: 9:     TRISAbits.TRISA4 = 0;
  8206   002AB2  9881               	bcf	129,4,c	;volatile
  8207                           
  8208                           ;LED_Buttons.c: 10:     TRISFbits.TRISF7 = 0;
  8209   002AB4  9E86               	bcf	134,7,c	;volatile
  8210                           
  8211                           ;LED_Buttons.c: 12:     LATHbits.LATH3 = 0;
  8212   002AB6  9680               	bcf	128,3,c	;volatile
  8213                           
  8214                           ;LED_Buttons.c: 13:     TRISHbits.TRISH3 = 0;
  8215   002AB8  9688               	bcf	136,3,c	;volatile
  8216                           
  8217                           ;LED_Buttons.c: 15:     LATDbits.LATD7 = 0;
  8218   002ABA  9E7C               	bcf	124,7,c	;volatile
  8219                           
  8220                           ;LED_Buttons.c: 16:     TRISDbits.TRISD7 = 0;
  8221   002ABC  9E84               	bcf	132,7,c	;volatile
  8222   002ABE  0012               	return		;funcret
  8223   002AC0                     __end_of_LED_init:
  8224                           	callstack 0
  8225                           
  8226 ;; *************** function _Interrupts_init *****************
  8227 ;; Defined at:
  8228 ;;		line 12 in file "interrupts.c"
  8229 ;; Parameters:    Size  Location     Type
  8230 ;;		None
  8231 ;; Auto vars:     Size  Location     Type
  8232 ;;		None
  8233 ;; Return value:  Size  Location     Type
  8234 ;;                  1    wreg      void 
  8235 ;; Registers used:
  8236 ;;		wreg, status,2, status,0, cstack
  8237 ;; Tracked objects:
  8238 ;;		On entry : 0/0
  8239 ;;		On exit  : 0/0
  8240 ;;		Unchanged: 0/0
  8241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8246 ;;Total ram usage:        0 bytes
  8247 ;; Hardware stack levels used: 1
  8248 ;; Hardware stack levels required when called: 12
  8249 ;; This function calls:
  8250 ;;		_interrupts_clear_colorclick
  8251 ;; This function is called by:
  8252 ;;		_main
  8253 ;; This function uses a non-reentrant model
  8254 ;;
  8255                           
  8256                           	psect	text45
  8257   002A5E                     __ptext45:
  8258                           	callstack 0
  8259   002A5E                     _Interrupts_init:
  8260                           	callstack 18
  8261   002A5E                     
  8262                           ;interrupts.c: 18:     TRISBbits.TRISB1 = 1;
  8263   002A5E  8282               	bsf	130,1,c	;volatile
  8264                           
  8265                           ;interrupts.c: 19:     ANSELBbits.ANSELB1 = 0;
  8266   002A60  010E               	movlb	14	; () banked
  8267   002A62  939A               	bcf	154,1,b	;volatile
  8268                           
  8269                           ;interrupts.c: 21:     PIE0bits.INT1IE = 1;
  8270   002A64  8329               	bsf	41,1,b	;volatile
  8271                           
  8272                           ;interrupts.c: 22:     IPR0bits.INT1IP = 1;
  8273   002A66  831F               	bsf	31,1,b	;volatile
  8274                           
  8275                           ;interrupts.c: 23:     INTCONbits.INT1EDG = 0;
  8276   002A68  92F2               	bcf	242,1,c	;volatile
  8277                           
  8278                           ;interrupts.c: 26:     PIE0bits.TMR0IE=1;
  8279   002A6A  8B29               	bsf	41,5,b	;volatile
  8280                           
  8281                           ;interrupts.c: 27:     IPR0bits.TMR0IP = 0;
  8282   002A6C  9B1F               	bcf	31,5,b	;volatile
  8283                           
  8284                           ;interrupts.c: 30:     PIE4bits.RC4IE=1;
  8285   002A6E  872D               	bsf	45,3,b	;volatile
  8286   002A70                     
  8287                           ; BSR set to: 14
  8288                           ;interrupts.c: 32:     interrupts_clear_colorclick();
  8289   002A70  EC3E  F015         	call	_interrupts_clear_colorclick	;wreg free
  8290   002A74                     
  8291                           ;interrupts.c: 34:     INTCONbits.IPEN = 1;
  8292   002A74  8AF2               	bsf	242,5,c	;volatile
  8293   002A76                     
  8294                           ;interrupts.c: 35:     INTCONbits.PEIE = 1;
  8295   002A76  8CF2               	bsf	242,6,c	;volatile
  8296   002A78                     
  8297                           ;interrupts.c: 36:     INTCONbits.GIE=1;
  8298   002A78  8EF2               	bsf	242,7,c	;volatile
  8299   002A7A  0012               	return		;funcret
  8300   002A7C                     __end_of_Interrupts_init:
  8301                           	callstack 0
  8302                           
  8303 ;; *************** function _interrupts_clear_colorclick *****************
  8304 ;; Defined at:
  8305 ;;		line 57 in file "interrupts.c"
  8306 ;; Parameters:    Size  Location     Type
  8307 ;;		None
  8308 ;; Auto vars:     Size  Location     Type
  8309 ;;		None
  8310 ;; Return value:  Size  Location     Type
  8311 ;;                  1    wreg      void 
  8312 ;; Registers used:
  8313 ;;		wreg, status,2, status,0, cstack
  8314 ;; Tracked objects:
  8315 ;;		On entry : 0/0
  8316 ;;		On exit  : 0/0
  8317 ;;		Unchanged: 0/0
  8318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8323 ;;Total ram usage:        0 bytes
  8324 ;; Hardware stack levels used: 1
  8325 ;; Hardware stack levels required when called: 11
  8326 ;; This function calls:
  8327 ;;		_I2C_2_Master_Start
  8328 ;;		_I2C_2_Master_Stop
  8329 ;;		_I2C_2_Master_Write
  8330 ;;		_init_colorclick_interrupts
  8331 ;; This function is called by:
  8332 ;;		_Interrupts_init
  8333 ;; This function uses a non-reentrant model
  8334 ;;
  8335                           
  8336                           	psect	text46
  8337   002A7C                     __ptext46:
  8338                           	callstack 0
  8339   002A7C                     _interrupts_clear_colorclick:
  8340                           	callstack 18
  8341   002A7C                     
  8342                           ;interrupts.c: 59:     I2C_2_Master_Start();
  8343   002A7C  EC76  F015         	call	_I2C_2_Master_Start	;wreg free
  8344                           
  8345                           ;interrupts.c: 60:     I2C_2_Master_Write(0x52 | 0x00);
  8346   002A80  0E52               	movlw	82
  8347   002A82  EC60  F015         	call	_I2C_2_Master_Write
  8348                           
  8349                           ;interrupts.c: 61:     I2C_2_Master_Write(0b11100110);
  8350   002A86  0EE6               	movlw	230
  8351   002A88  EC60  F015         	call	_I2C_2_Master_Write
  8352                           
  8353                           ;interrupts.c: 62:     I2C_2_Master_Stop();
  8354   002A8C  EC71  F015         	call	_I2C_2_Master_Stop	;wreg free
  8355                           
  8356                           ;interrupts.c: 64:     init_colorclick_interrupts();
  8357   002A90  EC99  F013         	call	_init_colorclick_interrupts	;wreg free
  8358   002A94  0012               	return		;funcret
  8359   002A96                     __end_of_interrupts_clear_colorclick:
  8360                           	callstack 0
  8361                           
  8362 ;; *************** function _init_colorclick_interrupts *****************
  8363 ;; Defined at:
  8364 ;;		line 43 in file "interrupts.c"
  8365 ;; Parameters:    Size  Location     Type
  8366 ;;		None
  8367 ;; Auto vars:     Size  Location     Type
  8368 ;;		None
  8369 ;; Return value:  Size  Location     Type
  8370 ;;                  1    wreg      void 
  8371 ;; Registers used:
  8372 ;;		wreg, status,2, status,0, cstack
  8373 ;; Tracked objects:
  8374 ;;		On entry : 0/0
  8375 ;;		On exit  : 0/0
  8376 ;;		Unchanged: 0/0
  8377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8380 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8381 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8382 ;;Total ram usage:        1 bytes
  8383 ;; Hardware stack levels used: 1
  8384 ;; Hardware stack levels required when called: 10
  8385 ;; This function calls:
  8386 ;;		_color_writetoaddr
  8387 ;; This function is called by:
  8388 ;;		_interrupts_clear_colorclick
  8389 ;; This function uses a non-reentrant model
  8390 ;;
  8391                           
  8392                           	psect	text47
  8393   002732                     __ptext47:
  8394                           	callstack 0
  8395   002732                     _init_colorclick_interrupts:
  8396                           	callstack 18
  8397   002732                     
  8398                           ;interrupts.c: 45:     color_writetoaddr(0x00,0b10011);
  8399   002732  0E13               	movlw	19
  8400   002734  6E0B               	movwf	color_writetoaddr@value^0,c
  8401   002736  0E00               	movlw	0
  8402   002738  ECFF  F014         	call	_color_writetoaddr
  8403   00273C                     
  8404                           ;interrupts.c: 46:     _delay((unsigned long)((3)*(64000000/4000.0)));
  8405   00273C  0E3F               	movlw	63
  8406   00273E  6E0D               	movwf	??_init_colorclick_interrupts^0,c
  8407   002740  0E55               	movlw	85
  8408   002742                     u4777:
  8409   002742  2EE8               	decfsz	wreg,f,c
  8410   002744  D7FE               	bra	u4777
  8411   002746  2E0D               	decfsz	??_init_colorclick_interrupts^0,f,c
  8412   002748  D7FC               	bra	u4777
  8413   00274A  F000               	nop	
  8414   00274C                     
  8415                           ;interrupts.c: 48:     color_writetoaddr(0x0C,0b0100);
  8416   00274C  0E04               	movlw	4
  8417   00274E  6E0B               	movwf	color_writetoaddr@value^0,c
  8418   002750  0E0C               	movlw	12
  8419   002752  ECFF  F014         	call	_color_writetoaddr
  8420   002756                     
  8421                           ;interrupts.c: 49:     color_writetoaddr(0x04,(int_threshold_low & 0xFF));
  8422   002756  C04F  F00B         	movff	_int_threshold_low,color_writetoaddr@value
  8423   00275A  0E04               	movlw	4
  8424   00275C  ECFF  F014         	call	_color_writetoaddr
  8425   002760                     
  8426                           ;interrupts.c: 50:     color_writetoaddr(0x05,(int_threshold_low >> 8));
  8427   002760  5050               	movf	(_int_threshold_low+1)^0,w,c
  8428   002762  6E0B               	movwf	color_writetoaddr@value^0,c
  8429   002764  0E05               	movlw	5
  8430   002766  ECFF  F014         	call	_color_writetoaddr
  8431   00276A                     
  8432                           ;interrupts.c: 51:     color_writetoaddr(0x06,(int_threshold_high & 0xFF));
  8433   00276A  C0D7  F00B         	movff	_int_threshold_high,color_writetoaddr@value
  8434   00276E  0E06               	movlw	6
  8435   002770  ECFF  F014         	call	_color_writetoaddr
  8436   002774                     
  8437                           ;interrupts.c: 52:     color_writetoaddr(0x07,(int_threshold_high >> 8));
  8438   002774  0100               	movlb	0	; () banked
  8439   002776  51D8               	movf	(_int_threshold_high+1)& (0+255),w,b
  8440   002778  6E0B               	movwf	color_writetoaddr@value^0,c
  8441   00277A  0E07               	movlw	7
  8442   00277C  ECFF  F014         	call	_color_writetoaddr
  8443   002780  0012               	return		;funcret
  8444   002782                     __end_of_init_colorclick_interrupts:
  8445                           	callstack 0
  8446                           
  8447 ;; *************** function _color_writetoaddr *****************
  8448 ;; Defined at:
  8449 ;;		line 22 in file "color.c"
  8450 ;; Parameters:    Size  Location     Type
  8451 ;;  address         1    wreg     unsigned char 
  8452 ;;  value           1   10[COMRAM] unsigned char 
  8453 ;; Auto vars:     Size  Location     Type
  8454 ;;  address         1   11[COMRAM] unsigned char 
  8455 ;; Return value:  Size  Location     Type
  8456 ;;                  1    wreg      void 
  8457 ;; Registers used:
  8458 ;;		wreg, status,2, status,0, cstack
  8459 ;; Tracked objects:
  8460 ;;		On entry : 0/0
  8461 ;;		On exit  : 0/0
  8462 ;;		Unchanged: 0/0
  8463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8464 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8465 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8467 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8468 ;;Total ram usage:        2 bytes
  8469 ;; Hardware stack levels used: 1
  8470 ;; Hardware stack levels required when called: 9
  8471 ;; This function calls:
  8472 ;;		_I2C_2_Master_Start
  8473 ;;		_I2C_2_Master_Stop
  8474 ;;		_I2C_2_Master_Write
  8475 ;; This function is called by:
  8476 ;;		_color_click_init
  8477 ;;		_init_colorclick_interrupts
  8478 ;; This function uses a non-reentrant model
  8479 ;;
  8480                           
  8481                           	psect	text48
  8482   0029FE                     __ptext48:
  8483                           	callstack 0
  8484   0029FE                     _color_writetoaddr:
  8485                           	callstack 20
  8486                           
  8487                           ;incstack = 0
  8488                           ;color_writetoaddr@address stored from wreg
  8489   0029FE  6E0C               	movwf	color_writetoaddr@address^0,c
  8490   002A00                     
  8491                           ;color.c: 23:     I2C_2_Master_Start();
  8492   002A00  EC76  F015         	call	_I2C_2_Master_Start	;wreg free
  8493                           
  8494                           ;color.c: 24:     I2C_2_Master_Write(0x52 | 0x00);
  8495   002A04  0E52               	movlw	82
  8496   002A06  EC60  F015         	call	_I2C_2_Master_Write
  8497                           
  8498                           ;color.c: 25:     I2C_2_Master_Write(0x80 | address);
  8499   002A0A  500C               	movf	color_writetoaddr@address^0,w,c
  8500   002A0C  0980               	iorlw	128
  8501   002A0E  EC60  F015         	call	_I2C_2_Master_Write
  8502                           
  8503                           ;color.c: 26:     I2C_2_Master_Write(value);
  8504   002A12  500B               	movf	color_writetoaddr@value^0,w,c
  8505   002A14  EC60  F015         	call	_I2C_2_Master_Write
  8506                           
  8507                           ;color.c: 27:     I2C_2_Master_Stop();
  8508   002A18  EC71  F015         	call	_I2C_2_Master_Stop	;wreg free
  8509   002A1C  0012               	return		;funcret
  8510   002A1E                     __end_of_color_writetoaddr:
  8511                           	callstack 0
  8512                           
  8513 ;; *************** function _I2C_2_Master_Write *****************
  8514 ;; Defined at:
  8515 ;;		line 45 in file "i2c.c"
  8516 ;; Parameters:    Size  Location     Type
  8517 ;;  data_byte       1    wreg     unsigned char 
  8518 ;; Auto vars:     Size  Location     Type
  8519 ;;  data_byte       1    9[COMRAM] unsigned char 
  8520 ;; Return value:  Size  Location     Type
  8521 ;;                  1    wreg      void 
  8522 ;; Registers used:
  8523 ;;		wreg, status,2, status,0, cstack
  8524 ;; Tracked objects:
  8525 ;;		On entry : 0/0
  8526 ;;		On exit  : 0/0
  8527 ;;		Unchanged: 0/0
  8528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8530 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8532 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8533 ;;Total ram usage:        1 bytes
  8534 ;; Hardware stack levels used: 1
  8535 ;; Hardware stack levels required when called: 8
  8536 ;; This function calls:
  8537 ;;		_I2C_2_Master_Idle
  8538 ;; This function is called by:
  8539 ;;		_color_writetoaddr
  8540 ;;		_color_read_Red
  8541 ;;		_color_read_Green
  8542 ;;		_color_read_Blue
  8543 ;;		_color_read_Clear
  8544 ;;		_interrupts_clear_colorclick
  8545 ;; This function uses a non-reentrant model
  8546 ;;
  8547                           
  8548                           	psect	text49
  8549   002AC0                     __ptext49:
  8550                           	callstack 0
  8551   002AC0                     _I2C_2_Master_Write:
  8552                           	callstack 20
  8553                           
  8554                           ;incstack = 0
  8555                           ;I2C_2_Master_Write@data_byte stored from wreg
  8556   002AC0  6E0A               	movwf	I2C_2_Master_Write@data_byte^0,c
  8557   002AC2                     
  8558                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  8559   002AC2  EC91  F014         	call	_I2C_2_Master_Idle	;wreg free
  8560   002AC6                     
  8561                           ;i2c.c: 48:   SSP2BUF = data_byte;
  8562   002AC6  C00A  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  8563   002ACA  0012               	return		;funcret
  8564   002ACC                     __end_of_I2C_2_Master_Write:
  8565                           	callstack 0
  8566                           
  8567 ;; *************** function _I2C_2_Master_Stop *****************
  8568 ;; Defined at:
  8569 ;;		line 39 in file "i2c.c"
  8570 ;; Parameters:    Size  Location     Type
  8571 ;;		None
  8572 ;; Auto vars:     Size  Location     Type
  8573 ;;		None
  8574 ;; Return value:  Size  Location     Type
  8575 ;;                  1    wreg      void 
  8576 ;; Registers used:
  8577 ;;		wreg, status,2, status,0, cstack
  8578 ;; Tracked objects:
  8579 ;;		On entry : 0/0
  8580 ;;		On exit  : 0/0
  8581 ;;		Unchanged: 0/0
  8582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8587 ;;Total ram usage:        0 bytes
  8588 ;; Hardware stack levels used: 1
  8589 ;; Hardware stack levels required when called: 8
  8590 ;; This function calls:
  8591 ;;		_I2C_2_Master_Idle
  8592 ;; This function is called by:
  8593 ;;		_color_writetoaddr
  8594 ;;		_color_read_Red
  8595 ;;		_color_read_Green
  8596 ;;		_color_read_Blue
  8597 ;;		_color_read_Clear
  8598 ;;		_interrupts_clear_colorclick
  8599 ;; This function uses a non-reentrant model
  8600 ;;
  8601                           
  8602                           	psect	text50
  8603   002AE2                     __ptext50:
  8604                           	callstack 0
  8605   002AE2                     _I2C_2_Master_Stop:
  8606                           	callstack 20
  8607   002AE2                     
  8608                           ;i2c.c: 41:   I2C_2_Master_Idle();
  8609   002AE2  EC91  F014         	call	_I2C_2_Master_Idle	;wreg free
  8610   002AE6                     
  8611                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  8612   002AE6  010E               	movlb	14	; () banked
  8613   002AE8  85DA               	bsf	218,2,b	;volatile
  8614   002AEA                     
  8615                           ; BSR set to: 14
  8616   002AEA  0012               	return		;funcret
  8617   002AEC                     __end_of_I2C_2_Master_Stop:
  8618                           	callstack 0
  8619                           
  8620 ;; *************** function _I2C_2_Master_Start *****************
  8621 ;; Defined at:
  8622 ;;		line 27 in file "i2c.c"
  8623 ;; Parameters:    Size  Location     Type
  8624 ;;		None
  8625 ;; Auto vars:     Size  Location     Type
  8626 ;;		None
  8627 ;; Return value:  Size  Location     Type
  8628 ;;                  1    wreg      void 
  8629 ;; Registers used:
  8630 ;;		wreg, status,2, status,0, cstack
  8631 ;; Tracked objects:
  8632 ;;		On entry : 0/0
  8633 ;;		On exit  : 0/0
  8634 ;;		Unchanged: 0/0
  8635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8640 ;;Total ram usage:        0 bytes
  8641 ;; Hardware stack levels used: 1
  8642 ;; Hardware stack levels required when called: 8
  8643 ;; This function calls:
  8644 ;;		_I2C_2_Master_Idle
  8645 ;; This function is called by:
  8646 ;;		_color_writetoaddr
  8647 ;;		_color_read_Red
  8648 ;;		_color_read_Green
  8649 ;;		_color_read_Blue
  8650 ;;		_color_read_Clear
  8651 ;;		_interrupts_clear_colorclick
  8652 ;; This function uses a non-reentrant model
  8653 ;;
  8654                           
  8655                           	psect	text51
  8656   002AEC                     __ptext51:
  8657                           	callstack 0
  8658   002AEC                     _I2C_2_Master_Start:
  8659                           	callstack 20
  8660   002AEC                     
  8661                           ;i2c.c: 29:   I2C_2_Master_Idle();
  8662   002AEC  EC91  F014         	call	_I2C_2_Master_Idle	;wreg free
  8663   002AF0                     
  8664                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  8665   002AF0  010E               	movlb	14	; () banked
  8666   002AF2  81DA               	bsf	218,0,b	;volatile
  8667   002AF4                     
  8668                           ; BSR set to: 14
  8669   002AF4  0012               	return		;funcret
  8670   002AF6                     __end_of_I2C_2_Master_Start:
  8671                           	callstack 0
  8672                           
  8673 ;; *************** function _I2C_2_Master_Idle *****************
  8674 ;; Defined at:
  8675 ;;		line 22 in file "i2c.c"
  8676 ;; Parameters:    Size  Location     Type
  8677 ;;		None
  8678 ;; Auto vars:     Size  Location     Type
  8679 ;;		None
  8680 ;; Return value:  Size  Location     Type
  8681 ;;                  1    wreg      void 
  8682 ;; Registers used:
  8683 ;;		wreg, status,2, status,0
  8684 ;; Tracked objects:
  8685 ;;		On entry : 0/0
  8686 ;;		On exit  : 0/0
  8687 ;;		Unchanged: 0/0
  8688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8691 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8692 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8693 ;;Total ram usage:        1 bytes
  8694 ;; Hardware stack levels used: 1
  8695 ;; Hardware stack levels required when called: 7
  8696 ;; This function calls:
  8697 ;;		Nothing
  8698 ;; This function is called by:
  8699 ;;		_I2C_2_Master_Start
  8700 ;;		_I2C_2_Master_RepStart
  8701 ;;		_I2C_2_Master_Stop
  8702 ;;		_I2C_2_Master_Write
  8703 ;;		_I2C_2_Master_Read
  8704 ;; This function uses a non-reentrant model
  8705 ;;
  8706                           
  8707                           	psect	text52
  8708   002922                     __ptext52:
  8709                           	callstack 0
  8710   002922                     _I2C_2_Master_Idle:
  8711                           	callstack 20
  8712   002922                     l91:
  8713   002922  010E               	movlb	14	; () banked
  8714   002924  B5D8               	btfsc	216,2,b	;volatile
  8715   002926  EF97  F014         	goto	u2051
  8716   00292A  EF99  F014         	goto	u2050
  8717   00292E                     u2051:
  8718   00292E  EF91  F014         	goto	l91
  8719   002932                     u2050:
  8720   002932                     
  8721                           ; BSR set to: 14
  8722   002932  CEDA F009          	movff	3802,??_I2C_2_Master_Idle	;volatile
  8723   002936  0E1F               	movlw	31
  8724   002938  1609               	andwf	??_I2C_2_Master_Idle^0,f,c
  8725   00293A  A4D8               	btfss	status,2,c
  8726   00293C  EFA2  F014         	goto	u2061
  8727   002940  EFA4  F014         	goto	u2060
  8728   002944                     u2061:
  8729   002944  EF91  F014         	goto	l91
  8730   002948                     u2060:
  8731   002948                     
  8732                           ; BSR set to: 14
  8733   002948  0012               	return		;funcret
  8734   00294A                     __end_of_I2C_2_Master_Idle:
  8735                           	callstack 0
  8736                           
  8737 ;; *************** function _AppendTime *****************
  8738 ;; Defined at:
  8739 ;;		line 23 in file "Memorization.c"
  8740 ;; Parameters:    Size  Location     Type
  8741 ;;  temp            2    8[COMRAM] unsigned int 
  8742 ;;  time_index      2   10[COMRAM] PTR unsigned char 
  8743 ;;		 -> time_index(1), 
  8744 ;;  time_array      2   12[COMRAM] PTR unsigned int 
  8745 ;;		 -> time_array(80), 
  8746 ;; Auto vars:     Size  Location     Type
  8747 ;;		None
  8748 ;; Return value:  Size  Location     Type
  8749 ;;                  1    wreg      void 
  8750 ;; Registers used:
  8751 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8752 ;; Tracked objects:
  8753 ;;		On entry : 0/0
  8754 ;;		On exit  : 0/0
  8755 ;;		Unchanged: 0/0
  8756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8757 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8759 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8760 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8761 ;;Total ram usage:        9 bytes
  8762 ;; Hardware stack levels used: 1
  8763 ;; Hardware stack levels required when called: 7
  8764 ;; This function calls:
  8765 ;;		Nothing
  8766 ;; This function is called by:
  8767 ;;		_main
  8768 ;; This function uses a non-reentrant model
  8769 ;;
  8770                           
  8771                           	psect	text53
  8772   0028C6                     __ptext53:
  8773                           	callstack 0
  8774   0028C6                     _AppendTime:
  8775                           	callstack 23
  8776   0028C6                     
  8777                           ;Memorization.c: 25:     time_array[(*time_index)++] = temp;
  8778   0028C6  C00B  FFD9         	movff	AppendTime@time_index,fsr2l
  8779   0028CA  C00C  FFDA         	movff	AppendTime@time_index+1,fsr2h
  8780   0028CE  CFDF F00F          	movff	indf2,??_AppendTime
  8781   0028D2  0E01               	movlw	1
  8782   0028D4  26DF               	addwf	indf2,f,c
  8783   0028D6  500F               	movf	??_AppendTime^0,w,c
  8784   0028D8  0D02               	mullw	2
  8785   0028DA  CFF3 F010          	movff	prodl,??_AppendTime+1
  8786   0028DE  CFF4 F011          	movff	prodh,??_AppendTime+2
  8787   0028E2  5010               	movf	(??_AppendTime+1)^0,w,c
  8788   0028E4  240D               	addwf	AppendTime@time_array^0,w,c
  8789   0028E6  6ED9               	movwf	fsr2l,c
  8790   0028E8  5011               	movf	(??_AppendTime+2)^0,w,c
  8791   0028EA  200E               	addwfc	(AppendTime@time_array+1)^0,w,c
  8792   0028EC  6EDA               	movwf	fsr2h,c
  8793   0028EE  C009  FFDE         	movff	AppendTime@temp,postinc2
  8794   0028F2  C00A  FFDD         	movff	AppendTime@temp+1,postdec2
  8795   0028F6  0012               	return		;funcret
  8796   0028F8                     __end_of_AppendTime:
  8797                           	callstack 0
  8798                           
  8799 ;; *************** function _LowISR *****************
  8800 ;; Defined at:
  8801 ;;		line 75 in file "interrupts.c"
  8802 ;; Parameters:    Size  Location     Type
  8803 ;;		None
  8804 ;; Auto vars:     Size  Location     Type
  8805 ;;		None
  8806 ;; Return value:  Size  Location     Type
  8807 ;;                  1    wreg      void 
  8808 ;; Registers used:
  8809 ;;		wreg, status,2
  8810 ;; Tracked objects:
  8811 ;;		On entry : 0/0
  8812 ;;		On exit  : 0/0
  8813 ;;		Unchanged: 0/0
  8814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8817 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8818 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8819 ;;Total ram usage:        3 bytes
  8820 ;; Hardware stack levels used: 1
  8821 ;; Hardware stack levels required when called: 6
  8822 ;; This function calls:
  8823 ;;		Nothing
  8824 ;; This function is called by:
  8825 ;;		Interrupt level 1
  8826 ;; This function uses a non-reentrant model
  8827 ;;
  8828                           
  8829                           	psect	intcodelo
  8830   000018                     __pintcodelo:
  8831                           	callstack 0
  8832   000018                     _LowISR:
  8833                           	callstack 16
  8834                           
  8835                           ;incstack = 0
  8836   000018  8057               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  8837   00001A  CFD8 F006          	movff	status,??_LowISR
  8838   00001E  CFE8 F007          	movff	wreg,??_LowISR+1
  8839   000022  CFE0 F008          	movff	bsr,??_LowISR+2
  8840   000026                     
  8841                           ;interrupts.c: 78:     if(PIR0bits.TMR0IF){
  8842   000026  010E               	movlb	14	; () banked
  8843   000028  AB33               	btfss	51,5,b	;volatile
  8844   00002A  EF19  F000         	goto	i1u379_21
  8845   00002E  EF1B  F000         	goto	i1u379_20
  8846   000032                     i1u379_21:
  8847   000032  EF24  F000         	goto	i1l334
  8848   000036                     i1u379_20:
  8849   000036                     
  8850                           ; BSR set to: 14
  8851                           ;interrupts.c: 79:         TMR0H = 0b00001011;
  8852   000036  0E0B               	movlw	11
  8853   000038  6ED4               	movwf	212,c	;volatile
  8854                           
  8855                           ;interrupts.c: 80:         TMR0L = 0b11011011;
  8856   00003A  0EDB               	movlw	219
  8857   00003C  6ED3               	movwf	211,c	;volatile
  8858                           
  8859                           ;interrupts.c: 81:         tmr_ovf = 1;
  8860   00003E  0E01               	movlw	1
  8861   000040  0100               	movlb	0	; () banked
  8862   000042  6F75               	movwf	_tmr_ovf& (0+255),b
  8863   000044                     
  8864                           ; BSR set to: 0
  8865                           ;interrupts.c: 82:         PIR0bits.TMR0IF=0;
  8866   000044  010E               	movlb	14	; () banked
  8867   000046  9B33               	bcf	51,5,b	;volatile
  8868   000048                     i1l334:
  8869                           
  8870                           ; BSR set to: 14
  8871   000048  C008  FFE0         	movff	??_LowISR+2,bsr
  8872   00004C  C007  FFE8         	movff	??_LowISR+1,wreg
  8873   000050  C006  FFD8         	movff	??_LowISR,status
  8874   000054  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  8875   000056  0010               	retfie	
  8876   000058                     __end_of_LowISR:
  8877                           	callstack 0
  8878                           
  8879 ;; *************** function _HighISR *****************
  8880 ;; Defined at:
  8881 ;;		line 89 in file "interrupts.c"
  8882 ;; Parameters:    Size  Location     Type
  8883 ;;		None
  8884 ;; Auto vars:     Size  Location     Type
  8885 ;;		None
  8886 ;; Return value:  Size  Location     Type
  8887 ;;                  1    wreg      void 
  8888 ;; Registers used:
  8889 ;;		wreg, status,2, status,0, cstack
  8890 ;; Tracked objects:
  8891 ;;		On entry : 0/0
  8892 ;;		On exit  : 0/0
  8893 ;;		Unchanged: 0/0
  8894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8899 ;;Total ram usage:        0 bytes
  8900 ;; Hardware stack levels used: 1
  8901 ;; Hardware stack levels required when called: 5
  8902 ;; This function calls:
  8903 ;;		i2_interrupts_clear_colorclick
  8904 ;; This function is called by:
  8905 ;;		Interrupt level 2
  8906 ;; This function uses a non-reentrant model
  8907 ;;
  8908                           
  8909                           	psect	intcode
  8910   000008                     __pintcode:
  8911                           	callstack 0
  8912   000008                     _HighISR:
  8913                           	callstack 16
  8914                           
  8915                           ; BSR set to: 14
  8916                           ;incstack = 0
  8917   000008  8257               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8918   00000A  EF0F  F015         	goto	int_func
  8919                           
  8920                           	psect	intcode_body
  8921   002A1E                     __pintcode_body:
  8922                           	callstack 16
  8923   002A1E                     int_func:
  8924                           	callstack 16
  8925   002A1E                     
  8926                           ;interrupts.c: 116:     if(PIR0bits.INT1IF){
  8927   002A1E  010E               	movlb	14	; () banked
  8928   002A20  A333               	btfss	51,1,b	;volatile
  8929   002A22  EF15  F015         	goto	i2u380_41
  8930   002A26  EF17  F015         	goto	i2u380_40
  8931   002A2A                     i2u380_41:
  8932   002A2A  EF1D  F015         	goto	i2l342
  8933   002A2E                     i2u380_40:
  8934   002A2E                     
  8935                           ; BSR set to: 14
  8936                           ;interrupts.c: 117:         color_flag = 1;
  8937   002A2E  0E01               	movlw	1
  8938   002A30  6E55               	movwf	_color_flag^0,c
  8939   002A32                     
  8940                           ; BSR set to: 14
  8941                           ;interrupts.c: 119:         interrupts_clear_colorclick();
  8942   002A32  EC4B  F015         	call	i2_interrupts_clear_colorclick	;wreg free
  8943   002A36                     
  8944                           ;interrupts.c: 120:         PIR0bits.INT1IF = 0;
  8945   002A36  010E               	movlb	14	; () banked
  8946   002A38  9333               	bcf	51,1,b	;volatile
  8947   002A3A                     i2l342:
  8948                           
  8949                           ; BSR set to: 14
  8950   002A3A  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8951   002A3C  0011               	retfie		f
  8952   002A3E                     __end_of_HighISR:
  8953                           	callstack 0
  8954                           
  8955 ;; *************** function i2_interrupts_clear_colorclick *****************
  8956 ;; Defined at:
  8957 ;;		line 57 in file "interrupts.c"
  8958 ;; Parameters:    Size  Location     Type
  8959 ;;		None
  8960 ;; Auto vars:     Size  Location     Type
  8961 ;;		None
  8962 ;; Return value:  Size  Location     Type
  8963 ;;                  1    wreg      void 
  8964 ;; Registers used:
  8965 ;;		wreg, status,2, status,0, cstack
  8966 ;; Tracked objects:
  8967 ;;		On entry : 0/0
  8968 ;;		On exit  : 0/0
  8969 ;;		Unchanged: 0/0
  8970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8975 ;;Total ram usage:        0 bytes
  8976 ;; Hardware stack levels used: 1
  8977 ;; Hardware stack levels required when called: 4
  8978 ;; This function calls:
  8979 ;;		i2_I2C_2_Master_Start
  8980 ;;		i2_I2C_2_Master_Stop
  8981 ;;		i2_I2C_2_Master_Write
  8982 ;;		i2_init_colorclick_interrupts
  8983 ;; This function is called by:
  8984 ;;		_HighISR
  8985 ;; This function uses a non-reentrant model
  8986 ;;
  8987                           
  8988                           	psect	text56
  8989   002A96                     __ptext56:
  8990                           	callstack 0
  8991   002A96                     i2_interrupts_clear_colorclick:
  8992                           	callstack 16
  8993   002A96                     
  8994                           ;interrupts.c: 59:     I2C_2_Master_Start();
  8995   002A96  EC80  F015         	call	i2_I2C_2_Master_Start	;wreg free
  8996                           
  8997                           ;interrupts.c: 60:     I2C_2_Master_Write(0x52 | 0x00);
  8998   002A9A  0E52               	movlw	82
  8999   002A9C  EC66  F015         	call	i2_I2C_2_Master_Write
  9000                           
  9001                           ;interrupts.c: 61:     I2C_2_Master_Write(0b11100110);
  9002   002AA0  0EE6               	movlw	230
  9003   002AA2  EC66  F015         	call	i2_I2C_2_Master_Write
  9004                           
  9005                           ;interrupts.c: 62:     I2C_2_Master_Stop();
  9006   002AA6  EC7B  F015         	call	i2_I2C_2_Master_Stop	;wreg free
  9007                           
  9008                           ;interrupts.c: 64:     init_colorclick_interrupts();
  9009   002AAA  ECC1  F013         	call	i2_init_colorclick_interrupts	;wreg free
  9010   002AAE  0012               	return		;funcret
  9011   002AB0                     __end_ofi2_interrupts_clear_colorclick:
  9012                           	callstack 0
  9013                           
  9014 ;; *************** function i2_init_colorclick_interrupts *****************
  9015 ;; Defined at:
  9016 ;;		line 43 in file "interrupts.c"
  9017 ;; Parameters:    Size  Location     Type
  9018 ;;		None
  9019 ;; Auto vars:     Size  Location     Type
  9020 ;;		None
  9021 ;; Return value:  Size  Location     Type
  9022 ;;                  1    wreg      void 
  9023 ;; Registers used:
  9024 ;;		wreg, status,2, status,0, cstack
  9025 ;; Tracked objects:
  9026 ;;		On entry : 0/0
  9027 ;;		On exit  : 0/0
  9028 ;;		Unchanged: 0/0
  9029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9032 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9033 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9034 ;;Total ram usage:        1 bytes
  9035 ;; Hardware stack levels used: 1
  9036 ;; Hardware stack levels required when called: 3
  9037 ;; This function calls:
  9038 ;;		i2_color_writetoaddr
  9039 ;; This function is called by:
  9040 ;;		i2_interrupts_clear_colorclick
  9041 ;; This function uses a non-reentrant model
  9042 ;;
  9043                           
  9044                           	psect	text57
  9045   002782                     __ptext57:
  9046                           	callstack 0
  9047   002782                     i2_init_colorclick_interrupts:
  9048                           	callstack 16
  9049   002782                     
  9050                           ;interrupts.c: 45:     color_writetoaddr(0x00,0b10011);
  9051   002782  0E13               	movlw	19
  9052   002784  6E03               	movwf	i2color_writetoaddr@value^0,c
  9053   002786  0E00               	movlw	0
  9054   002788  EC1F  F015         	call	i2_color_writetoaddr
  9055   00278C                     
  9056                           ;interrupts.c: 46:     _delay((unsigned long)((3)*(64000000/4000.0)));
  9057   00278C  0E3F               	movlw	63
  9058   00278E  6E05               	movwf	??i2_init_colorclick_interrupts^0,c
  9059   002790  0E55               	movlw	85
  9060   002792                     i2u478_47:
  9061   002792  2EE8               	decfsz	wreg,f,c
  9062   002794  D7FE               	bra	i2u478_47
  9063   002796  2E05               	decfsz	??i2_init_colorclick_interrupts^0,f,c
  9064   002798  D7FC               	bra	i2u478_47
  9065   00279A  F000               	nop	
  9066   00279C                     
  9067                           ;interrupts.c: 48:     color_writetoaddr(0x0C,0b0100);
  9068   00279C  0E04               	movlw	4
  9069   00279E  6E03               	movwf	i2color_writetoaddr@value^0,c
  9070   0027A0  0E0C               	movlw	12
  9071   0027A2  EC1F  F015         	call	i2_color_writetoaddr
  9072   0027A6                     
  9073                           ;interrupts.c: 49:     color_writetoaddr(0x04,(int_threshold_low & 0xFF));
  9074   0027A6  C04F  F003         	movff	_int_threshold_low,i2color_writetoaddr@value
  9075   0027AA  0E04               	movlw	4
  9076   0027AC  EC1F  F015         	call	i2_color_writetoaddr
  9077   0027B0                     
  9078                           ;interrupts.c: 50:     color_writetoaddr(0x05,(int_threshold_low >> 8));
  9079   0027B0  5050               	movf	(_int_threshold_low+1)^0,w,c
  9080   0027B2  6E03               	movwf	i2color_writetoaddr@value^0,c
  9081   0027B4  0E05               	movlw	5
  9082   0027B6  EC1F  F015         	call	i2_color_writetoaddr
  9083   0027BA                     
  9084                           ;interrupts.c: 51:     color_writetoaddr(0x06,(int_threshold_high & 0xFF));
  9085   0027BA  C0D7  F003         	movff	_int_threshold_high,i2color_writetoaddr@value
  9086   0027BE  0E06               	movlw	6
  9087   0027C0  EC1F  F015         	call	i2_color_writetoaddr
  9088   0027C4                     
  9089                           ;interrupts.c: 52:     color_writetoaddr(0x07,(int_threshold_high >> 8));
  9090   0027C4  0100               	movlb	0	; () banked
  9091   0027C6  51D8               	movf	(_int_threshold_high+1)& (0+255),w,b
  9092   0027C8  6E03               	movwf	i2color_writetoaddr@value^0,c
  9093   0027CA  0E07               	movlw	7
  9094   0027CC  EC1F  F015         	call	i2_color_writetoaddr
  9095   0027D0  0012               	return		;funcret
  9096   0027D2                     __end_ofi2_init_colorclick_interrupts:
  9097                           	callstack 0
  9098                           
  9099 ;; *************** function i2_color_writetoaddr *****************
  9100 ;; Defined at:
  9101 ;;		line 22 in file "color.c"
  9102 ;; Parameters:    Size  Location     Type
  9103 ;;  address         1    wreg     unsigned char 
  9104 ;;  value           1    2[COMRAM] unsigned char 
  9105 ;; Auto vars:     Size  Location     Type
  9106 ;;  address         1    3[COMRAM] unsigned char 
  9107 ;; Return value:  Size  Location     Type
  9108 ;;                  1    wreg      void 
  9109 ;; Registers used:
  9110 ;;		wreg, status,2, status,0, cstack
  9111 ;; Tracked objects:
  9112 ;;		On entry : 0/0
  9113 ;;		On exit  : 0/0
  9114 ;;		Unchanged: 0/0
  9115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9116 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9117 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9119 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9120 ;;Total ram usage:        2 bytes
  9121 ;; Hardware stack levels used: 1
  9122 ;; Hardware stack levels required when called: 2
  9123 ;; This function calls:
  9124 ;;		i2_I2C_2_Master_Start
  9125 ;;		i2_I2C_2_Master_Stop
  9126 ;;		i2_I2C_2_Master_Write
  9127 ;; This function is called by:
  9128 ;;		i2_init_colorclick_interrupts
  9129 ;; This function uses a non-reentrant model
  9130 ;;
  9131                           
  9132                           	psect	text58
  9133   002A3E                     __ptext58:
  9134                           	callstack 0
  9135   002A3E                     i2_color_writetoaddr:
  9136                           	callstack 16
  9137                           
  9138                           ;incstack = 0
  9139                           ;i2color_writetoaddr@address stored from wreg
  9140   002A3E  6E04               	movwf	i2color_writetoaddr@address^0,c
  9141   002A40                     
  9142                           ;color.c: 23:     I2C_2_Master_Start();
  9143   002A40  EC80  F015         	call	i2_I2C_2_Master_Start	;wreg free
  9144                           
  9145                           ;color.c: 24:     I2C_2_Master_Write(0x52 | 0x00);
  9146   002A44  0E52               	movlw	82
  9147   002A46  EC66  F015         	call	i2_I2C_2_Master_Write
  9148                           
  9149                           ;color.c: 25:     I2C_2_Master_Write(0x80 | address);
  9150   002A4A  5004               	movf	i2color_writetoaddr@address^0,w,c
  9151   002A4C  0980               	iorlw	128
  9152   002A4E  EC66  F015         	call	i2_I2C_2_Master_Write
  9153                           
  9154                           ;color.c: 26:     I2C_2_Master_Write(value);
  9155   002A52  5003               	movf	i2color_writetoaddr@value^0,w,c
  9156   002A54  EC66  F015         	call	i2_I2C_2_Master_Write
  9157                           
  9158                           ;color.c: 27:     I2C_2_Master_Stop();
  9159   002A58  EC7B  F015         	call	i2_I2C_2_Master_Stop	;wreg free
  9160   002A5C  0012               	return		;funcret
  9161   002A5E                     __end_ofi2_color_writetoaddr:
  9162                           	callstack 0
  9163                           
  9164 ;; *************** function i2_I2C_2_Master_Write *****************
  9165 ;; Defined at:
  9166 ;;		line 45 in file "i2c.c"
  9167 ;; Parameters:    Size  Location     Type
  9168 ;;  data_byte       1    wreg     unsigned char 
  9169 ;; Auto vars:     Size  Location     Type
  9170 ;;  data_byte       1    1[COMRAM] unsigned char 
  9171 ;; Return value:  Size  Location     Type
  9172 ;;                  1    wreg      void 
  9173 ;; Registers used:
  9174 ;;		wreg, status,2, status,0, cstack
  9175 ;; Tracked objects:
  9176 ;;		On entry : 0/0
  9177 ;;		On exit  : 0/0
  9178 ;;		Unchanged: 0/0
  9179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9181 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9183 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9184 ;;Total ram usage:        1 bytes
  9185 ;; Hardware stack levels used: 1
  9186 ;; Hardware stack levels required when called: 1
  9187 ;; This function calls:
  9188 ;;		i2_I2C_2_Master_Idle
  9189 ;; This function is called by:
  9190 ;;		i2_color_writetoaddr
  9191 ;;		i2_interrupts_clear_colorclick
  9192 ;; This function uses a non-reentrant model
  9193 ;;
  9194                           
  9195                           	psect	text59
  9196   002ACC                     __ptext59:
  9197                           	callstack 0
  9198   002ACC                     i2_I2C_2_Master_Write:
  9199                           	callstack 16
  9200                           
  9201                           ;incstack = 0
  9202                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  9203   002ACC  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  9204   002ACE                     
  9205                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  9206   002ACE  ECA5  F014         	call	i2_I2C_2_Master_Idle	;wreg free
  9207   002AD2                     
  9208                           ;i2c.c: 48:   SSP2BUF = data_byte;
  9209   002AD2  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  9210   002AD6  0012               	return		;funcret
  9211   002AD8                     __end_ofi2_I2C_2_Master_Write:
  9212                           	callstack 0
  9213                           
  9214 ;; *************** function i2_I2C_2_Master_Stop *****************
  9215 ;; Defined at:
  9216 ;;		line 39 in file "i2c.c"
  9217 ;; Parameters:    Size  Location     Type
  9218 ;;		None
  9219 ;; Auto vars:     Size  Location     Type
  9220 ;;		None
  9221 ;; Return value:  Size  Location     Type
  9222 ;;                  1    wreg      void 
  9223 ;; Registers used:
  9224 ;;		wreg, status,2, status,0, cstack
  9225 ;; Tracked objects:
  9226 ;;		On entry : 0/0
  9227 ;;		On exit  : 0/0
  9228 ;;		Unchanged: 0/0
  9229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9234 ;;Total ram usage:        0 bytes
  9235 ;; Hardware stack levels used: 1
  9236 ;; Hardware stack levels required when called: 1
  9237 ;; This function calls:
  9238 ;;		i2_I2C_2_Master_Idle
  9239 ;; This function is called by:
  9240 ;;		i2_color_writetoaddr
  9241 ;;		i2_interrupts_clear_colorclick
  9242 ;; This function uses a non-reentrant model
  9243 ;;
  9244                           
  9245                           	psect	text60
  9246   002AF6                     __ptext60:
  9247                           	callstack 0
  9248   002AF6                     i2_I2C_2_Master_Stop:
  9249                           	callstack 16
  9250   002AF6                     
  9251                           ;i2c.c: 41:   I2C_2_Master_Idle();
  9252   002AF6  ECA5  F014         	call	i2_I2C_2_Master_Idle	;wreg free
  9253   002AFA                     
  9254                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  9255   002AFA  010E               	movlb	14	; () banked
  9256   002AFC  85DA               	bsf	218,2,b	;volatile
  9257   002AFE                     
  9258                           ; BSR set to: 14
  9259   002AFE  0012               	return		;funcret
  9260   002B00                     __end_ofi2_I2C_2_Master_Stop:
  9261                           	callstack 0
  9262                           
  9263 ;; *************** function i2_I2C_2_Master_Start *****************
  9264 ;; Defined at:
  9265 ;;		line 27 in file "i2c.c"
  9266 ;; Parameters:    Size  Location     Type
  9267 ;;		None
  9268 ;; Auto vars:     Size  Location     Type
  9269 ;;		None
  9270 ;; Return value:  Size  Location     Type
  9271 ;;                  1    wreg      void 
  9272 ;; Registers used:
  9273 ;;		wreg, status,2, status,0, cstack
  9274 ;; Tracked objects:
  9275 ;;		On entry : 0/0
  9276 ;;		On exit  : 0/0
  9277 ;;		Unchanged: 0/0
  9278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9283 ;;Total ram usage:        0 bytes
  9284 ;; Hardware stack levels used: 1
  9285 ;; Hardware stack levels required when called: 1
  9286 ;; This function calls:
  9287 ;;		i2_I2C_2_Master_Idle
  9288 ;; This function is called by:
  9289 ;;		i2_color_writetoaddr
  9290 ;;		i2_interrupts_clear_colorclick
  9291 ;; This function uses a non-reentrant model
  9292 ;;
  9293                           
  9294                           	psect	text61
  9295   002B00                     __ptext61:
  9296                           	callstack 0
  9297   002B00                     i2_I2C_2_Master_Start:
  9298                           	callstack 16
  9299   002B00                     
  9300                           ;i2c.c: 29:   I2C_2_Master_Idle();
  9301   002B00  ECA5  F014         	call	i2_I2C_2_Master_Idle	;wreg free
  9302   002B04                     
  9303                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  9304   002B04  010E               	movlb	14	; () banked
  9305   002B06  81DA               	bsf	218,0,b	;volatile
  9306   002B08                     
  9307                           ; BSR set to: 14
  9308   002B08  0012               	return		;funcret
  9309   002B0A                     __end_ofi2_I2C_2_Master_Start:
  9310                           	callstack 0
  9311                           
  9312 ;; *************** function i2_I2C_2_Master_Idle *****************
  9313 ;; Defined at:
  9314 ;;		line 22 in file "i2c.c"
  9315 ;; Parameters:    Size  Location     Type
  9316 ;;		None
  9317 ;; Auto vars:     Size  Location     Type
  9318 ;;		None
  9319 ;; Return value:  Size  Location     Type
  9320 ;;                  1    wreg      void 
  9321 ;; Registers used:
  9322 ;;		wreg, status,2, status,0
  9323 ;; Tracked objects:
  9324 ;;		On entry : 0/0
  9325 ;;		On exit  : 0/0
  9326 ;;		Unchanged: 0/0
  9327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9330 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9331 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9332 ;;Total ram usage:        1 bytes
  9333 ;; Hardware stack levels used: 1
  9334 ;; This function calls:
  9335 ;;		Nothing
  9336 ;; This function is called by:
  9337 ;;		i2_I2C_2_Master_Start
  9338 ;;		i2_I2C_2_Master_Stop
  9339 ;;		i2_I2C_2_Master_Write
  9340 ;; This function uses a non-reentrant model
  9341 ;;
  9342                           
  9343                           	psect	text62
  9344   00294A                     __ptext62:
  9345                           	callstack 0
  9346   00294A                     i2_I2C_2_Master_Idle:
  9347                           	callstack 16
  9348   00294A                     i2l91:
  9349   00294A  010E               	movlb	14	; () banked
  9350   00294C  B5D8               	btfsc	216,2,b	;volatile
  9351   00294E  EFAB  F014         	goto	i2u223_41
  9352   002952  EFAD  F014         	goto	i2u223_40
  9353   002956                     i2u223_41:
  9354   002956  EFA5  F014         	goto	i2l91
  9355   00295A                     i2u223_40:
  9356   00295A                     
  9357                           ; BSR set to: 14
  9358   00295A  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  9359   00295E  0E1F               	movlw	31
  9360   002960  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  9361   002962  A4D8               	btfss	status,2,c
  9362   002964  EFB6  F014         	goto	i2u224_41
  9363   002968  EFB8  F014         	goto	i2u224_40
  9364   00296C                     i2u224_41:
  9365   00296C  EFA5  F014         	goto	i2l91
  9366   002970                     i2u224_40:
  9367   002970                     
  9368                           ; BSR set to: 14
  9369   002970  0012               	return		;funcret
  9370   002972                     __end_ofi2_I2C_2_Master_Idle:
  9371                           	callstack 0
  9372   000000                     
  9373                           	psect	rparam
  9374   000000                     
  9375                           	psect	temp
  9376   000057                     btemp:
  9377                           	callstack 0
  9378   000057                     	ds	1
  9379   000000                     int$flags	set	btemp
  9380   000000                     wtemp8	set	btemp+1
  9381   000000                     ttemp5	set	btemp+1
  9382   000000                     ttemp6	set	btemp+4
  9383   000000                     ttemp7	set	btemp+8
  9384                           
  9385                           	psect	idloc
  9386                           
  9387                           ;Config register IDLOC0 @ 0x200000
  9388                           ;	unspecified, using default values
  9389   200000                     	org	2097152
  9390   200000  0FFF               	dw	4095
  9391                           
  9392                           ;Config register IDLOC1 @ 0x200002
  9393                           ;	unspecified, using default values
  9394   200002                     	org	2097154
  9395   200002  0FFF               	dw	4095
  9396                           
  9397                           ;Config register IDLOC2 @ 0x200004
  9398                           ;	unspecified, using default values
  9399   200004                     	org	2097156
  9400   200004  0FFF               	dw	4095
  9401                           
  9402                           ;Config register IDLOC3 @ 0x200006
  9403                           ;	unspecified, using default values
  9404   200006                     	org	2097158
  9405   200006  0FFF               	dw	4095
  9406                           
  9407                           ;Config register IDLOC4 @ 0x200008
  9408                           ;	unspecified, using default values
  9409   200008                     	org	2097160
  9410   200008  0FFF               	dw	4095
  9411                           
  9412                           ;Config register IDLOC5 @ 0x20000A
  9413                           ;	unspecified, using default values
  9414   20000A                     	org	2097162
  9415   20000A  0FFF               	dw	4095
  9416                           
  9417                           ;Config register IDLOC6 @ 0x20000C
  9418                           ;	unspecified, using default values
  9419   20000C                     	org	2097164
  9420   20000C  0FFF               	dw	4095
  9421                           
  9422                           ;Config register IDLOC7 @ 0x20000E
  9423                           ;	unspecified, using default values
  9424   20000E                     	org	2097166
  9425   20000E  0FFF               	dw	4095
  9426                           
  9427                           	psect	config
  9428                           
  9429                           ;Config register CONFIG1L @ 0x300000
  9430                           ;	External Oscillator mode Selection bits
  9431                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  9432                           ;	Power-up default value for COSC bits
  9433                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  9434   300000                     	org	3145728
  9435   300000  AA                 	db	170
  9436                           
  9437                           ;Config register CONFIG1H @ 0x300001
  9438                           ;	unspecified, using default values
  9439                           ;	Clock Out Enable bit
  9440                           ;	CLKOUTEN = 0x1, unprogrammed default
  9441                           ;	Clock Switch Enable bit
  9442                           ;	CSWEN = 0x1, unprogrammed default
  9443                           ;	Fail-Safe Clock Monitor Enable bit
  9444                           ;	FCMEN = 0x1, unprogrammed default
  9445   300001                     	org	3145729
  9446   300001  FF                 	db	255
  9447                           
  9448                           ;Config register CONFIG2L @ 0x300002
  9449                           ;	unspecified, using default values
  9450                           ;	Master Clear Enable bit
  9451                           ;	MCLRE = 0x1, unprogrammed default
  9452                           ;	Power-up Timer Enable bit
  9453                           ;	PWRTE = 0x1, unprogrammed default
  9454                           ;	Low-power BOR enable bit
  9455                           ;	LPBOREN = 0x1, unprogrammed default
  9456                           ;	Brown-out Reset Enable bits
  9457                           ;	BOREN = 0x3, unprogrammed default
  9458   300002                     	org	3145730
  9459   300002  FF                 	db	255
  9460                           
  9461                           ;Config register CONFIG2H @ 0x300003
  9462                           ;	unspecified, using default values
  9463                           ;	Brown Out Reset Voltage selection bits
  9464                           ;	BORV = 0x3, unprogrammed default
  9465                           ;	ZCD Disable bit
  9466                           ;	ZCD = 0x1, unprogrammed default
  9467                           ;	PPSLOCK bit One-Way Set Enable bit
  9468                           ;	PPS1WAY = 0x1, unprogrammed default
  9469                           ;	Stack Full/Underflow Reset Enable bit
  9470                           ;	STVREN = 0x1, unprogrammed default
  9471                           ;	Debugger Enable bit
  9472                           ;	DEBUG = 0x1, unprogrammed default
  9473                           ;	Extended Instruction Set Enable bit
  9474                           ;	XINST = 0x1, unprogrammed default
  9475   300003                     	org	3145731
  9476   300003  FF                 	db	255
  9477                           
  9478                           ;Config register CONFIG3L @ 0x300004
  9479                           ;	WDT Period Select bits
  9480                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  9481                           ;	WDT operating mode
  9482                           ;	WDTE = OFF, WDT Disabled
  9483   300004                     	org	3145732
  9484   300004  9F                 	db	159
  9485                           
  9486                           ;Config register CONFIG3H @ 0x300005
  9487                           ;	unspecified, using default values
  9488                           ;	WDT Window Select bits
  9489                           ;	WDTCWS = 0x7, unprogrammed default
  9490                           ;	WDT input clock selector
  9491                           ;	WDTCCS = 0x7, unprogrammed default
  9492   300005                     	org	3145733
  9493   300005  FF                 	db	255
  9494                           
  9495                           ;Config register CONFIG4L @ 0x300006
  9496                           ;	unspecified, using default values
  9497                           ;	Write Protection Block 0
  9498                           ;	WRT0 = 0x1, unprogrammed default
  9499                           ;	Write Protection Block 1
  9500                           ;	WRT1 = 0x1, unprogrammed default
  9501                           ;	Write Protection Block 2
  9502                           ;	WRT2 = 0x1, unprogrammed default
  9503                           ;	Write Protection Block 3
  9504                           ;	WRT3 = 0x1, unprogrammed default
  9505                           ;	Write Protection Block 3
  9506                           ;	WRT4 = 0x1, unprogrammed default
  9507                           ;	Write Protection Block 3
  9508                           ;	WRT5 = 0x1, unprogrammed default
  9509                           ;	Write Protection Block 3
  9510                           ;	WRT6 = 0x1, unprogrammed default
  9511                           ;	Write Protection Block 3
  9512                           ;	WRT7 = 0x1, unprogrammed default
  9513   300006                     	org	3145734
  9514   300006  FF                 	db	255
  9515                           
  9516                           ;Config register CONFIG4H @ 0x300007
  9517                           ;	unspecified, using default values
  9518                           ;	Configuration Register Write Protection bit
  9519                           ;	WRTC = 0x1, unprogrammed default
  9520                           ;	Boot Block Write Protection bit
  9521                           ;	WRTB = 0x1, unprogrammed default
  9522                           ;	Data EEPROM Write Protection bit
  9523                           ;	WRTD = 0x1, unprogrammed default
  9524                           ;	Scanner Enable bit
  9525                           ;	SCANE = 0x1, unprogrammed default
  9526                           ;	Low Voltage Programming Enable bit
  9527                           ;	LVP = 0x1, unprogrammed default
  9528   300007                     	org	3145735
  9529   300007  FF                 	db	255
  9530                           
  9531                           ;Config register CONFIG5L @ 0x300008
  9532                           ;	unspecified, using default values
  9533                           ;	UserNVM Program Memory Code Protection bit
  9534                           ;	CP = 0x1, unprogrammed default
  9535                           ;	DataNVM Memory Code Protection bit
  9536                           ;	CPD = 0x1, unprogrammed default
  9537   300008                     	org	3145736
  9538   300008  FF                 	db	255
  9539                           
  9540                           ;Config register CONFIG5H @ 0x300009
  9541                           ;	unspecified, using default values
  9542   300009                     	org	3145737
  9543   300009  FF                 	db	255
  9544                           
  9545                           ;Config register CONFIG6L @ 0x30000A
  9546                           ;	unspecified, using default values
  9547                           ;	Table Read Protection Block 0
  9548                           ;	EBTR0 = 0x1, unprogrammed default
  9549                           ;	Table Read Protection Block 1
  9550                           ;	EBTR1 = 0x1, unprogrammed default
  9551                           ;	Table Read Protection Block 2
  9552                           ;	EBTR2 = 0x1, unprogrammed default
  9553                           ;	Table Read Protection Block 3
  9554                           ;	EBTR3 = 0x1, unprogrammed default
  9555                           ;	Table Read Protection Block 4
  9556                           ;	EBTR4 = 0x1, unprogrammed default
  9557                           ;	Table Read Protection Block 5
  9558                           ;	EBTR5 = 0x1, unprogrammed default
  9559                           ;	Table Read Protection Block 6
  9560                           ;	EBTR6 = 0x1, unprogrammed default
  9561                           ;	Table Read Protection Block 7
  9562                           ;	EBTR7 = 0x1, unprogrammed default
  9563   30000A                     	org	3145738
  9564   30000A  FF                 	db	255
  9565                           
  9566                           ;Config register CONFIG6H @ 0x30000B
  9567                           ;	unspecified, using default values
  9568                           ;	Boot Block Table Read Protection bit
  9569                           ;	EBTRB = 0x1, unprogrammed default
  9570   30000B                     	org	3145739
  9571   30000B  FF                 	db	255
  9572                           tosu	equ	0xFFF
  9573                           tosh	equ	0xFFE
  9574                           tosl	equ	0xFFD
  9575                           stkptr	equ	0xFFC
  9576                           pclatu	equ	0xFFB
  9577                           pclath	equ	0xFFA
  9578                           pcl	equ	0xFF9
  9579                           tblptru	equ	0xFF8
  9580                           tblptrh	equ	0xFF7
  9581                           tblptrl	equ	0xFF6
  9582                           tablat	equ	0xFF5
  9583                           prodh	equ	0xFF4
  9584                           prodl	equ	0xFF3
  9585                           indf0	equ	0xFEF
  9586                           postinc0	equ	0xFEE
  9587                           postdec0	equ	0xFED
  9588                           preinc0	equ	0xFEC
  9589                           plusw0	equ	0xFEB
  9590                           fsr0h	equ	0xFEA
  9591                           fsr0l	equ	0xFE9
  9592                           wreg	equ	0xFE8
  9593                           indf1	equ	0xFE7
  9594                           postinc1	equ	0xFE6
  9595                           postdec1	equ	0xFE5
  9596                           preinc1	equ	0xFE4
  9597                           plusw1	equ	0xFE3
  9598                           fsr1h	equ	0xFE2
  9599                           fsr1l	equ	0xFE1
  9600                           bsr	equ	0xFE0
  9601                           indf2	equ	0xFDF
  9602                           postinc2	equ	0xFDE
  9603                           postdec2	equ	0xFDD
  9604                           preinc2	equ	0xFDC
  9605                           plusw2	equ	0xFDB
  9606                           fsr2h	equ	0xFDA
  9607                           fsr2l	equ	0xFD9
  9608                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         211
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     78      86
    BANK0           160     56     121
    BANK1           256      0     140
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    Return_Time@time_index	PTR unsigned char  size(2) Largest target is 1
		 -> time_index(BANK0[1]), 

    Return_Time@time_array	PTR unsigned int  size(2) Largest target is 80
		 -> time_array(BANK1[80]), 

    Return_Anti_Moves@moves_index	PTR unsigned char  size(2) Largest target is 1
		 -> moves_index(COMRAM[1]), 

    Return_Anti_Moves@anti_moves_array	PTR unsigned char  size(2) Largest target is 40
		 -> anti_moves_array(BANK0[40]), 

    AppendTime@time_index	PTR unsigned char  size(2) Largest target is 1
		 -> time_index(BANK0[1]), 

    AppendTime@time_array	PTR unsigned int  size(2) Largest target is 80
		 -> time_array(BANK1[80]), 

    AppendMoves@moves_index	PTR unsigned char  size(2) Largest target is 1
		 -> moves_index(COMRAM[1]), 

    AppendMoves@anti_moves_array	PTR unsigned char  size(2) Largest target is 40
		 -> anti_moves_array(BANK0[40]), 

    MoveBuggy@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    MoveBuggy@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    MoveBuggy@color_detected	PTR unsigned char  size(2) Largest target is 3561
		 -> RAM(DATA[3561]), 

    WhiteInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    WhiteInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    AntiPink@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    AntiPink@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    AntiYellow@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    AntiYellow@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    LightBlueInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    LightBlueInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    OrangeInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    OrangeInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    PinkInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    PinkInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    YellowInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    YellowInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    BlueInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    BlueInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    GreenInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    GreenInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    RedInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    RedInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlhlllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlhlllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlhlllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlhlllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnLeft135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnLeft90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    fullSpeedBackwards@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlhlllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    fullSpeedBackwards@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlhlllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    fullSpeedBackwards@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    fullSpeedBackwards@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlhlllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    fullSpeedBackwards@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlhlllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    fullSpeedBackwards@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlhlllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlhlllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlhlllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlhlllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlhlllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlhlllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlhlllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlhlllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlhlllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlhlllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlhlllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlhlllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlhlllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlhlllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlhlllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlhlllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    S1244DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlhlllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlhlllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    S1244DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlhlllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlhlllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), main@motorL(BANK0[9]), 

    detect_color@lost_timer	PTR unsigned char  size(2) Largest target is 3561
		 -> RAM(DATA[3561]), 

    detect_color@tempval	PTR struct RGB_val size(2) Largest target is 8
		 -> main@initial_color(BANK0[8]), 

    Update_RGBC@tempval	PTR struct RGB_val size(2) Largest target is 8
		 -> main@initial_color(BANK0[8]), 


Critical Paths under _main in COMRAM

    _detect_color->___fltol
    ___fltol->___flmul
    ___flmul->___fldiv
    ___fldiv->___xxtofl
    _color_click_init->_color_writetoaddr
    _WhiteInstructions->_MoveBuggy
    _MoveBuggy->_AntiPink
    _MoveBuggy->_AntiYellow
    _YellowInstructions->_turnRight90
    _PinkInstructions->_turnLeft90
    _OrangeInstructions->_turnRight135
    _turnRight135->_turnRight90
    _LightBlueInstructions->_turnLeft135
    _turnLeft135->_turnLeft90
    _AntiYellow->_BlueInstructions
    _AntiYellow->_RedInstructions
    _RedInstructions->_turnRight90
    _turnRight90->_turnRight
    _turnRight->_setMotorPWM
    _AntiPink->_BlueInstructions
    _AntiPink->_GreenInstructions
    _fullSpeedAhead->_setMotorPWM
    _GreenInstructions->_turnLeft90
    _BlueInstructions->_turnLeft90
    _turnLeft90->_turnLeft
    _turnLeft->_setMotorPWM
    _stop->_setMotorPWM
    _fullSpeedBackwards->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _Update_RGBC->_color_read_Blue
    _Update_RGBC->_color_read_Clear
    _Update_RGBC->_color_read_Green
    _Update_RGBC->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _interrupts_clear_colorclick->_init_colorclick_interrupts
    _init_colorclick_interrupts->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    i2_interrupts_clear_colorclick->i2_init_colorclick_interrupts
    i2_init_colorclick_interrupts->i2_color_writetoaddr
    i2_color_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_detect_color
    _detect_color->___fltol

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                32    32      0  490551
                                             24 BANK0     32    32      0
                         _AppendTime
                    _Interrupts_init
                           _LED_init
                          _MoveBuggy
                        _Timer0_init
                        _Update_RGBC
                  _WhiteInstructions
                         _WhiteLight
                   _color_click_init
                       _detect_color
                     _fullSpeedAhead
                    _initDCmotorsPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _detect_color                                        20    16      4    6673
                                              4 BANK0     20    16      4
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     616
                                              8 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     517
                                             72 COMRAM     6     2      4
                                              0 BANK0      4     4      0
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    1886
                                             47 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1541
                                             22 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     750
                                             12 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WhiteLight                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WhiteInstructions                                   11     7      4  248861
                                             58 COMRAM    11     7      4
                   _BlueInstructions
                          _MoveBuggy
                  _Return_Anti_Moves
                        _Return_Time
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (2) _Return_Time                                          9     5      4     219
                                              8 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (2) _Return_Anti_Moves                                    6     2      4     219
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _MoveBuggy                                            6     0      6  222680
                                             52 COMRAM     6     0      6
                           _AntiPink
                         _AntiYellow
                        _AppendMoves
                   _BlueInstructions
                  _GreenInstructions
              _LightBlueInstructions
                 _OrangeInstructions
                   _PinkInstructions
                    _RedInstructions
                 _YellowInstructions
 ---------------------------------------------------------------------------------
 (3) _YellowInstructions                                   7     3      4   16596
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                        _turnRight90
 ---------------------------------------------------------------------------------
 (3) _PinkInstructions                                     7     3      4   17204
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                         _turnLeft90
 ---------------------------------------------------------------------------------
 (3) _OrangeInstructions                                   7     3      4   24393
                                             43 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                       _turnRight135
 ---------------------------------------------------------------------------------
 (4) _turnRight135                                         5     1      4   15988
                                             38 COMRAM     5     1      4
                               _stop
                          _turnRight
                        _turnRight90
 ---------------------------------------------------------------------------------
 (3) _LightBlueInstructions                                7     3      4   25001
                                             43 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                        _turnLeft135
 ---------------------------------------------------------------------------------
 (4) _turnLeft135                                          5     1      4   16596
                                             38 COMRAM     5     1      4
                               _stop
                           _turnLeft
                         _turnLeft90
 ---------------------------------------------------------------------------------
 (3) _AppendMoves                                          6     2      4    1130
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _AntiYellow                                           7     3      4   42445
                                             45 COMRAM     7     3      4
                   _BlueInstructions
                    _RedInstructions
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (3) _RedInstructions                                      7     3      4   16748
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                        _turnRight90
 ---------------------------------------------------------------------------------
 (4) _turnRight90                                          5     1      4    8191
                                             33 COMRAM     5     1      4
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (5) _turnRight                                            6     2      4    2593
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _AntiPink                                             7     3      4   43053
                                             45 COMRAM     7     3      4
                   _BlueInstructions
                  _GreenInstructions
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (1) _fullSpeedAhead                                       6     2      4    2745
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _GreenInstructions                                    7     3      4   17356
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                         _turnLeft90
 ---------------------------------------------------------------------------------
 (3) _BlueInstructions                                     7     3      4   17704
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                         _turnLeft90
 ---------------------------------------------------------------------------------
 (4) _turnLeft90                                           5     1      4    8799
                                             33 COMRAM     5     1      4
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (5) _turnLeft                                             6     2      4    2593
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _stop                                                 5     1      4    4873
                                             27 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _fullSpeedBackwards                                   6     2      4    3201
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    1829
                                             21 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                             14 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Update_RGBC                                          2     0      2     616
                                             19 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              9 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0     772
        _interrupts_clear_colorclick
 ---------------------------------------------------------------------------------
 (2) _interrupts_clear_colorclick                          0     0      0     772
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
         _init_colorclick_interrupts
 ---------------------------------------------------------------------------------
 (3) _init_colorclick_interrupts                           1     1      0     750
                                             12 COMRAM     1     1      0
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     750
                                             10 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              9 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _AppendTime                                           9     3      6     750
                                              8 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _LowISR                                               3     3      0       0
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _HighISR                                             0     0      0     244
      i2_interrupts_clear_colorclick
 ---------------------------------------------------------------------------------
 (11) i2_interrupts_clear_colorclick                       0     0      0     244
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
       i2_init_colorclick_interrupts
 ---------------------------------------------------------------------------------
 (12) i2_init_colorclick_interrupts                        1     1      0     222
                                              4 COMRAM     1     1      0
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (13) i2_color_writetoaddr                                 2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (14) i2_I2C_2_Master_Write                                1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (14) i2_I2C_2_Master_Stop                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (14) i2_I2C_2_Master_Start                                0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (15) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AppendTime
   _Interrupts_init
     _interrupts_clear_colorclick
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
       _init_colorclick_interrupts
         _color_writetoaddr
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
   _LED_init
   _MoveBuggy
     _AntiPink
       _BlueInstructions
         _fullSpeedBackwards
           _setMotorPWM
             ___lwdiv
               ___wmul (ARG)
             ___wmul
         _stop
           _setMotorPWM
         _turnLeft90
           _stop
           _turnLeft
             _setMotorPWM
       _GreenInstructions
         _fullSpeedBackwards
         _stop
         _turnLeft90
       _fullSpeedAhead
         _setMotorPWM
       _stop
     _AntiYellow
       _BlueInstructions
       _RedInstructions
         _fullSpeedBackwards
         _stop
         _turnRight90
           _stop
           _turnRight
             _setMotorPWM
       _fullSpeedAhead
       _stop
     _AppendMoves
     _BlueInstructions
     _GreenInstructions
     _LightBlueInstructions
       _fullSpeedBackwards
       _stop
       _turnLeft135
         _stop
         _turnLeft
         _turnLeft90
     _OrangeInstructions
       _fullSpeedBackwards
       _stop
       _turnRight135
         _stop
         _turnRight
         _turnRight90
     _PinkInstructions
       _fullSpeedBackwards
       _stop
       _turnLeft90
     _RedInstructions
     _YellowInstructions
       _fullSpeedBackwards
       _stop
       _turnRight90
   _Timer0_init
   _Update_RGBC
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _WhiteInstructions
     _BlueInstructions
     _MoveBuggy
     _Return_Anti_Moves
     _Return_Time
     _fullSpeedAhead
     _stop
   _WhiteLight
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
   _detect_color
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       ___fldiv (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _fullSpeedAhead
   _initDCmotorsPWM
   _stop

 _LowISR (ROOT)

 _HighISR (ROOT)
   i2_interrupts_clear_colorclick
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle
     i2_init_colorclick_interrupts
       i2_color_writetoaddr
         i2_I2C_2_Master_Start
         i2_I2C_2_Master_Stop
         i2_I2C_2_Master_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      62        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      8C       7       54.7%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     38      79       5       75.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4E      56       1       91.5%
BITBIGSFRlhllh      52      0       0      40        0.0%
BITBIGSFRlhllll     37      0       0      42        0.0%
BITBIGSFRlllh       2D      0       0      45        0.0%
BITBIGSFRllllhl     2A      0       0      53        0.0%
BITBIGSFRllllll     26      0       0      60        0.0%
BITBIGSFRhhhlll     1D      0       0      38        0.0%
BITBIGSFRhhhhlh     1B      0       0      33        0.0%
BITBIGSFRhhhhll     13      0       0      34        0.0%
BITBIGSFRllllhh     11      0       0      47        0.0%
BITBIGSFRllllhh     11      0       0      48        0.0%
BITBIGSFRhhhlhh      E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRllllhh      C      0       0      46        0.0%
BITBIGSFRllllhl      9      0       0      57        0.0%
BITBIGSFRlhllll      8      0       0      43        0.0%
BITBIGSFRlllllh      6      0       0      59        0.0%
BITBIGSFRllllhl      6      0       0      52        0.0%
BITBIGSFRllllhl      5      0       0      55        0.0%
BITBIGSFRllllhl      5      0       0      51        0.0%
BITBIGSFRllllhl      3      0       0      54        0.0%
BITBIGSFRllllhl      3      0       0      56        0.0%
BITBIGSFRllllhh      3      0       0      50        0.0%
BITBIGSFRlhlllh      2      0       0      41        0.0%
BITBIGSFRhhhllh      2      0       0      37        0.0%
BITBIGSFRhhhlhl      1      0       0      36        0.0%
BITBIGSFRllllhh      1      0       0      49        0.0%
BITBIGSFRlhlh        1      0       0      39        0.0%
BITBIGSFRllllhl      1      0       0      58        0.0%
BITBIGSFRllh         1      0       0      44        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     15B      61        0.0%
DATA                 0      0     15B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Mar 13 18:10:44 2023

                       _color_read_Red 25F2                           ___fldiv@aexp 002F  
                         ___fldiv@bexp 002E                           ___fldiv@sign 0027  
                      _color_read_Blue 26E2                                     l23 28C4  
                                   l32 2690                                     l41 25F0  
                                   l26 2A1C                                     l35 2730  
                                   l29 2640                                     l61 0680  
                                   l38 26E0                                     l91 2922  
                                   l59 0670                                     l94 2948  
                                   l88 2920                                     l97 2AF4  
                                   bsr 000FE0                    ___wmul@multiplicand 000B  
                     _anti_moves_array 0076                       _color_read_Clear 2692  
                     _color_read_Green 2642             WhiteInstructions@anticolor 0043  
                    ??_Interrupts_init 000E                                    l100 2AE0  
                                  l103 2AEA                                    l106 2ACA  
                                  l203 1A70                                    l132 2ABE  
                                  l109 2858                                    l213 1982  
                                  l135 2B10                                    l208 1894  
                                  l321 2780                                    l233 208E  
                                  l314 2A7A                                    l218 1B5E  
                                  l324 2A94                                    l260 2524  
                                  l510 0ED6                                    l511 0F40  
                                  l440 29FC                                    l248 1FE0  
                                  l193 169E                                    l186 211E  
                                  l269 2592                                    l198 1D1C  
                                  l702 2890                                    l607 222A  
                                  l616 22B0                                    l705 2996  
                                  l625 2336                                    l634 1DCE  
                                  l643 1E80                                    l571 23BC  
                                  l580 2442                                    l655 1C48  
                                  l682 137E                                    l589 1F32  
                                  l693 29BA                                    l598 21A4  
                                  l696 28F6                                    l699 29DC  
                  i2_color_writetoaddr 2A3E                                    wreg 000FE8  
                         ___flmul@aexp 0041                           ___flmul@bexp 0042  
                         ___flmul@sign 003C                           ___flmul@temp 0047  
                         ___flmul@prod 0043                           ___fltol@exp1 004E  
                                 l1002 17A6                                   l1203 24B6  
                                 l1300 0D62                                   l1301 0D50  
                                 l3000 2380                                   l3010 23DA  
                                 l3002 2390                                   l1323 0AAA  
                                 l3020 2416                                   l3012 23DC  
                                 l3004 23A8                                   l3100 2168  
                                 l3030 1EA0                                   l3022 242E  
                                 l3014 23F0                                   l3006 23BE  
                                 l3110 21C2                                   l3102 2178  
                                 l1326 093C                                   l1319 0746  
                                 l3040 1EF2                                   l3032 1EB4  
                                 l3024 1E82                                   l3016 2404  
                                 l3008 23C6                                   l3200 1E54  
                                 l3120 21FE                                   l3112 21C4  
                                 l3104 2190                                   l1336 0A6C  
                                 l1328 09B4                                   l1360 13D6  
                                 l1329 09A2                                   l3042 1F06  
                                 l3034 1EC8                                   l3026 1E8A  
                                 l3018 2406                                   l3202 1E6C  
                                 l3130 224A                                   l3122 2216  
                                 l3114 21D8                                   l3106 21A6  
                                 l3210 2902                                   l1363 1532  
                                 l3060 281A                                   l3220 25F2  
                                 l1196 24AE                                   l3036 1ECA  
                                 l3028 1E9E                                   l3204 299A  
                                 l3140 229C                                   l3132 225E  
                                 l3124 222C                                   l3116 21EC  
                                 l3108 21AE                                   l3300 1310  
                                 l3212 2908                                   l1292 0C68  
                                 l4100 1746                                   l3070 2856  
                                 l3062 281E                                   l3222 2638  
                                 l3038 1EDA                                   l3150 22E4  
                                 l3142 22B2                                   l3134 2272  
                                 l3126 2234                                   l3118 21EE  
                                 l3302 132A                                   l3310 285A  
                                 l3214 290A                                   l4110 1776  
                                 l1374 14CA                                   l1287 0E44  
                                 l1367 146E                                   l3080 2756  
                                 l3064 2826                                   l3056 2AD8  
                                 l3232 26E2                                   l3240 26D8  
                                 l3160 1D1E                                   l3152 22F8  
                                 l3144 22BA                                   l3136 2274  
                                 l3128 2248                                   l3304 133E  
                                 l3312 2888                                   l3216 290C  
                                 l3208 28F8                                   l3400 0C90  
                                 l4112 1786                                   l4200 0548  
                                 l4120 0062                                   l1289 0CA4  
                                 l3082 2760                                   l3074 2732  
                                 l3066 282E                                   l3058 2ADC  
                                 l3234 2728                                   l3226 2642  
                                 l3170 1D68                                   l3162 1D22  
                                 l3154 22FA                                   l3146 22CE  
                                 l3138 2284                                   l3090 2128  
                                 l3306 1356                                   l3250 1122  
                                 l3218 290E                                   l1298 0CEA  
                                 l3410 0CD0                                   l3402 0C92  
                                 l3330 0AD8                                   l3322 0AAC  
                                 l4114 1796                                   l4106 175A  
                                 l4210 0598                                   l4202 0558  
                                 l4130 0340                                   l4122 0148  
                                 l3084 276A                                   l3076 273C  
                                 l3244 2A7C                                   l3068 2854  
                                 l3228 2688                                   l3180 1DBA  
                                 l3172 1D7C                                   l3164 1D36  
                                 l3156 230A                                   l3148 22D0  
                                 l3092 213C                                   l3308 136A  
                                 l3260 1180                                   l3252 1130  
                                 l3316 29BC                                   l3420 0D0C  
                                 l3412 0CDA                                   l3404 0CA2  
                                 l3340 0B12                                   l3332 0AE8  
                                 l3324 0AB8                                   l3500 077A  
                                 l4108 1766                                   l4220 05E0  
                                 l4204 0568                                   l4212 05A0  
                                 l4140 0390                                   l4132 0350  
                                 l4124 0234                                   l4300 0F50  
                                 l3086 2774                                   l3078 274C  
                                 l3238 2692                                   l3190 1E18  
                                 l3182 1DD0                                   l3174 1D90  
                                 l3166 1D52                                   l3158 2322  
                                 l3094 213E                                   l3270 11EA  
                                 l3262 119A                                   l3254 114A  
                                 l3246 10FC                                   l3318 29DA  
                                 l3430 0D7E                                   l3422 0D1A  
                                 l3414 0CE8                                   l3406 0CB4  
                                 l3350 0B3E                                   l3342 0B18  
                                 l3334 0AF8                                   l3326 0AC6  
                                 l3510 07CA                                   l3502 0786  
                                 l4230 0628                                   l4222 05F0  
                                 l4214 05B0                                   l4206 0578  
                                 l4150 03D8                                   l4134 0360  
                                 l4142 0398                                   l4126 0320  
                                 l4118 005C                                   l4310 0FAC  
                                 l4302 0F60                                   l2800 1C8E  
                                 l3192 1E1A                                   l3184 1DD4  
                                 l3176 1D92                                   l3168 1D66  
                                 l3096 2152                                   l3088 2120  
                                 l3280 124E                                   l3272 11FE  
                                 l3264 11AE                                   l3256 115E  
                                 l3248 110E                                   l3440 0DEA  
                                 l3432 0D8C                                   l3424 0D48  
                                 l3408 0CCA                                   l3416 0CFA  
                                 l3360 0B78                                   l3352 0B4E  
                                 l3344 0B1E                                   l3336 0AFA  
                                 l3328 0AC8                                   l3520 080C  
                                 l3512 07D6                                   l3504 0790  
                                 l4080 16CA                                   l4240 0672  
                                 l4232 0638                                   l4224 0600  
                                 l4216 05C0                                   l4208 0588  
                                 l4160 0420                                   l4152 03E8  
                                 l4144 03A8                                   l4136 0370  
                                 l4128 0330                                   l4320 1008  
                                 l4312 0FB4                                   l4304 0F72  
                                 l2810 1D02                                   l2802 1CA6  
                                 l3194 1E2E                                   l3186 1DE8  
                                 l3178 1DA2                                   l3098 2166  
                                 l3290 12B2                                   l3282 1262  
                                 l3274 1212                                   l3266 11C2  
                                 l3258 1172                                   l3450 0E38  
                                 l3442 0E04                                   l3434 0DB6  
                                 l3418 0D08                                   l3362 0B8E  
                                 l3354 0B5E                                   l3346 0B2C  
                                 l3338 0B02                                   l3530 086E  
                                 l3522 0818                                   l3514 07E2  
                                 l3506 07A6                                   l4090 171A  
                                 l4082 16F6                                   l4074 16A0  
                                 l4242 0676                                   l4234 0648  
                                 l4218 05D0                                   l4226 0608  
                                 l4162 0430                                   l4170 0468  
                                 l4154 03F8                                   l4146 03B8  
                                 l4138 0380                                   l4330 103C  
                                 l4322 100E                                   l4314 0FC8  
                                 l4306 0F92                                   l4250 0E46  
                                 l2812 1D0E                                   l2804 1CB2  
                                 l2820 1A08                                   l2900 2068  
                                 l3196 1E42                                   l3188 1E04  
                                 l3292 12C0                                   l3284 1270  
                                 l3276 1220                                   l3268 11D0  
                                 l3700 28B0                                   l3452 0E3A  
                                 l3444 0E20                                   l3428 0D72  
                                 l3436 0DBA                                   l3380 0BE2  
                                 l3364 0B9E                                   l3372 0BBE  
                                 l3356 0B60                                   l3348 0B2E  
                                 l3540 0904                                   l3532 087A  
                                 l3524 0828                                   l3516 07F0  
                                 l3508 07B2                                   l3460 0682  
                                 l4084 16F8                                   l4076 16B6  
                                 l4236 0658                                   l4228 0618  
                                 l4180 04B8                                   l4172 0478  
                                 l4164 0440                                   l4148 03C8  
                                 l4156 0400                                   l4244 067A  
                                 l4340 10A4                                   l4332 1062  
                                 l4324 1012                                   l4316 0FE2  
                                 l4308 0F98                                   l4260 0E8A  
                                 l4252 0E68                                   l2750 298E  
                                 l2806 1CC8                                   l2830 1A58  
                                 l2822 1A14                                   l2814 1984  
                                 l2902 207C                                   l3198 1E44  
                                 l2910 1F50                                   l3294 12DA  
                                 l3286 128A                                   l3278 123A  
                                 l3702 28BA                                   l3446 0E24  
                                 l3438 0DD4                                   l3390 0C34  
                                 l3382 0BFC                                   l3374 0BCE  
                                 l3366 0BA6                                   l3358 0B68  
                                 l3550 095A                                   l3542 0922  
                                 l3534 0896                                   l3526 0842  
                                 l3518 07FC                                   l3470 06BE  
                                 l3462 068E                                   l4086 1708  
                                 l4246 067E                                   l4238 0668  
                                 l4190 0500                                   l4182 04C8  
                                 l4174 0488                                   l4166 0450  
                                 l4158 0410                                   l4350 10EE  
                                 l4342 10B8                                   l4334 1082  
                                 l4318 0FE4                                   l4326 101A  
                                 l4270 0EA8                                   l4262 0E8E  
                                 l4254 0E6C                                   l3704 2594  
                                 l2760 2466                                   l2808 1CF6  
                                 l2824 1A2A                                   l2816 19E0  
                                 l2904 207E                                   l2840 1838  
                                 l2832 17A8                                   l2920 1F90  
                                 l2912 1F52                                   l3296 12EE  
                                 l3288 129E                                   l3448 0E32  
                                 l3392 0C44                                   l3384 0C0C  
                                 l3376 0BCE                                   l3368 0BAA  
                                 l3560 09C4                                   l3552 095E  
                                 l3544 092C                                   l3536 08C0  
                                 l3528 0852                                   l3480 06F0  
                                 l3472 06CE                                   l3464 069C  
                                 l4096 1732                                   l4088 170C  
                                 l3640 13E6                                   l4192 0510  
                                 l4176 0498                                   l4184 04D0  
                                 l4168 0460                                   l4344 10D2  
                                 l4336 1088                                   l4328 102C  
                                 l4280 0EC4                                   l4272 0EAC  
                                 l4264 0E92                                   l4256 0E70  
                                 l2850 2AEC                                   l2770 24A0  
                                 l2762 246E                                   l2754 2444  
                                 l2826 1A40                                   l2818 19EC  
                                 l2842 184E                                   l2834 1804  
                                 l2930 1FD0                                   l2922 1FA4  
                                 l2914 1F66                                   l2906 1F34  
                                 l3298 1302                                   l3394 0C58  
                                 l3386 0C1C                                   l3570 0A26  
                                 l3562 09D0                                   l3554 096C  
                                 l3546 093A                                   l3538 08F6  
                                 l3490 0730                                   l3482 06FE  
                                 l3474 06D4                                   l3466 069E  
                                 l4098 173C                                   l3650 1424  
                                 l3642 13FC                                   l3634 1382  
                                 l4194 0520                                   l4186 04E0  
                                 l4178 04A8                                   l4346 10E6  
                                 l4338 109C                                   l4290 0EF8  
                                 l4282 0ECA                                   l4274 0EB0  
                                 l4266 0E9A                                   l4258 0E84  
                                 l2852 2AF0                                   l2860 2AE6  
                                 l2772 24A2                                   l2764 247C  
                                 l2756 244C                                   l2748 2972  
                                 l2780 15A4                                   l2828 1A4C  
                                 l2940 18F2                                   l2844 1864  
                                 l2836 1810                                   l2924 1FA6  
                                 l2916 1F7A                                   l2908 1F3C  
                                 l3900 1BA0                                   l3396 0C66  
                                 l3388 0C2C                                   l3580 0A8E  
                                 l3572 0A3A                                   l3564 09DE  
                                 l3556 099A                                   l3548 094C  
                                 l3492 0736                                   l3484 0700  
                                 l3476 06E4                                   l3468 06AE  
                                 l3660 14AC                                   l3652 1456  
                                 l3636 1392                                   l4196 0530  
                                 l4188 04F0                                   l4348 10E8  
                                 l4292 0F04                                   l4284 0ECE  
                                 l4276 0EB4                                   l4268 0EA2  
                                 l2854 2AC2                                   l2774 24A8  
                                 l2766 2482                                   l2758 245E  
                                 l2790 165E                                   l2782 15B8  
                                 l2870 1B02                                   l2862 1A72  
                                 l2950 1952                                   l2942 18FE  
                                 l2846 1870                                   l2838 182C  
                                 l2926 1FBA                                   l2918 1F7C  
                                 l3910 1BEC                                   l3902 1BB4  
                                 l3398 0C72                                   l3582 0A90  
                                 l3574 0A54                                   l3566 0A08  
                                 l3494 0756                                   l3486 0710  
                                 l3478 06EA                                   l3670 1502  
                                 l3662 14BA                                   l3654 1458  
                                 l3646 1410                                   l3638 13A0  
                                 l4198 0538                                   l4294 0F24  
                                 l4286 0ED2                                   l4278 0EBC  
                                 l2792 2922                                   l2856 2AC6  
                                 l2936 2A00                                   l2768 2498  
                                 l2784 15BC                                   l2776 1534  
                                 l2872 1B18                                   l2864 1ACE  
                                 l2880 1FE2                                   l2952 195E  
                                 l2944 191A                                   l2848 187C  
                                 l2928 1FCE                                   l2960 24D4  
                                 l3912 1BFE                                   l3904 1BB8  
                                 l3840 2B0A                                   l3576 0A70  
                                 l3584 0A96                                   l3568 0A0C  
                                 l3496 0766                                   l3488 0720  
                                 l3672 1512                                   l3664 14D8  
                                 l3656 1464                                   l3648 1418  
                                 l4296 0F28                                   l4288 0EE4  
                                 l2794 2932                                   l2858 2AE2  
                                 l2786 15FE                                   l2778 1550  
                                 l2874 1B2E                                   l2866 1ADA  
                                 l2890 2028                                   l2882 1FEA  
                                 l2954 196A                                   l2946 1926  
                                 l2938 1896                                   l2970 2514  
                                 l2962 24E8                                   l3914 1C14  
                                 l3906 1BD2                                   l3586 0A9A  
                                 l3578 0A80                                   l3674 1520  
                                 l3666 14DA                                   l3658 14A0  
                                 l3850 20EE                                   l3842 2090  
                                 l4298 0F38                                   l2788 161A  
                                 l2876 1B3A                                   l2868 1AF6  
                                 l2796 1C4A                                   l2892 202A  
                                 l2884 1FFE                                   l2948 193C  
                                 l2980 2558                                   l2972 2526  
                                 l2964 24EA                                   l2956 24B8  
                                 l3908 1BE6                                   l3916 1C36  
                                 l3676 1522                                   l3668 14DE  
                                 l3860 2110                                   l3852 20F8  
                                 l3844 20A0                                   l3870 2A74  
                                 l3838 2AB0                                   l2878 1B46  
                                 l2798 1C82                                   l2894 203E  
                                 l2886 2000                                   l2990 2340  
                                 l2982 256C                                   l2974 253A  
                                 l2966 24FE                                   l2958 24CC  
                                 l3694 2892                                   l3862 2112  
                                 l3854 20FA                                   l3846 20C6  
                                 l3872 2A76                                   l2896 2052  
                                 l2888 2014                                   l2992 2354  
                                 l2984 2580                                   l2976 2542  
                                 l2968 2512                                   l3696 2896  
                                 l3864 211C                                   l3856 2104  
                                 l3848 20CA                                   l3874 2A78  
                                 l3866 2A5E                                   l3890 29FA  
                                 l2898 2054                                   l2994 2356  
                                 l2986 2582                                   l2978 2556  
                                 l3698 28A0                                   l3858 2106  
                                 l3892 28C6                                   l3868 2A70  
                                 l3884 29DE                                   l2996 236A  
                                 l2988 2338                                   l3886 29E6  
                                 l2998 237E                                   l3894 1B60  
                                 l3888 29F0                                   l3896 1B78  
                                 l3898 1B80                                   u2000 245E  
                                 u2001 245A                                   u2010 247C  
                                 u2011 2478                                   u2020 2498  
                                 u2100 1A08                                   u2021 2494  
                                 u2101 1A04                                   u2030 1550  
                                 u2110 1804                                   u2031 154C  
                                 u2111 1800                                   u2040 161A  
                                 u2120 182C                                   u2200 1F8C  
                                 u3000 095A                                   u2041 1616  
                                 u2121 1828                                   u2201 1F88  
                                 u3001 0956                                   u2050 2932  
                                 u2130 1ACE                                   u2210 1FB6  
                                 u3010 096C                                   u2051 292E  
                                 u2131 1ACA                                   u2211 1FB2  
                                 u3011 0968                                   u2060 2948  
                                 u2140 1AF6                                   u2220 1FE0  
                                 u2300 2592                                   u3020 099A  
                                 u2061 2944                                   u2141 1AF2  
                                 u2221 1FDC                                   u2301 258E  
                                 u3021 0996                                   u2070 1C82  
                                 u2150 2010                                   u2310 2366  
                                 u3030 09B0                                   u2071 1C7E  
                                 u2151 200C                                   u2311 2362  
                                 u3031 09AC                                   u2080 1CA6  
                                 u2160 203A                                   u2320 2390  
                                 u2400 2178                                   u3040 09C4  
                                 u3200 149C                                   u4000 0330  
                         _BAUD4CONbits 000EE9                                   u2081 1CA2  
                                 u2161 2036                                   u2321 238C  
                                 u2401 2174                                   u3041 09C0  
                                 u3201 1498                                   u4001 032C  
                                 u2090 19E0                                   u2170 2064  
                                 u2330 23EC                                   u2250 18F2  
                                 u2410 21D4                                   u3050 09DE  
                                 u3210 14BA                                   u4010 0340  
                                 u2091 19DC                                   u2171 2060  
                                 u2331 23E8                                   u2251 18EE  
                                 u2411 21D0                                   u3051 09DA  
                                 u3211 14B6                                   u4011 033C  
                                 u2180 208E                                   u2340 2416  
                                 u2260 191A                                   u2500 1E54  
                                 u2420 21FE                                   u3060 0A26  
                                 u3220 14CA                                   u4100 03D8  
                                 u4020 0350                                   u2181 208A  
                                 u2341 2412                                   u2261 1916  
                                 u2501 1E50                                   u2421 21FA  
                                 u3061 0A22                                   u3221 14C6  
                                 u4101 03D4                                   u4021 034C  
                                 u2350 1EB0                                   u2190 1F62  
                                 u2270 24FA                                   u2430 225A  
                                 u2510 110E                                   u3070 0A54  
                                 u3230 14D8                                   u4110 03E8  
                                 u4030 0360                                   u2351 1EAC  
                                 u2191 1F5E                                   u2271 24F6  
                                 u2431 2256                                   u2511 110A  
                                 u3071 0A50                                   u3231 14D4  
                                 u4111 03E4                                   u4031 035C  
                                 u2360 1EDA                                   u2280 2524  
                                 u2440 2284                                   u2600 1270  
                                 u2520 1130                                   u3080 0A8E  
                                 u3240 1512                                   u3160 1392  
                                 u4200 0488                                   u4120 03F8  
                                 u4040 0370                                   u2361 1ED6  
                                 u2281 2520                                   u2441 2280  
                                 u2601 126C                                   u2521 112C  
                                 u3081 0A8A                                   u3241 150E  
                                 u3161 138E                                   u4201 0484  
                                 u4121 03F4                                   u4041 036C  
                                 u2370 2842                                   u2290 2568  
                                 u2450 22E0                                   u2610 129E  
                                 u2530 115E                                   u3250 1520  
                                 u3170 13A0                                   u4210 0498  
                                 u4130 0410                                   u4050 0380  
                                 _T2PR 000FBC                                   u2371 283A  
                                 u2291 2564                                   u2451 22DC  
                                 u2611 129A                                   u2531 115A  
                                 u3251 151C                                   u3171 139C  
                                 u4211 0494                                   u4131 040C  
                                 u4051 037C                                   u2460 230A  
                                 u2620 12C0                                   u2540 1180  
                                 u2700 0B2C                                   u3180 13FC  
                                 u4300 0530                                   u4220 04A8  
                                 u4140 0420                                   u4060 0390  
                                 u2461 2306                                   u2621 12BC  
                                 u2541 117C                                   u2701 0B28  
                                 u3181 13F8                                   u4301 052C  
                                 u4221 04A4                                   u4141 041C  
                                 u4061 038C                                   u2470 1D78  
                                 u2390 214E                                   u2630 12EE  
                                 u2550 11AE                                   u2710 0B3E  
                                 u3190 1452                                   u4310 0548  
                                 u4230 04B8                                   u4150 0430  
                                 u4070 03A8                                   u2471 1D74  
                                 u2391 214A                                   u2631 12EA  
                                 u2551 11AA                                   u2711 0B3A  
                                 u3191 144E                                   u4311 0544  
                                 u4231 04B4                                   u4151 042C  
                                 u4071 03A4                                   u2480 1DA2  
                                 u2640 1310                                   u2560 11D0  
                                 u2800 0CE8                                   u2720 0B4E  
                                 u4400 05E0                                   u4320 0558  
                                 u4240 04C8                                   u4160 0440  
                                 u4080 03B8                                   u2481 1D9E  
                                 u2641 130C                                   u2561 11CC  
                                 u2801 0CE4                                   u2721 0B4A  
                                 u4401 05DC                                   u4321 0554  
                                 u4241 04C4                                   u4161 043C  
                                 u4081 03B4                                   u2490 1E2A  
                                 u2650 133E                                   u2570 11FE  
                                 u2810 0D08                                   u2730 0B8E  
                                 u4410 05F0                                   u4330 0568  
                                 u4250 04E0                                   u4170 0450  
                                 u4090 03C8                                   u2491 1E26  
                                 u2651 133A                                   u2571 11FA  
                                 u2811 0D04                                   u2731 0B8A  
                                 u4411 05EC                                   u4331 0564  
                                 u4251 04DC                                   u4171 044C  
                                 u4091 03C4                                   u2388 2844  
                                 u2660 136A                                   u2580 1220  
                                 u2820 0D1A                                   u2740 0BCE  
                                 u2900 069C                                   u4420 0600  
                                 u4340 0578                                   u4260 04F0  
                                 u4180 0460                                   u4500 0F50  
                                 u2661 1366                                   u2581 121C  
                                 u2821 0D16                                   u2741 0BCA  
                                 u2901 0698                                   u4421 05FC  
                                 u4341 0574                                   u4261 04EC  
                                 u4181 045C                                   u4501 0F4C  
                                 u2590 124E                                   u2830 0D48  
                                 u2750 0C44                                   u2670 0AC6  
                                 u2910 06AE                                   u4430 0618  
                                 u4350 0588                                   u4270 0500  
                                 u4190 0478                                   u4510 0F60  
                                 u2591 124A                                   u2831 0D44  
                                 u2751 0C40                                   u2671 0AC2  
                                 u2911 06AA                                   u4431 0614  
                                 u4351 0584                                   u4271 04FC  
                                 u4191 0474                                   u4511 0F5C  
                                 u2840 0D5E                                   u2760 0C66  
                                 u2680 0AD8                                   u2920 06BE  
                                 u4440 0628                                   u4360 0598  
                                 u4280 0510                                   u4520 0F72  
                                 u2841 0D5A                                   u2761 0C62  
                                 u2681 0AD4                                   u2921 06BA  
                                 u4441 0624                                   u4361 0594  
                                 u4281 050C                                   u4521 0F6E  
                                 u2850 0D72                                   u2770 0C90  
                                 u2690 0AE8                                   u2930 06FE  
                                 u4450 0638                                   u4370 05B0  
                                 u4290 0520                                   u4530 0FC8  
                                 u2851 0D6E                                   u2771 0C8C  
                                 u2691 0AE4                                   u2931 06FA  
                                 u4451 0634                                   u4371 05AC  
                                 u4291 051C                                   u4531 0FC4  
                                 u2860 0D8C                                   u2780 0CB4  
                                 u2940 0710                                   u4460 0648  
                                 u4380 05C0                                   u4540 102C  
                                 u2861 0D88                                   u2781 0CB0  
                                 u2941 070C                                   u4461 0644  
                                 u4381 05BC                                   u4541 1028  
                                 u2870 0DD4                                   u2790 0CCA  
                                 u2950 0720                                   u4470 0658  
                                 u4390 05D0                                   u4550 103C  
                                 u4607 2182                                   u2871 0DD0  
                                 u2791 0CC6                                   u2951 071C  
                                 u4471 0654                                   u4391 05CC  
                                 u4551 1038                                   u3760 1BCE  
                                 u2880 0E04                                   u2960 0756  
                                 u4480 0668                                   u4560 10B8  
                                 u4617 2208                                   u3761 1BCA  
                                 u2881 0E00                                   u2961 0752  
                                 u4481 0664                                   u4561 10B4  
                                 u3770 1BFE                                   u2890 0E32  
                                 u2970 0766                                   u3930 16B6  
                                 u4490 0F38                                   u4707 1974  
                                 u4627 228E                                   u3771 1BFA  
                                 u2891 0E2E                                   u2971 0762  
                                 u3931 16B2                                   u4491 0F34  
                                 u3780 1C48                                   u2980 08E0  
                                 u3940 16EC                                   u4717 2420  
                                 u4637 2314                                   u3781 1C44  
                                 u2990 093A                                   u3950 171A  
                                 u4727 1EE4                                   u4647 1D40  
                                 u2991 0936                                   u3951 1716  
                                 u3960 172E                                   u4737 1F10  
                                 u4657 1DAC                                   u2985 08D6  
                                 u3961 172A                                   u3945 16E0  
                                 u4577 0FD4                                   i2l26 2A5C  
                                 u3970 1756                                   u4747 1A62  
                                 u4667 239A                                   u3971 1752  
                                 u4587 10C4                                   u3980 1776  
                                 u4757 1D14                                   u4677 1886  
                                 u4597 28A6                                   u3981 1772  
                                 u3990 1786                                   u4767 1B50  
                                 u4687 1DF2                                   u3991 1782  
                                 u4777 2742                                   u4697 1E5E  
                                 i2l91 294A                                   i2l94 2970  
                                 i2l97 2B08      Return_Anti_Moves@anti_moves_array 000B  
                                 _main 0E46                    __end_of_AppendMoves 29BC  
                   _YellowInstructions 2120                                   fsr2h 000FDA  
                                 indf2 000FDF                                   fsr2l 000FD9  
                                 btemp 0057                                   _stop 1C4A  
       ??i2_init_colorclick_interrupts 0005                      main@initial_color 00BD  
                                 prodh 000FF4                                   prodl 000FF3  
                                 start 0058                   ?i2_color_writetoaddr 0003  
                      ___fldiv@new_exp 0028                 __end_of_color_read_Red 2642  
                      __end_of_HighISR 2A3E                           ___param_bank 000000  
                          _turnLeft135 2526                    ?_YellowInstructions 0027  
                          _turnRight90 1F34                             _AntiYellow 1D1E  
                     __end_of_LED_init 2AC0                          ___fltol@sign1 004D  
                           _AppendTime 28C6                                  ?_main 0001  
                      __end_of___fldiv 0E46                        __end_of___flmul 0AAC  
                      __end_of___fltol 17A8                                  ?_stop 001C  
                      __end_of___lwdiv 24B8                                  i1l334 0048  
                                i2l103 2AFE                                  i2l106 2AD6  
                                i2l321 27D0                                  i2l324 2AAE  
                                i2l342 2A3A                                  _TMR0H 000FD4  
                                _TMR0L 000FD3             __end_of_I2C_2_Master_Start 2AF6  
                 ??_YellowInstructions 002B             __end_of_I2C_2_Master_Write 2ACC  
                     _PinkInstructions 21A6                     _int_threshold_high 00D7  
                                main@b 00BA               __end_of_BlueInstructions 1F34  
                                tablat 000FF5                                  plusw2 000FDB  
                                ttemp5 0058                                  ttemp6 005B  
                                ttemp7 005F                                  status 000FD8  
                                wtemp8 0058                    detect_color@tempval 00A3  
                ??i2_color_writetoaddr 0004                __end_of_color_read_Blue 2732  
                _I2C_2_Master_RepStart 2AD8                   fullSpeedBackwards@mL 001C  
                 fullSpeedBackwards@mR 001E                       __end_of_AntiPink 1E82  
                      ?_color_read_Red 000D                        __initialization 27D2  
                         __end_of_main 10FC                   __end_of_detect_color 0682  
                         __end_of_stop 1D1E                  _LightBlueInstructions 22B2  
                    ??_RedInstructions 002B    __end_of_interrupts_clear_colorclick 2A96  
       ?i2_interrupts_clear_colorclick 0001            _interrupts_clear_colorclick 2A7C  
                               ??_main 00B7                                 ??_stop 0020  
                        __activetblptr 000000                           _turnRight135 24B8  
                    _Return_Anti_Moves 29BC                            _AppendMoves 2998  
                         ?_setMotorPWM 0016                                 _CCPR1H 000FAA  
                               _CCPR2H 000FA6                                 _CCPR3H 000F25  
                               _CCPR4H 000F21                     ?_Return_Anti_Moves 0009  
                               _RC0PPS 000E62                                 _RC4REG 000EE3  
                               _RE2PPS 000E74                                 _RD5PPS 000E6F  
                               _RC7PPS 000E69                                 _RE4PPS 000E76  
                               _RD6PPS 000E70                                 i2l3050 2AFA  
                               i1l3922 0026                                 i2l3044 2B00  
                               i2l3052 2ACE                                 i1l3924 0036  
                               i2l3046 2B04                                 i2l3054 2AD2  
                               i2l3206 2A40                                 i1l3926 0044  
                               i2l3048 2AF6                                 i2l2932 294A  
                               i2l2934 295A                                 i2l3680 2782  
                               i2l3690 27BA                                 i2l3682 278C  
                               i2l3930 2A2E                                 _RG6PPS 000E88  
                               i2l3692 27C4                                 i2l3684 279C  
                               i2l3932 2A32                                 i2l3686 27A6  
                               i2l3918 2A96                                 i2l3934 2A36  
                               i2l3688 27B0                                 i2l3928 2A1E  
                            ??_HighISR 0006               __end_of_color_click_init 28C6  
                               _RX4PPS 000E15                                 _TX4REG 000EE4  
                     __end_of___xxtofl 1534                    ??_Return_Anti_Moves 000D  
                               _LowISR 0018                          ??_Timer0_init 0009  
                         _CCPTMRS0bits 000FAD            AppendMoves@anti_moves_array 000B  
                Return_Time@time_array 000B                  Return_Time@time_index 0009  
                               ___wmul 2972                              ??___fldiv 001F  
                            ??___flmul 0038                              ??___fltol 009F  
                            ??___lwdiv 0013                                 clear_0 27F0  
                               clear_1 27FC                                 clear_2 2808  
                          ?_AntiYellow 002E                                 isa$std 000001  
                          ?_AppendTime 0009                          ??_Return_Time 000D  
            __end_of_Return_Anti_Moves 29DE                             _WhiteLight 2B0A  
                               tblptrh 000FF7                                 tblptrl 000FF6  
                               tblptru 000FF8                                 stop@mL 001C  
                               stop@mR 001E                      ??_initDCmotorsPWM 000B  
           i2color_writetoaddr@address 0004                       __end_of_turnLeft 1A72  
                         ___xxtofl@arg 0013                           ___xxtofl@exp 0012  
                         ___xxtofl@val 0009                          ??_Update_RGBC 0016  
                           __accesstop 0060                __end_of__initialization 280E  
             __end_of_color_read_Clear 26E2               __end_of_color_read_Green 2692  
               ?_I2C_2_Master_RepStart 0001                          ___rparam_used 000001  
                            ?_LED_init 0001                             ___fltol@f1 0049  
                     ?_color_read_Blue 000D                      _GreenInstructions 23BE  
                      _Interrupts_init 2A5E                         __pcstackCOMRAM 0001  
               ?_LightBlueInstructions 002C                           __pidataBANK0 2B12  
                   ?_GreenInstructions 0027                         AppendTime@temp 0009  
                    detect_color@color 00B3                    __end_of_Timer0_init 29FE  
                          MoveBuggy@mL 0037                            MoveBuggy@mR 0039  
                  OrangeInstructions@a 0032                    ??_GreenInstructions 002B  
              MoveBuggy@color_detected 0035                              ?_AntiPink 002E  
         ??_init_colorclick_interrupts 000D                    __end_of_Return_Time 2892  
                    __end_of_MoveBuggy 1380                             __pbssBANK0 0060  
                           __pbssBANK1 0100              __end_of_GreenInstructions 2444  
                           ??_LED_init 0009                                ?_LowISR 0001  
                    _color_writetoaddr 29FE                           _T2CLKCONbits 000FBF  
                         ?_turnLeft135 0027                    __end_of_Update_RGBC 25F2  
                   ?_color_writetoaddr 000B                                ?___wmul 0009  
             __end_of_PinkInstructions 222C                           ?_turnRight90 0022  
                  ??_color_writetoaddr 000C                              ?___xxtofl 0009  
                          ?_WhiteLight 0001                                _SP4BRGH 000EE6  
                              _SP4BRGL 000EE5                             ??_AntiPink 0032  
                              _SSP2ADD 000ED6                                _SSP2BUF 000ED5  
                           _color_flag 0055                           _detect_color 005C  
              __end_of_Interrupts_init 2A7C                      ?_BlueInstructions 0027  
               color_writetoaddr@value 000B                       ??_color_read_Red 000F  
                              _HighISR 0008              __end_of_color_writetoaddr 2A1E  
                   WhiteInstructions@a 0044                     WhiteInstructions@c 0041  
                   ??_BlueInstructions 002B                        _RedInstructions 2338  
                   _I2C_2_Master_Start 2AEC                    i2_I2C_2_Master_Idle 294A  
                   _I2C_2_Master_Write 2AC0                                __Hparam 0000  
                  i2_I2C_2_Master_Stop 2AF6                                __Lparam 0000  
                    color_read_Red@tmp 0012                            _Timer0_init 29DE  
                  GreenInstructions@mL 0027                    GreenInstructions@mR 0029  
           __end_of_fullSpeedBackwards 1B60                                ___fldiv 0AAC  
                              ___flmul 0682                                ___fltol 16A0  
                  ?_I2C_2_Master_Start 0001                           turnLeft135@a 002B  
                              ___lwdiv 2444                    ?_I2C_2_Master_Write 0001  
                         turnLeft90@mL 0022                           turnLeft90@mR 0024  
                              __pcinit 27D2                                __ramtop 0E00  
                            ?_turnLeft 001C                                __ptext0 0E46  
                              __ptext1 2090                                __ptext2 005C  
                              __ptext3 1380                                __ptext4 16A0  
                              __ptext5 0682                                __ptext6 0AAC  
                              __ptext7 2892                                __ptext8 28F8  
                              __ptext9 2B0A                   ?i2_I2C_2_Master_Idle 0001  
 __end_ofi2_init_colorclick_interrupts 27D2           i2_init_colorclick_interrupts 2782  
                            _T2CONbits 000FBD                            _Return_Time 285A  
                           ??___xxtofl 000D                   ?i2_I2C_2_Master_Stop 0001  
                            _T2HLTbits 000FBE                         main@lost_timer 00B9  
                        _RxBufWriteCnt 0054                           ?_AppendMoves 0009  
                              _tmr_ovf 0075                   ??_I2C_2_Master_Start 000A  
                 ??_I2C_2_Master_Write 000A                         __pintcode_body 2A1E  
                 end_of_initialization 280E            __end_ofi2_color_writetoaddr 2A5E  
         Return_Anti_Moves@moves_index 0009                      RedInstructions@mL 0027  
                   main@color_detected 00BC                      RedInstructions@mR 0029  
                              int_func 2A1E                            _Update_RGBC 2594  
                    ?_color_click_init 0001                           turnRight90@a 0026  
           __end_of_OrangeInstructions 22B2                     ??_color_click_init 000D  
                            AntiPink@a 0034                                postdec2 000FDD  
                              postinc0 000FEE                                postinc2 000FDE  
                           _time_array 013C                             _time_index 009E  
                         ??_AntiYellow 0032                        _initDCmotorsPWM 2090  
                           ??_turnLeft 0020                           ??_AppendTime 000F  
                   setMotorPWM@negDuty 001B                  ??i2_I2C_2_Master_Idle 0001  
                    __end_of_turnRight 1896                  ??i2_I2C_2_Master_Stop 0002  
                        ___xxtofl@sign 0011                    YellowInstructions@a 002D  
                            _TRISAbits 000F81                     setMotorPWM@posDuty 001A  
                            _TRISBbits 000F82                              _TRISCbits 000F83  
                            _TRISDbits 000F84     __end_of_init_colorclick_interrupts 2782  
        ?i2_init_colorclick_interrupts 0001             _init_colorclick_interrupts 2732  
                            _TRISEbits 000F85                              _TRISFbits 000F86  
                            _TRISGbits 000F87                              _TRISHbits 000F88  
                          ___fldiv@grs 002A                            ___fldiv@rem 0023  
                   PinkInstructions@mL 0027                     PinkInstructions@mR 0029  
                     fullSpeedAhead@mL 001C                       fullSpeedAhead@mR 001E  
              __end_of_RedInstructions 23BE               color_writetoaddr@address 000C  
              ??_I2C_2_Master_RepStart 000A                       ?_Interrupts_init 0001  
                          ___flmul@grs 003D                            _CCP1CONbits 000FAB  
                    ?_color_read_Clear 000D                           _EUSART4RXbuf 0060  
                         _EUSART4TXbuf 0100                            _CCP2CONbits 000FA7  
                    ?_color_read_Green 000D                     __end_of_AntiYellow 1DD0  
                          _CCP3CONbits 000F26                            _CCP4CONbits 000F22  
                   __end_of_AppendTime 28F8                ??_LightBlueInstructions 0030  
                           main@motorL 00C5                             main@motorR 00CE  
                   ??_color_read_Clear 000F                     ??_color_read_Green 000F  
                           _turnLeft90 1FE2                         __end_of_LowISR 0058  
               AppendMoves@moves_index 0009                         _fullSpeedAhead 1896  
                       __end_of___wmul 2998                        AppendMoves@temp 000E  
                   detect_color@dist_B 00B6                     detect_color@dist_G 00B5  
                   detect_color@dist_R 00B4                      _int_threshold_low 004F  
                  color_read_Clear@tmp 0012                    start_initialization 27D2  
                        _TxBufWriteCnt 0052                   OrangeInstructions@mL 002C  
                 OrangeInstructions@mR 002E                  Return_Anti_Moves@temp 000E  
                            _MoveBuggy 10FC                    color_read_Green@tmp 0012  
                             ??_LowISR 0006                __end_of_initDCmotorsPWM 2120  
               __end_of_fullSpeedAhead 1984                               ??___wmul 000D  
                          __pdataBANK0 00D7          i2I2C_2_Master_Write@data_byte 0002  
                    ?_PinkInstructions 0027                     Update_RGBC@tempval 0014  
                   ??_PinkInstructions 002B           __end_ofi2_I2C_2_Master_Start 2B0A  
         __end_ofi2_I2C_2_Master_Write 2AD8                              ___fldiv@a 001B  
                            ___fldiv@b 0017                              ___flmul@a 0034  
                            ___flmul@b 0030                            __pbssCOMRAM 004F  
                         ??_WhiteLight 0009                          __pcstackBANK0 009F  
                 AppendTime@time_array 000D                   AppendTime@time_index 000B  
                     ?_RedInstructions 0027                               ?_HighISR 0001  
                           ?_MoveBuggy 0035                       ___lwdiv@dividend 000F  
                         ?_Timer0_init 0001                            ?_turnLeft90 0022  
                      ?_fullSpeedAhead 001C                     BlueInstructions@mL 0027  
                   BlueInstructions@mR 0029                              __pintcode 0008  
                   __end_of_WhiteLight 2B12                               ?___fldiv 0017  
                             ?___flmul 0030                               ?___fltol 0049  
                             ?___lwdiv 000F                            __pintcodelo 0018  
         ?_interrupts_clear_colorclick 0001                   I2C_2_Master_Read@ack 000B  
                    _WhiteInstructions 1B60                   I2C_2_Master_Read@tmp 000C  
                        ?_turnRight135 0027                           ?_Return_Time 0009  
                    _I2C_2_Master_Idle 2922                     _fullSpeedBackwards 1A72  
                    _I2C_2_Master_Init 28F8                      _I2C_2_Master_Read 2818  
                   ?_WhiteInstructions 003B                      _I2C_2_Master_Stop 2AE2  
                         _RxBufReadCnt 0053                     GreenInstructions@a 002D  
                   ?_I2C_2_Master_Idle 0001                     ?_I2C_2_Master_Init 0001  
                   ?_I2C_2_Master_Read 0001                          ??_setMotorPWM 0018  
                   ?_I2C_2_Master_Stop 0001                       ___lwdiv@quotient 0013  
                          turnLeft90@a 0026               initDCmotorsPWM@PWMperiod 0009  
              LightBlueInstructions@mL 002C                LightBlueInstructions@mR 002E  
                  ?_fullSpeedBackwards 001C                    ??_WhiteInstructions 003F  
                  ??_I2C_2_Master_Idle 0009                    ??_I2C_2_Master_Init 0009  
                         ?_Update_RGBC 0014                    ??_I2C_2_Master_Read 000A  
                       ___wmul@product 000D                               _LATAbits 000F79  
                  ??_I2C_2_Master_Stop 000A                               _LATCbits 000F7B  
                             _LATDbits 000F7C                               _LATEbits 000F7D  
                             _LATFbits 000F7E                        Return_Time@temp 0010  
                             _LATGbits 000F7F                               _LATHbits 000F80  
                             _IPR0bits 000E1F                               _PIE0bits 000E29  
                             _LED_init 2AB0                       RedInstructions@a 002D  
                             _PIE4bits 000E2D                            turnRight@mL 001C  
                             i2u223_40 295A                               i2u223_41 2956  
                          turnRight@mR 001E                               i2u224_40 2970  
                             i2u224_41 296C                               i1u379_20 0036  
                             i1u379_21 0032                              _lost_flag 0074  
                             _PIR0bits 000E33                               i2u380_40 2A2E  
                             i2u380_41 2A2A                               _PIR4bits 000E37  
                             i2u478_47 2792                       ?_initDCmotorsPWM 0009  
                             _SSP2CON2 000EDA                               _SSP2STAT 000ED8  
                 ??_fullSpeedBackwards 0020              __end_of_WhiteInstructions 1C4A  
                   _OrangeInstructions 222C                      PinkInstructions@a 002D  
            __end_of_I2C_2_Master_Idle 294A              __end_of_I2C_2_Master_Init 2922  
            __end_of_I2C_2_Master_Read 285A                      ___wmul@multiplier 0009  
                       ??_turnRight135 002B              __end_of_I2C_2_Master_Stop 2AEC  
                         setMotorPWM@m 0016            I2C_2_Master_Write@data_byte 000A  
        ??_interrupts_clear_colorclick 000E             __end_of_YellowInstructions 21A6  
                    ??_color_read_Blue 000F                    ?_OrangeInstructions 002C  
                         _TxBufReadCnt 0051            ?_init_colorclick_interrupts 0001  
                             _AntiPink 1DD0               i2color_writetoaddr@value 0003  
                            _turnRight 17A8                    WhiteInstructions@mL 003B  
                  WhiteInstructions@mR 003D          __end_of_I2C_2_Master_RepStart 2AE2  
                   color_read_Blue@tmp 0012                    __end_of_setMotorPWM 16A0  
                          ??_MoveBuggy 003B                   i2_I2C_2_Master_Start 2B00  
                 i2_I2C_2_Master_Write 2ACC                           AntiYellow@mL 002E  
                         AntiYellow@mR 0030                               __Hrparam 0000  
                 ??_OrangeInstructions 0030                               __Lrparam 0000  
        __end_of_LightBlueInstructions 2338            __end_ofi2_I2C_2_Master_Idle 2972  
          __end_ofi2_I2C_2_Master_Stop 2B00                         turnRight135@mL 0027  
                       turnRight135@mR 0029                          turnLeft135@mL 0027  
                        turnLeft135@mR 0029                             _ANSELBbits 000E9A  
                           _ANSELDbits 000EA7                               ___xxtofl 1380  
                           _T0CON0bits 000FD5                             _T0CON1bits 000FD6  
                      ___lwdiv@divisor 0011                      BlueInstructions@a 002D  
                      ___lwdiv@counter 0015                             ?_turnRight 001C  
                             __ptext10 1B60                               __ptext11 285A  
                             __ptext20 2998                               __ptext12 29BC  
                             __ptext21 1D1E                               __ptext13 10FC  
                             __ptext30 1984                               __ptext22 2338  
                             __ptext14 2120                               __ptext31 1C4A  
                             __ptext23 1F34                               __ptext15 21A6  
                             __ptext40 26E2                               __ptext32 1A72  
                             __ptext24 17A8                               __ptext16 222C  
                             __ptext41 2AD8                               __ptext33 1534  
                             __ptext25 1DD0                               __ptext17 24B8  
                             __ptext50 2AE2                               __ptext42 2818  
                             __ptext34 2972                               __ptext26 1896  
                             __ptext18 22B2                               __ptext51 2AEC  
                             __ptext43 29DE                               __ptext35 2444  
                             __ptext27 23BE                               __ptext19 2526  
                             __ptext60 2AF6                               __ptext52 2922  
                             __ptext44 2AB0                               __ptext36 2594  
                             __ptext28 1E82                               __ptext61 2B00  
                             __ptext53 28C6                               __ptext45 2A5E  
                             __ptext37 25F2                               __ptext29 1FE2  
                             __ptext62 294A                               __ptext46 2A7C  
                             __ptext38 2642                               __ptext47 2732  
                             __ptext39 2692                               __ptext56 2A96  
                             __ptext48 29FE                               __ptext57 2782  
                             __ptext49 2AC0                               __ptext58 2A3E  
                             __ptext59 2ACC                           _SSP2CON1bits 000ED9  
                         _SSP2CON2bits 000EDA        ??i2_interrupts_clear_colorclick 0006  
               LightBlueInstructions@a 0032                             turnLeft@mL 001C  
                           turnLeft@mR 001E                  ?i2_I2C_2_Master_Start 0001  
                ?i2_I2C_2_Master_Write 0001                          ??_turnLeft135 002B  
                             isa$xinst 000000                             _RC4STAbits 000EE7  
                             int$flags 0057                          ??_turnRight90 0026  
                     _BlueInstructions 1E82                               _turnLeft 1984  
                           _INTCONbits 000FF2                            AntiYellow@a 0034  
                          _setMotorPWM 1534                          ?_detect_color 00A3  
                        turnRight135@a 002B                               intlevel1 0000  
                             intlevel2 0000                          turnRight90@mL 0022  
                        turnRight90@mR 0024                       ??_fullSpeedAhead 0020  
                 __end_of_turnRight135 2526                           ??_turnLeft90 0026  
                           AntiPink@mL 002E                             AntiPink@mR 0030  
                          _moves_index 0056                       _color_click_init 2892  
                  __end_of_turnLeft135 2594                             _SSP2DATPPS 000E1D  
                           _SSP2CLKPPS 000E1C                 detect_color@lost_timer 00A5  
                  __end_of_turnRight90 1FE2                          ??_AppendMoves 000D  
                       ??_detect_color 00A7                            ??_turnRight 0020  
                   __end_of_turnLeft90 2090                             _TX4STAbits 000EE8  
               ??i2_I2C_2_Master_Start 0002                 ??i2_I2C_2_Master_Write 0002  
                 YellowInstructions@mL 0027                   YellowInstructions@mR 0029  
__end_ofi2_interrupts_clear_colorclick 2AB0          i2_interrupts_clear_colorclick 2A96  
