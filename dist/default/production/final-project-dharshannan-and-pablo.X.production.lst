

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Mar 13 19:21:36 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    68                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    69                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    78                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    79                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    80                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    81                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    82   000000                     
    83                           ; Generated 06/04/2022 GMT
    84                           ; 
    85                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    86                           ; All rights reserved.
    87                           ; 
    88                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    89                           ; 
    90                           ; Redistribution and use in source and binary forms, with or without modification, are
    91                           ; permitted provided that the following conditions are met:
    92                           ; 
    93                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    94                           ;        conditions and the following disclaimer.
    95                           ; 
    96                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    97                           ;        of conditions and the following disclaimer in the documentation and/or other
    98                           ;        materials provided with the distribution. Publication is not required when
    99                           ;        this file is used in an embedded application.
   100                           ; 
   101                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   102                           ;        software without specific prior written permission.
   103                           ; 
   104                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   105                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   106                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   107                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   108                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   109                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   110                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   111                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   112                           ; 
   113                           ; 
   114                           ; Code-generator required, PIC18F67K40 Definitions
   115                           ; 
   116                           ; SFR Addresses
   117   000000                     
   118                           	psect	idataBANK0
   119   002ADA                     __pidataBANK0:
   120                           	callstack 0
   121                           
   122                           ;initializer for _int_threshold_high
   123   002ADA  0B54               	dw	2900
   124   000000                     _T0CON0bits	set	4053
   125   000000                     _T0CON1bits	set	4054
   126   000000                     _TX4REG	set	3812
   127   000000                     _RC4STAbits	set	3815
   128   000000                     _SP4BRGH	set	3814
   129   000000                     _TRISBbits	set	3970
   130   000000                     _TRISCbits	set	3971
   131   000000                     _TRISEbits	set	3973
   132   000000                     _LATEbits	set	3965
   133   000000                     _LATFbits	set	3966
   134   000000                     _LATGbits	set	3967
   135   000000                     _TRISFbits	set	3974
   136   000000                     _TRISGbits	set	3975
   137   000000                     _SSP2CON2bits	set	3802
   138   000000                     _RX4PPS	set	3605
   139   000000                     _SSP2CLKPPS	set	3612
   140   000000                     _SSP2DATPPS	set	3613
   141   000000                     _ANSELDbits	set	3751
   142   000000                     _SSP2ADD	set	3798
   143   000000                     _SSP2CON1bits	set	3801
   144   000000                     _RC4REG	set	3811
   145   000000                     _SP4BRGL	set	3813
   146   000000                     _TX4STAbits	set	3816
   147   000000                     _BAUD4CONbits	set	3817
   148   000000                     _LATAbits	set	3961
   149   000000                     _LATDbits	set	3964
   150   000000                     _LATHbits	set	3968
   151   000000                     _TRISAbits	set	3969
   152   000000                     _SSP2CON2	set	3802
   153   000000                     _TRISDbits	set	3972
   154   000000                     _CCPR4H	set	3873
   155   000000                     _CCPR3H	set	3877
   156   000000                     _SSP2STAT	set	3800
   157   000000                     _ANSELFbits	set	3764
   158   000000                     _SSP2BUF	set	3797
   159   000000                     _IPR0bits	set	3615
   160   000000                     _PIE0bits	set	3625
   161   000000                     _RC7PPS	set	3689
   162   000000                     _RD5PPS	set	3695
   163   000000                     _RE2PPS	set	3700
   164   000000                     _RD6PPS	set	3696
   165   000000                     _PORTFbits	set	3982
   166   000000                     _T2PR	set	4028
   167   000000                     _T2CONbits	set	4029
   168   000000                     _TRISHbits	set	3976
   169   000000                     _CCPR2H	set	4006
   170   000000                     _CCPR1H	set	4010
   171   000000                     _LATCbits	set	3963
   172   000000                     _RE4PPS	set	3702
   173   000000                     _RG6PPS	set	3720
   174   000000                     _ANSELBbits	set	3738
   175   000000                     _TMR0L	set	4051
   176   000000                     _TMR0H	set	4052
   177   000000                     _INTCONbits	set	4082
   178   000000                     _T2CLKCONbits	set	4031
   179   000000                     _T2HLTbits	set	4030
   180   000000                     _CCP1CONbits	set	4011
   181   000000                     _CCPTMRS0bits	set	4013
   182   000000                     _CCP2CONbits	set	4007
   183   000000                     _CCP3CONbits	set	3878
   184   000000                     _CCP4CONbits	set	3874
   185   000000                     _PIE4bits	set	3629
   186   000000                     _PIR0bits	set	3635
   187   000000                     _PIR4bits	set	3639
   188   000000                     _RC0PPS	set	3682
   189                           
   190                           ; #config settings
   191                           
   192                           	psect	cinit
   193   002790                     __pcinit:
   194                           	callstack 0
   195   002790                     start_initialization:
   196                           	callstack 0
   197   002790                     __initialization:
   198                           	callstack 0
   199                           
   200                           ; Initialize objects allocated to BANK0 (2 bytes)
   201                           ; load TBLPTR registers with __pidataBANK0
   202   002790  0EDA               	movlw	low __pidataBANK0
   203   002792  6EF6               	movwf	tblptrl,c
   204   002794  0E2A               	movlw	high __pidataBANK0
   205   002796  6EF7               	movwf	tblptrh,c
   206   002798  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   207   00279A  6EF8               	movwf	tblptru,c
   208   00279C  0009               	tblrd		*+	;fetch initializer
   209   00279E  CFF5 F0D7          	movff	tablat,__pdataBANK0
   210   0027A2  0009               	tblrd		*+	;fetch initializer
   211   0027A4  CFF5 F0D8          	movff	tablat,__pdataBANK0+1
   212                           
   213                           ; Clear objects allocated to BANK1 (140 bytes)
   214   0027A8  EE01  F000         	lfsr	0,__pbssBANK1
   215   0027AC  0E8C               	movlw	140
   216   0027AE                     clear_0:
   217   0027AE  6AEE               	clrf	postinc0,c
   218   0027B0  06E8               	decf	wreg,f,c
   219   0027B2  E1FD               	bnz	clear_0
   220                           
   221                           ; Clear objects allocated to BANK0 (63 bytes)
   222   0027B4  EE00  F060         	lfsr	0,__pbssBANK0
   223   0027B8  0E3F               	movlw	63
   224   0027BA                     clear_1:
   225   0027BA  6AEE               	clrf	postinc0,c
   226   0027BC  06E8               	decf	wreg,f,c
   227   0027BE  E1FD               	bnz	clear_1
   228                           
   229                           ; Clear objects allocated to COMRAM (8 bytes)
   230   0027C0  EE00  F04F         	lfsr	0,__pbssCOMRAM
   231   0027C4  0E08               	movlw	8
   232   0027C6                     clear_2:
   233   0027C6  6AEE               	clrf	postinc0,c
   234   0027C8  06E8               	decf	wreg,f,c
   235   0027CA  E1FD               	bnz	clear_2
   236   0027CC                     end_of_initialization:
   237                           	callstack 0
   238   0027CC                     __end_of__initialization:
   239                           	callstack 0
   240   0027CC  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   241   0027CE  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   242   0027D0  0100               	movlb	0
   243   0027D2  EF62  F008         	goto	_main	;jump to C main() function
   244                           
   245                           	psect	bssCOMRAM
   246   00004F                     __pbssCOMRAM:
   247                           	callstack 0
   248   00004F                     _int_threshold_low:
   249                           	callstack 0
   250   00004F                     	ds	2
   251   000051                     _TxBufReadCnt:
   252                           	callstack 0
   253   000051                     	ds	1
   254   000052                     _TxBufWriteCnt:
   255                           	callstack 0
   256   000052                     	ds	1
   257   000053                     _RxBufReadCnt:
   258                           	callstack 0
   259   000053                     	ds	1
   260   000054                     _RxBufWriteCnt:
   261                           	callstack 0
   262   000054                     	ds	1
   263   000055                     _color_flag:
   264                           	callstack 0
   265   000055                     	ds	1
   266   000056                     _moves_index:
   267                           	callstack 0
   268   000056                     	ds	1
   269                           
   270                           	psect	bssBANK0
   271   000060                     __pbssBANK0:
   272                           	callstack 0
   273   000060                     _EUSART4RXbuf:
   274                           	callstack 0
   275   000060                     	ds	20
   276   000074                     _lost_flag:
   277                           	callstack 0
   278   000074                     	ds	1
   279   000075                     _tmr_ovf:
   280                           	callstack 0
   281   000075                     	ds	1
   282   000076                     _anti_moves_array:
   283                           	callstack 0
   284   000076                     	ds	40
   285   00009E                     _time_index:
   286                           	callstack 0
   287   00009E                     	ds	1
   288                           
   289                           	psect	dataBANK0
   290   0000D7                     __pdataBANK0:
   291                           	callstack 0
   292   0000D7                     _int_threshold_high:
   293                           	callstack 0
   294   0000D7                     	ds	2
   295                           
   296                           	psect	bssBANK1
   297   000100                     __pbssBANK1:
   298                           	callstack 0
   299   000100                     _EUSART4TXbuf:
   300                           	callstack 0
   301   000100                     	ds	60
   302   00013C                     _time_array:
   303                           	callstack 0
   304   00013C                     	ds	80
   305                           
   306                           	psect	cstackBANK0
   307   00009F                     __pcstackBANK0:
   308                           	callstack 0
   309   00009F                     ??___fltol:
   310                           
   311                           ; 1 bytes @ 0x0
   312   00009F                     	ds	4
   313   0000A3                     detect_color@tempval:
   314                           	callstack 0
   315                           
   316                           ; 2 bytes @ 0x4
   317   0000A3                     	ds	2
   318   0000A5                     detect_color@lost_timer:
   319                           	callstack 0
   320                           
   321                           ; 2 bytes @ 0x6
   322   0000A5                     	ds	2
   323   0000A7                     ??_detect_color:
   324                           
   325                           ; 1 bytes @ 0x8
   326   0000A7                     	ds	12
   327   0000B3                     detect_color@color:
   328                           	callstack 0
   329                           
   330                           ; 1 bytes @ 0x14
   331   0000B3                     	ds	1
   332   0000B4                     detect_color@dist_R:
   333                           	callstack 0
   334                           
   335                           ; 1 bytes @ 0x15
   336   0000B4                     	ds	1
   337   0000B5                     detect_color@dist_G:
   338                           	callstack 0
   339                           
   340                           ; 1 bytes @ 0x16
   341   0000B5                     	ds	1
   342   0000B6                     detect_color@dist_B:
   343                           	callstack 0
   344                           
   345                           ; 1 bytes @ 0x17
   346   0000B6                     	ds	1
   347   0000B7                     ??_main:
   348                           
   349                           ; 1 bytes @ 0x18
   350   0000B7                     	ds	2
   351   0000B9                     main@lost_timer:
   352                           	callstack 0
   353                           
   354                           ; 1 bytes @ 0x1A
   355   0000B9                     	ds	1
   356   0000BA                     main@b:
   357                           	callstack 0
   358                           
   359                           ; 2 bytes @ 0x1B
   360   0000BA                     	ds	2
   361   0000BC                     main@color_detected:
   362                           	callstack 0
   363                           
   364                           ; 1 bytes @ 0x1D
   365   0000BC                     	ds	1
   366   0000BD                     main@initial_color:
   367                           	callstack 0
   368                           
   369                           ; 8 bytes @ 0x1E
   370   0000BD                     	ds	8
   371   0000C5                     main@motorL:
   372                           	callstack 0
   373                           
   374                           ; 9 bytes @ 0x26
   375   0000C5                     	ds	9
   376   0000CE                     main@motorR:
   377                           	callstack 0
   378                           
   379                           ; 9 bytes @ 0x2F
   380   0000CE                     	ds	9
   381                           
   382                           	psect	cstackCOMRAM
   383   000001                     __pcstackCOMRAM:
   384                           	callstack 0
   385   000001                     ??i2_I2C_2_Master_Idle:
   386   000001                     
   387                           ; 1 bytes @ 0x0
   388   000001                     	ds	1
   389   000002                     i2I2C_2_Master_Write@data_byte:
   390                           	callstack 0
   391                           
   392                           ; 1 bytes @ 0x1
   393   000002                     	ds	1
   394   000003                     i2color_writetoaddr@value:
   395                           	callstack 0
   396                           
   397                           ; 1 bytes @ 0x2
   398   000003                     	ds	1
   399   000004                     i2color_writetoaddr@address:
   400                           	callstack 0
   401                           
   402                           ; 1 bytes @ 0x3
   403   000004                     	ds	1
   404   000005                     ??i2_init_colorclick_interrupts:
   405                           
   406                           ; 1 bytes @ 0x4
   407   000005                     	ds	1
   408   000006                     ??_LowISR:
   409   000006                     
   410                           ; 1 bytes @ 0x5
   411   000006                     	ds	3
   412   000009                     ??_I2C_2_Master_Idle:
   413   000009                     ?_Return_Time:
   414                           	callstack 0
   415   000009                     ?___wmul:
   416                           	callstack 0
   417   000009                     ?___xxtofl:
   418                           	callstack 0
   419   000009                     initDCmotorsPWM@PWMperiod:
   420                           	callstack 0
   421   000009                     AppendMoves@moves_index:
   422                           	callstack 0
   423   000009                     AppendTime@temp:
   424                           	callstack 0
   425   000009                     Return_Anti_Moves@moves_index:
   426                           	callstack 0
   427   000009                     Return_Time@time_index:
   428                           	callstack 0
   429   000009                     ___wmul@multiplier:
   430                           	callstack 0
   431   000009                     ___xxtofl@val:
   432                           	callstack 0
   433                           
   434                           ; 4 bytes @ 0x8
   435   000009                     	ds	1
   436   00000A                     ??_I2C_2_Master_Read:
   437   00000A                     I2C_2_Master_Write@data_byte:
   438                           	callstack 0
   439                           
   440                           ; 1 bytes @ 0x9
   441   00000A                     	ds	1
   442   00000B                     color_writetoaddr@value:
   443                           	callstack 0
   444   00000B                     I2C_2_Master_Read@ack:
   445                           	callstack 0
   446   00000B                     AppendMoves@anti_moves_array:
   447                           	callstack 0
   448   00000B                     AppendTime@time_index:
   449                           	callstack 0
   450   00000B                     Return_Anti_Moves@anti_moves_array:
   451                           	callstack 0
   452   00000B                     Return_Time@time_array:
   453                           	callstack 0
   454   00000B                     ___wmul@multiplicand:
   455                           	callstack 0
   456                           
   457                           ; 2 bytes @ 0xA
   458   00000B                     	ds	1
   459   00000C                     color_writetoaddr@address:
   460                           	callstack 0
   461   00000C                     I2C_2_Master_Read@tmp:
   462                           	callstack 0
   463                           
   464                           ; 1 bytes @ 0xB
   465   00000C                     	ds	1
   466   00000D                     ??_Return_Time:
   467   00000D                     ??_Return_Anti_Moves:
   468   00000D                     ??_AppendMoves:
   469   00000D                     ??_color_click_init:
   470   00000D                     ??_init_colorclick_interrupts:
   471   00000D                     ??___xxtofl:
   472   00000D                     ?_color_read_Red:
   473                           	callstack 0
   474   00000D                     ?_color_read_Green:
   475                           	callstack 0
   476   00000D                     ?_color_read_Blue:
   477                           	callstack 0
   478   00000D                     ?_color_read_Clear:
   479                           	callstack 0
   480   00000D                     AppendTime@time_array:
   481                           	callstack 0
   482   00000D                     ___wmul@product:
   483                           	callstack 0
   484                           
   485                           ; 2 bytes @ 0xC
   486   00000D                     	ds	1
   487   00000E                     AppendMoves@temp:
   488                           	callstack 0
   489   00000E                     Return_Anti_Moves@temp:
   490                           	callstack 0
   491                           
   492                           ; 1 bytes @ 0xD
   493   00000E                     	ds	1
   494   00000F                     ??_AppendTime:
   495   00000F                     ??_color_read_Red:
   496   00000F                     ??_color_read_Green:
   497   00000F                     ??_color_read_Blue:
   498   00000F                     ??_color_read_Clear:
   499   00000F                     ?___lwdiv:
   500                           	callstack 0
   501   00000F                     ___lwdiv@dividend:
   502                           	callstack 0
   503                           
   504                           ; 2 bytes @ 0xE
   505   00000F                     	ds	1
   506   000010                     Return_Time@temp:
   507                           	callstack 0
   508                           
   509                           ; 2 bytes @ 0xF
   510   000010                     	ds	1
   511   000011                     ___xxtofl@sign:
   512                           	callstack 0
   513   000011                     ___lwdiv@divisor:
   514                           	callstack 0
   515                           
   516                           ; 2 bytes @ 0x10
   517   000011                     	ds	1
   518   000012                     ___xxtofl@exp:
   519                           	callstack 0
   520   000012                     color_read_Red@tmp:
   521                           	callstack 0
   522   000012                     color_read_Green@tmp:
   523                           	callstack 0
   524   000012                     color_read_Blue@tmp:
   525                           	callstack 0
   526   000012                     color_read_Clear@tmp:
   527                           	callstack 0
   528                           
   529                           ; 2 bytes @ 0x11
   530   000012                     	ds	1
   531   000013                     ___lwdiv@quotient:
   532                           	callstack 0
   533   000013                     ___xxtofl@arg:
   534                           	callstack 0
   535                           
   536                           ; 4 bytes @ 0x12
   537   000013                     	ds	1
   538   000014                     Update_RGBC@tempval:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0x13
   542   000014                     	ds	1
   543   000015                     ___lwdiv@counter:
   544                           	callstack 0
   545                           
   546                           ; 1 bytes @ 0x14
   547   000015                     	ds	1
   548   000016                     setMotorPWM@m:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0x15
   552   000016                     	ds	1
   553   000017                     ?___fldiv:
   554                           	callstack 0
   555   000017                     ___fldiv@b:
   556                           	callstack 0
   557                           
   558                           ; 4 bytes @ 0x16
   559   000017                     	ds	1
   560   000018                     ??_setMotorPWM:
   561                           
   562                           ; 1 bytes @ 0x17
   563   000018                     	ds	2
   564   00001A                     setMotorPWM@posDuty:
   565                           	callstack 0
   566                           
   567                           ; 1 bytes @ 0x19
   568   00001A                     	ds	1
   569   00001B                     setMotorPWM@negDuty:
   570                           	callstack 0
   571   00001B                     ___fldiv@a:
   572                           	callstack 0
   573                           
   574                           ; 4 bytes @ 0x1A
   575   00001B                     	ds	1
   576   00001C                     stop@mL:
   577                           	callstack 0
   578   00001C                     turnLeft@mL:
   579                           	callstack 0
   580   00001C                     turnRight@mL:
   581                           	callstack 0
   582   00001C                     fullSpeedAhead@mL:
   583                           	callstack 0
   584   00001C                     fullSpeedBackwards@mL:
   585                           	callstack 0
   586                           
   587                           ; 2 bytes @ 0x1B
   588   00001C                     	ds	2
   589   00001E                     stop@mR:
   590                           	callstack 0
   591   00001E                     turnLeft@mR:
   592                           	callstack 0
   593   00001E                     turnRight@mR:
   594                           	callstack 0
   595   00001E                     fullSpeedAhead@mR:
   596                           	callstack 0
   597   00001E                     fullSpeedBackwards@mR:
   598                           	callstack 0
   599                           
   600                           ; 2 bytes @ 0x1D
   601   00001E                     	ds	1
   602   00001F                     ??___fldiv:
   603                           
   604                           ; 1 bytes @ 0x1E
   605   00001F                     	ds	1
   606   000020                     ??_stop:
   607   000020                     ??_turnLeft:
   608   000020                     ??_turnRight:
   609   000020                     ??_fullSpeedAhead:
   610   000020                     ??_fullSpeedBackwards:
   611                           
   612                           ; 1 bytes @ 0x1F
   613   000020                     	ds	2
   614   000022                     turnLeft90@mL:
   615                           	callstack 0
   616   000022                     turnRight90@mL:
   617                           	callstack 0
   618                           
   619                           ; 2 bytes @ 0x21
   620   000022                     	ds	1
   621   000023                     ___fldiv@rem:
   622                           	callstack 0
   623                           
   624                           ; 4 bytes @ 0x22
   625   000023                     	ds	1
   626   000024                     turnLeft90@mR:
   627                           	callstack 0
   628   000024                     turnRight90@mR:
   629                           	callstack 0
   630                           
   631                           ; 2 bytes @ 0x23
   632   000024                     	ds	2
   633   000026                     turnLeft90@a:
   634                           	callstack 0
   635   000026                     turnRight90@a:
   636                           	callstack 0
   637                           
   638                           ; 1 bytes @ 0x25
   639   000026                     	ds	1
   640   000027                     ___fldiv@sign:
   641                           	callstack 0
   642   000027                     turnRight135@mL:
   643                           	callstack 0
   644   000027                     turnLeft135@mL:
   645                           	callstack 0
   646   000027                     RedInstructions@mL:
   647                           	callstack 0
   648   000027                     GreenInstructions@mL:
   649                           	callstack 0
   650   000027                     BlueInstructions@mL:
   651                           	callstack 0
   652   000027                     YellowInstructions@mL:
   653                           	callstack 0
   654   000027                     PinkInstructions@mL:
   655                           	callstack 0
   656                           
   657                           ; 2 bytes @ 0x26
   658   000027                     	ds	1
   659   000028                     ___fldiv@new_exp:
   660                           	callstack 0
   661                           
   662                           ; 2 bytes @ 0x27
   663   000028                     	ds	1
   664   000029                     turnRight135@mR:
   665                           	callstack 0
   666   000029                     turnLeft135@mR:
   667                           	callstack 0
   668   000029                     RedInstructions@mR:
   669                           	callstack 0
   670   000029                     GreenInstructions@mR:
   671                           	callstack 0
   672   000029                     BlueInstructions@mR:
   673                           	callstack 0
   674   000029                     YellowInstructions@mR:
   675                           	callstack 0
   676   000029                     PinkInstructions@mR:
   677                           	callstack 0
   678                           
   679                           ; 2 bytes @ 0x28
   680   000029                     	ds	1
   681   00002A                     ___fldiv@grs:
   682                           	callstack 0
   683                           
   684                           ; 4 bytes @ 0x29
   685   00002A                     	ds	1
   686   00002B                     ??_RedInstructions:
   687   00002B                     ??_GreenInstructions:
   688   00002B                     ??_BlueInstructions:
   689   00002B                     ??_YellowInstructions:
   690   00002B                     ??_PinkInstructions:
   691   00002B                     turnRight135@a:
   692                           	callstack 0
   693   00002B                     turnLeft135@a:
   694                           	callstack 0
   695                           
   696                           ; 1 bytes @ 0x2A
   697   00002B                     	ds	1
   698   00002C                     OrangeInstructions@mL:
   699                           	callstack 0
   700   00002C                     LightBlueInstructions@mL:
   701                           	callstack 0
   702                           
   703                           ; 2 bytes @ 0x2B
   704   00002C                     	ds	1
   705   00002D                     RedInstructions@a:
   706                           	callstack 0
   707   00002D                     GreenInstructions@a:
   708                           	callstack 0
   709   00002D                     BlueInstructions@a:
   710                           	callstack 0
   711   00002D                     YellowInstructions@a:
   712                           	callstack 0
   713   00002D                     PinkInstructions@a:
   714                           	callstack 0
   715                           
   716                           ; 1 bytes @ 0x2C
   717   00002D                     	ds	1
   718   00002E                     ___fldiv@bexp:
   719                           	callstack 0
   720   00002E                     OrangeInstructions@mR:
   721                           	callstack 0
   722   00002E                     LightBlueInstructions@mR:
   723                           	callstack 0
   724   00002E                     AntiYellow@mL:
   725                           	callstack 0
   726   00002E                     AntiPink@mL:
   727                           	callstack 0
   728                           
   729                           ; 2 bytes @ 0x2D
   730   00002E                     	ds	1
   731   00002F                     ___fldiv@aexp:
   732                           	callstack 0
   733                           
   734                           ; 1 bytes @ 0x2E
   735   00002F                     	ds	1
   736   000030                     ??_OrangeInstructions:
   737   000030                     ??_LightBlueInstructions:
   738   000030                     ?___flmul:
   739                           	callstack 0
   740   000030                     AntiYellow@mR:
   741                           	callstack 0
   742   000030                     AntiPink@mR:
   743                           	callstack 0
   744   000030                     ___flmul@b:
   745                           	callstack 0
   746                           
   747                           ; 4 bytes @ 0x2F
   748   000030                     	ds	2
   749   000032                     ??_AntiYellow:
   750   000032                     ??_AntiPink:
   751   000032                     OrangeInstructions@a:
   752                           	callstack 0
   753   000032                     LightBlueInstructions@a:
   754                           	callstack 0
   755                           
   756                           ; 1 bytes @ 0x31
   757   000032                     	ds	2
   758   000034                     AntiYellow@a:
   759                           	callstack 0
   760   000034                     AntiPink@a:
   761                           	callstack 0
   762   000034                     ___flmul@a:
   763                           	callstack 0
   764                           
   765                           ; 4 bytes @ 0x33
   766   000034                     	ds	1
   767   000035                     MoveBuggy@color_detected:
   768                           	callstack 0
   769                           
   770                           ; 2 bytes @ 0x34
   771   000035                     	ds	2
   772   000037                     MoveBuggy@mL:
   773                           	callstack 0
   774                           
   775                           ; 2 bytes @ 0x36
   776   000037                     	ds	1
   777   000038                     ??___flmul:
   778                           
   779                           ; 1 bytes @ 0x37
   780   000038                     	ds	1
   781   000039                     MoveBuggy@mR:
   782                           	callstack 0
   783                           
   784                           ; 2 bytes @ 0x38
   785   000039                     	ds	2
   786   00003B                     WhiteInstructions@mL:
   787                           	callstack 0
   788                           
   789                           ; 2 bytes @ 0x3A
   790   00003B                     	ds	1
   791   00003C                     ___flmul@sign:
   792                           	callstack 0
   793                           
   794                           ; 1 bytes @ 0x3B
   795   00003C                     	ds	1
   796   00003D                     WhiteInstructions@mR:
   797                           	callstack 0
   798   00003D                     ___flmul@grs:
   799                           	callstack 0
   800                           
   801                           ; 4 bytes @ 0x3C
   802   00003D                     	ds	2
   803   00003F                     ??_WhiteInstructions:
   804                           
   805                           ; 1 bytes @ 0x3E
   806   00003F                     	ds	2
   807   000041                     ___flmul@aexp:
   808                           	callstack 0
   809   000041                     WhiteInstructions@c:
   810                           	callstack 0
   811                           
   812                           ; 2 bytes @ 0x40
   813   000041                     	ds	1
   814   000042                     ___flmul@bexp:
   815                           	callstack 0
   816                           
   817                           ; 1 bytes @ 0x41
   818   000042                     	ds	1
   819   000043                     WhiteInstructions@anticolor:
   820                           	callstack 0
   821   000043                     ___flmul@prod:
   822                           	callstack 0
   823                           
   824                           ; 4 bytes @ 0x42
   825   000043                     	ds	1
   826   000044                     WhiteInstructions@a:
   827                           	callstack 0
   828                           
   829                           ; 2 bytes @ 0x43
   830   000044                     	ds	3
   831   000047                     ___flmul@temp:
   832                           	callstack 0
   833                           
   834                           ; 2 bytes @ 0x46
   835   000047                     	ds	2
   836   000049                     ?___fltol:
   837                           	callstack 0
   838   000049                     ___fltol@f1:
   839                           	callstack 0
   840                           
   841                           ; 4 bytes @ 0x48
   842   000049                     	ds	4
   843   00004D                     ___fltol@sign1:
   844                           	callstack 0
   845                           
   846                           ; 1 bytes @ 0x4C
   847   00004D                     	ds	1
   848   00004E                     ___fltol@exp1:
   849                           	callstack 0
   850                           
   851                           ; 1 bytes @ 0x4D
   852   00004E                     	ds	1
   853                           
   854 ;;
   855 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   856 ;;
   857 ;; *************** function _main *****************
   858 ;; Defined at:
   859 ;;		line 22 in file "main_motor.c"
   860 ;; Parameters:    Size  Location     Type
   861 ;;		None
   862 ;; Auto vars:     Size  Location     Type
   863 ;;  b               2   27[BANK0 ] unsigned int 
   864 ;;  motorR          9   47[BANK0 ] struct DC_motor
   865 ;;  motorL          9   38[BANK0 ] struct DC_motor
   866 ;;  initial_colo    8   30[BANK0 ] struct RGB_val
   867 ;;  color_detect    1   29[BANK0 ] unsigned char 
   868 ;;  lost_timer      1   26[BANK0 ] unsigned char 
   869 ;; Return value:  Size  Location     Type
   870 ;;                  1    wreg      void 
   871 ;; Registers used:
   872 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   873 ;; Tracked objects:
   874 ;;		On entry : 0/0
   875 ;;		On exit  : 0/0
   876 ;;		Unchanged: 0/0
   877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   879 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   880 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   881 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   882 ;;Total ram usage:       32 bytes
   883 ;; Hardware stack levels required when called: 15
   884 ;; This function calls:
   885 ;;		_AppendTime
   886 ;;		_Interrupts_init
   887 ;;		_LED_init
   888 ;;		_MoveBuggy
   889 ;;		_Timer0_init
   890 ;;		_Update_RGBC
   891 ;;		_WhiteInstructions
   892 ;;		_WhiteLight
   893 ;;		_color_click_init
   894 ;;		_detect_color
   895 ;;		_fullSpeedAhead
   896 ;;		_initDCmotorsPWM
   897 ;;		_stop
   898 ;; This function is called by:
   899 ;;		Startup code after reset
   900 ;; This function uses a non-reentrant model
   901 ;;
   902                           
   903                           	psect	text0
   904   0010C4                     __ptext0:
   905                           	callstack 0
   906   0010C4                     _main:
   907                           	callstack 16
   908   0010C4                     
   909                           ;main_motor.c: 25:     RGB_val initial_color;;main_motor.c: 26:     initial_color.R = 0;
   910   0010C4  0E00               	movlw	0
   911   0010C6  0100               	movlb	0	; () banked
   912   0010C8  6FBE               	movwf	(main@initial_color+1)& (0+255),b
   913   0010CA  0E00               	movlw	0
   914   0010CC  6FBD               	movwf	main@initial_color& (0+255),b
   915                           
   916                           ;main_motor.c: 27:     initial_color.G = 0;
   917   0010CE  0E00               	movlw	0
   918   0010D0  6FC0               	movwf	(main@initial_color+3)& (0+255),b
   919   0010D2  0E00               	movlw	0
   920   0010D4  6FBF               	movwf	(main@initial_color+2)& (0+255),b
   921                           
   922                           ;main_motor.c: 28:     initial_color.B = 0;
   923   0010D6  0E00               	movlw	0
   924   0010D8  6FC2               	movwf	(main@initial_color+5)& (0+255),b
   925   0010DA  0E00               	movlw	0
   926   0010DC  6FC1               	movwf	(main@initial_color+4)& (0+255),b
   927                           
   928                           ;main_motor.c: 29:     initial_color.C = 0;
   929   0010DE  0E00               	movlw	0
   930   0010E0  6FC4               	movwf	(main@initial_color+7)& (0+255),b
   931   0010E2  0E00               	movlw	0
   932   0010E4  6FC3               	movwf	(main@initial_color+6)& (0+255),b
   933   0010E6                     
   934                           ; BSR set to: 0
   935                           ;main_motor.c: 31:     LED_init();
   936   0010E6  EC1D  F015         	call	_LED_init	;wreg free
   937   0010EA                     
   938                           ;main_motor.c: 32:     color_click_init();
   939   0010EA  EC28  F014         	call	_color_click_init	;wreg free
   940   0010EE                     
   941                           ;main_motor.c: 33:     Interrupts_init();
   942   0010EE  EC0E  F015         	call	_Interrupts_init	;wreg free
   943                           
   944                           ;main_motor.c: 35:     Timer0_init();
   945   0010F2  ECCE  F014         	call	_Timer0_init	;wreg free
   946                           
   947                           ;main_motor.c: 38:     initDCmotorsPWM(99);
   948   0010F6  0E00               	movlw	0
   949   0010F8  6E0A               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   950   0010FA  0E63               	movlw	99
   951   0010FC  6E09               	movwf	initDCmotorsPWM@PWMperiod^0,c
   952   0010FE  EC27  F010         	call	_initDCmotorsPWM	;wreg free
   953   001102                     
   954                           ;main_motor.c: 40:     struct DC_motor motorL, motorR;;main_motor.c: 42:     motorL.powe
      +                          r=0;
   955   001102  0E00               	movlw	0
   956   001104  0100               	movlb	0	; () banked
   957   001106  6FC5               	movwf	main@motorL& (0+255),b
   958   001108                     
   959                           ; BSR set to: 0
   960                           ;main_motor.c: 43:     motorL.direction=1;
   961   001108  0E01               	movlw	1
   962   00110A  6FC6               	movwf	(main@motorL+1)& (0+255),b
   963   00110C                     
   964                           ; BSR set to: 0
   965                           ;main_motor.c: 44:     motorL.brakemode=1;
   966   00110C  0E01               	movlw	1
   967   00110E  6FC7               	movwf	(main@motorL+2)& (0+255),b
   968   001110                     
   969                           ; BSR set to: 0
   970                           ;main_motor.c: 45:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
   971   001110  0EAA               	movlw	170
   972   001112  6FCA               	movwf	(main@motorL+5)& (0+255),b
   973   001114  0E0F               	movlw	15
   974   001116  6FCB               	movwf	(main@motorL+6)& (0+255),b
   975   001118                     
   976                           ; BSR set to: 0
   977                           ;main_motor.c: 46:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
   978   001118  0EA6               	movlw	166
   979   00111A  6FCC               	movwf	(main@motorL+7)& (0+255),b
   980   00111C  0E0F               	movlw	15
   981   00111E  6FCD               	movwf	(main@motorL+8)& (0+255),b
   982   001120                     
   983                           ; BSR set to: 0
   984                           ;main_motor.c: 47:     motorL.PWMperiod= T2PR;
   985   001120  CFBC F0C8          	movff	4028,main@motorL+3	;volatile
   986   001124  6BC9               	clrf	(main@motorL+4)& (0+255),b
   987   001126                     
   988                           ; BSR set to: 0
   989                           ;main_motor.c: 49:     motorR.power=0;
   990   001126  0E00               	movlw	0
   991   001128  6FCE               	movwf	main@motorR& (0+255),b
   992   00112A                     
   993                           ; BSR set to: 0
   994                           ;main_motor.c: 50:     motorR.direction=1;
   995   00112A  0E01               	movlw	1
   996   00112C  6FCF               	movwf	(main@motorR+1)& (0+255),b
   997   00112E                     
   998                           ; BSR set to: 0
   999                           ;main_motor.c: 51:     motorR.brakemode=1;
  1000   00112E  0E01               	movlw	1
  1001   001130  6FD0               	movwf	(main@motorR+2)& (0+255),b
  1002   001132                     
  1003                           ; BSR set to: 0
  1004                           ;main_motor.c: 52:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1005   001132  0E25               	movlw	37
  1006   001134  6FD3               	movwf	(main@motorR+5)& (0+255),b
  1007   001136  0E0F               	movlw	15
  1008   001138  6FD4               	movwf	(main@motorR+6)& (0+255),b
  1009   00113A                     
  1010                           ; BSR set to: 0
  1011                           ;main_motor.c: 53:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1012   00113A  0E21               	movlw	33
  1013   00113C  6FD5               	movwf	(main@motorR+7)& (0+255),b
  1014   00113E  0E0F               	movlw	15
  1015   001140  6FD6               	movwf	(main@motorR+8)& (0+255),b
  1016   001142                     
  1017                           ; BSR set to: 0
  1018                           ;main_motor.c: 54:     motorR.PWMperiod= T2PR;
  1019   001142  CFBC F0D1          	movff	4028,main@motorR+3	;volatile
  1020   001146  6BD2               	clrf	(main@motorR+4)& (0+255),b
  1021   001148                     
  1022                           ; BSR set to: 0
  1023                           ;main_motor.c: 57:     unsigned char color_detected = 0;
  1024   001148  0E00               	movlw	0
  1025   00114A  6FBC               	movwf	main@color_detected& (0+255),b
  1026   00114C                     
  1027                           ; BSR set to: 0
  1028                           ;main_motor.c: 58:     unsigned char lost_timer = 0;
  1029   00114C  0E00               	movlw	0
  1030   00114E  6FB9               	movwf	main@lost_timer& (0+255),b
  1031   001150                     l510:
  1032   001150  B48E               	btfsc	142,2,c	;volatile
  1033   001152  EFAD  F008         	goto	u4471
  1034   001156  EFAF  F008         	goto	u4470
  1035   00115A                     u4471:
  1036   00115A  EFA8  F008         	goto	l510
  1037   00115E                     u4470:
  1038   00115E                     
  1039                           ;main_motor.c: 62:     WhiteLight();
  1040   00115E  EC69  F015         	call	_WhiteLight	;wreg free
  1041   001162                     l4270:
  1042                           
  1043                           ;main_motor.c: 67:         unsigned int b = 0;
  1044   001162  0E00               	movlw	0
  1045   001164  0100               	movlb	0	; () banked
  1046   001166  6FBB               	movwf	(main@b+1)& (0+255),b
  1047   001168  0E00               	movlw	0
  1048   00116A  6FBA               	movwf	main@b& (0+255),b
  1049                           
  1050                           ;main_motor.c: 68:         while(color_detected == 0){
  1051   00116C  EFDA  F008         	goto	l4280
  1052   001170                     l4272:
  1053                           
  1054                           ; BSR set to: 0
  1055                           ;main_motor.c: 69:             fullSpeedAhead(&motorL,&motorR);
  1056   001170  0EC5               	movlw	low main@motorL
  1057   001172  6E1C               	movwf	fullSpeedAhead@mL^0,c
  1058   001174  0E00               	movlw	high main@motorL
  1059   001176  6E1D               	movwf	(fullSpeedAhead@mL+1)^0,c
  1060   001178  0ECE               	movlw	low main@motorR
  1061   00117A  6E1E               	movwf	fullSpeedAhead@mR^0,c
  1062   00117C  0E00               	movlw	high main@motorR
  1063   00117E  6E1F               	movwf	(fullSpeedAhead@mR+1)^0,c
  1064   001180  EC9F  F00C         	call	_fullSpeedAhead	;wreg free
  1065   001184                     
  1066                           ;main_motor.c: 70:             Update_RGBC(&initial_color);
  1067   001184  0EBD               	movlw	low main@initial_color
  1068   001186  6E14               	movwf	Update_RGBC@tempval^0,c
  1069   001188  0E00               	movlw	high main@initial_color
  1070   00118A  6E15               	movwf	(Update_RGBC@tempval+1)^0,c
  1071   00118C  ECA9  F012         	call	_Update_RGBC	;wreg free
  1072   001190                     
  1073                           ;main_motor.c: 71:             color_detected = detect_color(&initial_color, lost_timer)
      +                          ;
  1074   001190  0EBD               	movlw	low main@initial_color
  1075   001192  0100               	movlb	0	; () banked
  1076   001194  6FA3               	movwf	detect_color@tempval& (0+255),b
  1077   001196  0E00               	movlw	high main@initial_color
  1078   001198  6FA4               	movwf	(detect_color@tempval+1)& (0+255),b
  1079   00119A  51B9               	movf	main@lost_timer& (0+255),w,b
  1080   00119C  6FB7               	movwf	??_main& (0+255),b
  1081   00119E  6BB8               	clrf	(??_main+1)& (0+255),b
  1082   0011A0  C0B7  F0A5         	movff	??_main,detect_color@lost_timer
  1083   0011A4  C0B8  F0A6         	movff	??_main+1,detect_color@lost_timer+1
  1084   0011A8  EC2E  F000         	call	_detect_color	;wreg free
  1085   0011AC  0100               	movlb	0	; () banked
  1086   0011AE  6FBC               	movwf	main@color_detected& (0+255),b
  1087   0011B0                     
  1088                           ; BSR set to: 0
  1089                           ;main_motor.c: 72:             b++;
  1090   0011B0  4BBA               	infsnz	main@b& (0+255),f,b
  1091   0011B2  2BBB               	incf	(main@b+1)& (0+255),f,b
  1092   0011B4                     l4280:
  1093                           
  1094                           ; BSR set to: 0
  1095                           ;main_motor.c: 68:         while(color_detected == 0){
  1096   0011B4  51BC               	movf	main@color_detected& (0+255),w,b
  1097   0011B6  B4D8               	btfsc	status,2,c
  1098   0011B8  EFE0  F008         	goto	u4481
  1099   0011BC  EFE2  F008         	goto	u4480
  1100   0011C0                     u4481:
  1101   0011C0  EFB8  F008         	goto	l4272
  1102   0011C4                     u4480:
  1103   0011C4                     
  1104                           ; BSR set to: 0
  1105                           ;main_motor.c: 75:         if(color_detected != 0 && color_detected != 8){
  1106   0011C4  51BC               	movf	main@color_detected& (0+255),w,b
  1107   0011C6  B4D8               	btfsc	status,2,c
  1108   0011C8  EFE8  F008         	goto	u4491
  1109   0011CC  EFEA  F008         	goto	u4490
  1110   0011D0                     u4491:
  1111   0011D0  EF47  F009         	goto	l4308
  1112   0011D4                     u4490:
  1113   0011D4                     
  1114                           ; BSR set to: 0
  1115   0011D4  0E08               	movlw	8
  1116   0011D6  19BC               	xorwf	main@color_detected& (0+255),w,b
  1117   0011D8  B4D8               	btfsc	status,2,c
  1118   0011DA  EFF1  F008         	goto	u4501
  1119   0011DE  EFF3  F008         	goto	u4500
  1120   0011E2                     u4501:
  1121   0011E2  EF47  F009         	goto	l4308
  1122   0011E6                     u4500:
  1123   0011E6                     
  1124                           ; BSR set to: 0
  1125                           ;main_motor.c: 76:             AppendTime((b-6),&time_index,time_array);
  1126   0011E6  0EFA               	movlw	250
  1127   0011E8  25BA               	addwf	main@b& (0+255),w,b
  1128   0011EA  6E09               	movwf	AppendTime@temp^0,c
  1129   0011EC  0EFF               	movlw	255
  1130   0011EE  21BB               	addwfc	(main@b+1)& (0+255),w,b
  1131   0011F0  6E0A               	movwf	(AppendTime@temp+1)^0,c
  1132   0011F2  0E9E               	movlw	low _time_index
  1133   0011F4  6E0B               	movwf	AppendTime@time_index^0,c
  1134   0011F6  0E00               	movlw	high _time_index
  1135   0011F8  6E0C               	movwf	(AppendTime@time_index+1)^0,c
  1136   0011FA  0E3C               	movlw	low _time_array
  1137   0011FC  6E0D               	movwf	AppendTime@time_array^0,c
  1138   0011FE  0E01               	movlw	high _time_array
  1139   001200  6E0E               	movwf	(AppendTime@time_array+1)^0,c
  1140   001202  EC42  F014         	call	_AppendTime	;wreg free
  1141   001206                     
  1142                           ;main_motor.c: 77:             LATHbits.LATH3 = 1;
  1143   001206  8680               	bsf	128,3,c	;volatile
  1144                           
  1145                           ;main_motor.c: 79:             while(b>0){
  1146   001208  EF14  F009         	goto	l4294
  1147   00120C                     l4290:
  1148                           
  1149                           ; BSR set to: 0
  1150                           ;main_motor.c: 80:                 stop(&motorL,&motorR);
  1151   00120C  0EC5               	movlw	low main@motorL
  1152   00120E  6E1C               	movwf	stop@mL^0,c
  1153   001210  0E00               	movlw	high main@motorL
  1154   001212  6E1D               	movwf	(stop@mL+1)^0,c
  1155   001214  0ECE               	movlw	low main@motorR
  1156   001216  6E1E               	movwf	stop@mR^0,c
  1157   001218  0E00               	movlw	high main@motorR
  1158   00121A  6E1F               	movwf	(stop@mR+1)^0,c
  1159   00121C  EC04  F00E         	call	_stop	;wreg free
  1160   001220                     
  1161                           ;main_motor.c: 81:                 b--;
  1162   001220  0100               	movlb	0	; () banked
  1163   001222  07BA               	decf	main@b& (0+255),f,b
  1164   001224  A0D8               	btfss	status,0,c
  1165   001226  07BB               	decf	(main@b+1)& (0+255),f,b
  1166   001228                     l4294:
  1167                           
  1168                           ;main_motor.c: 79:             while(b>0){
  1169   001228  0100               	movlb	0	; () banked
  1170   00122A  51BA               	movf	main@b& (0+255),w,b
  1171   00122C  11BB               	iorwf	(main@b+1)& (0+255),w,b
  1172   00122E  A4D8               	btfss	status,2,c
  1173   001230  EF1C  F009         	goto	u4511
  1174   001234  EF1E  F009         	goto	u4510
  1175   001238                     u4511:
  1176   001238  EF06  F009         	goto	l4290
  1177   00123C                     u4510:
  1178   00123C                     
  1179                           ; BSR set to: 0
  1180                           ;main_motor.c: 83:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1181   00123C  0E09               	movlw	9
  1182   00123E  0100               	movlb	0	; () banked
  1183   001240  6FB8               	movwf	(??_main+1)& (0+255),b
  1184   001242  0E1E               	movlw	30
  1185   001244  6FB7               	movwf	??_main& (0+255),b
  1186   001246  0EE4               	movlw	228
  1187   001248                     u4547:
  1188   001248  2EE8               	decfsz	wreg,f,c
  1189   00124A  D7FE               	bra	u4547
  1190   00124C  2FB7               	decfsz	??_main& (0+255),f,b
  1191   00124E  D7FC               	bra	u4547
  1192   001250  2FB8               	decfsz	(??_main+1)& (0+255),f,b
  1193   001252  D7FA               	bra	u4547
  1194   001254  F000               	nop	
  1195   001256                     
  1196                           ;main_motor.c: 84:             LATHbits.LATH3 = 0;
  1197   001256  9680               	bcf	128,3,c	;volatile
  1198   001258                     
  1199                           ;main_motor.c: 86:             MoveBuggy(color_detected,&motorL,&motorR);
  1200   001258  0100               	movlb	0	; () banked
  1201   00125A  51BC               	movf	main@color_detected& (0+255),w,b
  1202   00125C  6FB7               	movwf	??_main& (0+255),b
  1203   00125E  6BB8               	clrf	(??_main+1)& (0+255),b
  1204   001260  C0B7  F035         	movff	??_main,MoveBuggy@color_detected
  1205   001264  C0B8  F036         	movff	??_main+1,MoveBuggy@color_detected+1
  1206   001268  0EC5               	movlw	low main@motorL
  1207   00126A  6E37               	movwf	MoveBuggy@mL^0,c
  1208   00126C  0E00               	movlw	high main@motorL
  1209   00126E  6E38               	movwf	(MoveBuggy@mL+1)^0,c
  1210   001270  0ECE               	movlw	low main@motorR
  1211   001272  6E39               	movwf	MoveBuggy@mR^0,c
  1212   001274  0E00               	movlw	high main@motorR
  1213   001276  6E3A               	movwf	(MoveBuggy@mR+1)^0,c
  1214   001278  EC20  F007         	call	_MoveBuggy	;wreg free
  1215   00127C                     
  1216                           ;main_motor.c: 87:             color_detected = 0;
  1217   00127C  0E00               	movlw	0
  1218   00127E  0100               	movlb	0	; () banked
  1219   001280  6FBC               	movwf	main@color_detected& (0+255),b
  1220   001282                     
  1221                           ; BSR set to: 0
  1222                           ;main_motor.c: 88:             color_flag = 0;
  1223   001282  0E00               	movlw	0
  1224   001284  6E55               	movwf	_color_flag^0,c
  1225   001286                     
  1226                           ; BSR set to: 0
  1227                           ;main_motor.c: 89:             lost_timer = 0;
  1228   001286  0E00               	movlw	0
  1229   001288  6FB9               	movwf	main@lost_timer& (0+255),b
  1230                           
  1231                           ;main_motor.c: 90:         }
  1232   00128A  EFB1  F008         	goto	l4270
  1233   00128E                     l4308:
  1234                           
  1235                           ; BSR set to: 0
  1236   00128E  0E08               	movlw	8
  1237   001290  19BC               	xorwf	main@color_detected& (0+255),w,b
  1238   001292  A4D8               	btfss	status,2,c
  1239   001294  EF4E  F009         	goto	u4521
  1240   001298  EF50  F009         	goto	u4520
  1241   00129C                     u4521:
  1242   00129C  EFB1  F008         	goto	l4270
  1243   0012A0                     u4520:
  1244   0012A0                     
  1245                           ; BSR set to: 0
  1246                           ;main_motor.c: 94:             AppendTime((b-6),&time_index,time_array);
  1247   0012A0  0EFA               	movlw	250
  1248   0012A2  25BA               	addwf	main@b& (0+255),w,b
  1249   0012A4  6E09               	movwf	AppendTime@temp^0,c
  1250   0012A6  0EFF               	movlw	255
  1251   0012A8  21BB               	addwfc	(main@b+1)& (0+255),w,b
  1252   0012AA  6E0A               	movwf	(AppendTime@temp+1)^0,c
  1253   0012AC  0E9E               	movlw	low _time_index
  1254   0012AE  6E0B               	movwf	AppendTime@time_index^0,c
  1255   0012B0  0E00               	movlw	high _time_index
  1256   0012B2  6E0C               	movwf	(AppendTime@time_index+1)^0,c
  1257   0012B4  0E3C               	movlw	low _time_array
  1258   0012B6  6E0D               	movwf	AppendTime@time_array^0,c
  1259   0012B8  0E01               	movlw	high _time_array
  1260   0012BA  6E0E               	movwf	(AppendTime@time_array+1)^0,c
  1261   0012BC  EC42  F014         	call	_AppendTime	;wreg free
  1262   0012C0                     
  1263                           ;main_motor.c: 95:             LATDbits.LATD7 = 1;
  1264   0012C0  8E7C               	bsf	124,7,c	;volatile
  1265                           
  1266                           ;main_motor.c: 97:             while(b>0){
  1267   0012C2  EF71  F009         	goto	l4318
  1268   0012C6                     l4314:
  1269                           
  1270                           ; BSR set to: 0
  1271                           ;main_motor.c: 98:                 stop(&motorL,&motorR);
  1272   0012C6  0EC5               	movlw	low main@motorL
  1273   0012C8  6E1C               	movwf	stop@mL^0,c
  1274   0012CA  0E00               	movlw	high main@motorL
  1275   0012CC  6E1D               	movwf	(stop@mL+1)^0,c
  1276   0012CE  0ECE               	movlw	low main@motorR
  1277   0012D0  6E1E               	movwf	stop@mR^0,c
  1278   0012D2  0E00               	movlw	high main@motorR
  1279   0012D4  6E1F               	movwf	(stop@mR+1)^0,c
  1280   0012D6  EC04  F00E         	call	_stop	;wreg free
  1281   0012DA                     
  1282                           ;main_motor.c: 99:                 b--;
  1283   0012DA  0100               	movlb	0	; () banked
  1284   0012DC  07BA               	decf	main@b& (0+255),f,b
  1285   0012DE  A0D8               	btfss	status,0,c
  1286   0012E0  07BB               	decf	(main@b+1)& (0+255),f,b
  1287   0012E2                     l4318:
  1288                           
  1289                           ;main_motor.c: 97:             while(b>0){
  1290   0012E2  0100               	movlb	0	; () banked
  1291   0012E4  51BA               	movf	main@b& (0+255),w,b
  1292   0012E6  11BB               	iorwf	(main@b+1)& (0+255),w,b
  1293   0012E8  A4D8               	btfss	status,2,c
  1294   0012EA  EF79  F009         	goto	u4531
  1295   0012EE  EF7B  F009         	goto	u4530
  1296   0012F2                     u4531:
  1297   0012F2  EF63  F009         	goto	l4314
  1298   0012F6                     u4530:
  1299   0012F6                     
  1300                           ; BSR set to: 0
  1301                           ;main_motor.c: 101:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1302   0012F6  0E09               	movlw	9
  1303   0012F8  0100               	movlb	0	; () banked
  1304   0012FA  6FB8               	movwf	(??_main+1)& (0+255),b
  1305   0012FC  0E1E               	movlw	30
  1306   0012FE  6FB7               	movwf	??_main& (0+255),b
  1307   001300  0EE4               	movlw	228
  1308   001302                     u4557:
  1309   001302  2EE8               	decfsz	wreg,f,c
  1310   001304  D7FE               	bra	u4557
  1311   001306  2FB7               	decfsz	??_main& (0+255),f,b
  1312   001308  D7FC               	bra	u4557
  1313   00130A  2FB8               	decfsz	(??_main+1)& (0+255),f,b
  1314   00130C  D7FA               	bra	u4557
  1315   00130E  F000               	nop	
  1316   001310                     
  1317                           ;main_motor.c: 102:             WhiteInstructions(&motorL,&motorR);
  1318   001310  0EC5               	movlw	low main@motorL
  1319   001312  6E3B               	movwf	WhiteInstructions@mL^0,c
  1320   001314  0E00               	movlw	high main@motorL
  1321   001316  6E3C               	movwf	(WhiteInstructions@mL+1)^0,c
  1322   001318  0ECE               	movlw	low main@motorR
  1323   00131A  6E3D               	movwf	WhiteInstructions@mR^0,c
  1324   00131C  0E00               	movlw	high main@motorR
  1325   00131E  6E3E               	movwf	(WhiteInstructions@mR+1)^0,c
  1326   001320  ECB1  F00B         	call	_WhiteInstructions	;wreg free
  1327   001324                     
  1328                           ;main_motor.c: 103:             LATDbits.LATD7 = 0;
  1329   001324  9E7C               	bcf	124,7,c	;volatile
  1330   001326                     
  1331                           ;main_motor.c: 104:             color_detected = 0;
  1332   001326  0E00               	movlw	0
  1333   001328  0100               	movlb	0	; () banked
  1334   00132A  6FBC               	movwf	main@color_detected& (0+255),b
  1335   00132C                     
  1336                           ; BSR set to: 0
  1337                           ;main_motor.c: 105:             lost_timer = 0;
  1338   00132C  0E00               	movlw	0
  1339   00132E  6FB9               	movwf	main@lost_timer& (0+255),b
  1340   001330  0003               	sleep		;# 
  1341   001332  EFB1  F008         	goto	l4270
  1342   001336  EF2C  F000         	goto	start
  1343   00133A                     __end_of_main:
  1344                           	callstack 0
  1345                           
  1346 ;; *************** function _initDCmotorsPWM *****************
  1347 ;; Defined at:
  1348 ;;		line 5 in file "dc_motor.c"
  1349 ;; Parameters:    Size  Location     Type
  1350 ;;  PWMperiod       2    8[COMRAM] unsigned int 
  1351 ;; Auto vars:     Size  Location     Type
  1352 ;;		None
  1353 ;; Return value:  Size  Location     Type
  1354 ;;                  1    wreg      void 
  1355 ;; Registers used:
  1356 ;;		wreg, status,2
  1357 ;; Tracked objects:
  1358 ;;		On entry : 0/0
  1359 ;;		On exit  : 0/0
  1360 ;;		Unchanged: 0/0
  1361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1362 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1365 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1366 ;;Total ram usage:        2 bytes
  1367 ;; Hardware stack levels used: 1
  1368 ;; Hardware stack levels required when called: 7
  1369 ;; This function calls:
  1370 ;;		Nothing
  1371 ;; This function is called by:
  1372 ;;		_main
  1373 ;; This function uses a non-reentrant model
  1374 ;;
  1375                           
  1376                           	psect	text1
  1377   00204E                     __ptext1:
  1378                           	callstack 0
  1379   00204E                     _initDCmotorsPWM:
  1380                           	callstack 23
  1381   00204E                     
  1382                           ;dc_motor.c: 7:     LATEbits.LATE2 = 0;
  1383   00204E  947D               	bcf	125,2,c	;volatile
  1384                           
  1385                           ;dc_motor.c: 8:     TRISEbits.TRISE2 = 0;
  1386   002050  9485               	bcf	133,2,c	;volatile
  1387                           
  1388                           ;dc_motor.c: 9:     LATEbits.LATE4 = 0;
  1389   002052  987D               	bcf	125,4,c	;volatile
  1390                           
  1391                           ;dc_motor.c: 10:     TRISEbits.TRISE4 = 0;
  1392   002054  9885               	bcf	133,4,c	;volatile
  1393                           
  1394                           ;dc_motor.c: 11:     LATCbits.LATC7 = 0;
  1395   002056  9E7B               	bcf	123,7,c	;volatile
  1396                           
  1397                           ;dc_motor.c: 12:     TRISCbits.TRISC7 = 0;
  1398   002058  9E83               	bcf	131,7,c	;volatile
  1399                           
  1400                           ;dc_motor.c: 13:     LATGbits.LATG6 = 0;
  1401   00205A  9C7F               	bcf	127,6,c	;volatile
  1402                           
  1403                           ;dc_motor.c: 14:     TRISGbits.TRISG6 = 0;
  1404   00205C  9C87               	bcf	135,6,c	;volatile
  1405   00205E                     
  1406                           ;dc_motor.c: 17:     RE2PPS=0x05;
  1407   00205E  0E05               	movlw	5
  1408   002060  010E               	movlb	14	; () banked
  1409   002062  6F74               	movwf	116,b	;volatile
  1410                           
  1411                           ;dc_motor.c: 18:     RE4PPS=0x06;
  1412   002064  0E06               	movlw	6
  1413   002066  6F76               	movwf	118,b	;volatile
  1414                           
  1415                           ;dc_motor.c: 19:     RC7PPS=0x07;
  1416   002068  0E07               	movlw	7
  1417   00206A  6F69               	movwf	105,b	;volatile
  1418                           
  1419                           ;dc_motor.c: 20:     RG6PPS=0x08;
  1420   00206C  0E08               	movlw	8
  1421   00206E  6F88               	movwf	136,b	;volatile
  1422                           
  1423                           ;dc_motor.c: 23:     T2CONbits.CKPS=0b100;
  1424   002070  50BD               	movf	189,w,c	;volatile
  1425   002072  0B8F               	andlw	-113
  1426   002074  0940               	iorlw	64
  1427   002076  6EBD               	movwf	189,c	;volatile
  1428                           
  1429                           ;dc_motor.c: 24:     T2HLTbits.MODE=0b00000;
  1430   002078  0EE0               	movlw	-32
  1431   00207A  16BE               	andwf	190,f,c	;volatile
  1432                           
  1433                           ;dc_motor.c: 25:     T2CLKCONbits.CS=0b0001;
  1434   00207C  50BF               	movf	191,w,c	;volatile
  1435   00207E  0BF0               	andlw	-16
  1436   002080  0901               	iorlw	1
  1437   002082  6EBF               	movwf	191,c	;volatile
  1438   002084                     
  1439                           ; BSR set to: 14
  1440                           ;dc_motor.c: 29:     T2PR=PWMperiod;
  1441   002084  C009  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  1442   002088                     
  1443                           ; BSR set to: 14
  1444                           ;dc_motor.c: 30:     T2CONbits.ON=1;
  1445   002088  8EBD               	bsf	189,7,c	;volatile
  1446                           
  1447                           ;dc_motor.c: 34:     CCPR1H=0;
  1448   00208A  0E00               	movlw	0
  1449   00208C  6EAA               	movwf	170,c	;volatile
  1450                           
  1451                           ;dc_motor.c: 35:     CCPR2H=0;
  1452   00208E  0E00               	movlw	0
  1453   002090  6EA6               	movwf	166,c	;volatile
  1454                           
  1455                           ;dc_motor.c: 36:     CCPR3H=0;
  1456   002092  0E00               	movlw	0
  1457   002094  010F               	movlb	15	; () banked
  1458   002096  6F25               	movwf	37,b	;volatile
  1459                           
  1460                           ;dc_motor.c: 37:     CCPR4H=0;
  1461   002098  0E00               	movlw	0
  1462   00209A  6F21               	movwf	33,b	;volatile
  1463                           
  1464                           ;dc_motor.c: 40:     CCPTMRS0bits.C1TSEL=0;
  1465   00209C  0EFC               	movlw	-4
  1466   00209E  16AD               	andwf	173,f,c	;volatile
  1467                           
  1468                           ;dc_motor.c: 41:     CCPTMRS0bits.C2TSEL=0;
  1469   0020A0  0EF3               	movlw	-13
  1470   0020A2  16AD               	andwf	173,f,c	;volatile
  1471                           
  1472                           ;dc_motor.c: 42:     CCPTMRS0bits.C3TSEL=0;
  1473   0020A4  0ECF               	movlw	-49
  1474   0020A6  16AD               	andwf	173,f,c	;volatile
  1475                           
  1476                           ;dc_motor.c: 43:     CCPTMRS0bits.C4TSEL=0;
  1477   0020A8  0E3F               	movlw	-193
  1478   0020AA  16AD               	andwf	173,f,c	;volatile
  1479   0020AC                     
  1480                           ; BSR set to: 15
  1481                           ;dc_motor.c: 46:     CCP1CONbits.FMT=1;
  1482   0020AC  88AB               	bsf	171,4,c	;volatile
  1483                           
  1484                           ;dc_motor.c: 47:     CCP1CONbits.CCP1MODE=0b1100;
  1485   0020AE  50AB               	movf	171,w,c	;volatile
  1486   0020B0  0BF0               	andlw	-16
  1487   0020B2  090C               	iorlw	12
  1488   0020B4  6EAB               	movwf	171,c	;volatile
  1489   0020B6                     
  1490                           ; BSR set to: 15
  1491                           ;dc_motor.c: 48:     CCP1CONbits.EN=1;
  1492   0020B6  8EAB               	bsf	171,7,c	;volatile
  1493   0020B8                     
  1494                           ; BSR set to: 15
  1495                           ;dc_motor.c: 50:     CCP2CONbits.FMT=1;
  1496   0020B8  88A7               	bsf	167,4,c	;volatile
  1497                           
  1498                           ;dc_motor.c: 51:     CCP2CONbits.CCP2MODE=0b1100;
  1499   0020BA  50A7               	movf	167,w,c	;volatile
  1500   0020BC  0BF0               	andlw	-16
  1501   0020BE  090C               	iorlw	12
  1502   0020C0  6EA7               	movwf	167,c	;volatile
  1503   0020C2                     
  1504                           ; BSR set to: 15
  1505                           ;dc_motor.c: 52:     CCP2CONbits.EN=1;
  1506   0020C2  8EA7               	bsf	167,7,c	;volatile
  1507   0020C4                     
  1508                           ; BSR set to: 15
  1509                           ;dc_motor.c: 54:     CCP3CONbits.FMT=1;
  1510   0020C4  8926               	bsf	38,4,b	;volatile
  1511                           
  1512                           ;dc_motor.c: 55:     CCP3CONbits.CCP3MODE=0b1100;
  1513   0020C6  5126               	movf	38,w,b	;volatile
  1514   0020C8  0BF0               	andlw	-16
  1515   0020CA  090C               	iorlw	12
  1516   0020CC  6F26               	movwf	38,b	;volatile
  1517   0020CE                     
  1518                           ; BSR set to: 15
  1519                           ;dc_motor.c: 56:     CCP3CONbits.EN=1;
  1520   0020CE  8F26               	bsf	38,7,b	;volatile
  1521   0020D0                     
  1522                           ; BSR set to: 15
  1523                           ;dc_motor.c: 58:     CCP4CONbits.FMT=1;
  1524   0020D0  8922               	bsf	34,4,b	;volatile
  1525                           
  1526                           ;dc_motor.c: 59:     CCP4CONbits.CCP4MODE=0b1100;
  1527   0020D2  5122               	movf	34,w,b	;volatile
  1528   0020D4  0BF0               	andlw	-16
  1529   0020D6  090C               	iorlw	12
  1530   0020D8  6F22               	movwf	34,b	;volatile
  1531   0020DA                     
  1532                           ; BSR set to: 15
  1533                           ;dc_motor.c: 60:     CCP4CONbits.EN=1;
  1534   0020DA  8F22               	bsf	34,7,b	;volatile
  1535   0020DC                     
  1536                           ; BSR set to: 15
  1537   0020DC  0012               	return		;funcret
  1538   0020DE                     __end_of_initDCmotorsPWM:
  1539                           	callstack 0
  1540                           
  1541 ;; *************** function _detect_color *****************
  1542 ;; Defined at:
  1543 ;;		line 99 in file "color.c"
  1544 ;; Parameters:    Size  Location     Type
  1545 ;;  tempval         2    4[BANK0 ] PTR struct RGB_val
  1546 ;;		 -> main@initial_color(8), 
  1547 ;;  lost_timer      2    6[BANK0 ] PTR unsigned char 
  1548 ;;		 -> RAM(3561), 
  1549 ;; Auto vars:     Size  Location     Type
  1550 ;;  dist_B          1   23[BANK0 ] unsigned char 
  1551 ;;  dist_G          1   22[BANK0 ] unsigned char 
  1552 ;;  dist_R          1   21[BANK0 ] unsigned char 
  1553 ;;  color           1   20[BANK0 ] unsigned char 
  1554 ;; Return value:  Size  Location     Type
  1555 ;;                  1    wreg      unsigned char 
  1556 ;; Registers used:
  1557 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1558 ;; Tracked objects:
  1559 ;;		On entry : 0/0
  1560 ;;		On exit  : 0/0
  1561 ;;		Unchanged: 0/0
  1562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1563 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1564 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1565 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1566 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1567 ;;Total ram usage:       20 bytes
  1568 ;; Hardware stack levels used: 1
  1569 ;; Hardware stack levels required when called: 8
  1570 ;; This function calls:
  1571 ;;		___fldiv
  1572 ;;		___flmul
  1573 ;;		___fltol
  1574 ;;		___xxtofl
  1575 ;; This function is called by:
  1576 ;;		_main
  1577 ;; This function uses a non-reentrant model
  1578 ;;
  1579                           
  1580                           	psect	text2
  1581   00005C                     __ptext2:
  1582                           	callstack 0
  1583   00005C                     _detect_color:
  1584                           	callstack 22
  1585   00005C                     
  1586                           ;color.c: 99: unsigned char detect_color(RGB_val *tempval, unsigned char *lost_timer);co
      +                          lor.c: 100: {;color.c: 101:     unsigned char color = 0;
  1587   00005C  0E00               	movlw	0
  1588   00005E  0100               	movlb	0	; () banked
  1589   000060  6FB3               	movwf	detect_color@color& (0+255),b
  1590   000062                     
  1591                           ; BSR set to: 0
  1592                           ;color.c: 104:     unsigned char dist_R, dist_G, dist_B;;color.c: 105:     dist_R = ((fl
      +                          oat)(tempval->R)/(float)(tempval->R + tempval->G + tempval->B))*100;
  1593   000062  0E00               	movlw	0
  1594   000064  6E34               	movwf	___flmul@a^0,c
  1595   000066  0E00               	movlw	0
  1596   000068  6E35               	movwf	(___flmul@a+1)^0,c
  1597   00006A  0EC8               	movlw	200
  1598   00006C  6E36               	movwf	(___flmul@a+2)^0,c
  1599   00006E  0E42               	movlw	66
  1600   000070  6E37               	movwf	(___flmul@a+3)^0,c
  1601   000072  EE20 F004          	lfsr	2,4
  1602   000076  51A3               	movf	detect_color@tempval& (0+255),w,b
  1603   000078  26D9               	addwf	fsr2l,f,c
  1604   00007A  51A4               	movf	(detect_color@tempval+1)& (0+255),w,b
  1605   00007C  22DA               	addwfc	fsr2h,f,c
  1606   00007E  CFDE F0A7          	movff	postinc2,??_detect_color
  1607   000082  CFDD F0A8          	movff	postdec2,??_detect_color+1
  1608   000086  EE20 F002          	lfsr	2,2
  1609   00008A  51A3               	movf	detect_color@tempval& (0+255),w,b
  1610   00008C  26D9               	addwf	fsr2l,f,c
  1611   00008E  51A4               	movf	(detect_color@tempval+1)& (0+255),w,b
  1612   000090  22DA               	addwfc	fsr2h,f,c
  1613   000092  CFDE F0A9          	movff	postinc2,??_detect_color+2
  1614   000096  CFDD F0AA          	movff	postdec2,??_detect_color+3
  1615   00009A  C0A3  FFD9         	movff	detect_color@tempval,fsr2l
  1616   00009E  C0A4  FFDA         	movff	detect_color@tempval+1,fsr2h
  1617   0000A2  CFDE F0AB          	movff	postinc2,??_detect_color+4
  1618   0000A6  CFDD F0AC          	movff	postdec2,??_detect_color+5
  1619   0000AA  51A9               	movf	(??_detect_color+2)& (0+255),w,b
  1620   0000AC  25AB               	addwf	(??_detect_color+4)& (0+255),w,b
  1621   0000AE  6FAD               	movwf	(??_detect_color+6)& (0+255),b
  1622   0000B0  51AA               	movf	(??_detect_color+3)& (0+255),w,b
  1623   0000B2  21AC               	addwfc	(??_detect_color+5)& (0+255),w,b
  1624   0000B4  6FAE               	movwf	(??_detect_color+7)& (0+255),b
  1625   0000B6  51A7               	movf	??_detect_color& (0+255),w,b
  1626   0000B8  25AD               	addwf	(??_detect_color+6)& (0+255),w,b
  1627   0000BA  6FAF               	movwf	(??_detect_color+8)& (0+255),b
  1628   0000BC  51A8               	movf	(??_detect_color+1)& (0+255),w,b
  1629   0000BE  21AE               	addwfc	(??_detect_color+7)& (0+255),w,b
  1630   0000C0  6FB0               	movwf	(??_detect_color+9)& (0+255),b
  1631   0000C2  C0AF  F009         	movff	??_detect_color+8,___xxtofl@val
  1632   0000C6  C0B0  F00A         	movff	??_detect_color+9,___xxtofl@val+1
  1633   0000CA  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1634   0000CC  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1635   0000CE  0E00               	movlw	0
  1636   0000D0  EC9D  F009         	call	___xxtofl
  1637   0000D4  C009  F01B         	movff	?___xxtofl,___fldiv@a
  1638   0000D8  C00A  F01C         	movff	?___xxtofl+1,___fldiv@a+1
  1639   0000DC  C00B  F01D         	movff	?___xxtofl+2,___fldiv@a+2
  1640   0000E0  C00C  F01E         	movff	?___xxtofl+3,___fldiv@a+3
  1641   0000E4  C0A3  FFD9         	movff	detect_color@tempval,fsr2l
  1642   0000E8  C0A4  FFDA         	movff	detect_color@tempval+1,fsr2h
  1643   0000EC  CFDE F0B1          	movff	postinc2,??_detect_color+10
  1644   0000F0  CFDD F0B2          	movff	postdec2,??_detect_color+11
  1645   0000F4  C0B1  F009         	movff	??_detect_color+10,___xxtofl@val
  1646   0000F8  C0B2  F00A         	movff	??_detect_color+11,___xxtofl@val+1
  1647   0000FC  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1648   0000FE  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1649   000100  0E00               	movlw	0
  1650   000102  EC9D  F009         	call	___xxtofl
  1651   000106  C009  F017         	movff	?___xxtofl,___fldiv@b
  1652   00010A  C00A  F018         	movff	?___xxtofl+1,___fldiv@b+1
  1653   00010E  C00B  F019         	movff	?___xxtofl+2,___fldiv@b+2
  1654   000112  C00C  F01A         	movff	?___xxtofl+3,___fldiv@b+3
  1655   000116  EC53  F005         	call	___fldiv	;wreg free
  1656   00011A  C017  F030         	movff	?___fldiv,___flmul@b
  1657   00011E  C018  F031         	movff	?___fldiv+1,___flmul@b+1
  1658   000122  C019  F032         	movff	?___fldiv+2,___flmul@b+2
  1659   000126  C01A  F033         	movff	?___fldiv+3,___flmul@b+3
  1660   00012A  EC3E  F003         	call	___flmul	;wreg free
  1661   00012E  C030  F049         	movff	?___flmul,___fltol@f1
  1662   000132  C031  F04A         	movff	?___flmul+1,___fltol@f1+1
  1663   000136  C032  F04B         	movff	?___flmul+2,___fltol@f1+2
  1664   00013A  C033  F04C         	movff	?___flmul+3,___fltol@f1+3
  1665   00013E  EC2D  F00B         	call	___fltol	;wreg free
  1666   000142  5049               	movf	?___fltol^0,w,c
  1667   000144  0100               	movlb	0	; () banked
  1668   000146  6FB4               	movwf	detect_color@dist_R& (0+255),b
  1669   000148                     
  1670                           ; BSR set to: 0
  1671                           ;color.c: 106:     dist_G = ((float)(tempval->G)/(float)(tempval->R + tempval->G + tempv
      +                          al->B))*100;
  1672   000148  0E00               	movlw	0
  1673   00014A  6E34               	movwf	___flmul@a^0,c
  1674   00014C  0E00               	movlw	0
  1675   00014E  6E35               	movwf	(___flmul@a+1)^0,c
  1676   000150  0EC8               	movlw	200
  1677   000152  6E36               	movwf	(___flmul@a+2)^0,c
  1678   000154  0E42               	movlw	66
  1679   000156  6E37               	movwf	(___flmul@a+3)^0,c
  1680   000158  EE20 F004          	lfsr	2,4
  1681   00015C  51A3               	movf	detect_color@tempval& (0+255),w,b
  1682   00015E  26D9               	addwf	fsr2l,f,c
  1683   000160  51A4               	movf	(detect_color@tempval+1)& (0+255),w,b
  1684   000162  22DA               	addwfc	fsr2h,f,c
  1685   000164  CFDE F0A7          	movff	postinc2,??_detect_color
  1686   000168  CFDD F0A8          	movff	postdec2,??_detect_color+1
  1687   00016C  EE20 F002          	lfsr	2,2
  1688   000170  51A3               	movf	detect_color@tempval& (0+255),w,b
  1689   000172  26D9               	addwf	fsr2l,f,c
  1690   000174  51A4               	movf	(detect_color@tempval+1)& (0+255),w,b
  1691   000176  22DA               	addwfc	fsr2h,f,c
  1692   000178  CFDE F0A9          	movff	postinc2,??_detect_color+2
  1693   00017C  CFDD F0AA          	movff	postdec2,??_detect_color+3
  1694   000180  C0A3  FFD9         	movff	detect_color@tempval,fsr2l
  1695   000184  C0A4  FFDA         	movff	detect_color@tempval+1,fsr2h
  1696   000188  CFDE F0AB          	movff	postinc2,??_detect_color+4
  1697   00018C  CFDD F0AC          	movff	postdec2,??_detect_color+5
  1698   000190  51A9               	movf	(??_detect_color+2)& (0+255),w,b
  1699   000192  25AB               	addwf	(??_detect_color+4)& (0+255),w,b
  1700   000194  6FAD               	movwf	(??_detect_color+6)& (0+255),b
  1701   000196  51AA               	movf	(??_detect_color+3)& (0+255),w,b
  1702   000198  21AC               	addwfc	(??_detect_color+5)& (0+255),w,b
  1703   00019A  6FAE               	movwf	(??_detect_color+7)& (0+255),b
  1704   00019C  51A7               	movf	??_detect_color& (0+255),w,b
  1705   00019E  25AD               	addwf	(??_detect_color+6)& (0+255),w,b
  1706   0001A0  6FAF               	movwf	(??_detect_color+8)& (0+255),b
  1707   0001A2  51A8               	movf	(??_detect_color+1)& (0+255),w,b
  1708   0001A4  21AE               	addwfc	(??_detect_color+7)& (0+255),w,b
  1709   0001A6  6FB0               	movwf	(??_detect_color+9)& (0+255),b
  1710   0001A8  C0AF  F009         	movff	??_detect_color+8,___xxtofl@val
  1711   0001AC  C0B0  F00A         	movff	??_detect_color+9,___xxtofl@val+1
  1712   0001B0  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1713   0001B2  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1714   0001B4  0E00               	movlw	0
  1715   0001B6  EC9D  F009         	call	___xxtofl
  1716   0001BA  C009  F01B         	movff	?___xxtofl,___fldiv@a
  1717   0001BE  C00A  F01C         	movff	?___xxtofl+1,___fldiv@a+1
  1718   0001C2  C00B  F01D         	movff	?___xxtofl+2,___fldiv@a+2
  1719   0001C6  C00C  F01E         	movff	?___xxtofl+3,___fldiv@a+3
  1720   0001CA  0100               	movlb	0	; () banked
  1721   0001CC  EE20 F002          	lfsr	2,2
  1722   0001D0  51A3               	movf	detect_color@tempval& (0+255),w,b
  1723   0001D2  26D9               	addwf	fsr2l,f,c
  1724   0001D4  51A4               	movf	(detect_color@tempval+1)& (0+255),w,b
  1725   0001D6  22DA               	addwfc	fsr2h,f,c
  1726   0001D8  CFDE F0B1          	movff	postinc2,??_detect_color+10
  1727   0001DC  CFDD F0B2          	movff	postdec2,??_detect_color+11
  1728   0001E0  C0B1  F009         	movff	??_detect_color+10,___xxtofl@val
  1729   0001E4  C0B2  F00A         	movff	??_detect_color+11,___xxtofl@val+1
  1730   0001E8  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1731   0001EA  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1732   0001EC  0E00               	movlw	0
  1733   0001EE  EC9D  F009         	call	___xxtofl
  1734   0001F2  C009  F017         	movff	?___xxtofl,___fldiv@b
  1735   0001F6  C00A  F018         	movff	?___xxtofl+1,___fldiv@b+1
  1736   0001FA  C00B  F019         	movff	?___xxtofl+2,___fldiv@b+2
  1737   0001FE  C00C  F01A         	movff	?___xxtofl+3,___fldiv@b+3
  1738   000202  EC53  F005         	call	___fldiv	;wreg free
  1739   000206  C017  F030         	movff	?___fldiv,___flmul@b
  1740   00020A  C018  F031         	movff	?___fldiv+1,___flmul@b+1
  1741   00020E  C019  F032         	movff	?___fldiv+2,___flmul@b+2
  1742   000212  C01A  F033         	movff	?___fldiv+3,___flmul@b+3
  1743   000216  EC3E  F003         	call	___flmul	;wreg free
  1744   00021A  C030  F049         	movff	?___flmul,___fltol@f1
  1745   00021E  C031  F04A         	movff	?___flmul+1,___fltol@f1+1
  1746   000222  C032  F04B         	movff	?___flmul+2,___fltol@f1+2
  1747   000226  C033  F04C         	movff	?___flmul+3,___fltol@f1+3
  1748   00022A  EC2D  F00B         	call	___fltol	;wreg free
  1749   00022E  5049               	movf	?___fltol^0,w,c
  1750   000230  0100               	movlb	0	; () banked
  1751   000232  6FB5               	movwf	detect_color@dist_G& (0+255),b
  1752   000234                     
  1753                           ; BSR set to: 0
  1754                           ;color.c: 107:     dist_B = ((float)(tempval->B)/(float)(tempval->R + tempval->G + tempv
      +                          al->B))*100;
  1755   000234  0E00               	movlw	0
  1756   000236  6E34               	movwf	___flmul@a^0,c
  1757   000238  0E00               	movlw	0
  1758   00023A  6E35               	movwf	(___flmul@a+1)^0,c
  1759   00023C  0EC8               	movlw	200
  1760   00023E  6E36               	movwf	(___flmul@a+2)^0,c
  1761   000240  0E42               	movlw	66
  1762   000242  6E37               	movwf	(___flmul@a+3)^0,c
  1763   000244  EE20 F004          	lfsr	2,4
  1764   000248  51A3               	movf	detect_color@tempval& (0+255),w,b
  1765   00024A  26D9               	addwf	fsr2l,f,c
  1766   00024C  51A4               	movf	(detect_color@tempval+1)& (0+255),w,b
  1767   00024E  22DA               	addwfc	fsr2h,f,c
  1768   000250  CFDE F0A7          	movff	postinc2,??_detect_color
  1769   000254  CFDD F0A8          	movff	postdec2,??_detect_color+1
  1770   000258  EE20 F002          	lfsr	2,2
  1771   00025C  51A3               	movf	detect_color@tempval& (0+255),w,b
  1772   00025E  26D9               	addwf	fsr2l,f,c
  1773   000260  51A4               	movf	(detect_color@tempval+1)& (0+255),w,b
  1774   000262  22DA               	addwfc	fsr2h,f,c
  1775   000264  CFDE F0A9          	movff	postinc2,??_detect_color+2
  1776   000268  CFDD F0AA          	movff	postdec2,??_detect_color+3
  1777   00026C  C0A3  FFD9         	movff	detect_color@tempval,fsr2l
  1778   000270  C0A4  FFDA         	movff	detect_color@tempval+1,fsr2h
  1779   000274  CFDE F0AB          	movff	postinc2,??_detect_color+4
  1780   000278  CFDD F0AC          	movff	postdec2,??_detect_color+5
  1781   00027C  51A9               	movf	(??_detect_color+2)& (0+255),w,b
  1782   00027E  25AB               	addwf	(??_detect_color+4)& (0+255),w,b
  1783   000280  6FAD               	movwf	(??_detect_color+6)& (0+255),b
  1784   000282  51AA               	movf	(??_detect_color+3)& (0+255),w,b
  1785   000284  21AC               	addwfc	(??_detect_color+5)& (0+255),w,b
  1786   000286  6FAE               	movwf	(??_detect_color+7)& (0+255),b
  1787   000288  51A7               	movf	??_detect_color& (0+255),w,b
  1788   00028A  25AD               	addwf	(??_detect_color+6)& (0+255),w,b
  1789   00028C  6FAF               	movwf	(??_detect_color+8)& (0+255),b
  1790   00028E  51A8               	movf	(??_detect_color+1)& (0+255),w,b
  1791   000290  21AE               	addwfc	(??_detect_color+7)& (0+255),w,b
  1792   000292  6FB0               	movwf	(??_detect_color+9)& (0+255),b
  1793   000294  C0AF  F009         	movff	??_detect_color+8,___xxtofl@val
  1794   000298  C0B0  F00A         	movff	??_detect_color+9,___xxtofl@val+1
  1795   00029C  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1796   00029E  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1797   0002A0  0E00               	movlw	0
  1798   0002A2  EC9D  F009         	call	___xxtofl
  1799   0002A6  C009  F01B         	movff	?___xxtofl,___fldiv@a
  1800   0002AA  C00A  F01C         	movff	?___xxtofl+1,___fldiv@a+1
  1801   0002AE  C00B  F01D         	movff	?___xxtofl+2,___fldiv@a+2
  1802   0002B2  C00C  F01E         	movff	?___xxtofl+3,___fldiv@a+3
  1803   0002B6  0100               	movlb	0	; () banked
  1804   0002B8  EE20 F004          	lfsr	2,4
  1805   0002BC  51A3               	movf	detect_color@tempval& (0+255),w,b
  1806   0002BE  26D9               	addwf	fsr2l,f,c
  1807   0002C0  51A4               	movf	(detect_color@tempval+1)& (0+255),w,b
  1808   0002C2  22DA               	addwfc	fsr2h,f,c
  1809   0002C4  CFDE F0B1          	movff	postinc2,??_detect_color+10
  1810   0002C8  CFDD F0B2          	movff	postdec2,??_detect_color+11
  1811   0002CC  C0B1  F009         	movff	??_detect_color+10,___xxtofl@val
  1812   0002D0  C0B2  F00A         	movff	??_detect_color+11,___xxtofl@val+1
  1813   0002D4  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1814   0002D6  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1815   0002D8  0E00               	movlw	0
  1816   0002DA  EC9D  F009         	call	___xxtofl
  1817   0002DE  C009  F017         	movff	?___xxtofl,___fldiv@b
  1818   0002E2  C00A  F018         	movff	?___xxtofl+1,___fldiv@b+1
  1819   0002E6  C00B  F019         	movff	?___xxtofl+2,___fldiv@b+2
  1820   0002EA  C00C  F01A         	movff	?___xxtofl+3,___fldiv@b+3
  1821   0002EE  EC53  F005         	call	___fldiv	;wreg free
  1822   0002F2  C017  F030         	movff	?___fldiv,___flmul@b
  1823   0002F6  C018  F031         	movff	?___fldiv+1,___flmul@b+1
  1824   0002FA  C019  F032         	movff	?___fldiv+2,___flmul@b+2
  1825   0002FE  C01A  F033         	movff	?___fldiv+3,___flmul@b+3
  1826   000302  EC3E  F003         	call	___flmul	;wreg free
  1827   000306  C030  F049         	movff	?___flmul,___fltol@f1
  1828   00030A  C031  F04A         	movff	?___flmul+1,___fltol@f1+1
  1829   00030E  C032  F04B         	movff	?___flmul+2,___fltol@f1+2
  1830   000312  C033  F04C         	movff	?___flmul+3,___fltol@f1+3
  1831   000316  EC2D  F00B         	call	___fltol	;wreg free
  1832   00031A  5049               	movf	?___fltol^0,w,c
  1833   00031C  0100               	movlb	0	; () banked
  1834   00031E  6FB6               	movwf	detect_color@dist_B& (0+255),b
  1835   000320                     
  1836                           ; BSR set to: 0
  1837                           ;color.c: 109:     if(color_flag){
  1838   000320  5055               	movf	_color_flag^0,w,c
  1839   000322  B4D8               	btfsc	status,2,c
  1840   000324  EF96  F001         	goto	u3981
  1841   000328  EF98  F001         	goto	u3980
  1842   00032C                     u3981:
  1843   00032C  EF3A  F003         	goto	l42
  1844   000330                     u3980:
  1845   000330                     
  1846                           ; BSR set to: 0
  1847                           ;color.c: 110:         if((74<=dist_R) && (dist_R<=76) && (10<=dist_G) && (dist_G<=12) &
      +                          & (13<=dist_B) && (dist_B<=15)){
  1848   000330  0E49               	movlw	73
  1849   000332  65B4               	cpfsgt	detect_color@dist_R& (0+255),b
  1850   000334  EF9E  F001         	goto	u3991
  1851   000338  EFA0  F001         	goto	u3990
  1852   00033C                     u3991:
  1853   00033C  EFCC  F001         	goto	l4130
  1854   000340                     u3990:
  1855   000340                     
  1856                           ; BSR set to: 0
  1857   000340  0E4D               	movlw	77
  1858   000342  61B4               	cpfslt	detect_color@dist_R& (0+255),b
  1859   000344  EFA6  F001         	goto	u4001
  1860   000348  EFA8  F001         	goto	u4000
  1861   00034C                     u4001:
  1862   00034C  EFCC  F001         	goto	l4130
  1863   000350                     u4000:
  1864   000350                     
  1865                           ; BSR set to: 0
  1866   000350  0E09               	movlw	9
  1867   000352  65B5               	cpfsgt	detect_color@dist_G& (0+255),b
  1868   000354  EFAE  F001         	goto	u4011
  1869   000358  EFB0  F001         	goto	u4010
  1870   00035C                     u4011:
  1871   00035C  EFCC  F001         	goto	l4130
  1872   000360                     u4010:
  1873   000360                     
  1874                           ; BSR set to: 0
  1875   000360  0E0D               	movlw	13
  1876   000362  61B5               	cpfslt	detect_color@dist_G& (0+255),b
  1877   000364  EFB6  F001         	goto	u4021
  1878   000368  EFB8  F001         	goto	u4020
  1879   00036C                     u4021:
  1880   00036C  EFCC  F001         	goto	l4130
  1881   000370                     u4020:
  1882   000370                     
  1883                           ; BSR set to: 0
  1884   000370  0E0C               	movlw	12
  1885   000372  65B6               	cpfsgt	detect_color@dist_B& (0+255),b
  1886   000374  EFBE  F001         	goto	u4031
  1887   000378  EFC0  F001         	goto	u4030
  1888   00037C                     u4031:
  1889   00037C  EFCC  F001         	goto	l4130
  1890   000380                     u4030:
  1891   000380                     
  1892                           ; BSR set to: 0
  1893   000380  0E10               	movlw	16
  1894   000382  61B6               	cpfslt	detect_color@dist_B& (0+255),b
  1895   000384  EFC6  F001         	goto	u4041
  1896   000388  EFC8  F001         	goto	u4040
  1897   00038C                     u4041:
  1898   00038C  EFCC  F001         	goto	l4130
  1899   000390                     u4040:
  1900   000390                     
  1901                           ; BSR set to: 0
  1902                           ;color.c: 111:             color = 1;
  1903   000390  0E01               	movlw	1
  1904   000392  6FB3               	movwf	detect_color@color& (0+255),b
  1905                           
  1906                           ;color.c: 112:         }
  1907   000394  EF3A  F003         	goto	l42
  1908   000398                     l4130:
  1909                           
  1910                           ; BSR set to: 0
  1911   000398  0E23               	movlw	35
  1912   00039A  65B4               	cpfsgt	detect_color@dist_R& (0+255),b
  1913   00039C  EFD2  F001         	goto	u4051
  1914   0003A0  EFD4  F001         	goto	u4050
  1915   0003A4                     u4051:
  1916   0003A4  EF00  F002         	goto	l4144
  1917   0003A8                     u4050:
  1918   0003A8                     
  1919                           ; BSR set to: 0
  1920   0003A8  0E27               	movlw	39
  1921   0003AA  61B4               	cpfslt	detect_color@dist_R& (0+255),b
  1922   0003AC  EFDA  F001         	goto	u4061
  1923   0003B0  EFDC  F001         	goto	u4060
  1924   0003B4                     u4061:
  1925   0003B4  EF00  F002         	goto	l4144
  1926   0003B8                     u4060:
  1927   0003B8                     
  1928                           ; BSR set to: 0
  1929   0003B8  0E28               	movlw	40
  1930   0003BA  65B5               	cpfsgt	detect_color@dist_G& (0+255),b
  1931   0003BC  EFE2  F001         	goto	u4071
  1932   0003C0  EFE4  F001         	goto	u4070
  1933   0003C4                     u4071:
  1934   0003C4  EF00  F002         	goto	l4144
  1935   0003C8                     u4070:
  1936   0003C8                     
  1937                           ; BSR set to: 0
  1938   0003C8  0E2C               	movlw	44
  1939   0003CA  61B5               	cpfslt	detect_color@dist_G& (0+255),b
  1940   0003CC  EFEA  F001         	goto	u4081
  1941   0003D0  EFEC  F001         	goto	u4080
  1942   0003D4                     u4081:
  1943   0003D4  EF00  F002         	goto	l4144
  1944   0003D8                     u4080:
  1945   0003D8                     
  1946                           ; BSR set to: 0
  1947   0003D8  0E13               	movlw	19
  1948   0003DA  65B6               	cpfsgt	detect_color@dist_B& (0+255),b
  1949   0003DC  EFF2  F001         	goto	u4091
  1950   0003E0  EFF4  F001         	goto	u4090
  1951   0003E4                     u4091:
  1952   0003E4  EF00  F002         	goto	l4144
  1953   0003E8                     u4090:
  1954   0003E8                     
  1955                           ; BSR set to: 0
  1956   0003E8  0E17               	movlw	23
  1957   0003EA  61B6               	cpfslt	detect_color@dist_B& (0+255),b
  1958   0003EC  EFFA  F001         	goto	u4101
  1959   0003F0  EFFC  F001         	goto	u4100
  1960   0003F4                     u4101:
  1961   0003F4  EF00  F002         	goto	l4144
  1962   0003F8                     u4100:
  1963   0003F8                     
  1964                           ; BSR set to: 0
  1965                           ;color.c: 114:             color = 2;
  1966   0003F8  0E02               	movlw	2
  1967   0003FA  6FB3               	movwf	detect_color@color& (0+255),b
  1968                           
  1969                           ;color.c: 115:         }
  1970   0003FC  EF3A  F003         	goto	l42
  1971   000400                     l4144:
  1972                           
  1973                           ; BSR set to: 0
  1974   000400  0E1C               	movlw	28
  1975   000402  65B4               	cpfsgt	detect_color@dist_R& (0+255),b
  1976   000404  EF06  F002         	goto	u4111
  1977   000408  EF08  F002         	goto	u4110
  1978   00040C                     u4111:
  1979   00040C  EF34  F002         	goto	l4158
  1980   000410                     u4110:
  1981   000410                     
  1982                           ; BSR set to: 0
  1983   000410  0E23               	movlw	35
  1984   000412  61B4               	cpfslt	detect_color@dist_R& (0+255),b
  1985   000414  EF0E  F002         	goto	u4121
  1986   000418  EF10  F002         	goto	u4120
  1987   00041C                     u4121:
  1988   00041C  EF34  F002         	goto	l4158
  1989   000420                     u4120:
  1990   000420                     
  1991                           ; BSR set to: 0
  1992   000420  0E1F               	movlw	31
  1993   000422  65B5               	cpfsgt	detect_color@dist_G& (0+255),b
  1994   000424  EF16  F002         	goto	u4131
  1995   000428  EF18  F002         	goto	u4130
  1996   00042C                     u4131:
  1997   00042C  EF34  F002         	goto	l4158
  1998   000430                     u4130:
  1999   000430                     
  2000                           ; BSR set to: 0
  2001   000430  0E27               	movlw	39
  2002   000432  61B5               	cpfslt	detect_color@dist_G& (0+255),b
  2003   000434  EF1E  F002         	goto	u4141
  2004   000438  EF20  F002         	goto	u4140
  2005   00043C                     u4141:
  2006   00043C  EF34  F002         	goto	l4158
  2007   000440                     u4140:
  2008   000440                     
  2009                           ; BSR set to: 0
  2010   000440  0E1E               	movlw	30
  2011   000442  65B6               	cpfsgt	detect_color@dist_B& (0+255),b
  2012   000444  EF26  F002         	goto	u4151
  2013   000448  EF28  F002         	goto	u4150
  2014   00044C                     u4151:
  2015   00044C  EF34  F002         	goto	l4158
  2016   000450                     u4150:
  2017   000450                     
  2018                           ; BSR set to: 0
  2019   000450  0E26               	movlw	38
  2020   000452  61B6               	cpfslt	detect_color@dist_B& (0+255),b
  2021   000454  EF2E  F002         	goto	u4161
  2022   000458  EF30  F002         	goto	u4160
  2023   00045C                     u4161:
  2024   00045C  EF34  F002         	goto	l4158
  2025   000460                     u4160:
  2026   000460                     
  2027                           ; BSR set to: 0
  2028                           ;color.c: 117:             color = 3;
  2029   000460  0E03               	movlw	3
  2030   000462  6FB3               	movwf	detect_color@color& (0+255),b
  2031                           
  2032                           ;color.c: 118:         }
  2033   000464  EF3A  F003         	goto	l42
  2034   000468                     l4158:
  2035                           
  2036                           ; BSR set to: 0
  2037   000468  0E31               	movlw	49
  2038   00046A  65B4               	cpfsgt	detect_color@dist_R& (0+255),b
  2039   00046C  EF3A  F002         	goto	u4171
  2040   000470  EF3C  F002         	goto	u4170
  2041   000474                     u4171:
  2042   000474  EF68  F002         	goto	l4172
  2043   000478                     u4170:
  2044   000478                     
  2045                           ; BSR set to: 0
  2046   000478  0E35               	movlw	53
  2047   00047A  61B4               	cpfslt	detect_color@dist_R& (0+255),b
  2048   00047C  EF42  F002         	goto	u4181
  2049   000480  EF44  F002         	goto	u4180
  2050   000484                     u4181:
  2051   000484  EF68  F002         	goto	l4172
  2052   000488                     u4180:
  2053   000488                     
  2054                           ; BSR set to: 0
  2055   000488  0E1D               	movlw	29
  2056   00048A  65B5               	cpfsgt	detect_color@dist_G& (0+255),b
  2057   00048C  EF4A  F002         	goto	u4191
  2058   000490  EF4C  F002         	goto	u4190
  2059   000494                     u4191:
  2060   000494  EF68  F002         	goto	l4172
  2061   000498                     u4190:
  2062   000498                     
  2063                           ; BSR set to: 0
  2064   000498  0E21               	movlw	33
  2065   00049A  61B5               	cpfslt	detect_color@dist_G& (0+255),b
  2066   00049C  EF52  F002         	goto	u4201
  2067   0004A0  EF54  F002         	goto	u4200
  2068   0004A4                     u4201:
  2069   0004A4  EF68  F002         	goto	l4172
  2070   0004A8                     u4200:
  2071   0004A8                     
  2072                           ; BSR set to: 0
  2073   0004A8  0E10               	movlw	16
  2074   0004AA  65B6               	cpfsgt	detect_color@dist_B& (0+255),b
  2075   0004AC  EF5A  F002         	goto	u4211
  2076   0004B0  EF5C  F002         	goto	u4210
  2077   0004B4                     u4211:
  2078   0004B4  EF68  F002         	goto	l4172
  2079   0004B8                     u4210:
  2080   0004B8                     
  2081                           ; BSR set to: 0
  2082   0004B8  0E14               	movlw	20
  2083   0004BA  61B6               	cpfslt	detect_color@dist_B& (0+255),b
  2084   0004BC  EF62  F002         	goto	u4221
  2085   0004C0  EF64  F002         	goto	u4220
  2086   0004C4                     u4221:
  2087   0004C4  EF68  F002         	goto	l4172
  2088   0004C8                     u4220:
  2089   0004C8                     
  2090                           ; BSR set to: 0
  2091                           ;color.c: 120:             color = 4;
  2092   0004C8  0E04               	movlw	4
  2093   0004CA  6FB3               	movwf	detect_color@color& (0+255),b
  2094                           
  2095                           ;color.c: 121:         }
  2096   0004CC  EF3A  F003         	goto	l42
  2097   0004D0                     l4172:
  2098                           
  2099                           ; BSR set to: 0
  2100   0004D0  0E2F               	movlw	47
  2101   0004D2  65B4               	cpfsgt	detect_color@dist_R& (0+255),b
  2102   0004D4  EF6E  F002         	goto	u4231
  2103   0004D8  EF70  F002         	goto	u4230
  2104   0004DC                     u4231:
  2105   0004DC  EF9C  F002         	goto	l4186
  2106   0004E0                     u4230:
  2107   0004E0                     
  2108                           ; BSR set to: 0
  2109   0004E0  0E33               	movlw	51
  2110   0004E2  61B4               	cpfslt	detect_color@dist_R& (0+255),b
  2111   0004E4  EF76  F002         	goto	u4241
  2112   0004E8  EF78  F002         	goto	u4240
  2113   0004EC                     u4241:
  2114   0004EC  EF9C  F002         	goto	l4186
  2115   0004F0                     u4240:
  2116   0004F0                     
  2117                           ; BSR set to: 0
  2118   0004F0  0E1B               	movlw	27
  2119   0004F2  65B5               	cpfsgt	detect_color@dist_G& (0+255),b
  2120   0004F4  EF7E  F002         	goto	u4251
  2121   0004F8  EF80  F002         	goto	u4250
  2122   0004FC                     u4251:
  2123   0004FC  EF9C  F002         	goto	l4186
  2124   000500                     u4250:
  2125   000500                     
  2126                           ; BSR set to: 0
  2127   000500  0E1F               	movlw	31
  2128   000502  61B5               	cpfslt	detect_color@dist_G& (0+255),b
  2129   000504  EF86  F002         	goto	u4261
  2130   000508  EF88  F002         	goto	u4260
  2131   00050C                     u4261:
  2132   00050C  EF9C  F002         	goto	l4186
  2133   000510                     u4260:
  2134   000510                     
  2135                           ; BSR set to: 0
  2136   000510  0E14               	movlw	20
  2137   000512  65B6               	cpfsgt	detect_color@dist_B& (0+255),b
  2138   000514  EF8E  F002         	goto	u4271
  2139   000518  EF90  F002         	goto	u4270
  2140   00051C                     u4271:
  2141   00051C  EF9C  F002         	goto	l4186
  2142   000520                     u4270:
  2143   000520                     
  2144                           ; BSR set to: 0
  2145   000520  0E18               	movlw	24
  2146   000522  61B6               	cpfslt	detect_color@dist_B& (0+255),b
  2147   000524  EF96  F002         	goto	u4281
  2148   000528  EF98  F002         	goto	u4280
  2149   00052C                     u4281:
  2150   00052C  EF9C  F002         	goto	l4186
  2151   000530                     u4280:
  2152   000530                     
  2153                           ; BSR set to: 0
  2154                           ;color.c: 123:             color = 5;
  2155   000530  0E05               	movlw	5
  2156   000532  6FB3               	movwf	detect_color@color& (0+255),b
  2157                           
  2158                           ;color.c: 124:         }
  2159   000534  EF3A  F003         	goto	l42
  2160   000538                     l4186:
  2161                           
  2162                           ; BSR set to: 0
  2163   000538  0E3A               	movlw	58
  2164   00053A  65B4               	cpfsgt	detect_color@dist_R& (0+255),b
  2165   00053C  EFA2  F002         	goto	u4291
  2166   000540  EFA4  F002         	goto	u4290
  2167   000544                     u4291:
  2168   000544  EFD0  F002         	goto	l4200
  2169   000548                     u4290:
  2170   000548                     
  2171                           ; BSR set to: 0
  2172   000548  0E3E               	movlw	62
  2173   00054A  61B4               	cpfslt	detect_color@dist_R& (0+255),b
  2174   00054C  EFAA  F002         	goto	u4301
  2175   000550  EFAC  F002         	goto	u4300
  2176   000554                     u4301:
  2177   000554  EFD0  F002         	goto	l4200
  2178   000558                     u4300:
  2179   000558                     
  2180                           ; BSR set to: 0
  2181   000558  0E15               	movlw	21
  2182   00055A  65B5               	cpfsgt	detect_color@dist_G& (0+255),b
  2183   00055C  EFB2  F002         	goto	u4311
  2184   000560  EFB4  F002         	goto	u4310
  2185   000564                     u4311:
  2186   000564  EFD0  F002         	goto	l4200
  2187   000568                     u4310:
  2188   000568                     
  2189                           ; BSR set to: 0
  2190   000568  0E19               	movlw	25
  2191   00056A  61B5               	cpfslt	detect_color@dist_G& (0+255),b
  2192   00056C  EFBA  F002         	goto	u4321
  2193   000570  EFBC  F002         	goto	u4320
  2194   000574                     u4321:
  2195   000574  EFD0  F002         	goto	l4200
  2196   000578                     u4320:
  2197   000578                     
  2198                           ; BSR set to: 0
  2199   000578  0E0F               	movlw	15
  2200   00057A  65B6               	cpfsgt	detect_color@dist_B& (0+255),b
  2201   00057C  EFC2  F002         	goto	u4331
  2202   000580  EFC4  F002         	goto	u4330
  2203   000584                     u4331:
  2204   000584  EFD0  F002         	goto	l4200
  2205   000588                     u4330:
  2206   000588                     
  2207                           ; BSR set to: 0
  2208   000588  0E13               	movlw	19
  2209   00058A  61B6               	cpfslt	detect_color@dist_B& (0+255),b
  2210   00058C  EFCA  F002         	goto	u4341
  2211   000590  EFCC  F002         	goto	u4340
  2212   000594                     u4341:
  2213   000594  EFD0  F002         	goto	l4200
  2214   000598                     u4340:
  2215   000598                     
  2216                           ; BSR set to: 0
  2217                           ;color.c: 126:             color = 6;
  2218   000598  0E06               	movlw	6
  2219   00059A  6FB3               	movwf	detect_color@color& (0+255),b
  2220                           
  2221                           ;color.c: 127:         }
  2222   00059C  EF3A  F003         	goto	l42
  2223   0005A0                     l4200:
  2224                           
  2225                           ; BSR set to: 0
  2226   0005A0  0E20               	movlw	32
  2227   0005A2  65B4               	cpfsgt	detect_color@dist_R& (0+255),b
  2228   0005A4  EFD6  F002         	goto	u4351
  2229   0005A8  EFD8  F002         	goto	u4350
  2230   0005AC                     u4351:
  2231   0005AC  EF04  F003         	goto	l4214
  2232   0005B0                     u4350:
  2233   0005B0                     
  2234                           ; BSR set to: 0
  2235   0005B0  0E24               	movlw	36
  2236   0005B2  61B4               	cpfslt	detect_color@dist_R& (0+255),b
  2237   0005B4  EFDE  F002         	goto	u4361
  2238   0005B8  EFE0  F002         	goto	u4360
  2239   0005BC                     u4361:
  2240   0005BC  EF04  F003         	goto	l4214
  2241   0005C0                     u4360:
  2242   0005C0                     
  2243                           ; BSR set to: 0
  2244   0005C0  0E25               	movlw	37
  2245   0005C2  65B5               	cpfsgt	detect_color@dist_G& (0+255),b
  2246   0005C4  EFE6  F002         	goto	u4371
  2247   0005C8  EFE8  F002         	goto	u4370
  2248   0005CC                     u4371:
  2249   0005CC  EF04  F003         	goto	l4214
  2250   0005D0                     u4370:
  2251   0005D0                     
  2252                           ; BSR set to: 0
  2253   0005D0  0E29               	movlw	41
  2254   0005D2  61B5               	cpfslt	detect_color@dist_G& (0+255),b
  2255   0005D4  EFEE  F002         	goto	u4381
  2256   0005D8  EFF0  F002         	goto	u4380
  2257   0005DC                     u4381:
  2258   0005DC  EF04  F003         	goto	l4214
  2259   0005E0                     u4380:
  2260   0005E0                     
  2261                           ; BSR set to: 0
  2262   0005E0  0E19               	movlw	25
  2263   0005E2  65B6               	cpfsgt	detect_color@dist_B& (0+255),b
  2264   0005E4  EFF6  F002         	goto	u4391
  2265   0005E8  EFF8  F002         	goto	u4390
  2266   0005EC                     u4391:
  2267   0005EC  EF04  F003         	goto	l4214
  2268   0005F0                     u4390:
  2269   0005F0                     
  2270                           ; BSR set to: 0
  2271   0005F0  0E1D               	movlw	29
  2272   0005F2  61B6               	cpfslt	detect_color@dist_B& (0+255),b
  2273   0005F4  EFFE  F002         	goto	u4401
  2274   0005F8  EF00  F003         	goto	u4400
  2275   0005FC                     u4401:
  2276   0005FC  EF04  F003         	goto	l4214
  2277   000600                     u4400:
  2278   000600                     
  2279                           ; BSR set to: 0
  2280                           ;color.c: 129:             color = 7;
  2281   000600  0E07               	movlw	7
  2282   000602  6FB3               	movwf	detect_color@color& (0+255),b
  2283                           
  2284                           ;color.c: 130:         }
  2285   000604  EF3A  F003         	goto	l42
  2286   000608                     l4214:
  2287                           
  2288                           ; BSR set to: 0
  2289   000608  0E2A               	movlw	42
  2290   00060A  65B4               	cpfsgt	detect_color@dist_R& (0+255),b
  2291   00060C  EF0A  F003         	goto	u4411
  2292   000610  EF0C  F003         	goto	u4410
  2293   000614                     u4411:
  2294   000614  EF38  F003         	goto	l4228
  2295   000618                     u4410:
  2296   000618                     
  2297                           ; BSR set to: 0
  2298   000618  0E2E               	movlw	46
  2299   00061A  61B4               	cpfslt	detect_color@dist_R& (0+255),b
  2300   00061C  EF12  F003         	goto	u4421
  2301   000620  EF14  F003         	goto	u4420
  2302   000624                     u4421:
  2303   000624  EF38  F003         	goto	l4228
  2304   000628                     u4420:
  2305   000628                     
  2306                           ; BSR set to: 0
  2307   000628  0E1F               	movlw	31
  2308   00062A  65B5               	cpfsgt	detect_color@dist_G& (0+255),b
  2309   00062C  EF1A  F003         	goto	u4431
  2310   000630  EF1C  F003         	goto	u4430
  2311   000634                     u4431:
  2312   000634  EF38  F003         	goto	l4228
  2313   000638                     u4430:
  2314   000638                     
  2315                           ; BSR set to: 0
  2316   000638  0E23               	movlw	35
  2317   00063A  61B5               	cpfslt	detect_color@dist_G& (0+255),b
  2318   00063C  EF22  F003         	goto	u4441
  2319   000640  EF24  F003         	goto	u4440
  2320   000644                     u4441:
  2321   000644  EF38  F003         	goto	l4228
  2322   000648                     u4440:
  2323   000648                     
  2324                           ; BSR set to: 0
  2325   000648  0E15               	movlw	21
  2326   00064A  65B6               	cpfsgt	detect_color@dist_B& (0+255),b
  2327   00064C  EF2A  F003         	goto	u4451
  2328   000650  EF2C  F003         	goto	u4450
  2329   000654                     u4451:
  2330   000654  EF38  F003         	goto	l4228
  2331   000658                     u4450:
  2332   000658                     
  2333                           ; BSR set to: 0
  2334   000658  0E19               	movlw	25
  2335   00065A  61B6               	cpfslt	detect_color@dist_B& (0+255),b
  2336   00065C  EF32  F003         	goto	u4461
  2337   000660  EF34  F003         	goto	u4460
  2338   000664                     u4461:
  2339   000664  EF38  F003         	goto	l4228
  2340   000668                     u4460:
  2341   000668                     
  2342                           ; BSR set to: 0
  2343                           ;color.c: 132:             color = 8;
  2344   000668  0E08               	movlw	8
  2345   00066A  6FB3               	movwf	detect_color@color& (0+255),b
  2346                           
  2347                           ;color.c: 133:         }
  2348   00066C  EF3A  F003         	goto	l42
  2349   000670                     l4228:
  2350                           
  2351                           ; BSR set to: 0
  2352                           ;color.c: 135:             color = 0;
  2353   000670  0E00               	movlw	0
  2354   000672  6FB3               	movwf	detect_color@color& (0+255),b
  2355   000674                     l42:
  2356                           
  2357                           ; BSR set to: 0
  2358                           ;color.c: 138:     color_flag = 0;
  2359   000674  0E00               	movlw	0
  2360   000676  6E55               	movwf	_color_flag^0,c
  2361                           
  2362                           ;color.c: 139:     return color;
  2363   000678  51B3               	movf	detect_color@color& (0+255),w,b
  2364   00067A                     
  2365                           ; BSR set to: 0
  2366   00067A  0012               	return		;funcret
  2367   00067C                     __end_of_detect_color:
  2368                           	callstack 0
  2369                           
  2370 ;; *************** function ___xxtofl *****************
  2371 ;; Defined at:
  2372 ;;		line 10 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\xxtofl.c"
  2373 ;; Parameters:    Size  Location     Type
  2374 ;;  sign            1    wreg     unsigned char 
  2375 ;;  val             4    8[COMRAM] long 
  2376 ;; Auto vars:     Size  Location     Type
  2377 ;;  sign            1   16[COMRAM] unsigned char 
  2378 ;;  arg             4   18[COMRAM] unsigned long 
  2379 ;;  exp             1   17[COMRAM] unsigned char 
  2380 ;; Return value:  Size  Location     Type
  2381 ;;                  4    8[COMRAM] unsigned char 
  2382 ;; Registers used:
  2383 ;;		wreg, status,2, status,0
  2384 ;; Tracked objects:
  2385 ;;		On entry : 0/0
  2386 ;;		On exit  : 0/0
  2387 ;;		Unchanged: 0/0
  2388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2389 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2390 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2391 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2392 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2393 ;;Total ram usage:       14 bytes
  2394 ;; Hardware stack levels used: 1
  2395 ;; Hardware stack levels required when called: 7
  2396 ;; This function calls:
  2397 ;;		Nothing
  2398 ;; This function is called by:
  2399 ;;		_detect_color
  2400 ;; This function uses a non-reentrant model
  2401 ;;
  2402                           
  2403                           	psect	text3
  2404   00133A                     __ptext3:
  2405                           	callstack 0
  2406   00133A                     ___xxtofl:
  2407                           	callstack 22
  2408                           
  2409                           ; BSR set to: 0
  2410                           ;incstack = 0
  2411                           ;___xxtofl@sign stored from wreg
  2412   00133A  6E11               	movwf	___xxtofl@sign^0,c
  2413   00133C  5011               	movf	___xxtofl@sign^0,w,c
  2414   00133E  B4D8               	btfsc	status,2,c
  2415   001340  EFA4  F009         	goto	u3151
  2416   001344  EFA6  F009         	goto	u3150
  2417   001348                     u3151:
  2418   001348  EFC8  F009         	goto	l1362
  2419   00134C                     u3150:
  2420   00134C  BE0C               	btfsc	(___xxtofl@val+3)^0,7,c
  2421   00134E  EFAD  F009         	goto	u3160
  2422   001352  EFAB  F009         	goto	u3161
  2423   001356                     u3161:
  2424   001356  EFC8  F009         	goto	l1362
  2425   00135A                     u3160:
  2426   00135A  C009  F00D         	movff	___xxtofl@val,??___xxtofl
  2427   00135E  C00A  F00E         	movff	___xxtofl@val+1,??___xxtofl+1
  2428   001362  C00B  F00F         	movff	___xxtofl@val+2,??___xxtofl+2
  2429   001366  C00C  F010         	movff	___xxtofl@val+3,??___xxtofl+3
  2430   00136A  1E0D               	comf	??___xxtofl^0,f,c
  2431   00136C  1E0E               	comf	(??___xxtofl+1)^0,f,c
  2432   00136E  1E0F               	comf	(??___xxtofl+2)^0,f,c
  2433   001370  1E10               	comf	(??___xxtofl+3)^0,f,c
  2434   001372  2A0D               	incf	??___xxtofl^0,f,c
  2435   001374  0E00               	movlw	0
  2436   001376  220E               	addwfc	(??___xxtofl+1)^0,f,c
  2437   001378  220F               	addwfc	(??___xxtofl+2)^0,f,c
  2438   00137A  2210               	addwfc	(??___xxtofl+3)^0,f,c
  2439   00137C  C00D  F013         	movff	??___xxtofl,___xxtofl@arg
  2440   001380  C00E  F014         	movff	??___xxtofl+1,___xxtofl@arg+1
  2441   001384  C00F  F015         	movff	??___xxtofl+2,___xxtofl@arg+2
  2442   001388  C010  F016         	movff	??___xxtofl+3,___xxtofl@arg+3
  2443   00138C  EFD0  F009         	goto	l3636
  2444   001390                     l1362:
  2445   001390  C009  F013         	movff	___xxtofl@val,___xxtofl@arg
  2446   001394  C00A  F014         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2447   001398  C00B  F015         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2448   00139C  C00C  F016         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2449   0013A0                     l3636:
  2450   0013A0  5009               	movf	___xxtofl@val^0,w,c
  2451   0013A2  100A               	iorwf	(___xxtofl@val+1)^0,w,c
  2452   0013A4  100B               	iorwf	(___xxtofl@val+2)^0,w,c
  2453   0013A6  100C               	iorwf	(___xxtofl@val+3)^0,w,c
  2454   0013A8  A4D8               	btfss	status,2,c
  2455   0013AA  EFD9  F009         	goto	u3171
  2456   0013AE  EFDB  F009         	goto	u3170
  2457   0013B2                     u3171:
  2458   0013B2  EFE5  F009         	goto	l3642
  2459   0013B6                     u3170:
  2460   0013B6  0E00               	movlw	0
  2461   0013B8  6E09               	movwf	?___xxtofl^0,c
  2462   0013BA  0E00               	movlw	0
  2463   0013BC  6E0A               	movwf	(?___xxtofl+1)^0,c
  2464   0013BE  0E00               	movlw	0
  2465   0013C0  6E0B               	movwf	(?___xxtofl+2)^0,c
  2466   0013C2  0E00               	movlw	0
  2467   0013C4  6E0C               	movwf	(?___xxtofl+3)^0,c
  2468   0013C6  EF76  F00A         	goto	l1365
  2469   0013CA                     l3642:
  2470   0013CA  0E96               	movlw	150
  2471   0013CC  6E12               	movwf	___xxtofl@exp^0,c
  2472   0013CE  EFEF  F009         	goto	l3646
  2473   0013D2                     l3644:
  2474   0013D2  2A12               	incf	___xxtofl@exp^0,f,c
  2475   0013D4  90D8               	bcf	status,0,c
  2476   0013D6  3216               	rrcf	(___xxtofl@arg+3)^0,f,c
  2477   0013D8  3215               	rrcf	(___xxtofl@arg+2)^0,f,c
  2478   0013DA  3214               	rrcf	(___xxtofl@arg+1)^0,f,c
  2479   0013DC  3213               	rrcf	___xxtofl@arg^0,f,c
  2480   0013DE                     l3646:
  2481   0013DE  0E00               	movlw	0
  2482   0013E0  1413               	andwf	___xxtofl@arg^0,w,c
  2483   0013E2  6E0D               	movwf	??___xxtofl^0,c
  2484   0013E4  0E00               	movlw	0
  2485   0013E6  1414               	andwf	(___xxtofl@arg+1)^0,w,c
  2486   0013E8  6E0E               	movwf	(??___xxtofl+1)^0,c
  2487   0013EA  0E00               	movlw	0
  2488   0013EC  1415               	andwf	(___xxtofl@arg+2)^0,w,c
  2489   0013EE  6E0F               	movwf	(??___xxtofl+2)^0,c
  2490   0013F0  0EFE               	movlw	254
  2491   0013F2  1416               	andwf	(___xxtofl@arg+3)^0,w,c
  2492   0013F4  6E10               	movwf	(??___xxtofl+3)^0,c
  2493   0013F6  500D               	movf	??___xxtofl^0,w,c
  2494   0013F8  100E               	iorwf	(??___xxtofl+1)^0,w,c
  2495   0013FA  100F               	iorwf	(??___xxtofl+2)^0,w,c
  2496   0013FC  1010               	iorwf	(??___xxtofl+3)^0,w,c
  2497   0013FE  A4D8               	btfss	status,2,c
  2498   001400  EF04  F00A         	goto	u3181
  2499   001404  EF06  F00A         	goto	u3180
  2500   001408                     u3181:
  2501   001408  EFE9  F009         	goto	l3644
  2502   00140C                     u3180:
  2503   00140C  EF14  F00A         	goto	l1369
  2504   001410                     l3648:
  2505   001410  2A12               	incf	___xxtofl@exp^0,f,c
  2506   001412  0E01               	movlw	1
  2507   001414  2613               	addwf	___xxtofl@arg^0,f,c
  2508   001416  0E00               	movlw	0
  2509   001418  2214               	addwfc	(___xxtofl@arg+1)^0,f,c
  2510   00141A  2215               	addwfc	(___xxtofl@arg+2)^0,f,c
  2511   00141C  2216               	addwfc	(___xxtofl@arg+3)^0,f,c
  2512   00141E  90D8               	bcf	status,0,c
  2513   001420  3216               	rrcf	(___xxtofl@arg+3)^0,f,c
  2514   001422  3215               	rrcf	(___xxtofl@arg+2)^0,f,c
  2515   001424  3214               	rrcf	(___xxtofl@arg+1)^0,f,c
  2516   001426  3213               	rrcf	___xxtofl@arg^0,f,c
  2517   001428                     l1369:
  2518   001428  0E00               	movlw	0
  2519   00142A  1413               	andwf	___xxtofl@arg^0,w,c
  2520   00142C  6E0D               	movwf	??___xxtofl^0,c
  2521   00142E  0E00               	movlw	0
  2522   001430  1414               	andwf	(___xxtofl@arg+1)^0,w,c
  2523   001432  6E0E               	movwf	(??___xxtofl+1)^0,c
  2524   001434  0E00               	movlw	0
  2525   001436  1415               	andwf	(___xxtofl@arg+2)^0,w,c
  2526   001438  6E0F               	movwf	(??___xxtofl+2)^0,c
  2527   00143A  0EFF               	movlw	255
  2528   00143C  1416               	andwf	(___xxtofl@arg+3)^0,w,c
  2529   00143E  6E10               	movwf	(??___xxtofl+3)^0,c
  2530   001440  500D               	movf	??___xxtofl^0,w,c
  2531   001442  100E               	iorwf	(??___xxtofl+1)^0,w,c
  2532   001444  100F               	iorwf	(??___xxtofl+2)^0,w,c
  2533   001446  1010               	iorwf	(??___xxtofl+3)^0,w,c
  2534   001448  A4D8               	btfss	status,2,c
  2535   00144A  EF29  F00A         	goto	u3191
  2536   00144E  EF2B  F00A         	goto	u3190
  2537   001452                     u3191:
  2538   001452  EF08  F00A         	goto	l3648
  2539   001456                     u3190:
  2540   001456  EF33  F00A         	goto	l3656
  2541   00145A                     l3654:
  2542   00145A  0612               	decf	___xxtofl@exp^0,f,c
  2543   00145C  90D8               	bcf	status,0,c
  2544   00145E  3613               	rlcf	___xxtofl@arg^0,f,c
  2545   001460  3614               	rlcf	(___xxtofl@arg+1)^0,f,c
  2546   001462  3615               	rlcf	(___xxtofl@arg+2)^0,f,c
  2547   001464  3616               	rlcf	(___xxtofl@arg+3)^0,f,c
  2548   001466                     l3656:
  2549   001466  BE15               	btfsc	(___xxtofl@arg+2)^0,7,c
  2550   001468  EF38  F00A         	goto	u3201
  2551   00146C  EF3A  F00A         	goto	u3200
  2552   001470                     u3201:
  2553   001470  EF42  F00A         	goto	l1376
  2554   001474                     u3200:
  2555   001474  0E02               	movlw	2
  2556   001476  6012               	cpfslt	___xxtofl@exp^0,c
  2557   001478  EF40  F00A         	goto	u3211
  2558   00147C  EF42  F00A         	goto	u3210
  2559   001480                     u3211:
  2560   001480  EF2D  F00A         	goto	l3654
  2561   001484                     u3210:
  2562   001484                     l1376:
  2563   001484  B012               	btfsc	___xxtofl@exp^0,0,c
  2564   001486  EF47  F00A         	goto	u3221
  2565   00148A  EF49  F00A         	goto	u3220
  2566   00148E                     u3221:
  2567   00148E  EF4A  F00A         	goto	l3662
  2568   001492                     u3220:
  2569   001492  9E15               	bcf	(___xxtofl@arg+2)^0,7,c
  2570   001494                     l3662:
  2571   001494  90D8               	bcf	status,0,c
  2572   001496  3212               	rrcf	___xxtofl@exp^0,f,c
  2573   001498  C012  F00D         	movff	___xxtofl@exp,??___xxtofl
  2574   00149C  6A0E               	clrf	(??___xxtofl+1)^0,c
  2575   00149E  6A0F               	clrf	(??___xxtofl+2)^0,c
  2576   0014A0  6A10               	clrf	(??___xxtofl+3)^0,c
  2577   0014A2  C00D  F010         	movff	??___xxtofl,??___xxtofl+3
  2578   0014A6  6A0F               	clrf	(??___xxtofl+2)^0,c
  2579   0014A8  6A0E               	clrf	(??___xxtofl+1)^0,c
  2580   0014AA  6A0D               	clrf	??___xxtofl^0,c
  2581   0014AC  500D               	movf	??___xxtofl^0,w,c
  2582   0014AE  1213               	iorwf	___xxtofl@arg^0,f,c
  2583   0014B0  500E               	movf	(??___xxtofl+1)^0,w,c
  2584   0014B2  1214               	iorwf	(___xxtofl@arg+1)^0,f,c
  2585   0014B4  500F               	movf	(??___xxtofl+2)^0,w,c
  2586   0014B6  1215               	iorwf	(___xxtofl@arg+2)^0,f,c
  2587   0014B8  5010               	movf	(??___xxtofl+3)^0,w,c
  2588   0014BA  1216               	iorwf	(___xxtofl@arg+3)^0,f,c
  2589   0014BC  5011               	movf	___xxtofl@sign^0,w,c
  2590   0014BE  B4D8               	btfsc	status,2,c
  2591   0014C0  EF64  F00A         	goto	u3231
  2592   0014C4  EF66  F00A         	goto	u3230
  2593   0014C8                     u3231:
  2594   0014C8  EF6E  F00A         	goto	l3672
  2595   0014CC                     u3230:
  2596   0014CC  BE0C               	btfsc	(___xxtofl@val+3)^0,7,c
  2597   0014CE  EF6D  F00A         	goto	u3240
  2598   0014D2  EF6B  F00A         	goto	u3241
  2599   0014D6                     u3241:
  2600   0014D6  EF6E  F00A         	goto	l3672
  2601   0014DA                     u3240:
  2602   0014DA  8E16               	bsf	(___xxtofl@arg+3)^0,7,c
  2603   0014DC                     l3672:
  2604   0014DC  C013  F009         	movff	___xxtofl@arg,?___xxtofl
  2605   0014E0  C014  F00A         	movff	___xxtofl@arg+1,?___xxtofl+1
  2606   0014E4  C015  F00B         	movff	___xxtofl@arg+2,?___xxtofl+2
  2607   0014E8  C016  F00C         	movff	___xxtofl@arg+3,?___xxtofl+3
  2608   0014EC                     l1365:
  2609   0014EC  0012               	return		;funcret
  2610   0014EE                     __end_of___xxtofl:
  2611                           	callstack 0
  2612                           
  2613 ;; *************** function ___fltol *****************
  2614 ;; Defined at:
  2615 ;;		line 43 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\fltol.c"
  2616 ;; Parameters:    Size  Location     Type
  2617 ;;  f1              4   72[COMRAM] unsigned char 
  2618 ;; Auto vars:     Size  Location     Type
  2619 ;;  exp1            1   77[COMRAM] unsigned char 
  2620 ;;  sign1           1   76[COMRAM] unsigned char 
  2621 ;; Return value:  Size  Location     Type
  2622 ;;                  4   72[COMRAM] long 
  2623 ;; Registers used:
  2624 ;;		wreg, status,2, status,0
  2625 ;; Tracked objects:
  2626 ;;		On entry : 0/0
  2627 ;;		On exit  : 0/0
  2628 ;;		Unchanged: 0/0
  2629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2630 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2631 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2632 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2633 ;;      Totals:         6       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2634 ;;Total ram usage:       10 bytes
  2635 ;; Hardware stack levels used: 1
  2636 ;; Hardware stack levels required when called: 7
  2637 ;; This function calls:
  2638 ;;		Nothing
  2639 ;; This function is called by:
  2640 ;;		_detect_color
  2641 ;; This function uses a non-reentrant model
  2642 ;;
  2643                           
  2644                           	psect	text4
  2645   00165A                     __ptext4:
  2646                           	callstack 0
  2647   00165A                     ___fltol:
  2648                           	callstack 22
  2649   00165A  344B               	rlcf	(___fltol@f1+2)^0,w,c
  2650   00165C  344C               	rlcf	(___fltol@f1+3)^0,w,c
  2651   00165E  6E4E               	movwf	___fltol@exp1^0,c
  2652   001660  504E               	movf	___fltol@exp1^0,w,c
  2653   001662  A4D8               	btfss	status,2,c
  2654   001664  EF36  F00B         	goto	u3911
  2655   001668  EF38  F00B         	goto	u3910
  2656   00166C                     u3911:
  2657   00166C  EF42  F00B         	goto	l4068
  2658   001670                     u3910:
  2659   001670                     l4064:
  2660   001670  0E00               	movlw	0
  2661   001672  6E49               	movwf	?___fltol^0,c
  2662   001674  0E00               	movlw	0
  2663   001676  6E4A               	movwf	(?___fltol+1)^0,c
  2664   001678  0E00               	movlw	0
  2665   00167A  6E4B               	movwf	(?___fltol+2)^0,c
  2666   00167C  0E00               	movlw	0
  2667   00167E  6E4C               	movwf	(?___fltol+3)^0,c
  2668   001680  EFB0  F00B         	goto	l1004
  2669   001684                     l4068:
  2670   001684  C049  F09F         	movff	___fltol@f1,??___fltol
  2671   001688  C04A  F0A0         	movff	___fltol@f1+1,??___fltol+1
  2672   00168C  C04B  F0A1         	movff	___fltol@f1+2,??___fltol+2
  2673   001690  C04C  F0A2         	movff	___fltol@f1+3,??___fltol+3
  2674   001694  0E20               	movlw	32
  2675   001696  EF53  F00B         	goto	u3920
  2676   00169A                     u3925:
  2677   00169A  0100               	movlb	0	; () banked
  2678   00169C  90D8               	bcf	status,0,c
  2679   00169E  33A2               	rrcf	(??___fltol+3)& (0+255),f,b
  2680   0016A0  33A1               	rrcf	(??___fltol+2)& (0+255),f,b
  2681   0016A2  33A0               	rrcf	(??___fltol+1)& (0+255),f,b
  2682   0016A4  339F               	rrcf	??___fltol& (0+255),f,b
  2683   0016A6                     u3920:
  2684   0016A6  2EE8               	decfsz	wreg,f,c
  2685   0016A8  EF4D  F00B         	goto	u3925
  2686   0016AC  519F               	movf	??___fltol& (0+255),w,b
  2687   0016AE  6E4D               	movwf	___fltol@sign1^0,c
  2688   0016B0                     
  2689                           ; BSR set to: 0
  2690   0016B0  8E4B               	bsf	(___fltol@f1+2)^0,7,c
  2691   0016B2                     
  2692                           ; BSR set to: 0
  2693   0016B2  0EFF               	movlw	255
  2694   0016B4  1649               	andwf	___fltol@f1^0,f,c
  2695   0016B6  0EFF               	movlw	255
  2696   0016B8  164A               	andwf	(___fltol@f1+1)^0,f,c
  2697   0016BA  0EFF               	movlw	255
  2698   0016BC  164B               	andwf	(___fltol@f1+2)^0,f,c
  2699   0016BE  0E00               	movlw	0
  2700   0016C0  164C               	andwf	(___fltol@f1+3)^0,f,c
  2701   0016C2                     
  2702                           ; BSR set to: 0
  2703   0016C2  0E96               	movlw	150
  2704   0016C4  5E4E               	subwf	___fltol@exp1^0,f,c
  2705   0016C6                     
  2706                           ; BSR set to: 0
  2707   0016C6  BE4E               	btfsc	___fltol@exp1^0,7,c
  2708   0016C8  EF6A  F00B         	goto	u3930
  2709   0016CC  EF68  F00B         	goto	u3931
  2710   0016D0                     u3931:
  2711   0016D0  EF80  F00B         	goto	l4088
  2712   0016D4                     u3930:
  2713   0016D4                     
  2714                           ; BSR set to: 0
  2715   0016D4  504E               	movf	___fltol@exp1^0,w,c
  2716   0016D6  0A80               	xorlw	128
  2717   0016D8  0F97               	addlw	151
  2718   0016DA  B0D8               	btfsc	status,0,c
  2719   0016DC  EF72  F00B         	goto	u3941
  2720   0016E0  EF74  F00B         	goto	u3940
  2721   0016E4                     u3941:
  2722   0016E4  EF76  F00B         	goto	l4084
  2723   0016E8                     u3940:
  2724   0016E8  EF38  F00B         	goto	l4064
  2725   0016EC                     l4084:
  2726   0016EC  90D8               	bcf	status,0,c
  2727   0016EE  324C               	rrcf	(___fltol@f1+3)^0,f,c
  2728   0016F0  324B               	rrcf	(___fltol@f1+2)^0,f,c
  2729   0016F2  324A               	rrcf	(___fltol@f1+1)^0,f,c
  2730   0016F4  3249               	rrcf	___fltol@f1^0,f,c
  2731   0016F6  3E4E               	incfsz	___fltol@exp1^0,f,c
  2732   0016F8  EF76  F00B         	goto	l4084
  2733   0016FC  EF98  F00B         	goto	l4098
  2734   001700                     l4088:
  2735                           
  2736                           ; BSR set to: 0
  2737   001700  0E1F               	movlw	31
  2738   001702  644E               	cpfsgt	___fltol@exp1^0,c
  2739   001704  EF86  F00B         	goto	u3951
  2740   001708  EF88  F00B         	goto	u3950
  2741   00170C                     u3951:
  2742   00170C  EF90  F00B         	goto	l4096
  2743   001710                     u3950:
  2744   001710  EF38  F00B         	goto	l4064
  2745   001714                     l4094:
  2746   001714  90D8               	bcf	status,0,c
  2747   001716  3649               	rlcf	___fltol@f1^0,f,c
  2748   001718  364A               	rlcf	(___fltol@f1+1)^0,f,c
  2749   00171A  364B               	rlcf	(___fltol@f1+2)^0,f,c
  2750   00171C  364C               	rlcf	(___fltol@f1+3)^0,f,c
  2751   00171E  064E               	decf	___fltol@exp1^0,f,c
  2752   001720                     l4096:
  2753   001720  504E               	movf	___fltol@exp1^0,w,c
  2754   001722  A4D8               	btfss	status,2,c
  2755   001724  EF96  F00B         	goto	u3961
  2756   001728  EF98  F00B         	goto	u3960
  2757   00172C                     u3961:
  2758   00172C  EF8A  F00B         	goto	l4094
  2759   001730                     u3960:
  2760   001730                     l4098:
  2761   001730  504D               	movf	___fltol@sign1^0,w,c
  2762   001732  B4D8               	btfsc	status,2,c
  2763   001734  EF9E  F00B         	goto	u3971
  2764   001738  EFA0  F00B         	goto	u3970
  2765   00173C                     u3971:
  2766   00173C  EFA8  F00B         	goto	l4102
  2767   001740                     u3970:
  2768   001740  1E4C               	comf	(___fltol@f1+3)^0,f,c
  2769   001742  1E4B               	comf	(___fltol@f1+2)^0,f,c
  2770   001744  1E4A               	comf	(___fltol@f1+1)^0,f,c
  2771   001746  6C49               	negf	___fltol@f1^0,c
  2772   001748  0E00               	movlw	0
  2773   00174A  224A               	addwfc	(___fltol@f1+1)^0,f,c
  2774   00174C  224B               	addwfc	(___fltol@f1+2)^0,f,c
  2775   00174E  224C               	addwfc	(___fltol@f1+3)^0,f,c
  2776   001750                     l4102:
  2777   001750  C049  F049         	movff	___fltol@f1,?___fltol
  2778   001754  C04A  F04A         	movff	___fltol@f1+1,?___fltol+1
  2779   001758  C04B  F04B         	movff	___fltol@f1+2,?___fltol+2
  2780   00175C  C04C  F04C         	movff	___fltol@f1+3,?___fltol+3
  2781   001760                     l1004:
  2782   001760  0012               	return		;funcret
  2783   001762                     __end_of___fltol:
  2784                           	callstack 0
  2785                           
  2786 ;; *************** function ___flmul *****************
  2787 ;; Defined at:
  2788 ;;		line 8 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\sprcmul.c"
  2789 ;; Parameters:    Size  Location     Type
  2790 ;;  b               4   47[COMRAM] long 
  2791 ;;  a               4   51[COMRAM] long 
  2792 ;; Auto vars:     Size  Location     Type
  2793 ;;  prod            4   66[COMRAM] struct .
  2794 ;;  grs             4   60[COMRAM] unsigned long 
  2795 ;;  temp            2   70[COMRAM] struct .
  2796 ;;  bexp            1   65[COMRAM] unsigned char 
  2797 ;;  aexp            1   64[COMRAM] unsigned char 
  2798 ;;  sign            1   59[COMRAM] unsigned char 
  2799 ;; Return value:  Size  Location     Type
  2800 ;;                  4   47[COMRAM] unsigned char 
  2801 ;; Registers used:
  2802 ;;		wreg, status,2, status,0, prodl, prodh
  2803 ;; Tracked objects:
  2804 ;;		On entry : 0/0
  2805 ;;		On exit  : 0/0
  2806 ;;		Unchanged: 0/0
  2807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2808 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2809 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2810 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2811 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2812 ;;Total ram usage:       25 bytes
  2813 ;; Hardware stack levels used: 1
  2814 ;; Hardware stack levels required when called: 7
  2815 ;; This function calls:
  2816 ;;		Nothing
  2817 ;; This function is called by:
  2818 ;;		_detect_color
  2819 ;; This function uses a non-reentrant model
  2820 ;;
  2821                           
  2822                           	psect	text5
  2823   00067C                     __ptext5:
  2824                           	callstack 0
  2825   00067C                     ___flmul:
  2826                           	callstack 22
  2827   00067C  5033               	movf	(___flmul@b+3)^0,w,c
  2828   00067E  0B80               	andlw	128
  2829   000680  6E3C               	movwf	___flmul@sign^0,c
  2830   000682  5033               	movf	(___flmul@b+3)^0,w,c
  2831   000684  2433               	addwf	(___flmul@b+3)^0,w,c
  2832   000686  6E42               	movwf	___flmul@bexp^0,c
  2833   000688  AE32               	btfss	(___flmul@b+2)^0,7,c
  2834   00068A  EF49  F003         	goto	u2891
  2835   00068E  EF4B  F003         	goto	u2890
  2836   000692                     u2891:
  2837   000692  EF4C  F003         	goto	l3462
  2838   000696                     u2890:
  2839   000696  8042               	bsf	___flmul@bexp^0,0,c
  2840   000698                     l3462:
  2841   000698  5042               	movf	___flmul@bexp^0,w,c
  2842   00069A  B4D8               	btfsc	status,2,c
  2843   00069C  EF52  F003         	goto	u2901
  2844   0006A0  EF54  F003         	goto	u2900
  2845   0006A4                     u2901:
  2846   0006A4  EF67  F003         	goto	l3470
  2847   0006A8                     u2900:
  2848   0006A8  2842               	incf	___flmul@bexp^0,w,c
  2849   0006AA  A4D8               	btfss	status,2,c
  2850   0006AC  EF5A  F003         	goto	u2911
  2851   0006B0  EF5C  F003         	goto	u2910
  2852   0006B4                     u2911:
  2853   0006B4  EF64  F003         	goto	l3468
  2854   0006B8                     u2910:
  2855   0006B8  0E00               	movlw	0
  2856   0006BA  6E30               	movwf	___flmul@b^0,c
  2857   0006BC  0E00               	movlw	0
  2858   0006BE  6E31               	movwf	(___flmul@b+1)^0,c
  2859   0006C0  0E00               	movlw	0
  2860   0006C2  6E32               	movwf	(___flmul@b+2)^0,c
  2861   0006C4  0E00               	movlw	0
  2862   0006C6  6E33               	movwf	(___flmul@b+3)^0,c
  2863   0006C8                     l3468:
  2864   0006C8  8E32               	bsf	(___flmul@b+2)^0,7,c
  2865   0006CA  EF6F  F003         	goto	l3472
  2866   0006CE                     l3470:
  2867   0006CE  0E00               	movlw	0
  2868   0006D0  6E30               	movwf	___flmul@b^0,c
  2869   0006D2  0E00               	movlw	0
  2870   0006D4  6E31               	movwf	(___flmul@b+1)^0,c
  2871   0006D6  0E00               	movlw	0
  2872   0006D8  6E32               	movwf	(___flmul@b+2)^0,c
  2873   0006DA  0E00               	movlw	0
  2874   0006DC  6E33               	movwf	(___flmul@b+3)^0,c
  2875   0006DE                     l3472:
  2876   0006DE  5037               	movf	(___flmul@a+3)^0,w,c
  2877   0006E0  0B80               	andlw	128
  2878   0006E2  1A3C               	xorwf	___flmul@sign^0,f,c
  2879   0006E4  5037               	movf	(___flmul@a+3)^0,w,c
  2880   0006E6  2437               	addwf	(___flmul@a+3)^0,w,c
  2881   0006E8  6E41               	movwf	___flmul@aexp^0,c
  2882   0006EA  AE36               	btfss	(___flmul@a+2)^0,7,c
  2883   0006EC  EF7A  F003         	goto	u2921
  2884   0006F0  EF7C  F003         	goto	u2920
  2885   0006F4                     u2921:
  2886   0006F4  EF7D  F003         	goto	l3480
  2887   0006F8                     u2920:
  2888   0006F8  8041               	bsf	___flmul@aexp^0,0,c
  2889   0006FA                     l3480:
  2890   0006FA  5041               	movf	___flmul@aexp^0,w,c
  2891   0006FC  B4D8               	btfsc	status,2,c
  2892   0006FE  EF83  F003         	goto	u2931
  2893   000702  EF85  F003         	goto	u2930
  2894   000706                     u2931:
  2895   000706  EF98  F003         	goto	l3488
  2896   00070A                     u2930:
  2897   00070A  2841               	incf	___flmul@aexp^0,w,c
  2898   00070C  A4D8               	btfss	status,2,c
  2899   00070E  EF8B  F003         	goto	u2941
  2900   000712  EF8D  F003         	goto	u2940
  2901   000716                     u2941:
  2902   000716  EF95  F003         	goto	l3486
  2903   00071A                     u2940:
  2904   00071A  0E00               	movlw	0
  2905   00071C  6E34               	movwf	___flmul@a^0,c
  2906   00071E  0E00               	movlw	0
  2907   000720  6E35               	movwf	(___flmul@a+1)^0,c
  2908   000722  0E00               	movlw	0
  2909   000724  6E36               	movwf	(___flmul@a+2)^0,c
  2910   000726  0E00               	movlw	0
  2911   000728  6E37               	movwf	(___flmul@a+3)^0,c
  2912   00072A                     l3486:
  2913   00072A  8E36               	bsf	(___flmul@a+2)^0,7,c
  2914   00072C  EFA0  F003         	goto	l1321
  2915   000730                     l3488:
  2916   000730  0E00               	movlw	0
  2917   000732  6E34               	movwf	___flmul@a^0,c
  2918   000734  0E00               	movlw	0
  2919   000736  6E35               	movwf	(___flmul@a+1)^0,c
  2920   000738  0E00               	movlw	0
  2921   00073A  6E36               	movwf	(___flmul@a+2)^0,c
  2922   00073C  0E00               	movlw	0
  2923   00073E  6E37               	movwf	(___flmul@a+3)^0,c
  2924   000740                     l1321:
  2925   000740  5041               	movf	___flmul@aexp^0,w,c
  2926   000742  B4D8               	btfsc	status,2,c
  2927   000744  EFA6  F003         	goto	u2951
  2928   000748  EFA8  F003         	goto	u2950
  2929   00074C                     u2951:
  2930   00074C  EFB0  F003         	goto	l3492
  2931   000750                     u2950:
  2932   000750  5042               	movf	___flmul@bexp^0,w,c
  2933   000752  A4D8               	btfss	status,2,c
  2934   000754  EFAE  F003         	goto	u2961
  2935   000758  EFB0  F003         	goto	u2960
  2936   00075C                     u2961:
  2937   00075C  EFBA  F003         	goto	l3496
  2938   000760                     u2960:
  2939   000760                     l3492:
  2940   000760  0E00               	movlw	0
  2941   000762  6E30               	movwf	?___flmul^0,c
  2942   000764  0E00               	movlw	0
  2943   000766  6E31               	movwf	(?___flmul+1)^0,c
  2944   000768  0E00               	movlw	0
  2945   00076A  6E32               	movwf	(?___flmul+2)^0,c
  2946   00076C  0E00               	movlw	0
  2947   00076E  6E33               	movwf	(?___flmul+3)^0,c
  2948   000770  EF52  F005         	goto	l1325
  2949   000774                     l3496:
  2950   000774  5036               	movf	(___flmul@a+2)^0,w,c
  2951   000776  0230               	mulwf	___flmul@b^0,c
  2952   000778  CFF3 F047          	movff	prodl,___flmul@temp
  2953   00077C  CFF4 F048          	movff	prodh,___flmul@temp+1
  2954   000780  5047               	movf	___flmul@temp^0,w,c
  2955   000782  6E3D               	movwf	___flmul@grs^0,c
  2956   000784  6A3E               	clrf	(___flmul@grs+1)^0,c
  2957   000786  6A3F               	clrf	(___flmul@grs+2)^0,c
  2958   000788  6A40               	clrf	(___flmul@grs+3)^0,c
  2959   00078A  5048               	movf	(___flmul@temp+1)^0,w,c
  2960   00078C  6E43               	movwf	___flmul@prod^0,c
  2961   00078E  6A44               	clrf	(___flmul@prod+1)^0,c
  2962   000790  6A45               	clrf	(___flmul@prod+2)^0,c
  2963   000792  6A46               	clrf	(___flmul@prod+3)^0,c
  2964   000794  5035               	movf	(___flmul@a+1)^0,w,c
  2965   000796  0231               	mulwf	(___flmul@b+1)^0,c
  2966   000798  CFF3 F047          	movff	prodl,___flmul@temp
  2967   00079C  CFF4 F048          	movff	prodh,___flmul@temp+1
  2968   0007A0  5047               	movf	___flmul@temp^0,w,c
  2969   0007A2  263D               	addwf	___flmul@grs^0,f,c
  2970   0007A4  0E00               	movlw	0
  2971   0007A6  223E               	addwfc	(___flmul@grs+1)^0,f,c
  2972   0007A8  223F               	addwfc	(___flmul@grs+2)^0,f,c
  2973   0007AA  2240               	addwfc	(___flmul@grs+3)^0,f,c
  2974   0007AC  5048               	movf	(___flmul@temp+1)^0,w,c
  2975   0007AE  2643               	addwf	___flmul@prod^0,f,c
  2976   0007B0  0E00               	movlw	0
  2977   0007B2  2244               	addwfc	(___flmul@prod+1)^0,f,c
  2978   0007B4  2245               	addwfc	(___flmul@prod+2)^0,f,c
  2979   0007B6  2246               	addwfc	(___flmul@prod+3)^0,f,c
  2980   0007B8  5034               	movf	___flmul@a^0,w,c
  2981   0007BA  0232               	mulwf	(___flmul@b+2)^0,c
  2982   0007BC  CFF3 F047          	movff	prodl,___flmul@temp
  2983   0007C0  CFF4 F048          	movff	prodh,___flmul@temp+1
  2984   0007C4  5047               	movf	___flmul@temp^0,w,c
  2985   0007C6  263D               	addwf	___flmul@grs^0,f,c
  2986   0007C8  0E00               	movlw	0
  2987   0007CA  223E               	addwfc	(___flmul@grs+1)^0,f,c
  2988   0007CC  223F               	addwfc	(___flmul@grs+2)^0,f,c
  2989   0007CE  2240               	addwfc	(___flmul@grs+3)^0,f,c
  2990   0007D0  5048               	movf	(___flmul@temp+1)^0,w,c
  2991   0007D2  2643               	addwf	___flmul@prod^0,f,c
  2992   0007D4  0E00               	movlw	0
  2993   0007D6  2244               	addwfc	(___flmul@prod+1)^0,f,c
  2994   0007D8  2245               	addwfc	(___flmul@prod+2)^0,f,c
  2995   0007DA  2246               	addwfc	(___flmul@prod+3)^0,f,c
  2996   0007DC  C03F  F040         	movff	___flmul@grs+2,___flmul@grs+3
  2997   0007E0  C03E  F03F         	movff	___flmul@grs+1,___flmul@grs+2
  2998   0007E4  C03D  F03E         	movff	___flmul@grs,___flmul@grs+1
  2999   0007E8  6A3D               	clrf	___flmul@grs^0,c
  3000   0007EA  5034               	movf	___flmul@a^0,w,c
  3001   0007EC  0231               	mulwf	(___flmul@b+1)^0,c
  3002   0007EE  CFF3 F047          	movff	prodl,___flmul@temp
  3003   0007F2  CFF4 F048          	movff	prodh,___flmul@temp+1
  3004   0007F6  5047               	movf	___flmul@temp^0,w,c
  3005   0007F8  263D               	addwf	___flmul@grs^0,f,c
  3006   0007FA  5048               	movf	(___flmul@temp+1)^0,w,c
  3007   0007FC  223E               	addwfc	(___flmul@grs+1)^0,f,c
  3008   0007FE  0E00               	movlw	0
  3009   000800  223F               	addwfc	(___flmul@grs+2)^0,f,c
  3010   000802  0E00               	movlw	0
  3011   000804  2240               	addwfc	(___flmul@grs+3)^0,f,c
  3012   000806  5035               	movf	(___flmul@a+1)^0,w,c
  3013   000808  0230               	mulwf	___flmul@b^0,c
  3014   00080A  CFF3 F047          	movff	prodl,___flmul@temp
  3015   00080E  CFF4 F048          	movff	prodh,___flmul@temp+1
  3016   000812  5047               	movf	___flmul@temp^0,w,c
  3017   000814  263D               	addwf	___flmul@grs^0,f,c
  3018   000816  5048               	movf	(___flmul@temp+1)^0,w,c
  3019   000818  223E               	addwfc	(___flmul@grs+1)^0,f,c
  3020   00081A  0E00               	movlw	0
  3021   00081C  223F               	addwfc	(___flmul@grs+2)^0,f,c
  3022   00081E  0E00               	movlw	0
  3023   000820  2240               	addwfc	(___flmul@grs+3)^0,f,c
  3024   000822  C03F  F040         	movff	___flmul@grs+2,___flmul@grs+3
  3025   000826  C03E  F03F         	movff	___flmul@grs+1,___flmul@grs+2
  3026   00082A  C03D  F03E         	movff	___flmul@grs,___flmul@grs+1
  3027   00082E  6A3D               	clrf	___flmul@grs^0,c
  3028   000830  5034               	movf	___flmul@a^0,w,c
  3029   000832  0230               	mulwf	___flmul@b^0,c
  3030   000834  CFF3 F047          	movff	prodl,___flmul@temp
  3031   000838  CFF4 F048          	movff	prodh,___flmul@temp+1
  3032   00083C  5047               	movf	___flmul@temp^0,w,c
  3033   00083E  263D               	addwf	___flmul@grs^0,f,c
  3034   000840  5048               	movf	(___flmul@temp+1)^0,w,c
  3035   000842  223E               	addwfc	(___flmul@grs+1)^0,f,c
  3036   000844  0E00               	movlw	0
  3037   000846  223F               	addwfc	(___flmul@grs+2)^0,f,c
  3038   000848  0E00               	movlw	0
  3039   00084A  2240               	addwfc	(___flmul@grs+3)^0,f,c
  3040   00084C  5036               	movf	(___flmul@a+2)^0,w,c
  3041   00084E  0231               	mulwf	(___flmul@b+1)^0,c
  3042   000850  CFF3 F047          	movff	prodl,___flmul@temp
  3043   000854  CFF4 F048          	movff	prodh,___flmul@temp+1
  3044   000858  5047               	movf	___flmul@temp^0,w,c
  3045   00085A  2643               	addwf	___flmul@prod^0,f,c
  3046   00085C  5048               	movf	(___flmul@temp+1)^0,w,c
  3047   00085E  2244               	addwfc	(___flmul@prod+1)^0,f,c
  3048   000860  0E00               	movlw	0
  3049   000862  2245               	addwfc	(___flmul@prod+2)^0,f,c
  3050   000864  0E00               	movlw	0
  3051   000866  2246               	addwfc	(___flmul@prod+3)^0,f,c
  3052   000868  5035               	movf	(___flmul@a+1)^0,w,c
  3053   00086A  0232               	mulwf	(___flmul@b+2)^0,c
  3054   00086C  CFF3 F047          	movff	prodl,___flmul@temp
  3055   000870  CFF4 F048          	movff	prodh,___flmul@temp+1
  3056   000874  5047               	movf	___flmul@temp^0,w,c
  3057   000876  2643               	addwf	___flmul@prod^0,f,c
  3058   000878  5048               	movf	(___flmul@temp+1)^0,w,c
  3059   00087A  2244               	addwfc	(___flmul@prod+1)^0,f,c
  3060   00087C  0E00               	movlw	0
  3061   00087E  2245               	addwfc	(___flmul@prod+2)^0,f,c
  3062   000880  0E00               	movlw	0
  3063   000882  2246               	addwfc	(___flmul@prod+3)^0,f,c
  3064   000884  5036               	movf	(___flmul@a+2)^0,w,c
  3065   000886  0232               	mulwf	(___flmul@b+2)^0,c
  3066   000888  CFF3 F047          	movff	prodl,___flmul@temp
  3067   00088C  CFF4 F048          	movff	prodh,___flmul@temp+1
  3068   000890  5047               	movf	___flmul@temp^0,w,c
  3069   000892  6E38               	movwf	??___flmul^0,c
  3070   000894  5048               	movf	(___flmul@temp+1)^0,w,c
  3071   000896  6E39               	movwf	(??___flmul+1)^0,c
  3072   000898  6A3A               	clrf	(??___flmul+2)^0,c
  3073   00089A  6A3B               	clrf	(??___flmul+3)^0,c
  3074   00089C  C03A  F03B         	movff	??___flmul+2,??___flmul+3
  3075   0008A0  C039  F03A         	movff	??___flmul+1,??___flmul+2
  3076   0008A4  C038  F039         	movff	??___flmul,??___flmul+1
  3077   0008A8  6A38               	clrf	??___flmul^0,c
  3078   0008AA  5038               	movf	??___flmul^0,w,c
  3079   0008AC  2643               	addwf	___flmul@prod^0,f,c
  3080   0008AE  5039               	movf	(??___flmul+1)^0,w,c
  3081   0008B0  2244               	addwfc	(___flmul@prod+1)^0,f,c
  3082   0008B2  503A               	movf	(??___flmul+2)^0,w,c
  3083   0008B4  2245               	addwfc	(___flmul@prod+2)^0,f,c
  3084   0008B6  503B               	movf	(??___flmul+3)^0,w,c
  3085   0008B8  2246               	addwfc	(___flmul@prod+3)^0,f,c
  3086   0008BA  C03D  F038         	movff	___flmul@grs,??___flmul
  3087   0008BE  C03E  F039         	movff	___flmul@grs+1,??___flmul+1
  3088   0008C2  C03F  F03A         	movff	___flmul@grs+2,??___flmul+2
  3089   0008C6  C040  F03B         	movff	___flmul@grs+3,??___flmul+3
  3090   0008CA  0E19               	movlw	25
  3091   0008CC  EF6D  F004         	goto	u2970
  3092   0008D0                     u2975:
  3093   0008D0  90D8               	bcf	status,0,c
  3094   0008D2  323B               	rrcf	(??___flmul+3)^0,f,c
  3095   0008D4  323A               	rrcf	(??___flmul+2)^0,f,c
  3096   0008D6  3239               	rrcf	(??___flmul+1)^0,f,c
  3097   0008D8  3238               	rrcf	??___flmul^0,f,c
  3098   0008DA                     u2970:
  3099   0008DA  2EE8               	decfsz	wreg,f,c
  3100   0008DC  EF68  F004         	goto	u2975
  3101   0008E0  5038               	movf	??___flmul^0,w,c
  3102   0008E2  2643               	addwf	___flmul@prod^0,f,c
  3103   0008E4  5039               	movf	(??___flmul+1)^0,w,c
  3104   0008E6  2244               	addwfc	(___flmul@prod+1)^0,f,c
  3105   0008E8  503A               	movf	(??___flmul+2)^0,w,c
  3106   0008EA  2245               	addwfc	(___flmul@prod+2)^0,f,c
  3107   0008EC  503B               	movf	(??___flmul+3)^0,w,c
  3108   0008EE  2246               	addwfc	(___flmul@prod+3)^0,f,c
  3109   0008F0  C03F  F040         	movff	___flmul@grs+2,___flmul@grs+3
  3110   0008F4  C03E  F03F         	movff	___flmul@grs+1,___flmul@grs+2
  3111   0008F8  C03D  F03E         	movff	___flmul@grs,___flmul@grs+1
  3112   0008FC  6A3D               	clrf	___flmul@grs^0,c
  3113   0008FE  5041               	movf	___flmul@aexp^0,w,c
  3114   000900  C042  F038         	movff	___flmul@bexp,??___flmul
  3115   000904  6A39               	clrf	(??___flmul+1)^0,c
  3116   000906  2638               	addwf	??___flmul^0,f,c
  3117   000908  0E00               	movlw	0
  3118   00090A  2239               	addwfc	(??___flmul+1)^0,f,c
  3119   00090C  0E82               	movlw	130
  3120   00090E  2438               	addwf	??___flmul^0,w,c
  3121   000910  6E47               	movwf	___flmul@temp^0,c
  3122   000912  0EFF               	movlw	255
  3123   000914  2039               	addwfc	(??___flmul+1)^0,w,c
  3124   000916  6E48               	movwf	(___flmul@temp+1)^0,c
  3125   000918  EFA3  F004         	goto	l3544
  3126   00091C                     l3538:
  3127   00091C  90D8               	bcf	status,0,c
  3128   00091E  3643               	rlcf	___flmul@prod^0,f,c
  3129   000920  3644               	rlcf	(___flmul@prod+1)^0,f,c
  3130   000922  3645               	rlcf	(___flmul@prod+2)^0,f,c
  3131   000924  3646               	rlcf	(___flmul@prod+3)^0,f,c
  3132   000926  AE40               	btfss	(___flmul@grs+3)^0,7,c
  3133   000928  EF98  F004         	goto	u2981
  3134   00092C  EF9A  F004         	goto	u2980
  3135   000930                     u2981:
  3136   000930  EF9B  F004         	goto	l1328
  3137   000934                     u2980:
  3138   000934  8043               	bsf	___flmul@prod^0,0,c
  3139   000936                     l1328:
  3140   000936  90D8               	bcf	status,0,c
  3141   000938  363D               	rlcf	___flmul@grs^0,f,c
  3142   00093A  363E               	rlcf	(___flmul@grs+1)^0,f,c
  3143   00093C  363F               	rlcf	(___flmul@grs+2)^0,f,c
  3144   00093E  3640               	rlcf	(___flmul@grs+3)^0,f,c
  3145   000940  0647               	decf	___flmul@temp^0,f,c
  3146   000942  A0D8               	btfss	status,0,c
  3147   000944  0648               	decf	(___flmul@temp+1)^0,f,c
  3148   000946                     l3544:
  3149   000946  AE45               	btfss	(___flmul@prod+2)^0,7,c
  3150   000948  EFA8  F004         	goto	u2991
  3151   00094C  EFAA  F004         	goto	u2990
  3152   000950                     u2991:
  3153   000950  EF8E  F004         	goto	l3538
  3154   000954                     u2990:
  3155   000954  0E00               	movlw	0
  3156   000956  6E41               	movwf	___flmul@aexp^0,c
  3157   000958  AE40               	btfss	(___flmul@grs+3)^0,7,c
  3158   00095A  EFB1  F004         	goto	u3001
  3159   00095E  EFB3  F004         	goto	u3000
  3160   000962                     u3001:
  3161   000962  EFD7  F004         	goto	l1330
  3162   000966                     u3000:
  3163   000966  0EFF               	movlw	255
  3164   000968  143D               	andwf	___flmul@grs^0,w,c
  3165   00096A  6E38               	movwf	??___flmul^0,c
  3166   00096C  0EFF               	movlw	255
  3167   00096E  143E               	andwf	(___flmul@grs+1)^0,w,c
  3168   000970  6E39               	movwf	(??___flmul+1)^0,c
  3169   000972  0EFF               	movlw	255
  3170   000974  143F               	andwf	(___flmul@grs+2)^0,w,c
  3171   000976  6E3A               	movwf	(??___flmul+2)^0,c
  3172   000978  0E7F               	movlw	127
  3173   00097A  1440               	andwf	(___flmul@grs+3)^0,w,c
  3174   00097C  6E3B               	movwf	(??___flmul+3)^0,c
  3175   00097E  5038               	movf	??___flmul^0,w,c
  3176   000980  1039               	iorwf	(??___flmul+1)^0,w,c
  3177   000982  103A               	iorwf	(??___flmul+2)^0,w,c
  3178   000984  103B               	iorwf	(??___flmul+3)^0,w,c
  3179   000986  B4D8               	btfsc	status,2,c
  3180   000988  EFC8  F004         	goto	u3011
  3181   00098C  EFCA  F004         	goto	u3010
  3182   000990                     u3011:
  3183   000990  EFCE  F004         	goto	l1331
  3184   000994                     u3010:
  3185   000994                     l3552:
  3186   000994  0E01               	movlw	1
  3187   000996  6E41               	movwf	___flmul@aexp^0,c
  3188   000998  EFD7  F004         	goto	l1330
  3189   00099C                     l1331:
  3190   00099C  A043               	btfss	___flmul@prod^0,0,c
  3191   00099E  EFD3  F004         	goto	u3021
  3192   0009A2  EFD5  F004         	goto	u3020
  3193   0009A6                     u3021:
  3194   0009A6  EFD7  F004         	goto	l1330
  3195   0009AA                     u3020:
  3196   0009AA  EFCA  F004         	goto	l3552
  3197   0009AE                     l1330:
  3198   0009AE  5041               	movf	___flmul@aexp^0,w,c
  3199   0009B0  B4D8               	btfsc	status,2,c
  3200   0009B2  EFDD  F004         	goto	u3031
  3201   0009B6  EFDF  F004         	goto	u3030
  3202   0009BA                     u3031:
  3203   0009BA  EF03  F005         	goto	l3564
  3204   0009BE                     u3030:
  3205   0009BE  0E01               	movlw	1
  3206   0009C0  2643               	addwf	___flmul@prod^0,f,c
  3207   0009C2  0E00               	movlw	0
  3208   0009C4  2244               	addwfc	(___flmul@prod+1)^0,f,c
  3209   0009C6  2245               	addwfc	(___flmul@prod+2)^0,f,c
  3210   0009C8  2246               	addwfc	(___flmul@prod+3)^0,f,c
  3211   0009CA  A046               	btfss	(___flmul@prod+3)^0,0,c
  3212   0009CC  EFEA  F004         	goto	u3041
  3213   0009D0  EFEC  F004         	goto	u3040
  3214   0009D4                     u3041:
  3215   0009D4  EF03  F005         	goto	l3564
  3216   0009D8                     u3040:
  3217   0009D8  C043  F038         	movff	___flmul@prod,??___flmul
  3218   0009DC  C044  F039         	movff	___flmul@prod+1,??___flmul+1
  3219   0009E0  C045  F03A         	movff	___flmul@prod+2,??___flmul+2
  3220   0009E4  C046  F03B         	movff	___flmul@prod+3,??___flmul+3
  3221   0009E8  343B               	rlcf	(??___flmul+3)^0,w,c
  3222   0009EA  323B               	rrcf	(??___flmul+3)^0,f,c
  3223   0009EC  323A               	rrcf	(??___flmul+2)^0,f,c
  3224   0009EE  3239               	rrcf	(??___flmul+1)^0,f,c
  3225   0009F0  3238               	rrcf	??___flmul^0,f,c
  3226   0009F2  C038  F043         	movff	??___flmul,___flmul@prod
  3227   0009F6  C039  F044         	movff	??___flmul+1,___flmul@prod+1
  3228   0009FA  C03A  F045         	movff	??___flmul+2,___flmul@prod+2
  3229   0009FE  C03B  F046         	movff	??___flmul+3,___flmul@prod+3
  3230   000A02  4A47               	infsnz	___flmul@temp^0,f,c
  3231   000A04  2A48               	incf	(___flmul@temp+1)^0,f,c
  3232   000A06                     l3564:
  3233   000A06  BE48               	btfsc	(___flmul@temp+1)^0,7,c
  3234   000A08  EF0E  F005         	goto	u3051
  3235   000A0C  5048               	movf	(___flmul@temp+1)^0,w,c
  3236   000A0E  E108               	bnz	u3050
  3237   000A10  2847               	incf	___flmul@temp^0,w,c
  3238   000A12  A0D8               	btfss	status,0,c
  3239   000A14  EF0E  F005         	goto	u3051
  3240   000A18  EF10  F005         	goto	u3050
  3241   000A1C                     u3051:
  3242   000A1C  EF1A  F005         	goto	l3568
  3243   000A20                     u3050:
  3244   000A20  0E00               	movlw	0
  3245   000A22  6E43               	movwf	___flmul@prod^0,c
  3246   000A24  0E00               	movlw	0
  3247   000A26  6E44               	movwf	(___flmul@prod+1)^0,c
  3248   000A28  0E80               	movlw	128
  3249   000A2A  6E45               	movwf	(___flmul@prod+2)^0,c
  3250   000A2C  0E7F               	movlw	127
  3251   000A2E  6E46               	movwf	(___flmul@prod+3)^0,c
  3252   000A30  EF48  F005         	goto	l3580
  3253   000A34                     l3568:
  3254   000A34  BE48               	btfsc	(___flmul@temp+1)^0,7,c
  3255   000A36  EF27  F005         	goto	u3060
  3256   000A3A  5048               	movf	(___flmul@temp+1)^0,w,c
  3257   000A3C  E106               	bnz	u3061
  3258   000A3E  0447               	decf	___flmul@temp^0,w,c
  3259   000A40  B0D8               	btfsc	status,0,c
  3260   000A42  EF25  F005         	goto	u3061
  3261   000A46  EF27  F005         	goto	u3060
  3262   000A4A                     u3061:
  3263   000A4A  EF33  F005         	goto	l1338
  3264   000A4E                     u3060:
  3265   000A4E  0E00               	movlw	0
  3266   000A50  6E43               	movwf	___flmul@prod^0,c
  3267   000A52  0E00               	movlw	0
  3268   000A54  6E44               	movwf	(___flmul@prod+1)^0,c
  3269   000A56  0E00               	movlw	0
  3270   000A58  6E45               	movwf	(___flmul@prod+2)^0,c
  3271   000A5A  0E00               	movlw	0
  3272   000A5C  6E46               	movwf	(___flmul@prod+3)^0,c
  3273   000A5E  0E00               	movlw	0
  3274   000A60  6E3C               	movwf	___flmul@sign^0,c
  3275   000A62  EF48  F005         	goto	l3580
  3276   000A66                     l1338:
  3277   000A66  C047  F042         	movff	___flmul@temp,___flmul@bexp
  3278   000A6A  0EFF               	movlw	255
  3279   000A6C  1643               	andwf	___flmul@prod^0,f,c
  3280   000A6E  0EFF               	movlw	255
  3281   000A70  1644               	andwf	(___flmul@prod+1)^0,f,c
  3282   000A72  0E7F               	movlw	127
  3283   000A74  1645               	andwf	(___flmul@prod+2)^0,f,c
  3284   000A76  0E00               	movlw	0
  3285   000A78  1646               	andwf	(___flmul@prod+3)^0,f,c
  3286   000A7A  A042               	btfss	___flmul@bexp^0,0,c
  3287   000A7C  EF42  F005         	goto	u3071
  3288   000A80  EF44  F005         	goto	u3070
  3289   000A84                     u3071:
  3290   000A84  EF45  F005         	goto	l3578
  3291   000A88                     u3070:
  3292   000A88  8E45               	bsf	(___flmul@prod+2)^0,7,c
  3293   000A8A                     l3578:
  3294   000A8A  90D8               	bcf	status,0,c
  3295   000A8C  3042               	rrcf	___flmul@bexp^0,w,c
  3296   000A8E  6E46               	movwf	(___flmul@prod+3)^0,c
  3297   000A90                     l3580:
  3298   000A90  503C               	movf	___flmul@sign^0,w,c
  3299   000A92  1246               	iorwf	(___flmul@prod+3)^0,f,c
  3300   000A94  C043  F030         	movff	___flmul@prod,?___flmul
  3301   000A98  C044  F031         	movff	___flmul@prod+1,?___flmul+1
  3302   000A9C  C045  F032         	movff	___flmul@prod+2,?___flmul+2
  3303   000AA0  C046  F033         	movff	___flmul@prod+3,?___flmul+3
  3304   000AA4                     l1325:
  3305   000AA4  0012               	return		;funcret
  3306   000AA6                     __end_of___flmul:
  3307                           	callstack 0
  3308                           
  3309 ;; *************** function ___fldiv *****************
  3310 ;; Defined at:
  3311 ;;		line 11 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\sprcdiv.c"
  3312 ;; Parameters:    Size  Location     Type
  3313 ;;  b               4   22[COMRAM] unsigned char 
  3314 ;;  a               4   26[COMRAM] unsigned char 
  3315 ;; Auto vars:     Size  Location     Type
  3316 ;;  grs             4   41[COMRAM] unsigned long 
  3317 ;;  rem             4   34[COMRAM] unsigned long 
  3318 ;;  new_exp         2   39[COMRAM] short 
  3319 ;;  aexp            1   46[COMRAM] unsigned char 
  3320 ;;  bexp            1   45[COMRAM] unsigned char 
  3321 ;;  sign            1   38[COMRAM] unsigned char 
  3322 ;; Return value:  Size  Location     Type
  3323 ;;                  4   22[COMRAM] unsigned char 
  3324 ;; Registers used:
  3325 ;;		wreg, status,2, status,0
  3326 ;; Tracked objects:
  3327 ;;		On entry : 0/0
  3328 ;;		On exit  : 0/0
  3329 ;;		Unchanged: 0/0
  3330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3331 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3332 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3333 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3334 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3335 ;;Total ram usage:       25 bytes
  3336 ;; Hardware stack levels used: 1
  3337 ;; Hardware stack levels required when called: 7
  3338 ;; This function calls:
  3339 ;;		Nothing
  3340 ;; This function is called by:
  3341 ;;		_detect_color
  3342 ;; This function uses a non-reentrant model
  3343 ;;
  3344                           
  3345                           	psect	text6
  3346   000AA6                     __ptext6:
  3347                           	callstack 0
  3348   000AA6                     ___fldiv:
  3349                           	callstack 22
  3350   000AA6  501A               	movf	(___fldiv@b+3)^0,w,c
  3351   000AA8  0B80               	andlw	128
  3352   000AAA  6E27               	movwf	___fldiv@sign^0,c
  3353   000AAC  501A               	movf	(___fldiv@b+3)^0,w,c
  3354   000AAE  241A               	addwf	(___fldiv@b+3)^0,w,c
  3355   000AB0  6E2E               	movwf	___fldiv@bexp^0,c
  3356   000AB2  AE19               	btfss	(___fldiv@b+2)^0,7,c
  3357   000AB4  EF5E  F005         	goto	u2661
  3358   000AB8  EF60  F005         	goto	u2660
  3359   000ABC                     u2661:
  3360   000ABC  EF61  F005         	goto	l3324
  3361   000AC0                     u2660:
  3362   000AC0  802E               	bsf	___fldiv@bexp^0,0,c
  3363   000AC2                     l3324:
  3364   000AC2  502E               	movf	___fldiv@bexp^0,w,c
  3365   000AC4  B4D8               	btfsc	status,2,c
  3366   000AC6  EF67  F005         	goto	u2671
  3367   000ACA  EF69  F005         	goto	u2670
  3368   000ACE                     u2671:
  3369   000ACE  EF7E  F005         	goto	l3334
  3370   000AD2                     u2670:
  3371   000AD2  282E               	incf	___fldiv@bexp^0,w,c
  3372   000AD4  A4D8               	btfss	status,2,c
  3373   000AD6  EF6F  F005         	goto	u2681
  3374   000ADA  EF71  F005         	goto	u2680
  3375   000ADE                     u2681:
  3376   000ADE  EF79  F005         	goto	l3330
  3377   000AE2                     u2680:
  3378   000AE2  0E00               	movlw	0
  3379   000AE4  6E17               	movwf	___fldiv@b^0,c
  3380   000AE6  0E00               	movlw	0
  3381   000AE8  6E18               	movwf	(___fldiv@b+1)^0,c
  3382   000AEA  0E00               	movlw	0
  3383   000AEC  6E19               	movwf	(___fldiv@b+2)^0,c
  3384   000AEE  0E00               	movlw	0
  3385   000AF0  6E1A               	movwf	(___fldiv@b+3)^0,c
  3386   000AF2                     l3330:
  3387   000AF2  8E19               	bsf	(___fldiv@b+2)^0,7,c
  3388   000AF4  0E00               	movlw	0
  3389   000AF6  6E1A               	movwf	(___fldiv@b+3)^0,c
  3390   000AF8  EF86  F005         	goto	l3336
  3391   000AFC                     l3334:
  3392   000AFC  0E00               	movlw	0
  3393   000AFE  6E17               	movwf	___fldiv@b^0,c
  3394   000B00  0E00               	movlw	0
  3395   000B02  6E18               	movwf	(___fldiv@b+1)^0,c
  3396   000B04  0E00               	movlw	0
  3397   000B06  6E19               	movwf	(___fldiv@b+2)^0,c
  3398   000B08  0E00               	movlw	0
  3399   000B0A  6E1A               	movwf	(___fldiv@b+3)^0,c
  3400   000B0C                     l3336:
  3401   000B0C  501E               	movf	(___fldiv@a+3)^0,w,c
  3402   000B0E  0B80               	andlw	128
  3403   000B10  1A27               	xorwf	___fldiv@sign^0,f,c
  3404   000B12  501E               	movf	(___fldiv@a+3)^0,w,c
  3405   000B14  241E               	addwf	(___fldiv@a+3)^0,w,c
  3406   000B16  6E2F               	movwf	___fldiv@aexp^0,c
  3407   000B18  AE1D               	btfss	(___fldiv@a+2)^0,7,c
  3408   000B1A  EF91  F005         	goto	u2691
  3409   000B1E  EF93  F005         	goto	u2690
  3410   000B22                     u2691:
  3411   000B22  EF94  F005         	goto	l3344
  3412   000B26                     u2690:
  3413   000B26  802F               	bsf	___fldiv@aexp^0,0,c
  3414   000B28                     l3344:
  3415   000B28  502F               	movf	___fldiv@aexp^0,w,c
  3416   000B2A  B4D8               	btfsc	status,2,c
  3417   000B2C  EF9A  F005         	goto	u2701
  3418   000B30  EF9C  F005         	goto	u2700
  3419   000B34                     u2701:
  3420   000B34  EFB1  F005         	goto	l3354
  3421   000B38                     u2700:
  3422   000B38  282F               	incf	___fldiv@aexp^0,w,c
  3423   000B3A  A4D8               	btfss	status,2,c
  3424   000B3C  EFA2  F005         	goto	u2711
  3425   000B40  EFA4  F005         	goto	u2710
  3426   000B44                     u2711:
  3427   000B44  EFAC  F005         	goto	l3350
  3428   000B48                     u2710:
  3429   000B48  0E00               	movlw	0
  3430   000B4A  6E1B               	movwf	___fldiv@a^0,c
  3431   000B4C  0E00               	movlw	0
  3432   000B4E  6E1C               	movwf	(___fldiv@a+1)^0,c
  3433   000B50  0E00               	movlw	0
  3434   000B52  6E1D               	movwf	(___fldiv@a+2)^0,c
  3435   000B54  0E00               	movlw	0
  3436   000B56  6E1E               	movwf	(___fldiv@a+3)^0,c
  3437   000B58                     l3350:
  3438   000B58  8E1D               	bsf	(___fldiv@a+2)^0,7,c
  3439   000B5A  0E00               	movlw	0
  3440   000B5C  6E1E               	movwf	(___fldiv@a+3)^0,c
  3441   000B5E  EFB9  F005         	goto	l3356
  3442   000B62                     l3354:
  3443   000B62  0E00               	movlw	0
  3444   000B64  6E1B               	movwf	___fldiv@a^0,c
  3445   000B66  0E00               	movlw	0
  3446   000B68  6E1C               	movwf	(___fldiv@a+1)^0,c
  3447   000B6A  0E00               	movlw	0
  3448   000B6C  6E1D               	movwf	(___fldiv@a+2)^0,c
  3449   000B6E  0E00               	movlw	0
  3450   000B70  6E1E               	movwf	(___fldiv@a+3)^0,c
  3451   000B72                     l3356:
  3452   000B72  501B               	movf	___fldiv@a^0,w,c
  3453   000B74  101C               	iorwf	(___fldiv@a+1)^0,w,c
  3454   000B76  101D               	iorwf	(___fldiv@a+2)^0,w,c
  3455   000B78  101E               	iorwf	(___fldiv@a+3)^0,w,c
  3456   000B7A  A4D8               	btfss	status,2,c
  3457   000B7C  EFC2  F005         	goto	u2721
  3458   000B80  EFC4  F005         	goto	u2720
  3459   000B84                     u2721:
  3460   000B84  EFDC  F005         	goto	l3368
  3461   000B88                     u2720:
  3462   000B88  0E00               	movlw	0
  3463   000B8A  6E17               	movwf	___fldiv@b^0,c
  3464   000B8C  0E00               	movlw	0
  3465   000B8E  6E18               	movwf	(___fldiv@b+1)^0,c
  3466   000B90  0E00               	movlw	0
  3467   000B92  6E19               	movwf	(___fldiv@b+2)^0,c
  3468   000B94  0E00               	movlw	0
  3469   000B96  6E1A               	movwf	(___fldiv@b+3)^0,c
  3470   000B98  0E80               	movlw	128
  3471   000B9A  1219               	iorwf	(___fldiv@b+2)^0,f,c
  3472   000B9C  0E7F               	movlw	127
  3473   000B9E  121A               	iorwf	(___fldiv@b+3)^0,f,c
  3474   000BA0                     l3362:
  3475   000BA0  5027               	movf	___fldiv@sign^0,w,c
  3476   000BA2  121A               	iorwf	(___fldiv@b+3)^0,f,c
  3477   000BA4  C017  F017         	movff	___fldiv@b,?___fldiv
  3478   000BA8  C018  F018         	movff	___fldiv@b+1,?___fldiv+1
  3479   000BAC  C019  F019         	movff	___fldiv@b+2,?___fldiv+2
  3480   000BB0  C01A  F01A         	movff	___fldiv@b+3,?___fldiv+3
  3481   000BB4  EF1F  F007         	goto	l1289
  3482   000BB8                     l3368:
  3483   000BB8  502E               	movf	___fldiv@bexp^0,w,c
  3484   000BBA  A4D8               	btfss	status,2,c
  3485   000BBC  EFE2  F005         	goto	u2731
  3486   000BC0  EFE4  F005         	goto	u2730
  3487   000BC4                     u2731:
  3488   000BC4  EFEE  F005         	goto	l3376
  3489   000BC8                     u2730:
  3490   000BC8  0E00               	movlw	0
  3491   000BCA  6E17               	movwf	?___fldiv^0,c
  3492   000BCC  0E00               	movlw	0
  3493   000BCE  6E18               	movwf	(?___fldiv+1)^0,c
  3494   000BD0  0E00               	movlw	0
  3495   000BD2  6E19               	movwf	(?___fldiv+2)^0,c
  3496   000BD4  0E00               	movlw	0
  3497   000BD6  6E1A               	movwf	(?___fldiv+3)^0,c
  3498   000BD8  EF1F  F007         	goto	l1289
  3499   000BDC                     l3376:
  3500   000BDC  502F               	movf	___fldiv@aexp^0,w,c
  3501   000BDE  C02E  F01F         	movff	___fldiv@bexp,??___fldiv
  3502   000BE2  6A20               	clrf	(??___fldiv+1)^0,c
  3503   000BE4  5E1F               	subwf	??___fldiv^0,f,c
  3504   000BE6  0E00               	movlw	0
  3505   000BE8  5A20               	subwfb	(??___fldiv+1)^0,f,c
  3506   000BEA  0E7F               	movlw	127
  3507   000BEC  241F               	addwf	??___fldiv^0,w,c
  3508   000BEE  6E28               	movwf	___fldiv@new_exp^0,c
  3509   000BF0  0E00               	movlw	0
  3510   000BF2  2020               	addwfc	(??___fldiv+1)^0,w,c
  3511   000BF4  6E29               	movwf	(___fldiv@new_exp+1)^0,c
  3512   000BF6  C017  F023         	movff	___fldiv@b,___fldiv@rem
  3513   000BFA  C018  F024         	movff	___fldiv@b+1,___fldiv@rem+1
  3514   000BFE  C019  F025         	movff	___fldiv@b+2,___fldiv@rem+2
  3515   000C02  C01A  F026         	movff	___fldiv@b+3,___fldiv@rem+3
  3516   000C06  0E00               	movlw	0
  3517   000C08  6E17               	movwf	___fldiv@b^0,c
  3518   000C0A  0E00               	movlw	0
  3519   000C0C  6E18               	movwf	(___fldiv@b+1)^0,c
  3520   000C0E  0E00               	movlw	0
  3521   000C10  6E19               	movwf	(___fldiv@b+2)^0,c
  3522   000C12  0E00               	movlw	0
  3523   000C14  6E1A               	movwf	(___fldiv@b+3)^0,c
  3524   000C16  0E00               	movlw	0
  3525   000C18  6E2A               	movwf	___fldiv@grs^0,c
  3526   000C1A  0E00               	movlw	0
  3527   000C1C  6E2B               	movwf	(___fldiv@grs+1)^0,c
  3528   000C1E  0E00               	movlw	0
  3529   000C20  6E2C               	movwf	(___fldiv@grs+2)^0,c
  3530   000C22  0E00               	movlw	0
  3531   000C24  6E2D               	movwf	(___fldiv@grs+3)^0,c
  3532   000C26  0E00               	movlw	0
  3533   000C28  6E2F               	movwf	___fldiv@aexp^0,c
  3534   000C2A  EF4F  F006         	goto	l1291
  3535   000C2E                     l3386:
  3536   000C2E  502F               	movf	___fldiv@aexp^0,w,c
  3537   000C30  B4D8               	btfsc	status,2,c
  3538   000C32  EF1D  F006         	goto	u2741
  3539   000C36  EF1F  F006         	goto	u2740
  3540   000C3A                     u2741:
  3541   000C3A  EF36  F006         	goto	l3394
  3542   000C3E                     u2740:
  3543   000C3E  90D8               	bcf	status,0,c
  3544   000C40  3623               	rlcf	___fldiv@rem^0,f,c
  3545   000C42  3624               	rlcf	(___fldiv@rem+1)^0,f,c
  3546   000C44  3625               	rlcf	(___fldiv@rem+2)^0,f,c
  3547   000C46  3626               	rlcf	(___fldiv@rem+3)^0,f,c
  3548   000C48  90D8               	bcf	status,0,c
  3549   000C4A  3617               	rlcf	___fldiv@b^0,f,c
  3550   000C4C  3618               	rlcf	(___fldiv@b+1)^0,f,c
  3551   000C4E  3619               	rlcf	(___fldiv@b+2)^0,f,c
  3552   000C50  361A               	rlcf	(___fldiv@b+3)^0,f,c
  3553   000C52  AE2D               	btfss	(___fldiv@grs+3)^0,7,c
  3554   000C54  EF2E  F006         	goto	u2751
  3555   000C58  EF30  F006         	goto	u2750
  3556   000C5C                     u2751:
  3557   000C5C  EF31  F006         	goto	l1294
  3558   000C60                     u2750:
  3559   000C60  8017               	bsf	___fldiv@b^0,0,c
  3560   000C62                     l1294:
  3561   000C62  90D8               	bcf	status,0,c
  3562   000C64  362A               	rlcf	___fldiv@grs^0,f,c
  3563   000C66  362B               	rlcf	(___fldiv@grs+1)^0,f,c
  3564   000C68  362C               	rlcf	(___fldiv@grs+2)^0,f,c
  3565   000C6A  362D               	rlcf	(___fldiv@grs+3)^0,f,c
  3566   000C6C                     l3394:
  3567   000C6C  501B               	movf	___fldiv@a^0,w,c
  3568   000C6E  5C23               	subwf	___fldiv@rem^0,w,c
  3569   000C70  501C               	movf	(___fldiv@a+1)^0,w,c
  3570   000C72  5824               	subwfb	(___fldiv@rem+1)^0,w,c
  3571   000C74  501D               	movf	(___fldiv@a+2)^0,w,c
  3572   000C76  5825               	subwfb	(___fldiv@rem+2)^0,w,c
  3573   000C78  501E               	movf	(___fldiv@a+3)^0,w,c
  3574   000C7A  5826               	subwfb	(___fldiv@rem+3)^0,w,c
  3575   000C7C  A0D8               	btfss	status,0,c
  3576   000C7E  EF43  F006         	goto	u2761
  3577   000C82  EF45  F006         	goto	u2760
  3578   000C86                     u2761:
  3579   000C86  EF4E  F006         	goto	l3400
  3580   000C8A                     u2760:
  3581   000C8A  8C2D               	bsf	(___fldiv@grs+3)^0,6,c
  3582   000C8C  501B               	movf	___fldiv@a^0,w,c
  3583   000C8E  5E23               	subwf	___fldiv@rem^0,f,c
  3584   000C90  501C               	movf	(___fldiv@a+1)^0,w,c
  3585   000C92  5A24               	subwfb	(___fldiv@rem+1)^0,f,c
  3586   000C94  501D               	movf	(___fldiv@a+2)^0,w,c
  3587   000C96  5A25               	subwfb	(___fldiv@rem+2)^0,f,c
  3588   000C98  501E               	movf	(___fldiv@a+3)^0,w,c
  3589   000C9A  5A26               	subwfb	(___fldiv@rem+3)^0,f,c
  3590   000C9C                     l3400:
  3591   000C9C  2A2F               	incf	___fldiv@aexp^0,f,c
  3592   000C9E                     l1291:
  3593   000C9E  0E19               	movlw	25
  3594   000CA0  642F               	cpfsgt	___fldiv@aexp^0,c
  3595   000CA2  EF55  F006         	goto	u2771
  3596   000CA6  EF57  F006         	goto	u2770
  3597   000CAA                     u2771:
  3598   000CAA  EF17  F006         	goto	l3386
  3599   000CAE                     u2770:
  3600   000CAE  5023               	movf	___fldiv@rem^0,w,c
  3601   000CB0  1024               	iorwf	(___fldiv@rem+1)^0,w,c
  3602   000CB2  1025               	iorwf	(___fldiv@rem+2)^0,w,c
  3603   000CB4  1026               	iorwf	(___fldiv@rem+3)^0,w,c
  3604   000CB6  B4D8               	btfsc	status,2,c
  3605   000CB8  EF60  F006         	goto	u2781
  3606   000CBC  EF62  F006         	goto	u2780
  3607   000CC0                     u2781:
  3608   000CC0  EF7A  F006         	goto	l3412
  3609   000CC4                     u2780:
  3610   000CC4  802A               	bsf	___fldiv@grs^0,0,c
  3611   000CC6  EF7A  F006         	goto	l3412
  3612   000CCA                     l3406:
  3613   000CCA  90D8               	bcf	status,0,c
  3614   000CCC  3617               	rlcf	___fldiv@b^0,f,c
  3615   000CCE  3618               	rlcf	(___fldiv@b+1)^0,f,c
  3616   000CD0  3619               	rlcf	(___fldiv@b+2)^0,f,c
  3617   000CD2  361A               	rlcf	(___fldiv@b+3)^0,f,c
  3618   000CD4  AE2D               	btfss	(___fldiv@grs+3)^0,7,c
  3619   000CD6  EF6F  F006         	goto	u2791
  3620   000CDA  EF71  F006         	goto	u2790
  3621   000CDE                     u2791:
  3622   000CDE  EF72  F006         	goto	l1300
  3623   000CE2                     u2790:
  3624   000CE2  8017               	bsf	___fldiv@b^0,0,c
  3625   000CE4                     l1300:
  3626   000CE4  90D8               	bcf	status,0,c
  3627   000CE6  362A               	rlcf	___fldiv@grs^0,f,c
  3628   000CE8  362B               	rlcf	(___fldiv@grs+1)^0,f,c
  3629   000CEA  362C               	rlcf	(___fldiv@grs+2)^0,f,c
  3630   000CEC  362D               	rlcf	(___fldiv@grs+3)^0,f,c
  3631   000CEE  0628               	decf	___fldiv@new_exp^0,f,c
  3632   000CF0  A0D8               	btfss	status,0,c
  3633   000CF2  0629               	decf	(___fldiv@new_exp+1)^0,f,c
  3634   000CF4                     l3412:
  3635   000CF4  AE19               	btfss	(___fldiv@b+2)^0,7,c
  3636   000CF6  EF7F  F006         	goto	u2801
  3637   000CFA  EF81  F006         	goto	u2800
  3638   000CFE                     u2801:
  3639   000CFE  EF65  F006         	goto	l3406
  3640   000D02                     u2800:
  3641   000D02  0E00               	movlw	0
  3642   000D04  6E2F               	movwf	___fldiv@aexp^0,c
  3643   000D06  AE2D               	btfss	(___fldiv@grs+3)^0,7,c
  3644   000D08  EF88  F006         	goto	u2811
  3645   000D0C  EF8A  F006         	goto	u2810
  3646   000D10                     u2811:
  3647   000D10  EFAE  F006         	goto	l1302
  3648   000D14                     u2810:
  3649   000D14  0EFF               	movlw	255
  3650   000D16  142A               	andwf	___fldiv@grs^0,w,c
  3651   000D18  6E1F               	movwf	??___fldiv^0,c
  3652   000D1A  0EFF               	movlw	255
  3653   000D1C  142B               	andwf	(___fldiv@grs+1)^0,w,c
  3654   000D1E  6E20               	movwf	(??___fldiv+1)^0,c
  3655   000D20  0EFF               	movlw	255
  3656   000D22  142C               	andwf	(___fldiv@grs+2)^0,w,c
  3657   000D24  6E21               	movwf	(??___fldiv+2)^0,c
  3658   000D26  0E7F               	movlw	127
  3659   000D28  142D               	andwf	(___fldiv@grs+3)^0,w,c
  3660   000D2A  6E22               	movwf	(??___fldiv+3)^0,c
  3661   000D2C  501F               	movf	??___fldiv^0,w,c
  3662   000D2E  1020               	iorwf	(??___fldiv+1)^0,w,c
  3663   000D30  1021               	iorwf	(??___fldiv+2)^0,w,c
  3664   000D32  1022               	iorwf	(??___fldiv+3)^0,w,c
  3665   000D34  B4D8               	btfsc	status,2,c
  3666   000D36  EF9F  F006         	goto	u2821
  3667   000D3A  EFA1  F006         	goto	u2820
  3668   000D3E                     u2821:
  3669   000D3E  EFA5  F006         	goto	l1303
  3670   000D42                     u2820:
  3671   000D42                     l3420:
  3672   000D42  0E01               	movlw	1
  3673   000D44  6E2F               	movwf	___fldiv@aexp^0,c
  3674   000D46  EFAE  F006         	goto	l1302
  3675   000D4A                     l1303:
  3676   000D4A  A017               	btfss	___fldiv@b^0,0,c
  3677   000D4C  EFAA  F006         	goto	u2831
  3678   000D50  EFAC  F006         	goto	u2830
  3679   000D54                     u2831:
  3680   000D54  EFAE  F006         	goto	l1302
  3681   000D58                     u2830:
  3682   000D58  EFA1  F006         	goto	l3420
  3683   000D5C                     l1302:
  3684   000D5C  502F               	movf	___fldiv@aexp^0,w,c
  3685   000D5E  B4D8               	btfsc	status,2,c
  3686   000D60  EFB4  F006         	goto	u2841
  3687   000D64  EFB6  F006         	goto	u2840
  3688   000D68                     u2841:
  3689   000D68  EFDA  F006         	goto	l3432
  3690   000D6C                     u2840:
  3691   000D6C  0E01               	movlw	1
  3692   000D6E  2617               	addwf	___fldiv@b^0,f,c
  3693   000D70  0E00               	movlw	0
  3694   000D72  2218               	addwfc	(___fldiv@b+1)^0,f,c
  3695   000D74  2219               	addwfc	(___fldiv@b+2)^0,f,c
  3696   000D76  221A               	addwfc	(___fldiv@b+3)^0,f,c
  3697   000D78  A01A               	btfss	(___fldiv@b+3)^0,0,c
  3698   000D7A  EFC1  F006         	goto	u2851
  3699   000D7E  EFC3  F006         	goto	u2850
  3700   000D82                     u2851:
  3701   000D82  EFDA  F006         	goto	l3432
  3702   000D86                     u2850:
  3703   000D86  C017  F01F         	movff	___fldiv@b,??___fldiv
  3704   000D8A  C018  F020         	movff	___fldiv@b+1,??___fldiv+1
  3705   000D8E  C019  F021         	movff	___fldiv@b+2,??___fldiv+2
  3706   000D92  C01A  F022         	movff	___fldiv@b+3,??___fldiv+3
  3707   000D96  3422               	rlcf	(??___fldiv+3)^0,w,c
  3708   000D98  3222               	rrcf	(??___fldiv+3)^0,f,c
  3709   000D9A  3221               	rrcf	(??___fldiv+2)^0,f,c
  3710   000D9C  3220               	rrcf	(??___fldiv+1)^0,f,c
  3711   000D9E  321F               	rrcf	??___fldiv^0,f,c
  3712   000DA0  C01F  F017         	movff	??___fldiv,___fldiv@b
  3713   000DA4  C020  F018         	movff	??___fldiv+1,___fldiv@b+1
  3714   000DA8  C021  F019         	movff	??___fldiv+2,___fldiv@b+2
  3715   000DAC  C022  F01A         	movff	??___fldiv+3,___fldiv@b+3
  3716   000DB0  4A28               	infsnz	___fldiv@new_exp^0,f,c
  3717   000DB2  2A29               	incf	(___fldiv@new_exp+1)^0,f,c
  3718   000DB4                     l3432:
  3719   000DB4  BE29               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3720   000DB6  EFE5  F006         	goto	u2861
  3721   000DBA  5029               	movf	(___fldiv@new_exp+1)^0,w,c
  3722   000DBC  E108               	bnz	u2860
  3723   000DBE  2828               	incf	___fldiv@new_exp^0,w,c
  3724   000DC0  A0D8               	btfss	status,0,c
  3725   000DC2  EFE5  F006         	goto	u2861
  3726   000DC6  EFE7  F006         	goto	u2860
  3727   000DCA                     u2861:
  3728   000DCA  EFF2  F006         	goto	l3436
  3729   000DCE                     u2860:
  3730   000DCE  0E00               	movlw	0
  3731   000DD0  6E29               	movwf	(___fldiv@new_exp+1)^0,c
  3732   000DD2  6828               	setf	___fldiv@new_exp^0,c
  3733   000DD4  0E00               	movlw	0
  3734   000DD6  6E17               	movwf	___fldiv@b^0,c
  3735   000DD8  0E00               	movlw	0
  3736   000DDA  6E18               	movwf	(___fldiv@b+1)^0,c
  3737   000DDC  0E00               	movlw	0
  3738   000DDE  6E19               	movwf	(___fldiv@b+2)^0,c
  3739   000DE0  0E00               	movlw	0
  3740   000DE2  6E1A               	movwf	(___fldiv@b+3)^0,c
  3741   000DE4                     l3436:
  3742   000DE4  BE29               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3743   000DE6  EFFF  F006         	goto	u2870
  3744   000DEA  5029               	movf	(___fldiv@new_exp+1)^0,w,c
  3745   000DEC  E106               	bnz	u2871
  3746   000DEE  0428               	decf	___fldiv@new_exp^0,w,c
  3747   000DF0  B0D8               	btfsc	status,0,c
  3748   000DF2  EFFD  F006         	goto	u2871
  3749   000DF6  EFFF  F006         	goto	u2870
  3750   000DFA                     u2871:
  3751   000DFA  EF0D  F007         	goto	l3440
  3752   000DFE                     u2870:
  3753   000DFE  0E00               	movlw	0
  3754   000E00  6E29               	movwf	(___fldiv@new_exp+1)^0,c
  3755   000E02  0E00               	movlw	0
  3756   000E04  6E28               	movwf	___fldiv@new_exp^0,c
  3757   000E06  0E00               	movlw	0
  3758   000E08  6E17               	movwf	___fldiv@b^0,c
  3759   000E0A  0E00               	movlw	0
  3760   000E0C  6E18               	movwf	(___fldiv@b+1)^0,c
  3761   000E0E  0E00               	movlw	0
  3762   000E10  6E19               	movwf	(___fldiv@b+2)^0,c
  3763   000E12  0E00               	movlw	0
  3764   000E14  6E1A               	movwf	(___fldiv@b+3)^0,c
  3765   000E16  0E00               	movlw	0
  3766   000E18  6E27               	movwf	___fldiv@sign^0,c
  3767   000E1A                     l3440:
  3768   000E1A  C028  F02E         	movff	___fldiv@new_exp,___fldiv@bexp
  3769   000E1E  A02E               	btfss	___fldiv@bexp^0,0,c
  3770   000E20  EF14  F007         	goto	u2881
  3771   000E24  EF16  F007         	goto	u2880
  3772   000E28                     u2881:
  3773   000E28  EF19  F007         	goto	l3446
  3774   000E2C                     u2880:
  3775   000E2C  8E19               	bsf	(___fldiv@b+2)^0,7,c
  3776   000E2E  EF1A  F007         	goto	l3448
  3777   000E32                     l3446:
  3778   000E32  9E19               	bcf	(___fldiv@b+2)^0,7,c
  3779   000E34                     l3448:
  3780   000E34  90D8               	bcf	status,0,c
  3781   000E36  302E               	rrcf	___fldiv@bexp^0,w,c
  3782   000E38  6E1A               	movwf	(___fldiv@b+3)^0,c
  3783   000E3A  EFD0  F005         	goto	l3362
  3784   000E3E                     l1289:
  3785   000E3E  0012               	return		;funcret
  3786   000E40                     __end_of___fldiv:
  3787                           	callstack 0
  3788                           
  3789 ;; *************** function _color_click_init *****************
  3790 ;; Defined at:
  3791 ;;		line 6 in file "color.c"
  3792 ;; Parameters:    Size  Location     Type
  3793 ;;		None
  3794 ;; Auto vars:     Size  Location     Type
  3795 ;;		None
  3796 ;; Return value:  Size  Location     Type
  3797 ;;                  1    wreg      void 
  3798 ;; Registers used:
  3799 ;;		wreg, status,2, status,0, cstack
  3800 ;; Tracked objects:
  3801 ;;		On entry : 0/0
  3802 ;;		On exit  : 0/0
  3803 ;;		Unchanged: 0/0
  3804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3807 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3808 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3809 ;;Total ram usage:        1 bytes
  3810 ;; Hardware stack levels used: 1
  3811 ;; Hardware stack levels required when called: 10
  3812 ;; This function calls:
  3813 ;;		_I2C_2_Master_Init
  3814 ;;		_color_writetoaddr
  3815 ;; This function is called by:
  3816 ;;		_main
  3817 ;; This function uses a non-reentrant model
  3818 ;;
  3819                           
  3820                           	psect	text7
  3821   002850                     __ptext7:
  3822                           	callstack 0
  3823   002850                     _color_click_init:
  3824                           	callstack 20
  3825   002850                     
  3826                           ;color.c: 9:     I2C_2_Master_Init();
  3827   002850  EC5B  F014         	call	_I2C_2_Master_Init	;wreg free
  3828   002854                     
  3829                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  3830   002854  0E01               	movlw	1
  3831   002856  6E0B               	movwf	color_writetoaddr@value^0,c
  3832   002858  0E00               	movlw	0
  3833   00285A  ECDE  F014         	call	_color_writetoaddr
  3834   00285E                     
  3835                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3836   00285E  0E3F               	movlw	63
  3837   002860  6E0D               	movwf	??_color_click_init^0,c
  3838   002862  0E55               	movlw	85
  3839   002864                     u4567:
  3840   002864  2EE8               	decfsz	wreg,f,c
  3841   002866  D7FE               	bra	u4567
  3842   002868  2E0D               	decfsz	??_color_click_init^0,f,c
  3843   00286A  D7FC               	bra	u4567
  3844   00286C  F000               	nop	
  3845   00286E                     
  3846                           ;color.c: 16:  color_writetoaddr(0x00, 0x03);
  3847   00286E  0E03               	movlw	3
  3848   002870  6E0B               	movwf	color_writetoaddr@value^0,c
  3849   002872  0E00               	movlw	0
  3850   002874  ECDE  F014         	call	_color_writetoaddr
  3851   002878                     
  3852                           ;color.c: 19:  color_writetoaddr(0x01, 0xD5);
  3853   002878  0ED5               	movlw	213
  3854   00287A  6E0B               	movwf	color_writetoaddr@value^0,c
  3855   00287C  0E01               	movlw	1
  3856   00287E  ECDE  F014         	call	_color_writetoaddr
  3857   002882  0012               	return		;funcret
  3858   002884                     __end_of_color_click_init:
  3859                           	callstack 0
  3860                           
  3861 ;; *************** function _I2C_2_Master_Init *****************
  3862 ;; Defined at:
  3863 ;;		line 4 in file "i2c.c"
  3864 ;; Parameters:    Size  Location     Type
  3865 ;;		None
  3866 ;; Auto vars:     Size  Location     Type
  3867 ;;		None
  3868 ;; Return value:  Size  Location     Type
  3869 ;;                  1    wreg      void 
  3870 ;; Registers used:
  3871 ;;		wreg, status,2
  3872 ;; Tracked objects:
  3873 ;;		On entry : 0/0
  3874 ;;		On exit  : 0/0
  3875 ;;		Unchanged: 0/0
  3876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3881 ;;Total ram usage:        0 bytes
  3882 ;; Hardware stack levels used: 1
  3883 ;; Hardware stack levels required when called: 7
  3884 ;; This function calls:
  3885 ;;		Nothing
  3886 ;; This function is called by:
  3887 ;;		_color_click_init
  3888 ;; This function uses a non-reentrant model
  3889 ;;
  3890                           
  3891                           	psect	text8
  3892   0028B6                     __ptext8:
  3893                           	callstack 0
  3894   0028B6                     _I2C_2_Master_Init:
  3895                           	callstack 22
  3896   0028B6                     
  3897                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3898   0028B6  010E               	movlb	14	; () banked
  3899   0028B8  51D9               	movf	217,w,b	;volatile
  3900   0028BA  0BF0               	andlw	-16
  3901   0028BC  0908               	iorlw	8
  3902   0028BE  6FD9               	movwf	217,b	;volatile
  3903   0028C0                     
  3904                           ; BSR set to: 14
  3905                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3906   0028C0  8BD9               	bsf	217,5,b	;volatile
  3907                           
  3908                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3909   0028C2  0E9F               	movlw	159
  3910   0028C4  6FD6               	movwf	214,b	;volatile
  3911   0028C6                     
  3912                           ; BSR set to: 14
  3913                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3914   0028C6  8A84               	bsf	132,5,c	;volatile
  3915   0028C8                     
  3916                           ; BSR set to: 14
  3917                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3918   0028C8  8C84               	bsf	132,6,c	;volatile
  3919   0028CA                     
  3920                           ; BSR set to: 14
  3921                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3922   0028CA  9BA7               	bcf	167,5,b	;volatile
  3923   0028CC                     
  3924                           ; BSR set to: 14
  3925                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3926   0028CC  9DA7               	bcf	167,6,b	;volatile
  3927                           
  3928                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3929   0028CE  0E1D               	movlw	29
  3930   0028D0  6F1D               	movwf	29,b	;volatile
  3931                           
  3932                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3933   0028D2  0E1E               	movlw	30
  3934   0028D4  6F1C               	movwf	28,b	;volatile
  3935                           
  3936                           ;i2c.c: 18:   RD5PPS=0x1C;
  3937   0028D6  0E1C               	movlw	28
  3938   0028D8  6F6F               	movwf	111,b	;volatile
  3939                           
  3940                           ;i2c.c: 19:   RD6PPS=0x1B;
  3941   0028DA  0E1B               	movlw	27
  3942   0028DC  6F70               	movwf	112,b	;volatile
  3943   0028DE                     
  3944                           ; BSR set to: 14
  3945   0028DE  0012               	return		;funcret
  3946   0028E0                     __end_of_I2C_2_Master_Init:
  3947                           	callstack 0
  3948                           
  3949 ;; *************** function _WhiteLight *****************
  3950 ;; Defined at:
  3951 ;;		line 26 in file "LED_Buttons.c"
  3952 ;; Parameters:    Size  Location     Type
  3953 ;;		None
  3954 ;; Auto vars:     Size  Location     Type
  3955 ;;		None
  3956 ;; Return value:  Size  Location     Type
  3957 ;;                  1    wreg      void 
  3958 ;; Registers used:
  3959 ;;		None
  3960 ;; Tracked objects:
  3961 ;;		On entry : 0/0
  3962 ;;		On exit  : 0/0
  3963 ;;		Unchanged: 0/0
  3964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3969 ;;Total ram usage:        0 bytes
  3970 ;; Hardware stack levels used: 1
  3971 ;; Hardware stack levels required when called: 7
  3972 ;; This function calls:
  3973 ;;		Nothing
  3974 ;; This function is called by:
  3975 ;;		_main
  3976 ;; This function uses a non-reentrant model
  3977 ;;
  3978                           
  3979                           	psect	text9
  3980   002AD2                     __ptext9:
  3981                           	callstack 0
  3982   002AD2                     _WhiteLight:
  3983                           	callstack 23
  3984   002AD2                     
  3985                           ;LED_Buttons.c: 27:     LATGbits.LATG1 = 1;
  3986   002AD2  827F               	bsf	127,1,c	;volatile
  3987                           
  3988                           ;LED_Buttons.c: 28:     LATAbits.LATA4 = 1;
  3989   002AD4  8879               	bsf	121,4,c	;volatile
  3990                           
  3991                           ;LED_Buttons.c: 29:     LATFbits.LATF7 = 1;
  3992   002AD6  8E7E               	bsf	126,7,c	;volatile
  3993   002AD8  0012               	return		;funcret
  3994   002ADA                     __end_of_WhiteLight:
  3995                           	callstack 0
  3996                           
  3997 ;; *************** function _WhiteInstructions *****************
  3998 ;; Defined at:
  3999 ;;		line 154 in file "color_instructions.c"
  4000 ;; Parameters:    Size  Location     Type
  4001 ;;  mL              2   58[COMRAM] PTR struct DC_motor
  4002 ;;		 -> main@motorL(9), 
  4003 ;;  mR              2   60[COMRAM] PTR struct DC_motor
  4004 ;;		 -> main@motorR(9), 
  4005 ;; Auto vars:     Size  Location     Type
  4006 ;;  a               2   67[COMRAM] unsigned int 
  4007 ;;  c               2   64[COMRAM] unsigned int 
  4008 ;;  anticolor       1   66[COMRAM] unsigned char 
  4009 ;; Return value:  Size  Location     Type
  4010 ;;                  1    wreg      void 
  4011 ;; Registers used:
  4012 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4013 ;; Tracked objects:
  4014 ;;		On entry : 0/0
  4015 ;;		On exit  : 0/0
  4016 ;;		Unchanged: 0/0
  4017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4018 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4019 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4020 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4021 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4022 ;;Total ram usage:       11 bytes
  4023 ;; Hardware stack levels used: 1
  4024 ;; Hardware stack levels required when called: 14
  4025 ;; This function calls:
  4026 ;;		_BlueInstructions
  4027 ;;		_MoveBuggy
  4028 ;;		_Return_Anti_Moves
  4029 ;;		_Return_Time
  4030 ;;		_fullSpeedAhead
  4031 ;;		_stop
  4032 ;; This function is called by:
  4033 ;;		_main
  4034 ;; This function uses a non-reentrant model
  4035 ;;
  4036                           
  4037                           	psect	text10
  4038   001762                     __ptext10:
  4039                           	callstack 0
  4040   001762                     _WhiteInstructions:
  4041                           	callstack 16
  4042   001762                     
  4043                           ;color_instructions.c: 155:     PIE0bits.INT1IE = 0;
  4044   001762  010E               	movlb	14	; () banked
  4045   001764  9329               	bcf	41,1,b	;volatile
  4046   001766                     
  4047                           ; BSR set to: 14
  4048                           ;color_instructions.c: 157:     BlueInstructions(mL,mR);
  4049   001766  C03B  F027         	movff	WhiteInstructions@mL,BlueInstructions@mL
  4050   00176A  C03C  F028         	movff	WhiteInstructions@mL+1,BlueInstructions@mL+1
  4051   00176E  C03D  F029         	movff	WhiteInstructions@mR,BlueInstructions@mR
  4052   001772  C03E  F02A         	movff	WhiteInstructions@mR+1,BlueInstructions@mR+1
  4053   001776  EC20  F00F         	call	_BlueInstructions	;wreg free
  4054                           
  4055                           ;color_instructions.c: 159:     while(time_index>0){
  4056   00177A  EF1E  F00C         	goto	l3908
  4057   00177E                     l3888:
  4058                           
  4059                           ; BSR set to: 0
  4060                           ;color_instructions.c: 161:         unsigned int a = 0;
  4061   00177E  0E00               	movlw	0
  4062   001780  6E45               	movwf	(WhiteInstructions@a+1)^0,c
  4063   001782  0E00               	movlw	0
  4064   001784  6E44               	movwf	WhiteInstructions@a^0,c
  4065   001786                     
  4066                           ; BSR set to: 0
  4067                           ;color_instructions.c: 162:         unsigned int c = Return_Time(&time_index,time_array)
      +                          ;
  4068   001786  0E9E               	movlw	low _time_index
  4069   001788  6E09               	movwf	Return_Time@time_index^0,c
  4070   00178A  0E00               	movlw	high _time_index
  4071   00178C  6E0A               	movwf	(Return_Time@time_index+1)^0,c
  4072   00178E  0E3C               	movlw	low _time_array
  4073   001790  6E0B               	movwf	Return_Time@time_array^0,c
  4074   001792  0E01               	movlw	high _time_array
  4075   001794  6E0C               	movwf	(Return_Time@time_array+1)^0,c
  4076   001796  EC0C  F014         	call	_Return_Time	;wreg free
  4077   00179A  C009  F041         	movff	?_Return_Time,WhiteInstructions@c
  4078   00179E  C00A  F042         	movff	?_Return_Time+1,WhiteInstructions@c+1
  4079                           
  4080                           ;color_instructions.c: 163:         while(a<c){
  4081   0017A2  EFDF  F00B         	goto	l3896
  4082   0017A6                     l3892:
  4083                           
  4084                           ;color_instructions.c: 164:             fullSpeedAhead(mL,mR);
  4085   0017A6  C03B  F01C         	movff	WhiteInstructions@mL,fullSpeedAhead@mL
  4086   0017AA  C03C  F01D         	movff	WhiteInstructions@mL+1,fullSpeedAhead@mL+1
  4087   0017AE  C03D  F01E         	movff	WhiteInstructions@mR,fullSpeedAhead@mR
  4088   0017B2  C03E  F01F         	movff	WhiteInstructions@mR+1,fullSpeedAhead@mR+1
  4089   0017B6  EC9F  F00C         	call	_fullSpeedAhead	;wreg free
  4090   0017BA                     
  4091                           ;color_instructions.c: 165:             a++;
  4092   0017BA  4A44               	infsnz	WhiteInstructions@a^0,f,c
  4093   0017BC  2A45               	incf	(WhiteInstructions@a+1)^0,f,c
  4094   0017BE                     l3896:
  4095                           
  4096                           ;color_instructions.c: 163:         while(a<c){
  4097   0017BE  5041               	movf	WhiteInstructions@c^0,w,c
  4098   0017C0  5C44               	subwf	WhiteInstructions@a^0,w,c
  4099   0017C2  5042               	movf	(WhiteInstructions@c+1)^0,w,c
  4100   0017C4  5845               	subwfb	(WhiteInstructions@a+1)^0,w,c
  4101   0017C6  A0D8               	btfss	status,0,c
  4102   0017C8  EFE8  F00B         	goto	u3751
  4103   0017CC  EFEA  F00B         	goto	u3750
  4104   0017D0                     u3751:
  4105   0017D0  EFD3  F00B         	goto	l3892
  4106   0017D4                     u3750:
  4107   0017D4  EFF9  F00B         	goto	l3902
  4108   0017D8                     l3898:
  4109                           
  4110                           ;color_instructions.c: 169:             stop(mL,mR);
  4111   0017D8  C03B  F01C         	movff	WhiteInstructions@mL,stop@mL
  4112   0017DC  C03C  F01D         	movff	WhiteInstructions@mL+1,stop@mL+1
  4113   0017E0  C03D  F01E         	movff	WhiteInstructions@mR,stop@mR
  4114   0017E4  C03E  F01F         	movff	WhiteInstructions@mR+1,stop@mR+1
  4115   0017E8  EC04  F00E         	call	_stop	;wreg free
  4116   0017EC                     
  4117                           ;color_instructions.c: 170:             a--;
  4118   0017EC  0644               	decf	WhiteInstructions@a^0,f,c
  4119   0017EE  A0D8               	btfss	status,0,c
  4120   0017F0  0645               	decf	(WhiteInstructions@a+1)^0,f,c
  4121   0017F2                     l3902:
  4122                           
  4123                           ;color_instructions.c: 168:         while(a>0){
  4124   0017F2  5044               	movf	WhiteInstructions@a^0,w,c
  4125   0017F4  1045               	iorwf	(WhiteInstructions@a+1)^0,w,c
  4126   0017F6  A4D8               	btfss	status,2,c
  4127   0017F8  EF00  F00C         	goto	u3761
  4128   0017FC  EF02  F00C         	goto	u3760
  4129   001800                     u3761:
  4130   001800  EFEC  F00B         	goto	l3898
  4131   001804                     u3760:
  4132   001804                     
  4133                           ;color_instructions.c: 173:         unsigned char anticolor = Return_Anti_Moves(&moves_i
      +                          ndex, anti_moves_array);
  4134   001804  0E56               	movlw	low _moves_index
  4135   001806  6E09               	movwf	Return_Anti_Moves@moves_index^0,c
  4136   001808  0E00               	movlw	high _moves_index
  4137   00180A  6E0A               	movwf	(Return_Anti_Moves@moves_index+1)^0,c
  4138   00180C  0E76               	movlw	low _anti_moves_array
  4139   00180E  6E0B               	movwf	Return_Anti_Moves@anti_moves_array^0,c
  4140   001810  0E00               	movlw	high _anti_moves_array
  4141   001812  6E0C               	movwf	(Return_Anti_Moves@anti_moves_array+1)^0,c
  4142   001814  ECBD  F014         	call	_Return_Anti_Moves	;wreg free
  4143   001818  6E43               	movwf	WhiteInstructions@anticolor^0,c
  4144   00181A                     
  4145                           ;color_instructions.c: 174:         MoveBuggy(anticolor,mL,mR);
  4146   00181A  5043               	movf	WhiteInstructions@anticolor^0,w,c
  4147   00181C  6E3F               	movwf	??_WhiteInstructions^0,c
  4148   00181E  6A40               	clrf	(??_WhiteInstructions+1)^0,c
  4149   001820  C03F  F035         	movff	??_WhiteInstructions,MoveBuggy@color_detected
  4150   001824  C040  F036         	movff	??_WhiteInstructions+1,MoveBuggy@color_detected+1
  4151   001828  C03B  F037         	movff	WhiteInstructions@mL,MoveBuggy@mL
  4152   00182C  C03C  F038         	movff	WhiteInstructions@mL+1,MoveBuggy@mL+1
  4153   001830  C03D  F039         	movff	WhiteInstructions@mR,MoveBuggy@mR
  4154   001834  C03E  F03A         	movff	WhiteInstructions@mR+1,MoveBuggy@mR+1
  4155   001838  EC20  F007         	call	_MoveBuggy	;wreg free
  4156   00183C                     l3908:
  4157                           
  4158                           ;color_instructions.c: 159:     while(time_index>0){
  4159   00183C  0100               	movlb	0	; () banked
  4160   00183E  519E               	movf	_time_index& (0+255),w,b
  4161   001840  A4D8               	btfss	status,2,c
  4162   001842  EF25  F00C         	goto	u3771
  4163   001846  EF27  F00C         	goto	u3770
  4164   00184A                     u3771:
  4165   00184A  EFBF  F00B         	goto	l3888
  4166   00184E                     u3770:
  4167   00184E                     
  4168                           ; BSR set to: 0
  4169   00184E  0012               	return		;funcret
  4170   001850                     __end_of_WhiteInstructions:
  4171                           	callstack 0
  4172                           
  4173 ;; *************** function _Return_Time *****************
  4174 ;; Defined at:
  4175 ;;		line 40 in file "Memorization.c"
  4176 ;; Parameters:    Size  Location     Type
  4177 ;;  time_index      2    8[COMRAM] PTR unsigned char 
  4178 ;;		 -> time_index(1), 
  4179 ;;  time_array      2   10[COMRAM] PTR unsigned int 
  4180 ;;		 -> time_array(80), 
  4181 ;; Auto vars:     Size  Location     Type
  4182 ;;  temp            2   15[COMRAM] unsigned int 
  4183 ;; Return value:  Size  Location     Type
  4184 ;;                  2    8[COMRAM] unsigned int 
  4185 ;; Registers used:
  4186 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4187 ;; Tracked objects:
  4188 ;;		On entry : 0/0
  4189 ;;		On exit  : 0/0
  4190 ;;		Unchanged: 0/0
  4191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4192 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4193 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4194 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4195 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4196 ;;Total ram usage:        9 bytes
  4197 ;; Hardware stack levels used: 1
  4198 ;; Hardware stack levels required when called: 7
  4199 ;; This function calls:
  4200 ;;		Nothing
  4201 ;; This function is called by:
  4202 ;;		_WhiteInstructions
  4203 ;; This function uses a non-reentrant model
  4204 ;;
  4205                           
  4206                           	psect	text11
  4207   002818                     __ptext11:
  4208                           	callstack 0
  4209   002818                     _Return_Time:
  4210                           	callstack 22
  4211   002818                     
  4212                           ;Memorization.c: 41:     unsigned int temp;;Memorization.c: 43:     temp = time_array[--
      +                          (*time_index)];
  4213   002818  C009  FFD9         	movff	Return_Time@time_index,fsr2l
  4214   00281C  C00A  FFDA         	movff	Return_Time@time_index+1,fsr2h
  4215   002820  06DF               	decf	indf2,f,c
  4216   002822  50DF               	movf	indf2,w,c
  4217   002824  6E0D               	movwf	??_Return_Time^0,c
  4218   002826  500D               	movf	??_Return_Time^0,w,c
  4219   002828  0D02               	mullw	2
  4220   00282A  CFF3 F00E          	movff	prodl,??_Return_Time+1
  4221   00282E  CFF4 F00F          	movff	prodh,??_Return_Time+2
  4222   002832  500E               	movf	(??_Return_Time+1)^0,w,c
  4223   002834  240B               	addwf	Return_Time@time_array^0,w,c
  4224   002836  6ED9               	movwf	fsr2l,c
  4225   002838  500F               	movf	(??_Return_Time+2)^0,w,c
  4226   00283A  200C               	addwfc	(Return_Time@time_array+1)^0,w,c
  4227   00283C  6EDA               	movwf	fsr2h,c
  4228   00283E  CFDE F010          	movff	postinc2,Return_Time@temp
  4229   002842  CFDD F011          	movff	postdec2,Return_Time@temp+1
  4230   002846                     
  4231                           ;Memorization.c: 44:     return temp;
  4232   002846  C010  F009         	movff	Return_Time@temp,?_Return_Time
  4233   00284A  C011  F00A         	movff	Return_Time@temp+1,?_Return_Time+1
  4234   00284E  0012               	return		;funcret
  4235   002850                     __end_of_Return_Time:
  4236                           	callstack 0
  4237                           
  4238 ;; *************** function _Return_Anti_Moves *****************
  4239 ;; Defined at:
  4240 ;;		line 32 in file "Memorization.c"
  4241 ;; Parameters:    Size  Location     Type
  4242 ;;  moves_index     2    8[COMRAM] PTR unsigned char 
  4243 ;;		 -> moves_index(1), 
  4244 ;;  anti_moves_a    2   10[COMRAM] PTR unsigned char 
  4245 ;;		 -> anti_moves_array(40), 
  4246 ;; Auto vars:     Size  Location     Type
  4247 ;;  temp            1   13[COMRAM] unsigned char 
  4248 ;; Return value:  Size  Location     Type
  4249 ;;                  1    wreg      unsigned char 
  4250 ;; Registers used:
  4251 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4252 ;; Tracked objects:
  4253 ;;		On entry : 0/0
  4254 ;;		On exit  : 0/0
  4255 ;;		Unchanged: 0/0
  4256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4257 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4258 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4259 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4260 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4261 ;;Total ram usage:        6 bytes
  4262 ;; Hardware stack levels used: 1
  4263 ;; Hardware stack levels required when called: 7
  4264 ;; This function calls:
  4265 ;;		Nothing
  4266 ;; This function is called by:
  4267 ;;		_WhiteInstructions
  4268 ;; This function uses a non-reentrant model
  4269 ;;
  4270                           
  4271                           	psect	text12
  4272   00297A                     __ptext12:
  4273                           	callstack 0
  4274   00297A                     _Return_Anti_Moves:
  4275                           	callstack 22
  4276   00297A                     
  4277                           ;Memorization.c: 33:     unsigned char temp;;Memorization.c: 35:     temp = anti_moves_a
      +                          rray[--(*moves_index)];
  4278   00297A  C009  FFD9         	movff	Return_Anti_Moves@moves_index,fsr2l
  4279   00297E  C00A  FFDA         	movff	Return_Anti_Moves@moves_index+1,fsr2h
  4280   002982  06DF               	decf	indf2,f,c
  4281   002984  50DF               	movf	indf2,w,c
  4282   002986  6E0D               	movwf	??_Return_Anti_Moves^0,c
  4283   002988  500D               	movf	??_Return_Anti_Moves^0,w,c
  4284   00298A  240B               	addwf	Return_Anti_Moves@anti_moves_array^0,w,c
  4285   00298C  6ED9               	movwf	fsr2l,c
  4286   00298E  0E00               	movlw	0
  4287   002990  200C               	addwfc	(Return_Anti_Moves@anti_moves_array+1)^0,w,c
  4288   002992  6EDA               	movwf	fsr2h,c
  4289   002994  50DF               	movf	indf2,w,c
  4290   002996  6E0E               	movwf	Return_Anti_Moves@temp^0,c
  4291   002998                     
  4292                           ;Memorization.c: 36:     return temp;
  4293   002998  500E               	movf	Return_Anti_Moves@temp^0,w,c
  4294   00299A  0012               	return		;funcret
  4295   00299C                     __end_of_Return_Anti_Moves:
  4296                           	callstack 0
  4297                           
  4298 ;; *************** function _MoveBuggy *****************
  4299 ;; Defined at:
  4300 ;;		line 180 in file "color_instructions.c"
  4301 ;; Parameters:    Size  Location     Type
  4302 ;;  color_detect    2   52[COMRAM] PTR unsigned char 
  4303 ;;		 -> RAM(3561), 
  4304 ;;  mL              2   54[COMRAM] PTR struct DC_motor
  4305 ;;		 -> main@motorL(9), 
  4306 ;;  mR              2   56[COMRAM] PTR struct DC_motor
  4307 ;;		 -> main@motorR(9), 
  4308 ;; Auto vars:     Size  Location     Type
  4309 ;;		None
  4310 ;; Return value:  Size  Location     Type
  4311 ;;                  1    wreg      void 
  4312 ;; Registers used:
  4313 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4314 ;; Tracked objects:
  4315 ;;		On entry : 0/0
  4316 ;;		On exit  : 0/0
  4317 ;;		Unchanged: 0/0
  4318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4319 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4322 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4323 ;;Total ram usage:        6 bytes
  4324 ;; Hardware stack levels used: 1
  4325 ;; Hardware stack levels required when called: 13
  4326 ;; This function calls:
  4327 ;;		_AntiPink
  4328 ;;		_AntiYellow
  4329 ;;		_AppendMoves
  4330 ;;		_BlueInstructions
  4331 ;;		_GreenInstructions
  4332 ;;		_LightBlueInstructions
  4333 ;;		_OrangeInstructions
  4334 ;;		_PinkInstructions
  4335 ;;		_RedInstructions
  4336 ;;		_YellowInstructions
  4337 ;; This function is called by:
  4338 ;;		_main
  4339 ;;		_WhiteInstructions
  4340 ;; This function uses a non-reentrant model
  4341 ;;
  4342                           
  4343                           	psect	text13
  4344   000E40                     __ptext13:
  4345                           	callstack 0
  4346   000E40                     _MoveBuggy:
  4347                           	callstack 16
  4348   000E40                     
  4349                           ;color_instructions.c: 181:     if (color_detected==1){
  4350   000E40  0435               	decf	MoveBuggy@color_detected^0,w,c
  4351   000E42  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4352   000E44  A4D8               	btfss	status,2,c
  4353   000E46  EF27  F007         	goto	u2501
  4354   000E4A  EF29  F007         	goto	u2500
  4355   000E4E                     u2501:
  4356   000E4E  EF47  F007         	goto	l3250
  4357   000E52                     u2500:
  4358   000E52                     
  4359                           ;color_instructions.c: 182:         RedInstructions(mL, mR);
  4360   000E52  C037  F027         	movff	MoveBuggy@mL,RedInstructions@mL
  4361   000E56  C038  F028         	movff	MoveBuggy@mL+1,RedInstructions@mL+1
  4362   000E5A  C039  F029         	movff	MoveBuggy@mR,RedInstructions@mR
  4363   000E5E  C03A  F02A         	movff	MoveBuggy@mR+1,RedInstructions@mR+1
  4364   000E62  EC7B  F011         	call	_RedInstructions	;wreg free
  4365   000E66                     
  4366                           ;color_instructions.c: 183:         if(LATDbits.LATD7 != 1){
  4367   000E66  BE7C               	btfsc	124,7,c	;volatile
  4368   000E68  EF38  F007         	goto	u2511
  4369   000E6C  EF3A  F007         	goto	u2510
  4370   000E70                     u2511:
  4371   000E70  EF61  F008         	goto	l684
  4372   000E74                     u2510:
  4373   000E74                     
  4374                           ;color_instructions.c: 184:             AppendMoves(2,&moves_index,anti_moves_array);
  4375   000E74  0E56               	movlw	low _moves_index
  4376   000E76  6E09               	movwf	AppendMoves@moves_index^0,c
  4377   000E78  0E00               	movlw	high _moves_index
  4378   000E7A  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4379   000E7C  0E76               	movlw	low _anti_moves_array
  4380   000E7E  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4381   000E80  0E00               	movlw	high _anti_moves_array
  4382   000E82  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4383   000E84  0E02               	movlw	2
  4384   000E86  ECAB  F014         	call	_AppendMoves
  4385   000E8A  EF61  F008         	goto	l684
  4386   000E8E                     l3250:
  4387   000E8E  0E02               	movlw	2
  4388   000E90  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4389   000E92  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4390   000E94  A4D8               	btfss	status,2,c
  4391   000E96  EF4F  F007         	goto	u2521
  4392   000E9A  EF51  F007         	goto	u2520
  4393   000E9E                     u2521:
  4394   000E9E  EF6F  F007         	goto	l3258
  4395   000EA2                     u2520:
  4396   000EA2                     
  4397                           ;color_instructions.c: 188:         GreenInstructions(mL, mR);
  4398   000EA2  C037  F027         	movff	MoveBuggy@mL,GreenInstructions@mL
  4399   000EA6  C038  F028         	movff	MoveBuggy@mL+1,GreenInstructions@mL+1
  4400   000EAA  C039  F029         	movff	MoveBuggy@mR,GreenInstructions@mR
  4401   000EAE  C03A  F02A         	movff	MoveBuggy@mR+1,GreenInstructions@mR+1
  4402   000EB2  ECBE  F011         	call	_GreenInstructions	;wreg free
  4403   000EB6                     
  4404                           ;color_instructions.c: 189:         if(LATDbits.LATD7 != 1){
  4405   000EB6  BE7C               	btfsc	124,7,c	;volatile
  4406   000EB8  EF60  F007         	goto	u2531
  4407   000EBC  EF62  F007         	goto	u2530
  4408   000EC0                     u2531:
  4409   000EC0  EF61  F008         	goto	l684
  4410   000EC4                     u2530:
  4411   000EC4                     
  4412                           ;color_instructions.c: 190:             AppendMoves(1,&moves_index,anti_moves_array);
  4413   000EC4  0E56               	movlw	low _moves_index
  4414   000EC6  6E09               	movwf	AppendMoves@moves_index^0,c
  4415   000EC8  0E00               	movlw	high _moves_index
  4416   000ECA  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4417   000ECC  0E76               	movlw	low _anti_moves_array
  4418   000ECE  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4419   000ED0  0E00               	movlw	high _anti_moves_array
  4420   000ED2  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4421   000ED4  0E01               	movlw	1
  4422   000ED6  ECAB  F014         	call	_AppendMoves
  4423   000EDA  EF61  F008         	goto	l684
  4424   000EDE                     l3258:
  4425   000EDE  0E03               	movlw	3
  4426   000EE0  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4427   000EE2  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4428   000EE4  A4D8               	btfss	status,2,c
  4429   000EE6  EF77  F007         	goto	u2541
  4430   000EEA  EF79  F007         	goto	u2540
  4431   000EEE                     u2541:
  4432   000EEE  EF97  F007         	goto	l3266
  4433   000EF2                     u2540:
  4434   000EF2                     
  4435                           ;color_instructions.c: 194:         BlueInstructions(mL, mR);
  4436   000EF2  C037  F027         	movff	MoveBuggy@mL,BlueInstructions@mL
  4437   000EF6  C038  F028         	movff	MoveBuggy@mL+1,BlueInstructions@mL+1
  4438   000EFA  C039  F029         	movff	MoveBuggy@mR,BlueInstructions@mR
  4439   000EFE  C03A  F02A         	movff	MoveBuggy@mR+1,BlueInstructions@mR+1
  4440   000F02  EC20  F00F         	call	_BlueInstructions	;wreg free
  4441   000F06                     
  4442                           ;color_instructions.c: 195:         if(LATDbits.LATD7 != 1){
  4443   000F06  BE7C               	btfsc	124,7,c	;volatile
  4444   000F08  EF88  F007         	goto	u2551
  4445   000F0C  EF8A  F007         	goto	u2550
  4446   000F10                     u2551:
  4447   000F10  EF61  F008         	goto	l684
  4448   000F14                     u2550:
  4449   000F14                     
  4450                           ;color_instructions.c: 196:             AppendMoves(3,&moves_index,anti_moves_array);
  4451   000F14  0E56               	movlw	low _moves_index
  4452   000F16  6E09               	movwf	AppendMoves@moves_index^0,c
  4453   000F18  0E00               	movlw	high _moves_index
  4454   000F1A  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4455   000F1C  0E76               	movlw	low _anti_moves_array
  4456   000F1E  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4457   000F20  0E00               	movlw	high _anti_moves_array
  4458   000F22  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4459   000F24  0E03               	movlw	3
  4460   000F26  ECAB  F014         	call	_AppendMoves
  4461   000F2A  EF61  F008         	goto	l684
  4462   000F2E                     l3266:
  4463   000F2E  0E04               	movlw	4
  4464   000F30  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4465   000F32  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4466   000F34  A4D8               	btfss	status,2,c
  4467   000F36  EF9F  F007         	goto	u2561
  4468   000F3A  EFA1  F007         	goto	u2560
  4469   000F3E                     u2561:
  4470   000F3E  EFBF  F007         	goto	l3274
  4471   000F42                     u2560:
  4472   000F42                     
  4473                           ;color_instructions.c: 200:         YellowInstructions(mL, mR);
  4474   000F42  C037  F027         	movff	MoveBuggy@mL,YellowInstructions@mL
  4475   000F46  C038  F028         	movff	MoveBuggy@mL+1,YellowInstructions@mL+1
  4476   000F4A  C039  F029         	movff	MoveBuggy@mR,YellowInstructions@mR
  4477   000F4E  C03A  F02A         	movff	MoveBuggy@mR+1,YellowInstructions@mR+1
  4478   000F52  EC6F  F010         	call	_YellowInstructions	;wreg free
  4479   000F56                     
  4480                           ;color_instructions.c: 202:         if(LATDbits.LATD7 != 1){
  4481   000F56  BE7C               	btfsc	124,7,c	;volatile
  4482   000F58  EFB0  F007         	goto	u2571
  4483   000F5C  EFB2  F007         	goto	u2570
  4484   000F60                     u2571:
  4485   000F60  EF61  F008         	goto	l684
  4486   000F64                     u2570:
  4487   000F64                     
  4488                           ;color_instructions.c: 203:             AppendMoves(9,&moves_index,anti_moves_array);
  4489   000F64  0E56               	movlw	low _moves_index
  4490   000F66  6E09               	movwf	AppendMoves@moves_index^0,c
  4491   000F68  0E00               	movlw	high _moves_index
  4492   000F6A  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4493   000F6C  0E76               	movlw	low _anti_moves_array
  4494   000F6E  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4495   000F70  0E00               	movlw	high _anti_moves_array
  4496   000F72  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4497   000F74  0E09               	movlw	9
  4498   000F76  ECAB  F014         	call	_AppendMoves
  4499   000F7A  EF61  F008         	goto	l684
  4500   000F7E                     l3274:
  4501   000F7E  0E05               	movlw	5
  4502   000F80  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4503   000F82  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4504   000F84  A4D8               	btfss	status,2,c
  4505   000F86  EFC7  F007         	goto	u2581
  4506   000F8A  EFC9  F007         	goto	u2580
  4507   000F8E                     u2581:
  4508   000F8E  EFE7  F007         	goto	l3282
  4509   000F92                     u2580:
  4510   000F92                     
  4511                           ;color_instructions.c: 207:         PinkInstructions(mL, mR);
  4512   000F92  C037  F027         	movff	MoveBuggy@mL,PinkInstructions@mL
  4513   000F96  C038  F028         	movff	MoveBuggy@mL+1,PinkInstructions@mL+1
  4514   000F9A  C039  F029         	movff	MoveBuggy@mR,PinkInstructions@mR
  4515   000F9E  C03A  F02A         	movff	MoveBuggy@mR+1,PinkInstructions@mR+1
  4516   000FA2  ECB2  F010         	call	_PinkInstructions	;wreg free
  4517   000FA6                     
  4518                           ;color_instructions.c: 209:         if(LATDbits.LATD7 != 1){
  4519   000FA6  BE7C               	btfsc	124,7,c	;volatile
  4520   000FA8  EFD8  F007         	goto	u2591
  4521   000FAC  EFDA  F007         	goto	u2590
  4522   000FB0                     u2591:
  4523   000FB0  EF61  F008         	goto	l684
  4524   000FB4                     u2590:
  4525   000FB4                     
  4526                           ;color_instructions.c: 210:             AppendMoves(10,&moves_index,anti_moves_array);
  4527   000FB4  0E56               	movlw	low _moves_index
  4528   000FB6  6E09               	movwf	AppendMoves@moves_index^0,c
  4529   000FB8  0E00               	movlw	high _moves_index
  4530   000FBA  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4531   000FBC  0E76               	movlw	low _anti_moves_array
  4532   000FBE  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4533   000FC0  0E00               	movlw	high _anti_moves_array
  4534   000FC2  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4535   000FC4  0E0A               	movlw	10
  4536   000FC6  ECAB  F014         	call	_AppendMoves
  4537   000FCA  EF61  F008         	goto	l684
  4538   000FCE                     l3282:
  4539   000FCE  0E06               	movlw	6
  4540   000FD0  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4541   000FD2  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4542   000FD4  A4D8               	btfss	status,2,c
  4543   000FD6  EFEF  F007         	goto	u2601
  4544   000FDA  EFF1  F007         	goto	u2600
  4545   000FDE                     u2601:
  4546   000FDE  EF0F  F008         	goto	l3290
  4547   000FE2                     u2600:
  4548   000FE2                     
  4549                           ;color_instructions.c: 214:         OrangeInstructions(mL, mR);
  4550   000FE2  C037  F02C         	movff	MoveBuggy@mL,OrangeInstructions@mL
  4551   000FE6  C038  F02D         	movff	MoveBuggy@mL+1,OrangeInstructions@mL+1
  4552   000FEA  C039  F02E         	movff	MoveBuggy@mR,OrangeInstructions@mR
  4553   000FEE  C03A  F02F         	movff	MoveBuggy@mR+1,OrangeInstructions@mR+1
  4554   000FF2  ECF5  F010         	call	_OrangeInstructions	;wreg free
  4555   000FF6                     
  4556                           ;color_instructions.c: 215:         if(LATDbits.LATD7 != 1){
  4557   000FF6  BE7C               	btfsc	124,7,c	;volatile
  4558   000FF8  EF00  F008         	goto	u2611
  4559   000FFC  EF02  F008         	goto	u2610
  4560   001000                     u2611:
  4561   001000  EF61  F008         	goto	l684
  4562   001004                     u2610:
  4563   001004                     
  4564                           ;color_instructions.c: 216:             AppendMoves(7,&moves_index,anti_moves_array);
  4565   001004  0E56               	movlw	low _moves_index
  4566   001006  6E09               	movwf	AppendMoves@moves_index^0,c
  4567   001008  0E00               	movlw	high _moves_index
  4568   00100A  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4569   00100C  0E76               	movlw	low _anti_moves_array
  4570   00100E  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4571   001010  0E00               	movlw	high _anti_moves_array
  4572   001012  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4573   001014  0E07               	movlw	7
  4574   001016  ECAB  F014         	call	_AppendMoves
  4575   00101A  EF61  F008         	goto	l684
  4576   00101E                     l3290:
  4577   00101E  0E07               	movlw	7
  4578   001020  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4579   001022  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4580   001024  A4D8               	btfss	status,2,c
  4581   001026  EF17  F008         	goto	u2621
  4582   00102A  EF19  F008         	goto	u2620
  4583   00102E                     u2621:
  4584   00102E  EF37  F008         	goto	l3298
  4585   001032                     u2620:
  4586   001032                     
  4587                           ;color_instructions.c: 220:         LightBlueInstructions(mL, mR);
  4588   001032  C037  F02C         	movff	MoveBuggy@mL,LightBlueInstructions@mL
  4589   001036  C038  F02D         	movff	MoveBuggy@mL+1,LightBlueInstructions@mL+1
  4590   00103A  C039  F02E         	movff	MoveBuggy@mR,LightBlueInstructions@mR
  4591   00103E  C03A  F02F         	movff	MoveBuggy@mR+1,LightBlueInstructions@mR+1
  4592   001042  EC38  F011         	call	_LightBlueInstructions	;wreg free
  4593   001046                     
  4594                           ;color_instructions.c: 221:         if(LATDbits.LATD7 != 1){
  4595   001046  BE7C               	btfsc	124,7,c	;volatile
  4596   001048  EF28  F008         	goto	u2631
  4597   00104C  EF2A  F008         	goto	u2630
  4598   001050                     u2631:
  4599   001050  EF61  F008         	goto	l684
  4600   001054                     u2630:
  4601   001054                     
  4602                           ;color_instructions.c: 222:             AppendMoves(6,&moves_index,anti_moves_array);
  4603   001054  0E56               	movlw	low _moves_index
  4604   001056  6E09               	movwf	AppendMoves@moves_index^0,c
  4605   001058  0E00               	movlw	high _moves_index
  4606   00105A  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4607   00105C  0E76               	movlw	low _anti_moves_array
  4608   00105E  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4609   001060  0E00               	movlw	high _anti_moves_array
  4610   001062  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4611   001064  0E06               	movlw	6
  4612   001066  ECAB  F014         	call	_AppendMoves
  4613   00106A  EF61  F008         	goto	l684
  4614   00106E                     l3298:
  4615   00106E  0E09               	movlw	9
  4616   001070  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4617   001072  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4618   001074  A4D8               	btfss	status,2,c
  4619   001076  EF3F  F008         	goto	u2641
  4620   00107A  EF41  F008         	goto	u2640
  4621   00107E                     u2641:
  4622   00107E  EF4D  F008         	goto	l3302
  4623   001082                     u2640:
  4624   001082                     
  4625                           ;color_instructions.c: 228:         AntiYellow(mL, mR);
  4626   001082  C037  F02E         	movff	MoveBuggy@mL,AntiYellow@mL
  4627   001086  C038  F02F         	movff	MoveBuggy@mL+1,AntiYellow@mL+1
  4628   00108A  C039  F030         	movff	MoveBuggy@mR,AntiYellow@mR
  4629   00108E  C03A  F031         	movff	MoveBuggy@mR+1,AntiYellow@mR+1
  4630   001092  EC6E  F00E         	call	_AntiYellow	;wreg free
  4631                           
  4632                           ;color_instructions.c: 229:     }
  4633   001096  EF61  F008         	goto	l684
  4634   00109A                     l3302:
  4635   00109A  0E0A               	movlw	10
  4636   00109C  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4637   00109E  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4638   0010A0  A4D8               	btfss	status,2,c
  4639   0010A2  EF55  F008         	goto	u2651
  4640   0010A6  EF57  F008         	goto	u2650
  4641   0010AA                     u2651:
  4642   0010AA  EF61  F008         	goto	l684
  4643   0010AE                     u2650:
  4644   0010AE                     
  4645                           ;color_instructions.c: 231:         AntiPink(mL, mR);
  4646   0010AE  C037  F02E         	movff	MoveBuggy@mL,AntiPink@mL
  4647   0010B2  C038  F02F         	movff	MoveBuggy@mL+1,AntiPink@mL+1
  4648   0010B6  C039  F030         	movff	MoveBuggy@mR,AntiPink@mR
  4649   0010BA  C03A  F031         	movff	MoveBuggy@mR+1,AntiPink@mR+1
  4650   0010BE  ECC7  F00E         	call	_AntiPink	;wreg free
  4651   0010C2                     l684:
  4652   0010C2  0012               	return		;funcret
  4653   0010C4                     __end_of_MoveBuggy:
  4654                           	callstack 0
  4655                           
  4656 ;; *************** function _YellowInstructions *****************
  4657 ;; Defined at:
  4658 ;;		line 57 in file "color_instructions.c"
  4659 ;; Parameters:    Size  Location     Type
  4660 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  4661 ;;		 -> main@motorL(9), 
  4662 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  4663 ;;		 -> main@motorR(9), 
  4664 ;; Auto vars:     Size  Location     Type
  4665 ;;  a               1   44[COMRAM] unsigned char 
  4666 ;; Return value:  Size  Location     Type
  4667 ;;                  1    wreg      void 
  4668 ;; Registers used:
  4669 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4670 ;; Tracked objects:
  4671 ;;		On entry : 0/0
  4672 ;;		On exit  : 0/0
  4673 ;;		Unchanged: 0/0
  4674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4675 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4676 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4677 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4678 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4679 ;;Total ram usage:        7 bytes
  4680 ;; Hardware stack levels used: 1
  4681 ;; Hardware stack levels required when called: 11
  4682 ;; This function calls:
  4683 ;;		_fullSpeedBackwards
  4684 ;;		_stop
  4685 ;;		_turnRight90
  4686 ;; This function is called by:
  4687 ;;		_MoveBuggy
  4688 ;; This function uses a non-reentrant model
  4689 ;;
  4690                           
  4691                           	psect	text14
  4692   0020DE                     __ptext14:
  4693                           	callstack 0
  4694   0020DE                     _YellowInstructions:
  4695                           	callstack 17
  4696   0020DE                     
  4697                           ;color_instructions.c: 59:     unsigned char a=0;
  4698   0020DE  0E00               	movlw	0
  4699   0020E0  6E2D               	movwf	YellowInstructions@a^0,c
  4700                           
  4701                           ;color_instructions.c: 60:     while (a<45){
  4702   0020E2  EF7E  F010         	goto	l3090
  4703   0020E6                     l3086:
  4704                           
  4705                           ;color_instructions.c: 61:         fullSpeedBackwards(mL, mR);
  4706   0020E6  C027  F01C         	movff	YellowInstructions@mL,fullSpeedBackwards@mL
  4707   0020EA  C028  F01D         	movff	YellowInstructions@mL+1,fullSpeedBackwards@mL+1
  4708   0020EE  C029  F01E         	movff	YellowInstructions@mR,fullSpeedBackwards@mR
  4709   0020F2  C02A  F01F         	movff	YellowInstructions@mR+1,fullSpeedBackwards@mR+1
  4710   0020F6  EC8D  F00D         	call	_fullSpeedBackwards	;wreg free
  4711   0020FA                     
  4712                           ;color_instructions.c: 62:         a++;
  4713   0020FA  2A2D               	incf	YellowInstructions@a^0,f,c
  4714   0020FC                     l3090:
  4715                           
  4716                           ;color_instructions.c: 60:     while (a<45){
  4717   0020FC  0E2C               	movlw	44
  4718   0020FE  642D               	cpfsgt	YellowInstructions@a^0,c
  4719   002100  EF84  F010         	goto	u2381
  4720   002104  EF86  F010         	goto	u2380
  4721   002108                     u2381:
  4722   002108  EF73  F010         	goto	l3086
  4723   00210C                     u2380:
  4724   00210C  EF93  F010         	goto	l3096
  4725   002110                     l3092:
  4726                           
  4727                           ;color_instructions.c: 65:         stop(mL, mR);
  4728   002110  C027  F01C         	movff	YellowInstructions@mL,stop@mL
  4729   002114  C028  F01D         	movff	YellowInstructions@mL+1,stop@mL+1
  4730   002118  C029  F01E         	movff	YellowInstructions@mR,stop@mR
  4731   00211C  C02A  F01F         	movff	YellowInstructions@mR+1,stop@mR+1
  4732   002120  EC04  F00E         	call	_stop	;wreg free
  4733   002124                     
  4734                           ;color_instructions.c: 66:         a--;
  4735   002124  062D               	decf	YellowInstructions@a^0,f,c
  4736   002126                     l3096:
  4737                           
  4738                           ;color_instructions.c: 64:     while (a>0){
  4739   002126  502D               	movf	YellowInstructions@a^0,w,c
  4740   002128  A4D8               	btfss	status,2,c
  4741   00212A  EF99  F010         	goto	u2391
  4742   00212E  EF9B  F010         	goto	u2390
  4743   002132                     u2391:
  4744   002132  EF88  F010         	goto	l3092
  4745   002136                     u2390:
  4746   002136                     
  4747                           ;color_instructions.c: 68:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4748   002136  0E05               	movlw	5
  4749   002138  6E2C               	movwf	(??_YellowInstructions+1)^0,c
  4750   00213A  0E0F               	movlw	15
  4751   00213C  6E2B               	movwf	??_YellowInstructions^0,c
  4752   00213E  0EF1               	movlw	241
  4753   002140                     u4577:
  4754   002140  2EE8               	decfsz	wreg,f,c
  4755   002142  D7FE               	bra	u4577
  4756   002144  2E2B               	decfsz	??_YellowInstructions^0,f,c
  4757   002146  D7FC               	bra	u4577
  4758   002148  2E2C               	decfsz	(??_YellowInstructions+1)^0,f,c
  4759   00214A  D7FA               	bra	u4577
  4760   00214C  F000               	nop	
  4761   00214E                     
  4762                           ;color_instructions.c: 69:     turnRight90(mL, mR);
  4763   00214E  C027  F022         	movff	YellowInstructions@mL,turnRight90@mL
  4764   002152  C028  F023         	movff	YellowInstructions@mL+1,turnRight90@mL+1
  4765   002156  C029  F024         	movff	YellowInstructions@mR,turnRight90@mR
  4766   00215A  C02A  F025         	movff	YellowInstructions@mR+1,turnRight90@mR+1
  4767   00215E  EC79  F00F         	call	_turnRight90	;wreg free
  4768   002162  0012               	return		;funcret
  4769   002164                     __end_of_YellowInstructions:
  4770                           	callstack 0
  4771                           
  4772 ;; *************** function _PinkInstructions *****************
  4773 ;; Defined at:
  4774 ;;		line 72 in file "color_instructions.c"
  4775 ;; Parameters:    Size  Location     Type
  4776 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  4777 ;;		 -> main@motorL(9), 
  4778 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  4779 ;;		 -> main@motorR(9), 
  4780 ;; Auto vars:     Size  Location     Type
  4781 ;;  a               1   44[COMRAM] unsigned char 
  4782 ;; Return value:  Size  Location     Type
  4783 ;;                  1    wreg      void 
  4784 ;; Registers used:
  4785 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4786 ;; Tracked objects:
  4787 ;;		On entry : 0/0
  4788 ;;		On exit  : 0/0
  4789 ;;		Unchanged: 0/0
  4790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4791 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4792 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4793 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4794 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4795 ;;Total ram usage:        7 bytes
  4796 ;; Hardware stack levels used: 1
  4797 ;; Hardware stack levels required when called: 11
  4798 ;; This function calls:
  4799 ;;		_fullSpeedBackwards
  4800 ;;		_stop
  4801 ;;		_turnLeft90
  4802 ;; This function is called by:
  4803 ;;		_MoveBuggy
  4804 ;; This function uses a non-reentrant model
  4805 ;;
  4806                           
  4807                           	psect	text15
  4808   002164                     __ptext15:
  4809                           	callstack 0
  4810   002164                     _PinkInstructions:
  4811                           	callstack 17
  4812   002164                     
  4813                           ;color_instructions.c: 73:     unsigned char a=0;
  4814   002164  0E00               	movlw	0
  4815   002166  6E2D               	movwf	PinkInstructions@a^0,c
  4816                           
  4817                           ;color_instructions.c: 74:     while (a<45){
  4818   002168  EFC1  F010         	goto	l3108
  4819   00216C                     l3104:
  4820                           
  4821                           ;color_instructions.c: 75:         fullSpeedBackwards(mL, mR);
  4822   00216C  C027  F01C         	movff	PinkInstructions@mL,fullSpeedBackwards@mL
  4823   002170  C028  F01D         	movff	PinkInstructions@mL+1,fullSpeedBackwards@mL+1
  4824   002174  C029  F01E         	movff	PinkInstructions@mR,fullSpeedBackwards@mR
  4825   002178  C02A  F01F         	movff	PinkInstructions@mR+1,fullSpeedBackwards@mR+1
  4826   00217C  EC8D  F00D         	call	_fullSpeedBackwards	;wreg free
  4827   002180                     
  4828                           ;color_instructions.c: 76:         a++;
  4829   002180  2A2D               	incf	PinkInstructions@a^0,f,c
  4830   002182                     l3108:
  4831                           
  4832                           ;color_instructions.c: 74:     while (a<45){
  4833   002182  0E2C               	movlw	44
  4834   002184  642D               	cpfsgt	PinkInstructions@a^0,c
  4835   002186  EFC7  F010         	goto	u2401
  4836   00218A  EFC9  F010         	goto	u2400
  4837   00218E                     u2401:
  4838   00218E  EFB6  F010         	goto	l3104
  4839   002192                     u2400:
  4840   002192  EFD6  F010         	goto	l3114
  4841   002196                     l3110:
  4842                           
  4843                           ;color_instructions.c: 79:         stop(mL, mR);
  4844   002196  C027  F01C         	movff	PinkInstructions@mL,stop@mL
  4845   00219A  C028  F01D         	movff	PinkInstructions@mL+1,stop@mL+1
  4846   00219E  C029  F01E         	movff	PinkInstructions@mR,stop@mR
  4847   0021A2  C02A  F01F         	movff	PinkInstructions@mR+1,stop@mR+1
  4848   0021A6  EC04  F00E         	call	_stop	;wreg free
  4849   0021AA                     
  4850                           ;color_instructions.c: 80:         a--;
  4851   0021AA  062D               	decf	PinkInstructions@a^0,f,c
  4852   0021AC                     l3114:
  4853                           
  4854                           ;color_instructions.c: 78:     while (a>0){
  4855   0021AC  502D               	movf	PinkInstructions@a^0,w,c
  4856   0021AE  A4D8               	btfss	status,2,c
  4857   0021B0  EFDC  F010         	goto	u2411
  4858   0021B4  EFDE  F010         	goto	u2410
  4859   0021B8                     u2411:
  4860   0021B8  EFCB  F010         	goto	l3110
  4861   0021BC                     u2410:
  4862   0021BC                     
  4863                           ;color_instructions.c: 82:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4864   0021BC  0E05               	movlw	5
  4865   0021BE  6E2C               	movwf	(??_PinkInstructions+1)^0,c
  4866   0021C0  0E0F               	movlw	15
  4867   0021C2  6E2B               	movwf	??_PinkInstructions^0,c
  4868   0021C4  0EF1               	movlw	241
  4869   0021C6                     u4587:
  4870   0021C6  2EE8               	decfsz	wreg,f,c
  4871   0021C8  D7FE               	bra	u4587
  4872   0021CA  2E2B               	decfsz	??_PinkInstructions^0,f,c
  4873   0021CC  D7FC               	bra	u4587
  4874   0021CE  2E2C               	decfsz	(??_PinkInstructions+1)^0,f,c
  4875   0021D0  D7FA               	bra	u4587
  4876   0021D2  F000               	nop	
  4877   0021D4                     
  4878                           ;color_instructions.c: 83:     turnLeft90(mL, mR);
  4879   0021D4  C027  F022         	movff	PinkInstructions@mL,turnLeft90@mL
  4880   0021D8  C028  F023         	movff	PinkInstructions@mL+1,turnLeft90@mL+1
  4881   0021DC  C029  F024         	movff	PinkInstructions@mR,turnLeft90@mR
  4882   0021E0  C02A  F025         	movff	PinkInstructions@mR+1,turnLeft90@mR+1
  4883   0021E4  ECD0  F00F         	call	_turnLeft90	;wreg free
  4884   0021E8  0012               	return		;funcret
  4885   0021EA                     __end_of_PinkInstructions:
  4886                           	callstack 0
  4887                           
  4888 ;; *************** function _OrangeInstructions *****************
  4889 ;; Defined at:
  4890 ;;		line 87 in file "color_instructions.c"
  4891 ;; Parameters:    Size  Location     Type
  4892 ;;  mL              2   43[COMRAM] PTR struct DC_motor
  4893 ;;		 -> main@motorL(9), 
  4894 ;;  mR              2   45[COMRAM] PTR struct DC_motor
  4895 ;;		 -> main@motorR(9), 
  4896 ;; Auto vars:     Size  Location     Type
  4897 ;;  a               1   49[COMRAM] unsigned char 
  4898 ;; Return value:  Size  Location     Type
  4899 ;;                  1    wreg      void 
  4900 ;; Registers used:
  4901 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4902 ;; Tracked objects:
  4903 ;;		On entry : 0/0
  4904 ;;		On exit  : 0/0
  4905 ;;		Unchanged: 0/0
  4906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4907 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4908 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4909 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4910 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4911 ;;Total ram usage:        7 bytes
  4912 ;; Hardware stack levels used: 1
  4913 ;; Hardware stack levels required when called: 12
  4914 ;; This function calls:
  4915 ;;		_fullSpeedBackwards
  4916 ;;		_stop
  4917 ;;		_turnRight135
  4918 ;; This function is called by:
  4919 ;;		_MoveBuggy
  4920 ;; This function uses a non-reentrant model
  4921 ;;
  4922                           
  4923                           	psect	text16
  4924   0021EA                     __ptext16:
  4925                           	callstack 0
  4926   0021EA                     _OrangeInstructions:
  4927                           	callstack 16
  4928   0021EA                     
  4929                           ;color_instructions.c: 88:     unsigned char a=0;
  4930   0021EA  0E00               	movlw	0
  4931   0021EC  6E32               	movwf	OrangeInstructions@a^0,c
  4932                           
  4933                           ;color_instructions.c: 89:     while (a<16){
  4934   0021EE  EF04  F011         	goto	l3126
  4935   0021F2                     l3122:
  4936                           
  4937                           ;color_instructions.c: 90:         fullSpeedBackwards(mL, mR);
  4938   0021F2  C02C  F01C         	movff	OrangeInstructions@mL,fullSpeedBackwards@mL
  4939   0021F6  C02D  F01D         	movff	OrangeInstructions@mL+1,fullSpeedBackwards@mL+1
  4940   0021FA  C02E  F01E         	movff	OrangeInstructions@mR,fullSpeedBackwards@mR
  4941   0021FE  C02F  F01F         	movff	OrangeInstructions@mR+1,fullSpeedBackwards@mR+1
  4942   002202  EC8D  F00D         	call	_fullSpeedBackwards	;wreg free
  4943   002206                     
  4944                           ;color_instructions.c: 91:         a++;
  4945   002206  2A32               	incf	OrangeInstructions@a^0,f,c
  4946   002208                     l3126:
  4947                           
  4948                           ;color_instructions.c: 89:     while (a<16){
  4949   002208  0E0F               	movlw	15
  4950   00220A  6432               	cpfsgt	OrangeInstructions@a^0,c
  4951   00220C  EF0A  F011         	goto	u2421
  4952   002210  EF0C  F011         	goto	u2420
  4953   002214                     u2421:
  4954   002214  EFF9  F010         	goto	l3122
  4955   002218                     u2420:
  4956   002218  EF19  F011         	goto	l3132
  4957   00221C                     l3128:
  4958                           
  4959                           ;color_instructions.c: 94:         stop(mL, mR);
  4960   00221C  C02C  F01C         	movff	OrangeInstructions@mL,stop@mL
  4961   002220  C02D  F01D         	movff	OrangeInstructions@mL+1,stop@mL+1
  4962   002224  C02E  F01E         	movff	OrangeInstructions@mR,stop@mR
  4963   002228  C02F  F01F         	movff	OrangeInstructions@mR+1,stop@mR+1
  4964   00222C  EC04  F00E         	call	_stop	;wreg free
  4965   002230                     
  4966                           ;color_instructions.c: 95:         a--;
  4967   002230  0632               	decf	OrangeInstructions@a^0,f,c
  4968   002232                     l3132:
  4969                           
  4970                           ;color_instructions.c: 93:     while (a>0){
  4971   002232  5032               	movf	OrangeInstructions@a^0,w,c
  4972   002234  A4D8               	btfss	status,2,c
  4973   002236  EF1F  F011         	goto	u2431
  4974   00223A  EF21  F011         	goto	u2430
  4975   00223E                     u2431:
  4976   00223E  EF0E  F011         	goto	l3128
  4977   002242                     u2430:
  4978   002242                     
  4979                           ;color_instructions.c: 97:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4980   002242  0E05               	movlw	5
  4981   002244  6E31               	movwf	(??_OrangeInstructions+1)^0,c
  4982   002246  0E0F               	movlw	15
  4983   002248  6E30               	movwf	??_OrangeInstructions^0,c
  4984   00224A  0EF1               	movlw	241
  4985   00224C                     u4597:
  4986   00224C  2EE8               	decfsz	wreg,f,c
  4987   00224E  D7FE               	bra	u4597
  4988   002250  2E30               	decfsz	??_OrangeInstructions^0,f,c
  4989   002252  D7FC               	bra	u4597
  4990   002254  2E31               	decfsz	(??_OrangeInstructions+1)^0,f,c
  4991   002256  D7FA               	bra	u4597
  4992   002258  F000               	nop	
  4993   00225A                     
  4994                           ;color_instructions.c: 98:     turnRight135(mL, mR);
  4995   00225A  C02C  F027         	movff	OrangeInstructions@mL,turnRight135@mL
  4996   00225E  C02D  F028         	movff	OrangeInstructions@mL+1,turnRight135@mL+1
  4997   002262  C02E  F029         	movff	OrangeInstructions@mR,turnRight135@mR
  4998   002266  C02F  F02A         	movff	OrangeInstructions@mR+1,turnRight135@mR+1
  4999   00226A  EC3B  F012         	call	_turnRight135	;wreg free
  5000   00226E  0012               	return		;funcret
  5001   002270                     __end_of_OrangeInstructions:
  5002                           	callstack 0
  5003                           
  5004 ;; *************** function _turnRight135 *****************
  5005 ;; Defined at:
  5006 ;;		line 249 in file "dc_motor.c"
  5007 ;; Parameters:    Size  Location     Type
  5008 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  5009 ;;		 -> main@motorL(9), 
  5010 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  5011 ;;		 -> main@motorR(9), 
  5012 ;; Auto vars:     Size  Location     Type
  5013 ;;  a               1   42[COMRAM] unsigned char 
  5014 ;; Return value:  Size  Location     Type
  5015 ;;                  1    wreg      void 
  5016 ;; Registers used:
  5017 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5018 ;; Tracked objects:
  5019 ;;		On entry : 0/0
  5020 ;;		On exit  : 0/0
  5021 ;;		Unchanged: 0/0
  5022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5023 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5024 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5026 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5027 ;;Total ram usage:        5 bytes
  5028 ;; Hardware stack levels used: 1
  5029 ;; Hardware stack levels required when called: 11
  5030 ;; This function calls:
  5031 ;;		_stop
  5032 ;;		_turnRight
  5033 ;;		_turnRight90
  5034 ;; This function is called by:
  5035 ;;		_OrangeInstructions
  5036 ;; This function uses a non-reentrant model
  5037 ;;
  5038                           
  5039                           	psect	text17
  5040   002476                     __ptext17:
  5041                           	callstack 0
  5042   002476                     _turnRight135:
  5043                           	callstack 16
  5044   002476                     
  5045                           ;dc_motor.c: 251:     turnRight90(mL,mR);
  5046   002476  C027  F022         	movff	turnRight135@mL,turnRight90@mL
  5047   00247A  C028  F023         	movff	turnRight135@mL+1,turnRight90@mL+1
  5048   00247E  C029  F024         	movff	turnRight135@mR,turnRight90@mR
  5049   002482  C02A  F025         	movff	turnRight135@mR+1,turnRight90@mR+1
  5050   002486  EC79  F00F         	call	_turnRight90	;wreg free
  5051   00248A                     
  5052                           ;dc_motor.c: 252:     unsigned char a=0;
  5053   00248A  0E00               	movlw	0
  5054   00248C  6E2B               	movwf	turnRight135@a^0,c
  5055                           
  5056                           ;dc_motor.c: 253:     while(a<15){
  5057   00248E  EF54  F012         	goto	l2960
  5058   002492                     l2956:
  5059                           
  5060                           ;dc_motor.c: 254:         turnRight(mL, mR);
  5061   002492  C027  F01C         	movff	turnRight135@mL,turnRight@mL
  5062   002496  C028  F01D         	movff	turnRight135@mL+1,turnRight@mL+1
  5063   00249A  C029  F01E         	movff	turnRight135@mR,turnRight@mR
  5064   00249E  C02A  F01F         	movff	turnRight135@mR+1,turnRight@mR+1
  5065   0024A2  EC28  F00C         	call	_turnRight	;wreg free
  5066   0024A6                     
  5067                           ;dc_motor.c: 255:         a++;
  5068   0024A6  2A2B               	incf	turnRight135@a^0,f,c
  5069   0024A8                     l2960:
  5070                           
  5071                           ;dc_motor.c: 253:     while(a<15){
  5072   0024A8  0E0E               	movlw	14
  5073   0024AA  642B               	cpfsgt	turnRight135@a^0,c
  5074   0024AC  EF5A  F012         	goto	u2261
  5075   0024B0  EF5C  F012         	goto	u2260
  5076   0024B4                     u2261:
  5077   0024B4  EF49  F012         	goto	l2956
  5078   0024B8                     u2260:
  5079   0024B8  EF69  F012         	goto	l2966
  5080   0024BC                     l2962:
  5081                           
  5082                           ;dc_motor.c: 258:         stop(mL, mR);
  5083   0024BC  C027  F01C         	movff	turnRight135@mL,stop@mL
  5084   0024C0  C028  F01D         	movff	turnRight135@mL+1,stop@mL+1
  5085   0024C4  C029  F01E         	movff	turnRight135@mR,stop@mR
  5086   0024C8  C02A  F01F         	movff	turnRight135@mR+1,stop@mR+1
  5087   0024CC  EC04  F00E         	call	_stop	;wreg free
  5088   0024D0                     
  5089                           ;dc_motor.c: 259:         a--;
  5090   0024D0  062B               	decf	turnRight135@a^0,f,c
  5091   0024D2                     l2966:
  5092                           
  5093                           ;dc_motor.c: 257:     while(a>0){
  5094   0024D2  502B               	movf	turnRight135@a^0,w,c
  5095   0024D4  A4D8               	btfss	status,2,c
  5096   0024D6  EF6F  F012         	goto	u2271
  5097   0024DA  EF71  F012         	goto	u2270
  5098   0024DE                     u2271:
  5099   0024DE  EF5E  F012         	goto	l2962
  5100   0024E2                     u2270:
  5101   0024E2  0012               	return		;funcret
  5102   0024E4                     __end_of_turnRight135:
  5103                           	callstack 0
  5104                           
  5105 ;; *************** function _LightBlueInstructions *****************
  5106 ;; Defined at:
  5107 ;;		line 101 in file "color_instructions.c"
  5108 ;; Parameters:    Size  Location     Type
  5109 ;;  mL              2   43[COMRAM] PTR struct DC_motor
  5110 ;;		 -> main@motorL(9), 
  5111 ;;  mR              2   45[COMRAM] PTR struct DC_motor
  5112 ;;		 -> main@motorR(9), 
  5113 ;; Auto vars:     Size  Location     Type
  5114 ;;  a               1   49[COMRAM] unsigned char 
  5115 ;; Return value:  Size  Location     Type
  5116 ;;                  1    wreg      void 
  5117 ;; Registers used:
  5118 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5119 ;; Tracked objects:
  5120 ;;		On entry : 0/0
  5121 ;;		On exit  : 0/0
  5122 ;;		Unchanged: 0/0
  5123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5124 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5125 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5126 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5127 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5128 ;;Total ram usage:        7 bytes
  5129 ;; Hardware stack levels used: 1
  5130 ;; Hardware stack levels required when called: 12
  5131 ;; This function calls:
  5132 ;;		_fullSpeedBackwards
  5133 ;;		_stop
  5134 ;;		_turnLeft135
  5135 ;; This function is called by:
  5136 ;;		_MoveBuggy
  5137 ;; This function uses a non-reentrant model
  5138 ;;
  5139                           
  5140                           	psect	text18
  5141   002270                     __ptext18:
  5142                           	callstack 0
  5143   002270                     _LightBlueInstructions:
  5144                           	callstack 16
  5145   002270                     
  5146                           ;color_instructions.c: 102:     unsigned char a=0;
  5147   002270  0E00               	movlw	0
  5148   002272  6E32               	movwf	LightBlueInstructions@a^0,c
  5149                           
  5150                           ;color_instructions.c: 103:     while (a<16){
  5151   002274  EF47  F011         	goto	l3144
  5152   002278                     l3140:
  5153                           
  5154                           ;color_instructions.c: 104:         fullSpeedBackwards(mL, mR);
  5155   002278  C02C  F01C         	movff	LightBlueInstructions@mL,fullSpeedBackwards@mL
  5156   00227C  C02D  F01D         	movff	LightBlueInstructions@mL+1,fullSpeedBackwards@mL+1
  5157   002280  C02E  F01E         	movff	LightBlueInstructions@mR,fullSpeedBackwards@mR
  5158   002284  C02F  F01F         	movff	LightBlueInstructions@mR+1,fullSpeedBackwards@mR+1
  5159   002288  EC8D  F00D         	call	_fullSpeedBackwards	;wreg free
  5160   00228C                     
  5161                           ;color_instructions.c: 105:         a++;
  5162   00228C  2A32               	incf	LightBlueInstructions@a^0,f,c
  5163   00228E                     l3144:
  5164                           
  5165                           ;color_instructions.c: 103:     while (a<16){
  5166   00228E  0E0F               	movlw	15
  5167   002290  6432               	cpfsgt	LightBlueInstructions@a^0,c
  5168   002292  EF4D  F011         	goto	u2441
  5169   002296  EF4F  F011         	goto	u2440
  5170   00229A                     u2441:
  5171   00229A  EF3C  F011         	goto	l3140
  5172   00229E                     u2440:
  5173   00229E  EF5C  F011         	goto	l3150
  5174   0022A2                     l3146:
  5175                           
  5176                           ;color_instructions.c: 108:         stop(mL, mR);
  5177   0022A2  C02C  F01C         	movff	LightBlueInstructions@mL,stop@mL
  5178   0022A6  C02D  F01D         	movff	LightBlueInstructions@mL+1,stop@mL+1
  5179   0022AA  C02E  F01E         	movff	LightBlueInstructions@mR,stop@mR
  5180   0022AE  C02F  F01F         	movff	LightBlueInstructions@mR+1,stop@mR+1
  5181   0022B2  EC04  F00E         	call	_stop	;wreg free
  5182   0022B6                     
  5183                           ;color_instructions.c: 109:         a--;
  5184   0022B6  0632               	decf	LightBlueInstructions@a^0,f,c
  5185   0022B8                     l3150:
  5186                           
  5187                           ;color_instructions.c: 107:     while (a>0){
  5188   0022B8  5032               	movf	LightBlueInstructions@a^0,w,c
  5189   0022BA  A4D8               	btfss	status,2,c
  5190   0022BC  EF62  F011         	goto	u2451
  5191   0022C0  EF64  F011         	goto	u2450
  5192   0022C4                     u2451:
  5193   0022C4  EF51  F011         	goto	l3146
  5194   0022C8                     u2450:
  5195   0022C8                     
  5196                           ;color_instructions.c: 111:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5197   0022C8  0E05               	movlw	5
  5198   0022CA  6E31               	movwf	(??_LightBlueInstructions+1)^0,c
  5199   0022CC  0E0F               	movlw	15
  5200   0022CE  6E30               	movwf	??_LightBlueInstructions^0,c
  5201   0022D0  0EF1               	movlw	241
  5202   0022D2                     u4607:
  5203   0022D2  2EE8               	decfsz	wreg,f,c
  5204   0022D4  D7FE               	bra	u4607
  5205   0022D6  2E30               	decfsz	??_LightBlueInstructions^0,f,c
  5206   0022D8  D7FC               	bra	u4607
  5207   0022DA  2E31               	decfsz	(??_LightBlueInstructions+1)^0,f,c
  5208   0022DC  D7FA               	bra	u4607
  5209   0022DE  F000               	nop	
  5210   0022E0                     
  5211                           ;color_instructions.c: 112:     turnLeft135(mL, mR);
  5212   0022E0  C02C  F027         	movff	LightBlueInstructions@mL,turnLeft135@mL
  5213   0022E4  C02D  F028         	movff	LightBlueInstructions@mL+1,turnLeft135@mL+1
  5214   0022E8  C02E  F029         	movff	LightBlueInstructions@mR,turnLeft135@mR
  5215   0022EC  C02F  F02A         	movff	LightBlueInstructions@mR+1,turnLeft135@mR+1
  5216   0022F0  EC72  F012         	call	_turnLeft135	;wreg free
  5217   0022F4  0012               	return		;funcret
  5218   0022F6                     __end_of_LightBlueInstructions:
  5219                           	callstack 0
  5220                           
  5221 ;; *************** function _turnLeft135 *****************
  5222 ;; Defined at:
  5223 ;;		line 263 in file "dc_motor.c"
  5224 ;; Parameters:    Size  Location     Type
  5225 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  5226 ;;		 -> main@motorL(9), 
  5227 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  5228 ;;		 -> main@motorR(9), 
  5229 ;; Auto vars:     Size  Location     Type
  5230 ;;  a               1   42[COMRAM] unsigned char 
  5231 ;; Return value:  Size  Location     Type
  5232 ;;                  1    wreg      void 
  5233 ;; Registers used:
  5234 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5235 ;; Tracked objects:
  5236 ;;		On entry : 0/0
  5237 ;;		On exit  : 0/0
  5238 ;;		Unchanged: 0/0
  5239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5240 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5241 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5243 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5244 ;;Total ram usage:        5 bytes
  5245 ;; Hardware stack levels used: 1
  5246 ;; Hardware stack levels required when called: 11
  5247 ;; This function calls:
  5248 ;;		_stop
  5249 ;;		_turnLeft
  5250 ;;		_turnLeft90
  5251 ;; This function is called by:
  5252 ;;		_LightBlueInstructions
  5253 ;; This function uses a non-reentrant model
  5254 ;;
  5255                           
  5256                           	psect	text19
  5257   0024E4                     __ptext19:
  5258                           	callstack 0
  5259   0024E4                     _turnLeft135:
  5260                           	callstack 16
  5261   0024E4                     
  5262                           ;dc_motor.c: 265:     turnLeft90(mL,mR);
  5263   0024E4  C027  F022         	movff	turnLeft135@mL,turnLeft90@mL
  5264   0024E8  C028  F023         	movff	turnLeft135@mL+1,turnLeft90@mL+1
  5265   0024EC  C029  F024         	movff	turnLeft135@mR,turnLeft90@mR
  5266   0024F0  C02A  F025         	movff	turnLeft135@mR+1,turnLeft90@mR+1
  5267   0024F4  ECD0  F00F         	call	_turnLeft90	;wreg free
  5268   0024F8                     
  5269                           ;dc_motor.c: 266:     unsigned char a=0;
  5270   0024F8  0E00               	movlw	0
  5271   0024FA  6E2B               	movwf	turnLeft135@a^0,c
  5272                           
  5273                           ;dc_motor.c: 267:     while(a<16){
  5274   0024FC  EF8B  F012         	goto	l2976
  5275   002500                     l2972:
  5276                           
  5277                           ;dc_motor.c: 268:         turnLeft(mL, mR);
  5278   002500  C027  F01C         	movff	turnLeft135@mL,turnLeft@mL
  5279   002504  C028  F01D         	movff	turnLeft135@mL+1,turnLeft@mL+1
  5280   002508  C029  F01E         	movff	turnLeft135@mR,turnLeft@mR
  5281   00250C  C02A  F01F         	movff	turnLeft135@mR+1,turnLeft@mR+1
  5282   002510  EC16  F00D         	call	_turnLeft	;wreg free
  5283   002514                     
  5284                           ;dc_motor.c: 269:         a++;
  5285   002514  2A2B               	incf	turnLeft135@a^0,f,c
  5286   002516                     l2976:
  5287                           
  5288                           ;dc_motor.c: 267:     while(a<16){
  5289   002516  0E0F               	movlw	15
  5290   002518  642B               	cpfsgt	turnLeft135@a^0,c
  5291   00251A  EF91  F012         	goto	u2281
  5292   00251E  EF93  F012         	goto	u2280
  5293   002522                     u2281:
  5294   002522  EF80  F012         	goto	l2972
  5295   002526                     u2280:
  5296   002526  EFA0  F012         	goto	l2982
  5297   00252A                     l2978:
  5298                           
  5299                           ;dc_motor.c: 272:         stop(mL, mR);
  5300   00252A  C027  F01C         	movff	turnLeft135@mL,stop@mL
  5301   00252E  C028  F01D         	movff	turnLeft135@mL+1,stop@mL+1
  5302   002532  C029  F01E         	movff	turnLeft135@mR,stop@mR
  5303   002536  C02A  F01F         	movff	turnLeft135@mR+1,stop@mR+1
  5304   00253A  EC04  F00E         	call	_stop	;wreg free
  5305   00253E                     
  5306                           ;dc_motor.c: 273:         a--;
  5307   00253E  062B               	decf	turnLeft135@a^0,f,c
  5308   002540                     l2982:
  5309                           
  5310                           ;dc_motor.c: 271:     while(a>0){
  5311   002540  502B               	movf	turnLeft135@a^0,w,c
  5312   002542  A4D8               	btfss	status,2,c
  5313   002544  EFA6  F012         	goto	u2291
  5314   002548  EFA8  F012         	goto	u2290
  5315   00254C                     u2291:
  5316   00254C  EF95  F012         	goto	l2978
  5317   002550                     u2290:
  5318   002550  0012               	return		;funcret
  5319   002552                     __end_of_turnLeft135:
  5320                           	callstack 0
  5321                           
  5322 ;; *************** function _AppendMoves *****************
  5323 ;; Defined at:
  5324 ;;		line 17 in file "Memorization.c"
  5325 ;; Parameters:    Size  Location     Type
  5326 ;;  temp            1    wreg     unsigned char 
  5327 ;;  moves_index     2    8[COMRAM] PTR unsigned char 
  5328 ;;		 -> moves_index(1), 
  5329 ;;  anti_moves_a    2   10[COMRAM] PTR unsigned char 
  5330 ;;		 -> anti_moves_array(40), 
  5331 ;; Auto vars:     Size  Location     Type
  5332 ;;  temp            1   13[COMRAM] unsigned char 
  5333 ;; Return value:  Size  Location     Type
  5334 ;;                  1    wreg      void 
  5335 ;; Registers used:
  5336 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5337 ;; Tracked objects:
  5338 ;;		On entry : 0/0
  5339 ;;		On exit  : 0/0
  5340 ;;		Unchanged: 0/0
  5341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5342 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5343 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5344 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5345 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5346 ;;Total ram usage:        6 bytes
  5347 ;; Hardware stack levels used: 1
  5348 ;; Hardware stack levels required when called: 7
  5349 ;; This function calls:
  5350 ;;		Nothing
  5351 ;; This function is called by:
  5352 ;;		_MoveBuggy
  5353 ;; This function uses a non-reentrant model
  5354 ;;
  5355                           
  5356                           	psect	text20
  5357   002956                     __ptext20:
  5358                           	callstack 0
  5359   002956                     _AppendMoves:
  5360                           	callstack 21
  5361                           
  5362                           ;incstack = 0
  5363                           ;AppendMoves@temp stored from wreg
  5364   002956  6E0E               	movwf	AppendMoves@temp^0,c
  5365   002958                     
  5366                           ;Memorization.c: 19:     anti_moves_array[(*moves_index)++] = temp;
  5367   002958  C009  FFD9         	movff	AppendMoves@moves_index,fsr2l
  5368   00295C  C00A  FFDA         	movff	AppendMoves@moves_index+1,fsr2h
  5369   002960  CFDF F00D          	movff	indf2,??_AppendMoves
  5370   002964  0E01               	movlw	1
  5371   002966  26DF               	addwf	indf2,f,c
  5372   002968  500D               	movf	??_AppendMoves^0,w,c
  5373   00296A  240B               	addwf	AppendMoves@anti_moves_array^0,w,c
  5374   00296C  6ED9               	movwf	fsr2l,c
  5375   00296E  0E00               	movlw	0
  5376   002970  200C               	addwfc	(AppendMoves@anti_moves_array+1)^0,w,c
  5377   002972  6EDA               	movwf	fsr2h,c
  5378   002974  C00E  FFDF         	movff	AppendMoves@temp,indf2
  5379   002978  0012               	return		;funcret
  5380   00297A                     __end_of_AppendMoves:
  5381                           	callstack 0
  5382                           
  5383 ;; *************** function _AntiYellow *****************
  5384 ;; Defined at:
  5385 ;;		line 115 in file "color_instructions.c"
  5386 ;; Parameters:    Size  Location     Type
  5387 ;;  mL              2   45[COMRAM] PTR struct DC_motor
  5388 ;;		 -> main@motorL(9), 
  5389 ;;  mR              2   47[COMRAM] PTR struct DC_motor
  5390 ;;		 -> main@motorR(9), 
  5391 ;; Auto vars:     Size  Location     Type
  5392 ;;  a               1   51[COMRAM] unsigned char 
  5393 ;; Return value:  Size  Location     Type
  5394 ;;                  1    wreg      void 
  5395 ;; Registers used:
  5396 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5397 ;; Tracked objects:
  5398 ;;		On entry : 0/0
  5399 ;;		On exit  : 0/0
  5400 ;;		Unchanged: 0/0
  5401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5402 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5403 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5404 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5405 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5406 ;;Total ram usage:        7 bytes
  5407 ;; Hardware stack levels used: 1
  5408 ;; Hardware stack levels required when called: 12
  5409 ;; This function calls:
  5410 ;;		_BlueInstructions
  5411 ;;		_RedInstructions
  5412 ;;		_fullSpeedAhead
  5413 ;;		_stop
  5414 ;; This function is called by:
  5415 ;;		_MoveBuggy
  5416 ;; This function uses a non-reentrant model
  5417 ;;
  5418                           
  5419                           	psect	text21
  5420   001CDC                     __ptext21:
  5421                           	callstack 0
  5422   001CDC                     _AntiYellow:
  5423                           	callstack 16
  5424   001CDC                     
  5425                           ;color_instructions.c: 116:     unsigned char a=0;
  5426   001CDC  0E00               	movlw	0
  5427   001CDE  6E34               	movwf	AntiYellow@a^0,c
  5428   001CE0                     
  5429                           ;color_instructions.c: 118:     RedInstructions(mL, mR);
  5430   001CE0  C02E  F027         	movff	AntiYellow@mL,RedInstructions@mL
  5431   001CE4  C02F  F028         	movff	AntiYellow@mL+1,RedInstructions@mL+1
  5432   001CE8  C030  F029         	movff	AntiYellow@mR,RedInstructions@mR
  5433   001CEC  C031  F02A         	movff	AntiYellow@mR+1,RedInstructions@mR+1
  5434   001CF0  EC7B  F011         	call	_RedInstructions	;wreg free
  5435   001CF4                     
  5436                           ;color_instructions.c: 119:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5437   001CF4  0E05               	movlw	5
  5438   001CF6  6E33               	movwf	(??_AntiYellow+1)^0,c
  5439   001CF8  0E0F               	movlw	15
  5440   001CFA  6E32               	movwf	??_AntiYellow^0,c
  5441   001CFC  0EF1               	movlw	241
  5442   001CFE                     u4617:
  5443   001CFE  2EE8               	decfsz	wreg,f,c
  5444   001D00  D7FE               	bra	u4617
  5445   001D02  2E32               	decfsz	??_AntiYellow^0,f,c
  5446   001D04  D7FC               	bra	u4617
  5447   001D06  2E33               	decfsz	(??_AntiYellow+1)^0,f,c
  5448   001D08  D7FA               	bra	u4617
  5449   001D0A  F000               	nop	
  5450                           
  5451                           ;color_instructions.c: 121:     while (a<45){
  5452   001D0C  EF93  F00E         	goto	l3166
  5453   001D10                     l3162:
  5454                           
  5455                           ;color_instructions.c: 122:         fullSpeedAhead(mL, mR);
  5456   001D10  C02E  F01C         	movff	AntiYellow@mL,fullSpeedAhead@mL
  5457   001D14  C02F  F01D         	movff	AntiYellow@mL+1,fullSpeedAhead@mL+1
  5458   001D18  C030  F01E         	movff	AntiYellow@mR,fullSpeedAhead@mR
  5459   001D1C  C031  F01F         	movff	AntiYellow@mR+1,fullSpeedAhead@mR+1
  5460   001D20  EC9F  F00C         	call	_fullSpeedAhead	;wreg free
  5461   001D24                     
  5462                           ;color_instructions.c: 123:         a++;
  5463   001D24  2A34               	incf	AntiYellow@a^0,f,c
  5464   001D26                     l3166:
  5465                           
  5466                           ;color_instructions.c: 121:     while (a<45){
  5467   001D26  0E2C               	movlw	44
  5468   001D28  6434               	cpfsgt	AntiYellow@a^0,c
  5469   001D2A  EF99  F00E         	goto	u2461
  5470   001D2E  EF9B  F00E         	goto	u2460
  5471   001D32                     u2461:
  5472   001D32  EF88  F00E         	goto	l3162
  5473   001D36                     u2460:
  5474   001D36  EFA8  F00E         	goto	l3172
  5475   001D3A                     l3168:
  5476                           
  5477                           ;color_instructions.c: 126:         stop(mL, mR);
  5478   001D3A  C02E  F01C         	movff	AntiYellow@mL,stop@mL
  5479   001D3E  C02F  F01D         	movff	AntiYellow@mL+1,stop@mL+1
  5480   001D42  C030  F01E         	movff	AntiYellow@mR,stop@mR
  5481   001D46  C031  F01F         	movff	AntiYellow@mR+1,stop@mR+1
  5482   001D4A  EC04  F00E         	call	_stop	;wreg free
  5483   001D4E                     
  5484                           ;color_instructions.c: 127:         a--;
  5485   001D4E  0634               	decf	AntiYellow@a^0,f,c
  5486   001D50                     l3172:
  5487                           
  5488                           ;color_instructions.c: 125:     while (a>0){
  5489   001D50  5034               	movf	AntiYellow@a^0,w,c
  5490   001D52  A4D8               	btfss	status,2,c
  5491   001D54  EFAE  F00E         	goto	u2471
  5492   001D58  EFB0  F00E         	goto	u2470
  5493   001D5C                     u2471:
  5494   001D5C  EF9D  F00E         	goto	l3168
  5495   001D60                     u2470:
  5496   001D60                     
  5497                           ;color_instructions.c: 129:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5498   001D60  0E05               	movlw	5
  5499   001D62  6E33               	movwf	(??_AntiYellow+1)^0,c
  5500   001D64  0E0F               	movlw	15
  5501   001D66  6E32               	movwf	??_AntiYellow^0,c
  5502   001D68  0EF1               	movlw	241
  5503   001D6A                     u4627:
  5504   001D6A  2EE8               	decfsz	wreg,f,c
  5505   001D6C  D7FE               	bra	u4627
  5506   001D6E  2E32               	decfsz	??_AntiYellow^0,f,c
  5507   001D70  D7FC               	bra	u4627
  5508   001D72  2E33               	decfsz	(??_AntiYellow+1)^0,f,c
  5509   001D74  D7FA               	bra	u4627
  5510   001D76  F000               	nop	
  5511   001D78                     
  5512                           ;color_instructions.c: 131:     BlueInstructions(mL, mR);
  5513   001D78  C02E  F027         	movff	AntiYellow@mL,BlueInstructions@mL
  5514   001D7C  C02F  F028         	movff	AntiYellow@mL+1,BlueInstructions@mL+1
  5515   001D80  C030  F029         	movff	AntiYellow@mR,BlueInstructions@mR
  5516   001D84  C031  F02A         	movff	AntiYellow@mR+1,BlueInstructions@mR+1
  5517   001D88  EC20  F00F         	call	_BlueInstructions	;wreg free
  5518   001D8C  0012               	return		;funcret
  5519   001D8E                     __end_of_AntiYellow:
  5520                           	callstack 0
  5521                           
  5522 ;; *************** function _RedInstructions *****************
  5523 ;; Defined at:
  5524 ;;		line 10 in file "color_instructions.c"
  5525 ;; Parameters:    Size  Location     Type
  5526 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  5527 ;;		 -> main@motorL(9), 
  5528 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  5529 ;;		 -> main@motorR(9), 
  5530 ;; Auto vars:     Size  Location     Type
  5531 ;;  a               1   44[COMRAM] unsigned char 
  5532 ;; Return value:  Size  Location     Type
  5533 ;;                  1    wreg      void 
  5534 ;; Registers used:
  5535 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5536 ;; Tracked objects:
  5537 ;;		On entry : 0/0
  5538 ;;		On exit  : 0/0
  5539 ;;		Unchanged: 0/0
  5540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5541 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5542 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5543 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5544 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5545 ;;Total ram usage:        7 bytes
  5546 ;; Hardware stack levels used: 1
  5547 ;; Hardware stack levels required when called: 11
  5548 ;; This function calls:
  5549 ;;		_fullSpeedBackwards
  5550 ;;		_stop
  5551 ;;		_turnRight90
  5552 ;; This function is called by:
  5553 ;;		_AntiYellow
  5554 ;;		_MoveBuggy
  5555 ;; This function uses a non-reentrant model
  5556 ;;
  5557                           
  5558                           	psect	text22
  5559   0022F6                     __ptext22:
  5560                           	callstack 0
  5561   0022F6                     _RedInstructions:
  5562                           	callstack 17
  5563   0022F6                     
  5564                           ;color_instructions.c: 12:     unsigned char a=0;
  5565   0022F6  0E00               	movlw	0
  5566   0022F8  6E2D               	movwf	RedInstructions@a^0,c
  5567                           
  5568                           ;color_instructions.c: 13:     while (a<16){
  5569   0022FA  EF8A  F011         	goto	l2990
  5570   0022FE                     l2986:
  5571                           
  5572                           ;color_instructions.c: 14:         fullSpeedBackwards(mL, mR);
  5573   0022FE  C027  F01C         	movff	RedInstructions@mL,fullSpeedBackwards@mL
  5574   002302  C028  F01D         	movff	RedInstructions@mL+1,fullSpeedBackwards@mL+1
  5575   002306  C029  F01E         	movff	RedInstructions@mR,fullSpeedBackwards@mR
  5576   00230A  C02A  F01F         	movff	RedInstructions@mR+1,fullSpeedBackwards@mR+1
  5577   00230E  EC8D  F00D         	call	_fullSpeedBackwards	;wreg free
  5578   002312                     
  5579                           ;color_instructions.c: 15:         a++;
  5580   002312  2A2D               	incf	RedInstructions@a^0,f,c
  5581   002314                     l2990:
  5582                           
  5583                           ;color_instructions.c: 13:     while (a<16){
  5584   002314  0E0F               	movlw	15
  5585   002316  642D               	cpfsgt	RedInstructions@a^0,c
  5586   002318  EF90  F011         	goto	u2301
  5587   00231C  EF92  F011         	goto	u2300
  5588   002320                     u2301:
  5589   002320  EF7F  F011         	goto	l2986
  5590   002324                     u2300:
  5591   002324  EF9F  F011         	goto	l2996
  5592   002328                     l2992:
  5593                           
  5594                           ;color_instructions.c: 18:         stop(mL, mR);
  5595   002328  C027  F01C         	movff	RedInstructions@mL,stop@mL
  5596   00232C  C028  F01D         	movff	RedInstructions@mL+1,stop@mL+1
  5597   002330  C029  F01E         	movff	RedInstructions@mR,stop@mR
  5598   002334  C02A  F01F         	movff	RedInstructions@mR+1,stop@mR+1
  5599   002338  EC04  F00E         	call	_stop	;wreg free
  5600   00233C                     
  5601                           ;color_instructions.c: 19:         a--;
  5602   00233C  062D               	decf	RedInstructions@a^0,f,c
  5603   00233E                     l2996:
  5604                           
  5605                           ;color_instructions.c: 17:     while (a>0){
  5606   00233E  502D               	movf	RedInstructions@a^0,w,c
  5607   002340  A4D8               	btfss	status,2,c
  5608   002342  EFA5  F011         	goto	u2311
  5609   002346  EFA7  F011         	goto	u2310
  5610   00234A                     u2311:
  5611   00234A  EF94  F011         	goto	l2992
  5612   00234E                     u2310:
  5613   00234E                     
  5614                           ;color_instructions.c: 21:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5615   00234E  0E05               	movlw	5
  5616   002350  6E2C               	movwf	(??_RedInstructions+1)^0,c
  5617   002352  0E0F               	movlw	15
  5618   002354  6E2B               	movwf	??_RedInstructions^0,c
  5619   002356  0EF1               	movlw	241
  5620   002358                     u4637:
  5621   002358  2EE8               	decfsz	wreg,f,c
  5622   00235A  D7FE               	bra	u4637
  5623   00235C  2E2B               	decfsz	??_RedInstructions^0,f,c
  5624   00235E  D7FC               	bra	u4637
  5625   002360  2E2C               	decfsz	(??_RedInstructions+1)^0,f,c
  5626   002362  D7FA               	bra	u4637
  5627   002364  F000               	nop	
  5628   002366                     
  5629                           ;color_instructions.c: 22:     turnRight90(mL, mR);
  5630   002366  C027  F022         	movff	RedInstructions@mL,turnRight90@mL
  5631   00236A  C028  F023         	movff	RedInstructions@mL+1,turnRight90@mL+1
  5632   00236E  C029  F024         	movff	RedInstructions@mR,turnRight90@mR
  5633   002372  C02A  F025         	movff	RedInstructions@mR+1,turnRight90@mR+1
  5634   002376  EC79  F00F         	call	_turnRight90	;wreg free
  5635   00237A  0012               	return		;funcret
  5636   00237C                     __end_of_RedInstructions:
  5637                           	callstack 0
  5638                           
  5639 ;; *************** function _turnRight90 *****************
  5640 ;; Defined at:
  5641 ;;		line 221 in file "dc_motor.c"
  5642 ;; Parameters:    Size  Location     Type
  5643 ;;  mL              2   33[COMRAM] PTR struct DC_motor
  5644 ;;		 -> main@motorL(9), 
  5645 ;;  mR              2   35[COMRAM] PTR struct DC_motor
  5646 ;;		 -> main@motorR(9), 
  5647 ;; Auto vars:     Size  Location     Type
  5648 ;;  a               1   37[COMRAM] unsigned char 
  5649 ;; Return value:  Size  Location     Type
  5650 ;;                  1    wreg      void 
  5651 ;; Registers used:
  5652 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5653 ;; Tracked objects:
  5654 ;;		On entry : 0/0
  5655 ;;		On exit  : 0/0
  5656 ;;		Unchanged: 0/0
  5657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5658 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5659 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5661 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5662 ;;Total ram usage:        5 bytes
  5663 ;; Hardware stack levels used: 1
  5664 ;; Hardware stack levels required when called: 10
  5665 ;; This function calls:
  5666 ;;		_stop
  5667 ;;		_turnRight
  5668 ;; This function is called by:
  5669 ;;		_turnRight135
  5670 ;;		_RedInstructions
  5671 ;;		_YellowInstructions
  5672 ;; This function uses a non-reentrant model
  5673 ;;
  5674                           
  5675                           	psect	text23
  5676   001EF2                     __ptext23:
  5677                           	callstack 0
  5678   001EF2                     _turnRight90:
  5679                           	callstack 17
  5680   001EF2                     
  5681                           ;dc_motor.c: 223:     unsigned char a=0;
  5682   001EF2  0E00               	movlw	0
  5683   001EF4  6E26               	movwf	turnRight90@a^0,c
  5684                           
  5685                           ;dc_motor.c: 224:     while(a<15){
  5686   001EF6  EF88  F00F         	goto	l2908
  5687   001EFA                     l2904:
  5688                           
  5689                           ;dc_motor.c: 225:         turnRight(mL, mR);
  5690   001EFA  C022  F01C         	movff	turnRight90@mL,turnRight@mL
  5691   001EFE  C023  F01D         	movff	turnRight90@mL+1,turnRight@mL+1
  5692   001F02  C024  F01E         	movff	turnRight90@mR,turnRight@mR
  5693   001F06  C025  F01F         	movff	turnRight90@mR+1,turnRight@mR+1
  5694   001F0A  EC28  F00C         	call	_turnRight	;wreg free
  5695   001F0E                     
  5696                           ;dc_motor.c: 226:         a++;
  5697   001F0E  2A26               	incf	turnRight90@a^0,f,c
  5698   001F10                     l2908:
  5699                           
  5700                           ;dc_motor.c: 224:     while(a<15){
  5701   001F10  0E0E               	movlw	14
  5702   001F12  6426               	cpfsgt	turnRight90@a^0,c
  5703   001F14  EF8E  F00F         	goto	u2181
  5704   001F18  EF90  F00F         	goto	u2180
  5705   001F1C                     u2181:
  5706   001F1C  EF7D  F00F         	goto	l2904
  5707   001F20                     u2180:
  5708   001F20  EF9D  F00F         	goto	l2914
  5709   001F24                     l2910:
  5710                           
  5711                           ;dc_motor.c: 229:         stop(mL, mR);
  5712   001F24  C022  F01C         	movff	turnRight90@mL,stop@mL
  5713   001F28  C023  F01D         	movff	turnRight90@mL+1,stop@mL+1
  5714   001F2C  C024  F01E         	movff	turnRight90@mR,stop@mR
  5715   001F30  C025  F01F         	movff	turnRight90@mR+1,stop@mR+1
  5716   001F34  EC04  F00E         	call	_stop	;wreg free
  5717   001F38                     
  5718                           ;dc_motor.c: 230:         a--;
  5719   001F38  0626               	decf	turnRight90@a^0,f,c
  5720   001F3A                     l2914:
  5721                           
  5722                           ;dc_motor.c: 228:     while(a>0){
  5723   001F3A  5026               	movf	turnRight90@a^0,w,c
  5724   001F3C  A4D8               	btfss	status,2,c
  5725   001F3E  EFA3  F00F         	goto	u2191
  5726   001F42  EFA5  F00F         	goto	u2190
  5727   001F46                     u2191:
  5728   001F46  EF92  F00F         	goto	l2910
  5729   001F4A                     u2190:
  5730   001F4A  EFB2  F00F         	goto	l2920
  5731   001F4E                     l2916:
  5732                           
  5733                           ;dc_motor.c: 233:         turnRight(mL, mR);
  5734   001F4E  C022  F01C         	movff	turnRight90@mL,turnRight@mL
  5735   001F52  C023  F01D         	movff	turnRight90@mL+1,turnRight@mL+1
  5736   001F56  C024  F01E         	movff	turnRight90@mR,turnRight@mR
  5737   001F5A  C025  F01F         	movff	turnRight90@mR+1,turnRight@mR+1
  5738   001F5E  EC28  F00C         	call	_turnRight	;wreg free
  5739   001F62                     
  5740                           ;dc_motor.c: 234:         a++;
  5741   001F62  2A26               	incf	turnRight90@a^0,f,c
  5742   001F64                     l2920:
  5743                           
  5744                           ;dc_motor.c: 232:     while(a<15){
  5745   001F64  0E0E               	movlw	14
  5746   001F66  6426               	cpfsgt	turnRight90@a^0,c
  5747   001F68  EFB8  F00F         	goto	u2201
  5748   001F6C  EFBA  F00F         	goto	u2200
  5749   001F70                     u2201:
  5750   001F70  EFA7  F00F         	goto	l2916
  5751   001F74                     u2200:
  5752   001F74  EFC7  F00F         	goto	l2926
  5753   001F78                     l2922:
  5754                           
  5755                           ;dc_motor.c: 237:         stop(mL, mR);
  5756   001F78  C022  F01C         	movff	turnRight90@mL,stop@mL
  5757   001F7C  C023  F01D         	movff	turnRight90@mL+1,stop@mL+1
  5758   001F80  C024  F01E         	movff	turnRight90@mR,stop@mR
  5759   001F84  C025  F01F         	movff	turnRight90@mR+1,stop@mR+1
  5760   001F88  EC04  F00E         	call	_stop	;wreg free
  5761   001F8C                     
  5762                           ;dc_motor.c: 238:         a--;
  5763   001F8C  0626               	decf	turnRight90@a^0,f,c
  5764   001F8E                     l2926:
  5765                           
  5766                           ;dc_motor.c: 236:     while(a>0){
  5767   001F8E  5026               	movf	turnRight90@a^0,w,c
  5768   001F90  A4D8               	btfss	status,2,c
  5769   001F92  EFCD  F00F         	goto	u2211
  5770   001F96  EFCF  F00F         	goto	u2210
  5771   001F9A                     u2211:
  5772   001F9A  EFBC  F00F         	goto	l2922
  5773   001F9E                     u2210:
  5774   001F9E  0012               	return		;funcret
  5775   001FA0                     __end_of_turnRight90:
  5776                           	callstack 0
  5777                           
  5778 ;; *************** function _turnRight *****************
  5779 ;; Defined at:
  5780 ;;		line 129 in file "dc_motor.c"
  5781 ;; Parameters:    Size  Location     Type
  5782 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  5783 ;;		 -> main@motorL(9), 
  5784 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  5785 ;;		 -> main@motorR(9), 
  5786 ;; Auto vars:     Size  Location     Type
  5787 ;;		None
  5788 ;; Return value:  Size  Location     Type
  5789 ;;                  1    wreg      void 
  5790 ;; Registers used:
  5791 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5792 ;; Tracked objects:
  5793 ;;		On entry : 0/0
  5794 ;;		On exit  : 0/0
  5795 ;;		Unchanged: 0/0
  5796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5797 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5799 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5800 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5801 ;;Total ram usage:        6 bytes
  5802 ;; Hardware stack levels used: 1
  5803 ;; Hardware stack levels required when called: 9
  5804 ;; This function calls:
  5805 ;;		_setMotorPWM
  5806 ;; This function is called by:
  5807 ;;		_turnRight90
  5808 ;;		_turnRight135
  5809 ;; This function uses a non-reentrant model
  5810 ;;
  5811                           
  5812                           	psect	text24
  5813   001850                     __ptext24:
  5814                           	callstack 0
  5815   001850                     _turnRight:
  5816                           	callstack 17
  5817   001850                     
  5818                           ;dc_motor.c: 129: void turnRight(DC_motor *mL, DC_motor *mR);dc_motor.c: 130: {;dc_motor
      +                          .c: 132:     mL->direction = 1;
  5819   001850  EE20 F001          	lfsr	2,1
  5820   001854  501C               	movf	turnRight@mL^0,w,c
  5821   001856  26D9               	addwf	fsr2l,f,c
  5822   001858  501D               	movf	(turnRight@mL+1)^0,w,c
  5823   00185A  22DA               	addwfc	fsr2h,f,c
  5824   00185C  0E01               	movlw	1
  5825   00185E  6EDF               	movwf	indf2,c
  5826                           
  5827                           ;dc_motor.c: 133:     mL->brakemode = 0;
  5828   001860  EE20 F002          	lfsr	2,2
  5829   001864  501C               	movf	turnRight@mL^0,w,c
  5830   001866  26D9               	addwf	fsr2l,f,c
  5831   001868  501D               	movf	(turnRight@mL+1)^0,w,c
  5832   00186A  22DA               	addwfc	fsr2h,f,c
  5833   00186C  0E00               	movlw	0
  5834   00186E  6EDF               	movwf	indf2,c
  5835                           
  5836                           ;dc_motor.c: 135:     mR->direction = 0;
  5837   001870  EE20 F001          	lfsr	2,1
  5838   001874  501E               	movf	turnRight@mR^0,w,c
  5839   001876  26D9               	addwf	fsr2l,f,c
  5840   001878  501F               	movf	(turnRight@mR+1)^0,w,c
  5841   00187A  22DA               	addwfc	fsr2h,f,c
  5842   00187C  0E00               	movlw	0
  5843   00187E  6EDF               	movwf	indf2,c
  5844                           
  5845                           ;dc_motor.c: 136:     mR->brakemode = 0;
  5846   001880  EE20 F002          	lfsr	2,2
  5847   001884  501E               	movf	turnRight@mR^0,w,c
  5848   001886  26D9               	addwf	fsr2l,f,c
  5849   001888  501F               	movf	(turnRight@mR+1)^0,w,c
  5850   00188A  22DA               	addwfc	fsr2h,f,c
  5851   00188C  0E00               	movlw	0
  5852   00188E  6EDF               	movwf	indf2,c
  5853                           
  5854                           ;dc_motor.c: 139:     if(mL->power>62){mL->power=62;}
  5855   001890  C01C  FFD9         	movff	turnRight@mL,fsr2l
  5856   001894  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  5857   001898  50DF               	movf	indf2,w,c
  5858   00189A  0A80               	xorlw	128
  5859   00189C  0F41               	addlw	-191
  5860   00189E  A0D8               	btfss	status,0,c
  5861   0018A0  EF54  F00C         	goto	u2101
  5862   0018A4  EF56  F00C         	goto	u2100
  5863   0018A8                     u2101:
  5864   0018A8  EF5C  F00C         	goto	l2832
  5865   0018AC                     u2100:
  5866   0018AC  C01C  FFD9         	movff	turnRight@mL,fsr2l
  5867   0018B0  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  5868   0018B4  0E3E               	movlw	62
  5869   0018B6  6EDF               	movwf	indf2,c
  5870   0018B8                     l2832:
  5871                           
  5872                           ;dc_motor.c: 140:     if(mR->power>62){mR->power=62;}
  5873   0018B8  C01E  FFD9         	movff	turnRight@mR,fsr2l
  5874   0018BC  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  5875   0018C0  50DF               	movf	indf2,w,c
  5876   0018C2  0A80               	xorlw	128
  5877   0018C4  0F41               	addlw	-191
  5878   0018C6  A0D8               	btfss	status,0,c
  5879   0018C8  EF68  F00C         	goto	u2111
  5880   0018CC  EF6A  F00C         	goto	u2110
  5881   0018D0                     u2111:
  5882   0018D0  EF70  F00C         	goto	l2836
  5883   0018D4                     u2110:
  5884   0018D4  C01E  FFD9         	movff	turnRight@mR,fsr2l
  5885   0018D8  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  5886   0018DC  0E3E               	movlw	62
  5887   0018DE  6EDF               	movwf	indf2,c
  5888   0018E0                     l2836:
  5889                           
  5890                           ;dc_motor.c: 142:     mL->power = mL->power + 10 ;
  5891   0018E0  C01C  FFD9         	movff	turnRight@mL,fsr2l
  5892   0018E4  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  5893   0018E8  50DF               	movf	indf2,w,c
  5894   0018EA  0F0A               	addlw	10
  5895   0018EC  C01C  FFD9         	movff	turnRight@mL,fsr2l
  5896   0018F0  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  5897   0018F4  6EDF               	movwf	indf2,c
  5898   0018F6                     
  5899                           ;dc_motor.c: 143:     mR->power = mR->power + 10;
  5900   0018F6  C01E  FFD9         	movff	turnRight@mR,fsr2l
  5901   0018FA  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  5902   0018FE  50DF               	movf	indf2,w,c
  5903   001900  0F0A               	addlw	10
  5904   001902  C01E  FFD9         	movff	turnRight@mR,fsr2l
  5905   001906  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  5906   00190A  6EDF               	movwf	indf2,c
  5907   00190C                     
  5908                           ;dc_motor.c: 145:     setMotorPWM(mL);
  5909   00190C  C01C  F016         	movff	turnRight@mL,setMotorPWM@m
  5910   001910  C01D  F017         	movff	turnRight@mL+1,setMotorPWM@m+1
  5911   001914  EC77  F00A         	call	_setMotorPWM	;wreg free
  5912   001918                     
  5913                           ;dc_motor.c: 146:     setMotorPWM(mR);
  5914   001918  C01E  F016         	movff	turnRight@mR,setMotorPWM@m
  5915   00191C  C01F  F017         	movff	turnRight@mR+1,setMotorPWM@m+1
  5916   001920  EC77  F00A         	call	_setMotorPWM	;wreg free
  5917   001924                     
  5918                           ;dc_motor.c: 147:     _delay((unsigned long)((20)*(64000000/4000.0)));
  5919   001924  0E02               	movlw	2
  5920   001926  6E21               	movwf	(??_turnRight+1)^0,c
  5921   001928  0EA0               	movlw	160
  5922   00192A  6E20               	movwf	??_turnRight^0,c
  5923   00192C  0E92               	movlw	146
  5924   00192E                     u4647:
  5925   00192E  2EE8               	decfsz	wreg,f,c
  5926   001930  D7FE               	bra	u4647
  5927   001932  2E20               	decfsz	??_turnRight^0,f,c
  5928   001934  D7FC               	bra	u4647
  5929   001936  2E21               	decfsz	(??_turnRight+1)^0,f,c
  5930   001938  D7FA               	bra	u4647
  5931   00193A  D000               	nop2	
  5932   00193C  0012               	return		;funcret
  5933   00193E                     __end_of_turnRight:
  5934                           	callstack 0
  5935                           
  5936 ;; *************** function _AntiPink *****************
  5937 ;; Defined at:
  5938 ;;		line 134 in file "color_instructions.c"
  5939 ;; Parameters:    Size  Location     Type
  5940 ;;  mL              2   45[COMRAM] PTR struct DC_motor
  5941 ;;		 -> main@motorL(9), 
  5942 ;;  mR              2   47[COMRAM] PTR struct DC_motor
  5943 ;;		 -> main@motorR(9), 
  5944 ;; Auto vars:     Size  Location     Type
  5945 ;;  a               1   51[COMRAM] unsigned char 
  5946 ;; Return value:  Size  Location     Type
  5947 ;;                  1    wreg      void 
  5948 ;; Registers used:
  5949 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5950 ;; Tracked objects:
  5951 ;;		On entry : 0/0
  5952 ;;		On exit  : 0/0
  5953 ;;		Unchanged: 0/0
  5954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5955 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5956 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5957 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5958 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5959 ;;Total ram usage:        7 bytes
  5960 ;; Hardware stack levels used: 1
  5961 ;; Hardware stack levels required when called: 12
  5962 ;; This function calls:
  5963 ;;		_BlueInstructions
  5964 ;;		_GreenInstructions
  5965 ;;		_fullSpeedAhead
  5966 ;;		_stop
  5967 ;; This function is called by:
  5968 ;;		_MoveBuggy
  5969 ;; This function uses a non-reentrant model
  5970 ;;
  5971                           
  5972                           	psect	text25
  5973   001D8E                     __ptext25:
  5974                           	callstack 0
  5975   001D8E                     _AntiPink:
  5976                           	callstack 16
  5977   001D8E                     
  5978                           ;color_instructions.c: 135:     unsigned char a=0;
  5979   001D8E  0E00               	movlw	0
  5980   001D90  6E34               	movwf	AntiPink@a^0,c
  5981   001D92                     
  5982                           ;color_instructions.c: 137:     GreenInstructions(mL, mR);
  5983   001D92  C02E  F027         	movff	AntiPink@mL,GreenInstructions@mL
  5984   001D96  C02F  F028         	movff	AntiPink@mL+1,GreenInstructions@mL+1
  5985   001D9A  C030  F029         	movff	AntiPink@mR,GreenInstructions@mR
  5986   001D9E  C031  F02A         	movff	AntiPink@mR+1,GreenInstructions@mR+1
  5987   001DA2  ECBE  F011         	call	_GreenInstructions	;wreg free
  5988   001DA6                     
  5989                           ;color_instructions.c: 138:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5990   001DA6  0E05               	movlw	5
  5991   001DA8  6E33               	movwf	(??_AntiPink+1)^0,c
  5992   001DAA  0E0F               	movlw	15
  5993   001DAC  6E32               	movwf	??_AntiPink^0,c
  5994   001DAE  0EF1               	movlw	241
  5995   001DB0                     u4657:
  5996   001DB0  2EE8               	decfsz	wreg,f,c
  5997   001DB2  D7FE               	bra	u4657
  5998   001DB4  2E32               	decfsz	??_AntiPink^0,f,c
  5999   001DB6  D7FC               	bra	u4657
  6000   001DB8  2E33               	decfsz	(??_AntiPink+1)^0,f,c
  6001   001DBA  D7FA               	bra	u4657
  6002   001DBC  F000               	nop	
  6003                           
  6004                           ;color_instructions.c: 140:     while (a<45){
  6005   001DBE  EFEC  F00E         	goto	l3188
  6006   001DC2                     l3184:
  6007                           
  6008                           ;color_instructions.c: 141:         fullSpeedAhead(mL, mR);
  6009   001DC2  C02E  F01C         	movff	AntiPink@mL,fullSpeedAhead@mL
  6010   001DC6  C02F  F01D         	movff	AntiPink@mL+1,fullSpeedAhead@mL+1
  6011   001DCA  C030  F01E         	movff	AntiPink@mR,fullSpeedAhead@mR
  6012   001DCE  C031  F01F         	movff	AntiPink@mR+1,fullSpeedAhead@mR+1
  6013   001DD2  EC9F  F00C         	call	_fullSpeedAhead	;wreg free
  6014   001DD6                     
  6015                           ;color_instructions.c: 142:         a++;
  6016   001DD6  2A34               	incf	AntiPink@a^0,f,c
  6017   001DD8                     l3188:
  6018                           
  6019                           ;color_instructions.c: 140:     while (a<45){
  6020   001DD8  0E2C               	movlw	44
  6021   001DDA  6434               	cpfsgt	AntiPink@a^0,c
  6022   001DDC  EFF2  F00E         	goto	u2481
  6023   001DE0  EFF4  F00E         	goto	u2480
  6024   001DE4                     u2481:
  6025   001DE4  EFE1  F00E         	goto	l3184
  6026   001DE8                     u2480:
  6027   001DE8  EF01  F00F         	goto	l3194
  6028   001DEC                     l3190:
  6029                           
  6030                           ;color_instructions.c: 145:         stop(mL, mR);
  6031   001DEC  C02E  F01C         	movff	AntiPink@mL,stop@mL
  6032   001DF0  C02F  F01D         	movff	AntiPink@mL+1,stop@mL+1
  6033   001DF4  C030  F01E         	movff	AntiPink@mR,stop@mR
  6034   001DF8  C031  F01F         	movff	AntiPink@mR+1,stop@mR+1
  6035   001DFC  EC04  F00E         	call	_stop	;wreg free
  6036   001E00                     
  6037                           ;color_instructions.c: 146:         a--;
  6038   001E00  0634               	decf	AntiPink@a^0,f,c
  6039   001E02                     l3194:
  6040                           
  6041                           ;color_instructions.c: 144:     while (a>0){
  6042   001E02  5034               	movf	AntiPink@a^0,w,c
  6043   001E04  A4D8               	btfss	status,2,c
  6044   001E06  EF07  F00F         	goto	u2491
  6045   001E0A  EF09  F00F         	goto	u2490
  6046   001E0E                     u2491:
  6047   001E0E  EFF6  F00E         	goto	l3190
  6048   001E12                     u2490:
  6049   001E12                     
  6050                           ;color_instructions.c: 148:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6051   001E12  0E05               	movlw	5
  6052   001E14  6E33               	movwf	(??_AntiPink+1)^0,c
  6053   001E16  0E0F               	movlw	15
  6054   001E18  6E32               	movwf	??_AntiPink^0,c
  6055   001E1A  0EF1               	movlw	241
  6056   001E1C                     u4667:
  6057   001E1C  2EE8               	decfsz	wreg,f,c
  6058   001E1E  D7FE               	bra	u4667
  6059   001E20  2E32               	decfsz	??_AntiPink^0,f,c
  6060   001E22  D7FC               	bra	u4667
  6061   001E24  2E33               	decfsz	(??_AntiPink+1)^0,f,c
  6062   001E26  D7FA               	bra	u4667
  6063   001E28  F000               	nop	
  6064   001E2A                     
  6065                           ;color_instructions.c: 150:     BlueInstructions(mL, mR);
  6066   001E2A  C02E  F027         	movff	AntiPink@mL,BlueInstructions@mL
  6067   001E2E  C02F  F028         	movff	AntiPink@mL+1,BlueInstructions@mL+1
  6068   001E32  C030  F029         	movff	AntiPink@mR,BlueInstructions@mR
  6069   001E36  C031  F02A         	movff	AntiPink@mR+1,BlueInstructions@mR+1
  6070   001E3A  EC20  F00F         	call	_BlueInstructions	;wreg free
  6071   001E3E  0012               	return		;funcret
  6072   001E40                     __end_of_AntiPink:
  6073                           	callstack 0
  6074                           
  6075 ;; *************** function _fullSpeedAhead *****************
  6076 ;; Defined at:
  6077 ;;		line 151 in file "dc_motor.c"
  6078 ;; Parameters:    Size  Location     Type
  6079 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6080 ;;		 -> main@motorL(9), 
  6081 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6082 ;;		 -> main@motorR(9), 
  6083 ;; Auto vars:     Size  Location     Type
  6084 ;;		None
  6085 ;; Return value:  Size  Location     Type
  6086 ;;                  1    wreg      void 
  6087 ;; Registers used:
  6088 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6089 ;; Tracked objects:
  6090 ;;		On entry : 0/0
  6091 ;;		On exit  : 0/0
  6092 ;;		Unchanged: 0/0
  6093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6094 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6096 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6097 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6098 ;;Total ram usage:        6 bytes
  6099 ;; Hardware stack levels used: 1
  6100 ;; Hardware stack levels required when called: 9
  6101 ;; This function calls:
  6102 ;;		_setMotorPWM
  6103 ;; This function is called by:
  6104 ;;		_main
  6105 ;;		_AntiYellow
  6106 ;;		_AntiPink
  6107 ;;		_WhiteInstructions
  6108 ;; This function uses a non-reentrant model
  6109 ;;
  6110                           
  6111                           	psect	text26
  6112   00193E                     __ptext26:
  6113                           	callstack 0
  6114   00193E                     _fullSpeedAhead:
  6115                           	callstack 21
  6116   00193E                     
  6117                           ;dc_motor.c: 151: void fullSpeedAhead(DC_motor *mL, DC_motor *mR);dc_motor.c: 152: {;dc_
      +                          motor.c: 154:     mL->direction = 1;
  6118   00193E  EE20 F001          	lfsr	2,1
  6119   001942  501C               	movf	fullSpeedAhead@mL^0,w,c
  6120   001944  26D9               	addwf	fsr2l,f,c
  6121   001946  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  6122   001948  22DA               	addwfc	fsr2h,f,c
  6123   00194A  0E01               	movlw	1
  6124   00194C  6EDF               	movwf	indf2,c
  6125                           
  6126                           ;dc_motor.c: 155:     mL->brakemode = 0;
  6127   00194E  EE20 F002          	lfsr	2,2
  6128   001952  501C               	movf	fullSpeedAhead@mL^0,w,c
  6129   001954  26D9               	addwf	fsr2l,f,c
  6130   001956  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  6131   001958  22DA               	addwfc	fsr2h,f,c
  6132   00195A  0E00               	movlw	0
  6133   00195C  6EDF               	movwf	indf2,c
  6134                           
  6135                           ;dc_motor.c: 157:     mR->direction = 1;
  6136   00195E  EE20 F001          	lfsr	2,1
  6137   001962  501E               	movf	fullSpeedAhead@mR^0,w,c
  6138   001964  26D9               	addwf	fsr2l,f,c
  6139   001966  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  6140   001968  22DA               	addwfc	fsr2h,f,c
  6141   00196A  0E01               	movlw	1
  6142   00196C  6EDF               	movwf	indf2,c
  6143                           
  6144                           ;dc_motor.c: 158:     mR->brakemode = 0;
  6145   00196E  EE20 F002          	lfsr	2,2
  6146   001972  501E               	movf	fullSpeedAhead@mR^0,w,c
  6147   001974  26D9               	addwf	fsr2l,f,c
  6148   001976  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  6149   001978  22DA               	addwfc	fsr2h,f,c
  6150   00197A  0E00               	movlw	0
  6151   00197C  6EDF               	movwf	indf2,c
  6152                           
  6153                           ;dc_motor.c: 162:     if(mL->power>40){mL->power=40;}
  6154   00197E  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  6155   001982  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  6156   001986  50DF               	movf	indf2,w,c
  6157   001988  0A80               	xorlw	128
  6158   00198A  0F57               	addlw	-169
  6159   00198C  A0D8               	btfss	status,0,c
  6160   00198E  EFCB  F00C         	goto	u2241
  6161   001992  EFCD  F00C         	goto	u2240
  6162   001996                     u2241:
  6163   001996  EFD3  F00C         	goto	l2938
  6164   00199A                     u2240:
  6165   00199A  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  6166   00199E  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  6167   0019A2  0E28               	movlw	40
  6168   0019A4  6EDF               	movwf	indf2,c
  6169   0019A6                     l2938:
  6170                           
  6171                           ;dc_motor.c: 163:     if(mR->power>43){mR->power=43;}
  6172   0019A6  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  6173   0019AA  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  6174   0019AE  50DF               	movf	indf2,w,c
  6175   0019B0  0A80               	xorlw	128
  6176   0019B2  0F54               	addlw	-172
  6177   0019B4  A0D8               	btfss	status,0,c
  6178   0019B6  EFDF  F00C         	goto	u2251
  6179   0019BA  EFE1  F00C         	goto	u2250
  6180   0019BE                     u2251:
  6181   0019BE  EFE7  F00C         	goto	l2942
  6182   0019C2                     u2250:
  6183   0019C2  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  6184   0019C6  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  6185   0019CA  0E2B               	movlw	43
  6186   0019CC  6EDF               	movwf	indf2,c
  6187   0019CE                     l2942:
  6188                           
  6189                           ;dc_motor.c: 165:     mL->power = mL->power + 5 ;
  6190   0019CE  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  6191   0019D2  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  6192   0019D6  50DF               	movf	indf2,w,c
  6193   0019D8  0F05               	addlw	5
  6194   0019DA  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  6195   0019DE  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  6196   0019E2  6EDF               	movwf	indf2,c
  6197   0019E4                     
  6198                           ;dc_motor.c: 166:     mR->power = mR->power + 7;
  6199   0019E4  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  6200   0019E8  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  6201   0019EC  50DF               	movf	indf2,w,c
  6202   0019EE  0F07               	addlw	7
  6203   0019F0  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  6204   0019F4  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  6205   0019F8  6EDF               	movwf	indf2,c
  6206   0019FA                     
  6207                           ;dc_motor.c: 168:     setMotorPWM(mL);
  6208   0019FA  C01C  F016         	movff	fullSpeedAhead@mL,setMotorPWM@m
  6209   0019FE  C01D  F017         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  6210   001A02  EC77  F00A         	call	_setMotorPWM	;wreg free
  6211   001A06                     
  6212                           ;dc_motor.c: 169:     setMotorPWM(mR);
  6213   001A06  C01E  F016         	movff	fullSpeedAhead@mR,setMotorPWM@m
  6214   001A0A  C01F  F017         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  6215   001A0E  EC77  F00A         	call	_setMotorPWM	;wreg free
  6216   001A12                     
  6217                           ;dc_motor.c: 170:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6218   001A12  0E05               	movlw	5
  6219   001A14  6E21               	movwf	(??_fullSpeedAhead+1)^0,c
  6220   001A16  0E0F               	movlw	15
  6221   001A18  6E20               	movwf	??_fullSpeedAhead^0,c
  6222   001A1A  0EF1               	movlw	241
  6223   001A1C                     u4677:
  6224   001A1C  2EE8               	decfsz	wreg,f,c
  6225   001A1E  D7FE               	bra	u4677
  6226   001A20  2E20               	decfsz	??_fullSpeedAhead^0,f,c
  6227   001A22  D7FC               	bra	u4677
  6228   001A24  2E21               	decfsz	(??_fullSpeedAhead+1)^0,f,c
  6229   001A26  D7FA               	bra	u4677
  6230   001A28  F000               	nop	
  6231   001A2A  0012               	return		;funcret
  6232   001A2C                     __end_of_fullSpeedAhead:
  6233                           	callstack 0
  6234                           
  6235 ;; *************** function _GreenInstructions *****************
  6236 ;; Defined at:
  6237 ;;		line 25 in file "color_instructions.c"
  6238 ;; Parameters:    Size  Location     Type
  6239 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  6240 ;;		 -> main@motorL(9), 
  6241 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  6242 ;;		 -> main@motorR(9), 
  6243 ;; Auto vars:     Size  Location     Type
  6244 ;;  a               1   44[COMRAM] unsigned char 
  6245 ;; Return value:  Size  Location     Type
  6246 ;;                  1    wreg      void 
  6247 ;; Registers used:
  6248 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6249 ;; Tracked objects:
  6250 ;;		On entry : 0/0
  6251 ;;		On exit  : 0/0
  6252 ;;		Unchanged: 0/0
  6253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6254 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6255 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6256 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6257 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6258 ;;Total ram usage:        7 bytes
  6259 ;; Hardware stack levels used: 1
  6260 ;; Hardware stack levels required when called: 11
  6261 ;; This function calls:
  6262 ;;		_fullSpeedBackwards
  6263 ;;		_stop
  6264 ;;		_turnLeft90
  6265 ;; This function is called by:
  6266 ;;		_AntiPink
  6267 ;;		_MoveBuggy
  6268 ;; This function uses a non-reentrant model
  6269 ;;
  6270                           
  6271                           	psect	text27
  6272   00237C                     __ptext27:
  6273                           	callstack 0
  6274   00237C                     _GreenInstructions:
  6275                           	callstack 17
  6276   00237C                     
  6277                           ;color_instructions.c: 26:     unsigned char a=0;
  6278   00237C  0E00               	movlw	0
  6279   00237E  6E2D               	movwf	GreenInstructions@a^0,c
  6280                           
  6281                           ;color_instructions.c: 27:     while (a<16){
  6282   002380  EFCD  F011         	goto	l3008
  6283   002384                     l3004:
  6284                           
  6285                           ;color_instructions.c: 28:         fullSpeedBackwards(mL, mR);
  6286   002384  C027  F01C         	movff	GreenInstructions@mL,fullSpeedBackwards@mL
  6287   002388  C028  F01D         	movff	GreenInstructions@mL+1,fullSpeedBackwards@mL+1
  6288   00238C  C029  F01E         	movff	GreenInstructions@mR,fullSpeedBackwards@mR
  6289   002390  C02A  F01F         	movff	GreenInstructions@mR+1,fullSpeedBackwards@mR+1
  6290   002394  EC8D  F00D         	call	_fullSpeedBackwards	;wreg free
  6291   002398                     
  6292                           ;color_instructions.c: 29:         a++;
  6293   002398  2A2D               	incf	GreenInstructions@a^0,f,c
  6294   00239A                     l3008:
  6295                           
  6296                           ;color_instructions.c: 27:     while (a<16){
  6297   00239A  0E0F               	movlw	15
  6298   00239C  642D               	cpfsgt	GreenInstructions@a^0,c
  6299   00239E  EFD3  F011         	goto	u2321
  6300   0023A2  EFD5  F011         	goto	u2320
  6301   0023A6                     u2321:
  6302   0023A6  EFC2  F011         	goto	l3004
  6303   0023AA                     u2320:
  6304   0023AA  EFE2  F011         	goto	l3014
  6305   0023AE                     l3010:
  6306                           
  6307                           ;color_instructions.c: 32:         stop(mL, mR);
  6308   0023AE  C027  F01C         	movff	GreenInstructions@mL,stop@mL
  6309   0023B2  C028  F01D         	movff	GreenInstructions@mL+1,stop@mL+1
  6310   0023B6  C029  F01E         	movff	GreenInstructions@mR,stop@mR
  6311   0023BA  C02A  F01F         	movff	GreenInstructions@mR+1,stop@mR+1
  6312   0023BE  EC04  F00E         	call	_stop	;wreg free
  6313   0023C2                     
  6314                           ;color_instructions.c: 33:         a--;
  6315   0023C2  062D               	decf	GreenInstructions@a^0,f,c
  6316   0023C4                     l3014:
  6317                           
  6318                           ;color_instructions.c: 31:     while (a>0){
  6319   0023C4  502D               	movf	GreenInstructions@a^0,w,c
  6320   0023C6  A4D8               	btfss	status,2,c
  6321   0023C8  EFE8  F011         	goto	u2331
  6322   0023CC  EFEA  F011         	goto	u2330
  6323   0023D0                     u2331:
  6324   0023D0  EFD7  F011         	goto	l3010
  6325   0023D4                     u2330:
  6326   0023D4                     
  6327                           ;color_instructions.c: 35:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6328   0023D4  0E05               	movlw	5
  6329   0023D6  6E2C               	movwf	(??_GreenInstructions+1)^0,c
  6330   0023D8  0E0F               	movlw	15
  6331   0023DA  6E2B               	movwf	??_GreenInstructions^0,c
  6332   0023DC  0EF1               	movlw	241
  6333   0023DE                     u4687:
  6334   0023DE  2EE8               	decfsz	wreg,f,c
  6335   0023E0  D7FE               	bra	u4687
  6336   0023E2  2E2B               	decfsz	??_GreenInstructions^0,f,c
  6337   0023E4  D7FC               	bra	u4687
  6338   0023E6  2E2C               	decfsz	(??_GreenInstructions+1)^0,f,c
  6339   0023E8  D7FA               	bra	u4687
  6340   0023EA  F000               	nop	
  6341   0023EC                     
  6342                           ;color_instructions.c: 36:     turnLeft90(mL, mR);
  6343   0023EC  C027  F022         	movff	GreenInstructions@mL,turnLeft90@mL
  6344   0023F0  C028  F023         	movff	GreenInstructions@mL+1,turnLeft90@mL+1
  6345   0023F4  C029  F024         	movff	GreenInstructions@mR,turnLeft90@mR
  6346   0023F8  C02A  F025         	movff	GreenInstructions@mR+1,turnLeft90@mR+1
  6347   0023FC  ECD0  F00F         	call	_turnLeft90	;wreg free
  6348   002400  0012               	return		;funcret
  6349   002402                     __end_of_GreenInstructions:
  6350                           	callstack 0
  6351                           
  6352 ;; *************** function _BlueInstructions *****************
  6353 ;; Defined at:
  6354 ;;		line 39 in file "color_instructions.c"
  6355 ;; Parameters:    Size  Location     Type
  6356 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  6357 ;;		 -> main@motorL(9), 
  6358 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  6359 ;;		 -> main@motorR(9), 
  6360 ;; Auto vars:     Size  Location     Type
  6361 ;;  a               1   44[COMRAM] unsigned char 
  6362 ;; Return value:  Size  Location     Type
  6363 ;;                  1    wreg      void 
  6364 ;; Registers used:
  6365 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6366 ;; Tracked objects:
  6367 ;;		On entry : 0/0
  6368 ;;		On exit  : 0/0
  6369 ;;		Unchanged: 0/0
  6370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6371 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6372 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6373 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6374 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6375 ;;Total ram usage:        7 bytes
  6376 ;; Hardware stack levels used: 1
  6377 ;; Hardware stack levels required when called: 11
  6378 ;; This function calls:
  6379 ;;		_fullSpeedBackwards
  6380 ;;		_stop
  6381 ;;		_turnLeft90
  6382 ;; This function is called by:
  6383 ;;		_AntiYellow
  6384 ;;		_AntiPink
  6385 ;;		_WhiteInstructions
  6386 ;;		_MoveBuggy
  6387 ;; This function uses a non-reentrant model
  6388 ;;
  6389                           
  6390                           	psect	text28
  6391   001E40                     __ptext28:
  6392                           	callstack 0
  6393   001E40                     _BlueInstructions:
  6394                           	callstack 17
  6395   001E40                     
  6396                           ;color_instructions.c: 40:     unsigned char a=0;
  6397   001E40  0E00               	movlw	0
  6398   001E42  6E2D               	movwf	BlueInstructions@a^0,c
  6399                           
  6400                           ;color_instructions.c: 41:     while (a<16){
  6401   001E44  EF2F  F00F         	goto	l3026
  6402   001E48                     l3022:
  6403                           
  6404                           ;color_instructions.c: 42:         fullSpeedBackwards(mL, mR);
  6405   001E48  C027  F01C         	movff	BlueInstructions@mL,fullSpeedBackwards@mL
  6406   001E4C  C028  F01D         	movff	BlueInstructions@mL+1,fullSpeedBackwards@mL+1
  6407   001E50  C029  F01E         	movff	BlueInstructions@mR,fullSpeedBackwards@mR
  6408   001E54  C02A  F01F         	movff	BlueInstructions@mR+1,fullSpeedBackwards@mR+1
  6409   001E58  EC8D  F00D         	call	_fullSpeedBackwards	;wreg free
  6410   001E5C                     
  6411                           ;color_instructions.c: 43:         a++;
  6412   001E5C  2A2D               	incf	BlueInstructions@a^0,f,c
  6413   001E5E                     l3026:
  6414                           
  6415                           ;color_instructions.c: 41:     while (a<16){
  6416   001E5E  0E0F               	movlw	15
  6417   001E60  642D               	cpfsgt	BlueInstructions@a^0,c
  6418   001E62  EF35  F00F         	goto	u2341
  6419   001E66  EF37  F00F         	goto	u2340
  6420   001E6A                     u2341:
  6421   001E6A  EF24  F00F         	goto	l3022
  6422   001E6E                     u2340:
  6423   001E6E  EF44  F00F         	goto	l3032
  6424   001E72                     l3028:
  6425                           
  6426                           ;color_instructions.c: 46:         stop(mL, mR);
  6427   001E72  C027  F01C         	movff	BlueInstructions@mL,stop@mL
  6428   001E76  C028  F01D         	movff	BlueInstructions@mL+1,stop@mL+1
  6429   001E7A  C029  F01E         	movff	BlueInstructions@mR,stop@mR
  6430   001E7E  C02A  F01F         	movff	BlueInstructions@mR+1,stop@mR+1
  6431   001E82  EC04  F00E         	call	_stop	;wreg free
  6432   001E86                     
  6433                           ;color_instructions.c: 47:         a--;
  6434   001E86  062D               	decf	BlueInstructions@a^0,f,c
  6435   001E88                     l3032:
  6436                           
  6437                           ;color_instructions.c: 45:     while (a>0){
  6438   001E88  502D               	movf	BlueInstructions@a^0,w,c
  6439   001E8A  A4D8               	btfss	status,2,c
  6440   001E8C  EF4A  F00F         	goto	u2351
  6441   001E90  EF4C  F00F         	goto	u2350
  6442   001E94                     u2351:
  6443   001E94  EF39  F00F         	goto	l3028
  6444   001E98                     u2350:
  6445   001E98                     
  6446                           ;color_instructions.c: 49:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6447   001E98  0E05               	movlw	5
  6448   001E9A  6E2C               	movwf	(??_BlueInstructions+1)^0,c
  6449   001E9C  0E0F               	movlw	15
  6450   001E9E  6E2B               	movwf	??_BlueInstructions^0,c
  6451   001EA0  0EF1               	movlw	241
  6452   001EA2                     u4697:
  6453   001EA2  2EE8               	decfsz	wreg,f,c
  6454   001EA4  D7FE               	bra	u4697
  6455   001EA6  2E2B               	decfsz	??_BlueInstructions^0,f,c
  6456   001EA8  D7FC               	bra	u4697
  6457   001EAA  2E2C               	decfsz	(??_BlueInstructions+1)^0,f,c
  6458   001EAC  D7FA               	bra	u4697
  6459   001EAE  F000               	nop	
  6460   001EB0                     
  6461                           ;color_instructions.c: 51:     turnLeft90(mL, mR);
  6462   001EB0  C027  F022         	movff	BlueInstructions@mL,turnLeft90@mL
  6463   001EB4  C028  F023         	movff	BlueInstructions@mL+1,turnLeft90@mL+1
  6464   001EB8  C029  F024         	movff	BlueInstructions@mR,turnLeft90@mR
  6465   001EBC  C02A  F025         	movff	BlueInstructions@mR+1,turnLeft90@mR+1
  6466   001EC0  ECD0  F00F         	call	_turnLeft90	;wreg free
  6467   001EC4                     
  6468                           ;color_instructions.c: 52:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6469   001EC4  0E05               	movlw	5
  6470   001EC6  6E2C               	movwf	(??_BlueInstructions+1)^0,c
  6471   001EC8  0E0F               	movlw	15
  6472   001ECA  6E2B               	movwf	??_BlueInstructions^0,c
  6473   001ECC  0EF1               	movlw	241
  6474   001ECE                     u4707:
  6475   001ECE  2EE8               	decfsz	wreg,f,c
  6476   001ED0  D7FE               	bra	u4707
  6477   001ED2  2E2B               	decfsz	??_BlueInstructions^0,f,c
  6478   001ED4  D7FC               	bra	u4707
  6479   001ED6  2E2C               	decfsz	(??_BlueInstructions+1)^0,f,c
  6480   001ED8  D7FA               	bra	u4707
  6481   001EDA  F000               	nop	
  6482                           
  6483                           ;color_instructions.c: 53:     turnLeft90(mL, mR);
  6484   001EDC  C027  F022         	movff	BlueInstructions@mL,turnLeft90@mL
  6485   001EE0  C028  F023         	movff	BlueInstructions@mL+1,turnLeft90@mL+1
  6486   001EE4  C029  F024         	movff	BlueInstructions@mR,turnLeft90@mR
  6487   001EE8  C02A  F025         	movff	BlueInstructions@mR+1,turnLeft90@mR+1
  6488   001EEC  ECD0  F00F         	call	_turnLeft90	;wreg free
  6489   001EF0  0012               	return		;funcret
  6490   001EF2                     __end_of_BlueInstructions:
  6491                           	callstack 0
  6492                           
  6493 ;; *************** function _turnLeft90 *****************
  6494 ;; Defined at:
  6495 ;;		line 200 in file "dc_motor.c"
  6496 ;; Parameters:    Size  Location     Type
  6497 ;;  mL              2   33[COMRAM] PTR struct DC_motor
  6498 ;;		 -> main@motorL(9), 
  6499 ;;  mR              2   35[COMRAM] PTR struct DC_motor
  6500 ;;		 -> main@motorR(9), 
  6501 ;; Auto vars:     Size  Location     Type
  6502 ;;  a               1   37[COMRAM] unsigned char 
  6503 ;; Return value:  Size  Location     Type
  6504 ;;                  1    wreg      void 
  6505 ;; Registers used:
  6506 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6507 ;; Tracked objects:
  6508 ;;		On entry : 0/0
  6509 ;;		On exit  : 0/0
  6510 ;;		Unchanged: 0/0
  6511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6512 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6513 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6515 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6516 ;;Total ram usage:        5 bytes
  6517 ;; Hardware stack levels used: 1
  6518 ;; Hardware stack levels required when called: 10
  6519 ;; This function calls:
  6520 ;;		_stop
  6521 ;;		_turnLeft
  6522 ;; This function is called by:
  6523 ;;		_turnLeft135
  6524 ;;		_GreenInstructions
  6525 ;;		_BlueInstructions
  6526 ;;		_PinkInstructions
  6527 ;;		_turn180
  6528 ;; This function uses a non-reentrant model
  6529 ;;
  6530                           
  6531                           	psect	text29
  6532   001FA0                     __ptext29:
  6533                           	callstack 0
  6534   001FA0                     _turnLeft90:
  6535                           	callstack 17
  6536   001FA0                     
  6537                           ;dc_motor.c: 202:     unsigned char a=0;
  6538   001FA0  0E00               	movlw	0
  6539   001FA2  6E26               	movwf	turnLeft90@a^0,c
  6540                           
  6541                           ;dc_motor.c: 203:     while(a<16){
  6542   001FA4  EFDF  F00F         	goto	l2882
  6543   001FA8                     l2878:
  6544                           
  6545                           ;dc_motor.c: 204:         turnLeft(mL, mR);
  6546   001FA8  C022  F01C         	movff	turnLeft90@mL,turnLeft@mL
  6547   001FAC  C023  F01D         	movff	turnLeft90@mL+1,turnLeft@mL+1
  6548   001FB0  C024  F01E         	movff	turnLeft90@mR,turnLeft@mR
  6549   001FB4  C025  F01F         	movff	turnLeft90@mR+1,turnLeft@mR+1
  6550   001FB8  EC16  F00D         	call	_turnLeft	;wreg free
  6551   001FBC                     
  6552                           ;dc_motor.c: 205:         a++;
  6553   001FBC  2A26               	incf	turnLeft90@a^0,f,c
  6554   001FBE                     l2882:
  6555                           
  6556                           ;dc_motor.c: 203:     while(a<16){
  6557   001FBE  0E0F               	movlw	15
  6558   001FC0  6426               	cpfsgt	turnLeft90@a^0,c
  6559   001FC2  EFE5  F00F         	goto	u2141
  6560   001FC6  EFE7  F00F         	goto	u2140
  6561   001FCA                     u2141:
  6562   001FCA  EFD4  F00F         	goto	l2878
  6563   001FCE                     u2140:
  6564   001FCE  EFF4  F00F         	goto	l2888
  6565   001FD2                     l2884:
  6566                           
  6567                           ;dc_motor.c: 208:         stop(mL, mR);
  6568   001FD2  C022  F01C         	movff	turnLeft90@mL,stop@mL
  6569   001FD6  C023  F01D         	movff	turnLeft90@mL+1,stop@mL+1
  6570   001FDA  C024  F01E         	movff	turnLeft90@mR,stop@mR
  6571   001FDE  C025  F01F         	movff	turnLeft90@mR+1,stop@mR+1
  6572   001FE2  EC04  F00E         	call	_stop	;wreg free
  6573   001FE6                     
  6574                           ;dc_motor.c: 209:         a--;
  6575   001FE6  0626               	decf	turnLeft90@a^0,f,c
  6576   001FE8                     l2888:
  6577                           
  6578                           ;dc_motor.c: 207:     while(a>0){
  6579   001FE8  5026               	movf	turnLeft90@a^0,w,c
  6580   001FEA  A4D8               	btfss	status,2,c
  6581   001FEC  EFFA  F00F         	goto	u2151
  6582   001FF0  EFFC  F00F         	goto	u2150
  6583   001FF4                     u2151:
  6584   001FF4  EFE9  F00F         	goto	l2884
  6585   001FF8                     u2150:
  6586   001FF8  EF09  F010         	goto	l2894
  6587   001FFC                     l2890:
  6588                           
  6589                           ;dc_motor.c: 212:         turnLeft(mL, mR);
  6590   001FFC  C022  F01C         	movff	turnLeft90@mL,turnLeft@mL
  6591   002000  C023  F01D         	movff	turnLeft90@mL+1,turnLeft@mL+1
  6592   002004  C024  F01E         	movff	turnLeft90@mR,turnLeft@mR
  6593   002008  C025  F01F         	movff	turnLeft90@mR+1,turnLeft@mR+1
  6594   00200C  EC16  F00D         	call	_turnLeft	;wreg free
  6595   002010                     
  6596                           ;dc_motor.c: 213:         a++;
  6597   002010  2A26               	incf	turnLeft90@a^0,f,c
  6598   002012                     l2894:
  6599                           
  6600                           ;dc_motor.c: 211:     while(a<15){
  6601   002012  0E0E               	movlw	14
  6602   002014  6426               	cpfsgt	turnLeft90@a^0,c
  6603   002016  EF0F  F010         	goto	u2161
  6604   00201A  EF11  F010         	goto	u2160
  6605   00201E                     u2161:
  6606   00201E  EFFE  F00F         	goto	l2890
  6607   002022                     u2160:
  6608   002022  EF1E  F010         	goto	l2900
  6609   002026                     l2896:
  6610                           
  6611                           ;dc_motor.c: 216:         stop(mL, mR);
  6612   002026  C022  F01C         	movff	turnLeft90@mL,stop@mL
  6613   00202A  C023  F01D         	movff	turnLeft90@mL+1,stop@mL+1
  6614   00202E  C024  F01E         	movff	turnLeft90@mR,stop@mR
  6615   002032  C025  F01F         	movff	turnLeft90@mR+1,stop@mR+1
  6616   002036  EC04  F00E         	call	_stop	;wreg free
  6617   00203A                     
  6618                           ;dc_motor.c: 217:         a--;
  6619   00203A  0626               	decf	turnLeft90@a^0,f,c
  6620   00203C                     l2900:
  6621                           
  6622                           ;dc_motor.c: 215:     while(a>0){
  6623   00203C  5026               	movf	turnLeft90@a^0,w,c
  6624   00203E  A4D8               	btfss	status,2,c
  6625   002040  EF24  F010         	goto	u2171
  6626   002044  EF26  F010         	goto	u2170
  6627   002048                     u2171:
  6628   002048  EF13  F010         	goto	l2896
  6629   00204C                     u2170:
  6630   00204C  0012               	return		;funcret
  6631   00204E                     __end_of_turnLeft90:
  6632                           	callstack 0
  6633                           
  6634 ;; *************** function _turnLeft *****************
  6635 ;; Defined at:
  6636 ;;		line 107 in file "dc_motor.c"
  6637 ;; Parameters:    Size  Location     Type
  6638 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6639 ;;		 -> main@motorL(9), 
  6640 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6641 ;;		 -> main@motorR(9), 
  6642 ;; Auto vars:     Size  Location     Type
  6643 ;;		None
  6644 ;; Return value:  Size  Location     Type
  6645 ;;                  1    wreg      void 
  6646 ;; Registers used:
  6647 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6648 ;; Tracked objects:
  6649 ;;		On entry : 0/0
  6650 ;;		On exit  : 0/0
  6651 ;;		Unchanged: 0/0
  6652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6653 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6655 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6656 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6657 ;;Total ram usage:        6 bytes
  6658 ;; Hardware stack levels used: 1
  6659 ;; Hardware stack levels required when called: 9
  6660 ;; This function calls:
  6661 ;;		_setMotorPWM
  6662 ;; This function is called by:
  6663 ;;		_turnLeft90
  6664 ;;		_turnLeft135
  6665 ;; This function uses a non-reentrant model
  6666 ;;
  6667                           
  6668                           	psect	text30
  6669   001A2C                     __ptext30:
  6670                           	callstack 0
  6671   001A2C                     _turnLeft:
  6672                           	callstack 17
  6673   001A2C                     
  6674                           ;dc_motor.c: 107: void turnLeft(DC_motor *mL, DC_motor *mR);dc_motor.c: 108: {;dc_motor.
      +                          c: 110:     mL->direction = 0;
  6675   001A2C  EE20 F001          	lfsr	2,1
  6676   001A30  501C               	movf	turnLeft@mL^0,w,c
  6677   001A32  26D9               	addwf	fsr2l,f,c
  6678   001A34  501D               	movf	(turnLeft@mL+1)^0,w,c
  6679   001A36  22DA               	addwfc	fsr2h,f,c
  6680   001A38  0E00               	movlw	0
  6681   001A3A  6EDF               	movwf	indf2,c
  6682                           
  6683                           ;dc_motor.c: 111:     mL->brakemode = 0;
  6684   001A3C  EE20 F002          	lfsr	2,2
  6685   001A40  501C               	movf	turnLeft@mL^0,w,c
  6686   001A42  26D9               	addwf	fsr2l,f,c
  6687   001A44  501D               	movf	(turnLeft@mL+1)^0,w,c
  6688   001A46  22DA               	addwfc	fsr2h,f,c
  6689   001A48  0E00               	movlw	0
  6690   001A4A  6EDF               	movwf	indf2,c
  6691                           
  6692                           ;dc_motor.c: 113:     mR->direction = 1;
  6693   001A4C  EE20 F001          	lfsr	2,1
  6694   001A50  501E               	movf	turnLeft@mR^0,w,c
  6695   001A52  26D9               	addwf	fsr2l,f,c
  6696   001A54  501F               	movf	(turnLeft@mR+1)^0,w,c
  6697   001A56  22DA               	addwfc	fsr2h,f,c
  6698   001A58  0E01               	movlw	1
  6699   001A5A  6EDF               	movwf	indf2,c
  6700                           
  6701                           ;dc_motor.c: 114:     mR->brakemode = 0;
  6702   001A5C  EE20 F002          	lfsr	2,2
  6703   001A60  501E               	movf	turnLeft@mR^0,w,c
  6704   001A62  26D9               	addwf	fsr2l,f,c
  6705   001A64  501F               	movf	(turnLeft@mR+1)^0,w,c
  6706   001A66  22DA               	addwfc	fsr2h,f,c
  6707   001A68  0E00               	movlw	0
  6708   001A6A  6EDF               	movwf	indf2,c
  6709                           
  6710                           ;dc_motor.c: 117:     if(mL->power>62){mL->power=62;}
  6711   001A6C  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6712   001A70  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6713   001A74  50DF               	movf	indf2,w,c
  6714   001A76  0A80               	xorlw	128
  6715   001A78  0F41               	addlw	-191
  6716   001A7A  A0D8               	btfss	status,0,c
  6717   001A7C  EF42  F00D         	goto	u2081
  6718   001A80  EF44  F00D         	goto	u2080
  6719   001A84                     u2081:
  6720   001A84  EF4A  F00D         	goto	l2814
  6721   001A88                     u2080:
  6722   001A88  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6723   001A8C  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6724   001A90  0E3E               	movlw	62
  6725   001A92  6EDF               	movwf	indf2,c
  6726   001A94                     l2814:
  6727                           
  6728                           ;dc_motor.c: 118:     if(mR->power>62){mR->power=62;}
  6729   001A94  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6730   001A98  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6731   001A9C  50DF               	movf	indf2,w,c
  6732   001A9E  0A80               	xorlw	128
  6733   001AA0  0F41               	addlw	-191
  6734   001AA2  A0D8               	btfss	status,0,c
  6735   001AA4  EF56  F00D         	goto	u2091
  6736   001AA8  EF58  F00D         	goto	u2090
  6737   001AAC                     u2091:
  6738   001AAC  EF5E  F00D         	goto	l2818
  6739   001AB0                     u2090:
  6740   001AB0  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6741   001AB4  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6742   001AB8  0E3E               	movlw	62
  6743   001ABA  6EDF               	movwf	indf2,c
  6744   001ABC                     l2818:
  6745                           
  6746                           ;dc_motor.c: 120:     mL->power = mL->power + 10 ;
  6747   001ABC  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6748   001AC0  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6749   001AC4  50DF               	movf	indf2,w,c
  6750   001AC6  0F0A               	addlw	10
  6751   001AC8  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6752   001ACC  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6753   001AD0  6EDF               	movwf	indf2,c
  6754   001AD2                     
  6755                           ;dc_motor.c: 121:     mR->power = mR->power + 10;
  6756   001AD2  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6757   001AD6  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6758   001ADA  50DF               	movf	indf2,w,c
  6759   001ADC  0F0A               	addlw	10
  6760   001ADE  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6761   001AE2  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6762   001AE6  6EDF               	movwf	indf2,c
  6763   001AE8                     
  6764                           ;dc_motor.c: 123:     setMotorPWM(mL);
  6765   001AE8  C01C  F016         	movff	turnLeft@mL,setMotorPWM@m
  6766   001AEC  C01D  F017         	movff	turnLeft@mL+1,setMotorPWM@m+1
  6767   001AF0  EC77  F00A         	call	_setMotorPWM	;wreg free
  6768   001AF4                     
  6769                           ;dc_motor.c: 124:     setMotorPWM(mR);
  6770   001AF4  C01E  F016         	movff	turnLeft@mR,setMotorPWM@m
  6771   001AF8  C01F  F017         	movff	turnLeft@mR+1,setMotorPWM@m+1
  6772   001AFC  EC77  F00A         	call	_setMotorPWM	;wreg free
  6773   001B00                     
  6774                           ;dc_motor.c: 125:     _delay((unsigned long)((20)*(64000000/4000.0)));
  6775   001B00  0E02               	movlw	2
  6776   001B02  6E21               	movwf	(??_turnLeft+1)^0,c
  6777   001B04  0EA0               	movlw	160
  6778   001B06  6E20               	movwf	??_turnLeft^0,c
  6779   001B08  0E92               	movlw	146
  6780   001B0A                     u4717:
  6781   001B0A  2EE8               	decfsz	wreg,f,c
  6782   001B0C  D7FE               	bra	u4717
  6783   001B0E  2E20               	decfsz	??_turnLeft^0,f,c
  6784   001B10  D7FC               	bra	u4717
  6785   001B12  2E21               	decfsz	(??_turnLeft+1)^0,f,c
  6786   001B14  D7FA               	bra	u4717
  6787   001B16  D000               	nop2	
  6788   001B18  0012               	return		;funcret
  6789   001B1A                     __end_of_turnLeft:
  6790                           	callstack 0
  6791                           
  6792 ;; *************** function _stop *****************
  6793 ;; Defined at:
  6794 ;;		line 87 in file "dc_motor.c"
  6795 ;; Parameters:    Size  Location     Type
  6796 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6797 ;;		 -> main@motorL(9), 
  6798 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6799 ;;		 -> main@motorR(9), 
  6800 ;; Auto vars:     Size  Location     Type
  6801 ;;		None
  6802 ;; Return value:  Size  Location     Type
  6803 ;;                  1    wreg      void 
  6804 ;; Registers used:
  6805 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6806 ;; Tracked objects:
  6807 ;;		On entry : 0/0
  6808 ;;		On exit  : 0/0
  6809 ;;		Unchanged: 0/0
  6810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6811 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6813 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6814 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6815 ;;Total ram usage:        5 bytes
  6816 ;; Hardware stack levels used: 1
  6817 ;; Hardware stack levels required when called: 9
  6818 ;; This function calls:
  6819 ;;		_setMotorPWM
  6820 ;; This function is called by:
  6821 ;;		_turnLeft90
  6822 ;;		_turnRight90
  6823 ;;		_turnRight135
  6824 ;;		_turnLeft135
  6825 ;;		_main
  6826 ;;		_RedInstructions
  6827 ;;		_GreenInstructions
  6828 ;;		_BlueInstructions
  6829 ;;		_YellowInstructions
  6830 ;;		_PinkInstructions
  6831 ;;		_OrangeInstructions
  6832 ;;		_LightBlueInstructions
  6833 ;;		_AntiYellow
  6834 ;;		_AntiPink
  6835 ;;		_WhiteInstructions
  6836 ;; This function uses a non-reentrant model
  6837 ;;
  6838                           
  6839                           	psect	text31
  6840   001C08                     __ptext31:
  6841                           	callstack 0
  6842   001C08                     _stop:
  6843                           	callstack 21
  6844   001C08                     
  6845                           ;dc_motor.c: 87: void stop(DC_motor *mL, DC_motor *mR);dc_motor.c: 88: {;dc_motor.c: 90:
      +                               mL->brakemode = 1;
  6846   001C08  EE20 F002          	lfsr	2,2
  6847   001C0C  501C               	movf	stop@mL^0,w,c
  6848   001C0E  26D9               	addwf	fsr2l,f,c
  6849   001C10  501D               	movf	(stop@mL+1)^0,w,c
  6850   001C12  22DA               	addwfc	fsr2h,f,c
  6851   001C14  0E01               	movlw	1
  6852   001C16  6EDF               	movwf	indf2,c
  6853                           
  6854                           ;dc_motor.c: 91:     mR->brakemode = 1;
  6855   001C18  EE20 F002          	lfsr	2,2
  6856   001C1C  501E               	movf	stop@mR^0,w,c
  6857   001C1E  26D9               	addwf	fsr2l,f,c
  6858   001C20  501F               	movf	(stop@mR+1)^0,w,c
  6859   001C22  22DA               	addwfc	fsr2h,f,c
  6860   001C24  0E01               	movlw	1
  6861   001C26  6EDF               	movwf	indf2,c
  6862                           
  6863                           ;dc_motor.c: 93:     if(mL->power<0){mL->power=0;}
  6864   001C28  C01C  FFD9         	movff	stop@mL,fsr2l
  6865   001C2C  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6866   001C30  0E00               	movlw	0
  6867   001C32  BEDB               	btfsc	plusw2,7,c
  6868   001C34  EF20  F00E         	goto	u2060
  6869   001C38  EF1E  F00E         	goto	u2061
  6870   001C3C                     u2061:
  6871   001C3C  EF26  F00E         	goto	l2796
  6872   001C40                     u2060:
  6873   001C40  C01C  FFD9         	movff	stop@mL,fsr2l
  6874   001C44  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6875   001C48  0E00               	movlw	0
  6876   001C4A  6EDF               	movwf	indf2,c
  6877   001C4C                     l2796:
  6878                           
  6879                           ;dc_motor.c: 94:     if(mR->power<0){mR->power=0;}
  6880   001C4C  C01E  FFD9         	movff	stop@mR,fsr2l
  6881   001C50  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6882   001C54  0E00               	movlw	0
  6883   001C56  BEDB               	btfsc	plusw2,7,c
  6884   001C58  EF32  F00E         	goto	u2070
  6885   001C5C  EF30  F00E         	goto	u2071
  6886   001C60                     u2071:
  6887   001C60  EF38  F00E         	goto	l2800
  6888   001C64                     u2070:
  6889   001C64  C01E  FFD9         	movff	stop@mR,fsr2l
  6890   001C68  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6891   001C6C  0E00               	movlw	0
  6892   001C6E  6EDF               	movwf	indf2,c
  6893   001C70                     l2800:
  6894                           
  6895                           ;dc_motor.c: 96:     mL->power = mL->power - 5 ;
  6896   001C70  C01C  FFD9         	movff	stop@mL,fsr2l
  6897   001C74  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6898   001C78  50DF               	movf	indf2,w,c
  6899   001C7A  0FFB               	addlw	251
  6900   001C7C  C01C  FFD9         	movff	stop@mL,fsr2l
  6901   001C80  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6902   001C84  6EDF               	movwf	indf2,c
  6903   001C86                     
  6904                           ;dc_motor.c: 97:     mR->power = mR->power - 5;
  6905   001C86  C01E  FFD9         	movff	stop@mR,fsr2l
  6906   001C8A  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6907   001C8E  50DF               	movf	indf2,w,c
  6908   001C90  0FFB               	addlw	251
  6909   001C92  C01E  FFD9         	movff	stop@mR,fsr2l
  6910   001C96  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6911   001C9A  6EDF               	movwf	indf2,c
  6912                           
  6913                           ;dc_motor.c: 99:     mL->power = 0;
  6914   001C9C  C01C  FFD9         	movff	stop@mL,fsr2l
  6915   001CA0  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6916   001CA4  0E00               	movlw	0
  6917   001CA6  6EDF               	movwf	indf2,c
  6918                           
  6919                           ;dc_motor.c: 100:     mR->power = 0;
  6920   001CA8  C01E  FFD9         	movff	stop@mR,fsr2l
  6921   001CAC  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6922   001CB0  0E00               	movlw	0
  6923   001CB2  6EDF               	movwf	indf2,c
  6924   001CB4                     
  6925                           ;dc_motor.c: 101:     setMotorPWM(mL);
  6926   001CB4  C01C  F016         	movff	stop@mL,setMotorPWM@m
  6927   001CB8  C01D  F017         	movff	stop@mL+1,setMotorPWM@m+1
  6928   001CBC  EC77  F00A         	call	_setMotorPWM	;wreg free
  6929   001CC0                     
  6930                           ;dc_motor.c: 102:     setMotorPWM(mR);
  6931   001CC0  C01E  F016         	movff	stop@mR,setMotorPWM@m
  6932   001CC4  C01F  F017         	movff	stop@mR+1,setMotorPWM@m+1
  6933   001CC8  EC77  F00A         	call	_setMotorPWM	;wreg free
  6934   001CCC                     
  6935                           ;dc_motor.c: 103:     _delay((unsigned long)((10)*(64000000/4000.0)));
  6936   001CCC  0ED0               	movlw	208
  6937   001CCE  6E20               	movwf	??_stop^0,c
  6938   001CD0  0ECA               	movlw	202
  6939   001CD2                     u4727:
  6940   001CD2  2EE8               	decfsz	wreg,f,c
  6941   001CD4  D7FE               	bra	u4727
  6942   001CD6  2E20               	decfsz	??_stop^0,f,c
  6943   001CD8  D7FC               	bra	u4727
  6944   001CDA  0012               	return		;funcret
  6945   001CDC                     __end_of_stop:
  6946                           	callstack 0
  6947                           
  6948 ;; *************** function _fullSpeedBackwards *****************
  6949 ;; Defined at:
  6950 ;;		line 174 in file "dc_motor.c"
  6951 ;; Parameters:    Size  Location     Type
  6952 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6953 ;;		 -> main@motorL(9), 
  6954 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6955 ;;		 -> main@motorR(9), 
  6956 ;; Auto vars:     Size  Location     Type
  6957 ;;		None
  6958 ;; Return value:  Size  Location     Type
  6959 ;;                  1    wreg      void 
  6960 ;; Registers used:
  6961 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6962 ;; Tracked objects:
  6963 ;;		On entry : 0/0
  6964 ;;		On exit  : 0/0
  6965 ;;		Unchanged: 0/0
  6966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6967 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6969 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6970 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6971 ;;Total ram usage:        6 bytes
  6972 ;; Hardware stack levels used: 1
  6973 ;; Hardware stack levels required when called: 9
  6974 ;; This function calls:
  6975 ;;		_setMotorPWM
  6976 ;; This function is called by:
  6977 ;;		_RedInstructions
  6978 ;;		_GreenInstructions
  6979 ;;		_BlueInstructions
  6980 ;;		_YellowInstructions
  6981 ;;		_PinkInstructions
  6982 ;;		_OrangeInstructions
  6983 ;;		_LightBlueInstructions
  6984 ;; This function uses a non-reentrant model
  6985 ;;
  6986                           
  6987                           	psect	text32
  6988   001B1A                     __ptext32:
  6989                           	callstack 0
  6990   001B1A                     _fullSpeedBackwards:
  6991                           	callstack 18
  6992   001B1A                     
  6993                           ;dc_motor.c: 177:     mL->direction = 0;
  6994   001B1A  EE20 F001          	lfsr	2,1
  6995   001B1E  501C               	movf	fullSpeedBackwards@mL^0,w,c
  6996   001B20  26D9               	addwf	fsr2l,f,c
  6997   001B22  501D               	movf	(fullSpeedBackwards@mL+1)^0,w,c
  6998   001B24  22DA               	addwfc	fsr2h,f,c
  6999   001B26  0E00               	movlw	0
  7000   001B28  6EDF               	movwf	indf2,c
  7001                           
  7002                           ;dc_motor.c: 178:     mL->brakemode = 0;
  7003   001B2A  EE20 F002          	lfsr	2,2
  7004   001B2E  501C               	movf	fullSpeedBackwards@mL^0,w,c
  7005   001B30  26D9               	addwf	fsr2l,f,c
  7006   001B32  501D               	movf	(fullSpeedBackwards@mL+1)^0,w,c
  7007   001B34  22DA               	addwfc	fsr2h,f,c
  7008   001B36  0E00               	movlw	0
  7009   001B38  6EDF               	movwf	indf2,c
  7010                           
  7011                           ;dc_motor.c: 180:     mR->direction = 0;
  7012   001B3A  EE20 F001          	lfsr	2,1
  7013   001B3E  501E               	movf	fullSpeedBackwards@mR^0,w,c
  7014   001B40  26D9               	addwf	fsr2l,f,c
  7015   001B42  501F               	movf	(fullSpeedBackwards@mR+1)^0,w,c
  7016   001B44  22DA               	addwfc	fsr2h,f,c
  7017   001B46  0E00               	movlw	0
  7018   001B48  6EDF               	movwf	indf2,c
  7019                           
  7020                           ;dc_motor.c: 181:     mR->brakemode = 0;
  7021   001B4A  EE20 F002          	lfsr	2,2
  7022   001B4E  501E               	movf	fullSpeedBackwards@mR^0,w,c
  7023   001B50  26D9               	addwf	fsr2l,f,c
  7024   001B52  501F               	movf	(fullSpeedBackwards@mR+1)^0,w,c
  7025   001B54  22DA               	addwfc	fsr2h,f,c
  7026   001B56  0E00               	movlw	0
  7027   001B58  6EDF               	movwf	indf2,c
  7028                           
  7029                           ;dc_motor.c: 184:     if(mL->power>38){mL->power=38;}
  7030   001B5A  C01C  FFD9         	movff	fullSpeedBackwards@mL,fsr2l
  7031   001B5E  C01D  FFDA         	movff	fullSpeedBackwards@mL+1,fsr2h
  7032   001B62  50DF               	movf	indf2,w,c
  7033   001B64  0A80               	xorlw	128
  7034   001B66  0F59               	addlw	-167
  7035   001B68  A0D8               	btfss	status,0,c
  7036   001B6A  EFB9  F00D         	goto	u2121
  7037   001B6E  EFBB  F00D         	goto	u2120
  7038   001B72                     u2121:
  7039   001B72  EFC1  F00D         	goto	l2862
  7040   001B76                     u2120:
  7041   001B76  C01C  FFD9         	movff	fullSpeedBackwards@mL,fsr2l
  7042   001B7A  C01D  FFDA         	movff	fullSpeedBackwards@mL+1,fsr2h
  7043   001B7E  0E26               	movlw	38
  7044   001B80  6EDF               	movwf	indf2,c
  7045   001B82                     l2862:
  7046                           
  7047                           ;dc_motor.c: 185:     if(mR->power>46){mR->power=46;}
  7048   001B82  C01E  FFD9         	movff	fullSpeedBackwards@mR,fsr2l
  7049   001B86  C01F  FFDA         	movff	fullSpeedBackwards@mR+1,fsr2h
  7050   001B8A  50DF               	movf	indf2,w,c
  7051   001B8C  0A80               	xorlw	128
  7052   001B8E  0F51               	addlw	-175
  7053   001B90  A0D8               	btfss	status,0,c
  7054   001B92  EFCD  F00D         	goto	u2131
  7055   001B96  EFCF  F00D         	goto	u2130
  7056   001B9A                     u2131:
  7057   001B9A  EFD5  F00D         	goto	l2866
  7058   001B9E                     u2130:
  7059   001B9E  C01E  FFD9         	movff	fullSpeedBackwards@mR,fsr2l
  7060   001BA2  C01F  FFDA         	movff	fullSpeedBackwards@mR+1,fsr2h
  7061   001BA6  0E2E               	movlw	46
  7062   001BA8  6EDF               	movwf	indf2,c
  7063   001BAA                     l2866:
  7064                           
  7065                           ;dc_motor.c: 187:     mL->power = mL->power + 5 ;
  7066   001BAA  C01C  FFD9         	movff	fullSpeedBackwards@mL,fsr2l
  7067   001BAE  C01D  FFDA         	movff	fullSpeedBackwards@mL+1,fsr2h
  7068   001BB2  50DF               	movf	indf2,w,c
  7069   001BB4  0F05               	addlw	5
  7070   001BB6  C01C  FFD9         	movff	fullSpeedBackwards@mL,fsr2l
  7071   001BBA  C01D  FFDA         	movff	fullSpeedBackwards@mL+1,fsr2h
  7072   001BBE  6EDF               	movwf	indf2,c
  7073   001BC0                     
  7074                           ;dc_motor.c: 188:     mR->power = mR->power + 8;
  7075   001BC0  C01E  FFD9         	movff	fullSpeedBackwards@mR,fsr2l
  7076   001BC4  C01F  FFDA         	movff	fullSpeedBackwards@mR+1,fsr2h
  7077   001BC8  50DF               	movf	indf2,w,c
  7078   001BCA  0F08               	addlw	8
  7079   001BCC  C01E  FFD9         	movff	fullSpeedBackwards@mR,fsr2l
  7080   001BD0  C01F  FFDA         	movff	fullSpeedBackwards@mR+1,fsr2h
  7081   001BD4  6EDF               	movwf	indf2,c
  7082   001BD6                     
  7083                           ;dc_motor.c: 190:     setMotorPWM(mL);
  7084   001BD6  C01C  F016         	movff	fullSpeedBackwards@mL,setMotorPWM@m
  7085   001BDA  C01D  F017         	movff	fullSpeedBackwards@mL+1,setMotorPWM@m+1
  7086   001BDE  EC77  F00A         	call	_setMotorPWM	;wreg free
  7087   001BE2                     
  7088                           ;dc_motor.c: 191:     setMotorPWM(mR);
  7089   001BE2  C01E  F016         	movff	fullSpeedBackwards@mR,setMotorPWM@m
  7090   001BE6  C01F  F017         	movff	fullSpeedBackwards@mR+1,setMotorPWM@m+1
  7091   001BEA  EC77  F00A         	call	_setMotorPWM	;wreg free
  7092   001BEE                     
  7093                           ;dc_motor.c: 192:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7094   001BEE  0E05               	movlw	5
  7095   001BF0  6E21               	movwf	(??_fullSpeedBackwards+1)^0,c
  7096   001BF2  0E0F               	movlw	15
  7097   001BF4  6E20               	movwf	??_fullSpeedBackwards^0,c
  7098   001BF6  0EF1               	movlw	241
  7099   001BF8                     u4737:
  7100   001BF8  2EE8               	decfsz	wreg,f,c
  7101   001BFA  D7FE               	bra	u4737
  7102   001BFC  2E20               	decfsz	??_fullSpeedBackwards^0,f,c
  7103   001BFE  D7FC               	bra	u4737
  7104   001C00  2E21               	decfsz	(??_fullSpeedBackwards+1)^0,f,c
  7105   001C02  D7FA               	bra	u4737
  7106   001C04  F000               	nop	
  7107   001C06  0012               	return		;funcret
  7108   001C08                     __end_of_fullSpeedBackwards:
  7109                           	callstack 0
  7110                           
  7111 ;; *************** function _setMotorPWM *****************
  7112 ;; Defined at:
  7113 ;;		line 64 in file "dc_motor.c"
  7114 ;; Parameters:    Size  Location     Type
  7115 ;;  m               2   21[COMRAM] PTR struct DC_motor
  7116 ;;		 -> main@motorR(9), main@motorL(9), 
  7117 ;; Auto vars:     Size  Location     Type
  7118 ;;  negDuty         1   26[COMRAM] unsigned char 
  7119 ;;  posDuty         1   25[COMRAM] unsigned char 
  7120 ;; Return value:  Size  Location     Type
  7121 ;;                  1    wreg      void 
  7122 ;; Registers used:
  7123 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7124 ;; Tracked objects:
  7125 ;;		On entry : 0/0
  7126 ;;		On exit  : 0/0
  7127 ;;		Unchanged: 0/0
  7128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7129 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7130 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7131 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7132 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7133 ;;Total ram usage:        6 bytes
  7134 ;; Hardware stack levels used: 1
  7135 ;; Hardware stack levels required when called: 8
  7136 ;; This function calls:
  7137 ;;		___lwdiv
  7138 ;;		___wmul
  7139 ;; This function is called by:
  7140 ;;		_stop
  7141 ;;		_turnLeft
  7142 ;;		_turnRight
  7143 ;;		_fullSpeedAhead
  7144 ;;		_fullSpeedBackwards
  7145 ;; This function uses a non-reentrant model
  7146 ;;
  7147                           
  7148                           	psect	text33
  7149   0014EE                     __ptext33:
  7150                           	callstack 0
  7151   0014EE                     _setMotorPWM:
  7152                           	callstack 21
  7153   0014EE                     
  7154                           ;dc_motor.c: 64: void setMotorPWM(DC_motor *m);dc_motor.c: 65: {;dc_motor.c: 66:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 68:     if(m->brakemode) {
  7155   0014EE  EE20 F002          	lfsr	2,2
  7156   0014F2  5016               	movf	setMotorPWM@m^0,w,c
  7157   0014F4  26D9               	addwf	fsr2l,f,c
  7158   0014F6  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7159   0014F8  22DA               	addwfc	fsr2h,f,c
  7160   0014FA  50DF               	movf	indf2,w,c
  7161   0014FC  B4D8               	btfsc	status,2,c
  7162   0014FE  EF83  F00A         	goto	u2021
  7163   001502  EF85  F00A         	goto	u2020
  7164   001506                     u2021:
  7165   001506  EFB9  F00A         	goto	l2778
  7166   00150A                     u2020:
  7167   00150A                     
  7168                           ;dc_motor.c: 69:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  7169   00150A  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  7170   00150E  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  7171   001512  50DF               	movf	indf2,w,c
  7172   001514  6E09               	movwf	___wmul@multiplier^0,c
  7173   001516  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  7174   001518  BE09               	btfsc	___wmul@multiplier^0,7,c
  7175   00151A  060A               	decf	(___wmul@multiplier+1)^0,f,c
  7176   00151C  EE20 F003          	lfsr	2,3
  7177   001520  5016               	movf	setMotorPWM@m^0,w,c
  7178   001522  26D9               	addwf	fsr2l,f,c
  7179   001524  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7180   001526  22DA               	addwfc	fsr2h,f,c
  7181   001528  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  7182   00152C  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  7183   001530  EC98  F014         	call	___wmul	;wreg free
  7184   001534  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  7185   001538  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  7186   00153C  0E00               	movlw	0
  7187   00153E  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  7188   001540  0E64               	movlw	100
  7189   001542  6E11               	movwf	___lwdiv@divisor^0,c
  7190   001544  EC01  F012         	call	___lwdiv	;wreg free
  7191   001548  EE20 F003          	lfsr	2,3
  7192   00154C  5016               	movf	setMotorPWM@m^0,w,c
  7193   00154E  26D9               	addwf	fsr2l,f,c
  7194   001550  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7195   001552  22DA               	addwfc	fsr2h,f,c
  7196   001554  50DF               	movf	indf2,w,c
  7197   001556  6E18               	movwf	??_setMotorPWM^0,c
  7198   001558  500F               	movf	?___lwdiv^0,w,c
  7199   00155A  5C18               	subwf	??_setMotorPWM^0,w,c
  7200   00155C  6E1A               	movwf	setMotorPWM@posDuty^0,c
  7201   00155E                     
  7202                           ;dc_motor.c: 70:         negDuty=m->PWMperiod;
  7203   00155E  EE20 F003          	lfsr	2,3
  7204   001562  5016               	movf	setMotorPWM@m^0,w,c
  7205   001564  26D9               	addwf	fsr2l,f,c
  7206   001566  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7207   001568  22DA               	addwfc	fsr2h,f,c
  7208   00156A  50DF               	movf	indf2,w,c
  7209   00156C  6E1B               	movwf	setMotorPWM@negDuty^0,c
  7210                           
  7211                           ;dc_motor.c: 71:     }
  7212   00156E  EFDC  F00A         	goto	l2782
  7213   001572                     l2778:
  7214                           
  7215                           ;dc_motor.c: 73:         posDuty=0;
  7216   001572  0E00               	movlw	0
  7217   001574  6E1A               	movwf	setMotorPWM@posDuty^0,c
  7218   001576                     
  7219                           ;dc_motor.c: 74:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  7220   001576  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  7221   00157A  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  7222   00157E  50DF               	movf	indf2,w,c
  7223   001580  6E09               	movwf	___wmul@multiplier^0,c
  7224   001582  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  7225   001584  BE09               	btfsc	___wmul@multiplier^0,7,c
  7226   001586  060A               	decf	(___wmul@multiplier+1)^0,f,c
  7227   001588  EE20 F003          	lfsr	2,3
  7228   00158C  5016               	movf	setMotorPWM@m^0,w,c
  7229   00158E  26D9               	addwf	fsr2l,f,c
  7230   001590  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7231   001592  22DA               	addwfc	fsr2h,f,c
  7232   001594  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  7233   001598  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  7234   00159C  EC98  F014         	call	___wmul	;wreg free
  7235   0015A0  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  7236   0015A4  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  7237   0015A8  0E00               	movlw	0
  7238   0015AA  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  7239   0015AC  0E64               	movlw	100
  7240   0015AE  6E11               	movwf	___lwdiv@divisor^0,c
  7241   0015B0  EC01  F012         	call	___lwdiv	;wreg free
  7242   0015B4  500F               	movf	?___lwdiv^0,w,c
  7243   0015B6  6E1B               	movwf	setMotorPWM@negDuty^0,c
  7244   0015B8                     l2782:
  7245                           
  7246                           ;dc_motor.c: 77:     if (m->direction) {
  7247   0015B8  EE20 F001          	lfsr	2,1
  7248   0015BC  5016               	movf	setMotorPWM@m^0,w,c
  7249   0015BE  26D9               	addwf	fsr2l,f,c
  7250   0015C0  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7251   0015C2  22DA               	addwfc	fsr2h,f,c
  7252   0015C4  50DF               	movf	indf2,w,c
  7253   0015C6  B4D8               	btfsc	status,2,c
  7254   0015C8  EFE8  F00A         	goto	u2031
  7255   0015CC  EFEA  F00A         	goto	u2030
  7256   0015D0                     u2031:
  7257   0015D0  EF0C  F00B         	goto	l2786
  7258   0015D4                     u2030:
  7259   0015D4                     
  7260                           ;dc_motor.c: 78:         *(m->posDutyHighByte)=posDuty;
  7261   0015D4  EE20 F005          	lfsr	2,5
  7262   0015D8  5016               	movf	setMotorPWM@m^0,w,c
  7263   0015DA  26D9               	addwf	fsr2l,f,c
  7264   0015DC  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7265   0015DE  22DA               	addwfc	fsr2h,f,c
  7266   0015E0  CFDE F018          	movff	postinc2,??_setMotorPWM
  7267   0015E4  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  7268   0015E8  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  7269   0015EC  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  7270   0015F0  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  7271                           
  7272                           ;dc_motor.c: 79:         *(m->negDutyHighByte)=negDuty;
  7273   0015F4  EE20 F007          	lfsr	2,7
  7274   0015F8  5016               	movf	setMotorPWM@m^0,w,c
  7275   0015FA  26D9               	addwf	fsr2l,f,c
  7276   0015FC  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7277   0015FE  22DA               	addwfc	fsr2h,f,c
  7278   001600  CFDE F018          	movff	postinc2,??_setMotorPWM
  7279   001604  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  7280   001608  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  7281   00160C  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  7282   001610  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  7283                           
  7284                           ;dc_motor.c: 80:     } else {
  7285   001614  EF2C  F00B         	goto	l193
  7286   001618                     l2786:
  7287                           
  7288                           ;dc_motor.c: 81:         *(m->posDutyHighByte)=negDuty;
  7289   001618  EE20 F005          	lfsr	2,5
  7290   00161C  5016               	movf	setMotorPWM@m^0,w,c
  7291   00161E  26D9               	addwf	fsr2l,f,c
  7292   001620  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7293   001622  22DA               	addwfc	fsr2h,f,c
  7294   001624  CFDE F018          	movff	postinc2,??_setMotorPWM
  7295   001628  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  7296   00162C  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  7297   001630  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  7298   001634  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  7299                           
  7300                           ;dc_motor.c: 82:         *(m->negDutyHighByte)=posDuty;
  7301   001638  EE20 F007          	lfsr	2,7
  7302   00163C  5016               	movf	setMotorPWM@m^0,w,c
  7303   00163E  26D9               	addwf	fsr2l,f,c
  7304   001640  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7305   001642  22DA               	addwfc	fsr2h,f,c
  7306   001644  CFDE F018          	movff	postinc2,??_setMotorPWM
  7307   001648  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  7308   00164C  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  7309   001650  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  7310   001654  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  7311   001658                     l193:
  7312   001658  0012               	return		;funcret
  7313   00165A                     __end_of_setMotorPWM:
  7314                           	callstack 0
  7315                           
  7316 ;; *************** function ___wmul *****************
  7317 ;; Defined at:
  7318 ;;		line 15 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\Umul16.c"
  7319 ;; Parameters:    Size  Location     Type
  7320 ;;  multiplier      2    8[COMRAM] unsigned int 
  7321 ;;  multiplicand    2   10[COMRAM] unsigned int 
  7322 ;; Auto vars:     Size  Location     Type
  7323 ;;  product         2   12[COMRAM] unsigned int 
  7324 ;; Return value:  Size  Location     Type
  7325 ;;                  2    8[COMRAM] unsigned int 
  7326 ;; Registers used:
  7327 ;;		wreg, status,2, status,0, prodl, prodh
  7328 ;; Tracked objects:
  7329 ;;		On entry : 0/0
  7330 ;;		On exit  : 0/0
  7331 ;;		Unchanged: 0/0
  7332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7333 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7334 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7336 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7337 ;;Total ram usage:        6 bytes
  7338 ;; Hardware stack levels used: 1
  7339 ;; Hardware stack levels required when called: 7
  7340 ;; This function calls:
  7341 ;;		Nothing
  7342 ;; This function is called by:
  7343 ;;		_setMotorPWM
  7344 ;; This function uses a non-reentrant model
  7345 ;;
  7346                           
  7347                           	psect	text34
  7348   002930                     __ptext34:
  7349                           	callstack 0
  7350   002930                     ___wmul:
  7351                           	callstack 21
  7352   002930  5009               	movf	___wmul@multiplier^0,w,c
  7353   002932  020B               	mulwf	___wmul@multiplicand^0,c
  7354   002934  CFF3 F00D          	movff	prodl,___wmul@product
  7355   002938  CFF4 F00E          	movff	prodh,___wmul@product+1
  7356   00293C  5009               	movf	___wmul@multiplier^0,w,c
  7357   00293E  020C               	mulwf	(___wmul@multiplicand+1)^0,c
  7358   002940  50F3               	movf	243,w,c
  7359   002942  260E               	addwf	(___wmul@product+1)^0,f,c
  7360   002944  500A               	movf	(___wmul@multiplier+1)^0,w,c
  7361   002946  020B               	mulwf	___wmul@multiplicand^0,c
  7362   002948  50F3               	movf	243,w,c
  7363   00294A  260E               	addwf	(___wmul@product+1)^0,f,c
  7364   00294C  C00D  F009         	movff	___wmul@product,?___wmul
  7365   002950  C00E  F00A         	movff	___wmul@product+1,?___wmul+1
  7366   002954  0012               	return		;funcret
  7367   002956                     __end_of___wmul:
  7368                           	callstack 0
  7369                           
  7370 ;; *************** function ___lwdiv *****************
  7371 ;; Defined at:
  7372 ;;		line 7 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\lwdiv.c"
  7373 ;; Parameters:    Size  Location     Type
  7374 ;;  dividend        2   14[COMRAM] unsigned int 
  7375 ;;  divisor         2   16[COMRAM] unsigned int 
  7376 ;; Auto vars:     Size  Location     Type
  7377 ;;  quotient        2   18[COMRAM] unsigned int 
  7378 ;;  counter         1   20[COMRAM] unsigned char 
  7379 ;; Return value:  Size  Location     Type
  7380 ;;                  2   14[COMRAM] unsigned int 
  7381 ;; Registers used:
  7382 ;;		wreg, status,2, status,0
  7383 ;; Tracked objects:
  7384 ;;		On entry : 0/0
  7385 ;;		On exit  : 0/0
  7386 ;;		Unchanged: 0/0
  7387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7388 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7389 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7391 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7392 ;;Total ram usage:        7 bytes
  7393 ;; Hardware stack levels used: 1
  7394 ;; Hardware stack levels required when called: 7
  7395 ;; This function calls:
  7396 ;;		Nothing
  7397 ;; This function is called by:
  7398 ;;		_setMotorPWM
  7399 ;; This function uses a non-reentrant model
  7400 ;;
  7401                           
  7402                           	psect	text35
  7403   002402                     __ptext35:
  7404                           	callstack 0
  7405   002402                     ___lwdiv:
  7406                           	callstack 21
  7407   002402  0E00               	movlw	0
  7408   002404  6E14               	movwf	(___lwdiv@quotient+1)^0,c
  7409   002406  0E00               	movlw	0
  7410   002408  6E13               	movwf	___lwdiv@quotient^0,c
  7411   00240A  5011               	movf	___lwdiv@divisor^0,w,c
  7412   00240C  1012               	iorwf	(___lwdiv@divisor+1)^0,w,c
  7413   00240E  B4D8               	btfsc	status,2,c
  7414   002410  EF0C  F012         	goto	u1991
  7415   002414  EF0E  F012         	goto	u1990
  7416   002418                     u1991:
  7417   002418  EF36  F012         	goto	l1198
  7418   00241C                     u1990:
  7419   00241C  0E01               	movlw	1
  7420   00241E  6E15               	movwf	___lwdiv@counter^0,c
  7421   002420  EF16  F012         	goto	l2758
  7422   002424                     l2756:
  7423   002424  90D8               	bcf	status,0,c
  7424   002426  3611               	rlcf	___lwdiv@divisor^0,f,c
  7425   002428  3612               	rlcf	(___lwdiv@divisor+1)^0,f,c
  7426   00242A  2A15               	incf	___lwdiv@counter^0,f,c
  7427   00242C                     l2758:
  7428   00242C  AE12               	btfss	(___lwdiv@divisor+1)^0,7,c
  7429   00242E  EF1B  F012         	goto	u2001
  7430   002432  EF1D  F012         	goto	u2000
  7431   002436                     u2001:
  7432   002436  EF12  F012         	goto	l2756
  7433   00243A                     u2000:
  7434   00243A                     l2760:
  7435   00243A  90D8               	bcf	status,0,c
  7436   00243C  3613               	rlcf	___lwdiv@quotient^0,f,c
  7437   00243E  3614               	rlcf	(___lwdiv@quotient+1)^0,f,c
  7438   002440  5011               	movf	___lwdiv@divisor^0,w,c
  7439   002442  5C0F               	subwf	___lwdiv@dividend^0,w,c
  7440   002444  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  7441   002446  5810               	subwfb	(___lwdiv@dividend+1)^0,w,c
  7442   002448  A0D8               	btfss	status,0,c
  7443   00244A  EF29  F012         	goto	u2011
  7444   00244E  EF2B  F012         	goto	u2010
  7445   002452                     u2011:
  7446   002452  EF30  F012         	goto	l2768
  7447   002456                     u2010:
  7448   002456  5011               	movf	___lwdiv@divisor^0,w,c
  7449   002458  5E0F               	subwf	___lwdiv@dividend^0,f,c
  7450   00245A  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  7451   00245C  5A10               	subwfb	(___lwdiv@dividend+1)^0,f,c
  7452   00245E  8013               	bsf	___lwdiv@quotient^0,0,c
  7453   002460                     l2768:
  7454   002460  90D8               	bcf	status,0,c
  7455   002462  3212               	rrcf	(___lwdiv@divisor+1)^0,f,c
  7456   002464  3211               	rrcf	___lwdiv@divisor^0,f,c
  7457   002466  2E15               	decfsz	___lwdiv@counter^0,f,c
  7458   002468  EF1D  F012         	goto	l2760
  7459   00246C                     l1198:
  7460   00246C  C013  F00F         	movff	___lwdiv@quotient,?___lwdiv
  7461   002470  C014  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7462   002474  0012               	return		;funcret
  7463   002476                     __end_of___lwdiv:
  7464                           	callstack 0
  7465                           
  7466 ;; *************** function _Update_RGBC *****************
  7467 ;; Defined at:
  7468 ;;		line 90 in file "color.c"
  7469 ;; Parameters:    Size  Location     Type
  7470 ;;  tempval         2   19[COMRAM] PTR struct RGB_val
  7471 ;;		 -> main@initial_color(8), 
  7472 ;; Auto vars:     Size  Location     Type
  7473 ;;		None
  7474 ;; Return value:  Size  Location     Type
  7475 ;;                  1    wreg      void 
  7476 ;; Registers used:
  7477 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7478 ;; Tracked objects:
  7479 ;;		On entry : 0/0
  7480 ;;		On exit  : 0/0
  7481 ;;		Unchanged: 0/0
  7482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7483 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7486 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7487 ;;Total ram usage:        2 bytes
  7488 ;; Hardware stack levels used: 1
  7489 ;; Hardware stack levels required when called: 10
  7490 ;; This function calls:
  7491 ;;		_color_read_Blue
  7492 ;;		_color_read_Clear
  7493 ;;		_color_read_Green
  7494 ;;		_color_read_Red
  7495 ;; This function is called by:
  7496 ;;		_main
  7497 ;; This function uses a non-reentrant model
  7498 ;;
  7499                           
  7500                           	psect	text36
  7501   002552                     __ptext36:
  7502                           	callstack 0
  7503   002552                     _Update_RGBC:
  7504                           	callstack 20
  7505   002552                     
  7506                           ;color.c: 92:     tempval->R = color_read_Red();
  7507   002552  ECD8  F012         	call	_color_read_Red	;wreg free
  7508   002556  C014  FFD9         	movff	Update_RGBC@tempval,fsr2l
  7509   00255A  C015  FFDA         	movff	Update_RGBC@tempval+1,fsr2h
  7510   00255E  C00D  FFDE         	movff	?_color_read_Red,postinc2
  7511   002562  C00E  FFDD         	movff	?_color_read_Red+1,postdec2
  7512                           
  7513                           ;color.c: 93:     tempval->G = color_read_Green();
  7514   002566  EC00  F013         	call	_color_read_Green	;wreg free
  7515   00256A  EE20 F002          	lfsr	2,2
  7516   00256E  5014               	movf	Update_RGBC@tempval^0,w,c
  7517   002570  26D9               	addwf	fsr2l,f,c
  7518   002572  5015               	movf	(Update_RGBC@tempval+1)^0,w,c
  7519   002574  22DA               	addwfc	fsr2h,f,c
  7520   002576  C00D  FFDE         	movff	?_color_read_Green,postinc2
  7521   00257A  C00E  FFDD         	movff	?_color_read_Green+1,postdec2
  7522                           
  7523                           ;color.c: 94:     tempval->B = color_read_Blue();
  7524   00257E  EC50  F013         	call	_color_read_Blue	;wreg free
  7525   002582  EE20 F004          	lfsr	2,4
  7526   002586  5014               	movf	Update_RGBC@tempval^0,w,c
  7527   002588  26D9               	addwf	fsr2l,f,c
  7528   00258A  5015               	movf	(Update_RGBC@tempval+1)^0,w,c
  7529   00258C  22DA               	addwfc	fsr2h,f,c
  7530   00258E  C00D  FFDE         	movff	?_color_read_Blue,postinc2
  7531   002592  C00E  FFDD         	movff	?_color_read_Blue+1,postdec2
  7532                           
  7533                           ;color.c: 95:     tempval->C = color_read_Clear();
  7534   002596  EC28  F013         	call	_color_read_Clear	;wreg free
  7535   00259A  EE20 F006          	lfsr	2,6
  7536   00259E  5014               	movf	Update_RGBC@tempval^0,w,c
  7537   0025A0  26D9               	addwf	fsr2l,f,c
  7538   0025A2  5015               	movf	(Update_RGBC@tempval+1)^0,w,c
  7539   0025A4  22DA               	addwfc	fsr2h,f,c
  7540   0025A6  C00D  FFDE         	movff	?_color_read_Clear,postinc2
  7541   0025AA  C00E  FFDD         	movff	?_color_read_Clear+1,postdec2
  7542   0025AE  0012               	return		;funcret
  7543   0025B0                     __end_of_Update_RGBC:
  7544                           	callstack 0
  7545                           
  7546 ;; *************** function _color_read_Red *****************
  7547 ;; Defined at:
  7548 ;;		line 32 in file "color.c"
  7549 ;; Parameters:    Size  Location     Type
  7550 ;;		None
  7551 ;; Auto vars:     Size  Location     Type
  7552 ;;  tmp             2   17[COMRAM] unsigned int 
  7553 ;; Return value:  Size  Location     Type
  7554 ;;                  2   12[COMRAM] unsigned int 
  7555 ;; Registers used:
  7556 ;;		wreg, status,2, status,0, cstack
  7557 ;; Tracked objects:
  7558 ;;		On entry : 0/0
  7559 ;;		On exit  : 0/0
  7560 ;;		Unchanged: 0/0
  7561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7562 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7563 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7564 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7565 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7566 ;;Total ram usage:        7 bytes
  7567 ;; Hardware stack levels used: 1
  7568 ;; Hardware stack levels required when called: 9
  7569 ;; This function calls:
  7570 ;;		_I2C_2_Master_Read
  7571 ;;		_I2C_2_Master_RepStart
  7572 ;;		_I2C_2_Master_Start
  7573 ;;		_I2C_2_Master_Stop
  7574 ;;		_I2C_2_Master_Write
  7575 ;; This function is called by:
  7576 ;;		_Update_RGBC
  7577 ;; This function uses a non-reentrant model
  7578 ;;
  7579                           
  7580                           	psect	text37
  7581   0025B0                     __ptext37:
  7582                           	callstack 0
  7583   0025B0                     _color_read_Red:
  7584                           	callstack 20
  7585   0025B0                     
  7586                           ;color.c: 34:  unsigned int tmp;;color.c: 35:  I2C_2_Master_Start();
  7587   0025B0  EC5A  F015         	call	_I2C_2_Master_Start	;wreg free
  7588                           
  7589                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x00);
  7590   0025B4  0E52               	movlw	82
  7591   0025B6  EC44  F015         	call	_I2C_2_Master_Write
  7592                           
  7593                           ;color.c: 37:  I2C_2_Master_Write(0xA0 | 0x16);
  7594   0025BA  0EB6               	movlw	182
  7595   0025BC  EC44  F015         	call	_I2C_2_Master_Write
  7596                           
  7597                           ;color.c: 38:  I2C_2_Master_RepStart();
  7598   0025C0  EC50  F015         	call	_I2C_2_Master_RepStart	;wreg free
  7599                           
  7600                           ;color.c: 39:  I2C_2_Master_Write(0x52 | 0x01);
  7601   0025C4  0E53               	movlw	83
  7602   0025C6  EC44  F015         	call	_I2C_2_Master_Write
  7603                           
  7604                           ;color.c: 40:  tmp=I2C_2_Master_Read(1);
  7605   0025CA  0E01               	movlw	1
  7606   0025CC  ECEB  F013         	call	_I2C_2_Master_Read
  7607   0025D0  6E0F               	movwf	??_color_read_Red^0,c
  7608   0025D2  500F               	movf	??_color_read_Red^0,w,c
  7609   0025D4  6E12               	movwf	color_read_Red@tmp^0,c
  7610   0025D6  6A13               	clrf	(color_read_Red@tmp+1)^0,c
  7611                           
  7612                           ;color.c: 41:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7613   0025D8  0E00               	movlw	0
  7614   0025DA  ECEB  F013         	call	_I2C_2_Master_Read
  7615   0025DE  6E0F               	movwf	??_color_read_Red^0,c
  7616   0025E0  500F               	movf	??_color_read_Red^0,w,c
  7617   0025E2  6E11               	movwf	(??_color_read_Red+2)^0,c
  7618   0025E4  6A10               	clrf	(??_color_read_Red+1)^0,c
  7619   0025E6  5012               	movf	color_read_Red@tmp^0,w,c
  7620   0025E8  1010               	iorwf	(??_color_read_Red+1)^0,w,c
  7621   0025EA  6E12               	movwf	color_read_Red@tmp^0,c
  7622   0025EC  5013               	movf	(color_read_Red@tmp+1)^0,w,c
  7623   0025EE  1011               	iorwf	(??_color_read_Red+2)^0,w,c
  7624   0025F0  6E13               	movwf	(color_read_Red@tmp+1)^0,c
  7625                           
  7626                           ;color.c: 42:  I2C_2_Master_Stop();
  7627   0025F2  EC55  F015         	call	_I2C_2_Master_Stop	;wreg free
  7628   0025F6                     
  7629                           ;color.c: 43:  return tmp;
  7630   0025F6  C012  F00D         	movff	color_read_Red@tmp,?_color_read_Red
  7631   0025FA  C013  F00E         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  7632   0025FE  0012               	return		;funcret
  7633   002600                     __end_of_color_read_Red:
  7634                           	callstack 0
  7635                           
  7636 ;; *************** function _color_read_Green *****************
  7637 ;; Defined at:
  7638 ;;		line 46 in file "color.c"
  7639 ;; Parameters:    Size  Location     Type
  7640 ;;		None
  7641 ;; Auto vars:     Size  Location     Type
  7642 ;;  tmp             2   17[COMRAM] unsigned int 
  7643 ;; Return value:  Size  Location     Type
  7644 ;;                  2   12[COMRAM] unsigned int 
  7645 ;; Registers used:
  7646 ;;		wreg, status,2, status,0, cstack
  7647 ;; Tracked objects:
  7648 ;;		On entry : 0/0
  7649 ;;		On exit  : 0/0
  7650 ;;		Unchanged: 0/0
  7651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7652 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7653 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7654 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7655 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7656 ;;Total ram usage:        7 bytes
  7657 ;; Hardware stack levels used: 1
  7658 ;; Hardware stack levels required when called: 9
  7659 ;; This function calls:
  7660 ;;		_I2C_2_Master_Read
  7661 ;;		_I2C_2_Master_RepStart
  7662 ;;		_I2C_2_Master_Start
  7663 ;;		_I2C_2_Master_Stop
  7664 ;;		_I2C_2_Master_Write
  7665 ;; This function is called by:
  7666 ;;		_Update_RGBC
  7667 ;; This function uses a non-reentrant model
  7668 ;;
  7669                           
  7670                           	psect	text38
  7671   002600                     __ptext38:
  7672                           	callstack 0
  7673   002600                     _color_read_Green:
  7674                           	callstack 20
  7675   002600                     
  7676                           ;color.c: 48:  unsigned int tmp;;color.c: 49:  I2C_2_Master_Start();
  7677   002600  EC5A  F015         	call	_I2C_2_Master_Start	;wreg free
  7678                           
  7679                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x00);
  7680   002604  0E52               	movlw	82
  7681   002606  EC44  F015         	call	_I2C_2_Master_Write
  7682                           
  7683                           ;color.c: 51:  I2C_2_Master_Write(0xA0 | 0x18);
  7684   00260A  0EB8               	movlw	184
  7685   00260C  EC44  F015         	call	_I2C_2_Master_Write
  7686                           
  7687                           ;color.c: 52:  I2C_2_Master_RepStart();
  7688   002610  EC50  F015         	call	_I2C_2_Master_RepStart	;wreg free
  7689                           
  7690                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x01);
  7691   002614  0E53               	movlw	83
  7692   002616  EC44  F015         	call	_I2C_2_Master_Write
  7693                           
  7694                           ;color.c: 54:  tmp=I2C_2_Master_Read(1);
  7695   00261A  0E01               	movlw	1
  7696   00261C  ECEB  F013         	call	_I2C_2_Master_Read
  7697   002620  6E0F               	movwf	??_color_read_Green^0,c
  7698   002622  500F               	movf	??_color_read_Green^0,w,c
  7699   002624  6E12               	movwf	color_read_Green@tmp^0,c
  7700   002626  6A13               	clrf	(color_read_Green@tmp+1)^0,c
  7701                           
  7702                           ;color.c: 55:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7703   002628  0E00               	movlw	0
  7704   00262A  ECEB  F013         	call	_I2C_2_Master_Read
  7705   00262E  6E0F               	movwf	??_color_read_Green^0,c
  7706   002630  500F               	movf	??_color_read_Green^0,w,c
  7707   002632  6E11               	movwf	(??_color_read_Green+2)^0,c
  7708   002634  6A10               	clrf	(??_color_read_Green+1)^0,c
  7709   002636  5012               	movf	color_read_Green@tmp^0,w,c
  7710   002638  1010               	iorwf	(??_color_read_Green+1)^0,w,c
  7711   00263A  6E12               	movwf	color_read_Green@tmp^0,c
  7712   00263C  5013               	movf	(color_read_Green@tmp+1)^0,w,c
  7713   00263E  1011               	iorwf	(??_color_read_Green+2)^0,w,c
  7714   002640  6E13               	movwf	(color_read_Green@tmp+1)^0,c
  7715                           
  7716                           ;color.c: 56:  I2C_2_Master_Stop();
  7717   002642  EC55  F015         	call	_I2C_2_Master_Stop	;wreg free
  7718   002646                     
  7719                           ;color.c: 57:  return tmp;
  7720   002646  C012  F00D         	movff	color_read_Green@tmp,?_color_read_Green
  7721   00264A  C013  F00E         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  7722   00264E  0012               	return		;funcret
  7723   002650                     __end_of_color_read_Green:
  7724                           	callstack 0
  7725                           
  7726 ;; *************** function _color_read_Clear *****************
  7727 ;; Defined at:
  7728 ;;		line 74 in file "color.c"
  7729 ;; Parameters:    Size  Location     Type
  7730 ;;		None
  7731 ;; Auto vars:     Size  Location     Type
  7732 ;;  tmp             2   17[COMRAM] unsigned int 
  7733 ;; Return value:  Size  Location     Type
  7734 ;;                  2   12[COMRAM] unsigned int 
  7735 ;; Registers used:
  7736 ;;		wreg, status,2, status,0, cstack
  7737 ;; Tracked objects:
  7738 ;;		On entry : 0/0
  7739 ;;		On exit  : 0/0
  7740 ;;		Unchanged: 0/0
  7741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7742 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7743 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7744 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7745 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7746 ;;Total ram usage:        7 bytes
  7747 ;; Hardware stack levels used: 1
  7748 ;; Hardware stack levels required when called: 9
  7749 ;; This function calls:
  7750 ;;		_I2C_2_Master_Read
  7751 ;;		_I2C_2_Master_RepStart
  7752 ;;		_I2C_2_Master_Start
  7753 ;;		_I2C_2_Master_Stop
  7754 ;;		_I2C_2_Master_Write
  7755 ;; This function is called by:
  7756 ;;		_Update_RGBC
  7757 ;; This function uses a non-reentrant model
  7758 ;;
  7759                           
  7760                           	psect	text39
  7761   002650                     __ptext39:
  7762                           	callstack 0
  7763   002650                     _color_read_Clear:
  7764                           	callstack 20
  7765   002650                     
  7766                           ;color.c: 76:  unsigned int tmp;;color.c: 77:  I2C_2_Master_Start();
  7767   002650  EC5A  F015         	call	_I2C_2_Master_Start	;wreg free
  7768                           
  7769                           ;color.c: 78:  I2C_2_Master_Write(0x52 | 0x00);
  7770   002654  0E52               	movlw	82
  7771   002656  EC44  F015         	call	_I2C_2_Master_Write
  7772                           
  7773                           ;color.c: 79:  I2C_2_Master_Write(0xA0 | 0x14);
  7774   00265A  0EB4               	movlw	180
  7775   00265C  EC44  F015         	call	_I2C_2_Master_Write
  7776                           
  7777                           ;color.c: 80:  I2C_2_Master_RepStart();
  7778   002660  EC50  F015         	call	_I2C_2_Master_RepStart	;wreg free
  7779                           
  7780                           ;color.c: 81:  I2C_2_Master_Write(0x52 | 0x01);
  7781   002664  0E53               	movlw	83
  7782   002666  EC44  F015         	call	_I2C_2_Master_Write
  7783                           
  7784                           ;color.c: 82:  tmp=I2C_2_Master_Read(1);
  7785   00266A  0E01               	movlw	1
  7786   00266C  ECEB  F013         	call	_I2C_2_Master_Read
  7787   002670  6E0F               	movwf	??_color_read_Clear^0,c
  7788   002672  500F               	movf	??_color_read_Clear^0,w,c
  7789   002674  6E12               	movwf	color_read_Clear@tmp^0,c
  7790   002676  6A13               	clrf	(color_read_Clear@tmp+1)^0,c
  7791                           
  7792                           ;color.c: 83:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7793   002678  0E00               	movlw	0
  7794   00267A  ECEB  F013         	call	_I2C_2_Master_Read
  7795   00267E  6E0F               	movwf	??_color_read_Clear^0,c
  7796   002680  500F               	movf	??_color_read_Clear^0,w,c
  7797   002682  6E11               	movwf	(??_color_read_Clear+2)^0,c
  7798   002684  6A10               	clrf	(??_color_read_Clear+1)^0,c
  7799   002686  5012               	movf	color_read_Clear@tmp^0,w,c
  7800   002688  1010               	iorwf	(??_color_read_Clear+1)^0,w,c
  7801   00268A  6E12               	movwf	color_read_Clear@tmp^0,c
  7802   00268C  5013               	movf	(color_read_Clear@tmp+1)^0,w,c
  7803   00268E  1011               	iorwf	(??_color_read_Clear+2)^0,w,c
  7804   002690  6E13               	movwf	(color_read_Clear@tmp+1)^0,c
  7805                           
  7806                           ;color.c: 84:  I2C_2_Master_Stop();
  7807   002692  EC55  F015         	call	_I2C_2_Master_Stop	;wreg free
  7808   002696                     
  7809                           ;color.c: 85:  return tmp;
  7810   002696  C012  F00D         	movff	color_read_Clear@tmp,?_color_read_Clear
  7811   00269A  C013  F00E         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  7812   00269E  0012               	return		;funcret
  7813   0026A0                     __end_of_color_read_Clear:
  7814                           	callstack 0
  7815                           
  7816 ;; *************** function _color_read_Blue *****************
  7817 ;; Defined at:
  7818 ;;		line 60 in file "color.c"
  7819 ;; Parameters:    Size  Location     Type
  7820 ;;		None
  7821 ;; Auto vars:     Size  Location     Type
  7822 ;;  tmp             2   17[COMRAM] unsigned int 
  7823 ;; Return value:  Size  Location     Type
  7824 ;;                  2   12[COMRAM] unsigned int 
  7825 ;; Registers used:
  7826 ;;		wreg, status,2, status,0, cstack
  7827 ;; Tracked objects:
  7828 ;;		On entry : 0/0
  7829 ;;		On exit  : 0/0
  7830 ;;		Unchanged: 0/0
  7831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7832 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7833 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7834 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7835 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7836 ;;Total ram usage:        7 bytes
  7837 ;; Hardware stack levels used: 1
  7838 ;; Hardware stack levels required when called: 9
  7839 ;; This function calls:
  7840 ;;		_I2C_2_Master_Read
  7841 ;;		_I2C_2_Master_RepStart
  7842 ;;		_I2C_2_Master_Start
  7843 ;;		_I2C_2_Master_Stop
  7844 ;;		_I2C_2_Master_Write
  7845 ;; This function is called by:
  7846 ;;		_Update_RGBC
  7847 ;; This function uses a non-reentrant model
  7848 ;;
  7849                           
  7850                           	psect	text40
  7851   0026A0                     __ptext40:
  7852                           	callstack 0
  7853   0026A0                     _color_read_Blue:
  7854                           	callstack 20
  7855   0026A0                     
  7856                           ;color.c: 62:  unsigned int tmp;;color.c: 63:  I2C_2_Master_Start();
  7857   0026A0  EC5A  F015         	call	_I2C_2_Master_Start	;wreg free
  7858                           
  7859                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x00);
  7860   0026A4  0E52               	movlw	82
  7861   0026A6  EC44  F015         	call	_I2C_2_Master_Write
  7862                           
  7863                           ;color.c: 65:  I2C_2_Master_Write(0xA0 | 0x1A);
  7864   0026AA  0EBA               	movlw	186
  7865   0026AC  EC44  F015         	call	_I2C_2_Master_Write
  7866                           
  7867                           ;color.c: 66:  I2C_2_Master_RepStart();
  7868   0026B0  EC50  F015         	call	_I2C_2_Master_RepStart	;wreg free
  7869                           
  7870                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x01);
  7871   0026B4  0E53               	movlw	83
  7872   0026B6  EC44  F015         	call	_I2C_2_Master_Write
  7873                           
  7874                           ;color.c: 68:  tmp=I2C_2_Master_Read(1);
  7875   0026BA  0E01               	movlw	1
  7876   0026BC  ECEB  F013         	call	_I2C_2_Master_Read
  7877   0026C0  6E0F               	movwf	??_color_read_Blue^0,c
  7878   0026C2  500F               	movf	??_color_read_Blue^0,w,c
  7879   0026C4  6E12               	movwf	color_read_Blue@tmp^0,c
  7880   0026C6  6A13               	clrf	(color_read_Blue@tmp+1)^0,c
  7881                           
  7882                           ;color.c: 69:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7883   0026C8  0E00               	movlw	0
  7884   0026CA  ECEB  F013         	call	_I2C_2_Master_Read
  7885   0026CE  6E0F               	movwf	??_color_read_Blue^0,c
  7886   0026D0  500F               	movf	??_color_read_Blue^0,w,c
  7887   0026D2  6E11               	movwf	(??_color_read_Blue+2)^0,c
  7888   0026D4  6A10               	clrf	(??_color_read_Blue+1)^0,c
  7889   0026D6  5012               	movf	color_read_Blue@tmp^0,w,c
  7890   0026D8  1010               	iorwf	(??_color_read_Blue+1)^0,w,c
  7891   0026DA  6E12               	movwf	color_read_Blue@tmp^0,c
  7892   0026DC  5013               	movf	(color_read_Blue@tmp+1)^0,w,c
  7893   0026DE  1011               	iorwf	(??_color_read_Blue+2)^0,w,c
  7894   0026E0  6E13               	movwf	(color_read_Blue@tmp+1)^0,c
  7895                           
  7896                           ;color.c: 70:  I2C_2_Master_Stop();
  7897   0026E2  EC55  F015         	call	_I2C_2_Master_Stop	;wreg free
  7898   0026E6                     
  7899                           ;color.c: 71:  return tmp;
  7900   0026E6  C012  F00D         	movff	color_read_Blue@tmp,?_color_read_Blue
  7901   0026EA  C013  F00E         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  7902   0026EE  0012               	return		;funcret
  7903   0026F0                     __end_of_color_read_Blue:
  7904                           	callstack 0
  7905                           
  7906 ;; *************** function _I2C_2_Master_RepStart *****************
  7907 ;; Defined at:
  7908 ;;		line 33 in file "i2c.c"
  7909 ;; Parameters:    Size  Location     Type
  7910 ;;		None
  7911 ;; Auto vars:     Size  Location     Type
  7912 ;;		None
  7913 ;; Return value:  Size  Location     Type
  7914 ;;                  1    wreg      void 
  7915 ;; Registers used:
  7916 ;;		wreg, status,2, status,0, cstack
  7917 ;; Tracked objects:
  7918 ;;		On entry : 0/0
  7919 ;;		On exit  : 0/0
  7920 ;;		Unchanged: 0/0
  7921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7926 ;;Total ram usage:        0 bytes
  7927 ;; Hardware stack levels used: 1
  7928 ;; Hardware stack levels required when called: 8
  7929 ;; This function calls:
  7930 ;;		_I2C_2_Master_Idle
  7931 ;; This function is called by:
  7932 ;;		_color_read_Red
  7933 ;;		_color_read_Green
  7934 ;;		_color_read_Blue
  7935 ;;		_color_read_Clear
  7936 ;; This function uses a non-reentrant model
  7937 ;;
  7938                           
  7939                           	psect	text41
  7940   002AA0                     __ptext41:
  7941                           	callstack 0
  7942   002AA0                     _I2C_2_Master_RepStart:
  7943                           	callstack 20
  7944   002AA0                     
  7945                           ;i2c.c: 35:   I2C_2_Master_Idle();
  7946   002AA0  EC70  F014         	call	_I2C_2_Master_Idle	;wreg free
  7947   002AA4                     
  7948                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  7949   002AA4  010E               	movlb	14	; () banked
  7950   002AA6  83DA               	bsf	218,1,b	;volatile
  7951   002AA8                     
  7952                           ; BSR set to: 14
  7953   002AA8  0012               	return		;funcret
  7954   002AAA                     __end_of_I2C_2_Master_RepStart:
  7955                           	callstack 0
  7956                           
  7957 ;; *************** function _I2C_2_Master_Read *****************
  7958 ;; Defined at:
  7959 ;;		line 51 in file "i2c.c"
  7960 ;; Parameters:    Size  Location     Type
  7961 ;;  ack             1    wreg     unsigned char 
  7962 ;; Auto vars:     Size  Location     Type
  7963 ;;  ack             1   10[COMRAM] unsigned char 
  7964 ;;  tmp             1   11[COMRAM] unsigned char 
  7965 ;; Return value:  Size  Location     Type
  7966 ;;                  1    wreg      unsigned char 
  7967 ;; Registers used:
  7968 ;;		wreg, status,2, status,0, cstack
  7969 ;; Tracked objects:
  7970 ;;		On entry : 0/0
  7971 ;;		On exit  : 0/0
  7972 ;;		Unchanged: 0/0
  7973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7975 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7976 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7977 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7978 ;;Total ram usage:        3 bytes
  7979 ;; Hardware stack levels used: 1
  7980 ;; Hardware stack levels required when called: 8
  7981 ;; This function calls:
  7982 ;;		_I2C_2_Master_Idle
  7983 ;; This function is called by:
  7984 ;;		_color_read_Red
  7985 ;;		_color_read_Green
  7986 ;;		_color_read_Blue
  7987 ;;		_color_read_Clear
  7988 ;; This function uses a non-reentrant model
  7989 ;;
  7990                           
  7991                           	psect	text42
  7992   0027D6                     __ptext42:
  7993                           	callstack 0
  7994   0027D6                     _I2C_2_Master_Read:
  7995                           	callstack 20
  7996                           
  7997                           ; BSR set to: 14
  7998                           ;incstack = 0
  7999                           ;I2C_2_Master_Read@ack stored from wreg
  8000   0027D6  6E0B               	movwf	I2C_2_Master_Read@ack^0,c
  8001   0027D8                     
  8002                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  8003   0027D8  EC70  F014         	call	_I2C_2_Master_Idle	;wreg free
  8004   0027DC                     
  8005                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  8006   0027DC  010E               	movlb	14	; () banked
  8007   0027DE  87DA               	bsf	218,3,b	;volatile
  8008                           
  8009                           ;i2c.c: 56:   I2C_2_Master_Idle();
  8010   0027E0  EC70  F014         	call	_I2C_2_Master_Idle	;wreg free
  8011   0027E4                     
  8012                           ;i2c.c: 57:   tmp = SSP2BUF;
  8013   0027E4  CED5 F00C          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  8014                           
  8015                           ;i2c.c: 58:   I2C_2_Master_Idle();
  8016   0027E8  EC70  F014         	call	_I2C_2_Master_Idle	;wreg free
  8017   0027EC                     
  8018                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  8019   0027EC  500B               	movf	I2C_2_Master_Read@ack^0,w,c
  8020   0027EE  B4D8               	btfsc	status,2,c
  8021   0027F0  EFFC  F013         	goto	u2361
  8022   0027F4  EF00  F014         	goto	u2360
  8023   0027F8                     u2361:
  8024   0027F8  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  8025   0027FA  2A0A               	incf	??_I2C_2_Master_Read^0,f,c
  8026   0027FC  EF01  F014         	goto	u2378
  8027   002800                     u2360:
  8028   002800  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  8029   002802                     u2378:
  8030   002802  3A0A               	swapf	??_I2C_2_Master_Read^0,f,c
  8031   002804  460A               	rlncf	??_I2C_2_Master_Read^0,f,c
  8032   002806  010E               	movlb	14	; () banked
  8033   002808  51DA               	movf	218,w,b	;volatile
  8034   00280A  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  8035   00280C  0BDF               	andlw	-33
  8036   00280E  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  8037   002810  6FDA               	movwf	218,b	;volatile
  8038   002812                     
  8039                           ; BSR set to: 14
  8040                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  8041   002812  89DA               	bsf	218,4,b	;volatile
  8042   002814                     
  8043                           ; BSR set to: 14
  8044                           ;i2c.c: 61:   return tmp;
  8045   002814  500C               	movf	I2C_2_Master_Read@tmp^0,w,c
  8046   002816                     
  8047                           ; BSR set to: 14
  8048   002816  0012               	return		;funcret
  8049   002818                     __end_of_I2C_2_Master_Read:
  8050                           	callstack 0
  8051                           
  8052 ;; *************** function _Timer0_init *****************
  8053 ;; Defined at:
  8054 ;;		line 7 in file "timers.c"
  8055 ;; Parameters:    Size  Location     Type
  8056 ;;		None
  8057 ;; Auto vars:     Size  Location     Type
  8058 ;;		None
  8059 ;; Return value:  Size  Location     Type
  8060 ;;                  1    wreg      void 
  8061 ;; Registers used:
  8062 ;;		wreg, status,2
  8063 ;; Tracked objects:
  8064 ;;		On entry : 0/0
  8065 ;;		On exit  : 0/0
  8066 ;;		Unchanged: 0/0
  8067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8072 ;;Total ram usage:        0 bytes
  8073 ;; Hardware stack levels used: 1
  8074 ;; Hardware stack levels required when called: 7
  8075 ;; This function calls:
  8076 ;;		Nothing
  8077 ;; This function is called by:
  8078 ;;		_main
  8079 ;; This function uses a non-reentrant model
  8080 ;;
  8081                           
  8082                           	psect	text43
  8083   00299C                     __ptext43:
  8084                           	callstack 0
  8085   00299C                     _Timer0_init:
  8086                           	callstack 23
  8087   00299C                     
  8088                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  8089   00299C  50D6               	movf	214,w,c	;volatile
  8090   00299E  0B1F               	andlw	-225
  8091   0029A0  0940               	iorlw	64
  8092   0029A2  6ED6               	movwf	214,c	;volatile
  8093   0029A4                     
  8094                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  8095   0029A4  88D6               	bsf	214,4,c	;volatile
  8096                           
  8097                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
  8098   0029A6  50D6               	movf	214,w,c	;volatile
  8099   0029A8  0BF0               	andlw	-16
  8100   0029AA  0908               	iorlw	8
  8101   0029AC  6ED6               	movwf	214,c	;volatile
  8102   0029AE                     
  8103                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
  8104   0029AE  88D5               	bsf	213,4,c	;volatile
  8105                           
  8106                           ;timers.c: 15:     TMR0H = 0b00001011;
  8107   0029B0  0E0B               	movlw	11
  8108   0029B2  6ED4               	movwf	212,c	;volatile
  8109                           
  8110                           ;timers.c: 16:     TMR0L = 0b11011011;
  8111   0029B4  0EDB               	movlw	219
  8112   0029B6  6ED3               	movwf	211,c	;volatile
  8113   0029B8                     
  8114                           ;timers.c: 17:     T0CON0bits.T0EN=1;
  8115   0029B8  8ED5               	bsf	213,7,c	;volatile
  8116   0029BA  0012               	return		;funcret
  8117   0029BC                     __end_of_Timer0_init:
  8118                           	callstack 0
  8119                           
  8120 ;; *************** function _LED_init *****************
  8121 ;; Defined at:
  8122 ;;		line 7 in file "LED_Buttons.c"
  8123 ;; Parameters:    Size  Location     Type
  8124 ;;		None
  8125 ;; Auto vars:     Size  Location     Type
  8126 ;;		None
  8127 ;; Return value:  Size  Location     Type
  8128 ;;                  1    wreg      void 
  8129 ;; Registers used:
  8130 ;;		None
  8131 ;; Tracked objects:
  8132 ;;		On entry : 0/0
  8133 ;;		On exit  : 0/0
  8134 ;;		Unchanged: 0/0
  8135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8140 ;;Total ram usage:        0 bytes
  8141 ;; Hardware stack levels used: 1
  8142 ;; Hardware stack levels required when called: 7
  8143 ;; This function calls:
  8144 ;;		Nothing
  8145 ;; This function is called by:
  8146 ;;		_main
  8147 ;; This function uses a non-reentrant model
  8148 ;;
  8149                           
  8150                           	psect	text44
  8151   002A3A                     __ptext44:
  8152                           	callstack 0
  8153   002A3A                     _LED_init:
  8154                           	callstack 23
  8155   002A3A                     
  8156                           ;LED_Buttons.c: 8:     TRISGbits.TRISG1 = 0;
  8157   002A3A  9287               	bcf	135,1,c	;volatile
  8158                           
  8159                           ;LED_Buttons.c: 9:     TRISAbits.TRISA4 = 0;
  8160   002A3C  9881               	bcf	129,4,c	;volatile
  8161                           
  8162                           ;LED_Buttons.c: 10:     TRISFbits.TRISF7 = 0;
  8163   002A3E  9E86               	bcf	134,7,c	;volatile
  8164                           
  8165                           ;LED_Buttons.c: 12:     LATHbits.LATH3 = 0;
  8166   002A40  9680               	bcf	128,3,c	;volatile
  8167                           
  8168                           ;LED_Buttons.c: 13:     TRISHbits.TRISH3 = 0;
  8169   002A42  9688               	bcf	136,3,c	;volatile
  8170                           
  8171                           ;LED_Buttons.c: 15:     LATDbits.LATD7 = 0;
  8172   002A44  9E7C               	bcf	124,7,c	;volatile
  8173                           
  8174                           ;LED_Buttons.c: 16:     TRISDbits.TRISD7 = 0;
  8175   002A46  9E84               	bcf	132,7,c	;volatile
  8176                           
  8177                           ;LED_Buttons.c: 19:     TRISFbits.TRISF2=1;
  8178   002A48  8486               	bsf	134,2,c	;volatile
  8179                           
  8180                           ;LED_Buttons.c: 20:     TRISFbits.TRISF3=1;
  8181   002A4A  8686               	bsf	134,3,c	;volatile
  8182                           
  8183                           ;LED_Buttons.c: 21:     ANSELFbits.ANSELF2=0;
  8184   002A4C  010E               	movlb	14	; () banked
  8185   002A4E  95B4               	bcf	180,2,b	;volatile
  8186                           
  8187                           ;LED_Buttons.c: 22:     ANSELFbits.ANSELF3=0;
  8188   002A50  97B4               	bcf	180,3,b	;volatile
  8189   002A52                     
  8190                           ; BSR set to: 14
  8191   002A52  0012               	return		;funcret
  8192   002A54                     __end_of_LED_init:
  8193                           	callstack 0
  8194                           
  8195 ;; *************** function _Interrupts_init *****************
  8196 ;; Defined at:
  8197 ;;		line 12 in file "interrupts.c"
  8198 ;; Parameters:    Size  Location     Type
  8199 ;;		None
  8200 ;; Auto vars:     Size  Location     Type
  8201 ;;		None
  8202 ;; Return value:  Size  Location     Type
  8203 ;;                  1    wreg      void 
  8204 ;; Registers used:
  8205 ;;		wreg, status,2, status,0, cstack
  8206 ;; Tracked objects:
  8207 ;;		On entry : 0/0
  8208 ;;		On exit  : 0/0
  8209 ;;		Unchanged: 0/0
  8210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8215 ;;Total ram usage:        0 bytes
  8216 ;; Hardware stack levels used: 1
  8217 ;; Hardware stack levels required when called: 12
  8218 ;; This function calls:
  8219 ;;		_interrupts_clear_colorclick
  8220 ;; This function is called by:
  8221 ;;		_main
  8222 ;; This function uses a non-reentrant model
  8223 ;;
  8224                           
  8225                           	psect	text45
  8226   002A1C                     __ptext45:
  8227                           	callstack 0
  8228   002A1C                     _Interrupts_init:
  8229                           	callstack 18
  8230   002A1C                     
  8231                           ;interrupts.c: 18:     TRISBbits.TRISB1 = 1;
  8232   002A1C  8282               	bsf	130,1,c	;volatile
  8233                           
  8234                           ;interrupts.c: 19:     ANSELBbits.ANSELB1 = 0;
  8235   002A1E  010E               	movlb	14	; () banked
  8236   002A20  939A               	bcf	154,1,b	;volatile
  8237                           
  8238                           ;interrupts.c: 21:     PIE0bits.INT1IE = 1;
  8239   002A22  8329               	bsf	41,1,b	;volatile
  8240                           
  8241                           ;interrupts.c: 22:     IPR0bits.INT1IP = 1;
  8242   002A24  831F               	bsf	31,1,b	;volatile
  8243                           
  8244                           ;interrupts.c: 23:     INTCONbits.INT1EDG = 0;
  8245   002A26  92F2               	bcf	242,1,c	;volatile
  8246                           
  8247                           ;interrupts.c: 26:     PIE0bits.TMR0IE=1;
  8248   002A28  8B29               	bsf	41,5,b	;volatile
  8249                           
  8250                           ;interrupts.c: 27:     IPR0bits.TMR0IP = 0;
  8251   002A2A  9B1F               	bcf	31,5,b	;volatile
  8252                           
  8253                           ;interrupts.c: 30:     PIE4bits.RC4IE=1;
  8254   002A2C  872D               	bsf	45,3,b	;volatile
  8255   002A2E                     
  8256                           ; BSR set to: 14
  8257                           ;interrupts.c: 32:     interrupts_clear_colorclick();
  8258   002A2E  EC2A  F015         	call	_interrupts_clear_colorclick	;wreg free
  8259   002A32                     
  8260                           ;interrupts.c: 34:     INTCONbits.IPEN = 1;
  8261   002A32  8AF2               	bsf	242,5,c	;volatile
  8262   002A34                     
  8263                           ;interrupts.c: 35:     INTCONbits.PEIE = 1;
  8264   002A34  8CF2               	bsf	242,6,c	;volatile
  8265   002A36                     
  8266                           ;interrupts.c: 36:     INTCONbits.GIE=1;
  8267   002A36  8EF2               	bsf	242,7,c	;volatile
  8268   002A38  0012               	return		;funcret
  8269   002A3A                     __end_of_Interrupts_init:
  8270                           	callstack 0
  8271                           
  8272 ;; *************** function _interrupts_clear_colorclick *****************
  8273 ;; Defined at:
  8274 ;;		line 57 in file "interrupts.c"
  8275 ;; Parameters:    Size  Location     Type
  8276 ;;		None
  8277 ;; Auto vars:     Size  Location     Type
  8278 ;;		None
  8279 ;; Return value:  Size  Location     Type
  8280 ;;                  1    wreg      void 
  8281 ;; Registers used:
  8282 ;;		wreg, status,2, status,0, cstack
  8283 ;; Tracked objects:
  8284 ;;		On entry : 0/0
  8285 ;;		On exit  : 0/0
  8286 ;;		Unchanged: 0/0
  8287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8292 ;;Total ram usage:        0 bytes
  8293 ;; Hardware stack levels used: 1
  8294 ;; Hardware stack levels required when called: 11
  8295 ;; This function calls:
  8296 ;;		_I2C_2_Master_Start
  8297 ;;		_I2C_2_Master_Stop
  8298 ;;		_I2C_2_Master_Write
  8299 ;;		_init_colorclick_interrupts
  8300 ;; This function is called by:
  8301 ;;		_Interrupts_init
  8302 ;; This function uses a non-reentrant model
  8303 ;;
  8304                           
  8305                           	psect	text46
  8306   002A54                     __ptext46:
  8307                           	callstack 0
  8308   002A54                     _interrupts_clear_colorclick:
  8309                           	callstack 18
  8310   002A54                     
  8311                           ;interrupts.c: 59:     I2C_2_Master_Start();
  8312   002A54  EC5A  F015         	call	_I2C_2_Master_Start	;wreg free
  8313                           
  8314                           ;interrupts.c: 60:     I2C_2_Master_Write(0x52 | 0x00);
  8315   002A58  0E52               	movlw	82
  8316   002A5A  EC44  F015         	call	_I2C_2_Master_Write
  8317                           
  8318                           ;interrupts.c: 61:     I2C_2_Master_Write(0b11100110);
  8319   002A5E  0EE6               	movlw	230
  8320   002A60  EC44  F015         	call	_I2C_2_Master_Write
  8321                           
  8322                           ;interrupts.c: 62:     I2C_2_Master_Stop();
  8323   002A64  EC55  F015         	call	_I2C_2_Master_Stop	;wreg free
  8324                           
  8325                           ;interrupts.c: 64:     init_colorclick_interrupts();
  8326   002A68  EC78  F013         	call	_init_colorclick_interrupts	;wreg free
  8327   002A6C  0012               	return		;funcret
  8328   002A6E                     __end_of_interrupts_clear_colorclick:
  8329                           	callstack 0
  8330                           
  8331 ;; *************** function _init_colorclick_interrupts *****************
  8332 ;; Defined at:
  8333 ;;		line 43 in file "interrupts.c"
  8334 ;; Parameters:    Size  Location     Type
  8335 ;;		None
  8336 ;; Auto vars:     Size  Location     Type
  8337 ;;		None
  8338 ;; Return value:  Size  Location     Type
  8339 ;;                  1    wreg      void 
  8340 ;; Registers used:
  8341 ;;		wreg, status,2, status,0, cstack
  8342 ;; Tracked objects:
  8343 ;;		On entry : 0/0
  8344 ;;		On exit  : 0/0
  8345 ;;		Unchanged: 0/0
  8346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8349 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8350 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8351 ;;Total ram usage:        1 bytes
  8352 ;; Hardware stack levels used: 1
  8353 ;; Hardware stack levels required when called: 10
  8354 ;; This function calls:
  8355 ;;		_color_writetoaddr
  8356 ;; This function is called by:
  8357 ;;		_interrupts_clear_colorclick
  8358 ;; This function uses a non-reentrant model
  8359 ;;
  8360                           
  8361                           	psect	text47
  8362   0026F0                     __ptext47:
  8363                           	callstack 0
  8364   0026F0                     _init_colorclick_interrupts:
  8365                           	callstack 18
  8366   0026F0                     
  8367                           ;interrupts.c: 45:     color_writetoaddr(0x00,0b10011);
  8368   0026F0  0E13               	movlw	19
  8369   0026F2  6E0B               	movwf	color_writetoaddr@value^0,c
  8370   0026F4  0E00               	movlw	0
  8371   0026F6  ECDE  F014         	call	_color_writetoaddr
  8372   0026FA                     
  8373                           ;interrupts.c: 46:     _delay((unsigned long)((3)*(64000000/4000.0)));
  8374   0026FA  0E3F               	movlw	63
  8375   0026FC  6E0D               	movwf	??_init_colorclick_interrupts^0,c
  8376   0026FE  0E55               	movlw	85
  8377   002700                     u4747:
  8378   002700  2EE8               	decfsz	wreg,f,c
  8379   002702  D7FE               	bra	u4747
  8380   002704  2E0D               	decfsz	??_init_colorclick_interrupts^0,f,c
  8381   002706  D7FC               	bra	u4747
  8382   002708  F000               	nop	
  8383   00270A                     
  8384                           ;interrupts.c: 48:     color_writetoaddr(0x0C,0b0100);
  8385   00270A  0E04               	movlw	4
  8386   00270C  6E0B               	movwf	color_writetoaddr@value^0,c
  8387   00270E  0E0C               	movlw	12
  8388   002710  ECDE  F014         	call	_color_writetoaddr
  8389   002714                     
  8390                           ;interrupts.c: 49:     color_writetoaddr(0x04,(int_threshold_low & 0xFF));
  8391   002714  C04F  F00B         	movff	_int_threshold_low,color_writetoaddr@value
  8392   002718  0E04               	movlw	4
  8393   00271A  ECDE  F014         	call	_color_writetoaddr
  8394   00271E                     
  8395                           ;interrupts.c: 50:     color_writetoaddr(0x05,(int_threshold_low >> 8));
  8396   00271E  5050               	movf	(_int_threshold_low+1)^0,w,c
  8397   002720  6E0B               	movwf	color_writetoaddr@value^0,c
  8398   002722  0E05               	movlw	5
  8399   002724  ECDE  F014         	call	_color_writetoaddr
  8400   002728                     
  8401                           ;interrupts.c: 51:     color_writetoaddr(0x06,(int_threshold_high & 0xFF));
  8402   002728  C0D7  F00B         	movff	_int_threshold_high,color_writetoaddr@value
  8403   00272C  0E06               	movlw	6
  8404   00272E  ECDE  F014         	call	_color_writetoaddr
  8405   002732                     
  8406                           ;interrupts.c: 52:     color_writetoaddr(0x07,(int_threshold_high >> 8));
  8407   002732  0100               	movlb	0	; () banked
  8408   002734  51D8               	movf	(_int_threshold_high+1)& (0+255),w,b
  8409   002736  6E0B               	movwf	color_writetoaddr@value^0,c
  8410   002738  0E07               	movlw	7
  8411   00273A  ECDE  F014         	call	_color_writetoaddr
  8412   00273E  0012               	return		;funcret
  8413   002740                     __end_of_init_colorclick_interrupts:
  8414                           	callstack 0
  8415                           
  8416 ;; *************** function _color_writetoaddr *****************
  8417 ;; Defined at:
  8418 ;;		line 22 in file "color.c"
  8419 ;; Parameters:    Size  Location     Type
  8420 ;;  address         1    wreg     unsigned char 
  8421 ;;  value           1   10[COMRAM] unsigned char 
  8422 ;; Auto vars:     Size  Location     Type
  8423 ;;  address         1   11[COMRAM] unsigned char 
  8424 ;; Return value:  Size  Location     Type
  8425 ;;                  1    wreg      void 
  8426 ;; Registers used:
  8427 ;;		wreg, status,2, status,0, cstack
  8428 ;; Tracked objects:
  8429 ;;		On entry : 0/0
  8430 ;;		On exit  : 0/0
  8431 ;;		Unchanged: 0/0
  8432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8433 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8434 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8436 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8437 ;;Total ram usage:        2 bytes
  8438 ;; Hardware stack levels used: 1
  8439 ;; Hardware stack levels required when called: 9
  8440 ;; This function calls:
  8441 ;;		_I2C_2_Master_Start
  8442 ;;		_I2C_2_Master_Stop
  8443 ;;		_I2C_2_Master_Write
  8444 ;; This function is called by:
  8445 ;;		_color_click_init
  8446 ;;		_init_colorclick_interrupts
  8447 ;; This function uses a non-reentrant model
  8448 ;;
  8449                           
  8450                           	psect	text48
  8451   0029BC                     __ptext48:
  8452                           	callstack 0
  8453   0029BC                     _color_writetoaddr:
  8454                           	callstack 20
  8455                           
  8456                           ;incstack = 0
  8457                           ;color_writetoaddr@address stored from wreg
  8458   0029BC  6E0C               	movwf	color_writetoaddr@address^0,c
  8459   0029BE                     
  8460                           ;color.c: 23:     I2C_2_Master_Start();
  8461   0029BE  EC5A  F015         	call	_I2C_2_Master_Start	;wreg free
  8462                           
  8463                           ;color.c: 24:     I2C_2_Master_Write(0x52 | 0x00);
  8464   0029C2  0E52               	movlw	82
  8465   0029C4  EC44  F015         	call	_I2C_2_Master_Write
  8466                           
  8467                           ;color.c: 25:     I2C_2_Master_Write(0x80 | address);
  8468   0029C8  500C               	movf	color_writetoaddr@address^0,w,c
  8469   0029CA  0980               	iorlw	128
  8470   0029CC  EC44  F015         	call	_I2C_2_Master_Write
  8471                           
  8472                           ;color.c: 26:     I2C_2_Master_Write(value);
  8473   0029D0  500B               	movf	color_writetoaddr@value^0,w,c
  8474   0029D2  EC44  F015         	call	_I2C_2_Master_Write
  8475                           
  8476                           ;color.c: 27:     I2C_2_Master_Stop();
  8477   0029D6  EC55  F015         	call	_I2C_2_Master_Stop	;wreg free
  8478   0029DA  0012               	return		;funcret
  8479   0029DC                     __end_of_color_writetoaddr:
  8480                           	callstack 0
  8481                           
  8482 ;; *************** function _I2C_2_Master_Write *****************
  8483 ;; Defined at:
  8484 ;;		line 45 in file "i2c.c"
  8485 ;; Parameters:    Size  Location     Type
  8486 ;;  data_byte       1    wreg     unsigned char 
  8487 ;; Auto vars:     Size  Location     Type
  8488 ;;  data_byte       1    9[COMRAM] unsigned char 
  8489 ;; Return value:  Size  Location     Type
  8490 ;;                  1    wreg      void 
  8491 ;; Registers used:
  8492 ;;		wreg, status,2, status,0, cstack
  8493 ;; Tracked objects:
  8494 ;;		On entry : 0/0
  8495 ;;		On exit  : 0/0
  8496 ;;		Unchanged: 0/0
  8497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8499 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8501 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8502 ;;Total ram usage:        1 bytes
  8503 ;; Hardware stack levels used: 1
  8504 ;; Hardware stack levels required when called: 8
  8505 ;; This function calls:
  8506 ;;		_I2C_2_Master_Idle
  8507 ;; This function is called by:
  8508 ;;		_color_writetoaddr
  8509 ;;		_color_read_Red
  8510 ;;		_color_read_Green
  8511 ;;		_color_read_Blue
  8512 ;;		_color_read_Clear
  8513 ;;		_interrupts_clear_colorclick
  8514 ;; This function uses a non-reentrant model
  8515 ;;
  8516                           
  8517                           	psect	text49
  8518   002A88                     __ptext49:
  8519                           	callstack 0
  8520   002A88                     _I2C_2_Master_Write:
  8521                           	callstack 20
  8522                           
  8523                           ;incstack = 0
  8524                           ;I2C_2_Master_Write@data_byte stored from wreg
  8525   002A88  6E0A               	movwf	I2C_2_Master_Write@data_byte^0,c
  8526   002A8A                     
  8527                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  8528   002A8A  EC70  F014         	call	_I2C_2_Master_Idle	;wreg free
  8529   002A8E                     
  8530                           ;i2c.c: 48:   SSP2BUF = data_byte;
  8531   002A8E  C00A  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  8532   002A92  0012               	return		;funcret
  8533   002A94                     __end_of_I2C_2_Master_Write:
  8534                           	callstack 0
  8535                           
  8536 ;; *************** function _I2C_2_Master_Stop *****************
  8537 ;; Defined at:
  8538 ;;		line 39 in file "i2c.c"
  8539 ;; Parameters:    Size  Location     Type
  8540 ;;		None
  8541 ;; Auto vars:     Size  Location     Type
  8542 ;;		None
  8543 ;; Return value:  Size  Location     Type
  8544 ;;                  1    wreg      void 
  8545 ;; Registers used:
  8546 ;;		wreg, status,2, status,0, cstack
  8547 ;; Tracked objects:
  8548 ;;		On entry : 0/0
  8549 ;;		On exit  : 0/0
  8550 ;;		Unchanged: 0/0
  8551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8556 ;;Total ram usage:        0 bytes
  8557 ;; Hardware stack levels used: 1
  8558 ;; Hardware stack levels required when called: 8
  8559 ;; This function calls:
  8560 ;;		_I2C_2_Master_Idle
  8561 ;; This function is called by:
  8562 ;;		_color_writetoaddr
  8563 ;;		_color_read_Red
  8564 ;;		_color_read_Green
  8565 ;;		_color_read_Blue
  8566 ;;		_color_read_Clear
  8567 ;;		_interrupts_clear_colorclick
  8568 ;; This function uses a non-reentrant model
  8569 ;;
  8570                           
  8571                           	psect	text50
  8572   002AAA                     __ptext50:
  8573                           	callstack 0
  8574   002AAA                     _I2C_2_Master_Stop:
  8575                           	callstack 20
  8576   002AAA                     
  8577                           ;i2c.c: 41:   I2C_2_Master_Idle();
  8578   002AAA  EC70  F014         	call	_I2C_2_Master_Idle	;wreg free
  8579   002AAE                     
  8580                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  8581   002AAE  010E               	movlb	14	; () banked
  8582   002AB0  85DA               	bsf	218,2,b	;volatile
  8583   002AB2                     
  8584                           ; BSR set to: 14
  8585   002AB2  0012               	return		;funcret
  8586   002AB4                     __end_of_I2C_2_Master_Stop:
  8587                           	callstack 0
  8588                           
  8589 ;; *************** function _I2C_2_Master_Start *****************
  8590 ;; Defined at:
  8591 ;;		line 27 in file "i2c.c"
  8592 ;; Parameters:    Size  Location     Type
  8593 ;;		None
  8594 ;; Auto vars:     Size  Location     Type
  8595 ;;		None
  8596 ;; Return value:  Size  Location     Type
  8597 ;;                  1    wreg      void 
  8598 ;; Registers used:
  8599 ;;		wreg, status,2, status,0, cstack
  8600 ;; Tracked objects:
  8601 ;;		On entry : 0/0
  8602 ;;		On exit  : 0/0
  8603 ;;		Unchanged: 0/0
  8604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8609 ;;Total ram usage:        0 bytes
  8610 ;; Hardware stack levels used: 1
  8611 ;; Hardware stack levels required when called: 8
  8612 ;; This function calls:
  8613 ;;		_I2C_2_Master_Idle
  8614 ;; This function is called by:
  8615 ;;		_color_writetoaddr
  8616 ;;		_color_read_Red
  8617 ;;		_color_read_Green
  8618 ;;		_color_read_Blue
  8619 ;;		_color_read_Clear
  8620 ;;		_interrupts_clear_colorclick
  8621 ;; This function uses a non-reentrant model
  8622 ;;
  8623                           
  8624                           	psect	text51
  8625   002AB4                     __ptext51:
  8626                           	callstack 0
  8627   002AB4                     _I2C_2_Master_Start:
  8628                           	callstack 20
  8629   002AB4                     
  8630                           ;i2c.c: 29:   I2C_2_Master_Idle();
  8631   002AB4  EC70  F014         	call	_I2C_2_Master_Idle	;wreg free
  8632   002AB8                     
  8633                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  8634   002AB8  010E               	movlb	14	; () banked
  8635   002ABA  81DA               	bsf	218,0,b	;volatile
  8636   002ABC                     
  8637                           ; BSR set to: 14
  8638   002ABC  0012               	return		;funcret
  8639   002ABE                     __end_of_I2C_2_Master_Start:
  8640                           	callstack 0
  8641                           
  8642 ;; *************** function _I2C_2_Master_Idle *****************
  8643 ;; Defined at:
  8644 ;;		line 22 in file "i2c.c"
  8645 ;; Parameters:    Size  Location     Type
  8646 ;;		None
  8647 ;; Auto vars:     Size  Location     Type
  8648 ;;		None
  8649 ;; Return value:  Size  Location     Type
  8650 ;;                  1    wreg      void 
  8651 ;; Registers used:
  8652 ;;		wreg, status,2, status,0
  8653 ;; Tracked objects:
  8654 ;;		On entry : 0/0
  8655 ;;		On exit  : 0/0
  8656 ;;		Unchanged: 0/0
  8657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8660 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8661 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8662 ;;Total ram usage:        1 bytes
  8663 ;; Hardware stack levels used: 1
  8664 ;; Hardware stack levels required when called: 7
  8665 ;; This function calls:
  8666 ;;		Nothing
  8667 ;; This function is called by:
  8668 ;;		_I2C_2_Master_Start
  8669 ;;		_I2C_2_Master_RepStart
  8670 ;;		_I2C_2_Master_Stop
  8671 ;;		_I2C_2_Master_Write
  8672 ;;		_I2C_2_Master_Read
  8673 ;; This function uses a non-reentrant model
  8674 ;;
  8675                           
  8676                           	psect	text52
  8677   0028E0                     __ptext52:
  8678                           	callstack 0
  8679   0028E0                     _I2C_2_Master_Idle:
  8680                           	callstack 20
  8681   0028E0                     l89:
  8682   0028E0  010E               	movlb	14	; () banked
  8683   0028E2  B5D8               	btfsc	216,2,b	;volatile
  8684   0028E4  EF76  F014         	goto	u2041
  8685   0028E8  EF78  F014         	goto	u2040
  8686   0028EC                     u2041:
  8687   0028EC  EF70  F014         	goto	l89
  8688   0028F0                     u2040:
  8689   0028F0                     
  8690                           ; BSR set to: 14
  8691   0028F0  CEDA F009          	movff	3802,??_I2C_2_Master_Idle	;volatile
  8692   0028F4  0E1F               	movlw	31
  8693   0028F6  1609               	andwf	??_I2C_2_Master_Idle^0,f,c
  8694   0028F8  A4D8               	btfss	status,2,c
  8695   0028FA  EF81  F014         	goto	u2051
  8696   0028FE  EF83  F014         	goto	u2050
  8697   002902                     u2051:
  8698   002902  EF70  F014         	goto	l89
  8699   002906                     u2050:
  8700   002906                     
  8701                           ; BSR set to: 14
  8702   002906  0012               	return		;funcret
  8703   002908                     __end_of_I2C_2_Master_Idle:
  8704                           	callstack 0
  8705                           
  8706 ;; *************** function _AppendTime *****************
  8707 ;; Defined at:
  8708 ;;		line 23 in file "Memorization.c"
  8709 ;; Parameters:    Size  Location     Type
  8710 ;;  temp            2    8[COMRAM] unsigned int 
  8711 ;;  time_index      2   10[COMRAM] PTR unsigned char 
  8712 ;;		 -> time_index(1), 
  8713 ;;  time_array      2   12[COMRAM] PTR unsigned int 
  8714 ;;		 -> time_array(80), 
  8715 ;; Auto vars:     Size  Location     Type
  8716 ;;		None
  8717 ;; Return value:  Size  Location     Type
  8718 ;;                  1    wreg      void 
  8719 ;; Registers used:
  8720 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8721 ;; Tracked objects:
  8722 ;;		On entry : 0/0
  8723 ;;		On exit  : 0/0
  8724 ;;		Unchanged: 0/0
  8725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8726 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8728 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8729 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8730 ;;Total ram usage:        9 bytes
  8731 ;; Hardware stack levels used: 1
  8732 ;; Hardware stack levels required when called: 7
  8733 ;; This function calls:
  8734 ;;		Nothing
  8735 ;; This function is called by:
  8736 ;;		_main
  8737 ;; This function uses a non-reentrant model
  8738 ;;
  8739                           
  8740                           	psect	text53
  8741   002884                     __ptext53:
  8742                           	callstack 0
  8743   002884                     _AppendTime:
  8744                           	callstack 23
  8745   002884                     
  8746                           ;Memorization.c: 25:     time_array[(*time_index)++] = temp;
  8747   002884  C00B  FFD9         	movff	AppendTime@time_index,fsr2l
  8748   002888  C00C  FFDA         	movff	AppendTime@time_index+1,fsr2h
  8749   00288C  CFDF F00F          	movff	indf2,??_AppendTime
  8750   002890  0E01               	movlw	1
  8751   002892  26DF               	addwf	indf2,f,c
  8752   002894  500F               	movf	??_AppendTime^0,w,c
  8753   002896  0D02               	mullw	2
  8754   002898  CFF3 F010          	movff	prodl,??_AppendTime+1
  8755   00289C  CFF4 F011          	movff	prodh,??_AppendTime+2
  8756   0028A0  5010               	movf	(??_AppendTime+1)^0,w,c
  8757   0028A2  240D               	addwf	AppendTime@time_array^0,w,c
  8758   0028A4  6ED9               	movwf	fsr2l,c
  8759   0028A6  5011               	movf	(??_AppendTime+2)^0,w,c
  8760   0028A8  200E               	addwfc	(AppendTime@time_array+1)^0,w,c
  8761   0028AA  6EDA               	movwf	fsr2h,c
  8762   0028AC  C009  FFDE         	movff	AppendTime@temp,postinc2
  8763   0028B0  C00A  FFDD         	movff	AppendTime@temp+1,postdec2
  8764   0028B4  0012               	return		;funcret
  8765   0028B6                     __end_of_AppendTime:
  8766                           	callstack 0
  8767                           
  8768 ;; *************** function _LowISR *****************
  8769 ;; Defined at:
  8770 ;;		line 75 in file "interrupts.c"
  8771 ;; Parameters:    Size  Location     Type
  8772 ;;		None
  8773 ;; Auto vars:     Size  Location     Type
  8774 ;;		None
  8775 ;; Return value:  Size  Location     Type
  8776 ;;                  1    wreg      void 
  8777 ;; Registers used:
  8778 ;;		wreg, status,2
  8779 ;; Tracked objects:
  8780 ;;		On entry : 0/0
  8781 ;;		On exit  : 0/0
  8782 ;;		Unchanged: 0/0
  8783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8786 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8787 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8788 ;;Total ram usage:        3 bytes
  8789 ;; Hardware stack levels used: 1
  8790 ;; Hardware stack levels required when called: 6
  8791 ;; This function calls:
  8792 ;;		Nothing
  8793 ;; This function is called by:
  8794 ;;		Interrupt level 1
  8795 ;; This function uses a non-reentrant model
  8796 ;;
  8797                           
  8798                           	psect	intcodelo
  8799   000018                     __pintcodelo:
  8800                           	callstack 0
  8801   000018                     _LowISR:
  8802                           	callstack 16
  8803                           
  8804                           ;incstack = 0
  8805   000018  8057               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  8806   00001A  CFD8 F006          	movff	status,??_LowISR
  8807   00001E  CFE8 F007          	movff	wreg,??_LowISR+1
  8808   000022  CFE0 F008          	movff	bsr,??_LowISR+2
  8809   000026                     
  8810                           ;interrupts.c: 78:     if(PIR0bits.TMR0IF){
  8811   000026  010E               	movlb	14	; () banked
  8812   000028  AB33               	btfss	51,5,b	;volatile
  8813   00002A  EF19  F000         	goto	i1u378_21
  8814   00002E  EF1B  F000         	goto	i1u378_20
  8815   000032                     i1u378_21:
  8816   000032  EF24  F000         	goto	i1l334
  8817   000036                     i1u378_20:
  8818   000036                     
  8819                           ; BSR set to: 14
  8820                           ;interrupts.c: 79:         TMR0H = 0b00001011;
  8821   000036  0E0B               	movlw	11
  8822   000038  6ED4               	movwf	212,c	;volatile
  8823                           
  8824                           ;interrupts.c: 80:         TMR0L = 0b11011011;
  8825   00003A  0EDB               	movlw	219
  8826   00003C  6ED3               	movwf	211,c	;volatile
  8827                           
  8828                           ;interrupts.c: 81:         tmr_ovf = 1;
  8829   00003E  0E01               	movlw	1
  8830   000040  0100               	movlb	0	; () banked
  8831   000042  6F75               	movwf	_tmr_ovf& (0+255),b
  8832   000044                     
  8833                           ; BSR set to: 0
  8834                           ;interrupts.c: 82:         PIR0bits.TMR0IF=0;
  8835   000044  010E               	movlb	14	; () banked
  8836   000046  9B33               	bcf	51,5,b	;volatile
  8837   000048                     i1l334:
  8838                           
  8839                           ; BSR set to: 14
  8840   000048  C008  FFE0         	movff	??_LowISR+2,bsr
  8841   00004C  C007  FFE8         	movff	??_LowISR+1,wreg
  8842   000050  C006  FFD8         	movff	??_LowISR,status
  8843   000054  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  8844   000056  0010               	retfie	
  8845   000058                     __end_of_LowISR:
  8846                           	callstack 0
  8847                           
  8848 ;; *************** function _HighISR *****************
  8849 ;; Defined at:
  8850 ;;		line 89 in file "interrupts.c"
  8851 ;; Parameters:    Size  Location     Type
  8852 ;;		None
  8853 ;; Auto vars:     Size  Location     Type
  8854 ;;		None
  8855 ;; Return value:  Size  Location     Type
  8856 ;;                  1    wreg      void 
  8857 ;; Registers used:
  8858 ;;		wreg, status,2, status,0, cstack
  8859 ;; Tracked objects:
  8860 ;;		On entry : 0/0
  8861 ;;		On exit  : 0/0
  8862 ;;		Unchanged: 0/0
  8863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8868 ;;Total ram usage:        0 bytes
  8869 ;; Hardware stack levels used: 1
  8870 ;; Hardware stack levels required when called: 5
  8871 ;; This function calls:
  8872 ;;		i2_interrupts_clear_colorclick
  8873 ;; This function is called by:
  8874 ;;		Interrupt level 2
  8875 ;; This function uses a non-reentrant model
  8876 ;;
  8877                           
  8878                           	psect	intcode
  8879   000008                     __pintcode:
  8880                           	callstack 0
  8881   000008                     _HighISR:
  8882                           	callstack 16
  8883                           
  8884                           ; BSR set to: 14
  8885                           ;incstack = 0
  8886   000008  8257               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8887   00000A  EFEE  F014         	goto	int_func
  8888                           
  8889                           	psect	intcode_body
  8890   0029DC                     __pintcode_body:
  8891                           	callstack 16
  8892   0029DC                     int_func:
  8893                           	callstack 16
  8894   0029DC                     
  8895                           ;interrupts.c: 116:     if(PIR0bits.INT1IF){
  8896   0029DC  010E               	movlb	14	; () banked
  8897   0029DE  A333               	btfss	51,1,b	;volatile
  8898   0029E0  EFF4  F014         	goto	i2u379_41
  8899   0029E4  EFF6  F014         	goto	i2u379_40
  8900   0029E8                     i2u379_41:
  8901   0029E8  EFFC  F014         	goto	i2l342
  8902   0029EC                     i2u379_40:
  8903   0029EC                     
  8904                           ; BSR set to: 14
  8905                           ;interrupts.c: 117:         color_flag = 1;
  8906   0029EC  0E01               	movlw	1
  8907   0029EE  6E55               	movwf	_color_flag^0,c
  8908   0029F0                     
  8909                           ; BSR set to: 14
  8910                           ;interrupts.c: 119:         interrupts_clear_colorclick();
  8911   0029F0  EC37  F015         	call	i2_interrupts_clear_colorclick	;wreg free
  8912   0029F4                     
  8913                           ;interrupts.c: 120:         PIR0bits.INT1IF = 0;
  8914   0029F4  010E               	movlb	14	; () banked
  8915   0029F6  9333               	bcf	51,1,b	;volatile
  8916   0029F8                     i2l342:
  8917                           
  8918                           ; BSR set to: 14
  8919   0029F8  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8920   0029FA  0011               	retfie		f
  8921   0029FC                     __end_of_HighISR:
  8922                           	callstack 0
  8923                           
  8924 ;; *************** function i2_interrupts_clear_colorclick *****************
  8925 ;; Defined at:
  8926 ;;		line 57 in file "interrupts.c"
  8927 ;; Parameters:    Size  Location     Type
  8928 ;;		None
  8929 ;; Auto vars:     Size  Location     Type
  8930 ;;		None
  8931 ;; Return value:  Size  Location     Type
  8932 ;;                  1    wreg      void 
  8933 ;; Registers used:
  8934 ;;		wreg, status,2, status,0, cstack
  8935 ;; Tracked objects:
  8936 ;;		On entry : 0/0
  8937 ;;		On exit  : 0/0
  8938 ;;		Unchanged: 0/0
  8939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8944 ;;Total ram usage:        0 bytes
  8945 ;; Hardware stack levels used: 1
  8946 ;; Hardware stack levels required when called: 4
  8947 ;; This function calls:
  8948 ;;		i2_I2C_2_Master_Start
  8949 ;;		i2_I2C_2_Master_Stop
  8950 ;;		i2_I2C_2_Master_Write
  8951 ;;		i2_init_colorclick_interrupts
  8952 ;; This function is called by:
  8953 ;;		_HighISR
  8954 ;; This function uses a non-reentrant model
  8955 ;;
  8956                           
  8957                           	psect	text56
  8958   002A6E                     __ptext56:
  8959                           	callstack 0
  8960   002A6E                     i2_interrupts_clear_colorclick:
  8961                           	callstack 16
  8962   002A6E                     
  8963                           ;interrupts.c: 59:     I2C_2_Master_Start();
  8964   002A6E  EC64  F015         	call	i2_I2C_2_Master_Start	;wreg free
  8965                           
  8966                           ;interrupts.c: 60:     I2C_2_Master_Write(0x52 | 0x00);
  8967   002A72  0E52               	movlw	82
  8968   002A74  EC4A  F015         	call	i2_I2C_2_Master_Write
  8969                           
  8970                           ;interrupts.c: 61:     I2C_2_Master_Write(0b11100110);
  8971   002A78  0EE6               	movlw	230
  8972   002A7A  EC4A  F015         	call	i2_I2C_2_Master_Write
  8973                           
  8974                           ;interrupts.c: 62:     I2C_2_Master_Stop();
  8975   002A7E  EC5F  F015         	call	i2_I2C_2_Master_Stop	;wreg free
  8976                           
  8977                           ;interrupts.c: 64:     init_colorclick_interrupts();
  8978   002A82  ECA0  F013         	call	i2_init_colorclick_interrupts	;wreg free
  8979   002A86  0012               	return		;funcret
  8980   002A88                     __end_ofi2_interrupts_clear_colorclick:
  8981                           	callstack 0
  8982                           
  8983 ;; *************** function i2_init_colorclick_interrupts *****************
  8984 ;; Defined at:
  8985 ;;		line 43 in file "interrupts.c"
  8986 ;; Parameters:    Size  Location     Type
  8987 ;;		None
  8988 ;; Auto vars:     Size  Location     Type
  8989 ;;		None
  8990 ;; Return value:  Size  Location     Type
  8991 ;;                  1    wreg      void 
  8992 ;; Registers used:
  8993 ;;		wreg, status,2, status,0, cstack
  8994 ;; Tracked objects:
  8995 ;;		On entry : 0/0
  8996 ;;		On exit  : 0/0
  8997 ;;		Unchanged: 0/0
  8998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9001 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9002 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9003 ;;Total ram usage:        1 bytes
  9004 ;; Hardware stack levels used: 1
  9005 ;; Hardware stack levels required when called: 3
  9006 ;; This function calls:
  9007 ;;		i2_color_writetoaddr
  9008 ;; This function is called by:
  9009 ;;		i2_interrupts_clear_colorclick
  9010 ;; This function uses a non-reentrant model
  9011 ;;
  9012                           
  9013                           	psect	text57
  9014   002740                     __ptext57:
  9015                           	callstack 0
  9016   002740                     i2_init_colorclick_interrupts:
  9017                           	callstack 16
  9018   002740                     
  9019                           ;interrupts.c: 45:     color_writetoaddr(0x00,0b10011);
  9020   002740  0E13               	movlw	19
  9021   002742  6E03               	movwf	i2color_writetoaddr@value^0,c
  9022   002744  0E00               	movlw	0
  9023   002746  ECFE  F014         	call	i2_color_writetoaddr
  9024   00274A                     
  9025                           ;interrupts.c: 46:     _delay((unsigned long)((3)*(64000000/4000.0)));
  9026   00274A  0E3F               	movlw	63
  9027   00274C  6E05               	movwf	??i2_init_colorclick_interrupts^0,c
  9028   00274E  0E55               	movlw	85
  9029   002750                     i2u475_47:
  9030   002750  2EE8               	decfsz	wreg,f,c
  9031   002752  D7FE               	bra	i2u475_47
  9032   002754  2E05               	decfsz	??i2_init_colorclick_interrupts^0,f,c
  9033   002756  D7FC               	bra	i2u475_47
  9034   002758  F000               	nop	
  9035   00275A                     
  9036                           ;interrupts.c: 48:     color_writetoaddr(0x0C,0b0100);
  9037   00275A  0E04               	movlw	4
  9038   00275C  6E03               	movwf	i2color_writetoaddr@value^0,c
  9039   00275E  0E0C               	movlw	12
  9040   002760  ECFE  F014         	call	i2_color_writetoaddr
  9041   002764                     
  9042                           ;interrupts.c: 49:     color_writetoaddr(0x04,(int_threshold_low & 0xFF));
  9043   002764  C04F  F003         	movff	_int_threshold_low,i2color_writetoaddr@value
  9044   002768  0E04               	movlw	4
  9045   00276A  ECFE  F014         	call	i2_color_writetoaddr
  9046   00276E                     
  9047                           ;interrupts.c: 50:     color_writetoaddr(0x05,(int_threshold_low >> 8));
  9048   00276E  5050               	movf	(_int_threshold_low+1)^0,w,c
  9049   002770  6E03               	movwf	i2color_writetoaddr@value^0,c
  9050   002772  0E05               	movlw	5
  9051   002774  ECFE  F014         	call	i2_color_writetoaddr
  9052   002778                     
  9053                           ;interrupts.c: 51:     color_writetoaddr(0x06,(int_threshold_high & 0xFF));
  9054   002778  C0D7  F003         	movff	_int_threshold_high,i2color_writetoaddr@value
  9055   00277C  0E06               	movlw	6
  9056   00277E  ECFE  F014         	call	i2_color_writetoaddr
  9057   002782                     
  9058                           ;interrupts.c: 52:     color_writetoaddr(0x07,(int_threshold_high >> 8));
  9059   002782  0100               	movlb	0	; () banked
  9060   002784  51D8               	movf	(_int_threshold_high+1)& (0+255),w,b
  9061   002786  6E03               	movwf	i2color_writetoaddr@value^0,c
  9062   002788  0E07               	movlw	7
  9063   00278A  ECFE  F014         	call	i2_color_writetoaddr
  9064   00278E  0012               	return		;funcret
  9065   002790                     __end_ofi2_init_colorclick_interrupts:
  9066                           	callstack 0
  9067                           
  9068 ;; *************** function i2_color_writetoaddr *****************
  9069 ;; Defined at:
  9070 ;;		line 22 in file "color.c"
  9071 ;; Parameters:    Size  Location     Type
  9072 ;;  address         1    wreg     unsigned char 
  9073 ;;  value           1    2[COMRAM] unsigned char 
  9074 ;; Auto vars:     Size  Location     Type
  9075 ;;  address         1    3[COMRAM] unsigned char 
  9076 ;; Return value:  Size  Location     Type
  9077 ;;                  1    wreg      void 
  9078 ;; Registers used:
  9079 ;;		wreg, status,2, status,0, cstack
  9080 ;; Tracked objects:
  9081 ;;		On entry : 0/0
  9082 ;;		On exit  : 0/0
  9083 ;;		Unchanged: 0/0
  9084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9085 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9086 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9088 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9089 ;;Total ram usage:        2 bytes
  9090 ;; Hardware stack levels used: 1
  9091 ;; Hardware stack levels required when called: 2
  9092 ;; This function calls:
  9093 ;;		i2_I2C_2_Master_Start
  9094 ;;		i2_I2C_2_Master_Stop
  9095 ;;		i2_I2C_2_Master_Write
  9096 ;; This function is called by:
  9097 ;;		i2_init_colorclick_interrupts
  9098 ;; This function uses a non-reentrant model
  9099 ;;
  9100                           
  9101                           	psect	text58
  9102   0029FC                     __ptext58:
  9103                           	callstack 0
  9104   0029FC                     i2_color_writetoaddr:
  9105                           	callstack 16
  9106                           
  9107                           ;incstack = 0
  9108                           ;i2color_writetoaddr@address stored from wreg
  9109   0029FC  6E04               	movwf	i2color_writetoaddr@address^0,c
  9110   0029FE                     
  9111                           ;color.c: 23:     I2C_2_Master_Start();
  9112   0029FE  EC64  F015         	call	i2_I2C_2_Master_Start	;wreg free
  9113                           
  9114                           ;color.c: 24:     I2C_2_Master_Write(0x52 | 0x00);
  9115   002A02  0E52               	movlw	82
  9116   002A04  EC4A  F015         	call	i2_I2C_2_Master_Write
  9117                           
  9118                           ;color.c: 25:     I2C_2_Master_Write(0x80 | address);
  9119   002A08  5004               	movf	i2color_writetoaddr@address^0,w,c
  9120   002A0A  0980               	iorlw	128
  9121   002A0C  EC4A  F015         	call	i2_I2C_2_Master_Write
  9122                           
  9123                           ;color.c: 26:     I2C_2_Master_Write(value);
  9124   002A10  5003               	movf	i2color_writetoaddr@value^0,w,c
  9125   002A12  EC4A  F015         	call	i2_I2C_2_Master_Write
  9126                           
  9127                           ;color.c: 27:     I2C_2_Master_Stop();
  9128   002A16  EC5F  F015         	call	i2_I2C_2_Master_Stop	;wreg free
  9129   002A1A  0012               	return		;funcret
  9130   002A1C                     __end_ofi2_color_writetoaddr:
  9131                           	callstack 0
  9132                           
  9133 ;; *************** function i2_I2C_2_Master_Write *****************
  9134 ;; Defined at:
  9135 ;;		line 45 in file "i2c.c"
  9136 ;; Parameters:    Size  Location     Type
  9137 ;;  data_byte       1    wreg     unsigned char 
  9138 ;; Auto vars:     Size  Location     Type
  9139 ;;  data_byte       1    1[COMRAM] unsigned char 
  9140 ;; Return value:  Size  Location     Type
  9141 ;;                  1    wreg      void 
  9142 ;; Registers used:
  9143 ;;		wreg, status,2, status,0, cstack
  9144 ;; Tracked objects:
  9145 ;;		On entry : 0/0
  9146 ;;		On exit  : 0/0
  9147 ;;		Unchanged: 0/0
  9148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9150 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9152 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9153 ;;Total ram usage:        1 bytes
  9154 ;; Hardware stack levels used: 1
  9155 ;; Hardware stack levels required when called: 1
  9156 ;; This function calls:
  9157 ;;		i2_I2C_2_Master_Idle
  9158 ;; This function is called by:
  9159 ;;		i2_color_writetoaddr
  9160 ;;		i2_interrupts_clear_colorclick
  9161 ;; This function uses a non-reentrant model
  9162 ;;
  9163                           
  9164                           	psect	text59
  9165   002A94                     __ptext59:
  9166                           	callstack 0
  9167   002A94                     i2_I2C_2_Master_Write:
  9168                           	callstack 16
  9169                           
  9170                           ;incstack = 0
  9171                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  9172   002A94  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  9173   002A96                     
  9174                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  9175   002A96  EC84  F014         	call	i2_I2C_2_Master_Idle	;wreg free
  9176   002A9A                     
  9177                           ;i2c.c: 48:   SSP2BUF = data_byte;
  9178   002A9A  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  9179   002A9E  0012               	return		;funcret
  9180   002AA0                     __end_ofi2_I2C_2_Master_Write:
  9181                           	callstack 0
  9182                           
  9183 ;; *************** function i2_I2C_2_Master_Stop *****************
  9184 ;; Defined at:
  9185 ;;		line 39 in file "i2c.c"
  9186 ;; Parameters:    Size  Location     Type
  9187 ;;		None
  9188 ;; Auto vars:     Size  Location     Type
  9189 ;;		None
  9190 ;; Return value:  Size  Location     Type
  9191 ;;                  1    wreg      void 
  9192 ;; Registers used:
  9193 ;;		wreg, status,2, status,0, cstack
  9194 ;; Tracked objects:
  9195 ;;		On entry : 0/0
  9196 ;;		On exit  : 0/0
  9197 ;;		Unchanged: 0/0
  9198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9203 ;;Total ram usage:        0 bytes
  9204 ;; Hardware stack levels used: 1
  9205 ;; Hardware stack levels required when called: 1
  9206 ;; This function calls:
  9207 ;;		i2_I2C_2_Master_Idle
  9208 ;; This function is called by:
  9209 ;;		i2_color_writetoaddr
  9210 ;;		i2_interrupts_clear_colorclick
  9211 ;; This function uses a non-reentrant model
  9212 ;;
  9213                           
  9214                           	psect	text60
  9215   002ABE                     __ptext60:
  9216                           	callstack 0
  9217   002ABE                     i2_I2C_2_Master_Stop:
  9218                           	callstack 16
  9219   002ABE                     
  9220                           ;i2c.c: 41:   I2C_2_Master_Idle();
  9221   002ABE  EC84  F014         	call	i2_I2C_2_Master_Idle	;wreg free
  9222   002AC2                     
  9223                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  9224   002AC2  010E               	movlb	14	; () banked
  9225   002AC4  85DA               	bsf	218,2,b	;volatile
  9226   002AC6                     
  9227                           ; BSR set to: 14
  9228   002AC6  0012               	return		;funcret
  9229   002AC8                     __end_ofi2_I2C_2_Master_Stop:
  9230                           	callstack 0
  9231                           
  9232 ;; *************** function i2_I2C_2_Master_Start *****************
  9233 ;; Defined at:
  9234 ;;		line 27 in file "i2c.c"
  9235 ;; Parameters:    Size  Location     Type
  9236 ;;		None
  9237 ;; Auto vars:     Size  Location     Type
  9238 ;;		None
  9239 ;; Return value:  Size  Location     Type
  9240 ;;                  1    wreg      void 
  9241 ;; Registers used:
  9242 ;;		wreg, status,2, status,0, cstack
  9243 ;; Tracked objects:
  9244 ;;		On entry : 0/0
  9245 ;;		On exit  : 0/0
  9246 ;;		Unchanged: 0/0
  9247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9252 ;;Total ram usage:        0 bytes
  9253 ;; Hardware stack levels used: 1
  9254 ;; Hardware stack levels required when called: 1
  9255 ;; This function calls:
  9256 ;;		i2_I2C_2_Master_Idle
  9257 ;; This function is called by:
  9258 ;;		i2_color_writetoaddr
  9259 ;;		i2_interrupts_clear_colorclick
  9260 ;; This function uses a non-reentrant model
  9261 ;;
  9262                           
  9263                           	psect	text61
  9264   002AC8                     __ptext61:
  9265                           	callstack 0
  9266   002AC8                     i2_I2C_2_Master_Start:
  9267                           	callstack 16
  9268   002AC8                     
  9269                           ;i2c.c: 29:   I2C_2_Master_Idle();
  9270   002AC8  EC84  F014         	call	i2_I2C_2_Master_Idle	;wreg free
  9271   002ACC                     
  9272                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  9273   002ACC  010E               	movlb	14	; () banked
  9274   002ACE  81DA               	bsf	218,0,b	;volatile
  9275   002AD0                     
  9276                           ; BSR set to: 14
  9277   002AD0  0012               	return		;funcret
  9278   002AD2                     __end_ofi2_I2C_2_Master_Start:
  9279                           	callstack 0
  9280                           
  9281 ;; *************** function i2_I2C_2_Master_Idle *****************
  9282 ;; Defined at:
  9283 ;;		line 22 in file "i2c.c"
  9284 ;; Parameters:    Size  Location     Type
  9285 ;;		None
  9286 ;; Auto vars:     Size  Location     Type
  9287 ;;		None
  9288 ;; Return value:  Size  Location     Type
  9289 ;;                  1    wreg      void 
  9290 ;; Registers used:
  9291 ;;		wreg, status,2, status,0
  9292 ;; Tracked objects:
  9293 ;;		On entry : 0/0
  9294 ;;		On exit  : 0/0
  9295 ;;		Unchanged: 0/0
  9296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9299 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9300 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9301 ;;Total ram usage:        1 bytes
  9302 ;; Hardware stack levels used: 1
  9303 ;; This function calls:
  9304 ;;		Nothing
  9305 ;; This function is called by:
  9306 ;;		i2_I2C_2_Master_Start
  9307 ;;		i2_I2C_2_Master_Stop
  9308 ;;		i2_I2C_2_Master_Write
  9309 ;; This function uses a non-reentrant model
  9310 ;;
  9311                           
  9312                           	psect	text62
  9313   002908                     __ptext62:
  9314                           	callstack 0
  9315   002908                     i2_I2C_2_Master_Idle:
  9316                           	callstack 16
  9317   002908                     i2l89:
  9318   002908  010E               	movlb	14	; () banked
  9319   00290A  B5D8               	btfsc	216,2,b	;volatile
  9320   00290C  EF8A  F014         	goto	i2u222_41
  9321   002910  EF8C  F014         	goto	i2u222_40
  9322   002914                     i2u222_41:
  9323   002914  EF84  F014         	goto	i2l89
  9324   002918                     i2u222_40:
  9325   002918                     
  9326                           ; BSR set to: 14
  9327   002918  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  9328   00291C  0E1F               	movlw	31
  9329   00291E  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  9330   002920  A4D8               	btfss	status,2,c
  9331   002922  EF95  F014         	goto	i2u223_41
  9332   002926  EF97  F014         	goto	i2u223_40
  9333   00292A                     i2u223_41:
  9334   00292A  EF84  F014         	goto	i2l89
  9335   00292E                     i2u223_40:
  9336   00292E                     
  9337                           ; BSR set to: 14
  9338   00292E  0012               	return		;funcret
  9339   002930                     __end_ofi2_I2C_2_Master_Idle:
  9340                           	callstack 0
  9341   000000                     
  9342                           	psect	rparam
  9343   000000                     
  9344                           	psect	temp
  9345   000057                     btemp:
  9346                           	callstack 0
  9347   000057                     	ds	1
  9348   000000                     int$flags	set	btemp
  9349   000000                     wtemp8	set	btemp+1
  9350   000000                     ttemp5	set	btemp+1
  9351   000000                     ttemp6	set	btemp+4
  9352   000000                     ttemp7	set	btemp+8
  9353                           
  9354                           	psect	idloc
  9355                           
  9356                           ;Config register IDLOC0 @ 0x200000
  9357                           ;	unspecified, using default values
  9358   200000                     	org	2097152
  9359   200000  0FFF               	dw	4095
  9360                           
  9361                           ;Config register IDLOC1 @ 0x200002
  9362                           ;	unspecified, using default values
  9363   200002                     	org	2097154
  9364   200002  0FFF               	dw	4095
  9365                           
  9366                           ;Config register IDLOC2 @ 0x200004
  9367                           ;	unspecified, using default values
  9368   200004                     	org	2097156
  9369   200004  0FFF               	dw	4095
  9370                           
  9371                           ;Config register IDLOC3 @ 0x200006
  9372                           ;	unspecified, using default values
  9373   200006                     	org	2097158
  9374   200006  0FFF               	dw	4095
  9375                           
  9376                           ;Config register IDLOC4 @ 0x200008
  9377                           ;	unspecified, using default values
  9378   200008                     	org	2097160
  9379   200008  0FFF               	dw	4095
  9380                           
  9381                           ;Config register IDLOC5 @ 0x20000A
  9382                           ;	unspecified, using default values
  9383   20000A                     	org	2097162
  9384   20000A  0FFF               	dw	4095
  9385                           
  9386                           ;Config register IDLOC6 @ 0x20000C
  9387                           ;	unspecified, using default values
  9388   20000C                     	org	2097164
  9389   20000C  0FFF               	dw	4095
  9390                           
  9391                           ;Config register IDLOC7 @ 0x20000E
  9392                           ;	unspecified, using default values
  9393   20000E                     	org	2097166
  9394   20000E  0FFF               	dw	4095
  9395                           
  9396                           	psect	config
  9397                           
  9398                           ;Config register CONFIG1L @ 0x300000
  9399                           ;	External Oscillator mode Selection bits
  9400                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  9401                           ;	Power-up default value for COSC bits
  9402                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  9403   300000                     	org	3145728
  9404   300000  AA                 	db	170
  9405                           
  9406                           ;Config register CONFIG1H @ 0x300001
  9407                           ;	unspecified, using default values
  9408                           ;	Clock Out Enable bit
  9409                           ;	CLKOUTEN = 0x1, unprogrammed default
  9410                           ;	Clock Switch Enable bit
  9411                           ;	CSWEN = 0x1, unprogrammed default
  9412                           ;	Fail-Safe Clock Monitor Enable bit
  9413                           ;	FCMEN = 0x1, unprogrammed default
  9414   300001                     	org	3145729
  9415   300001  FF                 	db	255
  9416                           
  9417                           ;Config register CONFIG2L @ 0x300002
  9418                           ;	unspecified, using default values
  9419                           ;	Master Clear Enable bit
  9420                           ;	MCLRE = 0x1, unprogrammed default
  9421                           ;	Power-up Timer Enable bit
  9422                           ;	PWRTE = 0x1, unprogrammed default
  9423                           ;	Low-power BOR enable bit
  9424                           ;	LPBOREN = 0x1, unprogrammed default
  9425                           ;	Brown-out Reset Enable bits
  9426                           ;	BOREN = 0x3, unprogrammed default
  9427   300002                     	org	3145730
  9428   300002  FF                 	db	255
  9429                           
  9430                           ;Config register CONFIG2H @ 0x300003
  9431                           ;	unspecified, using default values
  9432                           ;	Brown Out Reset Voltage selection bits
  9433                           ;	BORV = 0x3, unprogrammed default
  9434                           ;	ZCD Disable bit
  9435                           ;	ZCD = 0x1, unprogrammed default
  9436                           ;	PPSLOCK bit One-Way Set Enable bit
  9437                           ;	PPS1WAY = 0x1, unprogrammed default
  9438                           ;	Stack Full/Underflow Reset Enable bit
  9439                           ;	STVREN = 0x1, unprogrammed default
  9440                           ;	Debugger Enable bit
  9441                           ;	DEBUG = 0x1, unprogrammed default
  9442                           ;	Extended Instruction Set Enable bit
  9443                           ;	XINST = 0x1, unprogrammed default
  9444   300003                     	org	3145731
  9445   300003  FF                 	db	255
  9446                           
  9447                           ;Config register CONFIG3L @ 0x300004
  9448                           ;	WDT Period Select bits
  9449                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  9450                           ;	WDT operating mode
  9451                           ;	WDTE = OFF, WDT Disabled
  9452   300004                     	org	3145732
  9453   300004  9F                 	db	159
  9454                           
  9455                           ;Config register CONFIG3H @ 0x300005
  9456                           ;	unspecified, using default values
  9457                           ;	WDT Window Select bits
  9458                           ;	WDTCWS = 0x7, unprogrammed default
  9459                           ;	WDT input clock selector
  9460                           ;	WDTCCS = 0x7, unprogrammed default
  9461   300005                     	org	3145733
  9462   300005  FF                 	db	255
  9463                           
  9464                           ;Config register CONFIG4L @ 0x300006
  9465                           ;	unspecified, using default values
  9466                           ;	Write Protection Block 0
  9467                           ;	WRT0 = 0x1, unprogrammed default
  9468                           ;	Write Protection Block 1
  9469                           ;	WRT1 = 0x1, unprogrammed default
  9470                           ;	Write Protection Block 2
  9471                           ;	WRT2 = 0x1, unprogrammed default
  9472                           ;	Write Protection Block 3
  9473                           ;	WRT3 = 0x1, unprogrammed default
  9474                           ;	Write Protection Block 3
  9475                           ;	WRT4 = 0x1, unprogrammed default
  9476                           ;	Write Protection Block 3
  9477                           ;	WRT5 = 0x1, unprogrammed default
  9478                           ;	Write Protection Block 3
  9479                           ;	WRT6 = 0x1, unprogrammed default
  9480                           ;	Write Protection Block 3
  9481                           ;	WRT7 = 0x1, unprogrammed default
  9482   300006                     	org	3145734
  9483   300006  FF                 	db	255
  9484                           
  9485                           ;Config register CONFIG4H @ 0x300007
  9486                           ;	unspecified, using default values
  9487                           ;	Configuration Register Write Protection bit
  9488                           ;	WRTC = 0x1, unprogrammed default
  9489                           ;	Boot Block Write Protection bit
  9490                           ;	WRTB = 0x1, unprogrammed default
  9491                           ;	Data EEPROM Write Protection bit
  9492                           ;	WRTD = 0x1, unprogrammed default
  9493                           ;	Scanner Enable bit
  9494                           ;	SCANE = 0x1, unprogrammed default
  9495                           ;	Low Voltage Programming Enable bit
  9496                           ;	LVP = 0x1, unprogrammed default
  9497   300007                     	org	3145735
  9498   300007  FF                 	db	255
  9499                           
  9500                           ;Config register CONFIG5L @ 0x300008
  9501                           ;	unspecified, using default values
  9502                           ;	UserNVM Program Memory Code Protection bit
  9503                           ;	CP = 0x1, unprogrammed default
  9504                           ;	DataNVM Memory Code Protection bit
  9505                           ;	CPD = 0x1, unprogrammed default
  9506   300008                     	org	3145736
  9507   300008  FF                 	db	255
  9508                           
  9509                           ;Config register CONFIG5H @ 0x300009
  9510                           ;	unspecified, using default values
  9511   300009                     	org	3145737
  9512   300009  FF                 	db	255
  9513                           
  9514                           ;Config register CONFIG6L @ 0x30000A
  9515                           ;	unspecified, using default values
  9516                           ;	Table Read Protection Block 0
  9517                           ;	EBTR0 = 0x1, unprogrammed default
  9518                           ;	Table Read Protection Block 1
  9519                           ;	EBTR1 = 0x1, unprogrammed default
  9520                           ;	Table Read Protection Block 2
  9521                           ;	EBTR2 = 0x1, unprogrammed default
  9522                           ;	Table Read Protection Block 3
  9523                           ;	EBTR3 = 0x1, unprogrammed default
  9524                           ;	Table Read Protection Block 4
  9525                           ;	EBTR4 = 0x1, unprogrammed default
  9526                           ;	Table Read Protection Block 5
  9527                           ;	EBTR5 = 0x1, unprogrammed default
  9528                           ;	Table Read Protection Block 6
  9529                           ;	EBTR6 = 0x1, unprogrammed default
  9530                           ;	Table Read Protection Block 7
  9531                           ;	EBTR7 = 0x1, unprogrammed default
  9532   30000A                     	org	3145738
  9533   30000A  FF                 	db	255
  9534                           
  9535                           ;Config register CONFIG6H @ 0x30000B
  9536                           ;	unspecified, using default values
  9537                           ;	Boot Block Table Read Protection bit
  9538                           ;	EBTRB = 0x1, unprogrammed default
  9539   30000B                     	org	3145739
  9540   30000B  FF                 	db	255
  9541                           tosu	equ	0xFFF
  9542                           tosh	equ	0xFFE
  9543                           tosl	equ	0xFFD
  9544                           stkptr	equ	0xFFC
  9545                           pclatu	equ	0xFFB
  9546                           pclath	equ	0xFFA
  9547                           pcl	equ	0xFF9
  9548                           tblptru	equ	0xFF8
  9549                           tblptrh	equ	0xFF7
  9550                           tblptrl	equ	0xFF6
  9551                           tablat	equ	0xFF5
  9552                           prodh	equ	0xFF4
  9553                           prodl	equ	0xFF3
  9554                           indf0	equ	0xFEF
  9555                           postinc0	equ	0xFEE
  9556                           postdec0	equ	0xFED
  9557                           preinc0	equ	0xFEC
  9558                           plusw0	equ	0xFEB
  9559                           fsr0h	equ	0xFEA
  9560                           fsr0l	equ	0xFE9
  9561                           wreg	equ	0xFE8
  9562                           indf1	equ	0xFE7
  9563                           postinc1	equ	0xFE6
  9564                           postdec1	equ	0xFE5
  9565                           preinc1	equ	0xFE4
  9566                           plusw1	equ	0xFE3
  9567                           fsr1h	equ	0xFE2
  9568                           fsr1l	equ	0xFE1
  9569                           bsr	equ	0xFE0
  9570                           indf2	equ	0xFDF
  9571                           postinc2	equ	0xFDE
  9572                           postdec2	equ	0xFDD
  9573                           preinc2	equ	0xFDC
  9574                           plusw2	equ	0xFDB
  9575                           fsr2h	equ	0xFDA
  9576                           fsr2l	equ	0xFD9
  9577                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         211
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     78      86
    BANK0           160     56     121
    BANK1           256      0     140
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    detect_color@lost_timer	PTR unsigned char  size(2) Largest target is 3561
		 -> RAM(DATA[3561]), 

    Return_Time@time_index	PTR unsigned char  size(2) Largest target is 1
		 -> time_index(BANK0[1]), 

    Return_Time@time_array	PTR unsigned int  size(2) Largest target is 80
		 -> time_array(BANK1[80]), 

    Return_Anti_Moves@moves_index	PTR unsigned char  size(2) Largest target is 1
		 -> moves_index(COMRAM[1]), 

    Return_Anti_Moves@anti_moves_array	PTR unsigned char  size(2) Largest target is 40
		 -> anti_moves_array(BANK0[40]), 

    AppendTime@time_index	PTR unsigned char  size(2) Largest target is 1
		 -> time_index(BANK0[1]), 

    AppendTime@time_array	PTR unsigned int  size(2) Largest target is 80
		 -> time_array(BANK1[80]), 

    AppendMoves@moves_index	PTR unsigned char  size(2) Largest target is 1
		 -> moves_index(COMRAM[1]), 

    AppendMoves@anti_moves_array	PTR unsigned char  size(2) Largest target is 40
		 -> anti_moves_array(BANK0[40]), 

    MoveBuggy@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    MoveBuggy@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    MoveBuggy@color_detected	PTR unsigned char  size(2) Largest target is 3561
		 -> RAM(DATA[3561]), 

    WhiteInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    WhiteInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    AntiPink@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    AntiPink@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    AntiYellow@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    AntiYellow@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    LightBlueInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    LightBlueInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    OrangeInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    OrangeInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    PinkInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    PinkInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    YellowInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    YellowInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    BlueInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    BlueInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    GreenInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    GreenInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    RedInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    RedInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    turnLeft135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnLeft90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    fullSpeedBackwards@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    fullSpeedBackwards@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    fullSpeedBackwards@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    fullSpeedBackwards@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    fullSpeedBackwards@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    fullSpeedBackwards@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    S1243DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    S1243DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), main@motorL(BANK0[9]), 

    detect_color@tempval	PTR struct RGB_val size(2) Largest target is 8
		 -> main@initial_color(BANK0[8]), 

    Update_RGBC@tempval	PTR struct RGB_val size(2) Largest target is 8
		 -> main@initial_color(BANK0[8]), 


Critical Paths under _main in COMRAM

    _detect_color->___fltol
    ___fltol->___flmul
    ___flmul->___fldiv
    ___fldiv->___xxtofl
    _color_click_init->_color_writetoaddr
    _WhiteInstructions->_MoveBuggy
    _MoveBuggy->_AntiPink
    _MoveBuggy->_AntiYellow
    _YellowInstructions->_turnRight90
    _PinkInstructions->_turnLeft90
    _OrangeInstructions->_turnRight135
    _turnRight135->_turnRight90
    _LightBlueInstructions->_turnLeft135
    _turnLeft135->_turnLeft90
    _AntiYellow->_BlueInstructions
    _AntiYellow->_RedInstructions
    _RedInstructions->_turnRight90
    _turnRight90->_turnRight
    _turnRight->_setMotorPWM
    _AntiPink->_BlueInstructions
    _AntiPink->_GreenInstructions
    _fullSpeedAhead->_setMotorPWM
    _GreenInstructions->_turnLeft90
    _BlueInstructions->_turnLeft90
    _turnLeft90->_turnLeft
    _turnLeft->_setMotorPWM
    _stop->_setMotorPWM
    _fullSpeedBackwards->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _Update_RGBC->_color_read_Blue
    _Update_RGBC->_color_read_Clear
    _Update_RGBC->_color_read_Green
    _Update_RGBC->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _interrupts_clear_colorclick->_init_colorclick_interrupts
    _init_colorclick_interrupts->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    i2_interrupts_clear_colorclick->i2_init_colorclick_interrupts
    i2_init_colorclick_interrupts->i2_color_writetoaddr
    i2_color_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_detect_color
    _detect_color->___fltol

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                32    32      0  490224
                                             24 BANK0     32    32      0
                         _AppendTime
                    _Interrupts_init
                           _LED_init
                          _MoveBuggy
                        _Timer0_init
                        _Update_RGBC
                  _WhiteInstructions
                         _WhiteLight
                   _color_click_init
                       _detect_color
                     _fullSpeedAhead
                    _initDCmotorsPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _detect_color                                        20    16      4    6670
                                              4 BANK0     20    16      4
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     616
                                              8 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     517
                                             72 COMRAM     6     2      4
                                              0 BANK0      4     4      0
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    1886
                                             47 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1541
                                             22 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     750
                                             12 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WhiteLight                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WhiteInstructions                                   11     7      4  248861
                                             58 COMRAM    11     7      4
                   _BlueInstructions
                          _MoveBuggy
                  _Return_Anti_Moves
                        _Return_Time
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (2) _Return_Time                                          9     5      4     219
                                              8 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (2) _Return_Anti_Moves                                    6     2      4     219
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _MoveBuggy                                            6     0      6  222680
                                             52 COMRAM     6     0      6
                           _AntiPink
                         _AntiYellow
                        _AppendMoves
                   _BlueInstructions
                  _GreenInstructions
              _LightBlueInstructions
                 _OrangeInstructions
                   _PinkInstructions
                    _RedInstructions
                 _YellowInstructions
 ---------------------------------------------------------------------------------
 (3) _YellowInstructions                                   7     3      4   16596
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                        _turnRight90
 ---------------------------------------------------------------------------------
 (3) _PinkInstructions                                     7     3      4   17204
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                         _turnLeft90
 ---------------------------------------------------------------------------------
 (3) _OrangeInstructions                                   7     3      4   24393
                                             43 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                       _turnRight135
 ---------------------------------------------------------------------------------
 (4) _turnRight135                                         5     1      4   15988
                                             38 COMRAM     5     1      4
                               _stop
                          _turnRight
                        _turnRight90
 ---------------------------------------------------------------------------------
 (3) _LightBlueInstructions                                7     3      4   25001
                                             43 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                        _turnLeft135
 ---------------------------------------------------------------------------------
 (4) _turnLeft135                                          5     1      4   16596
                                             38 COMRAM     5     1      4
                               _stop
                           _turnLeft
                         _turnLeft90
 ---------------------------------------------------------------------------------
 (3) _AppendMoves                                          6     2      4    1130
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _AntiYellow                                           7     3      4   42445
                                             45 COMRAM     7     3      4
                   _BlueInstructions
                    _RedInstructions
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (3) _RedInstructions                                      7     3      4   16748
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                        _turnRight90
 ---------------------------------------------------------------------------------
 (4) _turnRight90                                          5     1      4    8191
                                             33 COMRAM     5     1      4
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (5) _turnRight                                            6     2      4    2593
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _AntiPink                                             7     3      4   43053
                                             45 COMRAM     7     3      4
                   _BlueInstructions
                  _GreenInstructions
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (1) _fullSpeedAhead                                       6     2      4    2745
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _GreenInstructions                                    7     3      4   17356
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                         _turnLeft90
 ---------------------------------------------------------------------------------
 (3) _BlueInstructions                                     7     3      4   17704
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                         _turnLeft90
 ---------------------------------------------------------------------------------
 (4) _turnLeft90                                           5     1      4    8799
                                             33 COMRAM     5     1      4
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (5) _turnLeft                                             6     2      4    2593
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _stop                                                 5     1      4    4873
                                             27 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _fullSpeedBackwards                                   6     2      4    3201
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    1829
                                             21 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                             14 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Update_RGBC                                          2     0      2     616
                                             19 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              9 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0     772
        _interrupts_clear_colorclick
 ---------------------------------------------------------------------------------
 (2) _interrupts_clear_colorclick                          0     0      0     772
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
         _init_colorclick_interrupts
 ---------------------------------------------------------------------------------
 (3) _init_colorclick_interrupts                           1     1      0     750
                                             12 COMRAM     1     1      0
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     750
                                             10 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              9 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _AppendTime                                           9     3      6     522
                                              8 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _LowISR                                               3     3      0       0
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _HighISR                                             0     0      0     244
      i2_interrupts_clear_colorclick
 ---------------------------------------------------------------------------------
 (11) i2_interrupts_clear_colorclick                       0     0      0     244
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
       i2_init_colorclick_interrupts
 ---------------------------------------------------------------------------------
 (12) i2_init_colorclick_interrupts                        1     1      0     222
                                              4 COMRAM     1     1      0
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (13) i2_color_writetoaddr                                 2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (14) i2_I2C_2_Master_Write                                1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (14) i2_I2C_2_Master_Stop                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (14) i2_I2C_2_Master_Start                                0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (15) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AppendTime
   _Interrupts_init
     _interrupts_clear_colorclick
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
       _init_colorclick_interrupts
         _color_writetoaddr
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
   _LED_init
   _MoveBuggy
     _AntiPink
       _BlueInstructions
         _fullSpeedBackwards
           _setMotorPWM
             ___lwdiv
               ___wmul (ARG)
             ___wmul
         _stop
           _setMotorPWM
         _turnLeft90
           _stop
           _turnLeft
             _setMotorPWM
       _GreenInstructions
         _fullSpeedBackwards
         _stop
         _turnLeft90
       _fullSpeedAhead
         _setMotorPWM
       _stop
     _AntiYellow
       _BlueInstructions
       _RedInstructions
         _fullSpeedBackwards
         _stop
         _turnRight90
           _stop
           _turnRight
             _setMotorPWM
       _fullSpeedAhead
       _stop
     _AppendMoves
     _BlueInstructions
     _GreenInstructions
     _LightBlueInstructions
       _fullSpeedBackwards
       _stop
       _turnLeft135
         _stop
         _turnLeft
         _turnLeft90
     _OrangeInstructions
       _fullSpeedBackwards
       _stop
       _turnRight135
         _stop
         _turnRight
         _turnRight90
     _PinkInstructions
       _fullSpeedBackwards
       _stop
       _turnLeft90
     _RedInstructions
     _YellowInstructions
       _fullSpeedBackwards
       _stop
       _turnRight90
   _Timer0_init
   _Update_RGBC
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _WhiteInstructions
     _BlueInstructions
     _MoveBuggy
     _Return_Anti_Moves
     _Return_Time
     _fullSpeedAhead
     _stop
   _WhiteLight
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
   _detect_color
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       ___fldiv (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _fullSpeedAhead
   _initDCmotorsPWM
   _stop

 _LowISR (ROOT)

 _HighISR (ROOT)
   i2_interrupts_clear_colorclick
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle
     i2_init_colorclick_interrupts
       i2_color_writetoaddr
         i2_I2C_2_Master_Start
         i2_I2C_2_Master_Stop
         i2_I2C_2_Master_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      64        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      8C       7       54.7%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     38      79       5       75.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4E      56       1       91.5%
BITBIGSFRhllllh     52      0       0      41        0.0%
BITBIGSFRhlllll     37      0       0      43        0.0%
BITBIGSFRlllhll     2A      0       0      55        0.0%
BITBIGSFRlllll      26      0       0      62        0.0%
BITBIGSFRllhh       20      0       0      46        0.0%
BITBIGSFRhhhhlh     1B      0       0      33        0.0%
BITBIGSFRhhhlll     17      0       0      38        0.0%
BITBIGSFRhhhhll     13      0       0      34        0.0%
BITBIGSFRlllhhh     11      0       0      49        0.0%
BITBIGSFRlllhhh     11      0       0      50        0.0%
BITBIGSFRhhhlhh      E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRlllhhh      C      0       0      48        0.0%
BITBIGSFRllhl        C      0       0      47        0.0%
BITBIGSFRlllhll      9      0       0      59        0.0%
BITBIGSFRhlllll      8      0       0      44        0.0%
BITBIGSFRllllh       6      0       0      61        0.0%
BITBIGSFRlllhll      6      0       0      54        0.0%
BITBIGSFRlllhll      5      0       0      57        0.0%
BITBIGSFRlllhlh      5      0       0      53        0.0%
BITBIGSFRhhhlll      5      0       0      39        0.0%
BITBIGSFRlllhll      3      0       0      56        0.0%
BITBIGSFRlllhll      3      0       0      58        0.0%
BITBIGSFRlllhhl      3      0       0      52        0.0%
BITBIGSFRhlllll      2      0       0      42        0.0%
BITBIGSFRhhhllh      2      0       0      37        0.0%
BITBIGSFRhhhlhl      1      0       0      36        0.0%
BITBIGSFRlllhhh      1      0       0      51        0.0%
BITBIGSFRhlllh       1      0       0      40        0.0%
BITBIGSFRlllhll      1      0       0      60        0.0%
BITBIGSFRlh          1      0       0      45        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     15B      63        0.0%
DATA                 0      0     15B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Mar 13 19:21:36 2023

                       _color_read_Red 25B0                           ___fldiv@aexp 002F  
                         ___fldiv@bexp 002E                           ___fldiv@sign 0027  
                      _color_read_Blue 26A0                                     l21 2882  
                                   l30 264E                                     l24 29DA  
                                   l33 26EE                                     l42 0674  
                                   l27 25FE                                     l36 269E  
                                   l39 25AE                                     l59 067A  
                                   l92 2906                                     l86 28DE  
                                   l95 2ABC                                     l89 28E0  
                                   l98 2AA8                                     bsr 000FE0  
                  ___wmul@multiplicand 000B                       _anti_moves_array 0076  
                     _color_read_Clear 2650                       _color_read_Green 2600  
           WhiteInstructions@anticolor 0043                      ??_Interrupts_init 000E  
                                  l101 2AB2                                    l104 2A92  
                                  l107 2816                                    l203 1B18  
                                  l132 2A52                                    l213 1A2A  
                                  l135 2AD8                                    l208 193C  
                                  l321 273E                                    l233 204C  
                                  l314 2A38                                    l218 1C06  
                                  l324 2A6C                                    l260 24E2  
                                  l510 1150                                    l440 29BA  
                                  l248 1F9E                                    l600 2162  
                                  l193 1658                                    l186 20DC  
                                  l269 2550                                    l701 299A  
                                  l198 1CDA                                    l704 284E  
                                  l609 21E8                                    l618 226E  
                                  l707 2954                                    l627 22F4  
                                  l636 1D8C                                    l645 1E3E  
                                  l573 237A                                    l582 2400  
                                  l591 1EF0                                    l657 184E  
                                  l684 10C2                                    l695 2978  
                                  l698 28B4                    i2_color_writetoaddr 29FC  
                                  wreg 000FE8                           ___flmul@aexp 0041  
                         ___flmul@bexp 0042                           ___flmul@sign 003C  
                         ___flmul@temp 0047                           ___flmul@prod 0043  
                         ___fltol@exp1 004E                                   l1004 1760  
                                 l1300 0CE4                                   l1205 2474  
                                 l1302 0D5C                                   l1303 0D4A  
                                 l3000 2366                                   l1321 0740  
                                 l3010 23AE                                   l3002 237C  
                                 l1330 09AE                                   l1331 099C  
                                 l3020 1E40                                   l3012 23C2  
                                 l3004 2384                                   l3100 214E  
                                 l1325 0AA4                                   l3030 1E86  
                                 l3022 1E48                                   l3014 23C4  
                                 l3006 2398                                   l3110 2196  
                                 l3102 2164                                   l3032 1E88  
                                 l3024 1E5C                                   l3016 23D4  
                                 l3008 239A                                   l3200 2958  
                                 l3120 21EA                                   l3112 21AA  
                                 l3104 216C                                   l1328 0936  
                                 l3034 1E98                                   l3026 1E5E  
                                 l3018 23EC                                   l3130 2230  
                                 l3122 21F2                                   l3114 21AC  
                                 l3106 2180                                   l3210 28C8  
                                 l1338 0A66                                   l1362 1390  
                                 l1291 0C9E                                   l3060 27E4  
                                 l3052 2AA0                                   l3036 1EB0  
                                 l3028 1E72                                   l3140 2278  
                                 l3132 2232                                   l3124 2206  
                                 l3116 21BC                                   l3108 2182  
                                 l3300 1082                                   l3212 28CA  
                                 l3204 28B6                                   l4100 1740  
                                 l1365 14EC                                   l3070 26F0  
                                 l3062 27EC                                   l3054 2AA4  
                                 l3230 26E6                                   l3222 2600  
                                 l1198 246C                                   l3038 1EC4  
                                 l3150 22B8                                   l3142 228C  
                                 l3134 2242                                   l3126 2208  
                                 l3118 21D4                                   l3302 109A  
                                 l3214 28CC                                   l3206 28C0  
                                 l1294 0C62                                   l4102 1750  
                                 l4110 0148                                   l3080 2728  
                                 l3072 26FA                                   l3240 2A54  
                                 l3064 2812                                   l3056 27D8  
                                 l3224 2646                                   l3216 25B0  
                                 l3160 1CF4                                   l3152 22C8  
                                 l3144 228E                                   l3136 225A  
                                 l3128 221C                                   l3304 10AE  
                                 l3312 297A                                   l3208 28C6  
                                 l3400 0C9C                                   l3320 0AB2  
                                 l1376 1484                                   l4200 05A0  
                                 l4120 0350                                   l4112 0234  
                                 l1289 0E3E                                   l1369 1428  
                                 l3082 2732                                   l3074 270A  
                                 l3066 2814                                   l3058 27DC  
                                 l3234 2650                                   l3218 25F6  
                                 l3170 1D4E                                   l3162 1D10  
                                 l3154 22E0                                   l3146 22A2  
                                 l3138 2270                                   l3090 20FC  
                                 l3250 0E8E                                   l3242 0E40  
                                 l3314 2998                                   l3306 2818  
                                 l3410 0CE2                                   l3402 0CAE  
                                 l3330 0AF2                                   l3322 0AC0  
                                 l4210 05F0                                   l4202 05B0  
                                 l4122 0360                                   l4130 0398  
                                 l4114 0320                                   l4106 005C  
                                 l3076 2714                                   l3228 26A0  
                                 l3236 2696                                   l3180 1D92  
                                 l3172 1D50                                   l3164 1D24  
                                 l3156 1CDC                                   l3148 22B6  
                                 l3092 2110                                   l3084 20DE  
                                 l3260 0EF2                                   l3252 0EA2  
                                 l3244 0E52                                   l3308 2846  
                                 l3420 0D42                                   l3404 0CC4  
                                 l3412 0CF4                                   l3340 0B18  
                                 l3332 0AF4                                   l3324 0AC2  
                                 l3500 078A                                   l4220 0638  
                                 l4212 0600                                   l4204 05C0  
                                 l4140 03E8                                   l4132 03A8  
                                 l4124 0370                                   l4116 0330  
                                 l4108 0062                                   l4300 1258  
                                 l3078 271E                                   l3190 1DEC  
                                 l3182 1DA6                                   l3174 1D60  
                                 l3166 1D26                                   l3158 1CE0  
                                 l3094 2124                                   l3086 20E6  
                                 l3270 0F56                                   l3262 0F06  
                                 l3254 0EB6                                   l3246 0E66  
                                 l3430 0DB0                                   l3414 0D02  
                                 l3406 0CCA                                   l3350 0B58  
                                 l3342 0B26                                   l3326 0AD2  
                                 l3334 0AFC                                   l3318 0AA6  
                                 l3510 07DC                                   l3502 07A0  
                                 l4070 16B0                                   l4062 165A  
                                 l4222 0648                                   l4206 05D0  
                                 l4214 0608                                   l4150 0430  
                                 l4142 03F8                                   l4134 03B8  
                                 l4126 0380                                   l4118 0340  
                                 l4310 12A0                                   l4302 127C  
                                 l2800 1C70                                   l3192 1E00  
                                 l3184 1DC2                                   l3176 1D78  
                                 l3168 1D3A                                   l3096 2126  
                                 l3088 20FA                                   l3280 0FB4  
                                 l3272 0F64                                   l3264 0F14  
                                 l3256 0EC4                                   l3248 0E74  
                                 l3440 0E1A                                   l3424 0D6C  
                                 l3432 0DB4                                   l3416 0D06  
                                 l3408 0CD4                                   l3360 0B98  
                                 l3352 0B5A                                   l3344 0B28  
                                 l3336 0B0C                                   l3328 0AE2  
                                 l3520 0822                                   l3512 07EA  
                                 l3504 07AC                                   l4072 16B2  
                                 l4064 1670                                   l4224 0658  
                                 l4216 0618                                   l4208 05E0  
                                 l4160 0478                                   l4152 0440  
                                 l4136 03C8                                   l4144 0400  
                                 l4128 0390                                   l4320 12F6  
                                 l4312 12C0                                   l4304 1282  
                                 l4240 1102                                   l4232 10C4  
                                 l2802 1C86                                   l2810 1A2C  
                                 l3194 1E02                                   l3186 1DD6  
                                 l3178 1D8E                                   l3098 2136  
                                 l3290 101E                                   l3282 0FCE  
                                 l3274 0F7E                                   l3266 0F2E  
                                 l3258 0EDE                                   l3442 0E1E  
                                 l3434 0DCE                                   l3426 0D78  
                                 l3418 0D14                                   l3370 0BC8  
                                 l3362 0BA0                                   l3346 0B38  
                                 l3354 0B62                                   l3338 0B12  
                                 l3530 0890                                   l3522 083C  
                                 l3514 07F6                                   l3506 07C4  
                                 l4074 16C2                                   l4226 0668  
                                 l4218 0628                                   l4170 04C8  
                                 l4162 0488                                   l4154 0450  
                                 l4146 0410                                   l4138 03D8  
                                 l4322 1310                                   l4314 12C6  
                                 l4306 1286                                   l4250 1120  
                                 l4242 1108                                   l4234 10E6  
                                 l3700 2552                                   l2804 1CB4  
                                 l2820 1AD2                                   l2812 1A88  
                                 l2900 203C                                   l3196 1E12  
                                 l3188 1DD8                                   l3292 1032  
                                 l3284 0FE2                                   l3276 0F92  
                                 l3268 0F42                                   l3444 0E2C  
                                 l3436 0DE4                                   l3428 0D86  
                                 l3380 0C06                                   l3372 0BC8  
                                 l3364 0BA4                                   l3356 0B72  
                                 l3348 0B48                                   l3540 0926  
                                 l3532 08BA                                   l3524 084C  
                                 l3516 0806                                   l3508 07D0  
                                 l3460 0696                                   l4084 16EC  
                                 l4076 16C6                                   l4068 1684  
                                 l4228 0670                                   l4180 0510  
                                 l4164 0498                                   l4172 04D0  
                                 l4156 0460                                   l4148 0420  
                                 l4324 1324                                   l4316 12DA  
                                 l4308 128E                                   l4260 113A  
                                 l4252 1126                                   l4244 110C  
                                 l4236 10EA                                   l2750 2402  
                                 l2806 1CC0                                   l2822 1AE8  
                                 l2814 1A94                                   l3198 1E2A  
                                 l2830 18AC                                   l2910 1F24  
                                 l2902 1EF2                                   l3294 1046  
                                 l3286 0FF6                                   l3278 0FA6  
                                 l3446 0E32                                   l3438 0DFE  
                                 l3390 0C52                                   l3382 0C16  
                                 l3358 0B88                                   l3550 0966  
                                 l3542 0934                                   l3534 08F0  
                                 l3526 0868                                   l3518 0812  
                                 l3470 06CE                                   l3462 0698  
                                 l4094 1714                                   l4086 16F6  
                                 l4078 16D4                                   l3630 133C  
                                 l4190 0558                                   l4182 0520  
                                 l4174 04E0                                   l4166 04A8  
                                 l4158 0468                                   l4326 1326  
                                 l4318 12E2                                   l4270 1162  
                                 l4262 1142                                   l4254 112A  
                                 l4246 1110                                   l4238 10EE  
                                 l2760 243A                                   l2752 240A  
                                 l2744 2930                                   l2808 1CCC  
                                 l2824 1AF4                                   l2816 1AB0  
                                 l2840 190C                                   l2832 18B8  
                                 l2920 1F64                                   l2912 1F38  
                                 l2904 1EFA                                   l3296 1054  
                                 l3288 1004                                   l3448 0E34  
                                 l3392 0C60                                   l3384 0C26  
                                 l3376 0BDC                                   l3368 0BB8  
                                 l3560 09D8                                   l3552 0994  
                                 l3544 0946                                   l3536 08FE  
                                 l3528 0874                                   l3480 06FA  
                                 l3472 06DE                                   l3464 06A8  
                                 l3456 067C                                   l4096 1720  
                                 l4088 1700                                   l3632 134C  
                                 l4192 0568                                   l4184 0530  
                                 l4176 04F0                                   l4168 04B8  
                                 l4328 132C                                   l4272 1170  
                                 l4280 11B4                                   l4264 1148  
                                 l4256 112E                                   l4248 1118  
                                 l2850 2A8A                                   l2770 2466  
                                 l2762 2440                                   l2754 241C  
                                 l2746 294C                                   l2826 1B00  
                                 l2818 1ABC                                   l2842 1918  
                                 l2834 18D4                                   l2922 1F78  
                                 l2914 1F3A                                   l2906 1F0E  
                                 l3298 106E                                   l3394 0C6C  
                                 l3386 0C2E                                   l3378 0BF6  
                                 l3570 0A4E                                   l3562 0A02  
                                 l3546 0954                                   l3538 091C  
                                 l3490 0750                                   l3482 070A  
                                 l3474 06E4                                   l3466 06B8  
                                 l3458 0688                                   l4098 1730  
                                 l3650 1412                                   l3642 13CA  
                                 l3634 135A                                   l4194 0578  
                                 l4178 0500                                   l4186 0538  
                                 l4290 120C                                   l4282 11C4  
                                 l4274 1184                                   l4266 114C  
                                 l4258 1132                                   l2852 2A8E  
                                 l2932 29BE                                   l2764 2456  
                                 l2756 2424                                   l2780 1576  
                                 l2772 14EE                                   l2860 1B76  
                                 l2940 19C2                                   l2844 1924  
                                 l2836 18E0                                   l2828 1850  
                                 l2924 1F8C                                   l2916 1F4E  
                                 l2908 1F10                                   l3900 17EC  
                                 l3396 0C8A                                   l3388 0C3E  
                                 l3572 0A6A                                   l3580 0A90  
                                 l3556 09BE                                   l3564 0A06  
                                 l3548 0958                                   l3492 0760  
                                 l3484 071A                                   l3476 06EA  
                                 l3468 06C8                                   l3660 1492  
                                 l3652 141E                                   l3644 13D2  
                                 l3636 13A0                                   l4196 0588  
                                 l4188 0548                                   l4292 1220  
                                 l4284 11D4                                   l4276 1190  
                                 l4268 115E                                   l2790 28F0  
                                 l2846 2AB4                                   l2854 2AAA  
                                 l2766 245E                                   l2758 242C  
                                 l2782 15B8                                   l2774 150A  
                                 l2870 1BD6                                   l2862 1B82  
                                 l2950 1A12                                   l2942 19CE  
                                 l2934 193E                                   l2838 18F6  
                                 l2926 1F8E                                   l2918 1F62  
                                 l3902 17F2                                   l3830 2AD2  
                                 l3398 0C8C                                   l3582 0A94  
                                 l3574 0A7A                                   l3566 0A20  
                                 l3558 09CA                                   l3486 072A  
                                 l3478 06F8                                   l3670 14DA  
                                 l3662 1494                                   l3654 145A  
                                 l3646 13DE                                   l3638 13B6  
                                 l4198 0598                                   l4294 1228  
                                 l4286 11E6                                   l4278 11B0  
                                 l2848 2AB8                                   l2856 2AAE  
                                 l2768 2460                                   l2784 15D4  
                                 l2776 155E                                   l2872 1BE2  
                                 l2864 1B9E                                   l2792 1C08  
                                 l2880 1FBC                                   l2944 19E4  
                                 l2936 199A                                   l2960 24A8  
                                 l2952 2476                                   l3904 1804  
                                 l3576 0A88                                   l3568 0A34  
                                 l3496 0774                                   l3488 0730  
                                 l3672 14DC                                   l3664 1498  
                                 l3656 1466                                   l3648 1410  
                                 l3840 20AC                                   l3832 204E  
                                 l4296 123C                                   l4288 1206  
                                 l2786 1618                                   l2778 1572  
                                 l2874 1BEE                                   l2866 1BAA  
                                 l2858 1B1A                                   l2794 1C40  
                                 l2890 1FFC                                   l2882 1FBE  
                                 l2946 19FA                                   l2938 19A6  
                                 l2970 24F8                                   l2962 24BC  
                                 l2954 248A                                   l3906 181A  
                                 l3690 2850                                   l3578 0A8A  
                                 l3498 0780                                   l3666 14BC  
                                 l3658 1474                                   l3850 20CE  
                                 l3842 20B6                                   l3834 205E  
                                 l4298 1256                                   l2788 28E0  
                                 l3860 2A32                                   l3828 2A3A  
                                 l2868 1BC0                                   l2796 1C4C  
                                 l2892 2010                                   l2884 1FD2  
                                 l2876 1FA0                                   l2948 1A06  
                                 l2980 253E                                   l2972 2500  
                                 l2964 24D0                                   l2956 2492  
                                 l3908 183C                                   l3692 2854  
                                 l3668 14CC                                   l3852 20D0  
                                 l3844 20B8                                   l3836 2084  
                                 l3862 2A34                                   l2798 1C64  
                                 l2894 2012                                   l2886 1FE6  
                                 l2878 1FA8                                   l2990 2314  
                                 l2982 2540                                   l2974 2514  
                                 l2966 24D2                                   l2958 24A6  
                                 l3694 285E                                   l3854 20DA  
                                 l3846 20C2                                   l3838 2088  
                                 l3864 2A36                                   l3856 2A1C  
                                 l3880 29B8                                   l2896 2026  
                                 l2888 1FE8                                   l2992 2328  
                                 l2984 22F6                                   l2976 2516  
                                 l2968 24E4                                   l3696 286E  
                                 l3848 20C4                                   l3882 2884  
                                 l3858 2A2E                                   l3874 299C  
                                 l2898 203A                                   l2994 233C  
                                 l2986 22FE                                   l2978 252A  
                                 l3890 1786                                   l3698 2878  
                                 l3876 29A4                                   l2996 233E  
                                 l2988 2312                                   l3892 17A6  
                                 l3884 1762                                   l3878 29AE  
                                 l2998 234E                                   l3894 17BA  
                                 l3886 1766                                   l3896 17BE  
                                 l3888 177E                                   l3898 17D8  
                                 u2000 243A                                   u2001 2436  
                                 u2010 2456                                   u2011 2452  
                                 u2020 150A                                   u2100 18AC  
                                 u2021 1506                                   u2101 18A8  
                                 u2030 15D4                                   u2110 18D4  
                                 u2031 15D0                                   u2111 18D0  
                                 u2040 28F0                                   u2120 1B76  
                                 u2200 1F74                                   u3000 0966  
                                 u2041 28EC                                   u2121 1B72  
                                 u2201 1F70                                   u3001 0962  
                                 u2050 2906                                   u2130 1B9E  
                                 u2210 1F9E                                   u3010 0994  
                                 u2051 2902                                   u2131 1B9A  
                                 u2211 1F9A                                   u3011 0990  
                                 u2060 1C40                                   u2140 1FCE  
                                 u2300 2324                                   u3020 09AA  
                                 u2061 1C3C                                   u2141 1FCA  
                                 u2301 2320                                   u3021 09A6  
                                 u2070 1C64                                   u2150 1FF8  
                                 u2310 234E                                   u3030 09BE  
                                 u2071 1C60                                   u2151 1FF4  
                                 u2311 234A                                   u3031 09BA  
                                 u2080 1A88                                   u2160 2022  
                                 u2320 23AA                                   u2240 199A  
                                 u2400 2192                                   u3040 09D8  
                                 u3200 1474                                   u4000 0350  
                         _BAUD4CONbits 000EE9                                   u2081 1A84  
                                 u2161 201E                                   u2321 23A6  
                                 u2241 1996                                   u2401 218E  
                                 u3041 09D4                                   u3201 1470  
                                 u4001 034C                                   u2090 1AB0  
                                 u2170 204C                                   u2330 23D4  
                                 u2250 19C2                                   u2410 21BC  
                                 u3050 0A20                                   u3210 1484  
                                 u4010 0360                                   u2091 1AAC  
                                 u2171 2048                                   u2331 23D0  
                                 u2251 19BE                                   u2411 21B8  
                                 u3051 0A1C                                   u3211 1480  
                                 u4011 035C                                   u2340 1E6E  
                                 u2180 1F20                                   u2260 24B8  
                                 u2420 2218                                   u2500 0E52  
                                 u3060 0A4E                                   u3220 1492  
                                 u4100 03F8                                   u4020 0370  
                                 u2341 1E6A                                   u2181 1F1C  
                                 u2261 24B4                                   u2421 2214  
                                 u2501 0E4E                                   u3061 0A4A  
                                 u3221 148E                                   u4101 03F4  
                                 u4021 036C                                   u2350 1E98  
                                 u2190 1F4A                                   u2270 24E2  
                                 u2430 2242                                   u2510 0E74  
                                 u3070 0A88                                   u3230 14CC  
                                 u3150 134C                                   u4110 0410  
                                 u4030 0380                                   u2351 1E94  
                                 u2191 1F46                                   u2271 24DE  
                                 u2431 223E                                   u2511 0E70  
                                 u3071 0A84                                   u3231 14C8  
                                 u3151 1348                                   u4111 040C  
                                 u4031 037C                                   u2360 2800  
                                 u2280 2526                                   u2440 229E  
                                 u2600 0FE2                                   u2520 0EA2  
                                 u3240 14DA                                   u3160 135A  
                                 u4200 04A8                                   u4120 0420  
                                 u4040 0390                                   u2361 27F8  
                                 u2281 2522                                   u2441 229A  
                                 u2601 0FDE                                   u2521 0E9E  
                                 u3241 14D6                                   u3161 1356  
                                 u4201 04A4                                   u4121 041C  
                                 u4041 038C                                   u2290 2550  
                                 u2450 22C8                                   u2610 1004  
                                 u2530 0EC4                                   u3170 13B6  
                                 u4210 04B8                                   u4130 0430  
                                 u4050 03A8                                   _T2PR 000FBC  
                                 u2291 254C                                   u2451 22C4  
                                 u2611 1000                                   u2531 0EC0  
                                 u3171 13B2                                   u4211 04B4  
                                 u4131 042C                                   u4051 03A4  
                                 u2460 1D36                                   u2380 210C  
                                 u2620 1032                                   u2540 0EF2  
                                 u2700 0B38                                   u3180 140C  
                                 u4300 0558                                   u4220 04C8  
                                 u4140 0440                                   u4060 03B8  
                                 u2461 1D32                                   u2381 2108  
                                 u2621 102E                                   u2541 0EEE  
                                 u2701 0B34                                   u3181 1408  
                                 u4301 0554                                   u4221 04C4  
                                 u4141 043C                                   u4061 03B4  
                                 u2470 1D60                                   u2390 2136  
                                 u2630 1054                                   u2550 0F14  
                                 u2710 0B48                                   u3190 1456  
                                 u4310 0568                                   u4230 04E0  
                                 u4150 0450                                   u4070 03C8  
                                 u2471 1D5C                                   u2391 2132  
                                 u2631 1050                                   u2551 0F10  
                                 u2711 0B44                                   u3191 1452  
                                 u4311 0564                                   u4231 04DC  
                                 u4151 044C                                   u4071 03C4  
                                 u2480 1DE8                                   u2640 1082  
                                 u2560 0F42                                   u2800 0D02  
                                 u2720 0B88                                   u4400 0600  
                                 u4320 0578                                   u4240 04F0  
                                 u4160 0460                                   u4080 03D8  
                                 u2481 1DE4                                   u2641 107E  
                                 u2561 0F3E                                   u2801 0CFE  
                                 u2721 0B84                                   u4401 05FC  
                                 u4321 0574                                   u4241 04EC  
                                 u4161 045C                                   u4081 03D4  
                                 u2378 2802                                   u2490 1E12  
                                 u2650 10AE                                   u2570 0F64  
                                 u2810 0D14                                   u2730 0BC8  
                                 u4410 0618                                   u4330 0588  
                                 u4250 0500                                   u4170 0478  
                                 u4090 03E8                                   u2491 1E0E  
                                 u2651 10AA                                   u2571 0F60  
                                 u2811 0D10                                   u2731 0BC4  
                                 u4411 0614                                   u4331 0584  
                                 u4251 04FC                                   u4171 0474  
                                 u4091 03E4                                   u2580 0F92  
                                 u2820 0D42                                   u2740 0C3E  
                                 u2660 0AC0                                   u2900 06A8  
                                 u4420 0628                                   u4340 0598  
                                 u4260 0510                                   u4180 0488  
                                 u4500 11E6                                   u2581 0F8E  
                                 u2821 0D3E                                   u2741 0C3A  
                                 u2661 0ABC                                   u2901 06A4  
                                 u4421 0624                                   u4341 0594  
                                 u4261 050C                                   u4181 0484  
                                 u4501 11E2                                   u2590 0FB4  
                                 u2830 0D58                                   u2750 0C60  
                                 u2670 0AD2                                   u2910 06B8  
                                 u4430 0638                                   u4350 05B0  
                                 u4270 0520                                   u4190 0498  
                                 u4510 123C                                   u2591 0FB0  
                                 u2831 0D54                                   u2751 0C5C  
                                 u2671 0ACE                                   u2911 06B4  
                                 u4431 0634                                   u4351 05AC  
                                 u4271 051C                                   u4191 0494  
                                 u4511 1238                                   u2840 0D6C  
                                 u2760 0C8A                                   u2680 0AE2  
                                 u2920 06F8                                   u4440 0648  
                                 u4360 05C0                                   u4280 0530  
                                 u4520 12A0                                   u2841 0D68  
                                 u2761 0C86                                   u2681 0ADE  
                                 u2921 06F4                                   u4441 0644  
                                 u4361 05BC                                   u4281 052C  
                                 u4521 129C                                   u2850 0D86  
                                 u2770 0CAE                                   u2690 0B26  
                                 u2930 070A                                   u4450 0658  
                                 u4370 05D0                                   u4290 0548  
                                 u4530 12F6                                   u2851 0D82  
                                 u2771 0CAA                                   u2691 0B22  
                                 u2931 0706                                   u4451 0654  
                                 u4371 05CC                                   u4291 0544  
                                 u4531 12F2                                   u2860 0DCE  
                                 u2780 0CC4                                   u2940 071A  
                                 u4460 0668                                   u4380 05E0  
                                 u2861 0DCA                                   u2781 0CC0  
                                 u2941 0716                                   u4461 0664  
                                 u4381 05DC                                   u1990 241C  
                                 u3750 17D4                                   u2870 0DFE  
                                 u2790 0CE2                                   u2950 0750  
                                 u3910 1670                                   u4390 05F0  
                                 u4470 115E                                   u1991 2418  
                                 u4607 22D2                                   u3751 17D0  
                                 u2871 0DFA                                   u2791 0CDE  
                                 u2951 074C                                   u3911 166C  
                                 u4391 05EC                                   u4471 115A  
                                 u3760 1804                                   u2880 0E2C  
                                 u2960 0760                                   u3920 16A6  
                                 u4480 11C4                                   u4617 1CFE  
                                 u3761 1800                                   u2881 0E28  
                                 u2961 075C                                   u4481 11C0  
                                 u3770 184E                                   u2970 08DA  
                                 u2890 0696                                   u3930 16D4  
                                 u4490 11D4                                   u4707 1ECE  
                                 u4627 1D6A                                   u3771 184A  
                                 u2891 0692                                   u3931 16D0  
                                 u4547 1248                                   u4491 11D0  
                                 u2980 0934                                   u3940 16E8  
                                 u4717 1B0A                                   u4637 2358  
                                 u2981 0930                                   u3941 16E4  
                                 u3925 169A                                   u4557 1302  
                                 u2990 0954                                   u3950 1710  
                                 u4727 1CD2                                   u4647 192E  
                                 u4567 2864                                   u2991 0950  
                                 u2975 08D0                                   u3951 170C  
                                 i2l24 2A1A                                   u3960 1730  
                                 u4737 1BF8                                   u4657 1DB0  
                                 u4577 2140                                   u3961 172C  
                                 u3970 1740                                   u4747 2700  
                                 u4667 1E1C                                   u4587 21C6  
                                 u3971 173C                                   u3980 0330  
                                 u4677 1A1C                                   u4597 224C  
                                 u3981 032C                                   u3990 0340  
                                 u4687 23DE                                   u3991 033C  
                                 u4697 1EA2                                   i2l92 292E  
                                 i2l95 2AD0                                   i2l89 2908  
    Return_Anti_Moves@anti_moves_array 000B                                   _main 10C4  
                  __end_of_AppendMoves 297A                     _YellowInstructions 20DE  
                                 fsr2h 000FDA                                   indf2 000FDF  
                                 fsr2l 000FD9                                   btemp 0057  
                                 _stop 1C08         ??i2_init_colorclick_interrupts 0005  
                    main@initial_color 00BD                                   prodh 000FF4  
                                 prodl 000FF3                                   start 0058  
                 ?i2_color_writetoaddr 0003                        ___fldiv@new_exp 0028  
               __end_of_color_read_Red 2600                        __end_of_HighISR 29FC  
                         ___param_bank 000000                            _turnLeft135 24E4  
                  ?_YellowInstructions 0027                            _turnRight90 1EF2  
                           _AntiYellow 1CDC                       __end_of_LED_init 2A54  
                        ___fltol@sign1 004D                             _AppendTime 2884  
                                ?_main 0001                        __end_of___fldiv 0E40  
                      __end_of___flmul 0AA6                        __end_of___fltol 1762  
                                ?_stop 001C                        __end_of___lwdiv 2476  
                                i2l101 2AC6                                  i1l334 0048  
                                i2l104 2A9E                                  i2l321 278E  
                                i2l324 2A86                                  i2l342 29F8  
                                _TMR0H 000FD4                                  _TMR0L 000FD3  
           __end_of_I2C_2_Master_Start 2ABE                   ??_YellowInstructions 002B  
           __end_of_I2C_2_Master_Write 2A94                       _PinkInstructions 2164  
                   _int_threshold_high 00D7                                  main@b 00BA  
             __end_of_BlueInstructions 1EF2                                  tablat 000FF5  
                                plusw2 000FDB                                  ttemp5 0058  
                                ttemp6 005B                                  ttemp7 005F  
                                status 000FD8                                  wtemp8 0058  
                  detect_color@tempval 00A3                  ??i2_color_writetoaddr 0004  
              __end_of_color_read_Blue 26F0                  _I2C_2_Master_RepStart 2AA0  
                 fullSpeedBackwards@mL 001C                   fullSpeedBackwards@mR 001E  
                     __end_of_AntiPink 1E40                        ?_color_read_Red 000D  
                      __initialization 2790                           __end_of_main 133A  
                 __end_of_detect_color 067C                           __end_of_stop 1CDC  
                _LightBlueInstructions 2270                      ??_RedInstructions 002B  
  __end_of_interrupts_clear_colorclick 2A6E         ?i2_interrupts_clear_colorclick 0001  
          _interrupts_clear_colorclick 2A54                                 ??_main 00B7  
                               ??_stop 0020                          __activetblptr 000000  
                         _turnRight135 2476                      _Return_Anti_Moves 297A  
                          _AppendMoves 2956                           ?_setMotorPWM 0016  
                               _CCPR1H 000FAA                                 _CCPR2H 000FA6  
                               _CCPR3H 000F25                                 _CCPR4H 000F21  
                   ?_Return_Anti_Moves 0009                                 _RC0PPS 000E62  
                               _RC4REG 000EE3                                 _RE2PPS 000E74  
                               _RD5PPS 000E6F                                 _RC7PPS 000E69  
                               _RE4PPS 000E76                                 _RD6PPS 000E70  
                               i2l3040 2AC8                                 i2l3042 2ACC  
                               i2l3050 2A9A                                 i2l3202 29FE  
                               i1l3914 0026                                 i2l3044 2ABE  
                               i1l3916 0036                                 i2l3046 2AC2  
                               i1l3918 0044                                 i2l3048 2A96  
                               i2l2930 2918                                 i2l3910 2A6E  
                               i2l2928 2908                                 i2l3680 275A  
                               i2l3920 29DC                                 i2l3682 2764  
                               i2l3922 29EC                                 _RG6PPS 000E88  
                               i2l3684 276E                                 i2l3676 2740  
                               i2l3924 29F0                                 i2l3686 2778  
                               i2l3678 274A                                 i2l3926 29F4  
                               i2l3688 2782                              ??_HighISR 0006  
             __end_of_color_click_init 2884                                 _RX4PPS 000E15  
                               _TX4REG 000EE4                       __end_of___xxtofl 14EE  
                  ??_Return_Anti_Moves 000D                                 _LowISR 0018  
                        ??_Timer0_init 0009                           _CCPTMRS0bits 000FAD  
          AppendMoves@anti_moves_array 000B                  Return_Time@time_array 000B  
                Return_Time@time_index 0009                                 ___wmul 2930  
                            ??___fldiv 001F                              ??___flmul 0038  
                            ??___fltol 009F                              ??___lwdiv 0013  
                               clear_0 27AE                                 clear_1 27BA  
                               clear_2 27C6                            ?_AntiYellow 002E  
                               isa$std 000001                            ?_AppendTime 0009  
                        ??_Return_Time 000D              __end_of_Return_Anti_Moves 299C  
                           _WhiteLight 2AD2                                 tblptrh 000FF7  
                               tblptrl 000FF6                                 tblptru 000FF8  
                               stop@mL 001C                                 stop@mR 001E  
                    ??_initDCmotorsPWM 000B             i2color_writetoaddr@address 0004  
                     __end_of_turnLeft 1B1A                           ___xxtofl@arg 0013  
                         ___xxtofl@exp 0012                           ___xxtofl@val 0009  
                        ??_Update_RGBC 0016                             __accesstop 0060  
              __end_of__initialization 27CC               __end_of_color_read_Clear 26A0  
             __end_of_color_read_Green 2650                 ?_I2C_2_Master_RepStart 0001  
                        ___rparam_used 000001                              ?_LED_init 0001  
                           ___fltol@f1 0049                       ?_color_read_Blue 000D  
                    _GreenInstructions 237C                        _Interrupts_init 2A1C  
                       __pcstackCOMRAM 0001                 ?_LightBlueInstructions 002C  
                         __pidataBANK0 2ADA                     ?_GreenInstructions 0027  
                       AppendTime@temp 0009                      detect_color@color 00B3  
                  __end_of_Timer0_init 29BC                            MoveBuggy@mL 0037  
                          MoveBuggy@mR 0039                    OrangeInstructions@a 0032  
                  ??_GreenInstructions 002B                MoveBuggy@color_detected 0035  
                            ?_AntiPink 002E           ??_init_colorclick_interrupts 000D  
                  __end_of_Return_Time 2850                      __end_of_MoveBuggy 10C4  
                           __pbssBANK0 0060                             __pbssBANK1 0100  
            __end_of_GreenInstructions 2402                             ??_LED_init 0009  
                              ?_LowISR 0001                      _color_writetoaddr 29BC  
                         _T2CLKCONbits 000FBF                           ?_turnLeft135 0027  
                  __end_of_Update_RGBC 25B0                     ?_color_writetoaddr 000B  
                              ?___wmul 0009               __end_of_PinkInstructions 21EA  
                         ?_turnRight90 0022                    ??_color_writetoaddr 000C  
                            ?___xxtofl 0009                            ?_WhiteLight 0001  
                              _SP4BRGH 000EE6                                _SP4BRGL 000EE5  
                           ??_AntiPink 0032                                _SSP2ADD 000ED6  
                              _SSP2BUF 000ED5                             _color_flag 0055  
                         _detect_color 005C                __end_of_Interrupts_init 2A3A  
                    ?_BlueInstructions 0027                 color_writetoaddr@value 000B  
                     ??_color_read_Red 000F                                _HighISR 0008  
            __end_of_color_writetoaddr 29DC                     WhiteInstructions@a 0044  
                   WhiteInstructions@c 0041                     ??_BlueInstructions 002B  
                      _RedInstructions 22F6                     _I2C_2_Master_Start 2AB4  
                  i2_I2C_2_Master_Idle 2908                     _I2C_2_Master_Write 2A88  
                              __Hparam 0000                    i2_I2C_2_Master_Stop 2ABE  
                              __Lparam 0000                      color_read_Red@tmp 0012  
                          _Timer0_init 299C                    GreenInstructions@mL 0027  
                  GreenInstructions@mR 0029             __end_of_fullSpeedBackwards 1C08  
                              ___fldiv 0AA6                                ___flmul 067C  
                              ___fltol 165A                    ?_I2C_2_Master_Start 0001  
                         turnLeft135@a 002B                                ___lwdiv 2402  
                  ?_I2C_2_Master_Write 0001                           turnLeft90@mL 0022  
                         turnLeft90@mR 0024                                __pcinit 2790  
                              __ramtop 0E00                              ?_turnLeft 001C  
                              __ptext0 10C4                                __ptext1 204E  
                              __ptext2 005C                                __ptext3 133A  
                              __ptext4 165A                                __ptext5 067C  
                              __ptext6 0AA6                                __ptext7 2850  
                              __ptext8 28B6                                __ptext9 2AD2  
                 ?i2_I2C_2_Master_Idle 0001   __end_ofi2_init_colorclick_interrupts 2790  
         i2_init_colorclick_interrupts 2740                              _T2CONbits 000FBD  
                          _Return_Time 2818                             ??___xxtofl 000D  
                 ?i2_I2C_2_Master_Stop 0001                              _T2HLTbits 000FBE  
                       main@lost_timer 00B9                          _RxBufWriteCnt 0054  
                         ?_AppendMoves 0009                                _tmr_ovf 0075  
                 ??_I2C_2_Master_Start 000A                   ??_I2C_2_Master_Write 000A  
                       __pintcode_body 29DC                   end_of_initialization 27CC  
          __end_ofi2_color_writetoaddr 2A1C           Return_Anti_Moves@moves_index 0009  
                    RedInstructions@mL 0027                     main@color_detected 00BC  
                    RedInstructions@mR 0029                                int_func 29DC  
                          _Update_RGBC 2552                      ?_color_click_init 0001  
                         turnRight90@a 0026             __end_of_OrangeInstructions 2270  
                   ??_color_click_init 000D                              AntiPink@a 0034  
                              postdec2 000FDD                                postinc0 000FEE  
                              postinc2 000FDE                             _time_array 013C  
                           _time_index 009E                           ??_AntiYellow 0032  
                      _initDCmotorsPWM 204E                             ??_turnLeft 0020  
                         ??_AppendTime 000F                              _PORTFbits 000F8E  
                   setMotorPWM@negDuty 001B                  ??i2_I2C_2_Master_Idle 0001  
                    __end_of_turnRight 193E                  ??i2_I2C_2_Master_Stop 0002  
                        ___xxtofl@sign 0011                    YellowInstructions@a 002D  
                            _TRISAbits 000F81                     setMotorPWM@posDuty 001A  
                            _TRISBbits 000F82                              _TRISCbits 000F83  
                            _TRISDbits 000F84     __end_of_init_colorclick_interrupts 2740  
        ?i2_init_colorclick_interrupts 0001             _init_colorclick_interrupts 26F0  
                            _TRISEbits 000F85                              _TRISFbits 000F86  
                            _TRISGbits 000F87                              _TRISHbits 000F88  
                          ___fldiv@grs 002A                            ___fldiv@rem 0023  
                   PinkInstructions@mL 0027                     PinkInstructions@mR 0029  
                     fullSpeedAhead@mL 001C                       fullSpeedAhead@mR 001E  
              __end_of_RedInstructions 237C               color_writetoaddr@address 000C  
              ??_I2C_2_Master_RepStart 000A                       ?_Interrupts_init 0001  
                          ___flmul@grs 003D                            _CCP1CONbits 000FAB  
                    ?_color_read_Clear 000D                           _EUSART4RXbuf 0060  
                         _EUSART4TXbuf 0100                            _CCP2CONbits 000FA7  
                    ?_color_read_Green 000D                     __end_of_AntiYellow 1D8E  
                          _CCP3CONbits 000F26                            _CCP4CONbits 000F22  
                   __end_of_AppendTime 28B6                ??_LightBlueInstructions 0030  
                           main@motorL 00C5                             main@motorR 00CE  
                   ??_color_read_Clear 000F                     ??_color_read_Green 000F  
                           _turnLeft90 1FA0                         __end_of_LowISR 0058  
               AppendMoves@moves_index 0009                         _fullSpeedAhead 193E  
                       __end_of___wmul 2956                        AppendMoves@temp 000E  
                   detect_color@dist_B 00B6                     detect_color@dist_G 00B5  
                   detect_color@dist_R 00B4                      _int_threshold_low 004F  
                  color_read_Clear@tmp 0012                    start_initialization 2790  
                        _TxBufWriteCnt 0052                   OrangeInstructions@mL 002C  
                 OrangeInstructions@mR 002E                  Return_Anti_Moves@temp 000E  
                            _MoveBuggy 0E40                    color_read_Green@tmp 0012  
                             ??_LowISR 0006                __end_of_initDCmotorsPWM 20DE  
               __end_of_fullSpeedAhead 1A2C                               ??___wmul 000D  
                          __pdataBANK0 00D7          i2I2C_2_Master_Write@data_byte 0002  
                    ?_PinkInstructions 0027                     Update_RGBC@tempval 0014  
                   ??_PinkInstructions 002B           __end_ofi2_I2C_2_Master_Start 2AD2  
         __end_ofi2_I2C_2_Master_Write 2AA0                              ___fldiv@a 001B  
                            ___fldiv@b 0017                              ___flmul@a 0034  
                            ___flmul@b 0030                            __pbssCOMRAM 004F  
                         ??_WhiteLight 0009                          __pcstackBANK0 009F  
                 AppendTime@time_array 000D                   AppendTime@time_index 000B  
                     ?_RedInstructions 0027                               ?_HighISR 0001  
                           ?_MoveBuggy 0035                       ___lwdiv@dividend 000F  
                         ?_Timer0_init 0001                            ?_turnLeft90 0022  
                      ?_fullSpeedAhead 001C                     BlueInstructions@mL 0027  
                   BlueInstructions@mR 0029                              __pintcode 0008  
                   __end_of_WhiteLight 2ADA                               ?___fldiv 0017  
                             ?___flmul 0030                               ?___fltol 0049  
                             ?___lwdiv 000F                            __pintcodelo 0018  
         ?_interrupts_clear_colorclick 0001                   I2C_2_Master_Read@ack 000B  
                    _WhiteInstructions 1762                   I2C_2_Master_Read@tmp 000C  
                        ?_turnRight135 0027                           ?_Return_Time 0009  
                    _I2C_2_Master_Idle 28E0                     _fullSpeedBackwards 1B1A  
                    _I2C_2_Master_Init 28B6                      _I2C_2_Master_Read 27D6  
                   ?_WhiteInstructions 003B                      _I2C_2_Master_Stop 2AAA  
                         _RxBufReadCnt 0053                     GreenInstructions@a 002D  
                   ?_I2C_2_Master_Idle 0001                     ?_I2C_2_Master_Init 0001  
                   ?_I2C_2_Master_Read 0001                          ??_setMotorPWM 0018  
                   ?_I2C_2_Master_Stop 0001                       ___lwdiv@quotient 0013  
                          turnLeft90@a 0026               initDCmotorsPWM@PWMperiod 0009  
              LightBlueInstructions@mL 002C                LightBlueInstructions@mR 002E  
                  ?_fullSpeedBackwards 001C                    ??_WhiteInstructions 003F  
                  ??_I2C_2_Master_Idle 0009                    ??_I2C_2_Master_Init 0009  
                         ?_Update_RGBC 0014                    ??_I2C_2_Master_Read 000A  
                       ___wmul@product 000D                               _LATAbits 000F79  
                  ??_I2C_2_Master_Stop 000A                               _LATCbits 000F7B  
                             _LATDbits 000F7C                               _LATEbits 000F7D  
                             _LATFbits 000F7E                        Return_Time@temp 0010  
                             _LATGbits 000F7F                               _LATHbits 000F80  
                             _IPR0bits 000E1F                               _PIE0bits 000E29  
                             _LED_init 2A3A                       RedInstructions@a 002D  
                             _PIE4bits 000E2D                               i2u222_40 2918  
                             i2u222_41 2914                            turnRight@mL 001C  
                             i2u223_40 292E                               i2u223_41 292A  
                          turnRight@mR 001E                               i1u378_20 0036  
                             i1u378_21 0032                              _lost_flag 0074  
                             _PIR0bits 000E33                               _PIR4bits 000E37  
                             i2u379_40 29EC                               i2u379_41 29E8  
                             i2u475_47 2750                       ?_initDCmotorsPWM 0009  
                             _SSP2CON2 000EDA                               _SSP2STAT 000ED8  
                 ??_fullSpeedBackwards 0020              __end_of_WhiteInstructions 1850  
                   _OrangeInstructions 21EA                      PinkInstructions@a 002D  
            __end_of_I2C_2_Master_Idle 2908              __end_of_I2C_2_Master_Init 28E0  
            __end_of_I2C_2_Master_Read 2818                      ___wmul@multiplier 0009  
                       ??_turnRight135 002B              __end_of_I2C_2_Master_Stop 2AB4  
                         setMotorPWM@m 0016            I2C_2_Master_Write@data_byte 000A  
        ??_interrupts_clear_colorclick 000E             __end_of_YellowInstructions 2164  
                    ??_color_read_Blue 000F                    ?_OrangeInstructions 002C  
                         _TxBufReadCnt 0051            ?_init_colorclick_interrupts 0001  
                             _AntiPink 1D8E               i2color_writetoaddr@value 0003  
                            _turnRight 1850                    WhiteInstructions@mL 003B  
                  WhiteInstructions@mR 003D          __end_of_I2C_2_Master_RepStart 2AAA  
                   color_read_Blue@tmp 0012                    __end_of_setMotorPWM 165A  
                          ??_MoveBuggy 003B                   i2_I2C_2_Master_Start 2AC8  
                 i2_I2C_2_Master_Write 2A94                           AntiYellow@mL 002E  
                         AntiYellow@mR 0030                               __Hrparam 0000  
                 ??_OrangeInstructions 0030                               __Lrparam 0000  
        __end_of_LightBlueInstructions 22F6            __end_ofi2_I2C_2_Master_Idle 2930  
          __end_ofi2_I2C_2_Master_Stop 2AC8                         turnRight135@mL 0027  
                       turnRight135@mR 0029                          turnLeft135@mL 0027  
                        turnLeft135@mR 0029                             _ANSELBbits 000E9A  
                           _ANSELDbits 000EA7                             _ANSELFbits 000EB4  
                             ___xxtofl 133A                             _T0CON0bits 000FD5  
                           _T0CON1bits 000FD6                        ___lwdiv@divisor 0011  
                    BlueInstructions@a 002D                        ___lwdiv@counter 0015  
                           ?_turnRight 001C                               __ptext10 1762  
                             __ptext11 2818                               __ptext20 2956  
                             __ptext12 297A                               __ptext21 1CDC  
                             __ptext13 0E40                               __ptext30 1A2C  
                             __ptext22 22F6                               __ptext14 20DE  
                             __ptext31 1C08                               __ptext23 1EF2  
                             __ptext15 2164                               __ptext40 26A0  
                             __ptext32 1B1A                               __ptext24 1850  
                             __ptext16 21EA                               __ptext41 2AA0  
                             __ptext33 14EE                               __ptext25 1D8E  
                             __ptext17 2476                               __ptext50 2AAA  
                             __ptext42 27D6                               __ptext34 2930  
                             __ptext26 193E                               __ptext18 2270  
                             __ptext51 2AB4                               __ptext43 299C  
                             __ptext35 2402                               __ptext27 237C  
                             __ptext19 24E4                               __ptext60 2ABE  
                             __ptext52 28E0                               __ptext44 2A3A  
                             __ptext36 2552                               __ptext28 1E40  
                             __ptext61 2AC8                               __ptext53 2884  
                             __ptext45 2A1C                               __ptext37 25B0  
                             __ptext29 1FA0                               __ptext62 2908  
                             __ptext46 2A54                               __ptext38 2600  
                             __ptext47 26F0                               __ptext39 2650  
                             __ptext56 2A6E                               __ptext48 29BC  
                             __ptext57 2740                               __ptext49 2A88  
                             __ptext58 29FC                               __ptext59 2A94  
                         _SSP2CON1bits 000ED9                           _SSP2CON2bits 000EDA  
      ??i2_interrupts_clear_colorclick 0006                 LightBlueInstructions@a 0032  
                           turnLeft@mL 001C                             turnLeft@mR 001E  
                ?i2_I2C_2_Master_Start 0001                  ?i2_I2C_2_Master_Write 0001  
                        ??_turnLeft135 002B                               isa$xinst 000000  
                           _RC4STAbits 000EE7                               int$flags 0057  
                        ??_turnRight90 0026                       _BlueInstructions 1E40  
                             _turnLeft 1A2C                             _INTCONbits 000FF2  
                          AntiYellow@a 0034                            _setMotorPWM 14EE  
                        ?_detect_color 00A3                          turnRight135@a 002B  
                             intlevel1 0000                               intlevel2 0000  
                        turnRight90@mL 0022                          turnRight90@mR 0024  
                     ??_fullSpeedAhead 0020                   __end_of_turnRight135 24E4  
                         ??_turnLeft90 0026                             AntiPink@mL 002E  
                           AntiPink@mR 0030                            _moves_index 0056  
                     _color_click_init 2850                    __end_of_turnLeft135 2552  
                           _SSP2DATPPS 000E1D                             _SSP2CLKPPS 000E1C  
               detect_color@lost_timer 00A5                    __end_of_turnRight90 1FA0  
                        ??_AppendMoves 000D                         ??_detect_color 00A7  
                          ??_turnRight 0020                     __end_of_turnLeft90 204E  
                           _TX4STAbits 000EE8                 ??i2_I2C_2_Master_Start 0002  
               ??i2_I2C_2_Master_Write 0002                   YellowInstructions@mL 0027  
                 YellowInstructions@mR 0029  __end_ofi2_interrupts_clear_colorclick 2A88  
        i2_interrupts_clear_colorclick 2A6E  
