

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Mar 10 00:13:48 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    64                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    73                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    74                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    75                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    76                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    77   000000                     
    78                           ; Generated 06/04/2022 GMT
    79                           ; 
    80                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    81                           ; All rights reserved.
    82                           ; 
    83                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    84                           ; 
    85                           ; Redistribution and use in source and binary forms, with or without modification, are
    86                           ; permitted provided that the following conditions are met:
    87                           ; 
    88                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    89                           ;        conditions and the following disclaimer.
    90                           ; 
    91                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    92                           ;        of conditions and the following disclaimer in the documentation and/or other
    93                           ;        materials provided with the distribution. Publication is not required when
    94                           ;        this file is used in an embedded application.
    95                           ; 
    96                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    97                           ;        software without specific prior written permission.
    98                           ; 
    99                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   100                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   101                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   102                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   103                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   104                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   105                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   106                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   107                           ; 
   108                           ; 
   109                           ; Code-generator required, PIC18F67K40 Definitions
   110                           ; 
   111                           ; SFR Addresses
   112   000000                     
   113                           	psect	idataBANK0
   114   002530                     __pidataBANK0:
   115                           	callstack 0
   116                           
   117                           ;initializer for _int_threshold_high
   118   002530  09C4               	dw	2500
   119   000000                     _T0CON0bits	set	4053
   120   000000                     _T0CON1bits	set	4054
   121   000000                     _TX4REG	set	3812
   122   000000                     _RC4STAbits	set	3815
   123   000000                     _SP4BRGH	set	3814
   124   000000                     _TRISBbits	set	3970
   125   000000                     _TRISCbits	set	3971
   126   000000                     _TRISEbits	set	3973
   127   000000                     _TRISFbits	set	3974
   128   000000                     _TRISGbits	set	3975
   129   000000                     _SSP2CON2bits	set	3802
   130   000000                     _INT1PPS	set	3569
   131   000000                     _SSP2CLKPPS	set	3612
   132   000000                     _SSP2DATPPS	set	3613
   133   000000                     _ANSELDbits	set	3751
   134   000000                     _SSP2ADD	set	3798
   135   000000                     _SSP2CON1bits	set	3801
   136   000000                     _RC4REG	set	3811
   137   000000                     _SP4BRGL	set	3813
   138   000000                     _TX4STAbits	set	3816
   139   000000                     _BAUD4CONbits	set	3817
   140   000000                     _LATAbits	set	3961
   141   000000                     _LATGbits	set	3967
   142   000000                     _LATHbits	set	3968
   143   000000                     _TRISAbits	set	3969
   144   000000                     _SSP2CON2	set	3802
   145   000000                     _TRISDbits	set	3972
   146   000000                     _CCPR4H	set	3873
   147   000000                     _CCPR3H	set	3877
   148   000000                     _SSP2STAT	set	3800
   149   000000                     _SSP2BUF	set	3797
   150   000000                     _IPR0bits	set	3615
   151   000000                     _PIE0bits	set	3625
   152   000000                     _RC7PPS	set	3689
   153   000000                     _RD5PPS	set	3695
   154   000000                     _RE2PPS	set	3700
   155   000000                     _RD6PPS	set	3696
   156   000000                     _T2PR	set	4028
   157   000000                     _T2CONbits	set	4029
   158   000000                     _TRISHbits	set	3976
   159   000000                     _CCPR2H	set	4006
   160   000000                     _CCPR1H	set	4010
   161   000000                     _LATCbits	set	3963
   162   000000                     _LATEbits	set	3965
   163   000000                     _LATFbits	set	3966
   164   000000                     _RE4PPS	set	3702
   165   000000                     _RG6PPS	set	3720
   166   000000                     _ANSELBbits	set	3738
   167   000000                     _TMR0L	set	4051
   168   000000                     _TMR0H	set	4052
   169   000000                     _INTCONbits	set	4082
   170   000000                     _T2CLKCONbits	set	4031
   171   000000                     _T2HLTbits	set	4030
   172   000000                     _CCP1CONbits	set	4011
   173   000000                     _CCPTMRS0bits	set	4013
   174   000000                     _CCP2CONbits	set	4007
   175   000000                     _CCP3CONbits	set	3878
   176   000000                     _CCP4CONbits	set	3874
   177   000000                     _RX4PPS	set	3605
   178   000000                     _PIE4bits	set	3629
   179   000000                     _PIR0bits	set	3635
   180   000000                     _PIR4bits	set	3639
   181   000000                     _RC0PPS	set	3682
   182                           
   183                           ; #config settings
   184                           
   185                           	psect	cinit
   186   002254                     __pcinit:
   187                           	callstack 0
   188   002254                     start_initialization:
   189                           	callstack 0
   190   002254                     __initialization:
   191                           	callstack 0
   192                           
   193                           ; Initialize objects allocated to BANK0 (2 bytes)
   194                           ; load TBLPTR registers with __pidataBANK0
   195   002254  0E30               	movlw	low __pidataBANK0
   196   002256  6EF6               	movwf	tblptrl,c
   197   002258  0E25               	movlw	high __pidataBANK0
   198   00225A  6EF7               	movwf	tblptrh,c
   199   00225C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   200   00225E  6EF8               	movwf	tblptru,c
   201   002260  0009               	tblrd		*+	;fetch initializer
   202   002262  CFF5 F0FA          	movff	tablat,__pdataBANK0
   203   002266  0009               	tblrd		*+	;fetch initializer
   204   002268  CFF5 F0FB          	movff	tablat,__pdataBANK0+1
   205                           
   206                           ; Clear objects allocated to BANK1 (60 bytes)
   207   00226C  EE01  F000         	lfsr	0,__pbssBANK1
   208   002270  0E3C               	movlw	60
   209   002272                     clear_0:
   210   002272  6AEE               	clrf	postinc0,c
   211   002274  06E8               	decf	wreg,f,c
   212   002276  E1FD               	bnz	clear_0
   213                           
   214                           ; Clear objects allocated to BANK0 (102 bytes)
   215   002278  EE00  F060         	lfsr	0,__pbssBANK0
   216   00227C  0E66               	movlw	102
   217   00227E                     clear_1:
   218   00227E  6AEE               	clrf	postinc0,c
   219   002280  06E8               	decf	wreg,f,c
   220   002282  E1FD               	bnz	clear_1
   221                           
   222                           ; Clear objects allocated to COMRAM (8 bytes)
   223   002284  EE00  F04F         	lfsr	0,__pbssCOMRAM
   224   002288  0E08               	movlw	8
   225   00228A                     clear_2:
   226   00228A  6AEE               	clrf	postinc0,c
   227   00228C  06E8               	decf	wreg,f,c
   228   00228E  E1FD               	bnz	clear_2
   229   002290                     end_of_initialization:
   230                           	callstack 0
   231   002290                     __end_of__initialization:
   232                           	callstack 0
   233   002290  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   234   002292  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   235   002294  0100               	movlb	0
   236   002296  EFC9  F008         	goto	_main	;jump to C main() function
   237                           
   238                           	psect	bssCOMRAM
   239   00004F                     __pbssCOMRAM:
   240                           	callstack 0
   241   00004F                     _int_threshold_low:
   242                           	callstack 0
   243   00004F                     	ds	2
   244   000051                     _TxBufReadCnt:
   245                           	callstack 0
   246   000051                     	ds	1
   247   000052                     _TxBufWriteCnt:
   248                           	callstack 0
   249   000052                     	ds	1
   250   000053                     _RxBufReadCnt:
   251                           	callstack 0
   252   000053                     	ds	1
   253   000054                     _RxBufWriteCnt:
   254                           	callstack 0
   255   000054                     	ds	1
   256   000055                     _color_flag:
   257                           	callstack 0
   258   000055                     	ds	1
   259   000056                     _moves_index:
   260                           	callstack 0
   261   000056                     	ds	1
   262                           
   263                           	psect	bssBANK0
   264   000060                     __pbssBANK0:
   265                           	callstack 0
   266   000060                     _EUSART4RXbuf:
   267                           	callstack 0
   268   000060                     	ds	20
   269   000074                     _tmr_ovf:
   270                           	callstack 0
   271   000074                     	ds	1
   272   000075                     _anti_moves_array:
   273                           	callstack 0
   274   000075                     	ds	40
   275   00009D                     _time_array:
   276                           	callstack 0
   277   00009D                     	ds	40
   278   0000C5                     _time_index:
   279                           	callstack 0
   280   0000C5                     	ds	1
   281                           
   282                           	psect	dataBANK0
   283   0000FA                     __pdataBANK0:
   284                           	callstack 0
   285   0000FA                     _int_threshold_high:
   286                           	callstack 0
   287   0000FA                     	ds	2
   288                           
   289                           	psect	bssBANK1
   290   000100                     __pbssBANK1:
   291                           	callstack 0
   292   000100                     _EUSART4TXbuf:
   293                           	callstack 0
   294   000100                     	ds	60
   295                           
   296                           	psect	cstackBANK0
   297   0000C6                     __pcstackBANK0:
   298                           	callstack 0
   299   0000C6                     ??___fltol:
   300                           
   301                           ; 1 bytes @ 0x0
   302   0000C6                     	ds	4
   303   0000CA                     detect_color@tempval:
   304                           	callstack 0
   305                           
   306                           ; 2 bytes @ 0x4
   307   0000CA                     	ds	2
   308   0000CC                     ??_detect_color:
   309                           
   310                           ; 1 bytes @ 0x6
   311   0000CC                     	ds	12
   312   0000D8                     detect_color@color:
   313                           	callstack 0
   314                           
   315                           ; 1 bytes @ 0x12
   316   0000D8                     	ds	1
   317   0000D9                     detect_color@dist_R:
   318                           	callstack 0
   319                           
   320                           ; 1 bytes @ 0x13
   321   0000D9                     	ds	1
   322   0000DA                     detect_color@dist_G:
   323                           	callstack 0
   324                           
   325                           ; 1 bytes @ 0x14
   326   0000DA                     	ds	1
   327   0000DB                     detect_color@dist_B:
   328                           	callstack 0
   329                           
   330                           ; 1 bytes @ 0x15
   331   0000DB                     	ds	1
   332   0000DC                     ??_main:
   333                           
   334                           ; 1 bytes @ 0x16
   335   0000DC                     	ds	2
   336   0000DE                     main@b:
   337                           	callstack 0
   338                           
   339                           ; 1 bytes @ 0x18
   340   0000DE                     	ds	1
   341   0000DF                     main@color_detected:
   342                           	callstack 0
   343                           
   344                           ; 1 bytes @ 0x19
   345   0000DF                     	ds	1
   346   0000E0                     main@initial_color:
   347                           	callstack 0
   348                           
   349                           ; 8 bytes @ 0x1A
   350   0000E0                     	ds	8
   351   0000E8                     main@motorL:
   352                           	callstack 0
   353                           
   354                           ; 9 bytes @ 0x22
   355   0000E8                     	ds	9
   356   0000F1                     main@motorR:
   357                           	callstack 0
   358                           
   359                           ; 9 bytes @ 0x2B
   360   0000F1                     	ds	9
   361                           
   362                           	psect	cstackCOMRAM
   363   000001                     __pcstackCOMRAM:
   364                           	callstack 0
   365   000001                     ??i2_I2C_2_Master_Idle:
   366   000001                     
   367                           ; 1 bytes @ 0x0
   368   000001                     	ds	1
   369   000002                     i2I2C_2_Master_Write@data_byte:
   370                           	callstack 0
   371                           
   372                           ; 1 bytes @ 0x1
   373   000002                     	ds	1
   374   000003                     i2color_writetoaddr@value:
   375                           	callstack 0
   376                           
   377                           ; 1 bytes @ 0x2
   378   000003                     	ds	1
   379   000004                     i2color_writetoaddr@address:
   380                           	callstack 0
   381                           
   382                           ; 1 bytes @ 0x3
   383   000004                     	ds	1
   384   000005                     ??i2_init_colorclick_interrupts:
   385                           
   386                           ; 1 bytes @ 0x4
   387   000005                     	ds	1
   388   000006                     ??_LowISR:
   389   000006                     
   390                           ; 1 bytes @ 0x5
   391   000006                     	ds	3
   392   000009                     ??_I2C_2_Master_Idle:
   393   000009                     ?___wmul:
   394                           	callstack 0
   395   000009                     ?___xxtofl:
   396                           	callstack 0
   397   000009                     initDCmotorsPWM@PWMperiod:
   398                           	callstack 0
   399   000009                     AppendMoves@moves_index:
   400                           	callstack 0
   401   000009                     AppendTime@time_index:
   402                           	callstack 0
   403   000009                     ___wmul@multiplier:
   404                           	callstack 0
   405   000009                     ___xxtofl@val:
   406                           	callstack 0
   407                           
   408                           ; 4 bytes @ 0x8
   409   000009                     	ds	1
   410   00000A                     ??_I2C_2_Master_Read:
   411   00000A                     I2C_2_Master_Write@data_byte:
   412                           	callstack 0
   413                           
   414                           ; 1 bytes @ 0x9
   415   00000A                     	ds	1
   416   00000B                     color_writetoaddr@value:
   417                           	callstack 0
   418   00000B                     I2C_2_Master_Read@ack:
   419                           	callstack 0
   420   00000B                     AppendMoves@anti_moves_array:
   421                           	callstack 0
   422   00000B                     AppendTime@time_array:
   423                           	callstack 0
   424   00000B                     ___wmul@multiplicand:
   425                           	callstack 0
   426                           
   427                           ; 2 bytes @ 0xA
   428   00000B                     	ds	1
   429   00000C                     color_writetoaddr@address:
   430                           	callstack 0
   431   00000C                     I2C_2_Master_Read@tmp:
   432                           	callstack 0
   433                           
   434                           ; 1 bytes @ 0xB
   435   00000C                     	ds	1
   436   00000D                     ??_AppendTime:
   437   00000D                     ??_AppendMoves:
   438   00000D                     ??_color_click_init:
   439   00000D                     ??_init_colorclick_interrupts:
   440   00000D                     ??___xxtofl:
   441   00000D                     ?_color_read_Red:
   442                           	callstack 0
   443   00000D                     ?_color_read_Green:
   444                           	callstack 0
   445   00000D                     ?_color_read_Blue:
   446                           	callstack 0
   447   00000D                     ?_color_read_Clear:
   448                           	callstack 0
   449   00000D                     ___wmul@product:
   450                           	callstack 0
   451                           
   452                           ; 2 bytes @ 0xC
   453   00000D                     	ds	1
   454   00000E                     AppendMoves@temp:
   455                           	callstack 0
   456   00000E                     AppendTime@temp:
   457                           	callstack 0
   458                           
   459                           ; 1 bytes @ 0xD
   460   00000E                     	ds	1
   461   00000F                     ??_color_read_Red:
   462   00000F                     ??_color_read_Green:
   463   00000F                     ??_color_read_Blue:
   464   00000F                     ??_color_read_Clear:
   465   00000F                     ?___lwdiv:
   466                           	callstack 0
   467   00000F                     ___lwdiv@dividend:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0xE
   471   00000F                     	ds	2
   472   000011                     ___xxtofl@sign:
   473                           	callstack 0
   474   000011                     ___lwdiv@divisor:
   475                           	callstack 0
   476                           
   477                           ; 2 bytes @ 0x10
   478   000011                     	ds	1
   479   000012                     ___xxtofl@exp:
   480                           	callstack 0
   481   000012                     color_read_Red@tmp:
   482                           	callstack 0
   483   000012                     color_read_Green@tmp:
   484                           	callstack 0
   485   000012                     color_read_Blue@tmp:
   486                           	callstack 0
   487   000012                     color_read_Clear@tmp:
   488                           	callstack 0
   489                           
   490                           ; 2 bytes @ 0x11
   491   000012                     	ds	1
   492   000013                     ___lwdiv@quotient:
   493                           	callstack 0
   494   000013                     ___xxtofl@arg:
   495                           	callstack 0
   496                           
   497                           ; 4 bytes @ 0x12
   498   000013                     	ds	1
   499   000014                     Update_RGBC@tempval:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0x13
   503   000014                     	ds	1
   504   000015                     ___lwdiv@counter:
   505                           	callstack 0
   506                           
   507                           ; 1 bytes @ 0x14
   508   000015                     	ds	1
   509   000016                     setMotorPWM@m:
   510                           	callstack 0
   511                           
   512                           ; 2 bytes @ 0x15
   513   000016                     	ds	1
   514   000017                     ?___fldiv:
   515                           	callstack 0
   516   000017                     ___fldiv@b:
   517                           	callstack 0
   518                           
   519                           ; 4 bytes @ 0x16
   520   000017                     	ds	1
   521   000018                     ??_setMotorPWM:
   522                           
   523                           ; 1 bytes @ 0x17
   524   000018                     	ds	2
   525   00001A                     setMotorPWM@posDuty:
   526                           	callstack 0
   527                           
   528                           ; 1 bytes @ 0x19
   529   00001A                     	ds	1
   530   00001B                     setMotorPWM@negDuty:
   531                           	callstack 0
   532   00001B                     ___fldiv@a:
   533                           	callstack 0
   534                           
   535                           ; 4 bytes @ 0x1A
   536   00001B                     	ds	1
   537   00001C                     stop@mL:
   538                           	callstack 0
   539   00001C                     turnLeft@mL:
   540                           	callstack 0
   541   00001C                     turnRight@mL:
   542                           	callstack 0
   543   00001C                     fullSpeedAhead@mL:
   544                           	callstack 0
   545   00001C                     fullSpeedBackwards@mL:
   546                           	callstack 0
   547                           
   548                           ; 2 bytes @ 0x1B
   549   00001C                     	ds	2
   550   00001E                     stop@mR:
   551                           	callstack 0
   552   00001E                     turnLeft@mR:
   553                           	callstack 0
   554   00001E                     turnRight@mR:
   555                           	callstack 0
   556   00001E                     fullSpeedAhead@mR:
   557                           	callstack 0
   558   00001E                     fullSpeedBackwards@mR:
   559                           	callstack 0
   560                           
   561                           ; 2 bytes @ 0x1D
   562   00001E                     	ds	1
   563   00001F                     ??___fldiv:
   564                           
   565                           ; 1 bytes @ 0x1E
   566   00001F                     	ds	1
   567   000020                     ??_stop:
   568   000020                     ??_turnLeft:
   569   000020                     ??_turnRight:
   570   000020                     ??_fullSpeedAhead:
   571   000020                     ??_fullSpeedBackwards:
   572                           
   573                           ; 1 bytes @ 0x1F
   574   000020                     	ds	2
   575   000022                     turnLeft90@mL:
   576                           	callstack 0
   577   000022                     turnRight90@mL:
   578                           	callstack 0
   579   000022                     turnRight135@mL:
   580                           	callstack 0
   581   000022                     turnLeft135@mL:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0x21
   585   000022                     	ds	1
   586   000023                     ___fldiv@rem:
   587                           	callstack 0
   588                           
   589                           ; 4 bytes @ 0x22
   590   000023                     	ds	1
   591   000024                     turnLeft90@mR:
   592                           	callstack 0
   593   000024                     turnRight90@mR:
   594                           	callstack 0
   595   000024                     turnRight135@mR:
   596                           	callstack 0
   597   000024                     turnLeft135@mR:
   598                           	callstack 0
   599                           
   600                           ; 2 bytes @ 0x23
   601   000024                     	ds	2
   602   000026                     turnLeft90@a:
   603                           	callstack 0
   604   000026                     turnRight90@a:
   605                           	callstack 0
   606   000026                     turnRight135@a:
   607                           	callstack 0
   608   000026                     turnLeft135@a:
   609                           	callstack 0
   610                           
   611                           ; 1 bytes @ 0x25
   612   000026                     	ds	1
   613   000027                     ___fldiv@sign:
   614                           	callstack 0
   615   000027                     RedInstructions@mL:
   616                           	callstack 0
   617   000027                     GreenInstructions@mL:
   618                           	callstack 0
   619   000027                     BlueInstructions@mL:
   620                           	callstack 0
   621   000027                     YellowInstructions@mL:
   622                           	callstack 0
   623   000027                     PinkInstructions@mL:
   624                           	callstack 0
   625   000027                     OrangeInstructions@mL:
   626                           	callstack 0
   627   000027                     LightBlueInstructions@mL:
   628                           	callstack 0
   629                           
   630                           ; 2 bytes @ 0x26
   631   000027                     	ds	1
   632   000028                     ___fldiv@new_exp:
   633                           	callstack 0
   634                           
   635                           ; 2 bytes @ 0x27
   636   000028                     	ds	1
   637   000029                     RedInstructions@mR:
   638                           	callstack 0
   639   000029                     GreenInstructions@mR:
   640                           	callstack 0
   641   000029                     BlueInstructions@mR:
   642                           	callstack 0
   643   000029                     YellowInstructions@mR:
   644                           	callstack 0
   645   000029                     PinkInstructions@mR:
   646                           	callstack 0
   647   000029                     OrangeInstructions@mR:
   648                           	callstack 0
   649   000029                     LightBlueInstructions@mR:
   650                           	callstack 0
   651                           
   652                           ; 2 bytes @ 0x28
   653   000029                     	ds	1
   654   00002A                     ___fldiv@grs:
   655                           	callstack 0
   656                           
   657                           ; 4 bytes @ 0x29
   658   00002A                     	ds	1
   659   00002B                     ??_RedInstructions:
   660   00002B                     ??_GreenInstructions:
   661   00002B                     ??_BlueInstructions:
   662   00002B                     ??_YellowInstructions:
   663   00002B                     ??_PinkInstructions:
   664   00002B                     ??_OrangeInstructions:
   665   00002B                     ??_LightBlueInstructions:
   666                           
   667                           ; 1 bytes @ 0x2A
   668   00002B                     	ds	2
   669   00002D                     RedInstructions@a:
   670                           	callstack 0
   671   00002D                     GreenInstructions@a:
   672                           	callstack 0
   673   00002D                     BlueInstructions@a:
   674                           	callstack 0
   675   00002D                     YellowInstructions@a:
   676                           	callstack 0
   677   00002D                     PinkInstructions@a:
   678                           	callstack 0
   679   00002D                     OrangeInstructions@a:
   680                           	callstack 0
   681   00002D                     LightBlueInstructions@a:
   682                           	callstack 0
   683                           
   684                           ; 1 bytes @ 0x2C
   685   00002D                     	ds	1
   686   00002E                     ___fldiv@bexp:
   687                           	callstack 0
   688   00002E                     MoveBuggy@color_detected:
   689                           	callstack 0
   690                           
   691                           ; 2 bytes @ 0x2D
   692   00002E                     	ds	1
   693   00002F                     ___fldiv@aexp:
   694                           	callstack 0
   695                           
   696                           ; 1 bytes @ 0x2E
   697   00002F                     	ds	1
   698   000030                     ?___flmul:
   699                           	callstack 0
   700   000030                     MoveBuggy@mL:
   701                           	callstack 0
   702   000030                     ___flmul@b:
   703                           	callstack 0
   704                           
   705                           ; 4 bytes @ 0x2F
   706   000030                     	ds	2
   707   000032                     MoveBuggy@mR:
   708                           	callstack 0
   709                           
   710                           ; 2 bytes @ 0x31
   711   000032                     	ds	2
   712   000034                     ___flmul@a:
   713                           	callstack 0
   714                           
   715                           ; 4 bytes @ 0x33
   716   000034                     	ds	4
   717   000038                     ??___flmul:
   718                           
   719                           ; 1 bytes @ 0x37
   720   000038                     	ds	4
   721   00003C                     ___flmul@sign:
   722                           	callstack 0
   723                           
   724                           ; 1 bytes @ 0x3B
   725   00003C                     	ds	1
   726   00003D                     ___flmul@grs:
   727                           	callstack 0
   728                           
   729                           ; 4 bytes @ 0x3C
   730   00003D                     	ds	4
   731   000041                     ___flmul@aexp:
   732                           	callstack 0
   733                           
   734                           ; 1 bytes @ 0x40
   735   000041                     	ds	1
   736   000042                     ___flmul@bexp:
   737                           	callstack 0
   738                           
   739                           ; 1 bytes @ 0x41
   740   000042                     	ds	1
   741   000043                     ___flmul@prod:
   742                           	callstack 0
   743                           
   744                           ; 4 bytes @ 0x42
   745   000043                     	ds	4
   746   000047                     ___flmul@temp:
   747                           	callstack 0
   748                           
   749                           ; 2 bytes @ 0x46
   750   000047                     	ds	2
   751   000049                     ?___fltol:
   752                           	callstack 0
   753   000049                     ___fltol@f1:
   754                           	callstack 0
   755                           
   756                           ; 4 bytes @ 0x48
   757   000049                     	ds	4
   758   00004D                     ___fltol@sign1:
   759                           	callstack 0
   760                           
   761                           ; 1 bytes @ 0x4C
   762   00004D                     	ds	1
   763   00004E                     ___fltol@exp1:
   764                           	callstack 0
   765                           
   766                           ; 1 bytes @ 0x4D
   767   00004E                     	ds	1
   768                           
   769 ;;
   770 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   771 ;;
   772 ;; *************** function _main *****************
   773 ;; Defined at:
   774 ;;		line 22 in file "main_motor.c"
   775 ;; Parameters:    Size  Location     Type
   776 ;;		None
   777 ;; Auto vars:     Size  Location     Type
   778 ;;  b               1   24[BANK0 ] unsigned char 
   779 ;;  motorR          9   43[BANK0 ] struct DC_motor
   780 ;;  motorL          9   34[BANK0 ] struct DC_motor
   781 ;;  initial_colo    8   26[BANK0 ] struct RGB_val
   782 ;;  color_detect    1   25[BANK0 ] unsigned char 
   783 ;; Return value:  Size  Location     Type
   784 ;;                  1    wreg      void 
   785 ;; Registers used:
   786 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   787 ;; Tracked objects:
   788 ;;		On entry : 0/0
   789 ;;		On exit  : 0/0
   790 ;;		Unchanged: 0/0
   791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   793 ;;      Locals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   794 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   795 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   796 ;;Total ram usage:       30 bytes
   797 ;; Hardware stack levels required when called: 13
   798 ;; This function calls:
   799 ;;		_AppendTime
   800 ;;		_Interrupts_init
   801 ;;		_LED_init
   802 ;;		_MoveBuggy
   803 ;;		_Timer0_init
   804 ;;		_Update_RGBC
   805 ;;		_WhiteLight
   806 ;;		_color_click_init
   807 ;;		_detect_color
   808 ;;		_fullSpeedAhead
   809 ;;		_initDCmotorsPWM
   810 ;;		_stop
   811 ;; This function is called by:
   812 ;;		Startup code after reset
   813 ;; This function uses a non-reentrant model
   814 ;;
   815                           
   816                           	psect	text0
   817   001192                     __ptext0:
   818                           	callstack 0
   819   001192                     _main:
   820                           	callstack 18
   821   001192                     
   822                           ;main_motor.c: 25:     RGB_val initial_color;;main_motor.c: 26:     initial_color.R = 0;
   823   001192  0E00               	movlw	0
   824   001194  0100               	movlb	0	; () banked
   825   001196  6FE1               	movwf	(main@initial_color+1)& (0+255),b
   826   001198  0E00               	movlw	0
   827   00119A  6FE0               	movwf	main@initial_color& (0+255),b
   828                           
   829                           ;main_motor.c: 27:     initial_color.G = 0;
   830   00119C  0E00               	movlw	0
   831   00119E  6FE3               	movwf	(main@initial_color+3)& (0+255),b
   832   0011A0  0E00               	movlw	0
   833   0011A2  6FE2               	movwf	(main@initial_color+2)& (0+255),b
   834                           
   835                           ;main_motor.c: 28:     initial_color.B = 0;
   836   0011A4  0E00               	movlw	0
   837   0011A6  6FE5               	movwf	(main@initial_color+5)& (0+255),b
   838   0011A8  0E00               	movlw	0
   839   0011AA  6FE4               	movwf	(main@initial_color+4)& (0+255),b
   840                           
   841                           ;main_motor.c: 29:     initial_color.C = 0;
   842   0011AC  0E00               	movlw	0
   843   0011AE  6FE7               	movwf	(main@initial_color+7)& (0+255),b
   844   0011B0  0E00               	movlw	0
   845   0011B2  6FE6               	movwf	(main@initial_color+6)& (0+255),b
   846   0011B4                     
   847                           ; BSR set to: 0
   848                           ;main_motor.c: 31:     LED_init();
   849   0011B4  EC69  F012         	call	_LED_init	;wreg free
   850   0011B8                     
   851                           ;main_motor.c: 32:     color_click_init();
   852   0011B8  EC6E  F011         	call	_color_click_init	;wreg free
   853   0011BC                     
   854                           ;main_motor.c: 33:     Interrupts_init();
   855   0011BC  ECD8  F011         	call	_Interrupts_init	;wreg free
   856                           
   857                           ;main_motor.c: 35:     Timer0_init();
   858   0011C0  EC0F  F012         	call	_Timer0_init	;wreg free
   859                           
   860                           ;main_motor.c: 38:     initDCmotorsPWM(99);
   861   0011C4  0E00               	movlw	0
   862   0011C6  6E0A               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   863   0011C8  0E63               	movlw	99
   864   0011CA  6E09               	movwf	initDCmotorsPWM@PWMperiod^0,c
   865   0011CC  EC43  F00D         	call	_initDCmotorsPWM	;wreg free
   866   0011D0                     
   867                           ;main_motor.c: 40:     struct DC_motor motorL, motorR;;main_motor.c: 42:     motorL.powe
      +                          r=0;
   868   0011D0  0E00               	movlw	0
   869   0011D2  0100               	movlb	0	; () banked
   870   0011D4  6FE8               	movwf	main@motorL& (0+255),b
   871   0011D6                     
   872                           ; BSR set to: 0
   873                           ;main_motor.c: 43:     motorL.direction=1;
   874   0011D6  0E01               	movlw	1
   875   0011D8  6FE9               	movwf	(main@motorL+1)& (0+255),b
   876   0011DA                     
   877                           ; BSR set to: 0
   878                           ;main_motor.c: 44:     motorL.brakemode=1;
   879   0011DA  0E01               	movlw	1
   880   0011DC  6FEA               	movwf	(main@motorL+2)& (0+255),b
   881   0011DE                     
   882                           ; BSR set to: 0
   883                           ;main_motor.c: 45:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
   884   0011DE  0EAA               	movlw	170
   885   0011E0  6FED               	movwf	(main@motorL+5)& (0+255),b
   886   0011E2  0E0F               	movlw	15
   887   0011E4  6FEE               	movwf	(main@motorL+6)& (0+255),b
   888   0011E6                     
   889                           ; BSR set to: 0
   890                           ;main_motor.c: 46:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
   891   0011E6  0EA6               	movlw	166
   892   0011E8  6FEF               	movwf	(main@motorL+7)& (0+255),b
   893   0011EA  0E0F               	movlw	15
   894   0011EC  6FF0               	movwf	(main@motorL+8)& (0+255),b
   895   0011EE                     
   896                           ; BSR set to: 0
   897                           ;main_motor.c: 47:     motorL.PWMperiod= T2PR;
   898   0011EE  CFBC F0EB          	movff	4028,main@motorL+3	;volatile
   899   0011F2  6BEC               	clrf	(main@motorL+4)& (0+255),b
   900   0011F4                     
   901                           ; BSR set to: 0
   902                           ;main_motor.c: 49:     motorR.power=0;
   903   0011F4  0E00               	movlw	0
   904   0011F6  6FF1               	movwf	main@motorR& (0+255),b
   905   0011F8                     
   906                           ; BSR set to: 0
   907                           ;main_motor.c: 50:     motorR.direction=1;
   908   0011F8  0E01               	movlw	1
   909   0011FA  6FF2               	movwf	(main@motorR+1)& (0+255),b
   910   0011FC                     
   911                           ; BSR set to: 0
   912                           ;main_motor.c: 51:     motorR.brakemode=1;
   913   0011FC  0E01               	movlw	1
   914   0011FE  6FF3               	movwf	(main@motorR+2)& (0+255),b
   915   001200                     
   916                           ; BSR set to: 0
   917                           ;main_motor.c: 52:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
   918   001200  0E25               	movlw	37
   919   001202  6FF6               	movwf	(main@motorR+5)& (0+255),b
   920   001204  0E0F               	movlw	15
   921   001206  6FF7               	movwf	(main@motorR+6)& (0+255),b
   922   001208                     
   923                           ; BSR set to: 0
   924                           ;main_motor.c: 53:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
   925   001208  0E21               	movlw	33
   926   00120A  6FF8               	movwf	(main@motorR+7)& (0+255),b
   927   00120C  0E0F               	movlw	15
   928   00120E  6FF9               	movwf	(main@motorR+8)& (0+255),b
   929   001210                     
   930                           ; BSR set to: 0
   931                           ;main_motor.c: 54:     motorR.PWMperiod= T2PR;
   932   001210  CFBC F0F4          	movff	4028,main@motorR+3	;volatile
   933   001214  6BF5               	clrf	(main@motorR+4)& (0+255),b
   934   001216                     
   935                           ; BSR set to: 0
   936                           ;main_motor.c: 58:     WhiteLight();
   937   001216  EC94  F012         	call	_WhiteLight	;wreg free
   938   00121A                     l3989:
   939                           
   940                           ;main_motor.c: 60:         Update_RGBC(&initial_color);
   941   00121A  0EE0               	movlw	low main@initial_color
   942   00121C  6E14               	movwf	Update_RGBC@tempval^0,c
   943   00121E  0E00               	movlw	high main@initial_color
   944   001220  6E15               	movwf	(Update_RGBC@tempval+1)^0,c
   945   001222  EC57  F00F         	call	_Update_RGBC	;wreg free
   946   001226                     
   947                           ;main_motor.c: 61:         color_detected = detect_color(&initial_color);
   948   001226  0EE0               	movlw	low main@initial_color
   949   001228  0100               	movlb	0	; () banked
   950   00122A  6FCA               	movwf	detect_color@tempval& (0+255),b
   951   00122C  0E00               	movlw	high main@initial_color
   952   00122E  6FCB               	movwf	(detect_color@tempval+1)& (0+255),b
   953   001230  EC2E  F000         	call	_detect_color	;wreg free
   954   001234  0100               	movlb	0	; () banked
   955   001236  6FDF               	movwf	main@color_detected& (0+255),b
   956   001238                     
   957                           ; BSR set to: 0
   958                           ;main_motor.c: 63:         unsigned char b = 0;
   959   001238  0E00               	movlw	0
   960   00123A  6FDE               	movwf	main@b& (0+255),b
   961   00123C                     
   962                           ; BSR set to: 0
   963                           ;main_motor.c: 64:         if(color_detected == 0){
   964   00123C  51DF               	movf	main@color_detected& (0+255),w,b
   965   00123E  A4D8               	btfss	status,2,c
   966   001240  EF24  F009         	goto	u4091
   967   001244  EF26  F009         	goto	u4090
   968   001248                     u4091:
   969   001248  EF34  F009         	goto	l4001
   970   00124C                     u4090:
   971   00124C                     
   972                           ; BSR set to: 0
   973                           ;main_motor.c: 65:             fullSpeedAhead(&motorL,&motorR);
   974   00124C  0EE8               	movlw	low main@motorL
   975   00124E  6E1C               	movwf	fullSpeedAhead@mL^0,c
   976   001250  0E00               	movlw	high main@motorL
   977   001252  6E1D               	movwf	(fullSpeedAhead@mL+1)^0,c
   978   001254  0EF1               	movlw	low main@motorR
   979   001256  6E1E               	movwf	fullSpeedAhead@mR^0,c
   980   001258  0E00               	movlw	high main@motorR
   981   00125A  6E1F               	movwf	(fullSpeedAhead@mR+1)^0,c
   982   00125C  ECAA  F00B         	call	_fullSpeedAhead	;wreg free
   983   001260                     
   984                           ;main_motor.c: 66:             b++;
   985   001260  0100               	movlb	0	; () banked
   986   001262  2BDE               	incf	main@b& (0+255),f,b
   987                           
   988                           ;main_motor.c: 67:         }
   989   001264  EF0D  F009         	goto	l3989
   990   001268                     l4001:
   991                           
   992                           ; BSR set to: 0
   993   001268  51DF               	movf	main@color_detected& (0+255),w,b
   994   00126A  B4D8               	btfsc	status,2,c
   995   00126C  EF3A  F009         	goto	u4101
   996   001270  EF3C  F009         	goto	u4100
   997   001274                     u4101:
   998   001274  EF0D  F009         	goto	l3989
   999   001278                     u4100:
  1000   001278                     
  1001                           ; BSR set to: 0
  1002                           ;main_motor.c: 70:             AppendTime(b,&time_index,time_array);
  1003   001278  0EC5               	movlw	low _time_index
  1004   00127A  6E09               	movwf	AppendTime@time_index^0,c
  1005   00127C  0E00               	movlw	high _time_index
  1006   00127E  6E0A               	movwf	(AppendTime@time_index+1)^0,c
  1007   001280  0E9D               	movlw	low _time_array
  1008   001282  6E0B               	movwf	AppendTime@time_array^0,c
  1009   001284  0E00               	movlw	high _time_array
  1010   001286  6E0C               	movwf	(AppendTime@time_array+1)^0,c
  1011   001288  0E00               	movlw	0
  1012   00128A  ECFD  F011         	call	_AppendTime
  1013   00128E                     
  1014                           ;main_motor.c: 71:             LATHbits.LATH3 = 1;
  1015   00128E  8680               	bsf	128,3,c	;volatile
  1016                           
  1017                           ;main_motor.c: 73:             while(b>0){
  1018   001290  EF56  F009         	goto	l4011
  1019   001294                     l4007:
  1020                           
  1021                           ; BSR set to: 0
  1022                           ;main_motor.c: 74:                 stop(&motorL,&motorR);
  1023   001294  0EE8               	movlw	low main@motorL
  1024   001296  6E1C               	movwf	stop@mL^0,c
  1025   001298  0E00               	movlw	high main@motorL
  1026   00129A  6E1D               	movwf	(stop@mL+1)^0,c
  1027   00129C  0EF1               	movlw	low main@motorR
  1028   00129E  6E1E               	movwf	stop@mR^0,c
  1029   0012A0  0E00               	movlw	high main@motorR
  1030   0012A2  6E1F               	movwf	(stop@mR+1)^0,c
  1031   0012A4  EC80  F00C         	call	_stop	;wreg free
  1032   0012A8                     
  1033                           ;main_motor.c: 75:                 b--;
  1034   0012A8  0100               	movlb	0	; () banked
  1035   0012AA  07DE               	decf	main@b& (0+255),f,b
  1036   0012AC                     l4011:
  1037                           
  1038                           ;main_motor.c: 73:             while(b>0){
  1039   0012AC  0100               	movlb	0	; () banked
  1040   0012AE  51DE               	movf	main@b& (0+255),w,b
  1041   0012B0  A4D8               	btfss	status,2,c
  1042   0012B2  EF5D  F009         	goto	u4111
  1043   0012B6  EF5F  F009         	goto	u4110
  1044   0012BA                     u4111:
  1045   0012BA  EF4A  F009         	goto	l4007
  1046   0012BE                     u4110:
  1047   0012BE                     
  1048                           ; BSR set to: 0
  1049                           ;main_motor.c: 77:             _delay((unsigned long)((500)*(64000000/4000.0)));
  1050   0012BE  0E29               	movlw	41
  1051   0012C0  0100               	movlb	0	; () banked
  1052   0012C2  6FDD               	movwf	(??_main+1)& (0+255),b
  1053   0012C4  0E96               	movlw	150
  1054   0012C6  6FDC               	movwf	??_main& (0+255),b
  1055   0012C8  0E7F               	movlw	127
  1056   0012CA                     u4127:
  1057   0012CA  2EE8               	decfsz	wreg,f,c
  1058   0012CC  D7FE               	bra	u4127
  1059   0012CE  2FDC               	decfsz	??_main& (0+255),f,b
  1060   0012D0  D7FC               	bra	u4127
  1061   0012D2  2FDD               	decfsz	(??_main+1)& (0+255),f,b
  1062   0012D4  D7FA               	bra	u4127
  1063   0012D6                     
  1064                           ;main_motor.c: 78:             LATHbits.LATH3 = 0;
  1065   0012D6  9680               	bcf	128,3,c	;volatile
  1066   0012D8                     
  1067                           ;main_motor.c: 80:             MoveBuggy(color_detected,&motorL,&motorR);
  1068   0012D8  0100               	movlb	0	; () banked
  1069   0012DA  51DF               	movf	main@color_detected& (0+255),w,b
  1070   0012DC  6FDC               	movwf	??_main& (0+255),b
  1071   0012DE  6BDD               	clrf	(??_main+1)& (0+255),b
  1072   0012E0  C0DC  F02E         	movff	??_main,MoveBuggy@color_detected
  1073   0012E4  C0DD  F02F         	movff	??_main+1,MoveBuggy@color_detected+1
  1074   0012E8  0EE8               	movlw	low main@motorL
  1075   0012EA  6E30               	movwf	MoveBuggy@mL^0,c
  1076   0012EC  0E00               	movlw	high main@motorL
  1077   0012EE  6E31               	movwf	(MoveBuggy@mL+1)^0,c
  1078   0012F0  0EF1               	movlw	low main@motorR
  1079   0012F2  6E32               	movwf	MoveBuggy@mR^0,c
  1080   0012F4  0E00               	movlw	high main@motorR
  1081   0012F6  6E33               	movwf	(MoveBuggy@mR+1)^0,c
  1082   0012F8  ECF8  F007         	call	_MoveBuggy	;wreg free
  1083   0012FC  EF0D  F009         	goto	l3989
  1084   001300  EF2C  F000         	goto	start
  1085   001304                     __end_of_main:
  1086                           	callstack 0
  1087                           
  1088 ;; *************** function _initDCmotorsPWM *****************
  1089 ;; Defined at:
  1090 ;;		line 5 in file "dc_motor.c"
  1091 ;; Parameters:    Size  Location     Type
  1092 ;;  PWMperiod       2    8[COMRAM] unsigned int 
  1093 ;; Auto vars:     Size  Location     Type
  1094 ;;		None
  1095 ;; Return value:  Size  Location     Type
  1096 ;;                  1    wreg      void 
  1097 ;; Registers used:
  1098 ;;		wreg, status,2
  1099 ;; Tracked objects:
  1100 ;;		On entry : 0/0
  1101 ;;		On exit  : 0/0
  1102 ;;		Unchanged: 0/0
  1103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1104 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1107 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1108 ;;Total ram usage:        2 bytes
  1109 ;; Hardware stack levels used: 1
  1110 ;; Hardware stack levels required when called: 7
  1111 ;; This function calls:
  1112 ;;		Nothing
  1113 ;; This function is called by:
  1114 ;;		_main
  1115 ;; This function uses a non-reentrant model
  1116 ;;
  1117                           
  1118                           	psect	text1
  1119   001A86                     __ptext1:
  1120                           	callstack 0
  1121   001A86                     _initDCmotorsPWM:
  1122                           	callstack 23
  1123   001A86                     
  1124                           ;dc_motor.c: 7:     LATEbits.LATE2 = 0;
  1125   001A86  947D               	bcf	125,2,c	;volatile
  1126                           
  1127                           ;dc_motor.c: 8:     TRISEbits.TRISE2 = 0;
  1128   001A88  9485               	bcf	133,2,c	;volatile
  1129                           
  1130                           ;dc_motor.c: 9:     LATEbits.LATE4 = 0;
  1131   001A8A  987D               	bcf	125,4,c	;volatile
  1132                           
  1133                           ;dc_motor.c: 10:     TRISEbits.TRISE4 = 0;
  1134   001A8C  9885               	bcf	133,4,c	;volatile
  1135                           
  1136                           ;dc_motor.c: 11:     LATCbits.LATC7 = 0;
  1137   001A8E  9E7B               	bcf	123,7,c	;volatile
  1138                           
  1139                           ;dc_motor.c: 12:     TRISCbits.TRISC7 = 0;
  1140   001A90  9E83               	bcf	131,7,c	;volatile
  1141                           
  1142                           ;dc_motor.c: 13:     LATGbits.LATG6 = 0;
  1143   001A92  9C7F               	bcf	127,6,c	;volatile
  1144                           
  1145                           ;dc_motor.c: 14:     TRISGbits.TRISG6 = 0;
  1146   001A94  9C87               	bcf	135,6,c	;volatile
  1147   001A96                     
  1148                           ;dc_motor.c: 17:     RE2PPS=0x05;
  1149   001A96  0E05               	movlw	5
  1150   001A98  010E               	movlb	14	; () banked
  1151   001A9A  6F74               	movwf	116,b	;volatile
  1152                           
  1153                           ;dc_motor.c: 18:     RE4PPS=0x06;
  1154   001A9C  0E06               	movlw	6
  1155   001A9E  6F76               	movwf	118,b	;volatile
  1156                           
  1157                           ;dc_motor.c: 19:     RC7PPS=0x07;
  1158   001AA0  0E07               	movlw	7
  1159   001AA2  6F69               	movwf	105,b	;volatile
  1160                           
  1161                           ;dc_motor.c: 20:     RG6PPS=0x08;
  1162   001AA4  0E08               	movlw	8
  1163   001AA6  6F88               	movwf	136,b	;volatile
  1164                           
  1165                           ;dc_motor.c: 23:     T2CONbits.CKPS=0b100;
  1166   001AA8  50BD               	movf	189,w,c	;volatile
  1167   001AAA  0B8F               	andlw	-113
  1168   001AAC  0940               	iorlw	64
  1169   001AAE  6EBD               	movwf	189,c	;volatile
  1170                           
  1171                           ;dc_motor.c: 24:     T2HLTbits.MODE=0b00000;
  1172   001AB0  0EE0               	movlw	-32
  1173   001AB2  16BE               	andwf	190,f,c	;volatile
  1174                           
  1175                           ;dc_motor.c: 25:     T2CLKCONbits.CS=0b0001;
  1176   001AB4  50BF               	movf	191,w,c	;volatile
  1177   001AB6  0BF0               	andlw	-16
  1178   001AB8  0901               	iorlw	1
  1179   001ABA  6EBF               	movwf	191,c	;volatile
  1180   001ABC                     
  1181                           ; BSR set to: 14
  1182                           ;dc_motor.c: 29:     T2PR=PWMperiod;
  1183   001ABC  C009  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  1184   001AC0                     
  1185                           ; BSR set to: 14
  1186                           ;dc_motor.c: 30:     T2CONbits.ON=1;
  1187   001AC0  8EBD               	bsf	189,7,c	;volatile
  1188                           
  1189                           ;dc_motor.c: 34:     CCPR1H=0;
  1190   001AC2  0E00               	movlw	0
  1191   001AC4  6EAA               	movwf	170,c	;volatile
  1192                           
  1193                           ;dc_motor.c: 35:     CCPR2H=0;
  1194   001AC6  0E00               	movlw	0
  1195   001AC8  6EA6               	movwf	166,c	;volatile
  1196                           
  1197                           ;dc_motor.c: 36:     CCPR3H=0;
  1198   001ACA  0E00               	movlw	0
  1199   001ACC  010F               	movlb	15	; () banked
  1200   001ACE  6F25               	movwf	37,b	;volatile
  1201                           
  1202                           ;dc_motor.c: 37:     CCPR4H=0;
  1203   001AD0  0E00               	movlw	0
  1204   001AD2  6F21               	movwf	33,b	;volatile
  1205                           
  1206                           ;dc_motor.c: 40:     CCPTMRS0bits.C1TSEL=0;
  1207   001AD4  0EFC               	movlw	-4
  1208   001AD6  16AD               	andwf	173,f,c	;volatile
  1209                           
  1210                           ;dc_motor.c: 41:     CCPTMRS0bits.C2TSEL=0;
  1211   001AD8  0EF3               	movlw	-13
  1212   001ADA  16AD               	andwf	173,f,c	;volatile
  1213                           
  1214                           ;dc_motor.c: 42:     CCPTMRS0bits.C3TSEL=0;
  1215   001ADC  0ECF               	movlw	-49
  1216   001ADE  16AD               	andwf	173,f,c	;volatile
  1217                           
  1218                           ;dc_motor.c: 43:     CCPTMRS0bits.C4TSEL=0;
  1219   001AE0  0E3F               	movlw	-193
  1220   001AE2  16AD               	andwf	173,f,c	;volatile
  1221   001AE4                     
  1222                           ; BSR set to: 15
  1223                           ;dc_motor.c: 46:     CCP1CONbits.FMT=1;
  1224   001AE4  88AB               	bsf	171,4,c	;volatile
  1225                           
  1226                           ;dc_motor.c: 47:     CCP1CONbits.CCP1MODE=0b1100;
  1227   001AE6  50AB               	movf	171,w,c	;volatile
  1228   001AE8  0BF0               	andlw	-16
  1229   001AEA  090C               	iorlw	12
  1230   001AEC  6EAB               	movwf	171,c	;volatile
  1231   001AEE                     
  1232                           ; BSR set to: 15
  1233                           ;dc_motor.c: 48:     CCP1CONbits.EN=1;
  1234   001AEE  8EAB               	bsf	171,7,c	;volatile
  1235   001AF0                     
  1236                           ; BSR set to: 15
  1237                           ;dc_motor.c: 50:     CCP2CONbits.FMT=1;
  1238   001AF0  88A7               	bsf	167,4,c	;volatile
  1239                           
  1240                           ;dc_motor.c: 51:     CCP2CONbits.CCP2MODE=0b1100;
  1241   001AF2  50A7               	movf	167,w,c	;volatile
  1242   001AF4  0BF0               	andlw	-16
  1243   001AF6  090C               	iorlw	12
  1244   001AF8  6EA7               	movwf	167,c	;volatile
  1245   001AFA                     
  1246                           ; BSR set to: 15
  1247                           ;dc_motor.c: 52:     CCP2CONbits.EN=1;
  1248   001AFA  8EA7               	bsf	167,7,c	;volatile
  1249   001AFC                     
  1250                           ; BSR set to: 15
  1251                           ;dc_motor.c: 54:     CCP3CONbits.FMT=1;
  1252   001AFC  8926               	bsf	38,4,b	;volatile
  1253                           
  1254                           ;dc_motor.c: 55:     CCP3CONbits.CCP3MODE=0b1100;
  1255   001AFE  5126               	movf	38,w,b	;volatile
  1256   001B00  0BF0               	andlw	-16
  1257   001B02  090C               	iorlw	12
  1258   001B04  6F26               	movwf	38,b	;volatile
  1259   001B06                     
  1260                           ; BSR set to: 15
  1261                           ;dc_motor.c: 56:     CCP3CONbits.EN=1;
  1262   001B06  8F26               	bsf	38,7,b	;volatile
  1263   001B08                     
  1264                           ; BSR set to: 15
  1265                           ;dc_motor.c: 58:     CCP4CONbits.FMT=1;
  1266   001B08  8922               	bsf	34,4,b	;volatile
  1267                           
  1268                           ;dc_motor.c: 59:     CCP4CONbits.CCP4MODE=0b1100;
  1269   001B0A  5122               	movf	34,w,b	;volatile
  1270   001B0C  0BF0               	andlw	-16
  1271   001B0E  090C               	iorlw	12
  1272   001B10  6F22               	movwf	34,b	;volatile
  1273   001B12                     
  1274                           ; BSR set to: 15
  1275                           ;dc_motor.c: 60:     CCP4CONbits.EN=1;
  1276   001B12  8F22               	bsf	34,7,b	;volatile
  1277   001B14                     
  1278                           ; BSR set to: 15
  1279   001B14  0012               	return		;funcret
  1280   001B16                     __end_of_initDCmotorsPWM:
  1281                           	callstack 0
  1282                           
  1283 ;; *************** function _fullSpeedAhead *****************
  1284 ;; Defined at:
  1285 ;;		line 151 in file "dc_motor.c"
  1286 ;; Parameters:    Size  Location     Type
  1287 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  1288 ;;		 -> main@motorL(9), 
  1289 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  1290 ;;		 -> main@motorR(9), 
  1291 ;; Auto vars:     Size  Location     Type
  1292 ;;		None
  1293 ;; Return value:  Size  Location     Type
  1294 ;;                  1    wreg      void 
  1295 ;; Registers used:
  1296 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1297 ;; Tracked objects:
  1298 ;;		On entry : 0/0
  1299 ;;		On exit  : 0/0
  1300 ;;		Unchanged: 0/0
  1301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1302 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1304 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1305 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1306 ;;Total ram usage:        6 bytes
  1307 ;; Hardware stack levels used: 1
  1308 ;; Hardware stack levels required when called: 9
  1309 ;; This function calls:
  1310 ;;		_setMotorPWM
  1311 ;; This function is called by:
  1312 ;;		_main
  1313 ;;		_WhiteInstructions
  1314 ;; This function uses a non-reentrant model
  1315 ;;
  1316                           
  1317                           	psect	text2
  1318   001754                     __ptext2:
  1319                           	callstack 0
  1320   001754                     _fullSpeedAhead:
  1321                           	callstack 21
  1322   001754                     
  1323                           ;dc_motor.c: 151: void fullSpeedAhead(DC_motor *mL, DC_motor *mR);dc_motor.c: 152: {;dc_
      +                          motor.c: 154:     mL->direction = 1;
  1324   001754  EE20 F001          	lfsr	2,1
  1325   001758  501C               	movf	fullSpeedAhead@mL^0,w,c
  1326   00175A  26D9               	addwf	fsr2l,f,c
  1327   00175C  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  1328   00175E  22DA               	addwfc	fsr2h,f,c
  1329   001760  0E01               	movlw	1
  1330   001762  6EDF               	movwf	indf2,c
  1331                           
  1332                           ;dc_motor.c: 155:     mL->brakemode = 0;
  1333   001764  EE20 F002          	lfsr	2,2
  1334   001768  501C               	movf	fullSpeedAhead@mL^0,w,c
  1335   00176A  26D9               	addwf	fsr2l,f,c
  1336   00176C  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  1337   00176E  22DA               	addwfc	fsr2h,f,c
  1338   001770  0E00               	movlw	0
  1339   001772  6EDF               	movwf	indf2,c
  1340                           
  1341                           ;dc_motor.c: 157:     mR->direction = 1;
  1342   001774  EE20 F001          	lfsr	2,1
  1343   001778  501E               	movf	fullSpeedAhead@mR^0,w,c
  1344   00177A  26D9               	addwf	fsr2l,f,c
  1345   00177C  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  1346   00177E  22DA               	addwfc	fsr2h,f,c
  1347   001780  0E01               	movlw	1
  1348   001782  6EDF               	movwf	indf2,c
  1349                           
  1350                           ;dc_motor.c: 158:     mR->brakemode = 0;
  1351   001784  EE20 F002          	lfsr	2,2
  1352   001788  501E               	movf	fullSpeedAhead@mR^0,w,c
  1353   00178A  26D9               	addwf	fsr2l,f,c
  1354   00178C  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  1355   00178E  22DA               	addwfc	fsr2h,f,c
  1356   001790  0E00               	movlw	0
  1357   001792  6EDF               	movwf	indf2,c
  1358                           
  1359                           ;dc_motor.c: 162:     if(mL->power>50){mL->power=50;}
  1360   001794  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  1361   001798  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  1362   00179C  50DF               	movf	indf2,w,c
  1363   00179E  0A80               	xorlw	128
  1364   0017A0  0F4D               	addlw	-179
  1365   0017A2  A0D8               	btfss	status,0,c
  1366   0017A4  EFD6  F00B         	goto	u3291
  1367   0017A8  EFD8  F00B         	goto	u3290
  1368   0017AC                     u3291:
  1369   0017AC  EFDE  F00B         	goto	l3525
  1370   0017B0                     u3290:
  1371   0017B0  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  1372   0017B4  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  1373   0017B8  0E32               	movlw	50
  1374   0017BA  6EDF               	movwf	indf2,c
  1375   0017BC                     l3525:
  1376                           
  1377                           ;dc_motor.c: 163:     if(mR->power>50){mR->power=50;}
  1378   0017BC  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  1379   0017C0  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  1380   0017C4  50DF               	movf	indf2,w,c
  1381   0017C6  0A80               	xorlw	128
  1382   0017C8  0F4D               	addlw	-179
  1383   0017CA  A0D8               	btfss	status,0,c
  1384   0017CC  EFEA  F00B         	goto	u3301
  1385   0017D0  EFEC  F00B         	goto	u3300
  1386   0017D4                     u3301:
  1387   0017D4  EFF2  F00B         	goto	l3529
  1388   0017D8                     u3300:
  1389   0017D8  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  1390   0017DC  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  1391   0017E0  0E32               	movlw	50
  1392   0017E2  6EDF               	movwf	indf2,c
  1393   0017E4                     l3529:
  1394                           
  1395                           ;dc_motor.c: 165:     ++mL->power;
  1396   0017E4  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  1397   0017E8  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  1398   0017EC  2ADF               	incf	indf2,f,c
  1399   0017EE                     
  1400                           ;dc_motor.c: 166:     ++mR->power;
  1401   0017EE  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  1402   0017F2  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  1403   0017F6  2ADF               	incf	indf2,f,c
  1404   0017F8                     
  1405                           ;dc_motor.c: 168:     setMotorPWM(mL);
  1406   0017F8  C01C  F016         	movff	fullSpeedAhead@mL,setMotorPWM@m
  1407   0017FC  C01D  F017         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  1408   001800  EC82  F009         	call	_setMotorPWM	;wreg free
  1409   001804                     
  1410                           ;dc_motor.c: 169:     setMotorPWM(mR);
  1411   001804  C01E  F016         	movff	fullSpeedAhead@mR,setMotorPWM@m
  1412   001808  C01F  F017         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  1413   00180C  EC82  F009         	call	_setMotorPWM	;wreg free
  1414   001810                     
  1415                           ;dc_motor.c: 170:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1416   001810  0E05               	movlw	5
  1417   001812  6E21               	movwf	(??_fullSpeedAhead+1)^0,c
  1418   001814  0E0F               	movlw	15
  1419   001816  6E20               	movwf	??_fullSpeedAhead^0,c
  1420   001818  0EF1               	movlw	241
  1421   00181A                     u4137:
  1422   00181A  2EE8               	decfsz	wreg,f,c
  1423   00181C  D7FE               	bra	u4137
  1424   00181E  2E20               	decfsz	??_fullSpeedAhead^0,f,c
  1425   001820  D7FC               	bra	u4137
  1426   001822  2E21               	decfsz	(??_fullSpeedAhead+1)^0,f,c
  1427   001824  D7FA               	bra	u4137
  1428   001826  F000               	nop	
  1429   001828  0012               	return		;funcret
  1430   00182A                     __end_of_fullSpeedAhead:
  1431                           	callstack 0
  1432                           
  1433 ;; *************** function _detect_color *****************
  1434 ;; Defined at:
  1435 ;;		line 99 in file "color.c"
  1436 ;; Parameters:    Size  Location     Type
  1437 ;;  tempval         2    4[BANK0 ] PTR struct RGB_val
  1438 ;;		 -> main@initial_color(8), 
  1439 ;; Auto vars:     Size  Location     Type
  1440 ;;  dist_B          1   21[BANK0 ] unsigned char 
  1441 ;;  dist_G          1   20[BANK0 ] unsigned char 
  1442 ;;  dist_R          1   19[BANK0 ] unsigned char 
  1443 ;;  color           1   18[BANK0 ] unsigned char 
  1444 ;; Return value:  Size  Location     Type
  1445 ;;                  1    wreg      unsigned char 
  1446 ;; Registers used:
  1447 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1448 ;; Tracked objects:
  1449 ;;		On entry : 0/0
  1450 ;;		On exit  : 0/0
  1451 ;;		Unchanged: 0/0
  1452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1453 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1454 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1455 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1456 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1457 ;;Total ram usage:       18 bytes
  1458 ;; Hardware stack levels used: 1
  1459 ;; Hardware stack levels required when called: 8
  1460 ;; This function calls:
  1461 ;;		___fldiv
  1462 ;;		___flmul
  1463 ;;		___fltol
  1464 ;;		___xxtofl
  1465 ;; This function is called by:
  1466 ;;		_main
  1467 ;; This function uses a non-reentrant model
  1468 ;;
  1469                           
  1470                           	psect	text3
  1471   00005C                     __ptext3:
  1472                           	callstack 0
  1473   00005C                     _detect_color:
  1474                           	callstack 22
  1475   00005C                     
  1476                           ;color.c: 99: unsigned char detect_color(RGB_val *tempval);color.c: 100: {;color.c: 101:
      +                               unsigned char color = 0;
  1477   00005C  0E00               	movlw	0
  1478   00005E  0100               	movlb	0	; () banked
  1479   000060  6FD8               	movwf	detect_color@color& (0+255),b
  1480   000062                     
  1481                           ; BSR set to: 0
  1482                           ;color.c: 104:     unsigned char dist_R, dist_G, dist_B;;color.c: 105:     dist_R = ((fl
      +                          oat)(tempval->R)/(float)(tempval->R + tempval->G + tempval->B))*100;
  1483   000062  0E00               	movlw	0
  1484   000064  6E34               	movwf	___flmul@a^0,c
  1485   000066  0E00               	movlw	0
  1486   000068  6E35               	movwf	(___flmul@a+1)^0,c
  1487   00006A  0EC8               	movlw	200
  1488   00006C  6E36               	movwf	(___flmul@a+2)^0,c
  1489   00006E  0E42               	movlw	66
  1490   000070  6E37               	movwf	(___flmul@a+3)^0,c
  1491   000072  EE20 F004          	lfsr	2,4
  1492   000076  51CA               	movf	detect_color@tempval& (0+255),w,b
  1493   000078  26D9               	addwf	fsr2l,f,c
  1494   00007A  51CB               	movf	(detect_color@tempval+1)& (0+255),w,b
  1495   00007C  22DA               	addwfc	fsr2h,f,c
  1496   00007E  CFDE F0CC          	movff	postinc2,??_detect_color
  1497   000082  CFDD F0CD          	movff	postdec2,??_detect_color+1
  1498   000086  EE20 F002          	lfsr	2,2
  1499   00008A  51CA               	movf	detect_color@tempval& (0+255),w,b
  1500   00008C  26D9               	addwf	fsr2l,f,c
  1501   00008E  51CB               	movf	(detect_color@tempval+1)& (0+255),w,b
  1502   000090  22DA               	addwfc	fsr2h,f,c
  1503   000092  CFDE F0CE          	movff	postinc2,??_detect_color+2
  1504   000096  CFDD F0CF          	movff	postdec2,??_detect_color+3
  1505   00009A  C0CA  FFD9         	movff	detect_color@tempval,fsr2l
  1506   00009E  C0CB  FFDA         	movff	detect_color@tempval+1,fsr2h
  1507   0000A2  CFDE F0D0          	movff	postinc2,??_detect_color+4
  1508   0000A6  CFDD F0D1          	movff	postdec2,??_detect_color+5
  1509   0000AA  51CE               	movf	(??_detect_color+2)& (0+255),w,b
  1510   0000AC  25D0               	addwf	(??_detect_color+4)& (0+255),w,b
  1511   0000AE  6FD2               	movwf	(??_detect_color+6)& (0+255),b
  1512   0000B0  51CF               	movf	(??_detect_color+3)& (0+255),w,b
  1513   0000B2  21D1               	addwfc	(??_detect_color+5)& (0+255),w,b
  1514   0000B4  6FD3               	movwf	(??_detect_color+7)& (0+255),b
  1515   0000B6  51CC               	movf	??_detect_color& (0+255),w,b
  1516   0000B8  25D2               	addwf	(??_detect_color+6)& (0+255),w,b
  1517   0000BA  6FD4               	movwf	(??_detect_color+8)& (0+255),b
  1518   0000BC  51CD               	movf	(??_detect_color+1)& (0+255),w,b
  1519   0000BE  21D3               	addwfc	(??_detect_color+7)& (0+255),w,b
  1520   0000C0  6FD5               	movwf	(??_detect_color+9)& (0+255),b
  1521   0000C2  C0D4  F009         	movff	??_detect_color+8,___xxtofl@val
  1522   0000C6  C0D5  F00A         	movff	??_detect_color+9,___xxtofl@val+1
  1523   0000CA  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1524   0000CC  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1525   0000CE  0E00               	movlw	0
  1526   0000D0  EC1E  F007         	call	___xxtofl
  1527   0000D4  C009  F01B         	movff	?___xxtofl,___fldiv@a
  1528   0000D8  C00A  F01C         	movff	?___xxtofl+1,___fldiv@a+1
  1529   0000DC  C00B  F01D         	movff	?___xxtofl+2,___fldiv@a+2
  1530   0000E0  C00C  F01E         	movff	?___xxtofl+3,___fldiv@a+3
  1531   0000E4  C0CA  FFD9         	movff	detect_color@tempval,fsr2l
  1532   0000E8  C0CB  FFDA         	movff	detect_color@tempval+1,fsr2h
  1533   0000EC  CFDE F0D6          	movff	postinc2,??_detect_color+10
  1534   0000F0  CFDD F0D7          	movff	postdec2,??_detect_color+11
  1535   0000F4  C0D6  F009         	movff	??_detect_color+10,___xxtofl@val
  1536   0000F8  C0D7  F00A         	movff	??_detect_color+11,___xxtofl@val+1
  1537   0000FC  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1538   0000FE  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1539   000100  0E00               	movlw	0
  1540   000102  EC1E  F007         	call	___xxtofl
  1541   000106  C009  F017         	movff	?___xxtofl,___fldiv@b
  1542   00010A  C00A  F018         	movff	?___xxtofl+1,___fldiv@b+1
  1543   00010E  C00B  F019         	movff	?___xxtofl+2,___fldiv@b+2
  1544   000112  C00C  F01A         	movff	?___xxtofl+3,___fldiv@b+3
  1545   000116  EC51  F005         	call	___fldiv	;wreg free
  1546   00011A  C017  F030         	movff	?___fldiv,___flmul@b
  1547   00011E  C018  F031         	movff	?___fldiv+1,___flmul@b+1
  1548   000122  C019  F032         	movff	?___fldiv+2,___flmul@b+2
  1549   000126  C01A  F033         	movff	?___fldiv+3,___flmul@b+3
  1550   00012A  EC3C  F003         	call	___flmul	;wreg free
  1551   00012E  C030  F049         	movff	?___flmul,___fltol@f1
  1552   000132  C031  F04A         	movff	?___flmul+1,___fltol@f1+1
  1553   000136  C032  F04B         	movff	?___flmul+2,___fltol@f1+2
  1554   00013A  C033  F04C         	movff	?___flmul+3,___fltol@f1+3
  1555   00013E  EC38  F00A         	call	___fltol	;wreg free
  1556   000142  5049               	movf	?___fltol^0,w,c
  1557   000144  0100               	movlb	0	; () banked
  1558   000146  6FD9               	movwf	detect_color@dist_R& (0+255),b
  1559   000148                     
  1560                           ; BSR set to: 0
  1561                           ;color.c: 106:     dist_G = ((float)(tempval->G)/(float)(tempval->R + tempval->G + tempv
      +                          al->B))*100;
  1562   000148  0E00               	movlw	0
  1563   00014A  6E34               	movwf	___flmul@a^0,c
  1564   00014C  0E00               	movlw	0
  1565   00014E  6E35               	movwf	(___flmul@a+1)^0,c
  1566   000150  0EC8               	movlw	200
  1567   000152  6E36               	movwf	(___flmul@a+2)^0,c
  1568   000154  0E42               	movlw	66
  1569   000156  6E37               	movwf	(___flmul@a+3)^0,c
  1570   000158  EE20 F004          	lfsr	2,4
  1571   00015C  51CA               	movf	detect_color@tempval& (0+255),w,b
  1572   00015E  26D9               	addwf	fsr2l,f,c
  1573   000160  51CB               	movf	(detect_color@tempval+1)& (0+255),w,b
  1574   000162  22DA               	addwfc	fsr2h,f,c
  1575   000164  CFDE F0CC          	movff	postinc2,??_detect_color
  1576   000168  CFDD F0CD          	movff	postdec2,??_detect_color+1
  1577   00016C  EE20 F002          	lfsr	2,2
  1578   000170  51CA               	movf	detect_color@tempval& (0+255),w,b
  1579   000172  26D9               	addwf	fsr2l,f,c
  1580   000174  51CB               	movf	(detect_color@tempval+1)& (0+255),w,b
  1581   000176  22DA               	addwfc	fsr2h,f,c
  1582   000178  CFDE F0CE          	movff	postinc2,??_detect_color+2
  1583   00017C  CFDD F0CF          	movff	postdec2,??_detect_color+3
  1584   000180  C0CA  FFD9         	movff	detect_color@tempval,fsr2l
  1585   000184  C0CB  FFDA         	movff	detect_color@tempval+1,fsr2h
  1586   000188  CFDE F0D0          	movff	postinc2,??_detect_color+4
  1587   00018C  CFDD F0D1          	movff	postdec2,??_detect_color+5
  1588   000190  51CE               	movf	(??_detect_color+2)& (0+255),w,b
  1589   000192  25D0               	addwf	(??_detect_color+4)& (0+255),w,b
  1590   000194  6FD2               	movwf	(??_detect_color+6)& (0+255),b
  1591   000196  51CF               	movf	(??_detect_color+3)& (0+255),w,b
  1592   000198  21D1               	addwfc	(??_detect_color+5)& (0+255),w,b
  1593   00019A  6FD3               	movwf	(??_detect_color+7)& (0+255),b
  1594   00019C  51CC               	movf	??_detect_color& (0+255),w,b
  1595   00019E  25D2               	addwf	(??_detect_color+6)& (0+255),w,b
  1596   0001A0  6FD4               	movwf	(??_detect_color+8)& (0+255),b
  1597   0001A2  51CD               	movf	(??_detect_color+1)& (0+255),w,b
  1598   0001A4  21D3               	addwfc	(??_detect_color+7)& (0+255),w,b
  1599   0001A6  6FD5               	movwf	(??_detect_color+9)& (0+255),b
  1600   0001A8  C0D4  F009         	movff	??_detect_color+8,___xxtofl@val
  1601   0001AC  C0D5  F00A         	movff	??_detect_color+9,___xxtofl@val+1
  1602   0001B0  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1603   0001B2  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1604   0001B4  0E00               	movlw	0
  1605   0001B6  EC1E  F007         	call	___xxtofl
  1606   0001BA  C009  F01B         	movff	?___xxtofl,___fldiv@a
  1607   0001BE  C00A  F01C         	movff	?___xxtofl+1,___fldiv@a+1
  1608   0001C2  C00B  F01D         	movff	?___xxtofl+2,___fldiv@a+2
  1609   0001C6  C00C  F01E         	movff	?___xxtofl+3,___fldiv@a+3
  1610   0001CA  0100               	movlb	0	; () banked
  1611   0001CC  EE20 F002          	lfsr	2,2
  1612   0001D0  51CA               	movf	detect_color@tempval& (0+255),w,b
  1613   0001D2  26D9               	addwf	fsr2l,f,c
  1614   0001D4  51CB               	movf	(detect_color@tempval+1)& (0+255),w,b
  1615   0001D6  22DA               	addwfc	fsr2h,f,c
  1616   0001D8  CFDE F0D6          	movff	postinc2,??_detect_color+10
  1617   0001DC  CFDD F0D7          	movff	postdec2,??_detect_color+11
  1618   0001E0  C0D6  F009         	movff	??_detect_color+10,___xxtofl@val
  1619   0001E4  C0D7  F00A         	movff	??_detect_color+11,___xxtofl@val+1
  1620   0001E8  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1621   0001EA  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1622   0001EC  0E00               	movlw	0
  1623   0001EE  EC1E  F007         	call	___xxtofl
  1624   0001F2  C009  F017         	movff	?___xxtofl,___fldiv@b
  1625   0001F6  C00A  F018         	movff	?___xxtofl+1,___fldiv@b+1
  1626   0001FA  C00B  F019         	movff	?___xxtofl+2,___fldiv@b+2
  1627   0001FE  C00C  F01A         	movff	?___xxtofl+3,___fldiv@b+3
  1628   000202  EC51  F005         	call	___fldiv	;wreg free
  1629   000206  C017  F030         	movff	?___fldiv,___flmul@b
  1630   00020A  C018  F031         	movff	?___fldiv+1,___flmul@b+1
  1631   00020E  C019  F032         	movff	?___fldiv+2,___flmul@b+2
  1632   000212  C01A  F033         	movff	?___fldiv+3,___flmul@b+3
  1633   000216  EC3C  F003         	call	___flmul	;wreg free
  1634   00021A  C030  F049         	movff	?___flmul,___fltol@f1
  1635   00021E  C031  F04A         	movff	?___flmul+1,___fltol@f1+1
  1636   000222  C032  F04B         	movff	?___flmul+2,___fltol@f1+2
  1637   000226  C033  F04C         	movff	?___flmul+3,___fltol@f1+3
  1638   00022A  EC38  F00A         	call	___fltol	;wreg free
  1639   00022E  5049               	movf	?___fltol^0,w,c
  1640   000230  0100               	movlb	0	; () banked
  1641   000232  6FDA               	movwf	detect_color@dist_G& (0+255),b
  1642   000234                     
  1643                           ; BSR set to: 0
  1644                           ;color.c: 107:     dist_B = ((float)(tempval->B)/(float)(tempval->R + tempval->G + tempv
      +                          al->B))*100;
  1645   000234  0E00               	movlw	0
  1646   000236  6E34               	movwf	___flmul@a^0,c
  1647   000238  0E00               	movlw	0
  1648   00023A  6E35               	movwf	(___flmul@a+1)^0,c
  1649   00023C  0EC8               	movlw	200
  1650   00023E  6E36               	movwf	(___flmul@a+2)^0,c
  1651   000240  0E42               	movlw	66
  1652   000242  6E37               	movwf	(___flmul@a+3)^0,c
  1653   000244  EE20 F004          	lfsr	2,4
  1654   000248  51CA               	movf	detect_color@tempval& (0+255),w,b
  1655   00024A  26D9               	addwf	fsr2l,f,c
  1656   00024C  51CB               	movf	(detect_color@tempval+1)& (0+255),w,b
  1657   00024E  22DA               	addwfc	fsr2h,f,c
  1658   000250  CFDE F0CC          	movff	postinc2,??_detect_color
  1659   000254  CFDD F0CD          	movff	postdec2,??_detect_color+1
  1660   000258  EE20 F002          	lfsr	2,2
  1661   00025C  51CA               	movf	detect_color@tempval& (0+255),w,b
  1662   00025E  26D9               	addwf	fsr2l,f,c
  1663   000260  51CB               	movf	(detect_color@tempval+1)& (0+255),w,b
  1664   000262  22DA               	addwfc	fsr2h,f,c
  1665   000264  CFDE F0CE          	movff	postinc2,??_detect_color+2
  1666   000268  CFDD F0CF          	movff	postdec2,??_detect_color+3
  1667   00026C  C0CA  FFD9         	movff	detect_color@tempval,fsr2l
  1668   000270  C0CB  FFDA         	movff	detect_color@tempval+1,fsr2h
  1669   000274  CFDE F0D0          	movff	postinc2,??_detect_color+4
  1670   000278  CFDD F0D1          	movff	postdec2,??_detect_color+5
  1671   00027C  51CE               	movf	(??_detect_color+2)& (0+255),w,b
  1672   00027E  25D0               	addwf	(??_detect_color+4)& (0+255),w,b
  1673   000280  6FD2               	movwf	(??_detect_color+6)& (0+255),b
  1674   000282  51CF               	movf	(??_detect_color+3)& (0+255),w,b
  1675   000284  21D1               	addwfc	(??_detect_color+5)& (0+255),w,b
  1676   000286  6FD3               	movwf	(??_detect_color+7)& (0+255),b
  1677   000288  51CC               	movf	??_detect_color& (0+255),w,b
  1678   00028A  25D2               	addwf	(??_detect_color+6)& (0+255),w,b
  1679   00028C  6FD4               	movwf	(??_detect_color+8)& (0+255),b
  1680   00028E  51CD               	movf	(??_detect_color+1)& (0+255),w,b
  1681   000290  21D3               	addwfc	(??_detect_color+7)& (0+255),w,b
  1682   000292  6FD5               	movwf	(??_detect_color+9)& (0+255),b
  1683   000294  C0D4  F009         	movff	??_detect_color+8,___xxtofl@val
  1684   000298  C0D5  F00A         	movff	??_detect_color+9,___xxtofl@val+1
  1685   00029C  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1686   00029E  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1687   0002A0  0E00               	movlw	0
  1688   0002A2  EC1E  F007         	call	___xxtofl
  1689   0002A6  C009  F01B         	movff	?___xxtofl,___fldiv@a
  1690   0002AA  C00A  F01C         	movff	?___xxtofl+1,___fldiv@a+1
  1691   0002AE  C00B  F01D         	movff	?___xxtofl+2,___fldiv@a+2
  1692   0002B2  C00C  F01E         	movff	?___xxtofl+3,___fldiv@a+3
  1693   0002B6  0100               	movlb	0	; () banked
  1694   0002B8  EE20 F004          	lfsr	2,4
  1695   0002BC  51CA               	movf	detect_color@tempval& (0+255),w,b
  1696   0002BE  26D9               	addwf	fsr2l,f,c
  1697   0002C0  51CB               	movf	(detect_color@tempval+1)& (0+255),w,b
  1698   0002C2  22DA               	addwfc	fsr2h,f,c
  1699   0002C4  CFDE F0D6          	movff	postinc2,??_detect_color+10
  1700   0002C8  CFDD F0D7          	movff	postdec2,??_detect_color+11
  1701   0002CC  C0D6  F009         	movff	??_detect_color+10,___xxtofl@val
  1702   0002D0  C0D7  F00A         	movff	??_detect_color+11,___xxtofl@val+1
  1703   0002D4  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1704   0002D6  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1705   0002D8  0E00               	movlw	0
  1706   0002DA  EC1E  F007         	call	___xxtofl
  1707   0002DE  C009  F017         	movff	?___xxtofl,___fldiv@b
  1708   0002E2  C00A  F018         	movff	?___xxtofl+1,___fldiv@b+1
  1709   0002E6  C00B  F019         	movff	?___xxtofl+2,___fldiv@b+2
  1710   0002EA  C00C  F01A         	movff	?___xxtofl+3,___fldiv@b+3
  1711   0002EE  EC51  F005         	call	___fldiv	;wreg free
  1712   0002F2  C017  F030         	movff	?___fldiv,___flmul@b
  1713   0002F6  C018  F031         	movff	?___fldiv+1,___flmul@b+1
  1714   0002FA  C019  F032         	movff	?___fldiv+2,___flmul@b+2
  1715   0002FE  C01A  F033         	movff	?___fldiv+3,___flmul@b+3
  1716   000302  EC3C  F003         	call	___flmul	;wreg free
  1717   000306  C030  F049         	movff	?___flmul,___fltol@f1
  1718   00030A  C031  F04A         	movff	?___flmul+1,___fltol@f1+1
  1719   00030E  C032  F04B         	movff	?___flmul+2,___fltol@f1+2
  1720   000312  C033  F04C         	movff	?___flmul+3,___fltol@f1+3
  1721   000316  EC38  F00A         	call	___fltol	;wreg free
  1722   00031A  5049               	movf	?___fltol^0,w,c
  1723   00031C  0100               	movlb	0	; () banked
  1724   00031E  6FDB               	movwf	detect_color@dist_B& (0+255),b
  1725   000320                     
  1726                           ; BSR set to: 0
  1727                           ;color.c: 109:     if(color_flag){
  1728   000320  5055               	movf	_color_flag^0,w,c
  1729   000322  B4D8               	btfsc	status,2,c
  1730   000324  EF96  F001         	goto	u3601
  1731   000328  EF98  F001         	goto	u3600
  1732   00032C                     u3601:
  1733   00032C  EF38  F003         	goto	l42
  1734   000330                     u3600:
  1735   000330                     
  1736                           ; BSR set to: 0
  1737                           ;color.c: 110:         if((74<=dist_R) && (dist_R<=76) && (10<=dist_G) && (dist_G<=12) &
      +                          & (13<=dist_B) && (dist_B<=15)){
  1738   000330  0E49               	movlw	73
  1739   000332  65D9               	cpfsgt	detect_color@dist_R& (0+255),b
  1740   000334  EF9E  F001         	goto	u3611
  1741   000338  EFA0  F001         	goto	u3610
  1742   00033C                     u3611:
  1743   00033C  EFCC  F001         	goto	l3853
  1744   000340                     u3610:
  1745   000340                     
  1746                           ; BSR set to: 0
  1747   000340  0E4D               	movlw	77
  1748   000342  61D9               	cpfslt	detect_color@dist_R& (0+255),b
  1749   000344  EFA6  F001         	goto	u3621
  1750   000348  EFA8  F001         	goto	u3620
  1751   00034C                     u3621:
  1752   00034C  EFCC  F001         	goto	l3853
  1753   000350                     u3620:
  1754   000350                     
  1755                           ; BSR set to: 0
  1756   000350  0E09               	movlw	9
  1757   000352  65DA               	cpfsgt	detect_color@dist_G& (0+255),b
  1758   000354  EFAE  F001         	goto	u3631
  1759   000358  EFB0  F001         	goto	u3630
  1760   00035C                     u3631:
  1761   00035C  EFCC  F001         	goto	l3853
  1762   000360                     u3630:
  1763   000360                     
  1764                           ; BSR set to: 0
  1765   000360  0E0D               	movlw	13
  1766   000362  61DA               	cpfslt	detect_color@dist_G& (0+255),b
  1767   000364  EFB6  F001         	goto	u3641
  1768   000368  EFB8  F001         	goto	u3640
  1769   00036C                     u3641:
  1770   00036C  EFCC  F001         	goto	l3853
  1771   000370                     u3640:
  1772   000370                     
  1773                           ; BSR set to: 0
  1774   000370  0E0C               	movlw	12
  1775   000372  65DB               	cpfsgt	detect_color@dist_B& (0+255),b
  1776   000374  EFBE  F001         	goto	u3651
  1777   000378  EFC0  F001         	goto	u3650
  1778   00037C                     u3651:
  1779   00037C  EFCC  F001         	goto	l3853
  1780   000380                     u3650:
  1781   000380                     
  1782                           ; BSR set to: 0
  1783   000380  0E10               	movlw	16
  1784   000382  61DB               	cpfslt	detect_color@dist_B& (0+255),b
  1785   000384  EFC6  F001         	goto	u3661
  1786   000388  EFC8  F001         	goto	u3660
  1787   00038C                     u3661:
  1788   00038C  EFCC  F001         	goto	l3853
  1789   000390                     u3660:
  1790   000390                     
  1791                           ; BSR set to: 0
  1792                           ;color.c: 111:             color = 1;
  1793   000390  0E01               	movlw	1
  1794   000392  6FD8               	movwf	detect_color@color& (0+255),b
  1795                           
  1796                           ;color.c: 112:         }
  1797   000394  EF38  F003         	goto	l42
  1798   000398                     l3853:
  1799                           
  1800                           ; BSR set to: 0
  1801   000398  0E23               	movlw	35
  1802   00039A  65D9               	cpfsgt	detect_color@dist_R& (0+255),b
  1803   00039C  EFD2  F001         	goto	u3671
  1804   0003A0  EFD4  F001         	goto	u3670
  1805   0003A4                     u3671:
  1806   0003A4  EF00  F002         	goto	l3867
  1807   0003A8                     u3670:
  1808   0003A8                     
  1809                           ; BSR set to: 0
  1810   0003A8  0E27               	movlw	39
  1811   0003AA  61D9               	cpfslt	detect_color@dist_R& (0+255),b
  1812   0003AC  EFDA  F001         	goto	u3681
  1813   0003B0  EFDC  F001         	goto	u3680
  1814   0003B4                     u3681:
  1815   0003B4  EF00  F002         	goto	l3867
  1816   0003B8                     u3680:
  1817   0003B8                     
  1818                           ; BSR set to: 0
  1819   0003B8  0E28               	movlw	40
  1820   0003BA  65DA               	cpfsgt	detect_color@dist_G& (0+255),b
  1821   0003BC  EFE2  F001         	goto	u3691
  1822   0003C0  EFE4  F001         	goto	u3690
  1823   0003C4                     u3691:
  1824   0003C4  EF00  F002         	goto	l3867
  1825   0003C8                     u3690:
  1826   0003C8                     
  1827                           ; BSR set to: 0
  1828   0003C8  0E2C               	movlw	44
  1829   0003CA  61DA               	cpfslt	detect_color@dist_G& (0+255),b
  1830   0003CC  EFEA  F001         	goto	u3701
  1831   0003D0  EFEC  F001         	goto	u3700
  1832   0003D4                     u3701:
  1833   0003D4  EF00  F002         	goto	l3867
  1834   0003D8                     u3700:
  1835   0003D8                     
  1836                           ; BSR set to: 0
  1837   0003D8  0E13               	movlw	19
  1838   0003DA  65DB               	cpfsgt	detect_color@dist_B& (0+255),b
  1839   0003DC  EFF2  F001         	goto	u3711
  1840   0003E0  EFF4  F001         	goto	u3710
  1841   0003E4                     u3711:
  1842   0003E4  EF00  F002         	goto	l3867
  1843   0003E8                     u3710:
  1844   0003E8                     
  1845                           ; BSR set to: 0
  1846   0003E8  0E17               	movlw	23
  1847   0003EA  61DB               	cpfslt	detect_color@dist_B& (0+255),b
  1848   0003EC  EFFA  F001         	goto	u3721
  1849   0003F0  EFFC  F001         	goto	u3720
  1850   0003F4                     u3721:
  1851   0003F4  EF00  F002         	goto	l3867
  1852   0003F8                     u3720:
  1853   0003F8                     
  1854                           ; BSR set to: 0
  1855                           ;color.c: 114:             color = 2;
  1856   0003F8  0E02               	movlw	2
  1857   0003FA  6FD8               	movwf	detect_color@color& (0+255),b
  1858                           
  1859                           ;color.c: 115:         }
  1860   0003FC  EF38  F003         	goto	l42
  1861   000400                     l3867:
  1862                           
  1863                           ; BSR set to: 0
  1864   000400  0E1C               	movlw	28
  1865   000402  65D9               	cpfsgt	detect_color@dist_R& (0+255),b
  1866   000404  EF06  F002         	goto	u3731
  1867   000408  EF08  F002         	goto	u3730
  1868   00040C                     u3731:
  1869   00040C  EF34  F002         	goto	l3881
  1870   000410                     u3730:
  1871   000410                     
  1872                           ; BSR set to: 0
  1873   000410  0E23               	movlw	35
  1874   000412  61D9               	cpfslt	detect_color@dist_R& (0+255),b
  1875   000414  EF0E  F002         	goto	u3741
  1876   000418  EF10  F002         	goto	u3740
  1877   00041C                     u3741:
  1878   00041C  EF34  F002         	goto	l3881
  1879   000420                     u3740:
  1880   000420                     
  1881                           ; BSR set to: 0
  1882   000420  0E1F               	movlw	31
  1883   000422  65DA               	cpfsgt	detect_color@dist_G& (0+255),b
  1884   000424  EF16  F002         	goto	u3751
  1885   000428  EF18  F002         	goto	u3750
  1886   00042C                     u3751:
  1887   00042C  EF34  F002         	goto	l3881
  1888   000430                     u3750:
  1889   000430                     
  1890                           ; BSR set to: 0
  1891   000430  0E27               	movlw	39
  1892   000432  61DA               	cpfslt	detect_color@dist_G& (0+255),b
  1893   000434  EF1E  F002         	goto	u3761
  1894   000438  EF20  F002         	goto	u3760
  1895   00043C                     u3761:
  1896   00043C  EF34  F002         	goto	l3881
  1897   000440                     u3760:
  1898   000440                     
  1899                           ; BSR set to: 0
  1900   000440  0E1E               	movlw	30
  1901   000442  65DB               	cpfsgt	detect_color@dist_B& (0+255),b
  1902   000444  EF26  F002         	goto	u3771
  1903   000448  EF28  F002         	goto	u3770
  1904   00044C                     u3771:
  1905   00044C  EF34  F002         	goto	l3881
  1906   000450                     u3770:
  1907   000450                     
  1908                           ; BSR set to: 0
  1909   000450  0E26               	movlw	38
  1910   000452  61DB               	cpfslt	detect_color@dist_B& (0+255),b
  1911   000454  EF2E  F002         	goto	u3781
  1912   000458  EF30  F002         	goto	u3780
  1913   00045C                     u3781:
  1914   00045C  EF34  F002         	goto	l3881
  1915   000460                     u3780:
  1916   000460                     
  1917                           ; BSR set to: 0
  1918                           ;color.c: 117:             color = 3;
  1919   000460  0E03               	movlw	3
  1920   000462  6FD8               	movwf	detect_color@color& (0+255),b
  1921                           
  1922                           ;color.c: 118:         }
  1923   000464  EF38  F003         	goto	l42
  1924   000468                     l3881:
  1925                           
  1926                           ; BSR set to: 0
  1927   000468  0E31               	movlw	49
  1928   00046A  65D9               	cpfsgt	detect_color@dist_R& (0+255),b
  1929   00046C  EF3A  F002         	goto	u3791
  1930   000470  EF3C  F002         	goto	u3790
  1931   000474                     u3791:
  1932   000474  EF68  F002         	goto	l3895
  1933   000478                     u3790:
  1934   000478                     
  1935                           ; BSR set to: 0
  1936   000478  0E35               	movlw	53
  1937   00047A  61D9               	cpfslt	detect_color@dist_R& (0+255),b
  1938   00047C  EF42  F002         	goto	u3801
  1939   000480  EF44  F002         	goto	u3800
  1940   000484                     u3801:
  1941   000484  EF68  F002         	goto	l3895
  1942   000488                     u3800:
  1943   000488                     
  1944                           ; BSR set to: 0
  1945   000488  0E1D               	movlw	29
  1946   00048A  65DA               	cpfsgt	detect_color@dist_G& (0+255),b
  1947   00048C  EF4A  F002         	goto	u3811
  1948   000490  EF4C  F002         	goto	u3810
  1949   000494                     u3811:
  1950   000494  EF68  F002         	goto	l3895
  1951   000498                     u3810:
  1952   000498                     
  1953                           ; BSR set to: 0
  1954   000498  0E21               	movlw	33
  1955   00049A  61DA               	cpfslt	detect_color@dist_G& (0+255),b
  1956   00049C  EF52  F002         	goto	u3821
  1957   0004A0  EF54  F002         	goto	u3820
  1958   0004A4                     u3821:
  1959   0004A4  EF68  F002         	goto	l3895
  1960   0004A8                     u3820:
  1961   0004A8                     
  1962                           ; BSR set to: 0
  1963   0004A8  0E10               	movlw	16
  1964   0004AA  65DB               	cpfsgt	detect_color@dist_B& (0+255),b
  1965   0004AC  EF5A  F002         	goto	u3831
  1966   0004B0  EF5C  F002         	goto	u3830
  1967   0004B4                     u3831:
  1968   0004B4  EF68  F002         	goto	l3895
  1969   0004B8                     u3830:
  1970   0004B8                     
  1971                           ; BSR set to: 0
  1972   0004B8  0E14               	movlw	20
  1973   0004BA  61DB               	cpfslt	detect_color@dist_B& (0+255),b
  1974   0004BC  EF62  F002         	goto	u3841
  1975   0004C0  EF64  F002         	goto	u3840
  1976   0004C4                     u3841:
  1977   0004C4  EF68  F002         	goto	l3895
  1978   0004C8                     u3840:
  1979   0004C8                     
  1980                           ; BSR set to: 0
  1981                           ;color.c: 120:             color = 4;
  1982   0004C8  0E04               	movlw	4
  1983   0004CA  6FD8               	movwf	detect_color@color& (0+255),b
  1984                           
  1985                           ;color.c: 121:         }
  1986   0004CC  EF38  F003         	goto	l42
  1987   0004D0                     l3895:
  1988                           
  1989                           ; BSR set to: 0
  1990   0004D0  0E2F               	movlw	47
  1991   0004D2  65D9               	cpfsgt	detect_color@dist_R& (0+255),b
  1992   0004D4  EF6E  F002         	goto	u3851
  1993   0004D8  EF70  F002         	goto	u3850
  1994   0004DC                     u3851:
  1995   0004DC  EF9C  F002         	goto	l3909
  1996   0004E0                     u3850:
  1997   0004E0                     
  1998                           ; BSR set to: 0
  1999   0004E0  0E33               	movlw	51
  2000   0004E2  61D9               	cpfslt	detect_color@dist_R& (0+255),b
  2001   0004E4  EF76  F002         	goto	u3861
  2002   0004E8  EF78  F002         	goto	u3860
  2003   0004EC                     u3861:
  2004   0004EC  EF9C  F002         	goto	l3909
  2005   0004F0                     u3860:
  2006   0004F0                     
  2007                           ; BSR set to: 0
  2008   0004F0  0E1B               	movlw	27
  2009   0004F2  65DA               	cpfsgt	detect_color@dist_G& (0+255),b
  2010   0004F4  EF7E  F002         	goto	u3871
  2011   0004F8  EF80  F002         	goto	u3870
  2012   0004FC                     u3871:
  2013   0004FC  EF9C  F002         	goto	l3909
  2014   000500                     u3870:
  2015   000500                     
  2016                           ; BSR set to: 0
  2017   000500  0E1F               	movlw	31
  2018   000502  61DA               	cpfslt	detect_color@dist_G& (0+255),b
  2019   000504  EF86  F002         	goto	u3881
  2020   000508  EF88  F002         	goto	u3880
  2021   00050C                     u3881:
  2022   00050C  EF9C  F002         	goto	l3909
  2023   000510                     u3880:
  2024   000510                     
  2025                           ; BSR set to: 0
  2026   000510  0E14               	movlw	20
  2027   000512  65DB               	cpfsgt	detect_color@dist_B& (0+255),b
  2028   000514  EF8E  F002         	goto	u3891
  2029   000518  EF90  F002         	goto	u3890
  2030   00051C                     u3891:
  2031   00051C  EF9C  F002         	goto	l3909
  2032   000520                     u3890:
  2033   000520                     
  2034                           ; BSR set to: 0
  2035   000520  0E18               	movlw	24
  2036   000522  61DB               	cpfslt	detect_color@dist_B& (0+255),b
  2037   000524  EF96  F002         	goto	u3901
  2038   000528  EF98  F002         	goto	u3900
  2039   00052C                     u3901:
  2040   00052C  EF9C  F002         	goto	l3909
  2041   000530                     u3900:
  2042   000530                     
  2043                           ; BSR set to: 0
  2044                           ;color.c: 123:             color = 5;
  2045   000530  0E05               	movlw	5
  2046   000532  6FD8               	movwf	detect_color@color& (0+255),b
  2047                           
  2048                           ;color.c: 124:         }
  2049   000534  EF38  F003         	goto	l42
  2050   000538                     l3909:
  2051                           
  2052                           ; BSR set to: 0
  2053   000538  0E3A               	movlw	58
  2054   00053A  65D9               	cpfsgt	detect_color@dist_R& (0+255),b
  2055   00053C  EFA2  F002         	goto	u3911
  2056   000540  EFA4  F002         	goto	u3910
  2057   000544                     u3911:
  2058   000544  EFD0  F002         	goto	l3923
  2059   000548                     u3910:
  2060   000548                     
  2061                           ; BSR set to: 0
  2062   000548  0E3E               	movlw	62
  2063   00054A  61D9               	cpfslt	detect_color@dist_R& (0+255),b
  2064   00054C  EFAA  F002         	goto	u3921
  2065   000550  EFAC  F002         	goto	u3920
  2066   000554                     u3921:
  2067   000554  EFD0  F002         	goto	l3923
  2068   000558                     u3920:
  2069   000558                     
  2070                           ; BSR set to: 0
  2071   000558  0E15               	movlw	21
  2072   00055A  65DA               	cpfsgt	detect_color@dist_G& (0+255),b
  2073   00055C  EFB2  F002         	goto	u3931
  2074   000560  EFB4  F002         	goto	u3930
  2075   000564                     u3931:
  2076   000564  EFD0  F002         	goto	l3923
  2077   000568                     u3930:
  2078   000568                     
  2079                           ; BSR set to: 0
  2080   000568  0E19               	movlw	25
  2081   00056A  61DA               	cpfslt	detect_color@dist_G& (0+255),b
  2082   00056C  EFBA  F002         	goto	u3941
  2083   000570  EFBC  F002         	goto	u3940
  2084   000574                     u3941:
  2085   000574  EFD0  F002         	goto	l3923
  2086   000578                     u3940:
  2087   000578                     
  2088                           ; BSR set to: 0
  2089   000578  0E0F               	movlw	15
  2090   00057A  65DB               	cpfsgt	detect_color@dist_B& (0+255),b
  2091   00057C  EFC2  F002         	goto	u3951
  2092   000580  EFC4  F002         	goto	u3950
  2093   000584                     u3951:
  2094   000584  EFD0  F002         	goto	l3923
  2095   000588                     u3950:
  2096   000588                     
  2097                           ; BSR set to: 0
  2098   000588  0E13               	movlw	19
  2099   00058A  61DB               	cpfslt	detect_color@dist_B& (0+255),b
  2100   00058C  EFCA  F002         	goto	u3961
  2101   000590  EFCC  F002         	goto	u3960
  2102   000594                     u3961:
  2103   000594  EFD0  F002         	goto	l3923
  2104   000598                     u3960:
  2105   000598                     
  2106                           ; BSR set to: 0
  2107                           ;color.c: 126:             color = 6;
  2108   000598  0E06               	movlw	6
  2109   00059A  6FD8               	movwf	detect_color@color& (0+255),b
  2110                           
  2111                           ;color.c: 127:         }
  2112   00059C  EF38  F003         	goto	l42
  2113   0005A0                     l3923:
  2114                           
  2115                           ; BSR set to: 0
  2116   0005A0  0E20               	movlw	32
  2117   0005A2  65D9               	cpfsgt	detect_color@dist_R& (0+255),b
  2118   0005A4  EFD6  F002         	goto	u3971
  2119   0005A8  EFD8  F002         	goto	u3970
  2120   0005AC                     u3971:
  2121   0005AC  EF04  F003         	goto	l3937
  2122   0005B0                     u3970:
  2123   0005B0                     
  2124                           ; BSR set to: 0
  2125   0005B0  0E24               	movlw	36
  2126   0005B2  61D9               	cpfslt	detect_color@dist_R& (0+255),b
  2127   0005B4  EFDE  F002         	goto	u3981
  2128   0005B8  EFE0  F002         	goto	u3980
  2129   0005BC                     u3981:
  2130   0005BC  EF04  F003         	goto	l3937
  2131   0005C0                     u3980:
  2132   0005C0                     
  2133                           ; BSR set to: 0
  2134   0005C0  0E25               	movlw	37
  2135   0005C2  65DA               	cpfsgt	detect_color@dist_G& (0+255),b
  2136   0005C4  EFE6  F002         	goto	u3991
  2137   0005C8  EFE8  F002         	goto	u3990
  2138   0005CC                     u3991:
  2139   0005CC  EF04  F003         	goto	l3937
  2140   0005D0                     u3990:
  2141   0005D0                     
  2142                           ; BSR set to: 0
  2143   0005D0  0E29               	movlw	41
  2144   0005D2  61DA               	cpfslt	detect_color@dist_G& (0+255),b
  2145   0005D4  EFEE  F002         	goto	u4001
  2146   0005D8  EFF0  F002         	goto	u4000
  2147   0005DC                     u4001:
  2148   0005DC  EF04  F003         	goto	l3937
  2149   0005E0                     u4000:
  2150   0005E0                     
  2151                           ; BSR set to: 0
  2152   0005E0  0E19               	movlw	25
  2153   0005E2  65DB               	cpfsgt	detect_color@dist_B& (0+255),b
  2154   0005E4  EFF6  F002         	goto	u4011
  2155   0005E8  EFF8  F002         	goto	u4010
  2156   0005EC                     u4011:
  2157   0005EC  EF04  F003         	goto	l3937
  2158   0005F0                     u4010:
  2159   0005F0                     
  2160                           ; BSR set to: 0
  2161   0005F0  0E1D               	movlw	29
  2162   0005F2  61DB               	cpfslt	detect_color@dist_B& (0+255),b
  2163   0005F4  EFFE  F002         	goto	u4021
  2164   0005F8  EF00  F003         	goto	u4020
  2165   0005FC                     u4021:
  2166   0005FC  EF04  F003         	goto	l3937
  2167   000600                     u4020:
  2168   000600                     
  2169                           ; BSR set to: 0
  2170                           ;color.c: 129:             color = 7;
  2171   000600  0E07               	movlw	7
  2172   000602  6FD8               	movwf	detect_color@color& (0+255),b
  2173                           
  2174                           ;color.c: 130:         }
  2175   000604  EF38  F003         	goto	l42
  2176   000608                     l3937:
  2177                           
  2178                           ; BSR set to: 0
  2179   000608  0E2A               	movlw	42
  2180   00060A  65D9               	cpfsgt	detect_color@dist_R& (0+255),b
  2181   00060C  EF0A  F003         	goto	u4031
  2182   000610  EF0C  F003         	goto	u4030
  2183   000614                     u4031:
  2184   000614  EF38  F003         	goto	l56
  2185   000618                     u4030:
  2186   000618                     
  2187                           ; BSR set to: 0
  2188   000618  0E2E               	movlw	46
  2189   00061A  61D9               	cpfslt	detect_color@dist_R& (0+255),b
  2190   00061C  EF12  F003         	goto	u4041
  2191   000620  EF14  F003         	goto	u4040
  2192   000624                     u4041:
  2193   000624  EF38  F003         	goto	l56
  2194   000628                     u4040:
  2195   000628                     
  2196                           ; BSR set to: 0
  2197   000628  0E1F               	movlw	31
  2198   00062A  65DA               	cpfsgt	detect_color@dist_G& (0+255),b
  2199   00062C  EF1A  F003         	goto	u4051
  2200   000630  EF1C  F003         	goto	u4050
  2201   000634                     u4051:
  2202   000634  EF38  F003         	goto	l56
  2203   000638                     u4050:
  2204   000638                     
  2205                           ; BSR set to: 0
  2206   000638  0E23               	movlw	35
  2207   00063A  61DA               	cpfslt	detect_color@dist_G& (0+255),b
  2208   00063C  EF22  F003         	goto	u4061
  2209   000640  EF24  F003         	goto	u4060
  2210   000644                     u4061:
  2211   000644  EF38  F003         	goto	l56
  2212   000648                     u4060:
  2213   000648                     
  2214                           ; BSR set to: 0
  2215   000648  0E15               	movlw	21
  2216   00064A  65DB               	cpfsgt	detect_color@dist_B& (0+255),b
  2217   00064C  EF2A  F003         	goto	u4071
  2218   000650  EF2C  F003         	goto	u4070
  2219   000654                     u4071:
  2220   000654  EF38  F003         	goto	l56
  2221   000658                     u4070:
  2222   000658                     
  2223                           ; BSR set to: 0
  2224   000658  0E19               	movlw	25
  2225   00065A  61DB               	cpfslt	detect_color@dist_B& (0+255),b
  2226   00065C  EF32  F003         	goto	u4081
  2227   000660  EF34  F003         	goto	u4080
  2228   000664                     u4081:
  2229   000664  EF38  F003         	goto	l56
  2230   000668                     u4080:
  2231   000668                     
  2232                           ; BSR set to: 0
  2233                           ;color.c: 132:             color = 8;
  2234   000668  0E08               	movlw	8
  2235   00066A  6FD8               	movwf	detect_color@color& (0+255),b
  2236                           
  2237                           ;color.c: 133:         }
  2238   00066C  EF38  F003         	goto	l42
  2239   000670                     l56:
  2240   000670                     l42:
  2241                           
  2242                           ; BSR set to: 0
  2243                           ;color.c: 138:     color_flag = 0;
  2244   000670  0E00               	movlw	0
  2245   000672  6E55               	movwf	_color_flag^0,c
  2246                           
  2247                           ;color.c: 139:     return color;
  2248   000674  51D8               	movf	detect_color@color& (0+255),w,b
  2249   000676                     
  2250                           ; BSR set to: 0
  2251   000676  0012               	return		;funcret
  2252   000678                     __end_of_detect_color:
  2253                           	callstack 0
  2254                           
  2255 ;; *************** function ___xxtofl *****************
  2256 ;; Defined at:
  2257 ;;		line 10 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\xxtofl.c"
  2258 ;; Parameters:    Size  Location     Type
  2259 ;;  sign            1    wreg     unsigned char 
  2260 ;;  val             4    8[COMRAM] long 
  2261 ;; Auto vars:     Size  Location     Type
  2262 ;;  sign            1   16[COMRAM] unsigned char 
  2263 ;;  arg             4   18[COMRAM] unsigned long 
  2264 ;;  exp             1   17[COMRAM] unsigned char 
  2265 ;; Return value:  Size  Location     Type
  2266 ;;                  4    8[COMRAM] unsigned char 
  2267 ;; Registers used:
  2268 ;;		wreg, status,2, status,0
  2269 ;; Tracked objects:
  2270 ;;		On entry : 0/0
  2271 ;;		On exit  : 0/0
  2272 ;;		Unchanged: 0/0
  2273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2274 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2275 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2276 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2277 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2278 ;;Total ram usage:       14 bytes
  2279 ;; Hardware stack levels used: 1
  2280 ;; Hardware stack levels required when called: 7
  2281 ;; This function calls:
  2282 ;;		Nothing
  2283 ;; This function is called by:
  2284 ;;		_detect_color
  2285 ;; This function uses a non-reentrant model
  2286 ;;
  2287                           
  2288                           	psect	text4
  2289   000E3C                     __ptext4:
  2290                           	callstack 0
  2291   000E3C                     ___xxtofl:
  2292                           	callstack 22
  2293                           
  2294                           ; BSR set to: 0
  2295                           ;incstack = 0
  2296                           ;___xxtofl@sign stored from wreg
  2297   000E3C  6E11               	movwf	___xxtofl@sign^0,c
  2298   000E3E  5011               	movf	___xxtofl@sign^0,w,c
  2299   000E40  B4D8               	btfsc	status,2,c
  2300   000E42  EF25  F007         	goto	u2701
  2301   000E46  EF27  F007         	goto	u2700
  2302   000E4A                     u2701:
  2303   000E4A  EF49  F007         	goto	l1301
  2304   000E4E                     u2700:
  2305   000E4E  BE0C               	btfsc	(___xxtofl@val+3)^0,7,c
  2306   000E50  EF2E  F007         	goto	u2710
  2307   000E54  EF2C  F007         	goto	u2711
  2308   000E58                     u2711:
  2309   000E58  EF49  F007         	goto	l1301
  2310   000E5C                     u2710:
  2311   000E5C  C009  F00D         	movff	___xxtofl@val,??___xxtofl
  2312   000E60  C00A  F00E         	movff	___xxtofl@val+1,??___xxtofl+1
  2313   000E64  C00B  F00F         	movff	___xxtofl@val+2,??___xxtofl+2
  2314   000E68  C00C  F010         	movff	___xxtofl@val+3,??___xxtofl+3
  2315   000E6C  1E0D               	comf	??___xxtofl^0,f,c
  2316   000E6E  1E0E               	comf	(??___xxtofl+1)^0,f,c
  2317   000E70  1E0F               	comf	(??___xxtofl+2)^0,f,c
  2318   000E72  1E10               	comf	(??___xxtofl+3)^0,f,c
  2319   000E74  2A0D               	incf	??___xxtofl^0,f,c
  2320   000E76  0E00               	movlw	0
  2321   000E78  220E               	addwfc	(??___xxtofl+1)^0,f,c
  2322   000E7A  220F               	addwfc	(??___xxtofl+2)^0,f,c
  2323   000E7C  2210               	addwfc	(??___xxtofl+3)^0,f,c
  2324   000E7E  C00D  F013         	movff	??___xxtofl,___xxtofl@arg
  2325   000E82  C00E  F014         	movff	??___xxtofl+1,___xxtofl@arg+1
  2326   000E86  C00F  F015         	movff	??___xxtofl+2,___xxtofl@arg+2
  2327   000E8A  C010  F016         	movff	??___xxtofl+3,___xxtofl@arg+3
  2328   000E8E  EF51  F007         	goto	l3301
  2329   000E92                     l1301:
  2330   000E92  C009  F013         	movff	___xxtofl@val,___xxtofl@arg
  2331   000E96  C00A  F014         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2332   000E9A  C00B  F015         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2333   000E9E  C00C  F016         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2334   000EA2                     l3301:
  2335   000EA2  5009               	movf	___xxtofl@val^0,w,c
  2336   000EA4  100A               	iorwf	(___xxtofl@val+1)^0,w,c
  2337   000EA6  100B               	iorwf	(___xxtofl@val+2)^0,w,c
  2338   000EA8  100C               	iorwf	(___xxtofl@val+3)^0,w,c
  2339   000EAA  A4D8               	btfss	status,2,c
  2340   000EAC  EF5A  F007         	goto	u2721
  2341   000EB0  EF5C  F007         	goto	u2720
  2342   000EB4                     u2721:
  2343   000EB4  EF66  F007         	goto	l3307
  2344   000EB8                     u2720:
  2345   000EB8  0E00               	movlw	0
  2346   000EBA  6E09               	movwf	?___xxtofl^0,c
  2347   000EBC  0E00               	movlw	0
  2348   000EBE  6E0A               	movwf	(?___xxtofl+1)^0,c
  2349   000EC0  0E00               	movlw	0
  2350   000EC2  6E0B               	movwf	(?___xxtofl+2)^0,c
  2351   000EC4  0E00               	movlw	0
  2352   000EC6  6E0C               	movwf	(?___xxtofl+3)^0,c
  2353   000EC8  EFF7  F007         	goto	l1304
  2354   000ECC                     l3307:
  2355   000ECC  0E96               	movlw	150
  2356   000ECE  6E12               	movwf	___xxtofl@exp^0,c
  2357   000ED0  EF70  F007         	goto	l3311
  2358   000ED4                     l3309:
  2359   000ED4  2A12               	incf	___xxtofl@exp^0,f,c
  2360   000ED6  90D8               	bcf	status,0,c
  2361   000ED8  3216               	rrcf	(___xxtofl@arg+3)^0,f,c
  2362   000EDA  3215               	rrcf	(___xxtofl@arg+2)^0,f,c
  2363   000EDC  3214               	rrcf	(___xxtofl@arg+1)^0,f,c
  2364   000EDE  3213               	rrcf	___xxtofl@arg^0,f,c
  2365   000EE0                     l3311:
  2366   000EE0  0E00               	movlw	0
  2367   000EE2  1413               	andwf	___xxtofl@arg^0,w,c
  2368   000EE4  6E0D               	movwf	??___xxtofl^0,c
  2369   000EE6  0E00               	movlw	0
  2370   000EE8  1414               	andwf	(___xxtofl@arg+1)^0,w,c
  2371   000EEA  6E0E               	movwf	(??___xxtofl+1)^0,c
  2372   000EEC  0E00               	movlw	0
  2373   000EEE  1415               	andwf	(___xxtofl@arg+2)^0,w,c
  2374   000EF0  6E0F               	movwf	(??___xxtofl+2)^0,c
  2375   000EF2  0EFE               	movlw	254
  2376   000EF4  1416               	andwf	(___xxtofl@arg+3)^0,w,c
  2377   000EF6  6E10               	movwf	(??___xxtofl+3)^0,c
  2378   000EF8  500D               	movf	??___xxtofl^0,w,c
  2379   000EFA  100E               	iorwf	(??___xxtofl+1)^0,w,c
  2380   000EFC  100F               	iorwf	(??___xxtofl+2)^0,w,c
  2381   000EFE  1010               	iorwf	(??___xxtofl+3)^0,w,c
  2382   000F00  A4D8               	btfss	status,2,c
  2383   000F02  EF85  F007         	goto	u2731
  2384   000F06  EF87  F007         	goto	u2730
  2385   000F0A                     u2731:
  2386   000F0A  EF6A  F007         	goto	l3309
  2387   000F0E                     u2730:
  2388   000F0E  EF95  F007         	goto	l1308
  2389   000F12                     l3313:
  2390   000F12  2A12               	incf	___xxtofl@exp^0,f,c
  2391   000F14  0E01               	movlw	1
  2392   000F16  2613               	addwf	___xxtofl@arg^0,f,c
  2393   000F18  0E00               	movlw	0
  2394   000F1A  2214               	addwfc	(___xxtofl@arg+1)^0,f,c
  2395   000F1C  2215               	addwfc	(___xxtofl@arg+2)^0,f,c
  2396   000F1E  2216               	addwfc	(___xxtofl@arg+3)^0,f,c
  2397   000F20  90D8               	bcf	status,0,c
  2398   000F22  3216               	rrcf	(___xxtofl@arg+3)^0,f,c
  2399   000F24  3215               	rrcf	(___xxtofl@arg+2)^0,f,c
  2400   000F26  3214               	rrcf	(___xxtofl@arg+1)^0,f,c
  2401   000F28  3213               	rrcf	___xxtofl@arg^0,f,c
  2402   000F2A                     l1308:
  2403   000F2A  0E00               	movlw	0
  2404   000F2C  1413               	andwf	___xxtofl@arg^0,w,c
  2405   000F2E  6E0D               	movwf	??___xxtofl^0,c
  2406   000F30  0E00               	movlw	0
  2407   000F32  1414               	andwf	(___xxtofl@arg+1)^0,w,c
  2408   000F34  6E0E               	movwf	(??___xxtofl+1)^0,c
  2409   000F36  0E00               	movlw	0
  2410   000F38  1415               	andwf	(___xxtofl@arg+2)^0,w,c
  2411   000F3A  6E0F               	movwf	(??___xxtofl+2)^0,c
  2412   000F3C  0EFF               	movlw	255
  2413   000F3E  1416               	andwf	(___xxtofl@arg+3)^0,w,c
  2414   000F40  6E10               	movwf	(??___xxtofl+3)^0,c
  2415   000F42  500D               	movf	??___xxtofl^0,w,c
  2416   000F44  100E               	iorwf	(??___xxtofl+1)^0,w,c
  2417   000F46  100F               	iorwf	(??___xxtofl+2)^0,w,c
  2418   000F48  1010               	iorwf	(??___xxtofl+3)^0,w,c
  2419   000F4A  A4D8               	btfss	status,2,c
  2420   000F4C  EFAA  F007         	goto	u2741
  2421   000F50  EFAC  F007         	goto	u2740
  2422   000F54                     u2741:
  2423   000F54  EF89  F007         	goto	l3313
  2424   000F58                     u2740:
  2425   000F58  EFB4  F007         	goto	l3321
  2426   000F5C                     l3319:
  2427   000F5C  0612               	decf	___xxtofl@exp^0,f,c
  2428   000F5E  90D8               	bcf	status,0,c
  2429   000F60  3613               	rlcf	___xxtofl@arg^0,f,c
  2430   000F62  3614               	rlcf	(___xxtofl@arg+1)^0,f,c
  2431   000F64  3615               	rlcf	(___xxtofl@arg+2)^0,f,c
  2432   000F66  3616               	rlcf	(___xxtofl@arg+3)^0,f,c
  2433   000F68                     l3321:
  2434   000F68  BE15               	btfsc	(___xxtofl@arg+2)^0,7,c
  2435   000F6A  EFB9  F007         	goto	u2751
  2436   000F6E  EFBB  F007         	goto	u2750
  2437   000F72                     u2751:
  2438   000F72  EFC3  F007         	goto	l1315
  2439   000F76                     u2750:
  2440   000F76  0E02               	movlw	2
  2441   000F78  6012               	cpfslt	___xxtofl@exp^0,c
  2442   000F7A  EFC1  F007         	goto	u2761
  2443   000F7E  EFC3  F007         	goto	u2760
  2444   000F82                     u2761:
  2445   000F82  EFAE  F007         	goto	l3319
  2446   000F86                     u2760:
  2447   000F86                     l1315:
  2448   000F86  B012               	btfsc	___xxtofl@exp^0,0,c
  2449   000F88  EFC8  F007         	goto	u2771
  2450   000F8C  EFCA  F007         	goto	u2770
  2451   000F90                     u2771:
  2452   000F90  EFCB  F007         	goto	l3327
  2453   000F94                     u2770:
  2454   000F94  9E15               	bcf	(___xxtofl@arg+2)^0,7,c
  2455   000F96                     l3327:
  2456   000F96  90D8               	bcf	status,0,c
  2457   000F98  3212               	rrcf	___xxtofl@exp^0,f,c
  2458   000F9A  C012  F00D         	movff	___xxtofl@exp,??___xxtofl
  2459   000F9E  6A0E               	clrf	(??___xxtofl+1)^0,c
  2460   000FA0  6A0F               	clrf	(??___xxtofl+2)^0,c
  2461   000FA2  6A10               	clrf	(??___xxtofl+3)^0,c
  2462   000FA4  C00D  F010         	movff	??___xxtofl,??___xxtofl+3
  2463   000FA8  6A0F               	clrf	(??___xxtofl+2)^0,c
  2464   000FAA  6A0E               	clrf	(??___xxtofl+1)^0,c
  2465   000FAC  6A0D               	clrf	??___xxtofl^0,c
  2466   000FAE  500D               	movf	??___xxtofl^0,w,c
  2467   000FB0  1213               	iorwf	___xxtofl@arg^0,f,c
  2468   000FB2  500E               	movf	(??___xxtofl+1)^0,w,c
  2469   000FB4  1214               	iorwf	(___xxtofl@arg+1)^0,f,c
  2470   000FB6  500F               	movf	(??___xxtofl+2)^0,w,c
  2471   000FB8  1215               	iorwf	(___xxtofl@arg+2)^0,f,c
  2472   000FBA  5010               	movf	(??___xxtofl+3)^0,w,c
  2473   000FBC  1216               	iorwf	(___xxtofl@arg+3)^0,f,c
  2474   000FBE  5011               	movf	___xxtofl@sign^0,w,c
  2475   000FC0  B4D8               	btfsc	status,2,c
  2476   000FC2  EFE5  F007         	goto	u2781
  2477   000FC6  EFE7  F007         	goto	u2780
  2478   000FCA                     u2781:
  2479   000FCA  EFEF  F007         	goto	l3337
  2480   000FCE                     u2780:
  2481   000FCE  BE0C               	btfsc	(___xxtofl@val+3)^0,7,c
  2482   000FD0  EFEE  F007         	goto	u2790
  2483   000FD4  EFEC  F007         	goto	u2791
  2484   000FD8                     u2791:
  2485   000FD8  EFEF  F007         	goto	l3337
  2486   000FDC                     u2790:
  2487   000FDC  8E16               	bsf	(___xxtofl@arg+3)^0,7,c
  2488   000FDE                     l3337:
  2489   000FDE  C013  F009         	movff	___xxtofl@arg,?___xxtofl
  2490   000FE2  C014  F00A         	movff	___xxtofl@arg+1,?___xxtofl+1
  2491   000FE6  C015  F00B         	movff	___xxtofl@arg+2,?___xxtofl+2
  2492   000FEA  C016  F00C         	movff	___xxtofl@arg+3,?___xxtofl+3
  2493   000FEE                     l1304:
  2494   000FEE  0012               	return		;funcret
  2495   000FF0                     __end_of___xxtofl:
  2496                           	callstack 0
  2497                           
  2498 ;; *************** function ___fltol *****************
  2499 ;; Defined at:
  2500 ;;		line 43 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\fltol.c"
  2501 ;; Parameters:    Size  Location     Type
  2502 ;;  f1              4   72[COMRAM] unsigned char 
  2503 ;; Auto vars:     Size  Location     Type
  2504 ;;  exp1            1   77[COMRAM] unsigned char 
  2505 ;;  sign1           1   76[COMRAM] unsigned char 
  2506 ;; Return value:  Size  Location     Type
  2507 ;;                  4   72[COMRAM] long 
  2508 ;; Registers used:
  2509 ;;		wreg, status,2, status,0
  2510 ;; Tracked objects:
  2511 ;;		On entry : 0/0
  2512 ;;		On exit  : 0/0
  2513 ;;		Unchanged: 0/0
  2514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2515 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2516 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2517 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2518 ;;      Totals:         6       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2519 ;;Total ram usage:       10 bytes
  2520 ;; Hardware stack levels used: 1
  2521 ;; Hardware stack levels required when called: 7
  2522 ;; This function calls:
  2523 ;;		Nothing
  2524 ;; This function is called by:
  2525 ;;		_detect_color
  2526 ;; This function uses a non-reentrant model
  2527 ;;
  2528                           
  2529                           	psect	text5
  2530   001470                     __ptext5:
  2531                           	callstack 0
  2532   001470                     ___fltol:
  2533                           	callstack 22
  2534   001470  344B               	rlcf	(___fltol@f1+2)^0,w,c
  2535   001472  344C               	rlcf	(___fltol@f1+3)^0,w,c
  2536   001474  6E4E               	movwf	___fltol@exp1^0,c
  2537   001476  504E               	movf	___fltol@exp1^0,w,c
  2538   001478  A4D8               	btfss	status,2,c
  2539   00147A  EF41  F00A         	goto	u3531
  2540   00147E  EF43  F00A         	goto	u3530
  2541   001482                     u3531:
  2542   001482  EF4D  F00A         	goto	l3791
  2543   001486                     u3530:
  2544   001486                     l3787:
  2545   001486  0E00               	movlw	0
  2546   001488  6E49               	movwf	?___fltol^0,c
  2547   00148A  0E00               	movlw	0
  2548   00148C  6E4A               	movwf	(?___fltol+1)^0,c
  2549   00148E  0E00               	movlw	0
  2550   001490  6E4B               	movwf	(?___fltol+2)^0,c
  2551   001492  0E00               	movlw	0
  2552   001494  6E4C               	movwf	(?___fltol+3)^0,c
  2553   001496  EFBB  F00A         	goto	l943
  2554   00149A                     l3791:
  2555   00149A  C049  F0C6         	movff	___fltol@f1,??___fltol
  2556   00149E  C04A  F0C7         	movff	___fltol@f1+1,??___fltol+1
  2557   0014A2  C04B  F0C8         	movff	___fltol@f1+2,??___fltol+2
  2558   0014A6  C04C  F0C9         	movff	___fltol@f1+3,??___fltol+3
  2559   0014AA  0E20               	movlw	32
  2560   0014AC  EF5E  F00A         	goto	u3540
  2561   0014B0                     u3545:
  2562   0014B0  0100               	movlb	0	; () banked
  2563   0014B2  90D8               	bcf	status,0,c
  2564   0014B4  33C9               	rrcf	(??___fltol+3)& (0+255),f,b
  2565   0014B6  33C8               	rrcf	(??___fltol+2)& (0+255),f,b
  2566   0014B8  33C7               	rrcf	(??___fltol+1)& (0+255),f,b
  2567   0014BA  33C6               	rrcf	??___fltol& (0+255),f,b
  2568   0014BC                     u3540:
  2569   0014BC  2EE8               	decfsz	wreg,f,c
  2570   0014BE  EF58  F00A         	goto	u3545
  2571   0014C2  51C6               	movf	??___fltol& (0+255),w,b
  2572   0014C4  6E4D               	movwf	___fltol@sign1^0,c
  2573   0014C6                     
  2574                           ; BSR set to: 0
  2575   0014C6  8E4B               	bsf	(___fltol@f1+2)^0,7,c
  2576   0014C8                     
  2577                           ; BSR set to: 0
  2578   0014C8  0EFF               	movlw	255
  2579   0014CA  1649               	andwf	___fltol@f1^0,f,c
  2580   0014CC  0EFF               	movlw	255
  2581   0014CE  164A               	andwf	(___fltol@f1+1)^0,f,c
  2582   0014D0  0EFF               	movlw	255
  2583   0014D2  164B               	andwf	(___fltol@f1+2)^0,f,c
  2584   0014D4  0E00               	movlw	0
  2585   0014D6  164C               	andwf	(___fltol@f1+3)^0,f,c
  2586   0014D8                     
  2587                           ; BSR set to: 0
  2588   0014D8  0E96               	movlw	150
  2589   0014DA  5E4E               	subwf	___fltol@exp1^0,f,c
  2590   0014DC                     
  2591                           ; BSR set to: 0
  2592   0014DC  BE4E               	btfsc	___fltol@exp1^0,7,c
  2593   0014DE  EF75  F00A         	goto	u3550
  2594   0014E2  EF73  F00A         	goto	u3551
  2595   0014E6                     u3551:
  2596   0014E6  EF8B  F00A         	goto	l3811
  2597   0014EA                     u3550:
  2598   0014EA                     
  2599                           ; BSR set to: 0
  2600   0014EA  504E               	movf	___fltol@exp1^0,w,c
  2601   0014EC  0A80               	xorlw	128
  2602   0014EE  0F97               	addlw	151
  2603   0014F0  B0D8               	btfsc	status,0,c
  2604   0014F2  EF7D  F00A         	goto	u3561
  2605   0014F6  EF7F  F00A         	goto	u3560
  2606   0014FA                     u3561:
  2607   0014FA  EF81  F00A         	goto	l3807
  2608   0014FE                     u3560:
  2609   0014FE  EF43  F00A         	goto	l3787
  2610   001502                     l3807:
  2611   001502  90D8               	bcf	status,0,c
  2612   001504  324C               	rrcf	(___fltol@f1+3)^0,f,c
  2613   001506  324B               	rrcf	(___fltol@f1+2)^0,f,c
  2614   001508  324A               	rrcf	(___fltol@f1+1)^0,f,c
  2615   00150A  3249               	rrcf	___fltol@f1^0,f,c
  2616   00150C  3E4E               	incfsz	___fltol@exp1^0,f,c
  2617   00150E  EF81  F00A         	goto	l3807
  2618   001512  EFA3  F00A         	goto	l3821
  2619   001516                     l3811:
  2620                           
  2621                           ; BSR set to: 0
  2622   001516  0E1F               	movlw	31
  2623   001518  644E               	cpfsgt	___fltol@exp1^0,c
  2624   00151A  EF91  F00A         	goto	u3571
  2625   00151E  EF93  F00A         	goto	u3570
  2626   001522                     u3571:
  2627   001522  EF9B  F00A         	goto	l3819
  2628   001526                     u3570:
  2629   001526  EF43  F00A         	goto	l3787
  2630   00152A                     l3817:
  2631   00152A  90D8               	bcf	status,0,c
  2632   00152C  3649               	rlcf	___fltol@f1^0,f,c
  2633   00152E  364A               	rlcf	(___fltol@f1+1)^0,f,c
  2634   001530  364B               	rlcf	(___fltol@f1+2)^0,f,c
  2635   001532  364C               	rlcf	(___fltol@f1+3)^0,f,c
  2636   001534  064E               	decf	___fltol@exp1^0,f,c
  2637   001536                     l3819:
  2638   001536  504E               	movf	___fltol@exp1^0,w,c
  2639   001538  A4D8               	btfss	status,2,c
  2640   00153A  EFA1  F00A         	goto	u3581
  2641   00153E  EFA3  F00A         	goto	u3580
  2642   001542                     u3581:
  2643   001542  EF95  F00A         	goto	l3817
  2644   001546                     u3580:
  2645   001546                     l3821:
  2646   001546  504D               	movf	___fltol@sign1^0,w,c
  2647   001548  B4D8               	btfsc	status,2,c
  2648   00154A  EFA9  F00A         	goto	u3591
  2649   00154E  EFAB  F00A         	goto	u3590
  2650   001552                     u3591:
  2651   001552  EFB3  F00A         	goto	l3825
  2652   001556                     u3590:
  2653   001556  1E4C               	comf	(___fltol@f1+3)^0,f,c
  2654   001558  1E4B               	comf	(___fltol@f1+2)^0,f,c
  2655   00155A  1E4A               	comf	(___fltol@f1+1)^0,f,c
  2656   00155C  6C49               	negf	___fltol@f1^0,c
  2657   00155E  0E00               	movlw	0
  2658   001560  224A               	addwfc	(___fltol@f1+1)^0,f,c
  2659   001562  224B               	addwfc	(___fltol@f1+2)^0,f,c
  2660   001564  224C               	addwfc	(___fltol@f1+3)^0,f,c
  2661   001566                     l3825:
  2662   001566  C049  F049         	movff	___fltol@f1,?___fltol
  2663   00156A  C04A  F04A         	movff	___fltol@f1+1,?___fltol+1
  2664   00156E  C04B  F04B         	movff	___fltol@f1+2,?___fltol+2
  2665   001572  C04C  F04C         	movff	___fltol@f1+3,?___fltol+3
  2666   001576                     l943:
  2667   001576  0012               	return		;funcret
  2668   001578                     __end_of___fltol:
  2669                           	callstack 0
  2670                           
  2671 ;; *************** function ___flmul *****************
  2672 ;; Defined at:
  2673 ;;		line 8 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\sprcmul.c"
  2674 ;; Parameters:    Size  Location     Type
  2675 ;;  b               4   47[COMRAM] long 
  2676 ;;  a               4   51[COMRAM] long 
  2677 ;; Auto vars:     Size  Location     Type
  2678 ;;  prod            4   66[COMRAM] struct .
  2679 ;;  grs             4   60[COMRAM] unsigned long 
  2680 ;;  temp            2   70[COMRAM] struct .
  2681 ;;  bexp            1   65[COMRAM] unsigned char 
  2682 ;;  aexp            1   64[COMRAM] unsigned char 
  2683 ;;  sign            1   59[COMRAM] unsigned char 
  2684 ;; Return value:  Size  Location     Type
  2685 ;;                  4   47[COMRAM] unsigned char 
  2686 ;; Registers used:
  2687 ;;		wreg, status,2, status,0, prodl, prodh
  2688 ;; Tracked objects:
  2689 ;;		On entry : 0/0
  2690 ;;		On exit  : 0/0
  2691 ;;		Unchanged: 0/0
  2692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2693 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2694 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2695 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2696 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2697 ;;Total ram usage:       25 bytes
  2698 ;; Hardware stack levels used: 1
  2699 ;; Hardware stack levels required when called: 7
  2700 ;; This function calls:
  2701 ;;		Nothing
  2702 ;; This function is called by:
  2703 ;;		_detect_color
  2704 ;; This function uses a non-reentrant model
  2705 ;;
  2706                           
  2707                           	psect	text6
  2708   000678                     __ptext6:
  2709                           	callstack 0
  2710   000678                     ___flmul:
  2711                           	callstack 22
  2712   000678  5033               	movf	(___flmul@b+3)^0,w,c
  2713   00067A  0B80               	andlw	128
  2714   00067C  6E3C               	movwf	___flmul@sign^0,c
  2715   00067E  5033               	movf	(___flmul@b+3)^0,w,c
  2716   000680  2433               	addwf	(___flmul@b+3)^0,w,c
  2717   000682  6E42               	movwf	___flmul@bexp^0,c
  2718   000684  AE32               	btfss	(___flmul@b+2)^0,7,c
  2719   000686  EF47  F003         	goto	u2441
  2720   00068A  EF49  F003         	goto	u2440
  2721   00068E                     u2441:
  2722   00068E  EF4A  F003         	goto	l3127
  2723   000692                     u2440:
  2724   000692  8042               	bsf	___flmul@bexp^0,0,c
  2725   000694                     l3127:
  2726   000694  5042               	movf	___flmul@bexp^0,w,c
  2727   000696  B4D8               	btfsc	status,2,c
  2728   000698  EF50  F003         	goto	u2451
  2729   00069C  EF52  F003         	goto	u2450
  2730   0006A0                     u2451:
  2731   0006A0  EF65  F003         	goto	l3135
  2732   0006A4                     u2450:
  2733   0006A4  2842               	incf	___flmul@bexp^0,w,c
  2734   0006A6  A4D8               	btfss	status,2,c
  2735   0006A8  EF58  F003         	goto	u2461
  2736   0006AC  EF5A  F003         	goto	u2460
  2737   0006B0                     u2461:
  2738   0006B0  EF62  F003         	goto	l3133
  2739   0006B4                     u2460:
  2740   0006B4  0E00               	movlw	0
  2741   0006B6  6E30               	movwf	___flmul@b^0,c
  2742   0006B8  0E00               	movlw	0
  2743   0006BA  6E31               	movwf	(___flmul@b+1)^0,c
  2744   0006BC  0E00               	movlw	0
  2745   0006BE  6E32               	movwf	(___flmul@b+2)^0,c
  2746   0006C0  0E00               	movlw	0
  2747   0006C2  6E33               	movwf	(___flmul@b+3)^0,c
  2748   0006C4                     l3133:
  2749   0006C4  8E32               	bsf	(___flmul@b+2)^0,7,c
  2750   0006C6  EF6D  F003         	goto	l3137
  2751   0006CA                     l3135:
  2752   0006CA  0E00               	movlw	0
  2753   0006CC  6E30               	movwf	___flmul@b^0,c
  2754   0006CE  0E00               	movlw	0
  2755   0006D0  6E31               	movwf	(___flmul@b+1)^0,c
  2756   0006D2  0E00               	movlw	0
  2757   0006D4  6E32               	movwf	(___flmul@b+2)^0,c
  2758   0006D6  0E00               	movlw	0
  2759   0006D8  6E33               	movwf	(___flmul@b+3)^0,c
  2760   0006DA                     l3137:
  2761   0006DA  5037               	movf	(___flmul@a+3)^0,w,c
  2762   0006DC  0B80               	andlw	128
  2763   0006DE  1A3C               	xorwf	___flmul@sign^0,f,c
  2764   0006E0  5037               	movf	(___flmul@a+3)^0,w,c
  2765   0006E2  2437               	addwf	(___flmul@a+3)^0,w,c
  2766   0006E4  6E41               	movwf	___flmul@aexp^0,c
  2767   0006E6  AE36               	btfss	(___flmul@a+2)^0,7,c
  2768   0006E8  EF78  F003         	goto	u2471
  2769   0006EC  EF7A  F003         	goto	u2470
  2770   0006F0                     u2471:
  2771   0006F0  EF7B  F003         	goto	l3145
  2772   0006F4                     u2470:
  2773   0006F4  8041               	bsf	___flmul@aexp^0,0,c
  2774   0006F6                     l3145:
  2775   0006F6  5041               	movf	___flmul@aexp^0,w,c
  2776   0006F8  B4D8               	btfsc	status,2,c
  2777   0006FA  EF81  F003         	goto	u2481
  2778   0006FE  EF83  F003         	goto	u2480
  2779   000702                     u2481:
  2780   000702  EF96  F003         	goto	l3153
  2781   000706                     u2480:
  2782   000706  2841               	incf	___flmul@aexp^0,w,c
  2783   000708  A4D8               	btfss	status,2,c
  2784   00070A  EF89  F003         	goto	u2491
  2785   00070E  EF8B  F003         	goto	u2490
  2786   000712                     u2491:
  2787   000712  EF93  F003         	goto	l3151
  2788   000716                     u2490:
  2789   000716  0E00               	movlw	0
  2790   000718  6E34               	movwf	___flmul@a^0,c
  2791   00071A  0E00               	movlw	0
  2792   00071C  6E35               	movwf	(___flmul@a+1)^0,c
  2793   00071E  0E00               	movlw	0
  2794   000720  6E36               	movwf	(___flmul@a+2)^0,c
  2795   000722  0E00               	movlw	0
  2796   000724  6E37               	movwf	(___flmul@a+3)^0,c
  2797   000726                     l3151:
  2798   000726  8E36               	bsf	(___flmul@a+2)^0,7,c
  2799   000728  EF9E  F003         	goto	l1260
  2800   00072C                     l3153:
  2801   00072C  0E00               	movlw	0
  2802   00072E  6E34               	movwf	___flmul@a^0,c
  2803   000730  0E00               	movlw	0
  2804   000732  6E35               	movwf	(___flmul@a+1)^0,c
  2805   000734  0E00               	movlw	0
  2806   000736  6E36               	movwf	(___flmul@a+2)^0,c
  2807   000738  0E00               	movlw	0
  2808   00073A  6E37               	movwf	(___flmul@a+3)^0,c
  2809   00073C                     l1260:
  2810   00073C  5041               	movf	___flmul@aexp^0,w,c
  2811   00073E  B4D8               	btfsc	status,2,c
  2812   000740  EFA4  F003         	goto	u2501
  2813   000744  EFA6  F003         	goto	u2500
  2814   000748                     u2501:
  2815   000748  EFAE  F003         	goto	l3157
  2816   00074C                     u2500:
  2817   00074C  5042               	movf	___flmul@bexp^0,w,c
  2818   00074E  A4D8               	btfss	status,2,c
  2819   000750  EFAC  F003         	goto	u2511
  2820   000754  EFAE  F003         	goto	u2510
  2821   000758                     u2511:
  2822   000758  EFB8  F003         	goto	l3161
  2823   00075C                     u2510:
  2824   00075C                     l3157:
  2825   00075C  0E00               	movlw	0
  2826   00075E  6E30               	movwf	?___flmul^0,c
  2827   000760  0E00               	movlw	0
  2828   000762  6E31               	movwf	(?___flmul+1)^0,c
  2829   000764  0E00               	movlw	0
  2830   000766  6E32               	movwf	(?___flmul+2)^0,c
  2831   000768  0E00               	movlw	0
  2832   00076A  6E33               	movwf	(?___flmul+3)^0,c
  2833   00076C  EF50  F005         	goto	l1264
  2834   000770                     l3161:
  2835   000770  5036               	movf	(___flmul@a+2)^0,w,c
  2836   000772  0230               	mulwf	___flmul@b^0,c
  2837   000774  CFF3 F047          	movff	prodl,___flmul@temp
  2838   000778  CFF4 F048          	movff	prodh,___flmul@temp+1
  2839   00077C  5047               	movf	___flmul@temp^0,w,c
  2840   00077E  6E3D               	movwf	___flmul@grs^0,c
  2841   000780  6A3E               	clrf	(___flmul@grs+1)^0,c
  2842   000782  6A3F               	clrf	(___flmul@grs+2)^0,c
  2843   000784  6A40               	clrf	(___flmul@grs+3)^0,c
  2844   000786  5048               	movf	(___flmul@temp+1)^0,w,c
  2845   000788  6E43               	movwf	___flmul@prod^0,c
  2846   00078A  6A44               	clrf	(___flmul@prod+1)^0,c
  2847   00078C  6A45               	clrf	(___flmul@prod+2)^0,c
  2848   00078E  6A46               	clrf	(___flmul@prod+3)^0,c
  2849   000790  5035               	movf	(___flmul@a+1)^0,w,c
  2850   000792  0231               	mulwf	(___flmul@b+1)^0,c
  2851   000794  CFF3 F047          	movff	prodl,___flmul@temp
  2852   000798  CFF4 F048          	movff	prodh,___flmul@temp+1
  2853   00079C  5047               	movf	___flmul@temp^0,w,c
  2854   00079E  263D               	addwf	___flmul@grs^0,f,c
  2855   0007A0  0E00               	movlw	0
  2856   0007A2  223E               	addwfc	(___flmul@grs+1)^0,f,c
  2857   0007A4  223F               	addwfc	(___flmul@grs+2)^0,f,c
  2858   0007A6  2240               	addwfc	(___flmul@grs+3)^0,f,c
  2859   0007A8  5048               	movf	(___flmul@temp+1)^0,w,c
  2860   0007AA  2643               	addwf	___flmul@prod^0,f,c
  2861   0007AC  0E00               	movlw	0
  2862   0007AE  2244               	addwfc	(___flmul@prod+1)^0,f,c
  2863   0007B0  2245               	addwfc	(___flmul@prod+2)^0,f,c
  2864   0007B2  2246               	addwfc	(___flmul@prod+3)^0,f,c
  2865   0007B4  5034               	movf	___flmul@a^0,w,c
  2866   0007B6  0232               	mulwf	(___flmul@b+2)^0,c
  2867   0007B8  CFF3 F047          	movff	prodl,___flmul@temp
  2868   0007BC  CFF4 F048          	movff	prodh,___flmul@temp+1
  2869   0007C0  5047               	movf	___flmul@temp^0,w,c
  2870   0007C2  263D               	addwf	___flmul@grs^0,f,c
  2871   0007C4  0E00               	movlw	0
  2872   0007C6  223E               	addwfc	(___flmul@grs+1)^0,f,c
  2873   0007C8  223F               	addwfc	(___flmul@grs+2)^0,f,c
  2874   0007CA  2240               	addwfc	(___flmul@grs+3)^0,f,c
  2875   0007CC  5048               	movf	(___flmul@temp+1)^0,w,c
  2876   0007CE  2643               	addwf	___flmul@prod^0,f,c
  2877   0007D0  0E00               	movlw	0
  2878   0007D2  2244               	addwfc	(___flmul@prod+1)^0,f,c
  2879   0007D4  2245               	addwfc	(___flmul@prod+2)^0,f,c
  2880   0007D6  2246               	addwfc	(___flmul@prod+3)^0,f,c
  2881   0007D8  C03F  F040         	movff	___flmul@grs+2,___flmul@grs+3
  2882   0007DC  C03E  F03F         	movff	___flmul@grs+1,___flmul@grs+2
  2883   0007E0  C03D  F03E         	movff	___flmul@grs,___flmul@grs+1
  2884   0007E4  6A3D               	clrf	___flmul@grs^0,c
  2885   0007E6  5034               	movf	___flmul@a^0,w,c
  2886   0007E8  0231               	mulwf	(___flmul@b+1)^0,c
  2887   0007EA  CFF3 F047          	movff	prodl,___flmul@temp
  2888   0007EE  CFF4 F048          	movff	prodh,___flmul@temp+1
  2889   0007F2  5047               	movf	___flmul@temp^0,w,c
  2890   0007F4  263D               	addwf	___flmul@grs^0,f,c
  2891   0007F6  5048               	movf	(___flmul@temp+1)^0,w,c
  2892   0007F8  223E               	addwfc	(___flmul@grs+1)^0,f,c
  2893   0007FA  0E00               	movlw	0
  2894   0007FC  223F               	addwfc	(___flmul@grs+2)^0,f,c
  2895   0007FE  0E00               	movlw	0
  2896   000800  2240               	addwfc	(___flmul@grs+3)^0,f,c
  2897   000802  5035               	movf	(___flmul@a+1)^0,w,c
  2898   000804  0230               	mulwf	___flmul@b^0,c
  2899   000806  CFF3 F047          	movff	prodl,___flmul@temp
  2900   00080A  CFF4 F048          	movff	prodh,___flmul@temp+1
  2901   00080E  5047               	movf	___flmul@temp^0,w,c
  2902   000810  263D               	addwf	___flmul@grs^0,f,c
  2903   000812  5048               	movf	(___flmul@temp+1)^0,w,c
  2904   000814  223E               	addwfc	(___flmul@grs+1)^0,f,c
  2905   000816  0E00               	movlw	0
  2906   000818  223F               	addwfc	(___flmul@grs+2)^0,f,c
  2907   00081A  0E00               	movlw	0
  2908   00081C  2240               	addwfc	(___flmul@grs+3)^0,f,c
  2909   00081E  C03F  F040         	movff	___flmul@grs+2,___flmul@grs+3
  2910   000822  C03E  F03F         	movff	___flmul@grs+1,___flmul@grs+2
  2911   000826  C03D  F03E         	movff	___flmul@grs,___flmul@grs+1
  2912   00082A  6A3D               	clrf	___flmul@grs^0,c
  2913   00082C  5034               	movf	___flmul@a^0,w,c
  2914   00082E  0230               	mulwf	___flmul@b^0,c
  2915   000830  CFF3 F047          	movff	prodl,___flmul@temp
  2916   000834  CFF4 F048          	movff	prodh,___flmul@temp+1
  2917   000838  5047               	movf	___flmul@temp^0,w,c
  2918   00083A  263D               	addwf	___flmul@grs^0,f,c
  2919   00083C  5048               	movf	(___flmul@temp+1)^0,w,c
  2920   00083E  223E               	addwfc	(___flmul@grs+1)^0,f,c
  2921   000840  0E00               	movlw	0
  2922   000842  223F               	addwfc	(___flmul@grs+2)^0,f,c
  2923   000844  0E00               	movlw	0
  2924   000846  2240               	addwfc	(___flmul@grs+3)^0,f,c
  2925   000848  5036               	movf	(___flmul@a+2)^0,w,c
  2926   00084A  0231               	mulwf	(___flmul@b+1)^0,c
  2927   00084C  CFF3 F047          	movff	prodl,___flmul@temp
  2928   000850  CFF4 F048          	movff	prodh,___flmul@temp+1
  2929   000854  5047               	movf	___flmul@temp^0,w,c
  2930   000856  2643               	addwf	___flmul@prod^0,f,c
  2931   000858  5048               	movf	(___flmul@temp+1)^0,w,c
  2932   00085A  2244               	addwfc	(___flmul@prod+1)^0,f,c
  2933   00085C  0E00               	movlw	0
  2934   00085E  2245               	addwfc	(___flmul@prod+2)^0,f,c
  2935   000860  0E00               	movlw	0
  2936   000862  2246               	addwfc	(___flmul@prod+3)^0,f,c
  2937   000864  5035               	movf	(___flmul@a+1)^0,w,c
  2938   000866  0232               	mulwf	(___flmul@b+2)^0,c
  2939   000868  CFF3 F047          	movff	prodl,___flmul@temp
  2940   00086C  CFF4 F048          	movff	prodh,___flmul@temp+1
  2941   000870  5047               	movf	___flmul@temp^0,w,c
  2942   000872  2643               	addwf	___flmul@prod^0,f,c
  2943   000874  5048               	movf	(___flmul@temp+1)^0,w,c
  2944   000876  2244               	addwfc	(___flmul@prod+1)^0,f,c
  2945   000878  0E00               	movlw	0
  2946   00087A  2245               	addwfc	(___flmul@prod+2)^0,f,c
  2947   00087C  0E00               	movlw	0
  2948   00087E  2246               	addwfc	(___flmul@prod+3)^0,f,c
  2949   000880  5036               	movf	(___flmul@a+2)^0,w,c
  2950   000882  0232               	mulwf	(___flmul@b+2)^0,c
  2951   000884  CFF3 F047          	movff	prodl,___flmul@temp
  2952   000888  CFF4 F048          	movff	prodh,___flmul@temp+1
  2953   00088C  5047               	movf	___flmul@temp^0,w,c
  2954   00088E  6E38               	movwf	??___flmul^0,c
  2955   000890  5048               	movf	(___flmul@temp+1)^0,w,c
  2956   000892  6E39               	movwf	(??___flmul+1)^0,c
  2957   000894  6A3A               	clrf	(??___flmul+2)^0,c
  2958   000896  6A3B               	clrf	(??___flmul+3)^0,c
  2959   000898  C03A  F03B         	movff	??___flmul+2,??___flmul+3
  2960   00089C  C039  F03A         	movff	??___flmul+1,??___flmul+2
  2961   0008A0  C038  F039         	movff	??___flmul,??___flmul+1
  2962   0008A4  6A38               	clrf	??___flmul^0,c
  2963   0008A6  5038               	movf	??___flmul^0,w,c
  2964   0008A8  2643               	addwf	___flmul@prod^0,f,c
  2965   0008AA  5039               	movf	(??___flmul+1)^0,w,c
  2966   0008AC  2244               	addwfc	(___flmul@prod+1)^0,f,c
  2967   0008AE  503A               	movf	(??___flmul+2)^0,w,c
  2968   0008B0  2245               	addwfc	(___flmul@prod+2)^0,f,c
  2969   0008B2  503B               	movf	(??___flmul+3)^0,w,c
  2970   0008B4  2246               	addwfc	(___flmul@prod+3)^0,f,c
  2971   0008B6  C03D  F038         	movff	___flmul@grs,??___flmul
  2972   0008BA  C03E  F039         	movff	___flmul@grs+1,??___flmul+1
  2973   0008BE  C03F  F03A         	movff	___flmul@grs+2,??___flmul+2
  2974   0008C2  C040  F03B         	movff	___flmul@grs+3,??___flmul+3
  2975   0008C6  0E19               	movlw	25
  2976   0008C8  EF6B  F004         	goto	u2520
  2977   0008CC                     u2525:
  2978   0008CC  90D8               	bcf	status,0,c
  2979   0008CE  323B               	rrcf	(??___flmul+3)^0,f,c
  2980   0008D0  323A               	rrcf	(??___flmul+2)^0,f,c
  2981   0008D2  3239               	rrcf	(??___flmul+1)^0,f,c
  2982   0008D4  3238               	rrcf	??___flmul^0,f,c
  2983   0008D6                     u2520:
  2984   0008D6  2EE8               	decfsz	wreg,f,c
  2985   0008D8  EF66  F004         	goto	u2525
  2986   0008DC  5038               	movf	??___flmul^0,w,c
  2987   0008DE  2643               	addwf	___flmul@prod^0,f,c
  2988   0008E0  5039               	movf	(??___flmul+1)^0,w,c
  2989   0008E2  2244               	addwfc	(___flmul@prod+1)^0,f,c
  2990   0008E4  503A               	movf	(??___flmul+2)^0,w,c
  2991   0008E6  2245               	addwfc	(___flmul@prod+2)^0,f,c
  2992   0008E8  503B               	movf	(??___flmul+3)^0,w,c
  2993   0008EA  2246               	addwfc	(___flmul@prod+3)^0,f,c
  2994   0008EC  C03F  F040         	movff	___flmul@grs+2,___flmul@grs+3
  2995   0008F0  C03E  F03F         	movff	___flmul@grs+1,___flmul@grs+2
  2996   0008F4  C03D  F03E         	movff	___flmul@grs,___flmul@grs+1
  2997   0008F8  6A3D               	clrf	___flmul@grs^0,c
  2998   0008FA  5041               	movf	___flmul@aexp^0,w,c
  2999   0008FC  C042  F038         	movff	___flmul@bexp,??___flmul
  3000   000900  6A39               	clrf	(??___flmul+1)^0,c
  3001   000902  2638               	addwf	??___flmul^0,f,c
  3002   000904  0E00               	movlw	0
  3003   000906  2239               	addwfc	(??___flmul+1)^0,f,c
  3004   000908  0E82               	movlw	130
  3005   00090A  2438               	addwf	??___flmul^0,w,c
  3006   00090C  6E47               	movwf	___flmul@temp^0,c
  3007   00090E  0EFF               	movlw	255
  3008   000910  2039               	addwfc	(??___flmul+1)^0,w,c
  3009   000912  6E48               	movwf	(___flmul@temp+1)^0,c
  3010   000914  EFA1  F004         	goto	l3209
  3011   000918                     l3203:
  3012   000918  90D8               	bcf	status,0,c
  3013   00091A  3643               	rlcf	___flmul@prod^0,f,c
  3014   00091C  3644               	rlcf	(___flmul@prod+1)^0,f,c
  3015   00091E  3645               	rlcf	(___flmul@prod+2)^0,f,c
  3016   000920  3646               	rlcf	(___flmul@prod+3)^0,f,c
  3017   000922  AE40               	btfss	(___flmul@grs+3)^0,7,c
  3018   000924  EF96  F004         	goto	u2531
  3019   000928  EF98  F004         	goto	u2530
  3020   00092C                     u2531:
  3021   00092C  EF99  F004         	goto	l1267
  3022   000930                     u2530:
  3023   000930  8043               	bsf	___flmul@prod^0,0,c
  3024   000932                     l1267:
  3025   000932  90D8               	bcf	status,0,c
  3026   000934  363D               	rlcf	___flmul@grs^0,f,c
  3027   000936  363E               	rlcf	(___flmul@grs+1)^0,f,c
  3028   000938  363F               	rlcf	(___flmul@grs+2)^0,f,c
  3029   00093A  3640               	rlcf	(___flmul@grs+3)^0,f,c
  3030   00093C  0647               	decf	___flmul@temp^0,f,c
  3031   00093E  A0D8               	btfss	status,0,c
  3032   000940  0648               	decf	(___flmul@temp+1)^0,f,c
  3033   000942                     l3209:
  3034   000942  AE45               	btfss	(___flmul@prod+2)^0,7,c
  3035   000944  EFA6  F004         	goto	u2541
  3036   000948  EFA8  F004         	goto	u2540
  3037   00094C                     u2541:
  3038   00094C  EF8C  F004         	goto	l3203
  3039   000950                     u2540:
  3040   000950  0E00               	movlw	0
  3041   000952  6E41               	movwf	___flmul@aexp^0,c
  3042   000954  AE40               	btfss	(___flmul@grs+3)^0,7,c
  3043   000956  EFAF  F004         	goto	u2551
  3044   00095A  EFB1  F004         	goto	u2550
  3045   00095E                     u2551:
  3046   00095E  EFD5  F004         	goto	l1269
  3047   000962                     u2550:
  3048   000962  0EFF               	movlw	255
  3049   000964  143D               	andwf	___flmul@grs^0,w,c
  3050   000966  6E38               	movwf	??___flmul^0,c
  3051   000968  0EFF               	movlw	255
  3052   00096A  143E               	andwf	(___flmul@grs+1)^0,w,c
  3053   00096C  6E39               	movwf	(??___flmul+1)^0,c
  3054   00096E  0EFF               	movlw	255
  3055   000970  143F               	andwf	(___flmul@grs+2)^0,w,c
  3056   000972  6E3A               	movwf	(??___flmul+2)^0,c
  3057   000974  0E7F               	movlw	127
  3058   000976  1440               	andwf	(___flmul@grs+3)^0,w,c
  3059   000978  6E3B               	movwf	(??___flmul+3)^0,c
  3060   00097A  5038               	movf	??___flmul^0,w,c
  3061   00097C  1039               	iorwf	(??___flmul+1)^0,w,c
  3062   00097E  103A               	iorwf	(??___flmul+2)^0,w,c
  3063   000980  103B               	iorwf	(??___flmul+3)^0,w,c
  3064   000982  B4D8               	btfsc	status,2,c
  3065   000984  EFC6  F004         	goto	u2561
  3066   000988  EFC8  F004         	goto	u2560
  3067   00098C                     u2561:
  3068   00098C  EFCC  F004         	goto	l1270
  3069   000990                     u2560:
  3070   000990                     l3217:
  3071   000990  0E01               	movlw	1
  3072   000992  6E41               	movwf	___flmul@aexp^0,c
  3073   000994  EFD5  F004         	goto	l1269
  3074   000998                     l1270:
  3075   000998  A043               	btfss	___flmul@prod^0,0,c
  3076   00099A  EFD1  F004         	goto	u2571
  3077   00099E  EFD3  F004         	goto	u2570
  3078   0009A2                     u2571:
  3079   0009A2  EFD5  F004         	goto	l1269
  3080   0009A6                     u2570:
  3081   0009A6  EFC8  F004         	goto	l3217
  3082   0009AA                     l1269:
  3083   0009AA  5041               	movf	___flmul@aexp^0,w,c
  3084   0009AC  B4D8               	btfsc	status,2,c
  3085   0009AE  EFDB  F004         	goto	u2581
  3086   0009B2  EFDD  F004         	goto	u2580
  3087   0009B6                     u2581:
  3088   0009B6  EF01  F005         	goto	l3229
  3089   0009BA                     u2580:
  3090   0009BA  0E01               	movlw	1
  3091   0009BC  2643               	addwf	___flmul@prod^0,f,c
  3092   0009BE  0E00               	movlw	0
  3093   0009C0  2244               	addwfc	(___flmul@prod+1)^0,f,c
  3094   0009C2  2245               	addwfc	(___flmul@prod+2)^0,f,c
  3095   0009C4  2246               	addwfc	(___flmul@prod+3)^0,f,c
  3096   0009C6  A046               	btfss	(___flmul@prod+3)^0,0,c
  3097   0009C8  EFE8  F004         	goto	u2591
  3098   0009CC  EFEA  F004         	goto	u2590
  3099   0009D0                     u2591:
  3100   0009D0  EF01  F005         	goto	l3229
  3101   0009D4                     u2590:
  3102   0009D4  C043  F038         	movff	___flmul@prod,??___flmul
  3103   0009D8  C044  F039         	movff	___flmul@prod+1,??___flmul+1
  3104   0009DC  C045  F03A         	movff	___flmul@prod+2,??___flmul+2
  3105   0009E0  C046  F03B         	movff	___flmul@prod+3,??___flmul+3
  3106   0009E4  343B               	rlcf	(??___flmul+3)^0,w,c
  3107   0009E6  323B               	rrcf	(??___flmul+3)^0,f,c
  3108   0009E8  323A               	rrcf	(??___flmul+2)^0,f,c
  3109   0009EA  3239               	rrcf	(??___flmul+1)^0,f,c
  3110   0009EC  3238               	rrcf	??___flmul^0,f,c
  3111   0009EE  C038  F043         	movff	??___flmul,___flmul@prod
  3112   0009F2  C039  F044         	movff	??___flmul+1,___flmul@prod+1
  3113   0009F6  C03A  F045         	movff	??___flmul+2,___flmul@prod+2
  3114   0009FA  C03B  F046         	movff	??___flmul+3,___flmul@prod+3
  3115   0009FE  4A47               	infsnz	___flmul@temp^0,f,c
  3116   000A00  2A48               	incf	(___flmul@temp+1)^0,f,c
  3117   000A02                     l3229:
  3118   000A02  BE48               	btfsc	(___flmul@temp+1)^0,7,c
  3119   000A04  EF0C  F005         	goto	u2601
  3120   000A08  5048               	movf	(___flmul@temp+1)^0,w,c
  3121   000A0A  E108               	bnz	u2600
  3122   000A0C  2847               	incf	___flmul@temp^0,w,c
  3123   000A0E  A0D8               	btfss	status,0,c
  3124   000A10  EF0C  F005         	goto	u2601
  3125   000A14  EF0E  F005         	goto	u2600
  3126   000A18                     u2601:
  3127   000A18  EF18  F005         	goto	l3233
  3128   000A1C                     u2600:
  3129   000A1C  0E00               	movlw	0
  3130   000A1E  6E43               	movwf	___flmul@prod^0,c
  3131   000A20  0E00               	movlw	0
  3132   000A22  6E44               	movwf	(___flmul@prod+1)^0,c
  3133   000A24  0E80               	movlw	128
  3134   000A26  6E45               	movwf	(___flmul@prod+2)^0,c
  3135   000A28  0E7F               	movlw	127
  3136   000A2A  6E46               	movwf	(___flmul@prod+3)^0,c
  3137   000A2C  EF46  F005         	goto	l3245
  3138   000A30                     l3233:
  3139   000A30  BE48               	btfsc	(___flmul@temp+1)^0,7,c
  3140   000A32  EF25  F005         	goto	u2610
  3141   000A36  5048               	movf	(___flmul@temp+1)^0,w,c
  3142   000A38  E106               	bnz	u2611
  3143   000A3A  0447               	decf	___flmul@temp^0,w,c
  3144   000A3C  B0D8               	btfsc	status,0,c
  3145   000A3E  EF23  F005         	goto	u2611
  3146   000A42  EF25  F005         	goto	u2610
  3147   000A46                     u2611:
  3148   000A46  EF31  F005         	goto	l1277
  3149   000A4A                     u2610:
  3150   000A4A  0E00               	movlw	0
  3151   000A4C  6E43               	movwf	___flmul@prod^0,c
  3152   000A4E  0E00               	movlw	0
  3153   000A50  6E44               	movwf	(___flmul@prod+1)^0,c
  3154   000A52  0E00               	movlw	0
  3155   000A54  6E45               	movwf	(___flmul@prod+2)^0,c
  3156   000A56  0E00               	movlw	0
  3157   000A58  6E46               	movwf	(___flmul@prod+3)^0,c
  3158   000A5A  0E00               	movlw	0
  3159   000A5C  6E3C               	movwf	___flmul@sign^0,c
  3160   000A5E  EF46  F005         	goto	l3245
  3161   000A62                     l1277:
  3162   000A62  C047  F042         	movff	___flmul@temp,___flmul@bexp
  3163   000A66  0EFF               	movlw	255
  3164   000A68  1643               	andwf	___flmul@prod^0,f,c
  3165   000A6A  0EFF               	movlw	255
  3166   000A6C  1644               	andwf	(___flmul@prod+1)^0,f,c
  3167   000A6E  0E7F               	movlw	127
  3168   000A70  1645               	andwf	(___flmul@prod+2)^0,f,c
  3169   000A72  0E00               	movlw	0
  3170   000A74  1646               	andwf	(___flmul@prod+3)^0,f,c
  3171   000A76  A042               	btfss	___flmul@bexp^0,0,c
  3172   000A78  EF40  F005         	goto	u2621
  3173   000A7C  EF42  F005         	goto	u2620
  3174   000A80                     u2621:
  3175   000A80  EF43  F005         	goto	l3243
  3176   000A84                     u2620:
  3177   000A84  8E45               	bsf	(___flmul@prod+2)^0,7,c
  3178   000A86                     l3243:
  3179   000A86  90D8               	bcf	status,0,c
  3180   000A88  3042               	rrcf	___flmul@bexp^0,w,c
  3181   000A8A  6E46               	movwf	(___flmul@prod+3)^0,c
  3182   000A8C                     l3245:
  3183   000A8C  503C               	movf	___flmul@sign^0,w,c
  3184   000A8E  1246               	iorwf	(___flmul@prod+3)^0,f,c
  3185   000A90  C043  F030         	movff	___flmul@prod,?___flmul
  3186   000A94  C044  F031         	movff	___flmul@prod+1,?___flmul+1
  3187   000A98  C045  F032         	movff	___flmul@prod+2,?___flmul+2
  3188   000A9C  C046  F033         	movff	___flmul@prod+3,?___flmul+3
  3189   000AA0                     l1264:
  3190   000AA0  0012               	return		;funcret
  3191   000AA2                     __end_of___flmul:
  3192                           	callstack 0
  3193                           
  3194 ;; *************** function ___fldiv *****************
  3195 ;; Defined at:
  3196 ;;		line 11 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\sprcdiv.c"
  3197 ;; Parameters:    Size  Location     Type
  3198 ;;  b               4   22[COMRAM] unsigned char 
  3199 ;;  a               4   26[COMRAM] unsigned char 
  3200 ;; Auto vars:     Size  Location     Type
  3201 ;;  grs             4   41[COMRAM] unsigned long 
  3202 ;;  rem             4   34[COMRAM] unsigned long 
  3203 ;;  new_exp         2   39[COMRAM] short 
  3204 ;;  aexp            1   46[COMRAM] unsigned char 
  3205 ;;  bexp            1   45[COMRAM] unsigned char 
  3206 ;;  sign            1   38[COMRAM] unsigned char 
  3207 ;; Return value:  Size  Location     Type
  3208 ;;                  4   22[COMRAM] unsigned char 
  3209 ;; Registers used:
  3210 ;;		wreg, status,2, status,0
  3211 ;; Tracked objects:
  3212 ;;		On entry : 0/0
  3213 ;;		On exit  : 0/0
  3214 ;;		Unchanged: 0/0
  3215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3216 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3217 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3218 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3219 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3220 ;;Total ram usage:       25 bytes
  3221 ;; Hardware stack levels used: 1
  3222 ;; Hardware stack levels required when called: 7
  3223 ;; This function calls:
  3224 ;;		Nothing
  3225 ;; This function is called by:
  3226 ;;		_detect_color
  3227 ;; This function uses a non-reentrant model
  3228 ;;
  3229                           
  3230                           	psect	text7
  3231   000AA2                     __ptext7:
  3232                           	callstack 0
  3233   000AA2                     ___fldiv:
  3234                           	callstack 22
  3235   000AA2  501A               	movf	(___fldiv@b+3)^0,w,c
  3236   000AA4  0B80               	andlw	128
  3237   000AA6  6E27               	movwf	___fldiv@sign^0,c
  3238   000AA8  501A               	movf	(___fldiv@b+3)^0,w,c
  3239   000AAA  241A               	addwf	(___fldiv@b+3)^0,w,c
  3240   000AAC  6E2E               	movwf	___fldiv@bexp^0,c
  3241   000AAE  AE19               	btfss	(___fldiv@b+2)^0,7,c
  3242   000AB0  EF5C  F005         	goto	u2211
  3243   000AB4  EF5E  F005         	goto	u2210
  3244   000AB8                     u2211:
  3245   000AB8  EF5F  F005         	goto	l2989
  3246   000ABC                     u2210:
  3247   000ABC  802E               	bsf	___fldiv@bexp^0,0,c
  3248   000ABE                     l2989:
  3249   000ABE  502E               	movf	___fldiv@bexp^0,w,c
  3250   000AC0  B4D8               	btfsc	status,2,c
  3251   000AC2  EF65  F005         	goto	u2221
  3252   000AC6  EF67  F005         	goto	u2220
  3253   000ACA                     u2221:
  3254   000ACA  EF7C  F005         	goto	l2999
  3255   000ACE                     u2220:
  3256   000ACE  282E               	incf	___fldiv@bexp^0,w,c
  3257   000AD0  A4D8               	btfss	status,2,c
  3258   000AD2  EF6D  F005         	goto	u2231
  3259   000AD6  EF6F  F005         	goto	u2230
  3260   000ADA                     u2231:
  3261   000ADA  EF77  F005         	goto	l2995
  3262   000ADE                     u2230:
  3263   000ADE  0E00               	movlw	0
  3264   000AE0  6E17               	movwf	___fldiv@b^0,c
  3265   000AE2  0E00               	movlw	0
  3266   000AE4  6E18               	movwf	(___fldiv@b+1)^0,c
  3267   000AE6  0E00               	movlw	0
  3268   000AE8  6E19               	movwf	(___fldiv@b+2)^0,c
  3269   000AEA  0E00               	movlw	0
  3270   000AEC  6E1A               	movwf	(___fldiv@b+3)^0,c
  3271   000AEE                     l2995:
  3272   000AEE  8E19               	bsf	(___fldiv@b+2)^0,7,c
  3273   000AF0  0E00               	movlw	0
  3274   000AF2  6E1A               	movwf	(___fldiv@b+3)^0,c
  3275   000AF4  EF84  F005         	goto	l3001
  3276   000AF8                     l2999:
  3277   000AF8  0E00               	movlw	0
  3278   000AFA  6E17               	movwf	___fldiv@b^0,c
  3279   000AFC  0E00               	movlw	0
  3280   000AFE  6E18               	movwf	(___fldiv@b+1)^0,c
  3281   000B00  0E00               	movlw	0
  3282   000B02  6E19               	movwf	(___fldiv@b+2)^0,c
  3283   000B04  0E00               	movlw	0
  3284   000B06  6E1A               	movwf	(___fldiv@b+3)^0,c
  3285   000B08                     l3001:
  3286   000B08  501E               	movf	(___fldiv@a+3)^0,w,c
  3287   000B0A  0B80               	andlw	128
  3288   000B0C  1A27               	xorwf	___fldiv@sign^0,f,c
  3289   000B0E  501E               	movf	(___fldiv@a+3)^0,w,c
  3290   000B10  241E               	addwf	(___fldiv@a+3)^0,w,c
  3291   000B12  6E2F               	movwf	___fldiv@aexp^0,c
  3292   000B14  AE1D               	btfss	(___fldiv@a+2)^0,7,c
  3293   000B16  EF8F  F005         	goto	u2241
  3294   000B1A  EF91  F005         	goto	u2240
  3295   000B1E                     u2241:
  3296   000B1E  EF92  F005         	goto	l3009
  3297   000B22                     u2240:
  3298   000B22  802F               	bsf	___fldiv@aexp^0,0,c
  3299   000B24                     l3009:
  3300   000B24  502F               	movf	___fldiv@aexp^0,w,c
  3301   000B26  B4D8               	btfsc	status,2,c
  3302   000B28  EF98  F005         	goto	u2251
  3303   000B2C  EF9A  F005         	goto	u2250
  3304   000B30                     u2251:
  3305   000B30  EFAF  F005         	goto	l3019
  3306   000B34                     u2250:
  3307   000B34  282F               	incf	___fldiv@aexp^0,w,c
  3308   000B36  A4D8               	btfss	status,2,c
  3309   000B38  EFA0  F005         	goto	u2261
  3310   000B3C  EFA2  F005         	goto	u2260
  3311   000B40                     u2261:
  3312   000B40  EFAA  F005         	goto	l3015
  3313   000B44                     u2260:
  3314   000B44  0E00               	movlw	0
  3315   000B46  6E1B               	movwf	___fldiv@a^0,c
  3316   000B48  0E00               	movlw	0
  3317   000B4A  6E1C               	movwf	(___fldiv@a+1)^0,c
  3318   000B4C  0E00               	movlw	0
  3319   000B4E  6E1D               	movwf	(___fldiv@a+2)^0,c
  3320   000B50  0E00               	movlw	0
  3321   000B52  6E1E               	movwf	(___fldiv@a+3)^0,c
  3322   000B54                     l3015:
  3323   000B54  8E1D               	bsf	(___fldiv@a+2)^0,7,c
  3324   000B56  0E00               	movlw	0
  3325   000B58  6E1E               	movwf	(___fldiv@a+3)^0,c
  3326   000B5A  EFB7  F005         	goto	l3021
  3327   000B5E                     l3019:
  3328   000B5E  0E00               	movlw	0
  3329   000B60  6E1B               	movwf	___fldiv@a^0,c
  3330   000B62  0E00               	movlw	0
  3331   000B64  6E1C               	movwf	(___fldiv@a+1)^0,c
  3332   000B66  0E00               	movlw	0
  3333   000B68  6E1D               	movwf	(___fldiv@a+2)^0,c
  3334   000B6A  0E00               	movlw	0
  3335   000B6C  6E1E               	movwf	(___fldiv@a+3)^0,c
  3336   000B6E                     l3021:
  3337   000B6E  501B               	movf	___fldiv@a^0,w,c
  3338   000B70  101C               	iorwf	(___fldiv@a+1)^0,w,c
  3339   000B72  101D               	iorwf	(___fldiv@a+2)^0,w,c
  3340   000B74  101E               	iorwf	(___fldiv@a+3)^0,w,c
  3341   000B76  A4D8               	btfss	status,2,c
  3342   000B78  EFC0  F005         	goto	u2271
  3343   000B7C  EFC2  F005         	goto	u2270
  3344   000B80                     u2271:
  3345   000B80  EFDA  F005         	goto	l3033
  3346   000B84                     u2270:
  3347   000B84  0E00               	movlw	0
  3348   000B86  6E17               	movwf	___fldiv@b^0,c
  3349   000B88  0E00               	movlw	0
  3350   000B8A  6E18               	movwf	(___fldiv@b+1)^0,c
  3351   000B8C  0E00               	movlw	0
  3352   000B8E  6E19               	movwf	(___fldiv@b+2)^0,c
  3353   000B90  0E00               	movlw	0
  3354   000B92  6E1A               	movwf	(___fldiv@b+3)^0,c
  3355   000B94  0E80               	movlw	128
  3356   000B96  1219               	iorwf	(___fldiv@b+2)^0,f,c
  3357   000B98  0E7F               	movlw	127
  3358   000B9A  121A               	iorwf	(___fldiv@b+3)^0,f,c
  3359   000B9C                     l3027:
  3360   000B9C  5027               	movf	___fldiv@sign^0,w,c
  3361   000B9E  121A               	iorwf	(___fldiv@b+3)^0,f,c
  3362   000BA0  C017  F017         	movff	___fldiv@b,?___fldiv
  3363   000BA4  C018  F018         	movff	___fldiv@b+1,?___fldiv+1
  3364   000BA8  C019  F019         	movff	___fldiv@b+2,?___fldiv+2
  3365   000BAC  C01A  F01A         	movff	___fldiv@b+3,?___fldiv+3
  3366   000BB0  EF1D  F007         	goto	l1228
  3367   000BB4                     l3033:
  3368   000BB4  502E               	movf	___fldiv@bexp^0,w,c
  3369   000BB6  A4D8               	btfss	status,2,c
  3370   000BB8  EFE0  F005         	goto	u2281
  3371   000BBC  EFE2  F005         	goto	u2280
  3372   000BC0                     u2281:
  3373   000BC0  EFEC  F005         	goto	l3041
  3374   000BC4                     u2280:
  3375   000BC4  0E00               	movlw	0
  3376   000BC6  6E17               	movwf	?___fldiv^0,c
  3377   000BC8  0E00               	movlw	0
  3378   000BCA  6E18               	movwf	(?___fldiv+1)^0,c
  3379   000BCC  0E00               	movlw	0
  3380   000BCE  6E19               	movwf	(?___fldiv+2)^0,c
  3381   000BD0  0E00               	movlw	0
  3382   000BD2  6E1A               	movwf	(?___fldiv+3)^0,c
  3383   000BD4  EF1D  F007         	goto	l1228
  3384   000BD8                     l3041:
  3385   000BD8  502F               	movf	___fldiv@aexp^0,w,c
  3386   000BDA  C02E  F01F         	movff	___fldiv@bexp,??___fldiv
  3387   000BDE  6A20               	clrf	(??___fldiv+1)^0,c
  3388   000BE0  5E1F               	subwf	??___fldiv^0,f,c
  3389   000BE2  0E00               	movlw	0
  3390   000BE4  5A20               	subwfb	(??___fldiv+1)^0,f,c
  3391   000BE6  0E7F               	movlw	127
  3392   000BE8  241F               	addwf	??___fldiv^0,w,c
  3393   000BEA  6E28               	movwf	___fldiv@new_exp^0,c
  3394   000BEC  0E00               	movlw	0
  3395   000BEE  2020               	addwfc	(??___fldiv+1)^0,w,c
  3396   000BF0  6E29               	movwf	(___fldiv@new_exp+1)^0,c
  3397   000BF2  C017  F023         	movff	___fldiv@b,___fldiv@rem
  3398   000BF6  C018  F024         	movff	___fldiv@b+1,___fldiv@rem+1
  3399   000BFA  C019  F025         	movff	___fldiv@b+2,___fldiv@rem+2
  3400   000BFE  C01A  F026         	movff	___fldiv@b+3,___fldiv@rem+3
  3401   000C02  0E00               	movlw	0
  3402   000C04  6E17               	movwf	___fldiv@b^0,c
  3403   000C06  0E00               	movlw	0
  3404   000C08  6E18               	movwf	(___fldiv@b+1)^0,c
  3405   000C0A  0E00               	movlw	0
  3406   000C0C  6E19               	movwf	(___fldiv@b+2)^0,c
  3407   000C0E  0E00               	movlw	0
  3408   000C10  6E1A               	movwf	(___fldiv@b+3)^0,c
  3409   000C12  0E00               	movlw	0
  3410   000C14  6E2A               	movwf	___fldiv@grs^0,c
  3411   000C16  0E00               	movlw	0
  3412   000C18  6E2B               	movwf	(___fldiv@grs+1)^0,c
  3413   000C1A  0E00               	movlw	0
  3414   000C1C  6E2C               	movwf	(___fldiv@grs+2)^0,c
  3415   000C1E  0E00               	movlw	0
  3416   000C20  6E2D               	movwf	(___fldiv@grs+3)^0,c
  3417   000C22  0E00               	movlw	0
  3418   000C24  6E2F               	movwf	___fldiv@aexp^0,c
  3419   000C26  EF4D  F006         	goto	l1230
  3420   000C2A                     l3051:
  3421   000C2A  502F               	movf	___fldiv@aexp^0,w,c
  3422   000C2C  B4D8               	btfsc	status,2,c
  3423   000C2E  EF1B  F006         	goto	u2291
  3424   000C32  EF1D  F006         	goto	u2290
  3425   000C36                     u2291:
  3426   000C36  EF34  F006         	goto	l3059
  3427   000C3A                     u2290:
  3428   000C3A  90D8               	bcf	status,0,c
  3429   000C3C  3623               	rlcf	___fldiv@rem^0,f,c
  3430   000C3E  3624               	rlcf	(___fldiv@rem+1)^0,f,c
  3431   000C40  3625               	rlcf	(___fldiv@rem+2)^0,f,c
  3432   000C42  3626               	rlcf	(___fldiv@rem+3)^0,f,c
  3433   000C44  90D8               	bcf	status,0,c
  3434   000C46  3617               	rlcf	___fldiv@b^0,f,c
  3435   000C48  3618               	rlcf	(___fldiv@b+1)^0,f,c
  3436   000C4A  3619               	rlcf	(___fldiv@b+2)^0,f,c
  3437   000C4C  361A               	rlcf	(___fldiv@b+3)^0,f,c
  3438   000C4E  AE2D               	btfss	(___fldiv@grs+3)^0,7,c
  3439   000C50  EF2C  F006         	goto	u2301
  3440   000C54  EF2E  F006         	goto	u2300
  3441   000C58                     u2301:
  3442   000C58  EF2F  F006         	goto	l1233
  3443   000C5C                     u2300:
  3444   000C5C  8017               	bsf	___fldiv@b^0,0,c
  3445   000C5E                     l1233:
  3446   000C5E  90D8               	bcf	status,0,c
  3447   000C60  362A               	rlcf	___fldiv@grs^0,f,c
  3448   000C62  362B               	rlcf	(___fldiv@grs+1)^0,f,c
  3449   000C64  362C               	rlcf	(___fldiv@grs+2)^0,f,c
  3450   000C66  362D               	rlcf	(___fldiv@grs+3)^0,f,c
  3451   000C68                     l3059:
  3452   000C68  501B               	movf	___fldiv@a^0,w,c
  3453   000C6A  5C23               	subwf	___fldiv@rem^0,w,c
  3454   000C6C  501C               	movf	(___fldiv@a+1)^0,w,c
  3455   000C6E  5824               	subwfb	(___fldiv@rem+1)^0,w,c
  3456   000C70  501D               	movf	(___fldiv@a+2)^0,w,c
  3457   000C72  5825               	subwfb	(___fldiv@rem+2)^0,w,c
  3458   000C74  501E               	movf	(___fldiv@a+3)^0,w,c
  3459   000C76  5826               	subwfb	(___fldiv@rem+3)^0,w,c
  3460   000C78  A0D8               	btfss	status,0,c
  3461   000C7A  EF41  F006         	goto	u2311
  3462   000C7E  EF43  F006         	goto	u2310
  3463   000C82                     u2311:
  3464   000C82  EF4C  F006         	goto	l3065
  3465   000C86                     u2310:
  3466   000C86  8C2D               	bsf	(___fldiv@grs+3)^0,6,c
  3467   000C88  501B               	movf	___fldiv@a^0,w,c
  3468   000C8A  5E23               	subwf	___fldiv@rem^0,f,c
  3469   000C8C  501C               	movf	(___fldiv@a+1)^0,w,c
  3470   000C8E  5A24               	subwfb	(___fldiv@rem+1)^0,f,c
  3471   000C90  501D               	movf	(___fldiv@a+2)^0,w,c
  3472   000C92  5A25               	subwfb	(___fldiv@rem+2)^0,f,c
  3473   000C94  501E               	movf	(___fldiv@a+3)^0,w,c
  3474   000C96  5A26               	subwfb	(___fldiv@rem+3)^0,f,c
  3475   000C98                     l3065:
  3476   000C98  2A2F               	incf	___fldiv@aexp^0,f,c
  3477   000C9A                     l1230:
  3478   000C9A  0E19               	movlw	25
  3479   000C9C  642F               	cpfsgt	___fldiv@aexp^0,c
  3480   000C9E  EF53  F006         	goto	u2321
  3481   000CA2  EF55  F006         	goto	u2320
  3482   000CA6                     u2321:
  3483   000CA6  EF15  F006         	goto	l3051
  3484   000CAA                     u2320:
  3485   000CAA  5023               	movf	___fldiv@rem^0,w,c
  3486   000CAC  1024               	iorwf	(___fldiv@rem+1)^0,w,c
  3487   000CAE  1025               	iorwf	(___fldiv@rem+2)^0,w,c
  3488   000CB0  1026               	iorwf	(___fldiv@rem+3)^0,w,c
  3489   000CB2  B4D8               	btfsc	status,2,c
  3490   000CB4  EF5E  F006         	goto	u2331
  3491   000CB8  EF60  F006         	goto	u2330
  3492   000CBC                     u2331:
  3493   000CBC  EF78  F006         	goto	l3077
  3494   000CC0                     u2330:
  3495   000CC0  802A               	bsf	___fldiv@grs^0,0,c
  3496   000CC2  EF78  F006         	goto	l3077
  3497   000CC6                     l3071:
  3498   000CC6  90D8               	bcf	status,0,c
  3499   000CC8  3617               	rlcf	___fldiv@b^0,f,c
  3500   000CCA  3618               	rlcf	(___fldiv@b+1)^0,f,c
  3501   000CCC  3619               	rlcf	(___fldiv@b+2)^0,f,c
  3502   000CCE  361A               	rlcf	(___fldiv@b+3)^0,f,c
  3503   000CD0  AE2D               	btfss	(___fldiv@grs+3)^0,7,c
  3504   000CD2  EF6D  F006         	goto	u2341
  3505   000CD6  EF6F  F006         	goto	u2340
  3506   000CDA                     u2341:
  3507   000CDA  EF70  F006         	goto	l1239
  3508   000CDE                     u2340:
  3509   000CDE  8017               	bsf	___fldiv@b^0,0,c
  3510   000CE0                     l1239:
  3511   000CE0  90D8               	bcf	status,0,c
  3512   000CE2  362A               	rlcf	___fldiv@grs^0,f,c
  3513   000CE4  362B               	rlcf	(___fldiv@grs+1)^0,f,c
  3514   000CE6  362C               	rlcf	(___fldiv@grs+2)^0,f,c
  3515   000CE8  362D               	rlcf	(___fldiv@grs+3)^0,f,c
  3516   000CEA  0628               	decf	___fldiv@new_exp^0,f,c
  3517   000CEC  A0D8               	btfss	status,0,c
  3518   000CEE  0629               	decf	(___fldiv@new_exp+1)^0,f,c
  3519   000CF0                     l3077:
  3520   000CF0  AE19               	btfss	(___fldiv@b+2)^0,7,c
  3521   000CF2  EF7D  F006         	goto	u2351
  3522   000CF6  EF7F  F006         	goto	u2350
  3523   000CFA                     u2351:
  3524   000CFA  EF63  F006         	goto	l3071
  3525   000CFE                     u2350:
  3526   000CFE  0E00               	movlw	0
  3527   000D00  6E2F               	movwf	___fldiv@aexp^0,c
  3528   000D02  AE2D               	btfss	(___fldiv@grs+3)^0,7,c
  3529   000D04  EF86  F006         	goto	u2361
  3530   000D08  EF88  F006         	goto	u2360
  3531   000D0C                     u2361:
  3532   000D0C  EFAC  F006         	goto	l1241
  3533   000D10                     u2360:
  3534   000D10  0EFF               	movlw	255
  3535   000D12  142A               	andwf	___fldiv@grs^0,w,c
  3536   000D14  6E1F               	movwf	??___fldiv^0,c
  3537   000D16  0EFF               	movlw	255
  3538   000D18  142B               	andwf	(___fldiv@grs+1)^0,w,c
  3539   000D1A  6E20               	movwf	(??___fldiv+1)^0,c
  3540   000D1C  0EFF               	movlw	255
  3541   000D1E  142C               	andwf	(___fldiv@grs+2)^0,w,c
  3542   000D20  6E21               	movwf	(??___fldiv+2)^0,c
  3543   000D22  0E7F               	movlw	127
  3544   000D24  142D               	andwf	(___fldiv@grs+3)^0,w,c
  3545   000D26  6E22               	movwf	(??___fldiv+3)^0,c
  3546   000D28  501F               	movf	??___fldiv^0,w,c
  3547   000D2A  1020               	iorwf	(??___fldiv+1)^0,w,c
  3548   000D2C  1021               	iorwf	(??___fldiv+2)^0,w,c
  3549   000D2E  1022               	iorwf	(??___fldiv+3)^0,w,c
  3550   000D30  B4D8               	btfsc	status,2,c
  3551   000D32  EF9D  F006         	goto	u2371
  3552   000D36  EF9F  F006         	goto	u2370
  3553   000D3A                     u2371:
  3554   000D3A  EFA3  F006         	goto	l1242
  3555   000D3E                     u2370:
  3556   000D3E                     l3085:
  3557   000D3E  0E01               	movlw	1
  3558   000D40  6E2F               	movwf	___fldiv@aexp^0,c
  3559   000D42  EFAC  F006         	goto	l1241
  3560   000D46                     l1242:
  3561   000D46  A017               	btfss	___fldiv@b^0,0,c
  3562   000D48  EFA8  F006         	goto	u2381
  3563   000D4C  EFAA  F006         	goto	u2380
  3564   000D50                     u2381:
  3565   000D50  EFAC  F006         	goto	l1241
  3566   000D54                     u2380:
  3567   000D54  EF9F  F006         	goto	l3085
  3568   000D58                     l1241:
  3569   000D58  502F               	movf	___fldiv@aexp^0,w,c
  3570   000D5A  B4D8               	btfsc	status,2,c
  3571   000D5C  EFB2  F006         	goto	u2391
  3572   000D60  EFB4  F006         	goto	u2390
  3573   000D64                     u2391:
  3574   000D64  EFD8  F006         	goto	l3097
  3575   000D68                     u2390:
  3576   000D68  0E01               	movlw	1
  3577   000D6A  2617               	addwf	___fldiv@b^0,f,c
  3578   000D6C  0E00               	movlw	0
  3579   000D6E  2218               	addwfc	(___fldiv@b+1)^0,f,c
  3580   000D70  2219               	addwfc	(___fldiv@b+2)^0,f,c
  3581   000D72  221A               	addwfc	(___fldiv@b+3)^0,f,c
  3582   000D74  A01A               	btfss	(___fldiv@b+3)^0,0,c
  3583   000D76  EFBF  F006         	goto	u2401
  3584   000D7A  EFC1  F006         	goto	u2400
  3585   000D7E                     u2401:
  3586   000D7E  EFD8  F006         	goto	l3097
  3587   000D82                     u2400:
  3588   000D82  C017  F01F         	movff	___fldiv@b,??___fldiv
  3589   000D86  C018  F020         	movff	___fldiv@b+1,??___fldiv+1
  3590   000D8A  C019  F021         	movff	___fldiv@b+2,??___fldiv+2
  3591   000D8E  C01A  F022         	movff	___fldiv@b+3,??___fldiv+3
  3592   000D92  3422               	rlcf	(??___fldiv+3)^0,w,c
  3593   000D94  3222               	rrcf	(??___fldiv+3)^0,f,c
  3594   000D96  3221               	rrcf	(??___fldiv+2)^0,f,c
  3595   000D98  3220               	rrcf	(??___fldiv+1)^0,f,c
  3596   000D9A  321F               	rrcf	??___fldiv^0,f,c
  3597   000D9C  C01F  F017         	movff	??___fldiv,___fldiv@b
  3598   000DA0  C020  F018         	movff	??___fldiv+1,___fldiv@b+1
  3599   000DA4  C021  F019         	movff	??___fldiv+2,___fldiv@b+2
  3600   000DA8  C022  F01A         	movff	??___fldiv+3,___fldiv@b+3
  3601   000DAC  4A28               	infsnz	___fldiv@new_exp^0,f,c
  3602   000DAE  2A29               	incf	(___fldiv@new_exp+1)^0,f,c
  3603   000DB0                     l3097:
  3604   000DB0  BE29               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3605   000DB2  EFE3  F006         	goto	u2411
  3606   000DB6  5029               	movf	(___fldiv@new_exp+1)^0,w,c
  3607   000DB8  E108               	bnz	u2410
  3608   000DBA  2828               	incf	___fldiv@new_exp^0,w,c
  3609   000DBC  A0D8               	btfss	status,0,c
  3610   000DBE  EFE3  F006         	goto	u2411
  3611   000DC2  EFE5  F006         	goto	u2410
  3612   000DC6                     u2411:
  3613   000DC6  EFF0  F006         	goto	l3101
  3614   000DCA                     u2410:
  3615   000DCA  0E00               	movlw	0
  3616   000DCC  6E29               	movwf	(___fldiv@new_exp+1)^0,c
  3617   000DCE  6828               	setf	___fldiv@new_exp^0,c
  3618   000DD0  0E00               	movlw	0
  3619   000DD2  6E17               	movwf	___fldiv@b^0,c
  3620   000DD4  0E00               	movlw	0
  3621   000DD6  6E18               	movwf	(___fldiv@b+1)^0,c
  3622   000DD8  0E00               	movlw	0
  3623   000DDA  6E19               	movwf	(___fldiv@b+2)^0,c
  3624   000DDC  0E00               	movlw	0
  3625   000DDE  6E1A               	movwf	(___fldiv@b+3)^0,c
  3626   000DE0                     l3101:
  3627   000DE0  BE29               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3628   000DE2  EFFD  F006         	goto	u2420
  3629   000DE6  5029               	movf	(___fldiv@new_exp+1)^0,w,c
  3630   000DE8  E106               	bnz	u2421
  3631   000DEA  0428               	decf	___fldiv@new_exp^0,w,c
  3632   000DEC  B0D8               	btfsc	status,0,c
  3633   000DEE  EFFB  F006         	goto	u2421
  3634   000DF2  EFFD  F006         	goto	u2420
  3635   000DF6                     u2421:
  3636   000DF6  EF0B  F007         	goto	l3105
  3637   000DFA                     u2420:
  3638   000DFA  0E00               	movlw	0
  3639   000DFC  6E29               	movwf	(___fldiv@new_exp+1)^0,c
  3640   000DFE  0E00               	movlw	0
  3641   000E00  6E28               	movwf	___fldiv@new_exp^0,c
  3642   000E02  0E00               	movlw	0
  3643   000E04  6E17               	movwf	___fldiv@b^0,c
  3644   000E06  0E00               	movlw	0
  3645   000E08  6E18               	movwf	(___fldiv@b+1)^0,c
  3646   000E0A  0E00               	movlw	0
  3647   000E0C  6E19               	movwf	(___fldiv@b+2)^0,c
  3648   000E0E  0E00               	movlw	0
  3649   000E10  6E1A               	movwf	(___fldiv@b+3)^0,c
  3650   000E12  0E00               	movlw	0
  3651   000E14  6E27               	movwf	___fldiv@sign^0,c
  3652   000E16                     l3105:
  3653   000E16  C028  F02E         	movff	___fldiv@new_exp,___fldiv@bexp
  3654   000E1A  A02E               	btfss	___fldiv@bexp^0,0,c
  3655   000E1C  EF12  F007         	goto	u2431
  3656   000E20  EF14  F007         	goto	u2430
  3657   000E24                     u2431:
  3658   000E24  EF17  F007         	goto	l3111
  3659   000E28                     u2430:
  3660   000E28  8E19               	bsf	(___fldiv@b+2)^0,7,c
  3661   000E2A  EF18  F007         	goto	l3113
  3662   000E2E                     l3111:
  3663   000E2E  9E19               	bcf	(___fldiv@b+2)^0,7,c
  3664   000E30                     l3113:
  3665   000E30  90D8               	bcf	status,0,c
  3666   000E32  302E               	rrcf	___fldiv@bexp^0,w,c
  3667   000E34  6E1A               	movwf	(___fldiv@b+3)^0,c
  3668   000E36  EFCE  F005         	goto	l3027
  3669   000E3A                     l1228:
  3670   000E3A  0012               	return		;funcret
  3671   000E3C                     __end_of___fldiv:
  3672                           	callstack 0
  3673                           
  3674 ;; *************** function _color_click_init *****************
  3675 ;; Defined at:
  3676 ;;		line 6 in file "color.c"
  3677 ;; Parameters:    Size  Location     Type
  3678 ;;		None
  3679 ;; Auto vars:     Size  Location     Type
  3680 ;;		None
  3681 ;; Return value:  Size  Location     Type
  3682 ;;                  1    wreg      void 
  3683 ;; Registers used:
  3684 ;;		wreg, status,2, status,0, cstack
  3685 ;; Tracked objects:
  3686 ;;		On entry : 0/0
  3687 ;;		On exit  : 0/0
  3688 ;;		Unchanged: 0/0
  3689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3692 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3693 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3694 ;;Total ram usage:        1 bytes
  3695 ;; Hardware stack levels used: 1
  3696 ;; Hardware stack levels required when called: 10
  3697 ;; This function calls:
  3698 ;;		_I2C_2_Master_Init
  3699 ;;		_color_writetoaddr
  3700 ;; This function is called by:
  3701 ;;		_main
  3702 ;; This function uses a non-reentrant model
  3703 ;;
  3704                           
  3705                           	psect	text8
  3706   0022DC                     __ptext8:
  3707                           	callstack 0
  3708   0022DC                     _color_click_init:
  3709                           	callstack 20
  3710   0022DC                     
  3711                           ;color.c: 9:     I2C_2_Master_Init();
  3712   0022DC  EC88  F011         	call	_I2C_2_Master_Init	;wreg free
  3713   0022E0                     
  3714                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  3715   0022E0  0E01               	movlw	1
  3716   0022E2  6E0B               	movwf	color_writetoaddr@value^0,c
  3717   0022E4  0E00               	movlw	0
  3718   0022E6  EC1F  F012         	call	_color_writetoaddr
  3719   0022EA                     
  3720                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3721   0022EA  0E3F               	movlw	63
  3722   0022EC  6E0D               	movwf	??_color_click_init^0,c
  3723   0022EE  0E55               	movlw	85
  3724   0022F0                     u4147:
  3725   0022F0  2EE8               	decfsz	wreg,f,c
  3726   0022F2  D7FE               	bra	u4147
  3727   0022F4  2E0D               	decfsz	??_color_click_init^0,f,c
  3728   0022F6  D7FC               	bra	u4147
  3729   0022F8  F000               	nop	
  3730   0022FA                     
  3731                           ;color.c: 16:  color_writetoaddr(0x00, 0x03);
  3732   0022FA  0E03               	movlw	3
  3733   0022FC  6E0B               	movwf	color_writetoaddr@value^0,c
  3734   0022FE  0E00               	movlw	0
  3735   002300  EC1F  F012         	call	_color_writetoaddr
  3736   002304                     
  3737                           ;color.c: 19:  color_writetoaddr(0x01, 0xD5);
  3738   002304  0ED5               	movlw	213
  3739   002306  6E0B               	movwf	color_writetoaddr@value^0,c
  3740   002308  0E01               	movlw	1
  3741   00230A  EC1F  F012         	call	_color_writetoaddr
  3742   00230E  0012               	return		;funcret
  3743   002310                     __end_of_color_click_init:
  3744                           	callstack 0
  3745                           
  3746 ;; *************** function _I2C_2_Master_Init *****************
  3747 ;; Defined at:
  3748 ;;		line 4 in file "i2c.c"
  3749 ;; Parameters:    Size  Location     Type
  3750 ;;		None
  3751 ;; Auto vars:     Size  Location     Type
  3752 ;;		None
  3753 ;; Return value:  Size  Location     Type
  3754 ;;                  1    wreg      void 
  3755 ;; Registers used:
  3756 ;;		wreg, status,2
  3757 ;; Tracked objects:
  3758 ;;		On entry : 0/0
  3759 ;;		On exit  : 0/0
  3760 ;;		Unchanged: 0/0
  3761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3766 ;;Total ram usage:        0 bytes
  3767 ;; Hardware stack levels used: 1
  3768 ;; Hardware stack levels required when called: 7
  3769 ;; This function calls:
  3770 ;;		Nothing
  3771 ;; This function is called by:
  3772 ;;		_color_click_init
  3773 ;; This function uses a non-reentrant model
  3774 ;;
  3775                           
  3776                           	psect	text9
  3777   002310                     __ptext9:
  3778                           	callstack 0
  3779   002310                     _I2C_2_Master_Init:
  3780                           	callstack 22
  3781   002310                     
  3782                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3783   002310  010E               	movlb	14	; () banked
  3784   002312  51D9               	movf	217,w,b	;volatile
  3785   002314  0BF0               	andlw	-16
  3786   002316  0908               	iorlw	8
  3787   002318  6FD9               	movwf	217,b	;volatile
  3788   00231A                     
  3789                           ; BSR set to: 14
  3790                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3791   00231A  8BD9               	bsf	217,5,b	;volatile
  3792                           
  3793                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3794   00231C  0E9F               	movlw	159
  3795   00231E  6FD6               	movwf	214,b	;volatile
  3796   002320                     
  3797                           ; BSR set to: 14
  3798                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3799   002320  8A84               	bsf	132,5,c	;volatile
  3800   002322                     
  3801                           ; BSR set to: 14
  3802                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3803   002322  8C84               	bsf	132,6,c	;volatile
  3804   002324                     
  3805                           ; BSR set to: 14
  3806                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3807   002324  9BA7               	bcf	167,5,b	;volatile
  3808   002326                     
  3809                           ; BSR set to: 14
  3810                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3811   002326  9DA7               	bcf	167,6,b	;volatile
  3812                           
  3813                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3814   002328  0E1D               	movlw	29
  3815   00232A  6F1D               	movwf	29,b	;volatile
  3816                           
  3817                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3818   00232C  0E1E               	movlw	30
  3819   00232E  6F1C               	movwf	28,b	;volatile
  3820                           
  3821                           ;i2c.c: 18:   RD5PPS=0x1C;
  3822   002330  0E1C               	movlw	28
  3823   002332  6F6F               	movwf	111,b	;volatile
  3824                           
  3825                           ;i2c.c: 19:   RD6PPS=0x1B;
  3826   002334  0E1B               	movlw	27
  3827   002336  6F70               	movwf	112,b	;volatile
  3828   002338                     
  3829                           ; BSR set to: 14
  3830   002338  0012               	return		;funcret
  3831   00233A                     __end_of_I2C_2_Master_Init:
  3832                           	callstack 0
  3833                           
  3834 ;; *************** function _WhiteLight *****************
  3835 ;; Defined at:
  3836 ;;		line 17 in file "LED_Buttons.c"
  3837 ;; Parameters:    Size  Location     Type
  3838 ;;		None
  3839 ;; Auto vars:     Size  Location     Type
  3840 ;;		None
  3841 ;; Return value:  Size  Location     Type
  3842 ;;                  1    wreg      void 
  3843 ;; Registers used:
  3844 ;;		None
  3845 ;; Tracked objects:
  3846 ;;		On entry : 0/0
  3847 ;;		On exit  : 0/0
  3848 ;;		Unchanged: 0/0
  3849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3854 ;;Total ram usage:        0 bytes
  3855 ;; Hardware stack levels used: 1
  3856 ;; Hardware stack levels required when called: 7
  3857 ;; This function calls:
  3858 ;;		Nothing
  3859 ;; This function is called by:
  3860 ;;		_main
  3861 ;; This function uses a non-reentrant model
  3862 ;;
  3863                           
  3864                           	psect	text10
  3865   002528                     __ptext10:
  3866                           	callstack 0
  3867   002528                     _WhiteLight:
  3868                           	callstack 23
  3869   002528                     
  3870                           ;LED_Buttons.c: 18:     LATGbits.LATG1 = 1;
  3871   002528  827F               	bsf	127,1,c	;volatile
  3872                           
  3873                           ;LED_Buttons.c: 19:     LATAbits.LATA4 = 1;
  3874   00252A  8879               	bsf	121,4,c	;volatile
  3875                           
  3876                           ;LED_Buttons.c: 20:     LATFbits.LATF7 = 1;
  3877   00252C  8E7E               	bsf	126,7,c	;volatile
  3878   00252E  0012               	return		;funcret
  3879   002530                     __end_of_WhiteLight:
  3880                           	callstack 0
  3881                           
  3882 ;; *************** function _Update_RGBC *****************
  3883 ;; Defined at:
  3884 ;;		line 90 in file "color.c"
  3885 ;; Parameters:    Size  Location     Type
  3886 ;;  tempval         2   19[COMRAM] PTR struct RGB_val
  3887 ;;		 -> main@initial_color(8), 
  3888 ;; Auto vars:     Size  Location     Type
  3889 ;;		None
  3890 ;; Return value:  Size  Location     Type
  3891 ;;                  1    wreg      void 
  3892 ;; Registers used:
  3893 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3894 ;; Tracked objects:
  3895 ;;		On entry : 0/0
  3896 ;;		On exit  : 0/0
  3897 ;;		Unchanged: 0/0
  3898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3899 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3902 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3903 ;;Total ram usage:        2 bytes
  3904 ;; Hardware stack levels used: 1
  3905 ;; Hardware stack levels required when called: 10
  3906 ;; This function calls:
  3907 ;;		_color_read_Blue
  3908 ;;		_color_read_Clear
  3909 ;;		_color_read_Green
  3910 ;;		_color_read_Red
  3911 ;; This function is called by:
  3912 ;;		_main
  3913 ;; This function uses a non-reentrant model
  3914 ;;
  3915                           
  3916                           	psect	text11
  3917   001EAE                     __ptext11:
  3918                           	callstack 0
  3919   001EAE                     _Update_RGBC:
  3920                           	callstack 20
  3921   001EAE                     
  3922                           ;color.c: 92:     tempval->R = color_read_Red();
  3923   001EAE  EC3A  F010         	call	_color_read_Red	;wreg free
  3924   001EB2  C014  FFD9         	movff	Update_RGBC@tempval,fsr2l
  3925   001EB6  C015  FFDA         	movff	Update_RGBC@tempval+1,fsr2h
  3926   001EBA  C00D  FFDE         	movff	?_color_read_Red,postinc2
  3927   001EBE  C00E  FFDD         	movff	?_color_read_Red+1,postdec2
  3928                           
  3929                           ;color.c: 93:     tempval->G = color_read_Green();
  3930   001EC2  EC62  F010         	call	_color_read_Green	;wreg free
  3931   001EC6  EE20 F002          	lfsr	2,2
  3932   001ECA  5014               	movf	Update_RGBC@tempval^0,w,c
  3933   001ECC  26D9               	addwf	fsr2l,f,c
  3934   001ECE  5015               	movf	(Update_RGBC@tempval+1)^0,w,c
  3935   001ED0  22DA               	addwfc	fsr2h,f,c
  3936   001ED2  C00D  FFDE         	movff	?_color_read_Green,postinc2
  3937   001ED6  C00E  FFDD         	movff	?_color_read_Green+1,postdec2
  3938                           
  3939                           ;color.c: 94:     tempval->B = color_read_Blue();
  3940   001EDA  ECB2  F010         	call	_color_read_Blue	;wreg free
  3941   001EDE  EE20 F004          	lfsr	2,4
  3942   001EE2  5014               	movf	Update_RGBC@tempval^0,w,c
  3943   001EE4  26D9               	addwf	fsr2l,f,c
  3944   001EE6  5015               	movf	(Update_RGBC@tempval+1)^0,w,c
  3945   001EE8  22DA               	addwfc	fsr2h,f,c
  3946   001EEA  C00D  FFDE         	movff	?_color_read_Blue,postinc2
  3947   001EEE  C00E  FFDD         	movff	?_color_read_Blue+1,postdec2
  3948                           
  3949                           ;color.c: 95:     tempval->C = color_read_Clear();
  3950   001EF2  EC8A  F010         	call	_color_read_Clear	;wreg free
  3951   001EF6  EE20 F006          	lfsr	2,6
  3952   001EFA  5014               	movf	Update_RGBC@tempval^0,w,c
  3953   001EFC  26D9               	addwf	fsr2l,f,c
  3954   001EFE  5015               	movf	(Update_RGBC@tempval+1)^0,w,c
  3955   001F00  22DA               	addwfc	fsr2h,f,c
  3956   001F02  C00D  FFDE         	movff	?_color_read_Clear,postinc2
  3957   001F06  C00E  FFDD         	movff	?_color_read_Clear+1,postdec2
  3958   001F0A  0012               	return		;funcret
  3959   001F0C                     __end_of_Update_RGBC:
  3960                           	callstack 0
  3961                           
  3962 ;; *************** function _color_read_Red *****************
  3963 ;; Defined at:
  3964 ;;		line 32 in file "color.c"
  3965 ;; Parameters:    Size  Location     Type
  3966 ;;		None
  3967 ;; Auto vars:     Size  Location     Type
  3968 ;;  tmp             2   17[COMRAM] unsigned int 
  3969 ;; Return value:  Size  Location     Type
  3970 ;;                  2   12[COMRAM] unsigned int 
  3971 ;; Registers used:
  3972 ;;		wreg, status,2, status,0, cstack
  3973 ;; Tracked objects:
  3974 ;;		On entry : 0/0
  3975 ;;		On exit  : 0/0
  3976 ;;		Unchanged: 0/0
  3977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3978 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3979 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3980 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3981 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3982 ;;Total ram usage:        7 bytes
  3983 ;; Hardware stack levels used: 1
  3984 ;; Hardware stack levels required when called: 9
  3985 ;; This function calls:
  3986 ;;		_I2C_2_Master_Read
  3987 ;;		_I2C_2_Master_RepStart
  3988 ;;		_I2C_2_Master_Start
  3989 ;;		_I2C_2_Master_Stop
  3990 ;;		_I2C_2_Master_Write
  3991 ;; This function is called by:
  3992 ;;		_Update_RGBC
  3993 ;; This function uses a non-reentrant model
  3994 ;;
  3995                           
  3996                           	psect	text12
  3997   002074                     __ptext12:
  3998                           	callstack 0
  3999   002074                     _color_read_Red:
  4000                           	callstack 20
  4001   002074                     
  4002                           ;color.c: 34:  unsigned int tmp;;color.c: 35:  I2C_2_Master_Start();
  4003   002074  EC85  F012         	call	_I2C_2_Master_Start	;wreg free
  4004                           
  4005                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x00);
  4006   002078  0E52               	movlw	82
  4007   00207A  EC6F  F012         	call	_I2C_2_Master_Write
  4008                           
  4009                           ;color.c: 37:  I2C_2_Master_Write(0xA0 | 0x16);
  4010   00207E  0EB6               	movlw	182
  4011   002080  EC6F  F012         	call	_I2C_2_Master_Write
  4012                           
  4013                           ;color.c: 38:  I2C_2_Master_RepStart();
  4014   002084  EC7B  F012         	call	_I2C_2_Master_RepStart	;wreg free
  4015                           
  4016                           ;color.c: 39:  I2C_2_Master_Write(0x52 | 0x01);
  4017   002088  0E53               	movlw	83
  4018   00208A  EC6F  F012         	call	_I2C_2_Master_Write
  4019                           
  4020                           ;color.c: 40:  tmp=I2C_2_Master_Read(1);
  4021   00208E  0E01               	movlw	1
  4022   002090  EC4D  F011         	call	_I2C_2_Master_Read
  4023   002094  6E0F               	movwf	??_color_read_Red^0,c
  4024   002096  500F               	movf	??_color_read_Red^0,w,c
  4025   002098  6E12               	movwf	color_read_Red@tmp^0,c
  4026   00209A  6A13               	clrf	(color_read_Red@tmp+1)^0,c
  4027                           
  4028                           ;color.c: 41:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4029   00209C  0E00               	movlw	0
  4030   00209E  EC4D  F011         	call	_I2C_2_Master_Read
  4031   0020A2  6E0F               	movwf	??_color_read_Red^0,c
  4032   0020A4  500F               	movf	??_color_read_Red^0,w,c
  4033   0020A6  6E11               	movwf	(??_color_read_Red+2)^0,c
  4034   0020A8  6A10               	clrf	(??_color_read_Red+1)^0,c
  4035   0020AA  5012               	movf	color_read_Red@tmp^0,w,c
  4036   0020AC  1010               	iorwf	(??_color_read_Red+1)^0,w,c
  4037   0020AE  6E12               	movwf	color_read_Red@tmp^0,c
  4038   0020B0  5013               	movf	(color_read_Red@tmp+1)^0,w,c
  4039   0020B2  1011               	iorwf	(??_color_read_Red+2)^0,w,c
  4040   0020B4  6E13               	movwf	(color_read_Red@tmp+1)^0,c
  4041                           
  4042                           ;color.c: 42:  I2C_2_Master_Stop();
  4043   0020B6  EC80  F012         	call	_I2C_2_Master_Stop	;wreg free
  4044   0020BA                     
  4045                           ;color.c: 43:  return tmp;
  4046   0020BA  C012  F00D         	movff	color_read_Red@tmp,?_color_read_Red
  4047   0020BE  C013  F00E         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  4048   0020C2  0012               	return		;funcret
  4049   0020C4                     __end_of_color_read_Red:
  4050                           	callstack 0
  4051                           
  4052 ;; *************** function _color_read_Green *****************
  4053 ;; Defined at:
  4054 ;;		line 46 in file "color.c"
  4055 ;; Parameters:    Size  Location     Type
  4056 ;;		None
  4057 ;; Auto vars:     Size  Location     Type
  4058 ;;  tmp             2   17[COMRAM] unsigned int 
  4059 ;; Return value:  Size  Location     Type
  4060 ;;                  2   12[COMRAM] unsigned int 
  4061 ;; Registers used:
  4062 ;;		wreg, status,2, status,0, cstack
  4063 ;; Tracked objects:
  4064 ;;		On entry : 0/0
  4065 ;;		On exit  : 0/0
  4066 ;;		Unchanged: 0/0
  4067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4068 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4069 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4070 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4071 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4072 ;;Total ram usage:        7 bytes
  4073 ;; Hardware stack levels used: 1
  4074 ;; Hardware stack levels required when called: 9
  4075 ;; This function calls:
  4076 ;;		_I2C_2_Master_Read
  4077 ;;		_I2C_2_Master_RepStart
  4078 ;;		_I2C_2_Master_Start
  4079 ;;		_I2C_2_Master_Stop
  4080 ;;		_I2C_2_Master_Write
  4081 ;; This function is called by:
  4082 ;;		_Update_RGBC
  4083 ;; This function uses a non-reentrant model
  4084 ;;
  4085                           
  4086                           	psect	text13
  4087   0020C4                     __ptext13:
  4088                           	callstack 0
  4089   0020C4                     _color_read_Green:
  4090                           	callstack 20
  4091   0020C4                     
  4092                           ;color.c: 48:  unsigned int tmp;;color.c: 49:  I2C_2_Master_Start();
  4093   0020C4  EC85  F012         	call	_I2C_2_Master_Start	;wreg free
  4094                           
  4095                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x00);
  4096   0020C8  0E52               	movlw	82
  4097   0020CA  EC6F  F012         	call	_I2C_2_Master_Write
  4098                           
  4099                           ;color.c: 51:  I2C_2_Master_Write(0xA0 | 0x18);
  4100   0020CE  0EB8               	movlw	184
  4101   0020D0  EC6F  F012         	call	_I2C_2_Master_Write
  4102                           
  4103                           ;color.c: 52:  I2C_2_Master_RepStart();
  4104   0020D4  EC7B  F012         	call	_I2C_2_Master_RepStart	;wreg free
  4105                           
  4106                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x01);
  4107   0020D8  0E53               	movlw	83
  4108   0020DA  EC6F  F012         	call	_I2C_2_Master_Write
  4109                           
  4110                           ;color.c: 54:  tmp=I2C_2_Master_Read(1);
  4111   0020DE  0E01               	movlw	1
  4112   0020E0  EC4D  F011         	call	_I2C_2_Master_Read
  4113   0020E4  6E0F               	movwf	??_color_read_Green^0,c
  4114   0020E6  500F               	movf	??_color_read_Green^0,w,c
  4115   0020E8  6E12               	movwf	color_read_Green@tmp^0,c
  4116   0020EA  6A13               	clrf	(color_read_Green@tmp+1)^0,c
  4117                           
  4118                           ;color.c: 55:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4119   0020EC  0E00               	movlw	0
  4120   0020EE  EC4D  F011         	call	_I2C_2_Master_Read
  4121   0020F2  6E0F               	movwf	??_color_read_Green^0,c
  4122   0020F4  500F               	movf	??_color_read_Green^0,w,c
  4123   0020F6  6E11               	movwf	(??_color_read_Green+2)^0,c
  4124   0020F8  6A10               	clrf	(??_color_read_Green+1)^0,c
  4125   0020FA  5012               	movf	color_read_Green@tmp^0,w,c
  4126   0020FC  1010               	iorwf	(??_color_read_Green+1)^0,w,c
  4127   0020FE  6E12               	movwf	color_read_Green@tmp^0,c
  4128   002100  5013               	movf	(color_read_Green@tmp+1)^0,w,c
  4129   002102  1011               	iorwf	(??_color_read_Green+2)^0,w,c
  4130   002104  6E13               	movwf	(color_read_Green@tmp+1)^0,c
  4131                           
  4132                           ;color.c: 56:  I2C_2_Master_Stop();
  4133   002106  EC80  F012         	call	_I2C_2_Master_Stop	;wreg free
  4134   00210A                     
  4135                           ;color.c: 57:  return tmp;
  4136   00210A  C012  F00D         	movff	color_read_Green@tmp,?_color_read_Green
  4137   00210E  C013  F00E         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  4138   002112  0012               	return		;funcret
  4139   002114                     __end_of_color_read_Green:
  4140                           	callstack 0
  4141                           
  4142 ;; *************** function _color_read_Clear *****************
  4143 ;; Defined at:
  4144 ;;		line 74 in file "color.c"
  4145 ;; Parameters:    Size  Location     Type
  4146 ;;		None
  4147 ;; Auto vars:     Size  Location     Type
  4148 ;;  tmp             2   17[COMRAM] unsigned int 
  4149 ;; Return value:  Size  Location     Type
  4150 ;;                  2   12[COMRAM] unsigned int 
  4151 ;; Registers used:
  4152 ;;		wreg, status,2, status,0, cstack
  4153 ;; Tracked objects:
  4154 ;;		On entry : 0/0
  4155 ;;		On exit  : 0/0
  4156 ;;		Unchanged: 0/0
  4157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4158 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4159 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4160 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4161 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4162 ;;Total ram usage:        7 bytes
  4163 ;; Hardware stack levels used: 1
  4164 ;; Hardware stack levels required when called: 9
  4165 ;; This function calls:
  4166 ;;		_I2C_2_Master_Read
  4167 ;;		_I2C_2_Master_RepStart
  4168 ;;		_I2C_2_Master_Start
  4169 ;;		_I2C_2_Master_Stop
  4170 ;;		_I2C_2_Master_Write
  4171 ;; This function is called by:
  4172 ;;		_Update_RGBC
  4173 ;; This function uses a non-reentrant model
  4174 ;;
  4175                           
  4176                           	psect	text14
  4177   002114                     __ptext14:
  4178                           	callstack 0
  4179   002114                     _color_read_Clear:
  4180                           	callstack 20
  4181   002114                     
  4182                           ;color.c: 76:  unsigned int tmp;;color.c: 77:  I2C_2_Master_Start();
  4183   002114  EC85  F012         	call	_I2C_2_Master_Start	;wreg free
  4184                           
  4185                           ;color.c: 78:  I2C_2_Master_Write(0x52 | 0x00);
  4186   002118  0E52               	movlw	82
  4187   00211A  EC6F  F012         	call	_I2C_2_Master_Write
  4188                           
  4189                           ;color.c: 79:  I2C_2_Master_Write(0xA0 | 0x14);
  4190   00211E  0EB4               	movlw	180
  4191   002120  EC6F  F012         	call	_I2C_2_Master_Write
  4192                           
  4193                           ;color.c: 80:  I2C_2_Master_RepStart();
  4194   002124  EC7B  F012         	call	_I2C_2_Master_RepStart	;wreg free
  4195                           
  4196                           ;color.c: 81:  I2C_2_Master_Write(0x52 | 0x01);
  4197   002128  0E53               	movlw	83
  4198   00212A  EC6F  F012         	call	_I2C_2_Master_Write
  4199                           
  4200                           ;color.c: 82:  tmp=I2C_2_Master_Read(1);
  4201   00212E  0E01               	movlw	1
  4202   002130  EC4D  F011         	call	_I2C_2_Master_Read
  4203   002134  6E0F               	movwf	??_color_read_Clear^0,c
  4204   002136  500F               	movf	??_color_read_Clear^0,w,c
  4205   002138  6E12               	movwf	color_read_Clear@tmp^0,c
  4206   00213A  6A13               	clrf	(color_read_Clear@tmp+1)^0,c
  4207                           
  4208                           ;color.c: 83:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4209   00213C  0E00               	movlw	0
  4210   00213E  EC4D  F011         	call	_I2C_2_Master_Read
  4211   002142  6E0F               	movwf	??_color_read_Clear^0,c
  4212   002144  500F               	movf	??_color_read_Clear^0,w,c
  4213   002146  6E11               	movwf	(??_color_read_Clear+2)^0,c
  4214   002148  6A10               	clrf	(??_color_read_Clear+1)^0,c
  4215   00214A  5012               	movf	color_read_Clear@tmp^0,w,c
  4216   00214C  1010               	iorwf	(??_color_read_Clear+1)^0,w,c
  4217   00214E  6E12               	movwf	color_read_Clear@tmp^0,c
  4218   002150  5013               	movf	(color_read_Clear@tmp+1)^0,w,c
  4219   002152  1011               	iorwf	(??_color_read_Clear+2)^0,w,c
  4220   002154  6E13               	movwf	(color_read_Clear@tmp+1)^0,c
  4221                           
  4222                           ;color.c: 84:  I2C_2_Master_Stop();
  4223   002156  EC80  F012         	call	_I2C_2_Master_Stop	;wreg free
  4224   00215A                     
  4225                           ;color.c: 85:  return tmp;
  4226   00215A  C012  F00D         	movff	color_read_Clear@tmp,?_color_read_Clear
  4227   00215E  C013  F00E         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  4228   002162  0012               	return		;funcret
  4229   002164                     __end_of_color_read_Clear:
  4230                           	callstack 0
  4231                           
  4232 ;; *************** function _color_read_Blue *****************
  4233 ;; Defined at:
  4234 ;;		line 60 in file "color.c"
  4235 ;; Parameters:    Size  Location     Type
  4236 ;;		None
  4237 ;; Auto vars:     Size  Location     Type
  4238 ;;  tmp             2   17[COMRAM] unsigned int 
  4239 ;; Return value:  Size  Location     Type
  4240 ;;                  2   12[COMRAM] unsigned int 
  4241 ;; Registers used:
  4242 ;;		wreg, status,2, status,0, cstack
  4243 ;; Tracked objects:
  4244 ;;		On entry : 0/0
  4245 ;;		On exit  : 0/0
  4246 ;;		Unchanged: 0/0
  4247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4248 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4249 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4250 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4251 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4252 ;;Total ram usage:        7 bytes
  4253 ;; Hardware stack levels used: 1
  4254 ;; Hardware stack levels required when called: 9
  4255 ;; This function calls:
  4256 ;;		_I2C_2_Master_Read
  4257 ;;		_I2C_2_Master_RepStart
  4258 ;;		_I2C_2_Master_Start
  4259 ;;		_I2C_2_Master_Stop
  4260 ;;		_I2C_2_Master_Write
  4261 ;; This function is called by:
  4262 ;;		_Update_RGBC
  4263 ;; This function uses a non-reentrant model
  4264 ;;
  4265                           
  4266                           	psect	text15
  4267   002164                     __ptext15:
  4268                           	callstack 0
  4269   002164                     _color_read_Blue:
  4270                           	callstack 20
  4271   002164                     
  4272                           ;color.c: 62:  unsigned int tmp;;color.c: 63:  I2C_2_Master_Start();
  4273   002164  EC85  F012         	call	_I2C_2_Master_Start	;wreg free
  4274                           
  4275                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x00);
  4276   002168  0E52               	movlw	82
  4277   00216A  EC6F  F012         	call	_I2C_2_Master_Write
  4278                           
  4279                           ;color.c: 65:  I2C_2_Master_Write(0xA0 | 0x1A);
  4280   00216E  0EBA               	movlw	186
  4281   002170  EC6F  F012         	call	_I2C_2_Master_Write
  4282                           
  4283                           ;color.c: 66:  I2C_2_Master_RepStart();
  4284   002174  EC7B  F012         	call	_I2C_2_Master_RepStart	;wreg free
  4285                           
  4286                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x01);
  4287   002178  0E53               	movlw	83
  4288   00217A  EC6F  F012         	call	_I2C_2_Master_Write
  4289                           
  4290                           ;color.c: 68:  tmp=I2C_2_Master_Read(1);
  4291   00217E  0E01               	movlw	1
  4292   002180  EC4D  F011         	call	_I2C_2_Master_Read
  4293   002184  6E0F               	movwf	??_color_read_Blue^0,c
  4294   002186  500F               	movf	??_color_read_Blue^0,w,c
  4295   002188  6E12               	movwf	color_read_Blue@tmp^0,c
  4296   00218A  6A13               	clrf	(color_read_Blue@tmp+1)^0,c
  4297                           
  4298                           ;color.c: 69:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4299   00218C  0E00               	movlw	0
  4300   00218E  EC4D  F011         	call	_I2C_2_Master_Read
  4301   002192  6E0F               	movwf	??_color_read_Blue^0,c
  4302   002194  500F               	movf	??_color_read_Blue^0,w,c
  4303   002196  6E11               	movwf	(??_color_read_Blue+2)^0,c
  4304   002198  6A10               	clrf	(??_color_read_Blue+1)^0,c
  4305   00219A  5012               	movf	color_read_Blue@tmp^0,w,c
  4306   00219C  1010               	iorwf	(??_color_read_Blue+1)^0,w,c
  4307   00219E  6E12               	movwf	color_read_Blue@tmp^0,c
  4308   0021A0  5013               	movf	(color_read_Blue@tmp+1)^0,w,c
  4309   0021A2  1011               	iorwf	(??_color_read_Blue+2)^0,w,c
  4310   0021A4  6E13               	movwf	(color_read_Blue@tmp+1)^0,c
  4311                           
  4312                           ;color.c: 70:  I2C_2_Master_Stop();
  4313   0021A6  EC80  F012         	call	_I2C_2_Master_Stop	;wreg free
  4314   0021AA                     
  4315                           ;color.c: 71:  return tmp;
  4316   0021AA  C012  F00D         	movff	color_read_Blue@tmp,?_color_read_Blue
  4317   0021AE  C013  F00E         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  4318   0021B2  0012               	return		;funcret
  4319   0021B4                     __end_of_color_read_Blue:
  4320                           	callstack 0
  4321                           
  4322 ;; *************** function _I2C_2_Master_RepStart *****************
  4323 ;; Defined at:
  4324 ;;		line 33 in file "i2c.c"
  4325 ;; Parameters:    Size  Location     Type
  4326 ;;		None
  4327 ;; Auto vars:     Size  Location     Type
  4328 ;;		None
  4329 ;; Return value:  Size  Location     Type
  4330 ;;                  1    wreg      void 
  4331 ;; Registers used:
  4332 ;;		wreg, status,2, status,0, cstack
  4333 ;; Tracked objects:
  4334 ;;		On entry : 0/0
  4335 ;;		On exit  : 0/0
  4336 ;;		Unchanged: 0/0
  4337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4342 ;;Total ram usage:        0 bytes
  4343 ;; Hardware stack levels used: 1
  4344 ;; Hardware stack levels required when called: 8
  4345 ;; This function calls:
  4346 ;;		_I2C_2_Master_Idle
  4347 ;; This function is called by:
  4348 ;;		_color_read_Red
  4349 ;;		_color_read_Green
  4350 ;;		_color_read_Blue
  4351 ;;		_color_read_Clear
  4352 ;; This function uses a non-reentrant model
  4353 ;;
  4354                           
  4355                           	psect	text16
  4356   0024F6                     __ptext16:
  4357                           	callstack 0
  4358   0024F6                     _I2C_2_Master_RepStart:
  4359                           	callstack 20
  4360   0024F6                     
  4361                           ;i2c.c: 35:   I2C_2_Master_Idle();
  4362   0024F6  EC9D  F011         	call	_I2C_2_Master_Idle	;wreg free
  4363   0024FA                     
  4364                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  4365   0024FA  010E               	movlb	14	; () banked
  4366   0024FC  83DA               	bsf	218,1,b	;volatile
  4367   0024FE                     
  4368                           ; BSR set to: 14
  4369   0024FE  0012               	return		;funcret
  4370   002500                     __end_of_I2C_2_Master_RepStart:
  4371                           	callstack 0
  4372                           
  4373 ;; *************** function _I2C_2_Master_Read *****************
  4374 ;; Defined at:
  4375 ;;		line 51 in file "i2c.c"
  4376 ;; Parameters:    Size  Location     Type
  4377 ;;  ack             1    wreg     unsigned char 
  4378 ;; Auto vars:     Size  Location     Type
  4379 ;;  ack             1   10[COMRAM] unsigned char 
  4380 ;;  tmp             1   11[COMRAM] unsigned char 
  4381 ;; Return value:  Size  Location     Type
  4382 ;;                  1    wreg      unsigned char 
  4383 ;; Registers used:
  4384 ;;		wreg, status,2, status,0, cstack
  4385 ;; Tracked objects:
  4386 ;;		On entry : 0/0
  4387 ;;		On exit  : 0/0
  4388 ;;		Unchanged: 0/0
  4389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4391 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4392 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4393 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4394 ;;Total ram usage:        3 bytes
  4395 ;; Hardware stack levels used: 1
  4396 ;; Hardware stack levels required when called: 8
  4397 ;; This function calls:
  4398 ;;		_I2C_2_Master_Idle
  4399 ;; This function is called by:
  4400 ;;		_color_read_Red
  4401 ;;		_color_read_Green
  4402 ;;		_color_read_Blue
  4403 ;;		_color_read_Clear
  4404 ;; This function uses a non-reentrant model
  4405 ;;
  4406                           
  4407                           	psect	text17
  4408   00229A                     __ptext17:
  4409                           	callstack 0
  4410   00229A                     _I2C_2_Master_Read:
  4411                           	callstack 20
  4412                           
  4413                           ; BSR set to: 14
  4414                           ;incstack = 0
  4415                           ;I2C_2_Master_Read@ack stored from wreg
  4416   00229A  6E0B               	movwf	I2C_2_Master_Read@ack^0,c
  4417   00229C                     
  4418                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  4419   00229C  EC9D  F011         	call	_I2C_2_Master_Idle	;wreg free
  4420   0022A0                     
  4421                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  4422   0022A0  010E               	movlb	14	; () banked
  4423   0022A2  87DA               	bsf	218,3,b	;volatile
  4424                           
  4425                           ;i2c.c: 56:   I2C_2_Master_Idle();
  4426   0022A4  EC9D  F011         	call	_I2C_2_Master_Idle	;wreg free
  4427   0022A8                     
  4428                           ;i2c.c: 57:   tmp = SSP2BUF;
  4429   0022A8  CED5 F00C          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  4430                           
  4431                           ;i2c.c: 58:   I2C_2_Master_Idle();
  4432   0022AC  EC9D  F011         	call	_I2C_2_Master_Idle	;wreg free
  4433   0022B0                     
  4434                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  4435   0022B0  500B               	movf	I2C_2_Master_Read@ack^0,w,c
  4436   0022B2  B4D8               	btfsc	status,2,c
  4437   0022B4  EF5E  F011         	goto	u1951
  4438   0022B8  EF62  F011         	goto	u1950
  4439   0022BC                     u1951:
  4440   0022BC  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  4441   0022BE  2A0A               	incf	??_I2C_2_Master_Read^0,f,c
  4442   0022C0  EF63  F011         	goto	u1968
  4443   0022C4                     u1950:
  4444   0022C4  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  4445   0022C6                     u1968:
  4446   0022C6  3A0A               	swapf	??_I2C_2_Master_Read^0,f,c
  4447   0022C8  460A               	rlncf	??_I2C_2_Master_Read^0,f,c
  4448   0022CA  010E               	movlb	14	; () banked
  4449   0022CC  51DA               	movf	218,w,b	;volatile
  4450   0022CE  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  4451   0022D0  0BDF               	andlw	-33
  4452   0022D2  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  4453   0022D4  6FDA               	movwf	218,b	;volatile
  4454   0022D6                     
  4455                           ; BSR set to: 14
  4456                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  4457   0022D6  89DA               	bsf	218,4,b	;volatile
  4458   0022D8                     
  4459                           ; BSR set to: 14
  4460                           ;i2c.c: 61:   return tmp;
  4461   0022D8  500C               	movf	I2C_2_Master_Read@tmp^0,w,c
  4462   0022DA                     
  4463                           ; BSR set to: 14
  4464   0022DA  0012               	return		;funcret
  4465   0022DC                     __end_of_I2C_2_Master_Read:
  4466                           	callstack 0
  4467                           
  4468 ;; *************** function _Timer0_init *****************
  4469 ;; Defined at:
  4470 ;;		line 7 in file "timers.c"
  4471 ;; Parameters:    Size  Location     Type
  4472 ;;		None
  4473 ;; Auto vars:     Size  Location     Type
  4474 ;;		None
  4475 ;; Return value:  Size  Location     Type
  4476 ;;                  1    wreg      void 
  4477 ;; Registers used:
  4478 ;;		wreg, status,2
  4479 ;; Tracked objects:
  4480 ;;		On entry : 0/0
  4481 ;;		On exit  : 0/0
  4482 ;;		Unchanged: 0/0
  4483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4488 ;;Total ram usage:        0 bytes
  4489 ;; Hardware stack levels used: 1
  4490 ;; Hardware stack levels required when called: 7
  4491 ;; This function calls:
  4492 ;;		Nothing
  4493 ;; This function is called by:
  4494 ;;		_main
  4495 ;; This function uses a non-reentrant model
  4496 ;;
  4497                           
  4498                           	psect	text18
  4499   00241E                     __ptext18:
  4500                           	callstack 0
  4501   00241E                     _Timer0_init:
  4502                           	callstack 23
  4503   00241E                     
  4504                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  4505   00241E  50D6               	movf	214,w,c	;volatile
  4506   002420  0B1F               	andlw	-225
  4507   002422  0940               	iorlw	64
  4508   002424  6ED6               	movwf	214,c	;volatile
  4509   002426                     
  4510                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  4511   002426  88D6               	bsf	214,4,c	;volatile
  4512                           
  4513                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
  4514   002428  50D6               	movf	214,w,c	;volatile
  4515   00242A  0BF0               	andlw	-16
  4516   00242C  0908               	iorlw	8
  4517   00242E  6ED6               	movwf	214,c	;volatile
  4518   002430                     
  4519                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
  4520   002430  88D5               	bsf	213,4,c	;volatile
  4521                           
  4522                           ;timers.c: 15:     TMR0H = 0b11000010;
  4523   002432  0EC2               	movlw	194
  4524   002434  6ED4               	movwf	212,c	;volatile
  4525                           
  4526                           ;timers.c: 16:     TMR0L = 0b11110110;
  4527   002436  0EF6               	movlw	246
  4528   002438  6ED3               	movwf	211,c	;volatile
  4529   00243A                     
  4530                           ;timers.c: 17:     T0CON0bits.T0EN=1;
  4531   00243A  8ED5               	bsf	213,7,c	;volatile
  4532   00243C  0012               	return		;funcret
  4533   00243E                     __end_of_Timer0_init:
  4534                           	callstack 0
  4535                           
  4536 ;; *************** function _MoveBuggy *****************
  4537 ;; Defined at:
  4538 ;;		line 143 in file "color_instructions.c"
  4539 ;; Parameters:    Size  Location     Type
  4540 ;;  color_detect    2   45[COMRAM] PTR unsigned char 
  4541 ;;		 -> RAM(3561), 
  4542 ;;  mL              2   47[COMRAM] PTR struct DC_motor
  4543 ;;		 -> main@motorL(9), 
  4544 ;;  mR              2   49[COMRAM] PTR struct DC_motor
  4545 ;;		 -> main@motorR(9), 
  4546 ;; Auto vars:     Size  Location     Type
  4547 ;;		None
  4548 ;; Return value:  Size  Location     Type
  4549 ;;                  1    wreg      void 
  4550 ;; Registers used:
  4551 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4552 ;; Tracked objects:
  4553 ;;		On entry : 0/0
  4554 ;;		On exit  : 0/0
  4555 ;;		Unchanged: 0/0
  4556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4557 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4560 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4561 ;;Total ram usage:        6 bytes
  4562 ;; Hardware stack levels used: 1
  4563 ;; Hardware stack levels required when called: 12
  4564 ;; This function calls:
  4565 ;;		_AppendMoves
  4566 ;;		_BlueInstructions
  4567 ;;		_GreenInstructions
  4568 ;;		_LightBlueInstructions
  4569 ;;		_OrangeInstructions
  4570 ;;		_PinkInstructions
  4571 ;;		_RedInstructions
  4572 ;;		_YellowInstructions
  4573 ;; This function is called by:
  4574 ;;		_main
  4575 ;;		_WhiteInstructions
  4576 ;; This function uses a non-reentrant model
  4577 ;;
  4578                           
  4579                           	psect	text19
  4580   000FF0                     __ptext19:
  4581                           	callstack 0
  4582   000FF0                     _MoveBuggy:
  4583                           	callstack 18
  4584   000FF0                     
  4585                           ;color_instructions.c: 144:     if (color_detected==1){
  4586   000FF0  042E               	decf	MoveBuggy@color_detected^0,w,c
  4587   000FF2  102F               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4588   000FF4  A4D8               	btfss	status,2,c
  4589   000FF6  EFFF  F007         	goto	u3321
  4590   000FFA  EF01  F008         	goto	u3320
  4591   000FFE                     u3321:
  4592   000FFE  EF18  F008         	goto	l3587
  4593   001002                     u3320:
  4594   001002                     
  4595                           ;color_instructions.c: 145:         RedInstructions(mL, mR);
  4596   001002  C030  F027         	movff	MoveBuggy@mL,RedInstructions@mL
  4597   001006  C031  F028         	movff	MoveBuggy@mL+1,RedInstructions@mL+1
  4598   00100A  C032  F029         	movff	MoveBuggy@mR,RedInstructions@mR
  4599   00100E  C033  F02A         	movff	MoveBuggy@mR+1,RedInstructions@mR+1
  4600   001012  ECCE  F00D         	call	_RedInstructions	;wreg free
  4601   001016                     
  4602                           ;color_instructions.c: 146:         AppendMoves(2,&moves_index,anti_moves_array);
  4603   001016  0E56               	movlw	low _moves_index
  4604   001018  6E09               	movwf	AppendMoves@moves_index^0,c
  4605   00101A  0E00               	movlw	high _moves_index
  4606   00101C  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4607   00101E  0E75               	movlw	low _anti_moves_array
  4608   001020  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4609   001022  0E00               	movlw	high _anti_moves_array
  4610   001024  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4611   001026  0E02               	movlw	2
  4612   001028  ECEB  F011         	call	_AppendMoves
  4613                           
  4614                           ;color_instructions.c: 147:     }
  4615   00102C  EFC8  F008         	goto	l623
  4616   001030                     l3587:
  4617   001030  0E02               	movlw	2
  4618   001032  182E               	xorwf	MoveBuggy@color_detected^0,w,c
  4619   001034  102F               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4620   001036  A4D8               	btfss	status,2,c
  4621   001038  EF20  F008         	goto	u3331
  4622   00103C  EF22  F008         	goto	u3330
  4623   001040                     u3331:
  4624   001040  EF39  F008         	goto	l3593
  4625   001044                     u3330:
  4626   001044                     
  4627                           ;color_instructions.c: 149:         GreenInstructions(mL, mR);
  4628   001044  C030  F027         	movff	MoveBuggy@mL,GreenInstructions@mL
  4629   001048  C031  F028         	movff	MoveBuggy@mL+1,GreenInstructions@mL+1
  4630   00104C  C032  F029         	movff	MoveBuggy@mR,GreenInstructions@mR
  4631   001050  C033  F02A         	movff	MoveBuggy@mR+1,GreenInstructions@mR+1
  4632   001054  ECDA  F00E         	call	_GreenInstructions	;wreg free
  4633   001058                     
  4634                           ;color_instructions.c: 150:         AppendMoves(1,&moves_index,anti_moves_array);
  4635   001058  0E56               	movlw	low _moves_index
  4636   00105A  6E09               	movwf	AppendMoves@moves_index^0,c
  4637   00105C  0E00               	movlw	high _moves_index
  4638   00105E  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4639   001060  0E75               	movlw	low _anti_moves_array
  4640   001062  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4641   001064  0E00               	movlw	high _anti_moves_array
  4642   001066  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4643   001068  0E01               	movlw	1
  4644   00106A  ECEB  F011         	call	_AppendMoves
  4645                           
  4646                           ;color_instructions.c: 151:     }
  4647   00106E  EFC8  F008         	goto	l623
  4648   001072                     l3593:
  4649   001072  0E03               	movlw	3
  4650   001074  182E               	xorwf	MoveBuggy@color_detected^0,w,c
  4651   001076  102F               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4652   001078  A4D8               	btfss	status,2,c
  4653   00107A  EF41  F008         	goto	u3341
  4654   00107E  EF43  F008         	goto	u3340
  4655   001082                     u3341:
  4656   001082  EF5A  F008         	goto	l3599
  4657   001086                     u3340:
  4658   001086                     
  4659                           ;color_instructions.c: 153:         BlueInstructions(mL, mR);
  4660   001086  C030  F027         	movff	MoveBuggy@mL,BlueInstructions@mL
  4661   00108A  C031  F028         	movff	MoveBuggy@mL+1,BlueInstructions@mL+1
  4662   00108E  C032  F029         	movff	MoveBuggy@mR,BlueInstructions@mR
  4663   001092  C033  F02A         	movff	MoveBuggy@mR+1,BlueInstructions@mR+1
  4664   001096  ECEA  F00C         	call	_BlueInstructions	;wreg free
  4665   00109A                     
  4666                           ;color_instructions.c: 154:         AppendMoves(3,&moves_index,anti_moves_array);
  4667   00109A  0E56               	movlw	low _moves_index
  4668   00109C  6E09               	movwf	AppendMoves@moves_index^0,c
  4669   00109E  0E00               	movlw	high _moves_index
  4670   0010A0  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4671   0010A2  0E75               	movlw	low _anti_moves_array
  4672   0010A4  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4673   0010A6  0E00               	movlw	high _anti_moves_array
  4674   0010A8  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4675   0010AA  0E03               	movlw	3
  4676   0010AC  ECEB  F011         	call	_AppendMoves
  4677                           
  4678                           ;color_instructions.c: 155:     }
  4679   0010B0  EFC8  F008         	goto	l623
  4680   0010B4                     l3599:
  4681   0010B4  0E04               	movlw	4
  4682   0010B6  182E               	xorwf	MoveBuggy@color_detected^0,w,c
  4683   0010B8  102F               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4684   0010BA  A4D8               	btfss	status,2,c
  4685   0010BC  EF62  F008         	goto	u3351
  4686   0010C0  EF64  F008         	goto	u3350
  4687   0010C4                     u3351:
  4688   0010C4  EF70  F008         	goto	l3603
  4689   0010C8                     u3350:
  4690   0010C8                     
  4691                           ;color_instructions.c: 157:         YellowInstructions(mL, mR);
  4692   0010C8  C030  F027         	movff	MoveBuggy@mL,YellowInstructions@mL
  4693   0010CC  C031  F028         	movff	MoveBuggy@mL+1,YellowInstructions@mL+1
  4694   0010D0  C032  F029         	movff	MoveBuggy@mR,YellowInstructions@mR
  4695   0010D4  C033  F02A         	movff	MoveBuggy@mR+1,YellowInstructions@mR+1
  4696   0010D8  EC8B  F00D         	call	_YellowInstructions	;wreg free
  4697                           
  4698                           ;color_instructions.c: 159:     }
  4699   0010DC  EFC8  F008         	goto	l623
  4700   0010E0                     l3603:
  4701   0010E0  0E05               	movlw	5
  4702   0010E2  182E               	xorwf	MoveBuggy@color_detected^0,w,c
  4703   0010E4  102F               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4704   0010E6  A4D8               	btfss	status,2,c
  4705   0010E8  EF78  F008         	goto	u3361
  4706   0010EC  EF7A  F008         	goto	u3360
  4707   0010F0                     u3361:
  4708   0010F0  EF86  F008         	goto	l3607
  4709   0010F4                     u3360:
  4710   0010F4                     
  4711                           ;color_instructions.c: 161:         PinkInstructions(mL, mR);
  4712   0010F4  C030  F027         	movff	MoveBuggy@mL,PinkInstructions@mL
  4713   0010F8  C031  F028         	movff	MoveBuggy@mL+1,PinkInstructions@mL+1
  4714   0010FC  C032  F029         	movff	MoveBuggy@mR,PinkInstructions@mR
  4715   001100  C033  F02A         	movff	MoveBuggy@mR+1,PinkInstructions@mR+1
  4716   001104  EC11  F00E         	call	_PinkInstructions	;wreg free
  4717                           
  4718                           ;color_instructions.c: 163:     }
  4719   001108  EFC8  F008         	goto	l623
  4720   00110C                     l3607:
  4721   00110C  0E06               	movlw	6
  4722   00110E  182E               	xorwf	MoveBuggy@color_detected^0,w,c
  4723   001110  102F               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4724   001112  A4D8               	btfss	status,2,c
  4725   001114  EF8E  F008         	goto	u3371
  4726   001118  EF90  F008         	goto	u3370
  4727   00111C                     u3371:
  4728   00111C  EFA7  F008         	goto	l3613
  4729   001120                     u3370:
  4730   001120                     
  4731                           ;color_instructions.c: 165:         OrangeInstructions(mL, mR);
  4732   001120  C030  F027         	movff	MoveBuggy@mL,OrangeInstructions@mL
  4733   001124  C031  F028         	movff	MoveBuggy@mL+1,OrangeInstructions@mL+1
  4734   001128  C032  F029         	movff	MoveBuggy@mR,OrangeInstructions@mR
  4735   00112C  C033  F02A         	movff	MoveBuggy@mR+1,OrangeInstructions@mR+1
  4736   001130  EC54  F00E         	call	_OrangeInstructions	;wreg free
  4737   001134                     
  4738                           ;color_instructions.c: 166:         AppendMoves(7,&moves_index,anti_moves_array);
  4739   001134  0E56               	movlw	low _moves_index
  4740   001136  6E09               	movwf	AppendMoves@moves_index^0,c
  4741   001138  0E00               	movlw	high _moves_index
  4742   00113A  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4743   00113C  0E75               	movlw	low _anti_moves_array
  4744   00113E  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4745   001140  0E00               	movlw	high _anti_moves_array
  4746   001142  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4747   001144  0E07               	movlw	7
  4748   001146  ECEB  F011         	call	_AppendMoves
  4749                           
  4750                           ;color_instructions.c: 167:     }
  4751   00114A  EFC8  F008         	goto	l623
  4752   00114E                     l3613:
  4753   00114E  0E07               	movlw	7
  4754   001150  182E               	xorwf	MoveBuggy@color_detected^0,w,c
  4755   001152  102F               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4756   001154  A4D8               	btfss	status,2,c
  4757   001156  EFAF  F008         	goto	u3381
  4758   00115A  EFB1  F008         	goto	u3380
  4759   00115E                     u3381:
  4760   00115E  EFC8  F008         	goto	l617
  4761   001162                     u3380:
  4762   001162                     
  4763                           ;color_instructions.c: 169:         LightBlueInstructions(mL, mR);
  4764   001162  C030  F027         	movff	MoveBuggy@mL,LightBlueInstructions@mL
  4765   001166  C031  F028         	movff	MoveBuggy@mL+1,LightBlueInstructions@mL+1
  4766   00116A  C032  F029         	movff	MoveBuggy@mR,LightBlueInstructions@mR
  4767   00116E  C033  F02A         	movff	MoveBuggy@mR+1,LightBlueInstructions@mR+1
  4768   001172  EC97  F00E         	call	_LightBlueInstructions	;wreg free
  4769   001176                     
  4770                           ;color_instructions.c: 170:         AppendMoves(6,&moves_index,anti_moves_array);
  4771   001176  0E56               	movlw	low _moves_index
  4772   001178  6E09               	movwf	AppendMoves@moves_index^0,c
  4773   00117A  0E00               	movlw	high _moves_index
  4774   00117C  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4775   00117E  0E75               	movlw	low _anti_moves_array
  4776   001180  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4777   001182  0E00               	movlw	high _anti_moves_array
  4778   001184  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4779   001186  0E06               	movlw	6
  4780   001188  ECEB  F011         	call	_AppendMoves
  4781   00118C  EFC8  F008         	goto	l623
  4782   001190                     l617:
  4783   001190                     l623:
  4784   001190  0012               	return		;funcret
  4785   001192                     __end_of_MoveBuggy:
  4786                           	callstack 0
  4787                           
  4788 ;; *************** function _YellowInstructions *****************
  4789 ;; Defined at:
  4790 ;;		line 58 in file "color_instructions.c"
  4791 ;; Parameters:    Size  Location     Type
  4792 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  4793 ;;		 -> main@motorL(9), 
  4794 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  4795 ;;		 -> main@motorR(9), 
  4796 ;; Auto vars:     Size  Location     Type
  4797 ;;  a               1   44[COMRAM] unsigned char 
  4798 ;; Return value:  Size  Location     Type
  4799 ;;                  1    wreg      void 
  4800 ;; Registers used:
  4801 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4802 ;; Tracked objects:
  4803 ;;		On entry : 0/0
  4804 ;;		On exit  : 0/0
  4805 ;;		Unchanged: 0/0
  4806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4807 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4808 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4809 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4810 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4811 ;;Total ram usage:        7 bytes
  4812 ;; Hardware stack levels used: 1
  4813 ;; Hardware stack levels required when called: 11
  4814 ;; This function calls:
  4815 ;;		_fullSpeedBackwards
  4816 ;;		_stop
  4817 ;;		_turnRight90
  4818 ;; This function is called by:
  4819 ;;		_MoveBuggy
  4820 ;; This function uses a non-reentrant model
  4821 ;;
  4822                           
  4823                           	psect	text20
  4824   001B16                     __ptext20:
  4825                           	callstack 0
  4826   001B16                     _YellowInstructions:
  4827                           	callstack 18
  4828   001B16                     
  4829                           ;color_instructions.c: 60:     unsigned char a=0;
  4830   001B16  0E00               	movlw	0
  4831   001B18  6E2D               	movwf	YellowInstructions@a^0,c
  4832                           
  4833                           ;color_instructions.c: 61:     while (a<20){
  4834   001B1A  EF9A  F00D         	goto	l2915
  4835   001B1E                     l2911:
  4836                           
  4837                           ;color_instructions.c: 62:         fullSpeedBackwards(mL, mR);
  4838   001B1E  C027  F01C         	movff	YellowInstructions@mL,fullSpeedBackwards@mL
  4839   001B22  C028  F01D         	movff	YellowInstructions@mL+1,fullSpeedBackwards@mL+1
  4840   001B26  C029  F01E         	movff	YellowInstructions@mR,fullSpeedBackwards@mR
  4841   001B2A  C02A  F01F         	movff	YellowInstructions@mR+1,fullSpeedBackwards@mR+1
  4842   001B2E  EC15  F00C         	call	_fullSpeedBackwards	;wreg free
  4843   001B32                     
  4844                           ;color_instructions.c: 63:         a++;
  4845   001B32  2A2D               	incf	YellowInstructions@a^0,f,c
  4846   001B34                     l2915:
  4847                           
  4848                           ;color_instructions.c: 61:     while (a<20){
  4849   001B34  0E13               	movlw	19
  4850   001B36  642D               	cpfsgt	YellowInstructions@a^0,c
  4851   001B38  EFA0  F00D         	goto	u2131
  4852   001B3C  EFA2  F00D         	goto	u2130
  4853   001B40                     u2131:
  4854   001B40  EF8F  F00D         	goto	l2911
  4855   001B44                     u2130:
  4856   001B44  EFAF  F00D         	goto	l2921
  4857   001B48                     l2917:
  4858                           
  4859                           ;color_instructions.c: 66:         stop(mL, mR);
  4860   001B48  C027  F01C         	movff	YellowInstructions@mL,stop@mL
  4861   001B4C  C028  F01D         	movff	YellowInstructions@mL+1,stop@mL+1
  4862   001B50  C029  F01E         	movff	YellowInstructions@mR,stop@mR
  4863   001B54  C02A  F01F         	movff	YellowInstructions@mR+1,stop@mR+1
  4864   001B58  EC80  F00C         	call	_stop	;wreg free
  4865   001B5C                     
  4866                           ;color_instructions.c: 67:         a--;
  4867   001B5C  062D               	decf	YellowInstructions@a^0,f,c
  4868   001B5E                     l2921:
  4869                           
  4870                           ;color_instructions.c: 65:     while (a>0){
  4871   001B5E  502D               	movf	YellowInstructions@a^0,w,c
  4872   001B60  A4D8               	btfss	status,2,c
  4873   001B62  EFB5  F00D         	goto	u2141
  4874   001B66  EFB7  F00D         	goto	u2140
  4875   001B6A                     u2141:
  4876   001B6A  EFA4  F00D         	goto	l2917
  4877   001B6E                     u2140:
  4878   001B6E                     
  4879                           ;color_instructions.c: 69:     _delay((unsigned long)((250)*(64000000/4000.0)));
  4880   001B6E  0E15               	movlw	21
  4881   001B70  6E2C               	movwf	(??_YellowInstructions+1)^0,c
  4882   001B72  0E4B               	movlw	75
  4883   001B74  6E2B               	movwf	??_YellowInstructions^0,c
  4884   001B76  0EBE               	movlw	190
  4885   001B78                     u4157:
  4886   001B78  2EE8               	decfsz	wreg,f,c
  4887   001B7A  D7FE               	bra	u4157
  4888   001B7C  2E2B               	decfsz	??_YellowInstructions^0,f,c
  4889   001B7E  D7FC               	bra	u4157
  4890   001B80  2E2C               	decfsz	(??_YellowInstructions+1)^0,f,c
  4891   001B82  D7FA               	bra	u4157
  4892   001B84  D000               	nop2	
  4893   001B86                     
  4894                           ;color_instructions.c: 70:     turnRight90(mL, mR);
  4895   001B86  C027  F022         	movff	YellowInstructions@mL,turnRight90@mL
  4896   001B8A  C028  F023         	movff	YellowInstructions@mL+1,turnRight90@mL+1
  4897   001B8E  C029  F024         	movff	YellowInstructions@mR,turnRight90@mR
  4898   001B92  C02A  F025         	movff	YellowInstructions@mR+1,turnRight90@mR+1
  4899   001B96  EC86  F00F         	call	_turnRight90	;wreg free
  4900   001B9A  0012               	return		;funcret
  4901   001B9C                     __end_of_YellowInstructions:
  4902                           	callstack 0
  4903                           
  4904 ;; *************** function _RedInstructions *****************
  4905 ;; Defined at:
  4906 ;;		line 10 in file "color_instructions.c"
  4907 ;; Parameters:    Size  Location     Type
  4908 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  4909 ;;		 -> main@motorL(9), 
  4910 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  4911 ;;		 -> main@motorR(9), 
  4912 ;; Auto vars:     Size  Location     Type
  4913 ;;  a               1   44[COMRAM] unsigned char 
  4914 ;; Return value:  Size  Location     Type
  4915 ;;                  1    wreg      void 
  4916 ;; Registers used:
  4917 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4918 ;; Tracked objects:
  4919 ;;		On entry : 0/0
  4920 ;;		On exit  : 0/0
  4921 ;;		Unchanged: 0/0
  4922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4923 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4924 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4925 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4926 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4927 ;;Total ram usage:        7 bytes
  4928 ;; Hardware stack levels used: 1
  4929 ;; Hardware stack levels required when called: 11
  4930 ;; This function calls:
  4931 ;;		_fullSpeedBackwards
  4932 ;;		_stop
  4933 ;;		_turnRight90
  4934 ;; This function is called by:
  4935 ;;		_MoveBuggy
  4936 ;; This function uses a non-reentrant model
  4937 ;;
  4938                           
  4939                           	psect	text21
  4940   001B9C                     __ptext21:
  4941                           	callstack 0
  4942   001B9C                     _RedInstructions:
  4943                           	callstack 18
  4944   001B9C                     
  4945                           ;color_instructions.c: 12:     unsigned char a=0;
  4946   001B9C  0E00               	movlw	0
  4947   001B9E  6E2D               	movwf	RedInstructions@a^0,c
  4948                           
  4949                           ;color_instructions.c: 13:     while (a<8){
  4950   001BA0  EFDD  F00D         	goto	l2859
  4951   001BA4                     l2855:
  4952                           
  4953                           ;color_instructions.c: 14:         fullSpeedBackwards(mL, mR);
  4954   001BA4  C027  F01C         	movff	RedInstructions@mL,fullSpeedBackwards@mL
  4955   001BA8  C028  F01D         	movff	RedInstructions@mL+1,fullSpeedBackwards@mL+1
  4956   001BAC  C029  F01E         	movff	RedInstructions@mR,fullSpeedBackwards@mR
  4957   001BB0  C02A  F01F         	movff	RedInstructions@mR+1,fullSpeedBackwards@mR+1
  4958   001BB4  EC15  F00C         	call	_fullSpeedBackwards	;wreg free
  4959   001BB8                     
  4960                           ;color_instructions.c: 15:         a++;
  4961   001BB8  2A2D               	incf	RedInstructions@a^0,f,c
  4962   001BBA                     l2859:
  4963                           
  4964                           ;color_instructions.c: 13:     while (a<8){
  4965   001BBA  0E07               	movlw	7
  4966   001BBC  642D               	cpfsgt	RedInstructions@a^0,c
  4967   001BBE  EFE3  F00D         	goto	u2071
  4968   001BC2  EFE5  F00D         	goto	u2070
  4969   001BC6                     u2071:
  4970   001BC6  EFD2  F00D         	goto	l2855
  4971   001BCA                     u2070:
  4972   001BCA  EFF2  F00D         	goto	l2865
  4973   001BCE                     l2861:
  4974                           
  4975                           ;color_instructions.c: 18:         stop(mL, mR);
  4976   001BCE  C027  F01C         	movff	RedInstructions@mL,stop@mL
  4977   001BD2  C028  F01D         	movff	RedInstructions@mL+1,stop@mL+1
  4978   001BD6  C029  F01E         	movff	RedInstructions@mR,stop@mR
  4979   001BDA  C02A  F01F         	movff	RedInstructions@mR+1,stop@mR+1
  4980   001BDE  EC80  F00C         	call	_stop	;wreg free
  4981   001BE2                     
  4982                           ;color_instructions.c: 19:         a--;
  4983   001BE2  062D               	decf	RedInstructions@a^0,f,c
  4984   001BE4                     l2865:
  4985                           
  4986                           ;color_instructions.c: 17:     while (a>0){
  4987   001BE4  502D               	movf	RedInstructions@a^0,w,c
  4988   001BE6  A4D8               	btfss	status,2,c
  4989   001BE8  EFF8  F00D         	goto	u2081
  4990   001BEC  EFFA  F00D         	goto	u2080
  4991   001BF0                     u2081:
  4992   001BF0  EFE7  F00D         	goto	l2861
  4993   001BF4                     u2080:
  4994   001BF4                     
  4995                           ;color_instructions.c: 21:     _delay((unsigned long)((250)*(64000000/4000.0)));
  4996   001BF4  0E15               	movlw	21
  4997   001BF6  6E2C               	movwf	(??_RedInstructions+1)^0,c
  4998   001BF8  0E4B               	movlw	75
  4999   001BFA  6E2B               	movwf	??_RedInstructions^0,c
  5000   001BFC  0EBE               	movlw	190
  5001   001BFE                     u4167:
  5002   001BFE  2EE8               	decfsz	wreg,f,c
  5003   001C00  D7FE               	bra	u4167
  5004   001C02  2E2B               	decfsz	??_RedInstructions^0,f,c
  5005   001C04  D7FC               	bra	u4167
  5006   001C06  2E2C               	decfsz	(??_RedInstructions+1)^0,f,c
  5007   001C08  D7FA               	bra	u4167
  5008   001C0A  D000               	nop2	
  5009   001C0C                     
  5010                           ;color_instructions.c: 22:     turnRight90(mL, mR);
  5011   001C0C  C027  F022         	movff	RedInstructions@mL,turnRight90@mL
  5012   001C10  C028  F023         	movff	RedInstructions@mL+1,turnRight90@mL+1
  5013   001C14  C029  F024         	movff	RedInstructions@mR,turnRight90@mR
  5014   001C18  C02A  F025         	movff	RedInstructions@mR+1,turnRight90@mR+1
  5015   001C1C  EC86  F00F         	call	_turnRight90	;wreg free
  5016   001C20  0012               	return		;funcret
  5017   001C22                     __end_of_RedInstructions:
  5018                           	callstack 0
  5019                           
  5020 ;; *************** function _turnRight90 *****************
  5021 ;; Defined at:
  5022 ;;		line 213 in file "dc_motor.c"
  5023 ;; Parameters:    Size  Location     Type
  5024 ;;  mL              2   33[COMRAM] PTR struct DC_motor
  5025 ;;		 -> main@motorL(9), 
  5026 ;;  mR              2   35[COMRAM] PTR struct DC_motor
  5027 ;;		 -> main@motorR(9), 
  5028 ;; Auto vars:     Size  Location     Type
  5029 ;;  a               1   37[COMRAM] unsigned char 
  5030 ;; Return value:  Size  Location     Type
  5031 ;;                  1    wreg      void 
  5032 ;; Registers used:
  5033 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5034 ;; Tracked objects:
  5035 ;;		On entry : 0/0
  5036 ;;		On exit  : 0/0
  5037 ;;		Unchanged: 0/0
  5038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5039 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5040 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5042 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5043 ;;Total ram usage:        5 bytes
  5044 ;; Hardware stack levels used: 1
  5045 ;; Hardware stack levels required when called: 10
  5046 ;; This function calls:
  5047 ;;		_stop
  5048 ;;		_turnRight
  5049 ;; This function is called by:
  5050 ;;		_RedInstructions
  5051 ;;		_YellowInstructions
  5052 ;; This function uses a non-reentrant model
  5053 ;;
  5054                           
  5055                           	psect	text22
  5056   001F0C                     __ptext22:
  5057                           	callstack 0
  5058   001F0C                     _turnRight90:
  5059                           	callstack 18
  5060   001F0C                     
  5061                           ;dc_motor.c: 215:     unsigned char a=0;
  5062   001F0C  0E00               	movlw	0
  5063   001F0E  6E26               	movwf	turnRight90@a^0,c
  5064                           
  5065                           ;dc_motor.c: 216:     while(a<19){
  5066   001F10  EF95  F00F         	goto	l2763
  5067   001F14                     l2759:
  5068                           
  5069                           ;dc_motor.c: 217:         turnRight(mL, mR);
  5070   001F14  C022  F01C         	movff	turnRight90@mL,turnRight@mL
  5071   001F18  C023  F01D         	movff	turnRight90@mL+1,turnRight@mL+1
  5072   001F1C  C024  F01E         	movff	turnRight90@mR,turnRight@mR
  5073   001F20  C025  F01F         	movff	turnRight90@mR+1,turnRight@mR+1
  5074   001F24  ECBC  F00A         	call	_turnRight	;wreg free
  5075   001F28                     
  5076                           ;dc_motor.c: 218:         a++;
  5077   001F28  2A26               	incf	turnRight90@a^0,f,c
  5078   001F2A                     l2763:
  5079                           
  5080                           ;dc_motor.c: 216:     while(a<19){
  5081   001F2A  0E12               	movlw	18
  5082   001F2C  6426               	cpfsgt	turnRight90@a^0,c
  5083   001F2E  EF9B  F00F         	goto	u2011
  5084   001F32  EF9D  F00F         	goto	u2010
  5085   001F36                     u2011:
  5086   001F36  EF8A  F00F         	goto	l2759
  5087   001F3A                     u2010:
  5088   001F3A  EFAA  F00F         	goto	l2769
  5089   001F3E                     l2765:
  5090                           
  5091                           ;dc_motor.c: 221:         stop(mL, mR);
  5092   001F3E  C022  F01C         	movff	turnRight90@mL,stop@mL
  5093   001F42  C023  F01D         	movff	turnRight90@mL+1,stop@mL+1
  5094   001F46  C024  F01E         	movff	turnRight90@mR,stop@mR
  5095   001F4A  C025  F01F         	movff	turnRight90@mR+1,stop@mR+1
  5096   001F4E  EC80  F00C         	call	_stop	;wreg free
  5097   001F52                     
  5098                           ;dc_motor.c: 222:         a--;
  5099   001F52  0626               	decf	turnRight90@a^0,f,c
  5100   001F54                     l2769:
  5101                           
  5102                           ;dc_motor.c: 220:     while(a>0){
  5103   001F54  5026               	movf	turnRight90@a^0,w,c
  5104   001F56  A4D8               	btfss	status,2,c
  5105   001F58  EFB0  F00F         	goto	u2021
  5106   001F5C  EFB2  F00F         	goto	u2020
  5107   001F60                     u2021:
  5108   001F60  EF9F  F00F         	goto	l2765
  5109   001F64                     u2020:
  5110   001F64  0012               	return		;funcret
  5111   001F66                     __end_of_turnRight90:
  5112                           	callstack 0
  5113                           
  5114 ;; *************** function _PinkInstructions *****************
  5115 ;; Defined at:
  5116 ;;		line 73 in file "color_instructions.c"
  5117 ;; Parameters:    Size  Location     Type
  5118 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  5119 ;;		 -> main@motorL(9), 
  5120 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  5121 ;;		 -> main@motorR(9), 
  5122 ;; Auto vars:     Size  Location     Type
  5123 ;;  a               1   44[COMRAM] unsigned char 
  5124 ;; Return value:  Size  Location     Type
  5125 ;;                  1    wreg      void 
  5126 ;; Registers used:
  5127 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5128 ;; Tracked objects:
  5129 ;;		On entry : 0/0
  5130 ;;		On exit  : 0/0
  5131 ;;		Unchanged: 0/0
  5132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5133 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5134 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5135 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5136 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5137 ;;Total ram usage:        7 bytes
  5138 ;; Hardware stack levels used: 1
  5139 ;; Hardware stack levels required when called: 11
  5140 ;; This function calls:
  5141 ;;		_fullSpeedBackwards
  5142 ;;		_stop
  5143 ;;		_turnLeft90
  5144 ;; This function is called by:
  5145 ;;		_MoveBuggy
  5146 ;; This function uses a non-reentrant model
  5147 ;;
  5148                           
  5149                           	psect	text23
  5150   001C22                     __ptext23:
  5151                           	callstack 0
  5152   001C22                     _PinkInstructions:
  5153                           	callstack 18
  5154   001C22                     
  5155                           ;color_instructions.c: 74:     unsigned char a=0;
  5156   001C22  0E00               	movlw	0
  5157   001C24  6E2D               	movwf	PinkInstructions@a^0,c
  5158                           
  5159                           ;color_instructions.c: 75:     while (a<20){
  5160   001C26  EF20  F00E         	goto	l2933
  5161   001C2A                     l2929:
  5162                           
  5163                           ;color_instructions.c: 76:         fullSpeedBackwards(mL, mR);
  5164   001C2A  C027  F01C         	movff	PinkInstructions@mL,fullSpeedBackwards@mL
  5165   001C2E  C028  F01D         	movff	PinkInstructions@mL+1,fullSpeedBackwards@mL+1
  5166   001C32  C029  F01E         	movff	PinkInstructions@mR,fullSpeedBackwards@mR
  5167   001C36  C02A  F01F         	movff	PinkInstructions@mR+1,fullSpeedBackwards@mR+1
  5168   001C3A  EC15  F00C         	call	_fullSpeedBackwards	;wreg free
  5169   001C3E                     
  5170                           ;color_instructions.c: 77:         a++;
  5171   001C3E  2A2D               	incf	PinkInstructions@a^0,f,c
  5172   001C40                     l2933:
  5173                           
  5174                           ;color_instructions.c: 75:     while (a<20){
  5175   001C40  0E13               	movlw	19
  5176   001C42  642D               	cpfsgt	PinkInstructions@a^0,c
  5177   001C44  EF26  F00E         	goto	u2151
  5178   001C48  EF28  F00E         	goto	u2150
  5179   001C4C                     u2151:
  5180   001C4C  EF15  F00E         	goto	l2929
  5181   001C50                     u2150:
  5182   001C50  EF35  F00E         	goto	l2939
  5183   001C54                     l2935:
  5184                           
  5185                           ;color_instructions.c: 80:         stop(mL, mR);
  5186   001C54  C027  F01C         	movff	PinkInstructions@mL,stop@mL
  5187   001C58  C028  F01D         	movff	PinkInstructions@mL+1,stop@mL+1
  5188   001C5C  C029  F01E         	movff	PinkInstructions@mR,stop@mR
  5189   001C60  C02A  F01F         	movff	PinkInstructions@mR+1,stop@mR+1
  5190   001C64  EC80  F00C         	call	_stop	;wreg free
  5191   001C68                     
  5192                           ;color_instructions.c: 81:         a--;
  5193   001C68  062D               	decf	PinkInstructions@a^0,f,c
  5194   001C6A                     l2939:
  5195                           
  5196                           ;color_instructions.c: 79:     while (a>0){
  5197   001C6A  502D               	movf	PinkInstructions@a^0,w,c
  5198   001C6C  A4D8               	btfss	status,2,c
  5199   001C6E  EF3B  F00E         	goto	u2161
  5200   001C72  EF3D  F00E         	goto	u2160
  5201   001C76                     u2161:
  5202   001C76  EF2A  F00E         	goto	l2935
  5203   001C7A                     u2160:
  5204   001C7A                     
  5205                           ;color_instructions.c: 83:     _delay((unsigned long)((250)*(64000000/4000.0)));
  5206   001C7A  0E15               	movlw	21
  5207   001C7C  6E2C               	movwf	(??_PinkInstructions+1)^0,c
  5208   001C7E  0E4B               	movlw	75
  5209   001C80  6E2B               	movwf	??_PinkInstructions^0,c
  5210   001C82  0EBE               	movlw	190
  5211   001C84                     u4177:
  5212   001C84  2EE8               	decfsz	wreg,f,c
  5213   001C86  D7FE               	bra	u4177
  5214   001C88  2E2B               	decfsz	??_PinkInstructions^0,f,c
  5215   001C8A  D7FC               	bra	u4177
  5216   001C8C  2E2C               	decfsz	(??_PinkInstructions+1)^0,f,c
  5217   001C8E  D7FA               	bra	u4177
  5218   001C90  D000               	nop2	
  5219   001C92                     
  5220                           ;color_instructions.c: 84:     turnLeft90(mL, mR);
  5221   001C92  C027  F022         	movff	PinkInstructions@mL,turnLeft90@mL
  5222   001C96  C028  F023         	movff	PinkInstructions@mL+1,turnLeft90@mL+1
  5223   001C9A  C029  F024         	movff	PinkInstructions@mR,turnLeft90@mR
  5224   001C9E  C02A  F025         	movff	PinkInstructions@mR+1,turnLeft90@mR+1
  5225   001CA2  EC0D  F010         	call	_turnLeft90	;wreg free
  5226   001CA6  0012               	return		;funcret
  5227   001CA8                     __end_of_PinkInstructions:
  5228                           	callstack 0
  5229                           
  5230 ;; *************** function _OrangeInstructions *****************
  5231 ;; Defined at:
  5232 ;;		line 88 in file "color_instructions.c"
  5233 ;; Parameters:    Size  Location     Type
  5234 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  5235 ;;		 -> main@motorL(9), 
  5236 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  5237 ;;		 -> main@motorR(9), 
  5238 ;; Auto vars:     Size  Location     Type
  5239 ;;  a               1   44[COMRAM] unsigned char 
  5240 ;; Return value:  Size  Location     Type
  5241 ;;                  1    wreg      void 
  5242 ;; Registers used:
  5243 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5244 ;; Tracked objects:
  5245 ;;		On entry : 0/0
  5246 ;;		On exit  : 0/0
  5247 ;;		Unchanged: 0/0
  5248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5249 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5250 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5251 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5252 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5253 ;;Total ram usage:        7 bytes
  5254 ;; Hardware stack levels used: 1
  5255 ;; Hardware stack levels required when called: 11
  5256 ;; This function calls:
  5257 ;;		_fullSpeedBackwards
  5258 ;;		_stop
  5259 ;;		_turnRight135
  5260 ;; This function is called by:
  5261 ;;		_MoveBuggy
  5262 ;; This function uses a non-reentrant model
  5263 ;;
  5264                           
  5265                           	psect	text24
  5266   001CA8                     __ptext24:
  5267                           	callstack 0
  5268   001CA8                     _OrangeInstructions:
  5269                           	callstack 18
  5270   001CA8                     
  5271                           ;color_instructions.c: 89:     unsigned char a=0;
  5272   001CA8  0E00               	movlw	0
  5273   001CAA  6E2D               	movwf	OrangeInstructions@a^0,c
  5274                           
  5275                           ;color_instructions.c: 90:     while (a<20){
  5276   001CAC  EF63  F00E         	goto	l2951
  5277   001CB0                     l2947:
  5278                           
  5279                           ;color_instructions.c: 91:         fullSpeedBackwards(mL, mR);
  5280   001CB0  C027  F01C         	movff	OrangeInstructions@mL,fullSpeedBackwards@mL
  5281   001CB4  C028  F01D         	movff	OrangeInstructions@mL+1,fullSpeedBackwards@mL+1
  5282   001CB8  C029  F01E         	movff	OrangeInstructions@mR,fullSpeedBackwards@mR
  5283   001CBC  C02A  F01F         	movff	OrangeInstructions@mR+1,fullSpeedBackwards@mR+1
  5284   001CC0  EC15  F00C         	call	_fullSpeedBackwards	;wreg free
  5285   001CC4                     
  5286                           ;color_instructions.c: 92:         a++;
  5287   001CC4  2A2D               	incf	OrangeInstructions@a^0,f,c
  5288   001CC6                     l2951:
  5289                           
  5290                           ;color_instructions.c: 90:     while (a<20){
  5291   001CC6  0E13               	movlw	19
  5292   001CC8  642D               	cpfsgt	OrangeInstructions@a^0,c
  5293   001CCA  EF69  F00E         	goto	u2171
  5294   001CCE  EF6B  F00E         	goto	u2170
  5295   001CD2                     u2171:
  5296   001CD2  EF58  F00E         	goto	l2947
  5297   001CD6                     u2170:
  5298   001CD6  EF78  F00E         	goto	l2957
  5299   001CDA                     l2953:
  5300                           
  5301                           ;color_instructions.c: 95:         stop(mL, mR);
  5302   001CDA  C027  F01C         	movff	OrangeInstructions@mL,stop@mL
  5303   001CDE  C028  F01D         	movff	OrangeInstructions@mL+1,stop@mL+1
  5304   001CE2  C029  F01E         	movff	OrangeInstructions@mR,stop@mR
  5305   001CE6  C02A  F01F         	movff	OrangeInstructions@mR+1,stop@mR+1
  5306   001CEA  EC80  F00C         	call	_stop	;wreg free
  5307   001CEE                     
  5308                           ;color_instructions.c: 96:         a--;
  5309   001CEE  062D               	decf	OrangeInstructions@a^0,f,c
  5310   001CF0                     l2957:
  5311                           
  5312                           ;color_instructions.c: 94:     while (a>0){
  5313   001CF0  502D               	movf	OrangeInstructions@a^0,w,c
  5314   001CF2  A4D8               	btfss	status,2,c
  5315   001CF4  EF7E  F00E         	goto	u2181
  5316   001CF8  EF80  F00E         	goto	u2180
  5317   001CFC                     u2181:
  5318   001CFC  EF6D  F00E         	goto	l2953
  5319   001D00                     u2180:
  5320   001D00                     
  5321                           ;color_instructions.c: 98:     _delay((unsigned long)((250)*(64000000/4000.0)));
  5322   001D00  0E15               	movlw	21
  5323   001D02  6E2C               	movwf	(??_OrangeInstructions+1)^0,c
  5324   001D04  0E4B               	movlw	75
  5325   001D06  6E2B               	movwf	??_OrangeInstructions^0,c
  5326   001D08  0EBE               	movlw	190
  5327   001D0A                     u4187:
  5328   001D0A  2EE8               	decfsz	wreg,f,c
  5329   001D0C  D7FE               	bra	u4187
  5330   001D0E  2E2B               	decfsz	??_OrangeInstructions^0,f,c
  5331   001D10  D7FC               	bra	u4187
  5332   001D12  2E2C               	decfsz	(??_OrangeInstructions+1)^0,f,c
  5333   001D14  D7FA               	bra	u4187
  5334   001D16  D000               	nop2	
  5335   001D18                     
  5336                           ;color_instructions.c: 100:     turnRight135(mL, mR);
  5337   001D18  C027  F022         	movff	OrangeInstructions@mL,turnRight135@mL
  5338   001D1C  C028  F023         	movff	OrangeInstructions@mL+1,turnRight135@mL+1
  5339   001D20  C029  F024         	movff	OrangeInstructions@mR,turnRight135@mR
  5340   001D24  C02A  F025         	movff	OrangeInstructions@mR+1,turnRight135@mR+1
  5341   001D28  ECB3  F00F         	call	_turnRight135	;wreg free
  5342   001D2C  0012               	return		;funcret
  5343   001D2E                     __end_of_OrangeInstructions:
  5344                           	callstack 0
  5345                           
  5346 ;; *************** function _turnRight135 *****************
  5347 ;; Defined at:
  5348 ;;		line 240 in file "dc_motor.c"
  5349 ;; Parameters:    Size  Location     Type
  5350 ;;  mL              2   33[COMRAM] PTR struct DC_motor
  5351 ;;		 -> main@motorL(9), 
  5352 ;;  mR              2   35[COMRAM] PTR struct DC_motor
  5353 ;;		 -> main@motorR(9), 
  5354 ;; Auto vars:     Size  Location     Type
  5355 ;;  a               1   37[COMRAM] unsigned char 
  5356 ;; Return value:  Size  Location     Type
  5357 ;;                  1    wreg      void 
  5358 ;; Registers used:
  5359 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5360 ;; Tracked objects:
  5361 ;;		On entry : 0/0
  5362 ;;		On exit  : 0/0
  5363 ;;		Unchanged: 0/0
  5364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5365 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5366 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5368 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5369 ;;Total ram usage:        5 bytes
  5370 ;; Hardware stack levels used: 1
  5371 ;; Hardware stack levels required when called: 10
  5372 ;; This function calls:
  5373 ;;		_stop
  5374 ;;		_turnRight
  5375 ;; This function is called by:
  5376 ;;		_OrangeInstructions
  5377 ;; This function uses a non-reentrant model
  5378 ;;
  5379                           
  5380                           	psect	text25
  5381   001F66                     __ptext25:
  5382                           	callstack 0
  5383   001F66                     _turnRight135:
  5384                           	callstack 18
  5385   001F66                     
  5386                           ;dc_motor.c: 242:     unsigned char a=0;
  5387   001F66  0E00               	movlw	0
  5388   001F68  6E26               	movwf	turnRight135@a^0,c
  5389                           
  5390                           ;dc_motor.c: 243:     while(a<21){
  5391   001F6A  EFC2  F00F         	goto	l2777
  5392   001F6E                     l2773:
  5393                           
  5394                           ;dc_motor.c: 244:         turnRight(mL, mR);
  5395   001F6E  C022  F01C         	movff	turnRight135@mL,turnRight@mL
  5396   001F72  C023  F01D         	movff	turnRight135@mL+1,turnRight@mL+1
  5397   001F76  C024  F01E         	movff	turnRight135@mR,turnRight@mR
  5398   001F7A  C025  F01F         	movff	turnRight135@mR+1,turnRight@mR+1
  5399   001F7E  ECBC  F00A         	call	_turnRight	;wreg free
  5400   001F82                     
  5401                           ;dc_motor.c: 245:         a++;
  5402   001F82  2A26               	incf	turnRight135@a^0,f,c
  5403   001F84                     l2777:
  5404                           
  5405                           ;dc_motor.c: 243:     while(a<21){
  5406   001F84  0E14               	movlw	20
  5407   001F86  6426               	cpfsgt	turnRight135@a^0,c
  5408   001F88  EFC8  F00F         	goto	u2031
  5409   001F8C  EFCA  F00F         	goto	u2030
  5410   001F90                     u2031:
  5411   001F90  EFB7  F00F         	goto	l2773
  5412   001F94                     u2030:
  5413   001F94  EFD7  F00F         	goto	l2783
  5414   001F98                     l2779:
  5415                           
  5416                           ;dc_motor.c: 248:         stop(mL, mR);
  5417   001F98  C022  F01C         	movff	turnRight135@mL,stop@mL
  5418   001F9C  C023  F01D         	movff	turnRight135@mL+1,stop@mL+1
  5419   001FA0  C024  F01E         	movff	turnRight135@mR,stop@mR
  5420   001FA4  C025  F01F         	movff	turnRight135@mR+1,stop@mR+1
  5421   001FA8  EC80  F00C         	call	_stop	;wreg free
  5422   001FAC                     
  5423                           ;dc_motor.c: 249:         a--;
  5424   001FAC  0626               	decf	turnRight135@a^0,f,c
  5425   001FAE                     l2783:
  5426                           
  5427                           ;dc_motor.c: 247:     while(a>0){
  5428   001FAE  5026               	movf	turnRight135@a^0,w,c
  5429   001FB0  A4D8               	btfss	status,2,c
  5430   001FB2  EFDD  F00F         	goto	u2041
  5431   001FB6  EFDF  F00F         	goto	u2040
  5432   001FBA                     u2041:
  5433   001FBA  EFCC  F00F         	goto	l2779
  5434   001FBE                     u2040:
  5435   001FBE  0012               	return		;funcret
  5436   001FC0                     __end_of_turnRight135:
  5437                           	callstack 0
  5438                           
  5439 ;; *************** function _turnRight *****************
  5440 ;; Defined at:
  5441 ;;		line 129 in file "dc_motor.c"
  5442 ;; Parameters:    Size  Location     Type
  5443 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  5444 ;;		 -> main@motorL(9), 
  5445 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  5446 ;;		 -> main@motorR(9), 
  5447 ;; Auto vars:     Size  Location     Type
  5448 ;;		None
  5449 ;; Return value:  Size  Location     Type
  5450 ;;                  1    wreg      void 
  5451 ;; Registers used:
  5452 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5453 ;; Tracked objects:
  5454 ;;		On entry : 0/0
  5455 ;;		On exit  : 0/0
  5456 ;;		Unchanged: 0/0
  5457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5458 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5460 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5461 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5462 ;;Total ram usage:        6 bytes
  5463 ;; Hardware stack levels used: 1
  5464 ;; Hardware stack levels required when called: 9
  5465 ;; This function calls:
  5466 ;;		_setMotorPWM
  5467 ;; This function is called by:
  5468 ;;		_turnRight90
  5469 ;;		_turnRight135
  5470 ;;		_turn180
  5471 ;; This function uses a non-reentrant model
  5472 ;;
  5473                           
  5474                           	psect	text26
  5475   001578                     __ptext26:
  5476                           	callstack 0
  5477   001578                     _turnRight:
  5478                           	callstack 18
  5479   001578                     
  5480                           ;dc_motor.c: 129: void turnRight(DC_motor *mL, DC_motor *mR);dc_motor.c: 130: {;dc_motor
      +                          .c: 132:     mL->direction = 1;
  5481   001578  EE20 F001          	lfsr	2,1
  5482   00157C  501C               	movf	turnRight@mL^0,w,c
  5483   00157E  26D9               	addwf	fsr2l,f,c
  5484   001580  501D               	movf	(turnRight@mL+1)^0,w,c
  5485   001582  22DA               	addwfc	fsr2h,f,c
  5486   001584  0E01               	movlw	1
  5487   001586  6EDF               	movwf	indf2,c
  5488                           
  5489                           ;dc_motor.c: 133:     mL->brakemode = 0;
  5490   001588  EE20 F002          	lfsr	2,2
  5491   00158C  501C               	movf	turnRight@mL^0,w,c
  5492   00158E  26D9               	addwf	fsr2l,f,c
  5493   001590  501D               	movf	(turnRight@mL+1)^0,w,c
  5494   001592  22DA               	addwfc	fsr2h,f,c
  5495   001594  0E00               	movlw	0
  5496   001596  6EDF               	movwf	indf2,c
  5497                           
  5498                           ;dc_motor.c: 135:     mR->direction = 0;
  5499   001598  EE20 F001          	lfsr	2,1
  5500   00159C  501E               	movf	turnRight@mR^0,w,c
  5501   00159E  26D9               	addwf	fsr2l,f,c
  5502   0015A0  501F               	movf	(turnRight@mR+1)^0,w,c
  5503   0015A2  22DA               	addwfc	fsr2h,f,c
  5504   0015A4  0E00               	movlw	0
  5505   0015A6  6EDF               	movwf	indf2,c
  5506                           
  5507                           ;dc_motor.c: 136:     mR->brakemode = 0;
  5508   0015A8  EE20 F002          	lfsr	2,2
  5509   0015AC  501E               	movf	turnRight@mR^0,w,c
  5510   0015AE  26D9               	addwf	fsr2l,f,c
  5511   0015B0  501F               	movf	(turnRight@mR+1)^0,w,c
  5512   0015B2  22DA               	addwfc	fsr2h,f,c
  5513   0015B4  0E00               	movlw	0
  5514   0015B6  6EDF               	movwf	indf2,c
  5515                           
  5516                           ;dc_motor.c: 139:     if(mL->power>75){mL->power=75;}
  5517   0015B8  C01C  FFD9         	movff	turnRight@mL,fsr2l
  5518   0015BC  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  5519   0015C0  50DF               	movf	indf2,w,c
  5520   0015C2  0A80               	xorlw	128
  5521   0015C4  0F34               	addlw	-204
  5522   0015C6  A0D8               	btfss	status,0,c
  5523   0015C8  EFE8  F00A         	goto	u1931
  5524   0015CC  EFEA  F00A         	goto	u1930
  5525   0015D0                     u1931:
  5526   0015D0  EFF0  F00A         	goto	l2681
  5527   0015D4                     u1930:
  5528   0015D4  C01C  FFD9         	movff	turnRight@mL,fsr2l
  5529   0015D8  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  5530   0015DC  0E4B               	movlw	75
  5531   0015DE  6EDF               	movwf	indf2,c
  5532   0015E0                     l2681:
  5533                           
  5534                           ;dc_motor.c: 140:     if(mR->power>75){mR->power=75;}
  5535   0015E0  C01E  FFD9         	movff	turnRight@mR,fsr2l
  5536   0015E4  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  5537   0015E8  50DF               	movf	indf2,w,c
  5538   0015EA  0A80               	xorlw	128
  5539   0015EC  0F34               	addlw	-204
  5540   0015EE  A0D8               	btfss	status,0,c
  5541   0015F0  EFFC  F00A         	goto	u1941
  5542   0015F4  EFFE  F00A         	goto	u1940
  5543   0015F8                     u1941:
  5544   0015F8  EF04  F00B         	goto	l2685
  5545   0015FC                     u1940:
  5546   0015FC  C01E  FFD9         	movff	turnRight@mR,fsr2l
  5547   001600  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  5548   001604  0E4B               	movlw	75
  5549   001606  6EDF               	movwf	indf2,c
  5550   001608                     l2685:
  5551                           
  5552                           ;dc_motor.c: 142:     mL->power = mL->power + 5 ;
  5553   001608  C01C  FFD9         	movff	turnRight@mL,fsr2l
  5554   00160C  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  5555   001610  50DF               	movf	indf2,w,c
  5556   001612  0F05               	addlw	5
  5557   001614  C01C  FFD9         	movff	turnRight@mL,fsr2l
  5558   001618  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  5559   00161C  6EDF               	movwf	indf2,c
  5560   00161E                     
  5561                           ;dc_motor.c: 143:     mR->power = mR->power + 5;
  5562   00161E  C01E  FFD9         	movff	turnRight@mR,fsr2l
  5563   001622  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  5564   001626  50DF               	movf	indf2,w,c
  5565   001628  0F05               	addlw	5
  5566   00162A  C01E  FFD9         	movff	turnRight@mR,fsr2l
  5567   00162E  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  5568   001632  6EDF               	movwf	indf2,c
  5569   001634                     
  5570                           ;dc_motor.c: 145:     setMotorPWM(mL);
  5571   001634  C01C  F016         	movff	turnRight@mL,setMotorPWM@m
  5572   001638  C01D  F017         	movff	turnRight@mL+1,setMotorPWM@m+1
  5573   00163C  EC82  F009         	call	_setMotorPWM	;wreg free
  5574   001640                     
  5575                           ;dc_motor.c: 146:     setMotorPWM(mR);
  5576   001640  C01E  F016         	movff	turnRight@mR,setMotorPWM@m
  5577   001644  C01F  F017         	movff	turnRight@mR+1,setMotorPWM@m+1
  5578   001648  EC82  F009         	call	_setMotorPWM	;wreg free
  5579   00164C                     
  5580                           ;dc_motor.c: 147:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5581   00164C  0E05               	movlw	5
  5582   00164E  6E21               	movwf	(??_turnRight+1)^0,c
  5583   001650  0E0F               	movlw	15
  5584   001652  6E20               	movwf	??_turnRight^0,c
  5585   001654  0EF1               	movlw	241
  5586   001656                     u4197:
  5587   001656  2EE8               	decfsz	wreg,f,c
  5588   001658  D7FE               	bra	u4197
  5589   00165A  2E20               	decfsz	??_turnRight^0,f,c
  5590   00165C  D7FC               	bra	u4197
  5591   00165E  2E21               	decfsz	(??_turnRight+1)^0,f,c
  5592   001660  D7FA               	bra	u4197
  5593   001662  F000               	nop	
  5594   001664  0012               	return		;funcret
  5595   001666                     __end_of_turnRight:
  5596                           	callstack 0
  5597                           
  5598 ;; *************** function _LightBlueInstructions *****************
  5599 ;; Defined at:
  5600 ;;		line 103 in file "color_instructions.c"
  5601 ;; Parameters:    Size  Location     Type
  5602 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  5603 ;;		 -> main@motorL(9), 
  5604 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  5605 ;;		 -> main@motorR(9), 
  5606 ;; Auto vars:     Size  Location     Type
  5607 ;;  a               1   44[COMRAM] unsigned char 
  5608 ;; Return value:  Size  Location     Type
  5609 ;;                  1    wreg      void 
  5610 ;; Registers used:
  5611 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5612 ;; Tracked objects:
  5613 ;;		On entry : 0/0
  5614 ;;		On exit  : 0/0
  5615 ;;		Unchanged: 0/0
  5616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5617 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5618 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5619 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5620 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5621 ;;Total ram usage:        7 bytes
  5622 ;; Hardware stack levels used: 1
  5623 ;; Hardware stack levels required when called: 11
  5624 ;; This function calls:
  5625 ;;		_fullSpeedBackwards
  5626 ;;		_stop
  5627 ;;		_turnLeft135
  5628 ;; This function is called by:
  5629 ;;		_MoveBuggy
  5630 ;; This function uses a non-reentrant model
  5631 ;;
  5632                           
  5633                           	psect	text27
  5634   001D2E                     __ptext27:
  5635                           	callstack 0
  5636   001D2E                     _LightBlueInstructions:
  5637                           	callstack 18
  5638   001D2E                     
  5639                           ;color_instructions.c: 104:     unsigned char a=0;
  5640   001D2E  0E00               	movlw	0
  5641   001D30  6E2D               	movwf	LightBlueInstructions@a^0,c
  5642                           
  5643                           ;color_instructions.c: 105:     while (a<20){
  5644   001D32  EFA6  F00E         	goto	l2969
  5645   001D36                     l2965:
  5646                           
  5647                           ;color_instructions.c: 106:         fullSpeedBackwards(mL, mR);
  5648   001D36  C027  F01C         	movff	LightBlueInstructions@mL,fullSpeedBackwards@mL
  5649   001D3A  C028  F01D         	movff	LightBlueInstructions@mL+1,fullSpeedBackwards@mL+1
  5650   001D3E  C029  F01E         	movff	LightBlueInstructions@mR,fullSpeedBackwards@mR
  5651   001D42  C02A  F01F         	movff	LightBlueInstructions@mR+1,fullSpeedBackwards@mR+1
  5652   001D46  EC15  F00C         	call	_fullSpeedBackwards	;wreg free
  5653   001D4A                     
  5654                           ;color_instructions.c: 107:         a++;
  5655   001D4A  2A2D               	incf	LightBlueInstructions@a^0,f,c
  5656   001D4C                     l2969:
  5657                           
  5658                           ;color_instructions.c: 105:     while (a<20){
  5659   001D4C  0E13               	movlw	19
  5660   001D4E  642D               	cpfsgt	LightBlueInstructions@a^0,c
  5661   001D50  EFAC  F00E         	goto	u2191
  5662   001D54  EFAE  F00E         	goto	u2190
  5663   001D58                     u2191:
  5664   001D58  EF9B  F00E         	goto	l2965
  5665   001D5C                     u2190:
  5666   001D5C  EFBB  F00E         	goto	l2975
  5667   001D60                     l2971:
  5668                           
  5669                           ;color_instructions.c: 110:         stop(mL, mR);
  5670   001D60  C027  F01C         	movff	LightBlueInstructions@mL,stop@mL
  5671   001D64  C028  F01D         	movff	LightBlueInstructions@mL+1,stop@mL+1
  5672   001D68  C029  F01E         	movff	LightBlueInstructions@mR,stop@mR
  5673   001D6C  C02A  F01F         	movff	LightBlueInstructions@mR+1,stop@mR+1
  5674   001D70  EC80  F00C         	call	_stop	;wreg free
  5675   001D74                     
  5676                           ;color_instructions.c: 111:         a--;
  5677   001D74  062D               	decf	LightBlueInstructions@a^0,f,c
  5678   001D76                     l2975:
  5679                           
  5680                           ;color_instructions.c: 109:     while (a>0){
  5681   001D76  502D               	movf	LightBlueInstructions@a^0,w,c
  5682   001D78  A4D8               	btfss	status,2,c
  5683   001D7A  EFC1  F00E         	goto	u2201
  5684   001D7E  EFC3  F00E         	goto	u2200
  5685   001D82                     u2201:
  5686   001D82  EFB0  F00E         	goto	l2971
  5687   001D86                     u2200:
  5688   001D86                     
  5689                           ;color_instructions.c: 113:     _delay((unsigned long)((250)*(64000000/4000.0)));
  5690   001D86  0E15               	movlw	21
  5691   001D88  6E2C               	movwf	(??_LightBlueInstructions+1)^0,c
  5692   001D8A  0E4B               	movlw	75
  5693   001D8C  6E2B               	movwf	??_LightBlueInstructions^0,c
  5694   001D8E  0EBE               	movlw	190
  5695   001D90                     u4207:
  5696   001D90  2EE8               	decfsz	wreg,f,c
  5697   001D92  D7FE               	bra	u4207
  5698   001D94  2E2B               	decfsz	??_LightBlueInstructions^0,f,c
  5699   001D96  D7FC               	bra	u4207
  5700   001D98  2E2C               	decfsz	(??_LightBlueInstructions+1)^0,f,c
  5701   001D9A  D7FA               	bra	u4207
  5702   001D9C  D000               	nop2	
  5703   001D9E                     
  5704                           ;color_instructions.c: 115:     turnLeft135(mL, mR);
  5705   001D9E  C027  F022         	movff	LightBlueInstructions@mL,turnLeft135@mL
  5706   001DA2  C028  F023         	movff	LightBlueInstructions@mL+1,turnLeft135@mL+1
  5707   001DA6  C029  F024         	movff	LightBlueInstructions@mR,turnLeft135@mR
  5708   001DAA  C02A  F025         	movff	LightBlueInstructions@mR+1,turnLeft135@mR+1
  5709   001DAE  ECE0  F00F         	call	_turnLeft135	;wreg free
  5710   001DB2  0012               	return		;funcret
  5711   001DB4                     __end_of_LightBlueInstructions:
  5712                           	callstack 0
  5713                           
  5714 ;; *************** function _turnLeft135 *****************
  5715 ;; Defined at:
  5716 ;;		line 253 in file "dc_motor.c"
  5717 ;; Parameters:    Size  Location     Type
  5718 ;;  mL              2   33[COMRAM] PTR struct DC_motor
  5719 ;;		 -> main@motorL(9), 
  5720 ;;  mR              2   35[COMRAM] PTR struct DC_motor
  5721 ;;		 -> main@motorR(9), 
  5722 ;; Auto vars:     Size  Location     Type
  5723 ;;  a               1   37[COMRAM] unsigned char 
  5724 ;; Return value:  Size  Location     Type
  5725 ;;                  1    wreg      void 
  5726 ;; Registers used:
  5727 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5728 ;; Tracked objects:
  5729 ;;		On entry : 0/0
  5730 ;;		On exit  : 0/0
  5731 ;;		Unchanged: 0/0
  5732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5733 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5734 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5736 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5737 ;;Total ram usage:        5 bytes
  5738 ;; Hardware stack levels used: 1
  5739 ;; Hardware stack levels required when called: 10
  5740 ;; This function calls:
  5741 ;;		_stop
  5742 ;;		_turnLeft
  5743 ;; This function is called by:
  5744 ;;		_LightBlueInstructions
  5745 ;; This function uses a non-reentrant model
  5746 ;;
  5747                           
  5748                           	psect	text28
  5749   001FC0                     __ptext28:
  5750                           	callstack 0
  5751   001FC0                     _turnLeft135:
  5752                           	callstack 18
  5753   001FC0                     
  5754                           ;dc_motor.c: 255:     unsigned char a=0;
  5755   001FC0  0E00               	movlw	0
  5756   001FC2  6E26               	movwf	turnLeft135@a^0,c
  5757                           
  5758                           ;dc_motor.c: 256:     while(a<21){
  5759   001FC4  EFEF  F00F         	goto	l2791
  5760   001FC8                     l2787:
  5761                           
  5762                           ;dc_motor.c: 257:         turnLeft(mL, mR);
  5763   001FC8  C022  F01C         	movff	turnLeft135@mL,turnLeft@mL
  5764   001FCC  C023  F01D         	movff	turnLeft135@mL+1,turnLeft@mL+1
  5765   001FD0  C024  F01E         	movff	turnLeft135@mR,turnLeft@mR
  5766   001FD4  C025  F01F         	movff	turnLeft135@mR+1,turnLeft@mR+1
  5767   001FD8  EC33  F00B         	call	_turnLeft	;wreg free
  5768   001FDC                     
  5769                           ;dc_motor.c: 258:         a++;
  5770   001FDC  2A26               	incf	turnLeft135@a^0,f,c
  5771   001FDE                     l2791:
  5772                           
  5773                           ;dc_motor.c: 256:     while(a<21){
  5774   001FDE  0E14               	movlw	20
  5775   001FE0  6426               	cpfsgt	turnLeft135@a^0,c
  5776   001FE2  EFF5  F00F         	goto	u2051
  5777   001FE6  EFF7  F00F         	goto	u2050
  5778   001FEA                     u2051:
  5779   001FEA  EFE4  F00F         	goto	l2787
  5780   001FEE                     u2050:
  5781   001FEE  EF04  F010         	goto	l2797
  5782   001FF2                     l2793:
  5783                           
  5784                           ;dc_motor.c: 261:         stop(mL, mR);
  5785   001FF2  C022  F01C         	movff	turnLeft135@mL,stop@mL
  5786   001FF6  C023  F01D         	movff	turnLeft135@mL+1,stop@mL+1
  5787   001FFA  C024  F01E         	movff	turnLeft135@mR,stop@mR
  5788   001FFE  C025  F01F         	movff	turnLeft135@mR+1,stop@mR+1
  5789   002002  EC80  F00C         	call	_stop	;wreg free
  5790   002006                     
  5791                           ;dc_motor.c: 262:         a--;
  5792   002006  0626               	decf	turnLeft135@a^0,f,c
  5793   002008                     l2797:
  5794                           
  5795                           ;dc_motor.c: 260:     while(a>0){
  5796   002008  5026               	movf	turnLeft135@a^0,w,c
  5797   00200A  A4D8               	btfss	status,2,c
  5798   00200C  EF0A  F010         	goto	u2061
  5799   002010  EF0C  F010         	goto	u2060
  5800   002014                     u2061:
  5801   002014  EFF9  F00F         	goto	l2793
  5802   002018                     u2060:
  5803   002018  0012               	return		;funcret
  5804   00201A                     __end_of_turnLeft135:
  5805                           	callstack 0
  5806                           
  5807 ;; *************** function _GreenInstructions *****************
  5808 ;; Defined at:
  5809 ;;		line 25 in file "color_instructions.c"
  5810 ;; Parameters:    Size  Location     Type
  5811 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  5812 ;;		 -> main@motorL(9), 
  5813 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  5814 ;;		 -> main@motorR(9), 
  5815 ;; Auto vars:     Size  Location     Type
  5816 ;;  a               1   44[COMRAM] unsigned char 
  5817 ;; Return value:  Size  Location     Type
  5818 ;;                  1    wreg      void 
  5819 ;; Registers used:
  5820 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5821 ;; Tracked objects:
  5822 ;;		On entry : 0/0
  5823 ;;		On exit  : 0/0
  5824 ;;		Unchanged: 0/0
  5825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5826 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5827 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5828 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5829 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5830 ;;Total ram usage:        7 bytes
  5831 ;; Hardware stack levels used: 1
  5832 ;; Hardware stack levels required when called: 11
  5833 ;; This function calls:
  5834 ;;		_fullSpeedBackwards
  5835 ;;		_stop
  5836 ;;		_turnLeft90
  5837 ;; This function is called by:
  5838 ;;		_MoveBuggy
  5839 ;; This function uses a non-reentrant model
  5840 ;;
  5841                           
  5842                           	psect	text29
  5843   001DB4                     __ptext29:
  5844                           	callstack 0
  5845   001DB4                     _GreenInstructions:
  5846                           	callstack 18
  5847   001DB4                     
  5848                           ;color_instructions.c: 26:     unsigned char a=0;
  5849   001DB4  0E00               	movlw	0
  5850   001DB6  6E2D               	movwf	GreenInstructions@a^0,c
  5851                           
  5852                           ;color_instructions.c: 27:     while (a<8){
  5853   001DB8  EFE9  F00E         	goto	l2877
  5854   001DBC                     l2873:
  5855                           
  5856                           ;color_instructions.c: 28:         fullSpeedBackwards(mL, mR);
  5857   001DBC  C027  F01C         	movff	GreenInstructions@mL,fullSpeedBackwards@mL
  5858   001DC0  C028  F01D         	movff	GreenInstructions@mL+1,fullSpeedBackwards@mL+1
  5859   001DC4  C029  F01E         	movff	GreenInstructions@mR,fullSpeedBackwards@mR
  5860   001DC8  C02A  F01F         	movff	GreenInstructions@mR+1,fullSpeedBackwards@mR+1
  5861   001DCC  EC15  F00C         	call	_fullSpeedBackwards	;wreg free
  5862   001DD0                     
  5863                           ;color_instructions.c: 29:         a++;
  5864   001DD0  2A2D               	incf	GreenInstructions@a^0,f,c
  5865   001DD2                     l2877:
  5866                           
  5867                           ;color_instructions.c: 27:     while (a<8){
  5868   001DD2  0E07               	movlw	7
  5869   001DD4  642D               	cpfsgt	GreenInstructions@a^0,c
  5870   001DD6  EFEF  F00E         	goto	u2091
  5871   001DDA  EFF1  F00E         	goto	u2090
  5872   001DDE                     u2091:
  5873   001DDE  EFDE  F00E         	goto	l2873
  5874   001DE2                     u2090:
  5875   001DE2  EFFE  F00E         	goto	l2883
  5876   001DE6                     l2879:
  5877                           
  5878                           ;color_instructions.c: 32:         stop(mL, mR);
  5879   001DE6  C027  F01C         	movff	GreenInstructions@mL,stop@mL
  5880   001DEA  C028  F01D         	movff	GreenInstructions@mL+1,stop@mL+1
  5881   001DEE  C029  F01E         	movff	GreenInstructions@mR,stop@mR
  5882   001DF2  C02A  F01F         	movff	GreenInstructions@mR+1,stop@mR+1
  5883   001DF6  EC80  F00C         	call	_stop	;wreg free
  5884   001DFA                     
  5885                           ;color_instructions.c: 33:         a--;
  5886   001DFA  062D               	decf	GreenInstructions@a^0,f,c
  5887   001DFC                     l2883:
  5888                           
  5889                           ;color_instructions.c: 31:     while (a>0){
  5890   001DFC  502D               	movf	GreenInstructions@a^0,w,c
  5891   001DFE  A4D8               	btfss	status,2,c
  5892   001E00  EF04  F00F         	goto	u2101
  5893   001E04  EF06  F00F         	goto	u2100
  5894   001E08                     u2101:
  5895   001E08  EFF3  F00E         	goto	l2879
  5896   001E0C                     u2100:
  5897   001E0C                     
  5898                           ;color_instructions.c: 35:     _delay((unsigned long)((250)*(64000000/4000.0)));
  5899   001E0C  0E15               	movlw	21
  5900   001E0E  6E2C               	movwf	(??_GreenInstructions+1)^0,c
  5901   001E10  0E4B               	movlw	75
  5902   001E12  6E2B               	movwf	??_GreenInstructions^0,c
  5903   001E14  0EBE               	movlw	190
  5904   001E16                     u4217:
  5905   001E16  2EE8               	decfsz	wreg,f,c
  5906   001E18  D7FE               	bra	u4217
  5907   001E1A  2E2B               	decfsz	??_GreenInstructions^0,f,c
  5908   001E1C  D7FC               	bra	u4217
  5909   001E1E  2E2C               	decfsz	(??_GreenInstructions+1)^0,f,c
  5910   001E20  D7FA               	bra	u4217
  5911   001E22  D000               	nop2	
  5912   001E24                     
  5913                           ;color_instructions.c: 36:     turnLeft90(mL, mR);
  5914   001E24  C027  F022         	movff	GreenInstructions@mL,turnLeft90@mL
  5915   001E28  C028  F023         	movff	GreenInstructions@mL+1,turnLeft90@mL+1
  5916   001E2C  C029  F024         	movff	GreenInstructions@mR,turnLeft90@mR
  5917   001E30  C02A  F025         	movff	GreenInstructions@mR+1,turnLeft90@mR+1
  5918   001E34  EC0D  F010         	call	_turnLeft90	;wreg free
  5919   001E38  0012               	return		;funcret
  5920   001E3A                     __end_of_GreenInstructions:
  5921                           	callstack 0
  5922                           
  5923 ;; *************** function _BlueInstructions *****************
  5924 ;; Defined at:
  5925 ;;		line 39 in file "color_instructions.c"
  5926 ;; Parameters:    Size  Location     Type
  5927 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  5928 ;;		 -> main@motorL(9), 
  5929 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  5930 ;;		 -> main@motorR(9), 
  5931 ;; Auto vars:     Size  Location     Type
  5932 ;;  a               1   44[COMRAM] unsigned char 
  5933 ;; Return value:  Size  Location     Type
  5934 ;;                  1    wreg      void 
  5935 ;; Registers used:
  5936 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5937 ;; Tracked objects:
  5938 ;;		On entry : 0/0
  5939 ;;		On exit  : 0/0
  5940 ;;		Unchanged: 0/0
  5941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5942 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5943 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5944 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5945 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5946 ;;Total ram usage:        7 bytes
  5947 ;; Hardware stack levels used: 1
  5948 ;; Hardware stack levels required when called: 11
  5949 ;; This function calls:
  5950 ;;		_fullSpeedBackwards
  5951 ;;		_stop
  5952 ;;		_turnLeft90
  5953 ;; This function is called by:
  5954 ;;		_MoveBuggy
  5955 ;;		_WhiteInstructions
  5956 ;; This function uses a non-reentrant model
  5957 ;;
  5958                           
  5959                           	psect	text30
  5960   0019D4                     __ptext30:
  5961                           	callstack 0
  5962   0019D4                     _BlueInstructions:
  5963                           	callstack 18
  5964   0019D4                     
  5965                           ;color_instructions.c: 40:     unsigned char a=0;
  5966   0019D4  0E00               	movlw	0
  5967   0019D6  6E2D               	movwf	BlueInstructions@a^0,c
  5968                           
  5969                           ;color_instructions.c: 41:     while (a<8){
  5970   0019D8  EFF9  F00C         	goto	l2895
  5971   0019DC                     l2891:
  5972                           
  5973                           ;color_instructions.c: 42:         fullSpeedBackwards(mL, mR);
  5974   0019DC  C027  F01C         	movff	BlueInstructions@mL,fullSpeedBackwards@mL
  5975   0019E0  C028  F01D         	movff	BlueInstructions@mL+1,fullSpeedBackwards@mL+1
  5976   0019E4  C029  F01E         	movff	BlueInstructions@mR,fullSpeedBackwards@mR
  5977   0019E8  C02A  F01F         	movff	BlueInstructions@mR+1,fullSpeedBackwards@mR+1
  5978   0019EC  EC15  F00C         	call	_fullSpeedBackwards	;wreg free
  5979   0019F0                     
  5980                           ;color_instructions.c: 43:         a++;
  5981   0019F0  2A2D               	incf	BlueInstructions@a^0,f,c
  5982   0019F2                     l2895:
  5983                           
  5984                           ;color_instructions.c: 41:     while (a<8){
  5985   0019F2  0E07               	movlw	7
  5986   0019F4  642D               	cpfsgt	BlueInstructions@a^0,c
  5987   0019F6  EFFF  F00C         	goto	u2111
  5988   0019FA  EF01  F00D         	goto	u2110
  5989   0019FE                     u2111:
  5990   0019FE  EFEE  F00C         	goto	l2891
  5991   001A02                     u2110:
  5992   001A02  EF0E  F00D         	goto	l2901
  5993   001A06                     l2897:
  5994                           
  5995                           ;color_instructions.c: 46:         stop(mL, mR);
  5996   001A06  C027  F01C         	movff	BlueInstructions@mL,stop@mL
  5997   001A0A  C028  F01D         	movff	BlueInstructions@mL+1,stop@mL+1
  5998   001A0E  C029  F01E         	movff	BlueInstructions@mR,stop@mR
  5999   001A12  C02A  F01F         	movff	BlueInstructions@mR+1,stop@mR+1
  6000   001A16  EC80  F00C         	call	_stop	;wreg free
  6001   001A1A                     
  6002                           ;color_instructions.c: 47:         a--;
  6003   001A1A  062D               	decf	BlueInstructions@a^0,f,c
  6004   001A1C                     l2901:
  6005                           
  6006                           ;color_instructions.c: 45:     while (a>0){
  6007   001A1C  502D               	movf	BlueInstructions@a^0,w,c
  6008   001A1E  A4D8               	btfss	status,2,c
  6009   001A20  EF14  F00D         	goto	u2121
  6010   001A24  EF16  F00D         	goto	u2120
  6011   001A28                     u2121:
  6012   001A28  EF03  F00D         	goto	l2897
  6013   001A2C                     u2120:
  6014   001A2C                     
  6015                           ;color_instructions.c: 49:     _delay((unsigned long)((500)*(64000000/4000.0)));
  6016   001A2C  0E29               	movlw	41
  6017   001A2E  6E2C               	movwf	(??_BlueInstructions+1)^0,c
  6018   001A30  0E96               	movlw	150
  6019   001A32  6E2B               	movwf	??_BlueInstructions^0,c
  6020   001A34  0E7F               	movlw	127
  6021   001A36                     u4227:
  6022   001A36  2EE8               	decfsz	wreg,f,c
  6023   001A38  D7FE               	bra	u4227
  6024   001A3A  2E2B               	decfsz	??_BlueInstructions^0,f,c
  6025   001A3C  D7FC               	bra	u4227
  6026   001A3E  2E2C               	decfsz	(??_BlueInstructions+1)^0,f,c
  6027   001A40  D7FA               	bra	u4227
  6028   001A42  F000               	nop	
  6029   001A44                     
  6030                           ;color_instructions.c: 52:     turnLeft90(mL, mR);
  6031   001A44  C027  F022         	movff	BlueInstructions@mL,turnLeft90@mL
  6032   001A48  C028  F023         	movff	BlueInstructions@mL+1,turnLeft90@mL+1
  6033   001A4C  C029  F024         	movff	BlueInstructions@mR,turnLeft90@mR
  6034   001A50  C02A  F025         	movff	BlueInstructions@mR+1,turnLeft90@mR+1
  6035   001A54  EC0D  F010         	call	_turnLeft90	;wreg free
  6036   001A58                     
  6037                           ;color_instructions.c: 53:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6038   001A58  0E05               	movlw	5
  6039   001A5A  6E2C               	movwf	(??_BlueInstructions+1)^0,c
  6040   001A5C  0E0F               	movlw	15
  6041   001A5E  6E2B               	movwf	??_BlueInstructions^0,c
  6042   001A60  0EF1               	movlw	241
  6043   001A62                     u4237:
  6044   001A62  2EE8               	decfsz	wreg,f,c
  6045   001A64  D7FE               	bra	u4237
  6046   001A66  2E2B               	decfsz	??_BlueInstructions^0,f,c
  6047   001A68  D7FC               	bra	u4237
  6048   001A6A  2E2C               	decfsz	(??_BlueInstructions+1)^0,f,c
  6049   001A6C  D7FA               	bra	u4237
  6050   001A6E  F000               	nop	
  6051                           
  6052                           ;color_instructions.c: 54:     turnLeft90(mL, mR);
  6053   001A70  C027  F022         	movff	BlueInstructions@mL,turnLeft90@mL
  6054   001A74  C028  F023         	movff	BlueInstructions@mL+1,turnLeft90@mL+1
  6055   001A78  C029  F024         	movff	BlueInstructions@mR,turnLeft90@mR
  6056   001A7C  C02A  F025         	movff	BlueInstructions@mR+1,turnLeft90@mR+1
  6057   001A80  EC0D  F010         	call	_turnLeft90	;wreg free
  6058   001A84  0012               	return		;funcret
  6059   001A86                     __end_of_BlueInstructions:
  6060                           	callstack 0
  6061                           
  6062 ;; *************** function _turnLeft90 *****************
  6063 ;; Defined at:
  6064 ;;		line 200 in file "dc_motor.c"
  6065 ;; Parameters:    Size  Location     Type
  6066 ;;  mL              2   33[COMRAM] PTR struct DC_motor
  6067 ;;		 -> main@motorL(9), 
  6068 ;;  mR              2   35[COMRAM] PTR struct DC_motor
  6069 ;;		 -> main@motorR(9), 
  6070 ;; Auto vars:     Size  Location     Type
  6071 ;;  a               1   37[COMRAM] unsigned char 
  6072 ;; Return value:  Size  Location     Type
  6073 ;;                  1    wreg      void 
  6074 ;; Registers used:
  6075 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6076 ;; Tracked objects:
  6077 ;;		On entry : 0/0
  6078 ;;		On exit  : 0/0
  6079 ;;		Unchanged: 0/0
  6080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6081 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6082 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6084 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6085 ;;Total ram usage:        5 bytes
  6086 ;; Hardware stack levels used: 1
  6087 ;; Hardware stack levels required when called: 10
  6088 ;; This function calls:
  6089 ;;		_stop
  6090 ;;		_turnLeft
  6091 ;; This function is called by:
  6092 ;;		_GreenInstructions
  6093 ;;		_BlueInstructions
  6094 ;;		_PinkInstructions
  6095 ;; This function uses a non-reentrant model
  6096 ;;
  6097                           
  6098                           	psect	text31
  6099   00201A                     __ptext31:
  6100                           	callstack 0
  6101   00201A                     _turnLeft90:
  6102                           	callstack 18
  6103   00201A                     
  6104                           ;dc_motor.c: 202:     unsigned char a=0;
  6105   00201A  0E00               	movlw	0
  6106   00201C  6E26               	movwf	turnLeft90@a^0,c
  6107                           
  6108                           ;dc_motor.c: 203:     while(a<19){
  6109   00201E  EF1C  F010         	goto	l2749
  6110   002022                     l2745:
  6111                           
  6112                           ;dc_motor.c: 204:         turnLeft(mL, mR);
  6113   002022  C022  F01C         	movff	turnLeft90@mL,turnLeft@mL
  6114   002026  C023  F01D         	movff	turnLeft90@mL+1,turnLeft@mL+1
  6115   00202A  C024  F01E         	movff	turnLeft90@mR,turnLeft@mR
  6116   00202E  C025  F01F         	movff	turnLeft90@mR+1,turnLeft@mR+1
  6117   002032  EC33  F00B         	call	_turnLeft	;wreg free
  6118   002036                     
  6119                           ;dc_motor.c: 205:         a++;
  6120   002036  2A26               	incf	turnLeft90@a^0,f,c
  6121   002038                     l2749:
  6122                           
  6123                           ;dc_motor.c: 203:     while(a<19){
  6124   002038  0E12               	movlw	18
  6125   00203A  6426               	cpfsgt	turnLeft90@a^0,c
  6126   00203C  EF22  F010         	goto	u1991
  6127   002040  EF24  F010         	goto	u1990
  6128   002044                     u1991:
  6129   002044  EF11  F010         	goto	l2745
  6130   002048                     u1990:
  6131   002048  EF31  F010         	goto	l2755
  6132   00204C                     l2751:
  6133                           
  6134                           ;dc_motor.c: 208:         stop(mL, mR);
  6135   00204C  C022  F01C         	movff	turnLeft90@mL,stop@mL
  6136   002050  C023  F01D         	movff	turnLeft90@mL+1,stop@mL+1
  6137   002054  C024  F01E         	movff	turnLeft90@mR,stop@mR
  6138   002058  C025  F01F         	movff	turnLeft90@mR+1,stop@mR+1
  6139   00205C  EC80  F00C         	call	_stop	;wreg free
  6140   002060                     
  6141                           ;dc_motor.c: 209:         a--;
  6142   002060  0626               	decf	turnLeft90@a^0,f,c
  6143   002062                     l2755:
  6144                           
  6145                           ;dc_motor.c: 207:     while(a>0){
  6146   002062  5026               	movf	turnLeft90@a^0,w,c
  6147   002064  A4D8               	btfss	status,2,c
  6148   002066  EF37  F010         	goto	u2001
  6149   00206A  EF39  F010         	goto	u2000
  6150   00206E                     u2001:
  6151   00206E  EF26  F010         	goto	l2751
  6152   002072                     u2000:
  6153   002072  0012               	return		;funcret
  6154   002074                     __end_of_turnLeft90:
  6155                           	callstack 0
  6156                           
  6157 ;; *************** function _turnLeft *****************
  6158 ;; Defined at:
  6159 ;;		line 107 in file "dc_motor.c"
  6160 ;; Parameters:    Size  Location     Type
  6161 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6162 ;;		 -> main@motorL(9), 
  6163 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6164 ;;		 -> main@motorR(9), 
  6165 ;; Auto vars:     Size  Location     Type
  6166 ;;		None
  6167 ;; Return value:  Size  Location     Type
  6168 ;;                  1    wreg      void 
  6169 ;; Registers used:
  6170 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6171 ;; Tracked objects:
  6172 ;;		On entry : 0/0
  6173 ;;		On exit  : 0/0
  6174 ;;		Unchanged: 0/0
  6175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6176 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6178 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6179 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6180 ;;Total ram usage:        6 bytes
  6181 ;; Hardware stack levels used: 1
  6182 ;; Hardware stack levels required when called: 9
  6183 ;; This function calls:
  6184 ;;		_setMotorPWM
  6185 ;; This function is called by:
  6186 ;;		_turnLeft90
  6187 ;;		_turnLeft135
  6188 ;; This function uses a non-reentrant model
  6189 ;;
  6190                           
  6191                           	psect	text32
  6192   001666                     __ptext32:
  6193                           	callstack 0
  6194   001666                     _turnLeft:
  6195                           	callstack 18
  6196   001666                     
  6197                           ;dc_motor.c: 107: void turnLeft(DC_motor *mL, DC_motor *mR);dc_motor.c: 108: {;dc_motor.
      +                          c: 110:     mL->direction = 0;
  6198   001666  EE20 F001          	lfsr	2,1
  6199   00166A  501C               	movf	turnLeft@mL^0,w,c
  6200   00166C  26D9               	addwf	fsr2l,f,c
  6201   00166E  501D               	movf	(turnLeft@mL+1)^0,w,c
  6202   001670  22DA               	addwfc	fsr2h,f,c
  6203   001672  0E00               	movlw	0
  6204   001674  6EDF               	movwf	indf2,c
  6205                           
  6206                           ;dc_motor.c: 111:     mL->brakemode = 0;
  6207   001676  EE20 F002          	lfsr	2,2
  6208   00167A  501C               	movf	turnLeft@mL^0,w,c
  6209   00167C  26D9               	addwf	fsr2l,f,c
  6210   00167E  501D               	movf	(turnLeft@mL+1)^0,w,c
  6211   001680  22DA               	addwfc	fsr2h,f,c
  6212   001682  0E00               	movlw	0
  6213   001684  6EDF               	movwf	indf2,c
  6214                           
  6215                           ;dc_motor.c: 113:     mR->direction = 1;
  6216   001686  EE20 F001          	lfsr	2,1
  6217   00168A  501E               	movf	turnLeft@mR^0,w,c
  6218   00168C  26D9               	addwf	fsr2l,f,c
  6219   00168E  501F               	movf	(turnLeft@mR+1)^0,w,c
  6220   001690  22DA               	addwfc	fsr2h,f,c
  6221   001692  0E01               	movlw	1
  6222   001694  6EDF               	movwf	indf2,c
  6223                           
  6224                           ;dc_motor.c: 114:     mR->brakemode = 0;
  6225   001696  EE20 F002          	lfsr	2,2
  6226   00169A  501E               	movf	turnLeft@mR^0,w,c
  6227   00169C  26D9               	addwf	fsr2l,f,c
  6228   00169E  501F               	movf	(turnLeft@mR+1)^0,w,c
  6229   0016A0  22DA               	addwfc	fsr2h,f,c
  6230   0016A2  0E00               	movlw	0
  6231   0016A4  6EDF               	movwf	indf2,c
  6232                           
  6233                           ;dc_motor.c: 117:     if(mL->power>75){mL->power=75;}
  6234   0016A6  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6235   0016AA  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6236   0016AE  50DF               	movf	indf2,w,c
  6237   0016B0  0A80               	xorlw	128
  6238   0016B2  0F34               	addlw	-204
  6239   0016B4  A0D8               	btfss	status,0,c
  6240   0016B6  EF5F  F00B         	goto	u1911
  6241   0016BA  EF61  F00B         	goto	u1910
  6242   0016BE                     u1911:
  6243   0016BE  EF67  F00B         	goto	l2663
  6244   0016C2                     u1910:
  6245   0016C2  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6246   0016C6  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6247   0016CA  0E4B               	movlw	75
  6248   0016CC  6EDF               	movwf	indf2,c
  6249   0016CE                     l2663:
  6250                           
  6251                           ;dc_motor.c: 118:     if(mR->power>75){mR->power=75;}
  6252   0016CE  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6253   0016D2  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6254   0016D6  50DF               	movf	indf2,w,c
  6255   0016D8  0A80               	xorlw	128
  6256   0016DA  0F34               	addlw	-204
  6257   0016DC  A0D8               	btfss	status,0,c
  6258   0016DE  EF73  F00B         	goto	u1921
  6259   0016E2  EF75  F00B         	goto	u1920
  6260   0016E6                     u1921:
  6261   0016E6  EF7B  F00B         	goto	l2667
  6262   0016EA                     u1920:
  6263   0016EA  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6264   0016EE  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6265   0016F2  0E4B               	movlw	75
  6266   0016F4  6EDF               	movwf	indf2,c
  6267   0016F6                     l2667:
  6268                           
  6269                           ;dc_motor.c: 120:     mL->power = mL->power + 5 ;
  6270   0016F6  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6271   0016FA  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6272   0016FE  50DF               	movf	indf2,w,c
  6273   001700  0F05               	addlw	5
  6274   001702  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6275   001706  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6276   00170A  6EDF               	movwf	indf2,c
  6277   00170C                     
  6278                           ;dc_motor.c: 121:     mR->power = mR->power + 5;
  6279   00170C  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6280   001710  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6281   001714  50DF               	movf	indf2,w,c
  6282   001716  0F05               	addlw	5
  6283   001718  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6284   00171C  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6285   001720  6EDF               	movwf	indf2,c
  6286   001722                     
  6287                           ;dc_motor.c: 123:     setMotorPWM(mL);
  6288   001722  C01C  F016         	movff	turnLeft@mL,setMotorPWM@m
  6289   001726  C01D  F017         	movff	turnLeft@mL+1,setMotorPWM@m+1
  6290   00172A  EC82  F009         	call	_setMotorPWM	;wreg free
  6291   00172E                     
  6292                           ;dc_motor.c: 124:     setMotorPWM(mR);
  6293   00172E  C01E  F016         	movff	turnLeft@mR,setMotorPWM@m
  6294   001732  C01F  F017         	movff	turnLeft@mR+1,setMotorPWM@m+1
  6295   001736  EC82  F009         	call	_setMotorPWM	;wreg free
  6296   00173A                     
  6297                           ;dc_motor.c: 125:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6298   00173A  0E05               	movlw	5
  6299   00173C  6E21               	movwf	(??_turnLeft+1)^0,c
  6300   00173E  0E0F               	movlw	15
  6301   001740  6E20               	movwf	??_turnLeft^0,c
  6302   001742  0EF1               	movlw	241
  6303   001744                     u4247:
  6304   001744  2EE8               	decfsz	wreg,f,c
  6305   001746  D7FE               	bra	u4247
  6306   001748  2E20               	decfsz	??_turnLeft^0,f,c
  6307   00174A  D7FC               	bra	u4247
  6308   00174C  2E21               	decfsz	(??_turnLeft+1)^0,f,c
  6309   00174E  D7FA               	bra	u4247
  6310   001750  F000               	nop	
  6311   001752  0012               	return		;funcret
  6312   001754                     __end_of_turnLeft:
  6313                           	callstack 0
  6314                           
  6315 ;; *************** function _stop *****************
  6316 ;; Defined at:
  6317 ;;		line 87 in file "dc_motor.c"
  6318 ;; Parameters:    Size  Location     Type
  6319 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6320 ;;		 -> main@motorL(9), 
  6321 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6322 ;;		 -> main@motorR(9), 
  6323 ;; Auto vars:     Size  Location     Type
  6324 ;;		None
  6325 ;; Return value:  Size  Location     Type
  6326 ;;                  1    wreg      void 
  6327 ;; Registers used:
  6328 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6329 ;; Tracked objects:
  6330 ;;		On entry : 0/0
  6331 ;;		On exit  : 0/0
  6332 ;;		Unchanged: 0/0
  6333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6334 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6336 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6337 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6338 ;;Total ram usage:        5 bytes
  6339 ;; Hardware stack levels used: 1
  6340 ;; Hardware stack levels required when called: 9
  6341 ;; This function calls:
  6342 ;;		_setMotorPWM
  6343 ;; This function is called by:
  6344 ;;		_turnLeft90
  6345 ;;		_turnRight90
  6346 ;;		_turnRight135
  6347 ;;		_turnLeft135
  6348 ;;		_main
  6349 ;;		_RedInstructions
  6350 ;;		_GreenInstructions
  6351 ;;		_BlueInstructions
  6352 ;;		_YellowInstructions
  6353 ;;		_PinkInstructions
  6354 ;;		_OrangeInstructions
  6355 ;;		_LightBlueInstructions
  6356 ;;		_turn180
  6357 ;;		_WhiteInstructions
  6358 ;; This function uses a non-reentrant model
  6359 ;;
  6360                           
  6361                           	psect	text33
  6362   001900                     __ptext33:
  6363                           	callstack 0
  6364   001900                     _stop:
  6365                           	callstack 21
  6366   001900                     
  6367                           ;dc_motor.c: 87: void stop(DC_motor *mL, DC_motor *mR);dc_motor.c: 88: {;dc_motor.c: 90:
      +                               mL->brakemode = 1;
  6368   001900  EE20 F002          	lfsr	2,2
  6369   001904  501C               	movf	stop@mL^0,w,c
  6370   001906  26D9               	addwf	fsr2l,f,c
  6371   001908  501D               	movf	(stop@mL+1)^0,w,c
  6372   00190A  22DA               	addwfc	fsr2h,f,c
  6373   00190C  0E01               	movlw	1
  6374   00190E  6EDF               	movwf	indf2,c
  6375                           
  6376                           ;dc_motor.c: 91:     mR->brakemode = 1;
  6377   001910  EE20 F002          	lfsr	2,2
  6378   001914  501E               	movf	stop@mR^0,w,c
  6379   001916  26D9               	addwf	fsr2l,f,c
  6380   001918  501F               	movf	(stop@mR+1)^0,w,c
  6381   00191A  22DA               	addwfc	fsr2h,f,c
  6382   00191C  0E01               	movlw	1
  6383   00191E  6EDF               	movwf	indf2,c
  6384                           
  6385                           ;dc_motor.c: 93:     if(mL->power<0){mL->power=0;}
  6386   001920  C01C  FFD9         	movff	stop@mL,fsr2l
  6387   001924  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6388   001928  0E00               	movlw	0
  6389   00192A  BEDB               	btfsc	plusw2,7,c
  6390   00192C  EF9C  F00C         	goto	u1890
  6391   001930  EF9A  F00C         	goto	u1891
  6392   001934                     u1891:
  6393   001934  EFA2  F00C         	goto	l2645
  6394   001938                     u1890:
  6395   001938  C01C  FFD9         	movff	stop@mL,fsr2l
  6396   00193C  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6397   001940  0E00               	movlw	0
  6398   001942  6EDF               	movwf	indf2,c
  6399   001944                     l2645:
  6400                           
  6401                           ;dc_motor.c: 94:     if(mR->power<0){mR->power=0;}
  6402   001944  C01E  FFD9         	movff	stop@mR,fsr2l
  6403   001948  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6404   00194C  0E00               	movlw	0
  6405   00194E  BEDB               	btfsc	plusw2,7,c
  6406   001950  EFAE  F00C         	goto	u1900
  6407   001954  EFAC  F00C         	goto	u1901
  6408   001958                     u1901:
  6409   001958  EFB4  F00C         	goto	l2649
  6410   00195C                     u1900:
  6411   00195C  C01E  FFD9         	movff	stop@mR,fsr2l
  6412   001960  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6413   001964  0E00               	movlw	0
  6414   001966  6EDF               	movwf	indf2,c
  6415   001968                     l2649:
  6416                           
  6417                           ;dc_motor.c: 96:     mL->power = mL->power - 5 ;
  6418   001968  C01C  FFD9         	movff	stop@mL,fsr2l
  6419   00196C  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6420   001970  50DF               	movf	indf2,w,c
  6421   001972  0FFB               	addlw	251
  6422   001974  C01C  FFD9         	movff	stop@mL,fsr2l
  6423   001978  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6424   00197C  6EDF               	movwf	indf2,c
  6425   00197E                     
  6426                           ;dc_motor.c: 97:     mR->power = mR->power - 5;
  6427   00197E  C01E  FFD9         	movff	stop@mR,fsr2l
  6428   001982  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6429   001986  50DF               	movf	indf2,w,c
  6430   001988  0FFB               	addlw	251
  6431   00198A  C01E  FFD9         	movff	stop@mR,fsr2l
  6432   00198E  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6433   001992  6EDF               	movwf	indf2,c
  6434                           
  6435                           ;dc_motor.c: 99:     mL->power = 0;
  6436   001994  C01C  FFD9         	movff	stop@mL,fsr2l
  6437   001998  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6438   00199C  0E00               	movlw	0
  6439   00199E  6EDF               	movwf	indf2,c
  6440                           
  6441                           ;dc_motor.c: 100:     mR->power = 0;
  6442   0019A0  C01E  FFD9         	movff	stop@mR,fsr2l
  6443   0019A4  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6444   0019A8  0E00               	movlw	0
  6445   0019AA  6EDF               	movwf	indf2,c
  6446   0019AC                     
  6447                           ;dc_motor.c: 101:     setMotorPWM(mL);
  6448   0019AC  C01C  F016         	movff	stop@mL,setMotorPWM@m
  6449   0019B0  C01D  F017         	movff	stop@mL+1,setMotorPWM@m+1
  6450   0019B4  EC82  F009         	call	_setMotorPWM	;wreg free
  6451   0019B8                     
  6452                           ;dc_motor.c: 102:     setMotorPWM(mR);
  6453   0019B8  C01E  F016         	movff	stop@mR,setMotorPWM@m
  6454   0019BC  C01F  F017         	movff	stop@mR+1,setMotorPWM@m+1
  6455   0019C0  EC82  F009         	call	_setMotorPWM	;wreg free
  6456   0019C4                     
  6457                           ;dc_motor.c: 103:     _delay((unsigned long)((10)*(64000000/4000.0)));
  6458   0019C4  0ED0               	movlw	208
  6459   0019C6  6E20               	movwf	??_stop^0,c
  6460   0019C8  0ECA               	movlw	202
  6461   0019CA                     u4257:
  6462   0019CA  2EE8               	decfsz	wreg,f,c
  6463   0019CC  D7FE               	bra	u4257
  6464   0019CE  2E20               	decfsz	??_stop^0,f,c
  6465   0019D0  D7FC               	bra	u4257
  6466   0019D2  0012               	return		;funcret
  6467   0019D4                     __end_of_stop:
  6468                           	callstack 0
  6469                           
  6470 ;; *************** function _fullSpeedBackwards *****************
  6471 ;; Defined at:
  6472 ;;		line 174 in file "dc_motor.c"
  6473 ;; Parameters:    Size  Location     Type
  6474 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6475 ;;		 -> main@motorL(9), 
  6476 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6477 ;;		 -> main@motorR(9), 
  6478 ;; Auto vars:     Size  Location     Type
  6479 ;;		None
  6480 ;; Return value:  Size  Location     Type
  6481 ;;                  1    wreg      void 
  6482 ;; Registers used:
  6483 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6484 ;; Tracked objects:
  6485 ;;		On entry : 0/0
  6486 ;;		On exit  : 0/0
  6487 ;;		Unchanged: 0/0
  6488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6489 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6491 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6492 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6493 ;;Total ram usage:        6 bytes
  6494 ;; Hardware stack levels used: 1
  6495 ;; Hardware stack levels required when called: 9
  6496 ;; This function calls:
  6497 ;;		_setMotorPWM
  6498 ;; This function is called by:
  6499 ;;		_RedInstructions
  6500 ;;		_GreenInstructions
  6501 ;;		_BlueInstructions
  6502 ;;		_YellowInstructions
  6503 ;;		_PinkInstructions
  6504 ;;		_OrangeInstructions
  6505 ;;		_LightBlueInstructions
  6506 ;; This function uses a non-reentrant model
  6507 ;;
  6508                           
  6509                           	psect	text34
  6510   00182A                     __ptext34:
  6511                           	callstack 0
  6512   00182A                     _fullSpeedBackwards:
  6513                           	callstack 19
  6514   00182A                     
  6515                           ;dc_motor.c: 177:     mL->direction = 0;
  6516   00182A  EE20 F001          	lfsr	2,1
  6517   00182E  501C               	movf	fullSpeedBackwards@mL^0,w,c
  6518   001830  26D9               	addwf	fsr2l,f,c
  6519   001832  501D               	movf	(fullSpeedBackwards@mL+1)^0,w,c
  6520   001834  22DA               	addwfc	fsr2h,f,c
  6521   001836  0E00               	movlw	0
  6522   001838  6EDF               	movwf	indf2,c
  6523                           
  6524                           ;dc_motor.c: 178:     mL->brakemode = 0;
  6525   00183A  EE20 F002          	lfsr	2,2
  6526   00183E  501C               	movf	fullSpeedBackwards@mL^0,w,c
  6527   001840  26D9               	addwf	fsr2l,f,c
  6528   001842  501D               	movf	(fullSpeedBackwards@mL+1)^0,w,c
  6529   001844  22DA               	addwfc	fsr2h,f,c
  6530   001846  0E00               	movlw	0
  6531   001848  6EDF               	movwf	indf2,c
  6532                           
  6533                           ;dc_motor.c: 180:     mR->direction = 0;
  6534   00184A  EE20 F001          	lfsr	2,1
  6535   00184E  501E               	movf	fullSpeedBackwards@mR^0,w,c
  6536   001850  26D9               	addwf	fsr2l,f,c
  6537   001852  501F               	movf	(fullSpeedBackwards@mR+1)^0,w,c
  6538   001854  22DA               	addwfc	fsr2h,f,c
  6539   001856  0E00               	movlw	0
  6540   001858  6EDF               	movwf	indf2,c
  6541                           
  6542                           ;dc_motor.c: 181:     mR->brakemode = 0;
  6543   00185A  EE20 F002          	lfsr	2,2
  6544   00185E  501E               	movf	fullSpeedBackwards@mR^0,w,c
  6545   001860  26D9               	addwf	fsr2l,f,c
  6546   001862  501F               	movf	(fullSpeedBackwards@mR+1)^0,w,c
  6547   001864  22DA               	addwfc	fsr2h,f,c
  6548   001866  0E00               	movlw	0
  6549   001868  6EDF               	movwf	indf2,c
  6550                           
  6551                           ;dc_motor.c: 184:     if(mL->power>50){mL->power=50;}
  6552   00186A  C01C  FFD9         	movff	fullSpeedBackwards@mL,fsr2l
  6553   00186E  C01D  FFDA         	movff	fullSpeedBackwards@mL+1,fsr2h
  6554   001872  50DF               	movf	indf2,w,c
  6555   001874  0A80               	xorlw	128
  6556   001876  0F4D               	addlw	-179
  6557   001878  A0D8               	btfss	status,0,c
  6558   00187A  EF41  F00C         	goto	u1971
  6559   00187E  EF43  F00C         	goto	u1970
  6560   001882                     u1971:
  6561   001882  EF49  F00C         	goto	l2729
  6562   001886                     u1970:
  6563   001886  C01C  FFD9         	movff	fullSpeedBackwards@mL,fsr2l
  6564   00188A  C01D  FFDA         	movff	fullSpeedBackwards@mL+1,fsr2h
  6565   00188E  0E32               	movlw	50
  6566   001890  6EDF               	movwf	indf2,c
  6567   001892                     l2729:
  6568                           
  6569                           ;dc_motor.c: 185:     if(mR->power>50){mR->power=50;}
  6570   001892  C01E  FFD9         	movff	fullSpeedBackwards@mR,fsr2l
  6571   001896  C01F  FFDA         	movff	fullSpeedBackwards@mR+1,fsr2h
  6572   00189A  50DF               	movf	indf2,w,c
  6573   00189C  0A80               	xorlw	128
  6574   00189E  0F4D               	addlw	-179
  6575   0018A0  A0D8               	btfss	status,0,c
  6576   0018A2  EF55  F00C         	goto	u1981
  6577   0018A6  EF57  F00C         	goto	u1980
  6578   0018AA                     u1981:
  6579   0018AA  EF5D  F00C         	goto	l2733
  6580   0018AE                     u1980:
  6581   0018AE  C01E  FFD9         	movff	fullSpeedBackwards@mR,fsr2l
  6582   0018B2  C01F  FFDA         	movff	fullSpeedBackwards@mR+1,fsr2h
  6583   0018B6  0E32               	movlw	50
  6584   0018B8  6EDF               	movwf	indf2,c
  6585   0018BA                     l2733:
  6586                           
  6587                           ;dc_motor.c: 187:     ++mL->power;
  6588   0018BA  C01C  FFD9         	movff	fullSpeedBackwards@mL,fsr2l
  6589   0018BE  C01D  FFDA         	movff	fullSpeedBackwards@mL+1,fsr2h
  6590   0018C2  2ADF               	incf	indf2,f,c
  6591   0018C4                     
  6592                           ;dc_motor.c: 188:     ++mR->power;
  6593   0018C4  C01E  FFD9         	movff	fullSpeedBackwards@mR,fsr2l
  6594   0018C8  C01F  FFDA         	movff	fullSpeedBackwards@mR+1,fsr2h
  6595   0018CC  2ADF               	incf	indf2,f,c
  6596   0018CE                     
  6597                           ;dc_motor.c: 190:     setMotorPWM(mL);
  6598   0018CE  C01C  F016         	movff	fullSpeedBackwards@mL,setMotorPWM@m
  6599   0018D2  C01D  F017         	movff	fullSpeedBackwards@mL+1,setMotorPWM@m+1
  6600   0018D6  EC82  F009         	call	_setMotorPWM	;wreg free
  6601   0018DA                     
  6602                           ;dc_motor.c: 191:     setMotorPWM(mR);
  6603   0018DA  C01E  F016         	movff	fullSpeedBackwards@mR,setMotorPWM@m
  6604   0018DE  C01F  F017         	movff	fullSpeedBackwards@mR+1,setMotorPWM@m+1
  6605   0018E2  EC82  F009         	call	_setMotorPWM	;wreg free
  6606   0018E6                     
  6607                           ;dc_motor.c: 192:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6608   0018E6  0E05               	movlw	5
  6609   0018E8  6E21               	movwf	(??_fullSpeedBackwards+1)^0,c
  6610   0018EA  0E0F               	movlw	15
  6611   0018EC  6E20               	movwf	??_fullSpeedBackwards^0,c
  6612   0018EE  0EF1               	movlw	241
  6613   0018F0                     u4267:
  6614   0018F0  2EE8               	decfsz	wreg,f,c
  6615   0018F2  D7FE               	bra	u4267
  6616   0018F4  2E20               	decfsz	??_fullSpeedBackwards^0,f,c
  6617   0018F6  D7FC               	bra	u4267
  6618   0018F8  2E21               	decfsz	(??_fullSpeedBackwards+1)^0,f,c
  6619   0018FA  D7FA               	bra	u4267
  6620   0018FC  F000               	nop	
  6621   0018FE  0012               	return		;funcret
  6622   001900                     __end_of_fullSpeedBackwards:
  6623                           	callstack 0
  6624                           
  6625 ;; *************** function _setMotorPWM *****************
  6626 ;; Defined at:
  6627 ;;		line 64 in file "dc_motor.c"
  6628 ;; Parameters:    Size  Location     Type
  6629 ;;  m               2   21[COMRAM] PTR struct DC_motor
  6630 ;;		 -> main@motorR(9), main@motorL(9), 
  6631 ;; Auto vars:     Size  Location     Type
  6632 ;;  negDuty         1   26[COMRAM] unsigned char 
  6633 ;;  posDuty         1   25[COMRAM] unsigned char 
  6634 ;; Return value:  Size  Location     Type
  6635 ;;                  1    wreg      void 
  6636 ;; Registers used:
  6637 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6638 ;; Tracked objects:
  6639 ;;		On entry : 0/0
  6640 ;;		On exit  : 0/0
  6641 ;;		Unchanged: 0/0
  6642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6643 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6644 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6645 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6646 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6647 ;;Total ram usage:        6 bytes
  6648 ;; Hardware stack levels used: 1
  6649 ;; Hardware stack levels required when called: 8
  6650 ;; This function calls:
  6651 ;;		___lwdiv
  6652 ;;		___wmul
  6653 ;; This function is called by:
  6654 ;;		_stop
  6655 ;;		_turnLeft
  6656 ;;		_turnRight
  6657 ;;		_fullSpeedAhead
  6658 ;;		_fullSpeedBackwards
  6659 ;; This function uses a non-reentrant model
  6660 ;;
  6661                           
  6662                           	psect	text35
  6663   001304                     __ptext35:
  6664                           	callstack 0
  6665   001304                     _setMotorPWM:
  6666                           	callstack 21
  6667   001304                     
  6668                           ;dc_motor.c: 64: void setMotorPWM(DC_motor *m);dc_motor.c: 65: {;dc_motor.c: 66:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 68:     if(m->brakemode) {
  6669   001304  EE20 F002          	lfsr	2,2
  6670   001308  5016               	movf	setMotorPWM@m^0,w,c
  6671   00130A  26D9               	addwf	fsr2l,f,c
  6672   00130C  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6673   00130E  22DA               	addwfc	fsr2h,f,c
  6674   001310  50DF               	movf	indf2,w,c
  6675   001312  B4D8               	btfsc	status,2,c
  6676   001314  EF8E  F009         	goto	u1851
  6677   001318  EF90  F009         	goto	u1850
  6678   00131C                     u1851:
  6679   00131C  EFC4  F009         	goto	l2625
  6680   001320                     u1850:
  6681   001320                     
  6682                           ;dc_motor.c: 69:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  6683   001320  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  6684   001324  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  6685   001328  50DF               	movf	indf2,w,c
  6686   00132A  6E09               	movwf	___wmul@multiplier^0,c
  6687   00132C  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  6688   00132E  BE09               	btfsc	___wmul@multiplier^0,7,c
  6689   001330  060A               	decf	(___wmul@multiplier+1)^0,f,c
  6690   001332  EE20 F003          	lfsr	2,3
  6691   001336  5016               	movf	setMotorPWM@m^0,w,c
  6692   001338  26D9               	addwf	fsr2l,f,c
  6693   00133A  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6694   00133C  22DA               	addwfc	fsr2h,f,c
  6695   00133E  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  6696   001342  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  6697   001346  ECC5  F011         	call	___wmul	;wreg free
  6698   00134A  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  6699   00134E  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  6700   001352  0E00               	movlw	0
  6701   001354  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  6702   001356  0E64               	movlw	100
  6703   001358  6E11               	movwf	___lwdiv@divisor^0,c
  6704   00135A  EC1D  F00F         	call	___lwdiv	;wreg free
  6705   00135E  EE20 F003          	lfsr	2,3
  6706   001362  5016               	movf	setMotorPWM@m^0,w,c
  6707   001364  26D9               	addwf	fsr2l,f,c
  6708   001366  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6709   001368  22DA               	addwfc	fsr2h,f,c
  6710   00136A  50DF               	movf	indf2,w,c
  6711   00136C  6E18               	movwf	??_setMotorPWM^0,c
  6712   00136E  500F               	movf	?___lwdiv^0,w,c
  6713   001370  5C18               	subwf	??_setMotorPWM^0,w,c
  6714   001372  6E1A               	movwf	setMotorPWM@posDuty^0,c
  6715   001374                     
  6716                           ;dc_motor.c: 70:         negDuty=m->PWMperiod;
  6717   001374  EE20 F003          	lfsr	2,3
  6718   001378  5016               	movf	setMotorPWM@m^0,w,c
  6719   00137A  26D9               	addwf	fsr2l,f,c
  6720   00137C  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6721   00137E  22DA               	addwfc	fsr2h,f,c
  6722   001380  50DF               	movf	indf2,w,c
  6723   001382  6E1B               	movwf	setMotorPWM@negDuty^0,c
  6724                           
  6725                           ;dc_motor.c: 71:     }
  6726   001384  EFE7  F009         	goto	l2629
  6727   001388                     l2625:
  6728                           
  6729                           ;dc_motor.c: 73:         posDuty=0;
  6730   001388  0E00               	movlw	0
  6731   00138A  6E1A               	movwf	setMotorPWM@posDuty^0,c
  6732   00138C                     
  6733                           ;dc_motor.c: 74:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  6734   00138C  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  6735   001390  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  6736   001394  50DF               	movf	indf2,w,c
  6737   001396  6E09               	movwf	___wmul@multiplier^0,c
  6738   001398  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  6739   00139A  BE09               	btfsc	___wmul@multiplier^0,7,c
  6740   00139C  060A               	decf	(___wmul@multiplier+1)^0,f,c
  6741   00139E  EE20 F003          	lfsr	2,3
  6742   0013A2  5016               	movf	setMotorPWM@m^0,w,c
  6743   0013A4  26D9               	addwf	fsr2l,f,c
  6744   0013A6  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6745   0013A8  22DA               	addwfc	fsr2h,f,c
  6746   0013AA  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  6747   0013AE  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  6748   0013B2  ECC5  F011         	call	___wmul	;wreg free
  6749   0013B6  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  6750   0013BA  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  6751   0013BE  0E00               	movlw	0
  6752   0013C0  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  6753   0013C2  0E64               	movlw	100
  6754   0013C4  6E11               	movwf	___lwdiv@divisor^0,c
  6755   0013C6  EC1D  F00F         	call	___lwdiv	;wreg free
  6756   0013CA  500F               	movf	?___lwdiv^0,w,c
  6757   0013CC  6E1B               	movwf	setMotorPWM@negDuty^0,c
  6758   0013CE                     l2629:
  6759                           
  6760                           ;dc_motor.c: 77:     if (m->direction) {
  6761   0013CE  EE20 F001          	lfsr	2,1
  6762   0013D2  5016               	movf	setMotorPWM@m^0,w,c
  6763   0013D4  26D9               	addwf	fsr2l,f,c
  6764   0013D6  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6765   0013D8  22DA               	addwfc	fsr2h,f,c
  6766   0013DA  50DF               	movf	indf2,w,c
  6767   0013DC  B4D8               	btfsc	status,2,c
  6768   0013DE  EFF3  F009         	goto	u1861
  6769   0013E2  EFF5  F009         	goto	u1860
  6770   0013E6                     u1861:
  6771   0013E6  EF17  F00A         	goto	l2633
  6772   0013EA                     u1860:
  6773   0013EA                     
  6774                           ;dc_motor.c: 78:         *(m->posDutyHighByte)=posDuty;
  6775   0013EA  EE20 F005          	lfsr	2,5
  6776   0013EE  5016               	movf	setMotorPWM@m^0,w,c
  6777   0013F0  26D9               	addwf	fsr2l,f,c
  6778   0013F2  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6779   0013F4  22DA               	addwfc	fsr2h,f,c
  6780   0013F6  CFDE F018          	movff	postinc2,??_setMotorPWM
  6781   0013FA  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  6782   0013FE  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  6783   001402  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  6784   001406  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  6785                           
  6786                           ;dc_motor.c: 79:         *(m->negDutyHighByte)=negDuty;
  6787   00140A  EE20 F007          	lfsr	2,7
  6788   00140E  5016               	movf	setMotorPWM@m^0,w,c
  6789   001410  26D9               	addwf	fsr2l,f,c
  6790   001412  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6791   001414  22DA               	addwfc	fsr2h,f,c
  6792   001416  CFDE F018          	movff	postinc2,??_setMotorPWM
  6793   00141A  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  6794   00141E  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  6795   001422  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  6796   001426  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  6797                           
  6798                           ;dc_motor.c: 80:     } else {
  6799   00142A  EF37  F00A         	goto	l188
  6800   00142E                     l2633:
  6801                           
  6802                           ;dc_motor.c: 81:         *(m->posDutyHighByte)=negDuty;
  6803   00142E  EE20 F005          	lfsr	2,5
  6804   001432  5016               	movf	setMotorPWM@m^0,w,c
  6805   001434  26D9               	addwf	fsr2l,f,c
  6806   001436  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6807   001438  22DA               	addwfc	fsr2h,f,c
  6808   00143A  CFDE F018          	movff	postinc2,??_setMotorPWM
  6809   00143E  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  6810   001442  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  6811   001446  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  6812   00144A  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  6813                           
  6814                           ;dc_motor.c: 82:         *(m->negDutyHighByte)=posDuty;
  6815   00144E  EE20 F007          	lfsr	2,7
  6816   001452  5016               	movf	setMotorPWM@m^0,w,c
  6817   001454  26D9               	addwf	fsr2l,f,c
  6818   001456  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6819   001458  22DA               	addwfc	fsr2h,f,c
  6820   00145A  CFDE F018          	movff	postinc2,??_setMotorPWM
  6821   00145E  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  6822   001462  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  6823   001466  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  6824   00146A  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  6825   00146E                     l188:
  6826   00146E  0012               	return		;funcret
  6827   001470                     __end_of_setMotorPWM:
  6828                           	callstack 0
  6829                           
  6830 ;; *************** function ___wmul *****************
  6831 ;; Defined at:
  6832 ;;		line 15 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\Umul16.c"
  6833 ;; Parameters:    Size  Location     Type
  6834 ;;  multiplier      2    8[COMRAM] unsigned int 
  6835 ;;  multiplicand    2   10[COMRAM] unsigned int 
  6836 ;; Auto vars:     Size  Location     Type
  6837 ;;  product         2   12[COMRAM] unsigned int 
  6838 ;; Return value:  Size  Location     Type
  6839 ;;                  2    8[COMRAM] unsigned int 
  6840 ;; Registers used:
  6841 ;;		wreg, status,2, status,0, prodl, prodh
  6842 ;; Tracked objects:
  6843 ;;		On entry : 0/0
  6844 ;;		On exit  : 0/0
  6845 ;;		Unchanged: 0/0
  6846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6847 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6848 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6850 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6851 ;;Total ram usage:        6 bytes
  6852 ;; Hardware stack levels used: 1
  6853 ;; Hardware stack levels required when called: 7
  6854 ;; This function calls:
  6855 ;;		Nothing
  6856 ;; This function is called by:
  6857 ;;		_setMotorPWM
  6858 ;; This function uses a non-reentrant model
  6859 ;;
  6860                           
  6861                           	psect	text36
  6862   00238A                     __ptext36:
  6863                           	callstack 0
  6864   00238A                     ___wmul:
  6865                           	callstack 21
  6866   00238A  5009               	movf	___wmul@multiplier^0,w,c
  6867   00238C  020B               	mulwf	___wmul@multiplicand^0,c
  6868   00238E  CFF3 F00D          	movff	prodl,___wmul@product
  6869   002392  CFF4 F00E          	movff	prodh,___wmul@product+1
  6870   002396  5009               	movf	___wmul@multiplier^0,w,c
  6871   002398  020C               	mulwf	(___wmul@multiplicand+1)^0,c
  6872   00239A  50F3               	movf	243,w,c
  6873   00239C  260E               	addwf	(___wmul@product+1)^0,f,c
  6874   00239E  500A               	movf	(___wmul@multiplier+1)^0,w,c
  6875   0023A0  020B               	mulwf	___wmul@multiplicand^0,c
  6876   0023A2  50F3               	movf	243,w,c
  6877   0023A4  260E               	addwf	(___wmul@product+1)^0,f,c
  6878   0023A6  C00D  F009         	movff	___wmul@product,?___wmul
  6879   0023AA  C00E  F00A         	movff	___wmul@product+1,?___wmul+1
  6880   0023AE  0012               	return		;funcret
  6881   0023B0                     __end_of___wmul:
  6882                           	callstack 0
  6883                           
  6884 ;; *************** function ___lwdiv *****************
  6885 ;; Defined at:
  6886 ;;		line 7 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\lwdiv.c"
  6887 ;; Parameters:    Size  Location     Type
  6888 ;;  dividend        2   14[COMRAM] unsigned int 
  6889 ;;  divisor         2   16[COMRAM] unsigned int 
  6890 ;; Auto vars:     Size  Location     Type
  6891 ;;  quotient        2   18[COMRAM] unsigned int 
  6892 ;;  counter         1   20[COMRAM] unsigned char 
  6893 ;; Return value:  Size  Location     Type
  6894 ;;                  2   14[COMRAM] unsigned int 
  6895 ;; Registers used:
  6896 ;;		wreg, status,2, status,0
  6897 ;; Tracked objects:
  6898 ;;		On entry : 0/0
  6899 ;;		On exit  : 0/0
  6900 ;;		Unchanged: 0/0
  6901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6902 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6903 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6905 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6906 ;;Total ram usage:        7 bytes
  6907 ;; Hardware stack levels used: 1
  6908 ;; Hardware stack levels required when called: 7
  6909 ;; This function calls:
  6910 ;;		Nothing
  6911 ;; This function is called by:
  6912 ;;		_setMotorPWM
  6913 ;; This function uses a non-reentrant model
  6914 ;;
  6915                           
  6916                           	psect	text37
  6917   001E3A                     __ptext37:
  6918                           	callstack 0
  6919   001E3A                     ___lwdiv:
  6920                           	callstack 21
  6921   001E3A  0E00               	movlw	0
  6922   001E3C  6E14               	movwf	(___lwdiv@quotient+1)^0,c
  6923   001E3E  0E00               	movlw	0
  6924   001E40  6E13               	movwf	___lwdiv@quotient^0,c
  6925   001E42  5011               	movf	___lwdiv@divisor^0,w,c
  6926   001E44  1012               	iorwf	(___lwdiv@divisor+1)^0,w,c
  6927   001E46  B4D8               	btfsc	status,2,c
  6928   001E48  EF28  F00F         	goto	u1821
  6929   001E4C  EF2A  F00F         	goto	u1820
  6930   001E50                     u1821:
  6931   001E50  EF52  F00F         	goto	l1137
  6932   001E54                     u1820:
  6933   001E54  0E01               	movlw	1
  6934   001E56  6E15               	movwf	___lwdiv@counter^0,c
  6935   001E58  EF32  F00F         	goto	l2593
  6936   001E5C                     l2591:
  6937   001E5C  90D8               	bcf	status,0,c
  6938   001E5E  3611               	rlcf	___lwdiv@divisor^0,f,c
  6939   001E60  3612               	rlcf	(___lwdiv@divisor+1)^0,f,c
  6940   001E62  2A15               	incf	___lwdiv@counter^0,f,c
  6941   001E64                     l2593:
  6942   001E64  AE12               	btfss	(___lwdiv@divisor+1)^0,7,c
  6943   001E66  EF37  F00F         	goto	u1831
  6944   001E6A  EF39  F00F         	goto	u1830
  6945   001E6E                     u1831:
  6946   001E6E  EF2E  F00F         	goto	l2591
  6947   001E72                     u1830:
  6948   001E72                     l2595:
  6949   001E72  90D8               	bcf	status,0,c
  6950   001E74  3613               	rlcf	___lwdiv@quotient^0,f,c
  6951   001E76  3614               	rlcf	(___lwdiv@quotient+1)^0,f,c
  6952   001E78  5011               	movf	___lwdiv@divisor^0,w,c
  6953   001E7A  5C0F               	subwf	___lwdiv@dividend^0,w,c
  6954   001E7C  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  6955   001E7E  5810               	subwfb	(___lwdiv@dividend+1)^0,w,c
  6956   001E80  A0D8               	btfss	status,0,c
  6957   001E82  EF45  F00F         	goto	u1841
  6958   001E86  EF47  F00F         	goto	u1840
  6959   001E8A                     u1841:
  6960   001E8A  EF4C  F00F         	goto	l2603
  6961   001E8E                     u1840:
  6962   001E8E  5011               	movf	___lwdiv@divisor^0,w,c
  6963   001E90  5E0F               	subwf	___lwdiv@dividend^0,f,c
  6964   001E92  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  6965   001E94  5A10               	subwfb	(___lwdiv@dividend+1)^0,f,c
  6966   001E96  8013               	bsf	___lwdiv@quotient^0,0,c
  6967   001E98                     l2603:
  6968   001E98  90D8               	bcf	status,0,c
  6969   001E9A  3212               	rrcf	(___lwdiv@divisor+1)^0,f,c
  6970   001E9C  3211               	rrcf	___lwdiv@divisor^0,f,c
  6971   001E9E  2E15               	decfsz	___lwdiv@counter^0,f,c
  6972   001EA0  EF39  F00F         	goto	l2595
  6973   001EA4                     l1137:
  6974   001EA4  C013  F00F         	movff	___lwdiv@quotient,?___lwdiv
  6975   001EA8  C014  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6976   001EAC  0012               	return		;funcret
  6977   001EAE                     __end_of___lwdiv:
  6978                           	callstack 0
  6979                           
  6980 ;; *************** function _AppendMoves *****************
  6981 ;; Defined at:
  6982 ;;		line 17 in file "Memorization.c"
  6983 ;; Parameters:    Size  Location     Type
  6984 ;;  temp            1    wreg     unsigned char 
  6985 ;;  moves_index     2    8[COMRAM] PTR unsigned char 
  6986 ;;		 -> moves_index(1), 
  6987 ;;  anti_moves_a    2   10[COMRAM] PTR unsigned char 
  6988 ;;		 -> anti_moves_array(40), 
  6989 ;; Auto vars:     Size  Location     Type
  6990 ;;  temp            1   13[COMRAM] unsigned char 
  6991 ;; Return value:  Size  Location     Type
  6992 ;;                  1    wreg      void 
  6993 ;; Registers used:
  6994 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6995 ;; Tracked objects:
  6996 ;;		On entry : 0/0
  6997 ;;		On exit  : 0/0
  6998 ;;		Unchanged: 0/0
  6999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7000 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7001 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7002 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7003 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7004 ;;Total ram usage:        6 bytes
  7005 ;; Hardware stack levels used: 1
  7006 ;; Hardware stack levels required when called: 7
  7007 ;; This function calls:
  7008 ;;		Nothing
  7009 ;; This function is called by:
  7010 ;;		_MoveBuggy
  7011 ;; This function uses a non-reentrant model
  7012 ;;
  7013                           
  7014                           	psect	text38
  7015   0023D6                     __ptext38:
  7016                           	callstack 0
  7017   0023D6                     _AppendMoves:
  7018                           	callstack 22
  7019                           
  7020                           ;incstack = 0
  7021                           ;AppendMoves@temp stored from wreg
  7022   0023D6  6E0E               	movwf	AppendMoves@temp^0,c
  7023   0023D8                     
  7024                           ;Memorization.c: 19:     anti_moves_array[(*moves_index)++] = temp;
  7025   0023D8  C009  FFD9         	movff	AppendMoves@moves_index,fsr2l
  7026   0023DC  C00A  FFDA         	movff	AppendMoves@moves_index+1,fsr2h
  7027   0023E0  CFDF F00D          	movff	indf2,??_AppendMoves
  7028   0023E4  0E01               	movlw	1
  7029   0023E6  26DF               	addwf	indf2,f,c
  7030   0023E8  500D               	movf	??_AppendMoves^0,w,c
  7031   0023EA  240B               	addwf	AppendMoves@anti_moves_array^0,w,c
  7032   0023EC  6ED9               	movwf	fsr2l,c
  7033   0023EE  0E00               	movlw	0
  7034   0023F0  200C               	addwfc	(AppendMoves@anti_moves_array+1)^0,w,c
  7035   0023F2  6EDA               	movwf	fsr2h,c
  7036   0023F4  C00E  FFDF         	movff	AppendMoves@temp,indf2
  7037   0023F8  0012               	return		;funcret
  7038   0023FA                     __end_of_AppendMoves:
  7039                           	callstack 0
  7040                           
  7041 ;; *************** function _LED_init *****************
  7042 ;; Defined at:
  7043 ;;		line 7 in file "LED_Buttons.c"
  7044 ;; Parameters:    Size  Location     Type
  7045 ;;		None
  7046 ;; Auto vars:     Size  Location     Type
  7047 ;;		None
  7048 ;; Return value:  Size  Location     Type
  7049 ;;                  1    wreg      void 
  7050 ;; Registers used:
  7051 ;;		None
  7052 ;; Tracked objects:
  7053 ;;		On entry : 0/0
  7054 ;;		On exit  : 0/0
  7055 ;;		Unchanged: 0/0
  7056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7061 ;;Total ram usage:        0 bytes
  7062 ;; Hardware stack levels used: 1
  7063 ;; Hardware stack levels required when called: 7
  7064 ;; This function calls:
  7065 ;;		Nothing
  7066 ;; This function is called by:
  7067 ;;		_main
  7068 ;; This function uses a non-reentrant model
  7069 ;;
  7070                           
  7071                           	psect	text39
  7072   0024D2                     __ptext39:
  7073                           	callstack 0
  7074   0024D2                     _LED_init:
  7075                           	callstack 23
  7076   0024D2                     
  7077                           ;LED_Buttons.c: 8:     TRISGbits.TRISG1 = 0;
  7078   0024D2  9287               	bcf	135,1,c	;volatile
  7079                           
  7080                           ;LED_Buttons.c: 9:     TRISAbits.TRISA4 = 0;
  7081   0024D4  9881               	bcf	129,4,c	;volatile
  7082                           
  7083                           ;LED_Buttons.c: 10:     TRISFbits.TRISF7 = 0;
  7084   0024D6  9E86               	bcf	134,7,c	;volatile
  7085                           
  7086                           ;LED_Buttons.c: 12:     LATHbits.LATH3 = 0;
  7087   0024D8  9680               	bcf	128,3,c	;volatile
  7088                           
  7089                           ;LED_Buttons.c: 13:     TRISHbits.TRISH3 = 0;
  7090   0024DA  9688               	bcf	136,3,c	;volatile
  7091   0024DC  0012               	return		;funcret
  7092   0024DE                     __end_of_LED_init:
  7093                           	callstack 0
  7094                           
  7095 ;; *************** function _Interrupts_init *****************
  7096 ;; Defined at:
  7097 ;;		line 12 in file "interrupts.c"
  7098 ;; Parameters:    Size  Location     Type
  7099 ;;		None
  7100 ;; Auto vars:     Size  Location     Type
  7101 ;;		None
  7102 ;; Return value:  Size  Location     Type
  7103 ;;                  1    wreg      void 
  7104 ;; Registers used:
  7105 ;;		wreg, status,2, status,0, cstack
  7106 ;; Tracked objects:
  7107 ;;		On entry : 0/0
  7108 ;;		On exit  : 0/0
  7109 ;;		Unchanged: 0/0
  7110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7115 ;;Total ram usage:        0 bytes
  7116 ;; Hardware stack levels used: 1
  7117 ;; Hardware stack levels required when called: 12
  7118 ;; This function calls:
  7119 ;;		_interrupts_clear_colorclick
  7120 ;; This function is called by:
  7121 ;;		_main
  7122 ;; This function uses a non-reentrant model
  7123 ;;
  7124                           
  7125                           	psect	text40
  7126   0023B0                     __ptext40:
  7127                           	callstack 0
  7128   0023B0                     _Interrupts_init:
  7129                           	callstack 18
  7130   0023B0                     
  7131                           ;interrupts.c: 18:     TRISBbits.TRISB1 = 1;
  7132   0023B0  8282               	bsf	130,1,c	;volatile
  7133                           
  7134                           ;interrupts.c: 19:     ANSELBbits.ANSELB1 = 0;
  7135   0023B2  010E               	movlb	14	; () banked
  7136   0023B4  939A               	bcf	154,1,b	;volatile
  7137   0023B6                     
  7138                           ; BSR set to: 14
  7139                           ;interrupts.c: 20:     INT1PPS = 0x09;
  7140   0023B6  0E09               	movlw	9
  7141   0023B8  010D               	movlb	13	; () banked
  7142   0023BA  6FF1               	movwf	241,b	;volatile
  7143   0023BC                     
  7144                           ; BSR set to: 13
  7145                           ;interrupts.c: 21:     PIE0bits.INT1IE = 1;
  7146   0023BC  010E               	movlb	14	; () banked
  7147   0023BE  8329               	bsf	41,1,b	;volatile
  7148   0023C0                     
  7149                           ; BSR set to: 14
  7150                           ;interrupts.c: 22:     IPR0bits.INT1IP = 1;
  7151   0023C0  831F               	bsf	31,1,b	;volatile
  7152   0023C2                     
  7153                           ; BSR set to: 14
  7154                           ;interrupts.c: 23:     INTCONbits.INT1EDG = 0;
  7155   0023C2  92F2               	bcf	242,1,c	;volatile
  7156   0023C4                     
  7157                           ; BSR set to: 14
  7158                           ;interrupts.c: 26:     PIE0bits.TMR0IE=1;
  7159   0023C4  8B29               	bsf	41,5,b	;volatile
  7160   0023C6                     
  7161                           ; BSR set to: 14
  7162                           ;interrupts.c: 27:     IPR0bits.TMR0IP = 0;
  7163   0023C6  9B1F               	bcf	31,5,b	;volatile
  7164   0023C8                     
  7165                           ; BSR set to: 14
  7166                           ;interrupts.c: 30:     PIE4bits.RC4IE=1;
  7167   0023C8  872D               	bsf	45,3,b	;volatile
  7168   0023CA                     
  7169                           ; BSR set to: 14
  7170                           ;interrupts.c: 32:     interrupts_clear_colorclick();
  7171   0023CA  EC4F  F012         	call	_interrupts_clear_colorclick	;wreg free
  7172   0023CE                     
  7173                           ;interrupts.c: 34:     INTCONbits.IPEN = 1;
  7174   0023CE  8AF2               	bsf	242,5,c	;volatile
  7175   0023D0                     
  7176                           ;interrupts.c: 35:     INTCONbits.PEIE = 1;
  7177   0023D0  8CF2               	bsf	242,6,c	;volatile
  7178   0023D2                     
  7179                           ;interrupts.c: 36:     INTCONbits.GIE=1;
  7180   0023D2  8EF2               	bsf	242,7,c	;volatile
  7181   0023D4  0012               	return		;funcret
  7182   0023D6                     __end_of_Interrupts_init:
  7183                           	callstack 0
  7184                           
  7185 ;; *************** function _interrupts_clear_colorclick *****************
  7186 ;; Defined at:
  7187 ;;		line 57 in file "interrupts.c"
  7188 ;; Parameters:    Size  Location     Type
  7189 ;;		None
  7190 ;; Auto vars:     Size  Location     Type
  7191 ;;		None
  7192 ;; Return value:  Size  Location     Type
  7193 ;;                  1    wreg      void 
  7194 ;; Registers used:
  7195 ;;		wreg, status,2, status,0, cstack
  7196 ;; Tracked objects:
  7197 ;;		On entry : 0/0
  7198 ;;		On exit  : 0/0
  7199 ;;		Unchanged: 0/0
  7200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7205 ;;Total ram usage:        0 bytes
  7206 ;; Hardware stack levels used: 1
  7207 ;; Hardware stack levels required when called: 11
  7208 ;; This function calls:
  7209 ;;		_I2C_2_Master_Start
  7210 ;;		_I2C_2_Master_Stop
  7211 ;;		_I2C_2_Master_Write
  7212 ;;		_init_colorclick_interrupts
  7213 ;; This function is called by:
  7214 ;;		_Interrupts_init
  7215 ;; This function uses a non-reentrant model
  7216 ;;
  7217                           
  7218                           	psect	text41
  7219   00249E                     __ptext41:
  7220                           	callstack 0
  7221   00249E                     _interrupts_clear_colorclick:
  7222                           	callstack 18
  7223   00249E                     
  7224                           ;interrupts.c: 59:     I2C_2_Master_Start();
  7225   00249E  EC85  F012         	call	_I2C_2_Master_Start	;wreg free
  7226                           
  7227                           ;interrupts.c: 60:     I2C_2_Master_Write(0x52 | 0x00);
  7228   0024A2  0E52               	movlw	82
  7229   0024A4  EC6F  F012         	call	_I2C_2_Master_Write
  7230                           
  7231                           ;interrupts.c: 61:     I2C_2_Master_Write(0b11100110);
  7232   0024A8  0EE6               	movlw	230
  7233   0024AA  EC6F  F012         	call	_I2C_2_Master_Write
  7234                           
  7235                           ;interrupts.c: 62:     I2C_2_Master_Stop();
  7236   0024AE  EC80  F012         	call	_I2C_2_Master_Stop	;wreg free
  7237                           
  7238                           ;interrupts.c: 64:     init_colorclick_interrupts();
  7239   0024B2  ECDA  F010         	call	_init_colorclick_interrupts	;wreg free
  7240   0024B6  0012               	return		;funcret
  7241   0024B8                     __end_of_interrupts_clear_colorclick:
  7242                           	callstack 0
  7243                           
  7244 ;; *************** function _init_colorclick_interrupts *****************
  7245 ;; Defined at:
  7246 ;;		line 43 in file "interrupts.c"
  7247 ;; Parameters:    Size  Location     Type
  7248 ;;		None
  7249 ;; Auto vars:     Size  Location     Type
  7250 ;;		None
  7251 ;; Return value:  Size  Location     Type
  7252 ;;                  1    wreg      void 
  7253 ;; Registers used:
  7254 ;;		wreg, status,2, status,0, cstack
  7255 ;; Tracked objects:
  7256 ;;		On entry : 0/0
  7257 ;;		On exit  : 0/0
  7258 ;;		Unchanged: 0/0
  7259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7262 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7263 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7264 ;;Total ram usage:        1 bytes
  7265 ;; Hardware stack levels used: 1
  7266 ;; Hardware stack levels required when called: 10
  7267 ;; This function calls:
  7268 ;;		_color_writetoaddr
  7269 ;; This function is called by:
  7270 ;;		_interrupts_clear_colorclick
  7271 ;; This function uses a non-reentrant model
  7272 ;;
  7273                           
  7274                           	psect	text42
  7275   0021B4                     __ptext42:
  7276                           	callstack 0
  7277   0021B4                     _init_colorclick_interrupts:
  7278                           	callstack 18
  7279   0021B4                     
  7280                           ;interrupts.c: 45:     color_writetoaddr(0x00,0b10011);
  7281   0021B4  0E13               	movlw	19
  7282   0021B6  6E0B               	movwf	color_writetoaddr@value^0,c
  7283   0021B8  0E00               	movlw	0
  7284   0021BA  EC1F  F012         	call	_color_writetoaddr
  7285   0021BE                     
  7286                           ;interrupts.c: 46:     _delay((unsigned long)((3)*(64000000/4000.0)));
  7287   0021BE  0E3F               	movlw	63
  7288   0021C0  6E0D               	movwf	??_init_colorclick_interrupts^0,c
  7289   0021C2  0E55               	movlw	85
  7290   0021C4                     u4277:
  7291   0021C4  2EE8               	decfsz	wreg,f,c
  7292   0021C6  D7FE               	bra	u4277
  7293   0021C8  2E0D               	decfsz	??_init_colorclick_interrupts^0,f,c
  7294   0021CA  D7FC               	bra	u4277
  7295   0021CC  F000               	nop	
  7296   0021CE                     
  7297                           ;interrupts.c: 48:     color_writetoaddr(0x0C,0b0100);
  7298   0021CE  0E04               	movlw	4
  7299   0021D0  6E0B               	movwf	color_writetoaddr@value^0,c
  7300   0021D2  0E0C               	movlw	12
  7301   0021D4  EC1F  F012         	call	_color_writetoaddr
  7302   0021D8                     
  7303                           ;interrupts.c: 49:     color_writetoaddr(0x04,(int_threshold_low & 0xFF));
  7304   0021D8  C04F  F00B         	movff	_int_threshold_low,color_writetoaddr@value
  7305   0021DC  0E04               	movlw	4
  7306   0021DE  EC1F  F012         	call	_color_writetoaddr
  7307   0021E2                     
  7308                           ;interrupts.c: 50:     color_writetoaddr(0x05,(int_threshold_low >> 8));
  7309   0021E2  5050               	movf	(_int_threshold_low+1)^0,w,c
  7310   0021E4  6E0B               	movwf	color_writetoaddr@value^0,c
  7311   0021E6  0E05               	movlw	5
  7312   0021E8  EC1F  F012         	call	_color_writetoaddr
  7313   0021EC                     
  7314                           ;interrupts.c: 51:     color_writetoaddr(0x06,(int_threshold_high & 0xFF));
  7315   0021EC  C0FA  F00B         	movff	_int_threshold_high,color_writetoaddr@value
  7316   0021F0  0E06               	movlw	6
  7317   0021F2  EC1F  F012         	call	_color_writetoaddr
  7318   0021F6                     
  7319                           ;interrupts.c: 52:     color_writetoaddr(0x07,(int_threshold_high >> 8));
  7320   0021F6  0100               	movlb	0	; () banked
  7321   0021F8  51FB               	movf	(_int_threshold_high+1)& (0+255),w,b
  7322   0021FA  6E0B               	movwf	color_writetoaddr@value^0,c
  7323   0021FC  0E07               	movlw	7
  7324   0021FE  EC1F  F012         	call	_color_writetoaddr
  7325   002202  0012               	return		;funcret
  7326   002204                     __end_of_init_colorclick_interrupts:
  7327                           	callstack 0
  7328                           
  7329 ;; *************** function _color_writetoaddr *****************
  7330 ;; Defined at:
  7331 ;;		line 22 in file "color.c"
  7332 ;; Parameters:    Size  Location     Type
  7333 ;;  address         1    wreg     unsigned char 
  7334 ;;  value           1   10[COMRAM] unsigned char 
  7335 ;; Auto vars:     Size  Location     Type
  7336 ;;  address         1   11[COMRAM] unsigned char 
  7337 ;; Return value:  Size  Location     Type
  7338 ;;                  1    wreg      void 
  7339 ;; Registers used:
  7340 ;;		wreg, status,2, status,0, cstack
  7341 ;; Tracked objects:
  7342 ;;		On entry : 0/0
  7343 ;;		On exit  : 0/0
  7344 ;;		Unchanged: 0/0
  7345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7346 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7347 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7349 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7350 ;;Total ram usage:        2 bytes
  7351 ;; Hardware stack levels used: 1
  7352 ;; Hardware stack levels required when called: 9
  7353 ;; This function calls:
  7354 ;;		_I2C_2_Master_Start
  7355 ;;		_I2C_2_Master_Stop
  7356 ;;		_I2C_2_Master_Write
  7357 ;; This function is called by:
  7358 ;;		_color_click_init
  7359 ;;		_init_colorclick_interrupts
  7360 ;; This function uses a non-reentrant model
  7361 ;;
  7362                           
  7363                           	psect	text43
  7364   00243E                     __ptext43:
  7365                           	callstack 0
  7366   00243E                     _color_writetoaddr:
  7367                           	callstack 20
  7368                           
  7369                           ;incstack = 0
  7370                           ;color_writetoaddr@address stored from wreg
  7371   00243E  6E0C               	movwf	color_writetoaddr@address^0,c
  7372   002440                     
  7373                           ;color.c: 23:     I2C_2_Master_Start();
  7374   002440  EC85  F012         	call	_I2C_2_Master_Start	;wreg free
  7375                           
  7376                           ;color.c: 24:     I2C_2_Master_Write(0x52 | 0x00);
  7377   002444  0E52               	movlw	82
  7378   002446  EC6F  F012         	call	_I2C_2_Master_Write
  7379                           
  7380                           ;color.c: 25:     I2C_2_Master_Write(0x80 | address);
  7381   00244A  500C               	movf	color_writetoaddr@address^0,w,c
  7382   00244C  0980               	iorlw	128
  7383   00244E  EC6F  F012         	call	_I2C_2_Master_Write
  7384                           
  7385                           ;color.c: 26:     I2C_2_Master_Write(value);
  7386   002452  500B               	movf	color_writetoaddr@value^0,w,c
  7387   002454  EC6F  F012         	call	_I2C_2_Master_Write
  7388                           
  7389                           ;color.c: 27:     I2C_2_Master_Stop();
  7390   002458  EC80  F012         	call	_I2C_2_Master_Stop	;wreg free
  7391   00245C  0012               	return		;funcret
  7392   00245E                     __end_of_color_writetoaddr:
  7393                           	callstack 0
  7394                           
  7395 ;; *************** function _I2C_2_Master_Write *****************
  7396 ;; Defined at:
  7397 ;;		line 45 in file "i2c.c"
  7398 ;; Parameters:    Size  Location     Type
  7399 ;;  data_byte       1    wreg     unsigned char 
  7400 ;; Auto vars:     Size  Location     Type
  7401 ;;  data_byte       1    9[COMRAM] unsigned char 
  7402 ;; Return value:  Size  Location     Type
  7403 ;;                  1    wreg      void 
  7404 ;; Registers used:
  7405 ;;		wreg, status,2, status,0, cstack
  7406 ;; Tracked objects:
  7407 ;;		On entry : 0/0
  7408 ;;		On exit  : 0/0
  7409 ;;		Unchanged: 0/0
  7410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7412 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7414 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7415 ;;Total ram usage:        1 bytes
  7416 ;; Hardware stack levels used: 1
  7417 ;; Hardware stack levels required when called: 8
  7418 ;; This function calls:
  7419 ;;		_I2C_2_Master_Idle
  7420 ;; This function is called by:
  7421 ;;		_color_writetoaddr
  7422 ;;		_color_read_Red
  7423 ;;		_color_read_Green
  7424 ;;		_color_read_Blue
  7425 ;;		_color_read_Clear
  7426 ;;		_interrupts_clear_colorclick
  7427 ;; This function uses a non-reentrant model
  7428 ;;
  7429                           
  7430                           	psect	text44
  7431   0024DE                     __ptext44:
  7432                           	callstack 0
  7433   0024DE                     _I2C_2_Master_Write:
  7434                           	callstack 20
  7435                           
  7436                           ;incstack = 0
  7437                           ;I2C_2_Master_Write@data_byte stored from wreg
  7438   0024DE  6E0A               	movwf	I2C_2_Master_Write@data_byte^0,c
  7439   0024E0                     
  7440                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  7441   0024E0  EC9D  F011         	call	_I2C_2_Master_Idle	;wreg free
  7442   0024E4                     
  7443                           ;i2c.c: 48:   SSP2BUF = data_byte;
  7444   0024E4  C00A  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  7445   0024E8  0012               	return		;funcret
  7446   0024EA                     __end_of_I2C_2_Master_Write:
  7447                           	callstack 0
  7448                           
  7449 ;; *************** function _I2C_2_Master_Stop *****************
  7450 ;; Defined at:
  7451 ;;		line 39 in file "i2c.c"
  7452 ;; Parameters:    Size  Location     Type
  7453 ;;		None
  7454 ;; Auto vars:     Size  Location     Type
  7455 ;;		None
  7456 ;; Return value:  Size  Location     Type
  7457 ;;                  1    wreg      void 
  7458 ;; Registers used:
  7459 ;;		wreg, status,2, status,0, cstack
  7460 ;; Tracked objects:
  7461 ;;		On entry : 0/0
  7462 ;;		On exit  : 0/0
  7463 ;;		Unchanged: 0/0
  7464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7469 ;;Total ram usage:        0 bytes
  7470 ;; Hardware stack levels used: 1
  7471 ;; Hardware stack levels required when called: 8
  7472 ;; This function calls:
  7473 ;;		_I2C_2_Master_Idle
  7474 ;; This function is called by:
  7475 ;;		_color_writetoaddr
  7476 ;;		_color_read_Red
  7477 ;;		_color_read_Green
  7478 ;;		_color_read_Blue
  7479 ;;		_color_read_Clear
  7480 ;;		_interrupts_clear_colorclick
  7481 ;; This function uses a non-reentrant model
  7482 ;;
  7483                           
  7484                           	psect	text45
  7485   002500                     __ptext45:
  7486                           	callstack 0
  7487   002500                     _I2C_2_Master_Stop:
  7488                           	callstack 20
  7489   002500                     
  7490                           ;i2c.c: 41:   I2C_2_Master_Idle();
  7491   002500  EC9D  F011         	call	_I2C_2_Master_Idle	;wreg free
  7492   002504                     
  7493                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  7494   002504  010E               	movlb	14	; () banked
  7495   002506  85DA               	bsf	218,2,b	;volatile
  7496   002508                     
  7497                           ; BSR set to: 14
  7498   002508  0012               	return		;funcret
  7499   00250A                     __end_of_I2C_2_Master_Stop:
  7500                           	callstack 0
  7501                           
  7502 ;; *************** function _I2C_2_Master_Start *****************
  7503 ;; Defined at:
  7504 ;;		line 27 in file "i2c.c"
  7505 ;; Parameters:    Size  Location     Type
  7506 ;;		None
  7507 ;; Auto vars:     Size  Location     Type
  7508 ;;		None
  7509 ;; Return value:  Size  Location     Type
  7510 ;;                  1    wreg      void 
  7511 ;; Registers used:
  7512 ;;		wreg, status,2, status,0, cstack
  7513 ;; Tracked objects:
  7514 ;;		On entry : 0/0
  7515 ;;		On exit  : 0/0
  7516 ;;		Unchanged: 0/0
  7517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7522 ;;Total ram usage:        0 bytes
  7523 ;; Hardware stack levels used: 1
  7524 ;; Hardware stack levels required when called: 8
  7525 ;; This function calls:
  7526 ;;		_I2C_2_Master_Idle
  7527 ;; This function is called by:
  7528 ;;		_color_writetoaddr
  7529 ;;		_color_read_Red
  7530 ;;		_color_read_Green
  7531 ;;		_color_read_Blue
  7532 ;;		_color_read_Clear
  7533 ;;		_interrupts_clear_colorclick
  7534 ;; This function uses a non-reentrant model
  7535 ;;
  7536                           
  7537                           	psect	text46
  7538   00250A                     __ptext46:
  7539                           	callstack 0
  7540   00250A                     _I2C_2_Master_Start:
  7541                           	callstack 20
  7542   00250A                     
  7543                           ;i2c.c: 29:   I2C_2_Master_Idle();
  7544   00250A  EC9D  F011         	call	_I2C_2_Master_Idle	;wreg free
  7545   00250E                     
  7546                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  7547   00250E  010E               	movlb	14	; () banked
  7548   002510  81DA               	bsf	218,0,b	;volatile
  7549   002512                     
  7550                           ; BSR set to: 14
  7551   002512  0012               	return		;funcret
  7552   002514                     __end_of_I2C_2_Master_Start:
  7553                           	callstack 0
  7554                           
  7555 ;; *************** function _I2C_2_Master_Idle *****************
  7556 ;; Defined at:
  7557 ;;		line 22 in file "i2c.c"
  7558 ;; Parameters:    Size  Location     Type
  7559 ;;		None
  7560 ;; Auto vars:     Size  Location     Type
  7561 ;;		None
  7562 ;; Return value:  Size  Location     Type
  7563 ;;                  1    wreg      void 
  7564 ;; Registers used:
  7565 ;;		wreg, status,2, status,0
  7566 ;; Tracked objects:
  7567 ;;		On entry : 0/0
  7568 ;;		On exit  : 0/0
  7569 ;;		Unchanged: 0/0
  7570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7573 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7574 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7575 ;;Total ram usage:        1 bytes
  7576 ;; Hardware stack levels used: 1
  7577 ;; Hardware stack levels required when called: 7
  7578 ;; This function calls:
  7579 ;;		Nothing
  7580 ;; This function is called by:
  7581 ;;		_I2C_2_Master_Start
  7582 ;;		_I2C_2_Master_RepStart
  7583 ;;		_I2C_2_Master_Stop
  7584 ;;		_I2C_2_Master_Write
  7585 ;;		_I2C_2_Master_Read
  7586 ;; This function uses a non-reentrant model
  7587 ;;
  7588                           
  7589                           	psect	text47
  7590   00233A                     __ptext47:
  7591                           	callstack 0
  7592   00233A                     _I2C_2_Master_Idle:
  7593                           	callstack 20
  7594   00233A                     l90:
  7595   00233A  010E               	movlb	14	; () banked
  7596   00233C  B5D8               	btfsc	216,2,b	;volatile
  7597   00233E  EFA3  F011         	goto	u1801
  7598   002342  EFA5  F011         	goto	u1800
  7599   002346                     u1801:
  7600   002346  EF9D  F011         	goto	l90
  7601   00234A                     u1800:
  7602   00234A                     
  7603                           ; BSR set to: 14
  7604   00234A  CEDA F009          	movff	3802,??_I2C_2_Master_Idle	;volatile
  7605   00234E  0E1F               	movlw	31
  7606   002350  1609               	andwf	??_I2C_2_Master_Idle^0,f,c
  7607   002352  A4D8               	btfss	status,2,c
  7608   002354  EFAE  F011         	goto	u1811
  7609   002358  EFB0  F011         	goto	u1810
  7610   00235C                     u1811:
  7611   00235C  EF9D  F011         	goto	l90
  7612   002360                     u1810:
  7613   002360                     
  7614                           ; BSR set to: 14
  7615   002360  0012               	return		;funcret
  7616   002362                     __end_of_I2C_2_Master_Idle:
  7617                           	callstack 0
  7618                           
  7619 ;; *************** function _AppendTime *****************
  7620 ;; Defined at:
  7621 ;;		line 23 in file "Memorization.c"
  7622 ;; Parameters:    Size  Location     Type
  7623 ;;  temp            1    wreg     unsigned char 
  7624 ;;  time_index      2    8[COMRAM] PTR unsigned char 
  7625 ;;		 -> time_index(1), 
  7626 ;;  time_array      2   10[COMRAM] PTR unsigned char 
  7627 ;;		 -> time_array(40), 
  7628 ;; Auto vars:     Size  Location     Type
  7629 ;;  temp            1   13[COMRAM] unsigned char 
  7630 ;; Return value:  Size  Location     Type
  7631 ;;                  1    wreg      void 
  7632 ;; Registers used:
  7633 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7634 ;; Tracked objects:
  7635 ;;		On entry : 0/0
  7636 ;;		On exit  : 0/0
  7637 ;;		Unchanged: 0/0
  7638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7639 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7640 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7641 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7642 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7643 ;;Total ram usage:        6 bytes
  7644 ;; Hardware stack levels used: 1
  7645 ;; Hardware stack levels required when called: 7
  7646 ;; This function calls:
  7647 ;;		Nothing
  7648 ;; This function is called by:
  7649 ;;		_main
  7650 ;; This function uses a non-reentrant model
  7651 ;;
  7652                           
  7653                           	psect	text48
  7654   0023FA                     __ptext48:
  7655                           	callstack 0
  7656   0023FA                     _AppendTime:
  7657                           	callstack 23
  7658                           
  7659                           ; BSR set to: 14
  7660                           ;incstack = 0
  7661                           ;AppendTime@temp stored from wreg
  7662   0023FA  6E0E               	movwf	AppendTime@temp^0,c
  7663   0023FC                     
  7664                           ;Memorization.c: 25:     time_array[(*time_index)++] = temp;
  7665   0023FC  C009  FFD9         	movff	AppendTime@time_index,fsr2l
  7666   002400  C00A  FFDA         	movff	AppendTime@time_index+1,fsr2h
  7667   002404  CFDF F00D          	movff	indf2,??_AppendTime
  7668   002408  0E01               	movlw	1
  7669   00240A  26DF               	addwf	indf2,f,c
  7670   00240C  500D               	movf	??_AppendTime^0,w,c
  7671   00240E  240B               	addwf	AppendTime@time_array^0,w,c
  7672   002410  6ED9               	movwf	fsr2l,c
  7673   002412  0E00               	movlw	0
  7674   002414  200C               	addwfc	(AppendTime@time_array+1)^0,w,c
  7675   002416  6EDA               	movwf	fsr2h,c
  7676   002418  C00E  FFDF         	movff	AppendTime@temp,indf2
  7677   00241C  0012               	return		;funcret
  7678   00241E                     __end_of_AppendTime:
  7679                           	callstack 0
  7680                           
  7681 ;; *************** function _LowISR *****************
  7682 ;; Defined at:
  7683 ;;		line 74 in file "interrupts.c"
  7684 ;; Parameters:    Size  Location     Type
  7685 ;;		None
  7686 ;; Auto vars:     Size  Location     Type
  7687 ;;		None
  7688 ;; Return value:  Size  Location     Type
  7689 ;;                  1    wreg      void 
  7690 ;; Registers used:
  7691 ;;		wreg, status,2
  7692 ;; Tracked objects:
  7693 ;;		On entry : 0/0
  7694 ;;		On exit  : 0/0
  7695 ;;		Unchanged: 0/0
  7696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7699 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7700 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7701 ;;Total ram usage:        3 bytes
  7702 ;; Hardware stack levels used: 1
  7703 ;; Hardware stack levels required when called: 6
  7704 ;; This function calls:
  7705 ;;		Nothing
  7706 ;; This function is called by:
  7707 ;;		Interrupt level 1
  7708 ;; This function uses a non-reentrant model
  7709 ;;
  7710                           
  7711                           	psect	intcodelo
  7712   000018                     __pintcodelo:
  7713                           	callstack 0
  7714   000018                     _LowISR:
  7715                           	callstack 18
  7716                           
  7717                           ;incstack = 0
  7718   000018  8057               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  7719   00001A  CFD8 F006          	movff	status,??_LowISR
  7720   00001E  CFE8 F007          	movff	wreg,??_LowISR+1
  7721   000022  CFE0 F008          	movff	bsr,??_LowISR+2
  7722   000026                     
  7723                           ;interrupts.c: 77:     if(PIR0bits.TMR0IF){
  7724   000026  010E               	movlb	14	; () banked
  7725   000028  AB33               	btfss	51,5,b	;volatile
  7726   00002A  EF19  F000         	goto	i1u341_21
  7727   00002E  EF1B  F000         	goto	i1u341_20
  7728   000032                     i1u341_21:
  7729   000032  EF24  F000         	goto	i1l323
  7730   000036                     i1u341_20:
  7731   000036                     
  7732                           ; BSR set to: 14
  7733                           ;interrupts.c: 78:         TMR0H = 0b11000010;
  7734   000036  0EC2               	movlw	194
  7735   000038  6ED4               	movwf	212,c	;volatile
  7736                           
  7737                           ;interrupts.c: 79:         TMR0L = 0b11110110;
  7738   00003A  0EF6               	movlw	246
  7739   00003C  6ED3               	movwf	211,c	;volatile
  7740                           
  7741                           ;interrupts.c: 80:         tmr_ovf = 1;
  7742   00003E  0E01               	movlw	1
  7743   000040  0100               	movlb	0	; () banked
  7744   000042  6F74               	movwf	_tmr_ovf& (0+255),b
  7745   000044                     
  7746                           ; BSR set to: 0
  7747                           ;interrupts.c: 81:         PIR0bits.TMR0IF=0;
  7748   000044  010E               	movlb	14	; () banked
  7749   000046  9B33               	bcf	51,5,b	;volatile
  7750   000048                     i1l323:
  7751                           
  7752                           ; BSR set to: 14
  7753   000048  C008  FFE0         	movff	??_LowISR+2,bsr
  7754   00004C  C007  FFE8         	movff	??_LowISR+1,wreg
  7755   000050  C006  FFD8         	movff	??_LowISR,status
  7756   000054  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  7757   000056  0010               	retfie	
  7758   000058                     __end_of_LowISR:
  7759                           	callstack 0
  7760                           
  7761 ;; *************** function _HighISR *****************
  7762 ;; Defined at:
  7763 ;;		line 88 in file "interrupts.c"
  7764 ;; Parameters:    Size  Location     Type
  7765 ;;		None
  7766 ;; Auto vars:     Size  Location     Type
  7767 ;;		None
  7768 ;; Return value:  Size  Location     Type
  7769 ;;                  1    wreg      void 
  7770 ;; Registers used:
  7771 ;;		wreg, status,2, status,0, cstack
  7772 ;; Tracked objects:
  7773 ;;		On entry : 0/0
  7774 ;;		On exit  : 0/0
  7775 ;;		Unchanged: 0/0
  7776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7781 ;;Total ram usage:        0 bytes
  7782 ;; Hardware stack levels used: 1
  7783 ;; Hardware stack levels required when called: 5
  7784 ;; This function calls:
  7785 ;;		i2_interrupts_clear_colorclick
  7786 ;; This function is called by:
  7787 ;;		Interrupt level 2
  7788 ;; This function uses a non-reentrant model
  7789 ;;
  7790                           
  7791                           	psect	intcode
  7792   000008                     __pintcode:
  7793                           	callstack 0
  7794   000008                     _HighISR:
  7795                           	callstack 18
  7796                           
  7797                           ; BSR set to: 14
  7798                           ;incstack = 0
  7799   000008  8257               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7800   00000A  EF2F  F012         	goto	int_func
  7801                           
  7802                           	psect	intcode_body
  7803   00245E                     __pintcode_body:
  7804                           	callstack 18
  7805   00245E                     int_func:
  7806                           	callstack 18
  7807   00245E                     
  7808                           ;interrupts.c: 115:     if(PIR0bits.INT1IF){
  7809   00245E  010E               	movlb	14	; () banked
  7810   002460  A333               	btfss	51,1,b	;volatile
  7811   002462  EF35  F012         	goto	i2u342_41
  7812   002466  EF37  F012         	goto	i2u342_40
  7813   00246A                     i2u342_41:
  7814   00246A  EF3D  F012         	goto	i2l331
  7815   00246E                     i2u342_40:
  7816   00246E                     
  7817                           ; BSR set to: 14
  7818                           ;interrupts.c: 116:         color_flag = 1;
  7819   00246E  0E01               	movlw	1
  7820   002470  6E55               	movwf	_color_flag^0,c
  7821   002472                     
  7822                           ; BSR set to: 14
  7823                           ;interrupts.c: 118:         interrupts_clear_colorclick();
  7824   002472  EC5C  F012         	call	i2_interrupts_clear_colorclick	;wreg free
  7825   002476                     
  7826                           ;interrupts.c: 119:         PIR0bits.INT1IF = 0;
  7827   002476  010E               	movlb	14	; () banked
  7828   002478  9333               	bcf	51,1,b	;volatile
  7829   00247A                     i2l331:
  7830                           
  7831                           ; BSR set to: 14
  7832   00247A  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7833   00247C  0011               	retfie		f
  7834   00247E                     __end_of_HighISR:
  7835                           	callstack 0
  7836                           
  7837 ;; *************** function i2_interrupts_clear_colorclick *****************
  7838 ;; Defined at:
  7839 ;;		line 57 in file "interrupts.c"
  7840 ;; Parameters:    Size  Location     Type
  7841 ;;		None
  7842 ;; Auto vars:     Size  Location     Type
  7843 ;;		None
  7844 ;; Return value:  Size  Location     Type
  7845 ;;                  1    wreg      void 
  7846 ;; Registers used:
  7847 ;;		wreg, status,2, status,0, cstack
  7848 ;; Tracked objects:
  7849 ;;		On entry : 0/0
  7850 ;;		On exit  : 0/0
  7851 ;;		Unchanged: 0/0
  7852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7857 ;;Total ram usage:        0 bytes
  7858 ;; Hardware stack levels used: 1
  7859 ;; Hardware stack levels required when called: 4
  7860 ;; This function calls:
  7861 ;;		i2_I2C_2_Master_Start
  7862 ;;		i2_I2C_2_Master_Stop
  7863 ;;		i2_I2C_2_Master_Write
  7864 ;;		i2_init_colorclick_interrupts
  7865 ;; This function is called by:
  7866 ;;		_HighISR
  7867 ;; This function uses a non-reentrant model
  7868 ;;
  7869                           
  7870                           	psect	text51
  7871   0024B8                     __ptext51:
  7872                           	callstack 0
  7873   0024B8                     i2_interrupts_clear_colorclick:
  7874                           	callstack 18
  7875   0024B8                     
  7876                           ;interrupts.c: 59:     I2C_2_Master_Start();
  7877   0024B8  EC8F  F012         	call	i2_I2C_2_Master_Start	;wreg free
  7878                           
  7879                           ;interrupts.c: 60:     I2C_2_Master_Write(0x52 | 0x00);
  7880   0024BC  0E52               	movlw	82
  7881   0024BE  EC75  F012         	call	i2_I2C_2_Master_Write
  7882                           
  7883                           ;interrupts.c: 61:     I2C_2_Master_Write(0b11100110);
  7884   0024C2  0EE6               	movlw	230
  7885   0024C4  EC75  F012         	call	i2_I2C_2_Master_Write
  7886                           
  7887                           ;interrupts.c: 62:     I2C_2_Master_Stop();
  7888   0024C8  EC8A  F012         	call	i2_I2C_2_Master_Stop	;wreg free
  7889                           
  7890                           ;interrupts.c: 64:     init_colorclick_interrupts();
  7891   0024CC  EC02  F011         	call	i2_init_colorclick_interrupts	;wreg free
  7892   0024D0  0012               	return		;funcret
  7893   0024D2                     __end_ofi2_interrupts_clear_colorclick:
  7894                           	callstack 0
  7895                           
  7896 ;; *************** function i2_init_colorclick_interrupts *****************
  7897 ;; Defined at:
  7898 ;;		line 43 in file "interrupts.c"
  7899 ;; Parameters:    Size  Location     Type
  7900 ;;		None
  7901 ;; Auto vars:     Size  Location     Type
  7902 ;;		None
  7903 ;; Return value:  Size  Location     Type
  7904 ;;                  1    wreg      void 
  7905 ;; Registers used:
  7906 ;;		wreg, status,2, status,0, cstack
  7907 ;; Tracked objects:
  7908 ;;		On entry : 0/0
  7909 ;;		On exit  : 0/0
  7910 ;;		Unchanged: 0/0
  7911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7914 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7915 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7916 ;;Total ram usage:        1 bytes
  7917 ;; Hardware stack levels used: 1
  7918 ;; Hardware stack levels required when called: 3
  7919 ;; This function calls:
  7920 ;;		i2_color_writetoaddr
  7921 ;; This function is called by:
  7922 ;;		i2_interrupts_clear_colorclick
  7923 ;; This function uses a non-reentrant model
  7924 ;;
  7925                           
  7926                           	psect	text52
  7927   002204                     __ptext52:
  7928                           	callstack 0
  7929   002204                     i2_init_colorclick_interrupts:
  7930                           	callstack 18
  7931   002204                     
  7932                           ;interrupts.c: 45:     color_writetoaddr(0x00,0b10011);
  7933   002204  0E13               	movlw	19
  7934   002206  6E03               	movwf	i2color_writetoaddr@value^0,c
  7935   002208  0E00               	movlw	0
  7936   00220A  EC3F  F012         	call	i2_color_writetoaddr
  7937   00220E                     
  7938                           ;interrupts.c: 46:     _delay((unsigned long)((3)*(64000000/4000.0)));
  7939   00220E  0E3F               	movlw	63
  7940   002210  6E05               	movwf	??i2_init_colorclick_interrupts^0,c
  7941   002212  0E55               	movlw	85
  7942   002214                     i2u428_47:
  7943   002214  2EE8               	decfsz	wreg,f,c
  7944   002216  D7FE               	bra	i2u428_47
  7945   002218  2E05               	decfsz	??i2_init_colorclick_interrupts^0,f,c
  7946   00221A  D7FC               	bra	i2u428_47
  7947   00221C  F000               	nop	
  7948   00221E                     
  7949                           ;interrupts.c: 48:     color_writetoaddr(0x0C,0b0100);
  7950   00221E  0E04               	movlw	4
  7951   002220  6E03               	movwf	i2color_writetoaddr@value^0,c
  7952   002222  0E0C               	movlw	12
  7953   002224  EC3F  F012         	call	i2_color_writetoaddr
  7954   002228                     
  7955                           ;interrupts.c: 49:     color_writetoaddr(0x04,(int_threshold_low & 0xFF));
  7956   002228  C04F  F003         	movff	_int_threshold_low,i2color_writetoaddr@value
  7957   00222C  0E04               	movlw	4
  7958   00222E  EC3F  F012         	call	i2_color_writetoaddr
  7959   002232                     
  7960                           ;interrupts.c: 50:     color_writetoaddr(0x05,(int_threshold_low >> 8));
  7961   002232  5050               	movf	(_int_threshold_low+1)^0,w,c
  7962   002234  6E03               	movwf	i2color_writetoaddr@value^0,c
  7963   002236  0E05               	movlw	5
  7964   002238  EC3F  F012         	call	i2_color_writetoaddr
  7965   00223C                     
  7966                           ;interrupts.c: 51:     color_writetoaddr(0x06,(int_threshold_high & 0xFF));
  7967   00223C  C0FA  F003         	movff	_int_threshold_high,i2color_writetoaddr@value
  7968   002240  0E06               	movlw	6
  7969   002242  EC3F  F012         	call	i2_color_writetoaddr
  7970   002246                     
  7971                           ;interrupts.c: 52:     color_writetoaddr(0x07,(int_threshold_high >> 8));
  7972   002246  0100               	movlb	0	; () banked
  7973   002248  51FB               	movf	(_int_threshold_high+1)& (0+255),w,b
  7974   00224A  6E03               	movwf	i2color_writetoaddr@value^0,c
  7975   00224C  0E07               	movlw	7
  7976   00224E  EC3F  F012         	call	i2_color_writetoaddr
  7977   002252  0012               	return		;funcret
  7978   002254                     __end_ofi2_init_colorclick_interrupts:
  7979                           	callstack 0
  7980                           
  7981 ;; *************** function i2_color_writetoaddr *****************
  7982 ;; Defined at:
  7983 ;;		line 22 in file "color.c"
  7984 ;; Parameters:    Size  Location     Type
  7985 ;;  address         1    wreg     unsigned char 
  7986 ;;  value           1    2[COMRAM] unsigned char 
  7987 ;; Auto vars:     Size  Location     Type
  7988 ;;  address         1    3[COMRAM] unsigned char 
  7989 ;; Return value:  Size  Location     Type
  7990 ;;                  1    wreg      void 
  7991 ;; Registers used:
  7992 ;;		wreg, status,2, status,0, cstack
  7993 ;; Tracked objects:
  7994 ;;		On entry : 0/0
  7995 ;;		On exit  : 0/0
  7996 ;;		Unchanged: 0/0
  7997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7998 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7999 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8001 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8002 ;;Total ram usage:        2 bytes
  8003 ;; Hardware stack levels used: 1
  8004 ;; Hardware stack levels required when called: 2
  8005 ;; This function calls:
  8006 ;;		i2_I2C_2_Master_Start
  8007 ;;		i2_I2C_2_Master_Stop
  8008 ;;		i2_I2C_2_Master_Write
  8009 ;; This function is called by:
  8010 ;;		i2_init_colorclick_interrupts
  8011 ;; This function uses a non-reentrant model
  8012 ;;
  8013                           
  8014                           	psect	text53
  8015   00247E                     __ptext53:
  8016                           	callstack 0
  8017   00247E                     i2_color_writetoaddr:
  8018                           	callstack 18
  8019                           
  8020                           ;incstack = 0
  8021                           ;i2color_writetoaddr@address stored from wreg
  8022   00247E  6E04               	movwf	i2color_writetoaddr@address^0,c
  8023   002480                     
  8024                           ;color.c: 23:     I2C_2_Master_Start();
  8025   002480  EC8F  F012         	call	i2_I2C_2_Master_Start	;wreg free
  8026                           
  8027                           ;color.c: 24:     I2C_2_Master_Write(0x52 | 0x00);
  8028   002484  0E52               	movlw	82
  8029   002486  EC75  F012         	call	i2_I2C_2_Master_Write
  8030                           
  8031                           ;color.c: 25:     I2C_2_Master_Write(0x80 | address);
  8032   00248A  5004               	movf	i2color_writetoaddr@address^0,w,c
  8033   00248C  0980               	iorlw	128
  8034   00248E  EC75  F012         	call	i2_I2C_2_Master_Write
  8035                           
  8036                           ;color.c: 26:     I2C_2_Master_Write(value);
  8037   002492  5003               	movf	i2color_writetoaddr@value^0,w,c
  8038   002494  EC75  F012         	call	i2_I2C_2_Master_Write
  8039                           
  8040                           ;color.c: 27:     I2C_2_Master_Stop();
  8041   002498  EC8A  F012         	call	i2_I2C_2_Master_Stop	;wreg free
  8042   00249C  0012               	return		;funcret
  8043   00249E                     __end_ofi2_color_writetoaddr:
  8044                           	callstack 0
  8045                           
  8046 ;; *************** function i2_I2C_2_Master_Write *****************
  8047 ;; Defined at:
  8048 ;;		line 45 in file "i2c.c"
  8049 ;; Parameters:    Size  Location     Type
  8050 ;;  data_byte       1    wreg     unsigned char 
  8051 ;; Auto vars:     Size  Location     Type
  8052 ;;  data_byte       1    1[COMRAM] unsigned char 
  8053 ;; Return value:  Size  Location     Type
  8054 ;;                  1    wreg      void 
  8055 ;; Registers used:
  8056 ;;		wreg, status,2, status,0, cstack
  8057 ;; Tracked objects:
  8058 ;;		On entry : 0/0
  8059 ;;		On exit  : 0/0
  8060 ;;		Unchanged: 0/0
  8061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8063 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8065 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8066 ;;Total ram usage:        1 bytes
  8067 ;; Hardware stack levels used: 1
  8068 ;; Hardware stack levels required when called: 1
  8069 ;; This function calls:
  8070 ;;		i2_I2C_2_Master_Idle
  8071 ;; This function is called by:
  8072 ;;		i2_color_writetoaddr
  8073 ;;		i2_interrupts_clear_colorclick
  8074 ;; This function uses a non-reentrant model
  8075 ;;
  8076                           
  8077                           	psect	text54
  8078   0024EA                     __ptext54:
  8079                           	callstack 0
  8080   0024EA                     i2_I2C_2_Master_Write:
  8081                           	callstack 18
  8082                           
  8083                           ;incstack = 0
  8084                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  8085   0024EA  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  8086   0024EC                     
  8087                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  8088   0024EC  ECB1  F011         	call	i2_I2C_2_Master_Idle	;wreg free
  8089   0024F0                     
  8090                           ;i2c.c: 48:   SSP2BUF = data_byte;
  8091   0024F0  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  8092   0024F4  0012               	return		;funcret
  8093   0024F6                     __end_ofi2_I2C_2_Master_Write:
  8094                           	callstack 0
  8095                           
  8096 ;; *************** function i2_I2C_2_Master_Stop *****************
  8097 ;; Defined at:
  8098 ;;		line 39 in file "i2c.c"
  8099 ;; Parameters:    Size  Location     Type
  8100 ;;		None
  8101 ;; Auto vars:     Size  Location     Type
  8102 ;;		None
  8103 ;; Return value:  Size  Location     Type
  8104 ;;                  1    wreg      void 
  8105 ;; Registers used:
  8106 ;;		wreg, status,2, status,0, cstack
  8107 ;; Tracked objects:
  8108 ;;		On entry : 0/0
  8109 ;;		On exit  : 0/0
  8110 ;;		Unchanged: 0/0
  8111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8116 ;;Total ram usage:        0 bytes
  8117 ;; Hardware stack levels used: 1
  8118 ;; Hardware stack levels required when called: 1
  8119 ;; This function calls:
  8120 ;;		i2_I2C_2_Master_Idle
  8121 ;; This function is called by:
  8122 ;;		i2_color_writetoaddr
  8123 ;;		i2_interrupts_clear_colorclick
  8124 ;; This function uses a non-reentrant model
  8125 ;;
  8126                           
  8127                           	psect	text55
  8128   002514                     __ptext55:
  8129                           	callstack 0
  8130   002514                     i2_I2C_2_Master_Stop:
  8131                           	callstack 18
  8132   002514                     
  8133                           ;i2c.c: 41:   I2C_2_Master_Idle();
  8134   002514  ECB1  F011         	call	i2_I2C_2_Master_Idle	;wreg free
  8135   002518                     
  8136                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  8137   002518  010E               	movlb	14	; () banked
  8138   00251A  85DA               	bsf	218,2,b	;volatile
  8139   00251C                     
  8140                           ; BSR set to: 14
  8141   00251C  0012               	return		;funcret
  8142   00251E                     __end_ofi2_I2C_2_Master_Stop:
  8143                           	callstack 0
  8144                           
  8145 ;; *************** function i2_I2C_2_Master_Start *****************
  8146 ;; Defined at:
  8147 ;;		line 27 in file "i2c.c"
  8148 ;; Parameters:    Size  Location     Type
  8149 ;;		None
  8150 ;; Auto vars:     Size  Location     Type
  8151 ;;		None
  8152 ;; Return value:  Size  Location     Type
  8153 ;;                  1    wreg      void 
  8154 ;; Registers used:
  8155 ;;		wreg, status,2, status,0, cstack
  8156 ;; Tracked objects:
  8157 ;;		On entry : 0/0
  8158 ;;		On exit  : 0/0
  8159 ;;		Unchanged: 0/0
  8160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8165 ;;Total ram usage:        0 bytes
  8166 ;; Hardware stack levels used: 1
  8167 ;; Hardware stack levels required when called: 1
  8168 ;; This function calls:
  8169 ;;		i2_I2C_2_Master_Idle
  8170 ;; This function is called by:
  8171 ;;		i2_color_writetoaddr
  8172 ;;		i2_interrupts_clear_colorclick
  8173 ;; This function uses a non-reentrant model
  8174 ;;
  8175                           
  8176                           	psect	text56
  8177   00251E                     __ptext56:
  8178                           	callstack 0
  8179   00251E                     i2_I2C_2_Master_Start:
  8180                           	callstack 18
  8181   00251E                     
  8182                           ;i2c.c: 29:   I2C_2_Master_Idle();
  8183   00251E  ECB1  F011         	call	i2_I2C_2_Master_Idle	;wreg free
  8184   002522                     
  8185                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  8186   002522  010E               	movlb	14	; () banked
  8187   002524  81DA               	bsf	218,0,b	;volatile
  8188   002526                     
  8189                           ; BSR set to: 14
  8190   002526  0012               	return		;funcret
  8191   002528                     __end_ofi2_I2C_2_Master_Start:
  8192                           	callstack 0
  8193                           
  8194 ;; *************** function i2_I2C_2_Master_Idle *****************
  8195 ;; Defined at:
  8196 ;;		line 22 in file "i2c.c"
  8197 ;; Parameters:    Size  Location     Type
  8198 ;;		None
  8199 ;; Auto vars:     Size  Location     Type
  8200 ;;		None
  8201 ;; Return value:  Size  Location     Type
  8202 ;;                  1    wreg      void 
  8203 ;; Registers used:
  8204 ;;		wreg, status,2, status,0
  8205 ;; Tracked objects:
  8206 ;;		On entry : 0/0
  8207 ;;		On exit  : 0/0
  8208 ;;		Unchanged: 0/0
  8209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8212 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8213 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8214 ;;Total ram usage:        1 bytes
  8215 ;; Hardware stack levels used: 1
  8216 ;; This function calls:
  8217 ;;		Nothing
  8218 ;; This function is called by:
  8219 ;;		i2_I2C_2_Master_Start
  8220 ;;		i2_I2C_2_Master_Stop
  8221 ;;		i2_I2C_2_Master_Write
  8222 ;; This function uses a non-reentrant model
  8223 ;;
  8224                           
  8225                           	psect	text57
  8226   002362                     __ptext57:
  8227                           	callstack 0
  8228   002362                     i2_I2C_2_Master_Idle:
  8229                           	callstack 18
  8230   002362                     i2l90:
  8231   002362  010E               	movlb	14	; () banked
  8232   002364  B5D8               	btfsc	216,2,b	;volatile
  8233   002366  EFB7  F011         	goto	i2u187_41
  8234   00236A  EFB9  F011         	goto	i2u187_40
  8235   00236E                     i2u187_41:
  8236   00236E  EFB1  F011         	goto	i2l90
  8237   002372                     i2u187_40:
  8238   002372                     
  8239                           ; BSR set to: 14
  8240   002372  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  8241   002376  0E1F               	movlw	31
  8242   002378  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  8243   00237A  A4D8               	btfss	status,2,c
  8244   00237C  EFC2  F011         	goto	i2u188_41
  8245   002380  EFC4  F011         	goto	i2u188_40
  8246   002384                     i2u188_41:
  8247   002384  EFB1  F011         	goto	i2l90
  8248   002388                     i2u188_40:
  8249   002388                     
  8250                           ; BSR set to: 14
  8251   002388  0012               	return		;funcret
  8252   00238A                     __end_ofi2_I2C_2_Master_Idle:
  8253                           	callstack 0
  8254   000000                     
  8255                           	psect	rparam
  8256   000000                     
  8257                           	psect	temp
  8258   000057                     btemp:
  8259                           	callstack 0
  8260   000057                     	ds	1
  8261   000000                     int$flags	set	btemp
  8262   000000                     wtemp8	set	btemp+1
  8263   000000                     ttemp5	set	btemp+1
  8264   000000                     ttemp6	set	btemp+4
  8265   000000                     ttemp7	set	btemp+8
  8266                           
  8267                           	psect	idloc
  8268                           
  8269                           ;Config register IDLOC0 @ 0x200000
  8270                           ;	unspecified, using default values
  8271   200000                     	org	2097152
  8272   200000  0FFF               	dw	4095
  8273                           
  8274                           ;Config register IDLOC1 @ 0x200002
  8275                           ;	unspecified, using default values
  8276   200002                     	org	2097154
  8277   200002  0FFF               	dw	4095
  8278                           
  8279                           ;Config register IDLOC2 @ 0x200004
  8280                           ;	unspecified, using default values
  8281   200004                     	org	2097156
  8282   200004  0FFF               	dw	4095
  8283                           
  8284                           ;Config register IDLOC3 @ 0x200006
  8285                           ;	unspecified, using default values
  8286   200006                     	org	2097158
  8287   200006  0FFF               	dw	4095
  8288                           
  8289                           ;Config register IDLOC4 @ 0x200008
  8290                           ;	unspecified, using default values
  8291   200008                     	org	2097160
  8292   200008  0FFF               	dw	4095
  8293                           
  8294                           ;Config register IDLOC5 @ 0x20000A
  8295                           ;	unspecified, using default values
  8296   20000A                     	org	2097162
  8297   20000A  0FFF               	dw	4095
  8298                           
  8299                           ;Config register IDLOC6 @ 0x20000C
  8300                           ;	unspecified, using default values
  8301   20000C                     	org	2097164
  8302   20000C  0FFF               	dw	4095
  8303                           
  8304                           ;Config register IDLOC7 @ 0x20000E
  8305                           ;	unspecified, using default values
  8306   20000E                     	org	2097166
  8307   20000E  0FFF               	dw	4095
  8308                           
  8309                           	psect	config
  8310                           
  8311                           ;Config register CONFIG1L @ 0x300000
  8312                           ;	External Oscillator mode Selection bits
  8313                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  8314                           ;	Power-up default value for COSC bits
  8315                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  8316   300000                     	org	3145728
  8317   300000  AA                 	db	170
  8318                           
  8319                           ;Config register CONFIG1H @ 0x300001
  8320                           ;	unspecified, using default values
  8321                           ;	Clock Out Enable bit
  8322                           ;	CLKOUTEN = 0x1, unprogrammed default
  8323                           ;	Clock Switch Enable bit
  8324                           ;	CSWEN = 0x1, unprogrammed default
  8325                           ;	Fail-Safe Clock Monitor Enable bit
  8326                           ;	FCMEN = 0x1, unprogrammed default
  8327   300001                     	org	3145729
  8328   300001  FF                 	db	255
  8329                           
  8330                           ;Config register CONFIG2L @ 0x300002
  8331                           ;	unspecified, using default values
  8332                           ;	Master Clear Enable bit
  8333                           ;	MCLRE = 0x1, unprogrammed default
  8334                           ;	Power-up Timer Enable bit
  8335                           ;	PWRTE = 0x1, unprogrammed default
  8336                           ;	Low-power BOR enable bit
  8337                           ;	LPBOREN = 0x1, unprogrammed default
  8338                           ;	Brown-out Reset Enable bits
  8339                           ;	BOREN = 0x3, unprogrammed default
  8340   300002                     	org	3145730
  8341   300002  FF                 	db	255
  8342                           
  8343                           ;Config register CONFIG2H @ 0x300003
  8344                           ;	unspecified, using default values
  8345                           ;	Brown Out Reset Voltage selection bits
  8346                           ;	BORV = 0x3, unprogrammed default
  8347                           ;	ZCD Disable bit
  8348                           ;	ZCD = 0x1, unprogrammed default
  8349                           ;	PPSLOCK bit One-Way Set Enable bit
  8350                           ;	PPS1WAY = 0x1, unprogrammed default
  8351                           ;	Stack Full/Underflow Reset Enable bit
  8352                           ;	STVREN = 0x1, unprogrammed default
  8353                           ;	Debugger Enable bit
  8354                           ;	DEBUG = 0x1, unprogrammed default
  8355                           ;	Extended Instruction Set Enable bit
  8356                           ;	XINST = 0x1, unprogrammed default
  8357   300003                     	org	3145731
  8358   300003  FF                 	db	255
  8359                           
  8360                           ;Config register CONFIG3L @ 0x300004
  8361                           ;	WDT Period Select bits
  8362                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  8363                           ;	WDT operating mode
  8364                           ;	WDTE = OFF, WDT Disabled
  8365   300004                     	org	3145732
  8366   300004  9F                 	db	159
  8367                           
  8368                           ;Config register CONFIG3H @ 0x300005
  8369                           ;	unspecified, using default values
  8370                           ;	WDT Window Select bits
  8371                           ;	WDTCWS = 0x7, unprogrammed default
  8372                           ;	WDT input clock selector
  8373                           ;	WDTCCS = 0x7, unprogrammed default
  8374   300005                     	org	3145733
  8375   300005  FF                 	db	255
  8376                           
  8377                           ;Config register CONFIG4L @ 0x300006
  8378                           ;	unspecified, using default values
  8379                           ;	Write Protection Block 0
  8380                           ;	WRT0 = 0x1, unprogrammed default
  8381                           ;	Write Protection Block 1
  8382                           ;	WRT1 = 0x1, unprogrammed default
  8383                           ;	Write Protection Block 2
  8384                           ;	WRT2 = 0x1, unprogrammed default
  8385                           ;	Write Protection Block 3
  8386                           ;	WRT3 = 0x1, unprogrammed default
  8387                           ;	Write Protection Block 3
  8388                           ;	WRT4 = 0x1, unprogrammed default
  8389                           ;	Write Protection Block 3
  8390                           ;	WRT5 = 0x1, unprogrammed default
  8391                           ;	Write Protection Block 3
  8392                           ;	WRT6 = 0x1, unprogrammed default
  8393                           ;	Write Protection Block 3
  8394                           ;	WRT7 = 0x1, unprogrammed default
  8395   300006                     	org	3145734
  8396   300006  FF                 	db	255
  8397                           
  8398                           ;Config register CONFIG4H @ 0x300007
  8399                           ;	unspecified, using default values
  8400                           ;	Configuration Register Write Protection bit
  8401                           ;	WRTC = 0x1, unprogrammed default
  8402                           ;	Boot Block Write Protection bit
  8403                           ;	WRTB = 0x1, unprogrammed default
  8404                           ;	Data EEPROM Write Protection bit
  8405                           ;	WRTD = 0x1, unprogrammed default
  8406                           ;	Scanner Enable bit
  8407                           ;	SCANE = 0x1, unprogrammed default
  8408                           ;	Low Voltage Programming Enable bit
  8409                           ;	LVP = 0x1, unprogrammed default
  8410   300007                     	org	3145735
  8411   300007  FF                 	db	255
  8412                           
  8413                           ;Config register CONFIG5L @ 0x300008
  8414                           ;	unspecified, using default values
  8415                           ;	UserNVM Program Memory Code Protection bit
  8416                           ;	CP = 0x1, unprogrammed default
  8417                           ;	DataNVM Memory Code Protection bit
  8418                           ;	CPD = 0x1, unprogrammed default
  8419   300008                     	org	3145736
  8420   300008  FF                 	db	255
  8421                           
  8422                           ;Config register CONFIG5H @ 0x300009
  8423                           ;	unspecified, using default values
  8424   300009                     	org	3145737
  8425   300009  FF                 	db	255
  8426                           
  8427                           ;Config register CONFIG6L @ 0x30000A
  8428                           ;	unspecified, using default values
  8429                           ;	Table Read Protection Block 0
  8430                           ;	EBTR0 = 0x1, unprogrammed default
  8431                           ;	Table Read Protection Block 1
  8432                           ;	EBTR1 = 0x1, unprogrammed default
  8433                           ;	Table Read Protection Block 2
  8434                           ;	EBTR2 = 0x1, unprogrammed default
  8435                           ;	Table Read Protection Block 3
  8436                           ;	EBTR3 = 0x1, unprogrammed default
  8437                           ;	Table Read Protection Block 4
  8438                           ;	EBTR4 = 0x1, unprogrammed default
  8439                           ;	Table Read Protection Block 5
  8440                           ;	EBTR5 = 0x1, unprogrammed default
  8441                           ;	Table Read Protection Block 6
  8442                           ;	EBTR6 = 0x1, unprogrammed default
  8443                           ;	Table Read Protection Block 7
  8444                           ;	EBTR7 = 0x1, unprogrammed default
  8445   30000A                     	org	3145738
  8446   30000A  FF                 	db	255
  8447                           
  8448                           ;Config register CONFIG6H @ 0x30000B
  8449                           ;	unspecified, using default values
  8450                           ;	Boot Block Table Read Protection bit
  8451                           ;	EBTRB = 0x1, unprogrammed default
  8452   30000B                     	org	3145739
  8453   30000B  FF                 	db	255
  8454                           tosu	equ	0xFFF
  8455                           tosh	equ	0xFFE
  8456                           tosl	equ	0xFFD
  8457                           stkptr	equ	0xFFC
  8458                           pclatu	equ	0xFFB
  8459                           pclath	equ	0xFFA
  8460                           pcl	equ	0xFF9
  8461                           tblptru	equ	0xFF8
  8462                           tblptrh	equ	0xFF7
  8463                           tblptrl	equ	0xFF6
  8464                           tablat	equ	0xFF5
  8465                           prodh	equ	0xFF4
  8466                           prodl	equ	0xFF3
  8467                           indf0	equ	0xFEF
  8468                           postinc0	equ	0xFEE
  8469                           postdec0	equ	0xFED
  8470                           preinc0	equ	0xFEC
  8471                           plusw0	equ	0xFEB
  8472                           fsr0h	equ	0xFEA
  8473                           fsr0l	equ	0xFE9
  8474                           wreg	equ	0xFE8
  8475                           indf1	equ	0xFE7
  8476                           postinc1	equ	0xFE6
  8477                           postdec1	equ	0xFE5
  8478                           preinc1	equ	0xFE4
  8479                           plusw1	equ	0xFE3
  8480                           fsr1h	equ	0xFE2
  8481                           fsr1l	equ	0xFE1
  8482                           bsr	equ	0xFE0
  8483                           indf2	equ	0xFDF
  8484                           postinc2	equ	0xFDE
  8485                           postdec2	equ	0xFDD
  8486                           preinc2	equ	0xFDC
  8487                           plusw2	equ	0xFDB
  8488                           fsr2h	equ	0xFDA
  8489                           fsr2l	equ	0xFD9
  8490                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         170
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     78      86
    BANK0           160     52     156
    BANK1           256      0      60
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    AppendTime@time_index	PTR unsigned char  size(2) Largest target is 1
		 -> time_index(BANK0[1]), 

    AppendTime@time_array	PTR unsigned char  size(2) Largest target is 40
		 -> time_array(BANK0[40]), 

    AppendMoves@moves_index	PTR unsigned char  size(2) Largest target is 1
		 -> moves_index(COMRAM[1]), 

    AppendMoves@anti_moves_array	PTR unsigned char  size(2) Largest target is 40
		 -> anti_moves_array(BANK0[40]), 

    MoveBuggy@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    MoveBuggy@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    MoveBuggy@color_detected	PTR unsigned char  size(2) Largest target is 3561
		 -> RAM(DATA[3561]), 

    LightBlueInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    LightBlueInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    OrangeInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    OrangeInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    PinkInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    PinkInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    YellowInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    YellowInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    BlueInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    BlueInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    GreenInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    GreenInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    RedInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    RedInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnLeft135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnLeft90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    fullSpeedBackwards@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    fullSpeedBackwards@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    fullSpeedBackwards@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    fullSpeedBackwards@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    fullSpeedBackwards@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    fullSpeedBackwards@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    S1153DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    S1153DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), main@motorL(BANK0[9]), 

    detect_color@tempval	PTR struct RGB_val size(2) Largest target is 8
		 -> main@initial_color(BANK0[8]), 

    Update_RGBC@tempval	PTR struct RGB_val size(2) Largest target is 8
		 -> main@initial_color(BANK0[8]), 


Critical Paths under _main in COMRAM

    _fullSpeedAhead->_setMotorPWM
    _detect_color->___fltol
    ___fltol->___flmul
    ___flmul->___fldiv
    ___fldiv->___xxtofl
    _color_click_init->_color_writetoaddr
    _Update_RGBC->_color_read_Blue
    _Update_RGBC->_color_read_Clear
    _Update_RGBC->_color_read_Green
    _Update_RGBC->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _MoveBuggy->_BlueInstructions
    _MoveBuggy->_GreenInstructions
    _MoveBuggy->_LightBlueInstructions
    _MoveBuggy->_OrangeInstructions
    _MoveBuggy->_PinkInstructions
    _MoveBuggy->_RedInstructions
    _MoveBuggy->_YellowInstructions
    _YellowInstructions->_turnRight90
    _RedInstructions->_turnRight90
    _turnRight90->_turnRight
    _PinkInstructions->_turnLeft90
    _OrangeInstructions->_turnRight135
    _turnRight135->_turnRight
    _turnRight->_setMotorPWM
    _LightBlueInstructions->_turnLeft135
    _turnLeft135->_turnLeft
    _GreenInstructions->_turnLeft90
    _BlueInstructions->_turnLeft90
    _turnLeft90->_turnLeft
    _turnLeft->_setMotorPWM
    _stop->_setMotorPWM
    _fullSpeedBackwards->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _interrupts_clear_colorclick->_init_colorclick_interrupts
    _init_colorclick_interrupts->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    i2_interrupts_clear_colorclick->i2_init_colorclick_interrupts
    i2_init_colorclick_interrupts->i2_color_writetoaddr
    i2_color_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_detect_color
    _detect_color->___fltol

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0  124317
                                             22 BANK0     30    30      0
                         _AppendTime
                    _Interrupts_init
                           _LED_init
                          _MoveBuggy
                        _Timer0_init
                        _Update_RGBC
                         _WhiteLight
                   _color_click_init
                       _detect_color
                     _fullSpeedAhead
                    _initDCmotorsPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _fullSpeedAhead                                       6     2      4    2397
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _detect_color                                        18    16      2    6580
                                              4 BANK0     18    16      2
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     616
                                              8 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     517
                                             72 COMRAM     6     2      4
                                              0 BANK0      4     4      0
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    1886
                                             47 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1541
                                             22 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     750
                                             12 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WhiteLight                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Update_RGBC                                          2     0      2     616
                                             19 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              9 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MoveBuggy                                            6     0      6  107290
                                             45 COMRAM     6     0      6
                        _AppendMoves
                   _BlueInstructions
                  _GreenInstructions
              _LightBlueInstructions
                 _OrangeInstructions
                   _PinkInstructions
                    _RedInstructions
                 _YellowInstructions
 ---------------------------------------------------------------------------------
 (2) _YellowInstructions                                   7     3      4   15050
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                        _turnRight90
 ---------------------------------------------------------------------------------
 (2) _RedInstructions                                      7     3      4   15050
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                        _turnRight90
 ---------------------------------------------------------------------------------
 (3) _turnRight90                                          5     1      4    7297
                                             33 COMRAM     5     1      4
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _PinkInstructions                                     7     3      4   15202
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                         _turnLeft90
 ---------------------------------------------------------------------------------
 (2) _OrangeInstructions                                   7     3      4   14898
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                       _turnRight135
 ---------------------------------------------------------------------------------
 (3) _turnRight135                                         5     1      4    7145
                                             33 COMRAM     5     1      4
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (4) _turnRight                                            6     2      4    2593
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _LightBlueInstructions                                7     3      4   14746
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                        _turnLeft135
 ---------------------------------------------------------------------------------
 (3) _turnLeft135                                          5     1      4    6993
                                             33 COMRAM     5     1      4
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (2) _GreenInstructions                                    7     3      4   15202
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                         _turnLeft90
 ---------------------------------------------------------------------------------
 (2) _BlueInstructions                                     7     3      4   15398
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                         _turnLeft90
 ---------------------------------------------------------------------------------
 (3) _turnLeft90                                           5     1      4    7449
                                             33 COMRAM     5     1      4
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (4) _turnLeft                                             6     2      4    2441
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _stop                                                 5     1      4    4265
                                             27 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _fullSpeedBackwards                                   6     2      4    3157
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    1829
                                             21 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                             14 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _AppendMoves                                          6     2      4     826
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _LED_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0     772
        _interrupts_clear_colorclick
 ---------------------------------------------------------------------------------
 (2) _interrupts_clear_colorclick                          0     0      0     772
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
         _init_colorclick_interrupts
 ---------------------------------------------------------------------------------
 (3) _init_colorclick_interrupts                           1     1      0     750
                                             12 COMRAM     1     1      0
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     750
                                             10 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              9 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _AppendTime                                           6     2      4     218
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _LowISR                                               3     3      0       0
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _HighISR                                              0     0      0     244
      i2_interrupts_clear_colorclick
 ---------------------------------------------------------------------------------
 (9) i2_interrupts_clear_colorclick                        0     0      0     244
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
       i2_init_colorclick_interrupts
 ---------------------------------------------------------------------------------
 (10) i2_init_colorclick_interrupts                        1     1      0     222
                                              4 COMRAM     1     1      0
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (11) i2_color_writetoaddr                                 2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (12) i2_I2C_2_Master_Write                                1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (12) i2_I2C_2_Master_Stop                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (12) i2_I2C_2_Master_Start                                0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (13) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AppendTime
   _Interrupts_init
     _interrupts_clear_colorclick
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
       _init_colorclick_interrupts
         _color_writetoaddr
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
   _LED_init
   _MoveBuggy
     _AppendMoves
     _BlueInstructions
       _fullSpeedBackwards
         _setMotorPWM
           ___lwdiv
             ___wmul (ARG)
           ___wmul
       _stop
         _setMotorPWM
       _turnLeft90
         _stop
         _turnLeft
           _setMotorPWM
     _GreenInstructions
       _fullSpeedBackwards
       _stop
       _turnLeft90
     _LightBlueInstructions
       _fullSpeedBackwards
       _stop
       _turnLeft135
         _stop
         _turnLeft
     _OrangeInstructions
       _fullSpeedBackwards
       _stop
       _turnRight135
         _stop
         _turnRight
           _setMotorPWM
     _PinkInstructions
       _fullSpeedBackwards
       _stop
       _turnLeft90
     _RedInstructions
       _fullSpeedBackwards
       _stop
       _turnRight90
         _stop
         _turnRight
     _YellowInstructions
       _fullSpeedBackwards
       _stop
       _turnRight90
   _Timer0_init
   _Update_RGBC
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _WhiteLight
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
   _detect_color
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       ___fldiv (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _fullSpeedAhead
     _setMotorPWM
   _initDCmotorsPWM
   _stop

 _LowISR (ROOT)

 _HighISR (ROOT)
   i2_interrupts_clear_colorclick
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle
     i2_init_colorclick_interrupts
       i2_color_writetoaddr
         i2_I2C_2_Master_Start
         i2_I2C_2_Master_Stop
         i2_I2C_2_Master_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      64        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      3C       7       23.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     34      9C       5       97.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4E      56       1       91.5%
BITBIGSFRhlllh      52      0       0      41        0.0%
BITBIGSFRhlllll     37      0       0      43        0.0%
BITBIGSFRllh        2D      0       0      46        0.0%
BITBIGSFRlllhll     2A      0       0      54        0.0%
BITBIGSFRllllhl     23      0       0      61        0.0%
BITBIGSFRhhhlll     1D      0       0      38        0.0%
BITBIGSFRhhhhlh     1B      0       0      33        0.0%
BITBIGSFRhhhhll     13      0       0      34        0.0%
BITBIGSFRlllhhh     11      0       0      48        0.0%
BITBIGSFRlllhhh     11      0       0      49        0.0%
BITBIGSFRhhhlhh      E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRlllhhh      C      0       0      47        0.0%
BITBIGSFRlllhll      9      0       0      58        0.0%
BITBIGSFRhlllll      8      0       0      44        0.0%
BITBIGSFRllllhh      6      0       0      60        0.0%
BITBIGSFRlllhll      6      0       0      53        0.0%
BITBIGSFRlllhll      5      0       0      56        0.0%
BITBIGSFRlllhlh      5      0       0      52        0.0%
BITBIGSFRlllhll      3      0       0      55        0.0%
BITBIGSFRlllhll      3      0       0      57        0.0%
BITBIGSFRlllhhl      3      0       0      51        0.0%
BITBIGSFRhllllh      2      0       0      42        0.0%
BITBIGSFRhhhllh      2      0       0      37        0.0%
BITBIGSFRlllll       2      0       0      62        0.0%
BITBIGSFRhhhlhl      1      0       0      36        0.0%
BITBIGSFRlllhhh      1      0       0      50        0.0%
BITBIGSFRhllhh       1      0       0      39        0.0%
BITBIGSFRhllhl       1      0       0      40        0.0%
BITBIGSFRlllhll      1      0       0      59        0.0%
BITBIGSFRlh          1      0       0      45        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12E      63        0.0%
DATA                 0      0     12E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Mar 10 00:13:48 2023

                       _color_read_Red 2074                           ___fldiv@aexp 002F  
                         ___fldiv@bexp 002E                           ___fldiv@sign 0027  
                      _color_read_Blue 2164                                     l21 230E  
                                   l30 2112                                     l24 245C  
                                   l33 21B2                                     l42 0670  
                                   l27 20C2                                     l36 2162  
                                   l60 0676                                     l39 1F0A  
                                   l56 0670                                     l90 233A  
                                   l93 2360                                     l87 2338  
                                   l96 2512                                     l99 24FE  
                                   bsr 000FE0                    ___wmul@multiplicand 000B  
                     _anti_moves_array 0075                       _color_read_Clear 2114  
                     _color_read_Green 20C4                      ??_Interrupts_init 000E  
                                  l102 2508                                    l105 24E8  
                                  l130 252E                                    l203 1664  
                                  l108 22DA                                    l213 18FE  
                                  l222 2072                                    l127 24DC  
                                  l231 1F64                                    l312 2202  
                                  l208 1828                                    l305 23D4  
                                  l315 24B6                                    l181 1B14  
                                  l193 19D2                                    l249 1FBE  
                                  l258 2018                                    l188 146E  
                                  l541 1C20                                    l429 243C  
                                  l198 1752                                    l550 1E38  
                                  l623 1190                                    l617 1190  
                                  l634 23F8                                    l637 241C  
                                  l646 23AE                                    l559 1A84  
                                  l568 1B9A                                    l577 1CA6  
                                  l586 1D2C                                    l595 1DB2  
                                  l943 1576                    i2_color_writetoaddr 247E  
                                  wreg 000FE8                           ___flmul@aexp 0041  
                         ___flmul@bexp 0042                           ___flmul@sign 003C  
                         ___flmul@temp 0047                           ___flmul@prod 0043  
                         ___fltol@exp1 004E                                   l1301 0E92  
                                 l1230 0C9A                                   l1144 1EAC  
                                 l1304 0FEE                                   l1137 1EA4  
                                 l1241 0D58                                   l1233 0C5E  
                                 l3001 0B08                                   l1242 0D46  
                                 l3011 0B34                                   l3003 0B0E  
                                 l1315 0F86                                   l1228 0E3A  
                                 l1260 073C                                   l1308 0F2A  
                                 l3101 0DE0                                   l3021 0B6E  
                                 l3013 0B44                                   l3005 0B14  
                                 l1270 0998                                   l3111 0E2E  
                                 l3103 0DFA                                   l1239 0CE0  
                                 l3023 0B84                                   l3015 0B54  
                                 l3007 0B22                                   l1264 0AA0  
                                 l3113 0E30                                   l3105 0E16  
                                 l3041 0BD8                                   l3025 0B94  
                                 l3033 0BB4                                   l3017 0B56  
                                 l3009 0B24                                   l3201 08FA  
                                 l3121 0678                                   l4001 1268  
                                 l3107 0E1A                                   l3051 0C2A  
                                 l3043 0BF2                                   l3035 0BC4  
                                 l3027 0B9C                                   l3019 0B5E  
                                 l3211 0950                                   l1267 0932  
                                 l3203 0918                                   l3131 06B4  
                                 l3123 0684                                   l4011 12AC  
                                 l4003 1278                                   l3109 0E28  
                                 l3061 0C86                                   l3053 0C3A  
                                 l3045 0C02                                   l3037 0BC4  
                                 l3029 0BA0                                   l1277 0A62  
                                 l3221 09BA                                   l1269 09AA  
                                 l3213 0954                                   l3205 0922  
                                 l3141 06E6                                   l3133 06C4  
                                 l3125 0692                                   l3301 0EA2  
                                 l4013 12BE                                   l4005 128E  
                                 l3071 0CC6                                   l3063 0C88  
                                 l3055 0C4E                                   l3047 0C12  
                                 l3231 0A1C                                   l3223 09C6  
                                 l3215 0962                                   l3207 0930  
                                 l3151 0726                                   l3143 06F4  
                                 l3135 06CA                                   l3127 0694  
                                 l3311 0EE0                                   l3303 0EB8  
                                 l4015 12D6                                   l4007 1294  
                                 l2601 1E96                                   l3081 0D02  
                                 l3073 0CD0                                   l3065 0C98  
                                 l3057 0C5C                                   l3049 0C22  
                                 l3241 0A84                                   l3233 0A30  
                                 l3225 09D4                                   l3217 0990  
                                 l3209 0942                                   l3161 0770  
                                 l3153 072C                                   l3145 06F6  
                                 l3137 06DA                                   l3129 06A4  
                                 l3321 0F68                                   l3313 0F12  
                                 l4017 12D8                                   l4009 12A8  
                                 l2611 24E0                                   l2603 1E98  
                                 l3091 0D74                                   l3083 0D10  
                                 l3075 0CDE                                   l3067 0CAA  
                                 l3059 0C68                                   l3243 0A86  
                                 l3235 0A4A                                   l3227 09FE  
                                 l3171 07C0                                   l3163 077C  
                                 l3155 074C                                   l3147 0706  
                                 l3139 06E0                                   l3331 0FBE  
                                 l3323 0F76                                   l3315 0F14  
                                 l3307 0ECC                                   l4019 12FC  
                                 l2613 24E4                                   l2605 1E9E  
                                 l2621 1320                                   l3093 0D82  
                                 l3085 0D3E                                   l3069 0CC0  
                                 l3077 0CF0                                   l3237 0A66  
                                 l3245 0A8C                                   l3229 0A02  
                                 l3181 0802                                   l3173 07CC  
                                 l3165 0786                                   l3157 075C  
                                 l3149 0716                                   l3333 0FCE  
                                 l3325 0F94                                   l3317 0F20  
                                 l3309 0ED4                                   l3501 1ABC  
                                 l2607 250A                                   l2615 2500  
                                 l2631 13EA                                   l2623 1374  
                                 l2711 229C                                   l3095 0DAC  
                                 l3079 0CFE                                   l3247 0A90  
                                 l3239 0A76                                   l3191 0864  
                                 l3183 080E                                   l3175 07D8  
                                 l3167 079C                                   l3335 0FDC  
                                 l3327 0F96                                   l3319 0F5C  
                                 l3511 1AFA                                   l3503 1AC0  
                                 l2609 250E                                   l2617 2504  
                                 l2801 21BE                                   l2633 142E  
                                 l2625 1388                                   l2641 1900  
                                 l3601 10C8                                   l2721 22D8  
                                 l2713 22A0                                   l3361 22FA  
                                 l3089 0D68                                   l3097 0DB0  
                                 l3193 0870                                   l3185 081E  
                                 l3177 07E6                                   l3169 07A8  
                                 l3337 0FDE                                   l3329 0F9A  
                                 l3521 1754                                   l3513 1AFC  
                                 l3505 1AE4                                   l2811 21F6  
                                 l2803 21CE                                   l2627 138C  
                                 l2619 1304                                   l2731 18AE  
                                 l2651 197E                                   l2643 1938  
                                 l3611 1134                                   l3603 10E0  
                                 l2715 22A8                                   l2707 24F6  
                                 l3363 2304                                   l3355 22DC  
                                 l3099 0DCA                                   l3195 088C  
                                 l3187 0838                                   l3179 07F2  
                                 l3531 17EE                                   l3523 17B0  
                                 l3515 1B06                                   l3507 1AEE  
                                 l2805 21D8                                   l3541 23B6  
                                 l2581 23A6                                   l2629 13CE  
                                 l2741 18E6                                   l2733 18BA  
                                 l2725 182A                                   l2653 19AC  
                                 l2645 1944                                   l2661 16C2  
                                 l2901 1A1C                                   l3613 114E  
                                 l3605 10F4                                   l2717 22B0  
                                 l2709 24FA                                   l3365 1EAE  
                                 l2821 2322                                   l3357 22E0  
                                 l3197 08B6                                   l3189 0848  
                                 l3533 17F8                                   l3525 17BC  
                                 l3517 1B08                                   l3509 1AF0  
                                 l2575 233A                                   l2639 2440  
                                 l2807 21E2                                   l3551 23C6  
                                 l3543 23BC                                   l2591 1E5C  
                                 l2735 18C4                                   l2727 1886  
                                 l2655 19B8                                   l2647 195C  
                                 l2671 1722                                   l2663 16CE  
                                 l2751 204C                                   l2743 201A  
                                 l2903 1A2C                                   l2911 1B1E  
                                 l3615 1162                                   l3607 110C  
                                 l2719 22D6                                   l2823 2324  
                                 l2815 2310                                   l3359 22EA  
                                 l3199 08EC                                   l3295 0E3E  
                                 l3535 1804                                   l3527 17D8  
                                 l3519 1B12                                   l2577 234A  
                                 l2809 21EC                                   l3561 23D2  
                                 l3553 23C8                                   l3545 23C0  
                                 l2593 1E64                                   l2585 1E3A  
                                 l2737 18CE                                   l2729 1892  
                                 l2657 19C4                                   l2649 1968  
                                 l2673 172E                                   l2665 16EA  
                                 l2753 2060                                   l2745 2022  
                                 l2905 1A44                                   l2681 15E0  
                                 l2761 1F28                                   l2921 1B5E  
                                 l2913 1B32                                   l3617 1176  
                                 l3609 1120                                   l2841 21AA  
                                 l2833 20C4                                   l2825 2326  
                                 l2817 231A                                   l3801 14EA  
                                 l3297 0E4E                                   l3537 1810  
                                 l3529 17E4                                   l2851 249E  
                                 l3555 23CA                                   l3547 23C2  
                                 l3539 23B0                                   l2595 1E72  
                                 l2587 1E42                                   l2579 238A  
                                 l2739 18DA                                   l2675 173A  
                                 l2667 16F6                                   l2659 1666  
                                 l2755 2062                                   l2747 2036  
                                 l2907 1A58                                   l2691 1640  
                                 l2683 15FC                                   l2771 1F66  
                                 l2931 1C3E                                   l2763 1F2A  
                                 l2923 1B6E                                   l2915 1B34  
                                 l3571 241E                                   l2835 210A  
                                 l2827 2074                                   l2819 2320  
                                 l3811 1516                                   l3299 0E5C  
                                 l3557 23CE                                   l3549 23C4  
                                 l3493 24D2                                   l2597 1E78  
                                 l2589 1E54                                   l2669 170C  
                                 l2749 2038                                   l2693 164C  
                                 l2685 1608                                   l2677 1578  
                                 l2781 1FAC                                   l2773 1F6E  
                                 l2941 1C7A                                   l2933 1C40  
                                 l2765 1F3E                                   l2757 1F0C  
                                 l2861 1BCE                                   l2853 1B9C  
                                 l2925 1B86                                   l2917 1B48  
                                 l2909 1B16                                   l3581 0FF0  
                                 l3573 2426                                   l2845 2114  
                                 l2829 20BA                                   l3821 1546  
                                 l3901 0500                                   l3559 23D0  
                                 l2599 1E8E                                   l2871 1DB4  
                                 l2791 1FDE                                   l2687 161E  
                                 l2679 15D4                                   l2783 1FAE  
                                 l2775 1F82                                   l2951 1CC6  
                                 l2943 1C92                                   l2935 1C54  
                                 l2927 1C22                                   l2767 1F52  
                                 l2759 1F14                                   l2863 1BE2  
                                 l2855 1BA4                                   l2919 1B5C  
                                 l3591 1058                                   l3583 1002  
                                 l3575 2430                                   l2839 2164  
                                 l2847 215A                                   l3495 2528  
                                 l3823 1556                                   l3807 1502  
                                 l3911 0548                                   l3903 0510  
                                 l3831 0062                                   l2881 1DFA  
                                 l2873 1DBC                                   l2793 1FF2  
                                 l2785 1FC0                                   l2689 1634  
                                 l2777 1F84                                   l2961 1D18  
                                 l2953 1CDA                                   l2945 1CA8  
                                 l2937 1C68                                   l2929 1C2A  
                                 l2769 1F54                                   l2865 1BE4  
                                 l2857 1BB8                                   l3593 1072  
                                 l3585 1016                                   l3577 243A  
                                 l3825 1566                                   l3817 152A  
                                 l3809 150C                                   l3921 0598  
                                 l3913 0558                                   l3905 0520  
                                 l3841 0340                                   l3833 0148  
                                 l3497 1A86                                   l3579 23FC  
                                 l2891 19DC                                   l2883 1DFC  
                                 l2875 1DD0                                   l2795 2006  
                                 l2787 1FC8                                   l2971 1D60  
                                 l2963 1D2E                                   l2779 1F98  
                                 l2955 1CEE                                   l2947 1CB0  
                                 l2939 1C6A                                   l2867 1BF4  
                                 l2859 1BBA                                   l3595 1086  
                                 l3587 1030                                   l3819 1536  
                                 l3931 05E0                                   l3915 0568  
                                 l3923 05A0                                   l3907 0530  
                                 l3851 0390                                   l3843 0350  
                                 l3835 0234                                   l3499 1A96  
                                 l2981 23D8                                   l2893 19F0  
                                 l2885 1E0C                                   l2877 1DD2  
                                 l2797 2008                                   l2789 1FDC  
                                 l2973 1D74                                   l2965 1D36  
                                 l2957 1CF0                                   l2949 1CC4  
                                 l2869 1C0C                                   l3597 109A  
                                 l3589 1044                                   l3941 0628  
                                 l3933 05F0                                   l3925 05B0  
                                 l3917 0578                                   l3909 0538  
                                 l3861 03D8                                   l3845 0360  
                                 l3853 0398                                   l3837 0320  
                                 l3829 005C                                   l2799 21B4  
                                 l2895 19F2                                   l2887 1E24  
                                 l2879 1DE6                                   l2975 1D76  
                                 l2967 1D4A                                   l2959 1D00  
                                 l3599 10B4                                   l2991 0ACE  
                                 l2983 0AA2                                   l3791 149A  
                                 l3943 0638                                   l3935 0600  
                                 l3927 05C0                                   l3919 0588  
                                 l3871 0420                                   l3863 03E8  
                                 l3855 03A8                                   l3847 0370  
                                 l3839 0330                                   l2897 1A06  
                                 l2889 19D4                                   l2977 1D86  
                                 l2969 1D4C                                   l2993 0ADE  
                                 l2985 0AAE                                   l3793 14C6  
                                 l3785 1470                                   l3945 0648  
                                 l3929 05D0                                   l3937 0608  
                                 l3873 0430                                   l3881 0468  
                                 l3865 03F8                                   l3857 03B8  
                                 l3849 0380                                   l3961 11BC  
                                 l2899 1A1A                                   l2979 1D9E  
                                 l2995 0AEE                                   l2987 0ABC  
                                 l3795 14C8                                   l3787 1486  
                                 l3947 0658                                   l3939 0618  
                                 l3891 04B8                                   l3883 0478  
                                 l3875 0440                                   l3859 03C8  
                                 l3867 0400                                   l3971 11E6  
                                 l3963 11D0                                   l3955 1192  
                                 l2997 0AF0                                   l2989 0ABE  
                                 l3797 14D8                                   l3949 0668  
                                 l3893 04C8                                   l3885 0488  
                                 l3877 0450                                   l3869 0410  
                                 l3981 1200                                   l3973 11EE  
                                 l3965 11D6                                   l3957 11B4  
                                 l2999 0AF8                                   l3799 14DC  
                                 l3887 0498                                   l3895 04D0  
                                 l3879 0460                                   l3991 1226  
                                 l3983 1208                                   l3975 11F4  
                                 l3967 11DA                                   l3959 11B8  
                                 l3897 04E0                                   l3889 04A8  
                                 l3993 1238                                   l3985 1210  
                                 l3977 11F8                                   l3969 11DE  
                                 l3899 04F0                                   l3995 123C  
                                 l3987 1216                                   l3979 11FC  
                                 l3997 124C                                   l3989 121A  
                                 l3999 1260                                   u2000 2072  
                                 u2001 206E                                   u2010 1F3A  
                                 u2011 1F36                                   u2100 1E0C  
                                 u2020 1F64                                   u2101 1E08  
                                 u2021 1F60                                   u2110 1A02  
                                 u2030 1F94                                   u2111 19FE  
                                 u2031 1F90                                   u2120 1A2C  
                                 u2200 1D86                                   u2040 1FBE  
                                 u2121 1A28                                   u2201 1D82  
                                 u2041 1FBA                                   u2050 1FEE  
                                 u2130 1B44                                   u2210 0ABC  
                                 u2051 1FEA                                   u2131 1B40  
                                 u2211 0AB8                                   u2060 2018  
                                 u2140 1B6E                                   u2300 0C5C  
                                 u2220 0ACE                                   u2061 2014  
                                 u2141 1B6A                                   u2301 0C58  
                                 u2221 0ACA                                   u2150 1C50  
                                 u2070 1BCA                                   u2310 0C86  
                                 u2230 0ADE                                   u2151 1C4C  
                                 u2071 1BC6                                   u2311 0C82  
                                 u2231 0ADA                                   u2160 1C7A  
                                 u2080 1BF4                                   u2400 0D82  
                                 u2320 0CAA                                   u2240 0B22  
                                 u4000 05E0                           _BAUD4CONbits 000EE9  
                                 u2161 1C76                                   u2081 1BF0  
                                 u2401 0D7E                                   u2321 0CA6  
                                 u2241 0B1E                                   u4001 05DC  
                                 u2090 1DE2                                   u2170 1CD6  
                                 u2410 0DCA                                   u2330 0CC0  
                                 u2250 0B34                                   u4010 05F0  
                                 u2091 1DDE                                   u2171 1CD2  
                                 u2411 0DC6                                   u2331 0CBC  
                                 u2251 0B30                                   u4011 05EC  
                                 u2180 1D00                                   u2420 0DFA  
                                 u2340 0CDE                                   u2260 0B44  
                                 u2500 074C                                   u4020 0600  
                                 u3300 17D8                                   u4100 1278  
                                 u2181 1CFC                                   u2421 0DF6  
                                 u2341 0CDA                                   u2261 0B40  
                                 u2501 0748                                   u4021 05FC  
                                 u3301 17D4                                   u4101 1274  
                                 u2190 1D5C                                   u2430 0E28  
                                 u2350 0CFE                                   u2270 0B84  
                                 u2510 075C                                   u4030 0618  
                                 u4110 12BE                                   u2191 1D58  
                                 u2431 0E24                                   u2351 0CFA  
                                 u2271 0B80                                   u2511 0758  
                                 u4031 0614                                   u4111 12BA  
                                 u1800 234A                                   u3320 1002  
                                 u2360 0D10                                   u2280 0BC4  
                                 u2600 0A1C                                   u2520 08D6  
                                 u2440 0692                                   u4040 0628  
                                 u1801 2346                                   u3321 0FFE  
                                 u2361 0D0C                                   u2281 0BC0  
                                 u2601 0A18                                   u2441 068E  
                                 u4041 0624                                   u1810 2360  
                                 u3330 1044                                   u2370 0D3E  
                                 u2290 0C3A                                   u2610 0A4A  
                                 u2530 0930                                   u2450 06A4  
                                 u4050 0638                                   _T2PR 000FBC  
                                 u1811 235C                                   u3331 1040  
                                 u2371 0D3A                                   u2291 0C36  
                                 u2611 0A46                                   u2531 092C  
                                 u2451 06A0                                   u4051 0634  
                                 u1820 1E54                                   u1900 195C  
                                 u3340 1086                                   u2380 0D54  
                                 u2620 0A84                                   u2540 0950  
                                 u2460 06B4                                   u2700 0E4E  
                                 u4060 0648                                   u1821 1E50  
                                 u1901 1958                                   u3341 1082  
                                 u2381 0D50                                   u2621 0A80  
                                 u2541 094C                                   u2525 08CC  
                                 u2461 06B0                                   u2701 0E4A  
                                 u4061 0644                                   u1830 1E72  
                                 u1910 16C2                                   u3350 10C8  
                                 u2390 0D68                                   u2550 0962  
                                 u2470 06F4                                   u2710 0E5C  
                                 u4070 0658                                   u1831 1E6E  
                                 u1911 16BE                                   u4207 1D90  
                                 u3351 10C4                                   u2391 0D64  
                                 u2551 095E                                   u2471 06F0  
                                 u2711 0E58                                   u4071 0654  
                                 u4127 12CA                                   u1840 1E8E  
                                 u1920 16EA                                   u3360 10F4  
                                 u2560 0990                                   u2480 0706  
                                 u2720 0EB8                                   u4080 0668  
                                 u3600 0330                                   u1841 1E8A  
                                 u1921 16E6                                   u4217 1E16  
                                 u3361 10F0                                   u2561 098C  
                                 u2481 0702                                   u2721 0EB4  
                                 u4081 0664                                   u3601 032C  
                                 u4137 181A                                   u1850 1320  
                                 u1930 15D4                                   u3370 1120  
                                 u2570 09A6                                   u2490 0716  
                                 u3530 1486                                   u2730 0F0E  
                                 u3610 0340                                   u3290 17B0  
                                 u4090 124C                                   u1851 131C  
                                 u4227 1A36                                   u1931 15D0  
                                 u3371 111C                                   u4147 22F0  
                                 u2571 09A2                                   u2491 0712  
                                 u3531 1482                                   u2731 0F0A  
                                 u3611 033C                                   u3291 17AC  
                                 u4091 1248                                   u1860 13EA  
                                 u1940 15FC                                   u3380 1162  
                                 u2580 09BA                                   u3540 14BC  
                                 u2740 0F58                                   u3700 03D8  
                                 u3620 0350                                   u1861 13E6  
                                 u4237 1A62                                   u1941 15F8  
                                 u4157 1B78                                   u3381 115E  
                                 u2581 09B6                                   u2741 0F54  
                                 u3701 03D4                                   u3621 034C  
                                 u1950 22C4                                   u2590 09D4  
                                 u3550 14EA                                   u2750 0F76  
                                 u3710 03E8                                   u3630 0360  
                                 u4247 1744                                   u4167 1BFE  
                                 u1951 22BC                                   u2591 09D0  
                                 u3551 14E6                                   u2751 0F72  
                                 u3711 03E4                                   u3631 035C  
                                 u3560 14FE                                   u2760 0F86  
                                 u3800 0488                                   u3720 03F8  
                                 u3640 0370                                   u4257 19CA  
                                 u4177 1C84                                   u3561 14FA  
                                 u3545 14B0                                   u2761 0F82  
                                 u3801 0484                                   u3721 03F4  
                                 u3641 036C                                   u1970 1886  
                                 u1890 1938                                   u3570 1526  
                                 u2770 0F94                                   u3810 0498  
                                 u3730 0410                                   u3650 0380  
                                 u4267 18F0                                   u1971 1882  
                                 u1891 1934                                   u4187 1D0A  
                                 u3571 1522                                   u2771 0F90  
                                 u3811 0494                                   u3731 040C  
                                 u3651 037C                                   u1980 18AE  
                                 u3580 1546                                   u2780 0FCE  
                                 u3900 0530                                   u3820 04A8  
                                 u3740 0420                                   u3660 0390  
                                 u4277 21C4                                   u1981 18AA  
                                 u4197 1656                                   u3581 1542  
                                 u2781 0FCA                                   u3901 052C  
                                 u3821 04A4                                   u3741 041C  
                                 u3661 038C                                   u1990 2048  
                                 u3590 1556                                   u2790 0FDC  
                                 u3910 0548                                   u3830 04B8  
                                 u3750 0430                                   u3670 03A8  
                                 u1991 2044                                   u3591 1552  
                                 u2791 0FD8                                   u3911 0544  
                                 u3831 04B4                                   u3751 042C  
                                 u3671 03A4                                   u1968 22C6  
                                 u3920 0558                                   u3840 04C8  
                                 u3760 0440                                   u3680 03B8  
                                 u3921 0554                                   u3841 04C4  
                                 u3761 043C                                   u3681 03B4  
                                 u3930 0568                                   u3850 04E0  
                                 u3770 0450                                   u3690 03C8  
                                 u3931 0564                                   u3851 04DC  
                                 u3771 044C                                   u3691 03C4  
                                 u3940 0578                                   u3860 04F0  
                                 u3780 0460                                   u3941 0574  
                                 u3861 04EC                                   u3781 045C  
                                 u3950 0588                                   u3870 0500  
                                 u3790 0478                                   u3951 0584  
                                 u3871 04FC                                   u3791 0474  
                                 i2l24 249C                                   u3960 0598  
                                 u3880 0510                                   u3961 0594  
                                 u3881 050C                                   u3970 05B0  
                                 u3890 0520                                   u3971 05AC  
                                 u3891 051C                                   u3980 05C0  
                                 u3981 05BC                                   u3990 05D0  
                                 u3991 05CC                                   i2l90 2362  
                                 i2l93 2388                                   i2l96 2526  
                                 _main 1192                    __end_of_AppendMoves 23FA  
                   _YellowInstructions 1B16                                   fsr2h 000FDA  
                                 indf2 000FDF                                   fsr2l 000FD9  
                                 btemp 0057                                   _stop 1900  
       ??i2_init_colorclick_interrupts 0005                      main@initial_color 00E0  
                                 prodh 000FF4                                   prodl 000FF3  
                                 start 0058                   ?i2_color_writetoaddr 0003  
                      ___fldiv@new_exp 0028                 __end_of_color_read_Red 20C4  
                      __end_of_HighISR 247E                           ___param_bank 000000  
                          _turnLeft135 1FC0                    ?_YellowInstructions 0027  
                          _turnRight90 1F0C                       __end_of_LED_init 24DE  
                        ___fltol@sign1 004D                             _AppendTime 23FA  
                                ?_main 0001                        __end_of___fldiv 0E3C  
                      __end_of___flmul 0AA2                        __end_of___fltol 1578  
                                ?_stop 001C                        __end_of___lwdiv 1EAE  
                                i1l323 0048                                  i2l102 251C  
                                i2l105 24F4                                  i2l312 2252  
                                i2l315 24D0                                  i2l331 247A  
                                _TMR0H 000FD4                                  _TMR0L 000FD3  
           __end_of_I2C_2_Master_Start 2514                   ??_YellowInstructions 002B  
           __end_of_I2C_2_Master_Write 24EA                       _PinkInstructions 1C22  
                   _int_threshold_high 00FA                                  main@b 00DE  
             __end_of_BlueInstructions 1A86                                  tablat 000FF5  
                                plusw2 000FDB                                  ttemp5 0058  
                                ttemp6 005B                                  ttemp7 005F  
                                status 000FD8                                  wtemp8 0058  
                  detect_color@tempval 00CA                  ??i2_color_writetoaddr 0004  
              __end_of_color_read_Blue 21B4                  _I2C_2_Master_RepStart 24F6  
                 fullSpeedBackwards@mL 001C                   fullSpeedBackwards@mR 001E  
                      ?_color_read_Red 000D                        __initialization 2254  
                         __end_of_main 1304                   __end_of_detect_color 0678  
                         __end_of_stop 19D4                  _LightBlueInstructions 1D2E  
                    ??_RedInstructions 002B    __end_of_interrupts_clear_colorclick 24B8  
       ?i2_interrupts_clear_colorclick 0001            _interrupts_clear_colorclick 249E  
                               ??_main 00DC                                 ??_stop 0020  
                        __activetblptr 000000                           _turnRight135 1F66  
                          _AppendMoves 23D6                           ?_setMotorPWM 0016  
                               _CCPR1H 000FAA                                 _CCPR2H 000FA6  
                               _CCPR3H 000F25                                 _CCPR4H 000F21  
                               _RC0PPS 000E62                                 _RC4REG 000EE3  
                               _RE2PPS 000E74                                 _RD5PPS 000E6F  
                               _RC7PPS 000E69                                 _RE4PPS 000E76  
                               _RD6PPS 000E70                                 i1l3635 0026  
                               i1l3637 0036                                 i1l3639 0044  
                               i2l2701 2518                                 i2l3341 2204  
                               i2l2703 24EC                                 i2l3351 223C  
                               i2l3343 220E                                 i2l2705 24F0  
                               i2l3353 2246                                 i2l3345 221E  
                               i2l2635 2362                                 i2l3347 2228  
                               i2l2637 2372                                 i2l2813 2480  
                               i2l3349 2232                                 i2l3641 245E  
                               i2l3619 24B8                                 i2l3643 246E  
                               i2l3645 2472                                 i2l2695 251E  
                               i2l3647 2476                                 i2l2697 2522  
                               i2l2699 2514                                 _RG6PPS 000E88  
                            ??_HighISR 0006               __end_of_color_click_init 2310  
                               _RX4PPS 000E15                                 _TX4REG 000EE4  
                     __end_of___xxtofl 0FF0                                 _LowISR 0018  
                        ??_Timer0_init 0009                           _CCPTMRS0bits 000FAD  
          AppendMoves@anti_moves_array 000B                                 ___wmul 238A  
                            ??___fldiv 001F                              ??___flmul 0038  
                            ??___fltol 00C6                              ??___lwdiv 0013  
                               clear_0 2272                                 clear_1 227E  
                               clear_2 228A                                 isa$std 000001  
                          ?_AppendTime 0009                             _WhiteLight 2528  
                               tblptrh 000FF7                                 tblptrl 000FF6  
                               tblptru 000FF8                                 stop@mL 001C  
                               stop@mR 001E                      ??_initDCmotorsPWM 000B  
           i2color_writetoaddr@address 0004                       __end_of_turnLeft 1754  
                         ___xxtofl@arg 0013                           ___xxtofl@exp 0012  
                         ___xxtofl@val 0009                          ??_Update_RGBC 0016  
                           __accesstop 0060                __end_of__initialization 2290  
             __end_of_color_read_Clear 2164               __end_of_color_read_Green 2114  
               ?_I2C_2_Master_RepStart 0001                          ___rparam_used 000001  
                            ?_LED_init 0001                             ___fltol@f1 0049  
                     ?_color_read_Blue 000D                      _GreenInstructions 1DB4  
                      _Interrupts_init 23B0                         __pcstackCOMRAM 0001  
               ?_LightBlueInstructions 0027                           __pidataBANK0 2530  
                   ?_GreenInstructions 0027                         AppendTime@temp 000E  
                    detect_color@color 00D8                    __end_of_Timer0_init 243E  
                          MoveBuggy@mL 0030                            MoveBuggy@mR 0032  
                  OrangeInstructions@a 002D                    ??_GreenInstructions 002B  
              MoveBuggy@color_detected 002E           ??_init_colorclick_interrupts 000D  
                    __end_of_MoveBuggy 1192                             __pbssBANK0 0060  
                           __pbssBANK1 0100              __end_of_GreenInstructions 1E3A  
                           ??_LED_init 0009                                ?_LowISR 0001  
                    _color_writetoaddr 243E                           _T2CLKCONbits 000FBF  
                         ?_turnLeft135 0022                    __end_of_Update_RGBC 1F0C  
                   ?_color_writetoaddr 000B                                ?___wmul 0009  
             __end_of_PinkInstructions 1CA8                           ?_turnRight90 0022  
                  ??_color_writetoaddr 000C                                _INT1PPS 000DF1  
                            ?___xxtofl 0009                            ?_WhiteLight 0001  
                              _SP4BRGH 000EE6                                _SP4BRGL 000EE5  
                              _SSP2ADD 000ED6                                _SSP2BUF 000ED5  
                           _color_flag 0055                           _detect_color 005C  
              __end_of_Interrupts_init 23D6                      ?_BlueInstructions 0027  
               color_writetoaddr@value 000B                       ??_color_read_Red 000F  
                              _HighISR 0008              __end_of_color_writetoaddr 245E  
                   ??_BlueInstructions 002B                        _RedInstructions 1B9C  
                   _I2C_2_Master_Start 250A                    i2_I2C_2_Master_Idle 2362  
                   _I2C_2_Master_Write 24DE                                __Hparam 0000  
                  i2_I2C_2_Master_Stop 2514                                __Lparam 0000  
                    color_read_Red@tmp 0012                            _Timer0_init 241E  
                  GreenInstructions@mL 0027                    GreenInstructions@mR 0029  
           __end_of_fullSpeedBackwards 1900                                ___fldiv 0AA2  
                              ___flmul 0678                                ___fltol 1470  
                  ?_I2C_2_Master_Start 0001                           turnLeft135@a 0026  
                              ___lwdiv 1E3A                    ?_I2C_2_Master_Write 0001  
                         turnLeft90@mL 0022                           turnLeft90@mR 0024  
                              __pcinit 2254                                __ramtop 0E00  
                            ?_turnLeft 001C                                __ptext0 1192  
                              __ptext1 1A86                                __ptext2 1754  
                              __ptext3 005C                                __ptext4 0E3C  
                              __ptext5 1470                                __ptext6 0678  
                              __ptext7 0AA2                                __ptext8 22DC  
                              __ptext9 2310                   ?i2_I2C_2_Master_Idle 0001  
 __end_ofi2_init_colorclick_interrupts 2254           i2_init_colorclick_interrupts 2204  
                            _T2CONbits 000FBD                             ??___xxtofl 000D  
                 ?i2_I2C_2_Master_Stop 0001                              _T2HLTbits 000FBE  
                        _RxBufWriteCnt 0054                           ?_AppendMoves 0009  
                              _tmr_ovf 0074                   ??_I2C_2_Master_Start 000A  
                 ??_I2C_2_Master_Write 000A                         __pintcode_body 245E  
                 end_of_initialization 2290            __end_ofi2_color_writetoaddr 249E  
                    RedInstructions@mL 0027                     main@color_detected 00DF  
                    RedInstructions@mR 0029                                int_func 245E  
                          _Update_RGBC 1EAE                      ?_color_click_init 0001  
                         turnRight90@a 0026             __end_of_OrangeInstructions 1D2E  
                   ??_color_click_init 000D                                postdec2 000FDD  
                              postinc0 000FEE                                postinc2 000FDE  
                           _time_array 009D                             _time_index 00C5  
                      _initDCmotorsPWM 1A86                             ??_turnLeft 0020  
                         ??_AppendTime 000D                     setMotorPWM@negDuty 001B  
                ??i2_I2C_2_Master_Idle 0001                      __end_of_turnRight 1666  
                ??i2_I2C_2_Master_Stop 0002                          ___xxtofl@sign 0011  
                  YellowInstructions@a 002D                              _TRISAbits 000F81  
                   setMotorPWM@posDuty 001A                              _TRISBbits 000F82  
                            _TRISCbits 000F83                              _TRISDbits 000F84  
   __end_of_init_colorclick_interrupts 2204          ?i2_init_colorclick_interrupts 0001  
           _init_colorclick_interrupts 21B4                              _TRISEbits 000F85  
                            _TRISFbits 000F86                              _TRISGbits 000F87  
                            _TRISHbits 000F88                            ___fldiv@grs 002A  
                          ___fldiv@rem 0023                     PinkInstructions@mL 0027  
                   PinkInstructions@mR 0029                       fullSpeedAhead@mL 001C  
                     fullSpeedAhead@mR 001E                __end_of_RedInstructions 1C22  
             color_writetoaddr@address 000C                ??_I2C_2_Master_RepStart 000A  
                     ?_Interrupts_init 0001                            ___flmul@grs 003D  
                          _CCP1CONbits 000FAB                      ?_color_read_Clear 000D  
                         _EUSART4RXbuf 0060                           _EUSART4TXbuf 0100  
                          _CCP2CONbits 000FA7                      ?_color_read_Green 000D  
                          _CCP3CONbits 000F26                            _CCP4CONbits 000F22  
                   __end_of_AppendTime 241E                ??_LightBlueInstructions 002B  
                           main@motorL 00E8                             main@motorR 00F1  
                   ??_color_read_Clear 000F                     ??_color_read_Green 000F  
                           _turnLeft90 201A                         __end_of_LowISR 0058  
               AppendMoves@moves_index 0009                         _fullSpeedAhead 1754  
                       __end_of___wmul 23B0                        AppendMoves@temp 000E  
                   detect_color@dist_B 00DB                     detect_color@dist_G 00DA  
                   detect_color@dist_R 00D9                      _int_threshold_low 004F  
                  color_read_Clear@tmp 0012                    start_initialization 2254  
                        _TxBufWriteCnt 0052                   OrangeInstructions@mL 0027  
                 OrangeInstructions@mR 0029                              _MoveBuggy 0FF0  
                  color_read_Green@tmp 0012                               ??_LowISR 0006  
              __end_of_initDCmotorsPWM 1B16                 __end_of_fullSpeedAhead 182A  
                             ??___wmul 000D                            __pdataBANK0 00FA  
        i2I2C_2_Master_Write@data_byte 0002                      ?_PinkInstructions 0027  
                   Update_RGBC@tempval 0014                     ??_PinkInstructions 002B  
         __end_ofi2_I2C_2_Master_Start 2528           __end_ofi2_I2C_2_Master_Write 24F6  
                            ___fldiv@a 001B                              ___fldiv@b 0017  
                            ___flmul@a 0034                              ___flmul@b 0030  
                          __pbssCOMRAM 004F                           ??_WhiteLight 0009  
                        __pcstackBANK0 00C6                   AppendTime@time_array 000B  
                 AppendTime@time_index 0009                       ?_RedInstructions 0027  
                             ?_HighISR 0001                             ?_MoveBuggy 002E  
                     ___lwdiv@dividend 000F                           ?_Timer0_init 0001  
                          ?_turnLeft90 0022                        ?_fullSpeedAhead 001C  
                   BlueInstructions@mL 0027                     BlueInstructions@mR 0029  
                            __pintcode 0008                     __end_of_WhiteLight 2530  
                             ?___fldiv 0017                               ?___flmul 0030  
                             ?___fltol 0049                               ?___lwdiv 000F  
                          __pintcodelo 0018           ?_interrupts_clear_colorclick 0001  
                 I2C_2_Master_Read@ack 000B                   I2C_2_Master_Read@tmp 000C  
                        ?_turnRight135 0022                      _I2C_2_Master_Idle 233A  
                   _fullSpeedBackwards 182A                      _I2C_2_Master_Init 2310  
                    _I2C_2_Master_Read 229A                      _I2C_2_Master_Stop 2500  
                         _RxBufReadCnt 0053                     GreenInstructions@a 002D  
                   ?_I2C_2_Master_Idle 0001                     ?_I2C_2_Master_Init 0001  
                   ?_I2C_2_Master_Read 0001                          ??_setMotorPWM 0018  
                   ?_I2C_2_Master_Stop 0001                       ___lwdiv@quotient 0013  
                          turnLeft90@a 0026               initDCmotorsPWM@PWMperiod 0009  
              LightBlueInstructions@mL 0027                LightBlueInstructions@mR 0029  
                  ?_fullSpeedBackwards 001C                    ??_I2C_2_Master_Idle 0009  
                  ??_I2C_2_Master_Init 0009                           ?_Update_RGBC 0014  
                  ??_I2C_2_Master_Read 000A                         ___wmul@product 000D  
                             _LATAbits 000F79                    ??_I2C_2_Master_Stop 000A  
                             _LATCbits 000F7B                               _LATEbits 000F7D  
                             _LATFbits 000F7E                               _LATGbits 000F7F  
                             _LATHbits 000F80                               _IPR0bits 000E1F  
                             _PIE0bits 000E29                               _LED_init 24D2  
                     RedInstructions@a 002D                               _PIE4bits 000E2D  
                             i1u341_20 0036                               i1u341_21 0032  
                          turnRight@mL 001C                            turnRight@mR 001E  
                             i2u342_40 246E                               i2u342_41 246A  
                             _PIR0bits 000E33                               i2u187_40 2372  
                             i2u187_41 236E                               i2u188_40 2388  
                             i2u188_41 2384                               i2u428_47 2214  
                             _PIR4bits 000E37                       ?_initDCmotorsPWM 0009  
                             _SSP2CON2 000EDA                               _SSP2STAT 000ED8  
                 ??_fullSpeedBackwards 0020                     _OrangeInstructions 1CA8  
                    PinkInstructions@a 002D              __end_of_I2C_2_Master_Idle 2362  
            __end_of_I2C_2_Master_Init 233A              __end_of_I2C_2_Master_Read 22DC  
                    ___wmul@multiplier 0009                         ??_turnRight135 0026  
            __end_of_I2C_2_Master_Stop 250A                           setMotorPWM@m 0016  
          I2C_2_Master_Write@data_byte 000A          ??_interrupts_clear_colorclick 000E  
           __end_of_YellowInstructions 1B9C                      ??_color_read_Blue 000F  
                  ?_OrangeInstructions 0027                           _TxBufReadCnt 0051  
          ?_init_colorclick_interrupts 0001               i2color_writetoaddr@value 0003  
                            _turnRight 1578          __end_of_I2C_2_Master_RepStart 2500  
                   color_read_Blue@tmp 0012                    __end_of_setMotorPWM 1470  
                          ??_MoveBuggy 0034                   i2_I2C_2_Master_Start 251E  
                 i2_I2C_2_Master_Write 24EA                               __Hrparam 0000  
                 ??_OrangeInstructions 002B                               __Lrparam 0000  
        __end_of_LightBlueInstructions 1DB4            __end_ofi2_I2C_2_Master_Idle 238A  
          __end_ofi2_I2C_2_Master_Stop 251E                         turnRight135@mL 0022  
                       turnRight135@mR 0024                          turnLeft135@mL 0022  
                        turnLeft135@mR 0024                             _ANSELBbits 000E9A  
                           _ANSELDbits 000EA7                               ___xxtofl 0E3C  
                           _T0CON0bits 000FD5                             _T0CON1bits 000FD6  
                      ___lwdiv@divisor 0011                      BlueInstructions@a 002D  
                      ___lwdiv@counter 0015                             ?_turnRight 001C  
                             __ptext10 2528                               __ptext11 1EAE  
                             __ptext20 1B16                               __ptext12 2074  
                             __ptext21 1B9C                               __ptext13 20C4  
                             __ptext30 19D4                               __ptext22 1F0C  
                             __ptext14 2114                               __ptext31 201A  
                             __ptext23 1C22                               __ptext15 2164  
                             __ptext40 23B0                               __ptext32 1666  
                             __ptext24 1CA8                               __ptext16 24F6  
                             __ptext41 249E                               __ptext33 1900  
                             __ptext25 1F66                               __ptext17 229A  
                             __ptext42 21B4                               __ptext34 182A  
                             __ptext26 1578                               __ptext18 241E  
                             __ptext51 24B8                               __ptext43 243E  
                             __ptext35 1304                               __ptext27 1D2E  
                             __ptext19 0FF0                               __ptext52 2204  
                             __ptext44 24DE                               __ptext36 238A  
                             __ptext28 1FC0                               __ptext53 247E  
                             __ptext45 2500                               __ptext37 1E3A  
                             __ptext29 1DB4                               __ptext54 24EA  
                             __ptext46 250A                               __ptext38 23D6  
                             __ptext55 2514                               __ptext47 233A  
                             __ptext39 24D2                               __ptext56 251E  
                             __ptext48 23FA                               __ptext57 2362  
                         _SSP2CON1bits 000ED9                           _SSP2CON2bits 000EDA  
      ??i2_interrupts_clear_colorclick 0006                 LightBlueInstructions@a 002D  
                           turnLeft@mL 001C                             turnLeft@mR 001E  
                ?i2_I2C_2_Master_Start 0001                  ?i2_I2C_2_Master_Write 0001  
                        ??_turnLeft135 0026                               isa$xinst 000000  
                           _RC4STAbits 000EE7                               int$flags 0057  
                        ??_turnRight90 0026                       _BlueInstructions 19D4  
                             _turnLeft 1666                             _INTCONbits 000FF2  
                          _setMotorPWM 1304                          ?_detect_color 00CA  
                        turnRight135@a 0026                               intlevel1 0000  
                             intlevel2 0000                          turnRight90@mL 0022  
                        turnRight90@mR 0024                       ??_fullSpeedAhead 0020  
                 __end_of_turnRight135 1FC0                           ??_turnLeft90 0026  
                          _moves_index 0056                       _color_click_init 22DC  
                  __end_of_turnLeft135 201A                             _SSP2DATPPS 000E1D  
                           _SSP2CLKPPS 000E1C                    __end_of_turnRight90 1F66  
                        ??_AppendMoves 000D                         ??_detect_color 00CC  
                          ??_turnRight 0020                     __end_of_turnLeft90 2074  
                           _TX4STAbits 000EE8                 ??i2_I2C_2_Master_Start 0002  
               ??i2_I2C_2_Master_Write 0002                   YellowInstructions@mL 0027  
                 YellowInstructions@mR 0029  __end_ofi2_interrupts_clear_colorclick 24D2  
        i2_interrupts_clear_colorclick 24B8  
