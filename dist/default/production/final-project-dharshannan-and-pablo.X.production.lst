

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Mar 13 18:44:46 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	text53,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    68                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    69                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    78                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    79                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    80                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    81                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    82   000000                     
    83                           ; Generated 06/04/2022 GMT
    84                           ; 
    85                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    86                           ; All rights reserved.
    87                           ; 
    88                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    89                           ; 
    90                           ; Redistribution and use in source and binary forms, with or without modification, are
    91                           ; permitted provided that the following conditions are met:
    92                           ; 
    93                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    94                           ;        conditions and the following disclaimer.
    95                           ; 
    96                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    97                           ;        of conditions and the following disclaimer in the documentation and/or other
    98                           ;        materials provided with the distribution. Publication is not required when
    99                           ;        this file is used in an embedded application.
   100                           ; 
   101                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   102                           ;        software without specific prior written permission.
   103                           ; 
   104                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   105                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   106                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   107                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   108                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   109                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   110                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   111                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   112                           ; 
   113                           ; 
   114                           ; Code-generator required, PIC18F67K40 Definitions
   115                           ; 
   116                           ; SFR Addresses
   117   000000                     
   118                           	psect	idataBANK0
   119   002AD6                     __pidataBANK0:
   120                           	callstack 0
   121                           
   122                           ;initializer for _int_threshold_high
   123   002AD6  0B54               	dw	2900
   124   000000                     _T0CON0bits	set	4053
   125   000000                     _T0CON1bits	set	4054
   126   000000                     _TX4REG	set	3812
   127   000000                     _RC4STAbits	set	3815
   128   000000                     _SP4BRGH	set	3814
   129   000000                     _TRISBbits	set	3970
   130   000000                     _TRISCbits	set	3971
   131   000000                     _TRISEbits	set	3973
   132   000000                     _LATEbits	set	3965
   133   000000                     _LATFbits	set	3966
   134   000000                     _LATGbits	set	3967
   135   000000                     _TRISFbits	set	3974
   136   000000                     _TRISGbits	set	3975
   137   000000                     _SSP2CON2bits	set	3802
   138   000000                     _RX4PPS	set	3605
   139   000000                     _SSP2CLKPPS	set	3612
   140   000000                     _SSP2DATPPS	set	3613
   141   000000                     _ANSELDbits	set	3751
   142   000000                     _SSP2ADD	set	3798
   143   000000                     _SSP2CON1bits	set	3801
   144   000000                     _RC4REG	set	3811
   145   000000                     _SP4BRGL	set	3813
   146   000000                     _TX4STAbits	set	3816
   147   000000                     _BAUD4CONbits	set	3817
   148   000000                     _LATAbits	set	3961
   149   000000                     _LATDbits	set	3964
   150   000000                     _LATHbits	set	3968
   151   000000                     _TRISAbits	set	3969
   152   000000                     _SSP2CON2	set	3802
   153   000000                     _TRISDbits	set	3972
   154   000000                     _CCPR4H	set	3873
   155   000000                     _CCPR3H	set	3877
   156   000000                     _SSP2STAT	set	3800
   157   000000                     _ANSELFbits	set	3764
   158   000000                     _SSP2BUF	set	3797
   159   000000                     _IPR0bits	set	3615
   160   000000                     _PIE0bits	set	3625
   161   000000                     _RC7PPS	set	3689
   162   000000                     _RD5PPS	set	3695
   163   000000                     _RE2PPS	set	3700
   164   000000                     _RD6PPS	set	3696
   165   000000                     _PORTFbits	set	3982
   166   000000                     _T2PR	set	4028
   167   000000                     _T2CONbits	set	4029
   168   000000                     _TRISHbits	set	3976
   169   000000                     _CCPR2H	set	4006
   170   000000                     _CCPR1H	set	4010
   171   000000                     _LATCbits	set	3963
   172   000000                     _RE4PPS	set	3702
   173   000000                     _RG6PPS	set	3720
   174   000000                     _ANSELBbits	set	3738
   175   000000                     _TMR0L	set	4051
   176   000000                     _TMR0H	set	4052
   177   000000                     _INTCONbits	set	4082
   178   000000                     _T2CLKCONbits	set	4031
   179   000000                     _T2HLTbits	set	4030
   180   000000                     _CCP1CONbits	set	4011
   181   000000                     _CCPTMRS0bits	set	4013
   182   000000                     _CCP2CONbits	set	4007
   183   000000                     _CCP3CONbits	set	3878
   184   000000                     _CCP4CONbits	set	3874
   185   000000                     _PIE4bits	set	3629
   186   000000                     _PIR0bits	set	3635
   187   000000                     _PIR4bits	set	3639
   188   000000                     _RC0PPS	set	3682
   189                           
   190                           ; #config settings
   191                           
   192                           	psect	cinit
   193   00278C                     __pcinit:
   194                           	callstack 0
   195   00278C                     start_initialization:
   196                           	callstack 0
   197   00278C                     __initialization:
   198                           	callstack 0
   199                           
   200                           ; Initialize objects allocated to BANK0 (2 bytes)
   201                           ; load TBLPTR registers with __pidataBANK0
   202   00278C  0ED6               	movlw	low __pidataBANK0
   203   00278E  6EF6               	movwf	tblptrl,c
   204   002790  0E2A               	movlw	high __pidataBANK0
   205   002792  6EF7               	movwf	tblptrh,c
   206   002794  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   207   002796  6EF8               	movwf	tblptru,c
   208   002798  0009               	tblrd		*+	;fetch initializer
   209   00279A  CFF5 F0D7          	movff	tablat,__pdataBANK0
   210   00279E  0009               	tblrd		*+	;fetch initializer
   211   0027A0  CFF5 F0D8          	movff	tablat,__pdataBANK0+1
   212                           
   213                           ; Clear objects allocated to BANK1 (140 bytes)
   214   0027A4  EE01  F000         	lfsr	0,__pbssBANK1
   215   0027A8  0E8C               	movlw	140
   216   0027AA                     clear_0:
   217   0027AA  6AEE               	clrf	postinc0,c
   218   0027AC  06E8               	decf	wreg,f,c
   219   0027AE  E1FD               	bnz	clear_0
   220                           
   221                           ; Clear objects allocated to BANK0 (63 bytes)
   222   0027B0  EE00  F060         	lfsr	0,__pbssBANK0
   223   0027B4  0E3F               	movlw	63
   224   0027B6                     clear_1:
   225   0027B6  6AEE               	clrf	postinc0,c
   226   0027B8  06E8               	decf	wreg,f,c
   227   0027BA  E1FD               	bnz	clear_1
   228                           
   229                           ; Clear objects allocated to COMRAM (8 bytes)
   230   0027BC  EE00  F04F         	lfsr	0,__pbssCOMRAM
   231   0027C0  0E08               	movlw	8
   232   0027C2                     clear_2:
   233   0027C2  6AEE               	clrf	postinc0,c
   234   0027C4  06E8               	decf	wreg,f,c
   235   0027C6  E1FD               	bnz	clear_2
   236   0027C8                     end_of_initialization:
   237                           	callstack 0
   238   0027C8                     __end_of__initialization:
   239                           	callstack 0
   240   0027C8  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   241   0027CA  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   242   0027CC  0100               	movlb	0
   243   0027CE  EF62  F008         	goto	_main	;jump to C main() function
   244                           
   245                           	psect	bssCOMRAM
   246   00004F                     __pbssCOMRAM:
   247                           	callstack 0
   248   00004F                     _int_threshold_low:
   249                           	callstack 0
   250   00004F                     	ds	2
   251   000051                     _TxBufReadCnt:
   252                           	callstack 0
   253   000051                     	ds	1
   254   000052                     _TxBufWriteCnt:
   255                           	callstack 0
   256   000052                     	ds	1
   257   000053                     _RxBufReadCnt:
   258                           	callstack 0
   259   000053                     	ds	1
   260   000054                     _RxBufWriteCnt:
   261                           	callstack 0
   262   000054                     	ds	1
   263   000055                     _color_flag:
   264                           	callstack 0
   265   000055                     	ds	1
   266   000056                     _moves_index:
   267                           	callstack 0
   268   000056                     	ds	1
   269                           
   270                           	psect	bssBANK0
   271   000060                     __pbssBANK0:
   272                           	callstack 0
   273   000060                     _EUSART4RXbuf:
   274                           	callstack 0
   275   000060                     	ds	20
   276   000074                     _lost_flag:
   277                           	callstack 0
   278   000074                     	ds	1
   279   000075                     _tmr_ovf:
   280                           	callstack 0
   281   000075                     	ds	1
   282   000076                     _anti_moves_array:
   283                           	callstack 0
   284   000076                     	ds	40
   285   00009E                     _time_index:
   286                           	callstack 0
   287   00009E                     	ds	1
   288                           
   289                           	psect	dataBANK0
   290   0000D7                     __pdataBANK0:
   291                           	callstack 0
   292   0000D7                     _int_threshold_high:
   293                           	callstack 0
   294   0000D7                     	ds	2
   295                           
   296                           	psect	bssBANK1
   297   000100                     __pbssBANK1:
   298                           	callstack 0
   299   000100                     _EUSART4TXbuf:
   300                           	callstack 0
   301   000100                     	ds	60
   302   00013C                     _time_array:
   303                           	callstack 0
   304   00013C                     	ds	80
   305                           
   306                           	psect	cstackBANK0
   307   00009F                     __pcstackBANK0:
   308                           	callstack 0
   309   00009F                     ??___fltol:
   310                           
   311                           ; 1 bytes @ 0x0
   312   00009F                     	ds	4
   313   0000A3                     detect_color@tempval:
   314                           	callstack 0
   315                           
   316                           ; 2 bytes @ 0x4
   317   0000A3                     	ds	2
   318   0000A5                     detect_color@lost_timer:
   319                           	callstack 0
   320                           
   321                           ; 2 bytes @ 0x6
   322   0000A5                     	ds	2
   323   0000A7                     ??_detect_color:
   324                           
   325                           ; 1 bytes @ 0x8
   326   0000A7                     	ds	12
   327   0000B3                     detect_color@color:
   328                           	callstack 0
   329                           
   330                           ; 1 bytes @ 0x14
   331   0000B3                     	ds	1
   332   0000B4                     detect_color@dist_R:
   333                           	callstack 0
   334                           
   335                           ; 1 bytes @ 0x15
   336   0000B4                     	ds	1
   337   0000B5                     detect_color@dist_G:
   338                           	callstack 0
   339                           
   340                           ; 1 bytes @ 0x16
   341   0000B5                     	ds	1
   342   0000B6                     detect_color@dist_B:
   343                           	callstack 0
   344                           
   345                           ; 1 bytes @ 0x17
   346   0000B6                     	ds	1
   347   0000B7                     ??_main:
   348                           
   349                           ; 1 bytes @ 0x18
   350   0000B7                     	ds	2
   351   0000B9                     main@lost_timer:
   352                           	callstack 0
   353                           
   354                           ; 1 bytes @ 0x1A
   355   0000B9                     	ds	1
   356   0000BA                     main@b:
   357                           	callstack 0
   358                           
   359                           ; 2 bytes @ 0x1B
   360   0000BA                     	ds	2
   361   0000BC                     main@color_detected:
   362                           	callstack 0
   363                           
   364                           ; 1 bytes @ 0x1D
   365   0000BC                     	ds	1
   366   0000BD                     main@initial_color:
   367                           	callstack 0
   368                           
   369                           ; 8 bytes @ 0x1E
   370   0000BD                     	ds	8
   371   0000C5                     main@motorL:
   372                           	callstack 0
   373                           
   374                           ; 9 bytes @ 0x26
   375   0000C5                     	ds	9
   376   0000CE                     main@motorR:
   377                           	callstack 0
   378                           
   379                           ; 9 bytes @ 0x2F
   380   0000CE                     	ds	9
   381                           
   382                           	psect	cstackCOMRAM
   383   000001                     __pcstackCOMRAM:
   384                           	callstack 0
   385   000001                     ??i2_I2C_2_Master_Idle:
   386   000001                     
   387                           ; 1 bytes @ 0x0
   388   000001                     	ds	1
   389   000002                     i2I2C_2_Master_Write@data_byte:
   390                           	callstack 0
   391                           
   392                           ; 1 bytes @ 0x1
   393   000002                     	ds	1
   394   000003                     i2color_writetoaddr@value:
   395                           	callstack 0
   396                           
   397                           ; 1 bytes @ 0x2
   398   000003                     	ds	1
   399   000004                     i2color_writetoaddr@address:
   400                           	callstack 0
   401                           
   402                           ; 1 bytes @ 0x3
   403   000004                     	ds	1
   404   000005                     ??i2_init_colorclick_interrupts:
   405                           
   406                           ; 1 bytes @ 0x4
   407   000005                     	ds	1
   408   000006                     ??_LowISR:
   409   000006                     
   410                           ; 1 bytes @ 0x5
   411   000006                     	ds	3
   412   000009                     ??_I2C_2_Master_Idle:
   413   000009                     ?_Return_Time:
   414                           	callstack 0
   415   000009                     ?___wmul:
   416                           	callstack 0
   417   000009                     ?___xxtofl:
   418                           	callstack 0
   419   000009                     initDCmotorsPWM@PWMperiod:
   420                           	callstack 0
   421   000009                     AppendMoves@moves_index:
   422                           	callstack 0
   423   000009                     AppendTime@temp:
   424                           	callstack 0
   425   000009                     Return_Anti_Moves@moves_index:
   426                           	callstack 0
   427   000009                     Return_Time@time_index:
   428                           	callstack 0
   429   000009                     ___wmul@multiplier:
   430                           	callstack 0
   431   000009                     ___xxtofl@val:
   432                           	callstack 0
   433                           
   434                           ; 4 bytes @ 0x8
   435   000009                     	ds	1
   436   00000A                     ??_I2C_2_Master_Read:
   437   00000A                     I2C_2_Master_Write@data_byte:
   438                           	callstack 0
   439                           
   440                           ; 1 bytes @ 0x9
   441   00000A                     	ds	1
   442   00000B                     color_writetoaddr@value:
   443                           	callstack 0
   444   00000B                     I2C_2_Master_Read@ack:
   445                           	callstack 0
   446   00000B                     AppendMoves@anti_moves_array:
   447                           	callstack 0
   448   00000B                     AppendTime@time_index:
   449                           	callstack 0
   450   00000B                     Return_Anti_Moves@anti_moves_array:
   451                           	callstack 0
   452   00000B                     Return_Time@time_array:
   453                           	callstack 0
   454   00000B                     ___wmul@multiplicand:
   455                           	callstack 0
   456                           
   457                           ; 2 bytes @ 0xA
   458   00000B                     	ds	1
   459   00000C                     color_writetoaddr@address:
   460                           	callstack 0
   461   00000C                     I2C_2_Master_Read@tmp:
   462                           	callstack 0
   463                           
   464                           ; 1 bytes @ 0xB
   465   00000C                     	ds	1
   466   00000D                     ??_Return_Time:
   467   00000D                     ??_Return_Anti_Moves:
   468   00000D                     ??_AppendMoves:
   469   00000D                     ??_color_click_init:
   470   00000D                     ??_init_colorclick_interrupts:
   471   00000D                     ??___xxtofl:
   472   00000D                     ?_color_read_Red:
   473                           	callstack 0
   474   00000D                     ?_color_read_Green:
   475                           	callstack 0
   476   00000D                     ?_color_read_Blue:
   477                           	callstack 0
   478   00000D                     ?_color_read_Clear:
   479                           	callstack 0
   480   00000D                     AppendTime@time_array:
   481                           	callstack 0
   482   00000D                     ___wmul@product:
   483                           	callstack 0
   484                           
   485                           ; 2 bytes @ 0xC
   486   00000D                     	ds	1
   487   00000E                     AppendMoves@temp:
   488                           	callstack 0
   489   00000E                     Return_Anti_Moves@temp:
   490                           	callstack 0
   491                           
   492                           ; 1 bytes @ 0xD
   493   00000E                     	ds	1
   494   00000F                     ??_AppendTime:
   495   00000F                     ??_color_read_Red:
   496   00000F                     ??_color_read_Green:
   497   00000F                     ??_color_read_Blue:
   498   00000F                     ??_color_read_Clear:
   499   00000F                     ?___lwdiv:
   500                           	callstack 0
   501   00000F                     ___lwdiv@dividend:
   502                           	callstack 0
   503                           
   504                           ; 2 bytes @ 0xE
   505   00000F                     	ds	1
   506   000010                     Return_Time@temp:
   507                           	callstack 0
   508                           
   509                           ; 2 bytes @ 0xF
   510   000010                     	ds	1
   511   000011                     ___xxtofl@sign:
   512                           	callstack 0
   513   000011                     ___lwdiv@divisor:
   514                           	callstack 0
   515                           
   516                           ; 2 bytes @ 0x10
   517   000011                     	ds	1
   518   000012                     ___xxtofl@exp:
   519                           	callstack 0
   520   000012                     color_read_Red@tmp:
   521                           	callstack 0
   522   000012                     color_read_Green@tmp:
   523                           	callstack 0
   524   000012                     color_read_Blue@tmp:
   525                           	callstack 0
   526   000012                     color_read_Clear@tmp:
   527                           	callstack 0
   528                           
   529                           ; 2 bytes @ 0x11
   530   000012                     	ds	1
   531   000013                     ___lwdiv@quotient:
   532                           	callstack 0
   533   000013                     ___xxtofl@arg:
   534                           	callstack 0
   535                           
   536                           ; 4 bytes @ 0x12
   537   000013                     	ds	1
   538   000014                     Update_RGBC@tempval:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0x13
   542   000014                     	ds	1
   543   000015                     ___lwdiv@counter:
   544                           	callstack 0
   545                           
   546                           ; 1 bytes @ 0x14
   547   000015                     	ds	1
   548   000016                     setMotorPWM@m:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0x15
   552   000016                     	ds	1
   553   000017                     ?___fldiv:
   554                           	callstack 0
   555   000017                     ___fldiv@b:
   556                           	callstack 0
   557                           
   558                           ; 4 bytes @ 0x16
   559   000017                     	ds	1
   560   000018                     ??_setMotorPWM:
   561                           
   562                           ; 1 bytes @ 0x17
   563   000018                     	ds	2
   564   00001A                     setMotorPWM@posDuty:
   565                           	callstack 0
   566                           
   567                           ; 1 bytes @ 0x19
   568   00001A                     	ds	1
   569   00001B                     setMotorPWM@negDuty:
   570                           	callstack 0
   571   00001B                     ___fldiv@a:
   572                           	callstack 0
   573                           
   574                           ; 4 bytes @ 0x1A
   575   00001B                     	ds	1
   576   00001C                     stop@mL:
   577                           	callstack 0
   578   00001C                     turnLeft@mL:
   579                           	callstack 0
   580   00001C                     turnRight@mL:
   581                           	callstack 0
   582   00001C                     fullSpeedAhead@mL:
   583                           	callstack 0
   584   00001C                     fullSpeedBackwards@mL:
   585                           	callstack 0
   586                           
   587                           ; 2 bytes @ 0x1B
   588   00001C                     	ds	2
   589   00001E                     stop@mR:
   590                           	callstack 0
   591   00001E                     turnLeft@mR:
   592                           	callstack 0
   593   00001E                     turnRight@mR:
   594                           	callstack 0
   595   00001E                     fullSpeedAhead@mR:
   596                           	callstack 0
   597   00001E                     fullSpeedBackwards@mR:
   598                           	callstack 0
   599                           
   600                           ; 2 bytes @ 0x1D
   601   00001E                     	ds	1
   602   00001F                     ??___fldiv:
   603                           
   604                           ; 1 bytes @ 0x1E
   605   00001F                     	ds	1
   606   000020                     ??_stop:
   607   000020                     ??_turnLeft:
   608   000020                     ??_turnRight:
   609   000020                     ??_fullSpeedAhead:
   610   000020                     ??_fullSpeedBackwards:
   611                           
   612                           ; 1 bytes @ 0x1F
   613   000020                     	ds	2
   614   000022                     turnLeft90@mL:
   615                           	callstack 0
   616   000022                     turnRight90@mL:
   617                           	callstack 0
   618                           
   619                           ; 2 bytes @ 0x21
   620   000022                     	ds	1
   621   000023                     ___fldiv@rem:
   622                           	callstack 0
   623                           
   624                           ; 4 bytes @ 0x22
   625   000023                     	ds	1
   626   000024                     turnLeft90@mR:
   627                           	callstack 0
   628   000024                     turnRight90@mR:
   629                           	callstack 0
   630                           
   631                           ; 2 bytes @ 0x23
   632   000024                     	ds	2
   633   000026                     turnLeft90@a:
   634                           	callstack 0
   635   000026                     turnRight90@a:
   636                           	callstack 0
   637                           
   638                           ; 1 bytes @ 0x25
   639   000026                     	ds	1
   640   000027                     ___fldiv@sign:
   641                           	callstack 0
   642   000027                     turnRight135@mL:
   643                           	callstack 0
   644   000027                     turnLeft135@mL:
   645                           	callstack 0
   646   000027                     RedInstructions@mL:
   647                           	callstack 0
   648   000027                     GreenInstructions@mL:
   649                           	callstack 0
   650   000027                     BlueInstructions@mL:
   651                           	callstack 0
   652   000027                     YellowInstructions@mL:
   653                           	callstack 0
   654   000027                     PinkInstructions@mL:
   655                           	callstack 0
   656                           
   657                           ; 2 bytes @ 0x26
   658   000027                     	ds	1
   659   000028                     ___fldiv@new_exp:
   660                           	callstack 0
   661                           
   662                           ; 2 bytes @ 0x27
   663   000028                     	ds	1
   664   000029                     turnRight135@mR:
   665                           	callstack 0
   666   000029                     turnLeft135@mR:
   667                           	callstack 0
   668   000029                     RedInstructions@mR:
   669                           	callstack 0
   670   000029                     GreenInstructions@mR:
   671                           	callstack 0
   672   000029                     BlueInstructions@mR:
   673                           	callstack 0
   674   000029                     YellowInstructions@mR:
   675                           	callstack 0
   676   000029                     PinkInstructions@mR:
   677                           	callstack 0
   678                           
   679                           ; 2 bytes @ 0x28
   680   000029                     	ds	1
   681   00002A                     ___fldiv@grs:
   682                           	callstack 0
   683                           
   684                           ; 4 bytes @ 0x29
   685   00002A                     	ds	1
   686   00002B                     ??_RedInstructions:
   687   00002B                     ??_GreenInstructions:
   688   00002B                     ??_BlueInstructions:
   689   00002B                     ??_YellowInstructions:
   690   00002B                     ??_PinkInstructions:
   691   00002B                     turnRight135@a:
   692                           	callstack 0
   693   00002B                     turnLeft135@a:
   694                           	callstack 0
   695                           
   696                           ; 1 bytes @ 0x2A
   697   00002B                     	ds	1
   698   00002C                     OrangeInstructions@mL:
   699                           	callstack 0
   700   00002C                     LightBlueInstructions@mL:
   701                           	callstack 0
   702                           
   703                           ; 2 bytes @ 0x2B
   704   00002C                     	ds	1
   705   00002D                     RedInstructions@a:
   706                           	callstack 0
   707   00002D                     GreenInstructions@a:
   708                           	callstack 0
   709   00002D                     BlueInstructions@a:
   710                           	callstack 0
   711   00002D                     YellowInstructions@a:
   712                           	callstack 0
   713   00002D                     PinkInstructions@a:
   714                           	callstack 0
   715                           
   716                           ; 1 bytes @ 0x2C
   717   00002D                     	ds	1
   718   00002E                     ___fldiv@bexp:
   719                           	callstack 0
   720   00002E                     OrangeInstructions@mR:
   721                           	callstack 0
   722   00002E                     LightBlueInstructions@mR:
   723                           	callstack 0
   724   00002E                     AntiYellow@mL:
   725                           	callstack 0
   726   00002E                     AntiPink@mL:
   727                           	callstack 0
   728                           
   729                           ; 2 bytes @ 0x2D
   730   00002E                     	ds	1
   731   00002F                     ___fldiv@aexp:
   732                           	callstack 0
   733                           
   734                           ; 1 bytes @ 0x2E
   735   00002F                     	ds	1
   736   000030                     ??_OrangeInstructions:
   737   000030                     ??_LightBlueInstructions:
   738   000030                     ?___flmul:
   739                           	callstack 0
   740   000030                     AntiYellow@mR:
   741                           	callstack 0
   742   000030                     AntiPink@mR:
   743                           	callstack 0
   744   000030                     ___flmul@b:
   745                           	callstack 0
   746                           
   747                           ; 4 bytes @ 0x2F
   748   000030                     	ds	2
   749   000032                     ??_AntiYellow:
   750   000032                     ??_AntiPink:
   751   000032                     OrangeInstructions@a:
   752                           	callstack 0
   753   000032                     LightBlueInstructions@a:
   754                           	callstack 0
   755                           
   756                           ; 1 bytes @ 0x31
   757   000032                     	ds	2
   758   000034                     AntiYellow@a:
   759                           	callstack 0
   760   000034                     AntiPink@a:
   761                           	callstack 0
   762   000034                     ___flmul@a:
   763                           	callstack 0
   764                           
   765                           ; 4 bytes @ 0x33
   766   000034                     	ds	1
   767   000035                     MoveBuggy@color_detected:
   768                           	callstack 0
   769                           
   770                           ; 2 bytes @ 0x34
   771   000035                     	ds	2
   772   000037                     MoveBuggy@mL:
   773                           	callstack 0
   774                           
   775                           ; 2 bytes @ 0x36
   776   000037                     	ds	1
   777   000038                     ??___flmul:
   778                           
   779                           ; 1 bytes @ 0x37
   780   000038                     	ds	1
   781   000039                     MoveBuggy@mR:
   782                           	callstack 0
   783                           
   784                           ; 2 bytes @ 0x38
   785   000039                     	ds	2
   786   00003B                     WhiteInstructions@mL:
   787                           	callstack 0
   788                           
   789                           ; 2 bytes @ 0x3A
   790   00003B                     	ds	1
   791   00003C                     ___flmul@sign:
   792                           	callstack 0
   793                           
   794                           ; 1 bytes @ 0x3B
   795   00003C                     	ds	1
   796   00003D                     WhiteInstructions@mR:
   797                           	callstack 0
   798   00003D                     ___flmul@grs:
   799                           	callstack 0
   800                           
   801                           ; 4 bytes @ 0x3C
   802   00003D                     	ds	2
   803   00003F                     ??_WhiteInstructions:
   804                           
   805                           ; 1 bytes @ 0x3E
   806   00003F                     	ds	2
   807   000041                     ___flmul@aexp:
   808                           	callstack 0
   809   000041                     WhiteInstructions@c:
   810                           	callstack 0
   811                           
   812                           ; 2 bytes @ 0x40
   813   000041                     	ds	1
   814   000042                     ___flmul@bexp:
   815                           	callstack 0
   816                           
   817                           ; 1 bytes @ 0x41
   818   000042                     	ds	1
   819   000043                     WhiteInstructions@anticolor:
   820                           	callstack 0
   821   000043                     ___flmul@prod:
   822                           	callstack 0
   823                           
   824                           ; 4 bytes @ 0x42
   825   000043                     	ds	1
   826   000044                     WhiteInstructions@a:
   827                           	callstack 0
   828                           
   829                           ; 2 bytes @ 0x43
   830   000044                     	ds	3
   831   000047                     ___flmul@temp:
   832                           	callstack 0
   833                           
   834                           ; 2 bytes @ 0x46
   835   000047                     	ds	2
   836   000049                     ?___fltol:
   837                           	callstack 0
   838   000049                     ___fltol@f1:
   839                           	callstack 0
   840                           
   841                           ; 4 bytes @ 0x48
   842   000049                     	ds	4
   843   00004D                     ___fltol@sign1:
   844                           	callstack 0
   845                           
   846                           ; 1 bytes @ 0x4C
   847   00004D                     	ds	1
   848   00004E                     ___fltol@exp1:
   849                           	callstack 0
   850                           
   851                           ; 1 bytes @ 0x4D
   852   00004E                     	ds	1
   853                           
   854 ;;
   855 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   856 ;;
   857 ;; *************** function _main *****************
   858 ;; Defined at:
   859 ;;		line 22 in file "main_motor.c"
   860 ;; Parameters:    Size  Location     Type
   861 ;;		None
   862 ;; Auto vars:     Size  Location     Type
   863 ;;  b               2   27[BANK0 ] unsigned int 
   864 ;;  motorR          9   47[BANK0 ] struct DC_motor
   865 ;;  motorL          9   38[BANK0 ] struct DC_motor
   866 ;;  initial_colo    8   30[BANK0 ] struct RGB_val
   867 ;;  color_detect    1   29[BANK0 ] unsigned char 
   868 ;;  lost_timer      1   26[BANK0 ] unsigned char 
   869 ;; Return value:  Size  Location     Type
   870 ;;                  1    wreg      void 
   871 ;; Registers used:
   872 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   873 ;; Tracked objects:
   874 ;;		On entry : 0/0
   875 ;;		On exit  : 0/0
   876 ;;		Unchanged: 0/0
   877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   879 ;;      Locals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   880 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   881 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   882 ;;Total ram usage:       32 bytes
   883 ;; Hardware stack levels required when called: 15
   884 ;; This function calls:
   885 ;;		_AppendTime
   886 ;;		_Interrupts_init
   887 ;;		_LED_init
   888 ;;		_MoveBuggy
   889 ;;		_Timer0_init
   890 ;;		_Update_RGBC
   891 ;;		_WhiteInstructions
   892 ;;		_WhiteLight
   893 ;;		_color_click_init
   894 ;;		_detect_color
   895 ;;		_fullSpeedAhead
   896 ;;		_initDCmotorsPWM
   897 ;;		_stop
   898 ;; This function is called by:
   899 ;;		Startup code after reset
   900 ;; This function uses a non-reentrant model
   901 ;;
   902                           
   903                           	psect	text0
   904   0010C4                     __ptext0:
   905                           	callstack 0
   906   0010C4                     _main:
   907                           	callstack 16
   908   0010C4                     
   909                           ;main_motor.c: 25:     RGB_val initial_color;;main_motor.c: 26:     initial_color.R = 0;
   910   0010C4  0E00               	movlw	0
   911   0010C6  0100               	movlb	0	; () banked
   912   0010C8  6FBE               	movwf	(main@initial_color+1)& (0+255),b
   913   0010CA  0E00               	movlw	0
   914   0010CC  6FBD               	movwf	main@initial_color& (0+255),b
   915                           
   916                           ;main_motor.c: 27:     initial_color.G = 0;
   917   0010CE  0E00               	movlw	0
   918   0010D0  6FC0               	movwf	(main@initial_color+3)& (0+255),b
   919   0010D2  0E00               	movlw	0
   920   0010D4  6FBF               	movwf	(main@initial_color+2)& (0+255),b
   921                           
   922                           ;main_motor.c: 28:     initial_color.B = 0;
   923   0010D6  0E00               	movlw	0
   924   0010D8  6FC2               	movwf	(main@initial_color+5)& (0+255),b
   925   0010DA  0E00               	movlw	0
   926   0010DC  6FC1               	movwf	(main@initial_color+4)& (0+255),b
   927                           
   928                           ;main_motor.c: 29:     initial_color.C = 0;
   929   0010DE  0E00               	movlw	0
   930   0010E0  6FC4               	movwf	(main@initial_color+7)& (0+255),b
   931   0010E2  0E00               	movlw	0
   932   0010E4  6FC3               	movwf	(main@initial_color+6)& (0+255),b
   933   0010E6                     
   934                           ; BSR set to: 0
   935                           ;main_motor.c: 31:     LED_init();
   936   0010E6  EC1B  F015         	call	_LED_init	;wreg free
   937   0010EA                     
   938                           ;main_motor.c: 32:     color_click_init();
   939   0010EA  EC26  F014         	call	_color_click_init	;wreg free
   940   0010EE                     
   941                           ;main_motor.c: 33:     Interrupts_init();
   942   0010EE  EC0C  F015         	call	_Interrupts_init	;wreg free
   943                           
   944                           ;main_motor.c: 35:     Timer0_init();
   945   0010F2  ECCC  F014         	call	_Timer0_init	;wreg free
   946                           
   947                           ;main_motor.c: 38:     initDCmotorsPWM(99);
   948   0010F6  0E00               	movlw	0
   949   0010F8  6E0A               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   950   0010FA  0E63               	movlw	99
   951   0010FC  6E09               	movwf	initDCmotorsPWM@PWMperiod^0,c
   952   0010FE  EC25  F010         	call	_initDCmotorsPWM	;wreg free
   953   001102                     
   954                           ;main_motor.c: 40:     struct DC_motor motorL, motorR;;main_motor.c: 42:     motorL.powe
      +                          r=0;
   955   001102  0E00               	movlw	0
   956   001104  0100               	movlb	0	; () banked
   957   001106  6FC5               	movwf	main@motorL& (0+255),b
   958   001108                     
   959                           ; BSR set to: 0
   960                           ;main_motor.c: 43:     motorL.direction=1;
   961   001108  0E01               	movlw	1
   962   00110A  6FC6               	movwf	(main@motorL+1)& (0+255),b
   963   00110C                     
   964                           ; BSR set to: 0
   965                           ;main_motor.c: 44:     motorL.brakemode=1;
   966   00110C  0E01               	movlw	1
   967   00110E  6FC7               	movwf	(main@motorL+2)& (0+255),b
   968   001110                     
   969                           ; BSR set to: 0
   970                           ;main_motor.c: 45:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
   971   001110  0EAA               	movlw	170
   972   001112  6FCA               	movwf	(main@motorL+5)& (0+255),b
   973   001114  0E0F               	movlw	15
   974   001116  6FCB               	movwf	(main@motorL+6)& (0+255),b
   975   001118                     
   976                           ; BSR set to: 0
   977                           ;main_motor.c: 46:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
   978   001118  0EA6               	movlw	166
   979   00111A  6FCC               	movwf	(main@motorL+7)& (0+255),b
   980   00111C  0E0F               	movlw	15
   981   00111E  6FCD               	movwf	(main@motorL+8)& (0+255),b
   982   001120                     
   983                           ; BSR set to: 0
   984                           ;main_motor.c: 47:     motorL.PWMperiod= T2PR;
   985   001120  CFBC F0C8          	movff	4028,main@motorL+3	;volatile
   986   001124  6BC9               	clrf	(main@motorL+4)& (0+255),b
   987   001126                     
   988                           ; BSR set to: 0
   989                           ;main_motor.c: 49:     motorR.power=0;
   990   001126  0E00               	movlw	0
   991   001128  6FCE               	movwf	main@motorR& (0+255),b
   992   00112A                     
   993                           ; BSR set to: 0
   994                           ;main_motor.c: 50:     motorR.direction=1;
   995   00112A  0E01               	movlw	1
   996   00112C  6FCF               	movwf	(main@motorR+1)& (0+255),b
   997   00112E                     
   998                           ; BSR set to: 0
   999                           ;main_motor.c: 51:     motorR.brakemode=1;
  1000   00112E  0E01               	movlw	1
  1001   001130  6FD0               	movwf	(main@motorR+2)& (0+255),b
  1002   001132                     
  1003                           ; BSR set to: 0
  1004                           ;main_motor.c: 52:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
  1005   001132  0E25               	movlw	37
  1006   001134  6FD3               	movwf	(main@motorR+5)& (0+255),b
  1007   001136  0E0F               	movlw	15
  1008   001138  6FD4               	movwf	(main@motorR+6)& (0+255),b
  1009   00113A                     
  1010                           ; BSR set to: 0
  1011                           ;main_motor.c: 53:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
  1012   00113A  0E21               	movlw	33
  1013   00113C  6FD5               	movwf	(main@motorR+7)& (0+255),b
  1014   00113E  0E0F               	movlw	15
  1015   001140  6FD6               	movwf	(main@motorR+8)& (0+255),b
  1016   001142                     
  1017                           ; BSR set to: 0
  1018                           ;main_motor.c: 54:     motorR.PWMperiod= T2PR;
  1019   001142  CFBC F0D1          	movff	4028,main@motorR+3	;volatile
  1020   001146  6BD2               	clrf	(main@motorR+4)& (0+255),b
  1021   001148                     
  1022                           ; BSR set to: 0
  1023                           ;main_motor.c: 57:     unsigned char color_detected = 0;
  1024   001148  0E00               	movlw	0
  1025   00114A  6FBC               	movwf	main@color_detected& (0+255),b
  1026   00114C                     
  1027                           ; BSR set to: 0
  1028                           ;main_motor.c: 58:     unsigned char lost_timer = 0;
  1029   00114C  0E00               	movlw	0
  1030   00114E  6FB9               	movwf	main@lost_timer& (0+255),b
  1031   001150                     l510:
  1032   001150  B48E               	btfsc	142,2,c	;volatile
  1033   001152  EFAD  F008         	goto	u4471
  1034   001156  EFAF  F008         	goto	u4470
  1035   00115A                     u4471:
  1036   00115A  EFA8  F008         	goto	l510
  1037   00115E                     u4470:
  1038   00115E                     
  1039                           ;main_motor.c: 62:     WhiteLight();
  1040   00115E  EC67  F015         	call	_WhiteLight	;wreg free
  1041   001162                     l4264:
  1042                           
  1043                           ;main_motor.c: 67:         unsigned int b = 0;
  1044   001162  0E00               	movlw	0
  1045   001164  0100               	movlb	0	; () banked
  1046   001166  6FBB               	movwf	(main@b+1)& (0+255),b
  1047   001168  0E00               	movlw	0
  1048   00116A  6FBA               	movwf	main@b& (0+255),b
  1049                           
  1050                           ;main_motor.c: 68:         while(color_detected == 0){
  1051   00116C  EFDA  F008         	goto	l4274
  1052   001170                     l4266:
  1053                           
  1054                           ; BSR set to: 0
  1055                           ;main_motor.c: 69:             fullSpeedAhead(&motorL,&motorR);
  1056   001170  0EC5               	movlw	low main@motorL
  1057   001172  6E1C               	movwf	fullSpeedAhead@mL^0,c
  1058   001174  0E00               	movlw	high main@motorL
  1059   001176  6E1D               	movwf	(fullSpeedAhead@mL+1)^0,c
  1060   001178  0ECE               	movlw	low main@motorR
  1061   00117A  6E1E               	movwf	fullSpeedAhead@mR^0,c
  1062   00117C  0E00               	movlw	high main@motorR
  1063   00117E  6E1F               	movwf	(fullSpeedAhead@mR+1)^0,c
  1064   001180  EC28  F00C         	call	_fullSpeedAhead	;wreg free
  1065   001184                     
  1066                           ;main_motor.c: 70:             Update_RGBC(&initial_color);
  1067   001184  0EBD               	movlw	low main@initial_color
  1068   001186  6E14               	movwf	Update_RGBC@tempval^0,c
  1069   001188  0E00               	movlw	high main@initial_color
  1070   00118A  6E15               	movwf	(Update_RGBC@tempval+1)^0,c
  1071   00118C  ECA7  F012         	call	_Update_RGBC	;wreg free
  1072   001190                     
  1073                           ;main_motor.c: 71:             color_detected = detect_color(&initial_color, lost_timer)
      +                          ;
  1074   001190  0EBD               	movlw	low main@initial_color
  1075   001192  0100               	movlb	0	; () banked
  1076   001194  6FA3               	movwf	detect_color@tempval& (0+255),b
  1077   001196  0E00               	movlw	high main@initial_color
  1078   001198  6FA4               	movwf	(detect_color@tempval+1)& (0+255),b
  1079   00119A  51B9               	movf	main@lost_timer& (0+255),w,b
  1080   00119C  6FB7               	movwf	??_main& (0+255),b
  1081   00119E  6BB8               	clrf	(??_main+1)& (0+255),b
  1082   0011A0  C0B7  F0A5         	movff	??_main,detect_color@lost_timer
  1083   0011A4  C0B8  F0A6         	movff	??_main+1,detect_color@lost_timer+1
  1084   0011A8  EC2E  F000         	call	_detect_color	;wreg free
  1085   0011AC  0100               	movlb	0	; () banked
  1086   0011AE  6FBC               	movwf	main@color_detected& (0+255),b
  1087   0011B0                     
  1088                           ; BSR set to: 0
  1089                           ;main_motor.c: 72:             b++;
  1090   0011B0  4BBA               	infsnz	main@b& (0+255),f,b
  1091   0011B2  2BBB               	incf	(main@b+1)& (0+255),f,b
  1092   0011B4                     l4274:
  1093                           
  1094                           ; BSR set to: 0
  1095                           ;main_motor.c: 68:         while(color_detected == 0){
  1096   0011B4  51BC               	movf	main@color_detected& (0+255),w,b
  1097   0011B6  B4D8               	btfsc	status,2,c
  1098   0011B8  EFE0  F008         	goto	u4481
  1099   0011BC  EFE2  F008         	goto	u4480
  1100   0011C0                     u4481:
  1101   0011C0  EFB8  F008         	goto	l4266
  1102   0011C4                     u4480:
  1103   0011C4                     
  1104                           ; BSR set to: 0
  1105                           ;main_motor.c: 75:         if(color_detected != 0 && color_detected != 8){
  1106   0011C4  51BC               	movf	main@color_detected& (0+255),w,b
  1107   0011C6  B4D8               	btfsc	status,2,c
  1108   0011C8  EFE8  F008         	goto	u4491
  1109   0011CC  EFEA  F008         	goto	u4490
  1110   0011D0                     u4491:
  1111   0011D0  EF47  F009         	goto	l4302
  1112   0011D4                     u4490:
  1113   0011D4                     
  1114                           ; BSR set to: 0
  1115   0011D4  0E08               	movlw	8
  1116   0011D6  19BC               	xorwf	main@color_detected& (0+255),w,b
  1117   0011D8  B4D8               	btfsc	status,2,c
  1118   0011DA  EFF1  F008         	goto	u4501
  1119   0011DE  EFF3  F008         	goto	u4500
  1120   0011E2                     u4501:
  1121   0011E2  EF47  F009         	goto	l4302
  1122   0011E6                     u4500:
  1123   0011E6                     
  1124                           ; BSR set to: 0
  1125                           ;main_motor.c: 76:             AppendTime((b-6),&time_index,time_array);
  1126   0011E6  0EFA               	movlw	250
  1127   0011E8  25BA               	addwf	main@b& (0+255),w,b
  1128   0011EA  6E09               	movwf	AppendTime@temp^0,c
  1129   0011EC  0EFF               	movlw	255
  1130   0011EE  21BB               	addwfc	(main@b+1)& (0+255),w,b
  1131   0011F0  6E0A               	movwf	(AppendTime@temp+1)^0,c
  1132   0011F2  0E9E               	movlw	low _time_index
  1133   0011F4  6E0B               	movwf	AppendTime@time_index^0,c
  1134   0011F6  0E00               	movlw	high _time_index
  1135   0011F8  6E0C               	movwf	(AppendTime@time_index+1)^0,c
  1136   0011FA  0E3C               	movlw	low _time_array
  1137   0011FC  6E0D               	movwf	AppendTime@time_array^0,c
  1138   0011FE  0E01               	movlw	high _time_array
  1139   001200  6E0E               	movwf	(AppendTime@time_array+1)^0,c
  1140   001202  EC40  F014         	call	_AppendTime	;wreg free
  1141   001206                     
  1142                           ;main_motor.c: 77:             LATHbits.LATH3 = 1;
  1143   001206  8680               	bsf	128,3,c	;volatile
  1144                           
  1145                           ;main_motor.c: 79:             while(b>0){
  1146   001208  EF14  F009         	goto	l4288
  1147   00120C                     l4284:
  1148                           
  1149                           ; BSR set to: 0
  1150                           ;main_motor.c: 80:                 stop(&motorL,&motorR);
  1151   00120C  0EC5               	movlw	low main@motorL
  1152   00120E  6E1C               	movwf	stop@mL^0,c
  1153   001210  0E00               	movlw	high main@motorL
  1154   001212  6E1D               	movwf	(stop@mL+1)^0,c
  1155   001214  0ECE               	movlw	low main@motorR
  1156   001216  6E1E               	movwf	stop@mR^0,c
  1157   001218  0E00               	movlw	high main@motorR
  1158   00121A  6E1F               	movwf	(stop@mR+1)^0,c
  1159   00121C  EC02  F00E         	call	_stop	;wreg free
  1160   001220                     
  1161                           ;main_motor.c: 81:                 b--;
  1162   001220  0100               	movlb	0	; () banked
  1163   001222  07BA               	decf	main@b& (0+255),f,b
  1164   001224  A0D8               	btfss	status,0,c
  1165   001226  07BB               	decf	(main@b+1)& (0+255),f,b
  1166   001228                     l4288:
  1167                           
  1168                           ;main_motor.c: 79:             while(b>0){
  1169   001228  0100               	movlb	0	; () banked
  1170   00122A  51BA               	movf	main@b& (0+255),w,b
  1171   00122C  11BB               	iorwf	(main@b+1)& (0+255),w,b
  1172   00122E  A4D8               	btfss	status,2,c
  1173   001230  EF1C  F009         	goto	u4511
  1174   001234  EF1E  F009         	goto	u4510
  1175   001238                     u4511:
  1176   001238  EF06  F009         	goto	l4284
  1177   00123C                     u4510:
  1178   00123C                     
  1179                           ; BSR set to: 0
  1180                           ;main_motor.c: 83:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1181   00123C  0E09               	movlw	9
  1182   00123E  0100               	movlb	0	; () banked
  1183   001240  6FB8               	movwf	(??_main+1)& (0+255),b
  1184   001242  0E1E               	movlw	30
  1185   001244  6FB7               	movwf	??_main& (0+255),b
  1186   001246  0EE4               	movlw	228
  1187   001248                     u4547:
  1188   001248  2EE8               	decfsz	wreg,f,c
  1189   00124A  D7FE               	bra	u4547
  1190   00124C  2FB7               	decfsz	??_main& (0+255),f,b
  1191   00124E  D7FC               	bra	u4547
  1192   001250  2FB8               	decfsz	(??_main+1)& (0+255),f,b
  1193   001252  D7FA               	bra	u4547
  1194   001254  F000               	nop	
  1195   001256                     
  1196                           ;main_motor.c: 84:             LATHbits.LATH3 = 0;
  1197   001256  9680               	bcf	128,3,c	;volatile
  1198   001258                     
  1199                           ;main_motor.c: 86:             MoveBuggy(color_detected,&motorL,&motorR);
  1200   001258  0100               	movlb	0	; () banked
  1201   00125A  51BC               	movf	main@color_detected& (0+255),w,b
  1202   00125C  6FB7               	movwf	??_main& (0+255),b
  1203   00125E  6BB8               	clrf	(??_main+1)& (0+255),b
  1204   001260  C0B7  F035         	movff	??_main,MoveBuggy@color_detected
  1205   001264  C0B8  F036         	movff	??_main+1,MoveBuggy@color_detected+1
  1206   001268  0EC5               	movlw	low main@motorL
  1207   00126A  6E37               	movwf	MoveBuggy@mL^0,c
  1208   00126C  0E00               	movlw	high main@motorL
  1209   00126E  6E38               	movwf	(MoveBuggy@mL+1)^0,c
  1210   001270  0ECE               	movlw	low main@motorR
  1211   001272  6E39               	movwf	MoveBuggy@mR^0,c
  1212   001274  0E00               	movlw	high main@motorR
  1213   001276  6E3A               	movwf	(MoveBuggy@mR+1)^0,c
  1214   001278  EC20  F007         	call	_MoveBuggy	;wreg free
  1215   00127C                     
  1216                           ;main_motor.c: 87:             color_detected = 0;
  1217   00127C  0E00               	movlw	0
  1218   00127E  0100               	movlb	0	; () banked
  1219   001280  6FBC               	movwf	main@color_detected& (0+255),b
  1220   001282                     
  1221                           ; BSR set to: 0
  1222                           ;main_motor.c: 88:             color_flag = 0;
  1223   001282  0E00               	movlw	0
  1224   001284  6E55               	movwf	_color_flag^0,c
  1225   001286                     
  1226                           ; BSR set to: 0
  1227                           ;main_motor.c: 89:             lost_timer = 0;
  1228   001286  0E00               	movlw	0
  1229   001288  6FB9               	movwf	main@lost_timer& (0+255),b
  1230                           
  1231                           ;main_motor.c: 90:         }
  1232   00128A  EFB1  F008         	goto	l4264
  1233   00128E                     l4302:
  1234                           
  1235                           ; BSR set to: 0
  1236   00128E  0E08               	movlw	8
  1237   001290  19BC               	xorwf	main@color_detected& (0+255),w,b
  1238   001292  A4D8               	btfss	status,2,c
  1239   001294  EF4E  F009         	goto	u4521
  1240   001298  EF50  F009         	goto	u4520
  1241   00129C                     u4521:
  1242   00129C  EFB1  F008         	goto	l4264
  1243   0012A0                     u4520:
  1244   0012A0                     
  1245                           ; BSR set to: 0
  1246                           ;main_motor.c: 94:             AppendTime((b-6),&time_index,time_array);
  1247   0012A0  0EFA               	movlw	250
  1248   0012A2  25BA               	addwf	main@b& (0+255),w,b
  1249   0012A4  6E09               	movwf	AppendTime@temp^0,c
  1250   0012A6  0EFF               	movlw	255
  1251   0012A8  21BB               	addwfc	(main@b+1)& (0+255),w,b
  1252   0012AA  6E0A               	movwf	(AppendTime@temp+1)^0,c
  1253   0012AC  0E9E               	movlw	low _time_index
  1254   0012AE  6E0B               	movwf	AppendTime@time_index^0,c
  1255   0012B0  0E00               	movlw	high _time_index
  1256   0012B2  6E0C               	movwf	(AppendTime@time_index+1)^0,c
  1257   0012B4  0E3C               	movlw	low _time_array
  1258   0012B6  6E0D               	movwf	AppendTime@time_array^0,c
  1259   0012B8  0E01               	movlw	high _time_array
  1260   0012BA  6E0E               	movwf	(AppendTime@time_array+1)^0,c
  1261   0012BC  EC40  F014         	call	_AppendTime	;wreg free
  1262   0012C0                     
  1263                           ;main_motor.c: 95:             LATDbits.LATD7 = 1;
  1264   0012C0  8E7C               	bsf	124,7,c	;volatile
  1265                           
  1266                           ;main_motor.c: 97:             while(b>0){
  1267   0012C2  EF71  F009         	goto	l4312
  1268   0012C6                     l4308:
  1269                           
  1270                           ; BSR set to: 0
  1271                           ;main_motor.c: 98:                 stop(&motorL,&motorR);
  1272   0012C6  0EC5               	movlw	low main@motorL
  1273   0012C8  6E1C               	movwf	stop@mL^0,c
  1274   0012CA  0E00               	movlw	high main@motorL
  1275   0012CC  6E1D               	movwf	(stop@mL+1)^0,c
  1276   0012CE  0ECE               	movlw	low main@motorR
  1277   0012D0  6E1E               	movwf	stop@mR^0,c
  1278   0012D2  0E00               	movlw	high main@motorR
  1279   0012D4  6E1F               	movwf	(stop@mR+1)^0,c
  1280   0012D6  EC02  F00E         	call	_stop	;wreg free
  1281   0012DA                     
  1282                           ;main_motor.c: 99:                 b--;
  1283   0012DA  0100               	movlb	0	; () banked
  1284   0012DC  07BA               	decf	main@b& (0+255),f,b
  1285   0012DE  A0D8               	btfss	status,0,c
  1286   0012E0  07BB               	decf	(main@b+1)& (0+255),f,b
  1287   0012E2                     l4312:
  1288                           
  1289                           ;main_motor.c: 97:             while(b>0){
  1290   0012E2  0100               	movlb	0	; () banked
  1291   0012E4  51BA               	movf	main@b& (0+255),w,b
  1292   0012E6  11BB               	iorwf	(main@b+1)& (0+255),w,b
  1293   0012E8  A4D8               	btfss	status,2,c
  1294   0012EA  EF79  F009         	goto	u4531
  1295   0012EE  EF7B  F009         	goto	u4530
  1296   0012F2                     u4531:
  1297   0012F2  EF63  F009         	goto	l4308
  1298   0012F6                     u4530:
  1299   0012F6                     
  1300                           ; BSR set to: 0
  1301                           ;main_motor.c: 101:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1302   0012F6  0E09               	movlw	9
  1303   0012F8  0100               	movlb	0	; () banked
  1304   0012FA  6FB8               	movwf	(??_main+1)& (0+255),b
  1305   0012FC  0E1E               	movlw	30
  1306   0012FE  6FB7               	movwf	??_main& (0+255),b
  1307   001300  0EE4               	movlw	228
  1308   001302                     u4557:
  1309   001302  2EE8               	decfsz	wreg,f,c
  1310   001304  D7FE               	bra	u4557
  1311   001306  2FB7               	decfsz	??_main& (0+255),f,b
  1312   001308  D7FC               	bra	u4557
  1313   00130A  2FB8               	decfsz	(??_main+1)& (0+255),f,b
  1314   00130C  D7FA               	bra	u4557
  1315   00130E  F000               	nop	
  1316   001310                     
  1317                           ;main_motor.c: 102:             WhiteInstructions(&motorL,&motorR);
  1318   001310  0EC5               	movlw	low main@motorL
  1319   001312  6E3B               	movwf	WhiteInstructions@mL^0,c
  1320   001314  0E00               	movlw	high main@motorL
  1321   001316  6E3C               	movwf	(WhiteInstructions@mL+1)^0,c
  1322   001318  0ECE               	movlw	low main@motorR
  1323   00131A  6E3D               	movwf	WhiteInstructions@mR^0,c
  1324   00131C  0E00               	movlw	high main@motorR
  1325   00131E  6E3E               	movwf	(WhiteInstructions@mR+1)^0,c
  1326   001320  EC8D  F00D         	call	_WhiteInstructions	;wreg free
  1327   001324                     
  1328                           ;main_motor.c: 103:             LATDbits.LATD7 = 0;
  1329   001324  9E7C               	bcf	124,7,c	;volatile
  1330   001326                     
  1331                           ;main_motor.c: 104:             color_detected = 0;
  1332   001326  0E00               	movlw	0
  1333   001328  0100               	movlb	0	; () banked
  1334   00132A  6FBC               	movwf	main@color_detected& (0+255),b
  1335   00132C                     
  1336                           ; BSR set to: 0
  1337                           ;main_motor.c: 105:             lost_timer = 0;
  1338   00132C  0E00               	movlw	0
  1339   00132E  6FB9               	movwf	main@lost_timer& (0+255),b
  1340   001330  0003               	sleep		;# 
  1341   001332  EFB1  F008         	goto	l4264
  1342   001336  EF2C  F000         	goto	start
  1343   00133A                     __end_of_main:
  1344                           	callstack 0
  1345                           
  1346 ;; *************** function _initDCmotorsPWM *****************
  1347 ;; Defined at:
  1348 ;;		line 5 in file "dc_motor.c"
  1349 ;; Parameters:    Size  Location     Type
  1350 ;;  PWMperiod       2    8[COMRAM] unsigned int 
  1351 ;; Auto vars:     Size  Location     Type
  1352 ;;		None
  1353 ;; Return value:  Size  Location     Type
  1354 ;;                  1    wreg      void 
  1355 ;; Registers used:
  1356 ;;		wreg, status,2
  1357 ;; Tracked objects:
  1358 ;;		On entry : 0/0
  1359 ;;		On exit  : 0/0
  1360 ;;		Unchanged: 0/0
  1361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1362 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1365 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1366 ;;Total ram usage:        2 bytes
  1367 ;; Hardware stack levels used: 1
  1368 ;; Hardware stack levels required when called: 7
  1369 ;; This function calls:
  1370 ;;		Nothing
  1371 ;; This function is called by:
  1372 ;;		_main
  1373 ;; This function uses a non-reentrant model
  1374 ;;
  1375                           
  1376                           	psect	text1
  1377   00204A                     __ptext1:
  1378                           	callstack 0
  1379   00204A                     _initDCmotorsPWM:
  1380                           	callstack 23
  1381   00204A                     
  1382                           ;dc_motor.c: 7:     LATEbits.LATE2 = 0;
  1383   00204A  947D               	bcf	125,2,c	;volatile
  1384                           
  1385                           ;dc_motor.c: 8:     TRISEbits.TRISE2 = 0;
  1386   00204C  9485               	bcf	133,2,c	;volatile
  1387                           
  1388                           ;dc_motor.c: 9:     LATEbits.LATE4 = 0;
  1389   00204E  987D               	bcf	125,4,c	;volatile
  1390                           
  1391                           ;dc_motor.c: 10:     TRISEbits.TRISE4 = 0;
  1392   002050  9885               	bcf	133,4,c	;volatile
  1393                           
  1394                           ;dc_motor.c: 11:     LATCbits.LATC7 = 0;
  1395   002052  9E7B               	bcf	123,7,c	;volatile
  1396                           
  1397                           ;dc_motor.c: 12:     TRISCbits.TRISC7 = 0;
  1398   002054  9E83               	bcf	131,7,c	;volatile
  1399                           
  1400                           ;dc_motor.c: 13:     LATGbits.LATG6 = 0;
  1401   002056  9C7F               	bcf	127,6,c	;volatile
  1402                           
  1403                           ;dc_motor.c: 14:     TRISGbits.TRISG6 = 0;
  1404   002058  9C87               	bcf	135,6,c	;volatile
  1405   00205A                     
  1406                           ;dc_motor.c: 17:     RE2PPS=0x05;
  1407   00205A  0E05               	movlw	5
  1408   00205C  010E               	movlb	14	; () banked
  1409   00205E  6F74               	movwf	116,b	;volatile
  1410                           
  1411                           ;dc_motor.c: 18:     RE4PPS=0x06;
  1412   002060  0E06               	movlw	6
  1413   002062  6F76               	movwf	118,b	;volatile
  1414                           
  1415                           ;dc_motor.c: 19:     RC7PPS=0x07;
  1416   002064  0E07               	movlw	7
  1417   002066  6F69               	movwf	105,b	;volatile
  1418                           
  1419                           ;dc_motor.c: 20:     RG6PPS=0x08;
  1420   002068  0E08               	movlw	8
  1421   00206A  6F88               	movwf	136,b	;volatile
  1422                           
  1423                           ;dc_motor.c: 23:     T2CONbits.CKPS=0b100;
  1424   00206C  50BD               	movf	189,w,c	;volatile
  1425   00206E  0B8F               	andlw	-113
  1426   002070  0940               	iorlw	64
  1427   002072  6EBD               	movwf	189,c	;volatile
  1428                           
  1429                           ;dc_motor.c: 24:     T2HLTbits.MODE=0b00000;
  1430   002074  0EE0               	movlw	-32
  1431   002076  16BE               	andwf	190,f,c	;volatile
  1432                           
  1433                           ;dc_motor.c: 25:     T2CLKCONbits.CS=0b0001;
  1434   002078  50BF               	movf	191,w,c	;volatile
  1435   00207A  0BF0               	andlw	-16
  1436   00207C  0901               	iorlw	1
  1437   00207E  6EBF               	movwf	191,c	;volatile
  1438   002080                     
  1439                           ; BSR set to: 14
  1440                           ;dc_motor.c: 29:     T2PR=PWMperiod;
  1441   002080  C009  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  1442   002084                     
  1443                           ; BSR set to: 14
  1444                           ;dc_motor.c: 30:     T2CONbits.ON=1;
  1445   002084  8EBD               	bsf	189,7,c	;volatile
  1446                           
  1447                           ;dc_motor.c: 34:     CCPR1H=0;
  1448   002086  0E00               	movlw	0
  1449   002088  6EAA               	movwf	170,c	;volatile
  1450                           
  1451                           ;dc_motor.c: 35:     CCPR2H=0;
  1452   00208A  0E00               	movlw	0
  1453   00208C  6EA6               	movwf	166,c	;volatile
  1454                           
  1455                           ;dc_motor.c: 36:     CCPR3H=0;
  1456   00208E  0E00               	movlw	0
  1457   002090  010F               	movlb	15	; () banked
  1458   002092  6F25               	movwf	37,b	;volatile
  1459                           
  1460                           ;dc_motor.c: 37:     CCPR4H=0;
  1461   002094  0E00               	movlw	0
  1462   002096  6F21               	movwf	33,b	;volatile
  1463                           
  1464                           ;dc_motor.c: 40:     CCPTMRS0bits.C1TSEL=0;
  1465   002098  0EFC               	movlw	-4
  1466   00209A  16AD               	andwf	173,f,c	;volatile
  1467                           
  1468                           ;dc_motor.c: 41:     CCPTMRS0bits.C2TSEL=0;
  1469   00209C  0EF3               	movlw	-13
  1470   00209E  16AD               	andwf	173,f,c	;volatile
  1471                           
  1472                           ;dc_motor.c: 42:     CCPTMRS0bits.C3TSEL=0;
  1473   0020A0  0ECF               	movlw	-49
  1474   0020A2  16AD               	andwf	173,f,c	;volatile
  1475                           
  1476                           ;dc_motor.c: 43:     CCPTMRS0bits.C4TSEL=0;
  1477   0020A4  0E3F               	movlw	-193
  1478   0020A6  16AD               	andwf	173,f,c	;volatile
  1479   0020A8                     
  1480                           ; BSR set to: 15
  1481                           ;dc_motor.c: 46:     CCP1CONbits.FMT=1;
  1482   0020A8  88AB               	bsf	171,4,c	;volatile
  1483                           
  1484                           ;dc_motor.c: 47:     CCP1CONbits.CCP1MODE=0b1100;
  1485   0020AA  50AB               	movf	171,w,c	;volatile
  1486   0020AC  0BF0               	andlw	-16
  1487   0020AE  090C               	iorlw	12
  1488   0020B0  6EAB               	movwf	171,c	;volatile
  1489   0020B2                     
  1490                           ; BSR set to: 15
  1491                           ;dc_motor.c: 48:     CCP1CONbits.EN=1;
  1492   0020B2  8EAB               	bsf	171,7,c	;volatile
  1493   0020B4                     
  1494                           ; BSR set to: 15
  1495                           ;dc_motor.c: 50:     CCP2CONbits.FMT=1;
  1496   0020B4  88A7               	bsf	167,4,c	;volatile
  1497                           
  1498                           ;dc_motor.c: 51:     CCP2CONbits.CCP2MODE=0b1100;
  1499   0020B6  50A7               	movf	167,w,c	;volatile
  1500   0020B8  0BF0               	andlw	-16
  1501   0020BA  090C               	iorlw	12
  1502   0020BC  6EA7               	movwf	167,c	;volatile
  1503   0020BE                     
  1504                           ; BSR set to: 15
  1505                           ;dc_motor.c: 52:     CCP2CONbits.EN=1;
  1506   0020BE  8EA7               	bsf	167,7,c	;volatile
  1507   0020C0                     
  1508                           ; BSR set to: 15
  1509                           ;dc_motor.c: 54:     CCP3CONbits.FMT=1;
  1510   0020C0  8926               	bsf	38,4,b	;volatile
  1511                           
  1512                           ;dc_motor.c: 55:     CCP3CONbits.CCP3MODE=0b1100;
  1513   0020C2  5126               	movf	38,w,b	;volatile
  1514   0020C4  0BF0               	andlw	-16
  1515   0020C6  090C               	iorlw	12
  1516   0020C8  6F26               	movwf	38,b	;volatile
  1517   0020CA                     
  1518                           ; BSR set to: 15
  1519                           ;dc_motor.c: 56:     CCP3CONbits.EN=1;
  1520   0020CA  8F26               	bsf	38,7,b	;volatile
  1521   0020CC                     
  1522                           ; BSR set to: 15
  1523                           ;dc_motor.c: 58:     CCP4CONbits.FMT=1;
  1524   0020CC  8922               	bsf	34,4,b	;volatile
  1525                           
  1526                           ;dc_motor.c: 59:     CCP4CONbits.CCP4MODE=0b1100;
  1527   0020CE  5122               	movf	34,w,b	;volatile
  1528   0020D0  0BF0               	andlw	-16
  1529   0020D2  090C               	iorlw	12
  1530   0020D4  6F22               	movwf	34,b	;volatile
  1531   0020D6                     
  1532                           ; BSR set to: 15
  1533                           ;dc_motor.c: 60:     CCP4CONbits.EN=1;
  1534   0020D6  8F22               	bsf	34,7,b	;volatile
  1535   0020D8                     
  1536                           ; BSR set to: 15
  1537   0020D8  0012               	return		;funcret
  1538   0020DA                     __end_of_initDCmotorsPWM:
  1539                           	callstack 0
  1540                           
  1541 ;; *************** function _detect_color *****************
  1542 ;; Defined at:
  1543 ;;		line 99 in file "color.c"
  1544 ;; Parameters:    Size  Location     Type
  1545 ;;  tempval         2    4[BANK0 ] PTR struct RGB_val
  1546 ;;		 -> main@initial_color(8), 
  1547 ;;  lost_timer      2    6[BANK0 ] PTR unsigned char 
  1548 ;;		 -> RAM(3561), 
  1549 ;; Auto vars:     Size  Location     Type
  1550 ;;  dist_B          1   23[BANK0 ] unsigned char 
  1551 ;;  dist_G          1   22[BANK0 ] unsigned char 
  1552 ;;  dist_R          1   21[BANK0 ] unsigned char 
  1553 ;;  color           1   20[BANK0 ] unsigned char 
  1554 ;; Return value:  Size  Location     Type
  1555 ;;                  1    wreg      unsigned char 
  1556 ;; Registers used:
  1557 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1558 ;; Tracked objects:
  1559 ;;		On entry : 0/0
  1560 ;;		On exit  : 0/0
  1561 ;;		Unchanged: 0/0
  1562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1563 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1564 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1565 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1566 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1567 ;;Total ram usage:       20 bytes
  1568 ;; Hardware stack levels used: 1
  1569 ;; Hardware stack levels required when called: 8
  1570 ;; This function calls:
  1571 ;;		___fldiv
  1572 ;;		___flmul
  1573 ;;		___fltol
  1574 ;;		___xxtofl
  1575 ;; This function is called by:
  1576 ;;		_main
  1577 ;; This function uses a non-reentrant model
  1578 ;;
  1579                           
  1580                           	psect	text2
  1581   00005C                     __ptext2:
  1582                           	callstack 0
  1583   00005C                     _detect_color:
  1584                           	callstack 22
  1585   00005C                     
  1586                           ;color.c: 99: unsigned char detect_color(RGB_val *tempval, unsigned char *lost_timer);co
      +                          lor.c: 100: {;color.c: 101:     unsigned char color = 0;
  1587   00005C  0E00               	movlw	0
  1588   00005E  0100               	movlb	0	; () banked
  1589   000060  6FB3               	movwf	detect_color@color& (0+255),b
  1590   000062                     
  1591                           ; BSR set to: 0
  1592                           ;color.c: 104:     unsigned char dist_R, dist_G, dist_B;;color.c: 105:     dist_R = ((fl
      +                          oat)(tempval->R)/(float)(tempval->R + tempval->G + tempval->B))*100;
  1593   000062  0E00               	movlw	0
  1594   000064  6E34               	movwf	___flmul@a^0,c
  1595   000066  0E00               	movlw	0
  1596   000068  6E35               	movwf	(___flmul@a+1)^0,c
  1597   00006A  0EC8               	movlw	200
  1598   00006C  6E36               	movwf	(___flmul@a+2)^0,c
  1599   00006E  0E42               	movlw	66
  1600   000070  6E37               	movwf	(___flmul@a+3)^0,c
  1601   000072  EE20 F004          	lfsr	2,4
  1602   000076  51A3               	movf	detect_color@tempval& (0+255),w,b
  1603   000078  26D9               	addwf	fsr2l,f,c
  1604   00007A  51A4               	movf	(detect_color@tempval+1)& (0+255),w,b
  1605   00007C  22DA               	addwfc	fsr2h,f,c
  1606   00007E  CFDE F0A7          	movff	postinc2,??_detect_color
  1607   000082  CFDD F0A8          	movff	postdec2,??_detect_color+1
  1608   000086  EE20 F002          	lfsr	2,2
  1609   00008A  51A3               	movf	detect_color@tempval& (0+255),w,b
  1610   00008C  26D9               	addwf	fsr2l,f,c
  1611   00008E  51A4               	movf	(detect_color@tempval+1)& (0+255),w,b
  1612   000090  22DA               	addwfc	fsr2h,f,c
  1613   000092  CFDE F0A9          	movff	postinc2,??_detect_color+2
  1614   000096  CFDD F0AA          	movff	postdec2,??_detect_color+3
  1615   00009A  C0A3  FFD9         	movff	detect_color@tempval,fsr2l
  1616   00009E  C0A4  FFDA         	movff	detect_color@tempval+1,fsr2h
  1617   0000A2  CFDE F0AB          	movff	postinc2,??_detect_color+4
  1618   0000A6  CFDD F0AC          	movff	postdec2,??_detect_color+5
  1619   0000AA  51A9               	movf	(??_detect_color+2)& (0+255),w,b
  1620   0000AC  25AB               	addwf	(??_detect_color+4)& (0+255),w,b
  1621   0000AE  6FAD               	movwf	(??_detect_color+6)& (0+255),b
  1622   0000B0  51AA               	movf	(??_detect_color+3)& (0+255),w,b
  1623   0000B2  21AC               	addwfc	(??_detect_color+5)& (0+255),w,b
  1624   0000B4  6FAE               	movwf	(??_detect_color+7)& (0+255),b
  1625   0000B6  51A7               	movf	??_detect_color& (0+255),w,b
  1626   0000B8  25AD               	addwf	(??_detect_color+6)& (0+255),w,b
  1627   0000BA  6FAF               	movwf	(??_detect_color+8)& (0+255),b
  1628   0000BC  51A8               	movf	(??_detect_color+1)& (0+255),w,b
  1629   0000BE  21AE               	addwfc	(??_detect_color+7)& (0+255),w,b
  1630   0000C0  6FB0               	movwf	(??_detect_color+9)& (0+255),b
  1631   0000C2  C0AF  F009         	movff	??_detect_color+8,___xxtofl@val
  1632   0000C6  C0B0  F00A         	movff	??_detect_color+9,___xxtofl@val+1
  1633   0000CA  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1634   0000CC  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1635   0000CE  0E00               	movlw	0
  1636   0000D0  EC9D  F009         	call	___xxtofl
  1637   0000D4  C009  F01B         	movff	?___xxtofl,___fldiv@a
  1638   0000D8  C00A  F01C         	movff	?___xxtofl+1,___fldiv@a+1
  1639   0000DC  C00B  F01D         	movff	?___xxtofl+2,___fldiv@a+2
  1640   0000E0  C00C  F01E         	movff	?___xxtofl+3,___fldiv@a+3
  1641   0000E4  C0A3  FFD9         	movff	detect_color@tempval,fsr2l
  1642   0000E8  C0A4  FFDA         	movff	detect_color@tempval+1,fsr2h
  1643   0000EC  CFDE F0B1          	movff	postinc2,??_detect_color+10
  1644   0000F0  CFDD F0B2          	movff	postdec2,??_detect_color+11
  1645   0000F4  C0B1  F009         	movff	??_detect_color+10,___xxtofl@val
  1646   0000F8  C0B2  F00A         	movff	??_detect_color+11,___xxtofl@val+1
  1647   0000FC  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1648   0000FE  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1649   000100  0E00               	movlw	0
  1650   000102  EC9D  F009         	call	___xxtofl
  1651   000106  C009  F017         	movff	?___xxtofl,___fldiv@b
  1652   00010A  C00A  F018         	movff	?___xxtofl+1,___fldiv@b+1
  1653   00010E  C00B  F019         	movff	?___xxtofl+2,___fldiv@b+2
  1654   000112  C00C  F01A         	movff	?___xxtofl+3,___fldiv@b+3
  1655   000116  EC53  F005         	call	___fldiv	;wreg free
  1656   00011A  C017  F030         	movff	?___fldiv,___flmul@b
  1657   00011E  C018  F031         	movff	?___fldiv+1,___flmul@b+1
  1658   000122  C019  F032         	movff	?___fldiv+2,___flmul@b+2
  1659   000126  C01A  F033         	movff	?___fldiv+3,___flmul@b+3
  1660   00012A  EC3E  F003         	call	___flmul	;wreg free
  1661   00012E  C030  F049         	movff	?___flmul,___fltol@f1
  1662   000132  C031  F04A         	movff	?___flmul+1,___fltol@f1+1
  1663   000136  C032  F04B         	movff	?___flmul+2,___fltol@f1+2
  1664   00013A  C033  F04C         	movff	?___flmul+3,___fltol@f1+3
  1665   00013E  EC2D  F00B         	call	___fltol	;wreg free
  1666   000142  5049               	movf	?___fltol^0,w,c
  1667   000144  0100               	movlb	0	; () banked
  1668   000146  6FB4               	movwf	detect_color@dist_R& (0+255),b
  1669   000148                     
  1670                           ; BSR set to: 0
  1671                           ;color.c: 106:     dist_G = ((float)(tempval->G)/(float)(tempval->R + tempval->G + tempv
      +                          al->B))*100;
  1672   000148  0E00               	movlw	0
  1673   00014A  6E34               	movwf	___flmul@a^0,c
  1674   00014C  0E00               	movlw	0
  1675   00014E  6E35               	movwf	(___flmul@a+1)^0,c
  1676   000150  0EC8               	movlw	200
  1677   000152  6E36               	movwf	(___flmul@a+2)^0,c
  1678   000154  0E42               	movlw	66
  1679   000156  6E37               	movwf	(___flmul@a+3)^0,c
  1680   000158  EE20 F004          	lfsr	2,4
  1681   00015C  51A3               	movf	detect_color@tempval& (0+255),w,b
  1682   00015E  26D9               	addwf	fsr2l,f,c
  1683   000160  51A4               	movf	(detect_color@tempval+1)& (0+255),w,b
  1684   000162  22DA               	addwfc	fsr2h,f,c
  1685   000164  CFDE F0A7          	movff	postinc2,??_detect_color
  1686   000168  CFDD F0A8          	movff	postdec2,??_detect_color+1
  1687   00016C  EE20 F002          	lfsr	2,2
  1688   000170  51A3               	movf	detect_color@tempval& (0+255),w,b
  1689   000172  26D9               	addwf	fsr2l,f,c
  1690   000174  51A4               	movf	(detect_color@tempval+1)& (0+255),w,b
  1691   000176  22DA               	addwfc	fsr2h,f,c
  1692   000178  CFDE F0A9          	movff	postinc2,??_detect_color+2
  1693   00017C  CFDD F0AA          	movff	postdec2,??_detect_color+3
  1694   000180  C0A3  FFD9         	movff	detect_color@tempval,fsr2l
  1695   000184  C0A4  FFDA         	movff	detect_color@tempval+1,fsr2h
  1696   000188  CFDE F0AB          	movff	postinc2,??_detect_color+4
  1697   00018C  CFDD F0AC          	movff	postdec2,??_detect_color+5
  1698   000190  51A9               	movf	(??_detect_color+2)& (0+255),w,b
  1699   000192  25AB               	addwf	(??_detect_color+4)& (0+255),w,b
  1700   000194  6FAD               	movwf	(??_detect_color+6)& (0+255),b
  1701   000196  51AA               	movf	(??_detect_color+3)& (0+255),w,b
  1702   000198  21AC               	addwfc	(??_detect_color+5)& (0+255),w,b
  1703   00019A  6FAE               	movwf	(??_detect_color+7)& (0+255),b
  1704   00019C  51A7               	movf	??_detect_color& (0+255),w,b
  1705   00019E  25AD               	addwf	(??_detect_color+6)& (0+255),w,b
  1706   0001A0  6FAF               	movwf	(??_detect_color+8)& (0+255),b
  1707   0001A2  51A8               	movf	(??_detect_color+1)& (0+255),w,b
  1708   0001A4  21AE               	addwfc	(??_detect_color+7)& (0+255),w,b
  1709   0001A6  6FB0               	movwf	(??_detect_color+9)& (0+255),b
  1710   0001A8  C0AF  F009         	movff	??_detect_color+8,___xxtofl@val
  1711   0001AC  C0B0  F00A         	movff	??_detect_color+9,___xxtofl@val+1
  1712   0001B0  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1713   0001B2  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1714   0001B4  0E00               	movlw	0
  1715   0001B6  EC9D  F009         	call	___xxtofl
  1716   0001BA  C009  F01B         	movff	?___xxtofl,___fldiv@a
  1717   0001BE  C00A  F01C         	movff	?___xxtofl+1,___fldiv@a+1
  1718   0001C2  C00B  F01D         	movff	?___xxtofl+2,___fldiv@a+2
  1719   0001C6  C00C  F01E         	movff	?___xxtofl+3,___fldiv@a+3
  1720   0001CA  0100               	movlb	0	; () banked
  1721   0001CC  EE20 F002          	lfsr	2,2
  1722   0001D0  51A3               	movf	detect_color@tempval& (0+255),w,b
  1723   0001D2  26D9               	addwf	fsr2l,f,c
  1724   0001D4  51A4               	movf	(detect_color@tempval+1)& (0+255),w,b
  1725   0001D6  22DA               	addwfc	fsr2h,f,c
  1726   0001D8  CFDE F0B1          	movff	postinc2,??_detect_color+10
  1727   0001DC  CFDD F0B2          	movff	postdec2,??_detect_color+11
  1728   0001E0  C0B1  F009         	movff	??_detect_color+10,___xxtofl@val
  1729   0001E4  C0B2  F00A         	movff	??_detect_color+11,___xxtofl@val+1
  1730   0001E8  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1731   0001EA  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1732   0001EC  0E00               	movlw	0
  1733   0001EE  EC9D  F009         	call	___xxtofl
  1734   0001F2  C009  F017         	movff	?___xxtofl,___fldiv@b
  1735   0001F6  C00A  F018         	movff	?___xxtofl+1,___fldiv@b+1
  1736   0001FA  C00B  F019         	movff	?___xxtofl+2,___fldiv@b+2
  1737   0001FE  C00C  F01A         	movff	?___xxtofl+3,___fldiv@b+3
  1738   000202  EC53  F005         	call	___fldiv	;wreg free
  1739   000206  C017  F030         	movff	?___fldiv,___flmul@b
  1740   00020A  C018  F031         	movff	?___fldiv+1,___flmul@b+1
  1741   00020E  C019  F032         	movff	?___fldiv+2,___flmul@b+2
  1742   000212  C01A  F033         	movff	?___fldiv+3,___flmul@b+3
  1743   000216  EC3E  F003         	call	___flmul	;wreg free
  1744   00021A  C030  F049         	movff	?___flmul,___fltol@f1
  1745   00021E  C031  F04A         	movff	?___flmul+1,___fltol@f1+1
  1746   000222  C032  F04B         	movff	?___flmul+2,___fltol@f1+2
  1747   000226  C033  F04C         	movff	?___flmul+3,___fltol@f1+3
  1748   00022A  EC2D  F00B         	call	___fltol	;wreg free
  1749   00022E  5049               	movf	?___fltol^0,w,c
  1750   000230  0100               	movlb	0	; () banked
  1751   000232  6FB5               	movwf	detect_color@dist_G& (0+255),b
  1752   000234                     
  1753                           ; BSR set to: 0
  1754                           ;color.c: 107:     dist_B = ((float)(tempval->B)/(float)(tempval->R + tempval->G + tempv
      +                          al->B))*100;
  1755   000234  0E00               	movlw	0
  1756   000236  6E34               	movwf	___flmul@a^0,c
  1757   000238  0E00               	movlw	0
  1758   00023A  6E35               	movwf	(___flmul@a+1)^0,c
  1759   00023C  0EC8               	movlw	200
  1760   00023E  6E36               	movwf	(___flmul@a+2)^0,c
  1761   000240  0E42               	movlw	66
  1762   000242  6E37               	movwf	(___flmul@a+3)^0,c
  1763   000244  EE20 F004          	lfsr	2,4
  1764   000248  51A3               	movf	detect_color@tempval& (0+255),w,b
  1765   00024A  26D9               	addwf	fsr2l,f,c
  1766   00024C  51A4               	movf	(detect_color@tempval+1)& (0+255),w,b
  1767   00024E  22DA               	addwfc	fsr2h,f,c
  1768   000250  CFDE F0A7          	movff	postinc2,??_detect_color
  1769   000254  CFDD F0A8          	movff	postdec2,??_detect_color+1
  1770   000258  EE20 F002          	lfsr	2,2
  1771   00025C  51A3               	movf	detect_color@tempval& (0+255),w,b
  1772   00025E  26D9               	addwf	fsr2l,f,c
  1773   000260  51A4               	movf	(detect_color@tempval+1)& (0+255),w,b
  1774   000262  22DA               	addwfc	fsr2h,f,c
  1775   000264  CFDE F0A9          	movff	postinc2,??_detect_color+2
  1776   000268  CFDD F0AA          	movff	postdec2,??_detect_color+3
  1777   00026C  C0A3  FFD9         	movff	detect_color@tempval,fsr2l
  1778   000270  C0A4  FFDA         	movff	detect_color@tempval+1,fsr2h
  1779   000274  CFDE F0AB          	movff	postinc2,??_detect_color+4
  1780   000278  CFDD F0AC          	movff	postdec2,??_detect_color+5
  1781   00027C  51A9               	movf	(??_detect_color+2)& (0+255),w,b
  1782   00027E  25AB               	addwf	(??_detect_color+4)& (0+255),w,b
  1783   000280  6FAD               	movwf	(??_detect_color+6)& (0+255),b
  1784   000282  51AA               	movf	(??_detect_color+3)& (0+255),w,b
  1785   000284  21AC               	addwfc	(??_detect_color+5)& (0+255),w,b
  1786   000286  6FAE               	movwf	(??_detect_color+7)& (0+255),b
  1787   000288  51A7               	movf	??_detect_color& (0+255),w,b
  1788   00028A  25AD               	addwf	(??_detect_color+6)& (0+255),w,b
  1789   00028C  6FAF               	movwf	(??_detect_color+8)& (0+255),b
  1790   00028E  51A8               	movf	(??_detect_color+1)& (0+255),w,b
  1791   000290  21AE               	addwfc	(??_detect_color+7)& (0+255),w,b
  1792   000292  6FB0               	movwf	(??_detect_color+9)& (0+255),b
  1793   000294  C0AF  F009         	movff	??_detect_color+8,___xxtofl@val
  1794   000298  C0B0  F00A         	movff	??_detect_color+9,___xxtofl@val+1
  1795   00029C  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1796   00029E  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1797   0002A0  0E00               	movlw	0
  1798   0002A2  EC9D  F009         	call	___xxtofl
  1799   0002A6  C009  F01B         	movff	?___xxtofl,___fldiv@a
  1800   0002AA  C00A  F01C         	movff	?___xxtofl+1,___fldiv@a+1
  1801   0002AE  C00B  F01D         	movff	?___xxtofl+2,___fldiv@a+2
  1802   0002B2  C00C  F01E         	movff	?___xxtofl+3,___fldiv@a+3
  1803   0002B6  0100               	movlb	0	; () banked
  1804   0002B8  EE20 F004          	lfsr	2,4
  1805   0002BC  51A3               	movf	detect_color@tempval& (0+255),w,b
  1806   0002BE  26D9               	addwf	fsr2l,f,c
  1807   0002C0  51A4               	movf	(detect_color@tempval+1)& (0+255),w,b
  1808   0002C2  22DA               	addwfc	fsr2h,f,c
  1809   0002C4  CFDE F0B1          	movff	postinc2,??_detect_color+10
  1810   0002C8  CFDD F0B2          	movff	postdec2,??_detect_color+11
  1811   0002CC  C0B1  F009         	movff	??_detect_color+10,___xxtofl@val
  1812   0002D0  C0B2  F00A         	movff	??_detect_color+11,___xxtofl@val+1
  1813   0002D4  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1814   0002D6  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1815   0002D8  0E00               	movlw	0
  1816   0002DA  EC9D  F009         	call	___xxtofl
  1817   0002DE  C009  F017         	movff	?___xxtofl,___fldiv@b
  1818   0002E2  C00A  F018         	movff	?___xxtofl+1,___fldiv@b+1
  1819   0002E6  C00B  F019         	movff	?___xxtofl+2,___fldiv@b+2
  1820   0002EA  C00C  F01A         	movff	?___xxtofl+3,___fldiv@b+3
  1821   0002EE  EC53  F005         	call	___fldiv	;wreg free
  1822   0002F2  C017  F030         	movff	?___fldiv,___flmul@b
  1823   0002F6  C018  F031         	movff	?___fldiv+1,___flmul@b+1
  1824   0002FA  C019  F032         	movff	?___fldiv+2,___flmul@b+2
  1825   0002FE  C01A  F033         	movff	?___fldiv+3,___flmul@b+3
  1826   000302  EC3E  F003         	call	___flmul	;wreg free
  1827   000306  C030  F049         	movff	?___flmul,___fltol@f1
  1828   00030A  C031  F04A         	movff	?___flmul+1,___fltol@f1+1
  1829   00030E  C032  F04B         	movff	?___flmul+2,___fltol@f1+2
  1830   000312  C033  F04C         	movff	?___flmul+3,___fltol@f1+3
  1831   000316  EC2D  F00B         	call	___fltol	;wreg free
  1832   00031A  5049               	movf	?___fltol^0,w,c
  1833   00031C  0100               	movlb	0	; () banked
  1834   00031E  6FB6               	movwf	detect_color@dist_B& (0+255),b
  1835   000320                     
  1836                           ; BSR set to: 0
  1837                           ;color.c: 109:     if(color_flag){
  1838   000320  5055               	movf	_color_flag^0,w,c
  1839   000322  B4D8               	btfsc	status,2,c
  1840   000324  EF96  F001         	goto	u3981
  1841   000328  EF98  F001         	goto	u3980
  1842   00032C                     u3981:
  1843   00032C  EF3A  F003         	goto	l42
  1844   000330                     u3980:
  1845   000330                     
  1846                           ; BSR set to: 0
  1847                           ;color.c: 110:         if((74<=dist_R) && (dist_R<=76) && (10<=dist_G) && (dist_G<=12) &
      +                          & (13<=dist_B) && (dist_B<=15)){
  1848   000330  0E49               	movlw	73
  1849   000332  65B4               	cpfsgt	detect_color@dist_R& (0+255),b
  1850   000334  EF9E  F001         	goto	u3991
  1851   000338  EFA0  F001         	goto	u3990
  1852   00033C                     u3991:
  1853   00033C  EFCC  F001         	goto	l4124
  1854   000340                     u3990:
  1855   000340                     
  1856                           ; BSR set to: 0
  1857   000340  0E4D               	movlw	77
  1858   000342  61B4               	cpfslt	detect_color@dist_R& (0+255),b
  1859   000344  EFA6  F001         	goto	u4001
  1860   000348  EFA8  F001         	goto	u4000
  1861   00034C                     u4001:
  1862   00034C  EFCC  F001         	goto	l4124
  1863   000350                     u4000:
  1864   000350                     
  1865                           ; BSR set to: 0
  1866   000350  0E09               	movlw	9
  1867   000352  65B5               	cpfsgt	detect_color@dist_G& (0+255),b
  1868   000354  EFAE  F001         	goto	u4011
  1869   000358  EFB0  F001         	goto	u4010
  1870   00035C                     u4011:
  1871   00035C  EFCC  F001         	goto	l4124
  1872   000360                     u4010:
  1873   000360                     
  1874                           ; BSR set to: 0
  1875   000360  0E0D               	movlw	13
  1876   000362  61B5               	cpfslt	detect_color@dist_G& (0+255),b
  1877   000364  EFB6  F001         	goto	u4021
  1878   000368  EFB8  F001         	goto	u4020
  1879   00036C                     u4021:
  1880   00036C  EFCC  F001         	goto	l4124
  1881   000370                     u4020:
  1882   000370                     
  1883                           ; BSR set to: 0
  1884   000370  0E0C               	movlw	12
  1885   000372  65B6               	cpfsgt	detect_color@dist_B& (0+255),b
  1886   000374  EFBE  F001         	goto	u4031
  1887   000378  EFC0  F001         	goto	u4030
  1888   00037C                     u4031:
  1889   00037C  EFCC  F001         	goto	l4124
  1890   000380                     u4030:
  1891   000380                     
  1892                           ; BSR set to: 0
  1893   000380  0E10               	movlw	16
  1894   000382  61B6               	cpfslt	detect_color@dist_B& (0+255),b
  1895   000384  EFC6  F001         	goto	u4041
  1896   000388  EFC8  F001         	goto	u4040
  1897   00038C                     u4041:
  1898   00038C  EFCC  F001         	goto	l4124
  1899   000390                     u4040:
  1900   000390                     
  1901                           ; BSR set to: 0
  1902                           ;color.c: 111:             color = 1;
  1903   000390  0E01               	movlw	1
  1904   000392  6FB3               	movwf	detect_color@color& (0+255),b
  1905                           
  1906                           ;color.c: 112:         }
  1907   000394  EF3A  F003         	goto	l42
  1908   000398                     l4124:
  1909                           
  1910                           ; BSR set to: 0
  1911   000398  0E23               	movlw	35
  1912   00039A  65B4               	cpfsgt	detect_color@dist_R& (0+255),b
  1913   00039C  EFD2  F001         	goto	u4051
  1914   0003A0  EFD4  F001         	goto	u4050
  1915   0003A4                     u4051:
  1916   0003A4  EF00  F002         	goto	l4138
  1917   0003A8                     u4050:
  1918   0003A8                     
  1919                           ; BSR set to: 0
  1920   0003A8  0E27               	movlw	39
  1921   0003AA  61B4               	cpfslt	detect_color@dist_R& (0+255),b
  1922   0003AC  EFDA  F001         	goto	u4061
  1923   0003B0  EFDC  F001         	goto	u4060
  1924   0003B4                     u4061:
  1925   0003B4  EF00  F002         	goto	l4138
  1926   0003B8                     u4060:
  1927   0003B8                     
  1928                           ; BSR set to: 0
  1929   0003B8  0E28               	movlw	40
  1930   0003BA  65B5               	cpfsgt	detect_color@dist_G& (0+255),b
  1931   0003BC  EFE2  F001         	goto	u4071
  1932   0003C0  EFE4  F001         	goto	u4070
  1933   0003C4                     u4071:
  1934   0003C4  EF00  F002         	goto	l4138
  1935   0003C8                     u4070:
  1936   0003C8                     
  1937                           ; BSR set to: 0
  1938   0003C8  0E2C               	movlw	44
  1939   0003CA  61B5               	cpfslt	detect_color@dist_G& (0+255),b
  1940   0003CC  EFEA  F001         	goto	u4081
  1941   0003D0  EFEC  F001         	goto	u4080
  1942   0003D4                     u4081:
  1943   0003D4  EF00  F002         	goto	l4138
  1944   0003D8                     u4080:
  1945   0003D8                     
  1946                           ; BSR set to: 0
  1947   0003D8  0E13               	movlw	19
  1948   0003DA  65B6               	cpfsgt	detect_color@dist_B& (0+255),b
  1949   0003DC  EFF2  F001         	goto	u4091
  1950   0003E0  EFF4  F001         	goto	u4090
  1951   0003E4                     u4091:
  1952   0003E4  EF00  F002         	goto	l4138
  1953   0003E8                     u4090:
  1954   0003E8                     
  1955                           ; BSR set to: 0
  1956   0003E8  0E17               	movlw	23
  1957   0003EA  61B6               	cpfslt	detect_color@dist_B& (0+255),b
  1958   0003EC  EFFA  F001         	goto	u4101
  1959   0003F0  EFFC  F001         	goto	u4100
  1960   0003F4                     u4101:
  1961   0003F4  EF00  F002         	goto	l4138
  1962   0003F8                     u4100:
  1963   0003F8                     
  1964                           ; BSR set to: 0
  1965                           ;color.c: 114:             color = 2;
  1966   0003F8  0E02               	movlw	2
  1967   0003FA  6FB3               	movwf	detect_color@color& (0+255),b
  1968                           
  1969                           ;color.c: 115:         }
  1970   0003FC  EF3A  F003         	goto	l42
  1971   000400                     l4138:
  1972                           
  1973                           ; BSR set to: 0
  1974   000400  0E1C               	movlw	28
  1975   000402  65B4               	cpfsgt	detect_color@dist_R& (0+255),b
  1976   000404  EF06  F002         	goto	u4111
  1977   000408  EF08  F002         	goto	u4110
  1978   00040C                     u4111:
  1979   00040C  EF34  F002         	goto	l4152
  1980   000410                     u4110:
  1981   000410                     
  1982                           ; BSR set to: 0
  1983   000410  0E23               	movlw	35
  1984   000412  61B4               	cpfslt	detect_color@dist_R& (0+255),b
  1985   000414  EF0E  F002         	goto	u4121
  1986   000418  EF10  F002         	goto	u4120
  1987   00041C                     u4121:
  1988   00041C  EF34  F002         	goto	l4152
  1989   000420                     u4120:
  1990   000420                     
  1991                           ; BSR set to: 0
  1992   000420  0E1F               	movlw	31
  1993   000422  65B5               	cpfsgt	detect_color@dist_G& (0+255),b
  1994   000424  EF16  F002         	goto	u4131
  1995   000428  EF18  F002         	goto	u4130
  1996   00042C                     u4131:
  1997   00042C  EF34  F002         	goto	l4152
  1998   000430                     u4130:
  1999   000430                     
  2000                           ; BSR set to: 0
  2001   000430  0E27               	movlw	39
  2002   000432  61B5               	cpfslt	detect_color@dist_G& (0+255),b
  2003   000434  EF1E  F002         	goto	u4141
  2004   000438  EF20  F002         	goto	u4140
  2005   00043C                     u4141:
  2006   00043C  EF34  F002         	goto	l4152
  2007   000440                     u4140:
  2008   000440                     
  2009                           ; BSR set to: 0
  2010   000440  0E1E               	movlw	30
  2011   000442  65B6               	cpfsgt	detect_color@dist_B& (0+255),b
  2012   000444  EF26  F002         	goto	u4151
  2013   000448  EF28  F002         	goto	u4150
  2014   00044C                     u4151:
  2015   00044C  EF34  F002         	goto	l4152
  2016   000450                     u4150:
  2017   000450                     
  2018                           ; BSR set to: 0
  2019   000450  0E26               	movlw	38
  2020   000452  61B6               	cpfslt	detect_color@dist_B& (0+255),b
  2021   000454  EF2E  F002         	goto	u4161
  2022   000458  EF30  F002         	goto	u4160
  2023   00045C                     u4161:
  2024   00045C  EF34  F002         	goto	l4152
  2025   000460                     u4160:
  2026   000460                     
  2027                           ; BSR set to: 0
  2028                           ;color.c: 117:             color = 3;
  2029   000460  0E03               	movlw	3
  2030   000462  6FB3               	movwf	detect_color@color& (0+255),b
  2031                           
  2032                           ;color.c: 118:         }
  2033   000464  EF3A  F003         	goto	l42
  2034   000468                     l4152:
  2035                           
  2036                           ; BSR set to: 0
  2037   000468  0E31               	movlw	49
  2038   00046A  65B4               	cpfsgt	detect_color@dist_R& (0+255),b
  2039   00046C  EF3A  F002         	goto	u4171
  2040   000470  EF3C  F002         	goto	u4170
  2041   000474                     u4171:
  2042   000474  EF68  F002         	goto	l4166
  2043   000478                     u4170:
  2044   000478                     
  2045                           ; BSR set to: 0
  2046   000478  0E35               	movlw	53
  2047   00047A  61B4               	cpfslt	detect_color@dist_R& (0+255),b
  2048   00047C  EF42  F002         	goto	u4181
  2049   000480  EF44  F002         	goto	u4180
  2050   000484                     u4181:
  2051   000484  EF68  F002         	goto	l4166
  2052   000488                     u4180:
  2053   000488                     
  2054                           ; BSR set to: 0
  2055   000488  0E1D               	movlw	29
  2056   00048A  65B5               	cpfsgt	detect_color@dist_G& (0+255),b
  2057   00048C  EF4A  F002         	goto	u4191
  2058   000490  EF4C  F002         	goto	u4190
  2059   000494                     u4191:
  2060   000494  EF68  F002         	goto	l4166
  2061   000498                     u4190:
  2062   000498                     
  2063                           ; BSR set to: 0
  2064   000498  0E21               	movlw	33
  2065   00049A  61B5               	cpfslt	detect_color@dist_G& (0+255),b
  2066   00049C  EF52  F002         	goto	u4201
  2067   0004A0  EF54  F002         	goto	u4200
  2068   0004A4                     u4201:
  2069   0004A4  EF68  F002         	goto	l4166
  2070   0004A8                     u4200:
  2071   0004A8                     
  2072                           ; BSR set to: 0
  2073   0004A8  0E10               	movlw	16
  2074   0004AA  65B6               	cpfsgt	detect_color@dist_B& (0+255),b
  2075   0004AC  EF5A  F002         	goto	u4211
  2076   0004B0  EF5C  F002         	goto	u4210
  2077   0004B4                     u4211:
  2078   0004B4  EF68  F002         	goto	l4166
  2079   0004B8                     u4210:
  2080   0004B8                     
  2081                           ; BSR set to: 0
  2082   0004B8  0E14               	movlw	20
  2083   0004BA  61B6               	cpfslt	detect_color@dist_B& (0+255),b
  2084   0004BC  EF62  F002         	goto	u4221
  2085   0004C0  EF64  F002         	goto	u4220
  2086   0004C4                     u4221:
  2087   0004C4  EF68  F002         	goto	l4166
  2088   0004C8                     u4220:
  2089   0004C8                     
  2090                           ; BSR set to: 0
  2091                           ;color.c: 120:             color = 4;
  2092   0004C8  0E04               	movlw	4
  2093   0004CA  6FB3               	movwf	detect_color@color& (0+255),b
  2094                           
  2095                           ;color.c: 121:         }
  2096   0004CC  EF3A  F003         	goto	l42
  2097   0004D0                     l4166:
  2098                           
  2099                           ; BSR set to: 0
  2100   0004D0  0E2F               	movlw	47
  2101   0004D2  65B4               	cpfsgt	detect_color@dist_R& (0+255),b
  2102   0004D4  EF6E  F002         	goto	u4231
  2103   0004D8  EF70  F002         	goto	u4230
  2104   0004DC                     u4231:
  2105   0004DC  EF9C  F002         	goto	l4180
  2106   0004E0                     u4230:
  2107   0004E0                     
  2108                           ; BSR set to: 0
  2109   0004E0  0E33               	movlw	51
  2110   0004E2  61B4               	cpfslt	detect_color@dist_R& (0+255),b
  2111   0004E4  EF76  F002         	goto	u4241
  2112   0004E8  EF78  F002         	goto	u4240
  2113   0004EC                     u4241:
  2114   0004EC  EF9C  F002         	goto	l4180
  2115   0004F0                     u4240:
  2116   0004F0                     
  2117                           ; BSR set to: 0
  2118   0004F0  0E1B               	movlw	27
  2119   0004F2  65B5               	cpfsgt	detect_color@dist_G& (0+255),b
  2120   0004F4  EF7E  F002         	goto	u4251
  2121   0004F8  EF80  F002         	goto	u4250
  2122   0004FC                     u4251:
  2123   0004FC  EF9C  F002         	goto	l4180
  2124   000500                     u4250:
  2125   000500                     
  2126                           ; BSR set to: 0
  2127   000500  0E1F               	movlw	31
  2128   000502  61B5               	cpfslt	detect_color@dist_G& (0+255),b
  2129   000504  EF86  F002         	goto	u4261
  2130   000508  EF88  F002         	goto	u4260
  2131   00050C                     u4261:
  2132   00050C  EF9C  F002         	goto	l4180
  2133   000510                     u4260:
  2134   000510                     
  2135                           ; BSR set to: 0
  2136   000510  0E14               	movlw	20
  2137   000512  65B6               	cpfsgt	detect_color@dist_B& (0+255),b
  2138   000514  EF8E  F002         	goto	u4271
  2139   000518  EF90  F002         	goto	u4270
  2140   00051C                     u4271:
  2141   00051C  EF9C  F002         	goto	l4180
  2142   000520                     u4270:
  2143   000520                     
  2144                           ; BSR set to: 0
  2145   000520  0E18               	movlw	24
  2146   000522  61B6               	cpfslt	detect_color@dist_B& (0+255),b
  2147   000524  EF96  F002         	goto	u4281
  2148   000528  EF98  F002         	goto	u4280
  2149   00052C                     u4281:
  2150   00052C  EF9C  F002         	goto	l4180
  2151   000530                     u4280:
  2152   000530                     
  2153                           ; BSR set to: 0
  2154                           ;color.c: 123:             color = 5;
  2155   000530  0E05               	movlw	5
  2156   000532  6FB3               	movwf	detect_color@color& (0+255),b
  2157                           
  2158                           ;color.c: 124:         }
  2159   000534  EF3A  F003         	goto	l42
  2160   000538                     l4180:
  2161                           
  2162                           ; BSR set to: 0
  2163   000538  0E3A               	movlw	58
  2164   00053A  65B4               	cpfsgt	detect_color@dist_R& (0+255),b
  2165   00053C  EFA2  F002         	goto	u4291
  2166   000540  EFA4  F002         	goto	u4290
  2167   000544                     u4291:
  2168   000544  EFD0  F002         	goto	l4194
  2169   000548                     u4290:
  2170   000548                     
  2171                           ; BSR set to: 0
  2172   000548  0E3E               	movlw	62
  2173   00054A  61B4               	cpfslt	detect_color@dist_R& (0+255),b
  2174   00054C  EFAA  F002         	goto	u4301
  2175   000550  EFAC  F002         	goto	u4300
  2176   000554                     u4301:
  2177   000554  EFD0  F002         	goto	l4194
  2178   000558                     u4300:
  2179   000558                     
  2180                           ; BSR set to: 0
  2181   000558  0E15               	movlw	21
  2182   00055A  65B5               	cpfsgt	detect_color@dist_G& (0+255),b
  2183   00055C  EFB2  F002         	goto	u4311
  2184   000560  EFB4  F002         	goto	u4310
  2185   000564                     u4311:
  2186   000564  EFD0  F002         	goto	l4194
  2187   000568                     u4310:
  2188   000568                     
  2189                           ; BSR set to: 0
  2190   000568  0E19               	movlw	25
  2191   00056A  61B5               	cpfslt	detect_color@dist_G& (0+255),b
  2192   00056C  EFBA  F002         	goto	u4321
  2193   000570  EFBC  F002         	goto	u4320
  2194   000574                     u4321:
  2195   000574  EFD0  F002         	goto	l4194
  2196   000578                     u4320:
  2197   000578                     
  2198                           ; BSR set to: 0
  2199   000578  0E0F               	movlw	15
  2200   00057A  65B6               	cpfsgt	detect_color@dist_B& (0+255),b
  2201   00057C  EFC2  F002         	goto	u4331
  2202   000580  EFC4  F002         	goto	u4330
  2203   000584                     u4331:
  2204   000584  EFD0  F002         	goto	l4194
  2205   000588                     u4330:
  2206   000588                     
  2207                           ; BSR set to: 0
  2208   000588  0E13               	movlw	19
  2209   00058A  61B6               	cpfslt	detect_color@dist_B& (0+255),b
  2210   00058C  EFCA  F002         	goto	u4341
  2211   000590  EFCC  F002         	goto	u4340
  2212   000594                     u4341:
  2213   000594  EFD0  F002         	goto	l4194
  2214   000598                     u4340:
  2215   000598                     
  2216                           ; BSR set to: 0
  2217                           ;color.c: 126:             color = 6;
  2218   000598  0E06               	movlw	6
  2219   00059A  6FB3               	movwf	detect_color@color& (0+255),b
  2220                           
  2221                           ;color.c: 127:         }
  2222   00059C  EF3A  F003         	goto	l42
  2223   0005A0                     l4194:
  2224                           
  2225                           ; BSR set to: 0
  2226   0005A0  0E20               	movlw	32
  2227   0005A2  65B4               	cpfsgt	detect_color@dist_R& (0+255),b
  2228   0005A4  EFD6  F002         	goto	u4351
  2229   0005A8  EFD8  F002         	goto	u4350
  2230   0005AC                     u4351:
  2231   0005AC  EF04  F003         	goto	l4208
  2232   0005B0                     u4350:
  2233   0005B0                     
  2234                           ; BSR set to: 0
  2235   0005B0  0E24               	movlw	36
  2236   0005B2  61B4               	cpfslt	detect_color@dist_R& (0+255),b
  2237   0005B4  EFDE  F002         	goto	u4361
  2238   0005B8  EFE0  F002         	goto	u4360
  2239   0005BC                     u4361:
  2240   0005BC  EF04  F003         	goto	l4208
  2241   0005C0                     u4360:
  2242   0005C0                     
  2243                           ; BSR set to: 0
  2244   0005C0  0E25               	movlw	37
  2245   0005C2  65B5               	cpfsgt	detect_color@dist_G& (0+255),b
  2246   0005C4  EFE6  F002         	goto	u4371
  2247   0005C8  EFE8  F002         	goto	u4370
  2248   0005CC                     u4371:
  2249   0005CC  EF04  F003         	goto	l4208
  2250   0005D0                     u4370:
  2251   0005D0                     
  2252                           ; BSR set to: 0
  2253   0005D0  0E29               	movlw	41
  2254   0005D2  61B5               	cpfslt	detect_color@dist_G& (0+255),b
  2255   0005D4  EFEE  F002         	goto	u4381
  2256   0005D8  EFF0  F002         	goto	u4380
  2257   0005DC                     u4381:
  2258   0005DC  EF04  F003         	goto	l4208
  2259   0005E0                     u4380:
  2260   0005E0                     
  2261                           ; BSR set to: 0
  2262   0005E0  0E19               	movlw	25
  2263   0005E2  65B6               	cpfsgt	detect_color@dist_B& (0+255),b
  2264   0005E4  EFF6  F002         	goto	u4391
  2265   0005E8  EFF8  F002         	goto	u4390
  2266   0005EC                     u4391:
  2267   0005EC  EF04  F003         	goto	l4208
  2268   0005F0                     u4390:
  2269   0005F0                     
  2270                           ; BSR set to: 0
  2271   0005F0  0E1D               	movlw	29
  2272   0005F2  61B6               	cpfslt	detect_color@dist_B& (0+255),b
  2273   0005F4  EFFE  F002         	goto	u4401
  2274   0005F8  EF00  F003         	goto	u4400
  2275   0005FC                     u4401:
  2276   0005FC  EF04  F003         	goto	l4208
  2277   000600                     u4400:
  2278   000600                     
  2279                           ; BSR set to: 0
  2280                           ;color.c: 129:             color = 7;
  2281   000600  0E07               	movlw	7
  2282   000602  6FB3               	movwf	detect_color@color& (0+255),b
  2283                           
  2284                           ;color.c: 130:         }
  2285   000604  EF3A  F003         	goto	l42
  2286   000608                     l4208:
  2287                           
  2288                           ; BSR set to: 0
  2289   000608  0E2A               	movlw	42
  2290   00060A  65B4               	cpfsgt	detect_color@dist_R& (0+255),b
  2291   00060C  EF0A  F003         	goto	u4411
  2292   000610  EF0C  F003         	goto	u4410
  2293   000614                     u4411:
  2294   000614  EF38  F003         	goto	l4222
  2295   000618                     u4410:
  2296   000618                     
  2297                           ; BSR set to: 0
  2298   000618  0E2E               	movlw	46
  2299   00061A  61B4               	cpfslt	detect_color@dist_R& (0+255),b
  2300   00061C  EF12  F003         	goto	u4421
  2301   000620  EF14  F003         	goto	u4420
  2302   000624                     u4421:
  2303   000624  EF38  F003         	goto	l4222
  2304   000628                     u4420:
  2305   000628                     
  2306                           ; BSR set to: 0
  2307   000628  0E1F               	movlw	31
  2308   00062A  65B5               	cpfsgt	detect_color@dist_G& (0+255),b
  2309   00062C  EF1A  F003         	goto	u4431
  2310   000630  EF1C  F003         	goto	u4430
  2311   000634                     u4431:
  2312   000634  EF38  F003         	goto	l4222
  2313   000638                     u4430:
  2314   000638                     
  2315                           ; BSR set to: 0
  2316   000638  0E23               	movlw	35
  2317   00063A  61B5               	cpfslt	detect_color@dist_G& (0+255),b
  2318   00063C  EF22  F003         	goto	u4441
  2319   000640  EF24  F003         	goto	u4440
  2320   000644                     u4441:
  2321   000644  EF38  F003         	goto	l4222
  2322   000648                     u4440:
  2323   000648                     
  2324                           ; BSR set to: 0
  2325   000648  0E15               	movlw	21
  2326   00064A  65B6               	cpfsgt	detect_color@dist_B& (0+255),b
  2327   00064C  EF2A  F003         	goto	u4451
  2328   000650  EF2C  F003         	goto	u4450
  2329   000654                     u4451:
  2330   000654  EF38  F003         	goto	l4222
  2331   000658                     u4450:
  2332   000658                     
  2333                           ; BSR set to: 0
  2334   000658  0E19               	movlw	25
  2335   00065A  61B6               	cpfslt	detect_color@dist_B& (0+255),b
  2336   00065C  EF32  F003         	goto	u4461
  2337   000660  EF34  F003         	goto	u4460
  2338   000664                     u4461:
  2339   000664  EF38  F003         	goto	l4222
  2340   000668                     u4460:
  2341   000668                     
  2342                           ; BSR set to: 0
  2343                           ;color.c: 132:             color = 8;
  2344   000668  0E08               	movlw	8
  2345   00066A  6FB3               	movwf	detect_color@color& (0+255),b
  2346                           
  2347                           ;color.c: 133:         }
  2348   00066C  EF3A  F003         	goto	l42
  2349   000670                     l4222:
  2350                           
  2351                           ; BSR set to: 0
  2352                           ;color.c: 135:             color = 0;
  2353   000670  0E00               	movlw	0
  2354   000672  6FB3               	movwf	detect_color@color& (0+255),b
  2355   000674                     l42:
  2356                           
  2357                           ; BSR set to: 0
  2358                           ;color.c: 138:     color_flag = 0;
  2359   000674  0E00               	movlw	0
  2360   000676  6E55               	movwf	_color_flag^0,c
  2361                           
  2362                           ;color.c: 139:     return color;
  2363   000678  51B3               	movf	detect_color@color& (0+255),w,b
  2364   00067A                     
  2365                           ; BSR set to: 0
  2366   00067A  0012               	return		;funcret
  2367   00067C                     __end_of_detect_color:
  2368                           	callstack 0
  2369                           
  2370 ;; *************** function ___xxtofl *****************
  2371 ;; Defined at:
  2372 ;;		line 10 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\xxtofl.c"
  2373 ;; Parameters:    Size  Location     Type
  2374 ;;  sign            1    wreg     unsigned char 
  2375 ;;  val             4    8[COMRAM] long 
  2376 ;; Auto vars:     Size  Location     Type
  2377 ;;  sign            1   16[COMRAM] unsigned char 
  2378 ;;  arg             4   18[COMRAM] unsigned long 
  2379 ;;  exp             1   17[COMRAM] unsigned char 
  2380 ;; Return value:  Size  Location     Type
  2381 ;;                  4    8[COMRAM] unsigned char 
  2382 ;; Registers used:
  2383 ;;		wreg, status,2, status,0
  2384 ;; Tracked objects:
  2385 ;;		On entry : 0/0
  2386 ;;		On exit  : 0/0
  2387 ;;		Unchanged: 0/0
  2388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2389 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2390 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2391 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2392 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2393 ;;Total ram usage:       14 bytes
  2394 ;; Hardware stack levels used: 1
  2395 ;; Hardware stack levels required when called: 7
  2396 ;; This function calls:
  2397 ;;		Nothing
  2398 ;; This function is called by:
  2399 ;;		_detect_color
  2400 ;; This function uses a non-reentrant model
  2401 ;;
  2402                           
  2403                           	psect	text3
  2404   00133A                     __ptext3:
  2405                           	callstack 0
  2406   00133A                     ___xxtofl:
  2407                           	callstack 22
  2408                           
  2409                           ; BSR set to: 0
  2410                           ;incstack = 0
  2411                           ;___xxtofl@sign stored from wreg
  2412   00133A  6E11               	movwf	___xxtofl@sign^0,c
  2413   00133C  5011               	movf	___xxtofl@sign^0,w,c
  2414   00133E  B4D8               	btfsc	status,2,c
  2415   001340  EFA4  F009         	goto	u3151
  2416   001344  EFA6  F009         	goto	u3150
  2417   001348                     u3151:
  2418   001348  EFC8  F009         	goto	l1360
  2419   00134C                     u3150:
  2420   00134C  BE0C               	btfsc	(___xxtofl@val+3)^0,7,c
  2421   00134E  EFAD  F009         	goto	u3160
  2422   001352  EFAB  F009         	goto	u3161
  2423   001356                     u3161:
  2424   001356  EFC8  F009         	goto	l1360
  2425   00135A                     u3160:
  2426   00135A  C009  F00D         	movff	___xxtofl@val,??___xxtofl
  2427   00135E  C00A  F00E         	movff	___xxtofl@val+1,??___xxtofl+1
  2428   001362  C00B  F00F         	movff	___xxtofl@val+2,??___xxtofl+2
  2429   001366  C00C  F010         	movff	___xxtofl@val+3,??___xxtofl+3
  2430   00136A  1E0D               	comf	??___xxtofl^0,f,c
  2431   00136C  1E0E               	comf	(??___xxtofl+1)^0,f,c
  2432   00136E  1E0F               	comf	(??___xxtofl+2)^0,f,c
  2433   001370  1E10               	comf	(??___xxtofl+3)^0,f,c
  2434   001372  2A0D               	incf	??___xxtofl^0,f,c
  2435   001374  0E00               	movlw	0
  2436   001376  220E               	addwfc	(??___xxtofl+1)^0,f,c
  2437   001378  220F               	addwfc	(??___xxtofl+2)^0,f,c
  2438   00137A  2210               	addwfc	(??___xxtofl+3)^0,f,c
  2439   00137C  C00D  F013         	movff	??___xxtofl,___xxtofl@arg
  2440   001380  C00E  F014         	movff	??___xxtofl+1,___xxtofl@arg+1
  2441   001384  C00F  F015         	movff	??___xxtofl+2,___xxtofl@arg+2
  2442   001388  C010  F016         	movff	??___xxtofl+3,___xxtofl@arg+3
  2443   00138C  EFD0  F009         	goto	l3632
  2444   001390                     l1360:
  2445   001390  C009  F013         	movff	___xxtofl@val,___xxtofl@arg
  2446   001394  C00A  F014         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2447   001398  C00B  F015         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2448   00139C  C00C  F016         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2449   0013A0                     l3632:
  2450   0013A0  5009               	movf	___xxtofl@val^0,w,c
  2451   0013A2  100A               	iorwf	(___xxtofl@val+1)^0,w,c
  2452   0013A4  100B               	iorwf	(___xxtofl@val+2)^0,w,c
  2453   0013A6  100C               	iorwf	(___xxtofl@val+3)^0,w,c
  2454   0013A8  A4D8               	btfss	status,2,c
  2455   0013AA  EFD9  F009         	goto	u3171
  2456   0013AE  EFDB  F009         	goto	u3170
  2457   0013B2                     u3171:
  2458   0013B2  EFE5  F009         	goto	l3638
  2459   0013B6                     u3170:
  2460   0013B6  0E00               	movlw	0
  2461   0013B8  6E09               	movwf	?___xxtofl^0,c
  2462   0013BA  0E00               	movlw	0
  2463   0013BC  6E0A               	movwf	(?___xxtofl+1)^0,c
  2464   0013BE  0E00               	movlw	0
  2465   0013C0  6E0B               	movwf	(?___xxtofl+2)^0,c
  2466   0013C2  0E00               	movlw	0
  2467   0013C4  6E0C               	movwf	(?___xxtofl+3)^0,c
  2468   0013C6  EF76  F00A         	goto	l1363
  2469   0013CA                     l3638:
  2470   0013CA  0E96               	movlw	150
  2471   0013CC  6E12               	movwf	___xxtofl@exp^0,c
  2472   0013CE  EFEF  F009         	goto	l3642
  2473   0013D2                     l3640:
  2474   0013D2  2A12               	incf	___xxtofl@exp^0,f,c
  2475   0013D4  90D8               	bcf	status,0,c
  2476   0013D6  3216               	rrcf	(___xxtofl@arg+3)^0,f,c
  2477   0013D8  3215               	rrcf	(___xxtofl@arg+2)^0,f,c
  2478   0013DA  3214               	rrcf	(___xxtofl@arg+1)^0,f,c
  2479   0013DC  3213               	rrcf	___xxtofl@arg^0,f,c
  2480   0013DE                     l3642:
  2481   0013DE  0E00               	movlw	0
  2482   0013E0  1413               	andwf	___xxtofl@arg^0,w,c
  2483   0013E2  6E0D               	movwf	??___xxtofl^0,c
  2484   0013E4  0E00               	movlw	0
  2485   0013E6  1414               	andwf	(___xxtofl@arg+1)^0,w,c
  2486   0013E8  6E0E               	movwf	(??___xxtofl+1)^0,c
  2487   0013EA  0E00               	movlw	0
  2488   0013EC  1415               	andwf	(___xxtofl@arg+2)^0,w,c
  2489   0013EE  6E0F               	movwf	(??___xxtofl+2)^0,c
  2490   0013F0  0EFE               	movlw	254
  2491   0013F2  1416               	andwf	(___xxtofl@arg+3)^0,w,c
  2492   0013F4  6E10               	movwf	(??___xxtofl+3)^0,c
  2493   0013F6  500D               	movf	??___xxtofl^0,w,c
  2494   0013F8  100E               	iorwf	(??___xxtofl+1)^0,w,c
  2495   0013FA  100F               	iorwf	(??___xxtofl+2)^0,w,c
  2496   0013FC  1010               	iorwf	(??___xxtofl+3)^0,w,c
  2497   0013FE  A4D8               	btfss	status,2,c
  2498   001400  EF04  F00A         	goto	u3181
  2499   001404  EF06  F00A         	goto	u3180
  2500   001408                     u3181:
  2501   001408  EFE9  F009         	goto	l3640
  2502   00140C                     u3180:
  2503   00140C  EF14  F00A         	goto	l1367
  2504   001410                     l3644:
  2505   001410  2A12               	incf	___xxtofl@exp^0,f,c
  2506   001412  0E01               	movlw	1
  2507   001414  2613               	addwf	___xxtofl@arg^0,f,c
  2508   001416  0E00               	movlw	0
  2509   001418  2214               	addwfc	(___xxtofl@arg+1)^0,f,c
  2510   00141A  2215               	addwfc	(___xxtofl@arg+2)^0,f,c
  2511   00141C  2216               	addwfc	(___xxtofl@arg+3)^0,f,c
  2512   00141E  90D8               	bcf	status,0,c
  2513   001420  3216               	rrcf	(___xxtofl@arg+3)^0,f,c
  2514   001422  3215               	rrcf	(___xxtofl@arg+2)^0,f,c
  2515   001424  3214               	rrcf	(___xxtofl@arg+1)^0,f,c
  2516   001426  3213               	rrcf	___xxtofl@arg^0,f,c
  2517   001428                     l1367:
  2518   001428  0E00               	movlw	0
  2519   00142A  1413               	andwf	___xxtofl@arg^0,w,c
  2520   00142C  6E0D               	movwf	??___xxtofl^0,c
  2521   00142E  0E00               	movlw	0
  2522   001430  1414               	andwf	(___xxtofl@arg+1)^0,w,c
  2523   001432  6E0E               	movwf	(??___xxtofl+1)^0,c
  2524   001434  0E00               	movlw	0
  2525   001436  1415               	andwf	(___xxtofl@arg+2)^0,w,c
  2526   001438  6E0F               	movwf	(??___xxtofl+2)^0,c
  2527   00143A  0EFF               	movlw	255
  2528   00143C  1416               	andwf	(___xxtofl@arg+3)^0,w,c
  2529   00143E  6E10               	movwf	(??___xxtofl+3)^0,c
  2530   001440  500D               	movf	??___xxtofl^0,w,c
  2531   001442  100E               	iorwf	(??___xxtofl+1)^0,w,c
  2532   001444  100F               	iorwf	(??___xxtofl+2)^0,w,c
  2533   001446  1010               	iorwf	(??___xxtofl+3)^0,w,c
  2534   001448  A4D8               	btfss	status,2,c
  2535   00144A  EF29  F00A         	goto	u3191
  2536   00144E  EF2B  F00A         	goto	u3190
  2537   001452                     u3191:
  2538   001452  EF08  F00A         	goto	l3644
  2539   001456                     u3190:
  2540   001456  EF33  F00A         	goto	l3652
  2541   00145A                     l3650:
  2542   00145A  0612               	decf	___xxtofl@exp^0,f,c
  2543   00145C  90D8               	bcf	status,0,c
  2544   00145E  3613               	rlcf	___xxtofl@arg^0,f,c
  2545   001460  3614               	rlcf	(___xxtofl@arg+1)^0,f,c
  2546   001462  3615               	rlcf	(___xxtofl@arg+2)^0,f,c
  2547   001464  3616               	rlcf	(___xxtofl@arg+3)^0,f,c
  2548   001466                     l3652:
  2549   001466  BE15               	btfsc	(___xxtofl@arg+2)^0,7,c
  2550   001468  EF38  F00A         	goto	u3201
  2551   00146C  EF3A  F00A         	goto	u3200
  2552   001470                     u3201:
  2553   001470  EF42  F00A         	goto	l1374
  2554   001474                     u3200:
  2555   001474  0E02               	movlw	2
  2556   001476  6012               	cpfslt	___xxtofl@exp^0,c
  2557   001478  EF40  F00A         	goto	u3211
  2558   00147C  EF42  F00A         	goto	u3210
  2559   001480                     u3211:
  2560   001480  EF2D  F00A         	goto	l3650
  2561   001484                     u3210:
  2562   001484                     l1374:
  2563   001484  B012               	btfsc	___xxtofl@exp^0,0,c
  2564   001486  EF47  F00A         	goto	u3221
  2565   00148A  EF49  F00A         	goto	u3220
  2566   00148E                     u3221:
  2567   00148E  EF4A  F00A         	goto	l3658
  2568   001492                     u3220:
  2569   001492  9E15               	bcf	(___xxtofl@arg+2)^0,7,c
  2570   001494                     l3658:
  2571   001494  90D8               	bcf	status,0,c
  2572   001496  3212               	rrcf	___xxtofl@exp^0,f,c
  2573   001498  C012  F00D         	movff	___xxtofl@exp,??___xxtofl
  2574   00149C  6A0E               	clrf	(??___xxtofl+1)^0,c
  2575   00149E  6A0F               	clrf	(??___xxtofl+2)^0,c
  2576   0014A0  6A10               	clrf	(??___xxtofl+3)^0,c
  2577   0014A2  C00D  F010         	movff	??___xxtofl,??___xxtofl+3
  2578   0014A6  6A0F               	clrf	(??___xxtofl+2)^0,c
  2579   0014A8  6A0E               	clrf	(??___xxtofl+1)^0,c
  2580   0014AA  6A0D               	clrf	??___xxtofl^0,c
  2581   0014AC  500D               	movf	??___xxtofl^0,w,c
  2582   0014AE  1213               	iorwf	___xxtofl@arg^0,f,c
  2583   0014B0  500E               	movf	(??___xxtofl+1)^0,w,c
  2584   0014B2  1214               	iorwf	(___xxtofl@arg+1)^0,f,c
  2585   0014B4  500F               	movf	(??___xxtofl+2)^0,w,c
  2586   0014B6  1215               	iorwf	(___xxtofl@arg+2)^0,f,c
  2587   0014B8  5010               	movf	(??___xxtofl+3)^0,w,c
  2588   0014BA  1216               	iorwf	(___xxtofl@arg+3)^0,f,c
  2589   0014BC  5011               	movf	___xxtofl@sign^0,w,c
  2590   0014BE  B4D8               	btfsc	status,2,c
  2591   0014C0  EF64  F00A         	goto	u3231
  2592   0014C4  EF66  F00A         	goto	u3230
  2593   0014C8                     u3231:
  2594   0014C8  EF6E  F00A         	goto	l3668
  2595   0014CC                     u3230:
  2596   0014CC  BE0C               	btfsc	(___xxtofl@val+3)^0,7,c
  2597   0014CE  EF6D  F00A         	goto	u3240
  2598   0014D2  EF6B  F00A         	goto	u3241
  2599   0014D6                     u3241:
  2600   0014D6  EF6E  F00A         	goto	l3668
  2601   0014DA                     u3240:
  2602   0014DA  8E16               	bsf	(___xxtofl@arg+3)^0,7,c
  2603   0014DC                     l3668:
  2604   0014DC  C013  F009         	movff	___xxtofl@arg,?___xxtofl
  2605   0014E0  C014  F00A         	movff	___xxtofl@arg+1,?___xxtofl+1
  2606   0014E4  C015  F00B         	movff	___xxtofl@arg+2,?___xxtofl+2
  2607   0014E8  C016  F00C         	movff	___xxtofl@arg+3,?___xxtofl+3
  2608   0014EC                     l1363:
  2609   0014EC  0012               	return		;funcret
  2610   0014EE                     __end_of___xxtofl:
  2611                           	callstack 0
  2612                           
  2613 ;; *************** function ___fltol *****************
  2614 ;; Defined at:
  2615 ;;		line 43 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\fltol.c"
  2616 ;; Parameters:    Size  Location     Type
  2617 ;;  f1              4   72[COMRAM] unsigned char 
  2618 ;; Auto vars:     Size  Location     Type
  2619 ;;  exp1            1   77[COMRAM] unsigned char 
  2620 ;;  sign1           1   76[COMRAM] unsigned char 
  2621 ;; Return value:  Size  Location     Type
  2622 ;;                  4   72[COMRAM] long 
  2623 ;; Registers used:
  2624 ;;		wreg, status,2, status,0
  2625 ;; Tracked objects:
  2626 ;;		On entry : 0/0
  2627 ;;		On exit  : 0/0
  2628 ;;		Unchanged: 0/0
  2629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2630 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2631 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2632 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2633 ;;      Totals:         6       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2634 ;;Total ram usage:       10 bytes
  2635 ;; Hardware stack levels used: 1
  2636 ;; Hardware stack levels required when called: 7
  2637 ;; This function calls:
  2638 ;;		Nothing
  2639 ;; This function is called by:
  2640 ;;		_detect_color
  2641 ;; This function uses a non-reentrant model
  2642 ;;
  2643                           
  2644                           	psect	text4
  2645   00165A                     __ptext4:
  2646                           	callstack 0
  2647   00165A                     ___fltol:
  2648                           	callstack 22
  2649   00165A  344B               	rlcf	(___fltol@f1+2)^0,w,c
  2650   00165C  344C               	rlcf	(___fltol@f1+3)^0,w,c
  2651   00165E  6E4E               	movwf	___fltol@exp1^0,c
  2652   001660  504E               	movf	___fltol@exp1^0,w,c
  2653   001662  A4D8               	btfss	status,2,c
  2654   001664  EF36  F00B         	goto	u3911
  2655   001668  EF38  F00B         	goto	u3910
  2656   00166C                     u3911:
  2657   00166C  EF42  F00B         	goto	l4062
  2658   001670                     u3910:
  2659   001670                     l4058:
  2660   001670  0E00               	movlw	0
  2661   001672  6E49               	movwf	?___fltol^0,c
  2662   001674  0E00               	movlw	0
  2663   001676  6E4A               	movwf	(?___fltol+1)^0,c
  2664   001678  0E00               	movlw	0
  2665   00167A  6E4B               	movwf	(?___fltol+2)^0,c
  2666   00167C  0E00               	movlw	0
  2667   00167E  6E4C               	movwf	(?___fltol+3)^0,c
  2668   001680  EFB0  F00B         	goto	l1002
  2669   001684                     l4062:
  2670   001684  C049  F09F         	movff	___fltol@f1,??___fltol
  2671   001688  C04A  F0A0         	movff	___fltol@f1+1,??___fltol+1
  2672   00168C  C04B  F0A1         	movff	___fltol@f1+2,??___fltol+2
  2673   001690  C04C  F0A2         	movff	___fltol@f1+3,??___fltol+3
  2674   001694  0E20               	movlw	32
  2675   001696  EF53  F00B         	goto	u3920
  2676   00169A                     u3925:
  2677   00169A  0100               	movlb	0	; () banked
  2678   00169C  90D8               	bcf	status,0,c
  2679   00169E  33A2               	rrcf	(??___fltol+3)& (0+255),f,b
  2680   0016A0  33A1               	rrcf	(??___fltol+2)& (0+255),f,b
  2681   0016A2  33A0               	rrcf	(??___fltol+1)& (0+255),f,b
  2682   0016A4  339F               	rrcf	??___fltol& (0+255),f,b
  2683   0016A6                     u3920:
  2684   0016A6  2EE8               	decfsz	wreg,f,c
  2685   0016A8  EF4D  F00B         	goto	u3925
  2686   0016AC  519F               	movf	??___fltol& (0+255),w,b
  2687   0016AE  6E4D               	movwf	___fltol@sign1^0,c
  2688   0016B0                     
  2689                           ; BSR set to: 0
  2690   0016B0  8E4B               	bsf	(___fltol@f1+2)^0,7,c
  2691   0016B2                     
  2692                           ; BSR set to: 0
  2693   0016B2  0EFF               	movlw	255
  2694   0016B4  1649               	andwf	___fltol@f1^0,f,c
  2695   0016B6  0EFF               	movlw	255
  2696   0016B8  164A               	andwf	(___fltol@f1+1)^0,f,c
  2697   0016BA  0EFF               	movlw	255
  2698   0016BC  164B               	andwf	(___fltol@f1+2)^0,f,c
  2699   0016BE  0E00               	movlw	0
  2700   0016C0  164C               	andwf	(___fltol@f1+3)^0,f,c
  2701   0016C2                     
  2702                           ; BSR set to: 0
  2703   0016C2  0E96               	movlw	150
  2704   0016C4  5E4E               	subwf	___fltol@exp1^0,f,c
  2705   0016C6                     
  2706                           ; BSR set to: 0
  2707   0016C6  BE4E               	btfsc	___fltol@exp1^0,7,c
  2708   0016C8  EF6A  F00B         	goto	u3930
  2709   0016CC  EF68  F00B         	goto	u3931
  2710   0016D0                     u3931:
  2711   0016D0  EF80  F00B         	goto	l4082
  2712   0016D4                     u3930:
  2713   0016D4                     
  2714                           ; BSR set to: 0
  2715   0016D4  504E               	movf	___fltol@exp1^0,w,c
  2716   0016D6  0A80               	xorlw	128
  2717   0016D8  0F97               	addlw	151
  2718   0016DA  B0D8               	btfsc	status,0,c
  2719   0016DC  EF72  F00B         	goto	u3941
  2720   0016E0  EF74  F00B         	goto	u3940
  2721   0016E4                     u3941:
  2722   0016E4  EF76  F00B         	goto	l4078
  2723   0016E8                     u3940:
  2724   0016E8  EF38  F00B         	goto	l4058
  2725   0016EC                     l4078:
  2726   0016EC  90D8               	bcf	status,0,c
  2727   0016EE  324C               	rrcf	(___fltol@f1+3)^0,f,c
  2728   0016F0  324B               	rrcf	(___fltol@f1+2)^0,f,c
  2729   0016F2  324A               	rrcf	(___fltol@f1+1)^0,f,c
  2730   0016F4  3249               	rrcf	___fltol@f1^0,f,c
  2731   0016F6  3E4E               	incfsz	___fltol@exp1^0,f,c
  2732   0016F8  EF76  F00B         	goto	l4078
  2733   0016FC  EF98  F00B         	goto	l4092
  2734   001700                     l4082:
  2735                           
  2736                           ; BSR set to: 0
  2737   001700  0E1F               	movlw	31
  2738   001702  644E               	cpfsgt	___fltol@exp1^0,c
  2739   001704  EF86  F00B         	goto	u3951
  2740   001708  EF88  F00B         	goto	u3950
  2741   00170C                     u3951:
  2742   00170C  EF90  F00B         	goto	l4090
  2743   001710                     u3950:
  2744   001710  EF38  F00B         	goto	l4058
  2745   001714                     l4088:
  2746   001714  90D8               	bcf	status,0,c
  2747   001716  3649               	rlcf	___fltol@f1^0,f,c
  2748   001718  364A               	rlcf	(___fltol@f1+1)^0,f,c
  2749   00171A  364B               	rlcf	(___fltol@f1+2)^0,f,c
  2750   00171C  364C               	rlcf	(___fltol@f1+3)^0,f,c
  2751   00171E  064E               	decf	___fltol@exp1^0,f,c
  2752   001720                     l4090:
  2753   001720  504E               	movf	___fltol@exp1^0,w,c
  2754   001722  A4D8               	btfss	status,2,c
  2755   001724  EF96  F00B         	goto	u3961
  2756   001728  EF98  F00B         	goto	u3960
  2757   00172C                     u3961:
  2758   00172C  EF8A  F00B         	goto	l4088
  2759   001730                     u3960:
  2760   001730                     l4092:
  2761   001730  504D               	movf	___fltol@sign1^0,w,c
  2762   001732  B4D8               	btfsc	status,2,c
  2763   001734  EF9E  F00B         	goto	u3971
  2764   001738  EFA0  F00B         	goto	u3970
  2765   00173C                     u3971:
  2766   00173C  EFA8  F00B         	goto	l4096
  2767   001740                     u3970:
  2768   001740  1E4C               	comf	(___fltol@f1+3)^0,f,c
  2769   001742  1E4B               	comf	(___fltol@f1+2)^0,f,c
  2770   001744  1E4A               	comf	(___fltol@f1+1)^0,f,c
  2771   001746  6C49               	negf	___fltol@f1^0,c
  2772   001748  0E00               	movlw	0
  2773   00174A  224A               	addwfc	(___fltol@f1+1)^0,f,c
  2774   00174C  224B               	addwfc	(___fltol@f1+2)^0,f,c
  2775   00174E  224C               	addwfc	(___fltol@f1+3)^0,f,c
  2776   001750                     l4096:
  2777   001750  C049  F049         	movff	___fltol@f1,?___fltol
  2778   001754  C04A  F04A         	movff	___fltol@f1+1,?___fltol+1
  2779   001758  C04B  F04B         	movff	___fltol@f1+2,?___fltol+2
  2780   00175C  C04C  F04C         	movff	___fltol@f1+3,?___fltol+3
  2781   001760                     l1002:
  2782   001760  0012               	return		;funcret
  2783   001762                     __end_of___fltol:
  2784                           	callstack 0
  2785                           
  2786 ;; *************** function ___flmul *****************
  2787 ;; Defined at:
  2788 ;;		line 8 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\sprcmul.c"
  2789 ;; Parameters:    Size  Location     Type
  2790 ;;  b               4   47[COMRAM] long 
  2791 ;;  a               4   51[COMRAM] long 
  2792 ;; Auto vars:     Size  Location     Type
  2793 ;;  prod            4   66[COMRAM] struct .
  2794 ;;  grs             4   60[COMRAM] unsigned long 
  2795 ;;  temp            2   70[COMRAM] struct .
  2796 ;;  bexp            1   65[COMRAM] unsigned char 
  2797 ;;  aexp            1   64[COMRAM] unsigned char 
  2798 ;;  sign            1   59[COMRAM] unsigned char 
  2799 ;; Return value:  Size  Location     Type
  2800 ;;                  4   47[COMRAM] unsigned char 
  2801 ;; Registers used:
  2802 ;;		wreg, status,2, status,0, prodl, prodh
  2803 ;; Tracked objects:
  2804 ;;		On entry : 0/0
  2805 ;;		On exit  : 0/0
  2806 ;;		Unchanged: 0/0
  2807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2808 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2809 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2810 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2811 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2812 ;;Total ram usage:       25 bytes
  2813 ;; Hardware stack levels used: 1
  2814 ;; Hardware stack levels required when called: 7
  2815 ;; This function calls:
  2816 ;;		Nothing
  2817 ;; This function is called by:
  2818 ;;		_detect_color
  2819 ;; This function uses a non-reentrant model
  2820 ;;
  2821                           
  2822                           	psect	text5
  2823   00067C                     __ptext5:
  2824                           	callstack 0
  2825   00067C                     ___flmul:
  2826                           	callstack 22
  2827   00067C  5033               	movf	(___flmul@b+3)^0,w,c
  2828   00067E  0B80               	andlw	128
  2829   000680  6E3C               	movwf	___flmul@sign^0,c
  2830   000682  5033               	movf	(___flmul@b+3)^0,w,c
  2831   000684  2433               	addwf	(___flmul@b+3)^0,w,c
  2832   000686  6E42               	movwf	___flmul@bexp^0,c
  2833   000688  AE32               	btfss	(___flmul@b+2)^0,7,c
  2834   00068A  EF49  F003         	goto	u2891
  2835   00068E  EF4B  F003         	goto	u2890
  2836   000692                     u2891:
  2837   000692  EF4C  F003         	goto	l3458
  2838   000696                     u2890:
  2839   000696  8042               	bsf	___flmul@bexp^0,0,c
  2840   000698                     l3458:
  2841   000698  5042               	movf	___flmul@bexp^0,w,c
  2842   00069A  B4D8               	btfsc	status,2,c
  2843   00069C  EF52  F003         	goto	u2901
  2844   0006A0  EF54  F003         	goto	u2900
  2845   0006A4                     u2901:
  2846   0006A4  EF67  F003         	goto	l3466
  2847   0006A8                     u2900:
  2848   0006A8  2842               	incf	___flmul@bexp^0,w,c
  2849   0006AA  A4D8               	btfss	status,2,c
  2850   0006AC  EF5A  F003         	goto	u2911
  2851   0006B0  EF5C  F003         	goto	u2910
  2852   0006B4                     u2911:
  2853   0006B4  EF64  F003         	goto	l3464
  2854   0006B8                     u2910:
  2855   0006B8  0E00               	movlw	0
  2856   0006BA  6E30               	movwf	___flmul@b^0,c
  2857   0006BC  0E00               	movlw	0
  2858   0006BE  6E31               	movwf	(___flmul@b+1)^0,c
  2859   0006C0  0E00               	movlw	0
  2860   0006C2  6E32               	movwf	(___flmul@b+2)^0,c
  2861   0006C4  0E00               	movlw	0
  2862   0006C6  6E33               	movwf	(___flmul@b+3)^0,c
  2863   0006C8                     l3464:
  2864   0006C8  8E32               	bsf	(___flmul@b+2)^0,7,c
  2865   0006CA  EF6F  F003         	goto	l3468
  2866   0006CE                     l3466:
  2867   0006CE  0E00               	movlw	0
  2868   0006D0  6E30               	movwf	___flmul@b^0,c
  2869   0006D2  0E00               	movlw	0
  2870   0006D4  6E31               	movwf	(___flmul@b+1)^0,c
  2871   0006D6  0E00               	movlw	0
  2872   0006D8  6E32               	movwf	(___flmul@b+2)^0,c
  2873   0006DA  0E00               	movlw	0
  2874   0006DC  6E33               	movwf	(___flmul@b+3)^0,c
  2875   0006DE                     l3468:
  2876   0006DE  5037               	movf	(___flmul@a+3)^0,w,c
  2877   0006E0  0B80               	andlw	128
  2878   0006E2  1A3C               	xorwf	___flmul@sign^0,f,c
  2879   0006E4  5037               	movf	(___flmul@a+3)^0,w,c
  2880   0006E6  2437               	addwf	(___flmul@a+3)^0,w,c
  2881   0006E8  6E41               	movwf	___flmul@aexp^0,c
  2882   0006EA  AE36               	btfss	(___flmul@a+2)^0,7,c
  2883   0006EC  EF7A  F003         	goto	u2921
  2884   0006F0  EF7C  F003         	goto	u2920
  2885   0006F4                     u2921:
  2886   0006F4  EF7D  F003         	goto	l3476
  2887   0006F8                     u2920:
  2888   0006F8  8041               	bsf	___flmul@aexp^0,0,c
  2889   0006FA                     l3476:
  2890   0006FA  5041               	movf	___flmul@aexp^0,w,c
  2891   0006FC  B4D8               	btfsc	status,2,c
  2892   0006FE  EF83  F003         	goto	u2931
  2893   000702  EF85  F003         	goto	u2930
  2894   000706                     u2931:
  2895   000706  EF98  F003         	goto	l3484
  2896   00070A                     u2930:
  2897   00070A  2841               	incf	___flmul@aexp^0,w,c
  2898   00070C  A4D8               	btfss	status,2,c
  2899   00070E  EF8B  F003         	goto	u2941
  2900   000712  EF8D  F003         	goto	u2940
  2901   000716                     u2941:
  2902   000716  EF95  F003         	goto	l3482
  2903   00071A                     u2940:
  2904   00071A  0E00               	movlw	0
  2905   00071C  6E34               	movwf	___flmul@a^0,c
  2906   00071E  0E00               	movlw	0
  2907   000720  6E35               	movwf	(___flmul@a+1)^0,c
  2908   000722  0E00               	movlw	0
  2909   000724  6E36               	movwf	(___flmul@a+2)^0,c
  2910   000726  0E00               	movlw	0
  2911   000728  6E37               	movwf	(___flmul@a+3)^0,c
  2912   00072A                     l3482:
  2913   00072A  8E36               	bsf	(___flmul@a+2)^0,7,c
  2914   00072C  EFA0  F003         	goto	l1319
  2915   000730                     l3484:
  2916   000730  0E00               	movlw	0
  2917   000732  6E34               	movwf	___flmul@a^0,c
  2918   000734  0E00               	movlw	0
  2919   000736  6E35               	movwf	(___flmul@a+1)^0,c
  2920   000738  0E00               	movlw	0
  2921   00073A  6E36               	movwf	(___flmul@a+2)^0,c
  2922   00073C  0E00               	movlw	0
  2923   00073E  6E37               	movwf	(___flmul@a+3)^0,c
  2924   000740                     l1319:
  2925   000740  5041               	movf	___flmul@aexp^0,w,c
  2926   000742  B4D8               	btfsc	status,2,c
  2927   000744  EFA6  F003         	goto	u2951
  2928   000748  EFA8  F003         	goto	u2950
  2929   00074C                     u2951:
  2930   00074C  EFB0  F003         	goto	l3488
  2931   000750                     u2950:
  2932   000750  5042               	movf	___flmul@bexp^0,w,c
  2933   000752  A4D8               	btfss	status,2,c
  2934   000754  EFAE  F003         	goto	u2961
  2935   000758  EFB0  F003         	goto	u2960
  2936   00075C                     u2961:
  2937   00075C  EFBA  F003         	goto	l3492
  2938   000760                     u2960:
  2939   000760                     l3488:
  2940   000760  0E00               	movlw	0
  2941   000762  6E30               	movwf	?___flmul^0,c
  2942   000764  0E00               	movlw	0
  2943   000766  6E31               	movwf	(?___flmul+1)^0,c
  2944   000768  0E00               	movlw	0
  2945   00076A  6E32               	movwf	(?___flmul+2)^0,c
  2946   00076C  0E00               	movlw	0
  2947   00076E  6E33               	movwf	(?___flmul+3)^0,c
  2948   000770  EF52  F005         	goto	l1323
  2949   000774                     l3492:
  2950   000774  5036               	movf	(___flmul@a+2)^0,w,c
  2951   000776  0230               	mulwf	___flmul@b^0,c
  2952   000778  CFF3 F047          	movff	prodl,___flmul@temp
  2953   00077C  CFF4 F048          	movff	prodh,___flmul@temp+1
  2954   000780  5047               	movf	___flmul@temp^0,w,c
  2955   000782  6E3D               	movwf	___flmul@grs^0,c
  2956   000784  6A3E               	clrf	(___flmul@grs+1)^0,c
  2957   000786  6A3F               	clrf	(___flmul@grs+2)^0,c
  2958   000788  6A40               	clrf	(___flmul@grs+3)^0,c
  2959   00078A  5048               	movf	(___flmul@temp+1)^0,w,c
  2960   00078C  6E43               	movwf	___flmul@prod^0,c
  2961   00078E  6A44               	clrf	(___flmul@prod+1)^0,c
  2962   000790  6A45               	clrf	(___flmul@prod+2)^0,c
  2963   000792  6A46               	clrf	(___flmul@prod+3)^0,c
  2964   000794  5035               	movf	(___flmul@a+1)^0,w,c
  2965   000796  0231               	mulwf	(___flmul@b+1)^0,c
  2966   000798  CFF3 F047          	movff	prodl,___flmul@temp
  2967   00079C  CFF4 F048          	movff	prodh,___flmul@temp+1
  2968   0007A0  5047               	movf	___flmul@temp^0,w,c
  2969   0007A2  263D               	addwf	___flmul@grs^0,f,c
  2970   0007A4  0E00               	movlw	0
  2971   0007A6  223E               	addwfc	(___flmul@grs+1)^0,f,c
  2972   0007A8  223F               	addwfc	(___flmul@grs+2)^0,f,c
  2973   0007AA  2240               	addwfc	(___flmul@grs+3)^0,f,c
  2974   0007AC  5048               	movf	(___flmul@temp+1)^0,w,c
  2975   0007AE  2643               	addwf	___flmul@prod^0,f,c
  2976   0007B0  0E00               	movlw	0
  2977   0007B2  2244               	addwfc	(___flmul@prod+1)^0,f,c
  2978   0007B4  2245               	addwfc	(___flmul@prod+2)^0,f,c
  2979   0007B6  2246               	addwfc	(___flmul@prod+3)^0,f,c
  2980   0007B8  5034               	movf	___flmul@a^0,w,c
  2981   0007BA  0232               	mulwf	(___flmul@b+2)^0,c
  2982   0007BC  CFF3 F047          	movff	prodl,___flmul@temp
  2983   0007C0  CFF4 F048          	movff	prodh,___flmul@temp+1
  2984   0007C4  5047               	movf	___flmul@temp^0,w,c
  2985   0007C6  263D               	addwf	___flmul@grs^0,f,c
  2986   0007C8  0E00               	movlw	0
  2987   0007CA  223E               	addwfc	(___flmul@grs+1)^0,f,c
  2988   0007CC  223F               	addwfc	(___flmul@grs+2)^0,f,c
  2989   0007CE  2240               	addwfc	(___flmul@grs+3)^0,f,c
  2990   0007D0  5048               	movf	(___flmul@temp+1)^0,w,c
  2991   0007D2  2643               	addwf	___flmul@prod^0,f,c
  2992   0007D4  0E00               	movlw	0
  2993   0007D6  2244               	addwfc	(___flmul@prod+1)^0,f,c
  2994   0007D8  2245               	addwfc	(___flmul@prod+2)^0,f,c
  2995   0007DA  2246               	addwfc	(___flmul@prod+3)^0,f,c
  2996   0007DC  C03F  F040         	movff	___flmul@grs+2,___flmul@grs+3
  2997   0007E0  C03E  F03F         	movff	___flmul@grs+1,___flmul@grs+2
  2998   0007E4  C03D  F03E         	movff	___flmul@grs,___flmul@grs+1
  2999   0007E8  6A3D               	clrf	___flmul@grs^0,c
  3000   0007EA  5034               	movf	___flmul@a^0,w,c
  3001   0007EC  0231               	mulwf	(___flmul@b+1)^0,c
  3002   0007EE  CFF3 F047          	movff	prodl,___flmul@temp
  3003   0007F2  CFF4 F048          	movff	prodh,___flmul@temp+1
  3004   0007F6  5047               	movf	___flmul@temp^0,w,c
  3005   0007F8  263D               	addwf	___flmul@grs^0,f,c
  3006   0007FA  5048               	movf	(___flmul@temp+1)^0,w,c
  3007   0007FC  223E               	addwfc	(___flmul@grs+1)^0,f,c
  3008   0007FE  0E00               	movlw	0
  3009   000800  223F               	addwfc	(___flmul@grs+2)^0,f,c
  3010   000802  0E00               	movlw	0
  3011   000804  2240               	addwfc	(___flmul@grs+3)^0,f,c
  3012   000806  5035               	movf	(___flmul@a+1)^0,w,c
  3013   000808  0230               	mulwf	___flmul@b^0,c
  3014   00080A  CFF3 F047          	movff	prodl,___flmul@temp
  3015   00080E  CFF4 F048          	movff	prodh,___flmul@temp+1
  3016   000812  5047               	movf	___flmul@temp^0,w,c
  3017   000814  263D               	addwf	___flmul@grs^0,f,c
  3018   000816  5048               	movf	(___flmul@temp+1)^0,w,c
  3019   000818  223E               	addwfc	(___flmul@grs+1)^0,f,c
  3020   00081A  0E00               	movlw	0
  3021   00081C  223F               	addwfc	(___flmul@grs+2)^0,f,c
  3022   00081E  0E00               	movlw	0
  3023   000820  2240               	addwfc	(___flmul@grs+3)^0,f,c
  3024   000822  C03F  F040         	movff	___flmul@grs+2,___flmul@grs+3
  3025   000826  C03E  F03F         	movff	___flmul@grs+1,___flmul@grs+2
  3026   00082A  C03D  F03E         	movff	___flmul@grs,___flmul@grs+1
  3027   00082E  6A3D               	clrf	___flmul@grs^0,c
  3028   000830  5034               	movf	___flmul@a^0,w,c
  3029   000832  0230               	mulwf	___flmul@b^0,c
  3030   000834  CFF3 F047          	movff	prodl,___flmul@temp
  3031   000838  CFF4 F048          	movff	prodh,___flmul@temp+1
  3032   00083C  5047               	movf	___flmul@temp^0,w,c
  3033   00083E  263D               	addwf	___flmul@grs^0,f,c
  3034   000840  5048               	movf	(___flmul@temp+1)^0,w,c
  3035   000842  223E               	addwfc	(___flmul@grs+1)^0,f,c
  3036   000844  0E00               	movlw	0
  3037   000846  223F               	addwfc	(___flmul@grs+2)^0,f,c
  3038   000848  0E00               	movlw	0
  3039   00084A  2240               	addwfc	(___flmul@grs+3)^0,f,c
  3040   00084C  5036               	movf	(___flmul@a+2)^0,w,c
  3041   00084E  0231               	mulwf	(___flmul@b+1)^0,c
  3042   000850  CFF3 F047          	movff	prodl,___flmul@temp
  3043   000854  CFF4 F048          	movff	prodh,___flmul@temp+1
  3044   000858  5047               	movf	___flmul@temp^0,w,c
  3045   00085A  2643               	addwf	___flmul@prod^0,f,c
  3046   00085C  5048               	movf	(___flmul@temp+1)^0,w,c
  3047   00085E  2244               	addwfc	(___flmul@prod+1)^0,f,c
  3048   000860  0E00               	movlw	0
  3049   000862  2245               	addwfc	(___flmul@prod+2)^0,f,c
  3050   000864  0E00               	movlw	0
  3051   000866  2246               	addwfc	(___flmul@prod+3)^0,f,c
  3052   000868  5035               	movf	(___flmul@a+1)^0,w,c
  3053   00086A  0232               	mulwf	(___flmul@b+2)^0,c
  3054   00086C  CFF3 F047          	movff	prodl,___flmul@temp
  3055   000870  CFF4 F048          	movff	prodh,___flmul@temp+1
  3056   000874  5047               	movf	___flmul@temp^0,w,c
  3057   000876  2643               	addwf	___flmul@prod^0,f,c
  3058   000878  5048               	movf	(___flmul@temp+1)^0,w,c
  3059   00087A  2244               	addwfc	(___flmul@prod+1)^0,f,c
  3060   00087C  0E00               	movlw	0
  3061   00087E  2245               	addwfc	(___flmul@prod+2)^0,f,c
  3062   000880  0E00               	movlw	0
  3063   000882  2246               	addwfc	(___flmul@prod+3)^0,f,c
  3064   000884  5036               	movf	(___flmul@a+2)^0,w,c
  3065   000886  0232               	mulwf	(___flmul@b+2)^0,c
  3066   000888  CFF3 F047          	movff	prodl,___flmul@temp
  3067   00088C  CFF4 F048          	movff	prodh,___flmul@temp+1
  3068   000890  5047               	movf	___flmul@temp^0,w,c
  3069   000892  6E38               	movwf	??___flmul^0,c
  3070   000894  5048               	movf	(___flmul@temp+1)^0,w,c
  3071   000896  6E39               	movwf	(??___flmul+1)^0,c
  3072   000898  6A3A               	clrf	(??___flmul+2)^0,c
  3073   00089A  6A3B               	clrf	(??___flmul+3)^0,c
  3074   00089C  C03A  F03B         	movff	??___flmul+2,??___flmul+3
  3075   0008A0  C039  F03A         	movff	??___flmul+1,??___flmul+2
  3076   0008A4  C038  F039         	movff	??___flmul,??___flmul+1
  3077   0008A8  6A38               	clrf	??___flmul^0,c
  3078   0008AA  5038               	movf	??___flmul^0,w,c
  3079   0008AC  2643               	addwf	___flmul@prod^0,f,c
  3080   0008AE  5039               	movf	(??___flmul+1)^0,w,c
  3081   0008B0  2244               	addwfc	(___flmul@prod+1)^0,f,c
  3082   0008B2  503A               	movf	(??___flmul+2)^0,w,c
  3083   0008B4  2245               	addwfc	(___flmul@prod+2)^0,f,c
  3084   0008B6  503B               	movf	(??___flmul+3)^0,w,c
  3085   0008B8  2246               	addwfc	(___flmul@prod+3)^0,f,c
  3086   0008BA  C03D  F038         	movff	___flmul@grs,??___flmul
  3087   0008BE  C03E  F039         	movff	___flmul@grs+1,??___flmul+1
  3088   0008C2  C03F  F03A         	movff	___flmul@grs+2,??___flmul+2
  3089   0008C6  C040  F03B         	movff	___flmul@grs+3,??___flmul+3
  3090   0008CA  0E19               	movlw	25
  3091   0008CC  EF6D  F004         	goto	u2970
  3092   0008D0                     u2975:
  3093   0008D0  90D8               	bcf	status,0,c
  3094   0008D2  323B               	rrcf	(??___flmul+3)^0,f,c
  3095   0008D4  323A               	rrcf	(??___flmul+2)^0,f,c
  3096   0008D6  3239               	rrcf	(??___flmul+1)^0,f,c
  3097   0008D8  3238               	rrcf	??___flmul^0,f,c
  3098   0008DA                     u2970:
  3099   0008DA  2EE8               	decfsz	wreg,f,c
  3100   0008DC  EF68  F004         	goto	u2975
  3101   0008E0  5038               	movf	??___flmul^0,w,c
  3102   0008E2  2643               	addwf	___flmul@prod^0,f,c
  3103   0008E4  5039               	movf	(??___flmul+1)^0,w,c
  3104   0008E6  2244               	addwfc	(___flmul@prod+1)^0,f,c
  3105   0008E8  503A               	movf	(??___flmul+2)^0,w,c
  3106   0008EA  2245               	addwfc	(___flmul@prod+2)^0,f,c
  3107   0008EC  503B               	movf	(??___flmul+3)^0,w,c
  3108   0008EE  2246               	addwfc	(___flmul@prod+3)^0,f,c
  3109   0008F0  C03F  F040         	movff	___flmul@grs+2,___flmul@grs+3
  3110   0008F4  C03E  F03F         	movff	___flmul@grs+1,___flmul@grs+2
  3111   0008F8  C03D  F03E         	movff	___flmul@grs,___flmul@grs+1
  3112   0008FC  6A3D               	clrf	___flmul@grs^0,c
  3113   0008FE  5041               	movf	___flmul@aexp^0,w,c
  3114   000900  C042  F038         	movff	___flmul@bexp,??___flmul
  3115   000904  6A39               	clrf	(??___flmul+1)^0,c
  3116   000906  2638               	addwf	??___flmul^0,f,c
  3117   000908  0E00               	movlw	0
  3118   00090A  2239               	addwfc	(??___flmul+1)^0,f,c
  3119   00090C  0E82               	movlw	130
  3120   00090E  2438               	addwf	??___flmul^0,w,c
  3121   000910  6E47               	movwf	___flmul@temp^0,c
  3122   000912  0EFF               	movlw	255
  3123   000914  2039               	addwfc	(??___flmul+1)^0,w,c
  3124   000916  6E48               	movwf	(___flmul@temp+1)^0,c
  3125   000918  EFA3  F004         	goto	l3540
  3126   00091C                     l3534:
  3127   00091C  90D8               	bcf	status,0,c
  3128   00091E  3643               	rlcf	___flmul@prod^0,f,c
  3129   000920  3644               	rlcf	(___flmul@prod+1)^0,f,c
  3130   000922  3645               	rlcf	(___flmul@prod+2)^0,f,c
  3131   000924  3646               	rlcf	(___flmul@prod+3)^0,f,c
  3132   000926  AE40               	btfss	(___flmul@grs+3)^0,7,c
  3133   000928  EF98  F004         	goto	u2981
  3134   00092C  EF9A  F004         	goto	u2980
  3135   000930                     u2981:
  3136   000930  EF9B  F004         	goto	l1326
  3137   000934                     u2980:
  3138   000934  8043               	bsf	___flmul@prod^0,0,c
  3139   000936                     l1326:
  3140   000936  90D8               	bcf	status,0,c
  3141   000938  363D               	rlcf	___flmul@grs^0,f,c
  3142   00093A  363E               	rlcf	(___flmul@grs+1)^0,f,c
  3143   00093C  363F               	rlcf	(___flmul@grs+2)^0,f,c
  3144   00093E  3640               	rlcf	(___flmul@grs+3)^0,f,c
  3145   000940  0647               	decf	___flmul@temp^0,f,c
  3146   000942  A0D8               	btfss	status,0,c
  3147   000944  0648               	decf	(___flmul@temp+1)^0,f,c
  3148   000946                     l3540:
  3149   000946  AE45               	btfss	(___flmul@prod+2)^0,7,c
  3150   000948  EFA8  F004         	goto	u2991
  3151   00094C  EFAA  F004         	goto	u2990
  3152   000950                     u2991:
  3153   000950  EF8E  F004         	goto	l3534
  3154   000954                     u2990:
  3155   000954  0E00               	movlw	0
  3156   000956  6E41               	movwf	___flmul@aexp^0,c
  3157   000958  AE40               	btfss	(___flmul@grs+3)^0,7,c
  3158   00095A  EFB1  F004         	goto	u3001
  3159   00095E  EFB3  F004         	goto	u3000
  3160   000962                     u3001:
  3161   000962  EFD7  F004         	goto	l1328
  3162   000966                     u3000:
  3163   000966  0EFF               	movlw	255
  3164   000968  143D               	andwf	___flmul@grs^0,w,c
  3165   00096A  6E38               	movwf	??___flmul^0,c
  3166   00096C  0EFF               	movlw	255
  3167   00096E  143E               	andwf	(___flmul@grs+1)^0,w,c
  3168   000970  6E39               	movwf	(??___flmul+1)^0,c
  3169   000972  0EFF               	movlw	255
  3170   000974  143F               	andwf	(___flmul@grs+2)^0,w,c
  3171   000976  6E3A               	movwf	(??___flmul+2)^0,c
  3172   000978  0E7F               	movlw	127
  3173   00097A  1440               	andwf	(___flmul@grs+3)^0,w,c
  3174   00097C  6E3B               	movwf	(??___flmul+3)^0,c
  3175   00097E  5038               	movf	??___flmul^0,w,c
  3176   000980  1039               	iorwf	(??___flmul+1)^0,w,c
  3177   000982  103A               	iorwf	(??___flmul+2)^0,w,c
  3178   000984  103B               	iorwf	(??___flmul+3)^0,w,c
  3179   000986  B4D8               	btfsc	status,2,c
  3180   000988  EFC8  F004         	goto	u3011
  3181   00098C  EFCA  F004         	goto	u3010
  3182   000990                     u3011:
  3183   000990  EFCE  F004         	goto	l1329
  3184   000994                     u3010:
  3185   000994                     l3548:
  3186   000994  0E01               	movlw	1
  3187   000996  6E41               	movwf	___flmul@aexp^0,c
  3188   000998  EFD7  F004         	goto	l1328
  3189   00099C                     l1329:
  3190   00099C  A043               	btfss	___flmul@prod^0,0,c
  3191   00099E  EFD3  F004         	goto	u3021
  3192   0009A2  EFD5  F004         	goto	u3020
  3193   0009A6                     u3021:
  3194   0009A6  EFD7  F004         	goto	l1328
  3195   0009AA                     u3020:
  3196   0009AA  EFCA  F004         	goto	l3548
  3197   0009AE                     l1328:
  3198   0009AE  5041               	movf	___flmul@aexp^0,w,c
  3199   0009B0  B4D8               	btfsc	status,2,c
  3200   0009B2  EFDD  F004         	goto	u3031
  3201   0009B6  EFDF  F004         	goto	u3030
  3202   0009BA                     u3031:
  3203   0009BA  EF03  F005         	goto	l3560
  3204   0009BE                     u3030:
  3205   0009BE  0E01               	movlw	1
  3206   0009C0  2643               	addwf	___flmul@prod^0,f,c
  3207   0009C2  0E00               	movlw	0
  3208   0009C4  2244               	addwfc	(___flmul@prod+1)^0,f,c
  3209   0009C6  2245               	addwfc	(___flmul@prod+2)^0,f,c
  3210   0009C8  2246               	addwfc	(___flmul@prod+3)^0,f,c
  3211   0009CA  A046               	btfss	(___flmul@prod+3)^0,0,c
  3212   0009CC  EFEA  F004         	goto	u3041
  3213   0009D0  EFEC  F004         	goto	u3040
  3214   0009D4                     u3041:
  3215   0009D4  EF03  F005         	goto	l3560
  3216   0009D8                     u3040:
  3217   0009D8  C043  F038         	movff	___flmul@prod,??___flmul
  3218   0009DC  C044  F039         	movff	___flmul@prod+1,??___flmul+1
  3219   0009E0  C045  F03A         	movff	___flmul@prod+2,??___flmul+2
  3220   0009E4  C046  F03B         	movff	___flmul@prod+3,??___flmul+3
  3221   0009E8  343B               	rlcf	(??___flmul+3)^0,w,c
  3222   0009EA  323B               	rrcf	(??___flmul+3)^0,f,c
  3223   0009EC  323A               	rrcf	(??___flmul+2)^0,f,c
  3224   0009EE  3239               	rrcf	(??___flmul+1)^0,f,c
  3225   0009F0  3238               	rrcf	??___flmul^0,f,c
  3226   0009F2  C038  F043         	movff	??___flmul,___flmul@prod
  3227   0009F6  C039  F044         	movff	??___flmul+1,___flmul@prod+1
  3228   0009FA  C03A  F045         	movff	??___flmul+2,___flmul@prod+2
  3229   0009FE  C03B  F046         	movff	??___flmul+3,___flmul@prod+3
  3230   000A02  4A47               	infsnz	___flmul@temp^0,f,c
  3231   000A04  2A48               	incf	(___flmul@temp+1)^0,f,c
  3232   000A06                     l3560:
  3233   000A06  BE48               	btfsc	(___flmul@temp+1)^0,7,c
  3234   000A08  EF0E  F005         	goto	u3051
  3235   000A0C  5048               	movf	(___flmul@temp+1)^0,w,c
  3236   000A0E  E108               	bnz	u3050
  3237   000A10  2847               	incf	___flmul@temp^0,w,c
  3238   000A12  A0D8               	btfss	status,0,c
  3239   000A14  EF0E  F005         	goto	u3051
  3240   000A18  EF10  F005         	goto	u3050
  3241   000A1C                     u3051:
  3242   000A1C  EF1A  F005         	goto	l3564
  3243   000A20                     u3050:
  3244   000A20  0E00               	movlw	0
  3245   000A22  6E43               	movwf	___flmul@prod^0,c
  3246   000A24  0E00               	movlw	0
  3247   000A26  6E44               	movwf	(___flmul@prod+1)^0,c
  3248   000A28  0E80               	movlw	128
  3249   000A2A  6E45               	movwf	(___flmul@prod+2)^0,c
  3250   000A2C  0E7F               	movlw	127
  3251   000A2E  6E46               	movwf	(___flmul@prod+3)^0,c
  3252   000A30  EF48  F005         	goto	l3576
  3253   000A34                     l3564:
  3254   000A34  BE48               	btfsc	(___flmul@temp+1)^0,7,c
  3255   000A36  EF27  F005         	goto	u3060
  3256   000A3A  5048               	movf	(___flmul@temp+1)^0,w,c
  3257   000A3C  E106               	bnz	u3061
  3258   000A3E  0447               	decf	___flmul@temp^0,w,c
  3259   000A40  B0D8               	btfsc	status,0,c
  3260   000A42  EF25  F005         	goto	u3061
  3261   000A46  EF27  F005         	goto	u3060
  3262   000A4A                     u3061:
  3263   000A4A  EF33  F005         	goto	l1336
  3264   000A4E                     u3060:
  3265   000A4E  0E00               	movlw	0
  3266   000A50  6E43               	movwf	___flmul@prod^0,c
  3267   000A52  0E00               	movlw	0
  3268   000A54  6E44               	movwf	(___flmul@prod+1)^0,c
  3269   000A56  0E00               	movlw	0
  3270   000A58  6E45               	movwf	(___flmul@prod+2)^0,c
  3271   000A5A  0E00               	movlw	0
  3272   000A5C  6E46               	movwf	(___flmul@prod+3)^0,c
  3273   000A5E  0E00               	movlw	0
  3274   000A60  6E3C               	movwf	___flmul@sign^0,c
  3275   000A62  EF48  F005         	goto	l3576
  3276   000A66                     l1336:
  3277   000A66  C047  F042         	movff	___flmul@temp,___flmul@bexp
  3278   000A6A  0EFF               	movlw	255
  3279   000A6C  1643               	andwf	___flmul@prod^0,f,c
  3280   000A6E  0EFF               	movlw	255
  3281   000A70  1644               	andwf	(___flmul@prod+1)^0,f,c
  3282   000A72  0E7F               	movlw	127
  3283   000A74  1645               	andwf	(___flmul@prod+2)^0,f,c
  3284   000A76  0E00               	movlw	0
  3285   000A78  1646               	andwf	(___flmul@prod+3)^0,f,c
  3286   000A7A  A042               	btfss	___flmul@bexp^0,0,c
  3287   000A7C  EF42  F005         	goto	u3071
  3288   000A80  EF44  F005         	goto	u3070
  3289   000A84                     u3071:
  3290   000A84  EF45  F005         	goto	l3574
  3291   000A88                     u3070:
  3292   000A88  8E45               	bsf	(___flmul@prod+2)^0,7,c
  3293   000A8A                     l3574:
  3294   000A8A  90D8               	bcf	status,0,c
  3295   000A8C  3042               	rrcf	___flmul@bexp^0,w,c
  3296   000A8E  6E46               	movwf	(___flmul@prod+3)^0,c
  3297   000A90                     l3576:
  3298   000A90  503C               	movf	___flmul@sign^0,w,c
  3299   000A92  1246               	iorwf	(___flmul@prod+3)^0,f,c
  3300   000A94  C043  F030         	movff	___flmul@prod,?___flmul
  3301   000A98  C044  F031         	movff	___flmul@prod+1,?___flmul+1
  3302   000A9C  C045  F032         	movff	___flmul@prod+2,?___flmul+2
  3303   000AA0  C046  F033         	movff	___flmul@prod+3,?___flmul+3
  3304   000AA4                     l1323:
  3305   000AA4  0012               	return		;funcret
  3306   000AA6                     __end_of___flmul:
  3307                           	callstack 0
  3308                           
  3309 ;; *************** function ___fldiv *****************
  3310 ;; Defined at:
  3311 ;;		line 11 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\sprcdiv.c"
  3312 ;; Parameters:    Size  Location     Type
  3313 ;;  b               4   22[COMRAM] unsigned char 
  3314 ;;  a               4   26[COMRAM] unsigned char 
  3315 ;; Auto vars:     Size  Location     Type
  3316 ;;  grs             4   41[COMRAM] unsigned long 
  3317 ;;  rem             4   34[COMRAM] unsigned long 
  3318 ;;  new_exp         2   39[COMRAM] short 
  3319 ;;  aexp            1   46[COMRAM] unsigned char 
  3320 ;;  bexp            1   45[COMRAM] unsigned char 
  3321 ;;  sign            1   38[COMRAM] unsigned char 
  3322 ;; Return value:  Size  Location     Type
  3323 ;;                  4   22[COMRAM] unsigned char 
  3324 ;; Registers used:
  3325 ;;		wreg, status,2, status,0
  3326 ;; Tracked objects:
  3327 ;;		On entry : 0/0
  3328 ;;		On exit  : 0/0
  3329 ;;		Unchanged: 0/0
  3330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3331 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3332 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3333 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3334 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3335 ;;Total ram usage:       25 bytes
  3336 ;; Hardware stack levels used: 1
  3337 ;; Hardware stack levels required when called: 7
  3338 ;; This function calls:
  3339 ;;		Nothing
  3340 ;; This function is called by:
  3341 ;;		_detect_color
  3342 ;; This function uses a non-reentrant model
  3343 ;;
  3344                           
  3345                           	psect	text6
  3346   000AA6                     __ptext6:
  3347                           	callstack 0
  3348   000AA6                     ___fldiv:
  3349                           	callstack 22
  3350   000AA6  501A               	movf	(___fldiv@b+3)^0,w,c
  3351   000AA8  0B80               	andlw	128
  3352   000AAA  6E27               	movwf	___fldiv@sign^0,c
  3353   000AAC  501A               	movf	(___fldiv@b+3)^0,w,c
  3354   000AAE  241A               	addwf	(___fldiv@b+3)^0,w,c
  3355   000AB0  6E2E               	movwf	___fldiv@bexp^0,c
  3356   000AB2  AE19               	btfss	(___fldiv@b+2)^0,7,c
  3357   000AB4  EF5E  F005         	goto	u2661
  3358   000AB8  EF60  F005         	goto	u2660
  3359   000ABC                     u2661:
  3360   000ABC  EF61  F005         	goto	l3320
  3361   000AC0                     u2660:
  3362   000AC0  802E               	bsf	___fldiv@bexp^0,0,c
  3363   000AC2                     l3320:
  3364   000AC2  502E               	movf	___fldiv@bexp^0,w,c
  3365   000AC4  B4D8               	btfsc	status,2,c
  3366   000AC6  EF67  F005         	goto	u2671
  3367   000ACA  EF69  F005         	goto	u2670
  3368   000ACE                     u2671:
  3369   000ACE  EF7E  F005         	goto	l3330
  3370   000AD2                     u2670:
  3371   000AD2  282E               	incf	___fldiv@bexp^0,w,c
  3372   000AD4  A4D8               	btfss	status,2,c
  3373   000AD6  EF6F  F005         	goto	u2681
  3374   000ADA  EF71  F005         	goto	u2680
  3375   000ADE                     u2681:
  3376   000ADE  EF79  F005         	goto	l3326
  3377   000AE2                     u2680:
  3378   000AE2  0E00               	movlw	0
  3379   000AE4  6E17               	movwf	___fldiv@b^0,c
  3380   000AE6  0E00               	movlw	0
  3381   000AE8  6E18               	movwf	(___fldiv@b+1)^0,c
  3382   000AEA  0E00               	movlw	0
  3383   000AEC  6E19               	movwf	(___fldiv@b+2)^0,c
  3384   000AEE  0E00               	movlw	0
  3385   000AF0  6E1A               	movwf	(___fldiv@b+3)^0,c
  3386   000AF2                     l3326:
  3387   000AF2  8E19               	bsf	(___fldiv@b+2)^0,7,c
  3388   000AF4  0E00               	movlw	0
  3389   000AF6  6E1A               	movwf	(___fldiv@b+3)^0,c
  3390   000AF8  EF86  F005         	goto	l3332
  3391   000AFC                     l3330:
  3392   000AFC  0E00               	movlw	0
  3393   000AFE  6E17               	movwf	___fldiv@b^0,c
  3394   000B00  0E00               	movlw	0
  3395   000B02  6E18               	movwf	(___fldiv@b+1)^0,c
  3396   000B04  0E00               	movlw	0
  3397   000B06  6E19               	movwf	(___fldiv@b+2)^0,c
  3398   000B08  0E00               	movlw	0
  3399   000B0A  6E1A               	movwf	(___fldiv@b+3)^0,c
  3400   000B0C                     l3332:
  3401   000B0C  501E               	movf	(___fldiv@a+3)^0,w,c
  3402   000B0E  0B80               	andlw	128
  3403   000B10  1A27               	xorwf	___fldiv@sign^0,f,c
  3404   000B12  501E               	movf	(___fldiv@a+3)^0,w,c
  3405   000B14  241E               	addwf	(___fldiv@a+3)^0,w,c
  3406   000B16  6E2F               	movwf	___fldiv@aexp^0,c
  3407   000B18  AE1D               	btfss	(___fldiv@a+2)^0,7,c
  3408   000B1A  EF91  F005         	goto	u2691
  3409   000B1E  EF93  F005         	goto	u2690
  3410   000B22                     u2691:
  3411   000B22  EF94  F005         	goto	l3340
  3412   000B26                     u2690:
  3413   000B26  802F               	bsf	___fldiv@aexp^0,0,c
  3414   000B28                     l3340:
  3415   000B28  502F               	movf	___fldiv@aexp^0,w,c
  3416   000B2A  B4D8               	btfsc	status,2,c
  3417   000B2C  EF9A  F005         	goto	u2701
  3418   000B30  EF9C  F005         	goto	u2700
  3419   000B34                     u2701:
  3420   000B34  EFB1  F005         	goto	l3350
  3421   000B38                     u2700:
  3422   000B38  282F               	incf	___fldiv@aexp^0,w,c
  3423   000B3A  A4D8               	btfss	status,2,c
  3424   000B3C  EFA2  F005         	goto	u2711
  3425   000B40  EFA4  F005         	goto	u2710
  3426   000B44                     u2711:
  3427   000B44  EFAC  F005         	goto	l3346
  3428   000B48                     u2710:
  3429   000B48  0E00               	movlw	0
  3430   000B4A  6E1B               	movwf	___fldiv@a^0,c
  3431   000B4C  0E00               	movlw	0
  3432   000B4E  6E1C               	movwf	(___fldiv@a+1)^0,c
  3433   000B50  0E00               	movlw	0
  3434   000B52  6E1D               	movwf	(___fldiv@a+2)^0,c
  3435   000B54  0E00               	movlw	0
  3436   000B56  6E1E               	movwf	(___fldiv@a+3)^0,c
  3437   000B58                     l3346:
  3438   000B58  8E1D               	bsf	(___fldiv@a+2)^0,7,c
  3439   000B5A  0E00               	movlw	0
  3440   000B5C  6E1E               	movwf	(___fldiv@a+3)^0,c
  3441   000B5E  EFB9  F005         	goto	l3352
  3442   000B62                     l3350:
  3443   000B62  0E00               	movlw	0
  3444   000B64  6E1B               	movwf	___fldiv@a^0,c
  3445   000B66  0E00               	movlw	0
  3446   000B68  6E1C               	movwf	(___fldiv@a+1)^0,c
  3447   000B6A  0E00               	movlw	0
  3448   000B6C  6E1D               	movwf	(___fldiv@a+2)^0,c
  3449   000B6E  0E00               	movlw	0
  3450   000B70  6E1E               	movwf	(___fldiv@a+3)^0,c
  3451   000B72                     l3352:
  3452   000B72  501B               	movf	___fldiv@a^0,w,c
  3453   000B74  101C               	iorwf	(___fldiv@a+1)^0,w,c
  3454   000B76  101D               	iorwf	(___fldiv@a+2)^0,w,c
  3455   000B78  101E               	iorwf	(___fldiv@a+3)^0,w,c
  3456   000B7A  A4D8               	btfss	status,2,c
  3457   000B7C  EFC2  F005         	goto	u2721
  3458   000B80  EFC4  F005         	goto	u2720
  3459   000B84                     u2721:
  3460   000B84  EFDC  F005         	goto	l3364
  3461   000B88                     u2720:
  3462   000B88  0E00               	movlw	0
  3463   000B8A  6E17               	movwf	___fldiv@b^0,c
  3464   000B8C  0E00               	movlw	0
  3465   000B8E  6E18               	movwf	(___fldiv@b+1)^0,c
  3466   000B90  0E00               	movlw	0
  3467   000B92  6E19               	movwf	(___fldiv@b+2)^0,c
  3468   000B94  0E00               	movlw	0
  3469   000B96  6E1A               	movwf	(___fldiv@b+3)^0,c
  3470   000B98  0E80               	movlw	128
  3471   000B9A  1219               	iorwf	(___fldiv@b+2)^0,f,c
  3472   000B9C  0E7F               	movlw	127
  3473   000B9E  121A               	iorwf	(___fldiv@b+3)^0,f,c
  3474   000BA0                     l3358:
  3475   000BA0  5027               	movf	___fldiv@sign^0,w,c
  3476   000BA2  121A               	iorwf	(___fldiv@b+3)^0,f,c
  3477   000BA4  C017  F017         	movff	___fldiv@b,?___fldiv
  3478   000BA8  C018  F018         	movff	___fldiv@b+1,?___fldiv+1
  3479   000BAC  C019  F019         	movff	___fldiv@b+2,?___fldiv+2
  3480   000BB0  C01A  F01A         	movff	___fldiv@b+3,?___fldiv+3
  3481   000BB4  EF1F  F007         	goto	l1287
  3482   000BB8                     l3364:
  3483   000BB8  502E               	movf	___fldiv@bexp^0,w,c
  3484   000BBA  A4D8               	btfss	status,2,c
  3485   000BBC  EFE2  F005         	goto	u2731
  3486   000BC0  EFE4  F005         	goto	u2730
  3487   000BC4                     u2731:
  3488   000BC4  EFEE  F005         	goto	l3372
  3489   000BC8                     u2730:
  3490   000BC8  0E00               	movlw	0
  3491   000BCA  6E17               	movwf	?___fldiv^0,c
  3492   000BCC  0E00               	movlw	0
  3493   000BCE  6E18               	movwf	(?___fldiv+1)^0,c
  3494   000BD0  0E00               	movlw	0
  3495   000BD2  6E19               	movwf	(?___fldiv+2)^0,c
  3496   000BD4  0E00               	movlw	0
  3497   000BD6  6E1A               	movwf	(?___fldiv+3)^0,c
  3498   000BD8  EF1F  F007         	goto	l1287
  3499   000BDC                     l3372:
  3500   000BDC  502F               	movf	___fldiv@aexp^0,w,c
  3501   000BDE  C02E  F01F         	movff	___fldiv@bexp,??___fldiv
  3502   000BE2  6A20               	clrf	(??___fldiv+1)^0,c
  3503   000BE4  5E1F               	subwf	??___fldiv^0,f,c
  3504   000BE6  0E00               	movlw	0
  3505   000BE8  5A20               	subwfb	(??___fldiv+1)^0,f,c
  3506   000BEA  0E7F               	movlw	127
  3507   000BEC  241F               	addwf	??___fldiv^0,w,c
  3508   000BEE  6E28               	movwf	___fldiv@new_exp^0,c
  3509   000BF0  0E00               	movlw	0
  3510   000BF2  2020               	addwfc	(??___fldiv+1)^0,w,c
  3511   000BF4  6E29               	movwf	(___fldiv@new_exp+1)^0,c
  3512   000BF6  C017  F023         	movff	___fldiv@b,___fldiv@rem
  3513   000BFA  C018  F024         	movff	___fldiv@b+1,___fldiv@rem+1
  3514   000BFE  C019  F025         	movff	___fldiv@b+2,___fldiv@rem+2
  3515   000C02  C01A  F026         	movff	___fldiv@b+3,___fldiv@rem+3
  3516   000C06  0E00               	movlw	0
  3517   000C08  6E17               	movwf	___fldiv@b^0,c
  3518   000C0A  0E00               	movlw	0
  3519   000C0C  6E18               	movwf	(___fldiv@b+1)^0,c
  3520   000C0E  0E00               	movlw	0
  3521   000C10  6E19               	movwf	(___fldiv@b+2)^0,c
  3522   000C12  0E00               	movlw	0
  3523   000C14  6E1A               	movwf	(___fldiv@b+3)^0,c
  3524   000C16  0E00               	movlw	0
  3525   000C18  6E2A               	movwf	___fldiv@grs^0,c
  3526   000C1A  0E00               	movlw	0
  3527   000C1C  6E2B               	movwf	(___fldiv@grs+1)^0,c
  3528   000C1E  0E00               	movlw	0
  3529   000C20  6E2C               	movwf	(___fldiv@grs+2)^0,c
  3530   000C22  0E00               	movlw	0
  3531   000C24  6E2D               	movwf	(___fldiv@grs+3)^0,c
  3532   000C26  0E00               	movlw	0
  3533   000C28  6E2F               	movwf	___fldiv@aexp^0,c
  3534   000C2A  EF4F  F006         	goto	l1289
  3535   000C2E                     l3382:
  3536   000C2E  502F               	movf	___fldiv@aexp^0,w,c
  3537   000C30  B4D8               	btfsc	status,2,c
  3538   000C32  EF1D  F006         	goto	u2741
  3539   000C36  EF1F  F006         	goto	u2740
  3540   000C3A                     u2741:
  3541   000C3A  EF36  F006         	goto	l3390
  3542   000C3E                     u2740:
  3543   000C3E  90D8               	bcf	status,0,c
  3544   000C40  3623               	rlcf	___fldiv@rem^0,f,c
  3545   000C42  3624               	rlcf	(___fldiv@rem+1)^0,f,c
  3546   000C44  3625               	rlcf	(___fldiv@rem+2)^0,f,c
  3547   000C46  3626               	rlcf	(___fldiv@rem+3)^0,f,c
  3548   000C48  90D8               	bcf	status,0,c
  3549   000C4A  3617               	rlcf	___fldiv@b^0,f,c
  3550   000C4C  3618               	rlcf	(___fldiv@b+1)^0,f,c
  3551   000C4E  3619               	rlcf	(___fldiv@b+2)^0,f,c
  3552   000C50  361A               	rlcf	(___fldiv@b+3)^0,f,c
  3553   000C52  AE2D               	btfss	(___fldiv@grs+3)^0,7,c
  3554   000C54  EF2E  F006         	goto	u2751
  3555   000C58  EF30  F006         	goto	u2750
  3556   000C5C                     u2751:
  3557   000C5C  EF31  F006         	goto	l1292
  3558   000C60                     u2750:
  3559   000C60  8017               	bsf	___fldiv@b^0,0,c
  3560   000C62                     l1292:
  3561   000C62  90D8               	bcf	status,0,c
  3562   000C64  362A               	rlcf	___fldiv@grs^0,f,c
  3563   000C66  362B               	rlcf	(___fldiv@grs+1)^0,f,c
  3564   000C68  362C               	rlcf	(___fldiv@grs+2)^0,f,c
  3565   000C6A  362D               	rlcf	(___fldiv@grs+3)^0,f,c
  3566   000C6C                     l3390:
  3567   000C6C  501B               	movf	___fldiv@a^0,w,c
  3568   000C6E  5C23               	subwf	___fldiv@rem^0,w,c
  3569   000C70  501C               	movf	(___fldiv@a+1)^0,w,c
  3570   000C72  5824               	subwfb	(___fldiv@rem+1)^0,w,c
  3571   000C74  501D               	movf	(___fldiv@a+2)^0,w,c
  3572   000C76  5825               	subwfb	(___fldiv@rem+2)^0,w,c
  3573   000C78  501E               	movf	(___fldiv@a+3)^0,w,c
  3574   000C7A  5826               	subwfb	(___fldiv@rem+3)^0,w,c
  3575   000C7C  A0D8               	btfss	status,0,c
  3576   000C7E  EF43  F006         	goto	u2761
  3577   000C82  EF45  F006         	goto	u2760
  3578   000C86                     u2761:
  3579   000C86  EF4E  F006         	goto	l3396
  3580   000C8A                     u2760:
  3581   000C8A  8C2D               	bsf	(___fldiv@grs+3)^0,6,c
  3582   000C8C  501B               	movf	___fldiv@a^0,w,c
  3583   000C8E  5E23               	subwf	___fldiv@rem^0,f,c
  3584   000C90  501C               	movf	(___fldiv@a+1)^0,w,c
  3585   000C92  5A24               	subwfb	(___fldiv@rem+1)^0,f,c
  3586   000C94  501D               	movf	(___fldiv@a+2)^0,w,c
  3587   000C96  5A25               	subwfb	(___fldiv@rem+2)^0,f,c
  3588   000C98  501E               	movf	(___fldiv@a+3)^0,w,c
  3589   000C9A  5A26               	subwfb	(___fldiv@rem+3)^0,f,c
  3590   000C9C                     l3396:
  3591   000C9C  2A2F               	incf	___fldiv@aexp^0,f,c
  3592   000C9E                     l1289:
  3593   000C9E  0E19               	movlw	25
  3594   000CA0  642F               	cpfsgt	___fldiv@aexp^0,c
  3595   000CA2  EF55  F006         	goto	u2771
  3596   000CA6  EF57  F006         	goto	u2770
  3597   000CAA                     u2771:
  3598   000CAA  EF17  F006         	goto	l3382
  3599   000CAE                     u2770:
  3600   000CAE  5023               	movf	___fldiv@rem^0,w,c
  3601   000CB0  1024               	iorwf	(___fldiv@rem+1)^0,w,c
  3602   000CB2  1025               	iorwf	(___fldiv@rem+2)^0,w,c
  3603   000CB4  1026               	iorwf	(___fldiv@rem+3)^0,w,c
  3604   000CB6  B4D8               	btfsc	status,2,c
  3605   000CB8  EF60  F006         	goto	u2781
  3606   000CBC  EF62  F006         	goto	u2780
  3607   000CC0                     u2781:
  3608   000CC0  EF7A  F006         	goto	l3408
  3609   000CC4                     u2780:
  3610   000CC4  802A               	bsf	___fldiv@grs^0,0,c
  3611   000CC6  EF7A  F006         	goto	l3408
  3612   000CCA                     l3402:
  3613   000CCA  90D8               	bcf	status,0,c
  3614   000CCC  3617               	rlcf	___fldiv@b^0,f,c
  3615   000CCE  3618               	rlcf	(___fldiv@b+1)^0,f,c
  3616   000CD0  3619               	rlcf	(___fldiv@b+2)^0,f,c
  3617   000CD2  361A               	rlcf	(___fldiv@b+3)^0,f,c
  3618   000CD4  AE2D               	btfss	(___fldiv@grs+3)^0,7,c
  3619   000CD6  EF6F  F006         	goto	u2791
  3620   000CDA  EF71  F006         	goto	u2790
  3621   000CDE                     u2791:
  3622   000CDE  EF72  F006         	goto	l1298
  3623   000CE2                     u2790:
  3624   000CE2  8017               	bsf	___fldiv@b^0,0,c
  3625   000CE4                     l1298:
  3626   000CE4  90D8               	bcf	status,0,c
  3627   000CE6  362A               	rlcf	___fldiv@grs^0,f,c
  3628   000CE8  362B               	rlcf	(___fldiv@grs+1)^0,f,c
  3629   000CEA  362C               	rlcf	(___fldiv@grs+2)^0,f,c
  3630   000CEC  362D               	rlcf	(___fldiv@grs+3)^0,f,c
  3631   000CEE  0628               	decf	___fldiv@new_exp^0,f,c
  3632   000CF0  A0D8               	btfss	status,0,c
  3633   000CF2  0629               	decf	(___fldiv@new_exp+1)^0,f,c
  3634   000CF4                     l3408:
  3635   000CF4  AE19               	btfss	(___fldiv@b+2)^0,7,c
  3636   000CF6  EF7F  F006         	goto	u2801
  3637   000CFA  EF81  F006         	goto	u2800
  3638   000CFE                     u2801:
  3639   000CFE  EF65  F006         	goto	l3402
  3640   000D02                     u2800:
  3641   000D02  0E00               	movlw	0
  3642   000D04  6E2F               	movwf	___fldiv@aexp^0,c
  3643   000D06  AE2D               	btfss	(___fldiv@grs+3)^0,7,c
  3644   000D08  EF88  F006         	goto	u2811
  3645   000D0C  EF8A  F006         	goto	u2810
  3646   000D10                     u2811:
  3647   000D10  EFAE  F006         	goto	l1300
  3648   000D14                     u2810:
  3649   000D14  0EFF               	movlw	255
  3650   000D16  142A               	andwf	___fldiv@grs^0,w,c
  3651   000D18  6E1F               	movwf	??___fldiv^0,c
  3652   000D1A  0EFF               	movlw	255
  3653   000D1C  142B               	andwf	(___fldiv@grs+1)^0,w,c
  3654   000D1E  6E20               	movwf	(??___fldiv+1)^0,c
  3655   000D20  0EFF               	movlw	255
  3656   000D22  142C               	andwf	(___fldiv@grs+2)^0,w,c
  3657   000D24  6E21               	movwf	(??___fldiv+2)^0,c
  3658   000D26  0E7F               	movlw	127
  3659   000D28  142D               	andwf	(___fldiv@grs+3)^0,w,c
  3660   000D2A  6E22               	movwf	(??___fldiv+3)^0,c
  3661   000D2C  501F               	movf	??___fldiv^0,w,c
  3662   000D2E  1020               	iorwf	(??___fldiv+1)^0,w,c
  3663   000D30  1021               	iorwf	(??___fldiv+2)^0,w,c
  3664   000D32  1022               	iorwf	(??___fldiv+3)^0,w,c
  3665   000D34  B4D8               	btfsc	status,2,c
  3666   000D36  EF9F  F006         	goto	u2821
  3667   000D3A  EFA1  F006         	goto	u2820
  3668   000D3E                     u2821:
  3669   000D3E  EFA5  F006         	goto	l1301
  3670   000D42                     u2820:
  3671   000D42                     l3416:
  3672   000D42  0E01               	movlw	1
  3673   000D44  6E2F               	movwf	___fldiv@aexp^0,c
  3674   000D46  EFAE  F006         	goto	l1300
  3675   000D4A                     l1301:
  3676   000D4A  A017               	btfss	___fldiv@b^0,0,c
  3677   000D4C  EFAA  F006         	goto	u2831
  3678   000D50  EFAC  F006         	goto	u2830
  3679   000D54                     u2831:
  3680   000D54  EFAE  F006         	goto	l1300
  3681   000D58                     u2830:
  3682   000D58  EFA1  F006         	goto	l3416
  3683   000D5C                     l1300:
  3684   000D5C  502F               	movf	___fldiv@aexp^0,w,c
  3685   000D5E  B4D8               	btfsc	status,2,c
  3686   000D60  EFB4  F006         	goto	u2841
  3687   000D64  EFB6  F006         	goto	u2840
  3688   000D68                     u2841:
  3689   000D68  EFDA  F006         	goto	l3428
  3690   000D6C                     u2840:
  3691   000D6C  0E01               	movlw	1
  3692   000D6E  2617               	addwf	___fldiv@b^0,f,c
  3693   000D70  0E00               	movlw	0
  3694   000D72  2218               	addwfc	(___fldiv@b+1)^0,f,c
  3695   000D74  2219               	addwfc	(___fldiv@b+2)^0,f,c
  3696   000D76  221A               	addwfc	(___fldiv@b+3)^0,f,c
  3697   000D78  A01A               	btfss	(___fldiv@b+3)^0,0,c
  3698   000D7A  EFC1  F006         	goto	u2851
  3699   000D7E  EFC3  F006         	goto	u2850
  3700   000D82                     u2851:
  3701   000D82  EFDA  F006         	goto	l3428
  3702   000D86                     u2850:
  3703   000D86  C017  F01F         	movff	___fldiv@b,??___fldiv
  3704   000D8A  C018  F020         	movff	___fldiv@b+1,??___fldiv+1
  3705   000D8E  C019  F021         	movff	___fldiv@b+2,??___fldiv+2
  3706   000D92  C01A  F022         	movff	___fldiv@b+3,??___fldiv+3
  3707   000D96  3422               	rlcf	(??___fldiv+3)^0,w,c
  3708   000D98  3222               	rrcf	(??___fldiv+3)^0,f,c
  3709   000D9A  3221               	rrcf	(??___fldiv+2)^0,f,c
  3710   000D9C  3220               	rrcf	(??___fldiv+1)^0,f,c
  3711   000D9E  321F               	rrcf	??___fldiv^0,f,c
  3712   000DA0  C01F  F017         	movff	??___fldiv,___fldiv@b
  3713   000DA4  C020  F018         	movff	??___fldiv+1,___fldiv@b+1
  3714   000DA8  C021  F019         	movff	??___fldiv+2,___fldiv@b+2
  3715   000DAC  C022  F01A         	movff	??___fldiv+3,___fldiv@b+3
  3716   000DB0  4A28               	infsnz	___fldiv@new_exp^0,f,c
  3717   000DB2  2A29               	incf	(___fldiv@new_exp+1)^0,f,c
  3718   000DB4                     l3428:
  3719   000DB4  BE29               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3720   000DB6  EFE5  F006         	goto	u2861
  3721   000DBA  5029               	movf	(___fldiv@new_exp+1)^0,w,c
  3722   000DBC  E108               	bnz	u2860
  3723   000DBE  2828               	incf	___fldiv@new_exp^0,w,c
  3724   000DC0  A0D8               	btfss	status,0,c
  3725   000DC2  EFE5  F006         	goto	u2861
  3726   000DC6  EFE7  F006         	goto	u2860
  3727   000DCA                     u2861:
  3728   000DCA  EFF2  F006         	goto	l3432
  3729   000DCE                     u2860:
  3730   000DCE  0E00               	movlw	0
  3731   000DD0  6E29               	movwf	(___fldiv@new_exp+1)^0,c
  3732   000DD2  6828               	setf	___fldiv@new_exp^0,c
  3733   000DD4  0E00               	movlw	0
  3734   000DD6  6E17               	movwf	___fldiv@b^0,c
  3735   000DD8  0E00               	movlw	0
  3736   000DDA  6E18               	movwf	(___fldiv@b+1)^0,c
  3737   000DDC  0E00               	movlw	0
  3738   000DDE  6E19               	movwf	(___fldiv@b+2)^0,c
  3739   000DE0  0E00               	movlw	0
  3740   000DE2  6E1A               	movwf	(___fldiv@b+3)^0,c
  3741   000DE4                     l3432:
  3742   000DE4  BE29               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3743   000DE6  EFFF  F006         	goto	u2870
  3744   000DEA  5029               	movf	(___fldiv@new_exp+1)^0,w,c
  3745   000DEC  E106               	bnz	u2871
  3746   000DEE  0428               	decf	___fldiv@new_exp^0,w,c
  3747   000DF0  B0D8               	btfsc	status,0,c
  3748   000DF2  EFFD  F006         	goto	u2871
  3749   000DF6  EFFF  F006         	goto	u2870
  3750   000DFA                     u2871:
  3751   000DFA  EF0D  F007         	goto	l3436
  3752   000DFE                     u2870:
  3753   000DFE  0E00               	movlw	0
  3754   000E00  6E29               	movwf	(___fldiv@new_exp+1)^0,c
  3755   000E02  0E00               	movlw	0
  3756   000E04  6E28               	movwf	___fldiv@new_exp^0,c
  3757   000E06  0E00               	movlw	0
  3758   000E08  6E17               	movwf	___fldiv@b^0,c
  3759   000E0A  0E00               	movlw	0
  3760   000E0C  6E18               	movwf	(___fldiv@b+1)^0,c
  3761   000E0E  0E00               	movlw	0
  3762   000E10  6E19               	movwf	(___fldiv@b+2)^0,c
  3763   000E12  0E00               	movlw	0
  3764   000E14  6E1A               	movwf	(___fldiv@b+3)^0,c
  3765   000E16  0E00               	movlw	0
  3766   000E18  6E27               	movwf	___fldiv@sign^0,c
  3767   000E1A                     l3436:
  3768   000E1A  C028  F02E         	movff	___fldiv@new_exp,___fldiv@bexp
  3769   000E1E  A02E               	btfss	___fldiv@bexp^0,0,c
  3770   000E20  EF14  F007         	goto	u2881
  3771   000E24  EF16  F007         	goto	u2880
  3772   000E28                     u2881:
  3773   000E28  EF19  F007         	goto	l3442
  3774   000E2C                     u2880:
  3775   000E2C  8E19               	bsf	(___fldiv@b+2)^0,7,c
  3776   000E2E  EF1A  F007         	goto	l3444
  3777   000E32                     l3442:
  3778   000E32  9E19               	bcf	(___fldiv@b+2)^0,7,c
  3779   000E34                     l3444:
  3780   000E34  90D8               	bcf	status,0,c
  3781   000E36  302E               	rrcf	___fldiv@bexp^0,w,c
  3782   000E38  6E1A               	movwf	(___fldiv@b+3)^0,c
  3783   000E3A  EFD0  F005         	goto	l3358
  3784   000E3E                     l1287:
  3785   000E3E  0012               	return		;funcret
  3786   000E40                     __end_of___fldiv:
  3787                           	callstack 0
  3788                           
  3789 ;; *************** function _color_click_init *****************
  3790 ;; Defined at:
  3791 ;;		line 6 in file "color.c"
  3792 ;; Parameters:    Size  Location     Type
  3793 ;;		None
  3794 ;; Auto vars:     Size  Location     Type
  3795 ;;		None
  3796 ;; Return value:  Size  Location     Type
  3797 ;;                  1    wreg      void 
  3798 ;; Registers used:
  3799 ;;		wreg, status,2, status,0, cstack
  3800 ;; Tracked objects:
  3801 ;;		On entry : 0/0
  3802 ;;		On exit  : 0/0
  3803 ;;		Unchanged: 0/0
  3804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3807 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3808 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3809 ;;Total ram usage:        1 bytes
  3810 ;; Hardware stack levels used: 1
  3811 ;; Hardware stack levels required when called: 10
  3812 ;; This function calls:
  3813 ;;		_I2C_2_Master_Init
  3814 ;;		_color_writetoaddr
  3815 ;; This function is called by:
  3816 ;;		_main
  3817 ;; This function uses a non-reentrant model
  3818 ;;
  3819                           
  3820                           	psect	text7
  3821   00284C                     __ptext7:
  3822                           	callstack 0
  3823   00284C                     _color_click_init:
  3824                           	callstack 20
  3825   00284C                     
  3826                           ;color.c: 9:     I2C_2_Master_Init();
  3827   00284C  EC59  F014         	call	_I2C_2_Master_Init	;wreg free
  3828   002850                     
  3829                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  3830   002850  0E01               	movlw	1
  3831   002852  6E0B               	movwf	color_writetoaddr@value^0,c
  3832   002854  0E00               	movlw	0
  3833   002856  ECDC  F014         	call	_color_writetoaddr
  3834   00285A                     
  3835                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3836   00285A  0E3F               	movlw	63
  3837   00285C  6E0D               	movwf	??_color_click_init^0,c
  3838   00285E  0E55               	movlw	85
  3839   002860                     u4567:
  3840   002860  2EE8               	decfsz	wreg,f,c
  3841   002862  D7FE               	bra	u4567
  3842   002864  2E0D               	decfsz	??_color_click_init^0,f,c
  3843   002866  D7FC               	bra	u4567
  3844   002868  F000               	nop	
  3845   00286A                     
  3846                           ;color.c: 16:  color_writetoaddr(0x00, 0x03);
  3847   00286A  0E03               	movlw	3
  3848   00286C  6E0B               	movwf	color_writetoaddr@value^0,c
  3849   00286E  0E00               	movlw	0
  3850   002870  ECDC  F014         	call	_color_writetoaddr
  3851   002874                     
  3852                           ;color.c: 19:  color_writetoaddr(0x01, 0xD5);
  3853   002874  0ED5               	movlw	213
  3854   002876  6E0B               	movwf	color_writetoaddr@value^0,c
  3855   002878  0E01               	movlw	1
  3856   00287A  ECDC  F014         	call	_color_writetoaddr
  3857   00287E  0012               	return		;funcret
  3858   002880                     __end_of_color_click_init:
  3859                           	callstack 0
  3860                           
  3861 ;; *************** function _I2C_2_Master_Init *****************
  3862 ;; Defined at:
  3863 ;;		line 4 in file "i2c.c"
  3864 ;; Parameters:    Size  Location     Type
  3865 ;;		None
  3866 ;; Auto vars:     Size  Location     Type
  3867 ;;		None
  3868 ;; Return value:  Size  Location     Type
  3869 ;;                  1    wreg      void 
  3870 ;; Registers used:
  3871 ;;		wreg, status,2
  3872 ;; Tracked objects:
  3873 ;;		On entry : 0/0
  3874 ;;		On exit  : 0/0
  3875 ;;		Unchanged: 0/0
  3876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3881 ;;Total ram usage:        0 bytes
  3882 ;; Hardware stack levels used: 1
  3883 ;; Hardware stack levels required when called: 7
  3884 ;; This function calls:
  3885 ;;		Nothing
  3886 ;; This function is called by:
  3887 ;;		_color_click_init
  3888 ;; This function uses a non-reentrant model
  3889 ;;
  3890                           
  3891                           	psect	text8
  3892   0028B2                     __ptext8:
  3893                           	callstack 0
  3894   0028B2                     _I2C_2_Master_Init:
  3895                           	callstack 22
  3896   0028B2                     
  3897                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3898   0028B2  010E               	movlb	14	; () banked
  3899   0028B4  51D9               	movf	217,w,b	;volatile
  3900   0028B6  0BF0               	andlw	-16
  3901   0028B8  0908               	iorlw	8
  3902   0028BA  6FD9               	movwf	217,b	;volatile
  3903   0028BC                     
  3904                           ; BSR set to: 14
  3905                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3906   0028BC  8BD9               	bsf	217,5,b	;volatile
  3907                           
  3908                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3909   0028BE  0E9F               	movlw	159
  3910   0028C0  6FD6               	movwf	214,b	;volatile
  3911   0028C2                     
  3912                           ; BSR set to: 14
  3913                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3914   0028C2  8A84               	bsf	132,5,c	;volatile
  3915   0028C4                     
  3916                           ; BSR set to: 14
  3917                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3918   0028C4  8C84               	bsf	132,6,c	;volatile
  3919   0028C6                     
  3920                           ; BSR set to: 14
  3921                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3922   0028C6  9BA7               	bcf	167,5,b	;volatile
  3923   0028C8                     
  3924                           ; BSR set to: 14
  3925                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3926   0028C8  9DA7               	bcf	167,6,b	;volatile
  3927                           
  3928                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3929   0028CA  0E1D               	movlw	29
  3930   0028CC  6F1D               	movwf	29,b	;volatile
  3931                           
  3932                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3933   0028CE  0E1E               	movlw	30
  3934   0028D0  6F1C               	movwf	28,b	;volatile
  3935                           
  3936                           ;i2c.c: 18:   RD5PPS=0x1C;
  3937   0028D2  0E1C               	movlw	28
  3938   0028D4  6F6F               	movwf	111,b	;volatile
  3939                           
  3940                           ;i2c.c: 19:   RD6PPS=0x1B;
  3941   0028D6  0E1B               	movlw	27
  3942   0028D8  6F70               	movwf	112,b	;volatile
  3943   0028DA                     
  3944                           ; BSR set to: 14
  3945   0028DA  0012               	return		;funcret
  3946   0028DC                     __end_of_I2C_2_Master_Init:
  3947                           	callstack 0
  3948                           
  3949 ;; *************** function _WhiteLight *****************
  3950 ;; Defined at:
  3951 ;;		line 26 in file "LED_Buttons.c"
  3952 ;; Parameters:    Size  Location     Type
  3953 ;;		None
  3954 ;; Auto vars:     Size  Location     Type
  3955 ;;		None
  3956 ;; Return value:  Size  Location     Type
  3957 ;;                  1    wreg      void 
  3958 ;; Registers used:
  3959 ;;		None
  3960 ;; Tracked objects:
  3961 ;;		On entry : 0/0
  3962 ;;		On exit  : 0/0
  3963 ;;		Unchanged: 0/0
  3964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3969 ;;Total ram usage:        0 bytes
  3970 ;; Hardware stack levels used: 1
  3971 ;; Hardware stack levels required when called: 7
  3972 ;; This function calls:
  3973 ;;		Nothing
  3974 ;; This function is called by:
  3975 ;;		_main
  3976 ;; This function uses a non-reentrant model
  3977 ;;
  3978                           
  3979                           	psect	text9
  3980   002ACE                     __ptext9:
  3981                           	callstack 0
  3982   002ACE                     _WhiteLight:
  3983                           	callstack 23
  3984   002ACE                     
  3985                           ;LED_Buttons.c: 27:     LATGbits.LATG1 = 1;
  3986   002ACE  827F               	bsf	127,1,c	;volatile
  3987                           
  3988                           ;LED_Buttons.c: 28:     LATAbits.LATA4 = 1;
  3989   002AD0  8879               	bsf	121,4,c	;volatile
  3990                           
  3991                           ;LED_Buttons.c: 29:     LATFbits.LATF7 = 1;
  3992   002AD2  8E7E               	bsf	126,7,c	;volatile
  3993   002AD4  0012               	return		;funcret
  3994   002AD6                     __end_of_WhiteLight:
  3995                           	callstack 0
  3996                           
  3997 ;; *************** function _WhiteInstructions *****************
  3998 ;; Defined at:
  3999 ;;		line 154 in file "color_instructions.c"
  4000 ;; Parameters:    Size  Location     Type
  4001 ;;  mL              2   58[COMRAM] PTR struct DC_motor
  4002 ;;		 -> main@motorL(9), 
  4003 ;;  mR              2   60[COMRAM] PTR struct DC_motor
  4004 ;;		 -> main@motorR(9), 
  4005 ;; Auto vars:     Size  Location     Type
  4006 ;;  a               2   67[COMRAM] unsigned int 
  4007 ;;  c               2   64[COMRAM] unsigned int 
  4008 ;;  anticolor       1   66[COMRAM] unsigned char 
  4009 ;; Return value:  Size  Location     Type
  4010 ;;                  1    wreg      void 
  4011 ;; Registers used:
  4012 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4013 ;; Tracked objects:
  4014 ;;		On entry : 0/0
  4015 ;;		On exit  : 0/0
  4016 ;;		Unchanged: 0/0
  4017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4018 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4019 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4020 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4021 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4022 ;;Total ram usage:       11 bytes
  4023 ;; Hardware stack levels used: 1
  4024 ;; Hardware stack levels required when called: 14
  4025 ;; This function calls:
  4026 ;;		_BlueInstructions
  4027 ;;		_MoveBuggy
  4028 ;;		_Return_Anti_Moves
  4029 ;;		_Return_Time
  4030 ;;		_fullSpeedAhead
  4031 ;;		_stop
  4032 ;; This function is called by:
  4033 ;;		_main
  4034 ;; This function uses a non-reentrant model
  4035 ;;
  4036                           
  4037                           	psect	text10
  4038   001B1A                     __ptext10:
  4039                           	callstack 0
  4040   001B1A                     _WhiteInstructions:
  4041                           	callstack 16
  4042   001B1A                     
  4043                           ;color_instructions.c: 156:     BlueInstructions(mL,mR);
  4044   001B1A  C03B  F027         	movff	WhiteInstructions@mL,BlueInstructions@mL
  4045   001B1E  C03C  F028         	movff	WhiteInstructions@mL+1,BlueInstructions@mL+1
  4046   001B22  C03D  F029         	movff	WhiteInstructions@mR,BlueInstructions@mR
  4047   001B26  C03E  F02A         	movff	WhiteInstructions@mR+1,BlueInstructions@mR+1
  4048   001B2A  EC1E  F00F         	call	_BlueInstructions	;wreg free
  4049                           
  4050                           ;color_instructions.c: 158:     while(time_index>0){
  4051   001B2E  EFF8  F00D         	goto	l3902
  4052   001B32                     l3882:
  4053                           
  4054                           ; BSR set to: 0
  4055                           ;color_instructions.c: 160:         unsigned int a = 0;
  4056   001B32  0E00               	movlw	0
  4057   001B34  6E45               	movwf	(WhiteInstructions@a+1)^0,c
  4058   001B36  0E00               	movlw	0
  4059   001B38  6E44               	movwf	WhiteInstructions@a^0,c
  4060   001B3A                     
  4061                           ; BSR set to: 0
  4062                           ;color_instructions.c: 161:         unsigned int c = Return_Time(&time_index,time_array)
      +                          ;
  4063   001B3A  0E9E               	movlw	low _time_index
  4064   001B3C  6E09               	movwf	Return_Time@time_index^0,c
  4065   001B3E  0E00               	movlw	high _time_index
  4066   001B40  6E0A               	movwf	(Return_Time@time_index+1)^0,c
  4067   001B42  0E3C               	movlw	low _time_array
  4068   001B44  6E0B               	movwf	Return_Time@time_array^0,c
  4069   001B46  0E01               	movlw	high _time_array
  4070   001B48  6E0C               	movwf	(Return_Time@time_array+1)^0,c
  4071   001B4A  EC0A  F014         	call	_Return_Time	;wreg free
  4072   001B4E  C009  F041         	movff	?_Return_Time,WhiteInstructions@c
  4073   001B52  C00A  F042         	movff	?_Return_Time+1,WhiteInstructions@c+1
  4074                           
  4075                           ;color_instructions.c: 162:         while(a<c){
  4076   001B56  EFB9  F00D         	goto	l3890
  4077   001B5A                     l3886:
  4078                           
  4079                           ;color_instructions.c: 163:             fullSpeedAhead(mL,mR);
  4080   001B5A  C03B  F01C         	movff	WhiteInstructions@mL,fullSpeedAhead@mL
  4081   001B5E  C03C  F01D         	movff	WhiteInstructions@mL+1,fullSpeedAhead@mL+1
  4082   001B62  C03D  F01E         	movff	WhiteInstructions@mR,fullSpeedAhead@mR
  4083   001B66  C03E  F01F         	movff	WhiteInstructions@mR+1,fullSpeedAhead@mR+1
  4084   001B6A  EC28  F00C         	call	_fullSpeedAhead	;wreg free
  4085   001B6E                     
  4086                           ;color_instructions.c: 164:             a++;
  4087   001B6E  4A44               	infsnz	WhiteInstructions@a^0,f,c
  4088   001B70  2A45               	incf	(WhiteInstructions@a+1)^0,f,c
  4089   001B72                     l3890:
  4090                           
  4091                           ;color_instructions.c: 162:         while(a<c){
  4092   001B72  5041               	movf	WhiteInstructions@c^0,w,c
  4093   001B74  5C44               	subwf	WhiteInstructions@a^0,w,c
  4094   001B76  5042               	movf	(WhiteInstructions@c+1)^0,w,c
  4095   001B78  5845               	subwfb	(WhiteInstructions@a+1)^0,w,c
  4096   001B7A  A0D8               	btfss	status,0,c
  4097   001B7C  EFC2  F00D         	goto	u3751
  4098   001B80  EFC4  F00D         	goto	u3750
  4099   001B84                     u3751:
  4100   001B84  EFAD  F00D         	goto	l3886
  4101   001B88                     u3750:
  4102   001B88  EFD3  F00D         	goto	l3896
  4103   001B8C                     l3892:
  4104                           
  4105                           ;color_instructions.c: 168:             stop(mL,mR);
  4106   001B8C  C03B  F01C         	movff	WhiteInstructions@mL,stop@mL
  4107   001B90  C03C  F01D         	movff	WhiteInstructions@mL+1,stop@mL+1
  4108   001B94  C03D  F01E         	movff	WhiteInstructions@mR,stop@mR
  4109   001B98  C03E  F01F         	movff	WhiteInstructions@mR+1,stop@mR+1
  4110   001B9C  EC02  F00E         	call	_stop	;wreg free
  4111   001BA0                     
  4112                           ;color_instructions.c: 169:             a--;
  4113   001BA0  0644               	decf	WhiteInstructions@a^0,f,c
  4114   001BA2  A0D8               	btfss	status,0,c
  4115   001BA4  0645               	decf	(WhiteInstructions@a+1)^0,f,c
  4116   001BA6                     l3896:
  4117                           
  4118                           ;color_instructions.c: 167:         while(a>0){
  4119   001BA6  5044               	movf	WhiteInstructions@a^0,w,c
  4120   001BA8  1045               	iorwf	(WhiteInstructions@a+1)^0,w,c
  4121   001BAA  A4D8               	btfss	status,2,c
  4122   001BAC  EFDA  F00D         	goto	u3761
  4123   001BB0  EFDC  F00D         	goto	u3760
  4124   001BB4                     u3761:
  4125   001BB4  EFC6  F00D         	goto	l3892
  4126   001BB8                     u3760:
  4127   001BB8                     
  4128                           ;color_instructions.c: 172:         unsigned char anticolor = Return_Anti_Moves(&moves_i
      +                          ndex, anti_moves_array);
  4129   001BB8  0E56               	movlw	low _moves_index
  4130   001BBA  6E09               	movwf	Return_Anti_Moves@moves_index^0,c
  4131   001BBC  0E00               	movlw	high _moves_index
  4132   001BBE  6E0A               	movwf	(Return_Anti_Moves@moves_index+1)^0,c
  4133   001BC0  0E76               	movlw	low _anti_moves_array
  4134   001BC2  6E0B               	movwf	Return_Anti_Moves@anti_moves_array^0,c
  4135   001BC4  0E00               	movlw	high _anti_moves_array
  4136   001BC6  6E0C               	movwf	(Return_Anti_Moves@anti_moves_array+1)^0,c
  4137   001BC8  ECBB  F014         	call	_Return_Anti_Moves	;wreg free
  4138   001BCC  6E43               	movwf	WhiteInstructions@anticolor^0,c
  4139   001BCE                     
  4140                           ;color_instructions.c: 173:         MoveBuggy(anticolor,mL,mR);
  4141   001BCE  5043               	movf	WhiteInstructions@anticolor^0,w,c
  4142   001BD0  6E3F               	movwf	??_WhiteInstructions^0,c
  4143   001BD2  6A40               	clrf	(??_WhiteInstructions+1)^0,c
  4144   001BD4  C03F  F035         	movff	??_WhiteInstructions,MoveBuggy@color_detected
  4145   001BD8  C040  F036         	movff	??_WhiteInstructions+1,MoveBuggy@color_detected+1
  4146   001BDC  C03B  F037         	movff	WhiteInstructions@mL,MoveBuggy@mL
  4147   001BE0  C03C  F038         	movff	WhiteInstructions@mL+1,MoveBuggy@mL+1
  4148   001BE4  C03D  F039         	movff	WhiteInstructions@mR,MoveBuggy@mR
  4149   001BE8  C03E  F03A         	movff	WhiteInstructions@mR+1,MoveBuggy@mR+1
  4150   001BEC  EC20  F007         	call	_MoveBuggy	;wreg free
  4151   001BF0                     l3902:
  4152                           
  4153                           ;color_instructions.c: 158:     while(time_index>0){
  4154   001BF0  0100               	movlb	0	; () banked
  4155   001BF2  519E               	movf	_time_index& (0+255),w,b
  4156   001BF4  A4D8               	btfss	status,2,c
  4157   001BF6  EFFF  F00D         	goto	u3771
  4158   001BFA  EF01  F00E         	goto	u3770
  4159   001BFE                     u3771:
  4160   001BFE  EF99  F00D         	goto	l3882
  4161   001C02                     u3770:
  4162   001C02                     
  4163                           ; BSR set to: 0
  4164   001C02  0012               	return		;funcret
  4165   001C04                     __end_of_WhiteInstructions:
  4166                           	callstack 0
  4167                           
  4168 ;; *************** function _Return_Time *****************
  4169 ;; Defined at:
  4170 ;;		line 40 in file "Memorization.c"
  4171 ;; Parameters:    Size  Location     Type
  4172 ;;  time_index      2    8[COMRAM] PTR unsigned char 
  4173 ;;		 -> time_index(1), 
  4174 ;;  time_array      2   10[COMRAM] PTR unsigned int 
  4175 ;;		 -> time_array(80), 
  4176 ;; Auto vars:     Size  Location     Type
  4177 ;;  temp            2   15[COMRAM] unsigned int 
  4178 ;; Return value:  Size  Location     Type
  4179 ;;                  2    8[COMRAM] unsigned int 
  4180 ;; Registers used:
  4181 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4182 ;; Tracked objects:
  4183 ;;		On entry : 0/0
  4184 ;;		On exit  : 0/0
  4185 ;;		Unchanged: 0/0
  4186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4187 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4188 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4189 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4190 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4191 ;;Total ram usage:        9 bytes
  4192 ;; Hardware stack levels used: 1
  4193 ;; Hardware stack levels required when called: 7
  4194 ;; This function calls:
  4195 ;;		Nothing
  4196 ;; This function is called by:
  4197 ;;		_WhiteInstructions
  4198 ;; This function uses a non-reentrant model
  4199 ;;
  4200                           
  4201                           	psect	text11
  4202   002814                     __ptext11:
  4203                           	callstack 0
  4204   002814                     _Return_Time:
  4205                           	callstack 22
  4206   002814                     
  4207                           ;Memorization.c: 41:     unsigned int temp;;Memorization.c: 43:     temp = time_array[--
      +                          (*time_index)];
  4208   002814  C009  FFD9         	movff	Return_Time@time_index,fsr2l
  4209   002818  C00A  FFDA         	movff	Return_Time@time_index+1,fsr2h
  4210   00281C  06DF               	decf	indf2,f,c
  4211   00281E  50DF               	movf	indf2,w,c
  4212   002820  6E0D               	movwf	??_Return_Time^0,c
  4213   002822  500D               	movf	??_Return_Time^0,w,c
  4214   002824  0D02               	mullw	2
  4215   002826  CFF3 F00E          	movff	prodl,??_Return_Time+1
  4216   00282A  CFF4 F00F          	movff	prodh,??_Return_Time+2
  4217   00282E  500E               	movf	(??_Return_Time+1)^0,w,c
  4218   002830  240B               	addwf	Return_Time@time_array^0,w,c
  4219   002832  6ED9               	movwf	fsr2l,c
  4220   002834  500F               	movf	(??_Return_Time+2)^0,w,c
  4221   002836  200C               	addwfc	(Return_Time@time_array+1)^0,w,c
  4222   002838  6EDA               	movwf	fsr2h,c
  4223   00283A  CFDE F010          	movff	postinc2,Return_Time@temp
  4224   00283E  CFDD F011          	movff	postdec2,Return_Time@temp+1
  4225   002842                     
  4226                           ;Memorization.c: 44:     return temp;
  4227   002842  C010  F009         	movff	Return_Time@temp,?_Return_Time
  4228   002846  C011  F00A         	movff	Return_Time@temp+1,?_Return_Time+1
  4229   00284A  0012               	return		;funcret
  4230   00284C                     __end_of_Return_Time:
  4231                           	callstack 0
  4232                           
  4233 ;; *************** function _Return_Anti_Moves *****************
  4234 ;; Defined at:
  4235 ;;		line 32 in file "Memorization.c"
  4236 ;; Parameters:    Size  Location     Type
  4237 ;;  moves_index     2    8[COMRAM] PTR unsigned char 
  4238 ;;		 -> moves_index(1), 
  4239 ;;  anti_moves_a    2   10[COMRAM] PTR unsigned char 
  4240 ;;		 -> anti_moves_array(40), 
  4241 ;; Auto vars:     Size  Location     Type
  4242 ;;  temp            1   13[COMRAM] unsigned char 
  4243 ;; Return value:  Size  Location     Type
  4244 ;;                  1    wreg      unsigned char 
  4245 ;; Registers used:
  4246 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4247 ;; Tracked objects:
  4248 ;;		On entry : 0/0
  4249 ;;		On exit  : 0/0
  4250 ;;		Unchanged: 0/0
  4251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4252 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4253 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4254 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4255 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4256 ;;Total ram usage:        6 bytes
  4257 ;; Hardware stack levels used: 1
  4258 ;; Hardware stack levels required when called: 7
  4259 ;; This function calls:
  4260 ;;		Nothing
  4261 ;; This function is called by:
  4262 ;;		_WhiteInstructions
  4263 ;; This function uses a non-reentrant model
  4264 ;;
  4265                           
  4266                           	psect	text12
  4267   002976                     __ptext12:
  4268                           	callstack 0
  4269   002976                     _Return_Anti_Moves:
  4270                           	callstack 22
  4271   002976                     
  4272                           ;Memorization.c: 33:     unsigned char temp;;Memorization.c: 35:     temp = anti_moves_a
      +                          rray[--(*moves_index)];
  4273   002976  C009  FFD9         	movff	Return_Anti_Moves@moves_index,fsr2l
  4274   00297A  C00A  FFDA         	movff	Return_Anti_Moves@moves_index+1,fsr2h
  4275   00297E  06DF               	decf	indf2,f,c
  4276   002980  50DF               	movf	indf2,w,c
  4277   002982  6E0D               	movwf	??_Return_Anti_Moves^0,c
  4278   002984  500D               	movf	??_Return_Anti_Moves^0,w,c
  4279   002986  240B               	addwf	Return_Anti_Moves@anti_moves_array^0,w,c
  4280   002988  6ED9               	movwf	fsr2l,c
  4281   00298A  0E00               	movlw	0
  4282   00298C  200C               	addwfc	(Return_Anti_Moves@anti_moves_array+1)^0,w,c
  4283   00298E  6EDA               	movwf	fsr2h,c
  4284   002990  50DF               	movf	indf2,w,c
  4285   002992  6E0E               	movwf	Return_Anti_Moves@temp^0,c
  4286   002994                     
  4287                           ;Memorization.c: 36:     return temp;
  4288   002994  500E               	movf	Return_Anti_Moves@temp^0,w,c
  4289   002996  0012               	return		;funcret
  4290   002998                     __end_of_Return_Anti_Moves:
  4291                           	callstack 0
  4292                           
  4293 ;; *************** function _MoveBuggy *****************
  4294 ;; Defined at:
  4295 ;;		line 179 in file "color_instructions.c"
  4296 ;; Parameters:    Size  Location     Type
  4297 ;;  color_detect    2   52[COMRAM] PTR unsigned char 
  4298 ;;		 -> RAM(3561), 
  4299 ;;  mL              2   54[COMRAM] PTR struct DC_motor
  4300 ;;		 -> main@motorL(9), 
  4301 ;;  mR              2   56[COMRAM] PTR struct DC_motor
  4302 ;;		 -> main@motorR(9), 
  4303 ;; Auto vars:     Size  Location     Type
  4304 ;;		None
  4305 ;; Return value:  Size  Location     Type
  4306 ;;                  1    wreg      void 
  4307 ;; Registers used:
  4308 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4309 ;; Tracked objects:
  4310 ;;		On entry : 0/0
  4311 ;;		On exit  : 0/0
  4312 ;;		Unchanged: 0/0
  4313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4314 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4317 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4318 ;;Total ram usage:        6 bytes
  4319 ;; Hardware stack levels used: 1
  4320 ;; Hardware stack levels required when called: 13
  4321 ;; This function calls:
  4322 ;;		_AntiPink
  4323 ;;		_AntiYellow
  4324 ;;		_AppendMoves
  4325 ;;		_BlueInstructions
  4326 ;;		_GreenInstructions
  4327 ;;		_LightBlueInstructions
  4328 ;;		_OrangeInstructions
  4329 ;;		_PinkInstructions
  4330 ;;		_RedInstructions
  4331 ;;		_YellowInstructions
  4332 ;; This function is called by:
  4333 ;;		_main
  4334 ;;		_WhiteInstructions
  4335 ;; This function uses a non-reentrant model
  4336 ;;
  4337                           
  4338                           	psect	text13
  4339   000E40                     __ptext13:
  4340                           	callstack 0
  4341   000E40                     _MoveBuggy:
  4342                           	callstack 16
  4343   000E40                     
  4344                           ;color_instructions.c: 180:     if (color_detected==1){
  4345   000E40  0435               	decf	MoveBuggy@color_detected^0,w,c
  4346   000E42  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4347   000E44  A4D8               	btfss	status,2,c
  4348   000E46  EF27  F007         	goto	u2501
  4349   000E4A  EF29  F007         	goto	u2500
  4350   000E4E                     u2501:
  4351   000E4E  EF47  F007         	goto	l3246
  4352   000E52                     u2500:
  4353   000E52                     
  4354                           ;color_instructions.c: 181:         RedInstructions(mL, mR);
  4355   000E52  C037  F027         	movff	MoveBuggy@mL,RedInstructions@mL
  4356   000E56  C038  F028         	movff	MoveBuggy@mL+1,RedInstructions@mL+1
  4357   000E5A  C039  F029         	movff	MoveBuggy@mR,RedInstructions@mR
  4358   000E5E  C03A  F02A         	movff	MoveBuggy@mR+1,RedInstructions@mR+1
  4359   000E62  EC79  F011         	call	_RedInstructions	;wreg free
  4360   000E66                     
  4361                           ;color_instructions.c: 182:         if(LATDbits.LATD7 != 1){
  4362   000E66  BE7C               	btfsc	124,7,c	;volatile
  4363   000E68  EF38  F007         	goto	u2511
  4364   000E6C  EF3A  F007         	goto	u2510
  4365   000E70                     u2511:
  4366   000E70  EF61  F008         	goto	l682
  4367   000E74                     u2510:
  4368   000E74                     
  4369                           ;color_instructions.c: 183:             AppendMoves(2,&moves_index,anti_moves_array);
  4370   000E74  0E56               	movlw	low _moves_index
  4371   000E76  6E09               	movwf	AppendMoves@moves_index^0,c
  4372   000E78  0E00               	movlw	high _moves_index
  4373   000E7A  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4374   000E7C  0E76               	movlw	low _anti_moves_array
  4375   000E7E  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4376   000E80  0E00               	movlw	high _anti_moves_array
  4377   000E82  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4378   000E84  0E02               	movlw	2
  4379   000E86  ECA9  F014         	call	_AppendMoves
  4380   000E8A  EF61  F008         	goto	l682
  4381   000E8E                     l3246:
  4382   000E8E  0E02               	movlw	2
  4383   000E90  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4384   000E92  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4385   000E94  A4D8               	btfss	status,2,c
  4386   000E96  EF4F  F007         	goto	u2521
  4387   000E9A  EF51  F007         	goto	u2520
  4388   000E9E                     u2521:
  4389   000E9E  EF6F  F007         	goto	l3254
  4390   000EA2                     u2520:
  4391   000EA2                     
  4392                           ;color_instructions.c: 187:         GreenInstructions(mL, mR);
  4393   000EA2  C037  F027         	movff	MoveBuggy@mL,GreenInstructions@mL
  4394   000EA6  C038  F028         	movff	MoveBuggy@mL+1,GreenInstructions@mL+1
  4395   000EAA  C039  F029         	movff	MoveBuggy@mR,GreenInstructions@mR
  4396   000EAE  C03A  F02A         	movff	MoveBuggy@mR+1,GreenInstructions@mR+1
  4397   000EB2  ECBC  F011         	call	_GreenInstructions	;wreg free
  4398   000EB6                     
  4399                           ;color_instructions.c: 188:         if(LATDbits.LATD7 != 1){
  4400   000EB6  BE7C               	btfsc	124,7,c	;volatile
  4401   000EB8  EF60  F007         	goto	u2531
  4402   000EBC  EF62  F007         	goto	u2530
  4403   000EC0                     u2531:
  4404   000EC0  EF61  F008         	goto	l682
  4405   000EC4                     u2530:
  4406   000EC4                     
  4407                           ;color_instructions.c: 189:             AppendMoves(1,&moves_index,anti_moves_array);
  4408   000EC4  0E56               	movlw	low _moves_index
  4409   000EC6  6E09               	movwf	AppendMoves@moves_index^0,c
  4410   000EC8  0E00               	movlw	high _moves_index
  4411   000ECA  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4412   000ECC  0E76               	movlw	low _anti_moves_array
  4413   000ECE  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4414   000ED0  0E00               	movlw	high _anti_moves_array
  4415   000ED2  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4416   000ED4  0E01               	movlw	1
  4417   000ED6  ECA9  F014         	call	_AppendMoves
  4418   000EDA  EF61  F008         	goto	l682
  4419   000EDE                     l3254:
  4420   000EDE  0E03               	movlw	3
  4421   000EE0  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4422   000EE2  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4423   000EE4  A4D8               	btfss	status,2,c
  4424   000EE6  EF77  F007         	goto	u2541
  4425   000EEA  EF79  F007         	goto	u2540
  4426   000EEE                     u2541:
  4427   000EEE  EF97  F007         	goto	l3262
  4428   000EF2                     u2540:
  4429   000EF2                     
  4430                           ;color_instructions.c: 193:         BlueInstructions(mL, mR);
  4431   000EF2  C037  F027         	movff	MoveBuggy@mL,BlueInstructions@mL
  4432   000EF6  C038  F028         	movff	MoveBuggy@mL+1,BlueInstructions@mL+1
  4433   000EFA  C039  F029         	movff	MoveBuggy@mR,BlueInstructions@mR
  4434   000EFE  C03A  F02A         	movff	MoveBuggy@mR+1,BlueInstructions@mR+1
  4435   000F02  EC1E  F00F         	call	_BlueInstructions	;wreg free
  4436   000F06                     
  4437                           ;color_instructions.c: 194:         if(LATDbits.LATD7 != 1){
  4438   000F06  BE7C               	btfsc	124,7,c	;volatile
  4439   000F08  EF88  F007         	goto	u2551
  4440   000F0C  EF8A  F007         	goto	u2550
  4441   000F10                     u2551:
  4442   000F10  EF61  F008         	goto	l682
  4443   000F14                     u2550:
  4444   000F14                     
  4445                           ;color_instructions.c: 195:             AppendMoves(3,&moves_index,anti_moves_array);
  4446   000F14  0E56               	movlw	low _moves_index
  4447   000F16  6E09               	movwf	AppendMoves@moves_index^0,c
  4448   000F18  0E00               	movlw	high _moves_index
  4449   000F1A  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4450   000F1C  0E76               	movlw	low _anti_moves_array
  4451   000F1E  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4452   000F20  0E00               	movlw	high _anti_moves_array
  4453   000F22  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4454   000F24  0E03               	movlw	3
  4455   000F26  ECA9  F014         	call	_AppendMoves
  4456   000F2A  EF61  F008         	goto	l682
  4457   000F2E                     l3262:
  4458   000F2E  0E04               	movlw	4
  4459   000F30  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4460   000F32  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4461   000F34  A4D8               	btfss	status,2,c
  4462   000F36  EF9F  F007         	goto	u2561
  4463   000F3A  EFA1  F007         	goto	u2560
  4464   000F3E                     u2561:
  4465   000F3E  EFBF  F007         	goto	l3270
  4466   000F42                     u2560:
  4467   000F42                     
  4468                           ;color_instructions.c: 199:         YellowInstructions(mL, mR);
  4469   000F42  C037  F027         	movff	MoveBuggy@mL,YellowInstructions@mL
  4470   000F46  C038  F028         	movff	MoveBuggy@mL+1,YellowInstructions@mL+1
  4471   000F4A  C039  F029         	movff	MoveBuggy@mR,YellowInstructions@mR
  4472   000F4E  C03A  F02A         	movff	MoveBuggy@mR+1,YellowInstructions@mR+1
  4473   000F52  EC6D  F010         	call	_YellowInstructions	;wreg free
  4474   000F56                     
  4475                           ;color_instructions.c: 201:         if(LATDbits.LATD7 != 1){
  4476   000F56  BE7C               	btfsc	124,7,c	;volatile
  4477   000F58  EFB0  F007         	goto	u2571
  4478   000F5C  EFB2  F007         	goto	u2570
  4479   000F60                     u2571:
  4480   000F60  EF61  F008         	goto	l682
  4481   000F64                     u2570:
  4482   000F64                     
  4483                           ;color_instructions.c: 202:             AppendMoves(9,&moves_index,anti_moves_array);
  4484   000F64  0E56               	movlw	low _moves_index
  4485   000F66  6E09               	movwf	AppendMoves@moves_index^0,c
  4486   000F68  0E00               	movlw	high _moves_index
  4487   000F6A  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4488   000F6C  0E76               	movlw	low _anti_moves_array
  4489   000F6E  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4490   000F70  0E00               	movlw	high _anti_moves_array
  4491   000F72  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4492   000F74  0E09               	movlw	9
  4493   000F76  ECA9  F014         	call	_AppendMoves
  4494   000F7A  EF61  F008         	goto	l682
  4495   000F7E                     l3270:
  4496   000F7E  0E05               	movlw	5
  4497   000F80  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4498   000F82  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4499   000F84  A4D8               	btfss	status,2,c
  4500   000F86  EFC7  F007         	goto	u2581
  4501   000F8A  EFC9  F007         	goto	u2580
  4502   000F8E                     u2581:
  4503   000F8E  EFE7  F007         	goto	l3278
  4504   000F92                     u2580:
  4505   000F92                     
  4506                           ;color_instructions.c: 206:         PinkInstructions(mL, mR);
  4507   000F92  C037  F027         	movff	MoveBuggy@mL,PinkInstructions@mL
  4508   000F96  C038  F028         	movff	MoveBuggy@mL+1,PinkInstructions@mL+1
  4509   000F9A  C039  F029         	movff	MoveBuggy@mR,PinkInstructions@mR
  4510   000F9E  C03A  F02A         	movff	MoveBuggy@mR+1,PinkInstructions@mR+1
  4511   000FA2  ECB0  F010         	call	_PinkInstructions	;wreg free
  4512   000FA6                     
  4513                           ;color_instructions.c: 208:         if(LATDbits.LATD7 != 1){
  4514   000FA6  BE7C               	btfsc	124,7,c	;volatile
  4515   000FA8  EFD8  F007         	goto	u2591
  4516   000FAC  EFDA  F007         	goto	u2590
  4517   000FB0                     u2591:
  4518   000FB0  EF61  F008         	goto	l682
  4519   000FB4                     u2590:
  4520   000FB4                     
  4521                           ;color_instructions.c: 209:             AppendMoves(10,&moves_index,anti_moves_array);
  4522   000FB4  0E56               	movlw	low _moves_index
  4523   000FB6  6E09               	movwf	AppendMoves@moves_index^0,c
  4524   000FB8  0E00               	movlw	high _moves_index
  4525   000FBA  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4526   000FBC  0E76               	movlw	low _anti_moves_array
  4527   000FBE  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4528   000FC0  0E00               	movlw	high _anti_moves_array
  4529   000FC2  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4530   000FC4  0E0A               	movlw	10
  4531   000FC6  ECA9  F014         	call	_AppendMoves
  4532   000FCA  EF61  F008         	goto	l682
  4533   000FCE                     l3278:
  4534   000FCE  0E06               	movlw	6
  4535   000FD0  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4536   000FD2  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4537   000FD4  A4D8               	btfss	status,2,c
  4538   000FD6  EFEF  F007         	goto	u2601
  4539   000FDA  EFF1  F007         	goto	u2600
  4540   000FDE                     u2601:
  4541   000FDE  EF0F  F008         	goto	l3286
  4542   000FE2                     u2600:
  4543   000FE2                     
  4544                           ;color_instructions.c: 213:         OrangeInstructions(mL, mR);
  4545   000FE2  C037  F02C         	movff	MoveBuggy@mL,OrangeInstructions@mL
  4546   000FE6  C038  F02D         	movff	MoveBuggy@mL+1,OrangeInstructions@mL+1
  4547   000FEA  C039  F02E         	movff	MoveBuggy@mR,OrangeInstructions@mR
  4548   000FEE  C03A  F02F         	movff	MoveBuggy@mR+1,OrangeInstructions@mR+1
  4549   000FF2  ECF3  F010         	call	_OrangeInstructions	;wreg free
  4550   000FF6                     
  4551                           ;color_instructions.c: 214:         if(LATDbits.LATD7 != 1){
  4552   000FF6  BE7C               	btfsc	124,7,c	;volatile
  4553   000FF8  EF00  F008         	goto	u2611
  4554   000FFC  EF02  F008         	goto	u2610
  4555   001000                     u2611:
  4556   001000  EF61  F008         	goto	l682
  4557   001004                     u2610:
  4558   001004                     
  4559                           ;color_instructions.c: 215:             AppendMoves(7,&moves_index,anti_moves_array);
  4560   001004  0E56               	movlw	low _moves_index
  4561   001006  6E09               	movwf	AppendMoves@moves_index^0,c
  4562   001008  0E00               	movlw	high _moves_index
  4563   00100A  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4564   00100C  0E76               	movlw	low _anti_moves_array
  4565   00100E  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4566   001010  0E00               	movlw	high _anti_moves_array
  4567   001012  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4568   001014  0E07               	movlw	7
  4569   001016  ECA9  F014         	call	_AppendMoves
  4570   00101A  EF61  F008         	goto	l682
  4571   00101E                     l3286:
  4572   00101E  0E07               	movlw	7
  4573   001020  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4574   001022  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4575   001024  A4D8               	btfss	status,2,c
  4576   001026  EF17  F008         	goto	u2621
  4577   00102A  EF19  F008         	goto	u2620
  4578   00102E                     u2621:
  4579   00102E  EF37  F008         	goto	l3294
  4580   001032                     u2620:
  4581   001032                     
  4582                           ;color_instructions.c: 219:         LightBlueInstructions(mL, mR);
  4583   001032  C037  F02C         	movff	MoveBuggy@mL,LightBlueInstructions@mL
  4584   001036  C038  F02D         	movff	MoveBuggy@mL+1,LightBlueInstructions@mL+1
  4585   00103A  C039  F02E         	movff	MoveBuggy@mR,LightBlueInstructions@mR
  4586   00103E  C03A  F02F         	movff	MoveBuggy@mR+1,LightBlueInstructions@mR+1
  4587   001042  EC36  F011         	call	_LightBlueInstructions	;wreg free
  4588   001046                     
  4589                           ;color_instructions.c: 220:         if(LATDbits.LATD7 != 1){
  4590   001046  BE7C               	btfsc	124,7,c	;volatile
  4591   001048  EF28  F008         	goto	u2631
  4592   00104C  EF2A  F008         	goto	u2630
  4593   001050                     u2631:
  4594   001050  EF61  F008         	goto	l682
  4595   001054                     u2630:
  4596   001054                     
  4597                           ;color_instructions.c: 221:             AppendMoves(6,&moves_index,anti_moves_array);
  4598   001054  0E56               	movlw	low _moves_index
  4599   001056  6E09               	movwf	AppendMoves@moves_index^0,c
  4600   001058  0E00               	movlw	high _moves_index
  4601   00105A  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4602   00105C  0E76               	movlw	low _anti_moves_array
  4603   00105E  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4604   001060  0E00               	movlw	high _anti_moves_array
  4605   001062  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4606   001064  0E06               	movlw	6
  4607   001066  ECA9  F014         	call	_AppendMoves
  4608   00106A  EF61  F008         	goto	l682
  4609   00106E                     l3294:
  4610   00106E  0E09               	movlw	9
  4611   001070  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4612   001072  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4613   001074  A4D8               	btfss	status,2,c
  4614   001076  EF3F  F008         	goto	u2641
  4615   00107A  EF41  F008         	goto	u2640
  4616   00107E                     u2641:
  4617   00107E  EF4D  F008         	goto	l3298
  4618   001082                     u2640:
  4619   001082                     
  4620                           ;color_instructions.c: 227:         AntiYellow(mL, mR);
  4621   001082  C037  F02E         	movff	MoveBuggy@mL,AntiYellow@mL
  4622   001086  C038  F02F         	movff	MoveBuggy@mL+1,AntiYellow@mL+1
  4623   00108A  C039  F030         	movff	MoveBuggy@mR,AntiYellow@mR
  4624   00108E  C03A  F031         	movff	MoveBuggy@mR+1,AntiYellow@mR+1
  4625   001092  EC6C  F00E         	call	_AntiYellow	;wreg free
  4626                           
  4627                           ;color_instructions.c: 228:     }
  4628   001096  EF61  F008         	goto	l682
  4629   00109A                     l3298:
  4630   00109A  0E0A               	movlw	10
  4631   00109C  1835               	xorwf	MoveBuggy@color_detected^0,w,c
  4632   00109E  1036               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4633   0010A0  A4D8               	btfss	status,2,c
  4634   0010A2  EF55  F008         	goto	u2651
  4635   0010A6  EF57  F008         	goto	u2650
  4636   0010AA                     u2651:
  4637   0010AA  EF61  F008         	goto	l682
  4638   0010AE                     u2650:
  4639   0010AE                     
  4640                           ;color_instructions.c: 230:         AntiPink(mL, mR);
  4641   0010AE  C037  F02E         	movff	MoveBuggy@mL,AntiPink@mL
  4642   0010B2  C038  F02F         	movff	MoveBuggy@mL+1,AntiPink@mL+1
  4643   0010B6  C039  F030         	movff	MoveBuggy@mR,AntiPink@mR
  4644   0010BA  C03A  F031         	movff	MoveBuggy@mR+1,AntiPink@mR+1
  4645   0010BE  ECC5  F00E         	call	_AntiPink	;wreg free
  4646   0010C2                     l682:
  4647   0010C2  0012               	return		;funcret
  4648   0010C4                     __end_of_MoveBuggy:
  4649                           	callstack 0
  4650                           
  4651 ;; *************** function _YellowInstructions *****************
  4652 ;; Defined at:
  4653 ;;		line 57 in file "color_instructions.c"
  4654 ;; Parameters:    Size  Location     Type
  4655 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  4656 ;;		 -> main@motorL(9), 
  4657 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  4658 ;;		 -> main@motorR(9), 
  4659 ;; Auto vars:     Size  Location     Type
  4660 ;;  a               1   44[COMRAM] unsigned char 
  4661 ;; Return value:  Size  Location     Type
  4662 ;;                  1    wreg      void 
  4663 ;; Registers used:
  4664 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4665 ;; Tracked objects:
  4666 ;;		On entry : 0/0
  4667 ;;		On exit  : 0/0
  4668 ;;		Unchanged: 0/0
  4669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4670 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4671 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4672 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4673 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4674 ;;Total ram usage:        7 bytes
  4675 ;; Hardware stack levels used: 1
  4676 ;; Hardware stack levels required when called: 11
  4677 ;; This function calls:
  4678 ;;		_fullSpeedBackwards
  4679 ;;		_stop
  4680 ;;		_turnRight90
  4681 ;; This function is called by:
  4682 ;;		_MoveBuggy
  4683 ;; This function uses a non-reentrant model
  4684 ;;
  4685                           
  4686                           	psect	text14
  4687   0020DA                     __ptext14:
  4688                           	callstack 0
  4689   0020DA                     _YellowInstructions:
  4690                           	callstack 17
  4691   0020DA                     
  4692                           ;color_instructions.c: 59:     unsigned char a=0;
  4693   0020DA  0E00               	movlw	0
  4694   0020DC  6E2D               	movwf	YellowInstructions@a^0,c
  4695                           
  4696                           ;color_instructions.c: 60:     while (a<45){
  4697   0020DE  EF7C  F010         	goto	l3086
  4698   0020E2                     l3082:
  4699                           
  4700                           ;color_instructions.c: 61:         fullSpeedBackwards(mL, mR);
  4701   0020E2  C027  F01C         	movff	YellowInstructions@mL,fullSpeedBackwards@mL
  4702   0020E6  C028  F01D         	movff	YellowInstructions@mL+1,fullSpeedBackwards@mL+1
  4703   0020EA  C029  F01E         	movff	YellowInstructions@mR,fullSpeedBackwards@mR
  4704   0020EE  C02A  F01F         	movff	YellowInstructions@mR+1,fullSpeedBackwards@mR+1
  4705   0020F2  EC16  F00D         	call	_fullSpeedBackwards	;wreg free
  4706   0020F6                     
  4707                           ;color_instructions.c: 62:         a++;
  4708   0020F6  2A2D               	incf	YellowInstructions@a^0,f,c
  4709   0020F8                     l3086:
  4710                           
  4711                           ;color_instructions.c: 60:     while (a<45){
  4712   0020F8  0E2C               	movlw	44
  4713   0020FA  642D               	cpfsgt	YellowInstructions@a^0,c
  4714   0020FC  EF82  F010         	goto	u2381
  4715   002100  EF84  F010         	goto	u2380
  4716   002104                     u2381:
  4717   002104  EF71  F010         	goto	l3082
  4718   002108                     u2380:
  4719   002108  EF91  F010         	goto	l3092
  4720   00210C                     l3088:
  4721                           
  4722                           ;color_instructions.c: 65:         stop(mL, mR);
  4723   00210C  C027  F01C         	movff	YellowInstructions@mL,stop@mL
  4724   002110  C028  F01D         	movff	YellowInstructions@mL+1,stop@mL+1
  4725   002114  C029  F01E         	movff	YellowInstructions@mR,stop@mR
  4726   002118  C02A  F01F         	movff	YellowInstructions@mR+1,stop@mR+1
  4727   00211C  EC02  F00E         	call	_stop	;wreg free
  4728   002120                     
  4729                           ;color_instructions.c: 66:         a--;
  4730   002120  062D               	decf	YellowInstructions@a^0,f,c
  4731   002122                     l3092:
  4732                           
  4733                           ;color_instructions.c: 64:     while (a>0){
  4734   002122  502D               	movf	YellowInstructions@a^0,w,c
  4735   002124  A4D8               	btfss	status,2,c
  4736   002126  EF97  F010         	goto	u2391
  4737   00212A  EF99  F010         	goto	u2390
  4738   00212E                     u2391:
  4739   00212E  EF86  F010         	goto	l3088
  4740   002132                     u2390:
  4741   002132                     
  4742                           ;color_instructions.c: 68:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4743   002132  0E05               	movlw	5
  4744   002134  6E2C               	movwf	(??_YellowInstructions+1)^0,c
  4745   002136  0E0F               	movlw	15
  4746   002138  6E2B               	movwf	??_YellowInstructions^0,c
  4747   00213A  0EF1               	movlw	241
  4748   00213C                     u4577:
  4749   00213C  2EE8               	decfsz	wreg,f,c
  4750   00213E  D7FE               	bra	u4577
  4751   002140  2E2B               	decfsz	??_YellowInstructions^0,f,c
  4752   002142  D7FC               	bra	u4577
  4753   002144  2E2C               	decfsz	(??_YellowInstructions+1)^0,f,c
  4754   002146  D7FA               	bra	u4577
  4755   002148  F000               	nop	
  4756   00214A                     
  4757                           ;color_instructions.c: 69:     turnRight90(mL, mR);
  4758   00214A  C027  F022         	movff	YellowInstructions@mL,turnRight90@mL
  4759   00214E  C028  F023         	movff	YellowInstructions@mL+1,turnRight90@mL+1
  4760   002152  C029  F024         	movff	YellowInstructions@mR,turnRight90@mR
  4761   002156  C02A  F025         	movff	YellowInstructions@mR+1,turnRight90@mR+1
  4762   00215A  EC77  F00F         	call	_turnRight90	;wreg free
  4763   00215E  0012               	return		;funcret
  4764   002160                     __end_of_YellowInstructions:
  4765                           	callstack 0
  4766                           
  4767 ;; *************** function _PinkInstructions *****************
  4768 ;; Defined at:
  4769 ;;		line 72 in file "color_instructions.c"
  4770 ;; Parameters:    Size  Location     Type
  4771 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  4772 ;;		 -> main@motorL(9), 
  4773 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  4774 ;;		 -> main@motorR(9), 
  4775 ;; Auto vars:     Size  Location     Type
  4776 ;;  a               1   44[COMRAM] unsigned char 
  4777 ;; Return value:  Size  Location     Type
  4778 ;;                  1    wreg      void 
  4779 ;; Registers used:
  4780 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4781 ;; Tracked objects:
  4782 ;;		On entry : 0/0
  4783 ;;		On exit  : 0/0
  4784 ;;		Unchanged: 0/0
  4785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4786 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4787 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4788 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4789 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4790 ;;Total ram usage:        7 bytes
  4791 ;; Hardware stack levels used: 1
  4792 ;; Hardware stack levels required when called: 11
  4793 ;; This function calls:
  4794 ;;		_fullSpeedBackwards
  4795 ;;		_stop
  4796 ;;		_turnLeft90
  4797 ;; This function is called by:
  4798 ;;		_MoveBuggy
  4799 ;; This function uses a non-reentrant model
  4800 ;;
  4801                           
  4802                           	psect	text15
  4803   002160                     __ptext15:
  4804                           	callstack 0
  4805   002160                     _PinkInstructions:
  4806                           	callstack 17
  4807   002160                     
  4808                           ;color_instructions.c: 73:     unsigned char a=0;
  4809   002160  0E00               	movlw	0
  4810   002162  6E2D               	movwf	PinkInstructions@a^0,c
  4811                           
  4812                           ;color_instructions.c: 74:     while (a<45){
  4813   002164  EFBF  F010         	goto	l3104
  4814   002168                     l3100:
  4815                           
  4816                           ;color_instructions.c: 75:         fullSpeedBackwards(mL, mR);
  4817   002168  C027  F01C         	movff	PinkInstructions@mL,fullSpeedBackwards@mL
  4818   00216C  C028  F01D         	movff	PinkInstructions@mL+1,fullSpeedBackwards@mL+1
  4819   002170  C029  F01E         	movff	PinkInstructions@mR,fullSpeedBackwards@mR
  4820   002174  C02A  F01F         	movff	PinkInstructions@mR+1,fullSpeedBackwards@mR+1
  4821   002178  EC16  F00D         	call	_fullSpeedBackwards	;wreg free
  4822   00217C                     
  4823                           ;color_instructions.c: 76:         a++;
  4824   00217C  2A2D               	incf	PinkInstructions@a^0,f,c
  4825   00217E                     l3104:
  4826                           
  4827                           ;color_instructions.c: 74:     while (a<45){
  4828   00217E  0E2C               	movlw	44
  4829   002180  642D               	cpfsgt	PinkInstructions@a^0,c
  4830   002182  EFC5  F010         	goto	u2401
  4831   002186  EFC7  F010         	goto	u2400
  4832   00218A                     u2401:
  4833   00218A  EFB4  F010         	goto	l3100
  4834   00218E                     u2400:
  4835   00218E  EFD4  F010         	goto	l3110
  4836   002192                     l3106:
  4837                           
  4838                           ;color_instructions.c: 79:         stop(mL, mR);
  4839   002192  C027  F01C         	movff	PinkInstructions@mL,stop@mL
  4840   002196  C028  F01D         	movff	PinkInstructions@mL+1,stop@mL+1
  4841   00219A  C029  F01E         	movff	PinkInstructions@mR,stop@mR
  4842   00219E  C02A  F01F         	movff	PinkInstructions@mR+1,stop@mR+1
  4843   0021A2  EC02  F00E         	call	_stop	;wreg free
  4844   0021A6                     
  4845                           ;color_instructions.c: 80:         a--;
  4846   0021A6  062D               	decf	PinkInstructions@a^0,f,c
  4847   0021A8                     l3110:
  4848                           
  4849                           ;color_instructions.c: 78:     while (a>0){
  4850   0021A8  502D               	movf	PinkInstructions@a^0,w,c
  4851   0021AA  A4D8               	btfss	status,2,c
  4852   0021AC  EFDA  F010         	goto	u2411
  4853   0021B0  EFDC  F010         	goto	u2410
  4854   0021B4                     u2411:
  4855   0021B4  EFC9  F010         	goto	l3106
  4856   0021B8                     u2410:
  4857   0021B8                     
  4858                           ;color_instructions.c: 82:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4859   0021B8  0E05               	movlw	5
  4860   0021BA  6E2C               	movwf	(??_PinkInstructions+1)^0,c
  4861   0021BC  0E0F               	movlw	15
  4862   0021BE  6E2B               	movwf	??_PinkInstructions^0,c
  4863   0021C0  0EF1               	movlw	241
  4864   0021C2                     u4587:
  4865   0021C2  2EE8               	decfsz	wreg,f,c
  4866   0021C4  D7FE               	bra	u4587
  4867   0021C6  2E2B               	decfsz	??_PinkInstructions^0,f,c
  4868   0021C8  D7FC               	bra	u4587
  4869   0021CA  2E2C               	decfsz	(??_PinkInstructions+1)^0,f,c
  4870   0021CC  D7FA               	bra	u4587
  4871   0021CE  F000               	nop	
  4872   0021D0                     
  4873                           ;color_instructions.c: 83:     turnLeft90(mL, mR);
  4874   0021D0  C027  F022         	movff	PinkInstructions@mL,turnLeft90@mL
  4875   0021D4  C028  F023         	movff	PinkInstructions@mL+1,turnLeft90@mL+1
  4876   0021D8  C029  F024         	movff	PinkInstructions@mR,turnLeft90@mR
  4877   0021DC  C02A  F025         	movff	PinkInstructions@mR+1,turnLeft90@mR+1
  4878   0021E0  ECCE  F00F         	call	_turnLeft90	;wreg free
  4879   0021E4  0012               	return		;funcret
  4880   0021E6                     __end_of_PinkInstructions:
  4881                           	callstack 0
  4882                           
  4883 ;; *************** function _OrangeInstructions *****************
  4884 ;; Defined at:
  4885 ;;		line 87 in file "color_instructions.c"
  4886 ;; Parameters:    Size  Location     Type
  4887 ;;  mL              2   43[COMRAM] PTR struct DC_motor
  4888 ;;		 -> main@motorL(9), 
  4889 ;;  mR              2   45[COMRAM] PTR struct DC_motor
  4890 ;;		 -> main@motorR(9), 
  4891 ;; Auto vars:     Size  Location     Type
  4892 ;;  a               1   49[COMRAM] unsigned char 
  4893 ;; Return value:  Size  Location     Type
  4894 ;;                  1    wreg      void 
  4895 ;; Registers used:
  4896 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4897 ;; Tracked objects:
  4898 ;;		On entry : 0/0
  4899 ;;		On exit  : 0/0
  4900 ;;		Unchanged: 0/0
  4901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4902 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4903 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4904 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4905 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4906 ;;Total ram usage:        7 bytes
  4907 ;; Hardware stack levels used: 1
  4908 ;; Hardware stack levels required when called: 12
  4909 ;; This function calls:
  4910 ;;		_fullSpeedBackwards
  4911 ;;		_stop
  4912 ;;		_turnRight135
  4913 ;; This function is called by:
  4914 ;;		_MoveBuggy
  4915 ;; This function uses a non-reentrant model
  4916 ;;
  4917                           
  4918                           	psect	text16
  4919   0021E6                     __ptext16:
  4920                           	callstack 0
  4921   0021E6                     _OrangeInstructions:
  4922                           	callstack 16
  4923   0021E6                     
  4924                           ;color_instructions.c: 88:     unsigned char a=0;
  4925   0021E6  0E00               	movlw	0
  4926   0021E8  6E32               	movwf	OrangeInstructions@a^0,c
  4927                           
  4928                           ;color_instructions.c: 89:     while (a<16){
  4929   0021EA  EF02  F011         	goto	l3122
  4930   0021EE                     l3118:
  4931                           
  4932                           ;color_instructions.c: 90:         fullSpeedBackwards(mL, mR);
  4933   0021EE  C02C  F01C         	movff	OrangeInstructions@mL,fullSpeedBackwards@mL
  4934   0021F2  C02D  F01D         	movff	OrangeInstructions@mL+1,fullSpeedBackwards@mL+1
  4935   0021F6  C02E  F01E         	movff	OrangeInstructions@mR,fullSpeedBackwards@mR
  4936   0021FA  C02F  F01F         	movff	OrangeInstructions@mR+1,fullSpeedBackwards@mR+1
  4937   0021FE  EC16  F00D         	call	_fullSpeedBackwards	;wreg free
  4938   002202                     
  4939                           ;color_instructions.c: 91:         a++;
  4940   002202  2A32               	incf	OrangeInstructions@a^0,f,c
  4941   002204                     l3122:
  4942                           
  4943                           ;color_instructions.c: 89:     while (a<16){
  4944   002204  0E0F               	movlw	15
  4945   002206  6432               	cpfsgt	OrangeInstructions@a^0,c
  4946   002208  EF08  F011         	goto	u2421
  4947   00220C  EF0A  F011         	goto	u2420
  4948   002210                     u2421:
  4949   002210  EFF7  F010         	goto	l3118
  4950   002214                     u2420:
  4951   002214  EF17  F011         	goto	l3128
  4952   002218                     l3124:
  4953                           
  4954                           ;color_instructions.c: 94:         stop(mL, mR);
  4955   002218  C02C  F01C         	movff	OrangeInstructions@mL,stop@mL
  4956   00221C  C02D  F01D         	movff	OrangeInstructions@mL+1,stop@mL+1
  4957   002220  C02E  F01E         	movff	OrangeInstructions@mR,stop@mR
  4958   002224  C02F  F01F         	movff	OrangeInstructions@mR+1,stop@mR+1
  4959   002228  EC02  F00E         	call	_stop	;wreg free
  4960   00222C                     
  4961                           ;color_instructions.c: 95:         a--;
  4962   00222C  0632               	decf	OrangeInstructions@a^0,f,c
  4963   00222E                     l3128:
  4964                           
  4965                           ;color_instructions.c: 93:     while (a>0){
  4966   00222E  5032               	movf	OrangeInstructions@a^0,w,c
  4967   002230  A4D8               	btfss	status,2,c
  4968   002232  EF1D  F011         	goto	u2431
  4969   002236  EF1F  F011         	goto	u2430
  4970   00223A                     u2431:
  4971   00223A  EF0C  F011         	goto	l3124
  4972   00223E                     u2430:
  4973   00223E                     
  4974                           ;color_instructions.c: 97:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4975   00223E  0E05               	movlw	5
  4976   002240  6E31               	movwf	(??_OrangeInstructions+1)^0,c
  4977   002242  0E0F               	movlw	15
  4978   002244  6E30               	movwf	??_OrangeInstructions^0,c
  4979   002246  0EF1               	movlw	241
  4980   002248                     u4597:
  4981   002248  2EE8               	decfsz	wreg,f,c
  4982   00224A  D7FE               	bra	u4597
  4983   00224C  2E30               	decfsz	??_OrangeInstructions^0,f,c
  4984   00224E  D7FC               	bra	u4597
  4985   002250  2E31               	decfsz	(??_OrangeInstructions+1)^0,f,c
  4986   002252  D7FA               	bra	u4597
  4987   002254  F000               	nop	
  4988   002256                     
  4989                           ;color_instructions.c: 98:     turnRight135(mL, mR);
  4990   002256  C02C  F027         	movff	OrangeInstructions@mL,turnRight135@mL
  4991   00225A  C02D  F028         	movff	OrangeInstructions@mL+1,turnRight135@mL+1
  4992   00225E  C02E  F029         	movff	OrangeInstructions@mR,turnRight135@mR
  4993   002262  C02F  F02A         	movff	OrangeInstructions@mR+1,turnRight135@mR+1
  4994   002266  EC39  F012         	call	_turnRight135	;wreg free
  4995   00226A  0012               	return		;funcret
  4996   00226C                     __end_of_OrangeInstructions:
  4997                           	callstack 0
  4998                           
  4999 ;; *************** function _turnRight135 *****************
  5000 ;; Defined at:
  5001 ;;		line 249 in file "dc_motor.c"
  5002 ;; Parameters:    Size  Location     Type
  5003 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  5004 ;;		 -> main@motorL(9), 
  5005 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  5006 ;;		 -> main@motorR(9), 
  5007 ;; Auto vars:     Size  Location     Type
  5008 ;;  a               1   42[COMRAM] unsigned char 
  5009 ;; Return value:  Size  Location     Type
  5010 ;;                  1    wreg      void 
  5011 ;; Registers used:
  5012 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5013 ;; Tracked objects:
  5014 ;;		On entry : 0/0
  5015 ;;		On exit  : 0/0
  5016 ;;		Unchanged: 0/0
  5017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5018 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5019 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5021 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5022 ;;Total ram usage:        5 bytes
  5023 ;; Hardware stack levels used: 1
  5024 ;; Hardware stack levels required when called: 11
  5025 ;; This function calls:
  5026 ;;		_stop
  5027 ;;		_turnRight
  5028 ;;		_turnRight90
  5029 ;; This function is called by:
  5030 ;;		_OrangeInstructions
  5031 ;; This function uses a non-reentrant model
  5032 ;;
  5033                           
  5034                           	psect	text17
  5035   002472                     __ptext17:
  5036                           	callstack 0
  5037   002472                     _turnRight135:
  5038                           	callstack 16
  5039   002472                     
  5040                           ;dc_motor.c: 251:     turnRight90(mL,mR);
  5041   002472  C027  F022         	movff	turnRight135@mL,turnRight90@mL
  5042   002476  C028  F023         	movff	turnRight135@mL+1,turnRight90@mL+1
  5043   00247A  C029  F024         	movff	turnRight135@mR,turnRight90@mR
  5044   00247E  C02A  F025         	movff	turnRight135@mR+1,turnRight90@mR+1
  5045   002482  EC77  F00F         	call	_turnRight90	;wreg free
  5046   002486                     
  5047                           ;dc_motor.c: 252:     unsigned char a=0;
  5048   002486  0E00               	movlw	0
  5049   002488  6E2B               	movwf	turnRight135@a^0,c
  5050                           
  5051                           ;dc_motor.c: 253:     while(a<15){
  5052   00248A  EF52  F012         	goto	l2956
  5053   00248E                     l2952:
  5054                           
  5055                           ;dc_motor.c: 254:         turnRight(mL, mR);
  5056   00248E  C027  F01C         	movff	turnRight135@mL,turnRight@mL
  5057   002492  C028  F01D         	movff	turnRight135@mL+1,turnRight@mL+1
  5058   002496  C029  F01E         	movff	turnRight135@mR,turnRight@mR
  5059   00249A  C02A  F01F         	movff	turnRight135@mR+1,turnRight@mR+1
  5060   00249E  ECB1  F00B         	call	_turnRight	;wreg free
  5061   0024A2                     
  5062                           ;dc_motor.c: 255:         a++;
  5063   0024A2  2A2B               	incf	turnRight135@a^0,f,c
  5064   0024A4                     l2956:
  5065                           
  5066                           ;dc_motor.c: 253:     while(a<15){
  5067   0024A4  0E0E               	movlw	14
  5068   0024A6  642B               	cpfsgt	turnRight135@a^0,c
  5069   0024A8  EF58  F012         	goto	u2261
  5070   0024AC  EF5A  F012         	goto	u2260
  5071   0024B0                     u2261:
  5072   0024B0  EF47  F012         	goto	l2952
  5073   0024B4                     u2260:
  5074   0024B4  EF67  F012         	goto	l2962
  5075   0024B8                     l2958:
  5076                           
  5077                           ;dc_motor.c: 258:         stop(mL, mR);
  5078   0024B8  C027  F01C         	movff	turnRight135@mL,stop@mL
  5079   0024BC  C028  F01D         	movff	turnRight135@mL+1,stop@mL+1
  5080   0024C0  C029  F01E         	movff	turnRight135@mR,stop@mR
  5081   0024C4  C02A  F01F         	movff	turnRight135@mR+1,stop@mR+1
  5082   0024C8  EC02  F00E         	call	_stop	;wreg free
  5083   0024CC                     
  5084                           ;dc_motor.c: 259:         a--;
  5085   0024CC  062B               	decf	turnRight135@a^0,f,c
  5086   0024CE                     l2962:
  5087                           
  5088                           ;dc_motor.c: 257:     while(a>0){
  5089   0024CE  502B               	movf	turnRight135@a^0,w,c
  5090   0024D0  A4D8               	btfss	status,2,c
  5091   0024D2  EF6D  F012         	goto	u2271
  5092   0024D6  EF6F  F012         	goto	u2270
  5093   0024DA                     u2271:
  5094   0024DA  EF5C  F012         	goto	l2958
  5095   0024DE                     u2270:
  5096   0024DE  0012               	return		;funcret
  5097   0024E0                     __end_of_turnRight135:
  5098                           	callstack 0
  5099                           
  5100 ;; *************** function _LightBlueInstructions *****************
  5101 ;; Defined at:
  5102 ;;		line 101 in file "color_instructions.c"
  5103 ;; Parameters:    Size  Location     Type
  5104 ;;  mL              2   43[COMRAM] PTR struct DC_motor
  5105 ;;		 -> main@motorL(9), 
  5106 ;;  mR              2   45[COMRAM] PTR struct DC_motor
  5107 ;;		 -> main@motorR(9), 
  5108 ;; Auto vars:     Size  Location     Type
  5109 ;;  a               1   49[COMRAM] unsigned char 
  5110 ;; Return value:  Size  Location     Type
  5111 ;;                  1    wreg      void 
  5112 ;; Registers used:
  5113 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5114 ;; Tracked objects:
  5115 ;;		On entry : 0/0
  5116 ;;		On exit  : 0/0
  5117 ;;		Unchanged: 0/0
  5118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5119 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5120 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5121 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5122 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5123 ;;Total ram usage:        7 bytes
  5124 ;; Hardware stack levels used: 1
  5125 ;; Hardware stack levels required when called: 12
  5126 ;; This function calls:
  5127 ;;		_fullSpeedBackwards
  5128 ;;		_stop
  5129 ;;		_turnLeft135
  5130 ;; This function is called by:
  5131 ;;		_MoveBuggy
  5132 ;; This function uses a non-reentrant model
  5133 ;;
  5134                           
  5135                           	psect	text18
  5136   00226C                     __ptext18:
  5137                           	callstack 0
  5138   00226C                     _LightBlueInstructions:
  5139                           	callstack 16
  5140   00226C                     
  5141                           ;color_instructions.c: 102:     unsigned char a=0;
  5142   00226C  0E00               	movlw	0
  5143   00226E  6E32               	movwf	LightBlueInstructions@a^0,c
  5144                           
  5145                           ;color_instructions.c: 103:     while (a<16){
  5146   002270  EF45  F011         	goto	l3140
  5147   002274                     l3136:
  5148                           
  5149                           ;color_instructions.c: 104:         fullSpeedBackwards(mL, mR);
  5150   002274  C02C  F01C         	movff	LightBlueInstructions@mL,fullSpeedBackwards@mL
  5151   002278  C02D  F01D         	movff	LightBlueInstructions@mL+1,fullSpeedBackwards@mL+1
  5152   00227C  C02E  F01E         	movff	LightBlueInstructions@mR,fullSpeedBackwards@mR
  5153   002280  C02F  F01F         	movff	LightBlueInstructions@mR+1,fullSpeedBackwards@mR+1
  5154   002284  EC16  F00D         	call	_fullSpeedBackwards	;wreg free
  5155   002288                     
  5156                           ;color_instructions.c: 105:         a++;
  5157   002288  2A32               	incf	LightBlueInstructions@a^0,f,c
  5158   00228A                     l3140:
  5159                           
  5160                           ;color_instructions.c: 103:     while (a<16){
  5161   00228A  0E0F               	movlw	15
  5162   00228C  6432               	cpfsgt	LightBlueInstructions@a^0,c
  5163   00228E  EF4B  F011         	goto	u2441
  5164   002292  EF4D  F011         	goto	u2440
  5165   002296                     u2441:
  5166   002296  EF3A  F011         	goto	l3136
  5167   00229A                     u2440:
  5168   00229A  EF5A  F011         	goto	l3146
  5169   00229E                     l3142:
  5170                           
  5171                           ;color_instructions.c: 108:         stop(mL, mR);
  5172   00229E  C02C  F01C         	movff	LightBlueInstructions@mL,stop@mL
  5173   0022A2  C02D  F01D         	movff	LightBlueInstructions@mL+1,stop@mL+1
  5174   0022A6  C02E  F01E         	movff	LightBlueInstructions@mR,stop@mR
  5175   0022AA  C02F  F01F         	movff	LightBlueInstructions@mR+1,stop@mR+1
  5176   0022AE  EC02  F00E         	call	_stop	;wreg free
  5177   0022B2                     
  5178                           ;color_instructions.c: 109:         a--;
  5179   0022B2  0632               	decf	LightBlueInstructions@a^0,f,c
  5180   0022B4                     l3146:
  5181                           
  5182                           ;color_instructions.c: 107:     while (a>0){
  5183   0022B4  5032               	movf	LightBlueInstructions@a^0,w,c
  5184   0022B6  A4D8               	btfss	status,2,c
  5185   0022B8  EF60  F011         	goto	u2451
  5186   0022BC  EF62  F011         	goto	u2450
  5187   0022C0                     u2451:
  5188   0022C0  EF4F  F011         	goto	l3142
  5189   0022C4                     u2450:
  5190   0022C4                     
  5191                           ;color_instructions.c: 111:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5192   0022C4  0E05               	movlw	5
  5193   0022C6  6E31               	movwf	(??_LightBlueInstructions+1)^0,c
  5194   0022C8  0E0F               	movlw	15
  5195   0022CA  6E30               	movwf	??_LightBlueInstructions^0,c
  5196   0022CC  0EF1               	movlw	241
  5197   0022CE                     u4607:
  5198   0022CE  2EE8               	decfsz	wreg,f,c
  5199   0022D0  D7FE               	bra	u4607
  5200   0022D2  2E30               	decfsz	??_LightBlueInstructions^0,f,c
  5201   0022D4  D7FC               	bra	u4607
  5202   0022D6  2E31               	decfsz	(??_LightBlueInstructions+1)^0,f,c
  5203   0022D8  D7FA               	bra	u4607
  5204   0022DA  F000               	nop	
  5205   0022DC                     
  5206                           ;color_instructions.c: 112:     turnLeft135(mL, mR);
  5207   0022DC  C02C  F027         	movff	LightBlueInstructions@mL,turnLeft135@mL
  5208   0022E0  C02D  F028         	movff	LightBlueInstructions@mL+1,turnLeft135@mL+1
  5209   0022E4  C02E  F029         	movff	LightBlueInstructions@mR,turnLeft135@mR
  5210   0022E8  C02F  F02A         	movff	LightBlueInstructions@mR+1,turnLeft135@mR+1
  5211   0022EC  EC70  F012         	call	_turnLeft135	;wreg free
  5212   0022F0  0012               	return		;funcret
  5213   0022F2                     __end_of_LightBlueInstructions:
  5214                           	callstack 0
  5215                           
  5216 ;; *************** function _turnLeft135 *****************
  5217 ;; Defined at:
  5218 ;;		line 263 in file "dc_motor.c"
  5219 ;; Parameters:    Size  Location     Type
  5220 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  5221 ;;		 -> main@motorL(9), 
  5222 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  5223 ;;		 -> main@motorR(9), 
  5224 ;; Auto vars:     Size  Location     Type
  5225 ;;  a               1   42[COMRAM] unsigned char 
  5226 ;; Return value:  Size  Location     Type
  5227 ;;                  1    wreg      void 
  5228 ;; Registers used:
  5229 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5230 ;; Tracked objects:
  5231 ;;		On entry : 0/0
  5232 ;;		On exit  : 0/0
  5233 ;;		Unchanged: 0/0
  5234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5235 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5236 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5238 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5239 ;;Total ram usage:        5 bytes
  5240 ;; Hardware stack levels used: 1
  5241 ;; Hardware stack levels required when called: 11
  5242 ;; This function calls:
  5243 ;;		_stop
  5244 ;;		_turnLeft
  5245 ;;		_turnLeft90
  5246 ;; This function is called by:
  5247 ;;		_LightBlueInstructions
  5248 ;; This function uses a non-reentrant model
  5249 ;;
  5250                           
  5251                           	psect	text19
  5252   0024E0                     __ptext19:
  5253                           	callstack 0
  5254   0024E0                     _turnLeft135:
  5255                           	callstack 16
  5256   0024E0                     
  5257                           ;dc_motor.c: 265:     turnLeft90(mL,mR);
  5258   0024E0  C027  F022         	movff	turnLeft135@mL,turnLeft90@mL
  5259   0024E4  C028  F023         	movff	turnLeft135@mL+1,turnLeft90@mL+1
  5260   0024E8  C029  F024         	movff	turnLeft135@mR,turnLeft90@mR
  5261   0024EC  C02A  F025         	movff	turnLeft135@mR+1,turnLeft90@mR+1
  5262   0024F0  ECCE  F00F         	call	_turnLeft90	;wreg free
  5263   0024F4                     
  5264                           ;dc_motor.c: 266:     unsigned char a=0;
  5265   0024F4  0E00               	movlw	0
  5266   0024F6  6E2B               	movwf	turnLeft135@a^0,c
  5267                           
  5268                           ;dc_motor.c: 267:     while(a<16){
  5269   0024F8  EF89  F012         	goto	l2972
  5270   0024FC                     l2968:
  5271                           
  5272                           ;dc_motor.c: 268:         turnLeft(mL, mR);
  5273   0024FC  C027  F01C         	movff	turnLeft135@mL,turnLeft@mL
  5274   002500  C028  F01D         	movff	turnLeft135@mL+1,turnLeft@mL+1
  5275   002504  C029  F01E         	movff	turnLeft135@mR,turnLeft@mR
  5276   002508  C02A  F01F         	movff	turnLeft135@mR+1,turnLeft@mR+1
  5277   00250C  EC9F  F00C         	call	_turnLeft	;wreg free
  5278   002510                     
  5279                           ;dc_motor.c: 269:         a++;
  5280   002510  2A2B               	incf	turnLeft135@a^0,f,c
  5281   002512                     l2972:
  5282                           
  5283                           ;dc_motor.c: 267:     while(a<16){
  5284   002512  0E0F               	movlw	15
  5285   002514  642B               	cpfsgt	turnLeft135@a^0,c
  5286   002516  EF8F  F012         	goto	u2281
  5287   00251A  EF91  F012         	goto	u2280
  5288   00251E                     u2281:
  5289   00251E  EF7E  F012         	goto	l2968
  5290   002522                     u2280:
  5291   002522  EF9E  F012         	goto	l2978
  5292   002526                     l2974:
  5293                           
  5294                           ;dc_motor.c: 272:         stop(mL, mR);
  5295   002526  C027  F01C         	movff	turnLeft135@mL,stop@mL
  5296   00252A  C028  F01D         	movff	turnLeft135@mL+1,stop@mL+1
  5297   00252E  C029  F01E         	movff	turnLeft135@mR,stop@mR
  5298   002532  C02A  F01F         	movff	turnLeft135@mR+1,stop@mR+1
  5299   002536  EC02  F00E         	call	_stop	;wreg free
  5300   00253A                     
  5301                           ;dc_motor.c: 273:         a--;
  5302   00253A  062B               	decf	turnLeft135@a^0,f,c
  5303   00253C                     l2978:
  5304                           
  5305                           ;dc_motor.c: 271:     while(a>0){
  5306   00253C  502B               	movf	turnLeft135@a^0,w,c
  5307   00253E  A4D8               	btfss	status,2,c
  5308   002540  EFA4  F012         	goto	u2291
  5309   002544  EFA6  F012         	goto	u2290
  5310   002548                     u2291:
  5311   002548  EF93  F012         	goto	l2974
  5312   00254C                     u2290:
  5313   00254C  0012               	return		;funcret
  5314   00254E                     __end_of_turnLeft135:
  5315                           	callstack 0
  5316                           
  5317 ;; *************** function _AppendMoves *****************
  5318 ;; Defined at:
  5319 ;;		line 17 in file "Memorization.c"
  5320 ;; Parameters:    Size  Location     Type
  5321 ;;  temp            1    wreg     unsigned char 
  5322 ;;  moves_index     2    8[COMRAM] PTR unsigned char 
  5323 ;;		 -> moves_index(1), 
  5324 ;;  anti_moves_a    2   10[COMRAM] PTR unsigned char 
  5325 ;;		 -> anti_moves_array(40), 
  5326 ;; Auto vars:     Size  Location     Type
  5327 ;;  temp            1   13[COMRAM] unsigned char 
  5328 ;; Return value:  Size  Location     Type
  5329 ;;                  1    wreg      void 
  5330 ;; Registers used:
  5331 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5332 ;; Tracked objects:
  5333 ;;		On entry : 0/0
  5334 ;;		On exit  : 0/0
  5335 ;;		Unchanged: 0/0
  5336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5337 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5338 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5339 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5340 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5341 ;;Total ram usage:        6 bytes
  5342 ;; Hardware stack levels used: 1
  5343 ;; Hardware stack levels required when called: 7
  5344 ;; This function calls:
  5345 ;;		Nothing
  5346 ;; This function is called by:
  5347 ;;		_MoveBuggy
  5348 ;; This function uses a non-reentrant model
  5349 ;;
  5350                           
  5351                           	psect	text20
  5352   002952                     __ptext20:
  5353                           	callstack 0
  5354   002952                     _AppendMoves:
  5355                           	callstack 21
  5356                           
  5357                           ;incstack = 0
  5358                           ;AppendMoves@temp stored from wreg
  5359   002952  6E0E               	movwf	AppendMoves@temp^0,c
  5360   002954                     
  5361                           ;Memorization.c: 19:     anti_moves_array[(*moves_index)++] = temp;
  5362   002954  C009  FFD9         	movff	AppendMoves@moves_index,fsr2l
  5363   002958  C00A  FFDA         	movff	AppendMoves@moves_index+1,fsr2h
  5364   00295C  CFDF F00D          	movff	indf2,??_AppendMoves
  5365   002960  0E01               	movlw	1
  5366   002962  26DF               	addwf	indf2,f,c
  5367   002964  500D               	movf	??_AppendMoves^0,w,c
  5368   002966  240B               	addwf	AppendMoves@anti_moves_array^0,w,c
  5369   002968  6ED9               	movwf	fsr2l,c
  5370   00296A  0E00               	movlw	0
  5371   00296C  200C               	addwfc	(AppendMoves@anti_moves_array+1)^0,w,c
  5372   00296E  6EDA               	movwf	fsr2h,c
  5373   002970  C00E  FFDF         	movff	AppendMoves@temp,indf2
  5374   002974  0012               	return		;funcret
  5375   002976                     __end_of_AppendMoves:
  5376                           	callstack 0
  5377                           
  5378 ;; *************** function _AntiYellow *****************
  5379 ;; Defined at:
  5380 ;;		line 115 in file "color_instructions.c"
  5381 ;; Parameters:    Size  Location     Type
  5382 ;;  mL              2   45[COMRAM] PTR struct DC_motor
  5383 ;;		 -> main@motorL(9), 
  5384 ;;  mR              2   47[COMRAM] PTR struct DC_motor
  5385 ;;		 -> main@motorR(9), 
  5386 ;; Auto vars:     Size  Location     Type
  5387 ;;  a               1   51[COMRAM] unsigned char 
  5388 ;; Return value:  Size  Location     Type
  5389 ;;                  1    wreg      void 
  5390 ;; Registers used:
  5391 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5392 ;; Tracked objects:
  5393 ;;		On entry : 0/0
  5394 ;;		On exit  : 0/0
  5395 ;;		Unchanged: 0/0
  5396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5397 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5398 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5399 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5400 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5401 ;;Total ram usage:        7 bytes
  5402 ;; Hardware stack levels used: 1
  5403 ;; Hardware stack levels required when called: 12
  5404 ;; This function calls:
  5405 ;;		_BlueInstructions
  5406 ;;		_RedInstructions
  5407 ;;		_fullSpeedAhead
  5408 ;;		_stop
  5409 ;; This function is called by:
  5410 ;;		_MoveBuggy
  5411 ;; This function uses a non-reentrant model
  5412 ;;
  5413                           
  5414                           	psect	text21
  5415   001CD8                     __ptext21:
  5416                           	callstack 0
  5417   001CD8                     _AntiYellow:
  5418                           	callstack 16
  5419   001CD8                     
  5420                           ;color_instructions.c: 116:     unsigned char a=0;
  5421   001CD8  0E00               	movlw	0
  5422   001CDA  6E34               	movwf	AntiYellow@a^0,c
  5423   001CDC                     
  5424                           ;color_instructions.c: 118:     RedInstructions(mL, mR);
  5425   001CDC  C02E  F027         	movff	AntiYellow@mL,RedInstructions@mL
  5426   001CE0  C02F  F028         	movff	AntiYellow@mL+1,RedInstructions@mL+1
  5427   001CE4  C030  F029         	movff	AntiYellow@mR,RedInstructions@mR
  5428   001CE8  C031  F02A         	movff	AntiYellow@mR+1,RedInstructions@mR+1
  5429   001CEC  EC79  F011         	call	_RedInstructions	;wreg free
  5430   001CF0                     
  5431                           ;color_instructions.c: 119:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5432   001CF0  0E05               	movlw	5
  5433   001CF2  6E33               	movwf	(??_AntiYellow+1)^0,c
  5434   001CF4  0E0F               	movlw	15
  5435   001CF6  6E32               	movwf	??_AntiYellow^0,c
  5436   001CF8  0EF1               	movlw	241
  5437   001CFA                     u4617:
  5438   001CFA  2EE8               	decfsz	wreg,f,c
  5439   001CFC  D7FE               	bra	u4617
  5440   001CFE  2E32               	decfsz	??_AntiYellow^0,f,c
  5441   001D00  D7FC               	bra	u4617
  5442   001D02  2E33               	decfsz	(??_AntiYellow+1)^0,f,c
  5443   001D04  D7FA               	bra	u4617
  5444   001D06  F000               	nop	
  5445                           
  5446                           ;color_instructions.c: 121:     while (a<45){
  5447   001D08  EF91  F00E         	goto	l3162
  5448   001D0C                     l3158:
  5449                           
  5450                           ;color_instructions.c: 122:         fullSpeedAhead(mL, mR);
  5451   001D0C  C02E  F01C         	movff	AntiYellow@mL,fullSpeedAhead@mL
  5452   001D10  C02F  F01D         	movff	AntiYellow@mL+1,fullSpeedAhead@mL+1
  5453   001D14  C030  F01E         	movff	AntiYellow@mR,fullSpeedAhead@mR
  5454   001D18  C031  F01F         	movff	AntiYellow@mR+1,fullSpeedAhead@mR+1
  5455   001D1C  EC28  F00C         	call	_fullSpeedAhead	;wreg free
  5456   001D20                     
  5457                           ;color_instructions.c: 123:         a++;
  5458   001D20  2A34               	incf	AntiYellow@a^0,f,c
  5459   001D22                     l3162:
  5460                           
  5461                           ;color_instructions.c: 121:     while (a<45){
  5462   001D22  0E2C               	movlw	44
  5463   001D24  6434               	cpfsgt	AntiYellow@a^0,c
  5464   001D26  EF97  F00E         	goto	u2461
  5465   001D2A  EF99  F00E         	goto	u2460
  5466   001D2E                     u2461:
  5467   001D2E  EF86  F00E         	goto	l3158
  5468   001D32                     u2460:
  5469   001D32  EFA6  F00E         	goto	l3168
  5470   001D36                     l3164:
  5471                           
  5472                           ;color_instructions.c: 126:         stop(mL, mR);
  5473   001D36  C02E  F01C         	movff	AntiYellow@mL,stop@mL
  5474   001D3A  C02F  F01D         	movff	AntiYellow@mL+1,stop@mL+1
  5475   001D3E  C030  F01E         	movff	AntiYellow@mR,stop@mR
  5476   001D42  C031  F01F         	movff	AntiYellow@mR+1,stop@mR+1
  5477   001D46  EC02  F00E         	call	_stop	;wreg free
  5478   001D4A                     
  5479                           ;color_instructions.c: 127:         a--;
  5480   001D4A  0634               	decf	AntiYellow@a^0,f,c
  5481   001D4C                     l3168:
  5482                           
  5483                           ;color_instructions.c: 125:     while (a>0){
  5484   001D4C  5034               	movf	AntiYellow@a^0,w,c
  5485   001D4E  A4D8               	btfss	status,2,c
  5486   001D50  EFAC  F00E         	goto	u2471
  5487   001D54  EFAE  F00E         	goto	u2470
  5488   001D58                     u2471:
  5489   001D58  EF9B  F00E         	goto	l3164
  5490   001D5C                     u2470:
  5491   001D5C                     
  5492                           ;color_instructions.c: 129:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5493   001D5C  0E05               	movlw	5
  5494   001D5E  6E33               	movwf	(??_AntiYellow+1)^0,c
  5495   001D60  0E0F               	movlw	15
  5496   001D62  6E32               	movwf	??_AntiYellow^0,c
  5497   001D64  0EF1               	movlw	241
  5498   001D66                     u4627:
  5499   001D66  2EE8               	decfsz	wreg,f,c
  5500   001D68  D7FE               	bra	u4627
  5501   001D6A  2E32               	decfsz	??_AntiYellow^0,f,c
  5502   001D6C  D7FC               	bra	u4627
  5503   001D6E  2E33               	decfsz	(??_AntiYellow+1)^0,f,c
  5504   001D70  D7FA               	bra	u4627
  5505   001D72  F000               	nop	
  5506   001D74                     
  5507                           ;color_instructions.c: 131:     BlueInstructions(mL, mR);
  5508   001D74  C02E  F027         	movff	AntiYellow@mL,BlueInstructions@mL
  5509   001D78  C02F  F028         	movff	AntiYellow@mL+1,BlueInstructions@mL+1
  5510   001D7C  C030  F029         	movff	AntiYellow@mR,BlueInstructions@mR
  5511   001D80  C031  F02A         	movff	AntiYellow@mR+1,BlueInstructions@mR+1
  5512   001D84  EC1E  F00F         	call	_BlueInstructions	;wreg free
  5513   001D88  0012               	return		;funcret
  5514   001D8A                     __end_of_AntiYellow:
  5515                           	callstack 0
  5516                           
  5517 ;; *************** function _RedInstructions *****************
  5518 ;; Defined at:
  5519 ;;		line 10 in file "color_instructions.c"
  5520 ;; Parameters:    Size  Location     Type
  5521 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  5522 ;;		 -> main@motorL(9), 
  5523 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  5524 ;;		 -> main@motorR(9), 
  5525 ;; Auto vars:     Size  Location     Type
  5526 ;;  a               1   44[COMRAM] unsigned char 
  5527 ;; Return value:  Size  Location     Type
  5528 ;;                  1    wreg      void 
  5529 ;; Registers used:
  5530 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5531 ;; Tracked objects:
  5532 ;;		On entry : 0/0
  5533 ;;		On exit  : 0/0
  5534 ;;		Unchanged: 0/0
  5535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5536 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5537 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5538 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5539 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5540 ;;Total ram usage:        7 bytes
  5541 ;; Hardware stack levels used: 1
  5542 ;; Hardware stack levels required when called: 11
  5543 ;; This function calls:
  5544 ;;		_fullSpeedBackwards
  5545 ;;		_stop
  5546 ;;		_turnRight90
  5547 ;; This function is called by:
  5548 ;;		_AntiYellow
  5549 ;;		_MoveBuggy
  5550 ;; This function uses a non-reentrant model
  5551 ;;
  5552                           
  5553                           	psect	text22
  5554   0022F2                     __ptext22:
  5555                           	callstack 0
  5556   0022F2                     _RedInstructions:
  5557                           	callstack 17
  5558   0022F2                     
  5559                           ;color_instructions.c: 12:     unsigned char a=0;
  5560   0022F2  0E00               	movlw	0
  5561   0022F4  6E2D               	movwf	RedInstructions@a^0,c
  5562                           
  5563                           ;color_instructions.c: 13:     while (a<16){
  5564   0022F6  EF88  F011         	goto	l2986
  5565   0022FA                     l2982:
  5566                           
  5567                           ;color_instructions.c: 14:         fullSpeedBackwards(mL, mR);
  5568   0022FA  C027  F01C         	movff	RedInstructions@mL,fullSpeedBackwards@mL
  5569   0022FE  C028  F01D         	movff	RedInstructions@mL+1,fullSpeedBackwards@mL+1
  5570   002302  C029  F01E         	movff	RedInstructions@mR,fullSpeedBackwards@mR
  5571   002306  C02A  F01F         	movff	RedInstructions@mR+1,fullSpeedBackwards@mR+1
  5572   00230A  EC16  F00D         	call	_fullSpeedBackwards	;wreg free
  5573   00230E                     
  5574                           ;color_instructions.c: 15:         a++;
  5575   00230E  2A2D               	incf	RedInstructions@a^0,f,c
  5576   002310                     l2986:
  5577                           
  5578                           ;color_instructions.c: 13:     while (a<16){
  5579   002310  0E0F               	movlw	15
  5580   002312  642D               	cpfsgt	RedInstructions@a^0,c
  5581   002314  EF8E  F011         	goto	u2301
  5582   002318  EF90  F011         	goto	u2300
  5583   00231C                     u2301:
  5584   00231C  EF7D  F011         	goto	l2982
  5585   002320                     u2300:
  5586   002320  EF9D  F011         	goto	l2992
  5587   002324                     l2988:
  5588                           
  5589                           ;color_instructions.c: 18:         stop(mL, mR);
  5590   002324  C027  F01C         	movff	RedInstructions@mL,stop@mL
  5591   002328  C028  F01D         	movff	RedInstructions@mL+1,stop@mL+1
  5592   00232C  C029  F01E         	movff	RedInstructions@mR,stop@mR
  5593   002330  C02A  F01F         	movff	RedInstructions@mR+1,stop@mR+1
  5594   002334  EC02  F00E         	call	_stop	;wreg free
  5595   002338                     
  5596                           ;color_instructions.c: 19:         a--;
  5597   002338  062D               	decf	RedInstructions@a^0,f,c
  5598   00233A                     l2992:
  5599                           
  5600                           ;color_instructions.c: 17:     while (a>0){
  5601   00233A  502D               	movf	RedInstructions@a^0,w,c
  5602   00233C  A4D8               	btfss	status,2,c
  5603   00233E  EFA3  F011         	goto	u2311
  5604   002342  EFA5  F011         	goto	u2310
  5605   002346                     u2311:
  5606   002346  EF92  F011         	goto	l2988
  5607   00234A                     u2310:
  5608   00234A                     
  5609                           ;color_instructions.c: 21:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5610   00234A  0E05               	movlw	5
  5611   00234C  6E2C               	movwf	(??_RedInstructions+1)^0,c
  5612   00234E  0E0F               	movlw	15
  5613   002350  6E2B               	movwf	??_RedInstructions^0,c
  5614   002352  0EF1               	movlw	241
  5615   002354                     u4637:
  5616   002354  2EE8               	decfsz	wreg,f,c
  5617   002356  D7FE               	bra	u4637
  5618   002358  2E2B               	decfsz	??_RedInstructions^0,f,c
  5619   00235A  D7FC               	bra	u4637
  5620   00235C  2E2C               	decfsz	(??_RedInstructions+1)^0,f,c
  5621   00235E  D7FA               	bra	u4637
  5622   002360  F000               	nop	
  5623   002362                     
  5624                           ;color_instructions.c: 22:     turnRight90(mL, mR);
  5625   002362  C027  F022         	movff	RedInstructions@mL,turnRight90@mL
  5626   002366  C028  F023         	movff	RedInstructions@mL+1,turnRight90@mL+1
  5627   00236A  C029  F024         	movff	RedInstructions@mR,turnRight90@mR
  5628   00236E  C02A  F025         	movff	RedInstructions@mR+1,turnRight90@mR+1
  5629   002372  EC77  F00F         	call	_turnRight90	;wreg free
  5630   002376  0012               	return		;funcret
  5631   002378                     __end_of_RedInstructions:
  5632                           	callstack 0
  5633                           
  5634 ;; *************** function _turnRight90 *****************
  5635 ;; Defined at:
  5636 ;;		line 221 in file "dc_motor.c"
  5637 ;; Parameters:    Size  Location     Type
  5638 ;;  mL              2   33[COMRAM] PTR struct DC_motor
  5639 ;;		 -> main@motorL(9), 
  5640 ;;  mR              2   35[COMRAM] PTR struct DC_motor
  5641 ;;		 -> main@motorR(9), 
  5642 ;; Auto vars:     Size  Location     Type
  5643 ;;  a               1   37[COMRAM] unsigned char 
  5644 ;; Return value:  Size  Location     Type
  5645 ;;                  1    wreg      void 
  5646 ;; Registers used:
  5647 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5648 ;; Tracked objects:
  5649 ;;		On entry : 0/0
  5650 ;;		On exit  : 0/0
  5651 ;;		Unchanged: 0/0
  5652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5653 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5654 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5656 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5657 ;;Total ram usage:        5 bytes
  5658 ;; Hardware stack levels used: 1
  5659 ;; Hardware stack levels required when called: 10
  5660 ;; This function calls:
  5661 ;;		_stop
  5662 ;;		_turnRight
  5663 ;; This function is called by:
  5664 ;;		_turnRight135
  5665 ;;		_RedInstructions
  5666 ;;		_YellowInstructions
  5667 ;; This function uses a non-reentrant model
  5668 ;;
  5669                           
  5670                           	psect	text23
  5671   001EEE                     __ptext23:
  5672                           	callstack 0
  5673   001EEE                     _turnRight90:
  5674                           	callstack 17
  5675   001EEE                     
  5676                           ;dc_motor.c: 223:     unsigned char a=0;
  5677   001EEE  0E00               	movlw	0
  5678   001EF0  6E26               	movwf	turnRight90@a^0,c
  5679                           
  5680                           ;dc_motor.c: 224:     while(a<15){
  5681   001EF2  EF86  F00F         	goto	l2904
  5682   001EF6                     l2900:
  5683                           
  5684                           ;dc_motor.c: 225:         turnRight(mL, mR);
  5685   001EF6  C022  F01C         	movff	turnRight90@mL,turnRight@mL
  5686   001EFA  C023  F01D         	movff	turnRight90@mL+1,turnRight@mL+1
  5687   001EFE  C024  F01E         	movff	turnRight90@mR,turnRight@mR
  5688   001F02  C025  F01F         	movff	turnRight90@mR+1,turnRight@mR+1
  5689   001F06  ECB1  F00B         	call	_turnRight	;wreg free
  5690   001F0A                     
  5691                           ;dc_motor.c: 226:         a++;
  5692   001F0A  2A26               	incf	turnRight90@a^0,f,c
  5693   001F0C                     l2904:
  5694                           
  5695                           ;dc_motor.c: 224:     while(a<15){
  5696   001F0C  0E0E               	movlw	14
  5697   001F0E  6426               	cpfsgt	turnRight90@a^0,c
  5698   001F10  EF8C  F00F         	goto	u2181
  5699   001F14  EF8E  F00F         	goto	u2180
  5700   001F18                     u2181:
  5701   001F18  EF7B  F00F         	goto	l2900
  5702   001F1C                     u2180:
  5703   001F1C  EF9B  F00F         	goto	l2910
  5704   001F20                     l2906:
  5705                           
  5706                           ;dc_motor.c: 229:         stop(mL, mR);
  5707   001F20  C022  F01C         	movff	turnRight90@mL,stop@mL
  5708   001F24  C023  F01D         	movff	turnRight90@mL+1,stop@mL+1
  5709   001F28  C024  F01E         	movff	turnRight90@mR,stop@mR
  5710   001F2C  C025  F01F         	movff	turnRight90@mR+1,stop@mR+1
  5711   001F30  EC02  F00E         	call	_stop	;wreg free
  5712   001F34                     
  5713                           ;dc_motor.c: 230:         a--;
  5714   001F34  0626               	decf	turnRight90@a^0,f,c
  5715   001F36                     l2910:
  5716                           
  5717                           ;dc_motor.c: 228:     while(a>0){
  5718   001F36  5026               	movf	turnRight90@a^0,w,c
  5719   001F38  A4D8               	btfss	status,2,c
  5720   001F3A  EFA1  F00F         	goto	u2191
  5721   001F3E  EFA3  F00F         	goto	u2190
  5722   001F42                     u2191:
  5723   001F42  EF90  F00F         	goto	l2906
  5724   001F46                     u2190:
  5725   001F46  EFB0  F00F         	goto	l2916
  5726   001F4A                     l2912:
  5727                           
  5728                           ;dc_motor.c: 233:         turnRight(mL, mR);
  5729   001F4A  C022  F01C         	movff	turnRight90@mL,turnRight@mL
  5730   001F4E  C023  F01D         	movff	turnRight90@mL+1,turnRight@mL+1
  5731   001F52  C024  F01E         	movff	turnRight90@mR,turnRight@mR
  5732   001F56  C025  F01F         	movff	turnRight90@mR+1,turnRight@mR+1
  5733   001F5A  ECB1  F00B         	call	_turnRight	;wreg free
  5734   001F5E                     
  5735                           ;dc_motor.c: 234:         a++;
  5736   001F5E  2A26               	incf	turnRight90@a^0,f,c
  5737   001F60                     l2916:
  5738                           
  5739                           ;dc_motor.c: 232:     while(a<15){
  5740   001F60  0E0E               	movlw	14
  5741   001F62  6426               	cpfsgt	turnRight90@a^0,c
  5742   001F64  EFB6  F00F         	goto	u2201
  5743   001F68  EFB8  F00F         	goto	u2200
  5744   001F6C                     u2201:
  5745   001F6C  EFA5  F00F         	goto	l2912
  5746   001F70                     u2200:
  5747   001F70  EFC5  F00F         	goto	l2922
  5748   001F74                     l2918:
  5749                           
  5750                           ;dc_motor.c: 237:         stop(mL, mR);
  5751   001F74  C022  F01C         	movff	turnRight90@mL,stop@mL
  5752   001F78  C023  F01D         	movff	turnRight90@mL+1,stop@mL+1
  5753   001F7C  C024  F01E         	movff	turnRight90@mR,stop@mR
  5754   001F80  C025  F01F         	movff	turnRight90@mR+1,stop@mR+1
  5755   001F84  EC02  F00E         	call	_stop	;wreg free
  5756   001F88                     
  5757                           ;dc_motor.c: 238:         a--;
  5758   001F88  0626               	decf	turnRight90@a^0,f,c
  5759   001F8A                     l2922:
  5760                           
  5761                           ;dc_motor.c: 236:     while(a>0){
  5762   001F8A  5026               	movf	turnRight90@a^0,w,c
  5763   001F8C  A4D8               	btfss	status,2,c
  5764   001F8E  EFCB  F00F         	goto	u2211
  5765   001F92  EFCD  F00F         	goto	u2210
  5766   001F96                     u2211:
  5767   001F96  EFBA  F00F         	goto	l2918
  5768   001F9A                     u2210:
  5769   001F9A  0012               	return		;funcret
  5770   001F9C                     __end_of_turnRight90:
  5771                           	callstack 0
  5772                           
  5773 ;; *************** function _turnRight *****************
  5774 ;; Defined at:
  5775 ;;		line 129 in file "dc_motor.c"
  5776 ;; Parameters:    Size  Location     Type
  5777 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  5778 ;;		 -> main@motorL(9), 
  5779 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  5780 ;;		 -> main@motorR(9), 
  5781 ;; Auto vars:     Size  Location     Type
  5782 ;;		None
  5783 ;; Return value:  Size  Location     Type
  5784 ;;                  1    wreg      void 
  5785 ;; Registers used:
  5786 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5787 ;; Tracked objects:
  5788 ;;		On entry : 0/0
  5789 ;;		On exit  : 0/0
  5790 ;;		Unchanged: 0/0
  5791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5792 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5794 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5795 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5796 ;;Total ram usage:        6 bytes
  5797 ;; Hardware stack levels used: 1
  5798 ;; Hardware stack levels required when called: 9
  5799 ;; This function calls:
  5800 ;;		_setMotorPWM
  5801 ;; This function is called by:
  5802 ;;		_turnRight90
  5803 ;;		_turnRight135
  5804 ;; This function uses a non-reentrant model
  5805 ;;
  5806                           
  5807                           	psect	text24
  5808   001762                     __ptext24:
  5809                           	callstack 0
  5810   001762                     _turnRight:
  5811                           	callstack 17
  5812   001762                     
  5813                           ;dc_motor.c: 129: void turnRight(DC_motor *mL, DC_motor *mR);dc_motor.c: 130: {;dc_motor
      +                          .c: 132:     mL->direction = 1;
  5814   001762  EE20 F001          	lfsr	2,1
  5815   001766  501C               	movf	turnRight@mL^0,w,c
  5816   001768  26D9               	addwf	fsr2l,f,c
  5817   00176A  501D               	movf	(turnRight@mL+1)^0,w,c
  5818   00176C  22DA               	addwfc	fsr2h,f,c
  5819   00176E  0E01               	movlw	1
  5820   001770  6EDF               	movwf	indf2,c
  5821                           
  5822                           ;dc_motor.c: 133:     mL->brakemode = 0;
  5823   001772  EE20 F002          	lfsr	2,2
  5824   001776  501C               	movf	turnRight@mL^0,w,c
  5825   001778  26D9               	addwf	fsr2l,f,c
  5826   00177A  501D               	movf	(turnRight@mL+1)^0,w,c
  5827   00177C  22DA               	addwfc	fsr2h,f,c
  5828   00177E  0E00               	movlw	0
  5829   001780  6EDF               	movwf	indf2,c
  5830                           
  5831                           ;dc_motor.c: 135:     mR->direction = 0;
  5832   001782  EE20 F001          	lfsr	2,1
  5833   001786  501E               	movf	turnRight@mR^0,w,c
  5834   001788  26D9               	addwf	fsr2l,f,c
  5835   00178A  501F               	movf	(turnRight@mR+1)^0,w,c
  5836   00178C  22DA               	addwfc	fsr2h,f,c
  5837   00178E  0E00               	movlw	0
  5838   001790  6EDF               	movwf	indf2,c
  5839                           
  5840                           ;dc_motor.c: 136:     mR->brakemode = 0;
  5841   001792  EE20 F002          	lfsr	2,2
  5842   001796  501E               	movf	turnRight@mR^0,w,c
  5843   001798  26D9               	addwf	fsr2l,f,c
  5844   00179A  501F               	movf	(turnRight@mR+1)^0,w,c
  5845   00179C  22DA               	addwfc	fsr2h,f,c
  5846   00179E  0E00               	movlw	0
  5847   0017A0  6EDF               	movwf	indf2,c
  5848                           
  5849                           ;dc_motor.c: 139:     if(mL->power>62){mL->power=62;}
  5850   0017A2  C01C  FFD9         	movff	turnRight@mL,fsr2l
  5851   0017A6  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  5852   0017AA  50DF               	movf	indf2,w,c
  5853   0017AC  0A80               	xorlw	128
  5854   0017AE  0F41               	addlw	-191
  5855   0017B0  A0D8               	btfss	status,0,c
  5856   0017B2  EFDD  F00B         	goto	u2101
  5857   0017B6  EFDF  F00B         	goto	u2100
  5858   0017BA                     u2101:
  5859   0017BA  EFE5  F00B         	goto	l2828
  5860   0017BE                     u2100:
  5861   0017BE  C01C  FFD9         	movff	turnRight@mL,fsr2l
  5862   0017C2  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  5863   0017C6  0E3E               	movlw	62
  5864   0017C8  6EDF               	movwf	indf2,c
  5865   0017CA                     l2828:
  5866                           
  5867                           ;dc_motor.c: 140:     if(mR->power>62){mR->power=62;}
  5868   0017CA  C01E  FFD9         	movff	turnRight@mR,fsr2l
  5869   0017CE  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  5870   0017D2  50DF               	movf	indf2,w,c
  5871   0017D4  0A80               	xorlw	128
  5872   0017D6  0F41               	addlw	-191
  5873   0017D8  A0D8               	btfss	status,0,c
  5874   0017DA  EFF1  F00B         	goto	u2111
  5875   0017DE  EFF3  F00B         	goto	u2110
  5876   0017E2                     u2111:
  5877   0017E2  EFF9  F00B         	goto	l2832
  5878   0017E6                     u2110:
  5879   0017E6  C01E  FFD9         	movff	turnRight@mR,fsr2l
  5880   0017EA  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  5881   0017EE  0E3E               	movlw	62
  5882   0017F0  6EDF               	movwf	indf2,c
  5883   0017F2                     l2832:
  5884                           
  5885                           ;dc_motor.c: 142:     mL->power = mL->power + 10 ;
  5886   0017F2  C01C  FFD9         	movff	turnRight@mL,fsr2l
  5887   0017F6  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  5888   0017FA  50DF               	movf	indf2,w,c
  5889   0017FC  0F0A               	addlw	10
  5890   0017FE  C01C  FFD9         	movff	turnRight@mL,fsr2l
  5891   001802  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  5892   001806  6EDF               	movwf	indf2,c
  5893   001808                     
  5894                           ;dc_motor.c: 143:     mR->power = mR->power + 10;
  5895   001808  C01E  FFD9         	movff	turnRight@mR,fsr2l
  5896   00180C  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  5897   001810  50DF               	movf	indf2,w,c
  5898   001812  0F0A               	addlw	10
  5899   001814  C01E  FFD9         	movff	turnRight@mR,fsr2l
  5900   001818  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  5901   00181C  6EDF               	movwf	indf2,c
  5902   00181E                     
  5903                           ;dc_motor.c: 145:     setMotorPWM(mL);
  5904   00181E  C01C  F016         	movff	turnRight@mL,setMotorPWM@m
  5905   001822  C01D  F017         	movff	turnRight@mL+1,setMotorPWM@m+1
  5906   001826  EC77  F00A         	call	_setMotorPWM	;wreg free
  5907   00182A                     
  5908                           ;dc_motor.c: 146:     setMotorPWM(mR);
  5909   00182A  C01E  F016         	movff	turnRight@mR,setMotorPWM@m
  5910   00182E  C01F  F017         	movff	turnRight@mR+1,setMotorPWM@m+1
  5911   001832  EC77  F00A         	call	_setMotorPWM	;wreg free
  5912   001836                     
  5913                           ;dc_motor.c: 147:     _delay((unsigned long)((20)*(64000000/4000.0)));
  5914   001836  0E02               	movlw	2
  5915   001838  6E21               	movwf	(??_turnRight+1)^0,c
  5916   00183A  0EA0               	movlw	160
  5917   00183C  6E20               	movwf	??_turnRight^0,c
  5918   00183E  0E92               	movlw	146
  5919   001840                     u4647:
  5920   001840  2EE8               	decfsz	wreg,f,c
  5921   001842  D7FE               	bra	u4647
  5922   001844  2E20               	decfsz	??_turnRight^0,f,c
  5923   001846  D7FC               	bra	u4647
  5924   001848  2E21               	decfsz	(??_turnRight+1)^0,f,c
  5925   00184A  D7FA               	bra	u4647
  5926   00184C  D000               	nop2	
  5927   00184E  0012               	return		;funcret
  5928   001850                     __end_of_turnRight:
  5929                           	callstack 0
  5930                           
  5931 ;; *************** function _AntiPink *****************
  5932 ;; Defined at:
  5933 ;;		line 134 in file "color_instructions.c"
  5934 ;; Parameters:    Size  Location     Type
  5935 ;;  mL              2   45[COMRAM] PTR struct DC_motor
  5936 ;;		 -> main@motorL(9), 
  5937 ;;  mR              2   47[COMRAM] PTR struct DC_motor
  5938 ;;		 -> main@motorR(9), 
  5939 ;; Auto vars:     Size  Location     Type
  5940 ;;  a               1   51[COMRAM] unsigned char 
  5941 ;; Return value:  Size  Location     Type
  5942 ;;                  1    wreg      void 
  5943 ;; Registers used:
  5944 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5945 ;; Tracked objects:
  5946 ;;		On entry : 0/0
  5947 ;;		On exit  : 0/0
  5948 ;;		Unchanged: 0/0
  5949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5950 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5951 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5952 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5953 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5954 ;;Total ram usage:        7 bytes
  5955 ;; Hardware stack levels used: 1
  5956 ;; Hardware stack levels required when called: 12
  5957 ;; This function calls:
  5958 ;;		_BlueInstructions
  5959 ;;		_GreenInstructions
  5960 ;;		_fullSpeedAhead
  5961 ;;		_stop
  5962 ;; This function is called by:
  5963 ;;		_MoveBuggy
  5964 ;; This function uses a non-reentrant model
  5965 ;;
  5966                           
  5967                           	psect	text25
  5968   001D8A                     __ptext25:
  5969                           	callstack 0
  5970   001D8A                     _AntiPink:
  5971                           	callstack 16
  5972   001D8A                     
  5973                           ;color_instructions.c: 135:     unsigned char a=0;
  5974   001D8A  0E00               	movlw	0
  5975   001D8C  6E34               	movwf	AntiPink@a^0,c
  5976   001D8E                     
  5977                           ;color_instructions.c: 137:     GreenInstructions(mL, mR);
  5978   001D8E  C02E  F027         	movff	AntiPink@mL,GreenInstructions@mL
  5979   001D92  C02F  F028         	movff	AntiPink@mL+1,GreenInstructions@mL+1
  5980   001D96  C030  F029         	movff	AntiPink@mR,GreenInstructions@mR
  5981   001D9A  C031  F02A         	movff	AntiPink@mR+1,GreenInstructions@mR+1
  5982   001D9E  ECBC  F011         	call	_GreenInstructions	;wreg free
  5983   001DA2                     
  5984                           ;color_instructions.c: 138:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5985   001DA2  0E05               	movlw	5
  5986   001DA4  6E33               	movwf	(??_AntiPink+1)^0,c
  5987   001DA6  0E0F               	movlw	15
  5988   001DA8  6E32               	movwf	??_AntiPink^0,c
  5989   001DAA  0EF1               	movlw	241
  5990   001DAC                     u4657:
  5991   001DAC  2EE8               	decfsz	wreg,f,c
  5992   001DAE  D7FE               	bra	u4657
  5993   001DB0  2E32               	decfsz	??_AntiPink^0,f,c
  5994   001DB2  D7FC               	bra	u4657
  5995   001DB4  2E33               	decfsz	(??_AntiPink+1)^0,f,c
  5996   001DB6  D7FA               	bra	u4657
  5997   001DB8  F000               	nop	
  5998                           
  5999                           ;color_instructions.c: 140:     while (a<45){
  6000   001DBA  EFEA  F00E         	goto	l3184
  6001   001DBE                     l3180:
  6002                           
  6003                           ;color_instructions.c: 141:         fullSpeedAhead(mL, mR);
  6004   001DBE  C02E  F01C         	movff	AntiPink@mL,fullSpeedAhead@mL
  6005   001DC2  C02F  F01D         	movff	AntiPink@mL+1,fullSpeedAhead@mL+1
  6006   001DC6  C030  F01E         	movff	AntiPink@mR,fullSpeedAhead@mR
  6007   001DCA  C031  F01F         	movff	AntiPink@mR+1,fullSpeedAhead@mR+1
  6008   001DCE  EC28  F00C         	call	_fullSpeedAhead	;wreg free
  6009   001DD2                     
  6010                           ;color_instructions.c: 142:         a++;
  6011   001DD2  2A34               	incf	AntiPink@a^0,f,c
  6012   001DD4                     l3184:
  6013                           
  6014                           ;color_instructions.c: 140:     while (a<45){
  6015   001DD4  0E2C               	movlw	44
  6016   001DD6  6434               	cpfsgt	AntiPink@a^0,c
  6017   001DD8  EFF0  F00E         	goto	u2481
  6018   001DDC  EFF2  F00E         	goto	u2480
  6019   001DE0                     u2481:
  6020   001DE0  EFDF  F00E         	goto	l3180
  6021   001DE4                     u2480:
  6022   001DE4  EFFF  F00E         	goto	l3190
  6023   001DE8                     l3186:
  6024                           
  6025                           ;color_instructions.c: 145:         stop(mL, mR);
  6026   001DE8  C02E  F01C         	movff	AntiPink@mL,stop@mL
  6027   001DEC  C02F  F01D         	movff	AntiPink@mL+1,stop@mL+1
  6028   001DF0  C030  F01E         	movff	AntiPink@mR,stop@mR
  6029   001DF4  C031  F01F         	movff	AntiPink@mR+1,stop@mR+1
  6030   001DF8  EC02  F00E         	call	_stop	;wreg free
  6031   001DFC                     
  6032                           ;color_instructions.c: 146:         a--;
  6033   001DFC  0634               	decf	AntiPink@a^0,f,c
  6034   001DFE                     l3190:
  6035                           
  6036                           ;color_instructions.c: 144:     while (a>0){
  6037   001DFE  5034               	movf	AntiPink@a^0,w,c
  6038   001E00  A4D8               	btfss	status,2,c
  6039   001E02  EF05  F00F         	goto	u2491
  6040   001E06  EF07  F00F         	goto	u2490
  6041   001E0A                     u2491:
  6042   001E0A  EFF4  F00E         	goto	l3186
  6043   001E0E                     u2490:
  6044   001E0E                     
  6045                           ;color_instructions.c: 148:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6046   001E0E  0E05               	movlw	5
  6047   001E10  6E33               	movwf	(??_AntiPink+1)^0,c
  6048   001E12  0E0F               	movlw	15
  6049   001E14  6E32               	movwf	??_AntiPink^0,c
  6050   001E16  0EF1               	movlw	241
  6051   001E18                     u4667:
  6052   001E18  2EE8               	decfsz	wreg,f,c
  6053   001E1A  D7FE               	bra	u4667
  6054   001E1C  2E32               	decfsz	??_AntiPink^0,f,c
  6055   001E1E  D7FC               	bra	u4667
  6056   001E20  2E33               	decfsz	(??_AntiPink+1)^0,f,c
  6057   001E22  D7FA               	bra	u4667
  6058   001E24  F000               	nop	
  6059   001E26                     
  6060                           ;color_instructions.c: 150:     BlueInstructions(mL, mR);
  6061   001E26  C02E  F027         	movff	AntiPink@mL,BlueInstructions@mL
  6062   001E2A  C02F  F028         	movff	AntiPink@mL+1,BlueInstructions@mL+1
  6063   001E2E  C030  F029         	movff	AntiPink@mR,BlueInstructions@mR
  6064   001E32  C031  F02A         	movff	AntiPink@mR+1,BlueInstructions@mR+1
  6065   001E36  EC1E  F00F         	call	_BlueInstructions	;wreg free
  6066   001E3A  0012               	return		;funcret
  6067   001E3C                     __end_of_AntiPink:
  6068                           	callstack 0
  6069                           
  6070 ;; *************** function _fullSpeedAhead *****************
  6071 ;; Defined at:
  6072 ;;		line 151 in file "dc_motor.c"
  6073 ;; Parameters:    Size  Location     Type
  6074 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6075 ;;		 -> main@motorL(9), 
  6076 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6077 ;;		 -> main@motorR(9), 
  6078 ;; Auto vars:     Size  Location     Type
  6079 ;;		None
  6080 ;; Return value:  Size  Location     Type
  6081 ;;                  1    wreg      void 
  6082 ;; Registers used:
  6083 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6084 ;; Tracked objects:
  6085 ;;		On entry : 0/0
  6086 ;;		On exit  : 0/0
  6087 ;;		Unchanged: 0/0
  6088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6089 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6091 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6092 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6093 ;;Total ram usage:        6 bytes
  6094 ;; Hardware stack levels used: 1
  6095 ;; Hardware stack levels required when called: 9
  6096 ;; This function calls:
  6097 ;;		_setMotorPWM
  6098 ;; This function is called by:
  6099 ;;		_main
  6100 ;;		_AntiYellow
  6101 ;;		_AntiPink
  6102 ;;		_WhiteInstructions
  6103 ;; This function uses a non-reentrant model
  6104 ;;
  6105                           
  6106                           	psect	text26
  6107   001850                     __ptext26:
  6108                           	callstack 0
  6109   001850                     _fullSpeedAhead:
  6110                           	callstack 21
  6111   001850                     
  6112                           ;dc_motor.c: 151: void fullSpeedAhead(DC_motor *mL, DC_motor *mR);dc_motor.c: 152: {;dc_
      +                          motor.c: 154:     mL->direction = 1;
  6113   001850  EE20 F001          	lfsr	2,1
  6114   001854  501C               	movf	fullSpeedAhead@mL^0,w,c
  6115   001856  26D9               	addwf	fsr2l,f,c
  6116   001858  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  6117   00185A  22DA               	addwfc	fsr2h,f,c
  6118   00185C  0E01               	movlw	1
  6119   00185E  6EDF               	movwf	indf2,c
  6120                           
  6121                           ;dc_motor.c: 155:     mL->brakemode = 0;
  6122   001860  EE20 F002          	lfsr	2,2
  6123   001864  501C               	movf	fullSpeedAhead@mL^0,w,c
  6124   001866  26D9               	addwf	fsr2l,f,c
  6125   001868  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  6126   00186A  22DA               	addwfc	fsr2h,f,c
  6127   00186C  0E00               	movlw	0
  6128   00186E  6EDF               	movwf	indf2,c
  6129                           
  6130                           ;dc_motor.c: 157:     mR->direction = 1;
  6131   001870  EE20 F001          	lfsr	2,1
  6132   001874  501E               	movf	fullSpeedAhead@mR^0,w,c
  6133   001876  26D9               	addwf	fsr2l,f,c
  6134   001878  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  6135   00187A  22DA               	addwfc	fsr2h,f,c
  6136   00187C  0E01               	movlw	1
  6137   00187E  6EDF               	movwf	indf2,c
  6138                           
  6139                           ;dc_motor.c: 158:     mR->brakemode = 0;
  6140   001880  EE20 F002          	lfsr	2,2
  6141   001884  501E               	movf	fullSpeedAhead@mR^0,w,c
  6142   001886  26D9               	addwf	fsr2l,f,c
  6143   001888  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  6144   00188A  22DA               	addwfc	fsr2h,f,c
  6145   00188C  0E00               	movlw	0
  6146   00188E  6EDF               	movwf	indf2,c
  6147                           
  6148                           ;dc_motor.c: 162:     if(mL->power>40){mL->power=40;}
  6149   001890  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  6150   001894  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  6151   001898  50DF               	movf	indf2,w,c
  6152   00189A  0A80               	xorlw	128
  6153   00189C  0F57               	addlw	-169
  6154   00189E  A0D8               	btfss	status,0,c
  6155   0018A0  EF54  F00C         	goto	u2241
  6156   0018A4  EF56  F00C         	goto	u2240
  6157   0018A8                     u2241:
  6158   0018A8  EF5C  F00C         	goto	l2934
  6159   0018AC                     u2240:
  6160   0018AC  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  6161   0018B0  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  6162   0018B4  0E28               	movlw	40
  6163   0018B6  6EDF               	movwf	indf2,c
  6164   0018B8                     l2934:
  6165                           
  6166                           ;dc_motor.c: 163:     if(mR->power>43){mR->power=43;}
  6167   0018B8  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  6168   0018BC  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  6169   0018C0  50DF               	movf	indf2,w,c
  6170   0018C2  0A80               	xorlw	128
  6171   0018C4  0F54               	addlw	-172
  6172   0018C6  A0D8               	btfss	status,0,c
  6173   0018C8  EF68  F00C         	goto	u2251
  6174   0018CC  EF6A  F00C         	goto	u2250
  6175   0018D0                     u2251:
  6176   0018D0  EF70  F00C         	goto	l2938
  6177   0018D4                     u2250:
  6178   0018D4  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  6179   0018D8  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  6180   0018DC  0E2B               	movlw	43
  6181   0018DE  6EDF               	movwf	indf2,c
  6182   0018E0                     l2938:
  6183                           
  6184                           ;dc_motor.c: 165:     mL->power = mL->power + 5 ;
  6185   0018E0  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  6186   0018E4  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  6187   0018E8  50DF               	movf	indf2,w,c
  6188   0018EA  0F05               	addlw	5
  6189   0018EC  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  6190   0018F0  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  6191   0018F4  6EDF               	movwf	indf2,c
  6192   0018F6                     
  6193                           ;dc_motor.c: 166:     mR->power = mR->power + 7;
  6194   0018F6  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  6195   0018FA  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  6196   0018FE  50DF               	movf	indf2,w,c
  6197   001900  0F07               	addlw	7
  6198   001902  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  6199   001906  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  6200   00190A  6EDF               	movwf	indf2,c
  6201   00190C                     
  6202                           ;dc_motor.c: 168:     setMotorPWM(mL);
  6203   00190C  C01C  F016         	movff	fullSpeedAhead@mL,setMotorPWM@m
  6204   001910  C01D  F017         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  6205   001914  EC77  F00A         	call	_setMotorPWM	;wreg free
  6206   001918                     
  6207                           ;dc_motor.c: 169:     setMotorPWM(mR);
  6208   001918  C01E  F016         	movff	fullSpeedAhead@mR,setMotorPWM@m
  6209   00191C  C01F  F017         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  6210   001920  EC77  F00A         	call	_setMotorPWM	;wreg free
  6211   001924                     
  6212                           ;dc_motor.c: 170:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6213   001924  0E05               	movlw	5
  6214   001926  6E21               	movwf	(??_fullSpeedAhead+1)^0,c
  6215   001928  0E0F               	movlw	15
  6216   00192A  6E20               	movwf	??_fullSpeedAhead^0,c
  6217   00192C  0EF1               	movlw	241
  6218   00192E                     u4677:
  6219   00192E  2EE8               	decfsz	wreg,f,c
  6220   001930  D7FE               	bra	u4677
  6221   001932  2E20               	decfsz	??_fullSpeedAhead^0,f,c
  6222   001934  D7FC               	bra	u4677
  6223   001936  2E21               	decfsz	(??_fullSpeedAhead+1)^0,f,c
  6224   001938  D7FA               	bra	u4677
  6225   00193A  F000               	nop	
  6226   00193C  0012               	return		;funcret
  6227   00193E                     __end_of_fullSpeedAhead:
  6228                           	callstack 0
  6229                           
  6230 ;; *************** function _GreenInstructions *****************
  6231 ;; Defined at:
  6232 ;;		line 25 in file "color_instructions.c"
  6233 ;; Parameters:    Size  Location     Type
  6234 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  6235 ;;		 -> main@motorL(9), 
  6236 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  6237 ;;		 -> main@motorR(9), 
  6238 ;; Auto vars:     Size  Location     Type
  6239 ;;  a               1   44[COMRAM] unsigned char 
  6240 ;; Return value:  Size  Location     Type
  6241 ;;                  1    wreg      void 
  6242 ;; Registers used:
  6243 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6244 ;; Tracked objects:
  6245 ;;		On entry : 0/0
  6246 ;;		On exit  : 0/0
  6247 ;;		Unchanged: 0/0
  6248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6249 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6250 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6251 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6252 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6253 ;;Total ram usage:        7 bytes
  6254 ;; Hardware stack levels used: 1
  6255 ;; Hardware stack levels required when called: 11
  6256 ;; This function calls:
  6257 ;;		_fullSpeedBackwards
  6258 ;;		_stop
  6259 ;;		_turnLeft90
  6260 ;; This function is called by:
  6261 ;;		_AntiPink
  6262 ;;		_MoveBuggy
  6263 ;; This function uses a non-reentrant model
  6264 ;;
  6265                           
  6266                           	psect	text27
  6267   002378                     __ptext27:
  6268                           	callstack 0
  6269   002378                     _GreenInstructions:
  6270                           	callstack 17
  6271   002378                     
  6272                           ;color_instructions.c: 26:     unsigned char a=0;
  6273   002378  0E00               	movlw	0
  6274   00237A  6E2D               	movwf	GreenInstructions@a^0,c
  6275                           
  6276                           ;color_instructions.c: 27:     while (a<16){
  6277   00237C  EFCB  F011         	goto	l3004
  6278   002380                     l3000:
  6279                           
  6280                           ;color_instructions.c: 28:         fullSpeedBackwards(mL, mR);
  6281   002380  C027  F01C         	movff	GreenInstructions@mL,fullSpeedBackwards@mL
  6282   002384  C028  F01D         	movff	GreenInstructions@mL+1,fullSpeedBackwards@mL+1
  6283   002388  C029  F01E         	movff	GreenInstructions@mR,fullSpeedBackwards@mR
  6284   00238C  C02A  F01F         	movff	GreenInstructions@mR+1,fullSpeedBackwards@mR+1
  6285   002390  EC16  F00D         	call	_fullSpeedBackwards	;wreg free
  6286   002394                     
  6287                           ;color_instructions.c: 29:         a++;
  6288   002394  2A2D               	incf	GreenInstructions@a^0,f,c
  6289   002396                     l3004:
  6290                           
  6291                           ;color_instructions.c: 27:     while (a<16){
  6292   002396  0E0F               	movlw	15
  6293   002398  642D               	cpfsgt	GreenInstructions@a^0,c
  6294   00239A  EFD1  F011         	goto	u2321
  6295   00239E  EFD3  F011         	goto	u2320
  6296   0023A2                     u2321:
  6297   0023A2  EFC0  F011         	goto	l3000
  6298   0023A6                     u2320:
  6299   0023A6  EFE0  F011         	goto	l3010
  6300   0023AA                     l3006:
  6301                           
  6302                           ;color_instructions.c: 32:         stop(mL, mR);
  6303   0023AA  C027  F01C         	movff	GreenInstructions@mL,stop@mL
  6304   0023AE  C028  F01D         	movff	GreenInstructions@mL+1,stop@mL+1
  6305   0023B2  C029  F01E         	movff	GreenInstructions@mR,stop@mR
  6306   0023B6  C02A  F01F         	movff	GreenInstructions@mR+1,stop@mR+1
  6307   0023BA  EC02  F00E         	call	_stop	;wreg free
  6308   0023BE                     
  6309                           ;color_instructions.c: 33:         a--;
  6310   0023BE  062D               	decf	GreenInstructions@a^0,f,c
  6311   0023C0                     l3010:
  6312                           
  6313                           ;color_instructions.c: 31:     while (a>0){
  6314   0023C0  502D               	movf	GreenInstructions@a^0,w,c
  6315   0023C2  A4D8               	btfss	status,2,c
  6316   0023C4  EFE6  F011         	goto	u2331
  6317   0023C8  EFE8  F011         	goto	u2330
  6318   0023CC                     u2331:
  6319   0023CC  EFD5  F011         	goto	l3006
  6320   0023D0                     u2330:
  6321   0023D0                     
  6322                           ;color_instructions.c: 35:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6323   0023D0  0E05               	movlw	5
  6324   0023D2  6E2C               	movwf	(??_GreenInstructions+1)^0,c
  6325   0023D4  0E0F               	movlw	15
  6326   0023D6  6E2B               	movwf	??_GreenInstructions^0,c
  6327   0023D8  0EF1               	movlw	241
  6328   0023DA                     u4687:
  6329   0023DA  2EE8               	decfsz	wreg,f,c
  6330   0023DC  D7FE               	bra	u4687
  6331   0023DE  2E2B               	decfsz	??_GreenInstructions^0,f,c
  6332   0023E0  D7FC               	bra	u4687
  6333   0023E2  2E2C               	decfsz	(??_GreenInstructions+1)^0,f,c
  6334   0023E4  D7FA               	bra	u4687
  6335   0023E6  F000               	nop	
  6336   0023E8                     
  6337                           ;color_instructions.c: 36:     turnLeft90(mL, mR);
  6338   0023E8  C027  F022         	movff	GreenInstructions@mL,turnLeft90@mL
  6339   0023EC  C028  F023         	movff	GreenInstructions@mL+1,turnLeft90@mL+1
  6340   0023F0  C029  F024         	movff	GreenInstructions@mR,turnLeft90@mR
  6341   0023F4  C02A  F025         	movff	GreenInstructions@mR+1,turnLeft90@mR+1
  6342   0023F8  ECCE  F00F         	call	_turnLeft90	;wreg free
  6343   0023FC  0012               	return		;funcret
  6344   0023FE                     __end_of_GreenInstructions:
  6345                           	callstack 0
  6346                           
  6347 ;; *************** function _BlueInstructions *****************
  6348 ;; Defined at:
  6349 ;;		line 39 in file "color_instructions.c"
  6350 ;; Parameters:    Size  Location     Type
  6351 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  6352 ;;		 -> main@motorL(9), 
  6353 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  6354 ;;		 -> main@motorR(9), 
  6355 ;; Auto vars:     Size  Location     Type
  6356 ;;  a               1   44[COMRAM] unsigned char 
  6357 ;; Return value:  Size  Location     Type
  6358 ;;                  1    wreg      void 
  6359 ;; Registers used:
  6360 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6361 ;; Tracked objects:
  6362 ;;		On entry : 0/0
  6363 ;;		On exit  : 0/0
  6364 ;;		Unchanged: 0/0
  6365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6366 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6367 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6368 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6369 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6370 ;;Total ram usage:        7 bytes
  6371 ;; Hardware stack levels used: 1
  6372 ;; Hardware stack levels required when called: 11
  6373 ;; This function calls:
  6374 ;;		_fullSpeedBackwards
  6375 ;;		_stop
  6376 ;;		_turnLeft90
  6377 ;; This function is called by:
  6378 ;;		_AntiYellow
  6379 ;;		_AntiPink
  6380 ;;		_WhiteInstructions
  6381 ;;		_MoveBuggy
  6382 ;; This function uses a non-reentrant model
  6383 ;;
  6384                           
  6385                           	psect	text28
  6386   001E3C                     __ptext28:
  6387                           	callstack 0
  6388   001E3C                     _BlueInstructions:
  6389                           	callstack 17
  6390   001E3C                     
  6391                           ;color_instructions.c: 40:     unsigned char a=0;
  6392   001E3C  0E00               	movlw	0
  6393   001E3E  6E2D               	movwf	BlueInstructions@a^0,c
  6394                           
  6395                           ;color_instructions.c: 41:     while (a<16){
  6396   001E40  EF2D  F00F         	goto	l3022
  6397   001E44                     l3018:
  6398                           
  6399                           ;color_instructions.c: 42:         fullSpeedBackwards(mL, mR);
  6400   001E44  C027  F01C         	movff	BlueInstructions@mL,fullSpeedBackwards@mL
  6401   001E48  C028  F01D         	movff	BlueInstructions@mL+1,fullSpeedBackwards@mL+1
  6402   001E4C  C029  F01E         	movff	BlueInstructions@mR,fullSpeedBackwards@mR
  6403   001E50  C02A  F01F         	movff	BlueInstructions@mR+1,fullSpeedBackwards@mR+1
  6404   001E54  EC16  F00D         	call	_fullSpeedBackwards	;wreg free
  6405   001E58                     
  6406                           ;color_instructions.c: 43:         a++;
  6407   001E58  2A2D               	incf	BlueInstructions@a^0,f,c
  6408   001E5A                     l3022:
  6409                           
  6410                           ;color_instructions.c: 41:     while (a<16){
  6411   001E5A  0E0F               	movlw	15
  6412   001E5C  642D               	cpfsgt	BlueInstructions@a^0,c
  6413   001E5E  EF33  F00F         	goto	u2341
  6414   001E62  EF35  F00F         	goto	u2340
  6415   001E66                     u2341:
  6416   001E66  EF22  F00F         	goto	l3018
  6417   001E6A                     u2340:
  6418   001E6A  EF42  F00F         	goto	l3028
  6419   001E6E                     l3024:
  6420                           
  6421                           ;color_instructions.c: 46:         stop(mL, mR);
  6422   001E6E  C027  F01C         	movff	BlueInstructions@mL,stop@mL
  6423   001E72  C028  F01D         	movff	BlueInstructions@mL+1,stop@mL+1
  6424   001E76  C029  F01E         	movff	BlueInstructions@mR,stop@mR
  6425   001E7A  C02A  F01F         	movff	BlueInstructions@mR+1,stop@mR+1
  6426   001E7E  EC02  F00E         	call	_stop	;wreg free
  6427   001E82                     
  6428                           ;color_instructions.c: 47:         a--;
  6429   001E82  062D               	decf	BlueInstructions@a^0,f,c
  6430   001E84                     l3028:
  6431                           
  6432                           ;color_instructions.c: 45:     while (a>0){
  6433   001E84  502D               	movf	BlueInstructions@a^0,w,c
  6434   001E86  A4D8               	btfss	status,2,c
  6435   001E88  EF48  F00F         	goto	u2351
  6436   001E8C  EF4A  F00F         	goto	u2350
  6437   001E90                     u2351:
  6438   001E90  EF37  F00F         	goto	l3024
  6439   001E94                     u2350:
  6440   001E94                     
  6441                           ;color_instructions.c: 49:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6442   001E94  0E05               	movlw	5
  6443   001E96  6E2C               	movwf	(??_BlueInstructions+1)^0,c
  6444   001E98  0E0F               	movlw	15
  6445   001E9A  6E2B               	movwf	??_BlueInstructions^0,c
  6446   001E9C  0EF1               	movlw	241
  6447   001E9E                     u4697:
  6448   001E9E  2EE8               	decfsz	wreg,f,c
  6449   001EA0  D7FE               	bra	u4697
  6450   001EA2  2E2B               	decfsz	??_BlueInstructions^0,f,c
  6451   001EA4  D7FC               	bra	u4697
  6452   001EA6  2E2C               	decfsz	(??_BlueInstructions+1)^0,f,c
  6453   001EA8  D7FA               	bra	u4697
  6454   001EAA  F000               	nop	
  6455   001EAC                     
  6456                           ;color_instructions.c: 51:     turnLeft90(mL, mR);
  6457   001EAC  C027  F022         	movff	BlueInstructions@mL,turnLeft90@mL
  6458   001EB0  C028  F023         	movff	BlueInstructions@mL+1,turnLeft90@mL+1
  6459   001EB4  C029  F024         	movff	BlueInstructions@mR,turnLeft90@mR
  6460   001EB8  C02A  F025         	movff	BlueInstructions@mR+1,turnLeft90@mR+1
  6461   001EBC  ECCE  F00F         	call	_turnLeft90	;wreg free
  6462   001EC0                     
  6463                           ;color_instructions.c: 52:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6464   001EC0  0E05               	movlw	5
  6465   001EC2  6E2C               	movwf	(??_BlueInstructions+1)^0,c
  6466   001EC4  0E0F               	movlw	15
  6467   001EC6  6E2B               	movwf	??_BlueInstructions^0,c
  6468   001EC8  0EF1               	movlw	241
  6469   001ECA                     u4707:
  6470   001ECA  2EE8               	decfsz	wreg,f,c
  6471   001ECC  D7FE               	bra	u4707
  6472   001ECE  2E2B               	decfsz	??_BlueInstructions^0,f,c
  6473   001ED0  D7FC               	bra	u4707
  6474   001ED2  2E2C               	decfsz	(??_BlueInstructions+1)^0,f,c
  6475   001ED4  D7FA               	bra	u4707
  6476   001ED6  F000               	nop	
  6477                           
  6478                           ;color_instructions.c: 53:     turnLeft90(mL, mR);
  6479   001ED8  C027  F022         	movff	BlueInstructions@mL,turnLeft90@mL
  6480   001EDC  C028  F023         	movff	BlueInstructions@mL+1,turnLeft90@mL+1
  6481   001EE0  C029  F024         	movff	BlueInstructions@mR,turnLeft90@mR
  6482   001EE4  C02A  F025         	movff	BlueInstructions@mR+1,turnLeft90@mR+1
  6483   001EE8  ECCE  F00F         	call	_turnLeft90	;wreg free
  6484   001EEC  0012               	return		;funcret
  6485   001EEE                     __end_of_BlueInstructions:
  6486                           	callstack 0
  6487                           
  6488 ;; *************** function _turnLeft90 *****************
  6489 ;; Defined at:
  6490 ;;		line 200 in file "dc_motor.c"
  6491 ;; Parameters:    Size  Location     Type
  6492 ;;  mL              2   33[COMRAM] PTR struct DC_motor
  6493 ;;		 -> main@motorL(9), 
  6494 ;;  mR              2   35[COMRAM] PTR struct DC_motor
  6495 ;;		 -> main@motorR(9), 
  6496 ;; Auto vars:     Size  Location     Type
  6497 ;;  a               1   37[COMRAM] unsigned char 
  6498 ;; Return value:  Size  Location     Type
  6499 ;;                  1    wreg      void 
  6500 ;; Registers used:
  6501 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6502 ;; Tracked objects:
  6503 ;;		On entry : 0/0
  6504 ;;		On exit  : 0/0
  6505 ;;		Unchanged: 0/0
  6506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6507 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6508 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6510 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6511 ;;Total ram usage:        5 bytes
  6512 ;; Hardware stack levels used: 1
  6513 ;; Hardware stack levels required when called: 10
  6514 ;; This function calls:
  6515 ;;		_stop
  6516 ;;		_turnLeft
  6517 ;; This function is called by:
  6518 ;;		_turnLeft135
  6519 ;;		_GreenInstructions
  6520 ;;		_BlueInstructions
  6521 ;;		_PinkInstructions
  6522 ;;		_turn180
  6523 ;; This function uses a non-reentrant model
  6524 ;;
  6525                           
  6526                           	psect	text29
  6527   001F9C                     __ptext29:
  6528                           	callstack 0
  6529   001F9C                     _turnLeft90:
  6530                           	callstack 17
  6531   001F9C                     
  6532                           ;dc_motor.c: 202:     unsigned char a=0;
  6533   001F9C  0E00               	movlw	0
  6534   001F9E  6E26               	movwf	turnLeft90@a^0,c
  6535                           
  6536                           ;dc_motor.c: 203:     while(a<16){
  6537   001FA0  EFDD  F00F         	goto	l2878
  6538   001FA4                     l2874:
  6539                           
  6540                           ;dc_motor.c: 204:         turnLeft(mL, mR);
  6541   001FA4  C022  F01C         	movff	turnLeft90@mL,turnLeft@mL
  6542   001FA8  C023  F01D         	movff	turnLeft90@mL+1,turnLeft@mL+1
  6543   001FAC  C024  F01E         	movff	turnLeft90@mR,turnLeft@mR
  6544   001FB0  C025  F01F         	movff	turnLeft90@mR+1,turnLeft@mR+1
  6545   001FB4  EC9F  F00C         	call	_turnLeft	;wreg free
  6546   001FB8                     
  6547                           ;dc_motor.c: 205:         a++;
  6548   001FB8  2A26               	incf	turnLeft90@a^0,f,c
  6549   001FBA                     l2878:
  6550                           
  6551                           ;dc_motor.c: 203:     while(a<16){
  6552   001FBA  0E0F               	movlw	15
  6553   001FBC  6426               	cpfsgt	turnLeft90@a^0,c
  6554   001FBE  EFE3  F00F         	goto	u2141
  6555   001FC2  EFE5  F00F         	goto	u2140
  6556   001FC6                     u2141:
  6557   001FC6  EFD2  F00F         	goto	l2874
  6558   001FCA                     u2140:
  6559   001FCA  EFF2  F00F         	goto	l2884
  6560   001FCE                     l2880:
  6561                           
  6562                           ;dc_motor.c: 208:         stop(mL, mR);
  6563   001FCE  C022  F01C         	movff	turnLeft90@mL,stop@mL
  6564   001FD2  C023  F01D         	movff	turnLeft90@mL+1,stop@mL+1
  6565   001FD6  C024  F01E         	movff	turnLeft90@mR,stop@mR
  6566   001FDA  C025  F01F         	movff	turnLeft90@mR+1,stop@mR+1
  6567   001FDE  EC02  F00E         	call	_stop	;wreg free
  6568   001FE2                     
  6569                           ;dc_motor.c: 209:         a--;
  6570   001FE2  0626               	decf	turnLeft90@a^0,f,c
  6571   001FE4                     l2884:
  6572                           
  6573                           ;dc_motor.c: 207:     while(a>0){
  6574   001FE4  5026               	movf	turnLeft90@a^0,w,c
  6575   001FE6  A4D8               	btfss	status,2,c
  6576   001FE8  EFF8  F00F         	goto	u2151
  6577   001FEC  EFFA  F00F         	goto	u2150
  6578   001FF0                     u2151:
  6579   001FF0  EFE7  F00F         	goto	l2880
  6580   001FF4                     u2150:
  6581   001FF4  EF07  F010         	goto	l2890
  6582   001FF8                     l2886:
  6583                           
  6584                           ;dc_motor.c: 212:         turnLeft(mL, mR);
  6585   001FF8  C022  F01C         	movff	turnLeft90@mL,turnLeft@mL
  6586   001FFC  C023  F01D         	movff	turnLeft90@mL+1,turnLeft@mL+1
  6587   002000  C024  F01E         	movff	turnLeft90@mR,turnLeft@mR
  6588   002004  C025  F01F         	movff	turnLeft90@mR+1,turnLeft@mR+1
  6589   002008  EC9F  F00C         	call	_turnLeft	;wreg free
  6590   00200C                     
  6591                           ;dc_motor.c: 213:         a++;
  6592   00200C  2A26               	incf	turnLeft90@a^0,f,c
  6593   00200E                     l2890:
  6594                           
  6595                           ;dc_motor.c: 211:     while(a<15){
  6596   00200E  0E0E               	movlw	14
  6597   002010  6426               	cpfsgt	turnLeft90@a^0,c
  6598   002012  EF0D  F010         	goto	u2161
  6599   002016  EF0F  F010         	goto	u2160
  6600   00201A                     u2161:
  6601   00201A  EFFC  F00F         	goto	l2886
  6602   00201E                     u2160:
  6603   00201E  EF1C  F010         	goto	l2896
  6604   002022                     l2892:
  6605                           
  6606                           ;dc_motor.c: 216:         stop(mL, mR);
  6607   002022  C022  F01C         	movff	turnLeft90@mL,stop@mL
  6608   002026  C023  F01D         	movff	turnLeft90@mL+1,stop@mL+1
  6609   00202A  C024  F01E         	movff	turnLeft90@mR,stop@mR
  6610   00202E  C025  F01F         	movff	turnLeft90@mR+1,stop@mR+1
  6611   002032  EC02  F00E         	call	_stop	;wreg free
  6612   002036                     
  6613                           ;dc_motor.c: 217:         a--;
  6614   002036  0626               	decf	turnLeft90@a^0,f,c
  6615   002038                     l2896:
  6616                           
  6617                           ;dc_motor.c: 215:     while(a>0){
  6618   002038  5026               	movf	turnLeft90@a^0,w,c
  6619   00203A  A4D8               	btfss	status,2,c
  6620   00203C  EF22  F010         	goto	u2171
  6621   002040  EF24  F010         	goto	u2170
  6622   002044                     u2171:
  6623   002044  EF11  F010         	goto	l2892
  6624   002048                     u2170:
  6625   002048  0012               	return		;funcret
  6626   00204A                     __end_of_turnLeft90:
  6627                           	callstack 0
  6628                           
  6629 ;; *************** function _turnLeft *****************
  6630 ;; Defined at:
  6631 ;;		line 107 in file "dc_motor.c"
  6632 ;; Parameters:    Size  Location     Type
  6633 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6634 ;;		 -> main@motorL(9), 
  6635 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6636 ;;		 -> main@motorR(9), 
  6637 ;; Auto vars:     Size  Location     Type
  6638 ;;		None
  6639 ;; Return value:  Size  Location     Type
  6640 ;;                  1    wreg      void 
  6641 ;; Registers used:
  6642 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6643 ;; Tracked objects:
  6644 ;;		On entry : 0/0
  6645 ;;		On exit  : 0/0
  6646 ;;		Unchanged: 0/0
  6647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6648 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6650 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6651 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6652 ;;Total ram usage:        6 bytes
  6653 ;; Hardware stack levels used: 1
  6654 ;; Hardware stack levels required when called: 9
  6655 ;; This function calls:
  6656 ;;		_setMotorPWM
  6657 ;; This function is called by:
  6658 ;;		_turnLeft90
  6659 ;;		_turnLeft135
  6660 ;; This function uses a non-reentrant model
  6661 ;;
  6662                           
  6663                           	psect	text30
  6664   00193E                     __ptext30:
  6665                           	callstack 0
  6666   00193E                     _turnLeft:
  6667                           	callstack 17
  6668   00193E                     
  6669                           ;dc_motor.c: 107: void turnLeft(DC_motor *mL, DC_motor *mR);dc_motor.c: 108: {;dc_motor.
      +                          c: 110:     mL->direction = 0;
  6670   00193E  EE20 F001          	lfsr	2,1
  6671   001942  501C               	movf	turnLeft@mL^0,w,c
  6672   001944  26D9               	addwf	fsr2l,f,c
  6673   001946  501D               	movf	(turnLeft@mL+1)^0,w,c
  6674   001948  22DA               	addwfc	fsr2h,f,c
  6675   00194A  0E00               	movlw	0
  6676   00194C  6EDF               	movwf	indf2,c
  6677                           
  6678                           ;dc_motor.c: 111:     mL->brakemode = 0;
  6679   00194E  EE20 F002          	lfsr	2,2
  6680   001952  501C               	movf	turnLeft@mL^0,w,c
  6681   001954  26D9               	addwf	fsr2l,f,c
  6682   001956  501D               	movf	(turnLeft@mL+1)^0,w,c
  6683   001958  22DA               	addwfc	fsr2h,f,c
  6684   00195A  0E00               	movlw	0
  6685   00195C  6EDF               	movwf	indf2,c
  6686                           
  6687                           ;dc_motor.c: 113:     mR->direction = 1;
  6688   00195E  EE20 F001          	lfsr	2,1
  6689   001962  501E               	movf	turnLeft@mR^0,w,c
  6690   001964  26D9               	addwf	fsr2l,f,c
  6691   001966  501F               	movf	(turnLeft@mR+1)^0,w,c
  6692   001968  22DA               	addwfc	fsr2h,f,c
  6693   00196A  0E01               	movlw	1
  6694   00196C  6EDF               	movwf	indf2,c
  6695                           
  6696                           ;dc_motor.c: 114:     mR->brakemode = 0;
  6697   00196E  EE20 F002          	lfsr	2,2
  6698   001972  501E               	movf	turnLeft@mR^0,w,c
  6699   001974  26D9               	addwf	fsr2l,f,c
  6700   001976  501F               	movf	(turnLeft@mR+1)^0,w,c
  6701   001978  22DA               	addwfc	fsr2h,f,c
  6702   00197A  0E00               	movlw	0
  6703   00197C  6EDF               	movwf	indf2,c
  6704                           
  6705                           ;dc_motor.c: 117:     if(mL->power>62){mL->power=62;}
  6706   00197E  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6707   001982  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6708   001986  50DF               	movf	indf2,w,c
  6709   001988  0A80               	xorlw	128
  6710   00198A  0F41               	addlw	-191
  6711   00198C  A0D8               	btfss	status,0,c
  6712   00198E  EFCB  F00C         	goto	u2081
  6713   001992  EFCD  F00C         	goto	u2080
  6714   001996                     u2081:
  6715   001996  EFD3  F00C         	goto	l2810
  6716   00199A                     u2080:
  6717   00199A  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6718   00199E  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6719   0019A2  0E3E               	movlw	62
  6720   0019A4  6EDF               	movwf	indf2,c
  6721   0019A6                     l2810:
  6722                           
  6723                           ;dc_motor.c: 118:     if(mR->power>62){mR->power=62;}
  6724   0019A6  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6725   0019AA  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6726   0019AE  50DF               	movf	indf2,w,c
  6727   0019B0  0A80               	xorlw	128
  6728   0019B2  0F41               	addlw	-191
  6729   0019B4  A0D8               	btfss	status,0,c
  6730   0019B6  EFDF  F00C         	goto	u2091
  6731   0019BA  EFE1  F00C         	goto	u2090
  6732   0019BE                     u2091:
  6733   0019BE  EFE7  F00C         	goto	l2814
  6734   0019C2                     u2090:
  6735   0019C2  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6736   0019C6  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6737   0019CA  0E3E               	movlw	62
  6738   0019CC  6EDF               	movwf	indf2,c
  6739   0019CE                     l2814:
  6740                           
  6741                           ;dc_motor.c: 120:     mL->power = mL->power + 10 ;
  6742   0019CE  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6743   0019D2  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6744   0019D6  50DF               	movf	indf2,w,c
  6745   0019D8  0F0A               	addlw	10
  6746   0019DA  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6747   0019DE  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6748   0019E2  6EDF               	movwf	indf2,c
  6749   0019E4                     
  6750                           ;dc_motor.c: 121:     mR->power = mR->power + 10;
  6751   0019E4  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6752   0019E8  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6753   0019EC  50DF               	movf	indf2,w,c
  6754   0019EE  0F0A               	addlw	10
  6755   0019F0  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6756   0019F4  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6757   0019F8  6EDF               	movwf	indf2,c
  6758   0019FA                     
  6759                           ;dc_motor.c: 123:     setMotorPWM(mL);
  6760   0019FA  C01C  F016         	movff	turnLeft@mL,setMotorPWM@m
  6761   0019FE  C01D  F017         	movff	turnLeft@mL+1,setMotorPWM@m+1
  6762   001A02  EC77  F00A         	call	_setMotorPWM	;wreg free
  6763   001A06                     
  6764                           ;dc_motor.c: 124:     setMotorPWM(mR);
  6765   001A06  C01E  F016         	movff	turnLeft@mR,setMotorPWM@m
  6766   001A0A  C01F  F017         	movff	turnLeft@mR+1,setMotorPWM@m+1
  6767   001A0E  EC77  F00A         	call	_setMotorPWM	;wreg free
  6768   001A12                     
  6769                           ;dc_motor.c: 125:     _delay((unsigned long)((20)*(64000000/4000.0)));
  6770   001A12  0E02               	movlw	2
  6771   001A14  6E21               	movwf	(??_turnLeft+1)^0,c
  6772   001A16  0EA0               	movlw	160
  6773   001A18  6E20               	movwf	??_turnLeft^0,c
  6774   001A1A  0E92               	movlw	146
  6775   001A1C                     u4717:
  6776   001A1C  2EE8               	decfsz	wreg,f,c
  6777   001A1E  D7FE               	bra	u4717
  6778   001A20  2E20               	decfsz	??_turnLeft^0,f,c
  6779   001A22  D7FC               	bra	u4717
  6780   001A24  2E21               	decfsz	(??_turnLeft+1)^0,f,c
  6781   001A26  D7FA               	bra	u4717
  6782   001A28  D000               	nop2	
  6783   001A2A  0012               	return		;funcret
  6784   001A2C                     __end_of_turnLeft:
  6785                           	callstack 0
  6786                           
  6787 ;; *************** function _stop *****************
  6788 ;; Defined at:
  6789 ;;		line 87 in file "dc_motor.c"
  6790 ;; Parameters:    Size  Location     Type
  6791 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6792 ;;		 -> main@motorL(9), 
  6793 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6794 ;;		 -> main@motorR(9), 
  6795 ;; Auto vars:     Size  Location     Type
  6796 ;;		None
  6797 ;; Return value:  Size  Location     Type
  6798 ;;                  1    wreg      void 
  6799 ;; Registers used:
  6800 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6801 ;; Tracked objects:
  6802 ;;		On entry : 0/0
  6803 ;;		On exit  : 0/0
  6804 ;;		Unchanged: 0/0
  6805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6806 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6808 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6809 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6810 ;;Total ram usage:        5 bytes
  6811 ;; Hardware stack levels used: 1
  6812 ;; Hardware stack levels required when called: 9
  6813 ;; This function calls:
  6814 ;;		_setMotorPWM
  6815 ;; This function is called by:
  6816 ;;		_turnLeft90
  6817 ;;		_turnRight90
  6818 ;;		_turnRight135
  6819 ;;		_turnLeft135
  6820 ;;		_main
  6821 ;;		_RedInstructions
  6822 ;;		_GreenInstructions
  6823 ;;		_BlueInstructions
  6824 ;;		_YellowInstructions
  6825 ;;		_PinkInstructions
  6826 ;;		_OrangeInstructions
  6827 ;;		_LightBlueInstructions
  6828 ;;		_AntiYellow
  6829 ;;		_AntiPink
  6830 ;;		_WhiteInstructions
  6831 ;; This function uses a non-reentrant model
  6832 ;;
  6833                           
  6834                           	psect	text31
  6835   001C04                     __ptext31:
  6836                           	callstack 0
  6837   001C04                     _stop:
  6838                           	callstack 21
  6839   001C04                     
  6840                           ;dc_motor.c: 87: void stop(DC_motor *mL, DC_motor *mR);dc_motor.c: 88: {;dc_motor.c: 90:
      +                               mL->brakemode = 1;
  6841   001C04  EE20 F002          	lfsr	2,2
  6842   001C08  501C               	movf	stop@mL^0,w,c
  6843   001C0A  26D9               	addwf	fsr2l,f,c
  6844   001C0C  501D               	movf	(stop@mL+1)^0,w,c
  6845   001C0E  22DA               	addwfc	fsr2h,f,c
  6846   001C10  0E01               	movlw	1
  6847   001C12  6EDF               	movwf	indf2,c
  6848                           
  6849                           ;dc_motor.c: 91:     mR->brakemode = 1;
  6850   001C14  EE20 F002          	lfsr	2,2
  6851   001C18  501E               	movf	stop@mR^0,w,c
  6852   001C1A  26D9               	addwf	fsr2l,f,c
  6853   001C1C  501F               	movf	(stop@mR+1)^0,w,c
  6854   001C1E  22DA               	addwfc	fsr2h,f,c
  6855   001C20  0E01               	movlw	1
  6856   001C22  6EDF               	movwf	indf2,c
  6857                           
  6858                           ;dc_motor.c: 93:     if(mL->power<0){mL->power=0;}
  6859   001C24  C01C  FFD9         	movff	stop@mL,fsr2l
  6860   001C28  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6861   001C2C  0E00               	movlw	0
  6862   001C2E  BEDB               	btfsc	plusw2,7,c
  6863   001C30  EF1E  F00E         	goto	u2060
  6864   001C34  EF1C  F00E         	goto	u2061
  6865   001C38                     u2061:
  6866   001C38  EF24  F00E         	goto	l2792
  6867   001C3C                     u2060:
  6868   001C3C  C01C  FFD9         	movff	stop@mL,fsr2l
  6869   001C40  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6870   001C44  0E00               	movlw	0
  6871   001C46  6EDF               	movwf	indf2,c
  6872   001C48                     l2792:
  6873                           
  6874                           ;dc_motor.c: 94:     if(mR->power<0){mR->power=0;}
  6875   001C48  C01E  FFD9         	movff	stop@mR,fsr2l
  6876   001C4C  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6877   001C50  0E00               	movlw	0
  6878   001C52  BEDB               	btfsc	plusw2,7,c
  6879   001C54  EF30  F00E         	goto	u2070
  6880   001C58  EF2E  F00E         	goto	u2071
  6881   001C5C                     u2071:
  6882   001C5C  EF36  F00E         	goto	l2796
  6883   001C60                     u2070:
  6884   001C60  C01E  FFD9         	movff	stop@mR,fsr2l
  6885   001C64  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6886   001C68  0E00               	movlw	0
  6887   001C6A  6EDF               	movwf	indf2,c
  6888   001C6C                     l2796:
  6889                           
  6890                           ;dc_motor.c: 96:     mL->power = mL->power - 5 ;
  6891   001C6C  C01C  FFD9         	movff	stop@mL,fsr2l
  6892   001C70  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6893   001C74  50DF               	movf	indf2,w,c
  6894   001C76  0FFB               	addlw	251
  6895   001C78  C01C  FFD9         	movff	stop@mL,fsr2l
  6896   001C7C  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6897   001C80  6EDF               	movwf	indf2,c
  6898   001C82                     
  6899                           ;dc_motor.c: 97:     mR->power = mR->power - 5;
  6900   001C82  C01E  FFD9         	movff	stop@mR,fsr2l
  6901   001C86  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6902   001C8A  50DF               	movf	indf2,w,c
  6903   001C8C  0FFB               	addlw	251
  6904   001C8E  C01E  FFD9         	movff	stop@mR,fsr2l
  6905   001C92  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6906   001C96  6EDF               	movwf	indf2,c
  6907                           
  6908                           ;dc_motor.c: 99:     mL->power = 0;
  6909   001C98  C01C  FFD9         	movff	stop@mL,fsr2l
  6910   001C9C  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6911   001CA0  0E00               	movlw	0
  6912   001CA2  6EDF               	movwf	indf2,c
  6913                           
  6914                           ;dc_motor.c: 100:     mR->power = 0;
  6915   001CA4  C01E  FFD9         	movff	stop@mR,fsr2l
  6916   001CA8  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6917   001CAC  0E00               	movlw	0
  6918   001CAE  6EDF               	movwf	indf2,c
  6919   001CB0                     
  6920                           ;dc_motor.c: 101:     setMotorPWM(mL);
  6921   001CB0  C01C  F016         	movff	stop@mL,setMotorPWM@m
  6922   001CB4  C01D  F017         	movff	stop@mL+1,setMotorPWM@m+1
  6923   001CB8  EC77  F00A         	call	_setMotorPWM	;wreg free
  6924   001CBC                     
  6925                           ;dc_motor.c: 102:     setMotorPWM(mR);
  6926   001CBC  C01E  F016         	movff	stop@mR,setMotorPWM@m
  6927   001CC0  C01F  F017         	movff	stop@mR+1,setMotorPWM@m+1
  6928   001CC4  EC77  F00A         	call	_setMotorPWM	;wreg free
  6929   001CC8                     
  6930                           ;dc_motor.c: 103:     _delay((unsigned long)((10)*(64000000/4000.0)));
  6931   001CC8  0ED0               	movlw	208
  6932   001CCA  6E20               	movwf	??_stop^0,c
  6933   001CCC  0ECA               	movlw	202
  6934   001CCE                     u4727:
  6935   001CCE  2EE8               	decfsz	wreg,f,c
  6936   001CD0  D7FE               	bra	u4727
  6937   001CD2  2E20               	decfsz	??_stop^0,f,c
  6938   001CD4  D7FC               	bra	u4727
  6939   001CD6  0012               	return		;funcret
  6940   001CD8                     __end_of_stop:
  6941                           	callstack 0
  6942                           
  6943 ;; *************** function _fullSpeedBackwards *****************
  6944 ;; Defined at:
  6945 ;;		line 174 in file "dc_motor.c"
  6946 ;; Parameters:    Size  Location     Type
  6947 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6948 ;;		 -> main@motorL(9), 
  6949 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6950 ;;		 -> main@motorR(9), 
  6951 ;; Auto vars:     Size  Location     Type
  6952 ;;		None
  6953 ;; Return value:  Size  Location     Type
  6954 ;;                  1    wreg      void 
  6955 ;; Registers used:
  6956 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6957 ;; Tracked objects:
  6958 ;;		On entry : 0/0
  6959 ;;		On exit  : 0/0
  6960 ;;		Unchanged: 0/0
  6961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6962 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6964 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6965 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6966 ;;Total ram usage:        6 bytes
  6967 ;; Hardware stack levels used: 1
  6968 ;; Hardware stack levels required when called: 9
  6969 ;; This function calls:
  6970 ;;		_setMotorPWM
  6971 ;; This function is called by:
  6972 ;;		_RedInstructions
  6973 ;;		_GreenInstructions
  6974 ;;		_BlueInstructions
  6975 ;;		_YellowInstructions
  6976 ;;		_PinkInstructions
  6977 ;;		_OrangeInstructions
  6978 ;;		_LightBlueInstructions
  6979 ;; This function uses a non-reentrant model
  6980 ;;
  6981                           
  6982                           	psect	text32
  6983   001A2C                     __ptext32:
  6984                           	callstack 0
  6985   001A2C                     _fullSpeedBackwards:
  6986                           	callstack 18
  6987   001A2C                     
  6988                           ;dc_motor.c: 177:     mL->direction = 0;
  6989   001A2C  EE20 F001          	lfsr	2,1
  6990   001A30  501C               	movf	fullSpeedBackwards@mL^0,w,c
  6991   001A32  26D9               	addwf	fsr2l,f,c
  6992   001A34  501D               	movf	(fullSpeedBackwards@mL+1)^0,w,c
  6993   001A36  22DA               	addwfc	fsr2h,f,c
  6994   001A38  0E00               	movlw	0
  6995   001A3A  6EDF               	movwf	indf2,c
  6996                           
  6997                           ;dc_motor.c: 178:     mL->brakemode = 0;
  6998   001A3C  EE20 F002          	lfsr	2,2
  6999   001A40  501C               	movf	fullSpeedBackwards@mL^0,w,c
  7000   001A42  26D9               	addwf	fsr2l,f,c
  7001   001A44  501D               	movf	(fullSpeedBackwards@mL+1)^0,w,c
  7002   001A46  22DA               	addwfc	fsr2h,f,c
  7003   001A48  0E00               	movlw	0
  7004   001A4A  6EDF               	movwf	indf2,c
  7005                           
  7006                           ;dc_motor.c: 180:     mR->direction = 0;
  7007   001A4C  EE20 F001          	lfsr	2,1
  7008   001A50  501E               	movf	fullSpeedBackwards@mR^0,w,c
  7009   001A52  26D9               	addwf	fsr2l,f,c
  7010   001A54  501F               	movf	(fullSpeedBackwards@mR+1)^0,w,c
  7011   001A56  22DA               	addwfc	fsr2h,f,c
  7012   001A58  0E00               	movlw	0
  7013   001A5A  6EDF               	movwf	indf2,c
  7014                           
  7015                           ;dc_motor.c: 181:     mR->brakemode = 0;
  7016   001A5C  EE20 F002          	lfsr	2,2
  7017   001A60  501E               	movf	fullSpeedBackwards@mR^0,w,c
  7018   001A62  26D9               	addwf	fsr2l,f,c
  7019   001A64  501F               	movf	(fullSpeedBackwards@mR+1)^0,w,c
  7020   001A66  22DA               	addwfc	fsr2h,f,c
  7021   001A68  0E00               	movlw	0
  7022   001A6A  6EDF               	movwf	indf2,c
  7023                           
  7024                           ;dc_motor.c: 184:     if(mL->power>38){mL->power=38;}
  7025   001A6C  C01C  FFD9         	movff	fullSpeedBackwards@mL,fsr2l
  7026   001A70  C01D  FFDA         	movff	fullSpeedBackwards@mL+1,fsr2h
  7027   001A74  50DF               	movf	indf2,w,c
  7028   001A76  0A80               	xorlw	128
  7029   001A78  0F59               	addlw	-167
  7030   001A7A  A0D8               	btfss	status,0,c
  7031   001A7C  EF42  F00D         	goto	u2121
  7032   001A80  EF44  F00D         	goto	u2120
  7033   001A84                     u2121:
  7034   001A84  EF4A  F00D         	goto	l2858
  7035   001A88                     u2120:
  7036   001A88  C01C  FFD9         	movff	fullSpeedBackwards@mL,fsr2l
  7037   001A8C  C01D  FFDA         	movff	fullSpeedBackwards@mL+1,fsr2h
  7038   001A90  0E26               	movlw	38
  7039   001A92  6EDF               	movwf	indf2,c
  7040   001A94                     l2858:
  7041                           
  7042                           ;dc_motor.c: 185:     if(mR->power>46){mR->power=46;}
  7043   001A94  C01E  FFD9         	movff	fullSpeedBackwards@mR,fsr2l
  7044   001A98  C01F  FFDA         	movff	fullSpeedBackwards@mR+1,fsr2h
  7045   001A9C  50DF               	movf	indf2,w,c
  7046   001A9E  0A80               	xorlw	128
  7047   001AA0  0F51               	addlw	-175
  7048   001AA2  A0D8               	btfss	status,0,c
  7049   001AA4  EF56  F00D         	goto	u2131
  7050   001AA8  EF58  F00D         	goto	u2130
  7051   001AAC                     u2131:
  7052   001AAC  EF5E  F00D         	goto	l2862
  7053   001AB0                     u2130:
  7054   001AB0  C01E  FFD9         	movff	fullSpeedBackwards@mR,fsr2l
  7055   001AB4  C01F  FFDA         	movff	fullSpeedBackwards@mR+1,fsr2h
  7056   001AB8  0E2E               	movlw	46
  7057   001ABA  6EDF               	movwf	indf2,c
  7058   001ABC                     l2862:
  7059                           
  7060                           ;dc_motor.c: 187:     mL->power = mL->power + 5 ;
  7061   001ABC  C01C  FFD9         	movff	fullSpeedBackwards@mL,fsr2l
  7062   001AC0  C01D  FFDA         	movff	fullSpeedBackwards@mL+1,fsr2h
  7063   001AC4  50DF               	movf	indf2,w,c
  7064   001AC6  0F05               	addlw	5
  7065   001AC8  C01C  FFD9         	movff	fullSpeedBackwards@mL,fsr2l
  7066   001ACC  C01D  FFDA         	movff	fullSpeedBackwards@mL+1,fsr2h
  7067   001AD0  6EDF               	movwf	indf2,c
  7068   001AD2                     
  7069                           ;dc_motor.c: 188:     mR->power = mR->power + 8;
  7070   001AD2  C01E  FFD9         	movff	fullSpeedBackwards@mR,fsr2l
  7071   001AD6  C01F  FFDA         	movff	fullSpeedBackwards@mR+1,fsr2h
  7072   001ADA  50DF               	movf	indf2,w,c
  7073   001ADC  0F08               	addlw	8
  7074   001ADE  C01E  FFD9         	movff	fullSpeedBackwards@mR,fsr2l
  7075   001AE2  C01F  FFDA         	movff	fullSpeedBackwards@mR+1,fsr2h
  7076   001AE6  6EDF               	movwf	indf2,c
  7077   001AE8                     
  7078                           ;dc_motor.c: 190:     setMotorPWM(mL);
  7079   001AE8  C01C  F016         	movff	fullSpeedBackwards@mL,setMotorPWM@m
  7080   001AEC  C01D  F017         	movff	fullSpeedBackwards@mL+1,setMotorPWM@m+1
  7081   001AF0  EC77  F00A         	call	_setMotorPWM	;wreg free
  7082   001AF4                     
  7083                           ;dc_motor.c: 191:     setMotorPWM(mR);
  7084   001AF4  C01E  F016         	movff	fullSpeedBackwards@mR,setMotorPWM@m
  7085   001AF8  C01F  F017         	movff	fullSpeedBackwards@mR+1,setMotorPWM@m+1
  7086   001AFC  EC77  F00A         	call	_setMotorPWM	;wreg free
  7087   001B00                     
  7088                           ;dc_motor.c: 192:     _delay((unsigned long)((50)*(64000000/4000.0)));
  7089   001B00  0E05               	movlw	5
  7090   001B02  6E21               	movwf	(??_fullSpeedBackwards+1)^0,c
  7091   001B04  0E0F               	movlw	15
  7092   001B06  6E20               	movwf	??_fullSpeedBackwards^0,c
  7093   001B08  0EF1               	movlw	241
  7094   001B0A                     u4737:
  7095   001B0A  2EE8               	decfsz	wreg,f,c
  7096   001B0C  D7FE               	bra	u4737
  7097   001B0E  2E20               	decfsz	??_fullSpeedBackwards^0,f,c
  7098   001B10  D7FC               	bra	u4737
  7099   001B12  2E21               	decfsz	(??_fullSpeedBackwards+1)^0,f,c
  7100   001B14  D7FA               	bra	u4737
  7101   001B16  F000               	nop	
  7102   001B18  0012               	return		;funcret
  7103   001B1A                     __end_of_fullSpeedBackwards:
  7104                           	callstack 0
  7105                           
  7106 ;; *************** function _setMotorPWM *****************
  7107 ;; Defined at:
  7108 ;;		line 64 in file "dc_motor.c"
  7109 ;; Parameters:    Size  Location     Type
  7110 ;;  m               2   21[COMRAM] PTR struct DC_motor
  7111 ;;		 -> main@motorR(9), main@motorL(9), 
  7112 ;; Auto vars:     Size  Location     Type
  7113 ;;  negDuty         1   26[COMRAM] unsigned char 
  7114 ;;  posDuty         1   25[COMRAM] unsigned char 
  7115 ;; Return value:  Size  Location     Type
  7116 ;;                  1    wreg      void 
  7117 ;; Registers used:
  7118 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7119 ;; Tracked objects:
  7120 ;;		On entry : 0/0
  7121 ;;		On exit  : 0/0
  7122 ;;		Unchanged: 0/0
  7123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7124 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7125 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7126 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7127 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7128 ;;Total ram usage:        6 bytes
  7129 ;; Hardware stack levels used: 1
  7130 ;; Hardware stack levels required when called: 8
  7131 ;; This function calls:
  7132 ;;		___lwdiv
  7133 ;;		___wmul
  7134 ;; This function is called by:
  7135 ;;		_stop
  7136 ;;		_turnLeft
  7137 ;;		_turnRight
  7138 ;;		_fullSpeedAhead
  7139 ;;		_fullSpeedBackwards
  7140 ;; This function uses a non-reentrant model
  7141 ;;
  7142                           
  7143                           	psect	text33
  7144   0014EE                     __ptext33:
  7145                           	callstack 0
  7146   0014EE                     _setMotorPWM:
  7147                           	callstack 21
  7148   0014EE                     
  7149                           ;dc_motor.c: 64: void setMotorPWM(DC_motor *m);dc_motor.c: 65: {;dc_motor.c: 66:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 68:     if(m->brakemode) {
  7150   0014EE  EE20 F002          	lfsr	2,2
  7151   0014F2  5016               	movf	setMotorPWM@m^0,w,c
  7152   0014F4  26D9               	addwf	fsr2l,f,c
  7153   0014F6  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7154   0014F8  22DA               	addwfc	fsr2h,f,c
  7155   0014FA  50DF               	movf	indf2,w,c
  7156   0014FC  B4D8               	btfsc	status,2,c
  7157   0014FE  EF83  F00A         	goto	u2021
  7158   001502  EF85  F00A         	goto	u2020
  7159   001506                     u2021:
  7160   001506  EFB9  F00A         	goto	l2774
  7161   00150A                     u2020:
  7162   00150A                     
  7163                           ;dc_motor.c: 69:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  7164   00150A  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  7165   00150E  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  7166   001512  50DF               	movf	indf2,w,c
  7167   001514  6E09               	movwf	___wmul@multiplier^0,c
  7168   001516  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  7169   001518  BE09               	btfsc	___wmul@multiplier^0,7,c
  7170   00151A  060A               	decf	(___wmul@multiplier+1)^0,f,c
  7171   00151C  EE20 F003          	lfsr	2,3
  7172   001520  5016               	movf	setMotorPWM@m^0,w,c
  7173   001522  26D9               	addwf	fsr2l,f,c
  7174   001524  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7175   001526  22DA               	addwfc	fsr2h,f,c
  7176   001528  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  7177   00152C  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  7178   001530  EC96  F014         	call	___wmul	;wreg free
  7179   001534  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  7180   001538  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  7181   00153C  0E00               	movlw	0
  7182   00153E  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  7183   001540  0E64               	movlw	100
  7184   001542  6E11               	movwf	___lwdiv@divisor^0,c
  7185   001544  ECFF  F011         	call	___lwdiv	;wreg free
  7186   001548  EE20 F003          	lfsr	2,3
  7187   00154C  5016               	movf	setMotorPWM@m^0,w,c
  7188   00154E  26D9               	addwf	fsr2l,f,c
  7189   001550  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7190   001552  22DA               	addwfc	fsr2h,f,c
  7191   001554  50DF               	movf	indf2,w,c
  7192   001556  6E18               	movwf	??_setMotorPWM^0,c
  7193   001558  500F               	movf	?___lwdiv^0,w,c
  7194   00155A  5C18               	subwf	??_setMotorPWM^0,w,c
  7195   00155C  6E1A               	movwf	setMotorPWM@posDuty^0,c
  7196   00155E                     
  7197                           ;dc_motor.c: 70:         negDuty=m->PWMperiod;
  7198   00155E  EE20 F003          	lfsr	2,3
  7199   001562  5016               	movf	setMotorPWM@m^0,w,c
  7200   001564  26D9               	addwf	fsr2l,f,c
  7201   001566  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7202   001568  22DA               	addwfc	fsr2h,f,c
  7203   00156A  50DF               	movf	indf2,w,c
  7204   00156C  6E1B               	movwf	setMotorPWM@negDuty^0,c
  7205                           
  7206                           ;dc_motor.c: 71:     }
  7207   00156E  EFDC  F00A         	goto	l2778
  7208   001572                     l2774:
  7209                           
  7210                           ;dc_motor.c: 73:         posDuty=0;
  7211   001572  0E00               	movlw	0
  7212   001574  6E1A               	movwf	setMotorPWM@posDuty^0,c
  7213   001576                     
  7214                           ;dc_motor.c: 74:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  7215   001576  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  7216   00157A  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  7217   00157E  50DF               	movf	indf2,w,c
  7218   001580  6E09               	movwf	___wmul@multiplier^0,c
  7219   001582  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  7220   001584  BE09               	btfsc	___wmul@multiplier^0,7,c
  7221   001586  060A               	decf	(___wmul@multiplier+1)^0,f,c
  7222   001588  EE20 F003          	lfsr	2,3
  7223   00158C  5016               	movf	setMotorPWM@m^0,w,c
  7224   00158E  26D9               	addwf	fsr2l,f,c
  7225   001590  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7226   001592  22DA               	addwfc	fsr2h,f,c
  7227   001594  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  7228   001598  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  7229   00159C  EC96  F014         	call	___wmul	;wreg free
  7230   0015A0  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  7231   0015A4  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  7232   0015A8  0E00               	movlw	0
  7233   0015AA  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  7234   0015AC  0E64               	movlw	100
  7235   0015AE  6E11               	movwf	___lwdiv@divisor^0,c
  7236   0015B0  ECFF  F011         	call	___lwdiv	;wreg free
  7237   0015B4  500F               	movf	?___lwdiv^0,w,c
  7238   0015B6  6E1B               	movwf	setMotorPWM@negDuty^0,c
  7239   0015B8                     l2778:
  7240                           
  7241                           ;dc_motor.c: 77:     if (m->direction) {
  7242   0015B8  EE20 F001          	lfsr	2,1
  7243   0015BC  5016               	movf	setMotorPWM@m^0,w,c
  7244   0015BE  26D9               	addwf	fsr2l,f,c
  7245   0015C0  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7246   0015C2  22DA               	addwfc	fsr2h,f,c
  7247   0015C4  50DF               	movf	indf2,w,c
  7248   0015C6  B4D8               	btfsc	status,2,c
  7249   0015C8  EFE8  F00A         	goto	u2031
  7250   0015CC  EFEA  F00A         	goto	u2030
  7251   0015D0                     u2031:
  7252   0015D0  EF0C  F00B         	goto	l2782
  7253   0015D4                     u2030:
  7254   0015D4                     
  7255                           ;dc_motor.c: 78:         *(m->posDutyHighByte)=posDuty;
  7256   0015D4  EE20 F005          	lfsr	2,5
  7257   0015D8  5016               	movf	setMotorPWM@m^0,w,c
  7258   0015DA  26D9               	addwf	fsr2l,f,c
  7259   0015DC  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7260   0015DE  22DA               	addwfc	fsr2h,f,c
  7261   0015E0  CFDE F018          	movff	postinc2,??_setMotorPWM
  7262   0015E4  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  7263   0015E8  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  7264   0015EC  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  7265   0015F0  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  7266                           
  7267                           ;dc_motor.c: 79:         *(m->negDutyHighByte)=negDuty;
  7268   0015F4  EE20 F007          	lfsr	2,7
  7269   0015F8  5016               	movf	setMotorPWM@m^0,w,c
  7270   0015FA  26D9               	addwf	fsr2l,f,c
  7271   0015FC  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7272   0015FE  22DA               	addwfc	fsr2h,f,c
  7273   001600  CFDE F018          	movff	postinc2,??_setMotorPWM
  7274   001604  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  7275   001608  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  7276   00160C  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  7277   001610  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  7278                           
  7279                           ;dc_motor.c: 80:     } else {
  7280   001614  EF2C  F00B         	goto	l193
  7281   001618                     l2782:
  7282                           
  7283                           ;dc_motor.c: 81:         *(m->posDutyHighByte)=negDuty;
  7284   001618  EE20 F005          	lfsr	2,5
  7285   00161C  5016               	movf	setMotorPWM@m^0,w,c
  7286   00161E  26D9               	addwf	fsr2l,f,c
  7287   001620  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7288   001622  22DA               	addwfc	fsr2h,f,c
  7289   001624  CFDE F018          	movff	postinc2,??_setMotorPWM
  7290   001628  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  7291   00162C  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  7292   001630  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  7293   001634  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  7294                           
  7295                           ;dc_motor.c: 82:         *(m->negDutyHighByte)=posDuty;
  7296   001638  EE20 F007          	lfsr	2,7
  7297   00163C  5016               	movf	setMotorPWM@m^0,w,c
  7298   00163E  26D9               	addwf	fsr2l,f,c
  7299   001640  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7300   001642  22DA               	addwfc	fsr2h,f,c
  7301   001644  CFDE F018          	movff	postinc2,??_setMotorPWM
  7302   001648  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  7303   00164C  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  7304   001650  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  7305   001654  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  7306   001658                     l193:
  7307   001658  0012               	return		;funcret
  7308   00165A                     __end_of_setMotorPWM:
  7309                           	callstack 0
  7310                           
  7311 ;; *************** function ___wmul *****************
  7312 ;; Defined at:
  7313 ;;		line 15 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\Umul16.c"
  7314 ;; Parameters:    Size  Location     Type
  7315 ;;  multiplier      2    8[COMRAM] unsigned int 
  7316 ;;  multiplicand    2   10[COMRAM] unsigned int 
  7317 ;; Auto vars:     Size  Location     Type
  7318 ;;  product         2   12[COMRAM] unsigned int 
  7319 ;; Return value:  Size  Location     Type
  7320 ;;                  2    8[COMRAM] unsigned int 
  7321 ;; Registers used:
  7322 ;;		wreg, status,2, status,0, prodl, prodh
  7323 ;; Tracked objects:
  7324 ;;		On entry : 0/0
  7325 ;;		On exit  : 0/0
  7326 ;;		Unchanged: 0/0
  7327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7328 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7329 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7331 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7332 ;;Total ram usage:        6 bytes
  7333 ;; Hardware stack levels used: 1
  7334 ;; Hardware stack levels required when called: 7
  7335 ;; This function calls:
  7336 ;;		Nothing
  7337 ;; This function is called by:
  7338 ;;		_setMotorPWM
  7339 ;; This function uses a non-reentrant model
  7340 ;;
  7341                           
  7342                           	psect	text34
  7343   00292C                     __ptext34:
  7344                           	callstack 0
  7345   00292C                     ___wmul:
  7346                           	callstack 21
  7347   00292C  5009               	movf	___wmul@multiplier^0,w,c
  7348   00292E  020B               	mulwf	___wmul@multiplicand^0,c
  7349   002930  CFF3 F00D          	movff	prodl,___wmul@product
  7350   002934  CFF4 F00E          	movff	prodh,___wmul@product+1
  7351   002938  5009               	movf	___wmul@multiplier^0,w,c
  7352   00293A  020C               	mulwf	(___wmul@multiplicand+1)^0,c
  7353   00293C  50F3               	movf	243,w,c
  7354   00293E  260E               	addwf	(___wmul@product+1)^0,f,c
  7355   002940  500A               	movf	(___wmul@multiplier+1)^0,w,c
  7356   002942  020B               	mulwf	___wmul@multiplicand^0,c
  7357   002944  50F3               	movf	243,w,c
  7358   002946  260E               	addwf	(___wmul@product+1)^0,f,c
  7359   002948  C00D  F009         	movff	___wmul@product,?___wmul
  7360   00294C  C00E  F00A         	movff	___wmul@product+1,?___wmul+1
  7361   002950  0012               	return		;funcret
  7362   002952                     __end_of___wmul:
  7363                           	callstack 0
  7364                           
  7365 ;; *************** function ___lwdiv *****************
  7366 ;; Defined at:
  7367 ;;		line 7 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\lwdiv.c"
  7368 ;; Parameters:    Size  Location     Type
  7369 ;;  dividend        2   14[COMRAM] unsigned int 
  7370 ;;  divisor         2   16[COMRAM] unsigned int 
  7371 ;; Auto vars:     Size  Location     Type
  7372 ;;  quotient        2   18[COMRAM] unsigned int 
  7373 ;;  counter         1   20[COMRAM] unsigned char 
  7374 ;; Return value:  Size  Location     Type
  7375 ;;                  2   14[COMRAM] unsigned int 
  7376 ;; Registers used:
  7377 ;;		wreg, status,2, status,0
  7378 ;; Tracked objects:
  7379 ;;		On entry : 0/0
  7380 ;;		On exit  : 0/0
  7381 ;;		Unchanged: 0/0
  7382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7383 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7384 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7386 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7387 ;;Total ram usage:        7 bytes
  7388 ;; Hardware stack levels used: 1
  7389 ;; Hardware stack levels required when called: 7
  7390 ;; This function calls:
  7391 ;;		Nothing
  7392 ;; This function is called by:
  7393 ;;		_setMotorPWM
  7394 ;; This function uses a non-reentrant model
  7395 ;;
  7396                           
  7397                           	psect	text35
  7398   0023FE                     __ptext35:
  7399                           	callstack 0
  7400   0023FE                     ___lwdiv:
  7401                           	callstack 21
  7402   0023FE  0E00               	movlw	0
  7403   002400  6E14               	movwf	(___lwdiv@quotient+1)^0,c
  7404   002402  0E00               	movlw	0
  7405   002404  6E13               	movwf	___lwdiv@quotient^0,c
  7406   002406  5011               	movf	___lwdiv@divisor^0,w,c
  7407   002408  1012               	iorwf	(___lwdiv@divisor+1)^0,w,c
  7408   00240A  B4D8               	btfsc	status,2,c
  7409   00240C  EF0A  F012         	goto	u1991
  7410   002410  EF0C  F012         	goto	u1990
  7411   002414                     u1991:
  7412   002414  EF34  F012         	goto	l1196
  7413   002418                     u1990:
  7414   002418  0E01               	movlw	1
  7415   00241A  6E15               	movwf	___lwdiv@counter^0,c
  7416   00241C  EF14  F012         	goto	l2754
  7417   002420                     l2752:
  7418   002420  90D8               	bcf	status,0,c
  7419   002422  3611               	rlcf	___lwdiv@divisor^0,f,c
  7420   002424  3612               	rlcf	(___lwdiv@divisor+1)^0,f,c
  7421   002426  2A15               	incf	___lwdiv@counter^0,f,c
  7422   002428                     l2754:
  7423   002428  AE12               	btfss	(___lwdiv@divisor+1)^0,7,c
  7424   00242A  EF19  F012         	goto	u2001
  7425   00242E  EF1B  F012         	goto	u2000
  7426   002432                     u2001:
  7427   002432  EF10  F012         	goto	l2752
  7428   002436                     u2000:
  7429   002436                     l2756:
  7430   002436  90D8               	bcf	status,0,c
  7431   002438  3613               	rlcf	___lwdiv@quotient^0,f,c
  7432   00243A  3614               	rlcf	(___lwdiv@quotient+1)^0,f,c
  7433   00243C  5011               	movf	___lwdiv@divisor^0,w,c
  7434   00243E  5C0F               	subwf	___lwdiv@dividend^0,w,c
  7435   002440  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  7436   002442  5810               	subwfb	(___lwdiv@dividend+1)^0,w,c
  7437   002444  A0D8               	btfss	status,0,c
  7438   002446  EF27  F012         	goto	u2011
  7439   00244A  EF29  F012         	goto	u2010
  7440   00244E                     u2011:
  7441   00244E  EF2E  F012         	goto	l2764
  7442   002452                     u2010:
  7443   002452  5011               	movf	___lwdiv@divisor^0,w,c
  7444   002454  5E0F               	subwf	___lwdiv@dividend^0,f,c
  7445   002456  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  7446   002458  5A10               	subwfb	(___lwdiv@dividend+1)^0,f,c
  7447   00245A  8013               	bsf	___lwdiv@quotient^0,0,c
  7448   00245C                     l2764:
  7449   00245C  90D8               	bcf	status,0,c
  7450   00245E  3212               	rrcf	(___lwdiv@divisor+1)^0,f,c
  7451   002460  3211               	rrcf	___lwdiv@divisor^0,f,c
  7452   002462  2E15               	decfsz	___lwdiv@counter^0,f,c
  7453   002464  EF1B  F012         	goto	l2756
  7454   002468                     l1196:
  7455   002468  C013  F00F         	movff	___lwdiv@quotient,?___lwdiv
  7456   00246C  C014  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7457   002470  0012               	return		;funcret
  7458   002472                     __end_of___lwdiv:
  7459                           	callstack 0
  7460                           
  7461 ;; *************** function _Update_RGBC *****************
  7462 ;; Defined at:
  7463 ;;		line 90 in file "color.c"
  7464 ;; Parameters:    Size  Location     Type
  7465 ;;  tempval         2   19[COMRAM] PTR struct RGB_val
  7466 ;;		 -> main@initial_color(8), 
  7467 ;; Auto vars:     Size  Location     Type
  7468 ;;		None
  7469 ;; Return value:  Size  Location     Type
  7470 ;;                  1    wreg      void 
  7471 ;; Registers used:
  7472 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7473 ;; Tracked objects:
  7474 ;;		On entry : 0/0
  7475 ;;		On exit  : 0/0
  7476 ;;		Unchanged: 0/0
  7477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7478 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7481 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7482 ;;Total ram usage:        2 bytes
  7483 ;; Hardware stack levels used: 1
  7484 ;; Hardware stack levels required when called: 10
  7485 ;; This function calls:
  7486 ;;		_color_read_Blue
  7487 ;;		_color_read_Clear
  7488 ;;		_color_read_Green
  7489 ;;		_color_read_Red
  7490 ;; This function is called by:
  7491 ;;		_main
  7492 ;; This function uses a non-reentrant model
  7493 ;;
  7494                           
  7495                           	psect	text36
  7496   00254E                     __ptext36:
  7497                           	callstack 0
  7498   00254E                     _Update_RGBC:
  7499                           	callstack 20
  7500   00254E                     
  7501                           ;color.c: 92:     tempval->R = color_read_Red();
  7502   00254E  ECD6  F012         	call	_color_read_Red	;wreg free
  7503   002552  C014  FFD9         	movff	Update_RGBC@tempval,fsr2l
  7504   002556  C015  FFDA         	movff	Update_RGBC@tempval+1,fsr2h
  7505   00255A  C00D  FFDE         	movff	?_color_read_Red,postinc2
  7506   00255E  C00E  FFDD         	movff	?_color_read_Red+1,postdec2
  7507                           
  7508                           ;color.c: 93:     tempval->G = color_read_Green();
  7509   002562  ECFE  F012         	call	_color_read_Green	;wreg free
  7510   002566  EE20 F002          	lfsr	2,2
  7511   00256A  5014               	movf	Update_RGBC@tempval^0,w,c
  7512   00256C  26D9               	addwf	fsr2l,f,c
  7513   00256E  5015               	movf	(Update_RGBC@tempval+1)^0,w,c
  7514   002570  22DA               	addwfc	fsr2h,f,c
  7515   002572  C00D  FFDE         	movff	?_color_read_Green,postinc2
  7516   002576  C00E  FFDD         	movff	?_color_read_Green+1,postdec2
  7517                           
  7518                           ;color.c: 94:     tempval->B = color_read_Blue();
  7519   00257A  EC4E  F013         	call	_color_read_Blue	;wreg free
  7520   00257E  EE20 F004          	lfsr	2,4
  7521   002582  5014               	movf	Update_RGBC@tempval^0,w,c
  7522   002584  26D9               	addwf	fsr2l,f,c
  7523   002586  5015               	movf	(Update_RGBC@tempval+1)^0,w,c
  7524   002588  22DA               	addwfc	fsr2h,f,c
  7525   00258A  C00D  FFDE         	movff	?_color_read_Blue,postinc2
  7526   00258E  C00E  FFDD         	movff	?_color_read_Blue+1,postdec2
  7527                           
  7528                           ;color.c: 95:     tempval->C = color_read_Clear();
  7529   002592  EC26  F013         	call	_color_read_Clear	;wreg free
  7530   002596  EE20 F006          	lfsr	2,6
  7531   00259A  5014               	movf	Update_RGBC@tempval^0,w,c
  7532   00259C  26D9               	addwf	fsr2l,f,c
  7533   00259E  5015               	movf	(Update_RGBC@tempval+1)^0,w,c
  7534   0025A0  22DA               	addwfc	fsr2h,f,c
  7535   0025A2  C00D  FFDE         	movff	?_color_read_Clear,postinc2
  7536   0025A6  C00E  FFDD         	movff	?_color_read_Clear+1,postdec2
  7537   0025AA  0012               	return		;funcret
  7538   0025AC                     __end_of_Update_RGBC:
  7539                           	callstack 0
  7540                           
  7541 ;; *************** function _color_read_Red *****************
  7542 ;; Defined at:
  7543 ;;		line 32 in file "color.c"
  7544 ;; Parameters:    Size  Location     Type
  7545 ;;		None
  7546 ;; Auto vars:     Size  Location     Type
  7547 ;;  tmp             2   17[COMRAM] unsigned int 
  7548 ;; Return value:  Size  Location     Type
  7549 ;;                  2   12[COMRAM] unsigned int 
  7550 ;; Registers used:
  7551 ;;		wreg, status,2, status,0, cstack
  7552 ;; Tracked objects:
  7553 ;;		On entry : 0/0
  7554 ;;		On exit  : 0/0
  7555 ;;		Unchanged: 0/0
  7556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7557 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7558 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7559 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7560 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7561 ;;Total ram usage:        7 bytes
  7562 ;; Hardware stack levels used: 1
  7563 ;; Hardware stack levels required when called: 9
  7564 ;; This function calls:
  7565 ;;		_I2C_2_Master_Read
  7566 ;;		_I2C_2_Master_RepStart
  7567 ;;		_I2C_2_Master_Start
  7568 ;;		_I2C_2_Master_Stop
  7569 ;;		_I2C_2_Master_Write
  7570 ;; This function is called by:
  7571 ;;		_Update_RGBC
  7572 ;; This function uses a non-reentrant model
  7573 ;;
  7574                           
  7575                           	psect	text37
  7576   0025AC                     __ptext37:
  7577                           	callstack 0
  7578   0025AC                     _color_read_Red:
  7579                           	callstack 20
  7580   0025AC                     
  7581                           ;color.c: 34:  unsigned int tmp;;color.c: 35:  I2C_2_Master_Start();
  7582   0025AC  EC58  F015         	call	_I2C_2_Master_Start	;wreg free
  7583                           
  7584                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x00);
  7585   0025B0  0E52               	movlw	82
  7586   0025B2  EC42  F015         	call	_I2C_2_Master_Write
  7587                           
  7588                           ;color.c: 37:  I2C_2_Master_Write(0xA0 | 0x16);
  7589   0025B6  0EB6               	movlw	182
  7590   0025B8  EC42  F015         	call	_I2C_2_Master_Write
  7591                           
  7592                           ;color.c: 38:  I2C_2_Master_RepStart();
  7593   0025BC  EC4E  F015         	call	_I2C_2_Master_RepStart	;wreg free
  7594                           
  7595                           ;color.c: 39:  I2C_2_Master_Write(0x52 | 0x01);
  7596   0025C0  0E53               	movlw	83
  7597   0025C2  EC42  F015         	call	_I2C_2_Master_Write
  7598                           
  7599                           ;color.c: 40:  tmp=I2C_2_Master_Read(1);
  7600   0025C6  0E01               	movlw	1
  7601   0025C8  ECE9  F013         	call	_I2C_2_Master_Read
  7602   0025CC  6E0F               	movwf	??_color_read_Red^0,c
  7603   0025CE  500F               	movf	??_color_read_Red^0,w,c
  7604   0025D0  6E12               	movwf	color_read_Red@tmp^0,c
  7605   0025D2  6A13               	clrf	(color_read_Red@tmp+1)^0,c
  7606                           
  7607                           ;color.c: 41:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7608   0025D4  0E00               	movlw	0
  7609   0025D6  ECE9  F013         	call	_I2C_2_Master_Read
  7610   0025DA  6E0F               	movwf	??_color_read_Red^0,c
  7611   0025DC  500F               	movf	??_color_read_Red^0,w,c
  7612   0025DE  6E11               	movwf	(??_color_read_Red+2)^0,c
  7613   0025E0  6A10               	clrf	(??_color_read_Red+1)^0,c
  7614   0025E2  5012               	movf	color_read_Red@tmp^0,w,c
  7615   0025E4  1010               	iorwf	(??_color_read_Red+1)^0,w,c
  7616   0025E6  6E12               	movwf	color_read_Red@tmp^0,c
  7617   0025E8  5013               	movf	(color_read_Red@tmp+1)^0,w,c
  7618   0025EA  1011               	iorwf	(??_color_read_Red+2)^0,w,c
  7619   0025EC  6E13               	movwf	(color_read_Red@tmp+1)^0,c
  7620                           
  7621                           ;color.c: 42:  I2C_2_Master_Stop();
  7622   0025EE  EC53  F015         	call	_I2C_2_Master_Stop	;wreg free
  7623   0025F2                     
  7624                           ;color.c: 43:  return tmp;
  7625   0025F2  C012  F00D         	movff	color_read_Red@tmp,?_color_read_Red
  7626   0025F6  C013  F00E         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  7627   0025FA  0012               	return		;funcret
  7628   0025FC                     __end_of_color_read_Red:
  7629                           	callstack 0
  7630                           
  7631 ;; *************** function _color_read_Green *****************
  7632 ;; Defined at:
  7633 ;;		line 46 in file "color.c"
  7634 ;; Parameters:    Size  Location     Type
  7635 ;;		None
  7636 ;; Auto vars:     Size  Location     Type
  7637 ;;  tmp             2   17[COMRAM] unsigned int 
  7638 ;; Return value:  Size  Location     Type
  7639 ;;                  2   12[COMRAM] unsigned int 
  7640 ;; Registers used:
  7641 ;;		wreg, status,2, status,0, cstack
  7642 ;; Tracked objects:
  7643 ;;		On entry : 0/0
  7644 ;;		On exit  : 0/0
  7645 ;;		Unchanged: 0/0
  7646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7647 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7648 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7649 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7650 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7651 ;;Total ram usage:        7 bytes
  7652 ;; Hardware stack levels used: 1
  7653 ;; Hardware stack levels required when called: 9
  7654 ;; This function calls:
  7655 ;;		_I2C_2_Master_Read
  7656 ;;		_I2C_2_Master_RepStart
  7657 ;;		_I2C_2_Master_Start
  7658 ;;		_I2C_2_Master_Stop
  7659 ;;		_I2C_2_Master_Write
  7660 ;; This function is called by:
  7661 ;;		_Update_RGBC
  7662 ;; This function uses a non-reentrant model
  7663 ;;
  7664                           
  7665                           	psect	text38
  7666   0025FC                     __ptext38:
  7667                           	callstack 0
  7668   0025FC                     _color_read_Green:
  7669                           	callstack 20
  7670   0025FC                     
  7671                           ;color.c: 48:  unsigned int tmp;;color.c: 49:  I2C_2_Master_Start();
  7672   0025FC  EC58  F015         	call	_I2C_2_Master_Start	;wreg free
  7673                           
  7674                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x00);
  7675   002600  0E52               	movlw	82
  7676   002602  EC42  F015         	call	_I2C_2_Master_Write
  7677                           
  7678                           ;color.c: 51:  I2C_2_Master_Write(0xA0 | 0x18);
  7679   002606  0EB8               	movlw	184
  7680   002608  EC42  F015         	call	_I2C_2_Master_Write
  7681                           
  7682                           ;color.c: 52:  I2C_2_Master_RepStart();
  7683   00260C  EC4E  F015         	call	_I2C_2_Master_RepStart	;wreg free
  7684                           
  7685                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x01);
  7686   002610  0E53               	movlw	83
  7687   002612  EC42  F015         	call	_I2C_2_Master_Write
  7688                           
  7689                           ;color.c: 54:  tmp=I2C_2_Master_Read(1);
  7690   002616  0E01               	movlw	1
  7691   002618  ECE9  F013         	call	_I2C_2_Master_Read
  7692   00261C  6E0F               	movwf	??_color_read_Green^0,c
  7693   00261E  500F               	movf	??_color_read_Green^0,w,c
  7694   002620  6E12               	movwf	color_read_Green@tmp^0,c
  7695   002622  6A13               	clrf	(color_read_Green@tmp+1)^0,c
  7696                           
  7697                           ;color.c: 55:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7698   002624  0E00               	movlw	0
  7699   002626  ECE9  F013         	call	_I2C_2_Master_Read
  7700   00262A  6E0F               	movwf	??_color_read_Green^0,c
  7701   00262C  500F               	movf	??_color_read_Green^0,w,c
  7702   00262E  6E11               	movwf	(??_color_read_Green+2)^0,c
  7703   002630  6A10               	clrf	(??_color_read_Green+1)^0,c
  7704   002632  5012               	movf	color_read_Green@tmp^0,w,c
  7705   002634  1010               	iorwf	(??_color_read_Green+1)^0,w,c
  7706   002636  6E12               	movwf	color_read_Green@tmp^0,c
  7707   002638  5013               	movf	(color_read_Green@tmp+1)^0,w,c
  7708   00263A  1011               	iorwf	(??_color_read_Green+2)^0,w,c
  7709   00263C  6E13               	movwf	(color_read_Green@tmp+1)^0,c
  7710                           
  7711                           ;color.c: 56:  I2C_2_Master_Stop();
  7712   00263E  EC53  F015         	call	_I2C_2_Master_Stop	;wreg free
  7713   002642                     
  7714                           ;color.c: 57:  return tmp;
  7715   002642  C012  F00D         	movff	color_read_Green@tmp,?_color_read_Green
  7716   002646  C013  F00E         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  7717   00264A  0012               	return		;funcret
  7718   00264C                     __end_of_color_read_Green:
  7719                           	callstack 0
  7720                           
  7721 ;; *************** function _color_read_Clear *****************
  7722 ;; Defined at:
  7723 ;;		line 74 in file "color.c"
  7724 ;; Parameters:    Size  Location     Type
  7725 ;;		None
  7726 ;; Auto vars:     Size  Location     Type
  7727 ;;  tmp             2   17[COMRAM] unsigned int 
  7728 ;; Return value:  Size  Location     Type
  7729 ;;                  2   12[COMRAM] unsigned int 
  7730 ;; Registers used:
  7731 ;;		wreg, status,2, status,0, cstack
  7732 ;; Tracked objects:
  7733 ;;		On entry : 0/0
  7734 ;;		On exit  : 0/0
  7735 ;;		Unchanged: 0/0
  7736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7737 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7738 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7739 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7740 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7741 ;;Total ram usage:        7 bytes
  7742 ;; Hardware stack levels used: 1
  7743 ;; Hardware stack levels required when called: 9
  7744 ;; This function calls:
  7745 ;;		_I2C_2_Master_Read
  7746 ;;		_I2C_2_Master_RepStart
  7747 ;;		_I2C_2_Master_Start
  7748 ;;		_I2C_2_Master_Stop
  7749 ;;		_I2C_2_Master_Write
  7750 ;; This function is called by:
  7751 ;;		_Update_RGBC
  7752 ;; This function uses a non-reentrant model
  7753 ;;
  7754                           
  7755                           	psect	text39
  7756   00264C                     __ptext39:
  7757                           	callstack 0
  7758   00264C                     _color_read_Clear:
  7759                           	callstack 20
  7760   00264C                     
  7761                           ;color.c: 76:  unsigned int tmp;;color.c: 77:  I2C_2_Master_Start();
  7762   00264C  EC58  F015         	call	_I2C_2_Master_Start	;wreg free
  7763                           
  7764                           ;color.c: 78:  I2C_2_Master_Write(0x52 | 0x00);
  7765   002650  0E52               	movlw	82
  7766   002652  EC42  F015         	call	_I2C_2_Master_Write
  7767                           
  7768                           ;color.c: 79:  I2C_2_Master_Write(0xA0 | 0x14);
  7769   002656  0EB4               	movlw	180
  7770   002658  EC42  F015         	call	_I2C_2_Master_Write
  7771                           
  7772                           ;color.c: 80:  I2C_2_Master_RepStart();
  7773   00265C  EC4E  F015         	call	_I2C_2_Master_RepStart	;wreg free
  7774                           
  7775                           ;color.c: 81:  I2C_2_Master_Write(0x52 | 0x01);
  7776   002660  0E53               	movlw	83
  7777   002662  EC42  F015         	call	_I2C_2_Master_Write
  7778                           
  7779                           ;color.c: 82:  tmp=I2C_2_Master_Read(1);
  7780   002666  0E01               	movlw	1
  7781   002668  ECE9  F013         	call	_I2C_2_Master_Read
  7782   00266C  6E0F               	movwf	??_color_read_Clear^0,c
  7783   00266E  500F               	movf	??_color_read_Clear^0,w,c
  7784   002670  6E12               	movwf	color_read_Clear@tmp^0,c
  7785   002672  6A13               	clrf	(color_read_Clear@tmp+1)^0,c
  7786                           
  7787                           ;color.c: 83:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7788   002674  0E00               	movlw	0
  7789   002676  ECE9  F013         	call	_I2C_2_Master_Read
  7790   00267A  6E0F               	movwf	??_color_read_Clear^0,c
  7791   00267C  500F               	movf	??_color_read_Clear^0,w,c
  7792   00267E  6E11               	movwf	(??_color_read_Clear+2)^0,c
  7793   002680  6A10               	clrf	(??_color_read_Clear+1)^0,c
  7794   002682  5012               	movf	color_read_Clear@tmp^0,w,c
  7795   002684  1010               	iorwf	(??_color_read_Clear+1)^0,w,c
  7796   002686  6E12               	movwf	color_read_Clear@tmp^0,c
  7797   002688  5013               	movf	(color_read_Clear@tmp+1)^0,w,c
  7798   00268A  1011               	iorwf	(??_color_read_Clear+2)^0,w,c
  7799   00268C  6E13               	movwf	(color_read_Clear@tmp+1)^0,c
  7800                           
  7801                           ;color.c: 84:  I2C_2_Master_Stop();
  7802   00268E  EC53  F015         	call	_I2C_2_Master_Stop	;wreg free
  7803   002692                     
  7804                           ;color.c: 85:  return tmp;
  7805   002692  C012  F00D         	movff	color_read_Clear@tmp,?_color_read_Clear
  7806   002696  C013  F00E         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  7807   00269A  0012               	return		;funcret
  7808   00269C                     __end_of_color_read_Clear:
  7809                           	callstack 0
  7810                           
  7811 ;; *************** function _color_read_Blue *****************
  7812 ;; Defined at:
  7813 ;;		line 60 in file "color.c"
  7814 ;; Parameters:    Size  Location     Type
  7815 ;;		None
  7816 ;; Auto vars:     Size  Location     Type
  7817 ;;  tmp             2   17[COMRAM] unsigned int 
  7818 ;; Return value:  Size  Location     Type
  7819 ;;                  2   12[COMRAM] unsigned int 
  7820 ;; Registers used:
  7821 ;;		wreg, status,2, status,0, cstack
  7822 ;; Tracked objects:
  7823 ;;		On entry : 0/0
  7824 ;;		On exit  : 0/0
  7825 ;;		Unchanged: 0/0
  7826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7827 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7828 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7829 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7830 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7831 ;;Total ram usage:        7 bytes
  7832 ;; Hardware stack levels used: 1
  7833 ;; Hardware stack levels required when called: 9
  7834 ;; This function calls:
  7835 ;;		_I2C_2_Master_Read
  7836 ;;		_I2C_2_Master_RepStart
  7837 ;;		_I2C_2_Master_Start
  7838 ;;		_I2C_2_Master_Stop
  7839 ;;		_I2C_2_Master_Write
  7840 ;; This function is called by:
  7841 ;;		_Update_RGBC
  7842 ;; This function uses a non-reentrant model
  7843 ;;
  7844                           
  7845                           	psect	text40
  7846   00269C                     __ptext40:
  7847                           	callstack 0
  7848   00269C                     _color_read_Blue:
  7849                           	callstack 20
  7850   00269C                     
  7851                           ;color.c: 62:  unsigned int tmp;;color.c: 63:  I2C_2_Master_Start();
  7852   00269C  EC58  F015         	call	_I2C_2_Master_Start	;wreg free
  7853                           
  7854                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x00);
  7855   0026A0  0E52               	movlw	82
  7856   0026A2  EC42  F015         	call	_I2C_2_Master_Write
  7857                           
  7858                           ;color.c: 65:  I2C_2_Master_Write(0xA0 | 0x1A);
  7859   0026A6  0EBA               	movlw	186
  7860   0026A8  EC42  F015         	call	_I2C_2_Master_Write
  7861                           
  7862                           ;color.c: 66:  I2C_2_Master_RepStart();
  7863   0026AC  EC4E  F015         	call	_I2C_2_Master_RepStart	;wreg free
  7864                           
  7865                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x01);
  7866   0026B0  0E53               	movlw	83
  7867   0026B2  EC42  F015         	call	_I2C_2_Master_Write
  7868                           
  7869                           ;color.c: 68:  tmp=I2C_2_Master_Read(1);
  7870   0026B6  0E01               	movlw	1
  7871   0026B8  ECE9  F013         	call	_I2C_2_Master_Read
  7872   0026BC  6E0F               	movwf	??_color_read_Blue^0,c
  7873   0026BE  500F               	movf	??_color_read_Blue^0,w,c
  7874   0026C0  6E12               	movwf	color_read_Blue@tmp^0,c
  7875   0026C2  6A13               	clrf	(color_read_Blue@tmp+1)^0,c
  7876                           
  7877                           ;color.c: 69:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  7878   0026C4  0E00               	movlw	0
  7879   0026C6  ECE9  F013         	call	_I2C_2_Master_Read
  7880   0026CA  6E0F               	movwf	??_color_read_Blue^0,c
  7881   0026CC  500F               	movf	??_color_read_Blue^0,w,c
  7882   0026CE  6E11               	movwf	(??_color_read_Blue+2)^0,c
  7883   0026D0  6A10               	clrf	(??_color_read_Blue+1)^0,c
  7884   0026D2  5012               	movf	color_read_Blue@tmp^0,w,c
  7885   0026D4  1010               	iorwf	(??_color_read_Blue+1)^0,w,c
  7886   0026D6  6E12               	movwf	color_read_Blue@tmp^0,c
  7887   0026D8  5013               	movf	(color_read_Blue@tmp+1)^0,w,c
  7888   0026DA  1011               	iorwf	(??_color_read_Blue+2)^0,w,c
  7889   0026DC  6E13               	movwf	(color_read_Blue@tmp+1)^0,c
  7890                           
  7891                           ;color.c: 70:  I2C_2_Master_Stop();
  7892   0026DE  EC53  F015         	call	_I2C_2_Master_Stop	;wreg free
  7893   0026E2                     
  7894                           ;color.c: 71:  return tmp;
  7895   0026E2  C012  F00D         	movff	color_read_Blue@tmp,?_color_read_Blue
  7896   0026E6  C013  F00E         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  7897   0026EA  0012               	return		;funcret
  7898   0026EC                     __end_of_color_read_Blue:
  7899                           	callstack 0
  7900                           
  7901 ;; *************** function _I2C_2_Master_RepStart *****************
  7902 ;; Defined at:
  7903 ;;		line 33 in file "i2c.c"
  7904 ;; Parameters:    Size  Location     Type
  7905 ;;		None
  7906 ;; Auto vars:     Size  Location     Type
  7907 ;;		None
  7908 ;; Return value:  Size  Location     Type
  7909 ;;                  1    wreg      void 
  7910 ;; Registers used:
  7911 ;;		wreg, status,2, status,0, cstack
  7912 ;; Tracked objects:
  7913 ;;		On entry : 0/0
  7914 ;;		On exit  : 0/0
  7915 ;;		Unchanged: 0/0
  7916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7921 ;;Total ram usage:        0 bytes
  7922 ;; Hardware stack levels used: 1
  7923 ;; Hardware stack levels required when called: 8
  7924 ;; This function calls:
  7925 ;;		_I2C_2_Master_Idle
  7926 ;; This function is called by:
  7927 ;;		_color_read_Red
  7928 ;;		_color_read_Green
  7929 ;;		_color_read_Blue
  7930 ;;		_color_read_Clear
  7931 ;; This function uses a non-reentrant model
  7932 ;;
  7933                           
  7934                           	psect	text41
  7935   002A9C                     __ptext41:
  7936                           	callstack 0
  7937   002A9C                     _I2C_2_Master_RepStart:
  7938                           	callstack 20
  7939   002A9C                     
  7940                           ;i2c.c: 35:   I2C_2_Master_Idle();
  7941   002A9C  EC6E  F014         	call	_I2C_2_Master_Idle	;wreg free
  7942   002AA0                     
  7943                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  7944   002AA0  010E               	movlb	14	; () banked
  7945   002AA2  83DA               	bsf	218,1,b	;volatile
  7946   002AA4                     
  7947                           ; BSR set to: 14
  7948   002AA4  0012               	return		;funcret
  7949   002AA6                     __end_of_I2C_2_Master_RepStart:
  7950                           	callstack 0
  7951                           
  7952 ;; *************** function _I2C_2_Master_Read *****************
  7953 ;; Defined at:
  7954 ;;		line 51 in file "i2c.c"
  7955 ;; Parameters:    Size  Location     Type
  7956 ;;  ack             1    wreg     unsigned char 
  7957 ;; Auto vars:     Size  Location     Type
  7958 ;;  ack             1   10[COMRAM] unsigned char 
  7959 ;;  tmp             1   11[COMRAM] unsigned char 
  7960 ;; Return value:  Size  Location     Type
  7961 ;;                  1    wreg      unsigned char 
  7962 ;; Registers used:
  7963 ;;		wreg, status,2, status,0, cstack
  7964 ;; Tracked objects:
  7965 ;;		On entry : 0/0
  7966 ;;		On exit  : 0/0
  7967 ;;		Unchanged: 0/0
  7968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7970 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7971 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7972 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7973 ;;Total ram usage:        3 bytes
  7974 ;; Hardware stack levels used: 1
  7975 ;; Hardware stack levels required when called: 8
  7976 ;; This function calls:
  7977 ;;		_I2C_2_Master_Idle
  7978 ;; This function is called by:
  7979 ;;		_color_read_Red
  7980 ;;		_color_read_Green
  7981 ;;		_color_read_Blue
  7982 ;;		_color_read_Clear
  7983 ;; This function uses a non-reentrant model
  7984 ;;
  7985                           
  7986                           	psect	text42
  7987   0027D2                     __ptext42:
  7988                           	callstack 0
  7989   0027D2                     _I2C_2_Master_Read:
  7990                           	callstack 20
  7991                           
  7992                           ; BSR set to: 14
  7993                           ;incstack = 0
  7994                           ;I2C_2_Master_Read@ack stored from wreg
  7995   0027D2  6E0B               	movwf	I2C_2_Master_Read@ack^0,c
  7996   0027D4                     
  7997                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  7998   0027D4  EC6E  F014         	call	_I2C_2_Master_Idle	;wreg free
  7999   0027D8                     
  8000                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  8001   0027D8  010E               	movlb	14	; () banked
  8002   0027DA  87DA               	bsf	218,3,b	;volatile
  8003                           
  8004                           ;i2c.c: 56:   I2C_2_Master_Idle();
  8005   0027DC  EC6E  F014         	call	_I2C_2_Master_Idle	;wreg free
  8006   0027E0                     
  8007                           ;i2c.c: 57:   tmp = SSP2BUF;
  8008   0027E0  CED5 F00C          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  8009                           
  8010                           ;i2c.c: 58:   I2C_2_Master_Idle();
  8011   0027E4  EC6E  F014         	call	_I2C_2_Master_Idle	;wreg free
  8012   0027E8                     
  8013                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  8014   0027E8  500B               	movf	I2C_2_Master_Read@ack^0,w,c
  8015   0027EA  B4D8               	btfsc	status,2,c
  8016   0027EC  EFFA  F013         	goto	u2361
  8017   0027F0  EFFE  F013         	goto	u2360
  8018   0027F4                     u2361:
  8019   0027F4  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  8020   0027F6  2A0A               	incf	??_I2C_2_Master_Read^0,f,c
  8021   0027F8  EFFF  F013         	goto	u2378
  8022   0027FC                     u2360:
  8023   0027FC  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  8024   0027FE                     u2378:
  8025   0027FE  3A0A               	swapf	??_I2C_2_Master_Read^0,f,c
  8026   002800  460A               	rlncf	??_I2C_2_Master_Read^0,f,c
  8027   002802  010E               	movlb	14	; () banked
  8028   002804  51DA               	movf	218,w,b	;volatile
  8029   002806  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  8030   002808  0BDF               	andlw	-33
  8031   00280A  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  8032   00280C  6FDA               	movwf	218,b	;volatile
  8033   00280E                     
  8034                           ; BSR set to: 14
  8035                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  8036   00280E  89DA               	bsf	218,4,b	;volatile
  8037   002810                     
  8038                           ; BSR set to: 14
  8039                           ;i2c.c: 61:   return tmp;
  8040   002810  500C               	movf	I2C_2_Master_Read@tmp^0,w,c
  8041   002812                     
  8042                           ; BSR set to: 14
  8043   002812  0012               	return		;funcret
  8044   002814                     __end_of_I2C_2_Master_Read:
  8045                           	callstack 0
  8046                           
  8047 ;; *************** function _Timer0_init *****************
  8048 ;; Defined at:
  8049 ;;		line 7 in file "timers.c"
  8050 ;; Parameters:    Size  Location     Type
  8051 ;;		None
  8052 ;; Auto vars:     Size  Location     Type
  8053 ;;		None
  8054 ;; Return value:  Size  Location     Type
  8055 ;;                  1    wreg      void 
  8056 ;; Registers used:
  8057 ;;		wreg, status,2
  8058 ;; Tracked objects:
  8059 ;;		On entry : 0/0
  8060 ;;		On exit  : 0/0
  8061 ;;		Unchanged: 0/0
  8062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8067 ;;Total ram usage:        0 bytes
  8068 ;; Hardware stack levels used: 1
  8069 ;; Hardware stack levels required when called: 7
  8070 ;; This function calls:
  8071 ;;		Nothing
  8072 ;; This function is called by:
  8073 ;;		_main
  8074 ;; This function uses a non-reentrant model
  8075 ;;
  8076                           
  8077                           	psect	text43
  8078   002998                     __ptext43:
  8079                           	callstack 0
  8080   002998                     _Timer0_init:
  8081                           	callstack 23
  8082   002998                     
  8083                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  8084   002998  50D6               	movf	214,w,c	;volatile
  8085   00299A  0B1F               	andlw	-225
  8086   00299C  0940               	iorlw	64
  8087   00299E  6ED6               	movwf	214,c	;volatile
  8088   0029A0                     
  8089                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  8090   0029A0  88D6               	bsf	214,4,c	;volatile
  8091                           
  8092                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
  8093   0029A2  50D6               	movf	214,w,c	;volatile
  8094   0029A4  0BF0               	andlw	-16
  8095   0029A6  0908               	iorlw	8
  8096   0029A8  6ED6               	movwf	214,c	;volatile
  8097   0029AA                     
  8098                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
  8099   0029AA  88D5               	bsf	213,4,c	;volatile
  8100                           
  8101                           ;timers.c: 15:     TMR0H = 0b00001011;
  8102   0029AC  0E0B               	movlw	11
  8103   0029AE  6ED4               	movwf	212,c	;volatile
  8104                           
  8105                           ;timers.c: 16:     TMR0L = 0b11011011;
  8106   0029B0  0EDB               	movlw	219
  8107   0029B2  6ED3               	movwf	211,c	;volatile
  8108   0029B4                     
  8109                           ;timers.c: 17:     T0CON0bits.T0EN=1;
  8110   0029B4  8ED5               	bsf	213,7,c	;volatile
  8111   0029B6  0012               	return		;funcret
  8112   0029B8                     __end_of_Timer0_init:
  8113                           	callstack 0
  8114                           
  8115 ;; *************** function _LED_init *****************
  8116 ;; Defined at:
  8117 ;;		line 7 in file "LED_Buttons.c"
  8118 ;; Parameters:    Size  Location     Type
  8119 ;;		None
  8120 ;; Auto vars:     Size  Location     Type
  8121 ;;		None
  8122 ;; Return value:  Size  Location     Type
  8123 ;;                  1    wreg      void 
  8124 ;; Registers used:
  8125 ;;		None
  8126 ;; Tracked objects:
  8127 ;;		On entry : 0/0
  8128 ;;		On exit  : 0/0
  8129 ;;		Unchanged: 0/0
  8130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8135 ;;Total ram usage:        0 bytes
  8136 ;; Hardware stack levels used: 1
  8137 ;; Hardware stack levels required when called: 7
  8138 ;; This function calls:
  8139 ;;		Nothing
  8140 ;; This function is called by:
  8141 ;;		_main
  8142 ;; This function uses a non-reentrant model
  8143 ;;
  8144                           
  8145                           	psect	text44
  8146   002A36                     __ptext44:
  8147                           	callstack 0
  8148   002A36                     _LED_init:
  8149                           	callstack 23
  8150   002A36                     
  8151                           ;LED_Buttons.c: 8:     TRISGbits.TRISG1 = 0;
  8152   002A36  9287               	bcf	135,1,c	;volatile
  8153                           
  8154                           ;LED_Buttons.c: 9:     TRISAbits.TRISA4 = 0;
  8155   002A38  9881               	bcf	129,4,c	;volatile
  8156                           
  8157                           ;LED_Buttons.c: 10:     TRISFbits.TRISF7 = 0;
  8158   002A3A  9E86               	bcf	134,7,c	;volatile
  8159                           
  8160                           ;LED_Buttons.c: 12:     LATHbits.LATH3 = 0;
  8161   002A3C  9680               	bcf	128,3,c	;volatile
  8162                           
  8163                           ;LED_Buttons.c: 13:     TRISHbits.TRISH3 = 0;
  8164   002A3E  9688               	bcf	136,3,c	;volatile
  8165                           
  8166                           ;LED_Buttons.c: 15:     LATDbits.LATD7 = 0;
  8167   002A40  9E7C               	bcf	124,7,c	;volatile
  8168                           
  8169                           ;LED_Buttons.c: 16:     TRISDbits.TRISD7 = 0;
  8170   002A42  9E84               	bcf	132,7,c	;volatile
  8171                           
  8172                           ;LED_Buttons.c: 19:     TRISFbits.TRISF2=1;
  8173   002A44  8486               	bsf	134,2,c	;volatile
  8174                           
  8175                           ;LED_Buttons.c: 20:     TRISFbits.TRISF3=1;
  8176   002A46  8686               	bsf	134,3,c	;volatile
  8177                           
  8178                           ;LED_Buttons.c: 21:     ANSELFbits.ANSELF2=0;
  8179   002A48  010E               	movlb	14	; () banked
  8180   002A4A  95B4               	bcf	180,2,b	;volatile
  8181                           
  8182                           ;LED_Buttons.c: 22:     ANSELFbits.ANSELF3=0;
  8183   002A4C  97B4               	bcf	180,3,b	;volatile
  8184   002A4E                     
  8185                           ; BSR set to: 14
  8186   002A4E  0012               	return		;funcret
  8187   002A50                     __end_of_LED_init:
  8188                           	callstack 0
  8189                           
  8190 ;; *************** function _Interrupts_init *****************
  8191 ;; Defined at:
  8192 ;;		line 12 in file "interrupts.c"
  8193 ;; Parameters:    Size  Location     Type
  8194 ;;		None
  8195 ;; Auto vars:     Size  Location     Type
  8196 ;;		None
  8197 ;; Return value:  Size  Location     Type
  8198 ;;                  1    wreg      void 
  8199 ;; Registers used:
  8200 ;;		wreg, status,2, status,0, cstack
  8201 ;; Tracked objects:
  8202 ;;		On entry : 0/0
  8203 ;;		On exit  : 0/0
  8204 ;;		Unchanged: 0/0
  8205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8210 ;;Total ram usage:        0 bytes
  8211 ;; Hardware stack levels used: 1
  8212 ;; Hardware stack levels required when called: 12
  8213 ;; This function calls:
  8214 ;;		_interrupts_clear_colorclick
  8215 ;; This function is called by:
  8216 ;;		_main
  8217 ;; This function uses a non-reentrant model
  8218 ;;
  8219                           
  8220                           	psect	text45
  8221   002A18                     __ptext45:
  8222                           	callstack 0
  8223   002A18                     _Interrupts_init:
  8224                           	callstack 18
  8225   002A18                     
  8226                           ;interrupts.c: 18:     TRISBbits.TRISB1 = 1;
  8227   002A18  8282               	bsf	130,1,c	;volatile
  8228                           
  8229                           ;interrupts.c: 19:     ANSELBbits.ANSELB1 = 0;
  8230   002A1A  010E               	movlb	14	; () banked
  8231   002A1C  939A               	bcf	154,1,b	;volatile
  8232                           
  8233                           ;interrupts.c: 21:     PIE0bits.INT1IE = 1;
  8234   002A1E  8329               	bsf	41,1,b	;volatile
  8235                           
  8236                           ;interrupts.c: 22:     IPR0bits.INT1IP = 1;
  8237   002A20  831F               	bsf	31,1,b	;volatile
  8238                           
  8239                           ;interrupts.c: 23:     INTCONbits.INT1EDG = 0;
  8240   002A22  92F2               	bcf	242,1,c	;volatile
  8241                           
  8242                           ;interrupts.c: 26:     PIE0bits.TMR0IE=1;
  8243   002A24  8B29               	bsf	41,5,b	;volatile
  8244                           
  8245                           ;interrupts.c: 27:     IPR0bits.TMR0IP = 0;
  8246   002A26  9B1F               	bcf	31,5,b	;volatile
  8247                           
  8248                           ;interrupts.c: 30:     PIE4bits.RC4IE=1;
  8249   002A28  872D               	bsf	45,3,b	;volatile
  8250   002A2A                     
  8251                           ; BSR set to: 14
  8252                           ;interrupts.c: 32:     interrupts_clear_colorclick();
  8253   002A2A  EC28  F015         	call	_interrupts_clear_colorclick	;wreg free
  8254   002A2E                     
  8255                           ;interrupts.c: 34:     INTCONbits.IPEN = 1;
  8256   002A2E  8AF2               	bsf	242,5,c	;volatile
  8257   002A30                     
  8258                           ;interrupts.c: 35:     INTCONbits.PEIE = 1;
  8259   002A30  8CF2               	bsf	242,6,c	;volatile
  8260   002A32                     
  8261                           ;interrupts.c: 36:     INTCONbits.GIE=1;
  8262   002A32  8EF2               	bsf	242,7,c	;volatile
  8263   002A34  0012               	return		;funcret
  8264   002A36                     __end_of_Interrupts_init:
  8265                           	callstack 0
  8266                           
  8267 ;; *************** function _interrupts_clear_colorclick *****************
  8268 ;; Defined at:
  8269 ;;		line 57 in file "interrupts.c"
  8270 ;; Parameters:    Size  Location     Type
  8271 ;;		None
  8272 ;; Auto vars:     Size  Location     Type
  8273 ;;		None
  8274 ;; Return value:  Size  Location     Type
  8275 ;;                  1    wreg      void 
  8276 ;; Registers used:
  8277 ;;		wreg, status,2, status,0, cstack
  8278 ;; Tracked objects:
  8279 ;;		On entry : 0/0
  8280 ;;		On exit  : 0/0
  8281 ;;		Unchanged: 0/0
  8282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8287 ;;Total ram usage:        0 bytes
  8288 ;; Hardware stack levels used: 1
  8289 ;; Hardware stack levels required when called: 11
  8290 ;; This function calls:
  8291 ;;		_I2C_2_Master_Start
  8292 ;;		_I2C_2_Master_Stop
  8293 ;;		_I2C_2_Master_Write
  8294 ;;		_init_colorclick_interrupts
  8295 ;; This function is called by:
  8296 ;;		_Interrupts_init
  8297 ;; This function uses a non-reentrant model
  8298 ;;
  8299                           
  8300                           	psect	text46
  8301   002A50                     __ptext46:
  8302                           	callstack 0
  8303   002A50                     _interrupts_clear_colorclick:
  8304                           	callstack 18
  8305   002A50                     
  8306                           ;interrupts.c: 59:     I2C_2_Master_Start();
  8307   002A50  EC58  F015         	call	_I2C_2_Master_Start	;wreg free
  8308                           
  8309                           ;interrupts.c: 60:     I2C_2_Master_Write(0x52 | 0x00);
  8310   002A54  0E52               	movlw	82
  8311   002A56  EC42  F015         	call	_I2C_2_Master_Write
  8312                           
  8313                           ;interrupts.c: 61:     I2C_2_Master_Write(0b11100110);
  8314   002A5A  0EE6               	movlw	230
  8315   002A5C  EC42  F015         	call	_I2C_2_Master_Write
  8316                           
  8317                           ;interrupts.c: 62:     I2C_2_Master_Stop();
  8318   002A60  EC53  F015         	call	_I2C_2_Master_Stop	;wreg free
  8319                           
  8320                           ;interrupts.c: 64:     init_colorclick_interrupts();
  8321   002A64  EC76  F013         	call	_init_colorclick_interrupts	;wreg free
  8322   002A68  0012               	return		;funcret
  8323   002A6A                     __end_of_interrupts_clear_colorclick:
  8324                           	callstack 0
  8325                           
  8326 ;; *************** function _init_colorclick_interrupts *****************
  8327 ;; Defined at:
  8328 ;;		line 43 in file "interrupts.c"
  8329 ;; Parameters:    Size  Location     Type
  8330 ;;		None
  8331 ;; Auto vars:     Size  Location     Type
  8332 ;;		None
  8333 ;; Return value:  Size  Location     Type
  8334 ;;                  1    wreg      void 
  8335 ;; Registers used:
  8336 ;;		wreg, status,2, status,0, cstack
  8337 ;; Tracked objects:
  8338 ;;		On entry : 0/0
  8339 ;;		On exit  : 0/0
  8340 ;;		Unchanged: 0/0
  8341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8344 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8345 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8346 ;;Total ram usage:        1 bytes
  8347 ;; Hardware stack levels used: 1
  8348 ;; Hardware stack levels required when called: 10
  8349 ;; This function calls:
  8350 ;;		_color_writetoaddr
  8351 ;; This function is called by:
  8352 ;;		_interrupts_clear_colorclick
  8353 ;; This function uses a non-reentrant model
  8354 ;;
  8355                           
  8356                           	psect	text47
  8357   0026EC                     __ptext47:
  8358                           	callstack 0
  8359   0026EC                     _init_colorclick_interrupts:
  8360                           	callstack 18
  8361   0026EC                     
  8362                           ;interrupts.c: 45:     color_writetoaddr(0x00,0b10011);
  8363   0026EC  0E13               	movlw	19
  8364   0026EE  6E0B               	movwf	color_writetoaddr@value^0,c
  8365   0026F0  0E00               	movlw	0
  8366   0026F2  ECDC  F014         	call	_color_writetoaddr
  8367   0026F6                     
  8368                           ;interrupts.c: 46:     _delay((unsigned long)((3)*(64000000/4000.0)));
  8369   0026F6  0E3F               	movlw	63
  8370   0026F8  6E0D               	movwf	??_init_colorclick_interrupts^0,c
  8371   0026FA  0E55               	movlw	85
  8372   0026FC                     u4747:
  8373   0026FC  2EE8               	decfsz	wreg,f,c
  8374   0026FE  D7FE               	bra	u4747
  8375   002700  2E0D               	decfsz	??_init_colorclick_interrupts^0,f,c
  8376   002702  D7FC               	bra	u4747
  8377   002704  F000               	nop	
  8378   002706                     
  8379                           ;interrupts.c: 48:     color_writetoaddr(0x0C,0b0100);
  8380   002706  0E04               	movlw	4
  8381   002708  6E0B               	movwf	color_writetoaddr@value^0,c
  8382   00270A  0E0C               	movlw	12
  8383   00270C  ECDC  F014         	call	_color_writetoaddr
  8384   002710                     
  8385                           ;interrupts.c: 49:     color_writetoaddr(0x04,(int_threshold_low & 0xFF));
  8386   002710  C04F  F00B         	movff	_int_threshold_low,color_writetoaddr@value
  8387   002714  0E04               	movlw	4
  8388   002716  ECDC  F014         	call	_color_writetoaddr
  8389   00271A                     
  8390                           ;interrupts.c: 50:     color_writetoaddr(0x05,(int_threshold_low >> 8));
  8391   00271A  5050               	movf	(_int_threshold_low+1)^0,w,c
  8392   00271C  6E0B               	movwf	color_writetoaddr@value^0,c
  8393   00271E  0E05               	movlw	5
  8394   002720  ECDC  F014         	call	_color_writetoaddr
  8395   002724                     
  8396                           ;interrupts.c: 51:     color_writetoaddr(0x06,(int_threshold_high & 0xFF));
  8397   002724  C0D7  F00B         	movff	_int_threshold_high,color_writetoaddr@value
  8398   002728  0E06               	movlw	6
  8399   00272A  ECDC  F014         	call	_color_writetoaddr
  8400   00272E                     
  8401                           ;interrupts.c: 52:     color_writetoaddr(0x07,(int_threshold_high >> 8));
  8402   00272E  0100               	movlb	0	; () banked
  8403   002730  51D8               	movf	(_int_threshold_high+1)& (0+255),w,b
  8404   002732  6E0B               	movwf	color_writetoaddr@value^0,c
  8405   002734  0E07               	movlw	7
  8406   002736  ECDC  F014         	call	_color_writetoaddr
  8407   00273A  0012               	return		;funcret
  8408   00273C                     __end_of_init_colorclick_interrupts:
  8409                           	callstack 0
  8410                           
  8411 ;; *************** function _color_writetoaddr *****************
  8412 ;; Defined at:
  8413 ;;		line 22 in file "color.c"
  8414 ;; Parameters:    Size  Location     Type
  8415 ;;  address         1    wreg     unsigned char 
  8416 ;;  value           1   10[COMRAM] unsigned char 
  8417 ;; Auto vars:     Size  Location     Type
  8418 ;;  address         1   11[COMRAM] unsigned char 
  8419 ;; Return value:  Size  Location     Type
  8420 ;;                  1    wreg      void 
  8421 ;; Registers used:
  8422 ;;		wreg, status,2, status,0, cstack
  8423 ;; Tracked objects:
  8424 ;;		On entry : 0/0
  8425 ;;		On exit  : 0/0
  8426 ;;		Unchanged: 0/0
  8427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8428 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8429 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8431 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8432 ;;Total ram usage:        2 bytes
  8433 ;; Hardware stack levels used: 1
  8434 ;; Hardware stack levels required when called: 9
  8435 ;; This function calls:
  8436 ;;		_I2C_2_Master_Start
  8437 ;;		_I2C_2_Master_Stop
  8438 ;;		_I2C_2_Master_Write
  8439 ;; This function is called by:
  8440 ;;		_color_click_init
  8441 ;;		_init_colorclick_interrupts
  8442 ;; This function uses a non-reentrant model
  8443 ;;
  8444                           
  8445                           	psect	text48
  8446   0029B8                     __ptext48:
  8447                           	callstack 0
  8448   0029B8                     _color_writetoaddr:
  8449                           	callstack 20
  8450                           
  8451                           ;incstack = 0
  8452                           ;color_writetoaddr@address stored from wreg
  8453   0029B8  6E0C               	movwf	color_writetoaddr@address^0,c
  8454   0029BA                     
  8455                           ;color.c: 23:     I2C_2_Master_Start();
  8456   0029BA  EC58  F015         	call	_I2C_2_Master_Start	;wreg free
  8457                           
  8458                           ;color.c: 24:     I2C_2_Master_Write(0x52 | 0x00);
  8459   0029BE  0E52               	movlw	82
  8460   0029C0  EC42  F015         	call	_I2C_2_Master_Write
  8461                           
  8462                           ;color.c: 25:     I2C_2_Master_Write(0x80 | address);
  8463   0029C4  500C               	movf	color_writetoaddr@address^0,w,c
  8464   0029C6  0980               	iorlw	128
  8465   0029C8  EC42  F015         	call	_I2C_2_Master_Write
  8466                           
  8467                           ;color.c: 26:     I2C_2_Master_Write(value);
  8468   0029CC  500B               	movf	color_writetoaddr@value^0,w,c
  8469   0029CE  EC42  F015         	call	_I2C_2_Master_Write
  8470                           
  8471                           ;color.c: 27:     I2C_2_Master_Stop();
  8472   0029D2  EC53  F015         	call	_I2C_2_Master_Stop	;wreg free
  8473   0029D6  0012               	return		;funcret
  8474   0029D8                     __end_of_color_writetoaddr:
  8475                           	callstack 0
  8476                           
  8477 ;; *************** function _I2C_2_Master_Write *****************
  8478 ;; Defined at:
  8479 ;;		line 45 in file "i2c.c"
  8480 ;; Parameters:    Size  Location     Type
  8481 ;;  data_byte       1    wreg     unsigned char 
  8482 ;; Auto vars:     Size  Location     Type
  8483 ;;  data_byte       1    9[COMRAM] unsigned char 
  8484 ;; Return value:  Size  Location     Type
  8485 ;;                  1    wreg      void 
  8486 ;; Registers used:
  8487 ;;		wreg, status,2, status,0, cstack
  8488 ;; Tracked objects:
  8489 ;;		On entry : 0/0
  8490 ;;		On exit  : 0/0
  8491 ;;		Unchanged: 0/0
  8492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8494 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8496 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8497 ;;Total ram usage:        1 bytes
  8498 ;; Hardware stack levels used: 1
  8499 ;; Hardware stack levels required when called: 8
  8500 ;; This function calls:
  8501 ;;		_I2C_2_Master_Idle
  8502 ;; This function is called by:
  8503 ;;		_color_writetoaddr
  8504 ;;		_color_read_Red
  8505 ;;		_color_read_Green
  8506 ;;		_color_read_Blue
  8507 ;;		_color_read_Clear
  8508 ;;		_interrupts_clear_colorclick
  8509 ;; This function uses a non-reentrant model
  8510 ;;
  8511                           
  8512                           	psect	text49
  8513   002A84                     __ptext49:
  8514                           	callstack 0
  8515   002A84                     _I2C_2_Master_Write:
  8516                           	callstack 20
  8517                           
  8518                           ;incstack = 0
  8519                           ;I2C_2_Master_Write@data_byte stored from wreg
  8520   002A84  6E0A               	movwf	I2C_2_Master_Write@data_byte^0,c
  8521   002A86                     
  8522                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  8523   002A86  EC6E  F014         	call	_I2C_2_Master_Idle	;wreg free
  8524   002A8A                     
  8525                           ;i2c.c: 48:   SSP2BUF = data_byte;
  8526   002A8A  C00A  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  8527   002A8E  0012               	return		;funcret
  8528   002A90                     __end_of_I2C_2_Master_Write:
  8529                           	callstack 0
  8530                           
  8531 ;; *************** function _I2C_2_Master_Stop *****************
  8532 ;; Defined at:
  8533 ;;		line 39 in file "i2c.c"
  8534 ;; Parameters:    Size  Location     Type
  8535 ;;		None
  8536 ;; Auto vars:     Size  Location     Type
  8537 ;;		None
  8538 ;; Return value:  Size  Location     Type
  8539 ;;                  1    wreg      void 
  8540 ;; Registers used:
  8541 ;;		wreg, status,2, status,0, cstack
  8542 ;; Tracked objects:
  8543 ;;		On entry : 0/0
  8544 ;;		On exit  : 0/0
  8545 ;;		Unchanged: 0/0
  8546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8551 ;;Total ram usage:        0 bytes
  8552 ;; Hardware stack levels used: 1
  8553 ;; Hardware stack levels required when called: 8
  8554 ;; This function calls:
  8555 ;;		_I2C_2_Master_Idle
  8556 ;; This function is called by:
  8557 ;;		_color_writetoaddr
  8558 ;;		_color_read_Red
  8559 ;;		_color_read_Green
  8560 ;;		_color_read_Blue
  8561 ;;		_color_read_Clear
  8562 ;;		_interrupts_clear_colorclick
  8563 ;; This function uses a non-reentrant model
  8564 ;;
  8565                           
  8566                           	psect	text50
  8567   002AA6                     __ptext50:
  8568                           	callstack 0
  8569   002AA6                     _I2C_2_Master_Stop:
  8570                           	callstack 20
  8571   002AA6                     
  8572                           ;i2c.c: 41:   I2C_2_Master_Idle();
  8573   002AA6  EC6E  F014         	call	_I2C_2_Master_Idle	;wreg free
  8574   002AAA                     
  8575                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  8576   002AAA  010E               	movlb	14	; () banked
  8577   002AAC  85DA               	bsf	218,2,b	;volatile
  8578   002AAE                     
  8579                           ; BSR set to: 14
  8580   002AAE  0012               	return		;funcret
  8581   002AB0                     __end_of_I2C_2_Master_Stop:
  8582                           	callstack 0
  8583                           
  8584 ;; *************** function _I2C_2_Master_Start *****************
  8585 ;; Defined at:
  8586 ;;		line 27 in file "i2c.c"
  8587 ;; Parameters:    Size  Location     Type
  8588 ;;		None
  8589 ;; Auto vars:     Size  Location     Type
  8590 ;;		None
  8591 ;; Return value:  Size  Location     Type
  8592 ;;                  1    wreg      void 
  8593 ;; Registers used:
  8594 ;;		wreg, status,2, status,0, cstack
  8595 ;; Tracked objects:
  8596 ;;		On entry : 0/0
  8597 ;;		On exit  : 0/0
  8598 ;;		Unchanged: 0/0
  8599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8604 ;;Total ram usage:        0 bytes
  8605 ;; Hardware stack levels used: 1
  8606 ;; Hardware stack levels required when called: 8
  8607 ;; This function calls:
  8608 ;;		_I2C_2_Master_Idle
  8609 ;; This function is called by:
  8610 ;;		_color_writetoaddr
  8611 ;;		_color_read_Red
  8612 ;;		_color_read_Green
  8613 ;;		_color_read_Blue
  8614 ;;		_color_read_Clear
  8615 ;;		_interrupts_clear_colorclick
  8616 ;; This function uses a non-reentrant model
  8617 ;;
  8618                           
  8619                           	psect	text51
  8620   002AB0                     __ptext51:
  8621                           	callstack 0
  8622   002AB0                     _I2C_2_Master_Start:
  8623                           	callstack 20
  8624   002AB0                     
  8625                           ;i2c.c: 29:   I2C_2_Master_Idle();
  8626   002AB0  EC6E  F014         	call	_I2C_2_Master_Idle	;wreg free
  8627   002AB4                     
  8628                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  8629   002AB4  010E               	movlb	14	; () banked
  8630   002AB6  81DA               	bsf	218,0,b	;volatile
  8631   002AB8                     
  8632                           ; BSR set to: 14
  8633   002AB8  0012               	return		;funcret
  8634   002ABA                     __end_of_I2C_2_Master_Start:
  8635                           	callstack 0
  8636                           
  8637 ;; *************** function _I2C_2_Master_Idle *****************
  8638 ;; Defined at:
  8639 ;;		line 22 in file "i2c.c"
  8640 ;; Parameters:    Size  Location     Type
  8641 ;;		None
  8642 ;; Auto vars:     Size  Location     Type
  8643 ;;		None
  8644 ;; Return value:  Size  Location     Type
  8645 ;;                  1    wreg      void 
  8646 ;; Registers used:
  8647 ;;		wreg, status,2, status,0
  8648 ;; Tracked objects:
  8649 ;;		On entry : 0/0
  8650 ;;		On exit  : 0/0
  8651 ;;		Unchanged: 0/0
  8652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8655 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8656 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8657 ;;Total ram usage:        1 bytes
  8658 ;; Hardware stack levels used: 1
  8659 ;; Hardware stack levels required when called: 7
  8660 ;; This function calls:
  8661 ;;		Nothing
  8662 ;; This function is called by:
  8663 ;;		_I2C_2_Master_Start
  8664 ;;		_I2C_2_Master_RepStart
  8665 ;;		_I2C_2_Master_Stop
  8666 ;;		_I2C_2_Master_Write
  8667 ;;		_I2C_2_Master_Read
  8668 ;; This function uses a non-reentrant model
  8669 ;;
  8670                           
  8671                           	psect	text52
  8672   0028DC                     __ptext52:
  8673                           	callstack 0
  8674   0028DC                     _I2C_2_Master_Idle:
  8675                           	callstack 20
  8676   0028DC                     l89:
  8677   0028DC  010E               	movlb	14	; () banked
  8678   0028DE  B5D8               	btfsc	216,2,b	;volatile
  8679   0028E0  EF74  F014         	goto	u2041
  8680   0028E4  EF76  F014         	goto	u2040
  8681   0028E8                     u2041:
  8682   0028E8  EF6E  F014         	goto	l89
  8683   0028EC                     u2040:
  8684   0028EC                     
  8685                           ; BSR set to: 14
  8686   0028EC  CEDA F009          	movff	3802,??_I2C_2_Master_Idle	;volatile
  8687   0028F0  0E1F               	movlw	31
  8688   0028F2  1609               	andwf	??_I2C_2_Master_Idle^0,f,c
  8689   0028F4  A4D8               	btfss	status,2,c
  8690   0028F6  EF7F  F014         	goto	u2051
  8691   0028FA  EF81  F014         	goto	u2050
  8692   0028FE                     u2051:
  8693   0028FE  EF6E  F014         	goto	l89
  8694   002902                     u2050:
  8695   002902                     
  8696                           ; BSR set to: 14
  8697   002902  0012               	return		;funcret
  8698   002904                     __end_of_I2C_2_Master_Idle:
  8699                           	callstack 0
  8700                           
  8701 ;; *************** function _AppendTime *****************
  8702 ;; Defined at:
  8703 ;;		line 23 in file "Memorization.c"
  8704 ;; Parameters:    Size  Location     Type
  8705 ;;  temp            2    8[COMRAM] unsigned int 
  8706 ;;  time_index      2   10[COMRAM] PTR unsigned char 
  8707 ;;		 -> time_index(1), 
  8708 ;;  time_array      2   12[COMRAM] PTR unsigned int 
  8709 ;;		 -> time_array(80), 
  8710 ;; Auto vars:     Size  Location     Type
  8711 ;;		None
  8712 ;; Return value:  Size  Location     Type
  8713 ;;                  1    wreg      void 
  8714 ;; Registers used:
  8715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8716 ;; Tracked objects:
  8717 ;;		On entry : 0/0
  8718 ;;		On exit  : 0/0
  8719 ;;		Unchanged: 0/0
  8720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8721 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8723 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8724 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8725 ;;Total ram usage:        9 bytes
  8726 ;; Hardware stack levels used: 1
  8727 ;; Hardware stack levels required when called: 7
  8728 ;; This function calls:
  8729 ;;		Nothing
  8730 ;; This function is called by:
  8731 ;;		_main
  8732 ;; This function uses a non-reentrant model
  8733 ;;
  8734                           
  8735                           	psect	text53
  8736   002880                     __ptext53:
  8737                           	callstack 0
  8738   002880                     _AppendTime:
  8739                           	callstack 23
  8740   002880                     
  8741                           ;Memorization.c: 25:     time_array[(*time_index)++] = temp;
  8742   002880  C00B  FFD9         	movff	AppendTime@time_index,fsr2l
  8743   002884  C00C  FFDA         	movff	AppendTime@time_index+1,fsr2h
  8744   002888  CFDF F00F          	movff	indf2,??_AppendTime
  8745   00288C  0E01               	movlw	1
  8746   00288E  26DF               	addwf	indf2,f,c
  8747   002890  500F               	movf	??_AppendTime^0,w,c
  8748   002892  0D02               	mullw	2
  8749   002894  CFF3 F010          	movff	prodl,??_AppendTime+1
  8750   002898  CFF4 F011          	movff	prodh,??_AppendTime+2
  8751   00289C  5010               	movf	(??_AppendTime+1)^0,w,c
  8752   00289E  240D               	addwf	AppendTime@time_array^0,w,c
  8753   0028A0  6ED9               	movwf	fsr2l,c
  8754   0028A2  5011               	movf	(??_AppendTime+2)^0,w,c
  8755   0028A4  200E               	addwfc	(AppendTime@time_array+1)^0,w,c
  8756   0028A6  6EDA               	movwf	fsr2h,c
  8757   0028A8  C009  FFDE         	movff	AppendTime@temp,postinc2
  8758   0028AC  C00A  FFDD         	movff	AppendTime@temp+1,postdec2
  8759   0028B0  0012               	return		;funcret
  8760   0028B2                     __end_of_AppendTime:
  8761                           	callstack 0
  8762                           
  8763 ;; *************** function _LowISR *****************
  8764 ;; Defined at:
  8765 ;;		line 75 in file "interrupts.c"
  8766 ;; Parameters:    Size  Location     Type
  8767 ;;		None
  8768 ;; Auto vars:     Size  Location     Type
  8769 ;;		None
  8770 ;; Return value:  Size  Location     Type
  8771 ;;                  1    wreg      void 
  8772 ;; Registers used:
  8773 ;;		wreg, status,2
  8774 ;; Tracked objects:
  8775 ;;		On entry : 0/0
  8776 ;;		On exit  : 0/0
  8777 ;;		Unchanged: 0/0
  8778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8781 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8782 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8783 ;;Total ram usage:        3 bytes
  8784 ;; Hardware stack levels used: 1
  8785 ;; Hardware stack levels required when called: 6
  8786 ;; This function calls:
  8787 ;;		Nothing
  8788 ;; This function is called by:
  8789 ;;		Interrupt level 1
  8790 ;; This function uses a non-reentrant model
  8791 ;;
  8792                           
  8793                           	psect	intcodelo
  8794   000018                     __pintcodelo:
  8795                           	callstack 0
  8796   000018                     _LowISR:
  8797                           	callstack 16
  8798                           
  8799                           ;incstack = 0
  8800   000018  8057               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  8801   00001A  CFD8 F006          	movff	status,??_LowISR
  8802   00001E  CFE8 F007          	movff	wreg,??_LowISR+1
  8803   000022  CFE0 F008          	movff	bsr,??_LowISR+2
  8804   000026                     
  8805                           ;interrupts.c: 78:     if(PIR0bits.TMR0IF){
  8806   000026  010E               	movlb	14	; () banked
  8807   000028  AB33               	btfss	51,5,b	;volatile
  8808   00002A  EF19  F000         	goto	i1u378_21
  8809   00002E  EF1B  F000         	goto	i1u378_20
  8810   000032                     i1u378_21:
  8811   000032  EF24  F000         	goto	i1l334
  8812   000036                     i1u378_20:
  8813   000036                     
  8814                           ; BSR set to: 14
  8815                           ;interrupts.c: 79:         TMR0H = 0b00001011;
  8816   000036  0E0B               	movlw	11
  8817   000038  6ED4               	movwf	212,c	;volatile
  8818                           
  8819                           ;interrupts.c: 80:         TMR0L = 0b11011011;
  8820   00003A  0EDB               	movlw	219
  8821   00003C  6ED3               	movwf	211,c	;volatile
  8822                           
  8823                           ;interrupts.c: 81:         tmr_ovf = 1;
  8824   00003E  0E01               	movlw	1
  8825   000040  0100               	movlb	0	; () banked
  8826   000042  6F75               	movwf	_tmr_ovf& (0+255),b
  8827   000044                     
  8828                           ; BSR set to: 0
  8829                           ;interrupts.c: 82:         PIR0bits.TMR0IF=0;
  8830   000044  010E               	movlb	14	; () banked
  8831   000046  9B33               	bcf	51,5,b	;volatile
  8832   000048                     i1l334:
  8833                           
  8834                           ; BSR set to: 14
  8835   000048  C008  FFE0         	movff	??_LowISR+2,bsr
  8836   00004C  C007  FFE8         	movff	??_LowISR+1,wreg
  8837   000050  C006  FFD8         	movff	??_LowISR,status
  8838   000054  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  8839   000056  0010               	retfie	
  8840   000058                     __end_of_LowISR:
  8841                           	callstack 0
  8842                           
  8843 ;; *************** function _HighISR *****************
  8844 ;; Defined at:
  8845 ;;		line 89 in file "interrupts.c"
  8846 ;; Parameters:    Size  Location     Type
  8847 ;;		None
  8848 ;; Auto vars:     Size  Location     Type
  8849 ;;		None
  8850 ;; Return value:  Size  Location     Type
  8851 ;;                  1    wreg      void 
  8852 ;; Registers used:
  8853 ;;		wreg, status,2, status,0, cstack
  8854 ;; Tracked objects:
  8855 ;;		On entry : 0/0
  8856 ;;		On exit  : 0/0
  8857 ;;		Unchanged: 0/0
  8858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8863 ;;Total ram usage:        0 bytes
  8864 ;; Hardware stack levels used: 1
  8865 ;; Hardware stack levels required when called: 5
  8866 ;; This function calls:
  8867 ;;		i2_interrupts_clear_colorclick
  8868 ;; This function is called by:
  8869 ;;		Interrupt level 2
  8870 ;; This function uses a non-reentrant model
  8871 ;;
  8872                           
  8873                           	psect	intcode
  8874   000008                     __pintcode:
  8875                           	callstack 0
  8876   000008                     _HighISR:
  8877                           	callstack 16
  8878                           
  8879                           ; BSR set to: 14
  8880                           ;incstack = 0
  8881   000008  8257               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8882   00000A  EFEC  F014         	goto	int_func
  8883                           
  8884                           	psect	intcode_body
  8885   0029D8                     __pintcode_body:
  8886                           	callstack 16
  8887   0029D8                     int_func:
  8888                           	callstack 16
  8889   0029D8                     
  8890                           ;interrupts.c: 116:     if(PIR0bits.INT1IF){
  8891   0029D8  010E               	movlb	14	; () banked
  8892   0029DA  A333               	btfss	51,1,b	;volatile
  8893   0029DC  EFF2  F014         	goto	i2u379_41
  8894   0029E0  EFF4  F014         	goto	i2u379_40
  8895   0029E4                     i2u379_41:
  8896   0029E4  EFFA  F014         	goto	i2l342
  8897   0029E8                     i2u379_40:
  8898   0029E8                     
  8899                           ; BSR set to: 14
  8900                           ;interrupts.c: 117:         color_flag = 1;
  8901   0029E8  0E01               	movlw	1
  8902   0029EA  6E55               	movwf	_color_flag^0,c
  8903   0029EC                     
  8904                           ; BSR set to: 14
  8905                           ;interrupts.c: 119:         interrupts_clear_colorclick();
  8906   0029EC  EC35  F015         	call	i2_interrupts_clear_colorclick	;wreg free
  8907   0029F0                     
  8908                           ;interrupts.c: 120:         PIR0bits.INT1IF = 0;
  8909   0029F0  010E               	movlb	14	; () banked
  8910   0029F2  9333               	bcf	51,1,b	;volatile
  8911   0029F4                     i2l342:
  8912                           
  8913                           ; BSR set to: 14
  8914   0029F4  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8915   0029F6  0011               	retfie		f
  8916   0029F8                     __end_of_HighISR:
  8917                           	callstack 0
  8918                           
  8919 ;; *************** function i2_interrupts_clear_colorclick *****************
  8920 ;; Defined at:
  8921 ;;		line 57 in file "interrupts.c"
  8922 ;; Parameters:    Size  Location     Type
  8923 ;;		None
  8924 ;; Auto vars:     Size  Location     Type
  8925 ;;		None
  8926 ;; Return value:  Size  Location     Type
  8927 ;;                  1    wreg      void 
  8928 ;; Registers used:
  8929 ;;		wreg, status,2, status,0, cstack
  8930 ;; Tracked objects:
  8931 ;;		On entry : 0/0
  8932 ;;		On exit  : 0/0
  8933 ;;		Unchanged: 0/0
  8934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8939 ;;Total ram usage:        0 bytes
  8940 ;; Hardware stack levels used: 1
  8941 ;; Hardware stack levels required when called: 4
  8942 ;; This function calls:
  8943 ;;		i2_I2C_2_Master_Start
  8944 ;;		i2_I2C_2_Master_Stop
  8945 ;;		i2_I2C_2_Master_Write
  8946 ;;		i2_init_colorclick_interrupts
  8947 ;; This function is called by:
  8948 ;;		_HighISR
  8949 ;; This function uses a non-reentrant model
  8950 ;;
  8951                           
  8952                           	psect	text56
  8953   002A6A                     __ptext56:
  8954                           	callstack 0
  8955   002A6A                     i2_interrupts_clear_colorclick:
  8956                           	callstack 16
  8957   002A6A                     
  8958                           ;interrupts.c: 59:     I2C_2_Master_Start();
  8959   002A6A  EC62  F015         	call	i2_I2C_2_Master_Start	;wreg free
  8960                           
  8961                           ;interrupts.c: 60:     I2C_2_Master_Write(0x52 | 0x00);
  8962   002A6E  0E52               	movlw	82
  8963   002A70  EC48  F015         	call	i2_I2C_2_Master_Write
  8964                           
  8965                           ;interrupts.c: 61:     I2C_2_Master_Write(0b11100110);
  8966   002A74  0EE6               	movlw	230
  8967   002A76  EC48  F015         	call	i2_I2C_2_Master_Write
  8968                           
  8969                           ;interrupts.c: 62:     I2C_2_Master_Stop();
  8970   002A7A  EC5D  F015         	call	i2_I2C_2_Master_Stop	;wreg free
  8971                           
  8972                           ;interrupts.c: 64:     init_colorclick_interrupts();
  8973   002A7E  EC9E  F013         	call	i2_init_colorclick_interrupts	;wreg free
  8974   002A82  0012               	return		;funcret
  8975   002A84                     __end_ofi2_interrupts_clear_colorclick:
  8976                           	callstack 0
  8977                           
  8978 ;; *************** function i2_init_colorclick_interrupts *****************
  8979 ;; Defined at:
  8980 ;;		line 43 in file "interrupts.c"
  8981 ;; Parameters:    Size  Location     Type
  8982 ;;		None
  8983 ;; Auto vars:     Size  Location     Type
  8984 ;;		None
  8985 ;; Return value:  Size  Location     Type
  8986 ;;                  1    wreg      void 
  8987 ;; Registers used:
  8988 ;;		wreg, status,2, status,0, cstack
  8989 ;; Tracked objects:
  8990 ;;		On entry : 0/0
  8991 ;;		On exit  : 0/0
  8992 ;;		Unchanged: 0/0
  8993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8996 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8997 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8998 ;;Total ram usage:        1 bytes
  8999 ;; Hardware stack levels used: 1
  9000 ;; Hardware stack levels required when called: 3
  9001 ;; This function calls:
  9002 ;;		i2_color_writetoaddr
  9003 ;; This function is called by:
  9004 ;;		i2_interrupts_clear_colorclick
  9005 ;; This function uses a non-reentrant model
  9006 ;;
  9007                           
  9008                           	psect	text57
  9009   00273C                     __ptext57:
  9010                           	callstack 0
  9011   00273C                     i2_init_colorclick_interrupts:
  9012                           	callstack 16
  9013   00273C                     
  9014                           ;interrupts.c: 45:     color_writetoaddr(0x00,0b10011);
  9015   00273C  0E13               	movlw	19
  9016   00273E  6E03               	movwf	i2color_writetoaddr@value^0,c
  9017   002740  0E00               	movlw	0
  9018   002742  ECFC  F014         	call	i2_color_writetoaddr
  9019   002746                     
  9020                           ;interrupts.c: 46:     _delay((unsigned long)((3)*(64000000/4000.0)));
  9021   002746  0E3F               	movlw	63
  9022   002748  6E05               	movwf	??i2_init_colorclick_interrupts^0,c
  9023   00274A  0E55               	movlw	85
  9024   00274C                     i2u475_47:
  9025   00274C  2EE8               	decfsz	wreg,f,c
  9026   00274E  D7FE               	bra	i2u475_47
  9027   002750  2E05               	decfsz	??i2_init_colorclick_interrupts^0,f,c
  9028   002752  D7FC               	bra	i2u475_47
  9029   002754  F000               	nop	
  9030   002756                     
  9031                           ;interrupts.c: 48:     color_writetoaddr(0x0C,0b0100);
  9032   002756  0E04               	movlw	4
  9033   002758  6E03               	movwf	i2color_writetoaddr@value^0,c
  9034   00275A  0E0C               	movlw	12
  9035   00275C  ECFC  F014         	call	i2_color_writetoaddr
  9036   002760                     
  9037                           ;interrupts.c: 49:     color_writetoaddr(0x04,(int_threshold_low & 0xFF));
  9038   002760  C04F  F003         	movff	_int_threshold_low,i2color_writetoaddr@value
  9039   002764  0E04               	movlw	4
  9040   002766  ECFC  F014         	call	i2_color_writetoaddr
  9041   00276A                     
  9042                           ;interrupts.c: 50:     color_writetoaddr(0x05,(int_threshold_low >> 8));
  9043   00276A  5050               	movf	(_int_threshold_low+1)^0,w,c
  9044   00276C  6E03               	movwf	i2color_writetoaddr@value^0,c
  9045   00276E  0E05               	movlw	5
  9046   002770  ECFC  F014         	call	i2_color_writetoaddr
  9047   002774                     
  9048                           ;interrupts.c: 51:     color_writetoaddr(0x06,(int_threshold_high & 0xFF));
  9049   002774  C0D7  F003         	movff	_int_threshold_high,i2color_writetoaddr@value
  9050   002778  0E06               	movlw	6
  9051   00277A  ECFC  F014         	call	i2_color_writetoaddr
  9052   00277E                     
  9053                           ;interrupts.c: 52:     color_writetoaddr(0x07,(int_threshold_high >> 8));
  9054   00277E  0100               	movlb	0	; () banked
  9055   002780  51D8               	movf	(_int_threshold_high+1)& (0+255),w,b
  9056   002782  6E03               	movwf	i2color_writetoaddr@value^0,c
  9057   002784  0E07               	movlw	7
  9058   002786  ECFC  F014         	call	i2_color_writetoaddr
  9059   00278A  0012               	return		;funcret
  9060   00278C                     __end_ofi2_init_colorclick_interrupts:
  9061                           	callstack 0
  9062                           
  9063 ;; *************** function i2_color_writetoaddr *****************
  9064 ;; Defined at:
  9065 ;;		line 22 in file "color.c"
  9066 ;; Parameters:    Size  Location     Type
  9067 ;;  address         1    wreg     unsigned char 
  9068 ;;  value           1    2[COMRAM] unsigned char 
  9069 ;; Auto vars:     Size  Location     Type
  9070 ;;  address         1    3[COMRAM] unsigned char 
  9071 ;; Return value:  Size  Location     Type
  9072 ;;                  1    wreg      void 
  9073 ;; Registers used:
  9074 ;;		wreg, status,2, status,0, cstack
  9075 ;; Tracked objects:
  9076 ;;		On entry : 0/0
  9077 ;;		On exit  : 0/0
  9078 ;;		Unchanged: 0/0
  9079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9080 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9081 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9083 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9084 ;;Total ram usage:        2 bytes
  9085 ;; Hardware stack levels used: 1
  9086 ;; Hardware stack levels required when called: 2
  9087 ;; This function calls:
  9088 ;;		i2_I2C_2_Master_Start
  9089 ;;		i2_I2C_2_Master_Stop
  9090 ;;		i2_I2C_2_Master_Write
  9091 ;; This function is called by:
  9092 ;;		i2_init_colorclick_interrupts
  9093 ;; This function uses a non-reentrant model
  9094 ;;
  9095                           
  9096                           	psect	text58
  9097   0029F8                     __ptext58:
  9098                           	callstack 0
  9099   0029F8                     i2_color_writetoaddr:
  9100                           	callstack 16
  9101                           
  9102                           ;incstack = 0
  9103                           ;i2color_writetoaddr@address stored from wreg
  9104   0029F8  6E04               	movwf	i2color_writetoaddr@address^0,c
  9105   0029FA                     
  9106                           ;color.c: 23:     I2C_2_Master_Start();
  9107   0029FA  EC62  F015         	call	i2_I2C_2_Master_Start	;wreg free
  9108                           
  9109                           ;color.c: 24:     I2C_2_Master_Write(0x52 | 0x00);
  9110   0029FE  0E52               	movlw	82
  9111   002A00  EC48  F015         	call	i2_I2C_2_Master_Write
  9112                           
  9113                           ;color.c: 25:     I2C_2_Master_Write(0x80 | address);
  9114   002A04  5004               	movf	i2color_writetoaddr@address^0,w,c
  9115   002A06  0980               	iorlw	128
  9116   002A08  EC48  F015         	call	i2_I2C_2_Master_Write
  9117                           
  9118                           ;color.c: 26:     I2C_2_Master_Write(value);
  9119   002A0C  5003               	movf	i2color_writetoaddr@value^0,w,c
  9120   002A0E  EC48  F015         	call	i2_I2C_2_Master_Write
  9121                           
  9122                           ;color.c: 27:     I2C_2_Master_Stop();
  9123   002A12  EC5D  F015         	call	i2_I2C_2_Master_Stop	;wreg free
  9124   002A16  0012               	return		;funcret
  9125   002A18                     __end_ofi2_color_writetoaddr:
  9126                           	callstack 0
  9127                           
  9128 ;; *************** function i2_I2C_2_Master_Write *****************
  9129 ;; Defined at:
  9130 ;;		line 45 in file "i2c.c"
  9131 ;; Parameters:    Size  Location     Type
  9132 ;;  data_byte       1    wreg     unsigned char 
  9133 ;; Auto vars:     Size  Location     Type
  9134 ;;  data_byte       1    1[COMRAM] unsigned char 
  9135 ;; Return value:  Size  Location     Type
  9136 ;;                  1    wreg      void 
  9137 ;; Registers used:
  9138 ;;		wreg, status,2, status,0, cstack
  9139 ;; Tracked objects:
  9140 ;;		On entry : 0/0
  9141 ;;		On exit  : 0/0
  9142 ;;		Unchanged: 0/0
  9143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9145 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9147 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9148 ;;Total ram usage:        1 bytes
  9149 ;; Hardware stack levels used: 1
  9150 ;; Hardware stack levels required when called: 1
  9151 ;; This function calls:
  9152 ;;		i2_I2C_2_Master_Idle
  9153 ;; This function is called by:
  9154 ;;		i2_color_writetoaddr
  9155 ;;		i2_interrupts_clear_colorclick
  9156 ;; This function uses a non-reentrant model
  9157 ;;
  9158                           
  9159                           	psect	text59
  9160   002A90                     __ptext59:
  9161                           	callstack 0
  9162   002A90                     i2_I2C_2_Master_Write:
  9163                           	callstack 16
  9164                           
  9165                           ;incstack = 0
  9166                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  9167   002A90  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  9168   002A92                     
  9169                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  9170   002A92  EC82  F014         	call	i2_I2C_2_Master_Idle	;wreg free
  9171   002A96                     
  9172                           ;i2c.c: 48:   SSP2BUF = data_byte;
  9173   002A96  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  9174   002A9A  0012               	return		;funcret
  9175   002A9C                     __end_ofi2_I2C_2_Master_Write:
  9176                           	callstack 0
  9177                           
  9178 ;; *************** function i2_I2C_2_Master_Stop *****************
  9179 ;; Defined at:
  9180 ;;		line 39 in file "i2c.c"
  9181 ;; Parameters:    Size  Location     Type
  9182 ;;		None
  9183 ;; Auto vars:     Size  Location     Type
  9184 ;;		None
  9185 ;; Return value:  Size  Location     Type
  9186 ;;                  1    wreg      void 
  9187 ;; Registers used:
  9188 ;;		wreg, status,2, status,0, cstack
  9189 ;; Tracked objects:
  9190 ;;		On entry : 0/0
  9191 ;;		On exit  : 0/0
  9192 ;;		Unchanged: 0/0
  9193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9197 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9198 ;;Total ram usage:        0 bytes
  9199 ;; Hardware stack levels used: 1
  9200 ;; Hardware stack levels required when called: 1
  9201 ;; This function calls:
  9202 ;;		i2_I2C_2_Master_Idle
  9203 ;; This function is called by:
  9204 ;;		i2_color_writetoaddr
  9205 ;;		i2_interrupts_clear_colorclick
  9206 ;; This function uses a non-reentrant model
  9207 ;;
  9208                           
  9209                           	psect	text60
  9210   002ABA                     __ptext60:
  9211                           	callstack 0
  9212   002ABA                     i2_I2C_2_Master_Stop:
  9213                           	callstack 16
  9214   002ABA                     
  9215                           ;i2c.c: 41:   I2C_2_Master_Idle();
  9216   002ABA  EC82  F014         	call	i2_I2C_2_Master_Idle	;wreg free
  9217   002ABE                     
  9218                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  9219   002ABE  010E               	movlb	14	; () banked
  9220   002AC0  85DA               	bsf	218,2,b	;volatile
  9221   002AC2                     
  9222                           ; BSR set to: 14
  9223   002AC2  0012               	return		;funcret
  9224   002AC4                     __end_ofi2_I2C_2_Master_Stop:
  9225                           	callstack 0
  9226                           
  9227 ;; *************** function i2_I2C_2_Master_Start *****************
  9228 ;; Defined at:
  9229 ;;		line 27 in file "i2c.c"
  9230 ;; Parameters:    Size  Location     Type
  9231 ;;		None
  9232 ;; Auto vars:     Size  Location     Type
  9233 ;;		None
  9234 ;; Return value:  Size  Location     Type
  9235 ;;                  1    wreg      void 
  9236 ;; Registers used:
  9237 ;;		wreg, status,2, status,0, cstack
  9238 ;; Tracked objects:
  9239 ;;		On entry : 0/0
  9240 ;;		On exit  : 0/0
  9241 ;;		Unchanged: 0/0
  9242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9247 ;;Total ram usage:        0 bytes
  9248 ;; Hardware stack levels used: 1
  9249 ;; Hardware stack levels required when called: 1
  9250 ;; This function calls:
  9251 ;;		i2_I2C_2_Master_Idle
  9252 ;; This function is called by:
  9253 ;;		i2_color_writetoaddr
  9254 ;;		i2_interrupts_clear_colorclick
  9255 ;; This function uses a non-reentrant model
  9256 ;;
  9257                           
  9258                           	psect	text61
  9259   002AC4                     __ptext61:
  9260                           	callstack 0
  9261   002AC4                     i2_I2C_2_Master_Start:
  9262                           	callstack 16
  9263   002AC4                     
  9264                           ;i2c.c: 29:   I2C_2_Master_Idle();
  9265   002AC4  EC82  F014         	call	i2_I2C_2_Master_Idle	;wreg free
  9266   002AC8                     
  9267                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  9268   002AC8  010E               	movlb	14	; () banked
  9269   002ACA  81DA               	bsf	218,0,b	;volatile
  9270   002ACC                     
  9271                           ; BSR set to: 14
  9272   002ACC  0012               	return		;funcret
  9273   002ACE                     __end_ofi2_I2C_2_Master_Start:
  9274                           	callstack 0
  9275                           
  9276 ;; *************** function i2_I2C_2_Master_Idle *****************
  9277 ;; Defined at:
  9278 ;;		line 22 in file "i2c.c"
  9279 ;; Parameters:    Size  Location     Type
  9280 ;;		None
  9281 ;; Auto vars:     Size  Location     Type
  9282 ;;		None
  9283 ;; Return value:  Size  Location     Type
  9284 ;;                  1    wreg      void 
  9285 ;; Registers used:
  9286 ;;		wreg, status,2, status,0
  9287 ;; Tracked objects:
  9288 ;;		On entry : 0/0
  9289 ;;		On exit  : 0/0
  9290 ;;		Unchanged: 0/0
  9291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9294 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9295 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9296 ;;Total ram usage:        1 bytes
  9297 ;; Hardware stack levels used: 1
  9298 ;; This function calls:
  9299 ;;		Nothing
  9300 ;; This function is called by:
  9301 ;;		i2_I2C_2_Master_Start
  9302 ;;		i2_I2C_2_Master_Stop
  9303 ;;		i2_I2C_2_Master_Write
  9304 ;; This function uses a non-reentrant model
  9305 ;;
  9306                           
  9307                           	psect	text62
  9308   002904                     __ptext62:
  9309                           	callstack 0
  9310   002904                     i2_I2C_2_Master_Idle:
  9311                           	callstack 16
  9312   002904                     i2l89:
  9313   002904  010E               	movlb	14	; () banked
  9314   002906  B5D8               	btfsc	216,2,b	;volatile
  9315   002908  EF88  F014         	goto	i2u222_41
  9316   00290C  EF8A  F014         	goto	i2u222_40
  9317   002910                     i2u222_41:
  9318   002910  EF82  F014         	goto	i2l89
  9319   002914                     i2u222_40:
  9320   002914                     
  9321                           ; BSR set to: 14
  9322   002914  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  9323   002918  0E1F               	movlw	31
  9324   00291A  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  9325   00291C  A4D8               	btfss	status,2,c
  9326   00291E  EF93  F014         	goto	i2u223_41
  9327   002922  EF95  F014         	goto	i2u223_40
  9328   002926                     i2u223_41:
  9329   002926  EF82  F014         	goto	i2l89
  9330   00292A                     i2u223_40:
  9331   00292A                     
  9332                           ; BSR set to: 14
  9333   00292A  0012               	return		;funcret
  9334   00292C                     __end_ofi2_I2C_2_Master_Idle:
  9335                           	callstack 0
  9336   000000                     
  9337                           	psect	rparam
  9338   000000                     
  9339                           	psect	temp
  9340   000057                     btemp:
  9341                           	callstack 0
  9342   000057                     	ds	1
  9343   000000                     int$flags	set	btemp
  9344   000000                     wtemp8	set	btemp+1
  9345   000000                     ttemp5	set	btemp+1
  9346   000000                     ttemp6	set	btemp+4
  9347   000000                     ttemp7	set	btemp+8
  9348                           
  9349                           	psect	idloc
  9350                           
  9351                           ;Config register IDLOC0 @ 0x200000
  9352                           ;	unspecified, using default values
  9353   200000                     	org	2097152
  9354   200000  0FFF               	dw	4095
  9355                           
  9356                           ;Config register IDLOC1 @ 0x200002
  9357                           ;	unspecified, using default values
  9358   200002                     	org	2097154
  9359   200002  0FFF               	dw	4095
  9360                           
  9361                           ;Config register IDLOC2 @ 0x200004
  9362                           ;	unspecified, using default values
  9363   200004                     	org	2097156
  9364   200004  0FFF               	dw	4095
  9365                           
  9366                           ;Config register IDLOC3 @ 0x200006
  9367                           ;	unspecified, using default values
  9368   200006                     	org	2097158
  9369   200006  0FFF               	dw	4095
  9370                           
  9371                           ;Config register IDLOC4 @ 0x200008
  9372                           ;	unspecified, using default values
  9373   200008                     	org	2097160
  9374   200008  0FFF               	dw	4095
  9375                           
  9376                           ;Config register IDLOC5 @ 0x20000A
  9377                           ;	unspecified, using default values
  9378   20000A                     	org	2097162
  9379   20000A  0FFF               	dw	4095
  9380                           
  9381                           ;Config register IDLOC6 @ 0x20000C
  9382                           ;	unspecified, using default values
  9383   20000C                     	org	2097164
  9384   20000C  0FFF               	dw	4095
  9385                           
  9386                           ;Config register IDLOC7 @ 0x20000E
  9387                           ;	unspecified, using default values
  9388   20000E                     	org	2097166
  9389   20000E  0FFF               	dw	4095
  9390                           
  9391                           	psect	config
  9392                           
  9393                           ;Config register CONFIG1L @ 0x300000
  9394                           ;	External Oscillator mode Selection bits
  9395                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  9396                           ;	Power-up default value for COSC bits
  9397                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  9398   300000                     	org	3145728
  9399   300000  AA                 	db	170
  9400                           
  9401                           ;Config register CONFIG1H @ 0x300001
  9402                           ;	unspecified, using default values
  9403                           ;	Clock Out Enable bit
  9404                           ;	CLKOUTEN = 0x1, unprogrammed default
  9405                           ;	Clock Switch Enable bit
  9406                           ;	CSWEN = 0x1, unprogrammed default
  9407                           ;	Fail-Safe Clock Monitor Enable bit
  9408                           ;	FCMEN = 0x1, unprogrammed default
  9409   300001                     	org	3145729
  9410   300001  FF                 	db	255
  9411                           
  9412                           ;Config register CONFIG2L @ 0x300002
  9413                           ;	unspecified, using default values
  9414                           ;	Master Clear Enable bit
  9415                           ;	MCLRE = 0x1, unprogrammed default
  9416                           ;	Power-up Timer Enable bit
  9417                           ;	PWRTE = 0x1, unprogrammed default
  9418                           ;	Low-power BOR enable bit
  9419                           ;	LPBOREN = 0x1, unprogrammed default
  9420                           ;	Brown-out Reset Enable bits
  9421                           ;	BOREN = 0x3, unprogrammed default
  9422   300002                     	org	3145730
  9423   300002  FF                 	db	255
  9424                           
  9425                           ;Config register CONFIG2H @ 0x300003
  9426                           ;	unspecified, using default values
  9427                           ;	Brown Out Reset Voltage selection bits
  9428                           ;	BORV = 0x3, unprogrammed default
  9429                           ;	ZCD Disable bit
  9430                           ;	ZCD = 0x1, unprogrammed default
  9431                           ;	PPSLOCK bit One-Way Set Enable bit
  9432                           ;	PPS1WAY = 0x1, unprogrammed default
  9433                           ;	Stack Full/Underflow Reset Enable bit
  9434                           ;	STVREN = 0x1, unprogrammed default
  9435                           ;	Debugger Enable bit
  9436                           ;	DEBUG = 0x1, unprogrammed default
  9437                           ;	Extended Instruction Set Enable bit
  9438                           ;	XINST = 0x1, unprogrammed default
  9439   300003                     	org	3145731
  9440   300003  FF                 	db	255
  9441                           
  9442                           ;Config register CONFIG3L @ 0x300004
  9443                           ;	WDT Period Select bits
  9444                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  9445                           ;	WDT operating mode
  9446                           ;	WDTE = OFF, WDT Disabled
  9447   300004                     	org	3145732
  9448   300004  9F                 	db	159
  9449                           
  9450                           ;Config register CONFIG3H @ 0x300005
  9451                           ;	unspecified, using default values
  9452                           ;	WDT Window Select bits
  9453                           ;	WDTCWS = 0x7, unprogrammed default
  9454                           ;	WDT input clock selector
  9455                           ;	WDTCCS = 0x7, unprogrammed default
  9456   300005                     	org	3145733
  9457   300005  FF                 	db	255
  9458                           
  9459                           ;Config register CONFIG4L @ 0x300006
  9460                           ;	unspecified, using default values
  9461                           ;	Write Protection Block 0
  9462                           ;	WRT0 = 0x1, unprogrammed default
  9463                           ;	Write Protection Block 1
  9464                           ;	WRT1 = 0x1, unprogrammed default
  9465                           ;	Write Protection Block 2
  9466                           ;	WRT2 = 0x1, unprogrammed default
  9467                           ;	Write Protection Block 3
  9468                           ;	WRT3 = 0x1, unprogrammed default
  9469                           ;	Write Protection Block 3
  9470                           ;	WRT4 = 0x1, unprogrammed default
  9471                           ;	Write Protection Block 3
  9472                           ;	WRT5 = 0x1, unprogrammed default
  9473                           ;	Write Protection Block 3
  9474                           ;	WRT6 = 0x1, unprogrammed default
  9475                           ;	Write Protection Block 3
  9476                           ;	WRT7 = 0x1, unprogrammed default
  9477   300006                     	org	3145734
  9478   300006  FF                 	db	255
  9479                           
  9480                           ;Config register CONFIG4H @ 0x300007
  9481                           ;	unspecified, using default values
  9482                           ;	Configuration Register Write Protection bit
  9483                           ;	WRTC = 0x1, unprogrammed default
  9484                           ;	Boot Block Write Protection bit
  9485                           ;	WRTB = 0x1, unprogrammed default
  9486                           ;	Data EEPROM Write Protection bit
  9487                           ;	WRTD = 0x1, unprogrammed default
  9488                           ;	Scanner Enable bit
  9489                           ;	SCANE = 0x1, unprogrammed default
  9490                           ;	Low Voltage Programming Enable bit
  9491                           ;	LVP = 0x1, unprogrammed default
  9492   300007                     	org	3145735
  9493   300007  FF                 	db	255
  9494                           
  9495                           ;Config register CONFIG5L @ 0x300008
  9496                           ;	unspecified, using default values
  9497                           ;	UserNVM Program Memory Code Protection bit
  9498                           ;	CP = 0x1, unprogrammed default
  9499                           ;	DataNVM Memory Code Protection bit
  9500                           ;	CPD = 0x1, unprogrammed default
  9501   300008                     	org	3145736
  9502   300008  FF                 	db	255
  9503                           
  9504                           ;Config register CONFIG5H @ 0x300009
  9505                           ;	unspecified, using default values
  9506   300009                     	org	3145737
  9507   300009  FF                 	db	255
  9508                           
  9509                           ;Config register CONFIG6L @ 0x30000A
  9510                           ;	unspecified, using default values
  9511                           ;	Table Read Protection Block 0
  9512                           ;	EBTR0 = 0x1, unprogrammed default
  9513                           ;	Table Read Protection Block 1
  9514                           ;	EBTR1 = 0x1, unprogrammed default
  9515                           ;	Table Read Protection Block 2
  9516                           ;	EBTR2 = 0x1, unprogrammed default
  9517                           ;	Table Read Protection Block 3
  9518                           ;	EBTR3 = 0x1, unprogrammed default
  9519                           ;	Table Read Protection Block 4
  9520                           ;	EBTR4 = 0x1, unprogrammed default
  9521                           ;	Table Read Protection Block 5
  9522                           ;	EBTR5 = 0x1, unprogrammed default
  9523                           ;	Table Read Protection Block 6
  9524                           ;	EBTR6 = 0x1, unprogrammed default
  9525                           ;	Table Read Protection Block 7
  9526                           ;	EBTR7 = 0x1, unprogrammed default
  9527   30000A                     	org	3145738
  9528   30000A  FF                 	db	255
  9529                           
  9530                           ;Config register CONFIG6H @ 0x30000B
  9531                           ;	unspecified, using default values
  9532                           ;	Boot Block Table Read Protection bit
  9533                           ;	EBTRB = 0x1, unprogrammed default
  9534   30000B                     	org	3145739
  9535   30000B  FF                 	db	255
  9536                           tosu	equ	0xFFF
  9537                           tosh	equ	0xFFE
  9538                           tosl	equ	0xFFD
  9539                           stkptr	equ	0xFFC
  9540                           pclatu	equ	0xFFB
  9541                           pclath	equ	0xFFA
  9542                           pcl	equ	0xFF9
  9543                           tblptru	equ	0xFF8
  9544                           tblptrh	equ	0xFF7
  9545                           tblptrl	equ	0xFF6
  9546                           tablat	equ	0xFF5
  9547                           prodh	equ	0xFF4
  9548                           prodl	equ	0xFF3
  9549                           indf0	equ	0xFEF
  9550                           postinc0	equ	0xFEE
  9551                           postdec0	equ	0xFED
  9552                           preinc0	equ	0xFEC
  9553                           plusw0	equ	0xFEB
  9554                           fsr0h	equ	0xFEA
  9555                           fsr0l	equ	0xFE9
  9556                           wreg	equ	0xFE8
  9557                           indf1	equ	0xFE7
  9558                           postinc1	equ	0xFE6
  9559                           postdec1	equ	0xFE5
  9560                           preinc1	equ	0xFE4
  9561                           plusw1	equ	0xFE3
  9562                           fsr1h	equ	0xFE2
  9563                           fsr1l	equ	0xFE1
  9564                           bsr	equ	0xFE0
  9565                           indf2	equ	0xFDF
  9566                           postinc2	equ	0xFDE
  9567                           postdec2	equ	0xFDD
  9568                           preinc2	equ	0xFDC
  9569                           plusw2	equ	0xFDB
  9570                           fsr2h	equ	0xFDA
  9571                           fsr2l	equ	0xFD9
  9572                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         211
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     78      86
    BANK0           160     56     121
    BANK1           256      0     140
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    detect_color@lost_timer	PTR unsigned char  size(2) Largest target is 3561
		 -> RAM(DATA[3561]), 

    Return_Time@time_index	PTR unsigned char  size(2) Largest target is 1
		 -> time_index(BANK0[1]), 

    Return_Time@time_array	PTR unsigned int  size(2) Largest target is 80
		 -> time_array(BANK1[80]), 

    Return_Anti_Moves@moves_index	PTR unsigned char  size(2) Largest target is 1
		 -> moves_index(COMRAM[1]), 

    Return_Anti_Moves@anti_moves_array	PTR unsigned char  size(2) Largest target is 40
		 -> anti_moves_array(BANK0[40]), 

    AppendTime@time_index	PTR unsigned char  size(2) Largest target is 1
		 -> time_index(BANK0[1]), 

    AppendTime@time_array	PTR unsigned int  size(2) Largest target is 80
		 -> time_array(BANK1[80]), 

    AppendMoves@moves_index	PTR unsigned char  size(2) Largest target is 1
		 -> moves_index(COMRAM[1]), 

    AppendMoves@anti_moves_array	PTR unsigned char  size(2) Largest target is 40
		 -> anti_moves_array(BANK0[40]), 

    MoveBuggy@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    MoveBuggy@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    MoveBuggy@color_detected	PTR unsigned char  size(2) Largest target is 3561
		 -> RAM(DATA[3561]), 

    WhiteInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    WhiteInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    AntiPink@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    AntiPink@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    AntiYellow@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    AntiYellow@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    LightBlueInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    LightBlueInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    OrangeInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    OrangeInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    PinkInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    PinkInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    YellowInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    YellowInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    BlueInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    BlueInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    GreenInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    GreenInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    RedInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    RedInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    turnLeft135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnLeft90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    fullSpeedBackwards@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    fullSpeedBackwards@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    fullSpeedBackwards@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    fullSpeedBackwards@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    fullSpeedBackwards@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    fullSpeedBackwards@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    S1243DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlllllllll[1]), CCPR2H(BITBIGSFRhhhllll[1]), 

    S1243DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlllllllll[1]), CCPR1H(BITBIGSFRhhhllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), main@motorL(BANK0[9]), 

    detect_color@tempval	PTR struct RGB_val size(2) Largest target is 8
		 -> main@initial_color(BANK0[8]), 

    Update_RGBC@tempval	PTR struct RGB_val size(2) Largest target is 8
		 -> main@initial_color(BANK0[8]), 


Critical Paths under _main in COMRAM

    _detect_color->___fltol
    ___fltol->___flmul
    ___flmul->___fldiv
    ___fldiv->___xxtofl
    _color_click_init->_color_writetoaddr
    _WhiteInstructions->_MoveBuggy
    _MoveBuggy->_AntiPink
    _MoveBuggy->_AntiYellow
    _YellowInstructions->_turnRight90
    _PinkInstructions->_turnLeft90
    _OrangeInstructions->_turnRight135
    _turnRight135->_turnRight90
    _LightBlueInstructions->_turnLeft135
    _turnLeft135->_turnLeft90
    _AntiYellow->_BlueInstructions
    _AntiYellow->_RedInstructions
    _RedInstructions->_turnRight90
    _turnRight90->_turnRight
    _turnRight->_setMotorPWM
    _AntiPink->_BlueInstructions
    _AntiPink->_GreenInstructions
    _fullSpeedAhead->_setMotorPWM
    _GreenInstructions->_turnLeft90
    _BlueInstructions->_turnLeft90
    _turnLeft90->_turnLeft
    _turnLeft->_setMotorPWM
    _stop->_setMotorPWM
    _fullSpeedBackwards->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _Update_RGBC->_color_read_Blue
    _Update_RGBC->_color_read_Clear
    _Update_RGBC->_color_read_Green
    _Update_RGBC->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _interrupts_clear_colorclick->_init_colorclick_interrupts
    _init_colorclick_interrupts->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    i2_interrupts_clear_colorclick->i2_init_colorclick_interrupts
    i2_init_colorclick_interrupts->i2_color_writetoaddr
    i2_color_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_detect_color
    _detect_color->___fltol

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                32    32      0  490224
                                             24 BANK0     32    32      0
                         _AppendTime
                    _Interrupts_init
                           _LED_init
                          _MoveBuggy
                        _Timer0_init
                        _Update_RGBC
                  _WhiteInstructions
                         _WhiteLight
                   _color_click_init
                       _detect_color
                     _fullSpeedAhead
                    _initDCmotorsPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _detect_color                                        20    16      4    6670
                                              4 BANK0     20    16      4
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     616
                                              8 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     517
                                             72 COMRAM     6     2      4
                                              0 BANK0      4     4      0
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    1886
                                             47 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1541
                                             22 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     750
                                             12 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WhiteLight                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WhiteInstructions                                   11     7      4  248861
                                             58 COMRAM    11     7      4
                   _BlueInstructions
                          _MoveBuggy
                  _Return_Anti_Moves
                        _Return_Time
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (2) _Return_Time                                          9     5      4     219
                                              8 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (2) _Return_Anti_Moves                                    6     2      4     219
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _MoveBuggy                                            6     0      6  222680
                                             52 COMRAM     6     0      6
                           _AntiPink
                         _AntiYellow
                        _AppendMoves
                   _BlueInstructions
                  _GreenInstructions
              _LightBlueInstructions
                 _OrangeInstructions
                   _PinkInstructions
                    _RedInstructions
                 _YellowInstructions
 ---------------------------------------------------------------------------------
 (3) _YellowInstructions                                   7     3      4   16596
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                        _turnRight90
 ---------------------------------------------------------------------------------
 (3) _PinkInstructions                                     7     3      4   17204
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                         _turnLeft90
 ---------------------------------------------------------------------------------
 (3) _OrangeInstructions                                   7     3      4   24393
                                             43 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                       _turnRight135
 ---------------------------------------------------------------------------------
 (4) _turnRight135                                         5     1      4   15988
                                             38 COMRAM     5     1      4
                               _stop
                          _turnRight
                        _turnRight90
 ---------------------------------------------------------------------------------
 (3) _LightBlueInstructions                                7     3      4   25001
                                             43 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                        _turnLeft135
 ---------------------------------------------------------------------------------
 (4) _turnLeft135                                          5     1      4   16596
                                             38 COMRAM     5     1      4
                               _stop
                           _turnLeft
                         _turnLeft90
 ---------------------------------------------------------------------------------
 (3) _AppendMoves                                          6     2      4    1130
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _AntiYellow                                           7     3      4   42445
                                             45 COMRAM     7     3      4
                   _BlueInstructions
                    _RedInstructions
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (3) _RedInstructions                                      7     3      4   16748
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                        _turnRight90
 ---------------------------------------------------------------------------------
 (4) _turnRight90                                          5     1      4    8191
                                             33 COMRAM     5     1      4
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (5) _turnRight                                            6     2      4    2593
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _AntiPink                                             7     3      4   43053
                                             45 COMRAM     7     3      4
                   _BlueInstructions
                  _GreenInstructions
                     _fullSpeedAhead
                               _stop
 ---------------------------------------------------------------------------------
 (1) _fullSpeedAhead                                       6     2      4    2745
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _GreenInstructions                                    7     3      4   17356
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                         _turnLeft90
 ---------------------------------------------------------------------------------
 (3) _BlueInstructions                                     7     3      4   17704
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                         _turnLeft90
 ---------------------------------------------------------------------------------
 (4) _turnLeft90                                           5     1      4    8799
                                             33 COMRAM     5     1      4
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (5) _turnLeft                                             6     2      4    2593
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _stop                                                 5     1      4    4873
                                             27 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (4) _fullSpeedBackwards                                   6     2      4    3201
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    1829
                                             21 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                             14 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Update_RGBC                                          2     0      2     616
                                             19 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              9 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0     772
        _interrupts_clear_colorclick
 ---------------------------------------------------------------------------------
 (2) _interrupts_clear_colorclick                          0     0      0     772
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
         _init_colorclick_interrupts
 ---------------------------------------------------------------------------------
 (3) _init_colorclick_interrupts                           1     1      0     750
                                             12 COMRAM     1     1      0
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     750
                                             10 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              9 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _AppendTime                                           9     3      6     522
                                              8 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _LowISR                                               3     3      0       0
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _HighISR                                             0     0      0     244
      i2_interrupts_clear_colorclick
 ---------------------------------------------------------------------------------
 (11) i2_interrupts_clear_colorclick                       0     0      0     244
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
       i2_init_colorclick_interrupts
 ---------------------------------------------------------------------------------
 (12) i2_init_colorclick_interrupts                        1     1      0     222
                                              4 COMRAM     1     1      0
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (13) i2_color_writetoaddr                                 2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (14) i2_I2C_2_Master_Write                                1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (14) i2_I2C_2_Master_Stop                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (14) i2_I2C_2_Master_Start                                0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (15) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AppendTime
   _Interrupts_init
     _interrupts_clear_colorclick
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
       _init_colorclick_interrupts
         _color_writetoaddr
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
   _LED_init
   _MoveBuggy
     _AntiPink
       _BlueInstructions
         _fullSpeedBackwards
           _setMotorPWM
             ___lwdiv
               ___wmul (ARG)
             ___wmul
         _stop
           _setMotorPWM
         _turnLeft90
           _stop
           _turnLeft
             _setMotorPWM
       _GreenInstructions
         _fullSpeedBackwards
         _stop
         _turnLeft90
       _fullSpeedAhead
         _setMotorPWM
       _stop
     _AntiYellow
       _BlueInstructions
       _RedInstructions
         _fullSpeedBackwards
         _stop
         _turnRight90
           _stop
           _turnRight
             _setMotorPWM
       _fullSpeedAhead
       _stop
     _AppendMoves
     _BlueInstructions
     _GreenInstructions
     _LightBlueInstructions
       _fullSpeedBackwards
       _stop
       _turnLeft135
         _stop
         _turnLeft
         _turnLeft90
     _OrangeInstructions
       _fullSpeedBackwards
       _stop
       _turnRight135
         _stop
         _turnRight
         _turnRight90
     _PinkInstructions
       _fullSpeedBackwards
       _stop
       _turnLeft90
     _RedInstructions
     _YellowInstructions
       _fullSpeedBackwards
       _stop
       _turnRight90
   _Timer0_init
   _Update_RGBC
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _WhiteInstructions
     _BlueInstructions
     _MoveBuggy
     _Return_Anti_Moves
     _Return_Time
     _fullSpeedAhead
     _stop
   _WhiteLight
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
   _detect_color
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       ___fldiv (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _fullSpeedAhead
   _initDCmotorsPWM
   _stop

 _LowISR (ROOT)

 _HighISR (ROOT)
   i2_interrupts_clear_colorclick
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle
     i2_init_colorclick_interrupts
       i2_color_writetoaddr
         i2_I2C_2_Master_Start
         i2_I2C_2_Master_Stop
         i2_I2C_2_Master_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      64        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      8C       7       54.7%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     38      79       5       75.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4E      56       1       91.5%
BITBIGSFRhllllh     52      0       0      41        0.0%
BITBIGSFRhlllll     37      0       0      43        0.0%
BITBIGSFRlllhll     2A      0       0      55        0.0%
BITBIGSFRlllll      26      0       0      62        0.0%
BITBIGSFRllhh       20      0       0      46        0.0%
BITBIGSFRhhhhlh     1B      0       0      33        0.0%
BITBIGSFRhhhlll     17      0       0      38        0.0%
BITBIGSFRhhhhll     13      0       0      34        0.0%
BITBIGSFRlllhhh     11      0       0      49        0.0%
BITBIGSFRlllhhh     11      0       0      50        0.0%
BITBIGSFRhhhlhh      E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRlllhhh      C      0       0      48        0.0%
BITBIGSFRllhl        C      0       0      47        0.0%
BITBIGSFRlllhll      9      0       0      59        0.0%
BITBIGSFRhlllll      8      0       0      44        0.0%
BITBIGSFRllllh       6      0       0      61        0.0%
BITBIGSFRlllhll      6      0       0      54        0.0%
BITBIGSFRlllhll      5      0       0      57        0.0%
BITBIGSFRlllhlh      5      0       0      53        0.0%
BITBIGSFRhhhlll      5      0       0      39        0.0%
BITBIGSFRlllhll      3      0       0      56        0.0%
BITBIGSFRlllhll      3      0       0      58        0.0%
BITBIGSFRlllhhl      3      0       0      52        0.0%
BITBIGSFRhlllll      2      0       0      42        0.0%
BITBIGSFRhhhllh      2      0       0      37        0.0%
BITBIGSFRhhhlhl      1      0       0      36        0.0%
BITBIGSFRlllhhh      1      0       0      51        0.0%
BITBIGSFRhlllh       1      0       0      40        0.0%
BITBIGSFRlllhll      1      0       0      60        0.0%
BITBIGSFRlh          1      0       0      45        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     15B      63        0.0%
DATA                 0      0     15B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Mar 13 18:44:46 2023

                       _color_read_Red 25AC                           ___fldiv@aexp 002F  
                         ___fldiv@bexp 002E                           ___fldiv@sign 0027  
                      _color_read_Blue 269C                                     l21 287E  
                                   l30 264A                                     l24 29D6  
                                   l33 26EA                                     l42 0674  
                                   l27 25FA                                     l36 269A  
                                   l39 25AA                                     l59 067A  
                                   l92 2902                                     l86 28DA  
                                   l95 2AB8                                     l89 28DC  
                                   l98 2AA4                                     bsr 000FE0  
                  ___wmul@multiplicand 000B                       _anti_moves_array 0076  
                     _color_read_Clear 264C                       _color_read_Green 25FC  
           WhiteInstructions@anticolor 0043                      ??_Interrupts_init 000E  
                                  l101 2AAE                                    l104 2A8E  
                                  l107 2812                                    l203 1A2A  
                                  l132 2A4E                                    l213 193C  
                                  l135 2AD4                                    l208 184E  
                                  l321 273A                                    l233 2048  
                                  l314 2A34                                    l218 1B18  
                                  l324 2A68                                    l260 24DE  
                                  l510 1150                                    l440 29B6  
                                  l248 1F9A                                    l193 1658  
                                  l186 20D8                                    l269 254C  
                                  l198 1CD6                                    l702 284A  
                                  l607 21E4                                    l616 226A  
                                  l705 2950                                    l625 22F0  
                                  l634 1D88                                    l643 1E3A  
                                  l571 2376                                    l580 23FC  
                                  l655 1C02                                    l682 10C2  
                                  l589 1EEC                                    l693 2974  
                                  l598 215E                                    l696 28B0  
                                  l699 2996                    i2_color_writetoaddr 29F8  
                                  wreg 000FE8                           ___flmul@aexp 0041  
                         ___flmul@bexp 0042                           ___flmul@sign 003C  
                         ___flmul@temp 0047                           ___flmul@prod 0043  
                         ___fltol@exp1 004E                                   l1002 1760  
                                 l1203 2470                                   l1300 0D5C  
                                 l1301 0D4A                                   l3000 2380  
                                 l3010 23C0                                   l3002 2394  
                                 l1323 0AA4                                   l3020 1E58  
                                 l3012 23D0                                   l3004 2396  
                                 l3100 2168                                   l3030 1E94  
                                 l3022 1E5A                                   l3014 23E8  
                                 l3006 23AA                                   l3110 21A8  
                                 l3102 217C                                   l1326 0936  
                                 l1319 0740                                   l3032 1EAC  
                                 l3024 1E6E                                   l3016 1E3C  
                                 l3008 23BE                                   l3120 2202  
                                 l3112 21B8                                   l3104 217E  
                                 l3200 28B2                                   l1336 0A66  
                                 l1328 09AE                                   l1360 1390  
                                 l1329 099C                                   l3050 2AA0  
                                 l3034 1EC0                                   l3026 1E82  
                                 l3018 1E44                                   l3130 223E  
                                 l3122 2204                                   l3114 21D0  
                                 l3106 2192                                   l3210 28C8  
                                 l3202 28BC                                   l1363 14EC  
                                 l3060 280E                                   l3052 27D4  
                                 l3220 2642                                   l3212 25AC  
                                 l1196 2468                                   l3028 1E84  
                                 l3140 228A                                   l3132 2256  
                                 l3124 2218                                   l3116 21E6  
                                 l3108 21A6                                   l3300 10AE  
                                 l3204 28C2                                   l1292 0C62  
                                 l4100 005C                                   l3070 2706  
                                 l3062 2810                                   l3054 27D8  
                                 l3230 264C                                   l3214 25F2  
                                 l3150 22DC                                   l3142 229E  
                                 l3134 226C                                   l3126 222C  
                                 l3118 21EE                                   l3310 2994  
                                 l3302 2814                                   l3206 28C4  
                                 l1374 1484                                   l4110 0330  
                                 l4102 0062                                   l1287 0E3E  
                                 l1367 1428                                   l3072 2710  
                                 l3056 27E0                                   l3048 2A9C  
                                 l3224 269C                                   l3232 2692  
                                 l3160 1D20                                   l3152 1CD8  
                                 l3144 22B2                                   l3136 2274  
                                 l3128 222E                                   l3080 20DA  
                                 l3240 0E52                                   l3304 2842  
                                 l3208 28C6                                   l3400 0CC4  
                                 l3320 0AC2                                   l4200 05D0  
                                 l4120 0380                                   l4112 0340  
                                 l4104 0148                                   l1289 0C9E  
                                 l3074 271A                                   l3066 26EC  
                                 l3058 27E8                                   l3226 26E2  
                                 l3218 25FC                                   l3170 1D5C  
                                 l3162 1D22                                   l3154 1CDC  
                                 l3146 22B4                                   l3138 2288  
                                 l3090 2120                                   l3082 20E2  
                                 l3250 0EB6                                   l3242 0E66  
                                 l3410 0D02                                   l1298 0CE4  
                                 l3402 0CCA                                   l3322 0AD2  
                                 l3330 0AFC                                   l3314 0AA6  
                                 l4210 0618                                   l4202 05E0  
                                 l4130 03C8                                   l4122 0390  
                                 l4114 0350                                   l4106 0234  
                                 l3076 2724                                   l3068 26F6  
                                 l3236 2A50                                   l3180 1DBE  
                                 l3172 1D74                                   l3164 1D36  
                                 l3156 1CF0                                   l3148 22C4  
                                 l3092 2122                                   l3084 20F6  
                                 l3260 0F14                                   l3252 0EC4  
                                 l3244 0E74                                   l3308 2976  
                                 l3420 0D6C                                   l3412 0D06  
                                 l3404 0CD4                                   l3340 0B28  
                                 l3332 0B0C                                   l3324 0AE2  
                                 l3316 0AB2                                   l3500 07AC  
                                 l4220 0668                                   l4212 0628  
                                 l4204 05F0                                   l4140 0410  
                                 l4132 03D8                                   l4116 0360  
                                 l4124 0398                                   l4108 0320  
                                 l4300 1286                                   l3078 272E  
                                 l3190 1DFE                                   l3182 1DD2  
                                 l3174 1D8A                                   l3166 1D4A  
                                 l3158 1D0C                                   l3094 2132  
                                 l3086 20F8                                   l3270 0F7E  
                                 l3262 0F2E                                   l3254 0EDE  
                                 l3246 0E8E                                   l3238 0E40  
                                 l3430 0DCE                                   l3422 0D78  
                                 l3414 0D14                                   l3406 0CE2  
                                 l3342 0B38                                   l3350 0B62  
                                 l3334 0B12                                   l3326 0AF2  
                                 l3318 0AC0                                   l3510 07F6  
                                 l3502 07C4                                   l4070 16C6  
                                 l4062 1684                                   l4214 0638  
                                 l4222 0670                                   l4206 0600  
                                 l4150 0460                                   l4142 0420  
                                 l4134 03E8                                   l4126 03A8  
                                 l4118 0370                                   l4310 12DA  
                                 l4302 128E                                   l4230 10EA  
                                 l2800 1CB0                                   l3192 1E0E  
                                 l3184 1DD4                                   l3176 1D8E  
                                 l3168 1D4C                                   l3096 214A  
                                 l3088 210C                                   l3280 0FE2  
                                 l3272 0F92                                   l3264 0F42  
                                 l3256 0EF2                                   l3248 0EA2  
                                 l3440 0E2C                                   l3432 0DE4  
                                 l3424 0D86                                   l3416 0D42  
                                 l3408 0CF4                                   l3360 0BA4  
                                 l3352 0B72                                   l3344 0B48  
                                 l3336 0B18                                   l3328 0AF4  
                                 l3520 084C                                   l3512 0806  
                                 l3504 07D0                                   l4080 16F6  
                                 l4072 16D4                                   l4064 16B0  
                                 l4056 165A                                   l4216 0648  
                                 l4208 0608                                   l4160 04A8  
                                 l4144 0430                                   l4152 0468  
                                 l4136 03F8                                   l4128 03B8  
                                 l4320 1326                                   l4312 12E2  
                                 l4304 12A0                                   l4240 1110  
                                 l4232 10EE                                   l2802 1CBC  
                                 l2810 19A6                                   l3194 1E26  
                                 l3186 1DE8                                   l3178 1DA2  
                                 l3098 2160                                   l3290 1046  
                                 l3282 0FF6                                   l3274 0FA6  
                                 l3266 0F56                                   l3258 0F06  
                                 l3442 0E32                                   l3434 0DFE  
                                 l3426 0DB0                                   l3354 0B88  
                                 l3346 0B58                                   l3338 0B26  
                                 l3530 08F0                                   l3522 0868  
                                 l3514 0812                                   l3506 07DC  
                                 l4090 1720                                   l4082 1700  
                                 l4066 16B2                                   l4058 1670  
                                 l4218 0658                                   l4170 04F0  
                                 l4162 04B8                                   l4154 0478  
                                 l4146 0440                                   l4138 0400  
                                 l4322 132C                                   l4314 12F6  
                                 l4306 12C0                                   l4250 112E  
                                 l4242 1118                                   l4234 1102  
                                 l4226 10C4                                   l2740 292C  
                                 l2804 1CC8                                   l2820 1A06  
                                 l2812 19C2                                   l3188 1DFC  
                                 l2900 1EF6                                   l3196 2954  
                                 l3292 1054                                   l3284 1004  
                                 l3276 0FB4                                   l3268 0F64  
                                 l3444 0E34                                   l3436 0E1A  
                                 l3428 0DB4                                   l3380 0C26  
                                 l3372 0BDC                                   l3356 0B98  
                                 l3364 0BB8                                   l3348 0B5A  
                                 l3540 0946                                   l3532 08FE  
                                 l3524 0874                                   l3516 0822  
                                 l3508 07EA                                   l3460 06A8  
                                 l3452 067C                                   l4092 1730  
                                 l4068 16C2                                   l4172 0500  
                                 l4180 0538                                   l4164 04C8  
                                 l4156 0488                                   l4148 0450  
                                 l4316 1310                                   l4308 12C6  
                                 l4260 114C                                   l4252 1132  
                                 l4244 1120                                   l4236 1108  
                                 l4228 10E6                                   l2750 2418  
                                 l2742 2948                                   l2822 1A12  
                                 l2814 19CE                                   l2806 193E  
                                 l2830 17E6                                   l2910 1F36  
                                 l2902 1F0A                                   l3294 106E  
                                 l3286 101E                                   l3278 0FCE  
                                 l3438 0E1E                                   l3390 0C6C  
                                 l3382 0C2E                                   l3374 0BF6  
                                 l3366 0BC8                                   l3358 0BA0  
                                 l3542 0954                                   l3534 091C  
                                 l3526 0890                                   l3518 083C  
                                 l3470 06E4                                   l3462 06B8  
                                 l3454 0688                                   l4094 1740  
                                 l4078 16EC                                   l3630 135A  
                                 l4190 0588                                   l4182 0548  
                                 l4174 0510                                   l4158 0498  
                                 l4166 04D0                                   l4318 1324  
                                 l4270 1190                                   l4262 115E  
                                 l4254 113A                                   l4246 1126  
                                 l4238 110C                                   l2760 2452  
                                 l2752 2420                                   l2816 19E4  
                                 l2808 199A                                   l2840 1836  
                                 l2832 17F2                                   l2824 1762  
                                 l2920 1F88                                   l2912 1F4A  
                                 l2904 1F0C                                   l3296 1082  
                                 l3288 1032                                   l3392 0C8A  
                                 l3384 0C3E                                   l3376 0C06  
                                 l3368 0BC8                                   l3552 09BE  
                                 l3560 0A06                                   l3544 0958  
                                 l3536 0926                                   l3528 08BA  
                                 l3480 071A                                   l3472 06EA  
                                 l3464 06C8                                   l3456 0696  
                                 l4096 1750                                   l4088 1714  
                                 l3640 13D2                                   l3632 13A0  
                                 l4192 0598                                   l4184 0558  
                                 l4176 0520                                   l4168 04E0  
                                 l4280 11E6                                   l4272 11B0  
                                 l4264 1162                                   l4256 1142  
                                 l4248 112A                                   l2842 2AB0  
                                 l2850 2AA6                                   l2762 245A  
                                 l2754 2428                                   l2746 23FE  
                                 l2770 150A                                   l2818 19FA  
                                 l2930 1850                                   l2834 1808  
                                 l2826 17BE                                   l2922 1F8A  
                                 l2914 1F5E                                   l2906 1F20  
                                 l3298 109A                                   l3394 0C8C  
                                 l3386 0C52                                   l3378 0C16  
                                 l3570 0A7A                                   l3562 0A20  
                                 l3554 09CA                                   l3546 0966  
                                 l3538 0934                                   l3482 072A  
                                 l3474 06F8                                   l3466 06CE  
                                 l3458 0698                                   l3650 145A  
                                 l3642 13DE                                   l3634 13B6  
                                 l3626 133C                                   l4186 0568  
                                 l4194 05A0                                   l4178 0530  
                                 l4290 123C                                   l4282 1206  
                                 l4266 1170                                   l4274 11B4  
                                 l4258 1148                                   l2844 2AB4  
                                 l2852 2AAA                                   l2764 245C  
                                 l2756 2436                                   l2748 2406  
                                 l2780 15D4                                   l2772 155E  
                                 l2860 1AB0                                   l2940 18F6  
                                 l2932 18AC                                   l2836 181E  
                                 l2828 17CA                                   l2916 1F60  
                                 l2908 1F34                                   l3900 1BCE  
                                 l3396 0C9C                                   l3388 0C60  
                                 l3572 0A88                                   l3564 0A34  
                                 l3556 09D8                                   l3548 0994  
                                 l3492 0774                                   l3484 0730  
                                 l3476 06FA                                   l3468 06DE  
                                 l3660 1498                                   l3652 1466  
                                 l3644 1410                                   l3628 134C  
                                 l4196 05B0                                   l4188 0578  
                                 l4292 1256                                   l4284 120C  
                                 l4276 11C4                                   l4268 1184  
                                 l2846 2A86                                   l2766 2462  
                                 l2758 243C                                   l2782 1618  
                                 l2774 1572                                   l2870 1B00  
                                 l2862 1ABC                                   l2854 1A2C  
                                 l2790 1C3C                                   l2942 190C  
                                 l2934 18B8                                   l2838 182A  
                                 l2918 1F74                                   l2950 2486  
                                 l3902 1BF0                                   l3398 0CAE  
                                 l3574 0A8A                                   l3566 0A4E  
                                 l3558 0A02                                   l3494 0780  
                                 l3486 0750                                   l3478 070A  
                                 l3662 14BC                                   l3654 1474  
                                 l3646 1412                                   l3638 13CA  
                                 l4198 05C0                                   l3830 205A  
                                 l4294 1258                                   l4286 1220  
                                 l4278 11D4                                   l2784 28DC  
                                 l2848 2A8A                                   l2928 29BA  
                                 l3824 2A36                                   l2776 1576  
                                 l2768 14EE                                   l2864 1AD2  
                                 l2856 1A88                                   l2792 1C48  
                                 l2880 1FCE                                   l2872 1F9C  
                                 l2944 1918                                   l2936 18D4  
                                 l2960 24CC                                   l2952 248E  
                                 l3568 0A6A                                   l3576 0A90  
                                 l3496 078A                                   l3488 0760  
                                 l3664 14CC                                   l3656 1492  
                                 l3648 141E                                   l3840 20B4  
                                 l3832 2080                                   l4296 127C  
                                 l4288 1228                                   l2786 28EC  
                                 l2778 15B8                                   l2866 1AE8  
                                 l2858 1A94                                   l2794 1C60  
                                 l2890 200E                                   l2882 1FE2  
                                 l2874 1FA4                                   l2946 1924  
                                 l2938 18E0                                   l2970 2510  
                                 l2962 24CE                                   l2954 24A2  
                                 l3826 2ACE                                   l3690 285A  
                                 l3578 0A94                                   l3498 07A0  
                                 l3666 14DA                                   l3658 1494  
                                 l3850 20D6                                   l3842 20BE  
                                 l3834 2084                                   l4298 1282  
                                 l3860 2A32                                   l3852 2A18  
                                 l2868 1AF4                                   l2796 1C6C  
                                 l2788 1C04                                   l2892 2022  
                                 l2884 1FE4                                   l2876 1FB8  
                                 l2980 22F2                                   l2972 2512  
                                 l2964 24E0                                   l2956 24A4  
                                 l2948 2472                                   l3692 286A  
                                 l3668 14DC                                   l3844 20C0  
                                 l3836 20A8                                   l3828 204A  
                                 l3854 2A2A                                   l3870 2998  
                                 l2798 1C82                                   l2894 2036  
                                 l2886 1FF8                                   l2878 1FBA  
                                 l2990 2338                                   l2982 22FA  
                                 l2974 2526                                   l2966 24F4  
                                 l2958 24B8                                   l3694 2874  
                                 l3686 284C                                   l3846 20CA  
                                 l3838 20B2                                   l3856 2A2E  
                                 l3872 29A0                                   l3696 254E  
                                 l2896 2038                                   l2888 200C  
                                 l2992 233A                                   l2984 230E  
                                 l2976 253A                                   l2968 24FC  
                                 l3880 1B1A                                   l3688 2850  
                                 l3848 20CC                                   l3858 2A30  
                                 l3874 29AA                                   l2898 1EEE  
                                 l2994 234A                                   l2986 2310  
                                 l2978 253C                                   l3890 1B72  
                                 l3882 1B32                                   l3876 29B4  
                                 l2996 2362                                   l2988 2324  
                                 l3892 1B8C                                   l3884 1B3A  
                                 l3878 2880                                   l2998 2378  
                                 l3894 1BA0                                   l3886 1B5A  
                                 l3896 1BA6                                   l3888 1B6E  
                                 l3898 1BB8                                   u2000 2436  
                                 u2001 2432                                   u2010 2452  
                                 u2011 244E                                   u2020 150A  
                                 u2100 17BE                                   u2021 1506  
                                 u2101 17BA                                   u2030 15D4  
                                 u2110 17E6                                   u2031 15D0  
                                 u2111 17E2                                   u2040 28EC  
                                 u2120 1A88                                   u2200 1F70  
                                 u3000 0966                                   u2041 28E8  
                                 u2121 1A84                                   u2201 1F6C  
                                 u3001 0962                                   u2050 2902  
                                 u2130 1AB0                                   u2210 1F9A  
                                 u3010 0994                                   u2051 28FE  
                                 u2131 1AAC                                   u2211 1F96  
                                 u3011 0990                                   u2060 1C3C  
                                 u2140 1FCA                                   u2300 2320  
                                 u3020 09AA                                   u2061 1C38  
                                 u2141 1FC6                                   u2301 231C  
                                 u3021 09A6                                   u2070 1C60  
                                 u2150 1FF4                                   u2310 234A  
                                 u3030 09BE                                   u2071 1C5C  
                                 u2151 1FF0                                   u2311 2346  
                                 u3031 09BA                                   u2080 199A  
                                 u2160 201E                                   u2320 23A6  
                                 u2240 18AC                                   u2400 218E  
                                 u3040 09D8                                   u3200 1474  
                                 u4000 0350                           _BAUD4CONbits 000EE9  
                                 u2081 1996                                   u2161 201A  
                                 u2321 23A2                                   u2241 18A8  
                                 u2401 218A                                   u3041 09D4  
                                 u3201 1470                                   u4001 034C  
                                 u2090 19C2                                   u2170 2048  
                                 u2330 23D0                                   u2250 18D4  
                                 u2410 21B8                                   u3050 0A20  
                                 u3210 1484                                   u4010 0360  
                                 u2091 19BE                                   u2171 2044  
                                 u2331 23CC                                   u2251 18D0  
                                 u2411 21B4                                   u3051 0A1C  
                                 u3211 1480                                   u4011 035C  
                                 u2340 1E6A                                   u2180 1F1C  
                                 u2260 24B4                                   u2420 2214  
                                 u2500 0E52                                   u3060 0A4E  
                                 u3220 1492                                   u4100 03F8  
                                 u4020 0370                                   u2341 1E66  
                                 u2181 1F18                                   u2261 24B0  
                                 u2421 2210                                   u2501 0E4E  
                                 u3061 0A4A                                   u3221 148E  
                                 u4101 03F4                                   u4021 036C  
                                 u2350 1E94                                   u2190 1F46  
                                 u2270 24DE                                   u2430 223E  
                                 u2510 0E74                                   u3070 0A88  
                                 u3230 14CC                                   u3150 134C  
                                 u4110 0410                                   u4030 0380  
                                 u2351 1E90                                   u2191 1F42  
                                 u2271 24DA                                   u2431 223A  
                                 u2511 0E70                                   u3071 0A84  
                                 u3231 14C8                                   u3151 1348  
                                 u4111 040C                                   u4031 037C  
                                 u2360 27FC                                   u2280 2522  
                                 u2440 229A                                   u2600 0FE2  
                                 u2520 0EA2                                   u3240 14DA  
                                 u3160 135A                                   u4200 04A8  
                                 u4120 0420                                   u4040 0390  
                                 u2361 27F4                                   u2281 251E  
                                 u2441 2296                                   u2601 0FDE  
                                 u2521 0E9E                                   u3241 14D6  
                                 u3161 1356                                   u4201 04A4  
                                 u4121 041C                                   u4041 038C  
                                 u2290 254C                                   u2450 22C4  
                                 u2610 1004                                   u2530 0EC4  
                                 u3170 13B6                                   u4210 04B8  
                                 u4130 0430                                   u4050 03A8  
                                 _T2PR 000FBC                                   u2291 2548  
                                 u2451 22C0                                   u2611 1000  
                                 u2531 0EC0                                   u3171 13B2  
                                 u4211 04B4                                   u4131 042C  
                                 u4051 03A4                                   u2460 1D32  
                                 u2380 2108                                   u2620 1032  
                                 u2540 0EF2                                   u2700 0B38  
                                 u3180 140C                                   u4300 0558  
                                 u4220 04C8                                   u4140 0440  
                                 u4060 03B8                                   u2461 1D2E  
                                 u2381 2104                                   u2621 102E  
                                 u2541 0EEE                                   u2701 0B34  
                                 u3181 1408                                   u4301 0554  
                                 u4221 04C4                                   u4141 043C  
                                 u4061 03B4                                   u2470 1D5C  
                                 u2390 2132                                   u2630 1054  
                                 u2550 0F14                                   u2710 0B48  
                                 u3190 1456                                   u4310 0568  
                                 u4230 04E0                                   u4150 0450  
                                 u4070 03C8                                   u2471 1D58  
                                 u2391 212E                                   u2631 1050  
                                 u2551 0F10                                   u2711 0B44  
                                 u3191 1452                                   u4311 0564  
                                 u4231 04DC                                   u4151 044C  
                                 u4071 03C4                                   u2480 1DE4  
                                 u2640 1082                                   u2560 0F42  
                                 u2800 0D02                                   u2720 0B88  
                                 u4400 0600                                   u4320 0578  
                                 u4240 04F0                                   u4160 0460  
                                 u4080 03D8                                   u2481 1DE0  
                                 u2641 107E                                   u2561 0F3E  
                                 u2801 0CFE                                   u2721 0B84  
                                 u4401 05FC                                   u4321 0574  
                                 u4241 04EC                                   u4161 045C  
                                 u4081 03D4                                   u2378 27FE  
                                 u2490 1E0E                                   u2650 10AE  
                                 u2570 0F64                                   u2810 0D14  
                                 u2730 0BC8                                   u4410 0618  
                                 u4330 0588                                   u4250 0500  
                                 u4170 0478                                   u4090 03E8  
                                 u2491 1E0A                                   u2651 10AA  
                                 u2571 0F60                                   u2811 0D10  
                                 u2731 0BC4                                   u4411 0614  
                                 u4331 0584                                   u4251 04FC  
                                 u4171 0474                                   u4091 03E4  
                                 u2580 0F92                                   u2820 0D42  
                                 u2740 0C3E                                   u2660 0AC0  
                                 u2900 06A8                                   u4420 0628  
                                 u4340 0598                                   u4260 0510  
                                 u4180 0488                                   u4500 11E6  
                                 u2581 0F8E                                   u2821 0D3E  
                                 u2741 0C3A                                   u2661 0ABC  
                                 u2901 06A4                                   u4421 0624  
                                 u4341 0594                                   u4261 050C  
                                 u4181 0484                                   u4501 11E2  
                                 u2590 0FB4                                   u2830 0D58  
                                 u2750 0C60                                   u2670 0AD2  
                                 u2910 06B8                                   u4430 0638  
                                 u4350 05B0                                   u4270 0520  
                                 u4190 0498                                   u4510 123C  
                                 u2591 0FB0                                   u2831 0D54  
                                 u2751 0C5C                                   u2671 0ACE  
                                 u2911 06B4                                   u4431 0634  
                                 u4351 05AC                                   u4271 051C  
                                 u4191 0494                                   u4511 1238  
                                 u2840 0D6C                                   u2760 0C8A  
                                 u2680 0AE2                                   u2920 06F8  
                                 u4440 0648                                   u4360 05C0  
                                 u4280 0530                                   u4520 12A0  
                                 u2841 0D68                                   u2761 0C86  
                                 u2681 0ADE                                   u2921 06F4  
                                 u4441 0644                                   u4361 05BC  
                                 u4281 052C                                   u4521 129C  
                                 u2850 0D86                                   u2770 0CAE  
                                 u2690 0B26                                   u2930 070A  
                                 u4450 0658                                   u4370 05D0  
                                 u4290 0548                                   u4530 12F6  
                                 u2851 0D82                                   u2771 0CAA  
                                 u2691 0B22                                   u2931 0706  
                                 u4451 0654                                   u4371 05CC  
                                 u4291 0544                                   u4531 12F2  
                                 u2860 0DCE                                   u2780 0CC4  
                                 u2940 071A                                   u4460 0668  
                                 u4380 05E0                                   u2861 0DCA  
                                 u2781 0CC0                                   u2941 0716  
                                 u4461 0664                                   u4381 05DC  
                                 u1990 2418                                   u3750 1B88  
                                 u2870 0DFE                                   u2790 0CE2  
                                 u2950 0750                                   u3910 1670  
                                 u4390 05F0                                   u4470 115E  
                                 u1991 2414                                   u4607 22CE  
                                 u3751 1B84                                   u2871 0DFA  
                                 u2791 0CDE                                   u2951 074C  
                                 u3911 166C                                   u4391 05EC  
                                 u4471 115A                                   u3760 1BB8  
                                 u2880 0E2C                                   u2960 0760  
                                 u3920 16A6                                   u4480 11C4  
                                 u4617 1CFA                                   u3761 1BB4  
                                 u2881 0E28                                   u2961 075C  
                                 u4481 11C0                                   u3770 1C02  
                                 u2970 08DA                                   u2890 0696  
                                 u3930 16D4                                   u4490 11D4  
                                 u4707 1ECA                                   u4627 1D66  
                                 u3771 1BFE                                   u2891 0692  
                                 u3931 16D0                                   u4547 1248  
                                 u4491 11D0                                   u2980 0934  
                                 u3940 16E8                                   u4717 1A1C  
                                 u4637 2354                                   u2981 0930  
                                 u3941 16E4                                   u3925 169A  
                                 u4557 1302                                   u2990 0954  
                                 u3950 1710                                   u4727 1CCE  
                                 u4647 1840                                   u4567 2860  
                                 u2991 0950                                   u2975 08D0  
                                 u3951 170C                                   i2l24 2A16  
                                 u3960 1730                                   u4737 1B0A  
                                 u4657 1DAC                                   u4577 213C  
                                 u3961 172C                                   u3970 1740  
                                 u4747 26FC                                   u4667 1E18  
                                 u4587 21C2                                   u3971 173C  
                                 u3980 0330                                   u4677 192E  
                                 u4597 2248                                   u3981 032C  
                                 u3990 0340                                   u4687 23DA  
                                 u3991 033C                                   u4697 1E9E  
                                 i2l92 292A                                   i2l95 2ACC  
                                 i2l89 2904      Return_Anti_Moves@anti_moves_array 000B  
                                 _main 10C4                    __end_of_AppendMoves 2976  
                   _YellowInstructions 20DA                                   fsr2h 000FDA  
                                 indf2 000FDF                                   fsr2l 000FD9  
                                 btemp 0057                                   _stop 1C04  
       ??i2_init_colorclick_interrupts 0005                      main@initial_color 00BD  
                                 prodh 000FF4                                   prodl 000FF3  
                                 start 0058                   ?i2_color_writetoaddr 0003  
                      ___fldiv@new_exp 0028                 __end_of_color_read_Red 25FC  
                      __end_of_HighISR 29F8                           ___param_bank 000000  
                          _turnLeft135 24E0                    ?_YellowInstructions 0027  
                          _turnRight90 1EEE                             _AntiYellow 1CD8  
                     __end_of_LED_init 2A50                          ___fltol@sign1 004D  
                           _AppendTime 2880                                  ?_main 0001  
                      __end_of___fldiv 0E40                        __end_of___flmul 0AA6  
                      __end_of___fltol 1762                                  ?_stop 001C  
                      __end_of___lwdiv 2472                                  i2l101 2AC2  
                                i1l334 0048                                  i2l104 2A9A  
                                i2l321 278A                                  i2l324 2A82  
                                i2l342 29F4                                  _TMR0H 000FD4  
                                _TMR0L 000FD3             __end_of_I2C_2_Master_Start 2ABA  
                 ??_YellowInstructions 002B             __end_of_I2C_2_Master_Write 2A90  
                     _PinkInstructions 2160                     _int_threshold_high 00D7  
                                main@b 00BA               __end_of_BlueInstructions 1EEE  
                                tablat 000FF5                                  plusw2 000FDB  
                                ttemp5 0058                                  ttemp6 005B  
                                ttemp7 005F                                  status 000FD8  
                                wtemp8 0058                    detect_color@tempval 00A3  
                ??i2_color_writetoaddr 0004                __end_of_color_read_Blue 26EC  
                _I2C_2_Master_RepStart 2A9C                   fullSpeedBackwards@mL 001C  
                 fullSpeedBackwards@mR 001E                       __end_of_AntiPink 1E3C  
                      ?_color_read_Red 000D                        __initialization 278C  
                         __end_of_main 133A                   __end_of_detect_color 067C  
                         __end_of_stop 1CD8                  _LightBlueInstructions 226C  
                    ??_RedInstructions 002B    __end_of_interrupts_clear_colorclick 2A6A  
       ?i2_interrupts_clear_colorclick 0001            _interrupts_clear_colorclick 2A50  
                               ??_main 00B7                                 ??_stop 0020  
                        __activetblptr 000000                           _turnRight135 2472  
                    _Return_Anti_Moves 2976                            _AppendMoves 2952  
                         ?_setMotorPWM 0016                                 _CCPR1H 000FAA  
                               _CCPR2H 000FA6                                 _CCPR3H 000F25  
                               _CCPR4H 000F21                     ?_Return_Anti_Moves 0009  
                               _RC0PPS 000E62                                 _RC4REG 000EE3  
                               _RE2PPS 000E74                                 _RD5PPS 000E6F  
                               _RC7PPS 000E69                                 _RE4PPS 000E76  
                               _RD6PPS 000E70                                 i1l3910 0036  
                               i2l3040 2ABA                                 i1l3912 0044  
                               i2l3042 2ABE                                 i2l3036 2AC4  
                               i2l3044 2A92                                 i1l3908 0026  
                               i2l3038 2AC8                                 i2l3046 2A96  
                               i2l3198 29FA                                 i2l2924 2904  
                               i2l2926 2914                                 i2l3680 276A  
                               i2l3672 273C                                 i2l3904 2A6A  
                               i2l3920 29F0                                 i2l3682 2774  
                               i2l3674 2746                                 i2l3914 29D8  
                               _RG6PPS 000E88                                 i2l3684 277E  
                               i2l3676 2756                                 i2l3916 29E8  
                               i2l3678 2760                                 i2l3918 29EC  
                            ??_HighISR 0006               __end_of_color_click_init 2880  
                               _RX4PPS 000E15                                 _TX4REG 000EE4  
                     __end_of___xxtofl 14EE                    ??_Return_Anti_Moves 000D  
                               _LowISR 0018                          ??_Timer0_init 0009  
                         _CCPTMRS0bits 000FAD            AppendMoves@anti_moves_array 000B  
                Return_Time@time_array 000B                  Return_Time@time_index 0009  
                               ___wmul 292C                              ??___fldiv 001F  
                            ??___flmul 0038                              ??___fltol 009F  
                            ??___lwdiv 0013                                 clear_0 27AA  
                               clear_1 27B6                                 clear_2 27C2  
                          ?_AntiYellow 002E                                 isa$std 000001  
                          ?_AppendTime 0009                          ??_Return_Time 000D  
            __end_of_Return_Anti_Moves 2998                             _WhiteLight 2ACE  
                               tblptrh 000FF7                                 tblptrl 000FF6  
                               tblptru 000FF8                                 stop@mL 001C  
                               stop@mR 001E                      ??_initDCmotorsPWM 000B  
           i2color_writetoaddr@address 0004                       __end_of_turnLeft 1A2C  
                         ___xxtofl@arg 0013                           ___xxtofl@exp 0012  
                         ___xxtofl@val 0009                          ??_Update_RGBC 0016  
                           __accesstop 0060                __end_of__initialization 27C8  
             __end_of_color_read_Clear 269C               __end_of_color_read_Green 264C  
               ?_I2C_2_Master_RepStart 0001                          ___rparam_used 000001  
                            ?_LED_init 0001                             ___fltol@f1 0049  
                     ?_color_read_Blue 000D                      _GreenInstructions 2378  
                      _Interrupts_init 2A18                         __pcstackCOMRAM 0001  
               ?_LightBlueInstructions 002C                           __pidataBANK0 2AD6  
                   ?_GreenInstructions 0027                         AppendTime@temp 0009  
                    detect_color@color 00B3                    __end_of_Timer0_init 29B8  
                          MoveBuggy@mL 0037                            MoveBuggy@mR 0039  
                  OrangeInstructions@a 0032                    ??_GreenInstructions 002B  
              MoveBuggy@color_detected 0035                              ?_AntiPink 002E  
         ??_init_colorclick_interrupts 000D                    __end_of_Return_Time 284C  
                    __end_of_MoveBuggy 10C4                             __pbssBANK0 0060  
                           __pbssBANK1 0100              __end_of_GreenInstructions 23FE  
                           ??_LED_init 0009                                ?_LowISR 0001  
                    _color_writetoaddr 29B8                           _T2CLKCONbits 000FBF  
                         ?_turnLeft135 0027                    __end_of_Update_RGBC 25AC  
                   ?_color_writetoaddr 000B                                ?___wmul 0009  
             __end_of_PinkInstructions 21E6                           ?_turnRight90 0022  
                  ??_color_writetoaddr 000C                              ?___xxtofl 0009  
                          ?_WhiteLight 0001                                _SP4BRGH 000EE6  
                              _SP4BRGL 000EE5                             ??_AntiPink 0032  
                              _SSP2ADD 000ED6                                _SSP2BUF 000ED5  
                           _color_flag 0055                           _detect_color 005C  
              __end_of_Interrupts_init 2A36                      ?_BlueInstructions 0027  
               color_writetoaddr@value 000B                       ??_color_read_Red 000F  
                              _HighISR 0008              __end_of_color_writetoaddr 29D8  
                   WhiteInstructions@a 0044                     WhiteInstructions@c 0041  
                   ??_BlueInstructions 002B                        _RedInstructions 22F2  
                   _I2C_2_Master_Start 2AB0                    i2_I2C_2_Master_Idle 2904  
                   _I2C_2_Master_Write 2A84                                __Hparam 0000  
                  i2_I2C_2_Master_Stop 2ABA                                __Lparam 0000  
                    color_read_Red@tmp 0012                            _Timer0_init 2998  
                  GreenInstructions@mL 0027                    GreenInstructions@mR 0029  
           __end_of_fullSpeedBackwards 1B1A                                ___fldiv 0AA6  
                              ___flmul 067C                                ___fltol 165A  
                  ?_I2C_2_Master_Start 0001                           turnLeft135@a 002B  
                              ___lwdiv 23FE                    ?_I2C_2_Master_Write 0001  
                         turnLeft90@mL 0022                           turnLeft90@mR 0024  
                              __pcinit 278C                                __ramtop 0E00  
                            ?_turnLeft 001C                                __ptext0 10C4  
                              __ptext1 204A                                __ptext2 005C  
                              __ptext3 133A                                __ptext4 165A  
                              __ptext5 067C                                __ptext6 0AA6  
                              __ptext7 284C                                __ptext8 28B2  
                              __ptext9 2ACE                   ?i2_I2C_2_Master_Idle 0001  
 __end_ofi2_init_colorclick_interrupts 278C           i2_init_colorclick_interrupts 273C  
                            _T2CONbits 000FBD                            _Return_Time 2814  
                           ??___xxtofl 000D                   ?i2_I2C_2_Master_Stop 0001  
                            _T2HLTbits 000FBE                         main@lost_timer 00B9  
                        _RxBufWriteCnt 0054                           ?_AppendMoves 0009  
                              _tmr_ovf 0075                   ??_I2C_2_Master_Start 000A  
                 ??_I2C_2_Master_Write 000A                         __pintcode_body 29D8  
                 end_of_initialization 27C8            __end_ofi2_color_writetoaddr 2A18  
         Return_Anti_Moves@moves_index 0009                      RedInstructions@mL 0027  
                   main@color_detected 00BC                      RedInstructions@mR 0029  
                              int_func 29D8                            _Update_RGBC 254E  
                    ?_color_click_init 0001                           turnRight90@a 0026  
           __end_of_OrangeInstructions 226C                     ??_color_click_init 000D  
                            AntiPink@a 0034                                postdec2 000FDD  
                              postinc0 000FEE                                postinc2 000FDE  
                           _time_array 013C                             _time_index 009E  
                         ??_AntiYellow 0032                        _initDCmotorsPWM 204A  
                           ??_turnLeft 0020                           ??_AppendTime 000F  
                            _PORTFbits 000F8E                     setMotorPWM@negDuty 001B  
                ??i2_I2C_2_Master_Idle 0001                      __end_of_turnRight 1850  
                ??i2_I2C_2_Master_Stop 0002                          ___xxtofl@sign 0011  
                  YellowInstructions@a 002D                              _TRISAbits 000F81  
                   setMotorPWM@posDuty 001A                              _TRISBbits 000F82  
                            _TRISCbits 000F83                              _TRISDbits 000F84  
   __end_of_init_colorclick_interrupts 273C          ?i2_init_colorclick_interrupts 0001  
           _init_colorclick_interrupts 26EC                              _TRISEbits 000F85  
                            _TRISFbits 000F86                              _TRISGbits 000F87  
                            _TRISHbits 000F88                            ___fldiv@grs 002A  
                          ___fldiv@rem 0023                     PinkInstructions@mL 0027  
                   PinkInstructions@mR 0029                       fullSpeedAhead@mL 001C  
                     fullSpeedAhead@mR 001E                __end_of_RedInstructions 2378  
             color_writetoaddr@address 000C                ??_I2C_2_Master_RepStart 000A  
                     ?_Interrupts_init 0001                            ___flmul@grs 003D  
                          _CCP1CONbits 000FAB                      ?_color_read_Clear 000D  
                         _EUSART4RXbuf 0060                           _EUSART4TXbuf 0100  
                          _CCP2CONbits 000FA7                      ?_color_read_Green 000D  
                   __end_of_AntiYellow 1D8A                            _CCP3CONbits 000F26  
                          _CCP4CONbits 000F22                     __end_of_AppendTime 28B2  
              ??_LightBlueInstructions 0030                             main@motorL 00C5  
                           main@motorR 00CE                     ??_color_read_Clear 000F  
                   ??_color_read_Green 000F                             _turnLeft90 1F9C  
                       __end_of_LowISR 0058                 AppendMoves@moves_index 0009  
                       _fullSpeedAhead 1850                         __end_of___wmul 2952  
                      AppendMoves@temp 000E                     detect_color@dist_B 00B6  
                   detect_color@dist_G 00B5                     detect_color@dist_R 00B4  
                    _int_threshold_low 004F                    color_read_Clear@tmp 0012  
                  start_initialization 278C                          _TxBufWriteCnt 0052  
                 OrangeInstructions@mL 002C                   OrangeInstructions@mR 002E  
                Return_Anti_Moves@temp 000E                              _MoveBuggy 0E40  
                  color_read_Green@tmp 0012                               ??_LowISR 0006  
              __end_of_initDCmotorsPWM 20DA                 __end_of_fullSpeedAhead 193E  
                             ??___wmul 000D                            __pdataBANK0 00D7  
        i2I2C_2_Master_Write@data_byte 0002                      ?_PinkInstructions 0027  
                   Update_RGBC@tempval 0014                     ??_PinkInstructions 002B  
         __end_ofi2_I2C_2_Master_Start 2ACE           __end_ofi2_I2C_2_Master_Write 2A9C  
                            ___fldiv@a 001B                              ___fldiv@b 0017  
                            ___flmul@a 0034                              ___flmul@b 0030  
                          __pbssCOMRAM 004F                           ??_WhiteLight 0009  
                        __pcstackBANK0 009F                   AppendTime@time_array 000D  
                 AppendTime@time_index 000B                       ?_RedInstructions 0027  
                             ?_HighISR 0001                             ?_MoveBuggy 0035  
                     ___lwdiv@dividend 000F                           ?_Timer0_init 0001  
                          ?_turnLeft90 0022                        ?_fullSpeedAhead 001C  
                   BlueInstructions@mL 0027                     BlueInstructions@mR 0029  
                            __pintcode 0008                     __end_of_WhiteLight 2AD6  
                             ?___fldiv 0017                               ?___flmul 0030  
                             ?___fltol 0049                               ?___lwdiv 000F  
                          __pintcodelo 0018           ?_interrupts_clear_colorclick 0001  
                 I2C_2_Master_Read@ack 000B                      _WhiteInstructions 1B1A  
                 I2C_2_Master_Read@tmp 000C                          ?_turnRight135 0027  
                         ?_Return_Time 0009                      _I2C_2_Master_Idle 28DC  
                   _fullSpeedBackwards 1A2C                      _I2C_2_Master_Init 28B2  
                    _I2C_2_Master_Read 27D2                     ?_WhiteInstructions 003B  
                    _I2C_2_Master_Stop 2AA6                           _RxBufReadCnt 0053  
                   GreenInstructions@a 002D                     ?_I2C_2_Master_Idle 0001  
                   ?_I2C_2_Master_Init 0001                     ?_I2C_2_Master_Read 0001  
                        ??_setMotorPWM 0018                     ?_I2C_2_Master_Stop 0001  
                     ___lwdiv@quotient 0013                            turnLeft90@a 0026  
             initDCmotorsPWM@PWMperiod 0009                LightBlueInstructions@mL 002C  
              LightBlueInstructions@mR 002E                    ?_fullSpeedBackwards 001C  
                  ??_WhiteInstructions 003F                    ??_I2C_2_Master_Idle 0009  
                  ??_I2C_2_Master_Init 0009                           ?_Update_RGBC 0014  
                  ??_I2C_2_Master_Read 000A                         ___wmul@product 000D  
                             _LATAbits 000F79                    ??_I2C_2_Master_Stop 000A  
                             _LATCbits 000F7B                               _LATDbits 000F7C  
                             _LATEbits 000F7D                               _LATFbits 000F7E  
                      Return_Time@temp 0010                               _LATGbits 000F7F  
                             _LATHbits 000F80                               _IPR0bits 000E1F  
                             _PIE0bits 000E29                               _LED_init 2A36  
                     RedInstructions@a 002D                               _PIE4bits 000E2D  
                             i2u222_40 2914                               i2u222_41 2910  
                          turnRight@mL 001C                               i2u223_40 292A  
                             i2u223_41 2926                            turnRight@mR 001E  
                             i1u378_20 0036                               i1u378_21 0032  
                            _lost_flag 0074                               _PIR0bits 000E33  
                             _PIR4bits 000E37                               i2u379_40 29E8  
                             i2u379_41 29E4                               i2u475_47 274C  
                     ?_initDCmotorsPWM 0009                               _SSP2CON2 000EDA  
                             _SSP2STAT 000ED8                   ??_fullSpeedBackwards 0020  
            __end_of_WhiteInstructions 1C04                     _OrangeInstructions 21E6  
                    PinkInstructions@a 002D              __end_of_I2C_2_Master_Idle 2904  
            __end_of_I2C_2_Master_Init 28DC              __end_of_I2C_2_Master_Read 2814  
                    ___wmul@multiplier 0009                         ??_turnRight135 002B  
            __end_of_I2C_2_Master_Stop 2AB0                           setMotorPWM@m 0016  
          I2C_2_Master_Write@data_byte 000A          ??_interrupts_clear_colorclick 000E  
           __end_of_YellowInstructions 2160                      ??_color_read_Blue 000F  
                  ?_OrangeInstructions 002C                           _TxBufReadCnt 0051  
          ?_init_colorclick_interrupts 0001                               _AntiPink 1D8A  
             i2color_writetoaddr@value 0003                              _turnRight 1762  
                  WhiteInstructions@mL 003B                    WhiteInstructions@mR 003D  
        __end_of_I2C_2_Master_RepStart 2AA6                     color_read_Blue@tmp 0012  
                  __end_of_setMotorPWM 165A                            ??_MoveBuggy 003B  
                 i2_I2C_2_Master_Start 2AC4                   i2_I2C_2_Master_Write 2A90  
                         AntiYellow@mL 002E                           AntiYellow@mR 0030  
                             __Hrparam 0000                   ??_OrangeInstructions 0030  
                             __Lrparam 0000          __end_of_LightBlueInstructions 22F2  
          __end_ofi2_I2C_2_Master_Idle 292C            __end_ofi2_I2C_2_Master_Stop 2AC4  
                       turnRight135@mL 0027                         turnRight135@mR 0029  
                        turnLeft135@mL 0027                          turnLeft135@mR 0029  
                           _ANSELBbits 000E9A                             _ANSELDbits 000EA7  
                           _ANSELFbits 000EB4                               ___xxtofl 133A  
                           _T0CON0bits 000FD5                             _T0CON1bits 000FD6  
                      ___lwdiv@divisor 0011                      BlueInstructions@a 002D  
                      ___lwdiv@counter 0015                             ?_turnRight 001C  
                             __ptext10 1B1A                               __ptext11 2814  
                             __ptext20 2952                               __ptext12 2976  
                             __ptext21 1CD8                               __ptext13 0E40  
                             __ptext30 193E                               __ptext22 22F2  
                             __ptext14 20DA                               __ptext31 1C04  
                             __ptext23 1EEE                               __ptext15 2160  
                             __ptext40 269C                               __ptext32 1A2C  
                             __ptext24 1762                               __ptext16 21E6  
                             __ptext41 2A9C                               __ptext33 14EE  
                             __ptext25 1D8A                               __ptext17 2472  
                             __ptext50 2AA6                               __ptext42 27D2  
                             __ptext34 292C                               __ptext26 1850  
                             __ptext18 226C                               __ptext51 2AB0  
                             __ptext43 2998                               __ptext35 23FE  
                             __ptext27 2378                               __ptext19 24E0  
                             __ptext60 2ABA                               __ptext52 28DC  
                             __ptext44 2A36                               __ptext36 254E  
                             __ptext28 1E3C                               __ptext61 2AC4  
                             __ptext53 2880                               __ptext45 2A18  
                             __ptext37 25AC                               __ptext29 1F9C  
                             __ptext62 2904                               __ptext46 2A50  
                             __ptext38 25FC                               __ptext47 26EC  
                             __ptext39 264C                               __ptext56 2A6A  
                             __ptext48 29B8                               __ptext57 273C  
                             __ptext49 2A84                               __ptext58 29F8  
                             __ptext59 2A90                           _SSP2CON1bits 000ED9  
                         _SSP2CON2bits 000EDA        ??i2_interrupts_clear_colorclick 0006  
               LightBlueInstructions@a 0032                             turnLeft@mL 001C  
                           turnLeft@mR 001E                  ?i2_I2C_2_Master_Start 0001  
                ?i2_I2C_2_Master_Write 0001                          ??_turnLeft135 002B  
                             isa$xinst 000000                             _RC4STAbits 000EE7  
                             int$flags 0057                          ??_turnRight90 0026  
                     _BlueInstructions 1E3C                               _turnLeft 193E  
                           _INTCONbits 000FF2                            AntiYellow@a 0034  
                          _setMotorPWM 14EE                          ?_detect_color 00A3  
                        turnRight135@a 002B                               intlevel1 0000  
                             intlevel2 0000                          turnRight90@mL 0022  
                        turnRight90@mR 0024                       ??_fullSpeedAhead 0020  
                 __end_of_turnRight135 24E0                           ??_turnLeft90 0026  
                           AntiPink@mL 002E                             AntiPink@mR 0030  
                          _moves_index 0056                       _color_click_init 284C  
                  __end_of_turnLeft135 254E                             _SSP2DATPPS 000E1D  
                           _SSP2CLKPPS 000E1C                 detect_color@lost_timer 00A5  
                  __end_of_turnRight90 1F9C                          ??_AppendMoves 000D  
                       ??_detect_color 00A7                            ??_turnRight 0020  
                   __end_of_turnLeft90 204A                             _TX4STAbits 000EE8  
               ??i2_I2C_2_Master_Start 0002                 ??i2_I2C_2_Master_Write 0002  
                 YellowInstructions@mL 0027                   YellowInstructions@mR 0029  
__end_ofi2_interrupts_clear_colorclick 2A84          i2_interrupts_clear_colorclick 2A6A  
