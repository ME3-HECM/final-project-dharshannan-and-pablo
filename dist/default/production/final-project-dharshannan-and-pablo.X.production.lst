

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Mar 02 14:30:38 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    64                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1
    75                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    76                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    77                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    78                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    79                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    80   000000                     
    81                           ; Generated 06/04/2022 GMT
    82                           ; 
    83                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    84                           ; All rights reserved.
    85                           ; 
    86                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    87                           ; 
    88                           ; Redistribution and use in source and binary forms, with or without modification, are
    89                           ; permitted provided that the following conditions are met:
    90                           ; 
    91                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    92                           ;        conditions and the following disclaimer.
    93                           ; 
    94                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    95                           ;        of conditions and the following disclaimer in the documentation and/or other
    96                           ;        materials provided with the distribution. Publication is not required when
    97                           ;        this file is used in an embedded application.
    98                           ; 
    99                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   100                           ;        software without specific prior written permission.
   101                           ; 
   102                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   103                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   104                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   105                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   106                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   107                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   108                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   109                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   110                           ; 
   111                           ; 
   112                           ; Code-generator required, PIC18F67K40 Definitions
   113                           ; 
   114                           ; SFR Addresses
   115   000000                     
   116                           	psect	idataCOMRAM
   117   002392                     __pidataCOMRAM:
   118                           	callstack 0
   119                           
   120                           ;initializer for _int_threshold_high
   121   002392  0CB2               	dw	3250
   122   000000                     _LATHbits	set	3968
   123   000000                     _TRISBbits	set	3970
   124   000000                     _TX4REG	set	3812
   125   000000                     _RC4STAbits	set	3815
   126   000000                     _SP4BRGH	set	3814
   127   000000                     _TRISCbits	set	3971
   128   000000                     _TRISEbits	set	3973
   129   000000                     _TRISFbits	set	3974
   130   000000                     _TRISGbits	set	3975
   131   000000                     _SSP2CON2bits	set	3802
   132   000000                     _RX4PPS	set	3605
   133   000000                     _SSP2CLKPPS	set	3612
   134   000000                     _SSP2DATPPS	set	3613
   135   000000                     _ANSELDbits	set	3751
   136   000000                     _SSP2ADD	set	3798
   137   000000                     _SSP2CON1bits	set	3801
   138   000000                     _RC4REG	set	3811
   139   000000                     _SP4BRGL	set	3813
   140   000000                     _TX4STAbits	set	3816
   141   000000                     _BAUD4CONbits	set	3817
   142   000000                     _CCPR4H	set	3873
   143   000000                     _CCPR3H	set	3877
   144   000000                     _LATAbits	set	3961
   145   000000                     _LATGbits	set	3967
   146   000000                     _TRISAbits	set	3969
   147   000000                     _SSP2CON2	set	3802
   148   000000                     _TRISDbits	set	3972
   149   000000                     _SSP2STAT	set	3800
   150   000000                     _SSP2BUF	set	3797
   151   000000                     _IPR0bits	set	3615
   152   000000                     _PIE0bits	set	3625
   153   000000                     _PIE4bits	set	3629
   154   000000                     _PIR4bits	set	3639
   155   000000                     _RC0PPS	set	3682
   156   000000                     _RC7PPS	set	3689
   157   000000                     _RD5PPS	set	3695
   158   000000                     _RE2PPS	set	3700
   159   000000                     _RD6PPS	set	3696
   160   000000                     _CCPR2H	set	4006
   161   000000                     _CCPR1H	set	4010
   162   000000                     _T2PR	set	4028
   163   000000                     _T2CONbits	set	4029
   164   000000                     _LATCbits	set	3963
   165   000000                     _LATEbits	set	3965
   166   000000                     _LATFbits	set	3966
   167   000000                     _RE4PPS	set	3702
   168   000000                     _RG6PPS	set	3720
   169   000000                     _ANSELBbits	set	3738
   170   000000                     _TMR0L	set	4051
   171   000000                     _TMR0H	set	4052
   172   000000                     _T0CON0bits	set	4053
   173   000000                     _T0CON1bits	set	4054
   174   000000                     _T2CLKCONbits	set	4031
   175   000000                     _T2HLTbits	set	4030
   176   000000                     _CCP1CONbits	set	4011
   177   000000                     _CCPTMRS0bits	set	4013
   178   000000                     _CCP2CONbits	set	4007
   179   000000                     _CCP3CONbits	set	3878
   180   000000                     _CCP4CONbits	set	3874
   181   000000                     _PIR0bits	set	3635
   182   000000                     _INTCONbits	set	4082
   183                           
   184                           	psect	smallconst
   185   000E00                     __psmallconst:
   186                           	callstack 0
   187   000E00  00                 	db	0
   188   000E01                     STR_1:
   189   000E01  0A                 	db	10
   190   000E02  25                 	db	37
   191   000E03  30                 	db	48	;'0'
   192   000E04  35                 	db	53	;'5'
   193   000E05  64                 	db	100	;'d'
   194   000E06  20                 	db	32
   195   000E07  25                 	db	37
   196   000E08  30                 	db	48	;'0'
   197   000E09  35                 	db	53	;'5'
   198   000E0A  64                 	db	100	;'d'
   199   000E0B  20                 	db	32
   200   000E0C  25                 	db	37
   201   000E0D  30                 	db	48	;'0'
   202   000E0E  35                 	db	53	;'5'
   203   000E0F  64                 	db	100	;'d'
   204   000E10  20                 	db	32
   205   000E11  25                 	db	37
   206   000E12  30                 	db	48	;'0'
   207   000E13  35                 	db	53	;'5'
   208   000E14  64                 	db	100	;'d'
   209   000E15  0A                 	db	10
   210   000E16  00                 	db	0
   211   000E17  00                 	db	0	; dummy byte at the end
   212   000000                     
   213                           ; #config settings
   214                           
   215                           	psect	cinit
   216   001E34                     __pcinit:
   217                           	callstack 0
   218   001E34                     start_initialization:
   219                           	callstack 0
   220   001E34                     __initialization:
   221                           	callstack 0
   222                           
   223                           ; Initialize objects allocated to COMRAM (2 bytes)
   224                           ; load TBLPTR registers with __pidataCOMRAM
   225   001E34  0E92               	movlw	low __pidataCOMRAM
   226   001E36  6EF6               	movwf	tblptrl,c
   227   001E38  0E23               	movlw	high __pidataCOMRAM
   228   001E3A  6EF7               	movwf	tblptrh,c
   229   001E3C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   230   001E3E  6EF8               	movwf	tblptru,c
   231   001E40  0009               	tblrd		*+	;fetch initializer
   232   001E42  CFF5 F051          	movff	tablat,__pdataCOMRAM
   233   001E46  0009               	tblrd		*+	;fetch initializer
   234   001E48  CFF5 F052          	movff	tablat,__pdataCOMRAM+1
   235                           
   236                           ; Clear objects allocated to BANK5 (60 bytes)
   237   001E4C  EE05  F000         	lfsr	0,__pbssBANK5
   238   001E50  0E3C               	movlw	60
   239   001E52                     clear_0:
   240   001E52  6AEE               	clrf	postinc0,c
   241   001E54  06E8               	decf	wreg,f,c
   242   001E56  E1FD               	bnz	clear_0
   243                           
   244                           ; Clear objects allocated to BANK1 (52 bytes)
   245   001E58  EE01  F0C8         	lfsr	0,__pbssBANK1
   246   001E5C  0E34               	movlw	52
   247   001E5E                     clear_1:
   248   001E5E  6AEE               	clrf	postinc0,c
   249   001E60  06E8               	decf	wreg,f,c
   250   001E62  E1FD               	bnz	clear_1
   251                           
   252                           ; Clear objects allocated to BANK0 (3 bytes)
   253   001E64  0100               	movlb	0
   254   001E66  6BF9               	clrf	(__pbssBANK0+2)& (0+255),b
   255   001E68  6BF8               	clrf	(__pbssBANK0+1)& (0+255),b
   256   001E6A  6BF7               	clrf	__pbssBANK0& (0+255),b
   257                           
   258                           ; Clear objects allocated to COMRAM (10 bytes)
   259   001E6C  EE00  F047         	lfsr	0,__pbssCOMRAM
   260   001E70  0E0A               	movlw	10
   261   001E72                     clear_2:
   262   001E72  6AEE               	clrf	postinc0,c
   263   001E74  06E8               	decf	wreg,f,c
   264   001E76  E1FD               	bnz	clear_2
   265   001E78                     end_of_initialization:
   266                           	callstack 0
   267   001E78                     __end_of__initialization:
   268                           	callstack 0
   269   001E78  9053               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   270   001E7A  9253               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   271   001E7C  0100               	movlb	0
   272   001E7E  EFC6  F009         	goto	_main	;jump to C main() function
   273                           
   274                           	psect	bssCOMRAM
   275   000047                     __pbssCOMRAM:
   276                           	callstack 0
   277   000047                     _prec:
   278                           	callstack 0
   279   000047                     	ds	2
   280   000049                     _int_threshold_low:
   281                           	callstack 0
   282   000049                     	ds	2
   283   00004B                     _flags:
   284                           	callstack 0
   285   00004B                     	ds	1
   286   00004C                     _color_flag:
   287                           	callstack 0
   288   00004C                     	ds	1
   289   00004D                     _TxBufReadCnt:
   290                           	callstack 0
   291   00004D                     	ds	1
   292   00004E                     _TxBufWriteCnt:
   293                           	callstack 0
   294   00004E                     	ds	1
   295   00004F                     _RxBufReadCnt:
   296                           	callstack 0
   297   00004F                     	ds	1
   298   000050                     _RxBufWriteCnt:
   299                           	callstack 0
   300   000050                     	ds	1
   301                           
   302                           	psect	dataCOMRAM
   303   000051                     __pdataCOMRAM:
   304                           	callstack 0
   305   000051                     _int_threshold_high:
   306                           	callstack 0
   307   000051                     	ds	2
   308                           
   309                           	psect	bssBANK0
   310   0000F7                     __pbssBANK0:
   311                           	callstack 0
   312   0000F7                     _width:
   313                           	callstack 0
   314   0000F7                     	ds	2
   315   0000F9                     _tmr_ovf:
   316                           	callstack 0
   317   0000F9                     	ds	1
   318                           
   319                           	psect	bssBANK1
   320   0001C8                     __pbssBANK1:
   321                           	callstack 0
   322   0001C8                     _EUSART4RXbuf:
   323                           	callstack 0
   324   0001C8                     	ds	20
   325   0001DC                     _dbuf:
   326                           	callstack 0
   327   0001DC                     	ds	32
   328                           
   329                           	psect	bssBANK5
   330   000500                     __pbssBANK5:
   331                           	callstack 0
   332   000500                     _EUSART4TXbuf:
   333                           	callstack 0
   334   000500                     	ds	60
   335                           
   336                           	psect	cstackBANK4
   337   000400                     __pcstackBANK4:
   338                           	callstack 0
   339   000400                     main@readingsC:
   340                           	callstack 0
   341                           
   342                           ; 200 bytes @ 0x0
   343   000400                     	ds	200
   344                           
   345                           	psect	cstackBANK3
   346   000300                     __pcstackBANK3:
   347                           	callstack 0
   348   000300                     main@readingsB:
   349                           	callstack 0
   350                           
   351                           ; 200 bytes @ 0x0
   352   000300                     	ds	200
   353                           
   354                           	psect	cstackBANK2
   355   000200                     __pcstackBANK2:
   356                           	callstack 0
   357   000200                     main@readingsG:
   358                           	callstack 0
   359                           
   360                           ; 200 bytes @ 0x0
   361   000200                     	ds	200
   362                           
   363                           	psect	cstackBANK1
   364   000100                     __pcstackBANK1:
   365                           	callstack 0
   366   000100                     main@readingsR:
   367                           	callstack 0
   368                           
   369                           ; 200 bytes @ 0x0
   370   000100                     	ds	200
   371                           
   372                           	psect	cstackBANK0
   373   000060                     __pcstackBANK0:
   374                           	callstack 0
   375   000060                     _dtoa$2372:
   376                           	callstack 0
   377                           
   378                           ; 2 bytes @ 0x0
   379   000060                     	ds	2
   380   000062                     dtoa@p:
   381                           	callstack 0
   382                           
   383                           ; 2 bytes @ 0x2
   384   000062                     	ds	2
   385   000064                     dtoa@w:
   386                           	callstack 0
   387                           
   388                           ; 2 bytes @ 0x4
   389   000064                     	ds	2
   390   000066                     dtoa@n:
   391                           	callstack 0
   392                           
   393                           ; 8 bytes @ 0x6
   394   000066                     	ds	8
   395   00006E                     dtoa@s:
   396                           	callstack 0
   397                           
   398                           ; 1 bytes @ 0xE
   399   00006E                     	ds	1
   400   00006F                     dtoa@i:
   401                           	callstack 0
   402                           
   403                           ; 2 bytes @ 0xF
   404   00006F                     	ds	2
   405   000071                     vfpfcnvrt@convarg:
   406                           	callstack 0
   407                           
   408                           ; 8 bytes @ 0x11
   409   000071                     	ds	8
   410   000079                     vfpfcnvrt@done:
   411                           	callstack 0
   412                           
   413                           ; 2 bytes @ 0x19
   414   000079                     	ds	2
   415   00007B                     vfpfcnvrt@cp:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0x1B
   419   00007B                     	ds	2
   420   00007D                     ?_vfprintf:
   421                           	callstack 0
   422   00007D                     vfprintf@fp:
   423                           	callstack 0
   424                           
   425                           ; 2 bytes @ 0x1D
   426   00007D                     	ds	2
   427   00007F                     vfprintf@fmt:
   428                           	callstack 0
   429                           
   430                           ; 2 bytes @ 0x1F
   431   00007F                     	ds	2
   432   000081                     vfprintf@ap:
   433                           	callstack 0
   434                           
   435                           ; 2 bytes @ 0x21
   436   000081                     	ds	2
   437   000083                     ?_sprintf:
   438                           	callstack 0
   439   000083                     sprintf@s:
   440                           	callstack 0
   441                           
   442                           ; 2 bytes @ 0x23
   443   000083                     	ds	2
   444   000085                     sprintf@fmt:
   445                           	callstack 0
   446                           
   447                           ; 2 bytes @ 0x25
   448   000085                     	ds	10
   449   00008F                     sprintf@ap:
   450                           	callstack 0
   451                           
   452                           ; 2 bytes @ 0x2F
   453   00008F                     	ds	2
   454   000091                     sprintf@f:
   455                           	callstack 0
   456                           
   457                           ; 11 bytes @ 0x31
   458   000091                     	ds	11
   459   00009C                     main@string:
   460                           	callstack 0
   461                           
   462                           ; 40 bytes @ 0x3C
   463   00009C                     	ds	40
   464   0000C4                     main@string2:
   465                           	callstack 0
   466                           
   467                           ; 40 bytes @ 0x64
   468   0000C4                     	ds	40
   469   0000EC                     main@cont:
   470                           	callstack 0
   471                           
   472                           ; 1 bytes @ 0x8C
   473   0000EC                     	ds	1
   474   0000ED                     main@i:
   475                           	callstack 0
   476                           
   477                           ; 1 bytes @ 0x8D
   478   0000ED                     	ds	1
   479   0000EE                     main@a:
   480                           	callstack 0
   481                           
   482                           ; 1 bytes @ 0x8E
   483   0000EE                     	ds	1
   484   0000EF                     main@initial_color:
   485                           	callstack 0
   486                           
   487                           ; 8 bytes @ 0x8F
   488   0000EF                     	ds	8
   489                           
   490                           	psect	cstackCOMRAM
   491   000001                     __pcstackCOMRAM:
   492                           	callstack 0
   493   000001                     ??_getCharFromTxBuf:
   494   000001                     ??i2_I2C_2_Master_Idle:
   495   000001                     putCharToRxBuf@byte:
   496                           	callstack 0
   497   000001                     
   498                           ; 1 bytes @ 0x0
   499   000001                     	ds	1
   500   000002                     i2I2C_2_Master_Write@data_byte:
   501                           	callstack 0
   502                           
   503                           ; 1 bytes @ 0x1
   504   000002                     	ds	1
   505   000003                     i2color_writetoaddr@value:
   506                           	callstack 0
   507                           
   508                           ; 1 bytes @ 0x2
   509   000003                     	ds	1
   510   000004                     i2color_writetoaddr@address:
   511                           	callstack 0
   512                           
   513                           ; 1 bytes @ 0x3
   514   000004                     	ds	1
   515   000005                     ??i2_init_colorclick_interrupts:
   516                           
   517                           ; 1 bytes @ 0x4
   518   000005                     	ds	1
   519   000006                     ??_HighISR:
   520   000006                     
   521                           ; 1 bytes @ 0x5
   522   000006                     	ds	2
   523   000008                     HighISR@a:
   524                           	callstack 0
   525                           
   526                           ; 1 bytes @ 0x7
   527   000008                     	ds	1
   528   000009                     ??_LowISR:
   529                           
   530                           ; 1 bytes @ 0x8
   531   000009                     	ds	4
   532   00000D                     ??_I2C_2_Master_Idle:
   533   00000D                     ??_getCharFromRxBuf:
   534   00000D                     ?_isdigit:
   535                           	callstack 0
   536   00000D                     ?_isspace:
   537                           	callstack 0
   538   00000D                     ?___wmul:
   539                           	callstack 0
   540   00000D                     ?___aodiv:
   541                           	callstack 0
   542   00000D                     ?___aomod:
   543                           	callstack 0
   544   00000D                     putCharToTxBuf@byte:
   545                           	callstack 0
   546   00000D                     ___wmul@multiplier:
   547                           	callstack 0
   548   00000D                     isdigit@c:
   549                           	callstack 0
   550   00000D                     isspace@c:
   551                           	callstack 0
   552   00000D                     fputc@c:
   553                           	callstack 0
   554   00000D                     ___aodiv@dividend:
   555                           	callstack 0
   556   00000D                     ___aomod@dividend:
   557                           	callstack 0
   558                           
   559                           ; 8 bytes @ 0xC
   560   00000D                     	ds	1
   561   00000E                     ??_I2C_2_Master_Read:
   562   00000E                     I2C_2_Master_Write@data_byte:
   563                           	callstack 0
   564   00000E                     TxBufferedString@string:
   565                           	callstack 0
   566                           
   567                           ; 2 bytes @ 0xD
   568   00000E                     	ds	1
   569   00000F                     ??_isdigit:
   570   00000F                     ??_isspace:
   571   00000F                     color_writetoaddr@value:
   572                           	callstack 0
   573   00000F                     I2C_2_Master_Read@ack:
   574                           	callstack 0
   575   00000F                     ___wmul@multiplicand:
   576                           	callstack 0
   577   00000F                     fputc@fp:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0xE
   581   00000F                     	ds	1
   582   000010                     color_writetoaddr@address:
   583                           	callstack 0
   584   000010                     I2C_2_Master_Read@tmp:
   585                           	callstack 0
   586                           
   587                           ; 1 bytes @ 0xF
   588   000010                     	ds	1
   589   000011                     ??_fputc:
   590   000011                     ??_color_click_init:
   591   000011                     ??_init_colorclick_interrupts:
   592   000011                     ?_color_read_Red:
   593                           	callstack 0
   594   000011                     ?_color_read_Green:
   595                           	callstack 0
   596   000011                     ?_color_read_Blue:
   597                           	callstack 0
   598   000011                     ?_color_read_Clear:
   599                           	callstack 0
   600   000011                     _isspace$2421:
   601                           	callstack 0
   602   000011                     ___wmul@product:
   603                           	callstack 0
   604                           
   605                           ; 2 bytes @ 0x10
   606   000011                     	ds	1
   607   000012                     
   608                           ; 1 bytes @ 0x11
   609   000012                     	ds	1
   610   000013                     ??_color_read_Red:
   611   000013                     ??_color_read_Green:
   612   000013                     ??_color_read_Blue:
   613   000013                     ??_color_read_Clear:
   614   000013                     ?_atoi:
   615                           	callstack 0
   616   000013                     atoi@s:
   617                           	callstack 0
   618                           
   619                           ; 2 bytes @ 0x12
   620   000013                     	ds	2
   621   000015                     ??_atoi:
   622   000015                     ___aodiv@divisor:
   623                           	callstack 0
   624   000015                     ___aomod@divisor:
   625                           	callstack 0
   626                           
   627                           ; 8 bytes @ 0x14
   628   000015                     	ds	1
   629   000016                     color_read_Red@tmp:
   630                           	callstack 0
   631   000016                     color_read_Green@tmp:
   632                           	callstack 0
   633   000016                     color_read_Blue@tmp:
   634                           	callstack 0
   635   000016                     color_read_Clear@tmp:
   636                           	callstack 0
   637   000016                     fputs@s:
   638                           	callstack 0
   639                           
   640                           ; 2 bytes @ 0x15
   641   000016                     	ds	2
   642   000018                     Update_RGBC@tempval:
   643                           	callstack 0
   644   000018                     atoi@neg:
   645                           	callstack 0
   646   000018                     fputs@fp:
   647                           	callstack 0
   648                           
   649                           ; 2 bytes @ 0x17
   650   000018                     	ds	2
   651   00001A                     fputs@c:
   652                           	callstack 0
   653   00001A                     atoi@n:
   654                           	callstack 0
   655                           
   656                           ; 2 bytes @ 0x19
   657   00001A                     	ds	1
   658   00001B                     fputs@i:
   659                           	callstack 0
   660                           
   661                           ; 2 bytes @ 0x1A
   662   00001B                     	ds	2
   663   00001D                     ___aodiv@counter:
   664                           	callstack 0
   665   00001D                     ___aomod@counter:
   666                           	callstack 0
   667   00001D                     pad@fp:
   668                           	callstack 0
   669                           
   670                           ; 2 bytes @ 0x1C
   671   00001D                     	ds	1
   672   00001E                     ___aodiv@sign:
   673                           	callstack 0
   674   00001E                     ___aomod@sign:
   675                           	callstack 0
   676                           
   677                           ; 1 bytes @ 0x1D
   678   00001E                     	ds	1
   679   00001F                     ?_abs:
   680                           	callstack 0
   681   00001F                     pad@buf:
   682                           	callstack 0
   683   00001F                     abs@a:
   684                           	callstack 0
   685   00001F                     ___aodiv@quotient:
   686                           	callstack 0
   687                           
   688                           ; 8 bytes @ 0x1E
   689   00001F                     	ds	2
   690   000021                     ??_abs:
   691   000021                     pad@p:
   692                           	callstack 0
   693                           
   694                           ; 2 bytes @ 0x20
   695   000021                     	ds	2
   696   000023                     ??_pad:
   697                           
   698                           ; 1 bytes @ 0x22
   699   000023                     	ds	1
   700   000024                     pad@i:
   701                           	callstack 0
   702                           
   703                           ; 2 bytes @ 0x23
   704   000024                     	ds	2
   705   000026                     pad@w:
   706                           	callstack 0
   707                           
   708                           ; 2 bytes @ 0x25
   709   000026                     	ds	2
   710   000028                     dtoa@fp:
   711                           	callstack 0
   712                           
   713                           ; 2 bytes @ 0x27
   714   000028                     	ds	2
   715   00002A                     dtoa@d:
   716                           	callstack 0
   717                           
   718                           ; 8 bytes @ 0x29
   719   00002A                     	ds	8
   720   000032                     ??_dtoa:
   721                           
   722                           ; 1 bytes @ 0x31
   723   000032                     	ds	8
   724   00003A                     vfpfcnvrt@fp:
   725                           	callstack 0
   726                           
   727                           ; 2 bytes @ 0x39
   728   00003A                     	ds	2
   729   00003C                     vfpfcnvrt@fmt:
   730                           	callstack 0
   731                           
   732                           ; 2 bytes @ 0x3B
   733   00003C                     	ds	2
   734   00003E                     vfpfcnvrt@ap:
   735                           	callstack 0
   736                           
   737                           ; 2 bytes @ 0x3D
   738   00003E                     	ds	2
   739   000040                     ??_vfpfcnvrt:
   740                           
   741                           ; 1 bytes @ 0x3F
   742   000040                     	ds	3
   743   000043                     vfprintf@cfmt:
   744                           	callstack 0
   745                           
   746                           ; 2 bytes @ 0x42
   747   000043                     	ds	2
   748   000045                     ??_main:
   749                           
   750                           ; 1 bytes @ 0x44
   751   000045                     	ds	2
   752                           
   753 ;;
   754 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   755 ;;
   756 ;; *************** function _main *****************
   757 ;; Defined at:
   758 ;;		line 20 in file "main_calibration.c"
   759 ;; Parameters:    Size  Location     Type
   760 ;;		None
   761 ;; Auto vars:     Size  Location     Type
   762 ;;  string         40   60[BANK0 ] unsigned char [40]
   763 ;;  string2        40  100[BANK0 ] unsigned char [40]
   764 ;;  i               1  141[BANK0 ] unsigned char 
   765 ;;  cont            1  140[BANK0 ] unsigned char 
   766 ;;  readingsC     200    0[BANK4 ] int [100]
   767 ;;  readingsB     200    0[BANK3 ] int [100]
   768 ;;  readingsG     200    0[BANK2 ] int [100]
   769 ;;  readingsR     200    0[BANK1 ] int [100]
   770 ;;  initial_colo    8  143[BANK0 ] struct RGB_val
   771 ;;  a               1  142[BANK0 ] unsigned char 
   772 ;; Return value:  Size  Location     Type
   773 ;;                  1    wreg      void 
   774 ;; Registers used:
   775 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   776 ;; Tracked objects:
   777 ;;		On entry : 0/0
   778 ;;		On exit  : 0/0
   779 ;;		Unchanged: 0/0
   780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   782 ;;      Locals:         0      91     200     200     200     200       0       0       0       0       0       0       
      +0       0       0
   783 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   784 ;;      Totals:         2      91     200     200     200     200       0       0       0       0       0       0       
      +0       0       0
   785 ;;Total ram usage:      893 bytes
   786 ;; Hardware stack levels required when called: 15
   787 ;; This function calls:
   788 ;;		_Interrupts_init
   789 ;;		_LED_init
   790 ;;		_Timer0_init
   791 ;;		_TxBufferedString
   792 ;;		_Update_RGBC
   793 ;;		_WhiteLight
   794 ;;		_color_click_init
   795 ;;		_getCharFromRxBuf
   796 ;;		_initUSART4
   797 ;;		_isDataInRxBuf
   798 ;;		_sendTxBuf
   799 ;;		_sprintf
   800 ;; This function is called by:
   801 ;;		Startup code after reset
   802 ;; This function uses a non-reentrant model
   803 ;;
   804                           
   805                           	psect	text0
   806   00138C                     __ptext0:
   807                           	callstack 0
   808   00138C                     _main:
   809                           	callstack 16
   810   00138C                     
   811                           ;main_calibration.c: 23:     RGB_val initial_color;;main_calibration.c: 24:     initial_
      +                          color.R = 0;
   812   00138C  0E00               	movlw	0
   813   00138E  0100               	movlb	0	; () banked
   814   001390  6FF0               	movwf	(main@initial_color+1)& (0+255),b
   815   001392  0E00               	movlw	0
   816   001394  6FEF               	movwf	main@initial_color& (0+255),b
   817                           
   818                           ;main_calibration.c: 25:     initial_color.G = 0;
   819   001396  0E00               	movlw	0
   820   001398  6FF2               	movwf	(main@initial_color+3)& (0+255),b
   821   00139A  0E00               	movlw	0
   822   00139C  6FF1               	movwf	(main@initial_color+2)& (0+255),b
   823                           
   824                           ;main_calibration.c: 26:     initial_color.B = 0;
   825   00139E  0E00               	movlw	0
   826   0013A0  6FF4               	movwf	(main@initial_color+5)& (0+255),b
   827   0013A2  0E00               	movlw	0
   828   0013A4  6FF3               	movwf	(main@initial_color+4)& (0+255),b
   829                           
   830                           ;main_calibration.c: 27:     initial_color.C = 0;
   831   0013A6  0E00               	movlw	0
   832   0013A8  6FF6               	movwf	(main@initial_color+7)& (0+255),b
   833   0013AA  0E00               	movlw	0
   834   0013AC  6FF5               	movwf	(main@initial_color+6)& (0+255),b
   835   0013AE                     
   836                           ; BSR set to: 0
   837                           ;main_calibration.c: 29:     LED_init();
   838   0013AE  ECC5  F011         	call	_LED_init	;wreg free
   839   0013B2                     
   840                           ;main_calibration.c: 30:     color_click_init();
   841   0013B2  EC15  F010         	call	_color_click_init	;wreg free
   842   0013B6                     
   843                           ;main_calibration.c: 31:     Interrupts_init();
   844   0013B6  EC42  F011         	call	_Interrupts_init	;wreg free
   845                           
   846                           ;main_calibration.c: 32:     initUSART4();
   847   0013BA  EC33  F011         	call	_initUSART4	;wreg free
   848                           
   849                           ;main_calibration.c: 33:     Timer0_init();
   850   0013BE  EC03  F011         	call	_Timer0_init	;wreg free
   851   0013C2                     l3112:
   852                           
   853                           ;main_calibration.c: 35:     char a = 0;
   854   0013C2  0E00               	movlw	0
   855   0013C4  0100               	movlb	0	; () banked
   856   0013C6  6FEE               	movwf	main@a& (0+255),b
   857   0013C8                     l422:
   858                           
   859                           ; BSR set to: 0
   860                           ;main_calibration.c: 42:         WhiteLight();
   861   0013C8  ECC1  F011         	call	_WhiteLight	;wreg free
   862   0013CC                     
   863                           ;main_calibration.c: 43:         Update_RGBC(&initial_color);
   864   0013CC  0EEF               	movlw	low main@initial_color
   865   0013CE  6E18               	movwf	Update_RGBC@tempval^0,c
   866   0013D0  0E00               	movlw	high main@initial_color
   867   0013D2  6E19               	movwf	(Update_RGBC@tempval+1)^0,c
   868   0013D4  ECF8  F00D         	call	_Update_RGBC	;wreg free
   869                           
   870                           ;main_calibration.c: 46:         while(tmr_ovf==1 && a<100){
   871   0013D8  EF21  F00A         	goto	l3122
   872   0013DC                     l3116:
   873                           
   874                           ; BSR set to: 0
   875                           ;main_calibration.c: 47:             readingsR[a] = initial_color.R;
   876   0013DC  51EE               	movf	main@a& (0+255),w,b
   877   0013DE  0D02               	mullw	2
   878   0013E0  0E00               	movlw	low main@readingsR
   879   0013E2  24F3               	addwf	243,w,c
   880   0013E4  6ED9               	movwf	fsr2l,c
   881   0013E6  0E01               	movlw	high main@readingsR
   882   0013E8  20F4               	addwfc	prodh,w,c
   883   0013EA  6EDA               	movwf	fsr2h,c
   884   0013EC  C0EF  FFDE         	movff	main@initial_color,postinc2
   885   0013F0  C0F0  FFDD         	movff	main@initial_color+1,postdec2
   886                           
   887                           ;main_calibration.c: 48:             readingsG[a] = initial_color.G;
   888   0013F4  51EE               	movf	main@a& (0+255),w,b
   889   0013F6  0D02               	mullw	2
   890   0013F8  0E00               	movlw	low main@readingsG
   891   0013FA  24F3               	addwf	243,w,c
   892   0013FC  6ED9               	movwf	fsr2l,c
   893   0013FE  0E02               	movlw	high main@readingsG
   894   001400  20F4               	addwfc	prodh,w,c
   895   001402  6EDA               	movwf	fsr2h,c
   896   001404  C0F1  FFDE         	movff	main@initial_color+2,postinc2
   897   001408  C0F2  FFDD         	movff	main@initial_color+3,postdec2
   898                           
   899                           ;main_calibration.c: 49:             readingsB[a] = initial_color.B;
   900   00140C  51EE               	movf	main@a& (0+255),w,b
   901   00140E  0D02               	mullw	2
   902   001410  0E00               	movlw	low main@readingsB
   903   001412  24F3               	addwf	243,w,c
   904   001414  6ED9               	movwf	fsr2l,c
   905   001416  0E03               	movlw	high main@readingsB
   906   001418  20F4               	addwfc	prodh,w,c
   907   00141A  6EDA               	movwf	fsr2h,c
   908   00141C  C0F3  FFDE         	movff	main@initial_color+4,postinc2
   909   001420  C0F4  FFDD         	movff	main@initial_color+5,postdec2
   910                           
   911                           ;main_calibration.c: 50:             readingsC[a] = initial_color.C;
   912   001424  51EE               	movf	main@a& (0+255),w,b
   913   001426  0D02               	mullw	2
   914   001428  0E00               	movlw	low main@readingsC
   915   00142A  24F3               	addwf	243,w,c
   916   00142C  6ED9               	movwf	fsr2l,c
   917   00142E  0E04               	movlw	high main@readingsC
   918   001430  20F4               	addwfc	prodh,w,c
   919   001432  6EDA               	movwf	fsr2h,c
   920   001434  C0F5  FFDE         	movff	main@initial_color+6,postinc2
   921   001438  C0F6  FFDD         	movff	main@initial_color+7,postdec2
   922   00143C                     
   923                           ; BSR set to: 0
   924                           ;main_calibration.c: 51:             a++;
   925   00143C  2BEE               	incf	main@a& (0+255),f,b
   926   00143E                     
   927                           ; BSR set to: 0
   928                           ;main_calibration.c: 52:             tmr_ovf = 0;
   929   00143E  0E00               	movlw	0
   930   001440  6FF9               	movwf	_tmr_ovf& (0+255),b
   931   001442                     l3122:
   932                           
   933                           ;main_calibration.c: 46:         while(tmr_ovf==1 && a<100){
   934   001442  0100               	movlb	0	; () banked
   935   001444  05F9               	decf	_tmr_ovf& (0+255),w,b
   936   001446  A4D8               	btfss	status,2,c
   937   001448  EF28  F00A         	goto	u2261
   938   00144C  EF2A  F00A         	goto	u2260
   939   001450                     u2261:
   940   001450  EF32  F00A         	goto	l3126
   941   001454                     u2260:
   942   001454                     
   943                           ; BSR set to: 0
   944   001454  0E63               	movlw	99
   945   001456  65EE               	cpfsgt	main@a& (0+255),b
   946   001458  EF30  F00A         	goto	u2271
   947   00145C  EF32  F00A         	goto	u2270
   948   001460                     u2271:
   949   001460  EFEE  F009         	goto	l3116
   950   001464                     u2270:
   951   001464                     l3126:
   952                           
   953                           ; BSR set to: 0
   954                           ;main_calibration.c: 56:         char cont = 0x00;
   955   001464  0E00               	movlw	0
   956   001466  6FEC               	movwf	main@cont& (0+255),b
   957                           
   958                           ;main_calibration.c: 58:         while(isDataInRxBuf()){
   959   001468  EF3A  F00A         	goto	l3130
   960   00146C                     l3128:
   961                           
   962                           ;main_calibration.c: 60:             cont = getCharFromRxBuf();
   963   00146C  EC5D  F010         	call	_getCharFromRxBuf	;wreg free
   964   001470  0100               	movlb	0	; () banked
   965   001472  6FEC               	movwf	main@cont& (0+255),b
   966   001474                     l3130:
   967                           
   968                           ; BSR set to: 0
   969                           ;main_calibration.c: 58:         while(isDataInRxBuf()){
   970   001474  EC84  F011         	call	_isDataInRxBuf	;wreg free
   971   001478  0900               	iorlw	0
   972   00147A  A4D8               	btfss	status,2,c
   973   00147C  EF42  F00A         	goto	u2281
   974   001480  EF44  F00A         	goto	u2280
   975   001484                     u2281:
   976   001484  EF36  F00A         	goto	l3128
   977   001488                     u2280:
   978   001488                     
   979                           ;main_calibration.c: 65:         if(cont == 0x10){
   980   001488  0E10               	movlw	16
   981   00148A  0100               	movlb	0	; () banked
   982   00148C  19EC               	xorwf	main@cont& (0+255),w,b
   983   00148E  A4D8               	btfss	status,2,c
   984   001490  EF4C  F00A         	goto	u2291
   985   001494  EF4E  F00A         	goto	u2290
   986   001498                     u2291:
   987   001498  EFAF  F00A         	goto	l3150
   988   00149C                     u2290:
   989   00149C                     
   990                           ; BSR set to: 0
   991                           ;main_calibration.c: 66:             unsigned char i;;main_calibration.c: 67:           
      +                            for(i=0;i<a;i++){
   992   00149C  0E00               	movlw	0
   993   00149E  6FED               	movwf	main@i& (0+255),b
   994   0014A0  EFA2  F00A         	goto	l3146
   995   0014A4                     l3136:
   996                           
   997                           ; BSR set to: 0
   998                           ;main_calibration.c: 69:                 char string[40];;main_calibration.c: 70:       
      +                                    sprintf(string,"\n%05d %05d %05d %05d\n",readingsR[i],readingsG[i],readingsB[i
      +                          ],readingsC[i]);
   999   0014A4  0E9C               	movlw	low main@string
  1000   0014A6  6F83               	movwf	sprintf@s& (0+255),b
  1001   0014A8  0E00               	movlw	high main@string
  1002   0014AA  6F84               	movwf	(sprintf@s+1)& (0+255),b
  1003   0014AC  0E01               	movlw	low STR_1
  1004   0014AE  6F85               	movwf	sprintf@fmt& (0+255),b
  1005   0014B0  0E0E               	movlw	high STR_1
  1006   0014B2  6F86               	movwf	(sprintf@fmt+1)& (0+255),b
  1007   0014B4  51ED               	movf	main@i& (0+255),w,b
  1008   0014B6  0D02               	mullw	2
  1009   0014B8  0E00               	movlw	low main@readingsR
  1010   0014BA  24F3               	addwf	243,w,c
  1011   0014BC  6ED9               	movwf	fsr2l,c
  1012   0014BE  0E01               	movlw	high main@readingsR
  1013   0014C0  20F4               	addwfc	prodh,w,c
  1014   0014C2  6EDA               	movwf	fsr2h,c
  1015   0014C4  CFDE F087          	movff	postinc2,?_sprintf+4
  1016   0014C8  CFDD F088          	movff	postdec2,?_sprintf+5
  1017   0014CC  51ED               	movf	main@i& (0+255),w,b
  1018   0014CE  0D02               	mullw	2
  1019   0014D0  0E00               	movlw	low main@readingsG
  1020   0014D2  24F3               	addwf	243,w,c
  1021   0014D4  6ED9               	movwf	fsr2l,c
  1022   0014D6  0E02               	movlw	high main@readingsG
  1023   0014D8  20F4               	addwfc	prodh,w,c
  1024   0014DA  6EDA               	movwf	fsr2h,c
  1025   0014DC  CFDE F089          	movff	postinc2,?_sprintf+6
  1026   0014E0  CFDD F08A          	movff	postdec2,?_sprintf+7
  1027   0014E4  51ED               	movf	main@i& (0+255),w,b
  1028   0014E6  0D02               	mullw	2
  1029   0014E8  0E00               	movlw	low main@readingsB
  1030   0014EA  24F3               	addwf	243,w,c
  1031   0014EC  6ED9               	movwf	fsr2l,c
  1032   0014EE  0E03               	movlw	high main@readingsB
  1033   0014F0  20F4               	addwfc	prodh,w,c
  1034   0014F2  6EDA               	movwf	fsr2h,c
  1035   0014F4  CFDE F08B          	movff	postinc2,?_sprintf+8
  1036   0014F8  CFDD F08C          	movff	postdec2,?_sprintf+9
  1037   0014FC  51ED               	movf	main@i& (0+255),w,b
  1038   0014FE  0D02               	mullw	2
  1039   001500  0E00               	movlw	low main@readingsC
  1040   001502  24F3               	addwf	243,w,c
  1041   001504  6ED9               	movwf	fsr2l,c
  1042   001506  0E04               	movlw	high main@readingsC
  1043   001508  20F4               	addwfc	prodh,w,c
  1044   00150A  6EDA               	movwf	fsr2h,c
  1045   00150C  CFDE F08D          	movff	postinc2,?_sprintf+10
  1046   001510  CFDD F08E          	movff	postdec2,?_sprintf+11
  1047   001514  EC51  F00E         	call	_sprintf	;wreg free
  1048   001518                     
  1049                           ;main_calibration.c: 71:                 TxBufferedString(string);
  1050   001518  0E9C               	movlw	low main@string
  1051   00151A  6E0E               	movwf	TxBufferedString@string^0,c
  1052   00151C  0E00               	movlw	high main@string
  1053   00151E  6E0F               	movwf	(TxBufferedString@string+1)^0,c
  1054   001520  EC2F  F010         	call	_TxBufferedString	;wreg free
  1055   001524                     
  1056                           ;main_calibration.c: 73:                 sendTxBuf();
  1057   001524  EC51  F011         	call	_sendTxBuf	;wreg free
  1058   001528                     
  1059                           ;main_calibration.c: 74:                 _delay((unsigned long)((250)*(64000000/4000.0))
      +                          );
  1060   001528  0E15               	movlw	21
  1061   00152A  6E46               	movwf	(??_main+1)^0,c
  1062   00152C  0E4B               	movlw	75
  1063   00152E  6E45               	movwf	??_main^0,c
  1064   001530  0EBE               	movlw	190
  1065   001532                     u2327:
  1066   001532  2EE8               	decfsz	wreg,f,c
  1067   001534  D7FE               	bra	u2327
  1068   001536  2E45               	decfsz	??_main^0,f,c
  1069   001538  D7FC               	bra	u2327
  1070   00153A  2E46               	decfsz	(??_main+1)^0,f,c
  1071   00153C  D7FA               	bra	u2327
  1072   00153E  D000               	nop2	
  1073   001540                     
  1074                           ;main_calibration.c: 75:             }
  1075   001540  0100               	movlb	0	; () banked
  1076   001542  2BED               	incf	main@i& (0+255),f,b
  1077   001544                     l3146:
  1078                           
  1079                           ; BSR set to: 0
  1080   001544  51EE               	movf	main@a& (0+255),w,b
  1081   001546  5DED               	subwf	main@i& (0+255),w,b
  1082   001548  A0D8               	btfss	status,0,c
  1083   00154A  EFA9  F00A         	goto	u2301
  1084   00154E  EFAB  F00A         	goto	u2300
  1085   001552                     u2301:
  1086   001552  EF52  F00A         	goto	l3136
  1087   001556                     u2300:
  1088   001556                     
  1089                           ; BSR set to: 0
  1090                           ;main_calibration.c: 76:             cont = 0x00;
  1091   001556  0E00               	movlw	0
  1092   001558  6FEC               	movwf	main@cont& (0+255),b
  1093                           
  1094                           ;main_calibration.c: 77:             a = 0;
  1095   00155A  0E00               	movlw	0
  1096   00155C  6FEE               	movwf	main@a& (0+255),b
  1097   00155E                     l3150:
  1098                           
  1099                           ; BSR set to: 0
  1100                           ;main_calibration.c: 81:         if(cont == 0x01){
  1101   00155E  05EC               	decf	main@cont& (0+255),w,b
  1102   001560  A4D8               	btfss	status,2,c
  1103   001562  EFB5  F00A         	goto	u2311
  1104   001566  EFB7  F00A         	goto	u2310
  1105   00156A                     u2311:
  1106   00156A  EFE4  F009         	goto	l422
  1107   00156E                     u2310:
  1108   00156E                     
  1109                           ; BSR set to: 0
  1110                           ;main_calibration.c: 83:             char string2[40];;main_calibration.c: 84:          
      +                             sprintf(string2,"\n%05d %05d %05d %05d\n",initial_color.R,initial_color.G,initial_col
      +                          or.B,initial_color.C);
  1111   00156E  0EC4               	movlw	low main@string2
  1112   001570  6F83               	movwf	sprintf@s& (0+255),b
  1113   001572  0E00               	movlw	high main@string2
  1114   001574  6F84               	movwf	(sprintf@s+1)& (0+255),b
  1115   001576  0E01               	movlw	low STR_1
  1116   001578  6F85               	movwf	sprintf@fmt& (0+255),b
  1117   00157A  0E0E               	movlw	high STR_1
  1118   00157C  6F86               	movwf	(sprintf@fmt+1)& (0+255),b
  1119   00157E  C0EF  F087         	movff	main@initial_color,?_sprintf+4
  1120   001582  C0F0  F088         	movff	main@initial_color+1,?_sprintf+5
  1121   001586  C0F1  F089         	movff	main@initial_color+2,?_sprintf+6
  1122   00158A  C0F2  F08A         	movff	main@initial_color+3,?_sprintf+7
  1123   00158E  C0F3  F08B         	movff	main@initial_color+4,?_sprintf+8
  1124   001592  C0F4  F08C         	movff	main@initial_color+5,?_sprintf+9
  1125   001596  C0F5  F08D         	movff	main@initial_color+6,?_sprintf+10
  1126   00159A  C0F6  F08E         	movff	main@initial_color+7,?_sprintf+11
  1127   00159E  EC51  F00E         	call	_sprintf	;wreg free
  1128   0015A2                     
  1129                           ;main_calibration.c: 85:             TxBufferedString(string2);
  1130   0015A2  0EC4               	movlw	low main@string2
  1131   0015A4  6E0E               	movwf	TxBufferedString@string^0,c
  1132   0015A6  0E00               	movlw	high main@string2
  1133   0015A8  6E0F               	movwf	(TxBufferedString@string+1)^0,c
  1134   0015AA  EC2F  F010         	call	_TxBufferedString	;wreg free
  1135   0015AE                     
  1136                           ;main_calibration.c: 87:             sendTxBuf();
  1137   0015AE  EC51  F011         	call	_sendTxBuf	;wreg free
  1138   0015B2  EFE1  F009         	goto	l3112
  1139   0015B6  EF3E  F000         	goto	start
  1140   0015BA                     __end_of_main:
  1141                           	callstack 0
  1142                           
  1143 ;; *************** function _sprintf *****************
  1144 ;; Defined at:
  1145 ;;		line 9 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\nf_sprintf.c"
  1146 ;; Parameters:    Size  Location     Type
  1147 ;;  s               2   35[BANK0 ] PTR unsigned char 
  1148 ;;		 -> main@string2(40), main@string(40), 
  1149 ;;  fmt             2   37[BANK0 ] PTR const unsigned char 
  1150 ;;		 -> STR_2(22), STR_1(22), 
  1151 ;; Auto vars:     Size  Location     Type
  1152 ;;  f              11   49[BANK0 ] struct _IO_FILE
  1153 ;;  ap              2   47[BANK0 ] PTR void [1]
  1154 ;;		 -> ?_sprintf(2), 
  1155 ;;  ret             2    0        int 
  1156 ;; Return value:  Size  Location     Type
  1157 ;;                  2   35[BANK0 ] int 
  1158 ;; Registers used:
  1159 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1160 ;; Tracked objects:
  1161 ;;		On entry : 0/0
  1162 ;;		On exit  : 0/0
  1163 ;;		Unchanged: 0/0
  1164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1165 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1166 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1168 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1169 ;;Total ram usage:       25 bytes
  1170 ;; Hardware stack levels used: 1
  1171 ;; Hardware stack levels required when called: 14
  1172 ;; This function calls:
  1173 ;;		_vfprintf
  1174 ;; This function is called by:
  1175 ;;		_main
  1176 ;; This function uses a non-reentrant model
  1177 ;;
  1178                           
  1179                           	psect	text1
  1180   001CA2                     __ptext1:
  1181                           	callstack 0
  1182   001CA2                     _sprintf:
  1183                           	callstack 16
  1184   001CA2  0E87               	movlw	low (?_sprintf+4)
  1185   001CA4  0100               	movlb	0	; () banked
  1186   001CA6  6F8F               	movwf	sprintf@ap& (0+255),b
  1187   001CA8  0E00               	movlw	high (?_sprintf+4)
  1188   001CAA  6F90               	movwf	(sprintf@ap+1)& (0+255),b
  1189   001CAC  C083  F091         	movff	sprintf@s,sprintf@f
  1190   001CB0  C084  F092         	movff	sprintf@s+1,sprintf@f+1
  1191   001CB4                     
  1192                           ; BSR set to: 0
  1193   001CB4  0E00               	movlw	0
  1194   001CB6  6F95               	movwf	(sprintf@f+4)& (0+255),b
  1195   001CB8  0E00               	movlw	0
  1196   001CBA  6F94               	movwf	(sprintf@f+3)& (0+255),b
  1197   001CBC                     
  1198                           ; BSR set to: 0
  1199   001CBC  0E00               	movlw	0
  1200   001CBE  6F9B               	movwf	(sprintf@f+10)& (0+255),b
  1201   001CC0  0E00               	movlw	0
  1202   001CC2  6F9A               	movwf	(sprintf@f+9)& (0+255),b
  1203   001CC4                     
  1204                           ; BSR set to: 0
  1205   001CC4  0E91               	movlw	low sprintf@f
  1206   001CC6  6F7D               	movwf	vfprintf@fp& (0+255),b
  1207   001CC8  0E00               	movlw	high sprintf@f
  1208   001CCA  6F7E               	movwf	(vfprintf@fp+1)& (0+255),b
  1209   001CCC  C085  F07F         	movff	sprintf@fmt,vfprintf@fmt
  1210   001CD0  C086  F080         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1211   001CD4  0E8F               	movlw	low sprintf@ap
  1212   001CD6  6F81               	movwf	vfprintf@ap& (0+255),b
  1213   001CD8  0E00               	movlw	high sprintf@ap
  1214   001CDA  6F82               	movwf	(vfprintf@ap+1)& (0+255),b
  1215   001CDC  EC27  F00E         	call	_vfprintf	;wreg free
  1216   001CE0  0100               	movlb	0	; () banked
  1217   001CE2  5194               	movf	(sprintf@f+3)& (0+255),w,b
  1218   001CE4  2583               	addwf	sprintf@s& (0+255),w,b
  1219   001CE6  6ED9               	movwf	fsr2l,c
  1220   001CE8  5195               	movf	(sprintf@f+4)& (0+255),w,b
  1221   001CEA  2184               	addwfc	(sprintf@s+1)& (0+255),w,b
  1222   001CEC  6EDA               	movwf	fsr2h,c
  1223   001CEE  0E00               	movlw	0
  1224   001CF0  6EDF               	movwf	indf2,c
  1225   001CF2                     
  1226                           ; BSR set to: 0
  1227   001CF2  0012               	return		;funcret
  1228   001CF4                     __end_of_sprintf:
  1229                           	callstack 0
  1230                           
  1231 ;; *************** function _vfprintf *****************
  1232 ;; Defined at:
  1233 ;;		line 1520 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c"
  1234 ;; Parameters:    Size  Location     Type
  1235 ;;  fp              2   29[BANK0 ] PTR struct _IO_FILE
  1236 ;;		 -> sprintf@f(11), 
  1237 ;;  fmt             2   31[BANK0 ] PTR const unsigned char 
  1238 ;;		 -> STR_2(22), STR_1(22), 
  1239 ;;  ap              2   33[BANK0 ] PTR PTR void 
  1240 ;;		 -> sprintf@ap(2), 
  1241 ;; Auto vars:     Size  Location     Type
  1242 ;;  cfmt            2   66[COMRAM] PTR unsigned char 
  1243 ;;		 -> STR_2(22), STR_1(22), 
  1244 ;; Return value:  Size  Location     Type
  1245 ;;                  2   29[BANK0 ] int 
  1246 ;; Registers used:
  1247 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1248 ;; Tracked objects:
  1249 ;;		On entry : 0/0
  1250 ;;		On exit  : 0/0
  1251 ;;		Unchanged: 0/0
  1252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1253 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1254 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1256 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1257 ;;Total ram usage:        8 bytes
  1258 ;; Hardware stack levels used: 1
  1259 ;; Hardware stack levels required when called: 13
  1260 ;; This function calls:
  1261 ;;		_vfpfcnvrt
  1262 ;; This function is called by:
  1263 ;;		_sprintf
  1264 ;; This function uses a non-reentrant model
  1265 ;;
  1266                           
  1267                           	psect	text2
  1268   001C4E                     __ptext2:
  1269                           	callstack 0
  1270   001C4E                     _vfprintf:
  1271                           	callstack 16
  1272   001C4E                     
  1273                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1520: int vfprintf(FILE *fp, const c
      +                          har *fmt, va_list ap);D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1521: {;D:\MPLA
      +                          B_COMPILER\pic\sources\c99\common\doprnt.c: 1523:     char *cfmt;;D:\MPLAB_COMPILER\pic\
      +                          sources\c99\common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1274   001C4E  C07F  F043         	movff	vfprintf@fmt,vfprintf@cfmt
  1275   001C52  C080  F044         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1276                           
  1277                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1529:     while (*cfmt) {
  1278   001C56  EF3B  F00E         	goto	l3086
  1279   001C5A                     l3084:
  1280                           
  1281                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvrt(fp, &cfmt, ap);
  1282   001C5A  C07D  F03A         	movff	vfprintf@fp,vfpfcnvrt@fp
  1283   001C5E  C07E  F03B         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1284   001C62  0E43               	movlw	low vfprintf@cfmt
  1285   001C64  6E3C               	movwf	vfpfcnvrt@fmt^0,c
  1286   001C66  0E00               	movlw	high vfprintf@cfmt
  1287   001C68  6E3D               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1288   001C6A  C081  F03E         	movff	vfprintf@ap,vfpfcnvrt@ap
  1289   001C6E  C082  F03F         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1290   001C72  EC0C  F007         	call	_vfpfcnvrt	;wreg free
  1291   001C76                     l3086:
  1292                           
  1293                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1529:     while (*cfmt) {
  1294   001C76  C043  FFF6         	movff	vfprintf@cfmt,tblptrl
  1295   001C7A  C044  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1296   001C7E                     	if	0	;tblptru may be non-zero
  1297   001C7E                     	endif
  1298   001C7E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1299   001C7E  0E00               	movlw	low (__mediumconst shr (0+16))
  1300   001C80  6EF8               	movwf	tblptru,c
  1301   001C82                     	endif
  1302   001C82  0008               	tblrd		*
  1303   001C84  50F5               	movf	tablat,w,c
  1304   001C86  0900               	iorlw	0
  1305   001C88  A4D8               	btfss	status,2,c
  1306   001C8A  EF49  F00E         	goto	u2251
  1307   001C8E  EF4B  F00E         	goto	u2250
  1308   001C92                     u2251:
  1309   001C92  EF2D  F00E         	goto	l3084
  1310   001C96                     u2250:
  1311   001C96                     
  1312                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1313   001C96  0E00               	movlw	0
  1314   001C98  0100               	movlb	0	; () banked
  1315   001C9A  6F7E               	movwf	(?_vfprintf+1)& (0+255),b
  1316   001C9C  0E00               	movlw	0
  1317   001C9E  6F7D               	movwf	?_vfprintf& (0+255),b
  1318   001CA0                     
  1319                           ; BSR set to: 0
  1320   001CA0  0012               	return		;funcret
  1321   001CA2                     __end_of_vfprintf:
  1322                           	callstack 0
  1323                           
  1324 ;; *************** function _vfpfcnvrt *****************
  1325 ;; Defined at:
  1326 ;;		line 1007 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c"
  1327 ;; Parameters:    Size  Location     Type
  1328 ;;  fp              2   57[COMRAM] PTR struct _IO_FILE
  1329 ;;		 -> sprintf@f(11), 
  1330 ;;  fmt             2   59[COMRAM] PTR PTR unsigned char 
  1331 ;;		 -> vfprintf@cfmt(2), 
  1332 ;;  ap              2   61[COMRAM] PTR PTR void 
  1333 ;;		 -> sprintf@ap(2), 
  1334 ;; Auto vars:     Size  Location     Type
  1335 ;;  convarg         8   17[BANK0 ] struct .
  1336 ;;  cp              2   27[BANK0 ] PTR unsigned char 
  1337 ;;		 -> STR_2(22), STR_1(22), 
  1338 ;;  done            2   25[BANK0 ] int 
  1339 ;;  i               2    0        int 
  1340 ;;  c               1    0        unsigned char 
  1341 ;; Return value:  Size  Location     Type
  1342 ;;                  1    wreg      void 
  1343 ;; Registers used:
  1344 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1345 ;; Tracked objects:
  1346 ;;		On entry : 0/0
  1347 ;;		On exit  : 0/0
  1348 ;;		Unchanged: 0/0
  1349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1350 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1351 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1352 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1353 ;;      Totals:         9      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1354 ;;Total ram usage:       21 bytes
  1355 ;; Hardware stack levels used: 1
  1356 ;; Hardware stack levels required when called: 12
  1357 ;; This function calls:
  1358 ;;		_atoi
  1359 ;;		_dtoa
  1360 ;;		_fputc
  1361 ;;		_isdigit
  1362 ;; This function is called by:
  1363 ;;		_vfprintf
  1364 ;; This function uses a non-reentrant model
  1365 ;;
  1366                           
  1367                           	psect	text3
  1368   000E18                     __ptext3:
  1369                           	callstack 0
  1370   000E18                     _vfpfcnvrt:
  1371                           	callstack 16
  1372   000E18                     
  1373                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(FILE *fp, char *fmt[
      +                          ], va_list ap);D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1008: {;D:\MPLAB_COMPI
      +                          LER\pic\sources\c99\common\doprnt.c: 1009:     char c, *cp;;D:\MPLAB_COMPILER\pic\source
      +                          s\c99\common\doprnt.c: 1010:     int done, i;;D:\MPLAB_COMPILER\pic\sources\c99\common\d
      +                          oprnt.c: 1016:  } convarg;;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1019:     
      +                          if ((*fmt)[0] == '%') {
  1374   000E18  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1375   000E1C  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1376   000E20  CFDE FFF6          	movff	postinc2,tblptrl
  1377   000E24  CFDD FFF7          	movff	postdec2,tblptrh
  1378   000E28                     	if	0	;tblptru may be non-zero
  1379   000E28                     	endif
  1380   000E28                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1381   000E28  0E00               	movlw	low (__mediumconst shr (0+16))
  1382   000E2A  6EF8               	movwf	tblptru,c
  1383   000E2C                     	endif
  1384   000E2C  0008               	tblrd		*
  1385   000E2E  50F5               	movf	tablat,w,c
  1386   000E30  0A25               	xorlw	37
  1387   000E32  A4D8               	btfss	status,2,c
  1388   000E34  EF1E  F007         	goto	u2181
  1389   000E38  EF20  F007         	goto	u2180
  1390   000E3C                     u2181:
  1391   000E3C  EF52  F008         	goto	l3068
  1392   000E40                     u2180:
  1393   000E40                     
  1394                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1020:         ++*fmt;
  1395   000E40  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1396   000E44  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1397   000E48  2ADE               	incf	postinc2,f,c
  1398   000E4A  0E00               	movlw	0
  1399   000E4C  22DD               	addwfc	postdec2,f,c
  1400   000E4E                     
  1401                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1022:         flags = width = 0;
  1402   000E4E  0E00               	movlw	0
  1403   000E50  0100               	movlb	0	; () banked
  1404   000E52  6FF8               	movwf	(_width+1)& (0+255),b
  1405   000E54  0E00               	movlw	0
  1406   000E56  6FF7               	movwf	_width& (0+255),b
  1407   000E58  C0F7  F04B         	movff	_width,_flags
  1408   000E5C                     
  1409                           ; BSR set to: 0
  1410                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1023:         prec = -1;
  1411   000E5C  6847               	setf	_prec^0,c
  1412   000E5E  6848               	setf	(_prec+1)^0,c
  1413   000E60                     
  1414                           ; BSR set to: 0
  1415                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1027:         done = 0;
  1416   000E60  0E00               	movlw	0
  1417   000E62  6F7A               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1418   000E64  0E00               	movlw	0
  1419   000E66  6F79               	movwf	vfpfcnvrt@done& (0+255),b
  1420                           
  1421                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1028:         while (!done) {
  1422   000E68  EF62  F007         	goto	l3034
  1423   000E6C                     l3024:
  1424                           
  1425                           ; BSR set to: 0
  1426                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1038:                     flags |= (
      +                          1 << 1);
  1427   000E6C  824B               	bsf	_flags^0,1,c
  1428   000E6E                     
  1429                           ; BSR set to: 0
  1430                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1039:                     ++*fmt;
  1431   000E6E  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1432   000E72  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1433   000E76  2ADE               	incf	postinc2,f,c
  1434   000E78  0E00               	movlw	0
  1435   000E7A  22DD               	addwfc	postdec2,f,c
  1436                           
  1437                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1040:                     break;
  1438   000E7C  EF62  F007         	goto	l3034
  1439   000E80                     l3028:
  1440                           
  1441                           ; BSR set to: 0
  1442                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1061:                     done = 1;
  1443   000E80  0E00               	movlw	0
  1444   000E82  6F7A               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1445   000E84  0E01               	movlw	1
  1446   000E86  6F79               	movwf	vfpfcnvrt@done& (0+255),b
  1447                           
  1448                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1062:                     break;
  1449   000E88  EF62  F007         	goto	l3034
  1450   000E8C                     l3032:
  1451                           
  1452                           ; BSR set to: 0
  1453   000E8C  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1454   000E90  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1455   000E94  CFDE FFF6          	movff	postinc2,tblptrl
  1456   000E98  CFDD FFF7          	movff	postdec2,tblptrh
  1457   000E9C                     	if	0	;tblptru may be non-zero
  1458   000E9C                     	endif
  1459   000E9C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1460   000E9C  0E00               	movlw	low (__mediumconst shr (0+16))
  1461   000E9E  6EF8               	movwf	tblptru,c
  1462   000EA0                     	endif
  1463   000EA0  0008               	tblrd		*
  1464   000EA2  50F5               	movf	tablat,w,c
  1465   000EA4  6E40               	movwf	??_vfpfcnvrt^0,c
  1466   000EA6  6A41               	clrf	(??_vfpfcnvrt+1)^0,c
  1467                           
  1468                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1469                           ; Switch size 1, requested type "simple"
  1470                           ; Number of cases is 1, Range of values is 0 to 0
  1471                           ; switch strategies available:
  1472                           ; Name         Instructions Cycles
  1473                           ; simple_byte            4     3 (average)
  1474                           ;	Chosen strategy is simple_byte
  1475   000EA8  5041               	movf	(??_vfpfcnvrt+1)^0,w,c
  1476   000EAA  0A00               	xorlw	0	; case 0
  1477   000EAC  B4D8               	btfsc	status,2,c
  1478   000EAE  EF5B  F007         	goto	l3222
  1479   000EB2  EF40  F007         	goto	l3028
  1480   000EB6                     l3222:
  1481                           
  1482                           ; BSR set to: 0
  1483                           ; Switch size 1, requested type "simple"
  1484                           ; Number of cases is 1, Range of values is 48 to 48
  1485                           ; switch strategies available:
  1486                           ; Name         Instructions Cycles
  1487                           ; simple_byte            4     3 (average)
  1488                           ;	Chosen strategy is simple_byte
  1489   000EB6  5040               	movf	??_vfpfcnvrt^0,w,c
  1490   000EB8  0A30               	xorlw	48	; case 48
  1491   000EBA  B4D8               	btfsc	status,2,c
  1492   000EBC  EF36  F007         	goto	l3024
  1493   000EC0  EF40  F007         	goto	l3028
  1494   000EC4                     l3034:
  1495                           
  1496                           ; BSR set to: 0
  1497                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1028:         while (!done) {
  1498   000EC4  5179               	movf	vfpfcnvrt@done& (0+255),w,b
  1499   000EC6  117A               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  1500   000EC8  B4D8               	btfsc	status,2,c
  1501   000ECA  EF69  F007         	goto	u2191
  1502   000ECE  EF6B  F007         	goto	u2190
  1503   000ED2                     u2191:
  1504   000ED2  EF46  F007         	goto	l3032
  1505   000ED6                     u2190:
  1506   000ED6                     
  1507                           ; BSR set to: 0
  1508                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1074:         if ((*fmt)[0] == '*') 
      +                          {
  1509   000ED6  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1510   000EDA  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1511   000EDE  CFDE FFF6          	movff	postinc2,tblptrl
  1512   000EE2  CFDD FFF7          	movff	postdec2,tblptrh
  1513   000EE6                     	if	0	;tblptru may be non-zero
  1514   000EE6                     	endif
  1515   000EE6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1516   000EE6  0E00               	movlw	low (__mediumconst shr (0+16))
  1517   000EE8  6EF8               	movwf	tblptru,c
  1518   000EEA                     	endif
  1519   000EEA  0008               	tblrd		*
  1520   000EEC  50F5               	movf	tablat,w,c
  1521   000EEE  0A2A               	xorlw	42
  1522   000EF0  A4D8               	btfss	status,2,c
  1523   000EF2  EF7D  F007         	goto	u2201
  1524   000EF6  EF7F  F007         	goto	u2200
  1525   000EFA                     u2201:
  1526   000EFA  EFA8  F007         	goto	l3044
  1527   000EFE                     u2200:
  1528   000EFE                     
  1529                           ; BSR set to: 0
  1530                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1075:             ++*fmt;
  1531   000EFE  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1532   000F02  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1533   000F06  2ADE               	incf	postinc2,f,c
  1534   000F08  0E00               	movlw	0
  1535   000F0A  22DD               	addwfc	postdec2,f,c
  1536                           
  1537                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1076:             width = (*(int *)_
      +                          _va_arg(*(int **)ap, (int)0));
  1538   000F0C  C03E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1539   000F10  C03F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1540   000F14  CFDF F040          	movff	indf2,??_vfpfcnvrt
  1541   000F18  0E02               	movlw	2
  1542   000F1A  26DE               	addwf	postinc2,f,c
  1543   000F1C  CFDF F041          	movff	indf2,??_vfpfcnvrt+1
  1544   000F20  0E00               	movlw	0
  1545   000F22  22DD               	addwfc	postdec2,f,c
  1546   000F24  C040  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1547   000F28  C041  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1548   000F2C  CFDE F0F7          	movff	postinc2,_width
  1549   000F30  CFDD F0F8          	movff	postdec2,_width+1
  1550   000F34                     
  1551                           ; BSR set to: 0
  1552                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1077:             if (width < 0) {
  1553   000F34  BFF8               	btfsc	(_width+1)& (0+255),7,b
  1554   000F36  EFA1  F007         	goto	u2210
  1555   000F3A  EF9F  F007         	goto	u2211
  1556   000F3E                     u2211:
  1557   000F3E  EFDD  F007         	goto	l3052
  1558   000F42                     u2210:
  1559   000F42                     
  1560                           ; BSR set to: 0
  1561                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1078:                 flags |= (1 <<
      +                           0);
  1562   000F42  804B               	bsf	_flags^0,0,c
  1563                           
  1564                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1079:                 width = -width
      +                          ;
  1565   000F44  6DF7               	negf	_width& (0+255),b
  1566   000F46  1FF8               	comf	(_width+1)& (0+255),f,b
  1567   000F48  B0D8               	btfsc	status,0,c
  1568   000F4A  2BF8               	incf	(_width+1)& (0+255),f,b
  1569   000F4C  EFDD  F007         	goto	l3052
  1570   000F50                     l3044:
  1571                           
  1572                           ; BSR set to: 0
  1573                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1082:             width = atoi(*fmt)
      +                          ;
  1574   000F50  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1575   000F54  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1576   000F58  CFDE F013          	movff	postinc2,atoi@s
  1577   000F5C  CFDD F014          	movff	postdec2,atoi@s+1
  1578   000F60  EC53  F00C         	call	_atoi	;wreg free
  1579   000F64  C013  F0F7         	movff	?_atoi,_width
  1580   000F68  C014  F0F8         	movff	?_atoi+1,_width+1
  1581                           
  1582                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1083:             while ((0 && isdig
      +                          it((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  1583   000F6C  EFBF  F007         	goto	l3050
  1584   000F70                     l3046:
  1585                           
  1586                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1084:                 ++*fmt;
  1587   000F70  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1588   000F74  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1589   000F78  2ADE               	incf	postinc2,f,c
  1590   000F7A  0E00               	movlw	0
  1591   000F7C  22DD               	addwfc	postdec2,f,c
  1592   000F7E                     l3050:
  1593   000F7E  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1594   000F82  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1595   000F86  CFDE FFF6          	movff	postinc2,tblptrl
  1596   000F8A  CFDD FFF7          	movff	postdec2,tblptrh
  1597   000F8E                     	if	0	;tblptru may be non-zero
  1598   000F8E                     	endif
  1599   000F8E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1600   000F8E  0E00               	movlw	low (__mediumconst shr (0+16))
  1601   000F90  6EF8               	movwf	tblptru,c
  1602   000F92                     	endif
  1603   000F92  0008               	tblrd		*
  1604   000F94  CFF5 F040          	movff	tablat,??_vfpfcnvrt
  1605   000F98  0ED0               	movlw	208
  1606   000F9A  2440               	addwf	??_vfpfcnvrt^0,w,c
  1607   000F9C  6E41               	movwf	(??_vfpfcnvrt+1)^0,c
  1608   000F9E  6A42               	clrf	(??_vfpfcnvrt+2)^0,c
  1609   000FA0  0EFF               	movlw	255
  1610   000FA2  2242               	addwfc	(??_vfpfcnvrt+2)^0,f,c
  1611   000FA4  5042               	movf	(??_vfpfcnvrt+2)^0,w,c
  1612   000FA6  E109               	bnz	u2220
  1613   000FA8  0E0A               	movlw	10
  1614   000FAA  5C41               	subwf	(??_vfpfcnvrt+1)^0,w,c
  1615   000FAC  A0D8               	btfss	status,0,c
  1616   000FAE  EFDB  F007         	goto	u2221
  1617   000FB2  EFDD  F007         	goto	u2220
  1618   000FB6                     u2221:
  1619   000FB6  EFB8  F007         	goto	l3046
  1620   000FBA                     u2220:
  1621   000FBA                     l3052:
  1622                           
  1623                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt;
  1624   000FBA  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1625   000FBE  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1626   000FC2  CFDE F07B          	movff	postinc2,vfpfcnvrt@cp
  1627   000FC6  CFDD F07C          	movff	postdec2,vfpfcnvrt@cp+1
  1628   000FCA                     
  1629                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1187:   if (*cp == 'd' || *cp == 'i'
      +                          ) {
  1630   000FCA  C07B  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1631   000FCE  C07C  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1632   000FD2                     	if	0	;tblptru may be non-zero
  1633   000FD2                     	endif
  1634   000FD2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1635   000FD2  0E00               	movlw	low (__mediumconst shr (0+16))
  1636   000FD4  6EF8               	movwf	tblptru,c
  1637   000FD6                     	endif
  1638   000FD6  0008               	tblrd		*
  1639   000FD8  50F5               	movf	tablat,w,c
  1640   000FDA  0A64               	xorlw	100
  1641   000FDC  B4D8               	btfsc	status,2,c
  1642   000FDE  EFF3  F007         	goto	u2231
  1643   000FE2  EFF5  F007         	goto	u2230
  1644   000FE6                     u2231:
  1645   000FE6  EF05  F008         	goto	l3058
  1646   000FEA                     u2230:
  1647   000FEA  C07B  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1648   000FEE  C07C  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  1649   000FF2                     	if	0	;tblptru may be non-zero
  1650   000FF2                     	endif
  1651   000FF2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1652   000FF2  0E00               	movlw	low (__mediumconst shr (0+16))
  1653   000FF4  6EF8               	movwf	tblptru,c
  1654   000FF6                     	endif
  1655   000FF6  0008               	tblrd		*
  1656   000FF8  50F5               	movf	tablat,w,c
  1657   000FFA  0A69               	xorlw	105
  1658   000FFC  A4D8               	btfss	status,2,c
  1659   000FFE  EF03  F008         	goto	u2241
  1660   001002  EF05  F008         	goto	u2240
  1661   001006                     u2241:
  1662   001006  EF49  F008         	goto	l3064
  1663   00100A                     u2240:
  1664   00100A                     l3058:
  1665                           
  1666                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1230:    convarg.ll = (long long)(in
      +                          t)(*(int *)__va_arg(*(int **)ap, (int)0));
  1667   00100A  C03E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1668   00100E  C03F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1669   001012  CFDF F040          	movff	indf2,??_vfpfcnvrt
  1670   001016  0E02               	movlw	2
  1671   001018  26DE               	addwf	postinc2,f,c
  1672   00101A  CFDF F041          	movff	indf2,??_vfpfcnvrt+1
  1673   00101E  0E00               	movlw	0
  1674   001020  22DD               	addwfc	postdec2,f,c
  1675   001022  C040  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1676   001026  C041  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1677   00102A  CFDE F071          	movff	postinc2,vfpfcnvrt@convarg
  1678   00102E  CFDD F072          	movff	postdec2,vfpfcnvrt@convarg+1
  1679   001032  0100               	movlb	0	; () banked
  1680   001034  0E00               	movlw	0
  1681   001036  BF72               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  1682   001038  0EFF               	movlw	-1
  1683   00103A  6F73               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  1684   00103C  6F74               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  1685   00103E  6F75               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  1686   001040  6F76               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  1687   001042  6F77               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  1688   001044  6F78               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  1689                           
  1690                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1232:    *fmt = cp+1;
  1691   001046  0E01               	movlw	1
  1692   001048  257B               	addwf	vfpfcnvrt@cp& (0+255),w,b
  1693   00104A  6E40               	movwf	??_vfpfcnvrt^0,c
  1694   00104C  0E00               	movlw	0
  1695   00104E  217C               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  1696   001050  6E41               	movwf	(??_vfpfcnvrt+1)^0,c
  1697   001052  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1698   001056  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1699   00105A  C040  FFDE         	movff	??_vfpfcnvrt,postinc2
  1700   00105E  C041  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  1701   001062                     
  1702                           ; BSR set to: 0
  1703                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1233:    return (void) dtoa(fp, conv
      +                          arg.ll);;	Return value of _vfpfcnvrt is never used
  1704   001062  C03A  F028         	movff	vfpfcnvrt@fp,dtoa@fp
  1705   001066  C03B  F029         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1706   00106A  C071  F02A         	movff	vfpfcnvrt@convarg,dtoa@d
  1707   00106E  C072  F02B         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1708   001072  C073  F02C         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  1709   001076  C074  F02D         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  1710   00107A  C075  F02E         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  1711   00107E  C076  F02F         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  1712   001082  C077  F030         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  1713   001086  C078  F031         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  1714   00108A  EC69  F008         	call	_dtoa	;wreg free
  1715   00108E  EF68  F008         	goto	l1195
  1716   001092                     l3064:
  1717                           
  1718                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1509:         ++*fmt;
  1719   001092  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1720   001096  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1721   00109A  2ADE               	incf	postinc2,f,c
  1722   00109C  0E00               	movlw	0
  1723   00109E  22DD               	addwfc	postdec2,f,c
  1724   0010A0  EF68  F008         	goto	l1195
  1725   0010A4                     l3068:
  1726                           
  1727                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 1514:     fputc((int)(*fmt)[0], fp);
  1728   0010A4  C03C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1729   0010A8  C03D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1730   0010AC  CFDE FFF6          	movff	postinc2,tblptrl
  1731   0010B0  CFDD FFF7          	movff	postdec2,tblptrh
  1732   0010B4                     	if	0	;tblptru may be non-zero
  1733   0010B4                     	endif
  1734   0010B4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1735   0010B4  0E00               	movlw	low (__mediumconst shr (0+16))
  1736   0010B6  6EF8               	movwf	tblptru,c
  1737   0010B8                     	endif
  1738   0010B8  0008               	tblrd		*
  1739   0010BA  50F5               	movf	tablat,w,c
  1740   0010BC  6E0D               	movwf	fputc@c^0,c
  1741   0010BE  6A0E               	clrf	(fputc@c+1)^0,c
  1742   0010C0  C03A  F00F         	movff	vfpfcnvrt@fp,fputc@fp
  1743   0010C4  C03B  F010         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1744   0010C8  EC02  F00D         	call	_fputc	;wreg free
  1745   0010CC  EF49  F008         	goto	l3064
  1746   0010D0                     l1195:
  1747   0010D0  0012               	return		;funcret
  1748   0010D2                     __end_of_vfpfcnvrt:
  1749                           	callstack 0
  1750                           
  1751 ;; *************** function _dtoa *****************
  1752 ;; Defined at:
  1753 ;;		line 443 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c"
  1754 ;; Parameters:    Size  Location     Type
  1755 ;;  fp              2   39[COMRAM] PTR struct _IO_FILE
  1756 ;;		 -> sprintf@f(11), 
  1757 ;;  d               8   41[COMRAM] long long 
  1758 ;; Auto vars:     Size  Location     Type
  1759 ;;  n               8    6[BANK0 ] long long 
  1760 ;;  i               2   15[BANK0 ] int 
  1761 ;;  w               2    4[BANK0 ] int 
  1762 ;;  p               2    2[BANK0 ] int 
  1763 ;;  s               1   14[BANK0 ] unsigned char 
  1764 ;; Return value:  Size  Location     Type
  1765 ;;                  1    wreg      void 
  1766 ;; Registers used:
  1767 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1768 ;; Tracked objects:
  1769 ;;		On entry : 0/0
  1770 ;;		On exit  : 0/0
  1771 ;;		Unchanged: 0/0
  1772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1773 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1774 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1775 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1776 ;;      Totals:        18      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1777 ;;Total ram usage:       35 bytes
  1778 ;; Hardware stack levels used: 1
  1779 ;; Hardware stack levels required when called: 11
  1780 ;; This function calls:
  1781 ;;		___aodiv
  1782 ;;		___aomod
  1783 ;;		_abs
  1784 ;;		_pad
  1785 ;; This function is called by:
  1786 ;;		_vfpfcnvrt
  1787 ;; This function uses a non-reentrant model
  1788 ;;
  1789                           
  1790                           	psect	text4
  1791   0010D2                     __ptext4:
  1792                           	callstack 0
  1793   0010D2                     _dtoa:
  1794                           	callstack 16
  1795   0010D2                     
  1796                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 443: static void dtoa(FILE *fp, long
      +                           long d);D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 444: {;D:\MPLAB_COMPILER\pic
      +                          \sources\c99\common\doprnt.c: 445:  char s;;D:\MPLAB_COMPILER\pic\sources\c99\common\dop
      +                          rnt.c: 446:     int i, p, w;;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 447:    
      +                           long long n;;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 450:     n = d;
  1797   0010D2  C02A  F066         	movff	dtoa@d,dtoa@n
  1798   0010D6  C02B  F067         	movff	dtoa@d+1,dtoa@n+1
  1799   0010DA  C02C  F068         	movff	dtoa@d+2,dtoa@n+2
  1800   0010DE  C02D  F069         	movff	dtoa@d+3,dtoa@n+3
  1801   0010E2  C02E  F06A         	movff	dtoa@d+4,dtoa@n+4
  1802   0010E6  C02F  F06B         	movff	dtoa@d+5,dtoa@n+5
  1803   0010EA  C030  F06C         	movff	dtoa@d+6,dtoa@n+6
  1804   0010EE  C031  F06D         	movff	dtoa@d+7,dtoa@n+7
  1805   0010F2                     
  1806                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 451:     s = n < 0 ? 1 : 0;
  1807   0010F2  0100               	movlb	0	; () banked
  1808   0010F4  BF6D               	btfsc	(dtoa@n+7)& (0+255),7,b
  1809   0010F6  EF7F  F008         	goto	u2051
  1810   0010FA  EF82  F008         	goto	u2050
  1811   0010FE                     u2051:
  1812   0010FE  0E01               	movlw	1
  1813   001100  EF83  F008         	goto	u2060
  1814   001104                     u2050:
  1815   001104  0E00               	movlw	0
  1816   001106                     u2060:
  1817   001106  6F6E               	movwf	dtoa@s& (0+255),b
  1818   001108                     
  1819                           ; BSR set to: 0
  1820                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  1821   001108  516E               	movf	dtoa@s& (0+255),w,b
  1822   00110A  B4D8               	btfsc	status,2,c
  1823   00110C  EF8A  F008         	goto	u2071
  1824   001110  EF8C  F008         	goto	u2070
  1825   001114                     u2071:
  1826   001114  EF9C  F008         	goto	l2962
  1827   001118                     u2070:
  1828   001118                     
  1829                           ; BSR set to: 0
  1830                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 453:         n = -n;
  1831   001118  1F6D               	comf	(dtoa@n+7)& (0+255),f,b
  1832   00111A  1F6C               	comf	(dtoa@n+6)& (0+255),f,b
  1833   00111C  1F6B               	comf	(dtoa@n+5)& (0+255),f,b
  1834   00111E  1F6A               	comf	(dtoa@n+4)& (0+255),f,b
  1835   001120  1F69               	comf	(dtoa@n+3)& (0+255),f,b
  1836   001122  1F68               	comf	(dtoa@n+2)& (0+255),f,b
  1837   001124  1F67               	comf	(dtoa@n+1)& (0+255),f,b
  1838   001126  6D66               	negf	dtoa@n& (0+255),b
  1839   001128  0E00               	movlw	0
  1840   00112A  2367               	addwfc	(dtoa@n+1)& (0+255),f,b
  1841   00112C  2368               	addwfc	(dtoa@n+2)& (0+255),f,b
  1842   00112E  2369               	addwfc	(dtoa@n+3)& (0+255),f,b
  1843   001130  236A               	addwfc	(dtoa@n+4)& (0+255),f,b
  1844   001132  236B               	addwfc	(dtoa@n+5)& (0+255),f,b
  1845   001134  236C               	addwfc	(dtoa@n+6)& (0+255),f,b
  1846   001136  236D               	addwfc	(dtoa@n+7)& (0+255),f,b
  1847   001138                     l2962:
  1848                           
  1849                           ; BSR set to: 0
  1850                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 458:     if (!(prec < 0)) {
  1851   001138  BE48               	btfsc	(_prec+1)^0,7,c
  1852   00113A  EFA1  F008         	goto	u2081
  1853   00113E  EFA3  F008         	goto	u2080
  1854   001142                     u2081:
  1855   001142  EFA4  F008         	goto	l2966
  1856   001146                     u2080:
  1857   001146                     
  1858                           ; BSR set to: 0
  1859                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 459:         flags &= ~(1 << 1);
  1860   001146  924B               	bcf	_flags^0,1,c
  1861   001148                     l2966:
  1862                           
  1863                           ; BSR set to: 0
  1864                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 462:     p = (0 < prec) ? prec : 1;
  1865   001148  BE48               	btfsc	(_prec+1)^0,7,c
  1866   00114A  EFB1  F008         	goto	u2090
  1867   00114E  5048               	movf	(_prec+1)^0,w,c
  1868   001150  E106               	bnz	u2091
  1869   001152  0447               	decf	_prec^0,w,c
  1870   001154  B0D8               	btfsc	status,0,c
  1871   001156  EFAF  F008         	goto	u2091
  1872   00115A  EFB1  F008         	goto	u2090
  1873   00115E                     u2091:
  1874   00115E  EFB7  F008         	goto	l1157
  1875   001162                     u2090:
  1876   001162                     
  1877                           ; BSR set to: 0
  1878   001162  0E00               	movlw	0
  1879   001164  6F63               	movwf	(dtoa@p+1)& (0+255),b
  1880   001166  0E01               	movlw	1
  1881   001168  6F62               	movwf	dtoa@p& (0+255),b
  1882   00116A  EFBB  F008         	goto	l1159
  1883   00116E                     l1157:
  1884                           
  1885                           ; BSR set to: 0
  1886   00116E  C047  F062         	movff	_prec,dtoa@p
  1887   001172  C048  F063         	movff	_prec+1,dtoa@p+1
  1888   001176                     l1159:
  1889                           
  1890                           ; BSR set to: 0
  1891                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 463:     w = width;
  1892   001176  C0F7  F064         	movff	_width,dtoa@w
  1893   00117A  C0F8  F065         	movff	_width+1,dtoa@w+1
  1894   00117E                     
  1895                           ; BSR set to: 0
  1896                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 464:     if (s
  1897   00117E  516E               	movf	dtoa@s& (0+255),w,b
  1898   001180  B4D8               	btfsc	status,2,c
  1899   001182  EFC5  F008         	goto	u2101
  1900   001186  EFC7  F008         	goto	u2100
  1901   00118A                     u2101:
  1902   00118A  EFDE  F008         	goto	l1160
  1903   00118E                     u2100:
  1904   00118E                     
  1905                           ; BSR set to: 0
  1906                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 468:     ) {;D:\MPLAB_COMPILER\pic\s
      +                          ources\c99\common\doprnt.c: 469:         --w;
  1907   00118E  0764               	decf	dtoa@w& (0+255),f,b
  1908   001190  A0D8               	btfss	status,0,c
  1909   001192  0765               	decf	(dtoa@w+1)& (0+255),f,b
  1910   001194                     
  1911                           ; BSR set to: 0
  1912                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-' : '+';
  1913   001194  516E               	movf	dtoa@s& (0+255),w,b
  1914   001196  A4D8               	btfss	status,2,c
  1915   001198  EFD0  F008         	goto	u2111
  1916   00119C  EFD2  F008         	goto	u2110
  1917   0011A0                     u2111:
  1918   0011A0  EFD8  F008         	goto	l2978
  1919   0011A4                     u2110:
  1920   0011A4                     
  1921                           ; BSR set to: 0
  1922   0011A4  0E00               	movlw	0
  1923   0011A6  6F61               	movwf	(_dtoa$2372+1)& (0+255),b
  1924   0011A8  0E2B               	movlw	43
  1925   0011AA  6F60               	movwf	_dtoa$2372& (0+255),b
  1926   0011AC  EFDC  F008         	goto	l2980
  1927   0011B0                     l2978:
  1928                           
  1929                           ; BSR set to: 0
  1930   0011B0  0E00               	movlw	0
  1931   0011B2  6F61               	movwf	(_dtoa$2372+1)& (0+255),b
  1932   0011B4  0E2D               	movlw	45
  1933   0011B6  6F60               	movwf	_dtoa$2372& (0+255),b
  1934   0011B8                     l2980:
  1935                           
  1936                           ; BSR set to: 0
  1937   0011B8  C060  F06E         	movff	_dtoa$2372,dtoa@s
  1938   0011BC                     l1160:
  1939                           
  1940                           ; BSR set to: 0
  1941                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 480:     i = sizeof(dbuf) - 1;
  1942   0011BC  0E00               	movlw	0
  1943   0011BE  6F70               	movwf	(dtoa@i+1)& (0+255),b
  1944   0011C0  0E1F               	movlw	31
  1945   0011C2  6F6F               	movwf	dtoa@i& (0+255),b
  1946   0011C4                     
  1947                           ; BSR set to: 0
  1948                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] = '\0';
  1949   0011C4  0E00               	movlw	0
  1950   0011C6  0101               	movlb	1	; () banked
  1951   0011C8  6FFB               	movwf	(_dbuf+31)& (0+255),b
  1952                           
  1953                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 482:     while (!(i < 1) && (n || (0
      +                           < p)
  1954   0011CA  EF64  F009         	goto	l2994
  1955   0011CE                     l2984:
  1956                           
  1957                           ; BSR set to: 0
  1958                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 486:     )) {;D:\MPLAB_COMPILER\pic\
      +                          sources\c99\common\doprnt.c: 487:         --i;
  1959   0011CE  076F               	decf	dtoa@i& (0+255),f,b
  1960   0011D0  A0D8               	btfss	status,0,c
  1961   0011D2  0770               	decf	(dtoa@i+1)& (0+255),f,b
  1962   0011D4                     
  1963                           ; BSR set to: 0
  1964                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 488:         dbuf[i] = (char)((int)'
      +                          0' + abs(n % 10));
  1965   0011D4  0EDC               	movlw	low _dbuf
  1966   0011D6  256F               	addwf	dtoa@i& (0+255),w,b
  1967   0011D8  6ED9               	movwf	fsr2l,c
  1968   0011DA  0E01               	movlw	high _dbuf
  1969   0011DC  2170               	addwfc	(dtoa@i+1)& (0+255),w,b
  1970   0011DE  6EDA               	movwf	fsr2h,c
  1971   0011E0  C066  F00D         	movff	dtoa@n,___aomod@dividend
  1972   0011E4  C067  F00E         	movff	dtoa@n+1,___aomod@dividend+1
  1973   0011E8  C068  F00F         	movff	dtoa@n+2,___aomod@dividend+2
  1974   0011EC  C069  F010         	movff	dtoa@n+3,___aomod@dividend+3
  1975   0011F0  C06A  F011         	movff	dtoa@n+4,___aomod@dividend+4
  1976   0011F4  C06B  F012         	movff	dtoa@n+5,___aomod@dividend+5
  1977   0011F8  C06C  F013         	movff	dtoa@n+6,___aomod@dividend+6
  1978   0011FC  C06D  F014         	movff	dtoa@n+7,___aomod@dividend+7
  1979   001200  0E0A               	movlw	10
  1980   001202  6E15               	movwf	___aomod@divisor^0,c
  1981   001204  0E00               	movlw	0
  1982   001206  6E16               	movwf	(___aomod@divisor+1)^0,c
  1983   001208  0E00               	movlw	0
  1984   00120A  6E17               	movwf	(___aomod@divisor+2)^0,c
  1985   00120C  0E00               	movlw	0
  1986   00120E  6E18               	movwf	(___aomod@divisor+3)^0,c
  1987   001210  0E00               	movlw	0
  1988   001212  6E19               	movwf	(___aomod@divisor+4)^0,c
  1989   001214  0E00               	movlw	0
  1990   001216  6E1A               	movwf	(___aomod@divisor+5)^0,c
  1991   001218  0E00               	movlw	0
  1992   00121A  6E1B               	movwf	(___aomod@divisor+6)^0,c
  1993   00121C  0E00               	movlw	0
  1994   00121E  6E1C               	movwf	(___aomod@divisor+7)^0,c
  1995   001220  ECA1  F00B         	call	___aomod	;wreg free
  1996   001224  C00D  F032         	movff	?___aomod,??_dtoa
  1997   001228  C00E  F033         	movff	?___aomod+1,??_dtoa+1
  1998   00122C  C00F  F034         	movff	?___aomod+2,??_dtoa+2
  1999   001230  C010  F035         	movff	?___aomod+3,??_dtoa+3
  2000   001234  C011  F036         	movff	?___aomod+4,??_dtoa+4
  2001   001238  C012  F037         	movff	?___aomod+5,??_dtoa+5
  2002   00123C  C013  F038         	movff	?___aomod+6,??_dtoa+6
  2003   001240  C014  F039         	movff	?___aomod+7,??_dtoa+7
  2004   001244  C032  F01F         	movff	??_dtoa,abs@a
  2005   001248  C033  F020         	movff	??_dtoa+1,abs@a+1
  2006   00124C  ECF5  F00F         	call	_abs	;wreg free
  2007   001250  501F               	movf	?_abs^0,w,c
  2008   001252  0F30               	addlw	48
  2009   001254  6EDF               	movwf	indf2,c
  2010   001256                     
  2011                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 489:         --p;
  2012   001256  0100               	movlb	0	; () banked
  2013   001258  0762               	decf	dtoa@p& (0+255),f,b
  2014   00125A  A0D8               	btfss	status,0,c
  2015   00125C  0763               	decf	(dtoa@p+1)& (0+255),f,b
  2016   00125E                     
  2017                           ; BSR set to: 0
  2018                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 490:         --w;
  2019   00125E  0764               	decf	dtoa@w& (0+255),f,b
  2020   001260  A0D8               	btfss	status,0,c
  2021   001262  0765               	decf	(dtoa@w+1)& (0+255),f,b
  2022   001264                     
  2023                           ; BSR set to: 0
  2024                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 491:         n = n / 10;
  2025   001264  C066  F00D         	movff	dtoa@n,___aodiv@dividend
  2026   001268  C067  F00E         	movff	dtoa@n+1,___aodiv@dividend+1
  2027   00126C  C068  F00F         	movff	dtoa@n+2,___aodiv@dividend+2
  2028   001270  C069  F010         	movff	dtoa@n+3,___aodiv@dividend+3
  2029   001274  C06A  F011         	movff	dtoa@n+4,___aodiv@dividend+4
  2030   001278  C06B  F012         	movff	dtoa@n+5,___aodiv@dividend+5
  2031   00127C  C06C  F013         	movff	dtoa@n+6,___aodiv@dividend+6
  2032   001280  C06D  F014         	movff	dtoa@n+7,___aodiv@dividend+7
  2033   001284  0E0A               	movlw	10
  2034   001286  6E15               	movwf	___aodiv@divisor^0,c
  2035   001288  0E00               	movlw	0
  2036   00128A  6E16               	movwf	(___aodiv@divisor+1)^0,c
  2037   00128C  0E00               	movlw	0
  2038   00128E  6E17               	movwf	(___aodiv@divisor+2)^0,c
  2039   001290  0E00               	movlw	0
  2040   001292  6E18               	movwf	(___aodiv@divisor+3)^0,c
  2041   001294  0E00               	movlw	0
  2042   001296  6E19               	movwf	(___aodiv@divisor+4)^0,c
  2043   001298  0E00               	movlw	0
  2044   00129A  6E1A               	movwf	(___aodiv@divisor+5)^0,c
  2045   00129C  0E00               	movlw	0
  2046   00129E  6E1B               	movwf	(___aodiv@divisor+6)^0,c
  2047   0012A0  0E00               	movlw	0
  2048   0012A2  6E1C               	movwf	(___aodiv@divisor+7)^0,c
  2049   0012A4  ECDD  F00A         	call	___aodiv	;wreg free
  2050   0012A8  C00D  F066         	movff	?___aodiv,dtoa@n
  2051   0012AC  C00E  F067         	movff	?___aodiv+1,dtoa@n+1
  2052   0012B0  C00F  F068         	movff	?___aodiv+2,dtoa@n+2
  2053   0012B4  C010  F069         	movff	?___aodiv+3,dtoa@n+3
  2054   0012B8  C011  F06A         	movff	?___aodiv+4,dtoa@n+4
  2055   0012BC  C012  F06B         	movff	?___aodiv+5,dtoa@n+5
  2056   0012C0  C013  F06C         	movff	?___aodiv+6,dtoa@n+6
  2057   0012C4  C014  F06D         	movff	?___aodiv+7,dtoa@n+7
  2058   0012C8                     l2994:
  2059                           
  2060                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 482:     while (!(i < 1) && (n || (0
      +                           < p)
  2061   0012C8  0100               	movlb	0	; () banked
  2062   0012CA  BF70               	btfsc	(dtoa@i+1)& (0+255),7,b
  2063   0012CC  EF70  F009         	goto	u2121
  2064   0012D0  5170               	movf	(dtoa@i+1)& (0+255),w,b
  2065   0012D2  E108               	bnz	u2120
  2066   0012D4  056F               	decf	dtoa@i& (0+255),w,b
  2067   0012D6  A0D8               	btfss	status,0,c
  2068   0012D8  EF70  F009         	goto	u2121
  2069   0012DC  EF72  F009         	goto	u2120
  2070   0012E0                     u2121:
  2071   0012E0  EFA2  F009         	goto	l3004
  2072   0012E4                     u2120:
  2073   0012E4                     
  2074                           ; BSR set to: 0
  2075   0012E4  5166               	movf	dtoa@n& (0+255),w,b
  2076   0012E6  1167               	iorwf	(dtoa@n+1)& (0+255),w,b
  2077   0012E8  1168               	iorwf	(dtoa@n+2)& (0+255),w,b
  2078   0012EA  1169               	iorwf	(dtoa@n+3)& (0+255),w,b
  2079   0012EC  116A               	iorwf	(dtoa@n+4)& (0+255),w,b
  2080   0012EE  116B               	iorwf	(dtoa@n+5)& (0+255),w,b
  2081   0012F0  116C               	iorwf	(dtoa@n+6)& (0+255),w,b
  2082   0012F2  116D               	iorwf	(dtoa@n+7)& (0+255),w,b
  2083   0012F4  A4D8               	btfss	status,2,c
  2084   0012F6  EF7F  F009         	goto	u2131
  2085   0012FA  EF81  F009         	goto	u2130
  2086   0012FE                     u2131:
  2087   0012FE  EFE7  F008         	goto	l2984
  2088   001302                     u2130:
  2089   001302                     
  2090                           ; BSR set to: 0
  2091   001302  BF63               	btfsc	(dtoa@p+1)& (0+255),7,b
  2092   001304  EF8E  F009         	goto	u2140
  2093   001308  5163               	movf	(dtoa@p+1)& (0+255),w,b
  2094   00130A  E106               	bnz	u2141
  2095   00130C  0562               	decf	dtoa@p& (0+255),w,b
  2096   00130E  B0D8               	btfsc	status,0,c
  2097   001310  EF8C  F009         	goto	u2141
  2098   001314  EF8E  F009         	goto	u2140
  2099   001318                     u2141:
  2100   001318  EFE7  F008         	goto	l2984
  2101   00131C                     u2140:
  2102   00131C                     
  2103                           ; BSR set to: 0
  2104   00131C  BF65               	btfsc	(dtoa@w+1)& (0+255),7,b
  2105   00131E  EF99  F009         	goto	u2151
  2106   001322  5165               	movf	(dtoa@w+1)& (0+255),w,b
  2107   001324  E108               	bnz	u2150
  2108   001326  0564               	decf	dtoa@w& (0+255),w,b
  2109   001328  A0D8               	btfss	status,0,c
  2110   00132A  EF99  F009         	goto	u2151
  2111   00132E  EF9B  F009         	goto	u2150
  2112   001332                     u2151:
  2113   001332  EFA2  F009         	goto	l3004
  2114   001336                     u2150:
  2115   001336                     
  2116                           ; BSR set to: 0
  2117   001336  B24B               	btfsc	_flags^0,1,c
  2118   001338  EFA0  F009         	goto	u2161
  2119   00133C  EFA2  F009         	goto	u2160
  2120   001340                     u2161:
  2121   001340  EFE7  F008         	goto	l2984
  2122   001344                     u2160:
  2123   001344                     l3004:
  2124                           
  2125                           ; BSR set to: 0
  2126                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 495:     if (s != 0) {
  2127   001344  516E               	movf	dtoa@s& (0+255),w,b
  2128   001346  B4D8               	btfsc	status,2,c
  2129   001348  EFA8  F009         	goto	u2171
  2130   00134C  EFAA  F009         	goto	u2170
  2131   001350                     u2171:
  2132   001350  EFB5  F009         	goto	l3010
  2133   001354                     u2170:
  2134   001354                     
  2135                           ; BSR set to: 0
  2136                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 496:         --i;
  2137   001354  076F               	decf	dtoa@i& (0+255),f,b
  2138   001356  A0D8               	btfss	status,0,c
  2139   001358  0770               	decf	(dtoa@i+1)& (0+255),f,b
  2140   00135A                     
  2141                           ; BSR set to: 0
  2142                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 497:         dbuf[i] = s;
  2143   00135A  0EDC               	movlw	low _dbuf
  2144   00135C  256F               	addwf	dtoa@i& (0+255),w,b
  2145   00135E  6ED9               	movwf	fsr2l,c
  2146   001360  0E01               	movlw	high _dbuf
  2147   001362  2170               	addwfc	(dtoa@i+1)& (0+255),w,b
  2148   001364  6EDA               	movwf	fsr2h,c
  2149   001366  C06E  FFDF         	movff	dtoa@s,indf2
  2150   00136A                     l3010:
  2151                           
  2152                           ; BSR set to: 0
  2153                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 501:     return (void) pad(fp, &dbuf
      +                          [i], w);
  2154   00136A  C028  F01D         	movff	dtoa@fp,pad@fp
  2155   00136E  C029  F01E         	movff	dtoa@fp+1,pad@fp+1
  2156   001372  0EDC               	movlw	low _dbuf
  2157   001374  256F               	addwf	dtoa@i& (0+255),w,b
  2158   001376  6E1F               	movwf	pad@buf^0,c
  2159   001378  0E01               	movlw	high _dbuf
  2160   00137A  2170               	addwfc	(dtoa@i+1)& (0+255),w,b
  2161   00137C  6E20               	movwf	(pad@buf+1)^0,c
  2162   00137E  C064  F021         	movff	dtoa@w,pad@p
  2163   001382  C065  F022         	movff	dtoa@w+1,pad@p+1
  2164   001386  EC67  F00D         	call	_pad	;wreg free
  2165   00138A  0012               	return		;funcret
  2166   00138C                     __end_of_dtoa:
  2167                           	callstack 0
  2168                           
  2169 ;; *************** function _pad *****************
  2170 ;; Defined at:
  2171 ;;		line 133 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c"
  2172 ;; Parameters:    Size  Location     Type
  2173 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  2174 ;;		 -> sprintf@f(11), 
  2175 ;;  buf             2   30[COMRAM] PTR unsigned char 
  2176 ;;		 -> dbuf(32), 
  2177 ;;  p               2   32[COMRAM] int 
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;  w               2   37[COMRAM] int 
  2180 ;;  i               2   35[COMRAM] int 
  2181 ;; Return value:  Size  Location     Type
  2182 ;;                  1    wreg      void 
  2183 ;; Registers used:
  2184 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2185 ;; Tracked objects:
  2186 ;;		On entry : 0/0
  2187 ;;		On exit  : 0/0
  2188 ;;		Unchanged: 0/0
  2189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2190 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2191 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2192 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2193 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2194 ;;Total ram usage:       11 bytes
  2195 ;; Hardware stack levels used: 1
  2196 ;; Hardware stack levels required when called: 10
  2197 ;; This function calls:
  2198 ;;		_fputc
  2199 ;;		_fputs
  2200 ;; This function is called by:
  2201 ;;		_dtoa
  2202 ;; This function uses a non-reentrant model
  2203 ;;
  2204                           
  2205                           	psect	text5
  2206   001ACE                     __ptext5:
  2207                           	callstack 0
  2208   001ACE                     _pad:
  2209                           	callstack 16
  2210   001ACE                     
  2211                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 133: static void pad(FILE *fp, char 
      +                          *buf, int p);D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 134: {;D:\MPLAB_COMPILER
      +                          \pic\sources\c99\common\doprnt.c: 135:     int i, w;;D:\MPLAB_COMPILER\pic\sources\c99\c
      +                          ommon\doprnt.c: 139:     if (flags & (1 << 0)) {
  2212   001ACE  A04B               	btfss	_flags^0,0,c
  2213   001AD0  EF6C  F00D         	goto	u2001
  2214   001AD4  EF6E  F00D         	goto	u2000
  2215   001AD8                     u2001:
  2216   001AD8  EF78  F00D         	goto	l2936
  2217   001ADC                     u2000:
  2218   001ADC                     
  2219                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 140:         fputs((const char *)buf
      +                          , fp);
  2220   001ADC  C01F  F016         	movff	pad@buf,fputs@s
  2221   001AE0  C020  F017         	movff	pad@buf+1,fputs@s+1
  2222   001AE4  C01D  F018         	movff	pad@fp,fputs@fp
  2223   001AE8  C01E  F019         	movff	pad@fp+1,fputs@fp+1
  2224   001AEC  ECB2  F00F         	call	_fputs	;wreg free
  2225   001AF0                     l2936:
  2226                           
  2227                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 145:     w = (p < 0) ? 0 : p;
  2228   001AF0  BE22               	btfsc	(pad@p+1)^0,7,c
  2229   001AF2  EF7D  F00D         	goto	u2011
  2230   001AF6  EF7F  F00D         	goto	u2010
  2231   001AFA                     u2011:
  2232   001AFA  EF85  F00D         	goto	l2940
  2233   001AFE                     u2010:
  2234   001AFE  C021  F026         	movff	pad@p,pad@w
  2235   001B02  C022  F027         	movff	pad@p+1,pad@w+1
  2236   001B06  EF89  F00D         	goto	l1146
  2237   001B0A                     l2940:
  2238   001B0A  0E00               	movlw	0
  2239   001B0C  6E27               	movwf	(pad@w+1)^0,c
  2240   001B0E  0E00               	movlw	0
  2241   001B10  6E26               	movwf	pad@w^0,c
  2242   001B12                     l1146:
  2243                           
  2244                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  2245   001B12  0E00               	movlw	0
  2246   001B14  6E25               	movwf	(pad@i+1)^0,c
  2247   001B16  0E00               	movlw	0
  2248   001B18  6E24               	movwf	pad@i^0,c
  2249                           
  2250                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 147:     while (i < w) {
  2251   001B1A  EF9B  F00D         	goto	l2946
  2252   001B1E                     l2942:
  2253                           
  2254                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 148:         fputc(' ', fp);
  2255   001B1E  0E00               	movlw	0
  2256   001B20  6E0E               	movwf	(fputc@c+1)^0,c
  2257   001B22  0E20               	movlw	32
  2258   001B24  6E0D               	movwf	fputc@c^0,c
  2259   001B26  C01D  F00F         	movff	pad@fp,fputc@fp
  2260   001B2A  C01E  F010         	movff	pad@fp+1,fputc@fp+1
  2261   001B2E  EC02  F00D         	call	_fputc	;wreg free
  2262   001B32                     
  2263                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 149:         ++i;
  2264   001B32  4A24               	infsnz	pad@i^0,f,c
  2265   001B34  2A25               	incf	(pad@i+1)^0,f,c
  2266   001B36                     l2946:
  2267                           
  2268                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 147:     while (i < w) {
  2269   001B36  5026               	movf	pad@w^0,w,c
  2270   001B38  5C24               	subwf	pad@i^0,w,c
  2271   001B3A  5025               	movf	(pad@i+1)^0,w,c
  2272   001B3C  0A80               	xorlw	128
  2273   001B3E  6E23               	movwf	??_pad^0,c
  2274   001B40  5027               	movf	(pad@w+1)^0,w,c
  2275   001B42  0A80               	xorlw	128
  2276   001B44  5823               	subwfb	??_pad^0,w,c
  2277   001B46  A0D8               	btfss	status,0,c
  2278   001B48  EFA8  F00D         	goto	u2021
  2279   001B4C  EFAA  F00D         	goto	u2020
  2280   001B50                     u2021:
  2281   001B50  EF8F  F00D         	goto	l2942
  2282   001B54                     u2020:
  2283   001B54                     
  2284                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 154:     if (!(flags & (1 << 0))) {
  2285   001B54  B04B               	btfsc	_flags^0,0,c
  2286   001B56  EFAF  F00D         	goto	u2031
  2287   001B5A  EFB1  F00D         	goto	u2030
  2288   001B5E                     u2031:
  2289   001B5E  EFBB  F00D         	goto	l1151
  2290   001B62                     u2030:
  2291   001B62                     
  2292                           ;D:\MPLAB_COMPILER\pic\sources\c99\common\doprnt.c: 156:         fputs((const char *)buf
      +                          , fp);
  2293   001B62  C01F  F016         	movff	pad@buf,fputs@s
  2294   001B66  C020  F017         	movff	pad@buf+1,fputs@s+1
  2295   001B6A  C01D  F018         	movff	pad@fp,fputs@fp
  2296   001B6E  C01E  F019         	movff	pad@fp+1,fputs@fp+1
  2297   001B72  ECB2  F00F         	call	_fputs	;wreg free
  2298   001B76                     l1151:
  2299   001B76  0012               	return		;funcret
  2300   001B78                     __end_of_pad:
  2301                           	callstack 0
  2302                           
  2303 ;; *************** function _fputs *****************
  2304 ;; Defined at:
  2305 ;;		line 8 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\nf_fputs.c"
  2306 ;; Parameters:    Size  Location     Type
  2307 ;;  s               2   21[COMRAM] PTR const unsigned char 
  2308 ;;		 -> dbuf(32), 
  2309 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  2310 ;;		 -> sprintf@f(11), 
  2311 ;; Auto vars:     Size  Location     Type
  2312 ;;  i               2   26[COMRAM] int 
  2313 ;;  c               1   25[COMRAM] unsigned char 
  2314 ;; Return value:  Size  Location     Type
  2315 ;;                  2   21[COMRAM] int 
  2316 ;; Registers used:
  2317 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2318 ;; Tracked objects:
  2319 ;;		On entry : 0/0
  2320 ;;		On exit  : 0/0
  2321 ;;		Unchanged: 0/0
  2322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2323 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2324 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2326 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2327 ;;Total ram usage:        7 bytes
  2328 ;; Hardware stack levels used: 1
  2329 ;; Hardware stack levels required when called: 9
  2330 ;; This function calls:
  2331 ;;		_fputc
  2332 ;; This function is called by:
  2333 ;;		_pad
  2334 ;; This function uses a non-reentrant model
  2335 ;;
  2336                           
  2337                           	psect	text6
  2338   001F64                     __ptext6:
  2339                           	callstack 0
  2340   001F64                     _fputs:
  2341                           	callstack 16
  2342   001F64  0E00               	movlw	0
  2343   001F66  6E1C               	movwf	(fputs@i+1)^0,c
  2344   001F68  0E00               	movlw	0
  2345   001F6A  6E1B               	movwf	fputs@i^0,c
  2346   001F6C  EFC3  F00F         	goto	l2850
  2347   001F70                     l2846:
  2348   001F70  C01A  F00D         	movff	fputs@c,fputc@c
  2349   001F74  6A0E               	clrf	(fputc@c+1)^0,c
  2350   001F76  C018  F00F         	movff	fputs@fp,fputc@fp
  2351   001F7A  C019  F010         	movff	fputs@fp+1,fputc@fp+1
  2352   001F7E  EC02  F00D         	call	_fputc	;wreg free
  2353   001F82  4A1B               	infsnz	fputs@i^0,f,c
  2354   001F84  2A1C               	incf	(fputs@i+1)^0,f,c
  2355   001F86                     l2850:
  2356   001F86  501B               	movf	fputs@i^0,w,c
  2357   001F88  2416               	addwf	fputs@s^0,w,c
  2358   001F8A  6ED9               	movwf	fsr2l,c
  2359   001F8C  501C               	movf	(fputs@i+1)^0,w,c
  2360   001F8E  2017               	addwfc	(fputs@s+1)^0,w,c
  2361   001F90  6EDA               	movwf	fsr2h,c
  2362   001F92  50DF               	movf	indf2,w,c
  2363   001F94  6E1A               	movwf	fputs@c^0,c
  2364   001F96  501A               	movf	fputs@c^0,w,c
  2365   001F98  A4D8               	btfss	status,2,c
  2366   001F9A  EFD1  F00F         	goto	u1861
  2367   001F9E  EFD3  F00F         	goto	u1860
  2368   001FA2                     u1861:
  2369   001FA2  EFB8  F00F         	goto	l2846
  2370   001FA6                     u1860:
  2371   001FA6  0012               	return		;funcret
  2372   001FA8                     __end_of_fputs:
  2373                           	callstack 0
  2374                           
  2375 ;; *************** function _fputc *****************
  2376 ;; Defined at:
  2377 ;;		line 8 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\nf_fputc.c"
  2378 ;; Parameters:    Size  Location     Type
  2379 ;;  c               2   12[COMRAM] int 
  2380 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
  2381 ;;		 -> sprintf@f(11), 
  2382 ;; Auto vars:     Size  Location     Type
  2383 ;;		None
  2384 ;; Return value:  Size  Location     Type
  2385 ;;                  2   12[COMRAM] int 
  2386 ;; Registers used:
  2387 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2388 ;; Tracked objects:
  2389 ;;		On entry : 0/0
  2390 ;;		On exit  : 0/0
  2391 ;;		Unchanged: 0/0
  2392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2393 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2395 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2396 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2397 ;;Total ram usage:        9 bytes
  2398 ;; Hardware stack levels used: 1
  2399 ;; Hardware stack levels required when called: 8
  2400 ;; This function calls:
  2401 ;;		_putch
  2402 ;; This function is called by:
  2403 ;;		_pad
  2404 ;;		_vfpfcnvrt
  2405 ;;		_fputs
  2406 ;; This function uses a non-reentrant model
  2407 ;;
  2408                           
  2409                           	psect	text7
  2410   001A04                     __ptext7:
  2411                           	callstack 0
  2412   001A04                     _fputc:
  2413                           	callstack 19
  2414   001A04  500F               	movf	fputc@fp^0,w,c
  2415   001A06  1010               	iorwf	(fputc@fp+1)^0,w,c
  2416   001A08  B4D8               	btfsc	status,2,c
  2417   001A0A  EF09  F00D         	goto	u1821
  2418   001A0E  EF0B  F00D         	goto	u1820
  2419   001A12                     u1821:
  2420   001A12  EF14  F00D         	goto	l2834
  2421   001A16                     u1820:
  2422   001A16  500F               	movf	fputc@fp^0,w,c
  2423   001A18  1010               	iorwf	(fputc@fp+1)^0,w,c
  2424   001A1A  A4D8               	btfss	status,2,c
  2425   001A1C  EF12  F00D         	goto	u1831
  2426   001A20  EF14  F00D         	goto	u1830
  2427   001A24                     u1831:
  2428   001A24  EF19  F00D         	goto	l2836
  2429   001A28                     u1830:
  2430   001A28                     l2834:
  2431   001A28  500D               	movf	fputc@c^0,w,c
  2432   001A2A  ECCA  F011         	call	_putch
  2433   001A2E  EF66  F00D         	goto	l1259
  2434   001A32                     l2836:
  2435   001A32  EE20 F009          	lfsr	2,9
  2436   001A36  500F               	movf	fputc@fp^0,w,c
  2437   001A38  26D9               	addwf	fsr2l,f,c
  2438   001A3A  5010               	movf	(fputc@fp+1)^0,w,c
  2439   001A3C  22DA               	addwfc	fsr2h,f,c
  2440   001A3E  50DE               	movf	postinc2,w,c
  2441   001A40  10DE               	iorwf	postinc2,w,c
  2442   001A42  B4D8               	btfsc	status,2,c
  2443   001A44  EF26  F00D         	goto	u1841
  2444   001A48  EF28  F00D         	goto	u1840
  2445   001A4C                     u1841:
  2446   001A4C  EF43  F00D         	goto	l2840
  2447   001A50                     u1840:
  2448   001A50  EE20 F009          	lfsr	2,9
  2449   001A54  500F               	movf	fputc@fp^0,w,c
  2450   001A56  26D9               	addwf	fsr2l,f,c
  2451   001A58  5010               	movf	(fputc@fp+1)^0,w,c
  2452   001A5A  22DA               	addwfc	fsr2h,f,c
  2453   001A5C  EE10 F003          	lfsr	1,3
  2454   001A60  500F               	movf	fputc@fp^0,w,c
  2455   001A62  26E1               	addwf	fsr1l,f,c
  2456   001A64  5010               	movf	(fputc@fp+1)^0,w,c
  2457   001A66  22E2               	addwfc	fsr1h,f,c
  2458   001A68  50DE               	movf	postinc2,w,c
  2459   001A6A  5CE6               	subwf	postinc1,w,c
  2460   001A6C  50E6               	movf	postinc1,w,c
  2461   001A6E  0A80               	xorlw	128
  2462   001A70  6E15               	movwf	(??_fputc+4)^0,c
  2463   001A72  50DE               	movf	postinc2,w,c
  2464   001A74  0A80               	xorlw	128
  2465   001A76  5815               	subwfb	(??_fputc+4)^0,w,c
  2466   001A78  B0D8               	btfsc	status,0,c
  2467   001A7A  EF41  F00D         	goto	u1851
  2468   001A7E  EF43  F00D         	goto	u1850
  2469   001A82                     u1851:
  2470   001A82  EF66  F00D         	goto	l1259
  2471   001A86                     u1850:
  2472   001A86                     l2840:
  2473   001A86  EE20 F003          	lfsr	2,3
  2474   001A8A  500F               	movf	fputc@fp^0,w,c
  2475   001A8C  26D9               	addwf	fsr2l,f,c
  2476   001A8E  5010               	movf	(fputc@fp+1)^0,w,c
  2477   001A90  22DA               	addwfc	fsr2h,f,c
  2478   001A92  CFDE F011          	movff	postinc2,??_fputc
  2479   001A96  CFDD F012          	movff	postdec2,??_fputc+1
  2480   001A9A  C00F  FFD9         	movff	fputc@fp,fsr2l
  2481   001A9E  C010  FFDA         	movff	fputc@fp+1,fsr2h
  2482   001AA2  CFDE F013          	movff	postinc2,??_fputc+2
  2483   001AA6  CFDD F014          	movff	postdec2,??_fputc+3
  2484   001AAA  5011               	movf	??_fputc^0,w,c
  2485   001AAC  2413               	addwf	(??_fputc+2)^0,w,c
  2486   001AAE  6ED9               	movwf	fsr2l,c
  2487   001AB0  5012               	movf	(??_fputc+1)^0,w,c
  2488   001AB2  2014               	addwfc	(??_fputc+3)^0,w,c
  2489   001AB4  6EDA               	movwf	fsr2h,c
  2490   001AB6  C00D  FFDF         	movff	fputc@c,indf2
  2491   001ABA  EE20 F003          	lfsr	2,3
  2492   001ABE  500F               	movf	fputc@fp^0,w,c
  2493   001AC0  26D9               	addwf	fsr2l,f,c
  2494   001AC2  5010               	movf	(fputc@fp+1)^0,w,c
  2495   001AC4  22DA               	addwfc	fsr2h,f,c
  2496   001AC6  2ADE               	incf	postinc2,f,c
  2497   001AC8  0E00               	movlw	0
  2498   001ACA  22DD               	addwfc	postdec2,f,c
  2499   001ACC                     l1259:
  2500   001ACC  0012               	return		;funcret
  2501   001ACE                     __end_of_fputc:
  2502                           	callstack 0
  2503                           
  2504 ;; *************** function _putch *****************
  2505 ;; Defined at:
  2506 ;;		line 7 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\putch.c"
  2507 ;; Parameters:    Size  Location     Type
  2508 ;;  c               1    wreg     unsigned char 
  2509 ;; Auto vars:     Size  Location     Type
  2510 ;;  c               1    0[COMRAM] unsigned char 
  2511 ;; Return value:  Size  Location     Type
  2512 ;;                  1    wreg      void 
  2513 ;; Registers used:
  2514 ;;		wreg
  2515 ;; Tracked objects:
  2516 ;;		On entry : 0/0
  2517 ;;		On exit  : 0/0
  2518 ;;		Unchanged: 0/0
  2519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2524 ;;Total ram usage:        0 bytes
  2525 ;; Hardware stack levels used: 1
  2526 ;; Hardware stack levels required when called: 7
  2527 ;; This function calls:
  2528 ;;		Nothing
  2529 ;; This function is called by:
  2530 ;;		_fputc
  2531 ;; This function uses a non-reentrant model
  2532 ;;
  2533                           
  2534                           	psect	text8
  2535   002394                     __ptext8:
  2536                           	callstack 0
  2537   002394                     _putch:
  2538                           	callstack 19
  2539   002394  0012               	return		;funcret
  2540   002396                     __end_of_putch:
  2541                           	callstack 0
  2542                           
  2543 ;; *************** function _abs *****************
  2544 ;; Defined at:
  2545 ;;		line 1 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\abs.c"
  2546 ;; Parameters:    Size  Location     Type
  2547 ;;  a               2   30[COMRAM] int 
  2548 ;; Auto vars:     Size  Location     Type
  2549 ;;		None
  2550 ;; Return value:  Size  Location     Type
  2551 ;;                  2   30[COMRAM] int 
  2552 ;; Registers used:
  2553 ;;		wreg, status,2, status,0
  2554 ;; Tracked objects:
  2555 ;;		On entry : 0/0
  2556 ;;		On exit  : 0/0
  2557 ;;		Unchanged: 0/0
  2558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2559 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2561 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2562 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2563 ;;Total ram usage:        4 bytes
  2564 ;; Hardware stack levels used: 1
  2565 ;; Hardware stack levels required when called: 7
  2566 ;; This function calls:
  2567 ;;		Nothing
  2568 ;; This function is called by:
  2569 ;;		_dtoa
  2570 ;; This function uses a non-reentrant model
  2571 ;;
  2572                           
  2573                           	psect	text9
  2574   001FEA                     __ptext9:
  2575                           	callstack 0
  2576   001FEA                     _abs:
  2577                           	callstack 19
  2578   001FEA  BE20               	btfsc	(abs@a+1)^0,7,c
  2579   001FEC  EF02  F010         	goto	u2040
  2580   001FF0  5020               	movf	(abs@a+1)^0,w,c
  2581   001FF2  E106               	bnz	u2041
  2582   001FF4  041F               	decf	abs@a^0,w,c
  2583   001FF6  B0D8               	btfsc	status,0,c
  2584   001FF8  EF00  F010         	goto	u2041
  2585   001FFC  EF02  F010         	goto	u2040
  2586   002000                     u2041:
  2587   002000  EF10  F010         	goto	l1205
  2588   002004                     u2040:
  2589   002004  C01F  F021         	movff	abs@a,??_abs
  2590   002008  C020  F022         	movff	abs@a+1,??_abs+1
  2591   00200C  1E21               	comf	??_abs^0,f,c
  2592   00200E  1E22               	comf	(??_abs+1)^0,f,c
  2593   002010  4A21               	infsnz	??_abs^0,f,c
  2594   002012  2A22               	incf	(??_abs+1)^0,f,c
  2595   002014  C021  F01F         	movff	??_abs,?_abs
  2596   002018  C022  F020         	movff	??_abs+1,?_abs+1
  2597   00201C  EF14  F010         	goto	l1208
  2598   002020                     l1205:
  2599   002020  C01F  F01F         	movff	abs@a,?_abs
  2600   002024  C020  F020         	movff	abs@a+1,?_abs+1
  2601   002028                     l1208:
  2602   002028  0012               	return		;funcret
  2603   00202A                     __end_of_abs:
  2604                           	callstack 0
  2605                           
  2606 ;; *************** function ___aomod *****************
  2607 ;; Defined at:
  2608 ;;		line 9 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\aomod.c"
  2609 ;; Parameters:    Size  Location     Type
  2610 ;;  dividend        8   12[COMRAM] long long 
  2611 ;;  divisor         8   20[COMRAM] long long 
  2612 ;; Auto vars:     Size  Location     Type
  2613 ;;  sign            1   29[COMRAM] unsigned char 
  2614 ;;  counter         1   28[COMRAM] unsigned char 
  2615 ;; Return value:  Size  Location     Type
  2616 ;;                  8   12[COMRAM] long long 
  2617 ;; Registers used:
  2618 ;;		wreg, status,2, status,0
  2619 ;; Tracked objects:
  2620 ;;		On entry : 0/0
  2621 ;;		On exit  : 0/0
  2622 ;;		Unchanged: 0/0
  2623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2624 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2625 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2627 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2628 ;;Total ram usage:       18 bytes
  2629 ;; Hardware stack levels used: 1
  2630 ;; Hardware stack levels required when called: 7
  2631 ;; This function calls:
  2632 ;;		Nothing
  2633 ;; This function is called by:
  2634 ;;		_dtoa
  2635 ;; This function uses a non-reentrant model
  2636 ;;
  2637                           
  2638                           	psect	text10
  2639   001742                     __ptext10:
  2640                           	callstack 0
  2641   001742                     ___aomod:
  2642                           	callstack 19
  2643   001742  0E00               	movlw	0
  2644   001744  6E1E               	movwf	___aomod@sign^0,c
  2645   001746  BE14               	btfsc	(___aomod@dividend+7)^0,7,c
  2646   001748  EFAA  F00B         	goto	u1940
  2647   00174C  EFA8  F00B         	goto	u1941
  2648   001750                     u1941:
  2649   001750  EFBC  F00B         	goto	l2904
  2650   001754                     u1940:
  2651   001754  1E14               	comf	(___aomod@dividend+7)^0,f,c
  2652   001756  1E13               	comf	(___aomod@dividend+6)^0,f,c
  2653   001758  1E12               	comf	(___aomod@dividend+5)^0,f,c
  2654   00175A  1E11               	comf	(___aomod@dividend+4)^0,f,c
  2655   00175C  1E10               	comf	(___aomod@dividend+3)^0,f,c
  2656   00175E  1E0F               	comf	(___aomod@dividend+2)^0,f,c
  2657   001760  1E0E               	comf	(___aomod@dividend+1)^0,f,c
  2658   001762  6C0D               	negf	___aomod@dividend^0,c
  2659   001764  0E00               	movlw	0
  2660   001766  220E               	addwfc	(___aomod@dividend+1)^0,f,c
  2661   001768  220F               	addwfc	(___aomod@dividend+2)^0,f,c
  2662   00176A  2210               	addwfc	(___aomod@dividend+3)^0,f,c
  2663   00176C  2211               	addwfc	(___aomod@dividend+4)^0,f,c
  2664   00176E  2212               	addwfc	(___aomod@dividend+5)^0,f,c
  2665   001770  2213               	addwfc	(___aomod@dividend+6)^0,f,c
  2666   001772  2214               	addwfc	(___aomod@dividend+7)^0,f,c
  2667   001774  0E01               	movlw	1
  2668   001776  6E1E               	movwf	___aomod@sign^0,c
  2669   001778                     l2904:
  2670   001778  BE1C               	btfsc	(___aomod@divisor+7)^0,7,c
  2671   00177A  EFC3  F00B         	goto	u1950
  2672   00177E  EFC1  F00B         	goto	u1951
  2673   001782                     u1951:
  2674   001782  EFD3  F00B         	goto	l2908
  2675   001786                     u1950:
  2676   001786  1E1C               	comf	(___aomod@divisor+7)^0,f,c
  2677   001788  1E1B               	comf	(___aomod@divisor+6)^0,f,c
  2678   00178A  1E1A               	comf	(___aomod@divisor+5)^0,f,c
  2679   00178C  1E19               	comf	(___aomod@divisor+4)^0,f,c
  2680   00178E  1E18               	comf	(___aomod@divisor+3)^0,f,c
  2681   001790  1E17               	comf	(___aomod@divisor+2)^0,f,c
  2682   001792  1E16               	comf	(___aomod@divisor+1)^0,f,c
  2683   001794  6C15               	negf	___aomod@divisor^0,c
  2684   001796  0E00               	movlw	0
  2685   001798  2216               	addwfc	(___aomod@divisor+1)^0,f,c
  2686   00179A  2217               	addwfc	(___aomod@divisor+2)^0,f,c
  2687   00179C  2218               	addwfc	(___aomod@divisor+3)^0,f,c
  2688   00179E  2219               	addwfc	(___aomod@divisor+4)^0,f,c
  2689   0017A0  221A               	addwfc	(___aomod@divisor+5)^0,f,c
  2690   0017A2  221B               	addwfc	(___aomod@divisor+6)^0,f,c
  2691   0017A4  221C               	addwfc	(___aomod@divisor+7)^0,f,c
  2692   0017A6                     l2908:
  2693   0017A6  5015               	movf	___aomod@divisor^0,w,c
  2694   0017A8  1016               	iorwf	(___aomod@divisor+1)^0,w,c
  2695   0017AA  1017               	iorwf	(___aomod@divisor+2)^0,w,c
  2696   0017AC  1018               	iorwf	(___aomod@divisor+3)^0,w,c
  2697   0017AE  1019               	iorwf	(___aomod@divisor+4)^0,w,c
  2698   0017B0  101A               	iorwf	(___aomod@divisor+5)^0,w,c
  2699   0017B2  101B               	iorwf	(___aomod@divisor+6)^0,w,c
  2700   0017B4  101C               	iorwf	(___aomod@divisor+7)^0,w,c
  2701   0017B6  B4D8               	btfsc	status,2,c
  2702   0017B8  EFE0  F00B         	goto	u1961
  2703   0017BC  EFE2  F00B         	goto	u1960
  2704   0017C0                     u1961:
  2705   0017C0  EF2A  F00C         	goto	l2924
  2706   0017C4                     u1960:
  2707   0017C4  0E01               	movlw	1
  2708   0017C6  6E1D               	movwf	___aomod@counter^0,c
  2709   0017C8  EFF0  F00B         	goto	l2914
  2710   0017CC                     l2912:
  2711   0017CC  90D8               	bcf	status,0,c
  2712   0017CE  3615               	rlcf	___aomod@divisor^0,f,c
  2713   0017D0  3616               	rlcf	(___aomod@divisor+1)^0,f,c
  2714   0017D2  3617               	rlcf	(___aomod@divisor+2)^0,f,c
  2715   0017D4  3618               	rlcf	(___aomod@divisor+3)^0,f,c
  2716   0017D6  3619               	rlcf	(___aomod@divisor+4)^0,f,c
  2717   0017D8  361A               	rlcf	(___aomod@divisor+5)^0,f,c
  2718   0017DA  361B               	rlcf	(___aomod@divisor+6)^0,f,c
  2719   0017DC  361C               	rlcf	(___aomod@divisor+7)^0,f,c
  2720   0017DE  2A1D               	incf	___aomod@counter^0,f,c
  2721   0017E0                     l2914:
  2722   0017E0  AE1C               	btfss	(___aomod@divisor+7)^0,7,c
  2723   0017E2  EFF5  F00B         	goto	u1971
  2724   0017E6  EFF7  F00B         	goto	u1970
  2725   0017EA                     u1971:
  2726   0017EA  EFE6  F00B         	goto	l2912
  2727   0017EE                     u1970:
  2728   0017EE                     l2916:
  2729   0017EE  5015               	movf	___aomod@divisor^0,w,c
  2730   0017F0  5C0D               	subwf	___aomod@dividend^0,w,c
  2731   0017F2  5016               	movf	(___aomod@divisor+1)^0,w,c
  2732   0017F4  580E               	subwfb	(___aomod@dividend+1)^0,w,c
  2733   0017F6  5017               	movf	(___aomod@divisor+2)^0,w,c
  2734   0017F8  580F               	subwfb	(___aomod@dividend+2)^0,w,c
  2735   0017FA  5018               	movf	(___aomod@divisor+3)^0,w,c
  2736   0017FC  5810               	subwfb	(___aomod@dividend+3)^0,w,c
  2737   0017FE  5019               	movf	(___aomod@divisor+4)^0,w,c
  2738   001800  5811               	subwfb	(___aomod@dividend+4)^0,w,c
  2739   001802  501A               	movf	(___aomod@divisor+5)^0,w,c
  2740   001804  5812               	subwfb	(___aomod@dividend+5)^0,w,c
  2741   001806  501B               	movf	(___aomod@divisor+6)^0,w,c
  2742   001808  5813               	subwfb	(___aomod@dividend+6)^0,w,c
  2743   00180A  501C               	movf	(___aomod@divisor+7)^0,w,c
  2744   00180C  5814               	subwfb	(___aomod@dividend+7)^0,w,c
  2745   00180E  A0D8               	btfss	status,0,c
  2746   001810  EF0C  F00C         	goto	u1981
  2747   001814  EF0E  F00C         	goto	u1980
  2748   001818                     u1981:
  2749   001818  EF1E  F00C         	goto	l2920
  2750   00181C                     u1980:
  2751   00181C  5015               	movf	___aomod@divisor^0,w,c
  2752   00181E  5E0D               	subwf	___aomod@dividend^0,f,c
  2753   001820  5016               	movf	(___aomod@divisor+1)^0,w,c
  2754   001822  5A0E               	subwfb	(___aomod@dividend+1)^0,f,c
  2755   001824  5017               	movf	(___aomod@divisor+2)^0,w,c
  2756   001826  5A0F               	subwfb	(___aomod@dividend+2)^0,f,c
  2757   001828  5018               	movf	(___aomod@divisor+3)^0,w,c
  2758   00182A  5A10               	subwfb	(___aomod@dividend+3)^0,f,c
  2759   00182C  5019               	movf	(___aomod@divisor+4)^0,w,c
  2760   00182E  5A11               	subwfb	(___aomod@dividend+4)^0,f,c
  2761   001830  501A               	movf	(___aomod@divisor+5)^0,w,c
  2762   001832  5A12               	subwfb	(___aomod@dividend+5)^0,f,c
  2763   001834  501B               	movf	(___aomod@divisor+6)^0,w,c
  2764   001836  5A13               	subwfb	(___aomod@dividend+6)^0,f,c
  2765   001838  501C               	movf	(___aomod@divisor+7)^0,w,c
  2766   00183A  5A14               	subwfb	(___aomod@dividend+7)^0,f,c
  2767   00183C                     l2920:
  2768   00183C  90D8               	bcf	status,0,c
  2769   00183E  321C               	rrcf	(___aomod@divisor+7)^0,f,c
  2770   001840  321B               	rrcf	(___aomod@divisor+6)^0,f,c
  2771   001842  321A               	rrcf	(___aomod@divisor+5)^0,f,c
  2772   001844  3219               	rrcf	(___aomod@divisor+4)^0,f,c
  2773   001846  3218               	rrcf	(___aomod@divisor+3)^0,f,c
  2774   001848  3217               	rrcf	(___aomod@divisor+2)^0,f,c
  2775   00184A  3216               	rrcf	(___aomod@divisor+1)^0,f,c
  2776   00184C  3215               	rrcf	___aomod@divisor^0,f,c
  2777   00184E  2E1D               	decfsz	___aomod@counter^0,f,c
  2778   001850  EFF7  F00B         	goto	l2916
  2779   001854                     l2924:
  2780   001854  501E               	movf	___aomod@sign^0,w,c
  2781   001856  B4D8               	btfsc	status,2,c
  2782   001858  EF30  F00C         	goto	u1991
  2783   00185C  EF32  F00C         	goto	u1990
  2784   001860                     u1991:
  2785   001860  EF42  F00C         	goto	l2928
  2786   001864                     u1990:
  2787   001864  1E14               	comf	(___aomod@dividend+7)^0,f,c
  2788   001866  1E13               	comf	(___aomod@dividend+6)^0,f,c
  2789   001868  1E12               	comf	(___aomod@dividend+5)^0,f,c
  2790   00186A  1E11               	comf	(___aomod@dividend+4)^0,f,c
  2791   00186C  1E10               	comf	(___aomod@dividend+3)^0,f,c
  2792   00186E  1E0F               	comf	(___aomod@dividend+2)^0,f,c
  2793   001870  1E0E               	comf	(___aomod@dividend+1)^0,f,c
  2794   001872  6C0D               	negf	___aomod@dividend^0,c
  2795   001874  0E00               	movlw	0
  2796   001876  220E               	addwfc	(___aomod@dividend+1)^0,f,c
  2797   001878  220F               	addwfc	(___aomod@dividend+2)^0,f,c
  2798   00187A  2210               	addwfc	(___aomod@dividend+3)^0,f,c
  2799   00187C  2211               	addwfc	(___aomod@dividend+4)^0,f,c
  2800   00187E  2212               	addwfc	(___aomod@dividend+5)^0,f,c
  2801   001880  2213               	addwfc	(___aomod@dividend+6)^0,f,c
  2802   001882  2214               	addwfc	(___aomod@dividend+7)^0,f,c
  2803   001884                     l2928:
  2804   001884  C00D  F00D         	movff	___aomod@dividend,?___aomod
  2805   001888  C00E  F00E         	movff	___aomod@dividend+1,?___aomod+1
  2806   00188C  C00F  F00F         	movff	___aomod@dividend+2,?___aomod+2
  2807   001890  C010  F010         	movff	___aomod@dividend+3,?___aomod+3
  2808   001894  C011  F011         	movff	___aomod@dividend+4,?___aomod+4
  2809   001898  C012  F012         	movff	___aomod@dividend+5,?___aomod+5
  2810   00189C  C013  F013         	movff	___aomod@dividend+6,?___aomod+6
  2811   0018A0  C014  F014         	movff	___aomod@dividend+7,?___aomod+7
  2812   0018A4  0012               	return		;funcret
  2813   0018A6                     __end_of___aomod:
  2814                           	callstack 0
  2815                           
  2816 ;; *************** function ___aodiv *****************
  2817 ;; Defined at:
  2818 ;;		line 9 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\aodiv.c"
  2819 ;; Parameters:    Size  Location     Type
  2820 ;;  dividend        8   12[COMRAM] long long 
  2821 ;;  divisor         8   20[COMRAM] long long 
  2822 ;; Auto vars:     Size  Location     Type
  2823 ;;  quotient        8   30[COMRAM] long long 
  2824 ;;  sign            1   29[COMRAM] unsigned char 
  2825 ;;  counter         1   28[COMRAM] unsigned char 
  2826 ;; Return value:  Size  Location     Type
  2827 ;;                  8   12[COMRAM] long long 
  2828 ;; Registers used:
  2829 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2830 ;; Tracked objects:
  2831 ;;		On entry : 0/0
  2832 ;;		On exit  : 0/0
  2833 ;;		Unchanged: 0/0
  2834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2835 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2836 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2838 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2839 ;;Total ram usage:       26 bytes
  2840 ;; Hardware stack levels used: 1
  2841 ;; Hardware stack levels required when called: 7
  2842 ;; This function calls:
  2843 ;;		Nothing
  2844 ;; This function is called by:
  2845 ;;		_dtoa
  2846 ;; This function uses a non-reentrant model
  2847 ;;
  2848                           
  2849                           	psect	text11
  2850   0015BA                     __ptext11:
  2851                           	callstack 0
  2852   0015BA                     ___aodiv:
  2853                           	callstack 19
  2854   0015BA  0E00               	movlw	0
  2855   0015BC  6E1E               	movwf	___aodiv@sign^0,c
  2856   0015BE  BE1C               	btfsc	(___aodiv@divisor+7)^0,7,c
  2857   0015C0  EFE6  F00A         	goto	u1870
  2858   0015C4  EFE4  F00A         	goto	u1871
  2859   0015C8                     u1871:
  2860   0015C8  EFF8  F00A         	goto	l2860
  2861   0015CC                     u1870:
  2862   0015CC  1E1C               	comf	(___aodiv@divisor+7)^0,f,c
  2863   0015CE  1E1B               	comf	(___aodiv@divisor+6)^0,f,c
  2864   0015D0  1E1A               	comf	(___aodiv@divisor+5)^0,f,c
  2865   0015D2  1E19               	comf	(___aodiv@divisor+4)^0,f,c
  2866   0015D4  1E18               	comf	(___aodiv@divisor+3)^0,f,c
  2867   0015D6  1E17               	comf	(___aodiv@divisor+2)^0,f,c
  2868   0015D8  1E16               	comf	(___aodiv@divisor+1)^0,f,c
  2869   0015DA  6C15               	negf	___aodiv@divisor^0,c
  2870   0015DC  0E00               	movlw	0
  2871   0015DE  2216               	addwfc	(___aodiv@divisor+1)^0,f,c
  2872   0015E0  2217               	addwfc	(___aodiv@divisor+2)^0,f,c
  2873   0015E2  2218               	addwfc	(___aodiv@divisor+3)^0,f,c
  2874   0015E4  2219               	addwfc	(___aodiv@divisor+4)^0,f,c
  2875   0015E6  221A               	addwfc	(___aodiv@divisor+5)^0,f,c
  2876   0015E8  221B               	addwfc	(___aodiv@divisor+6)^0,f,c
  2877   0015EA  221C               	addwfc	(___aodiv@divisor+7)^0,f,c
  2878   0015EC  0E01               	movlw	1
  2879   0015EE  6E1E               	movwf	___aodiv@sign^0,c
  2880   0015F0                     l2860:
  2881   0015F0  BE14               	btfsc	(___aodiv@dividend+7)^0,7,c
  2882   0015F2  EFFF  F00A         	goto	u1880
  2883   0015F6  EFFD  F00A         	goto	u1881
  2884   0015FA                     u1881:
  2885   0015FA  EF11  F00B         	goto	l2866
  2886   0015FE                     u1880:
  2887   0015FE  1E14               	comf	(___aodiv@dividend+7)^0,f,c
  2888   001600  1E13               	comf	(___aodiv@dividend+6)^0,f,c
  2889   001602  1E12               	comf	(___aodiv@dividend+5)^0,f,c
  2890   001604  1E11               	comf	(___aodiv@dividend+4)^0,f,c
  2891   001606  1E10               	comf	(___aodiv@dividend+3)^0,f,c
  2892   001608  1E0F               	comf	(___aodiv@dividend+2)^0,f,c
  2893   00160A  1E0E               	comf	(___aodiv@dividend+1)^0,f,c
  2894   00160C  6C0D               	negf	___aodiv@dividend^0,c
  2895   00160E  0E00               	movlw	0
  2896   001610  220E               	addwfc	(___aodiv@dividend+1)^0,f,c
  2897   001612  220F               	addwfc	(___aodiv@dividend+2)^0,f,c
  2898   001614  2210               	addwfc	(___aodiv@dividend+3)^0,f,c
  2899   001616  2211               	addwfc	(___aodiv@dividend+4)^0,f,c
  2900   001618  2212               	addwfc	(___aodiv@dividend+5)^0,f,c
  2901   00161A  2213               	addwfc	(___aodiv@dividend+6)^0,f,c
  2902   00161C  2214               	addwfc	(___aodiv@dividend+7)^0,f,c
  2903   00161E  0E01               	movlw	1
  2904   001620  1A1E               	xorwf	___aodiv@sign^0,f,c
  2905   001622                     l2866:
  2906   001622  EE20  F01F         	lfsr	2,___aodiv@quotient
  2907   001626  0E07               	movlw	7
  2908   001628                     u1891:
  2909   001628  6ADE               	clrf	postinc2,c
  2910   00162A  06E8               	decf	wreg,f,c
  2911   00162C  E2FD               	bc	u1891
  2912   00162E  5015               	movf	___aodiv@divisor^0,w,c
  2913   001630  1016               	iorwf	(___aodiv@divisor+1)^0,w,c
  2914   001632  1017               	iorwf	(___aodiv@divisor+2)^0,w,c
  2915   001634  1018               	iorwf	(___aodiv@divisor+3)^0,w,c
  2916   001636  1019               	iorwf	(___aodiv@divisor+4)^0,w,c
  2917   001638  101A               	iorwf	(___aodiv@divisor+5)^0,w,c
  2918   00163A  101B               	iorwf	(___aodiv@divisor+6)^0,w,c
  2919   00163C  101C               	iorwf	(___aodiv@divisor+7)^0,w,c
  2920   00163E  B4D8               	btfsc	status,2,c
  2921   001640  EF24  F00B         	goto	u1901
  2922   001644  EF26  F00B         	goto	u1900
  2923   001648                     u1901:
  2924   001648  EF78  F00B         	goto	l2888
  2925   00164C                     u1900:
  2926   00164C  0E01               	movlw	1
  2927   00164E  6E1D               	movwf	___aodiv@counter^0,c
  2928   001650  EF34  F00B         	goto	l2874
  2929   001654                     l2872:
  2930   001654  90D8               	bcf	status,0,c
  2931   001656  3615               	rlcf	___aodiv@divisor^0,f,c
  2932   001658  3616               	rlcf	(___aodiv@divisor+1)^0,f,c
  2933   00165A  3617               	rlcf	(___aodiv@divisor+2)^0,f,c
  2934   00165C  3618               	rlcf	(___aodiv@divisor+3)^0,f,c
  2935   00165E  3619               	rlcf	(___aodiv@divisor+4)^0,f,c
  2936   001660  361A               	rlcf	(___aodiv@divisor+5)^0,f,c
  2937   001662  361B               	rlcf	(___aodiv@divisor+6)^0,f,c
  2938   001664  361C               	rlcf	(___aodiv@divisor+7)^0,f,c
  2939   001666  2A1D               	incf	___aodiv@counter^0,f,c
  2940   001668                     l2874:
  2941   001668  AE1C               	btfss	(___aodiv@divisor+7)^0,7,c
  2942   00166A  EF39  F00B         	goto	u1911
  2943   00166E  EF3B  F00B         	goto	u1910
  2944   001672                     u1911:
  2945   001672  EF2A  F00B         	goto	l2872
  2946   001676                     u1910:
  2947   001676                     l2876:
  2948   001676  90D8               	bcf	status,0,c
  2949   001678  361F               	rlcf	___aodiv@quotient^0,f,c
  2950   00167A  3620               	rlcf	(___aodiv@quotient+1)^0,f,c
  2951   00167C  3621               	rlcf	(___aodiv@quotient+2)^0,f,c
  2952   00167E  3622               	rlcf	(___aodiv@quotient+3)^0,f,c
  2953   001680  3623               	rlcf	(___aodiv@quotient+4)^0,f,c
  2954   001682  3624               	rlcf	(___aodiv@quotient+5)^0,f,c
  2955   001684  3625               	rlcf	(___aodiv@quotient+6)^0,f,c
  2956   001686  3626               	rlcf	(___aodiv@quotient+7)^0,f,c
  2957   001688  5015               	movf	___aodiv@divisor^0,w,c
  2958   00168A  5C0D               	subwf	___aodiv@dividend^0,w,c
  2959   00168C  5016               	movf	(___aodiv@divisor+1)^0,w,c
  2960   00168E  580E               	subwfb	(___aodiv@dividend+1)^0,w,c
  2961   001690  5017               	movf	(___aodiv@divisor+2)^0,w,c
  2962   001692  580F               	subwfb	(___aodiv@dividend+2)^0,w,c
  2963   001694  5018               	movf	(___aodiv@divisor+3)^0,w,c
  2964   001696  5810               	subwfb	(___aodiv@dividend+3)^0,w,c
  2965   001698  5019               	movf	(___aodiv@divisor+4)^0,w,c
  2966   00169A  5811               	subwfb	(___aodiv@dividend+4)^0,w,c
  2967   00169C  501A               	movf	(___aodiv@divisor+5)^0,w,c
  2968   00169E  5812               	subwfb	(___aodiv@dividend+5)^0,w,c
  2969   0016A0  501B               	movf	(___aodiv@divisor+6)^0,w,c
  2970   0016A2  5813               	subwfb	(___aodiv@dividend+6)^0,w,c
  2971   0016A4  501C               	movf	(___aodiv@divisor+7)^0,w,c
  2972   0016A6  5814               	subwfb	(___aodiv@dividend+7)^0,w,c
  2973   0016A8  A0D8               	btfss	status,0,c
  2974   0016AA  EF59  F00B         	goto	u1921
  2975   0016AE  EF5B  F00B         	goto	u1920
  2976   0016B2                     u1921:
  2977   0016B2  EF6C  F00B         	goto	l2884
  2978   0016B6                     u1920:
  2979   0016B6  5015               	movf	___aodiv@divisor^0,w,c
  2980   0016B8  5E0D               	subwf	___aodiv@dividend^0,f,c
  2981   0016BA  5016               	movf	(___aodiv@divisor+1)^0,w,c
  2982   0016BC  5A0E               	subwfb	(___aodiv@dividend+1)^0,f,c
  2983   0016BE  5017               	movf	(___aodiv@divisor+2)^0,w,c
  2984   0016C0  5A0F               	subwfb	(___aodiv@dividend+2)^0,f,c
  2985   0016C2  5018               	movf	(___aodiv@divisor+3)^0,w,c
  2986   0016C4  5A10               	subwfb	(___aodiv@dividend+3)^0,f,c
  2987   0016C6  5019               	movf	(___aodiv@divisor+4)^0,w,c
  2988   0016C8  5A11               	subwfb	(___aodiv@dividend+4)^0,f,c
  2989   0016CA  501A               	movf	(___aodiv@divisor+5)^0,w,c
  2990   0016CC  5A12               	subwfb	(___aodiv@dividend+5)^0,f,c
  2991   0016CE  501B               	movf	(___aodiv@divisor+6)^0,w,c
  2992   0016D0  5A13               	subwfb	(___aodiv@dividend+6)^0,f,c
  2993   0016D2  501C               	movf	(___aodiv@divisor+7)^0,w,c
  2994   0016D4  5A14               	subwfb	(___aodiv@dividend+7)^0,f,c
  2995   0016D6  801F               	bsf	___aodiv@quotient^0,0,c
  2996   0016D8                     l2884:
  2997   0016D8  90D8               	bcf	status,0,c
  2998   0016DA  321C               	rrcf	(___aodiv@divisor+7)^0,f,c
  2999   0016DC  321B               	rrcf	(___aodiv@divisor+6)^0,f,c
  3000   0016DE  321A               	rrcf	(___aodiv@divisor+5)^0,f,c
  3001   0016E0  3219               	rrcf	(___aodiv@divisor+4)^0,f,c
  3002   0016E2  3218               	rrcf	(___aodiv@divisor+3)^0,f,c
  3003   0016E4  3217               	rrcf	(___aodiv@divisor+2)^0,f,c
  3004   0016E6  3216               	rrcf	(___aodiv@divisor+1)^0,f,c
  3005   0016E8  3215               	rrcf	___aodiv@divisor^0,f,c
  3006   0016EA  2E1D               	decfsz	___aodiv@counter^0,f,c
  3007   0016EC  EF3B  F00B         	goto	l2876
  3008   0016F0                     l2888:
  3009   0016F0  501E               	movf	___aodiv@sign^0,w,c
  3010   0016F2  B4D8               	btfsc	status,2,c
  3011   0016F4  EF7E  F00B         	goto	u1931
  3012   0016F8  EF80  F00B         	goto	u1930
  3013   0016FC                     u1931:
  3014   0016FC  EF90  F00B         	goto	l2892
  3015   001700                     u1930:
  3016   001700  1E26               	comf	(___aodiv@quotient+7)^0,f,c
  3017   001702  1E25               	comf	(___aodiv@quotient+6)^0,f,c
  3018   001704  1E24               	comf	(___aodiv@quotient+5)^0,f,c
  3019   001706  1E23               	comf	(___aodiv@quotient+4)^0,f,c
  3020   001708  1E22               	comf	(___aodiv@quotient+3)^0,f,c
  3021   00170A  1E21               	comf	(___aodiv@quotient+2)^0,f,c
  3022   00170C  1E20               	comf	(___aodiv@quotient+1)^0,f,c
  3023   00170E  6C1F               	negf	___aodiv@quotient^0,c
  3024   001710  0E00               	movlw	0
  3025   001712  2220               	addwfc	(___aodiv@quotient+1)^0,f,c
  3026   001714  2221               	addwfc	(___aodiv@quotient+2)^0,f,c
  3027   001716  2222               	addwfc	(___aodiv@quotient+3)^0,f,c
  3028   001718  2223               	addwfc	(___aodiv@quotient+4)^0,f,c
  3029   00171A  2224               	addwfc	(___aodiv@quotient+5)^0,f,c
  3030   00171C  2225               	addwfc	(___aodiv@quotient+6)^0,f,c
  3031   00171E  2226               	addwfc	(___aodiv@quotient+7)^0,f,c
  3032   001720                     l2892:
  3033   001720  C01F  F00D         	movff	___aodiv@quotient,?___aodiv
  3034   001724  C020  F00E         	movff	___aodiv@quotient+1,?___aodiv+1
  3035   001728  C021  F00F         	movff	___aodiv@quotient+2,?___aodiv+2
  3036   00172C  C022  F010         	movff	___aodiv@quotient+3,?___aodiv+3
  3037   001730  C023  F011         	movff	___aodiv@quotient+4,?___aodiv+4
  3038   001734  C024  F012         	movff	___aodiv@quotient+5,?___aodiv+5
  3039   001738  C025  F013         	movff	___aodiv@quotient+6,?___aodiv+6
  3040   00173C  C026  F014         	movff	___aodiv@quotient+7,?___aodiv+7
  3041   001740  0012               	return		;funcret
  3042   001742                     __end_of___aodiv:
  3043                           	callstack 0
  3044                           
  3045 ;; *************** function _atoi *****************
  3046 ;; Defined at:
  3047 ;;		line 4 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\atoi.c"
  3048 ;; Parameters:    Size  Location     Type
  3049 ;;  s               2   18[COMRAM] PTR const unsigned char 
  3050 ;;		 -> STR_2(22), STR_1(22), 
  3051 ;; Auto vars:     Size  Location     Type
  3052 ;;  n               2   25[COMRAM] int 
  3053 ;;  neg             2   23[COMRAM] int 
  3054 ;; Return value:  Size  Location     Type
  3055 ;;                  2   18[COMRAM] int 
  3056 ;; Registers used:
  3057 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3058 ;; Tracked objects:
  3059 ;;		On entry : 0/0
  3060 ;;		On exit  : 0/0
  3061 ;;		Unchanged: 0/0
  3062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3063 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3064 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3065 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3066 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3067 ;;Total ram usage:        9 bytes
  3068 ;; Hardware stack levels used: 1
  3069 ;; Hardware stack levels required when called: 8
  3070 ;; This function calls:
  3071 ;;		___wmul
  3072 ;;		_isdigit
  3073 ;;		_isspace
  3074 ;; This function is called by:
  3075 ;;		_vfpfcnvrt
  3076 ;; This function uses a non-reentrant model
  3077 ;;
  3078                           
  3079                           	psect	text12
  3080   0018A6                     __ptext12:
  3081                           	callstack 0
  3082   0018A6                     _atoi:
  3083                           	callstack 19
  3084   0018A6  0E00               	movlw	0
  3085   0018A8  6E1B               	movwf	(atoi@n+1)^0,c
  3086   0018AA  0E00               	movlw	0
  3087   0018AC  6E1A               	movwf	atoi@n^0,c
  3088   0018AE  0E00               	movlw	0
  3089   0018B0  6E19               	movwf	(atoi@neg+1)^0,c
  3090   0018B2  0E00               	movlw	0
  3091   0018B4  6E18               	movwf	atoi@neg^0,c
  3092   0018B6  EF5F  F00C         	goto	l2304
  3093   0018BA                     l2300:
  3094   0018BA  4A13               	infsnz	atoi@s^0,f,c
  3095   0018BC  2A14               	incf	(atoi@s+1)^0,f,c
  3096   0018BE                     l2304:
  3097   0018BE  C013  FFF6         	movff	atoi@s,tblptrl
  3098   0018C2  C014  FFF7         	movff	atoi@s+1,tblptrh
  3099   0018C6                     	if	0	;tblptru may be non-zero
  3100   0018C6                     	endif
  3101   0018C6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3102   0018C6  0E00               	movlw	low (__mediumconst shr (0+16))
  3103   0018C8  6EF8               	movwf	tblptru,c
  3104   0018CA                     	endif
  3105   0018CA  0008               	tblrd		*
  3106   0018CC  50F5               	movf	tablat,w,c
  3107   0018CE  0A20               	xorlw	32
  3108   0018D0  B4D8               	btfsc	status,2,c
  3109   0018D2  EF6D  F00C         	goto	u1381
  3110   0018D6  EF6F  F00C         	goto	u1380
  3111   0018DA                     u1381:
  3112   0018DA  EF5D  F00C         	goto	l2300
  3113   0018DE                     u1380:
  3114   0018DE  C013  FFF6         	movff	atoi@s,tblptrl
  3115   0018E2  C014  FFF7         	movff	atoi@s+1,tblptrh
  3116   0018E6                     	if	0	;tblptru may be non-zero
  3117   0018E6                     	endif
  3118   0018E6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3119   0018E6  0E00               	movlw	low (__mediumconst shr (0+16))
  3120   0018E8  6EF8               	movwf	tblptru,c
  3121   0018EA                     	endif
  3122   0018EA  0008               	tblrd		*
  3123   0018EC  CFF5 F015          	movff	tablat,??_atoi
  3124   0018F0  0EF7               	movlw	247
  3125   0018F2  2415               	addwf	??_atoi^0,w,c
  3126   0018F4  6E16               	movwf	(??_atoi+1)^0,c
  3127   0018F6  6A17               	clrf	(??_atoi+2)^0,c
  3128   0018F8  0EFF               	movlw	255
  3129   0018FA  2217               	addwfc	(??_atoi+2)^0,f,c
  3130   0018FC  5017               	movf	(??_atoi+2)^0,w,c
  3131   0018FE  E109               	bnz	u1390
  3132   001900  0E05               	movlw	5
  3133   001902  5C16               	subwf	(??_atoi+1)^0,w,c
  3134   001904  A0D8               	btfss	status,0,c
  3135   001906  EF87  F00C         	goto	u1391
  3136   00190A  EF89  F00C         	goto	u1390
  3137   00190E                     u1391:
  3138   00190E  EF5D  F00C         	goto	l2300
  3139   001912                     u1390:
  3140   001912  EF93  F00C         	goto	l2312
  3141   001916                     l2308:
  3142   001916  0E00               	movlw	0
  3143   001918  6E19               	movwf	(atoi@neg+1)^0,c
  3144   00191A  0E01               	movlw	1
  3145   00191C  6E18               	movwf	atoi@neg^0,c
  3146   00191E                     l2310:
  3147   00191E  4A13               	infsnz	atoi@s^0,f,c
  3148   001920  2A14               	incf	(atoi@s+1)^0,f,c
  3149   001922  EFCC  F00C         	goto	l2320
  3150   001926                     l2312:
  3151   001926  C013  FFF6         	movff	atoi@s,tblptrl
  3152   00192A  C014  FFF7         	movff	atoi@s+1,tblptrh
  3153   00192E                     	if	0	;tblptru may be non-zero
  3154   00192E                     	endif
  3155   00192E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3156   00192E  0E00               	movlw	low (__mediumconst shr (0+16))
  3157   001930  6EF8               	movwf	tblptru,c
  3158   001932                     	endif
  3159   001932  0008               	tblrd		*
  3160   001934  50F5               	movf	tablat,w,c
  3161   001936  6E15               	movwf	??_atoi^0,c
  3162   001938  6A16               	clrf	(??_atoi+1)^0,c
  3163                           
  3164                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3165                           ; Switch size 1, requested type "simple"
  3166                           ; Number of cases is 1, Range of values is 0 to 0
  3167                           ; switch strategies available:
  3168                           ; Name         Instructions Cycles
  3169                           ; simple_byte            4     3 (average)
  3170                           ;	Chosen strategy is simple_byte
  3171   00193A  5016               	movf	(??_atoi+1)^0,w,c
  3172   00193C  0A00               	xorlw	0	; case 0
  3173   00193E  B4D8               	btfsc	status,2,c
  3174   001940  EFA4  F00C         	goto	l3224
  3175   001944  EFCC  F00C         	goto	l2320
  3176   001948                     l3224:
  3177                           
  3178                           ; Switch size 1, requested type "simple"
  3179                           ; Number of cases is 2, Range of values is 43 to 45
  3180                           ; switch strategies available:
  3181                           ; Name         Instructions Cycles
  3182                           ; simple_byte            7     4 (average)
  3183                           ;	Chosen strategy is simple_byte
  3184   001948  5015               	movf	??_atoi^0,w,c
  3185   00194A  0A2B               	xorlw	43	; case 43
  3186   00194C  B4D8               	btfsc	status,2,c
  3187   00194E  EF8F  F00C         	goto	l2310
  3188   001952  0A06               	xorlw	6	; case 45
  3189   001954  B4D8               	btfsc	status,2,c
  3190   001956  EF8B  F00C         	goto	l2308
  3191   00195A  EFCC  F00C         	goto	l2320
  3192   00195E                     l2314:
  3193   00195E  C01A  F00D         	movff	atoi@n,___wmul@multiplier
  3194   001962  C01B  F00E         	movff	atoi@n+1,___wmul@multiplier+1
  3195   001966  0E00               	movlw	0
  3196   001968  6E10               	movwf	(___wmul@multiplicand+1)^0,c
  3197   00196A  0E0A               	movlw	10
  3198   00196C  6E0F               	movwf	___wmul@multiplicand^0,c
  3199   00196E  ECF0  F010         	call	___wmul	;wreg free
  3200   001972  C013  FFF6         	movff	atoi@s,tblptrl
  3201   001976  C014  FFF7         	movff	atoi@s+1,tblptrh
  3202   00197A                     	if	0	;tblptru may be non-zero
  3203   00197A                     	endif
  3204   00197A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3205   00197A  0E00               	movlw	low (__mediumconst shr (0+16))
  3206   00197C  6EF8               	movwf	tblptru,c
  3207   00197E                     	endif
  3208   00197E  0008               	tblrd		*
  3209   001980  50F5               	movf	tablat,w,c
  3210   001982  5E0D               	subwf	?___wmul^0,f,c
  3211   001984  0E00               	movlw	0
  3212   001986  5A0E               	subwfb	(?___wmul+1)^0,f,c
  3213   001988  0E30               	movlw	48
  3214   00198A  240D               	addwf	?___wmul^0,w,c
  3215   00198C  6E1A               	movwf	atoi@n^0,c
  3216   00198E  0E00               	movlw	0
  3217   001990  200E               	addwfc	(?___wmul+1)^0,w,c
  3218   001992  6E1B               	movwf	(atoi@n+1)^0,c
  3219   001994  EF8F  F00C         	goto	l2310
  3220   001998                     l2320:
  3221   001998  C013  FFF6         	movff	atoi@s,tblptrl
  3222   00199C  C014  FFF7         	movff	atoi@s+1,tblptrh
  3223   0019A0                     	if	0	;tblptru may be non-zero
  3224   0019A0                     	endif
  3225   0019A0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3226   0019A0  0E00               	movlw	low (__mediumconst shr (0+16))
  3227   0019A2  6EF8               	movwf	tblptru,c
  3228   0019A4                     	endif
  3229   0019A4  0008               	tblrd		*
  3230   0019A6  CFF5 F015          	movff	tablat,??_atoi
  3231   0019AA  0ED0               	movlw	208
  3232   0019AC  2415               	addwf	??_atoi^0,w,c
  3233   0019AE  6E16               	movwf	(??_atoi+1)^0,c
  3234   0019B0  6A17               	clrf	(??_atoi+2)^0,c
  3235   0019B2  0EFF               	movlw	255
  3236   0019B4  2217               	addwfc	(??_atoi+2)^0,f,c
  3237   0019B6  5017               	movf	(??_atoi+2)^0,w,c
  3238   0019B8  E109               	bnz	u1400
  3239   0019BA  0E0A               	movlw	10
  3240   0019BC  5C16               	subwf	(??_atoi+1)^0,w,c
  3241   0019BE  A0D8               	btfss	status,0,c
  3242   0019C0  EFE4  F00C         	goto	u1401
  3243   0019C4  EFE6  F00C         	goto	u1400
  3244   0019C8                     u1401:
  3245   0019C8  EFAF  F00C         	goto	l2314
  3246   0019CC                     u1400:
  3247   0019CC  5018               	movf	atoi@neg^0,w,c
  3248   0019CE  1019               	iorwf	(atoi@neg+1)^0,w,c
  3249   0019D0  A4D8               	btfss	status,2,c
  3250   0019D2  EFED  F00C         	goto	u1411
  3251   0019D6  EFEF  F00C         	goto	u1410
  3252   0019DA                     u1411:
  3253   0019DA  EFFD  F00C         	goto	l1230
  3254   0019DE                     u1410:
  3255   0019DE  C01A  F015         	movff	atoi@n,??_atoi
  3256   0019E2  C01B  F016         	movff	atoi@n+1,??_atoi+1
  3257   0019E6  1E15               	comf	??_atoi^0,f,c
  3258   0019E8  1E16               	comf	(??_atoi+1)^0,f,c
  3259   0019EA  4A15               	infsnz	??_atoi^0,f,c
  3260   0019EC  2A16               	incf	(??_atoi+1)^0,f,c
  3261   0019EE  C015  F013         	movff	??_atoi,?_atoi
  3262   0019F2  C016  F014         	movff	??_atoi+1,?_atoi+1
  3263   0019F6  EF01  F00D         	goto	l1233
  3264   0019FA                     l1230:
  3265   0019FA  C01A  F013         	movff	atoi@n,?_atoi
  3266   0019FE  C01B  F014         	movff	atoi@n+1,?_atoi+1
  3267   001A02                     l1233:
  3268   001A02  0012               	return		;funcret
  3269   001A04                     __end_of_atoi:
  3270                           	callstack 0
  3271                           
  3272 ;; *************** function _isspace *****************
  3273 ;; Defined at:
  3274 ;;		line 5 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\isspace.c"
  3275 ;; Parameters:    Size  Location     Type
  3276 ;;  c               2   12[COMRAM] int 
  3277 ;; Auto vars:     Size  Location     Type
  3278 ;;		None
  3279 ;; Return value:  Size  Location     Type
  3280 ;;                  2   12[COMRAM] int 
  3281 ;; Registers used:
  3282 ;;		wreg, status,2, status,0
  3283 ;; Tracked objects:
  3284 ;;		On entry : 0/0
  3285 ;;		On exit  : 0/0
  3286 ;;		Unchanged: 0/0
  3287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3288 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3289 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3290 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3291 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3292 ;;Total ram usage:        5 bytes
  3293 ;; Hardware stack levels used: 1
  3294 ;; Hardware stack levels required when called: 7
  3295 ;; This function calls:
  3296 ;;		Nothing
  3297 ;; This function is called by:
  3298 ;;		_atoi
  3299 ;; This function uses a non-reentrant model
  3300 ;;
  3301                           
  3302                           	psect	text13
  3303   001F1E                     __ptext13:
  3304                           	callstack 0
  3305   001F1E                     _isspace:
  3306                           	callstack 19
  3307   001F1E  0E01               	movlw	1
  3308   001F20  6E11               	movwf	_isspace$2421^0,c
  3309   001F22  0E20               	movlw	32
  3310   001F24  180D               	xorwf	isspace@c^0,w,c
  3311   001F26  100E               	iorwf	(isspace@c+1)^0,w,c
  3312   001F28  B4D8               	btfsc	status,2,c
  3313   001F2A  EF99  F00F         	goto	u1211
  3314   001F2E  EF9B  F00F         	goto	u1210
  3315   001F32                     u1211:
  3316   001F32  EFAE  F00F         	goto	l2228
  3317   001F36                     u1210:
  3318   001F36  0EF7               	movlw	247
  3319   001F38  240D               	addwf	isspace@c^0,w,c
  3320   001F3A  6E0F               	movwf	??_isspace^0,c
  3321   001F3C  0EFF               	movlw	255
  3322   001F3E  200E               	addwfc	(isspace@c+1)^0,w,c
  3323   001F40  6E10               	movwf	(??_isspace+1)^0,c
  3324   001F42  5010               	movf	(??_isspace+1)^0,w,c
  3325   001F44  E109               	bnz	u1220
  3326   001F46  0E05               	movlw	5
  3327   001F48  5C0F               	subwf	??_isspace^0,w,c
  3328   001F4A  A0D8               	btfss	status,0,c
  3329   001F4C  EFAA  F00F         	goto	u1221
  3330   001F50  EFAC  F00F         	goto	u1220
  3331   001F54                     u1221:
  3332   001F54  EFAE  F00F         	goto	l2228
  3333   001F58                     u1220:
  3334   001F58  0E00               	movlw	0
  3335   001F5A  6E11               	movwf	_isspace$2421^0,c
  3336   001F5C                     l2228:
  3337   001F5C  C011  F00D         	movff	_isspace$2421,?_isspace
  3338   001F60  6A0E               	clrf	(?_isspace+1)^0,c
  3339   001F62  0012               	return		;funcret
  3340   001F64                     __end_of_isspace:
  3341                           	callstack 0
  3342                           
  3343 ;; *************** function _isdigit *****************
  3344 ;; Defined at:
  3345 ;;		line 5 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\isdigit.c"
  3346 ;; Parameters:    Size  Location     Type
  3347 ;;  c               2   12[COMRAM] int 
  3348 ;; Auto vars:     Size  Location     Type
  3349 ;;		None
  3350 ;; Return value:  Size  Location     Type
  3351 ;;                  2   12[COMRAM] int 
  3352 ;; Registers used:
  3353 ;;		wreg, status,2, status,0
  3354 ;; Tracked objects:
  3355 ;;		On entry : 0/0
  3356 ;;		On exit  : 0/0
  3357 ;;		Unchanged: 0/0
  3358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3359 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3361 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3362 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3363 ;;Total ram usage:        4 bytes
  3364 ;; Hardware stack levels used: 1
  3365 ;; Hardware stack levels required when called: 7
  3366 ;; This function calls:
  3367 ;;		Nothing
  3368 ;; This function is called by:
  3369 ;;		_vfpfcnvrt
  3370 ;;		_atoi
  3371 ;; This function uses a non-reentrant model
  3372 ;;
  3373                           
  3374                           	psect	text14
  3375   00208E                     __ptext14:
  3376                           	callstack 0
  3377   00208E                     _isdigit:
  3378                           	callstack 20
  3379   00208E  0ED0               	movlw	208
  3380   002090  240D               	addwf	isdigit@c^0,w,c
  3381   002092  6E0F               	movwf	??_isdigit^0,c
  3382   002094  0EFF               	movlw	255
  3383   002096  200E               	addwfc	(isdigit@c+1)^0,w,c
  3384   002098  6E10               	movwf	(??_isdigit+1)^0,c
  3385   00209A  5010               	movf	(??_isdigit+1)^0,w,c
  3386   00209C  E10A               	bnz	u1190
  3387   00209E  0E0A               	movlw	10
  3388   0020A0  5C0F               	subwf	??_isdigit^0,w,c
  3389   0020A2  A0D8               	btfss	status,0,c
  3390   0020A4  EF56  F010         	goto	u1191
  3391   0020A8  EF59  F010         	goto	u1190
  3392   0020AC                     u1191:
  3393   0020AC  0E01               	movlw	1
  3394   0020AE  EF5A  F010         	goto	u1200
  3395   0020B2                     u1190:
  3396   0020B2  0E00               	movlw	0
  3397   0020B4                     u1200:
  3398   0020B4  6E0D               	movwf	?_isdigit^0,c
  3399   0020B6  6A0E               	clrf	(?_isdigit+1)^0,c
  3400   0020B8  0012               	return		;funcret
  3401   0020BA                     __end_of_isdigit:
  3402                           	callstack 0
  3403                           
  3404 ;; *************** function ___wmul *****************
  3405 ;; Defined at:
  3406 ;;		line 15 in file "D:\MPLAB_COMPILER\pic\sources\c99\common\Umul16.c"
  3407 ;; Parameters:    Size  Location     Type
  3408 ;;  multiplier      2   12[COMRAM] unsigned int 
  3409 ;;  multiplicand    2   14[COMRAM] unsigned int 
  3410 ;; Auto vars:     Size  Location     Type
  3411 ;;  product         2   16[COMRAM] unsigned int 
  3412 ;; Return value:  Size  Location     Type
  3413 ;;                  2   12[COMRAM] unsigned int 
  3414 ;; Registers used:
  3415 ;;		wreg, status,2, status,0, prodl, prodh
  3416 ;; Tracked objects:
  3417 ;;		On entry : 0/0
  3418 ;;		On exit  : 0/0
  3419 ;;		Unchanged: 0/0
  3420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3421 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3422 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3424 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3425 ;;Total ram usage:        6 bytes
  3426 ;; Hardware stack levels used: 1
  3427 ;; Hardware stack levels required when called: 7
  3428 ;; This function calls:
  3429 ;;		Nothing
  3430 ;; This function is called by:
  3431 ;;		_atoi
  3432 ;;		_setMotorPWM
  3433 ;; This function uses a non-reentrant model
  3434 ;;
  3435                           
  3436                           	psect	text15
  3437   0021E0                     __ptext15:
  3438                           	callstack 0
  3439   0021E0                     ___wmul:
  3440                           	callstack 19
  3441   0021E0  500D               	movf	___wmul@multiplier^0,w,c
  3442   0021E2  020F               	mulwf	___wmul@multiplicand^0,c
  3443   0021E4  CFF3 F011          	movff	prodl,___wmul@product
  3444   0021E8  CFF4 F012          	movff	prodh,___wmul@product+1
  3445   0021EC  500D               	movf	___wmul@multiplier^0,w,c
  3446   0021EE  0210               	mulwf	(___wmul@multiplicand+1)^0,c
  3447   0021F0  50F3               	movf	243,w,c
  3448   0021F2  2612               	addwf	(___wmul@product+1)^0,f,c
  3449   0021F4  500E               	movf	(___wmul@multiplier+1)^0,w,c
  3450   0021F6  020F               	mulwf	___wmul@multiplicand^0,c
  3451   0021F8  50F3               	movf	243,w,c
  3452   0021FA  2612               	addwf	(___wmul@product+1)^0,f,c
  3453   0021FC  C011  F00D         	movff	___wmul@product,?___wmul
  3454   002200  C012  F00E         	movff	___wmul@product+1,?___wmul+1
  3455   002204  0012               	return		;funcret
  3456   002206                     __end_of___wmul:
  3457                           	callstack 0
  3458                           
  3459 ;; *************** function _sendTxBuf *****************
  3460 ;; Defined at:
  3461 ;;		line 97 in file "serial.c"
  3462 ;; Parameters:    Size  Location     Type
  3463 ;;		None
  3464 ;; Auto vars:     Size  Location     Type
  3465 ;;		None
  3466 ;; Return value:  Size  Location     Type
  3467 ;;                  1    wreg      void 
  3468 ;; Registers used:
  3469 ;;		wreg, status,2, status,0, cstack
  3470 ;; Tracked objects:
  3471 ;;		On entry : 0/0
  3472 ;;		On exit  : 0/0
  3473 ;;		Unchanged: 0/0
  3474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3479 ;;Total ram usage:        0 bytes
  3480 ;; Hardware stack levels used: 1
  3481 ;; Hardware stack levels required when called: 8
  3482 ;; This function calls:
  3483 ;;		_isDataInTxBuf
  3484 ;; This function is called by:
  3485 ;;		_main
  3486 ;; This function uses a non-reentrant model
  3487 ;;
  3488                           
  3489                           	psect	text16
  3490   0022A2                     __ptext16:
  3491                           	callstack 0
  3492   0022A2                     _sendTxBuf:
  3493                           	callstack 22
  3494   0022A2                     
  3495                           ;serial.c: 98:     if (isDataInTxBuf()) {PIE4bits.TX4IE=1;}
  3496   0022A2  EC78  F011         	call	_isDataInTxBuf	;wreg free
  3497   0022A6  0900               	iorlw	0
  3498   0022A8  B4D8               	btfsc	status,2,c
  3499   0022AA  EF59  F011         	goto	u1621
  3500   0022AE  EF5B  F011         	goto	u1620
  3501   0022B2                     u1621:
  3502   0022B2  EF5D  F011         	goto	l275
  3503   0022B6                     u1620:
  3504   0022B6  010E               	movlb	14	; () banked
  3505   0022B8  852D               	bsf	45,2,b	;volatile
  3506   0022BA                     l275:
  3507   0022BA  0012               	return		;funcret
  3508   0022BC                     __end_of_sendTxBuf:
  3509                           	callstack 0
  3510                           
  3511 ;; *************** function _isDataInTxBuf *****************
  3512 ;; Defined at:
  3513 ;;		line 82 in file "serial.c"
  3514 ;; Parameters:    Size  Location     Type
  3515 ;;		None
  3516 ;; Auto vars:     Size  Location     Type
  3517 ;;		None
  3518 ;; Return value:  Size  Location     Type
  3519 ;;                  1    wreg      unsigned char 
  3520 ;; Registers used:
  3521 ;;		wreg, status,2, status,0
  3522 ;; Tracked objects:
  3523 ;;		On entry : 0/0
  3524 ;;		On exit  : 0/0
  3525 ;;		Unchanged: 0/0
  3526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3531 ;;Total ram usage:        0 bytes
  3532 ;; Hardware stack levels used: 1
  3533 ;; Hardware stack levels required when called: 7
  3534 ;; This function calls:
  3535 ;;		Nothing
  3536 ;; This function is called by:
  3537 ;;		_sendTxBuf
  3538 ;; This function uses a non-reentrant model
  3539 ;;
  3540                           
  3541                           	psect	text17
  3542   0022F0                     __ptext17:
  3543                           	callstack 0
  3544   0022F0                     _isDataInTxBuf:
  3545                           	callstack 22
  3546   0022F0                     
  3547                           ;serial.c: 83:     return (TxBufWriteCnt!=TxBufReadCnt);
  3548   0022F0  504D               	movf	_TxBufReadCnt^0,w,c	;volatile
  3549   0022F2  184E               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  3550   0022F4  A4D8               	btfss	status,2,c
  3551   0022F6  EF7F  F011         	goto	u1521
  3552   0022FA  EF82  F011         	goto	u1520
  3553   0022FE                     u1521:
  3554   0022FE  0E01               	movlw	1
  3555   002300  EF83  F011         	goto	u1530
  3556   002304                     u1520:
  3557   002304  0E00               	movlw	0
  3558   002306                     u1530:
  3559   002306  0012               	return		;funcret
  3560   002308                     __end_of_isDataInTxBuf:
  3561                           	callstack 0
  3562                           
  3563 ;; *************** function _isDataInRxBuf *****************
  3564 ;; Defined at:
  3565 ;;		line 62 in file "serial.c"
  3566 ;; Parameters:    Size  Location     Type
  3567 ;;		None
  3568 ;; Auto vars:     Size  Location     Type
  3569 ;;		None
  3570 ;; Return value:  Size  Location     Type
  3571 ;;                  1    wreg      unsigned char 
  3572 ;; Registers used:
  3573 ;;		wreg, status,2, status,0
  3574 ;; Tracked objects:
  3575 ;;		On entry : 0/0
  3576 ;;		On exit  : 0/0
  3577 ;;		Unchanged: 0/0
  3578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3583 ;;Total ram usage:        0 bytes
  3584 ;; Hardware stack levels used: 1
  3585 ;; Hardware stack levels required when called: 7
  3586 ;; This function calls:
  3587 ;;		Nothing
  3588 ;; This function is called by:
  3589 ;;		_main
  3590 ;; This function uses a non-reentrant model
  3591 ;;
  3592                           
  3593                           	psect	text18
  3594   002308                     __ptext18:
  3595                           	callstack 0
  3596   002308                     _isDataInRxBuf:
  3597                           	callstack 23
  3598   002308                     
  3599                           ;serial.c: 63:     return (RxBufWriteCnt!=RxBufReadCnt);
  3600   002308  504F               	movf	_RxBufReadCnt^0,w,c	;volatile
  3601   00230A  1850               	xorwf	_RxBufWriteCnt^0,w,c	;volatile
  3602   00230C  A4D8               	btfss	status,2,c
  3603   00230E  EF8B  F011         	goto	u1581
  3604   002312  EF8E  F011         	goto	u1580
  3605   002316                     u1581:
  3606   002316  0E01               	movlw	1
  3607   002318  EF8F  F011         	goto	u1590
  3608   00231C                     u1580:
  3609   00231C  0E00               	movlw	0
  3610   00231E                     u1590:
  3611   00231E  0012               	return		;funcret
  3612   002320                     __end_of_isDataInRxBuf:
  3613                           	callstack 0
  3614                           
  3615 ;; *************** function _initUSART4 *****************
  3616 ;; Defined at:
  3617 ;;		line 5 in file "serial.c"
  3618 ;; Parameters:    Size  Location     Type
  3619 ;;		None
  3620 ;; Auto vars:     Size  Location     Type
  3621 ;;		None
  3622 ;; Return value:  Size  Location     Type
  3623 ;;                  1    wreg      void 
  3624 ;; Registers used:
  3625 ;;		wreg, status,2
  3626 ;; Tracked objects:
  3627 ;;		On entry : 0/0
  3628 ;;		On exit  : 0/0
  3629 ;;		Unchanged: 0/0
  3630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3635 ;;Total ram usage:        0 bytes
  3636 ;; Hardware stack levels used: 1
  3637 ;; Hardware stack levels required when called: 7
  3638 ;; This function calls:
  3639 ;;		Nothing
  3640 ;; This function is called by:
  3641 ;;		_main
  3642 ;; This function uses a non-reentrant model
  3643 ;;
  3644                           
  3645                           	psect	text19
  3646   002266                     __ptext19:
  3647                           	callstack 0
  3648   002266                     _initUSART4:
  3649                           	callstack 23
  3650   002266                     
  3651                           ;serial.c: 8:     RC0PPS = 0x12;
  3652   002266  0E12               	movlw	18
  3653   002268  010E               	movlb	14	; () banked
  3654   00226A  6F62               	movwf	98,b	;volatile
  3655                           
  3656                           ;serial.c: 9:     RX4PPS = 0x11;
  3657   00226C  0E11               	movlw	17
  3658   00226E  6F15               	movwf	21,b	;volatile
  3659   002270                     
  3660                           ; BSR set to: 14
  3661                           ;serial.c: 11:     BAUD4CONbits.BRG16 = 0;
  3662   002270  97E9               	bcf	233,3,b	;volatile
  3663   002272                     
  3664                           ; BSR set to: 14
  3665                           ;serial.c: 12:     TX4STAbits.BRGH = 0;
  3666   002272  95E8               	bcf	232,2,b	;volatile
  3667                           
  3668                           ;serial.c: 13:     SP4BRGL = 51;
  3669   002274  0E33               	movlw	51
  3670   002276  6FE5               	movwf	229,b	;volatile
  3671                           
  3672                           ;serial.c: 14:     SP4BRGH = 0;
  3673   002278  0E00               	movlw	0
  3674   00227A  6FE6               	movwf	230,b	;volatile
  3675   00227C                     
  3676                           ; BSR set to: 14
  3677                           ;serial.c: 16:     RC4STAbits.CREN = 1;
  3678   00227C  89E7               	bsf	231,4,b	;volatile
  3679   00227E                     
  3680                           ; BSR set to: 14
  3681                           ;serial.c: 17:     TX4STAbits.TXEN = 1;
  3682   00227E  8BE8               	bsf	232,5,b	;volatile
  3683   002280                     
  3684                           ; BSR set to: 14
  3685                           ;serial.c: 18:     RC4STAbits.SPEN = 1;
  3686   002280  8FE7               	bsf	231,7,b	;volatile
  3687   002282                     
  3688                           ; BSR set to: 14
  3689   002282  0012               	return		;funcret
  3690   002284                     __end_of_initUSART4:
  3691                           	callstack 0
  3692                           
  3693 ;; *************** function _getCharFromRxBuf *****************
  3694 ;; Defined at:
  3695 ;;		line 48 in file "serial.c"
  3696 ;; Parameters:    Size  Location     Type
  3697 ;;		None
  3698 ;; Auto vars:     Size  Location     Type
  3699 ;;		None
  3700 ;; Return value:  Size  Location     Type
  3701 ;;                  1    wreg      unsigned char 
  3702 ;; Registers used:
  3703 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3704 ;; Tracked objects:
  3705 ;;		On entry : 0/0
  3706 ;;		On exit  : 0/0
  3707 ;;		Unchanged: 0/0
  3708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3711 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3712 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3713 ;;Total ram usage:        2 bytes
  3714 ;; Hardware stack levels used: 1
  3715 ;; Hardware stack levels required when called: 7
  3716 ;; This function calls:
  3717 ;;		Nothing
  3718 ;; This function is called by:
  3719 ;;		_main
  3720 ;; This function uses a non-reentrant model
  3721 ;;
  3722                           
  3723                           	psect	text20
  3724   0020BA                     __ptext20:
  3725                           	callstack 0
  3726   0020BA                     _getCharFromRxBuf:
  3727                           	callstack 23
  3728   0020BA                     
  3729                           ;serial.c: 49:     if (RxBufReadCnt>=20) {RxBufReadCnt=0;}
  3730   0020BA  0E13               	movlw	19
  3731   0020BC  644F               	cpfsgt	_RxBufReadCnt^0,c	;volatile
  3732   0020BE  EF63  F010         	goto	u1561
  3733   0020C2  EF65  F010         	goto	u1560
  3734   0020C6                     u1561:
  3735   0020C6  EF67  F010         	goto	l2562
  3736   0020CA                     u1560:
  3737   0020CA  0E00               	movlw	0
  3738   0020CC  6E4F               	movwf	_RxBufReadCnt^0,c	;volatile
  3739   0020CE                     l2562:
  3740                           
  3741                           ;serial.c: 50:     return EUSART4RXbuf[RxBufReadCnt++];
  3742   0020CE  2A4F               	incf	_RxBufReadCnt^0,f,c	;volatile
  3743   0020D0  044F               	decf	_RxBufReadCnt^0,w,c	;volatile
  3744   0020D2  6E0D               	movwf	??_getCharFromRxBuf^0,c
  3745   0020D4  6A0E               	clrf	(??_getCharFromRxBuf+1)^0,c
  3746   0020D6  0EC8               	movlw	low _EUSART4RXbuf
  3747   0020D8  240D               	addwf	??_getCharFromRxBuf^0,w,c
  3748   0020DA  6ED9               	movwf	fsr2l,c
  3749   0020DC  0E01               	movlw	high _EUSART4RXbuf
  3750   0020DE  200E               	addwfc	(??_getCharFromRxBuf+1)^0,w,c
  3751   0020E0  6EDA               	movwf	fsr2h,c
  3752   0020E2  50DF               	movf	indf2,w,c
  3753   0020E4  0012               	return		;funcret
  3754   0020E6                     __end_of_getCharFromRxBuf:
  3755                           	callstack 0
  3756                           
  3757 ;; *************** function _color_click_init *****************
  3758 ;; Defined at:
  3759 ;;		line 6 in file "color.c"
  3760 ;; Parameters:    Size  Location     Type
  3761 ;;		None
  3762 ;; Auto vars:     Size  Location     Type
  3763 ;;		None
  3764 ;; Return value:  Size  Location     Type
  3765 ;;                  1    wreg      void 
  3766 ;; Registers used:
  3767 ;;		wreg, status,2, status,0, cstack
  3768 ;; Tracked objects:
  3769 ;;		On entry : 0/0
  3770 ;;		On exit  : 0/0
  3771 ;;		Unchanged: 0/0
  3772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3775 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3776 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3777 ;;Total ram usage:        1 bytes
  3778 ;; Hardware stack levels used: 1
  3779 ;; Hardware stack levels required when called: 10
  3780 ;; This function calls:
  3781 ;;		_I2C_2_Master_Init
  3782 ;;		_color_writetoaddr
  3783 ;; This function is called by:
  3784 ;;		_main
  3785 ;; This function uses a non-reentrant model
  3786 ;;
  3787                           
  3788                           	psect	text21
  3789   00202A                     __ptext21:
  3790                           	callstack 0
  3791   00202A                     _color_click_init:
  3792                           	callstack 20
  3793   00202A                     
  3794                           ;color.c: 9:     I2C_2_Master_Init();
  3795   00202A  EC89  F010         	call	_I2C_2_Master_Init	;wreg free
  3796   00202E                     
  3797                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  3798   00202E  0E01               	movlw	1
  3799   002030  6E0F               	movwf	color_writetoaddr@value^0,c
  3800   002032  0E00               	movlw	0
  3801   002034  EC13  F011         	call	_color_writetoaddr
  3802   002038                     
  3803                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3804   002038  0E3F               	movlw	63
  3805   00203A  6E11               	movwf	??_color_click_init^0,c
  3806   00203C  0E55               	movlw	85
  3807   00203E                     u2337:
  3808   00203E  2EE8               	decfsz	wreg,f,c
  3809   002040  D7FE               	bra	u2337
  3810   002042  2E11               	decfsz	??_color_click_init^0,f,c
  3811   002044  D7FC               	bra	u2337
  3812   002046  F000               	nop	
  3813   002048                     
  3814                           ;color.c: 16:  color_writetoaddr(0x00, 0x03);
  3815   002048  0E03               	movlw	3
  3816   00204A  6E0F               	movwf	color_writetoaddr@value^0,c
  3817   00204C  0E00               	movlw	0
  3818   00204E  EC13  F011         	call	_color_writetoaddr
  3819   002052                     
  3820                           ;color.c: 19:  color_writetoaddr(0x01, 0xD5);
  3821   002052  0ED5               	movlw	213
  3822   002054  6E0F               	movwf	color_writetoaddr@value^0,c
  3823   002056  0E01               	movlw	1
  3824   002058  EC13  F011         	call	_color_writetoaddr
  3825   00205C  0012               	return		;funcret
  3826   00205E                     __end_of_color_click_init:
  3827                           	callstack 0
  3828                           
  3829 ;; *************** function _I2C_2_Master_Init *****************
  3830 ;; Defined at:
  3831 ;;		line 4 in file "i2c.c"
  3832 ;; Parameters:    Size  Location     Type
  3833 ;;		None
  3834 ;; Auto vars:     Size  Location     Type
  3835 ;;		None
  3836 ;; Return value:  Size  Location     Type
  3837 ;;                  1    wreg      void 
  3838 ;; Registers used:
  3839 ;;		wreg, status,2
  3840 ;; Tracked objects:
  3841 ;;		On entry : 0/0
  3842 ;;		On exit  : 0/0
  3843 ;;		Unchanged: 0/0
  3844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3849 ;;Total ram usage:        0 bytes
  3850 ;; Hardware stack levels used: 1
  3851 ;; Hardware stack levels required when called: 7
  3852 ;; This function calls:
  3853 ;;		Nothing
  3854 ;; This function is called by:
  3855 ;;		_color_click_init
  3856 ;; This function uses a non-reentrant model
  3857 ;;
  3858                           
  3859                           	psect	text22
  3860   002112                     __ptext22:
  3861                           	callstack 0
  3862   002112                     _I2C_2_Master_Init:
  3863                           	callstack 22
  3864   002112                     
  3865                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3866   002112  010E               	movlb	14	; () banked
  3867   002114  51D9               	movf	217,w,b	;volatile
  3868   002116  0BF0               	andlw	-16
  3869   002118  0908               	iorlw	8
  3870   00211A  6FD9               	movwf	217,b	;volatile
  3871   00211C                     
  3872                           ; BSR set to: 14
  3873                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3874   00211C  8BD9               	bsf	217,5,b	;volatile
  3875                           
  3876                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3877   00211E  0E9F               	movlw	159
  3878   002120  6FD6               	movwf	214,b	;volatile
  3879   002122                     
  3880                           ; BSR set to: 14
  3881                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3882   002122  8A84               	bsf	132,5,c	;volatile
  3883   002124                     
  3884                           ; BSR set to: 14
  3885                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3886   002124  8C84               	bsf	132,6,c	;volatile
  3887   002126                     
  3888                           ; BSR set to: 14
  3889                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3890   002126  9BA7               	bcf	167,5,b	;volatile
  3891   002128                     
  3892                           ; BSR set to: 14
  3893                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3894   002128  9DA7               	bcf	167,6,b	;volatile
  3895                           
  3896                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3897   00212A  0E1D               	movlw	29
  3898   00212C  6F1D               	movwf	29,b	;volatile
  3899                           
  3900                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3901   00212E  0E1E               	movlw	30
  3902   002130  6F1C               	movwf	28,b	;volatile
  3903                           
  3904                           ;i2c.c: 18:   RD5PPS=0x1C;
  3905   002132  0E1C               	movlw	28
  3906   002134  6F6F               	movwf	111,b	;volatile
  3907                           
  3908                           ;i2c.c: 19:   RD6PPS=0x1B;
  3909   002136  0E1B               	movlw	27
  3910   002138  6F70               	movwf	112,b	;volatile
  3911   00213A                     
  3912                           ; BSR set to: 14
  3913   00213A  0012               	return		;funcret
  3914   00213C                     __end_of_I2C_2_Master_Init:
  3915                           	callstack 0
  3916                           
  3917 ;; *************** function _WhiteLight *****************
  3918 ;; Defined at:
  3919 ;;		line 14 in file "LED_Buttons.c"
  3920 ;; Parameters:    Size  Location     Type
  3921 ;;		None
  3922 ;; Auto vars:     Size  Location     Type
  3923 ;;		None
  3924 ;; Return value:  Size  Location     Type
  3925 ;;                  1    wreg      void 
  3926 ;; Registers used:
  3927 ;;		None
  3928 ;; Tracked objects:
  3929 ;;		On entry : 0/0
  3930 ;;		On exit  : 0/0
  3931 ;;		Unchanged: 0/0
  3932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3937 ;;Total ram usage:        0 bytes
  3938 ;; Hardware stack levels used: 1
  3939 ;; Hardware stack levels required when called: 7
  3940 ;; This function calls:
  3941 ;;		Nothing
  3942 ;; This function is called by:
  3943 ;;		_main
  3944 ;; This function uses a non-reentrant model
  3945 ;;
  3946                           
  3947                           	psect	text23
  3948   002382                     __ptext23:
  3949                           	callstack 0
  3950   002382                     _WhiteLight:
  3951                           	callstack 23
  3952   002382                     
  3953                           ;LED_Buttons.c: 15:     LATGbits.LATG1 = 1;
  3954   002382  827F               	bsf	127,1,c	;volatile
  3955                           
  3956                           ;LED_Buttons.c: 16:     LATAbits.LATA4 = 1;
  3957   002384  8879               	bsf	121,4,c	;volatile
  3958                           
  3959                           ;LED_Buttons.c: 17:     LATFbits.LATF7 = 1;
  3960   002386  8E7E               	bsf	126,7,c	;volatile
  3961   002388  0012               	return		;funcret
  3962   00238A                     __end_of_WhiteLight:
  3963                           	callstack 0
  3964                           
  3965 ;; *************** function _Update_RGBC *****************
  3966 ;; Defined at:
  3967 ;;		line 90 in file "color.c"
  3968 ;; Parameters:    Size  Location     Type
  3969 ;;  tempval         2   23[COMRAM] PTR struct RGB_val
  3970 ;;		 -> main@initial_color(8), 
  3971 ;; Auto vars:     Size  Location     Type
  3972 ;;		None
  3973 ;; Return value:  Size  Location     Type
  3974 ;;                  1    wreg      void 
  3975 ;; Registers used:
  3976 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3977 ;; Tracked objects:
  3978 ;;		On entry : 0/0
  3979 ;;		On exit  : 0/0
  3980 ;;		Unchanged: 0/0
  3981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3982 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3985 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3986 ;;Total ram usage:        2 bytes
  3987 ;; Hardware stack levels used: 1
  3988 ;; Hardware stack levels required when called: 10
  3989 ;; This function calls:
  3990 ;;		_color_read_Blue
  3991 ;;		_color_read_Clear
  3992 ;;		_color_read_Green
  3993 ;;		_color_read_Red
  3994 ;; This function is called by:
  3995 ;;		_main
  3996 ;; This function uses a non-reentrant model
  3997 ;;
  3998                           
  3999                           	psect	text24
  4000   001BF0                     __ptext24:
  4001                           	callstack 0
  4002   001BF0                     _Update_RGBC:
  4003                           	callstack 20
  4004   001BF0                     
  4005                           ;color.c: 92:     tempval->R = color_read_Red();
  4006   001BF0  EC7A  F00E         	call	_color_read_Red	;wreg free
  4007   001BF4  C018  FFD9         	movff	Update_RGBC@tempval,fsr2l
  4008   001BF8  C019  FFDA         	movff	Update_RGBC@tempval+1,fsr2h
  4009   001BFC  C011  FFDE         	movff	?_color_read_Red,postinc2
  4010   001C00  C012  FFDD         	movff	?_color_read_Red+1,postdec2
  4011                           
  4012                           ;color.c: 93:     tempval->G = color_read_Green();
  4013   001C04  ECA2  F00E         	call	_color_read_Green	;wreg free
  4014   001C08  EE20 F002          	lfsr	2,2
  4015   001C0C  5018               	movf	Update_RGBC@tempval^0,w,c
  4016   001C0E  26D9               	addwf	fsr2l,f,c
  4017   001C10  5019               	movf	(Update_RGBC@tempval+1)^0,w,c
  4018   001C12  22DA               	addwfc	fsr2h,f,c
  4019   001C14  C011  FFDE         	movff	?_color_read_Green,postinc2
  4020   001C18  C012  FFDD         	movff	?_color_read_Green+1,postdec2
  4021                           
  4022                           ;color.c: 94:     tempval->B = color_read_Blue();
  4023   001C1C  ECF2  F00E         	call	_color_read_Blue	;wreg free
  4024   001C20  EE20 F004          	lfsr	2,4
  4025   001C24  5018               	movf	Update_RGBC@tempval^0,w,c
  4026   001C26  26D9               	addwf	fsr2l,f,c
  4027   001C28  5019               	movf	(Update_RGBC@tempval+1)^0,w,c
  4028   001C2A  22DA               	addwfc	fsr2h,f,c
  4029   001C2C  C011  FFDE         	movff	?_color_read_Blue,postinc2
  4030   001C30  C012  FFDD         	movff	?_color_read_Blue+1,postdec2
  4031                           
  4032                           ;color.c: 95:     tempval->C = color_read_Clear();
  4033   001C34  ECCA  F00E         	call	_color_read_Clear	;wreg free
  4034   001C38  EE20 F006          	lfsr	2,6
  4035   001C3C  5018               	movf	Update_RGBC@tempval^0,w,c
  4036   001C3E  26D9               	addwf	fsr2l,f,c
  4037   001C40  5019               	movf	(Update_RGBC@tempval+1)^0,w,c
  4038   001C42  22DA               	addwfc	fsr2h,f,c
  4039   001C44  C011  FFDE         	movff	?_color_read_Clear,postinc2
  4040   001C48  C012  FFDD         	movff	?_color_read_Clear+1,postdec2
  4041   001C4C  0012               	return		;funcret
  4042   001C4E                     __end_of_Update_RGBC:
  4043                           	callstack 0
  4044                           
  4045 ;; *************** function _color_read_Red *****************
  4046 ;; Defined at:
  4047 ;;		line 32 in file "color.c"
  4048 ;; Parameters:    Size  Location     Type
  4049 ;;		None
  4050 ;; Auto vars:     Size  Location     Type
  4051 ;;  tmp             2   21[COMRAM] unsigned int 
  4052 ;; Return value:  Size  Location     Type
  4053 ;;                  2   16[COMRAM] unsigned int 
  4054 ;; Registers used:
  4055 ;;		wreg, status,2, status,0, cstack
  4056 ;; Tracked objects:
  4057 ;;		On entry : 0/0
  4058 ;;		On exit  : 0/0
  4059 ;;		Unchanged: 0/0
  4060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4061 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4062 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4063 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4064 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4065 ;;Total ram usage:        7 bytes
  4066 ;; Hardware stack levels used: 1
  4067 ;; Hardware stack levels required when called: 9
  4068 ;; This function calls:
  4069 ;;		_I2C_2_Master_Read
  4070 ;;		_I2C_2_Master_RepStart
  4071 ;;		_I2C_2_Master_Start
  4072 ;;		_I2C_2_Master_Stop
  4073 ;;		_I2C_2_Master_Write
  4074 ;; This function is called by:
  4075 ;;		_Update_RGBC
  4076 ;; This function uses a non-reentrant model
  4077 ;;
  4078                           
  4079                           	psect	text25
  4080   001CF4                     __ptext25:
  4081                           	callstack 0
  4082   001CF4                     _color_read_Red:
  4083                           	callstack 20
  4084   001CF4                     
  4085                           ;color.c: 34:  unsigned int tmp;;color.c: 35:  I2C_2_Master_Start();
  4086   001CF4  ECB2  F011         	call	_I2C_2_Master_Start	;wreg free
  4087                           
  4088                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x00);
  4089   001CF8  0E52               	movlw	82
  4090   001CFA  EC9C  F011         	call	_I2C_2_Master_Write
  4091                           
  4092                           ;color.c: 37:  I2C_2_Master_Write(0xA0 | 0x16);
  4093   001CFE  0EB6               	movlw	182
  4094   001D00  EC9C  F011         	call	_I2C_2_Master_Write
  4095                           
  4096                           ;color.c: 38:  I2C_2_Master_RepStart();
  4097   001D04  ECA8  F011         	call	_I2C_2_Master_RepStart	;wreg free
  4098                           
  4099                           ;color.c: 39:  I2C_2_Master_Write(0x52 | 0x01);
  4100   001D08  0E53               	movlw	83
  4101   001D0A  EC9C  F011         	call	_I2C_2_Master_Write
  4102                           
  4103                           ;color.c: 40:  tmp=I2C_2_Master_Read(1);
  4104   001D0E  0E01               	movlw	1
  4105   001D10  ECD4  F00F         	call	_I2C_2_Master_Read
  4106   001D14  6E13               	movwf	??_color_read_Red^0,c
  4107   001D16  5013               	movf	??_color_read_Red^0,w,c
  4108   001D18  6E16               	movwf	color_read_Red@tmp^0,c
  4109   001D1A  6A17               	clrf	(color_read_Red@tmp+1)^0,c
  4110                           
  4111                           ;color.c: 41:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4112   001D1C  0E00               	movlw	0
  4113   001D1E  ECD4  F00F         	call	_I2C_2_Master_Read
  4114   001D22  6E13               	movwf	??_color_read_Red^0,c
  4115   001D24  5013               	movf	??_color_read_Red^0,w,c
  4116   001D26  6E15               	movwf	(??_color_read_Red+2)^0,c
  4117   001D28  6A14               	clrf	(??_color_read_Red+1)^0,c
  4118   001D2A  5016               	movf	color_read_Red@tmp^0,w,c
  4119   001D2C  1014               	iorwf	(??_color_read_Red+1)^0,w,c
  4120   001D2E  6E16               	movwf	color_read_Red@tmp^0,c
  4121   001D30  5017               	movf	(color_read_Red@tmp+1)^0,w,c
  4122   001D32  1015               	iorwf	(??_color_read_Red+2)^0,w,c
  4123   001D34  6E17               	movwf	(color_read_Red@tmp+1)^0,c
  4124                           
  4125                           ;color.c: 42:  I2C_2_Master_Stop();
  4126   001D36  ECAD  F011         	call	_I2C_2_Master_Stop	;wreg free
  4127   001D3A                     
  4128                           ;color.c: 43:  return tmp;
  4129   001D3A  C016  F011         	movff	color_read_Red@tmp,?_color_read_Red
  4130   001D3E  C017  F012         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  4131   001D42  0012               	return		;funcret
  4132   001D44                     __end_of_color_read_Red:
  4133                           	callstack 0
  4134                           
  4135 ;; *************** function _color_read_Green *****************
  4136 ;; Defined at:
  4137 ;;		line 46 in file "color.c"
  4138 ;; Parameters:    Size  Location     Type
  4139 ;;		None
  4140 ;; Auto vars:     Size  Location     Type
  4141 ;;  tmp             2   21[COMRAM] unsigned int 
  4142 ;; Return value:  Size  Location     Type
  4143 ;;                  2   16[COMRAM] unsigned int 
  4144 ;; Registers used:
  4145 ;;		wreg, status,2, status,0, cstack
  4146 ;; Tracked objects:
  4147 ;;		On entry : 0/0
  4148 ;;		On exit  : 0/0
  4149 ;;		Unchanged: 0/0
  4150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4151 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4152 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4153 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4154 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4155 ;;Total ram usage:        7 bytes
  4156 ;; Hardware stack levels used: 1
  4157 ;; Hardware stack levels required when called: 9
  4158 ;; This function calls:
  4159 ;;		_I2C_2_Master_Read
  4160 ;;		_I2C_2_Master_RepStart
  4161 ;;		_I2C_2_Master_Start
  4162 ;;		_I2C_2_Master_Stop
  4163 ;;		_I2C_2_Master_Write
  4164 ;; This function is called by:
  4165 ;;		_Update_RGBC
  4166 ;; This function uses a non-reentrant model
  4167 ;;
  4168                           
  4169                           	psect	text26
  4170   001D44                     __ptext26:
  4171                           	callstack 0
  4172   001D44                     _color_read_Green:
  4173                           	callstack 20
  4174   001D44                     
  4175                           ;color.c: 48:  unsigned int tmp;;color.c: 49:  I2C_2_Master_Start();
  4176   001D44  ECB2  F011         	call	_I2C_2_Master_Start	;wreg free
  4177                           
  4178                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x00);
  4179   001D48  0E52               	movlw	82
  4180   001D4A  EC9C  F011         	call	_I2C_2_Master_Write
  4181                           
  4182                           ;color.c: 51:  I2C_2_Master_Write(0xA0 | 0x18);
  4183   001D4E  0EB8               	movlw	184
  4184   001D50  EC9C  F011         	call	_I2C_2_Master_Write
  4185                           
  4186                           ;color.c: 52:  I2C_2_Master_RepStart();
  4187   001D54  ECA8  F011         	call	_I2C_2_Master_RepStart	;wreg free
  4188                           
  4189                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x01);
  4190   001D58  0E53               	movlw	83
  4191   001D5A  EC9C  F011         	call	_I2C_2_Master_Write
  4192                           
  4193                           ;color.c: 54:  tmp=I2C_2_Master_Read(1);
  4194   001D5E  0E01               	movlw	1
  4195   001D60  ECD4  F00F         	call	_I2C_2_Master_Read
  4196   001D64  6E13               	movwf	??_color_read_Green^0,c
  4197   001D66  5013               	movf	??_color_read_Green^0,w,c
  4198   001D68  6E16               	movwf	color_read_Green@tmp^0,c
  4199   001D6A  6A17               	clrf	(color_read_Green@tmp+1)^0,c
  4200                           
  4201                           ;color.c: 55:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4202   001D6C  0E00               	movlw	0
  4203   001D6E  ECD4  F00F         	call	_I2C_2_Master_Read
  4204   001D72  6E13               	movwf	??_color_read_Green^0,c
  4205   001D74  5013               	movf	??_color_read_Green^0,w,c
  4206   001D76  6E15               	movwf	(??_color_read_Green+2)^0,c
  4207   001D78  6A14               	clrf	(??_color_read_Green+1)^0,c
  4208   001D7A  5016               	movf	color_read_Green@tmp^0,w,c
  4209   001D7C  1014               	iorwf	(??_color_read_Green+1)^0,w,c
  4210   001D7E  6E16               	movwf	color_read_Green@tmp^0,c
  4211   001D80  5017               	movf	(color_read_Green@tmp+1)^0,w,c
  4212   001D82  1015               	iorwf	(??_color_read_Green+2)^0,w,c
  4213   001D84  6E17               	movwf	(color_read_Green@tmp+1)^0,c
  4214                           
  4215                           ;color.c: 56:  I2C_2_Master_Stop();
  4216   001D86  ECAD  F011         	call	_I2C_2_Master_Stop	;wreg free
  4217   001D8A                     
  4218                           ;color.c: 57:  return tmp;
  4219   001D8A  C016  F011         	movff	color_read_Green@tmp,?_color_read_Green
  4220   001D8E  C017  F012         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  4221   001D92  0012               	return		;funcret
  4222   001D94                     __end_of_color_read_Green:
  4223                           	callstack 0
  4224                           
  4225 ;; *************** function _color_read_Clear *****************
  4226 ;; Defined at:
  4227 ;;		line 74 in file "color.c"
  4228 ;; Parameters:    Size  Location     Type
  4229 ;;		None
  4230 ;; Auto vars:     Size  Location     Type
  4231 ;;  tmp             2   21[COMRAM] unsigned int 
  4232 ;; Return value:  Size  Location     Type
  4233 ;;                  2   16[COMRAM] unsigned int 
  4234 ;; Registers used:
  4235 ;;		wreg, status,2, status,0, cstack
  4236 ;; Tracked objects:
  4237 ;;		On entry : 0/0
  4238 ;;		On exit  : 0/0
  4239 ;;		Unchanged: 0/0
  4240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4241 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4242 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4243 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4244 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4245 ;;Total ram usage:        7 bytes
  4246 ;; Hardware stack levels used: 1
  4247 ;; Hardware stack levels required when called: 9
  4248 ;; This function calls:
  4249 ;;		_I2C_2_Master_Read
  4250 ;;		_I2C_2_Master_RepStart
  4251 ;;		_I2C_2_Master_Start
  4252 ;;		_I2C_2_Master_Stop
  4253 ;;		_I2C_2_Master_Write
  4254 ;; This function is called by:
  4255 ;;		_Update_RGBC
  4256 ;; This function uses a non-reentrant model
  4257 ;;
  4258                           
  4259                           	psect	text27
  4260   001D94                     __ptext27:
  4261                           	callstack 0
  4262   001D94                     _color_read_Clear:
  4263                           	callstack 20
  4264   001D94                     
  4265                           ;color.c: 76:  unsigned int tmp;;color.c: 77:  I2C_2_Master_Start();
  4266   001D94  ECB2  F011         	call	_I2C_2_Master_Start	;wreg free
  4267                           
  4268                           ;color.c: 78:  I2C_2_Master_Write(0x52 | 0x00);
  4269   001D98  0E52               	movlw	82
  4270   001D9A  EC9C  F011         	call	_I2C_2_Master_Write
  4271                           
  4272                           ;color.c: 79:  I2C_2_Master_Write(0xA0 | 0x14);
  4273   001D9E  0EB4               	movlw	180
  4274   001DA0  EC9C  F011         	call	_I2C_2_Master_Write
  4275                           
  4276                           ;color.c: 80:  I2C_2_Master_RepStart();
  4277   001DA4  ECA8  F011         	call	_I2C_2_Master_RepStart	;wreg free
  4278                           
  4279                           ;color.c: 81:  I2C_2_Master_Write(0x52 | 0x01);
  4280   001DA8  0E53               	movlw	83
  4281   001DAA  EC9C  F011         	call	_I2C_2_Master_Write
  4282                           
  4283                           ;color.c: 82:  tmp=I2C_2_Master_Read(1);
  4284   001DAE  0E01               	movlw	1
  4285   001DB0  ECD4  F00F         	call	_I2C_2_Master_Read
  4286   001DB4  6E13               	movwf	??_color_read_Clear^0,c
  4287   001DB6  5013               	movf	??_color_read_Clear^0,w,c
  4288   001DB8  6E16               	movwf	color_read_Clear@tmp^0,c
  4289   001DBA  6A17               	clrf	(color_read_Clear@tmp+1)^0,c
  4290                           
  4291                           ;color.c: 83:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4292   001DBC  0E00               	movlw	0
  4293   001DBE  ECD4  F00F         	call	_I2C_2_Master_Read
  4294   001DC2  6E13               	movwf	??_color_read_Clear^0,c
  4295   001DC4  5013               	movf	??_color_read_Clear^0,w,c
  4296   001DC6  6E15               	movwf	(??_color_read_Clear+2)^0,c
  4297   001DC8  6A14               	clrf	(??_color_read_Clear+1)^0,c
  4298   001DCA  5016               	movf	color_read_Clear@tmp^0,w,c
  4299   001DCC  1014               	iorwf	(??_color_read_Clear+1)^0,w,c
  4300   001DCE  6E16               	movwf	color_read_Clear@tmp^0,c
  4301   001DD0  5017               	movf	(color_read_Clear@tmp+1)^0,w,c
  4302   001DD2  1015               	iorwf	(??_color_read_Clear+2)^0,w,c
  4303   001DD4  6E17               	movwf	(color_read_Clear@tmp+1)^0,c
  4304                           
  4305                           ;color.c: 84:  I2C_2_Master_Stop();
  4306   001DD6  ECAD  F011         	call	_I2C_2_Master_Stop	;wreg free
  4307   001DDA                     
  4308                           ;color.c: 85:  return tmp;
  4309   001DDA  C016  F011         	movff	color_read_Clear@tmp,?_color_read_Clear
  4310   001DDE  C017  F012         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  4311   001DE2  0012               	return		;funcret
  4312   001DE4                     __end_of_color_read_Clear:
  4313                           	callstack 0
  4314                           
  4315 ;; *************** function _color_read_Blue *****************
  4316 ;; Defined at:
  4317 ;;		line 60 in file "color.c"
  4318 ;; Parameters:    Size  Location     Type
  4319 ;;		None
  4320 ;; Auto vars:     Size  Location     Type
  4321 ;;  tmp             2   21[COMRAM] unsigned int 
  4322 ;; Return value:  Size  Location     Type
  4323 ;;                  2   16[COMRAM] unsigned int 
  4324 ;; Registers used:
  4325 ;;		wreg, status,2, status,0, cstack
  4326 ;; Tracked objects:
  4327 ;;		On entry : 0/0
  4328 ;;		On exit  : 0/0
  4329 ;;		Unchanged: 0/0
  4330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4331 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4332 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4333 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4334 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4335 ;;Total ram usage:        7 bytes
  4336 ;; Hardware stack levels used: 1
  4337 ;; Hardware stack levels required when called: 9
  4338 ;; This function calls:
  4339 ;;		_I2C_2_Master_Read
  4340 ;;		_I2C_2_Master_RepStart
  4341 ;;		_I2C_2_Master_Start
  4342 ;;		_I2C_2_Master_Stop
  4343 ;;		_I2C_2_Master_Write
  4344 ;; This function is called by:
  4345 ;;		_Update_RGBC
  4346 ;; This function uses a non-reentrant model
  4347 ;;
  4348                           
  4349                           	psect	text28
  4350   001DE4                     __ptext28:
  4351                           	callstack 0
  4352   001DE4                     _color_read_Blue:
  4353                           	callstack 20
  4354   001DE4                     
  4355                           ;color.c: 62:  unsigned int tmp;;color.c: 63:  I2C_2_Master_Start();
  4356   001DE4  ECB2  F011         	call	_I2C_2_Master_Start	;wreg free
  4357                           
  4358                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x00);
  4359   001DE8  0E52               	movlw	82
  4360   001DEA  EC9C  F011         	call	_I2C_2_Master_Write
  4361                           
  4362                           ;color.c: 65:  I2C_2_Master_Write(0xA0 | 0x1A);
  4363   001DEE  0EBA               	movlw	186
  4364   001DF0  EC9C  F011         	call	_I2C_2_Master_Write
  4365                           
  4366                           ;color.c: 66:  I2C_2_Master_RepStart();
  4367   001DF4  ECA8  F011         	call	_I2C_2_Master_RepStart	;wreg free
  4368                           
  4369                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x01);
  4370   001DF8  0E53               	movlw	83
  4371   001DFA  EC9C  F011         	call	_I2C_2_Master_Write
  4372                           
  4373                           ;color.c: 68:  tmp=I2C_2_Master_Read(1);
  4374   001DFE  0E01               	movlw	1
  4375   001E00  ECD4  F00F         	call	_I2C_2_Master_Read
  4376   001E04  6E13               	movwf	??_color_read_Blue^0,c
  4377   001E06  5013               	movf	??_color_read_Blue^0,w,c
  4378   001E08  6E16               	movwf	color_read_Blue@tmp^0,c
  4379   001E0A  6A17               	clrf	(color_read_Blue@tmp+1)^0,c
  4380                           
  4381                           ;color.c: 69:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4382   001E0C  0E00               	movlw	0
  4383   001E0E  ECD4  F00F         	call	_I2C_2_Master_Read
  4384   001E12  6E13               	movwf	??_color_read_Blue^0,c
  4385   001E14  5013               	movf	??_color_read_Blue^0,w,c
  4386   001E16  6E15               	movwf	(??_color_read_Blue+2)^0,c
  4387   001E18  6A14               	clrf	(??_color_read_Blue+1)^0,c
  4388   001E1A  5016               	movf	color_read_Blue@tmp^0,w,c
  4389   001E1C  1014               	iorwf	(??_color_read_Blue+1)^0,w,c
  4390   001E1E  6E16               	movwf	color_read_Blue@tmp^0,c
  4391   001E20  5017               	movf	(color_read_Blue@tmp+1)^0,w,c
  4392   001E22  1015               	iorwf	(??_color_read_Blue+2)^0,w,c
  4393   001E24  6E17               	movwf	(color_read_Blue@tmp+1)^0,c
  4394                           
  4395                           ;color.c: 70:  I2C_2_Master_Stop();
  4396   001E26  ECAD  F011         	call	_I2C_2_Master_Stop	;wreg free
  4397   001E2A                     
  4398                           ;color.c: 71:  return tmp;
  4399   001E2A  C016  F011         	movff	color_read_Blue@tmp,?_color_read_Blue
  4400   001E2E  C017  F012         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  4401   001E32  0012               	return		;funcret
  4402   001E34                     __end_of_color_read_Blue:
  4403                           	callstack 0
  4404                           
  4405 ;; *************** function _I2C_2_Master_RepStart *****************
  4406 ;; Defined at:
  4407 ;;		line 33 in file "i2c.c"
  4408 ;; Parameters:    Size  Location     Type
  4409 ;;		None
  4410 ;; Auto vars:     Size  Location     Type
  4411 ;;		None
  4412 ;; Return value:  Size  Location     Type
  4413 ;;                  1    wreg      void 
  4414 ;; Registers used:
  4415 ;;		wreg, status,2, status,0, cstack
  4416 ;; Tracked objects:
  4417 ;;		On entry : 0/0
  4418 ;;		On exit  : 0/0
  4419 ;;		Unchanged: 0/0
  4420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4425 ;;Total ram usage:        0 bytes
  4426 ;; Hardware stack levels used: 1
  4427 ;; Hardware stack levels required when called: 8
  4428 ;; This function calls:
  4429 ;;		_I2C_2_Master_Idle
  4430 ;; This function is called by:
  4431 ;;		_color_read_Red
  4432 ;;		_color_read_Green
  4433 ;;		_color_read_Blue
  4434 ;;		_color_read_Clear
  4435 ;; This function uses a non-reentrant model
  4436 ;;
  4437                           
  4438                           	psect	text29
  4439   002350                     __ptext29:
  4440                           	callstack 0
  4441   002350                     _I2C_2_Master_RepStart:
  4442                           	callstack 20
  4443   002350                     
  4444                           ;i2c.c: 35:   I2C_2_Master_Idle();
  4445   002350  ECC8  F010         	call	_I2C_2_Master_Idle	;wreg free
  4446   002354                     
  4447                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  4448   002354  010E               	movlb	14	; () banked
  4449   002356  83DA               	bsf	218,1,b	;volatile
  4450   002358                     
  4451                           ; BSR set to: 14
  4452   002358  0012               	return		;funcret
  4453   00235A                     __end_of_I2C_2_Master_RepStart:
  4454                           	callstack 0
  4455                           
  4456 ;; *************** function _I2C_2_Master_Read *****************
  4457 ;; Defined at:
  4458 ;;		line 51 in file "i2c.c"
  4459 ;; Parameters:    Size  Location     Type
  4460 ;;  ack             1    wreg     unsigned char 
  4461 ;; Auto vars:     Size  Location     Type
  4462 ;;  ack             1   14[COMRAM] unsigned char 
  4463 ;;  tmp             1   15[COMRAM] unsigned char 
  4464 ;; Return value:  Size  Location     Type
  4465 ;;                  1    wreg      unsigned char 
  4466 ;; Registers used:
  4467 ;;		wreg, status,2, status,0, cstack
  4468 ;; Tracked objects:
  4469 ;;		On entry : 0/0
  4470 ;;		On exit  : 0/0
  4471 ;;		Unchanged: 0/0
  4472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4474 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4475 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4476 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4477 ;;Total ram usage:        3 bytes
  4478 ;; Hardware stack levels used: 1
  4479 ;; Hardware stack levels required when called: 8
  4480 ;; This function calls:
  4481 ;;		_I2C_2_Master_Idle
  4482 ;; This function is called by:
  4483 ;;		_color_read_Red
  4484 ;;		_color_read_Green
  4485 ;;		_color_read_Blue
  4486 ;;		_color_read_Clear
  4487 ;; This function uses a non-reentrant model
  4488 ;;
  4489                           
  4490                           	psect	text30
  4491   001FA8                     __ptext30:
  4492                           	callstack 0
  4493   001FA8                     _I2C_2_Master_Read:
  4494                           	callstack 20
  4495                           
  4496                           ; BSR set to: 14
  4497                           ;incstack = 0
  4498                           ;I2C_2_Master_Read@ack stored from wreg
  4499   001FA8  6E0F               	movwf	I2C_2_Master_Read@ack^0,c
  4500   001FAA                     
  4501                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  4502   001FAA  ECC8  F010         	call	_I2C_2_Master_Idle	;wreg free
  4503   001FAE                     
  4504                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  4505   001FAE  010E               	movlb	14	; () banked
  4506   001FB0  87DA               	bsf	218,3,b	;volatile
  4507                           
  4508                           ;i2c.c: 56:   I2C_2_Master_Idle();
  4509   001FB2  ECC8  F010         	call	_I2C_2_Master_Idle	;wreg free
  4510   001FB6                     
  4511                           ;i2c.c: 57:   tmp = SSP2BUF;
  4512   001FB6  CED5 F010          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  4513                           
  4514                           ;i2c.c: 58:   I2C_2_Master_Idle();
  4515   001FBA  ECC8  F010         	call	_I2C_2_Master_Idle	;wreg free
  4516   001FBE                     
  4517                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  4518   001FBE  500F               	movf	I2C_2_Master_Read@ack^0,w,c
  4519   001FC0  B4D8               	btfsc	status,2,c
  4520   001FC2  EFE5  F00F         	goto	u1421
  4521   001FC6  EFE9  F00F         	goto	u1420
  4522   001FCA                     u1421:
  4523   001FCA  6A0E               	clrf	??_I2C_2_Master_Read^0,c
  4524   001FCC  2A0E               	incf	??_I2C_2_Master_Read^0,f,c
  4525   001FCE  EFEA  F00F         	goto	u1438
  4526   001FD2                     u1420:
  4527   001FD2  6A0E               	clrf	??_I2C_2_Master_Read^0,c
  4528   001FD4                     u1438:
  4529   001FD4  3A0E               	swapf	??_I2C_2_Master_Read^0,f,c
  4530   001FD6  460E               	rlncf	??_I2C_2_Master_Read^0,f,c
  4531   001FD8  010E               	movlb	14	; () banked
  4532   001FDA  51DA               	movf	218,w,b	;volatile
  4533   001FDC  180E               	xorwf	??_I2C_2_Master_Read^0,w,c
  4534   001FDE  0BDF               	andlw	-33
  4535   001FE0  180E               	xorwf	??_I2C_2_Master_Read^0,w,c
  4536   001FE2  6FDA               	movwf	218,b	;volatile
  4537   001FE4                     
  4538                           ; BSR set to: 14
  4539                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  4540   001FE4  89DA               	bsf	218,4,b	;volatile
  4541   001FE6                     
  4542                           ; BSR set to: 14
  4543                           ;i2c.c: 61:   return tmp;
  4544   001FE6  5010               	movf	I2C_2_Master_Read@tmp^0,w,c
  4545   001FE8                     
  4546                           ; BSR set to: 14
  4547   001FE8  0012               	return		;funcret
  4548   001FEA                     __end_of_I2C_2_Master_Read:
  4549                           	callstack 0
  4550                           
  4551 ;; *************** function _TxBufferedString *****************
  4552 ;; Defined at:
  4553 ;;		line 87 in file "serial.c"
  4554 ;; Parameters:    Size  Location     Type
  4555 ;;  string          2   13[COMRAM] PTR unsigned char 
  4556 ;;		 -> main@string2(40), main@string(40), 
  4557 ;; Auto vars:     Size  Location     Type
  4558 ;;		None
  4559 ;; Return value:  Size  Location     Type
  4560 ;;                  1    wreg      void 
  4561 ;; Registers used:
  4562 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4563 ;; Tracked objects:
  4564 ;;		On entry : 0/0
  4565 ;;		On exit  : 0/0
  4566 ;;		Unchanged: 0/0
  4567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4568 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4571 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4572 ;;Total ram usage:        2 bytes
  4573 ;; Hardware stack levels used: 1
  4574 ;; Hardware stack levels required when called: 8
  4575 ;; This function calls:
  4576 ;;		_putCharToTxBuf
  4577 ;; This function is called by:
  4578 ;;		_main
  4579 ;; This function uses a non-reentrant model
  4580 ;;
  4581                           
  4582                           	psect	text31
  4583   00205E                     __ptext31:
  4584                           	callstack 0
  4585   00205E                     _TxBufferedString:
  4586                           	callstack 22
  4587   00205E                     
  4588                           ;serial.c: 90:     while(*string != 0){
  4589   00205E  EF3A  F010         	goto	l2592
  4590   002062                     l2588:
  4591                           
  4592                           ;serial.c: 91:   putCharToTxBuf(*string++);
  4593   002062  C00E  FFD9         	movff	TxBufferedString@string,fsr2l
  4594   002066  C00F  FFDA         	movff	TxBufferedString@string+1,fsr2h
  4595   00206A  50DF               	movf	indf2,w,c
  4596   00206C  EC9E  F010         	call	_putCharToTxBuf
  4597   002070  4A0E               	infsnz	TxBufferedString@string^0,f,c
  4598   002072  2A0F               	incf	(TxBufferedString@string+1)^0,f,c
  4599   002074                     l2592:
  4600                           
  4601                           ;serial.c: 90:     while(*string != 0){
  4602   002074  C00E  FFD9         	movff	TxBufferedString@string,fsr2l
  4603   002078  C00F  FFDA         	movff	TxBufferedString@string+1,fsr2h
  4604   00207C  50DF               	movf	indf2,w,c
  4605   00207E  A4D8               	btfss	status,2,c
  4606   002080  EF44  F010         	goto	u1611
  4607   002084  EF46  F010         	goto	u1610
  4608   002088                     u1611:
  4609   002088  EF31  F010         	goto	l2588
  4610   00208C                     u1610:
  4611   00208C  0012               	return		;funcret
  4612   00208E                     __end_of_TxBufferedString:
  4613                           	callstack 0
  4614                           
  4615 ;; *************** function _putCharToTxBuf *****************
  4616 ;; Defined at:
  4617 ;;		line 74 in file "serial.c"
  4618 ;; Parameters:    Size  Location     Type
  4619 ;;  byte            1    wreg     unsigned char 
  4620 ;; Auto vars:     Size  Location     Type
  4621 ;;  byte            1   12[COMRAM] unsigned char 
  4622 ;; Return value:  Size  Location     Type
  4623 ;;                  1    wreg      void 
  4624 ;; Registers used:
  4625 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4626 ;; Tracked objects:
  4627 ;;		On entry : 0/0
  4628 ;;		On exit  : 0/0
  4629 ;;		Unchanged: 0/0
  4630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4632 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4634 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4635 ;;Total ram usage:        1 bytes
  4636 ;; Hardware stack levels used: 1
  4637 ;; Hardware stack levels required when called: 7
  4638 ;; This function calls:
  4639 ;;		Nothing
  4640 ;; This function is called by:
  4641 ;;		_TxBufferedString
  4642 ;; This function uses a non-reentrant model
  4643 ;;
  4644                           
  4645                           	psect	text32
  4646   00213C                     __ptext32:
  4647                           	callstack 0
  4648   00213C                     _putCharToTxBuf:
  4649                           	callstack 22
  4650                           
  4651                           ;incstack = 0
  4652                           ;putCharToTxBuf@byte stored from wreg
  4653   00213C  6E0D               	movwf	putCharToTxBuf@byte^0,c
  4654   00213E                     
  4655                           ;serial.c: 75:     if (TxBufWriteCnt>=60) {TxBufWriteCnt=0;}
  4656   00213E  0E3B               	movlw	59
  4657   002140  644E               	cpfsgt	_TxBufWriteCnt^0,c	;volatile
  4658   002142  EFA5  F010         	goto	u1511
  4659   002146  EFA7  F010         	goto	u1510
  4660   00214A                     u1511:
  4661   00214A  EFA9  F010         	goto	l2482
  4662   00214E                     u1510:
  4663   00214E  0E00               	movlw	0
  4664   002150  6E4E               	movwf	_TxBufWriteCnt^0,c	;volatile
  4665   002152                     l2482:
  4666                           
  4667                           ;serial.c: 76:     EUSART4TXbuf[TxBufWriteCnt++]=byte;
  4668   002152  0E00               	movlw	low _EUSART4TXbuf
  4669   002154  244E               	addwf	_TxBufWriteCnt^0,w,c	;volatile
  4670   002156  6ED9               	movwf	fsr2l,c
  4671   002158  6ADA               	clrf	fsr2h,c
  4672   00215A  0E05               	movlw	high _EUSART4TXbuf
  4673   00215C  22DA               	addwfc	fsr2h,f,c
  4674   00215E  C00D  FFDF         	movff	putCharToTxBuf@byte,indf2
  4675   002162  2A4E               	incf	_TxBufWriteCnt^0,f,c	;volatile
  4676   002164  0012               	return		;funcret
  4677   002166                     __end_of_putCharToTxBuf:
  4678                           	callstack 0
  4679                           
  4680 ;; *************** function _Timer0_init *****************
  4681 ;; Defined at:
  4682 ;;		line 7 in file "timers.c"
  4683 ;; Parameters:    Size  Location     Type
  4684 ;;		None
  4685 ;; Auto vars:     Size  Location     Type
  4686 ;;		None
  4687 ;; Return value:  Size  Location     Type
  4688 ;;                  1    wreg      void 
  4689 ;; Registers used:
  4690 ;;		wreg, status,2
  4691 ;; Tracked objects:
  4692 ;;		On entry : 0/0
  4693 ;;		On exit  : 0/0
  4694 ;;		Unchanged: 0/0
  4695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4700 ;;Total ram usage:        0 bytes
  4701 ;; Hardware stack levels used: 1
  4702 ;; Hardware stack levels required when called: 7
  4703 ;; This function calls:
  4704 ;;		Nothing
  4705 ;; This function is called by:
  4706 ;;		_main
  4707 ;; This function uses a non-reentrant model
  4708 ;;
  4709                           
  4710                           	psect	text33
  4711   002206                     __ptext33:
  4712                           	callstack 0
  4713   002206                     _Timer0_init:
  4714                           	callstack 23
  4715   002206                     
  4716                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  4717   002206  50D6               	movf	214,w,c	;volatile
  4718   002208  0B1F               	andlw	-225
  4719   00220A  0940               	iorlw	64
  4720   00220C  6ED6               	movwf	214,c	;volatile
  4721   00220E                     
  4722                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  4723   00220E  88D6               	bsf	214,4,c	;volatile
  4724                           
  4725                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
  4726   002210  50D6               	movf	214,w,c	;volatile
  4727   002212  0BF0               	andlw	-16
  4728   002214  0908               	iorlw	8
  4729   002216  6ED6               	movwf	214,c	;volatile
  4730   002218                     
  4731                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
  4732   002218  88D5               	bsf	213,4,c	;volatile
  4733                           
  4734                           ;timers.c: 15:     TMR0H = 0b11000010;
  4735   00221A  0EC2               	movlw	194
  4736   00221C  6ED4               	movwf	212,c	;volatile
  4737                           
  4738                           ;timers.c: 16:     TMR0L = 0b11110110;
  4739   00221E  0EF6               	movlw	246
  4740   002220  6ED3               	movwf	211,c	;volatile
  4741   002222                     
  4742                           ;timers.c: 17:     T0CON0bits.T0EN=1;
  4743   002222  8ED5               	bsf	213,7,c	;volatile
  4744   002224  0012               	return		;funcret
  4745   002226                     __end_of_Timer0_init:
  4746                           	callstack 0
  4747                           
  4748 ;; *************** function _LED_init *****************
  4749 ;; Defined at:
  4750 ;;		line 7 in file "LED_Buttons.c"
  4751 ;; Parameters:    Size  Location     Type
  4752 ;;		None
  4753 ;; Auto vars:     Size  Location     Type
  4754 ;;		None
  4755 ;; Return value:  Size  Location     Type
  4756 ;;                  1    wreg      void 
  4757 ;; Registers used:
  4758 ;;		None
  4759 ;; Tracked objects:
  4760 ;;		On entry : 0/0
  4761 ;;		On exit  : 0/0
  4762 ;;		Unchanged: 0/0
  4763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4768 ;;Total ram usage:        0 bytes
  4769 ;; Hardware stack levels used: 1
  4770 ;; Hardware stack levels required when called: 7
  4771 ;; This function calls:
  4772 ;;		Nothing
  4773 ;; This function is called by:
  4774 ;;		_main
  4775 ;; This function uses a non-reentrant model
  4776 ;;
  4777                           
  4778                           	psect	text34
  4779   00238A                     __ptext34:
  4780                           	callstack 0
  4781   00238A                     _LED_init:
  4782                           	callstack 23
  4783   00238A                     
  4784                           ;LED_Buttons.c: 8:     TRISGbits.TRISG1 = 0;
  4785   00238A  9287               	bcf	135,1,c	;volatile
  4786                           
  4787                           ;LED_Buttons.c: 9:     TRISAbits.TRISA4 = 0;
  4788   00238C  9881               	bcf	129,4,c	;volatile
  4789                           
  4790                           ;LED_Buttons.c: 10:     TRISFbits.TRISF7 = 0;
  4791   00238E  9E86               	bcf	134,7,c	;volatile
  4792   002390  0012               	return		;funcret
  4793   002392                     __end_of_LED_init:
  4794                           	callstack 0
  4795                           
  4796 ;; *************** function _Interrupts_init *****************
  4797 ;; Defined at:
  4798 ;;		line 11 in file "interrupts.c"
  4799 ;; Parameters:    Size  Location     Type
  4800 ;;		None
  4801 ;; Auto vars:     Size  Location     Type
  4802 ;;		None
  4803 ;; Return value:  Size  Location     Type
  4804 ;;                  1    wreg      void 
  4805 ;; Registers used:
  4806 ;;		wreg, status,2, status,0, cstack
  4807 ;; Tracked objects:
  4808 ;;		On entry : 0/0
  4809 ;;		On exit  : 0/0
  4810 ;;		Unchanged: 0/0
  4811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4816 ;;Total ram usage:        0 bytes
  4817 ;; Hardware stack levels used: 1
  4818 ;; Hardware stack levels required when called: 12
  4819 ;; This function calls:
  4820 ;;		_interrupts_clear_colorclick
  4821 ;; This function is called by:
  4822 ;;		_main
  4823 ;; This function uses a non-reentrant model
  4824 ;;
  4825                           
  4826                           	psect	text35
  4827   002284                     __ptext35:
  4828                           	callstack 0
  4829   002284                     _Interrupts_init:
  4830                           	callstack 18
  4831   002284                     
  4832                           ;interrupts.c: 17:     TRISBbits.TRISB1 = 1;
  4833   002284  8282               	bsf	130,1,c	;volatile
  4834                           
  4835                           ;interrupts.c: 18:     ANSELBbits.ANSELB1 = 0;
  4836   002286  010E               	movlb	14	; () banked
  4837   002288  939A               	bcf	154,1,b	;volatile
  4838                           
  4839                           ;interrupts.c: 20:     PIE0bits.INT1IE = 1;
  4840   00228A  8329               	bsf	41,1,b	;volatile
  4841                           
  4842                           ;interrupts.c: 21:     IPR0bits.INT1IP = 1;
  4843   00228C  831F               	bsf	31,1,b	;volatile
  4844                           
  4845                           ;interrupts.c: 22:     INTCONbits.INT1EDG = 0;
  4846   00228E  92F2               	bcf	242,1,c	;volatile
  4847                           
  4848                           ;interrupts.c: 25:     PIE0bits.TMR0IE=1;
  4849   002290  8B29               	bsf	41,5,b	;volatile
  4850                           
  4851                           ;interrupts.c: 26:     IPR0bits.TMR0IP = 0;
  4852   002292  9B1F               	bcf	31,5,b	;volatile
  4853                           
  4854                           ;interrupts.c: 29:     PIE4bits.RC4IE=1;
  4855   002294  872D               	bsf	45,3,b	;volatile
  4856   002296                     
  4857                           ; BSR set to: 14
  4858                           ;interrupts.c: 31:     interrupts_clear_colorclick();
  4859   002296  EC5E  F011         	call	_interrupts_clear_colorclick	;wreg free
  4860   00229A                     
  4861                           ;interrupts.c: 33:     INTCONbits.IPEN = 1;
  4862   00229A  8AF2               	bsf	242,5,c	;volatile
  4863   00229C                     
  4864                           ;interrupts.c: 34:     INTCONbits.PEIE = 1;
  4865   00229C  8CF2               	bsf	242,6,c	;volatile
  4866   00229E                     
  4867                           ;interrupts.c: 35:     INTCONbits.GIE=1;
  4868   00229E  8EF2               	bsf	242,7,c	;volatile
  4869   0022A0  0012               	return		;funcret
  4870   0022A2                     __end_of_Interrupts_init:
  4871                           	callstack 0
  4872                           
  4873 ;; *************** function _interrupts_clear_colorclick *****************
  4874 ;; Defined at:
  4875 ;;		line 56 in file "interrupts.c"
  4876 ;; Parameters:    Size  Location     Type
  4877 ;;		None
  4878 ;; Auto vars:     Size  Location     Type
  4879 ;;		None
  4880 ;; Return value:  Size  Location     Type
  4881 ;;                  1    wreg      void 
  4882 ;; Registers used:
  4883 ;;		wreg, status,2, status,0, cstack
  4884 ;; Tracked objects:
  4885 ;;		On entry : 0/0
  4886 ;;		On exit  : 0/0
  4887 ;;		Unchanged: 0/0
  4888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4893 ;;Total ram usage:        0 bytes
  4894 ;; Hardware stack levels used: 1
  4895 ;; Hardware stack levels required when called: 11
  4896 ;; This function calls:
  4897 ;;		_I2C_2_Master_Start
  4898 ;;		_I2C_2_Master_Stop
  4899 ;;		_I2C_2_Master_Write
  4900 ;;		_init_colorclick_interrupts
  4901 ;; This function is called by:
  4902 ;;		_Interrupts_init
  4903 ;; This function uses a non-reentrant model
  4904 ;;
  4905                           
  4906                           	psect	text36
  4907   0022BC                     __ptext36:
  4908                           	callstack 0
  4909   0022BC                     _interrupts_clear_colorclick:
  4910                           	callstack 18
  4911   0022BC                     
  4912                           ;interrupts.c: 58:     I2C_2_Master_Start();
  4913   0022BC  ECB2  F011         	call	_I2C_2_Master_Start	;wreg free
  4914                           
  4915                           ;interrupts.c: 59:     I2C_2_Master_Write(0x52 | 0x00);
  4916   0022C0  0E52               	movlw	82
  4917   0022C2  EC9C  F011         	call	_I2C_2_Master_Write
  4918                           
  4919                           ;interrupts.c: 60:     I2C_2_Master_Write(0b11100110);
  4920   0022C6  0EE6               	movlw	230
  4921   0022C8  EC9C  F011         	call	_I2C_2_Master_Write
  4922                           
  4923                           ;interrupts.c: 61:     I2C_2_Master_Stop();
  4924   0022CC  ECAD  F011         	call	_I2C_2_Master_Stop	;wreg free
  4925                           
  4926                           ;interrupts.c: 63:     init_colorclick_interrupts();
  4927   0022D0  EC41  F00F         	call	_init_colorclick_interrupts	;wreg free
  4928   0022D4  0012               	return		;funcret
  4929   0022D6                     __end_of_interrupts_clear_colorclick:
  4930                           	callstack 0
  4931                           
  4932 ;; *************** function _init_colorclick_interrupts *****************
  4933 ;; Defined at:
  4934 ;;		line 42 in file "interrupts.c"
  4935 ;; Parameters:    Size  Location     Type
  4936 ;;		None
  4937 ;; Auto vars:     Size  Location     Type
  4938 ;;		None
  4939 ;; Return value:  Size  Location     Type
  4940 ;;                  1    wreg      void 
  4941 ;; Registers used:
  4942 ;;		wreg, status,2, status,0, cstack
  4943 ;; Tracked objects:
  4944 ;;		On entry : 0/0
  4945 ;;		On exit  : 0/0
  4946 ;;		Unchanged: 0/0
  4947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4950 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4951 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4952 ;;Total ram usage:        1 bytes
  4953 ;; Hardware stack levels used: 1
  4954 ;; Hardware stack levels required when called: 10
  4955 ;; This function calls:
  4956 ;;		_color_writetoaddr
  4957 ;; This function is called by:
  4958 ;;		_interrupts_clear_colorclick
  4959 ;; This function uses a non-reentrant model
  4960 ;;
  4961                           
  4962                           	psect	text37
  4963   001E82                     __ptext37:
  4964                           	callstack 0
  4965   001E82                     _init_colorclick_interrupts:
  4966                           	callstack 18
  4967   001E82                     
  4968                           ;interrupts.c: 44:     color_writetoaddr(0x00,0b10011);
  4969   001E82  0E13               	movlw	19
  4970   001E84  6E0F               	movwf	color_writetoaddr@value^0,c
  4971   001E86  0E00               	movlw	0
  4972   001E88  EC13  F011         	call	_color_writetoaddr
  4973   001E8C                     
  4974                           ;interrupts.c: 45:     _delay((unsigned long)((3)*(64000000/4000.0)));
  4975   001E8C  0E3F               	movlw	63
  4976   001E8E  6E11               	movwf	??_init_colorclick_interrupts^0,c
  4977   001E90  0E55               	movlw	85
  4978   001E92                     u2347:
  4979   001E92  2EE8               	decfsz	wreg,f,c
  4980   001E94  D7FE               	bra	u2347
  4981   001E96  2E11               	decfsz	??_init_colorclick_interrupts^0,f,c
  4982   001E98  D7FC               	bra	u2347
  4983   001E9A  F000               	nop	
  4984   001E9C                     
  4985                           ;interrupts.c: 47:     color_writetoaddr(0x0C,0b0100);
  4986   001E9C  0E04               	movlw	4
  4987   001E9E  6E0F               	movwf	color_writetoaddr@value^0,c
  4988   001EA0  0E0C               	movlw	12
  4989   001EA2  EC13  F011         	call	_color_writetoaddr
  4990   001EA6                     
  4991                           ;interrupts.c: 48:     color_writetoaddr(0x04,int_threshold_low & 0xFF);
  4992   001EA6  C049  F00F         	movff	_int_threshold_low,color_writetoaddr@value
  4993   001EAA  0E04               	movlw	4
  4994   001EAC  EC13  F011         	call	_color_writetoaddr
  4995   001EB0                     
  4996                           ;interrupts.c: 49:     color_writetoaddr(0x05,int_threshold_low >> 8);
  4997   001EB0  504A               	movf	(_int_threshold_low+1)^0,w,c
  4998   001EB2  6E0F               	movwf	color_writetoaddr@value^0,c
  4999   001EB4  0E05               	movlw	5
  5000   001EB6  EC13  F011         	call	_color_writetoaddr
  5001   001EBA                     
  5002                           ;interrupts.c: 50:     color_writetoaddr(0x06,int_threshold_high & 0xFF);
  5003   001EBA  C051  F00F         	movff	_int_threshold_high,color_writetoaddr@value
  5004   001EBE  0E06               	movlw	6
  5005   001EC0  EC13  F011         	call	_color_writetoaddr
  5006   001EC4                     
  5007                           ;interrupts.c: 51:     color_writetoaddr(0x07,int_threshold_high >> 8);
  5008   001EC4  5052               	movf	(_int_threshold_high+1)^0,w,c
  5009   001EC6  6E0F               	movwf	color_writetoaddr@value^0,c
  5010   001EC8  0E07               	movlw	7
  5011   001ECA  EC13  F011         	call	_color_writetoaddr
  5012   001ECE  0012               	return		;funcret
  5013   001ED0                     __end_of_init_colorclick_interrupts:
  5014                           	callstack 0
  5015                           
  5016 ;; *************** function _color_writetoaddr *****************
  5017 ;; Defined at:
  5018 ;;		line 22 in file "color.c"
  5019 ;; Parameters:    Size  Location     Type
  5020 ;;  address         1    wreg     unsigned char 
  5021 ;;  value           1   14[COMRAM] unsigned char 
  5022 ;; Auto vars:     Size  Location     Type
  5023 ;;  address         1   15[COMRAM] unsigned char 
  5024 ;; Return value:  Size  Location     Type
  5025 ;;                  1    wreg      void 
  5026 ;; Registers used:
  5027 ;;		wreg, status,2, status,0, cstack
  5028 ;; Tracked objects:
  5029 ;;		On entry : 0/0
  5030 ;;		On exit  : 0/0
  5031 ;;		Unchanged: 0/0
  5032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5033 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5034 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5036 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5037 ;;Total ram usage:        2 bytes
  5038 ;; Hardware stack levels used: 1
  5039 ;; Hardware stack levels required when called: 9
  5040 ;; This function calls:
  5041 ;;		_I2C_2_Master_Start
  5042 ;;		_I2C_2_Master_Stop
  5043 ;;		_I2C_2_Master_Write
  5044 ;; This function is called by:
  5045 ;;		_color_click_init
  5046 ;;		_init_colorclick_interrupts
  5047 ;; This function uses a non-reentrant model
  5048 ;;
  5049                           
  5050                           	psect	text38
  5051   002226                     __ptext38:
  5052                           	callstack 0
  5053   002226                     _color_writetoaddr:
  5054                           	callstack 20
  5055                           
  5056                           ;incstack = 0
  5057                           ;color_writetoaddr@address stored from wreg
  5058   002226  6E10               	movwf	color_writetoaddr@address^0,c
  5059   002228                     
  5060                           ;color.c: 23:     I2C_2_Master_Start();
  5061   002228  ECB2  F011         	call	_I2C_2_Master_Start	;wreg free
  5062                           
  5063                           ;color.c: 24:     I2C_2_Master_Write(0x52 | 0x00);
  5064   00222C  0E52               	movlw	82
  5065   00222E  EC9C  F011         	call	_I2C_2_Master_Write
  5066                           
  5067                           ;color.c: 25:     I2C_2_Master_Write(0x80 | address);
  5068   002232  5010               	movf	color_writetoaddr@address^0,w,c
  5069   002234  0980               	iorlw	128
  5070   002236  EC9C  F011         	call	_I2C_2_Master_Write
  5071                           
  5072                           ;color.c: 26:     I2C_2_Master_Write(value);
  5073   00223A  500F               	movf	color_writetoaddr@value^0,w,c
  5074   00223C  EC9C  F011         	call	_I2C_2_Master_Write
  5075                           
  5076                           ;color.c: 27:     I2C_2_Master_Stop();
  5077   002240  ECAD  F011         	call	_I2C_2_Master_Stop	;wreg free
  5078   002244  0012               	return		;funcret
  5079   002246                     __end_of_color_writetoaddr:
  5080                           	callstack 0
  5081                           
  5082 ;; *************** function _I2C_2_Master_Write *****************
  5083 ;; Defined at:
  5084 ;;		line 45 in file "i2c.c"
  5085 ;; Parameters:    Size  Location     Type
  5086 ;;  data_byte       1    wreg     unsigned char 
  5087 ;; Auto vars:     Size  Location     Type
  5088 ;;  data_byte       1   13[COMRAM] unsigned char 
  5089 ;; Return value:  Size  Location     Type
  5090 ;;                  1    wreg      void 
  5091 ;; Registers used:
  5092 ;;		wreg, status,2, status,0, cstack
  5093 ;; Tracked objects:
  5094 ;;		On entry : 0/0
  5095 ;;		On exit  : 0/0
  5096 ;;		Unchanged: 0/0
  5097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5099 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5101 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5102 ;;Total ram usage:        1 bytes
  5103 ;; Hardware stack levels used: 1
  5104 ;; Hardware stack levels required when called: 8
  5105 ;; This function calls:
  5106 ;;		_I2C_2_Master_Idle
  5107 ;; This function is called by:
  5108 ;;		_color_writetoaddr
  5109 ;;		_color_read_Red
  5110 ;;		_color_read_Green
  5111 ;;		_color_read_Blue
  5112 ;;		_color_read_Clear
  5113 ;;		_interrupts_clear_colorclick
  5114 ;; This function uses a non-reentrant model
  5115 ;;
  5116                           
  5117                           	psect	text39
  5118   002338                     __ptext39:
  5119                           	callstack 0
  5120   002338                     _I2C_2_Master_Write:
  5121                           	callstack 20
  5122                           
  5123                           ;incstack = 0
  5124                           ;I2C_2_Master_Write@data_byte stored from wreg
  5125   002338  6E0E               	movwf	I2C_2_Master_Write@data_byte^0,c
  5126   00233A                     
  5127                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  5128   00233A  ECC8  F010         	call	_I2C_2_Master_Idle	;wreg free
  5129   00233E                     
  5130                           ;i2c.c: 48:   SSP2BUF = data_byte;
  5131   00233E  C00E  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  5132   002342  0012               	return		;funcret
  5133   002344                     __end_of_I2C_2_Master_Write:
  5134                           	callstack 0
  5135                           
  5136 ;; *************** function _I2C_2_Master_Stop *****************
  5137 ;; Defined at:
  5138 ;;		line 39 in file "i2c.c"
  5139 ;; Parameters:    Size  Location     Type
  5140 ;;		None
  5141 ;; Auto vars:     Size  Location     Type
  5142 ;;		None
  5143 ;; Return value:  Size  Location     Type
  5144 ;;                  1    wreg      void 
  5145 ;; Registers used:
  5146 ;;		wreg, status,2, status,0, cstack
  5147 ;; Tracked objects:
  5148 ;;		On entry : 0/0
  5149 ;;		On exit  : 0/0
  5150 ;;		Unchanged: 0/0
  5151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5156 ;;Total ram usage:        0 bytes
  5157 ;; Hardware stack levels used: 1
  5158 ;; Hardware stack levels required when called: 8
  5159 ;; This function calls:
  5160 ;;		_I2C_2_Master_Idle
  5161 ;; This function is called by:
  5162 ;;		_color_writetoaddr
  5163 ;;		_color_read_Red
  5164 ;;		_color_read_Green
  5165 ;;		_color_read_Blue
  5166 ;;		_color_read_Clear
  5167 ;;		_interrupts_clear_colorclick
  5168 ;; This function uses a non-reentrant model
  5169 ;;
  5170                           
  5171                           	psect	text40
  5172   00235A                     __ptext40:
  5173                           	callstack 0
  5174   00235A                     _I2C_2_Master_Stop:
  5175                           	callstack 20
  5176   00235A                     
  5177                           ;i2c.c: 41:   I2C_2_Master_Idle();
  5178   00235A  ECC8  F010         	call	_I2C_2_Master_Idle	;wreg free
  5179   00235E                     
  5180                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  5181   00235E  010E               	movlb	14	; () banked
  5182   002360  85DA               	bsf	218,2,b	;volatile
  5183   002362                     
  5184                           ; BSR set to: 14
  5185   002362  0012               	return		;funcret
  5186   002364                     __end_of_I2C_2_Master_Stop:
  5187                           	callstack 0
  5188                           
  5189 ;; *************** function _I2C_2_Master_Start *****************
  5190 ;; Defined at:
  5191 ;;		line 27 in file "i2c.c"
  5192 ;; Parameters:    Size  Location     Type
  5193 ;;		None
  5194 ;; Auto vars:     Size  Location     Type
  5195 ;;		None
  5196 ;; Return value:  Size  Location     Type
  5197 ;;                  1    wreg      void 
  5198 ;; Registers used:
  5199 ;;		wreg, status,2, status,0, cstack
  5200 ;; Tracked objects:
  5201 ;;		On entry : 0/0
  5202 ;;		On exit  : 0/0
  5203 ;;		Unchanged: 0/0
  5204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5209 ;;Total ram usage:        0 bytes
  5210 ;; Hardware stack levels used: 1
  5211 ;; Hardware stack levels required when called: 8
  5212 ;; This function calls:
  5213 ;;		_I2C_2_Master_Idle
  5214 ;; This function is called by:
  5215 ;;		_color_writetoaddr
  5216 ;;		_color_read_Red
  5217 ;;		_color_read_Green
  5218 ;;		_color_read_Blue
  5219 ;;		_color_read_Clear
  5220 ;;		_interrupts_clear_colorclick
  5221 ;; This function uses a non-reentrant model
  5222 ;;
  5223                           
  5224                           	psect	text41
  5225   002364                     __ptext41:
  5226                           	callstack 0
  5227   002364                     _I2C_2_Master_Start:
  5228                           	callstack 20
  5229   002364                     
  5230                           ;i2c.c: 29:   I2C_2_Master_Idle();
  5231   002364  ECC8  F010         	call	_I2C_2_Master_Idle	;wreg free
  5232   002368                     
  5233                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  5234   002368  010E               	movlb	14	; () banked
  5235   00236A  81DA               	bsf	218,0,b	;volatile
  5236   00236C                     
  5237                           ; BSR set to: 14
  5238   00236C  0012               	return		;funcret
  5239   00236E                     __end_of_I2C_2_Master_Start:
  5240                           	callstack 0
  5241                           
  5242 ;; *************** function _I2C_2_Master_Idle *****************
  5243 ;; Defined at:
  5244 ;;		line 22 in file "i2c.c"
  5245 ;; Parameters:    Size  Location     Type
  5246 ;;		None
  5247 ;; Auto vars:     Size  Location     Type
  5248 ;;		None
  5249 ;; Return value:  Size  Location     Type
  5250 ;;                  1    wreg      void 
  5251 ;; Registers used:
  5252 ;;		wreg, status,2, status,0
  5253 ;; Tracked objects:
  5254 ;;		On entry : 0/0
  5255 ;;		On exit  : 0/0
  5256 ;;		Unchanged: 0/0
  5257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5260 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5261 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5262 ;;Total ram usage:        1 bytes
  5263 ;; Hardware stack levels used: 1
  5264 ;; Hardware stack levels required when called: 7
  5265 ;; This function calls:
  5266 ;;		Nothing
  5267 ;; This function is called by:
  5268 ;;		_I2C_2_Master_Start
  5269 ;;		_I2C_2_Master_RepStart
  5270 ;;		_I2C_2_Master_Stop
  5271 ;;		_I2C_2_Master_Write
  5272 ;;		_I2C_2_Master_Read
  5273 ;; This function uses a non-reentrant model
  5274 ;;
  5275                           
  5276                           	psect	text42
  5277   002190                     __ptext42:
  5278                           	callstack 0
  5279   002190                     _I2C_2_Master_Idle:
  5280                           	callstack 20
  5281   002190                     l67:
  5282   002190  010E               	movlb	14	; () banked
  5283   002192  B5D8               	btfsc	216,2,b	;volatile
  5284   002194  EFCE  F010         	goto	u981
  5285   002198  EFD0  F010         	goto	u980
  5286   00219C                     u981:
  5287   00219C  EFC8  F010         	goto	l67
  5288   0021A0                     u980:
  5289   0021A0                     
  5290                           ; BSR set to: 14
  5291   0021A0  CEDA F00D          	movff	3802,??_I2C_2_Master_Idle	;volatile
  5292   0021A4  0E1F               	movlw	31
  5293   0021A6  160D               	andwf	??_I2C_2_Master_Idle^0,f,c
  5294   0021A8  A4D8               	btfss	status,2,c
  5295   0021AA  EFD9  F010         	goto	u991
  5296   0021AE  EFDB  F010         	goto	u990
  5297   0021B2                     u991:
  5298   0021B2  EFC8  F010         	goto	l67
  5299   0021B6                     u990:
  5300   0021B6                     
  5301                           ; BSR set to: 14
  5302   0021B6  0012               	return		;funcret
  5303   0021B8                     __end_of_I2C_2_Master_Idle:
  5304                           	callstack 0
  5305                           
  5306 ;; *************** function _LowISR *****************
  5307 ;; Defined at:
  5308 ;;		line 73 in file "interrupts.c"
  5309 ;; Parameters:    Size  Location     Type
  5310 ;;		None
  5311 ;; Auto vars:     Size  Location     Type
  5312 ;;		None
  5313 ;; Return value:  Size  Location     Type
  5314 ;;                  1    wreg      void 
  5315 ;; Registers used:
  5316 ;;		wreg, status,2, status,0
  5317 ;; Tracked objects:
  5318 ;;		On entry : 0/0
  5319 ;;		On exit  : 0/0
  5320 ;;		Unchanged: 0/0
  5321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5324 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5325 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5326 ;;Total ram usage:        4 bytes
  5327 ;; Hardware stack levels used: 1
  5328 ;; Hardware stack levels required when called: 6
  5329 ;; This function calls:
  5330 ;;		Nothing
  5331 ;; This function is called by:
  5332 ;;		Interrupt level 1
  5333 ;; This function uses a non-reentrant model
  5334 ;;
  5335                           
  5336                           	psect	intcodelo
  5337   000018                     __pintcodelo:
  5338                           	callstack 0
  5339   000018                     _LowISR:
  5340                           	callstack 16
  5341                           
  5342                           ; BSR set to: 14
  5343                           ;incstack = 0
  5344   000018  8053               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  5345   00001A  CFD8 F00A          	movff	status,??_LowISR+1
  5346   00001E  CFE8 F00B          	movff	wreg,??_LowISR+2
  5347   000022  CFE0 F00C          	movff	bsr,??_LowISR+3
  5348   000026                     
  5349                           ;interrupts.c: 76:     if(PIR0bits.TMR0IF){
  5350   000026  010E               	movlb	14	; () banked
  5351   000028  AB33               	btfss	51,5,b	;volatile
  5352   00002A  EF19  F000         	goto	i1u169_21
  5353   00002E  EF1B  F000         	goto	i1u169_20
  5354   000032                     i1u169_21:
  5355   000032  EF36  F000         	goto	i1l366
  5356   000036                     i1u169_20:
  5357   000036                     
  5358                           ; BSR set to: 14
  5359                           ;interrupts.c: 77:         LATHbits.LATH3 = !LATHbits.LATH3;
  5360   000036  A680               	btfss	128,3,c	;volatile
  5361   000038  EF20  F000         	goto	i1u170_21
  5362   00003C  EF24  F000         	goto	i1u170_20
  5363   000040                     i1u170_21:
  5364   000040  6A09               	clrf	??_LowISR^0,c
  5365   000042  2A09               	incf	??_LowISR^0,f,c
  5366   000044  EF25  F000         	goto	i1u171_28
  5367   000048                     i1u170_20:
  5368   000048  6A09               	clrf	??_LowISR^0,c
  5369   00004A                     i1u171_28:
  5370   00004A  4609               	rlncf	??_LowISR^0,f,c
  5371   00004C  4609               	rlncf	??_LowISR^0,f,c
  5372   00004E  4609               	rlncf	??_LowISR^0,f,c
  5373   000050  5080               	movf	128,w,c	;volatile
  5374   000052  1809               	xorwf	??_LowISR^0,w,c
  5375   000054  0BF7               	andlw	-9
  5376   000056  1809               	xorwf	??_LowISR^0,w,c
  5377   000058  6E80               	movwf	128,c	;volatile
  5378   00005A                     
  5379                           ;interrupts.c: 78:         TMR0H = 0b11000010;
  5380   00005A  0EC2               	movlw	194
  5381   00005C  6ED4               	movwf	212,c	;volatile
  5382   00005E                     
  5383                           ;interrupts.c: 79:         TMR0L = 0b11110110;
  5384   00005E  0EF6               	movlw	246
  5385   000060  6ED3               	movwf	211,c	;volatile
  5386   000062                     
  5387                           ;interrupts.c: 80:         tmr_ovf = 1;
  5388   000062  0E01               	movlw	1
  5389   000064  0100               	movlb	0	; () banked
  5390   000066  6FF9               	movwf	_tmr_ovf& (0+255),b
  5391   000068                     
  5392                           ; BSR set to: 0
  5393                           ;interrupts.c: 81:         PIR0bits.TMR0IF=0;
  5394   000068  010E               	movlb	14	; () banked
  5395   00006A  9B33               	bcf	51,5,b	;volatile
  5396   00006C                     i1l366:
  5397                           
  5398                           ; BSR set to: 14
  5399   00006C  C00C  FFE0         	movff	??_LowISR+3,bsr
  5400   000070  C00B  FFE8         	movff	??_LowISR+2,wreg
  5401   000074  C00A  FFD8         	movff	??_LowISR+1,status
  5402   000078  9053               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  5403   00007A  0010               	retfie	
  5404   00007C                     __end_of_LowISR:
  5405                           	callstack 0
  5406                           
  5407 ;; *************** function _HighISR *****************
  5408 ;; Defined at:
  5409 ;;		line 88 in file "interrupts.c"
  5410 ;; Parameters:    Size  Location     Type
  5411 ;;		None
  5412 ;; Auto vars:     Size  Location     Type
  5413 ;;  a               1    7[COMRAM] unsigned char 
  5414 ;; Return value:  Size  Location     Type
  5415 ;;                  1    wreg      void 
  5416 ;; Registers used:
  5417 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5418 ;; Tracked objects:
  5419 ;;		On entry : 0/0
  5420 ;;		On exit  : 0/0
  5421 ;;		Unchanged: 0/0
  5422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5424 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5425 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5426 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5427 ;;Total ram usage:        3 bytes
  5428 ;; Hardware stack levels used: 1
  5429 ;; Hardware stack levels required when called: 5
  5430 ;; This function calls:
  5431 ;;		_getCharFromTxBuf
  5432 ;;		_putCharToRxBuf
  5433 ;;		i2_interrupts_clear_colorclick
  5434 ;;		i2_isDataInTxBuf
  5435 ;; This function is called by:
  5436 ;;		Interrupt level 2
  5437 ;; This function uses a non-reentrant model
  5438 ;;
  5439                           
  5440                           	psect	intcode
  5441   000008                     __pintcode:
  5442                           	callstack 0
  5443   000008                     _HighISR:
  5444                           	callstack 16
  5445                           
  5446                           ; BSR set to: 14
  5447                           ;incstack = 0
  5448   000008  8253               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5449   00000A  EFBC  F00D         	goto	int_func
  5450                           
  5451                           	psect	intcode_body
  5452   001B78                     __pintcode_body:
  5453                           	callstack 16
  5454   001B78                     int_func:
  5455                           	callstack 16
  5456   001B78  CFD9 F006          	movff	fsr2l,??_HighISR
  5457   001B7C  CFDA F007          	movff	fsr2h,??_HighISR+1
  5458   001B80                     
  5459                           ;interrupts.c: 94:     if(PIR4bits.RC4IF){
  5460   001B80  010E               	movlb	14	; () banked
  5461   001B82  A737               	btfss	55,3,b	;volatile
  5462   001B84  EFC6  F00D         	goto	i2u172_41
  5463   001B88  EFC8  F00D         	goto	i2u172_40
  5464   001B8C                     i2u172_41:
  5465   001B8C  EFCD  F00D         	goto	i2l2708
  5466   001B90                     i2u172_40:
  5467   001B90                     
  5468                           ; BSR set to: 14
  5469                           ;interrupts.c: 95:         unsigned char a = RC4REG;
  5470   001B90  CEE3 F008          	movff	3811,HighISR@a	;volatile
  5471   001B94                     
  5472                           ; BSR set to: 14
  5473                           ;interrupts.c: 96:         putCharToRxBuf(a);
  5474   001B94  5008               	movf	HighISR@a^0,w,c
  5475   001B96  ECB3  F010         	call	_putCharToRxBuf
  5476   001B9A                     i2l2708:
  5477                           
  5478                           ;interrupts.c: 100:     if(!isDataInTxBuf()){
  5479   001B9A  EC90  F011         	call	i2_isDataInTxBuf	;wreg free
  5480   001B9E  0900               	iorlw	0
  5481   001BA0  A4D8               	btfss	status,2,c
  5482   001BA2  EFD5  F00D         	goto	i2u173_41
  5483   001BA6  EFD7  F00D         	goto	i2u173_40
  5484   001BAA                     i2u173_41:
  5485   001BAA  EFD9  F00D         	goto	i2l374
  5486   001BAE                     i2u173_40:
  5487   001BAE                     
  5488                           ;interrupts.c: 101:         PIE4bits.TX4IE=0;
  5489   001BAE  010E               	movlb	14	; () banked
  5490   001BB0  952D               	bcf	45,2,b	;volatile
  5491   001BB2                     i2l374:
  5492                           
  5493                           ;interrupts.c: 103:     if(PIR4bits.TX4IF){
  5494   001BB2  010E               	movlb	14	; () banked
  5495   001BB4  A537               	btfss	55,2,b	;volatile
  5496   001BB6  EFDF  F00D         	goto	i2u174_41
  5497   001BBA  EFE1  F00D         	goto	i2u174_40
  5498   001BBE                     i2u174_41:
  5499   001BBE  EFE5  F00D         	goto	i2l2714
  5500   001BC2                     i2u174_40:
  5501   001BC2                     
  5502                           ; BSR set to: 14
  5503                           ;interrupts.c: 104:         TX4REG = getCharFromTxBuf();
  5504   001BC2  EC73  F010         	call	_getCharFromTxBuf	;wreg free
  5505   001BC6  010E               	movlb	14	; () banked
  5506   001BC8  6FE4               	movwf	228,b	;volatile
  5507   001BCA                     i2l2714:
  5508                           
  5509                           ; BSR set to: 14
  5510                           ;interrupts.c: 110:     if(PIR0bits.INT1IF){
  5511   001BCA  A333               	btfss	51,1,b	;volatile
  5512   001BCC  EFEA  F00D         	goto	i2u175_41
  5513   001BD0  EFEC  F00D         	goto	i2u175_40
  5514   001BD4                     i2u175_41:
  5515   001BD4  EFF2  F00D         	goto	i2l377
  5516   001BD8                     i2u175_40:
  5517   001BD8                     
  5518                           ; BSR set to: 14
  5519                           ;interrupts.c: 111:         color_flag = 1;
  5520   001BD8  0E01               	movlw	1
  5521   001BDA  6E4C               	movwf	_color_flag^0,c
  5522   001BDC                     
  5523                           ; BSR set to: 14
  5524                           ;interrupts.c: 112:         interrupts_clear_colorclick();
  5525   001BDC  EC6B  F011         	call	i2_interrupts_clear_colorclick	;wreg free
  5526   001BE0                     
  5527                           ;interrupts.c: 113:         PIR0bits.INT1IF = 0;
  5528   001BE0  010E               	movlb	14	; () banked
  5529   001BE2  9333               	bcf	51,1,b	;volatile
  5530   001BE4                     i2l377:
  5531                           
  5532                           ; BSR set to: 14
  5533   001BE4  C007  FFDA         	movff	??_HighISR+1,fsr2h
  5534   001BE8  C006  FFD9         	movff	??_HighISR,fsr2l
  5535   001BEC  9253               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5536   001BEE  0011               	retfie		f
  5537   001BF0                     __end_of_HighISR:
  5538                           	callstack 0
  5539                           
  5540 ;; *************** function i2_isDataInTxBuf *****************
  5541 ;; Defined at:
  5542 ;;		line 82 in file "serial.c"
  5543 ;; Parameters:    Size  Location     Type
  5544 ;;		None
  5545 ;; Auto vars:     Size  Location     Type
  5546 ;;		None
  5547 ;; Return value:  Size  Location     Type
  5548 ;;                  1    wreg      unsigned char 
  5549 ;; Registers used:
  5550 ;;		wreg, status,2, status,0
  5551 ;; Tracked objects:
  5552 ;;		On entry : 0/0
  5553 ;;		On exit  : 0/0
  5554 ;;		Unchanged: 0/0
  5555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5560 ;;Total ram usage:        0 bytes
  5561 ;; Hardware stack levels used: 1
  5562 ;; This function calls:
  5563 ;;		Nothing
  5564 ;; This function is called by:
  5565 ;;		_HighISR
  5566 ;; This function uses a non-reentrant model
  5567 ;;
  5568                           
  5569                           	psect	text45
  5570   002320                     __ptext45:
  5571                           	callstack 0
  5572   002320                     i2_isDataInTxBuf:
  5573                           	callstack 20
  5574   002320                     
  5575                           ;serial.c: 83:     return (TxBufWriteCnt!=TxBufReadCnt);
  5576   002320  504D               	movf	_TxBufReadCnt^0,w,c	;volatile
  5577   002322  184E               	xorwf	_TxBufWriteCnt^0,w,c	;volatile
  5578   002324  A4D8               	btfss	status,2,c
  5579   002326  EF97  F011         	goto	i2u71_41
  5580   00232A  EF9A  F011         	goto	i2u71_40
  5581   00232E                     i2u71_41:
  5582   00232E  0E01               	movlw	1
  5583   002330  EF9B  F011         	goto	i2u72_40
  5584   002334                     i2u71_40:
  5585   002334  0E00               	movlw	0
  5586   002336                     i2u72_40:
  5587   002336  0012               	return		;funcret
  5588   002338                     __end_ofi2_isDataInTxBuf:
  5589                           	callstack 0
  5590                           
  5591 ;; *************** function i2_interrupts_clear_colorclick *****************
  5592 ;; Defined at:
  5593 ;;		line 56 in file "interrupts.c"
  5594 ;; Parameters:    Size  Location     Type
  5595 ;;		None
  5596 ;; Auto vars:     Size  Location     Type
  5597 ;;		None
  5598 ;; Return value:  Size  Location     Type
  5599 ;;                  1    wreg      void 
  5600 ;; Registers used:
  5601 ;;		wreg, status,2, status,0, cstack
  5602 ;; Tracked objects:
  5603 ;;		On entry : 0/0
  5604 ;;		On exit  : 0/0
  5605 ;;		Unchanged: 0/0
  5606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5611 ;;Total ram usage:        0 bytes
  5612 ;; Hardware stack levels used: 1
  5613 ;; Hardware stack levels required when called: 4
  5614 ;; This function calls:
  5615 ;;		i2_I2C_2_Master_Start
  5616 ;;		i2_I2C_2_Master_Stop
  5617 ;;		i2_I2C_2_Master_Write
  5618 ;;		i2_init_colorclick_interrupts
  5619 ;; This function is called by:
  5620 ;;		_HighISR
  5621 ;; This function uses a non-reentrant model
  5622 ;;
  5623                           
  5624                           	psect	text46
  5625   0022D6                     __ptext46:
  5626                           	callstack 0
  5627   0022D6                     i2_interrupts_clear_colorclick:
  5628                           	callstack 16
  5629   0022D6                     
  5630                           ;interrupts.c: 58:     I2C_2_Master_Start();
  5631   0022D6  ECBC  F011         	call	i2_I2C_2_Master_Start	;wreg free
  5632                           
  5633                           ;interrupts.c: 59:     I2C_2_Master_Write(0x52 | 0x00);
  5634   0022DA  0E52               	movlw	82
  5635   0022DC  ECA2  F011         	call	i2_I2C_2_Master_Write
  5636                           
  5637                           ;interrupts.c: 60:     I2C_2_Master_Write(0b11100110);
  5638   0022E0  0EE6               	movlw	230
  5639   0022E2  ECA2  F011         	call	i2_I2C_2_Master_Write
  5640                           
  5641                           ;interrupts.c: 61:     I2C_2_Master_Stop();
  5642   0022E6  ECB7  F011         	call	i2_I2C_2_Master_Stop	;wreg free
  5643                           
  5644                           ;interrupts.c: 63:     init_colorclick_interrupts();
  5645   0022EA  EC68  F00F         	call	i2_init_colorclick_interrupts	;wreg free
  5646   0022EE  0012               	return		;funcret
  5647   0022F0                     __end_ofi2_interrupts_clear_colorclick:
  5648                           	callstack 0
  5649                           
  5650 ;; *************** function i2_init_colorclick_interrupts *****************
  5651 ;; Defined at:
  5652 ;;		line 42 in file "interrupts.c"
  5653 ;; Parameters:    Size  Location     Type
  5654 ;;		None
  5655 ;; Auto vars:     Size  Location     Type
  5656 ;;		None
  5657 ;; Return value:  Size  Location     Type
  5658 ;;                  1    wreg      void 
  5659 ;; Registers used:
  5660 ;;		wreg, status,2, status,0, cstack
  5661 ;; Tracked objects:
  5662 ;;		On entry : 0/0
  5663 ;;		On exit  : 0/0
  5664 ;;		Unchanged: 0/0
  5665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5668 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5669 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5670 ;;Total ram usage:        1 bytes
  5671 ;; Hardware stack levels used: 1
  5672 ;; Hardware stack levels required when called: 3
  5673 ;; This function calls:
  5674 ;;		i2_color_writetoaddr
  5675 ;; This function is called by:
  5676 ;;		i2_interrupts_clear_colorclick
  5677 ;; This function uses a non-reentrant model
  5678 ;;
  5679                           
  5680                           	psect	text47
  5681   001ED0                     __ptext47:
  5682                           	callstack 0
  5683   001ED0                     i2_init_colorclick_interrupts:
  5684                           	callstack 16
  5685   001ED0                     
  5686                           ;interrupts.c: 44:     color_writetoaddr(0x00,0b10011);
  5687   001ED0  0E13               	movlw	19
  5688   001ED2  6E03               	movwf	i2color_writetoaddr@value^0,c
  5689   001ED4  0E00               	movlw	0
  5690   001ED6  EC23  F011         	call	i2_color_writetoaddr
  5691   001EDA                     
  5692                           ;interrupts.c: 45:     _delay((unsigned long)((3)*(64000000/4000.0)));
  5693   001EDA  0E3F               	movlw	63
  5694   001EDC  6E05               	movwf	??i2_init_colorclick_interrupts^0,c
  5695   001EDE  0E55               	movlw	85
  5696   001EE0                     i2u235_47:
  5697   001EE0  2EE8               	decfsz	wreg,f,c
  5698   001EE2  D7FE               	bra	i2u235_47
  5699   001EE4  2E05               	decfsz	??i2_init_colorclick_interrupts^0,f,c
  5700   001EE6  D7FC               	bra	i2u235_47
  5701   001EE8  F000               	nop	
  5702   001EEA                     
  5703                           ;interrupts.c: 47:     color_writetoaddr(0x0C,0b0100);
  5704   001EEA  0E04               	movlw	4
  5705   001EEC  6E03               	movwf	i2color_writetoaddr@value^0,c
  5706   001EEE  0E0C               	movlw	12
  5707   001EF0  EC23  F011         	call	i2_color_writetoaddr
  5708   001EF4                     
  5709                           ;interrupts.c: 48:     color_writetoaddr(0x04,int_threshold_low & 0xFF);
  5710   001EF4  C049  F003         	movff	_int_threshold_low,i2color_writetoaddr@value
  5711   001EF8  0E04               	movlw	4
  5712   001EFA  EC23  F011         	call	i2_color_writetoaddr
  5713   001EFE                     
  5714                           ;interrupts.c: 49:     color_writetoaddr(0x05,int_threshold_low >> 8);
  5715   001EFE  504A               	movf	(_int_threshold_low+1)^0,w,c
  5716   001F00  6E03               	movwf	i2color_writetoaddr@value^0,c
  5717   001F02  0E05               	movlw	5
  5718   001F04  EC23  F011         	call	i2_color_writetoaddr
  5719   001F08                     
  5720                           ;interrupts.c: 50:     color_writetoaddr(0x06,int_threshold_high & 0xFF);
  5721   001F08  C051  F003         	movff	_int_threshold_high,i2color_writetoaddr@value
  5722   001F0C  0E06               	movlw	6
  5723   001F0E  EC23  F011         	call	i2_color_writetoaddr
  5724   001F12                     
  5725                           ;interrupts.c: 51:     color_writetoaddr(0x07,int_threshold_high >> 8);
  5726   001F12  5052               	movf	(_int_threshold_high+1)^0,w,c
  5727   001F14  6E03               	movwf	i2color_writetoaddr@value^0,c
  5728   001F16  0E07               	movlw	7
  5729   001F18  EC23  F011         	call	i2_color_writetoaddr
  5730   001F1C  0012               	return		;funcret
  5731   001F1E                     __end_ofi2_init_colorclick_interrupts:
  5732                           	callstack 0
  5733                           
  5734 ;; *************** function i2_color_writetoaddr *****************
  5735 ;; Defined at:
  5736 ;;		line 22 in file "color.c"
  5737 ;; Parameters:    Size  Location     Type
  5738 ;;  address         1    wreg     unsigned char 
  5739 ;;  value           1    2[COMRAM] unsigned char 
  5740 ;; Auto vars:     Size  Location     Type
  5741 ;;  address         1    3[COMRAM] unsigned char 
  5742 ;; Return value:  Size  Location     Type
  5743 ;;                  1    wreg      void 
  5744 ;; Registers used:
  5745 ;;		wreg, status,2, status,0, cstack
  5746 ;; Tracked objects:
  5747 ;;		On entry : 0/0
  5748 ;;		On exit  : 0/0
  5749 ;;		Unchanged: 0/0
  5750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5751 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5752 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5754 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5755 ;;Total ram usage:        2 bytes
  5756 ;; Hardware stack levels used: 1
  5757 ;; Hardware stack levels required when called: 2
  5758 ;; This function calls:
  5759 ;;		i2_I2C_2_Master_Start
  5760 ;;		i2_I2C_2_Master_Stop
  5761 ;;		i2_I2C_2_Master_Write
  5762 ;; This function is called by:
  5763 ;;		i2_init_colorclick_interrupts
  5764 ;; This function uses a non-reentrant model
  5765 ;;
  5766                           
  5767                           	psect	text48
  5768   002246                     __ptext48:
  5769                           	callstack 0
  5770   002246                     i2_color_writetoaddr:
  5771                           	callstack 16
  5772                           
  5773                           ;incstack = 0
  5774                           ;i2color_writetoaddr@address stored from wreg
  5775   002246  6E04               	movwf	i2color_writetoaddr@address^0,c
  5776   002248                     
  5777                           ;color.c: 23:     I2C_2_Master_Start();
  5778   002248  ECBC  F011         	call	i2_I2C_2_Master_Start	;wreg free
  5779                           
  5780                           ;color.c: 24:     I2C_2_Master_Write(0x52 | 0x00);
  5781   00224C  0E52               	movlw	82
  5782   00224E  ECA2  F011         	call	i2_I2C_2_Master_Write
  5783                           
  5784                           ;color.c: 25:     I2C_2_Master_Write(0x80 | address);
  5785   002252  5004               	movf	i2color_writetoaddr@address^0,w,c
  5786   002254  0980               	iorlw	128
  5787   002256  ECA2  F011         	call	i2_I2C_2_Master_Write
  5788                           
  5789                           ;color.c: 26:     I2C_2_Master_Write(value);
  5790   00225A  5003               	movf	i2color_writetoaddr@value^0,w,c
  5791   00225C  ECA2  F011         	call	i2_I2C_2_Master_Write
  5792                           
  5793                           ;color.c: 27:     I2C_2_Master_Stop();
  5794   002260  ECB7  F011         	call	i2_I2C_2_Master_Stop	;wreg free
  5795   002264  0012               	return		;funcret
  5796   002266                     __end_ofi2_color_writetoaddr:
  5797                           	callstack 0
  5798                           
  5799 ;; *************** function i2_I2C_2_Master_Write *****************
  5800 ;; Defined at:
  5801 ;;		line 45 in file "i2c.c"
  5802 ;; Parameters:    Size  Location     Type
  5803 ;;  data_byte       1    wreg     unsigned char 
  5804 ;; Auto vars:     Size  Location     Type
  5805 ;;  data_byte       1    1[COMRAM] unsigned char 
  5806 ;; Return value:  Size  Location     Type
  5807 ;;                  1    wreg      void 
  5808 ;; Registers used:
  5809 ;;		wreg, status,2, status,0, cstack
  5810 ;; Tracked objects:
  5811 ;;		On entry : 0/0
  5812 ;;		On exit  : 0/0
  5813 ;;		Unchanged: 0/0
  5814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5816 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5818 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5819 ;;Total ram usage:        1 bytes
  5820 ;; Hardware stack levels used: 1
  5821 ;; Hardware stack levels required when called: 1
  5822 ;; This function calls:
  5823 ;;		i2_I2C_2_Master_Idle
  5824 ;; This function is called by:
  5825 ;;		i2_color_writetoaddr
  5826 ;;		i2_interrupts_clear_colorclick
  5827 ;; This function uses a non-reentrant model
  5828 ;;
  5829                           
  5830                           	psect	text49
  5831   002344                     __ptext49:
  5832                           	callstack 0
  5833   002344                     i2_I2C_2_Master_Write:
  5834                           	callstack 16
  5835                           
  5836                           ;incstack = 0
  5837                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  5838   002344  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  5839   002346                     
  5840                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  5841   002346  ECDC  F010         	call	i2_I2C_2_Master_Idle	;wreg free
  5842   00234A                     
  5843                           ;i2c.c: 48:   SSP2BUF = data_byte;
  5844   00234A  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  5845   00234E  0012               	return		;funcret
  5846   002350                     __end_ofi2_I2C_2_Master_Write:
  5847                           	callstack 0
  5848                           
  5849 ;; *************** function i2_I2C_2_Master_Stop *****************
  5850 ;; Defined at:
  5851 ;;		line 39 in file "i2c.c"
  5852 ;; Parameters:    Size  Location     Type
  5853 ;;		None
  5854 ;; Auto vars:     Size  Location     Type
  5855 ;;		None
  5856 ;; Return value:  Size  Location     Type
  5857 ;;                  1    wreg      void 
  5858 ;; Registers used:
  5859 ;;		wreg, status,2, status,0, cstack
  5860 ;; Tracked objects:
  5861 ;;		On entry : 0/0
  5862 ;;		On exit  : 0/0
  5863 ;;		Unchanged: 0/0
  5864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5869 ;;Total ram usage:        0 bytes
  5870 ;; Hardware stack levels used: 1
  5871 ;; Hardware stack levels required when called: 1
  5872 ;; This function calls:
  5873 ;;		i2_I2C_2_Master_Idle
  5874 ;; This function is called by:
  5875 ;;		i2_color_writetoaddr
  5876 ;;		i2_interrupts_clear_colorclick
  5877 ;; This function uses a non-reentrant model
  5878 ;;
  5879                           
  5880                           	psect	text50
  5881   00236E                     __ptext50:
  5882                           	callstack 0
  5883   00236E                     i2_I2C_2_Master_Stop:
  5884                           	callstack 16
  5885   00236E                     
  5886                           ;i2c.c: 41:   I2C_2_Master_Idle();
  5887   00236E  ECDC  F010         	call	i2_I2C_2_Master_Idle	;wreg free
  5888   002372                     
  5889                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  5890   002372  010E               	movlb	14	; () banked
  5891   002374  85DA               	bsf	218,2,b	;volatile
  5892   002376                     
  5893                           ; BSR set to: 14
  5894   002376  0012               	return		;funcret
  5895   002378                     __end_ofi2_I2C_2_Master_Stop:
  5896                           	callstack 0
  5897                           
  5898 ;; *************** function i2_I2C_2_Master_Start *****************
  5899 ;; Defined at:
  5900 ;;		line 27 in file "i2c.c"
  5901 ;; Parameters:    Size  Location     Type
  5902 ;;		None
  5903 ;; Auto vars:     Size  Location     Type
  5904 ;;		None
  5905 ;; Return value:  Size  Location     Type
  5906 ;;                  1    wreg      void 
  5907 ;; Registers used:
  5908 ;;		wreg, status,2, status,0, cstack
  5909 ;; Tracked objects:
  5910 ;;		On entry : 0/0
  5911 ;;		On exit  : 0/0
  5912 ;;		Unchanged: 0/0
  5913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5918 ;;Total ram usage:        0 bytes
  5919 ;; Hardware stack levels used: 1
  5920 ;; Hardware stack levels required when called: 1
  5921 ;; This function calls:
  5922 ;;		i2_I2C_2_Master_Idle
  5923 ;; This function is called by:
  5924 ;;		i2_color_writetoaddr
  5925 ;;		i2_interrupts_clear_colorclick
  5926 ;; This function uses a non-reentrant model
  5927 ;;
  5928                           
  5929                           	psect	text51
  5930   002378                     __ptext51:
  5931                           	callstack 0
  5932   002378                     i2_I2C_2_Master_Start:
  5933                           	callstack 16
  5934   002378                     
  5935                           ;i2c.c: 29:   I2C_2_Master_Idle();
  5936   002378  ECDC  F010         	call	i2_I2C_2_Master_Idle	;wreg free
  5937   00237C                     
  5938                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  5939   00237C  010E               	movlb	14	; () banked
  5940   00237E  81DA               	bsf	218,0,b	;volatile
  5941   002380                     
  5942                           ; BSR set to: 14
  5943   002380  0012               	return		;funcret
  5944   002382                     __end_ofi2_I2C_2_Master_Start:
  5945                           	callstack 0
  5946                           
  5947 ;; *************** function i2_I2C_2_Master_Idle *****************
  5948 ;; Defined at:
  5949 ;;		line 22 in file "i2c.c"
  5950 ;; Parameters:    Size  Location     Type
  5951 ;;		None
  5952 ;; Auto vars:     Size  Location     Type
  5953 ;;		None
  5954 ;; Return value:  Size  Location     Type
  5955 ;;                  1    wreg      void 
  5956 ;; Registers used:
  5957 ;;		wreg, status,2, status,0
  5958 ;; Tracked objects:
  5959 ;;		On entry : 0/0
  5960 ;;		On exit  : 0/0
  5961 ;;		Unchanged: 0/0
  5962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5965 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5966 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5967 ;;Total ram usage:        1 bytes
  5968 ;; Hardware stack levels used: 1
  5969 ;; This function calls:
  5970 ;;		Nothing
  5971 ;; This function is called by:
  5972 ;;		i2_I2C_2_Master_Start
  5973 ;;		i2_I2C_2_Master_Stop
  5974 ;;		i2_I2C_2_Master_Write
  5975 ;; This function uses a non-reentrant model
  5976 ;;
  5977                           
  5978                           	psect	text52
  5979   0021B8                     __ptext52:
  5980                           	callstack 0
  5981   0021B8                     i2_I2C_2_Master_Idle:
  5982                           	callstack 16
  5983   0021B8                     i2l67:
  5984   0021B8  010E               	movlb	14	; () banked
  5985   0021BA  B5D8               	btfsc	216,2,b	;volatile
  5986   0021BC  EFE2  F010         	goto	i2u123_41
  5987   0021C0  EFE4  F010         	goto	i2u123_40
  5988   0021C4                     i2u123_41:
  5989   0021C4  EFDC  F010         	goto	i2l67
  5990   0021C8                     i2u123_40:
  5991   0021C8                     
  5992                           ; BSR set to: 14
  5993   0021C8  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  5994   0021CC  0E1F               	movlw	31
  5995   0021CE  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  5996   0021D0  A4D8               	btfss	status,2,c
  5997   0021D2  EFED  F010         	goto	i2u124_41
  5998   0021D6  EFEF  F010         	goto	i2u124_40
  5999   0021DA                     i2u124_41:
  6000   0021DA  EFDC  F010         	goto	i2l67
  6001   0021DE                     i2u124_40:
  6002   0021DE                     
  6003                           ; BSR set to: 14
  6004   0021DE  0012               	return		;funcret
  6005   0021E0                     __end_ofi2_I2C_2_Master_Idle:
  6006                           	callstack 0
  6007                           
  6008 ;; *************** function _putCharToRxBuf *****************
  6009 ;; Defined at:
  6010 ;;		line 54 in file "serial.c"
  6011 ;; Parameters:    Size  Location     Type
  6012 ;;  byte            1    wreg     unsigned char 
  6013 ;; Auto vars:     Size  Location     Type
  6014 ;;  byte            1    0[COMRAM] unsigned char 
  6015 ;; Return value:  Size  Location     Type
  6016 ;;                  1    wreg      void 
  6017 ;; Registers used:
  6018 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6019 ;; Tracked objects:
  6020 ;;		On entry : 0/0
  6021 ;;		On exit  : 0/0
  6022 ;;		Unchanged: 0/0
  6023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6025 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6027 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6028 ;;Total ram usage:        1 bytes
  6029 ;; Hardware stack levels used: 1
  6030 ;; This function calls:
  6031 ;;		Nothing
  6032 ;; This function is called by:
  6033 ;;		_HighISR
  6034 ;; This function uses a non-reentrant model
  6035 ;;
  6036                           
  6037                           	psect	text53
  6038   002166                     __ptext53:
  6039                           	callstack 0
  6040   002166                     _putCharToRxBuf:
  6041                           	callstack 20
  6042                           
  6043                           ; BSR set to: 14
  6044                           ;incstack = 0
  6045                           ;putCharToRxBuf@byte stored from wreg
  6046   002166  6E01               	movwf	putCharToRxBuf@byte^0,c
  6047   002168                     
  6048                           ;serial.c: 55:     if (RxBufWriteCnt>=20) {RxBufWriteCnt=0;}
  6049   002168  0E13               	movlw	19
  6050   00216A  6450               	cpfsgt	_RxBufWriteCnt^0,c	;volatile
  6051   00216C  EFBA  F010         	goto	i2u157_41
  6052   002170  EFBC  F010         	goto	i2u157_40
  6053   002174                     i2u157_41:
  6054   002174  EFBE  F010         	goto	i2l2570
  6055   002178                     i2u157_40:
  6056   002178  0E00               	movlw	0
  6057   00217A  6E50               	movwf	_RxBufWriteCnt^0,c	;volatile
  6058   00217C                     i2l2570:
  6059                           
  6060                           ;serial.c: 56:     EUSART4RXbuf[RxBufWriteCnt++]=byte;
  6061   00217C  0EC8               	movlw	low _EUSART4RXbuf
  6062   00217E  2450               	addwf	_RxBufWriteCnt^0,w,c	;volatile
  6063   002180  6ED9               	movwf	fsr2l,c
  6064   002182  6ADA               	clrf	fsr2h,c
  6065   002184  0E01               	movlw	high _EUSART4RXbuf
  6066   002186  22DA               	addwfc	fsr2h,f,c
  6067   002188  C001  FFDF         	movff	putCharToRxBuf@byte,indf2
  6068   00218C  2A50               	incf	_RxBufWriteCnt^0,f,c	;volatile
  6069   00218E  0012               	return		;funcret
  6070   002190                     __end_of_putCharToRxBuf:
  6071                           	callstack 0
  6072                           
  6073 ;; *************** function _getCharFromTxBuf *****************
  6074 ;; Defined at:
  6075 ;;		line 68 in file "serial.c"
  6076 ;; Parameters:    Size  Location     Type
  6077 ;;		None
  6078 ;; Auto vars:     Size  Location     Type
  6079 ;;		None
  6080 ;; Return value:  Size  Location     Type
  6081 ;;                  1    wreg      unsigned char 
  6082 ;; Registers used:
  6083 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6084 ;; Tracked objects:
  6085 ;;		On entry : 0/0
  6086 ;;		On exit  : 0/0
  6087 ;;		Unchanged: 0/0
  6088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6091 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6092 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6093 ;;Total ram usage:        2 bytes
  6094 ;; Hardware stack levels used: 1
  6095 ;; This function calls:
  6096 ;;		Nothing
  6097 ;; This function is called by:
  6098 ;;		_HighISR
  6099 ;; This function uses a non-reentrant model
  6100 ;;
  6101                           
  6102                           	psect	text54
  6103   0020E6                     __ptext54:
  6104                           	callstack 0
  6105   0020E6                     _getCharFromTxBuf:
  6106                           	callstack 20
  6107   0020E6                     
  6108                           ;serial.c: 69:     if (TxBufReadCnt>=60) {TxBufReadCnt=0;}
  6109   0020E6  0E3B               	movlw	59
  6110   0020E8  644D               	cpfsgt	_TxBufReadCnt^0,c	;volatile
  6111   0020EA  EF79  F010         	goto	i2u160_41
  6112   0020EE  EF7B  F010         	goto	i2u160_40
  6113   0020F2                     i2u160_41:
  6114   0020F2  EF7D  F010         	goto	i2l2582
  6115   0020F6                     i2u160_40:
  6116   0020F6  0E00               	movlw	0
  6117   0020F8  6E4D               	movwf	_TxBufReadCnt^0,c	;volatile
  6118   0020FA                     i2l2582:
  6119                           
  6120                           ;serial.c: 70:     return EUSART4TXbuf[TxBufReadCnt++];
  6121   0020FA  2A4D               	incf	_TxBufReadCnt^0,f,c	;volatile
  6122   0020FC  044D               	decf	_TxBufReadCnt^0,w,c	;volatile
  6123   0020FE  6E01               	movwf	??_getCharFromTxBuf^0,c
  6124   002100  6A02               	clrf	(??_getCharFromTxBuf+1)^0,c
  6125   002102  0E00               	movlw	low _EUSART4TXbuf
  6126   002104  2401               	addwf	??_getCharFromTxBuf^0,w,c
  6127   002106  6ED9               	movwf	fsr2l,c
  6128   002108  0E05               	movlw	high _EUSART4TXbuf
  6129   00210A  2002               	addwfc	(??_getCharFromTxBuf+1)^0,w,c
  6130   00210C  6EDA               	movwf	fsr2h,c
  6131   00210E  50DF               	movf	indf2,w,c
  6132   002110  0012               	return		;funcret
  6133   002112                     __end_of_getCharFromTxBuf:
  6134                           	callstack 0
  6135                           
  6136                           	psect	rparam
  6137   000000                     
  6138                           	psect	temp
  6139   000053                     btemp:
  6140                           	callstack 0
  6141   000053                     	ds	1
  6142   000000                     int$flags	set	btemp
  6143   000000                     wtemp8	set	btemp+1
  6144   000000                     ttemp5	set	btemp+1
  6145   000000                     ttemp6	set	btemp+4
  6146   000000                     ttemp7	set	btemp+8
  6147                           
  6148                           	psect	idloc
  6149                           
  6150                           ;Config register IDLOC0 @ 0x200000
  6151                           ;	unspecified, using default values
  6152   200000                     	org	2097152
  6153   200000  0FFF               	dw	4095
  6154                           
  6155                           ;Config register IDLOC1 @ 0x200002
  6156                           ;	unspecified, using default values
  6157   200002                     	org	2097154
  6158   200002  0FFF               	dw	4095
  6159                           
  6160                           ;Config register IDLOC2 @ 0x200004
  6161                           ;	unspecified, using default values
  6162   200004                     	org	2097156
  6163   200004  0FFF               	dw	4095
  6164                           
  6165                           ;Config register IDLOC3 @ 0x200006
  6166                           ;	unspecified, using default values
  6167   200006                     	org	2097158
  6168   200006  0FFF               	dw	4095
  6169                           
  6170                           ;Config register IDLOC4 @ 0x200008
  6171                           ;	unspecified, using default values
  6172   200008                     	org	2097160
  6173   200008  0FFF               	dw	4095
  6174                           
  6175                           ;Config register IDLOC5 @ 0x20000A
  6176                           ;	unspecified, using default values
  6177   20000A                     	org	2097162
  6178   20000A  0FFF               	dw	4095
  6179                           
  6180                           ;Config register IDLOC6 @ 0x20000C
  6181                           ;	unspecified, using default values
  6182   20000C                     	org	2097164
  6183   20000C  0FFF               	dw	4095
  6184                           
  6185                           ;Config register IDLOC7 @ 0x20000E
  6186                           ;	unspecified, using default values
  6187   20000E                     	org	2097166
  6188   20000E  0FFF               	dw	4095
  6189                           
  6190                           	psect	config
  6191                           
  6192                           ;Config register CONFIG1L @ 0x300000
  6193                           ;	External Oscillator mode Selection bits
  6194                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  6195                           ;	Power-up default value for COSC bits
  6196                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  6197   300000                     	org	3145728
  6198   300000  AA                 	db	170
  6199                           
  6200                           ;Config register CONFIG1H @ 0x300001
  6201                           ;	unspecified, using default values
  6202                           ;	Clock Out Enable bit
  6203                           ;	CLKOUTEN = 0x1, unprogrammed default
  6204                           ;	Clock Switch Enable bit
  6205                           ;	CSWEN = 0x1, unprogrammed default
  6206                           ;	Fail-Safe Clock Monitor Enable bit
  6207                           ;	FCMEN = 0x1, unprogrammed default
  6208   300001                     	org	3145729
  6209   300001  FF                 	db	255
  6210                           
  6211                           ;Config register CONFIG2L @ 0x300002
  6212                           ;	unspecified, using default values
  6213                           ;	Master Clear Enable bit
  6214                           ;	MCLRE = 0x1, unprogrammed default
  6215                           ;	Power-up Timer Enable bit
  6216                           ;	PWRTE = 0x1, unprogrammed default
  6217                           ;	Low-power BOR enable bit
  6218                           ;	LPBOREN = 0x1, unprogrammed default
  6219                           ;	Brown-out Reset Enable bits
  6220                           ;	BOREN = 0x3, unprogrammed default
  6221   300002                     	org	3145730
  6222   300002  FF                 	db	255
  6223                           
  6224                           ;Config register CONFIG2H @ 0x300003
  6225                           ;	unspecified, using default values
  6226                           ;	Brown Out Reset Voltage selection bits
  6227                           ;	BORV = 0x3, unprogrammed default
  6228                           ;	ZCD Disable bit
  6229                           ;	ZCD = 0x1, unprogrammed default
  6230                           ;	PPSLOCK bit One-Way Set Enable bit
  6231                           ;	PPS1WAY = 0x1, unprogrammed default
  6232                           ;	Stack Full/Underflow Reset Enable bit
  6233                           ;	STVREN = 0x1, unprogrammed default
  6234                           ;	Debugger Enable bit
  6235                           ;	DEBUG = 0x1, unprogrammed default
  6236                           ;	Extended Instruction Set Enable bit
  6237                           ;	XINST = 0x1, unprogrammed default
  6238   300003                     	org	3145731
  6239   300003  FF                 	db	255
  6240                           
  6241                           ;Config register CONFIG3L @ 0x300004
  6242                           ;	WDT Period Select bits
  6243                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  6244                           ;	WDT operating mode
  6245                           ;	WDTE = OFF, WDT Disabled
  6246   300004                     	org	3145732
  6247   300004  9F                 	db	159
  6248                           
  6249                           ;Config register CONFIG3H @ 0x300005
  6250                           ;	unspecified, using default values
  6251                           ;	WDT Window Select bits
  6252                           ;	WDTCWS = 0x7, unprogrammed default
  6253                           ;	WDT input clock selector
  6254                           ;	WDTCCS = 0x7, unprogrammed default
  6255   300005                     	org	3145733
  6256   300005  FF                 	db	255
  6257                           
  6258                           ;Config register CONFIG4L @ 0x300006
  6259                           ;	unspecified, using default values
  6260                           ;	Write Protection Block 0
  6261                           ;	WRT0 = 0x1, unprogrammed default
  6262                           ;	Write Protection Block 1
  6263                           ;	WRT1 = 0x1, unprogrammed default
  6264                           ;	Write Protection Block 2
  6265                           ;	WRT2 = 0x1, unprogrammed default
  6266                           ;	Write Protection Block 3
  6267                           ;	WRT3 = 0x1, unprogrammed default
  6268                           ;	Write Protection Block 3
  6269                           ;	WRT4 = 0x1, unprogrammed default
  6270                           ;	Write Protection Block 3
  6271                           ;	WRT5 = 0x1, unprogrammed default
  6272                           ;	Write Protection Block 3
  6273                           ;	WRT6 = 0x1, unprogrammed default
  6274                           ;	Write Protection Block 3
  6275                           ;	WRT7 = 0x1, unprogrammed default
  6276   300006                     	org	3145734
  6277   300006  FF                 	db	255
  6278                           
  6279                           ;Config register CONFIG4H @ 0x300007
  6280                           ;	unspecified, using default values
  6281                           ;	Configuration Register Write Protection bit
  6282                           ;	WRTC = 0x1, unprogrammed default
  6283                           ;	Boot Block Write Protection bit
  6284                           ;	WRTB = 0x1, unprogrammed default
  6285                           ;	Data EEPROM Write Protection bit
  6286                           ;	WRTD = 0x1, unprogrammed default
  6287                           ;	Scanner Enable bit
  6288                           ;	SCANE = 0x1, unprogrammed default
  6289                           ;	Low Voltage Programming Enable bit
  6290                           ;	LVP = 0x1, unprogrammed default
  6291   300007                     	org	3145735
  6292   300007  FF                 	db	255
  6293                           
  6294                           ;Config register CONFIG5L @ 0x300008
  6295                           ;	unspecified, using default values
  6296                           ;	UserNVM Program Memory Code Protection bit
  6297                           ;	CP = 0x1, unprogrammed default
  6298                           ;	DataNVM Memory Code Protection bit
  6299                           ;	CPD = 0x1, unprogrammed default
  6300   300008                     	org	3145736
  6301   300008  FF                 	db	255
  6302                           
  6303                           ;Config register CONFIG5H @ 0x300009
  6304                           ;	unspecified, using default values
  6305   300009                     	org	3145737
  6306   300009  FF                 	db	255
  6307                           
  6308                           ;Config register CONFIG6L @ 0x30000A
  6309                           ;	unspecified, using default values
  6310                           ;	Table Read Protection Block 0
  6311                           ;	EBTR0 = 0x1, unprogrammed default
  6312                           ;	Table Read Protection Block 1
  6313                           ;	EBTR1 = 0x1, unprogrammed default
  6314                           ;	Table Read Protection Block 2
  6315                           ;	EBTR2 = 0x1, unprogrammed default
  6316                           ;	Table Read Protection Block 3
  6317                           ;	EBTR3 = 0x1, unprogrammed default
  6318                           ;	Table Read Protection Block 4
  6319                           ;	EBTR4 = 0x1, unprogrammed default
  6320                           ;	Table Read Protection Block 5
  6321                           ;	EBTR5 = 0x1, unprogrammed default
  6322                           ;	Table Read Protection Block 6
  6323                           ;	EBTR6 = 0x1, unprogrammed default
  6324                           ;	Table Read Protection Block 7
  6325                           ;	EBTR7 = 0x1, unprogrammed default
  6326   30000A                     	org	3145738
  6327   30000A  FF                 	db	255
  6328                           
  6329                           ;Config register CONFIG6H @ 0x30000B
  6330                           ;	unspecified, using default values
  6331                           ;	Boot Block Table Read Protection bit
  6332                           ;	EBTRB = 0x1, unprogrammed default
  6333   30000B                     	org	3145739
  6334   30000B  FF                 	db	255
  6335                           tosu	equ	0xFFF
  6336                           tosh	equ	0xFFE
  6337                           tosl	equ	0xFFD
  6338                           stkptr	equ	0xFFC
  6339                           pclatu	equ	0xFFB
  6340                           pclath	equ	0xFFA
  6341                           pcl	equ	0xFF9
  6342                           tblptru	equ	0xFF8
  6343                           tblptrh	equ	0xFF7
  6344                           tblptrl	equ	0xFF6
  6345                           tablat	equ	0xFF5
  6346                           prodh	equ	0xFF4
  6347                           prodl	equ	0xFF3
  6348                           indf0	equ	0xFEF
  6349                           postinc0	equ	0xFEE
  6350                           postdec0	equ	0xFED
  6351                           preinc0	equ	0xFEC
  6352                           plusw0	equ	0xFEB
  6353                           fsr0h	equ	0xFEA
  6354                           fsr0l	equ	0xFE9
  6355                           wreg	equ	0xFE8
  6356                           indf1	equ	0xFE7
  6357                           postinc1	equ	0xFE6
  6358                           postdec1	equ	0xFE5
  6359                           preinc1	equ	0xFE4
  6360                           plusw1	equ	0xFE3
  6361                           fsr1h	equ	0xFE2
  6362                           fsr1l	equ	0xFE1
  6363                           bsr	equ	0xFE0
  6364                           indf2	equ	0xFDF
  6365                           postinc2	equ	0xFDE
  6366                           postdec2	equ	0xFDD
  6367                           preinc2	equ	0xFDC
  6368                           plusw2	equ	0xFDB
  6369                           fsr2h	equ	0xFDA
  6370                           fsr2l	equ	0xFD9
  6371                           status	equ	0xFD8

Data Sizes:
    Strings     22
    Constant    0
    Data        2
    BSS         125
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     70      82
    BANK0           160    151     154
    BANK1           256    200     252
    BANK2           256    200     200
    BANK3           256    200     200
    BANK4           256    200     200
    BANK5           256      0      60
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_2(CODE[22]), STR_1(CODE[22]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_2(CODE[22]), STR_1(CODE[22]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 22
		 -> STR_2(CODE[22]), STR_1(CODE[22]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 22
		 -> STR_2(CODE[22]), STR_1(CODE[22]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2334$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 22
		 -> STR_2(CODE[22]), STR_1(CODE[22]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 40
		 -> main@string2(BANK0[40]), main@string(BANK0[40]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2281$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2281$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    TxBufferedString@string	PTR unsigned char  size(2) Largest target is 40
		 -> main@string2(BANK0[40]), main@string(BANK0[40]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    S1069DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    S1069DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0

    Update_RGBC@tempval	PTR struct RGB_val size(2) Largest target is 8
		 -> main@initial_color(BANK0[8]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->___wmul
    _color_click_init->_color_writetoaddr
    _Update_RGBC->_color_read_Blue
    _Update_RGBC->_color_read_Clear
    _Update_RGBC->_color_read_Green
    _Update_RGBC->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _TxBufferedString->_putCharToTxBuf
    _interrupts_clear_colorclick->_init_colorclick_interrupts
    _init_colorclick_interrupts->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    i2_interrupts_clear_colorclick->i2_init_colorclick_interrupts
    i2_init_colorclick_interrupts->i2_color_writetoaddr
    i2_color_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               893   893      0   13414
                                             68 COMRAM     2     2      0
                                             60 BANK0     91    91      0
                                              0 BANK1    200   200      0
                                              0 BANK2    200   200      0
                                              0 BANK3    200   200      0
                                              0 BANK4    200   200      0
                    _Interrupts_init
                           _LED_init
                        _Timer0_init
                   _TxBufferedString
                        _Update_RGBC
                         _WhiteLight
                   _color_click_init
                   _getCharFromRxBuf
                         _initUSART4
                      _isDataInRxBuf
                          _sendTxBuf
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             27    15     12    9745
                                             35 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    9073
                                             66 COMRAM     2     2      0
                                             29 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           24    18      6    8579
                                             57 COMRAM     9     3      6
                                             17 BANK0     12    12      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                35    25     10    5075
                                             39 COMRAM    18     8     10
                                              0 BANK0     17    17      0
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2775
                                             28 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1357
                                             21 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     857
                                             12 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             30 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     613
                                             12 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     625
                                             12 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 9     7      2    1384
                                             18 COMRAM     9     7      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     207
                                             12 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              4     2      2     237
                                             12 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     615
                                             12 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _sendTxBuf                                            0     0      0       0
                      _isDataInTxBuf
 ---------------------------------------------------------------------------------
 (2) _isDataInTxBuf                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _isDataInRxBuf                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getCharFromRxBuf                                     2     2      0       0
                                             12 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     750
                                             16 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WhiteLight                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Update_RGBC                                          2     0      2     616
                                             23 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                             16 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                             16 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                             16 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                             16 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                             13 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _TxBufferedString                                     2     0      2     219
                                             13 COMRAM     2     0      2
                     _putCharToTxBuf
 ---------------------------------------------------------------------------------
 (2) _putCharToTxBuf                                       1     1      0      22
                                             12 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0     772
        _interrupts_clear_colorclick
 ---------------------------------------------------------------------------------
 (2) _interrupts_clear_colorclick                          0     0      0     772
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
         _init_colorclick_interrupts
 ---------------------------------------------------------------------------------
 (3) _init_colorclick_interrupts                           1     1      0     750
                                             16 COMRAM     1     1      0
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     750
                                             14 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                             13 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                             12 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _LowISR                                               4     4      0       0
                                              8 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _HighISR                                             3     3      0     289
                                              5 COMRAM     3     3      0
                   _getCharFromTxBuf
                     _putCharToRxBuf
      i2_interrupts_clear_colorclick
                    i2_isDataInTxBuf
 ---------------------------------------------------------------------------------
 (11) i2_isDataInTxBuf                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (11) i2_interrupts_clear_colorclick                       0     0      0     244
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
       i2_init_colorclick_interrupts
 ---------------------------------------------------------------------------------
 (12) i2_init_colorclick_interrupts                        1     1      0     222
                                              4 COMRAM     1     1      0
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (13) i2_color_writetoaddr                                 2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (14) i2_I2C_2_Master_Write                                1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (14) i2_I2C_2_Master_Stop                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (14) i2_I2C_2_Master_Start                                0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (15) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _putCharToRxBuf                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _getCharFromTxBuf                                    2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Interrupts_init
     _interrupts_clear_colorclick
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
       _init_colorclick_interrupts
         _color_writetoaddr
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
   _LED_init
   _Timer0_init
   _TxBufferedString
     _putCharToTxBuf
   _Update_RGBC
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _WhiteLight
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
   _getCharFromRxBuf
   _initUSART4
   _isDataInRxBuf
   _sendTxBuf
     _isDataInTxBuf
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
         _isdigit

 _LowISR (ROOT)

 _HighISR (ROOT)
   _getCharFromTxBuf
   _putCharToRxBuf
   i2_interrupts_clear_colorclick
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle
     i2_init_colorclick_interrupts
       i2_color_writetoaddr
         i2_I2C_2_Master_Start
         i2_I2C_2_Master_Stop
         i2_I2C_2_Master_Write
   i2_isDataInTxBuf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      63        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      3C      15       23.4%
BITBANK4           100      0       0      12        0.0%
BANK4              100     C8      C8      13       78.1%
BITBANK3           100      0       0      10        0.0%
BANK3              100     C8      C8      11       78.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100     C8      C8       9       78.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100     C8      FC       7       98.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     97      9A       5       96.2%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     46      52       1       87.2%
BITBIGSFRhllllh     52      0       0      41        0.0%
BITBIGSFRhlllll     37      0       0      43        0.0%
BITBIGSFRllh        2D      0       0      46        0.0%
BITBIGSFRlllhll     2A      0       0      54        0.0%
BITBIGSFRlllll      26      0       0      61        0.0%
BITBIGSFRhhhlll     1E      0       0      38        0.0%
BITBIGSFRhhhhhl     1B      0       0      33        0.0%
BITBIGSFRhhhhl      13      0       0      34        0.0%
BITBIGSFRlllhhh     11      0       0      48        0.0%
BITBIGSFRlllhhh     11      0       0      49        0.0%
BITBIGSFRhhhlhh      E      0       0      35        0.0%
BITBIGSFRhhhhhh      D      0       0      32        0.0%
BITBIGSFRlllhhh      C      0       0      47        0.0%
BITBIGSFRlllhll      9      0       0      58        0.0%
BITBIGSFRhlllll      8      0       0      44        0.0%
BITBIGSFRllllh       6      0       0      60        0.0%
BITBIGSFRlllhll      6      0       0      53        0.0%
BITBIGSFRlllhll      5      0       0      56        0.0%
BITBIGSFRlllhlh      5      0       0      52        0.0%
BITBIGSFRlllhll      3      0       0      55        0.0%
BITBIGSFRlllhll      3      0       0      57        0.0%
BITBIGSFRlllhhl      3      0       0      51        0.0%
BITBIGSFRhlllll      2      0       0      42        0.0%
BITBIGSFRhhhllh      2      0       0      37        0.0%
BITBIGSFRhhhlhl      1      0       0      36        0.0%
BITBIGSFRlllhhh      1      0       0      50        0.0%
BITBIGSFRhlllhh      1      0       0      39        0.0%
BITBIGSFRhlllhl      1      0       0      40        0.0%
BITBIGSFRlllhll      1      0       0      59        0.0%
BITBIGSFRlh          1      0       0      45        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     47C      62        0.0%
DATA                 0      0     47C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Mar 02 14:30:38 2023

                       _color_read_Red 1CF4                        _color_read_Blue 1DE4  
                                   l22 2244                                     l31 1E32  
                                   l25 1D42                                     l34 1DE2  
                                   l19 205C                                     l28 1D92  
                                   l37 1C4C                                     l70 21B6  
                                   l64 213A                                     l73 236C  
                                   l82 2342                                     l67 2190  
                                   l76 2358                                     l85 1FE8  
                                   l79 2362                                     bsr 000FE0  
                  ___wmul@multiplicand 000F                       _color_read_Clear 1D94  
                     _color_read_Green 1D44                      ??_Interrupts_init 0012  
                                  l100 2390                                    l103 2388  
                                  l225 2282                                    l262 2164  
                                  l254 231E                                    l422 13C8  
                                  l271 208C                                    l247 20E4  
                                  l265 2306                                    l441 2204  
                                  l355 1ECE                                    l275 22BA  
                                  l348 22A0                                    l358 22D4  
                                  l286 2224                                    l555 1740  
                                  l568 18A4                                    u980 21A0  
                                  u981 219C                                    u990 21B6  
                                  u991 21B2                                    _abs 1FEA  
                                  _pad 1ACE                                    prod 000FF3  
                  i2_color_writetoaddr 2246                                    wreg 000FE8  
                                 l1201 1CA0                                   ?_abs 001F  
                                 l2100 233A                                   l1205 2020  
                                 l2102 233E                                   l2110 21FC  
                                 l1230 19FA                                   l1151 1B76  
                                 l1119 1CF2                                   l2104 235A  
                                 l1208 2028                                   l3000 131C  
                                 l1160 11BC                                   l1233 1A02  
                                 l2106 235E                                   l1146 1B12  
                                 l3010 136A                                   l3002 1336  
                                 l2108 21E0                                   l1236 20B8  
                                 l1244 1F62                                   l2220 1F1E  
                                 l2300 18BA                                   l3004 1344  
                                 l3020 0E5C                                   l3100 1CE0  
                                 l1149 1B54                                   l1173 138A  
                                 l1157 116E                                   l2222 1F22  
                                 l2310 191E                                   l1270 2394  
                                 l3006 1354                                   l3022 0E60  
                                 l3014 0E18                                   l3110 13B6  
                                 l1159 1176                                   l2216 208E  
                                 l2224 1F36                                   l2320 1998  
                                 l2312 1926                                   l2304 18BE  
                                 l3008 135A                                   l3040 0F34  
                                 l3032 0E8C                                   l3024 0E6C  
                                 l3016 0E40                                   l3120 143E  
                                 l3112 13C2                                   l3104 138C  
                                 l2226 1F58                                   l2322 19CC  
                                 l2314 195E                                   l2306 18DE  
                                 l3050 0F7E                                   l3042 0F42  
                                 l3026 0E6E                                   l3034 0EC4  
                                 l3018 0E4E                                   l3130 1474  
                                 l3122 1442                                   l3114 13CC  
                                 l3106 13AE                                   l1259 1ACC  
                                 l1267 1FA6                                   l1195 10D0  
                                 l2084 2190                                   l2236 2228  
                                 l2228 1F5C                                   l2324 19DE  
                                 l2308 1916                                   l3060 1062  
                                 l3052 0FBA                                   l3044 0F50  
                                 l3036 0ED6                                   l3028 0E80  
                                 l3140 1524                                   l3132 1488  
                                 l3124 1454                                   l3116 13DC  
                                 l3108 13B2                                   l2086 21A0  
                                 l2350 1FB6                                   l2342 2350  
                                 l3054 0FCA                                   l3046 0F70  
                                 l3038 0EFE                                   l3222 0EB6  
                                 l3142 1528                                   l3134 149C  
                                 l3150 155E                                   l3126 1464  
                                 l3118 143C                                   l2096 2364  
                                 l2360 1E82                                   l2600 220E  
                                 l2352 1FBE                                   l2344 2354  
                                 l2520 2038                                   l3224 1948  
                                 l3064 1092                                   l3056 0FEA  
                                 l3152 156E                                   l3144 1540  
                                 l3136 14A4                                   l3128 146C  
                                 l2098 2368                                   l2370 1EBA  
                                 l2362 1E8C                                   l2610 229A  
                                 l2602 2218                                   l2354 1FE4  
                                 l2346 1FAA                                   l2530 2382  
                                 l2450 2126                                   l2442 2112  
                                 l2522 2048                                   l3058 100A  
                                 l3082 1C4E                                   l3154 15A2  
                                 l3138 1518                                   l3146 1544  
                                 l2372 1EC4                                   l2364 1E9C  
                                 l2612 229C                                   l2604 2222  
                                 l2356 1FE6                                   l2348 1FAE  
                                 l2460 1D44                                   l2452 2128  
                                 l2444 211C                                   l2524 2052  
                                 l2516 202A                                   l3068 10A4  
                                 l3084 1C5A                                   l3092 1CA2  
                                 l3156 15AE                                   l3148 1556  
                                 l2366 1EA6                                   l2614 229E  
                                 l2606 2284                                   l2462 1D8A  
                                 l2454 1CF4                                   l2526 1BF0  
                                 l2446 2122                                   l2518 202E  
                                 l2550 2272                                   l3086 1C76  
                                 l3094 1CB4                                   l3158 15B2  
                                 l2368 1EB0                                   l2608 2296  
                                 l2528 238A                                   l2480 214E  
                                 l2472 1D94                                   l2456 1D3A  
                                 l2448 2124                                   l2560 20CA  
                                 l2552 227C                                   l3088 1C96  
                                 l3096 1CBC                                   l2490 22BC  
                                 l2482 2152                                   l2466 1DE4  
                                 l2474 1DDA                                   l2562 20CE  
                                 l2554 227E                                   l2546 2266  
                                 l2298 18A6                                   l3098 1CC4  
                                 l2484 2162                                   l2468 1E2A  
                                 l2556 2280                                   l2548 2270  
                                 l2900 1754                                   l2478 213E  
                                 l2590 2070                                   l2558 20BA  
                                 l2574 2308                                   l2486 22F0  
                                 l2910 17C4                                   l2902 1774  
                                 l2830 1A04                                   l2592 2074  
                                 l2920 183C                                   l2912 17CC  
                                 l2904 1778                                   l2840 1A86  
                                 l2832 1A16                                   l2586 205E  
                                 l2594 22A2                                   l2922 184E  
                                 l2914 17E0                                   l2906 1786  
                                 l2834 1A28                                   l2850 1F86  
                                 l2588 2062                                   l2596 22B6  
                                 l2860 15F0                                   l2852 15BA  
                                 l2916 17EE                                   l2924 1854  
                                 l2908 17A6                                   l2836 1A32  
                                 l2844 1F64                                   l2940 1B0A  
                                 l2932 1ACE                                   l2598 2206  
                                 l2870 164C                                   l2862 15FE  
                                 l2854 15BE                                   l2926 1864  
                                 l2918 181C                                   l2950 1FEA  
                                 l2838 1A50                                   l2846 1F70  
                                 l2942 1B1E                                   l2934 1ADC  
                                 ?_pad 001D                                   l2880 16B6  
                                 l2872 1654                                   l2864 161E  
                                 l2856 15CC                                   l2928 1884  
                                 l2952 2004                                   l2848 1F82  
                                 l2944 1B32                                   l2936 1AF0  
                                 l2960 1118                                   l2890 1700  
                                 l2882 16D6                                   l2874 1668  
                                 l2866 1622                                   l2858 15EC  
                                 l2946 1B36                                   l2938 1AFE  
                                 l2970 117E                                   l2962 1138  
                                 l2954 10D2                                   l2892 1720  
                                 l2884 16D8                                   l2876 1676  
                                 l2868 162E                                   l2948 1B62  
                                 l2980 11B8                                   l2972 118E  
                                 l2964 1146                                   l2956 10F2  
                                 l2886 16EA                                   l2878 1688  
                                 l2990 125E                                   l2982 11C4  
                                 l2974 1194                                   l2966 1148  
                                 l2958 1108                                   l2888 16F0  
                                 l2896 1742                                   l2992 1264  
                                 l2984 11CE                                   l2976 11A4  
                                 l2968 1162                                   l2898 1746  
                                 l2986 11D4                                   l2994 12C8  
                                 l2978 11B0                                   l2996 12E4  
                                 l2988 1256                                   l2998 1302  
                                 STR_1 0E01                                   STR_2 0E01  
                                 u1200 20B4                                   u2000 1ADC  
                                 u2001 1AD8                                   u1210 1F36  
                                 u2010 1AFE                                   u1211 1F32  
                                 u2011 1AFA                                   u1220 1F58  
                                 u2020 1B54                                   u2100 118E  
                                 u1221 1F54                                   u2021 1B50  
                                 u2101 118A                                   u2030 1B62  
                                 u2110 11A4                                   u2031 1B5E  
                                 u2111 11A0                                   u1400 19CC  
                                 u2040 2004                                   u2120 12E4  
                                 u2200 0EFE                                   u1401 19C8  
                                 u2041 2000                                   u2121 12E0  
                                 u2201 0EFA                                   u1410 19DE  
                                 u2130 1302                                   u2050 1104  
                                 u2210 0F42                                   u1411 19DA  
                                 u2131 12FE                                   u2051 10FE  
                                 u2211 0F3E                                   u1420 1FD2  
                                 u2140 131C                                   u2060 1106  
                                 u2220 0FBA                                   u2300 1556  
                                 u1421 1FCA                                   u2141 1318  
                                 u2221 0FB6                                   u2301 1552  
                                 u1510 214E                                   u1190 20B2  
                                 u2150 1336                                   u2070 1118  
                                 u2230 0FEA                                   u2310 156E  
                                 u1511 214A                                   u1191 20AC  
                                 u2151 1332                                   u2071 1114  
                                 u2231 0FE6                                   u2311 156A  
                                 u1520 2304                                   u2160 1344  
                                 u2080 1146                                   u2240 100A  
                         _BAUD4CONbits 000EE9                                   u1521 22FE  
                                 u2161 1340                                   u2081 1142  
                                 u2241 1006                                   u1610 208C  
                                 u1530 2306                                   u2170 1354  
                                 u2090 1162                                   u2250 1C96  
                                 u1611 2088                                   u2171 1350  
                                 u2091 115E                                   u2251 1C92  
                                 u1620 22B6                                   u1380 18DE  
                                 u2180 0E40                                   u2260 1454  
                                 u1621 22B2                                   u1381 18DA  
                                 u2181 0E3C                                   u2261 1450  
                                 u1438 1FD4                                   u1390 1912  
                                 u2190 0ED6                                   u2270 1464  
                                 u1391 190E                                   u2191 0ED2  
                                 u2327 1532                                   u2271 1460  
                                 u1560 20CA                                   u2280 1488  
                                 u2337 203E                                   u1561 20C6  
                                 u2281 1484                                   u2290 149C  
                                 _T2PR 000FBC                                   u2347 1E92  
                                 u2291 1498                                   u1580 231C  
                                 u1900 164C                                   u1820 1A16  
                                 u1581 2316                                   u1901 1648  
                                 u1821 1A12                                   u1590 231E  
                                 u1910 1676                                   u1830 1A28  
                                 u1911 1672                                   u1831 1A24  
                                 u1920 16B6                                   u1840 1A50  
                                 u1921 16B2                                   u1841 1A4C  
                                 u1930 1700                                   u1850 1A86  
                                 u1931 16FC                                   u1851 1A82  
                                 u1940 1754                                   u1860 1FA6  
                                 u1941 1750                                   u1861 1FA2  
                                 u1870 15CC                                   u1950 1786  
                                 u1871 15C8                                   u1951 1782  
                                 u1880 15FE                                   u1960 17C4  
                                 u1881 15FA                                   u1961 17C0  
                                 u1970 17EE                                   u1891 1628  
                                 u1971 17EA                                   u1980 181C  
                                 u1981 1818                                   u1990 1864  
                                 u1991 1860                                   i2l22 2264  
                                 i2l70 21DE                                   i2l73 2380  
                                 i2l82 234E                                   i2l67 21B8  
                                 i2l79 2376                                   abs@a 001F  
                                 _dbuf 01DC                                   _atoi 18A6  
                                 _main 138C                                   _dtoa 10D2  
                                 _prec 0047                                   pad@i 0024  
                                 pad@p 0021                                   fsr1h 000FE2  
                                 fsr2h 000FDA                                   indf2 000FDF  
                                 fsr1l 000FE1                                   pad@w 0026  
                                 fsr2l 000FD9                                   btemp 0053  
       ??i2_init_colorclick_interrupts 0005                      main@initial_color 00EF  
                                 prodh 000FF4                                   prodl 000FF3  
                                 start 007C                   ?i2_color_writetoaddr 0003  
                          main@string2 00C4                 __end_of_color_read_Red 1D44  
                      __end_of_HighISR 1BF0                           ___param_bank 000000  
                                ??_abs 0021                                  ??_pad 0023  
                     __end_of_LED_init 2392                        __end_of___aodiv 1742  
                                ?_atoi 0013                                  ?_main 0001  
                                ?_dtoa 0028                        __end_of___aomod 18A6  
                                i1l366 006C                                  i2l251 218E  
                                i2l265 2336                                  i2l258 2110  
                                i2l355 1F1C                                  i2l358 22EE  
                                i2l374 1BB2                                  i2l377 1BE4  
                         vfpfcnvrt@fmt 003C                                  _TMR0H 000FD4  
                                _TMR0L 000FD3             __end_of_I2C_2_Master_Start 236E  
           __end_of_I2C_2_Master_Write 2344                                  _flags 004B  
                                _fputc 1A04                                  _fputs 1F64  
                      __end_of_isdigit 20BA                     _int_threshold_high 0051  
                                atoi@n 001A                                  pad@fp 001D  
                                atoi@s 0013                                  _width 00F7  
                                _putch 2394                                  main@a 00EE  
                                main@i 00ED                                  dtoa@d 002A  
                                dtoa@i 006F                                  dtoa@n 0066  
                                dtoa@p 0062                                  dtoa@s 006E  
                                dtoa@w 0064                        __end_of_isspace 1F64  
                                tablat 000FF5                                  ttemp5 0054  
                                ttemp6 0057                                  ttemp7 005B  
                                status 000FD8                                  wtemp8 0054  
                      __end_of_sprintf 1CF4                  ??i2_color_writetoaddr 0004  
              __end_of_color_read_Blue 1E34                  _I2C_2_Master_RepStart 2350  
                   putCharToRxBuf@byte 0001                        ?_color_read_Red 0011  
                      __initialization 1E34                           __end_of_atoi 1A04  
                         __end_of_main 15BA                           __end_of_dtoa 138C  
                      i2_isDataInTxBuf 2320                     putCharToTxBuf@byte 000D  
  __end_of_interrupts_clear_colorclick 22D6         ?i2_interrupts_clear_colorclick 0001  
          _interrupts_clear_colorclick 22BC                                 ??_atoi 0015  
                               ??_main 0045                                 ??_dtoa 0032  
                        __activetblptr 000003                                 ?_fputc 000D  
                               ?_fputs 0016                                 _CCPR1H 000FAA  
                               _CCPR2H 000FA6                                 _CCPR3H 000F25  
                               _CCPR4H 000F21                                 ?_putch 0001  
                               _RC0PPS 000E62                                 _RC4REG 000EE3  
                               _RE2PPS 000E74                                 _RD5PPS 000E6F  
                               _RC7PPS 000E69                                 i1l2700 0068  
                               _RE4PPS 000E76                                 _RD6PPS 000E70  
                               i1l2690 0026                                 i1l2692 0036  
                               i1l2694 005A                                 i2l2232 21B8  
                               i1l2696 005E                                 i2l2234 21C8  
                               i2l2330 2378                                 i1l2698 0062  
                               i2l2332 237C                                 i2l2340 234A  
                               i2l2334 236E                                 i2l2510 1EFE  
                               i2l2502 1ED0                                 i2l2336 2372  
                               i2l2440 2248                                 i2l2512 1F08  
                               i2l2504 1EDA                                 i2l2338 2346  
                               i2l2514 1F12                                 i2l2506 1EEA  
                               i2l2508 1EF4                                 i2l2710 1BAE  
                               i2l2702 1B80                                 i2l1832 2320  
                               i2l2720 1BE0                                 i2l2712 1BC2  
                               i2l2704 1B90                                 i2l2570 217C  
                               i2l2714 1BCA                                 i2l2706 1B94  
                               i2l2580 20F6                                 i2l2572 218C  
                               i2l2628 22D6                                 i2l2716 1BD8  
                               i2l2708 1B9A                                 i2l2582 20FA  
                               i2l2566 2168                                 i2l2718 1BDC  
                               i2l2568 2178                                 i2l2578 20E6  
                               _RG6PPS 000E88                          vfpfcnvrt@done 0079  
                            ??_HighISR 0006               __end_of_color_click_init 205E  
                               _RX4PPS 000E15                                 _TX4REG 000EE4  
                        main@readingsB 0300                          main@readingsC 0400  
                        main@readingsG 0200                          main@readingsR 0100  
                               _LowISR 0018                          ??_Timer0_init 000D  
                         _CCPTMRS0bits 000FAD                           vfprintf@cfmt 0043  
                     _getCharFromRxBuf 20BA                       _getCharFromTxBuf 20E6  
                            ??___aodiv 001D                              ??___aomod 001D  
                               ___wmul 21E0                                 clear_0 1E52  
                               clear_1 1E5E                                 clear_2 1E72  
                               isa$std 000001                                 pad@buf 001F  
                               dtoa@fp 0028                                 fputc@c 000D  
                    ?_TxBufferedString 000E                                 fputs@c 001A  
                               fputs@i 001B                           __pdataCOMRAM 0051  
                               fputs@s 0016                              ??_isdigit 000F  
                           _WhiteLight 2382                           __mediumconst 0000  
                            ??_isspace 000F                                 tblptrh 000FF7  
                               tblptrl 000FF6                                 tblptru 000FF8  
                   ??_TxBufferedString 0010                                 putch@c 0001  
                     __end_of_vfprintf 1CA2                              ??_sprintf 0045  
           i2color_writetoaddr@address 0004                  __end_of_isDataInRxBuf 2320  
                __end_of_isDataInTxBuf 2308                          ??_Update_RGBC 001A  
                           __accesstop 0060                __end_of__initialization 1E78  
             __end_of_color_read_Clear 1DE4               __end_of_color_read_Green 1D94  
               ?_I2C_2_Master_RepStart 0001                __end_ofi2_isDataInTxBuf 2338  
                        ___rparam_used 000001                              ?_LED_init 0001  
                     ?_color_read_Blue 0011                        _Interrupts_init 2284  
                       __pcstackCOMRAM 0001                          __end_of_fputc 1ACE  
                        __end_of_fputs 1FA8                          __end_of_putch 2396  
                  __end_of_Timer0_init 2226           ??_init_colorclick_interrupts 0011  
                              ??_fputc 0011                                ??_fputs 001A  
                              ??_putch 000D                             __pbssBANK0 00F7  
                           __pbssBANK1 01C8                             __pbssBANK5 0500  
                           ??_LED_init 000D                                ?_LowISR 0001  
                    _color_writetoaddr 2226                           _T2CLKCONbits 000FBF  
                  __end_of_Update_RGBC 1C4E                     ?_color_writetoaddr 000F  
                              ?___wmul 000D                    ??_color_writetoaddr 0010  
                          ?_WhiteLight 0001                                _SP4BRGH 000EE6  
                              _SP4BRGL 000EE5                                i2u71_40 2334  
                              i2u71_41 232E                                i2u72_40 2336  
                              _SSP2ADD 000ED6                                _SSP2BUF 000ED5  
                           _color_flag 004C                __end_of_Interrupts_init 22A2  
               color_writetoaddr@value 000F                       ??_color_read_Red 0013  
                              _HighISR 0008              __end_of_color_writetoaddr 2246  
                     ?i2_isDataInTxBuf 0001                     _I2C_2_Master_Start 2364  
                           _initUSART4 2266                    i2_I2C_2_Master_Idle 21B8  
                   _I2C_2_Master_Write 2338                                __Hparam 0000  
                  i2_I2C_2_Master_Stop 236E                                __Lparam 0000  
                    color_read_Red@tmp 0016                            _Timer0_init 2206  
                              ___aodiv 15BA                                ___aomod 1742  
                  ?_I2C_2_Master_Start 0001                    ?_I2C_2_Master_Write 0001  
                            ?_vfprintf 007D                           __psmallconst 0E00  
                              __pcinit 1E34                                __ramtop 0E00  
                              __ptext0 138C                                __ptext1 1CA2  
                              __ptext2 1C4E                                __ptext3 0E18  
                              __ptext4 10D2                                __ptext5 1ACE  
                              __ptext6 1F64                                __ptext7 1A04  
                              __ptext8 2394                                __ptext9 1FEA  
                 ?i2_I2C_2_Master_Idle 0001   __end_ofi2_init_colorclick_interrupts 1F1E  
         i2_init_colorclick_interrupts 1ED0                              _T2CONbits 000FBD  
                              _isdigit 208E                   ?i2_I2C_2_Master_Stop 0001  
                              _isspace 1F1E                              _T2HLTbits 000FBE  
                        _RxBufWriteCnt 0050                                atoi@neg 0018  
             __end_of_getCharFromRxBuf 20E6               __end_of_getCharFromTxBuf 2112  
                              _tmr_ovf 00F9                                _sprintf 1CA2  
                 ??_I2C_2_Master_Start 000E                   ??_I2C_2_Master_Write 000E  
                       __pintcode_body 1B78                   end_of_initialization 1E78  
                    __end_of_sendTxBuf 22BC            __end_ofi2_color_writetoaddr 2266  
                              fputc@fp 000F                                int_func 1B78  
                              fputs@fp 0018                            _Update_RGBC 1BF0  
                    ?_color_click_init 0001                     ??_color_click_init 0011  
                    __end_of_vfpfcnvrt 10D2                                postdec2 000FDD  
                              postinc0 000FEE                                postinc1 000FE6  
                              postinc2 000FDE                       vfpfcnvrt@convarg 0071  
                           ??_vfprintf 0043                  ??i2_I2C_2_Master_Idle 0001  
                ??i2_I2C_2_Master_Stop 0002                              _TRISAbits 000F81  
                            _TRISBbits 000F82                              _TRISCbits 000F83  
                            _TRISDbits 000F84     __end_of_init_colorclick_interrupts 1ED0  
        ?i2_init_colorclick_interrupts 0001             _init_colorclick_interrupts 1E82  
                            _TRISEbits 000F85                              _TRISFbits 000F86  
                            _TRISGbits 000F87               color_writetoaddr@address 0010  
              ??_I2C_2_Master_RepStart 000E                       ?_Interrupts_init 0001  
                          _CCP1CONbits 000FAB                      ?_color_read_Clear 0011  
                         _EUSART4RXbuf 01C8                           _EUSART4TXbuf 0500  
                          _CCP2CONbits 000FA7                      ?_color_read_Green 0011  
                          _CCP3CONbits 000F26                            ?_initUSART4 0001  
                          _CCP4CONbits 000F22                     ??_color_read_Clear 0013  
                   ??_color_read_Green 0013                             main@string 009C  
                       __end_of_LowISR 007C                            vfpfcnvrt@ap 003E  
                          vfpfcnvrt@cp 007B                            vfpfcnvrt@fp 003A  
                       __end_of___wmul 2206                          __pidataCOMRAM 2392  
                    _int_threshold_low 0049                    color_read_Clear@tmp 0016  
                  start_initialization 1E34                            __end_of_abs 202A  
                          __end_of_pad 1B78                          _TxBufWriteCnt 004E  
                  color_read_Green@tmp 0016                               ??_LowISR 0009  
                          vfprintf@fmt 007F                               ??___wmul 0011  
                       _putCharToRxBuf 2166                         _putCharToTxBuf 213C  
        i2I2C_2_Master_Write@data_byte 0002                     Update_RGBC@tempval 0018  
         __end_ofi2_I2C_2_Master_Start 2382           __end_ofi2_I2C_2_Master_Write 2350  
                          __pbssCOMRAM 0047                           ??_WhiteLight 000D  
                        __pcstackBANK0 0060                          __pcstackBANK1 0100  
                        __pcstackBANK2 0200                          __pcstackBANK3 0300  
                        __pcstackBANK4 0400                       ___aodiv@dividend 000D  
                             ?_HighISR 0001                              _dtoa$2372 0060  
                         ?_Timer0_init 0001                 __end_of_putCharToRxBuf 2190  
               __end_of_putCharToTxBuf 2166                              __pintcode 0008  
                   __end_of_WhiteLight 238A                               ?___aodiv 000D  
                             ?___aomod 000D                       ___aodiv@quotient 001F  
               TxBufferedString@string 000E                            __pintcodelo 0018  
         ?_interrupts_clear_colorclick 0001                   I2C_2_Master_Read@ack 000F  
                 I2C_2_Master_Read@tmp 0010                            __smallconst 0E00  
                             ?_isdigit 000D                      _I2C_2_Master_Idle 2190  
                    _I2C_2_Master_Init 2112                      _I2C_2_Master_Read 1FA8  
                    _I2C_2_Master_Stop 235A                               ?_isspace 000D  
                         _RxBufReadCnt 004F                     ?_I2C_2_Master_Idle 0001  
                   ?_I2C_2_Master_Init 0001                     ?_I2C_2_Master_Read 0001  
                   ?_I2C_2_Master_Stop 0001                      ?_getCharFromRxBuf 0001  
                             ?_sprintf 0083                      ?_getCharFromTxBuf 0001  
                   ??_getCharFromRxBuf 000D                     ??_getCharFromTxBuf 0001  
                  ??_I2C_2_Master_Idle 000D                    ??_I2C_2_Master_Init 000D  
                         ?_Update_RGBC 0018                    ??_I2C_2_Master_Read 000E  
                       ___wmul@product 0011                               _LATAbits 000F79  
                        _isDataInRxBuf 2308                    ??_I2C_2_Master_Stop 000E  
                             _LATCbits 000F7B                          _isDataInTxBuf 22F0  
                             _LATEbits 000F7D                               _LATFbits 000F7E  
                     _TxBufferedString 205E                               _LATGbits 000F7F  
                             _LATHbits 000F80                              _sendTxBuf 22A2  
                             _IPR0bits 000E1F                               _PIE0bits 000E29  
                             _LED_init 238A                               _PIE4bits 000E2D  
                             i1u170_20 0048                               i1u170_21 0040  
                             i1u171_28 004A                               i1u169_20 0036  
                             i1u169_21 0032                               i2u123_40 21C8  
                             i2u123_41 21C4                               i2u124_40 21DE  
                             i2u124_41 21DA                               i2u160_40 20F6  
                             i2u160_41 20F2                               i2u235_47 1EE0  
                             i2u172_40 1B90                               i2u172_41 1B8C  
                             i2u157_40 2178                               i2u173_40 1BAE  
                             i2u157_41 2174                               i2u173_41 1BAA  
                             i2u174_40 1BC2                               i2u174_41 1BBE  
                             i2u175_40 1BD8                               i2u175_41 1BD4  
                             _PIR0bits 000E33                               HighISR@a 0008  
                             _PIR4bits 000E37                        ?_putCharToRxBuf 0001  
                      ?_putCharToTxBuf 0001                               _SSP2CON2 000EDA  
                             _SSP2STAT 000ED8                              _vfpfcnvrt 0E18  
            __end_of_I2C_2_Master_Idle 21B8              __end_of_I2C_2_Master_Init 213C  
            __end_of_I2C_2_Master_Read 1FEA                      ___wmul@multiplier 000D  
            __end_of_I2C_2_Master_Stop 2364            I2C_2_Master_Write@data_byte 000E  
        ??_interrupts_clear_colorclick 0012                      ??_color_read_Blue 0013  
                         _TxBufReadCnt 004D            ?_init_colorclick_interrupts 0001  
                         _isspace$2421 0011               i2color_writetoaddr@value 0003  
                       ?_isDataInRxBuf 0001                         ?_isDataInTxBuf 0001  
        __end_of_I2C_2_Master_RepStart 235A                     color_read_Blue@tmp 0016  
                           ?_sendTxBuf 0001                           ??_initUSART4 000D  
                 i2_I2C_2_Master_Start 2378                   i2_I2C_2_Master_Write 2344  
                             __Hrparam 0000                             vfprintf@ap 0081  
                             __Lrparam 0000                             vfprintf@fp 007D  
          __end_ofi2_I2C_2_Master_Idle 21E0            __end_ofi2_I2C_2_Master_Stop 2378  
                           ?_vfpfcnvrt 003A                        ___aodiv@divisor 0015  
                      ___aodiv@counter 001D                             _ANSELBbits 000E9A  
                           _ANSELDbits 000EA7                             sprintf@fmt 0085  
                           _T0CON0bits 000FD5                             _T0CON1bits 000FD6  
                   __end_of_initUSART4 2284                               __ptext10 1742  
                             __ptext11 15BA                               __ptext20 20BA  
                             __ptext12 18A6                               __ptext21 202A  
                             __ptext13 1F1E                               __ptext30 1FA8  
                             __ptext22 2112                               __ptext14 208E  
                             __ptext31 205E                               __ptext23 2382  
                             __ptext15 21E0                               __ptext40 235A  
                             __ptext32 213C                               __ptext24 1BF0  
                             __ptext16 22A2                               __ptext41 2364  
                             __ptext33 2206                               __ptext25 1CF4  
                             __ptext17 22F0                               __ptext50 236E  
                             __ptext42 2190                               __ptext34 238A  
                             __ptext26 1D44                               __ptext18 2308  
                             __ptext51 2378                               __ptext35 2284  
                             __ptext27 1D94                               __ptext19 2266  
                             __ptext52 21B8                               __ptext36 22BC  
                             __ptext28 1DE4                               __ptext53 2166  
                             __ptext45 2320                               __ptext37 1E82  
                             __ptext29 2350                               __ptext54 20E6  
                             __ptext46 22D6                               __ptext38 2226  
                             __ptext47 1ED0                               __ptext39 2338  
                             __ptext48 2246                               __ptext49 2344  
                         _SSP2CON1bits 000ED9                           _SSP2CON2bits 000EDA  
      ??i2_interrupts_clear_colorclick 0006                  ?i2_I2C_2_Master_Start 0001  
                ?i2_I2C_2_Master_Write 0001                               isa$xinst 000000  
                           _RC4STAbits 000EE7                               int$flags 0053  
                             _vfprintf 1C4E                               main@cont 00EC  
                     ___aomod@dividend 000D                             _INTCONbits 000FF2  
                    ??i2_isDataInTxBuf 0001                               isdigit@c 000D  
                      ??_isDataInRxBuf 000D                        ??_isDataInTxBuf 000D  
                             intlevel1 0000                               intlevel2 0000  
                            sprintf@ap 008F                               isspace@c 000D  
                          ??_sendTxBuf 000D                        ___aomod@divisor 0015  
                          ??_vfpfcnvrt 0040                        ___aomod@counter 001D  
                     _color_click_init 202A               __end_of_TxBufferedString 208E  
                             sprintf@f 0091                               sprintf@s 0083  
                           _SSP2DATPPS 000E1D                             _SSP2CLKPPS 000E1C  
                           _TX4STAbits 000EE8                           ___aodiv@sign 001E  
               ??i2_I2C_2_Master_Start 0002                 ??i2_I2C_2_Master_Write 0002  
                     ??_putCharToRxBuf 0001                       ??_putCharToTxBuf 000D  
                         ___aomod@sign 001E  __end_ofi2_interrupts_clear_colorclick 22F0  
        i2_interrupts_clear_colorclick 22D6  
