

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Mar 11 17:06:43 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    64                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    73                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    74                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    75                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    76                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    77   000000                     
    78                           ; Generated 06/04/2022 GMT
    79                           ; 
    80                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    81                           ; All rights reserved.
    82                           ; 
    83                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    84                           ; 
    85                           ; Redistribution and use in source and binary forms, with or without modification, are
    86                           ; permitted provided that the following conditions are met:
    87                           ; 
    88                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    89                           ;        conditions and the following disclaimer.
    90                           ; 
    91                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    92                           ;        of conditions and the following disclaimer in the documentation and/or other
    93                           ;        materials provided with the distribution. Publication is not required when
    94                           ;        this file is used in an embedded application.
    95                           ; 
    96                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    97                           ;        software without specific prior written permission.
    98                           ; 
    99                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   100                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   101                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   102                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   103                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   104                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   105                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   106                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   107                           ; 
   108                           ; 
   109                           ; Code-generator required, PIC18F67K40 Definitions
   110                           ; 
   111                           ; SFR Addresses
   112   000000                     
   113                           	psect	idataBANK0
   114   002530                     __pidataBANK0:
   115                           	callstack 0
   116                           
   117                           ;initializer for _int_threshold_high
   118   002530  09C4               	dw	2500
   119   000000                     _T0CON0bits	set	4053
   120   000000                     _T0CON1bits	set	4054
   121   000000                     _TX4REG	set	3812
   122   000000                     _RC4STAbits	set	3815
   123   000000                     _SP4BRGH	set	3814
   124   000000                     _TRISBbits	set	3970
   125   000000                     _TRISCbits	set	3971
   126   000000                     _TRISEbits	set	3973
   127   000000                     _TRISFbits	set	3974
   128   000000                     _TRISGbits	set	3975
   129   000000                     _SSP2CON2bits	set	3802
   130   000000                     _INT1PPS	set	3569
   131   000000                     _SSP2CLKPPS	set	3612
   132   000000                     _SSP2DATPPS	set	3613
   133   000000                     _ANSELDbits	set	3751
   134   000000                     _SSP2ADD	set	3798
   135   000000                     _SSP2CON1bits	set	3801
   136   000000                     _RC4REG	set	3811
   137   000000                     _SP4BRGL	set	3813
   138   000000                     _TX4STAbits	set	3816
   139   000000                     _BAUD4CONbits	set	3817
   140   000000                     _LATAbits	set	3961
   141   000000                     _LATGbits	set	3967
   142   000000                     _LATHbits	set	3968
   143   000000                     _TRISAbits	set	3969
   144   000000                     _SSP2CON2	set	3802
   145   000000                     _TRISDbits	set	3972
   146   000000                     _CCPR4H	set	3873
   147   000000                     _CCPR3H	set	3877
   148   000000                     _SSP2STAT	set	3800
   149   000000                     _SSP2BUF	set	3797
   150   000000                     _IPR0bits	set	3615
   151   000000                     _PIE0bits	set	3625
   152   000000                     _RC7PPS	set	3689
   153   000000                     _RD5PPS	set	3695
   154   000000                     _RE2PPS	set	3700
   155   000000                     _RD6PPS	set	3696
   156   000000                     _T2PR	set	4028
   157   000000                     _T2CONbits	set	4029
   158   000000                     _TRISHbits	set	3976
   159   000000                     _CCPR2H	set	4006
   160   000000                     _CCPR1H	set	4010
   161   000000                     _LATCbits	set	3963
   162   000000                     _LATEbits	set	3965
   163   000000                     _LATFbits	set	3966
   164   000000                     _RE4PPS	set	3702
   165   000000                     _RG6PPS	set	3720
   166   000000                     _ANSELBbits	set	3738
   167   000000                     _TMR0L	set	4051
   168   000000                     _TMR0H	set	4052
   169   000000                     _INTCONbits	set	4082
   170   000000                     _T2CLKCONbits	set	4031
   171   000000                     _T2HLTbits	set	4030
   172   000000                     _CCP1CONbits	set	4011
   173   000000                     _CCPTMRS0bits	set	4013
   174   000000                     _CCP2CONbits	set	4007
   175   000000                     _CCP3CONbits	set	3878
   176   000000                     _CCP4CONbits	set	3874
   177   000000                     _RX4PPS	set	3605
   178   000000                     _PIE4bits	set	3629
   179   000000                     _PIR0bits	set	3635
   180   000000                     _PIR4bits	set	3639
   181   000000                     _RC0PPS	set	3682
   182                           
   183                           ; #config settings
   184                           
   185                           	psect	cinit
   186   002254                     __pcinit:
   187                           	callstack 0
   188   002254                     start_initialization:
   189                           	callstack 0
   190   002254                     __initialization:
   191                           	callstack 0
   192                           
   193                           ; Initialize objects allocated to BANK0 (2 bytes)
   194                           ; load TBLPTR registers with __pidataBANK0
   195   002254  0E30               	movlw	low __pidataBANK0
   196   002256  6EF6               	movwf	tblptrl,c
   197   002258  0E25               	movlw	high __pidataBANK0
   198   00225A  6EF7               	movwf	tblptrh,c
   199   00225C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   200   00225E  6EF8               	movwf	tblptru,c
   201   002260  0009               	tblrd		*+	;fetch initializer
   202   002262  CFF5 F0FA          	movff	tablat,__pdataBANK0
   203   002266  0009               	tblrd		*+	;fetch initializer
   204   002268  CFF5 F0FB          	movff	tablat,__pdataBANK0+1
   205                           
   206                           ; Clear objects allocated to BANK1 (60 bytes)
   207   00226C  EE01  F000         	lfsr	0,__pbssBANK1
   208   002270  0E3C               	movlw	60
   209   002272                     clear_0:
   210   002272  6AEE               	clrf	postinc0,c
   211   002274  06E8               	decf	wreg,f,c
   212   002276  E1FD               	bnz	clear_0
   213                           
   214                           ; Clear objects allocated to BANK0 (102 bytes)
   215   002278  EE00  F060         	lfsr	0,__pbssBANK0
   216   00227C  0E66               	movlw	102
   217   00227E                     clear_1:
   218   00227E  6AEE               	clrf	postinc0,c
   219   002280  06E8               	decf	wreg,f,c
   220   002282  E1FD               	bnz	clear_1
   221                           
   222                           ; Clear objects allocated to COMRAM (8 bytes)
   223   002284  EE00  F04F         	lfsr	0,__pbssCOMRAM
   224   002288  0E08               	movlw	8
   225   00228A                     clear_2:
   226   00228A  6AEE               	clrf	postinc0,c
   227   00228C  06E8               	decf	wreg,f,c
   228   00228E  E1FD               	bnz	clear_2
   229   002290                     end_of_initialization:
   230                           	callstack 0
   231   002290                     __end_of__initialization:
   232                           	callstack 0
   233   002290  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   234   002292  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   235   002294  0100               	movlb	0
   236   002296  EFC9  F008         	goto	_main	;jump to C main() function
   237                           
   238                           	psect	bssCOMRAM
   239   00004F                     __pbssCOMRAM:
   240                           	callstack 0
   241   00004F                     _int_threshold_low:
   242                           	callstack 0
   243   00004F                     	ds	2
   244   000051                     _TxBufReadCnt:
   245                           	callstack 0
   246   000051                     	ds	1
   247   000052                     _TxBufWriteCnt:
   248                           	callstack 0
   249   000052                     	ds	1
   250   000053                     _RxBufReadCnt:
   251                           	callstack 0
   252   000053                     	ds	1
   253   000054                     _RxBufWriteCnt:
   254                           	callstack 0
   255   000054                     	ds	1
   256   000055                     _color_flag:
   257                           	callstack 0
   258   000055                     	ds	1
   259   000056                     _moves_index:
   260                           	callstack 0
   261   000056                     	ds	1
   262                           
   263                           	psect	bssBANK0
   264   000060                     __pbssBANK0:
   265                           	callstack 0
   266   000060                     _EUSART4RXbuf:
   267                           	callstack 0
   268   000060                     	ds	20
   269   000074                     _tmr_ovf:
   270                           	callstack 0
   271   000074                     	ds	1
   272   000075                     _anti_moves_array:
   273                           	callstack 0
   274   000075                     	ds	40
   275   00009D                     _time_array:
   276                           	callstack 0
   277   00009D                     	ds	40
   278   0000C5                     _time_index:
   279                           	callstack 0
   280   0000C5                     	ds	1
   281                           
   282                           	psect	dataBANK0
   283   0000FA                     __pdataBANK0:
   284                           	callstack 0
   285   0000FA                     _int_threshold_high:
   286                           	callstack 0
   287   0000FA                     	ds	2
   288                           
   289                           	psect	bssBANK1
   290   000100                     __pbssBANK1:
   291                           	callstack 0
   292   000100                     _EUSART4TXbuf:
   293                           	callstack 0
   294   000100                     	ds	60
   295                           
   296                           	psect	cstackBANK0
   297   0000C6                     __pcstackBANK0:
   298                           	callstack 0
   299   0000C6                     ??___fltol:
   300                           
   301                           ; 1 bytes @ 0x0
   302   0000C6                     	ds	4
   303   0000CA                     detect_color@tempval:
   304                           	callstack 0
   305                           
   306                           ; 2 bytes @ 0x4
   307   0000CA                     	ds	2
   308   0000CC                     ??_detect_color:
   309                           
   310                           ; 1 bytes @ 0x6
   311   0000CC                     	ds	12
   312   0000D8                     detect_color@color:
   313                           	callstack 0
   314                           
   315                           ; 1 bytes @ 0x12
   316   0000D8                     	ds	1
   317   0000D9                     detect_color@dist_R:
   318                           	callstack 0
   319                           
   320                           ; 1 bytes @ 0x13
   321   0000D9                     	ds	1
   322   0000DA                     detect_color@dist_G:
   323                           	callstack 0
   324                           
   325                           ; 1 bytes @ 0x14
   326   0000DA                     	ds	1
   327   0000DB                     detect_color@dist_B:
   328                           	callstack 0
   329                           
   330                           ; 1 bytes @ 0x15
   331   0000DB                     	ds	1
   332   0000DC                     ??_main:
   333                           
   334                           ; 1 bytes @ 0x16
   335   0000DC                     	ds	2
   336   0000DE                     main@b:
   337                           	callstack 0
   338                           
   339                           ; 1 bytes @ 0x18
   340   0000DE                     	ds	1
   341   0000DF                     main@color_detected:
   342                           	callstack 0
   343                           
   344                           ; 1 bytes @ 0x19
   345   0000DF                     	ds	1
   346   0000E0                     main@initial_color:
   347                           	callstack 0
   348                           
   349                           ; 8 bytes @ 0x1A
   350   0000E0                     	ds	8
   351   0000E8                     main@motorL:
   352                           	callstack 0
   353                           
   354                           ; 9 bytes @ 0x22
   355   0000E8                     	ds	9
   356   0000F1                     main@motorR:
   357                           	callstack 0
   358                           
   359                           ; 9 bytes @ 0x2B
   360   0000F1                     	ds	9
   361                           
   362                           	psect	cstackCOMRAM
   363   000001                     __pcstackCOMRAM:
   364                           	callstack 0
   365   000001                     ??i2_I2C_2_Master_Idle:
   366   000001                     
   367                           ; 1 bytes @ 0x0
   368   000001                     	ds	1
   369   000002                     i2I2C_2_Master_Write@data_byte:
   370                           	callstack 0
   371                           
   372                           ; 1 bytes @ 0x1
   373   000002                     	ds	1
   374   000003                     i2color_writetoaddr@value:
   375                           	callstack 0
   376                           
   377                           ; 1 bytes @ 0x2
   378   000003                     	ds	1
   379   000004                     i2color_writetoaddr@address:
   380                           	callstack 0
   381                           
   382                           ; 1 bytes @ 0x3
   383   000004                     	ds	1
   384   000005                     ??i2_init_colorclick_interrupts:
   385                           
   386                           ; 1 bytes @ 0x4
   387   000005                     	ds	1
   388   000006                     ??_LowISR:
   389   000006                     
   390                           ; 1 bytes @ 0x5
   391   000006                     	ds	3
   392   000009                     ??_I2C_2_Master_Idle:
   393   000009                     ?___wmul:
   394                           	callstack 0
   395   000009                     ?___xxtofl:
   396                           	callstack 0
   397   000009                     initDCmotorsPWM@PWMperiod:
   398                           	callstack 0
   399   000009                     AppendMoves@moves_index:
   400                           	callstack 0
   401   000009                     AppendTime@time_index:
   402                           	callstack 0
   403   000009                     ___wmul@multiplier:
   404                           	callstack 0
   405   000009                     ___xxtofl@val:
   406                           	callstack 0
   407                           
   408                           ; 4 bytes @ 0x8
   409   000009                     	ds	1
   410   00000A                     ??_I2C_2_Master_Read:
   411   00000A                     I2C_2_Master_Write@data_byte:
   412                           	callstack 0
   413                           
   414                           ; 1 bytes @ 0x9
   415   00000A                     	ds	1
   416   00000B                     color_writetoaddr@value:
   417                           	callstack 0
   418   00000B                     I2C_2_Master_Read@ack:
   419                           	callstack 0
   420   00000B                     AppendMoves@anti_moves_array:
   421                           	callstack 0
   422   00000B                     AppendTime@time_array:
   423                           	callstack 0
   424   00000B                     ___wmul@multiplicand:
   425                           	callstack 0
   426                           
   427                           ; 2 bytes @ 0xA
   428   00000B                     	ds	1
   429   00000C                     color_writetoaddr@address:
   430                           	callstack 0
   431   00000C                     I2C_2_Master_Read@tmp:
   432                           	callstack 0
   433                           
   434                           ; 1 bytes @ 0xB
   435   00000C                     	ds	1
   436   00000D                     ??_AppendTime:
   437   00000D                     ??_AppendMoves:
   438   00000D                     ??_color_click_init:
   439   00000D                     ??_init_colorclick_interrupts:
   440   00000D                     ??___xxtofl:
   441   00000D                     ?_color_read_Red:
   442                           	callstack 0
   443   00000D                     ?_color_read_Green:
   444                           	callstack 0
   445   00000D                     ?_color_read_Blue:
   446                           	callstack 0
   447   00000D                     ?_color_read_Clear:
   448                           	callstack 0
   449   00000D                     ___wmul@product:
   450                           	callstack 0
   451                           
   452                           ; 2 bytes @ 0xC
   453   00000D                     	ds	1
   454   00000E                     AppendMoves@temp:
   455                           	callstack 0
   456   00000E                     AppendTime@temp:
   457                           	callstack 0
   458                           
   459                           ; 1 bytes @ 0xD
   460   00000E                     	ds	1
   461   00000F                     ??_color_read_Red:
   462   00000F                     ??_color_read_Green:
   463   00000F                     ??_color_read_Blue:
   464   00000F                     ??_color_read_Clear:
   465   00000F                     ?___lwdiv:
   466                           	callstack 0
   467   00000F                     ___lwdiv@dividend:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0xE
   471   00000F                     	ds	2
   472   000011                     ___xxtofl@sign:
   473                           	callstack 0
   474   000011                     ___lwdiv@divisor:
   475                           	callstack 0
   476                           
   477                           ; 2 bytes @ 0x10
   478   000011                     	ds	1
   479   000012                     ___xxtofl@exp:
   480                           	callstack 0
   481   000012                     color_read_Red@tmp:
   482                           	callstack 0
   483   000012                     color_read_Green@tmp:
   484                           	callstack 0
   485   000012                     color_read_Blue@tmp:
   486                           	callstack 0
   487   000012                     color_read_Clear@tmp:
   488                           	callstack 0
   489                           
   490                           ; 2 bytes @ 0x11
   491   000012                     	ds	1
   492   000013                     ___lwdiv@quotient:
   493                           	callstack 0
   494   000013                     ___xxtofl@arg:
   495                           	callstack 0
   496                           
   497                           ; 4 bytes @ 0x12
   498   000013                     	ds	1
   499   000014                     Update_RGBC@tempval:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0x13
   503   000014                     	ds	1
   504   000015                     ___lwdiv@counter:
   505                           	callstack 0
   506                           
   507                           ; 1 bytes @ 0x14
   508   000015                     	ds	1
   509   000016                     setMotorPWM@m:
   510                           	callstack 0
   511                           
   512                           ; 2 bytes @ 0x15
   513   000016                     	ds	1
   514   000017                     ?___fldiv:
   515                           	callstack 0
   516   000017                     ___fldiv@b:
   517                           	callstack 0
   518                           
   519                           ; 4 bytes @ 0x16
   520   000017                     	ds	1
   521   000018                     ??_setMotorPWM:
   522                           
   523                           ; 1 bytes @ 0x17
   524   000018                     	ds	2
   525   00001A                     setMotorPWM@posDuty:
   526                           	callstack 0
   527                           
   528                           ; 1 bytes @ 0x19
   529   00001A                     	ds	1
   530   00001B                     setMotorPWM@negDuty:
   531                           	callstack 0
   532   00001B                     ___fldiv@a:
   533                           	callstack 0
   534                           
   535                           ; 4 bytes @ 0x1A
   536   00001B                     	ds	1
   537   00001C                     stop@mL:
   538                           	callstack 0
   539   00001C                     turnLeft@mL:
   540                           	callstack 0
   541   00001C                     turnRight@mL:
   542                           	callstack 0
   543   00001C                     fullSpeedAhead@mL:
   544                           	callstack 0
   545   00001C                     fullSpeedBackwards@mL:
   546                           	callstack 0
   547                           
   548                           ; 2 bytes @ 0x1B
   549   00001C                     	ds	2
   550   00001E                     stop@mR:
   551                           	callstack 0
   552   00001E                     turnLeft@mR:
   553                           	callstack 0
   554   00001E                     turnRight@mR:
   555                           	callstack 0
   556   00001E                     fullSpeedAhead@mR:
   557                           	callstack 0
   558   00001E                     fullSpeedBackwards@mR:
   559                           	callstack 0
   560                           
   561                           ; 2 bytes @ 0x1D
   562   00001E                     	ds	1
   563   00001F                     ??___fldiv:
   564                           
   565                           ; 1 bytes @ 0x1E
   566   00001F                     	ds	1
   567   000020                     ??_stop:
   568   000020                     ??_turnLeft:
   569   000020                     ??_turnRight:
   570   000020                     ??_fullSpeedAhead:
   571   000020                     ??_fullSpeedBackwards:
   572                           
   573                           ; 1 bytes @ 0x1F
   574   000020                     	ds	2
   575   000022                     turnLeft90@mL:
   576                           	callstack 0
   577   000022                     turnRight90@mL:
   578                           	callstack 0
   579   000022                     turnRight135@mL:
   580                           	callstack 0
   581   000022                     turnLeft135@mL:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0x21
   585   000022                     	ds	1
   586   000023                     ___fldiv@rem:
   587                           	callstack 0
   588                           
   589                           ; 4 bytes @ 0x22
   590   000023                     	ds	1
   591   000024                     turnLeft90@mR:
   592                           	callstack 0
   593   000024                     turnRight90@mR:
   594                           	callstack 0
   595   000024                     turnRight135@mR:
   596                           	callstack 0
   597   000024                     turnLeft135@mR:
   598                           	callstack 0
   599                           
   600                           ; 2 bytes @ 0x23
   601   000024                     	ds	2
   602   000026                     turnLeft90@a:
   603                           	callstack 0
   604   000026                     turnRight90@a:
   605                           	callstack 0
   606   000026                     turnRight135@a:
   607                           	callstack 0
   608   000026                     turnLeft135@a:
   609                           	callstack 0
   610                           
   611                           ; 1 bytes @ 0x25
   612   000026                     	ds	1
   613   000027                     ___fldiv@sign:
   614                           	callstack 0
   615   000027                     RedInstructions@mL:
   616                           	callstack 0
   617   000027                     GreenInstructions@mL:
   618                           	callstack 0
   619   000027                     BlueInstructions@mL:
   620                           	callstack 0
   621   000027                     YellowInstructions@mL:
   622                           	callstack 0
   623   000027                     PinkInstructions@mL:
   624                           	callstack 0
   625   000027                     OrangeInstructions@mL:
   626                           	callstack 0
   627   000027                     LightBlueInstructions@mL:
   628                           	callstack 0
   629                           
   630                           ; 2 bytes @ 0x26
   631   000027                     	ds	1
   632   000028                     ___fldiv@new_exp:
   633                           	callstack 0
   634                           
   635                           ; 2 bytes @ 0x27
   636   000028                     	ds	1
   637   000029                     RedInstructions@mR:
   638                           	callstack 0
   639   000029                     GreenInstructions@mR:
   640                           	callstack 0
   641   000029                     BlueInstructions@mR:
   642                           	callstack 0
   643   000029                     YellowInstructions@mR:
   644                           	callstack 0
   645   000029                     PinkInstructions@mR:
   646                           	callstack 0
   647   000029                     OrangeInstructions@mR:
   648                           	callstack 0
   649   000029                     LightBlueInstructions@mR:
   650                           	callstack 0
   651                           
   652                           ; 2 bytes @ 0x28
   653   000029                     	ds	1
   654   00002A                     ___fldiv@grs:
   655                           	callstack 0
   656                           
   657                           ; 4 bytes @ 0x29
   658   00002A                     	ds	1
   659   00002B                     ??_RedInstructions:
   660   00002B                     ??_GreenInstructions:
   661   00002B                     ??_BlueInstructions:
   662   00002B                     ??_YellowInstructions:
   663   00002B                     ??_PinkInstructions:
   664   00002B                     ??_OrangeInstructions:
   665   00002B                     ??_LightBlueInstructions:
   666                           
   667                           ; 1 bytes @ 0x2A
   668   00002B                     	ds	2
   669   00002D                     RedInstructions@a:
   670                           	callstack 0
   671   00002D                     GreenInstructions@a:
   672                           	callstack 0
   673   00002D                     BlueInstructions@a:
   674                           	callstack 0
   675   00002D                     YellowInstructions@a:
   676                           	callstack 0
   677   00002D                     PinkInstructions@a:
   678                           	callstack 0
   679   00002D                     OrangeInstructions@a:
   680                           	callstack 0
   681   00002D                     LightBlueInstructions@a:
   682                           	callstack 0
   683                           
   684                           ; 1 bytes @ 0x2C
   685   00002D                     	ds	1
   686   00002E                     ___fldiv@bexp:
   687                           	callstack 0
   688   00002E                     MoveBuggy@color_detected:
   689                           	callstack 0
   690                           
   691                           ; 2 bytes @ 0x2D
   692   00002E                     	ds	1
   693   00002F                     ___fldiv@aexp:
   694                           	callstack 0
   695                           
   696                           ; 1 bytes @ 0x2E
   697   00002F                     	ds	1
   698   000030                     ?___flmul:
   699                           	callstack 0
   700   000030                     MoveBuggy@mL:
   701                           	callstack 0
   702   000030                     ___flmul@b:
   703                           	callstack 0
   704                           
   705                           ; 4 bytes @ 0x2F
   706   000030                     	ds	2
   707   000032                     MoveBuggy@mR:
   708                           	callstack 0
   709                           
   710                           ; 2 bytes @ 0x31
   711   000032                     	ds	2
   712   000034                     ___flmul@a:
   713                           	callstack 0
   714                           
   715                           ; 4 bytes @ 0x33
   716   000034                     	ds	4
   717   000038                     ??___flmul:
   718                           
   719                           ; 1 bytes @ 0x37
   720   000038                     	ds	4
   721   00003C                     ___flmul@sign:
   722                           	callstack 0
   723                           
   724                           ; 1 bytes @ 0x3B
   725   00003C                     	ds	1
   726   00003D                     ___flmul@grs:
   727                           	callstack 0
   728                           
   729                           ; 4 bytes @ 0x3C
   730   00003D                     	ds	4
   731   000041                     ___flmul@aexp:
   732                           	callstack 0
   733                           
   734                           ; 1 bytes @ 0x40
   735   000041                     	ds	1
   736   000042                     ___flmul@bexp:
   737                           	callstack 0
   738                           
   739                           ; 1 bytes @ 0x41
   740   000042                     	ds	1
   741   000043                     ___flmul@prod:
   742                           	callstack 0
   743                           
   744                           ; 4 bytes @ 0x42
   745   000043                     	ds	4
   746   000047                     ___flmul@temp:
   747                           	callstack 0
   748                           
   749                           ; 2 bytes @ 0x46
   750   000047                     	ds	2
   751   000049                     ?___fltol:
   752                           	callstack 0
   753   000049                     ___fltol@f1:
   754                           	callstack 0
   755                           
   756                           ; 4 bytes @ 0x48
   757   000049                     	ds	4
   758   00004D                     ___fltol@sign1:
   759                           	callstack 0
   760                           
   761                           ; 1 bytes @ 0x4C
   762   00004D                     	ds	1
   763   00004E                     ___fltol@exp1:
   764                           	callstack 0
   765                           
   766                           ; 1 bytes @ 0x4D
   767   00004E                     	ds	1
   768                           
   769 ;;
   770 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   771 ;;
   772 ;; *************** function _main *****************
   773 ;; Defined at:
   774 ;;		line 22 in file "main_motor.c"
   775 ;; Parameters:    Size  Location     Type
   776 ;;		None
   777 ;; Auto vars:     Size  Location     Type
   778 ;;  b               1   24[BANK0 ] unsigned char 
   779 ;;  motorR          9   43[BANK0 ] struct DC_motor
   780 ;;  motorL          9   34[BANK0 ] struct DC_motor
   781 ;;  initial_colo    8   26[BANK0 ] struct RGB_val
   782 ;;  color_detect    1   25[BANK0 ] unsigned char 
   783 ;; Return value:  Size  Location     Type
   784 ;;                  1    wreg      void 
   785 ;; Registers used:
   786 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   787 ;; Tracked objects:
   788 ;;		On entry : 0/0
   789 ;;		On exit  : 0/0
   790 ;;		Unchanged: 0/0
   791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   793 ;;      Locals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   794 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   795 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   796 ;;Total ram usage:       30 bytes
   797 ;; Hardware stack levels required when called: 13
   798 ;; This function calls:
   799 ;;		_AppendTime
   800 ;;		_Interrupts_init
   801 ;;		_LED_init
   802 ;;		_MoveBuggy
   803 ;;		_Timer0_init
   804 ;;		_Update_RGBC
   805 ;;		_WhiteLight
   806 ;;		_color_click_init
   807 ;;		_detect_color
   808 ;;		_fullSpeedAhead
   809 ;;		_initDCmotorsPWM
   810 ;;		_stop
   811 ;; This function is called by:
   812 ;;		Startup code after reset
   813 ;; This function uses a non-reentrant model
   814 ;;
   815                           
   816                           	psect	text0
   817   001192                     __ptext0:
   818                           	callstack 0
   819   001192                     _main:
   820                           	callstack 18
   821   001192                     
   822                           ;main_motor.c: 25:     RGB_val initial_color;;main_motor.c: 26:     initial_color.R = 0;
   823   001192  0E00               	movlw	0
   824   001194  0100               	movlb	0	; () banked
   825   001196  6FE1               	movwf	(main@initial_color+1)& (0+255),b
   826   001198  0E00               	movlw	0
   827   00119A  6FE0               	movwf	main@initial_color& (0+255),b
   828                           
   829                           ;main_motor.c: 27:     initial_color.G = 0;
   830   00119C  0E00               	movlw	0
   831   00119E  6FE3               	movwf	(main@initial_color+3)& (0+255),b
   832   0011A0  0E00               	movlw	0
   833   0011A2  6FE2               	movwf	(main@initial_color+2)& (0+255),b
   834                           
   835                           ;main_motor.c: 28:     initial_color.B = 0;
   836   0011A4  0E00               	movlw	0
   837   0011A6  6FE5               	movwf	(main@initial_color+5)& (0+255),b
   838   0011A8  0E00               	movlw	0
   839   0011AA  6FE4               	movwf	(main@initial_color+4)& (0+255),b
   840                           
   841                           ;main_motor.c: 29:     initial_color.C = 0;
   842   0011AC  0E00               	movlw	0
   843   0011AE  6FE7               	movwf	(main@initial_color+7)& (0+255),b
   844   0011B0  0E00               	movlw	0
   845   0011B2  6FE6               	movwf	(main@initial_color+6)& (0+255),b
   846   0011B4                     
   847                           ; BSR set to: 0
   848                           ;main_motor.c: 31:     LED_init();
   849   0011B4  EC69  F012         	call	_LED_init	;wreg free
   850   0011B8                     
   851                           ;main_motor.c: 32:     color_click_init();
   852   0011B8  EC6E  F011         	call	_color_click_init	;wreg free
   853   0011BC                     
   854                           ;main_motor.c: 33:     Interrupts_init();
   855   0011BC  ECD8  F011         	call	_Interrupts_init	;wreg free
   856                           
   857                           ;main_motor.c: 35:     Timer0_init();
   858   0011C0  EC0F  F012         	call	_Timer0_init	;wreg free
   859                           
   860                           ;main_motor.c: 38:     initDCmotorsPWM(99);
   861   0011C4  0E00               	movlw	0
   862   0011C6  6E0A               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   863   0011C8  0E63               	movlw	99
   864   0011CA  6E09               	movwf	initDCmotorsPWM@PWMperiod^0,c
   865   0011CC  EC43  F00D         	call	_initDCmotorsPWM	;wreg free
   866   0011D0                     
   867                           ;main_motor.c: 40:     struct DC_motor motorL, motorR;;main_motor.c: 42:     motorL.powe
      +                          r=0;
   868   0011D0  0E00               	movlw	0
   869   0011D2  0100               	movlb	0	; () banked
   870   0011D4  6FE8               	movwf	main@motorL& (0+255),b
   871   0011D6                     
   872                           ; BSR set to: 0
   873                           ;main_motor.c: 43:     motorL.direction=1;
   874   0011D6  0E01               	movlw	1
   875   0011D8  6FE9               	movwf	(main@motorL+1)& (0+255),b
   876   0011DA                     
   877                           ; BSR set to: 0
   878                           ;main_motor.c: 44:     motorL.brakemode=1;
   879   0011DA  0E01               	movlw	1
   880   0011DC  6FEA               	movwf	(main@motorL+2)& (0+255),b
   881   0011DE                     
   882                           ; BSR set to: 0
   883                           ;main_motor.c: 45:     motorL.posDutyHighByte=(unsigned char *)(&CCPR1H);
   884   0011DE  0EAA               	movlw	170
   885   0011E0  6FED               	movwf	(main@motorL+5)& (0+255),b
   886   0011E2  0E0F               	movlw	15
   887   0011E4  6FEE               	movwf	(main@motorL+6)& (0+255),b
   888   0011E6                     
   889                           ; BSR set to: 0
   890                           ;main_motor.c: 46:     motorL.negDutyHighByte=(unsigned char *)(&CCPR2H);
   891   0011E6  0EA6               	movlw	166
   892   0011E8  6FEF               	movwf	(main@motorL+7)& (0+255),b
   893   0011EA  0E0F               	movlw	15
   894   0011EC  6FF0               	movwf	(main@motorL+8)& (0+255),b
   895   0011EE                     
   896                           ; BSR set to: 0
   897                           ;main_motor.c: 47:     motorL.PWMperiod= T2PR;
   898   0011EE  CFBC F0EB          	movff	4028,main@motorL+3	;volatile
   899   0011F2  6BEC               	clrf	(main@motorL+4)& (0+255),b
   900   0011F4                     
   901                           ; BSR set to: 0
   902                           ;main_motor.c: 49:     motorR.power=0;
   903   0011F4  0E00               	movlw	0
   904   0011F6  6FF1               	movwf	main@motorR& (0+255),b
   905   0011F8                     
   906                           ; BSR set to: 0
   907                           ;main_motor.c: 50:     motorR.direction=1;
   908   0011F8  0E01               	movlw	1
   909   0011FA  6FF2               	movwf	(main@motorR+1)& (0+255),b
   910   0011FC                     
   911                           ; BSR set to: 0
   912                           ;main_motor.c: 51:     motorR.brakemode=1;
   913   0011FC  0E01               	movlw	1
   914   0011FE  6FF3               	movwf	(main@motorR+2)& (0+255),b
   915   001200                     
   916                           ; BSR set to: 0
   917                           ;main_motor.c: 52:     motorR.posDutyHighByte=(unsigned char *)(&CCPR3H);
   918   001200  0E25               	movlw	37
   919   001202  6FF6               	movwf	(main@motorR+5)& (0+255),b
   920   001204  0E0F               	movlw	15
   921   001206  6FF7               	movwf	(main@motorR+6)& (0+255),b
   922   001208                     
   923                           ; BSR set to: 0
   924                           ;main_motor.c: 53:     motorR.negDutyHighByte=(unsigned char *)(&CCPR4H);
   925   001208  0E21               	movlw	33
   926   00120A  6FF8               	movwf	(main@motorR+7)& (0+255),b
   927   00120C  0E0F               	movlw	15
   928   00120E  6FF9               	movwf	(main@motorR+8)& (0+255),b
   929   001210                     
   930                           ; BSR set to: 0
   931                           ;main_motor.c: 54:     motorR.PWMperiod= T2PR;
   932   001210  CFBC F0F4          	movff	4028,main@motorR+3	;volatile
   933   001214  6BF5               	clrf	(main@motorR+4)& (0+255),b
   934   001216                     
   935                           ; BSR set to: 0
   936                           ;main_motor.c: 58:     WhiteLight();
   937   001216  EC94  F012         	call	_WhiteLight	;wreg free
   938   00121A                     l4087:
   939                           
   940                           ;main_motor.c: 60:         Update_RGBC(&initial_color);
   941   00121A  0EE0               	movlw	low main@initial_color
   942   00121C  6E14               	movwf	Update_RGBC@tempval^0,c
   943   00121E  0E00               	movlw	high main@initial_color
   944   001220  6E15               	movwf	(Update_RGBC@tempval+1)^0,c
   945   001222  EC57  F00F         	call	_Update_RGBC	;wreg free
   946   001226                     
   947                           ;main_motor.c: 61:         color_detected = detect_color(&initial_color);
   948   001226  0EE0               	movlw	low main@initial_color
   949   001228  0100               	movlb	0	; () banked
   950   00122A  6FCA               	movwf	detect_color@tempval& (0+255),b
   951   00122C  0E00               	movlw	high main@initial_color
   952   00122E  6FCB               	movwf	(detect_color@tempval+1)& (0+255),b
   953   001230  EC2E  F000         	call	_detect_color	;wreg free
   954   001234  0100               	movlb	0	; () banked
   955   001236  6FDF               	movwf	main@color_detected& (0+255),b
   956   001238                     
   957                           ; BSR set to: 0
   958                           ;main_motor.c: 63:         unsigned char b = 0;
   959   001238  0E00               	movlw	0
   960   00123A  6FDE               	movwf	main@b& (0+255),b
   961   00123C                     
   962                           ; BSR set to: 0
   963                           ;main_motor.c: 64:         if(color_detected == 0){
   964   00123C  51DF               	movf	main@color_detected& (0+255),w,b
   965   00123E  A4D8               	btfss	status,2,c
   966   001240  EF24  F009         	goto	u4171
   967   001244  EF26  F009         	goto	u4170
   968   001248                     u4171:
   969   001248  EF34  F009         	goto	l4099
   970   00124C                     u4170:
   971   00124C                     
   972                           ; BSR set to: 0
   973                           ;main_motor.c: 65:             fullSpeedAhead(&motorL,&motorR);
   974   00124C  0EE8               	movlw	low main@motorL
   975   00124E  6E1C               	movwf	fullSpeedAhead@mL^0,c
   976   001250  0E00               	movlw	high main@motorL
   977   001252  6E1D               	movwf	(fullSpeedAhead@mL+1)^0,c
   978   001254  0EF1               	movlw	low main@motorR
   979   001256  6E1E               	movwf	fullSpeedAhead@mR^0,c
   980   001258  0E00               	movlw	high main@motorR
   981   00125A  6E1F               	movwf	(fullSpeedAhead@mR+1)^0,c
   982   00125C  ECAA  F00B         	call	_fullSpeedAhead	;wreg free
   983   001260                     
   984                           ;main_motor.c: 66:             b++;
   985   001260  0100               	movlb	0	; () banked
   986   001262  2BDE               	incf	main@b& (0+255),f,b
   987                           
   988                           ;main_motor.c: 67:         }
   989   001264  EF0D  F009         	goto	l4087
   990   001268                     l4099:
   991                           
   992                           ; BSR set to: 0
   993   001268  51DF               	movf	main@color_detected& (0+255),w,b
   994   00126A  B4D8               	btfsc	status,2,c
   995   00126C  EF3A  F009         	goto	u4181
   996   001270  EF3C  F009         	goto	u4180
   997   001274                     u4181:
   998   001274  EF0D  F009         	goto	l4087
   999   001278                     u4180:
  1000   001278                     
  1001                           ; BSR set to: 0
  1002                           ;main_motor.c: 70:             AppendTime(b,&time_index,time_array);
  1003   001278  0EC5               	movlw	low _time_index
  1004   00127A  6E09               	movwf	AppendTime@time_index^0,c
  1005   00127C  0E00               	movlw	high _time_index
  1006   00127E  6E0A               	movwf	(AppendTime@time_index+1)^0,c
  1007   001280  0E9D               	movlw	low _time_array
  1008   001282  6E0B               	movwf	AppendTime@time_array^0,c
  1009   001284  0E00               	movlw	high _time_array
  1010   001286  6E0C               	movwf	(AppendTime@time_array+1)^0,c
  1011   001288  0E00               	movlw	0
  1012   00128A  ECFD  F011         	call	_AppendTime
  1013   00128E                     
  1014                           ;main_motor.c: 71:             LATHbits.LATH3 = 1;
  1015   00128E  8680               	bsf	128,3,c	;volatile
  1016                           
  1017                           ;main_motor.c: 73:             while(b>0){
  1018   001290  EF56  F009         	goto	l4109
  1019   001294                     l4105:
  1020                           
  1021                           ; BSR set to: 0
  1022                           ;main_motor.c: 74:                 stop(&motorL,&motorR);
  1023   001294  0EE8               	movlw	low main@motorL
  1024   001296  6E1C               	movwf	stop@mL^0,c
  1025   001298  0E00               	movlw	high main@motorL
  1026   00129A  6E1D               	movwf	(stop@mL+1)^0,c
  1027   00129C  0EF1               	movlw	low main@motorR
  1028   00129E  6E1E               	movwf	stop@mR^0,c
  1029   0012A0  0E00               	movlw	high main@motorR
  1030   0012A2  6E1F               	movwf	(stop@mR+1)^0,c
  1031   0012A4  EC80  F00C         	call	_stop	;wreg free
  1032   0012A8                     
  1033                           ;main_motor.c: 75:                 b--;
  1034   0012A8  0100               	movlb	0	; () banked
  1035   0012AA  07DE               	decf	main@b& (0+255),f,b
  1036   0012AC                     l4109:
  1037                           
  1038                           ;main_motor.c: 73:             while(b>0){
  1039   0012AC  0100               	movlb	0	; () banked
  1040   0012AE  51DE               	movf	main@b& (0+255),w,b
  1041   0012B0  A4D8               	btfss	status,2,c
  1042   0012B2  EF5D  F009         	goto	u4191
  1043   0012B6  EF5F  F009         	goto	u4190
  1044   0012BA                     u4191:
  1045   0012BA  EF4A  F009         	goto	l4105
  1046   0012BE                     u4190:
  1047   0012BE                     
  1048                           ; BSR set to: 0
  1049                           ;main_motor.c: 77:             _delay((unsigned long)((500)*(64000000/4000.0)));
  1050   0012BE  0E29               	movlw	41
  1051   0012C0  0100               	movlb	0	; () banked
  1052   0012C2  6FDD               	movwf	(??_main+1)& (0+255),b
  1053   0012C4  0E96               	movlw	150
  1054   0012C6  6FDC               	movwf	??_main& (0+255),b
  1055   0012C8  0E7F               	movlw	127
  1056   0012CA                     u4207:
  1057   0012CA  2EE8               	decfsz	wreg,f,c
  1058   0012CC  D7FE               	bra	u4207
  1059   0012CE  2FDC               	decfsz	??_main& (0+255),f,b
  1060   0012D0  D7FC               	bra	u4207
  1061   0012D2  2FDD               	decfsz	(??_main+1)& (0+255),f,b
  1062   0012D4  D7FA               	bra	u4207
  1063   0012D6                     
  1064                           ;main_motor.c: 78:             LATHbits.LATH3 = 0;
  1065   0012D6  9680               	bcf	128,3,c	;volatile
  1066   0012D8                     
  1067                           ;main_motor.c: 80:             MoveBuggy(color_detected,&motorL,&motorR);
  1068   0012D8  0100               	movlb	0	; () banked
  1069   0012DA  51DF               	movf	main@color_detected& (0+255),w,b
  1070   0012DC  6FDC               	movwf	??_main& (0+255),b
  1071   0012DE  6BDD               	clrf	(??_main+1)& (0+255),b
  1072   0012E0  C0DC  F02E         	movff	??_main,MoveBuggy@color_detected
  1073   0012E4  C0DD  F02F         	movff	??_main+1,MoveBuggy@color_detected+1
  1074   0012E8  0EE8               	movlw	low main@motorL
  1075   0012EA  6E30               	movwf	MoveBuggy@mL^0,c
  1076   0012EC  0E00               	movlw	high main@motorL
  1077   0012EE  6E31               	movwf	(MoveBuggy@mL+1)^0,c
  1078   0012F0  0EF1               	movlw	low main@motorR
  1079   0012F2  6E32               	movwf	MoveBuggy@mR^0,c
  1080   0012F4  0E00               	movlw	high main@motorR
  1081   0012F6  6E33               	movwf	(MoveBuggy@mR+1)^0,c
  1082   0012F8  ECF8  F007         	call	_MoveBuggy	;wreg free
  1083   0012FC  EF0D  F009         	goto	l4087
  1084   001300  EF2C  F000         	goto	start
  1085   001304                     __end_of_main:
  1086                           	callstack 0
  1087                           
  1088 ;; *************** function _initDCmotorsPWM *****************
  1089 ;; Defined at:
  1090 ;;		line 5 in file "dc_motor.c"
  1091 ;; Parameters:    Size  Location     Type
  1092 ;;  PWMperiod       2    8[COMRAM] unsigned int 
  1093 ;; Auto vars:     Size  Location     Type
  1094 ;;		None
  1095 ;; Return value:  Size  Location     Type
  1096 ;;                  1    wreg      void 
  1097 ;; Registers used:
  1098 ;;		wreg, status,2
  1099 ;; Tracked objects:
  1100 ;;		On entry : 0/0
  1101 ;;		On exit  : 0/0
  1102 ;;		Unchanged: 0/0
  1103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1104 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1107 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1108 ;;Total ram usage:        2 bytes
  1109 ;; Hardware stack levels used: 1
  1110 ;; Hardware stack levels required when called: 7
  1111 ;; This function calls:
  1112 ;;		Nothing
  1113 ;; This function is called by:
  1114 ;;		_main
  1115 ;; This function uses a non-reentrant model
  1116 ;;
  1117                           
  1118                           	psect	text1
  1119   001A86                     __ptext1:
  1120                           	callstack 0
  1121   001A86                     _initDCmotorsPWM:
  1122                           	callstack 23
  1123   001A86                     
  1124                           ;dc_motor.c: 7:     LATEbits.LATE2 = 0;
  1125   001A86  947D               	bcf	125,2,c	;volatile
  1126                           
  1127                           ;dc_motor.c: 8:     TRISEbits.TRISE2 = 0;
  1128   001A88  9485               	bcf	133,2,c	;volatile
  1129                           
  1130                           ;dc_motor.c: 9:     LATEbits.LATE4 = 0;
  1131   001A8A  987D               	bcf	125,4,c	;volatile
  1132                           
  1133                           ;dc_motor.c: 10:     TRISEbits.TRISE4 = 0;
  1134   001A8C  9885               	bcf	133,4,c	;volatile
  1135                           
  1136                           ;dc_motor.c: 11:     LATCbits.LATC7 = 0;
  1137   001A8E  9E7B               	bcf	123,7,c	;volatile
  1138                           
  1139                           ;dc_motor.c: 12:     TRISCbits.TRISC7 = 0;
  1140   001A90  9E83               	bcf	131,7,c	;volatile
  1141                           
  1142                           ;dc_motor.c: 13:     LATGbits.LATG6 = 0;
  1143   001A92  9C7F               	bcf	127,6,c	;volatile
  1144                           
  1145                           ;dc_motor.c: 14:     TRISGbits.TRISG6 = 0;
  1146   001A94  9C87               	bcf	135,6,c	;volatile
  1147   001A96                     
  1148                           ;dc_motor.c: 17:     RE2PPS=0x05;
  1149   001A96  0E05               	movlw	5
  1150   001A98  010E               	movlb	14	; () banked
  1151   001A9A  6F74               	movwf	116,b	;volatile
  1152                           
  1153                           ;dc_motor.c: 18:     RE4PPS=0x06;
  1154   001A9C  0E06               	movlw	6
  1155   001A9E  6F76               	movwf	118,b	;volatile
  1156                           
  1157                           ;dc_motor.c: 19:     RC7PPS=0x07;
  1158   001AA0  0E07               	movlw	7
  1159   001AA2  6F69               	movwf	105,b	;volatile
  1160                           
  1161                           ;dc_motor.c: 20:     RG6PPS=0x08;
  1162   001AA4  0E08               	movlw	8
  1163   001AA6  6F88               	movwf	136,b	;volatile
  1164                           
  1165                           ;dc_motor.c: 23:     T2CONbits.CKPS=0b100;
  1166   001AA8  50BD               	movf	189,w,c	;volatile
  1167   001AAA  0B8F               	andlw	-113
  1168   001AAC  0940               	iorlw	64
  1169   001AAE  6EBD               	movwf	189,c	;volatile
  1170                           
  1171                           ;dc_motor.c: 24:     T2HLTbits.MODE=0b00000;
  1172   001AB0  0EE0               	movlw	-32
  1173   001AB2  16BE               	andwf	190,f,c	;volatile
  1174                           
  1175                           ;dc_motor.c: 25:     T2CLKCONbits.CS=0b0001;
  1176   001AB4  50BF               	movf	191,w,c	;volatile
  1177   001AB6  0BF0               	andlw	-16
  1178   001AB8  0901               	iorlw	1
  1179   001ABA  6EBF               	movwf	191,c	;volatile
  1180   001ABC                     
  1181                           ; BSR set to: 14
  1182                           ;dc_motor.c: 29:     T2PR=PWMperiod;
  1183   001ABC  C009  FFBC         	movff	initDCmotorsPWM@PWMperiod,4028	;volatile
  1184   001AC0                     
  1185                           ; BSR set to: 14
  1186                           ;dc_motor.c: 30:     T2CONbits.ON=1;
  1187   001AC0  8EBD               	bsf	189,7,c	;volatile
  1188                           
  1189                           ;dc_motor.c: 34:     CCPR1H=0;
  1190   001AC2  0E00               	movlw	0
  1191   001AC4  6EAA               	movwf	170,c	;volatile
  1192                           
  1193                           ;dc_motor.c: 35:     CCPR2H=0;
  1194   001AC6  0E00               	movlw	0
  1195   001AC8  6EA6               	movwf	166,c	;volatile
  1196                           
  1197                           ;dc_motor.c: 36:     CCPR3H=0;
  1198   001ACA  0E00               	movlw	0
  1199   001ACC  010F               	movlb	15	; () banked
  1200   001ACE  6F25               	movwf	37,b	;volatile
  1201                           
  1202                           ;dc_motor.c: 37:     CCPR4H=0;
  1203   001AD0  0E00               	movlw	0
  1204   001AD2  6F21               	movwf	33,b	;volatile
  1205                           
  1206                           ;dc_motor.c: 40:     CCPTMRS0bits.C1TSEL=0;
  1207   001AD4  0EFC               	movlw	-4
  1208   001AD6  16AD               	andwf	173,f,c	;volatile
  1209                           
  1210                           ;dc_motor.c: 41:     CCPTMRS0bits.C2TSEL=0;
  1211   001AD8  0EF3               	movlw	-13
  1212   001ADA  16AD               	andwf	173,f,c	;volatile
  1213                           
  1214                           ;dc_motor.c: 42:     CCPTMRS0bits.C3TSEL=0;
  1215   001ADC  0ECF               	movlw	-49
  1216   001ADE  16AD               	andwf	173,f,c	;volatile
  1217                           
  1218                           ;dc_motor.c: 43:     CCPTMRS0bits.C4TSEL=0;
  1219   001AE0  0E3F               	movlw	-193
  1220   001AE2  16AD               	andwf	173,f,c	;volatile
  1221   001AE4                     
  1222                           ; BSR set to: 15
  1223                           ;dc_motor.c: 46:     CCP1CONbits.FMT=1;
  1224   001AE4  88AB               	bsf	171,4,c	;volatile
  1225                           
  1226                           ;dc_motor.c: 47:     CCP1CONbits.CCP1MODE=0b1100;
  1227   001AE6  50AB               	movf	171,w,c	;volatile
  1228   001AE8  0BF0               	andlw	-16
  1229   001AEA  090C               	iorlw	12
  1230   001AEC  6EAB               	movwf	171,c	;volatile
  1231   001AEE                     
  1232                           ; BSR set to: 15
  1233                           ;dc_motor.c: 48:     CCP1CONbits.EN=1;
  1234   001AEE  8EAB               	bsf	171,7,c	;volatile
  1235   001AF0                     
  1236                           ; BSR set to: 15
  1237                           ;dc_motor.c: 50:     CCP2CONbits.FMT=1;
  1238   001AF0  88A7               	bsf	167,4,c	;volatile
  1239                           
  1240                           ;dc_motor.c: 51:     CCP2CONbits.CCP2MODE=0b1100;
  1241   001AF2  50A7               	movf	167,w,c	;volatile
  1242   001AF4  0BF0               	andlw	-16
  1243   001AF6  090C               	iorlw	12
  1244   001AF8  6EA7               	movwf	167,c	;volatile
  1245   001AFA                     
  1246                           ; BSR set to: 15
  1247                           ;dc_motor.c: 52:     CCP2CONbits.EN=1;
  1248   001AFA  8EA7               	bsf	167,7,c	;volatile
  1249   001AFC                     
  1250                           ; BSR set to: 15
  1251                           ;dc_motor.c: 54:     CCP3CONbits.FMT=1;
  1252   001AFC  8926               	bsf	38,4,b	;volatile
  1253                           
  1254                           ;dc_motor.c: 55:     CCP3CONbits.CCP3MODE=0b1100;
  1255   001AFE  5126               	movf	38,w,b	;volatile
  1256   001B00  0BF0               	andlw	-16
  1257   001B02  090C               	iorlw	12
  1258   001B04  6F26               	movwf	38,b	;volatile
  1259   001B06                     
  1260                           ; BSR set to: 15
  1261                           ;dc_motor.c: 56:     CCP3CONbits.EN=1;
  1262   001B06  8F26               	bsf	38,7,b	;volatile
  1263   001B08                     
  1264                           ; BSR set to: 15
  1265                           ;dc_motor.c: 58:     CCP4CONbits.FMT=1;
  1266   001B08  8922               	bsf	34,4,b	;volatile
  1267                           
  1268                           ;dc_motor.c: 59:     CCP4CONbits.CCP4MODE=0b1100;
  1269   001B0A  5122               	movf	34,w,b	;volatile
  1270   001B0C  0BF0               	andlw	-16
  1271   001B0E  090C               	iorlw	12
  1272   001B10  6F22               	movwf	34,b	;volatile
  1273   001B12                     
  1274                           ; BSR set to: 15
  1275                           ;dc_motor.c: 60:     CCP4CONbits.EN=1;
  1276   001B12  8F22               	bsf	34,7,b	;volatile
  1277   001B14                     
  1278                           ; BSR set to: 15
  1279   001B14  0012               	return		;funcret
  1280   001B16                     __end_of_initDCmotorsPWM:
  1281                           	callstack 0
  1282                           
  1283 ;; *************** function _fullSpeedAhead *****************
  1284 ;; Defined at:
  1285 ;;		line 151 in file "dc_motor.c"
  1286 ;; Parameters:    Size  Location     Type
  1287 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  1288 ;;		 -> main@motorL(9), 
  1289 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  1290 ;;		 -> main@motorR(9), 
  1291 ;; Auto vars:     Size  Location     Type
  1292 ;;		None
  1293 ;; Return value:  Size  Location     Type
  1294 ;;                  1    wreg      void 
  1295 ;; Registers used:
  1296 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1297 ;; Tracked objects:
  1298 ;;		On entry : 0/0
  1299 ;;		On exit  : 0/0
  1300 ;;		Unchanged: 0/0
  1301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1302 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1304 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1305 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1306 ;;Total ram usage:        6 bytes
  1307 ;; Hardware stack levels used: 1
  1308 ;; Hardware stack levels required when called: 9
  1309 ;; This function calls:
  1310 ;;		_setMotorPWM
  1311 ;; This function is called by:
  1312 ;;		_main
  1313 ;;		_AntiYellow
  1314 ;;		_AntiPink
  1315 ;;		_WhiteInstructions
  1316 ;; This function uses a non-reentrant model
  1317 ;;
  1318                           
  1319                           	psect	text2
  1320   001754                     __ptext2:
  1321                           	callstack 0
  1322   001754                     _fullSpeedAhead:
  1323                           	callstack 21
  1324   001754                     
  1325                           ;dc_motor.c: 151: void fullSpeedAhead(DC_motor *mL, DC_motor *mR);dc_motor.c: 152: {;dc_
      +                          motor.c: 154:     mL->direction = 1;
  1326   001754  EE20 F001          	lfsr	2,1
  1327   001758  501C               	movf	fullSpeedAhead@mL^0,w,c
  1328   00175A  26D9               	addwf	fsr2l,f,c
  1329   00175C  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  1330   00175E  22DA               	addwfc	fsr2h,f,c
  1331   001760  0E01               	movlw	1
  1332   001762  6EDF               	movwf	indf2,c
  1333                           
  1334                           ;dc_motor.c: 155:     mL->brakemode = 0;
  1335   001764  EE20 F002          	lfsr	2,2
  1336   001768  501C               	movf	fullSpeedAhead@mL^0,w,c
  1337   00176A  26D9               	addwf	fsr2l,f,c
  1338   00176C  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  1339   00176E  22DA               	addwfc	fsr2h,f,c
  1340   001770  0E00               	movlw	0
  1341   001772  6EDF               	movwf	indf2,c
  1342                           
  1343                           ;dc_motor.c: 157:     mR->direction = 1;
  1344   001774  EE20 F001          	lfsr	2,1
  1345   001778  501E               	movf	fullSpeedAhead@mR^0,w,c
  1346   00177A  26D9               	addwf	fsr2l,f,c
  1347   00177C  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  1348   00177E  22DA               	addwfc	fsr2h,f,c
  1349   001780  0E01               	movlw	1
  1350   001782  6EDF               	movwf	indf2,c
  1351                           
  1352                           ;dc_motor.c: 158:     mR->brakemode = 0;
  1353   001784  EE20 F002          	lfsr	2,2
  1354   001788  501E               	movf	fullSpeedAhead@mR^0,w,c
  1355   00178A  26D9               	addwf	fsr2l,f,c
  1356   00178C  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  1357   00178E  22DA               	addwfc	fsr2h,f,c
  1358   001790  0E00               	movlw	0
  1359   001792  6EDF               	movwf	indf2,c
  1360                           
  1361                           ;dc_motor.c: 162:     if(mL->power>45){mL->power=45;}
  1362   001794  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  1363   001798  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  1364   00179C  50DF               	movf	indf2,w,c
  1365   00179E  0A80               	xorlw	128
  1366   0017A0  0F52               	addlw	-174
  1367   0017A2  A0D8               	btfss	status,0,c
  1368   0017A4  EFD6  F00B         	goto	u3331
  1369   0017A8  EFD8  F00B         	goto	u3330
  1370   0017AC                     u3331:
  1371   0017AC  EFDE  F00B         	goto	l3583
  1372   0017B0                     u3330:
  1373   0017B0  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  1374   0017B4  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  1375   0017B8  0E2D               	movlw	45
  1376   0017BA  6EDF               	movwf	indf2,c
  1377   0017BC                     l3583:
  1378                           
  1379                           ;dc_motor.c: 163:     if(mR->power>45){mR->power=45;}
  1380   0017BC  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  1381   0017C0  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  1382   0017C4  50DF               	movf	indf2,w,c
  1383   0017C6  0A80               	xorlw	128
  1384   0017C8  0F52               	addlw	-174
  1385   0017CA  A0D8               	btfss	status,0,c
  1386   0017CC  EFEA  F00B         	goto	u3341
  1387   0017D0  EFEC  F00B         	goto	u3340
  1388   0017D4                     u3341:
  1389   0017D4  EFF2  F00B         	goto	l3587
  1390   0017D8                     u3340:
  1391   0017D8  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  1392   0017DC  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  1393   0017E0  0E2D               	movlw	45
  1394   0017E2  6EDF               	movwf	indf2,c
  1395   0017E4                     l3587:
  1396                           
  1397                           ;dc_motor.c: 165:     ++mL->power;
  1398   0017E4  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  1399   0017E8  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  1400   0017EC  2ADF               	incf	indf2,f,c
  1401   0017EE                     
  1402                           ;dc_motor.c: 166:     ++mR->power;
  1403   0017EE  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  1404   0017F2  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  1405   0017F6  2ADF               	incf	indf2,f,c
  1406   0017F8                     
  1407                           ;dc_motor.c: 168:     setMotorPWM(mL);
  1408   0017F8  C01C  F016         	movff	fullSpeedAhead@mL,setMotorPWM@m
  1409   0017FC  C01D  F017         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  1410   001800  EC82  F009         	call	_setMotorPWM	;wreg free
  1411   001804                     
  1412                           ;dc_motor.c: 169:     setMotorPWM(mR);
  1413   001804  C01E  F016         	movff	fullSpeedAhead@mR,setMotorPWM@m
  1414   001808  C01F  F017         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  1415   00180C  EC82  F009         	call	_setMotorPWM	;wreg free
  1416   001810                     
  1417                           ;dc_motor.c: 170:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1418   001810  0E05               	movlw	5
  1419   001812  6E21               	movwf	(??_fullSpeedAhead+1)^0,c
  1420   001814  0E0F               	movlw	15
  1421   001816  6E20               	movwf	??_fullSpeedAhead^0,c
  1422   001818  0EF1               	movlw	241
  1423   00181A                     u4217:
  1424   00181A  2EE8               	decfsz	wreg,f,c
  1425   00181C  D7FE               	bra	u4217
  1426   00181E  2E20               	decfsz	??_fullSpeedAhead^0,f,c
  1427   001820  D7FC               	bra	u4217
  1428   001822  2E21               	decfsz	(??_fullSpeedAhead+1)^0,f,c
  1429   001824  D7FA               	bra	u4217
  1430   001826  F000               	nop	
  1431   001828  0012               	return		;funcret
  1432   00182A                     __end_of_fullSpeedAhead:
  1433                           	callstack 0
  1434                           
  1435 ;; *************** function _detect_color *****************
  1436 ;; Defined at:
  1437 ;;		line 99 in file "color.c"
  1438 ;; Parameters:    Size  Location     Type
  1439 ;;  tempval         2    4[BANK0 ] PTR struct RGB_val
  1440 ;;		 -> main@initial_color(8), 
  1441 ;; Auto vars:     Size  Location     Type
  1442 ;;  dist_B          1   21[BANK0 ] unsigned char 
  1443 ;;  dist_G          1   20[BANK0 ] unsigned char 
  1444 ;;  dist_R          1   19[BANK0 ] unsigned char 
  1445 ;;  color           1   18[BANK0 ] unsigned char 
  1446 ;; Return value:  Size  Location     Type
  1447 ;;                  1    wreg      unsigned char 
  1448 ;; Registers used:
  1449 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1450 ;; Tracked objects:
  1451 ;;		On entry : 0/0
  1452 ;;		On exit  : 0/0
  1453 ;;		Unchanged: 0/0
  1454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1455 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1456 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1457 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1458 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1459 ;;Total ram usage:       18 bytes
  1460 ;; Hardware stack levels used: 1
  1461 ;; Hardware stack levels required when called: 8
  1462 ;; This function calls:
  1463 ;;		___fldiv
  1464 ;;		___flmul
  1465 ;;		___fltol
  1466 ;;		___xxtofl
  1467 ;; This function is called by:
  1468 ;;		_main
  1469 ;; This function uses a non-reentrant model
  1470 ;;
  1471                           
  1472                           	psect	text3
  1473   00005C                     __ptext3:
  1474                           	callstack 0
  1475   00005C                     _detect_color:
  1476                           	callstack 22
  1477   00005C                     
  1478                           ;color.c: 99: unsigned char detect_color(RGB_val *tempval);color.c: 100: {;color.c: 101:
      +                               unsigned char color = 0;
  1479   00005C  0E00               	movlw	0
  1480   00005E  0100               	movlb	0	; () banked
  1481   000060  6FD8               	movwf	detect_color@color& (0+255),b
  1482   000062                     
  1483                           ; BSR set to: 0
  1484                           ;color.c: 104:     unsigned char dist_R, dist_G, dist_B;;color.c: 105:     dist_R = ((fl
      +                          oat)(tempval->R)/(float)(tempval->R + tempval->G + tempval->B))*100;
  1485   000062  0E00               	movlw	0
  1486   000064  6E34               	movwf	___flmul@a^0,c
  1487   000066  0E00               	movlw	0
  1488   000068  6E35               	movwf	(___flmul@a+1)^0,c
  1489   00006A  0EC8               	movlw	200
  1490   00006C  6E36               	movwf	(___flmul@a+2)^0,c
  1491   00006E  0E42               	movlw	66
  1492   000070  6E37               	movwf	(___flmul@a+3)^0,c
  1493   000072  EE20 F004          	lfsr	2,4
  1494   000076  51CA               	movf	detect_color@tempval& (0+255),w,b
  1495   000078  26D9               	addwf	fsr2l,f,c
  1496   00007A  51CB               	movf	(detect_color@tempval+1)& (0+255),w,b
  1497   00007C  22DA               	addwfc	fsr2h,f,c
  1498   00007E  CFDE F0CC          	movff	postinc2,??_detect_color
  1499   000082  CFDD F0CD          	movff	postdec2,??_detect_color+1
  1500   000086  EE20 F002          	lfsr	2,2
  1501   00008A  51CA               	movf	detect_color@tempval& (0+255),w,b
  1502   00008C  26D9               	addwf	fsr2l,f,c
  1503   00008E  51CB               	movf	(detect_color@tempval+1)& (0+255),w,b
  1504   000090  22DA               	addwfc	fsr2h,f,c
  1505   000092  CFDE F0CE          	movff	postinc2,??_detect_color+2
  1506   000096  CFDD F0CF          	movff	postdec2,??_detect_color+3
  1507   00009A  C0CA  FFD9         	movff	detect_color@tempval,fsr2l
  1508   00009E  C0CB  FFDA         	movff	detect_color@tempval+1,fsr2h
  1509   0000A2  CFDE F0D0          	movff	postinc2,??_detect_color+4
  1510   0000A6  CFDD F0D1          	movff	postdec2,??_detect_color+5
  1511   0000AA  51CE               	movf	(??_detect_color+2)& (0+255),w,b
  1512   0000AC  25D0               	addwf	(??_detect_color+4)& (0+255),w,b
  1513   0000AE  6FD2               	movwf	(??_detect_color+6)& (0+255),b
  1514   0000B0  51CF               	movf	(??_detect_color+3)& (0+255),w,b
  1515   0000B2  21D1               	addwfc	(??_detect_color+5)& (0+255),w,b
  1516   0000B4  6FD3               	movwf	(??_detect_color+7)& (0+255),b
  1517   0000B6  51CC               	movf	??_detect_color& (0+255),w,b
  1518   0000B8  25D2               	addwf	(??_detect_color+6)& (0+255),w,b
  1519   0000BA  6FD4               	movwf	(??_detect_color+8)& (0+255),b
  1520   0000BC  51CD               	movf	(??_detect_color+1)& (0+255),w,b
  1521   0000BE  21D3               	addwfc	(??_detect_color+7)& (0+255),w,b
  1522   0000C0  6FD5               	movwf	(??_detect_color+9)& (0+255),b
  1523   0000C2  C0D4  F009         	movff	??_detect_color+8,___xxtofl@val
  1524   0000C6  C0D5  F00A         	movff	??_detect_color+9,___xxtofl@val+1
  1525   0000CA  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1526   0000CC  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1527   0000CE  0E00               	movlw	0
  1528   0000D0  EC1E  F007         	call	___xxtofl
  1529   0000D4  C009  F01B         	movff	?___xxtofl,___fldiv@a
  1530   0000D8  C00A  F01C         	movff	?___xxtofl+1,___fldiv@a+1
  1531   0000DC  C00B  F01D         	movff	?___xxtofl+2,___fldiv@a+2
  1532   0000E0  C00C  F01E         	movff	?___xxtofl+3,___fldiv@a+3
  1533   0000E4  C0CA  FFD9         	movff	detect_color@tempval,fsr2l
  1534   0000E8  C0CB  FFDA         	movff	detect_color@tempval+1,fsr2h
  1535   0000EC  CFDE F0D6          	movff	postinc2,??_detect_color+10
  1536   0000F0  CFDD F0D7          	movff	postdec2,??_detect_color+11
  1537   0000F4  C0D6  F009         	movff	??_detect_color+10,___xxtofl@val
  1538   0000F8  C0D7  F00A         	movff	??_detect_color+11,___xxtofl@val+1
  1539   0000FC  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1540   0000FE  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1541   000100  0E00               	movlw	0
  1542   000102  EC1E  F007         	call	___xxtofl
  1543   000106  C009  F017         	movff	?___xxtofl,___fldiv@b
  1544   00010A  C00A  F018         	movff	?___xxtofl+1,___fldiv@b+1
  1545   00010E  C00B  F019         	movff	?___xxtofl+2,___fldiv@b+2
  1546   000112  C00C  F01A         	movff	?___xxtofl+3,___fldiv@b+3
  1547   000116  EC51  F005         	call	___fldiv	;wreg free
  1548   00011A  C017  F030         	movff	?___fldiv,___flmul@b
  1549   00011E  C018  F031         	movff	?___fldiv+1,___flmul@b+1
  1550   000122  C019  F032         	movff	?___fldiv+2,___flmul@b+2
  1551   000126  C01A  F033         	movff	?___fldiv+3,___flmul@b+3
  1552   00012A  EC3C  F003         	call	___flmul	;wreg free
  1553   00012E  C030  F049         	movff	?___flmul,___fltol@f1
  1554   000132  C031  F04A         	movff	?___flmul+1,___fltol@f1+1
  1555   000136  C032  F04B         	movff	?___flmul+2,___fltol@f1+2
  1556   00013A  C033  F04C         	movff	?___flmul+3,___fltol@f1+3
  1557   00013E  EC38  F00A         	call	___fltol	;wreg free
  1558   000142  5049               	movf	?___fltol^0,w,c
  1559   000144  0100               	movlb	0	; () banked
  1560   000146  6FD9               	movwf	detect_color@dist_R& (0+255),b
  1561   000148                     
  1562                           ; BSR set to: 0
  1563                           ;color.c: 106:     dist_G = ((float)(tempval->G)/(float)(tempval->R + tempval->G + tempv
      +                          al->B))*100;
  1564   000148  0E00               	movlw	0
  1565   00014A  6E34               	movwf	___flmul@a^0,c
  1566   00014C  0E00               	movlw	0
  1567   00014E  6E35               	movwf	(___flmul@a+1)^0,c
  1568   000150  0EC8               	movlw	200
  1569   000152  6E36               	movwf	(___flmul@a+2)^0,c
  1570   000154  0E42               	movlw	66
  1571   000156  6E37               	movwf	(___flmul@a+3)^0,c
  1572   000158  EE20 F004          	lfsr	2,4
  1573   00015C  51CA               	movf	detect_color@tempval& (0+255),w,b
  1574   00015E  26D9               	addwf	fsr2l,f,c
  1575   000160  51CB               	movf	(detect_color@tempval+1)& (0+255),w,b
  1576   000162  22DA               	addwfc	fsr2h,f,c
  1577   000164  CFDE F0CC          	movff	postinc2,??_detect_color
  1578   000168  CFDD F0CD          	movff	postdec2,??_detect_color+1
  1579   00016C  EE20 F002          	lfsr	2,2
  1580   000170  51CA               	movf	detect_color@tempval& (0+255),w,b
  1581   000172  26D9               	addwf	fsr2l,f,c
  1582   000174  51CB               	movf	(detect_color@tempval+1)& (0+255),w,b
  1583   000176  22DA               	addwfc	fsr2h,f,c
  1584   000178  CFDE F0CE          	movff	postinc2,??_detect_color+2
  1585   00017C  CFDD F0CF          	movff	postdec2,??_detect_color+3
  1586   000180  C0CA  FFD9         	movff	detect_color@tempval,fsr2l
  1587   000184  C0CB  FFDA         	movff	detect_color@tempval+1,fsr2h
  1588   000188  CFDE F0D0          	movff	postinc2,??_detect_color+4
  1589   00018C  CFDD F0D1          	movff	postdec2,??_detect_color+5
  1590   000190  51CE               	movf	(??_detect_color+2)& (0+255),w,b
  1591   000192  25D0               	addwf	(??_detect_color+4)& (0+255),w,b
  1592   000194  6FD2               	movwf	(??_detect_color+6)& (0+255),b
  1593   000196  51CF               	movf	(??_detect_color+3)& (0+255),w,b
  1594   000198  21D1               	addwfc	(??_detect_color+5)& (0+255),w,b
  1595   00019A  6FD3               	movwf	(??_detect_color+7)& (0+255),b
  1596   00019C  51CC               	movf	??_detect_color& (0+255),w,b
  1597   00019E  25D2               	addwf	(??_detect_color+6)& (0+255),w,b
  1598   0001A0  6FD4               	movwf	(??_detect_color+8)& (0+255),b
  1599   0001A2  51CD               	movf	(??_detect_color+1)& (0+255),w,b
  1600   0001A4  21D3               	addwfc	(??_detect_color+7)& (0+255),w,b
  1601   0001A6  6FD5               	movwf	(??_detect_color+9)& (0+255),b
  1602   0001A8  C0D4  F009         	movff	??_detect_color+8,___xxtofl@val
  1603   0001AC  C0D5  F00A         	movff	??_detect_color+9,___xxtofl@val+1
  1604   0001B0  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1605   0001B2  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1606   0001B4  0E00               	movlw	0
  1607   0001B6  EC1E  F007         	call	___xxtofl
  1608   0001BA  C009  F01B         	movff	?___xxtofl,___fldiv@a
  1609   0001BE  C00A  F01C         	movff	?___xxtofl+1,___fldiv@a+1
  1610   0001C2  C00B  F01D         	movff	?___xxtofl+2,___fldiv@a+2
  1611   0001C6  C00C  F01E         	movff	?___xxtofl+3,___fldiv@a+3
  1612   0001CA  0100               	movlb	0	; () banked
  1613   0001CC  EE20 F002          	lfsr	2,2
  1614   0001D0  51CA               	movf	detect_color@tempval& (0+255),w,b
  1615   0001D2  26D9               	addwf	fsr2l,f,c
  1616   0001D4  51CB               	movf	(detect_color@tempval+1)& (0+255),w,b
  1617   0001D6  22DA               	addwfc	fsr2h,f,c
  1618   0001D8  CFDE F0D6          	movff	postinc2,??_detect_color+10
  1619   0001DC  CFDD F0D7          	movff	postdec2,??_detect_color+11
  1620   0001E0  C0D6  F009         	movff	??_detect_color+10,___xxtofl@val
  1621   0001E4  C0D7  F00A         	movff	??_detect_color+11,___xxtofl@val+1
  1622   0001E8  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1623   0001EA  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1624   0001EC  0E00               	movlw	0
  1625   0001EE  EC1E  F007         	call	___xxtofl
  1626   0001F2  C009  F017         	movff	?___xxtofl,___fldiv@b
  1627   0001F6  C00A  F018         	movff	?___xxtofl+1,___fldiv@b+1
  1628   0001FA  C00B  F019         	movff	?___xxtofl+2,___fldiv@b+2
  1629   0001FE  C00C  F01A         	movff	?___xxtofl+3,___fldiv@b+3
  1630   000202  EC51  F005         	call	___fldiv	;wreg free
  1631   000206  C017  F030         	movff	?___fldiv,___flmul@b
  1632   00020A  C018  F031         	movff	?___fldiv+1,___flmul@b+1
  1633   00020E  C019  F032         	movff	?___fldiv+2,___flmul@b+2
  1634   000212  C01A  F033         	movff	?___fldiv+3,___flmul@b+3
  1635   000216  EC3C  F003         	call	___flmul	;wreg free
  1636   00021A  C030  F049         	movff	?___flmul,___fltol@f1
  1637   00021E  C031  F04A         	movff	?___flmul+1,___fltol@f1+1
  1638   000222  C032  F04B         	movff	?___flmul+2,___fltol@f1+2
  1639   000226  C033  F04C         	movff	?___flmul+3,___fltol@f1+3
  1640   00022A  EC38  F00A         	call	___fltol	;wreg free
  1641   00022E  5049               	movf	?___fltol^0,w,c
  1642   000230  0100               	movlb	0	; () banked
  1643   000232  6FDA               	movwf	detect_color@dist_G& (0+255),b
  1644   000234                     
  1645                           ; BSR set to: 0
  1646                           ;color.c: 107:     dist_B = ((float)(tempval->B)/(float)(tempval->R + tempval->G + tempv
      +                          al->B))*100;
  1647   000234  0E00               	movlw	0
  1648   000236  6E34               	movwf	___flmul@a^0,c
  1649   000238  0E00               	movlw	0
  1650   00023A  6E35               	movwf	(___flmul@a+1)^0,c
  1651   00023C  0EC8               	movlw	200
  1652   00023E  6E36               	movwf	(___flmul@a+2)^0,c
  1653   000240  0E42               	movlw	66
  1654   000242  6E37               	movwf	(___flmul@a+3)^0,c
  1655   000244  EE20 F004          	lfsr	2,4
  1656   000248  51CA               	movf	detect_color@tempval& (0+255),w,b
  1657   00024A  26D9               	addwf	fsr2l,f,c
  1658   00024C  51CB               	movf	(detect_color@tempval+1)& (0+255),w,b
  1659   00024E  22DA               	addwfc	fsr2h,f,c
  1660   000250  CFDE F0CC          	movff	postinc2,??_detect_color
  1661   000254  CFDD F0CD          	movff	postdec2,??_detect_color+1
  1662   000258  EE20 F002          	lfsr	2,2
  1663   00025C  51CA               	movf	detect_color@tempval& (0+255),w,b
  1664   00025E  26D9               	addwf	fsr2l,f,c
  1665   000260  51CB               	movf	(detect_color@tempval+1)& (0+255),w,b
  1666   000262  22DA               	addwfc	fsr2h,f,c
  1667   000264  CFDE F0CE          	movff	postinc2,??_detect_color+2
  1668   000268  CFDD F0CF          	movff	postdec2,??_detect_color+3
  1669   00026C  C0CA  FFD9         	movff	detect_color@tempval,fsr2l
  1670   000270  C0CB  FFDA         	movff	detect_color@tempval+1,fsr2h
  1671   000274  CFDE F0D0          	movff	postinc2,??_detect_color+4
  1672   000278  CFDD F0D1          	movff	postdec2,??_detect_color+5
  1673   00027C  51CE               	movf	(??_detect_color+2)& (0+255),w,b
  1674   00027E  25D0               	addwf	(??_detect_color+4)& (0+255),w,b
  1675   000280  6FD2               	movwf	(??_detect_color+6)& (0+255),b
  1676   000282  51CF               	movf	(??_detect_color+3)& (0+255),w,b
  1677   000284  21D1               	addwfc	(??_detect_color+5)& (0+255),w,b
  1678   000286  6FD3               	movwf	(??_detect_color+7)& (0+255),b
  1679   000288  51CC               	movf	??_detect_color& (0+255),w,b
  1680   00028A  25D2               	addwf	(??_detect_color+6)& (0+255),w,b
  1681   00028C  6FD4               	movwf	(??_detect_color+8)& (0+255),b
  1682   00028E  51CD               	movf	(??_detect_color+1)& (0+255),w,b
  1683   000290  21D3               	addwfc	(??_detect_color+7)& (0+255),w,b
  1684   000292  6FD5               	movwf	(??_detect_color+9)& (0+255),b
  1685   000294  C0D4  F009         	movff	??_detect_color+8,___xxtofl@val
  1686   000298  C0D5  F00A         	movff	??_detect_color+9,___xxtofl@val+1
  1687   00029C  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1688   00029E  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1689   0002A0  0E00               	movlw	0
  1690   0002A2  EC1E  F007         	call	___xxtofl
  1691   0002A6  C009  F01B         	movff	?___xxtofl,___fldiv@a
  1692   0002AA  C00A  F01C         	movff	?___xxtofl+1,___fldiv@a+1
  1693   0002AE  C00B  F01D         	movff	?___xxtofl+2,___fldiv@a+2
  1694   0002B2  C00C  F01E         	movff	?___xxtofl+3,___fldiv@a+3
  1695   0002B6  0100               	movlb	0	; () banked
  1696   0002B8  EE20 F004          	lfsr	2,4
  1697   0002BC  51CA               	movf	detect_color@tempval& (0+255),w,b
  1698   0002BE  26D9               	addwf	fsr2l,f,c
  1699   0002C0  51CB               	movf	(detect_color@tempval+1)& (0+255),w,b
  1700   0002C2  22DA               	addwfc	fsr2h,f,c
  1701   0002C4  CFDE F0D6          	movff	postinc2,??_detect_color+10
  1702   0002C8  CFDD F0D7          	movff	postdec2,??_detect_color+11
  1703   0002CC  C0D6  F009         	movff	??_detect_color+10,___xxtofl@val
  1704   0002D0  C0D7  F00A         	movff	??_detect_color+11,___xxtofl@val+1
  1705   0002D4  6A0B               	clrf	(___xxtofl@val+2)^0,c
  1706   0002D6  6A0C               	clrf	(___xxtofl@val+3)^0,c
  1707   0002D8  0E00               	movlw	0
  1708   0002DA  EC1E  F007         	call	___xxtofl
  1709   0002DE  C009  F017         	movff	?___xxtofl,___fldiv@b
  1710   0002E2  C00A  F018         	movff	?___xxtofl+1,___fldiv@b+1
  1711   0002E6  C00B  F019         	movff	?___xxtofl+2,___fldiv@b+2
  1712   0002EA  C00C  F01A         	movff	?___xxtofl+3,___fldiv@b+3
  1713   0002EE  EC51  F005         	call	___fldiv	;wreg free
  1714   0002F2  C017  F030         	movff	?___fldiv,___flmul@b
  1715   0002F6  C018  F031         	movff	?___fldiv+1,___flmul@b+1
  1716   0002FA  C019  F032         	movff	?___fldiv+2,___flmul@b+2
  1717   0002FE  C01A  F033         	movff	?___fldiv+3,___flmul@b+3
  1718   000302  EC3C  F003         	call	___flmul	;wreg free
  1719   000306  C030  F049         	movff	?___flmul,___fltol@f1
  1720   00030A  C031  F04A         	movff	?___flmul+1,___fltol@f1+1
  1721   00030E  C032  F04B         	movff	?___flmul+2,___fltol@f1+2
  1722   000312  C033  F04C         	movff	?___flmul+3,___fltol@f1+3
  1723   000316  EC38  F00A         	call	___fltol	;wreg free
  1724   00031A  5049               	movf	?___fltol^0,w,c
  1725   00031C  0100               	movlb	0	; () banked
  1726   00031E  6FDB               	movwf	detect_color@dist_B& (0+255),b
  1727   000320                     
  1728                           ; BSR set to: 0
  1729                           ;color.c: 109:     if(color_flag){
  1730   000320  5055               	movf	_color_flag^0,w,c
  1731   000322  B4D8               	btfsc	status,2,c
  1732   000324  EF96  F001         	goto	u3681
  1733   000328  EF98  F001         	goto	u3680
  1734   00032C                     u3681:
  1735   00032C  EF38  F003         	goto	l42
  1736   000330                     u3680:
  1737   000330                     
  1738                           ; BSR set to: 0
  1739                           ;color.c: 110:         if((74<=dist_R) && (dist_R<=76) && (10<=dist_G) && (dist_G<=12) &
      +                          & (13<=dist_B) && (dist_B<=15)){
  1740   000330  0E49               	movlw	73
  1741   000332  65D9               	cpfsgt	detect_color@dist_R& (0+255),b
  1742   000334  EF9E  F001         	goto	u3691
  1743   000338  EFA0  F001         	goto	u3690
  1744   00033C                     u3691:
  1745   00033C  EFCC  F001         	goto	l3951
  1746   000340                     u3690:
  1747   000340                     
  1748                           ; BSR set to: 0
  1749   000340  0E4D               	movlw	77
  1750   000342  61D9               	cpfslt	detect_color@dist_R& (0+255),b
  1751   000344  EFA6  F001         	goto	u3701
  1752   000348  EFA8  F001         	goto	u3700
  1753   00034C                     u3701:
  1754   00034C  EFCC  F001         	goto	l3951
  1755   000350                     u3700:
  1756   000350                     
  1757                           ; BSR set to: 0
  1758   000350  0E09               	movlw	9
  1759   000352  65DA               	cpfsgt	detect_color@dist_G& (0+255),b
  1760   000354  EFAE  F001         	goto	u3711
  1761   000358  EFB0  F001         	goto	u3710
  1762   00035C                     u3711:
  1763   00035C  EFCC  F001         	goto	l3951
  1764   000360                     u3710:
  1765   000360                     
  1766                           ; BSR set to: 0
  1767   000360  0E0D               	movlw	13
  1768   000362  61DA               	cpfslt	detect_color@dist_G& (0+255),b
  1769   000364  EFB6  F001         	goto	u3721
  1770   000368  EFB8  F001         	goto	u3720
  1771   00036C                     u3721:
  1772   00036C  EFCC  F001         	goto	l3951
  1773   000370                     u3720:
  1774   000370                     
  1775                           ; BSR set to: 0
  1776   000370  0E0C               	movlw	12
  1777   000372  65DB               	cpfsgt	detect_color@dist_B& (0+255),b
  1778   000374  EFBE  F001         	goto	u3731
  1779   000378  EFC0  F001         	goto	u3730
  1780   00037C                     u3731:
  1781   00037C  EFCC  F001         	goto	l3951
  1782   000380                     u3730:
  1783   000380                     
  1784                           ; BSR set to: 0
  1785   000380  0E10               	movlw	16
  1786   000382  61DB               	cpfslt	detect_color@dist_B& (0+255),b
  1787   000384  EFC6  F001         	goto	u3741
  1788   000388  EFC8  F001         	goto	u3740
  1789   00038C                     u3741:
  1790   00038C  EFCC  F001         	goto	l3951
  1791   000390                     u3740:
  1792   000390                     
  1793                           ; BSR set to: 0
  1794                           ;color.c: 111:             color = 1;
  1795   000390  0E01               	movlw	1
  1796   000392  6FD8               	movwf	detect_color@color& (0+255),b
  1797                           
  1798                           ;color.c: 112:         }
  1799   000394  EF38  F003         	goto	l42
  1800   000398                     l3951:
  1801                           
  1802                           ; BSR set to: 0
  1803   000398  0E23               	movlw	35
  1804   00039A  65D9               	cpfsgt	detect_color@dist_R& (0+255),b
  1805   00039C  EFD2  F001         	goto	u3751
  1806   0003A0  EFD4  F001         	goto	u3750
  1807   0003A4                     u3751:
  1808   0003A4  EF00  F002         	goto	l3965
  1809   0003A8                     u3750:
  1810   0003A8                     
  1811                           ; BSR set to: 0
  1812   0003A8  0E27               	movlw	39
  1813   0003AA  61D9               	cpfslt	detect_color@dist_R& (0+255),b
  1814   0003AC  EFDA  F001         	goto	u3761
  1815   0003B0  EFDC  F001         	goto	u3760
  1816   0003B4                     u3761:
  1817   0003B4  EF00  F002         	goto	l3965
  1818   0003B8                     u3760:
  1819   0003B8                     
  1820                           ; BSR set to: 0
  1821   0003B8  0E28               	movlw	40
  1822   0003BA  65DA               	cpfsgt	detect_color@dist_G& (0+255),b
  1823   0003BC  EFE2  F001         	goto	u3771
  1824   0003C0  EFE4  F001         	goto	u3770
  1825   0003C4                     u3771:
  1826   0003C4  EF00  F002         	goto	l3965
  1827   0003C8                     u3770:
  1828   0003C8                     
  1829                           ; BSR set to: 0
  1830   0003C8  0E2C               	movlw	44
  1831   0003CA  61DA               	cpfslt	detect_color@dist_G& (0+255),b
  1832   0003CC  EFEA  F001         	goto	u3781
  1833   0003D0  EFEC  F001         	goto	u3780
  1834   0003D4                     u3781:
  1835   0003D4  EF00  F002         	goto	l3965
  1836   0003D8                     u3780:
  1837   0003D8                     
  1838                           ; BSR set to: 0
  1839   0003D8  0E13               	movlw	19
  1840   0003DA  65DB               	cpfsgt	detect_color@dist_B& (0+255),b
  1841   0003DC  EFF2  F001         	goto	u3791
  1842   0003E0  EFF4  F001         	goto	u3790
  1843   0003E4                     u3791:
  1844   0003E4  EF00  F002         	goto	l3965
  1845   0003E8                     u3790:
  1846   0003E8                     
  1847                           ; BSR set to: 0
  1848   0003E8  0E17               	movlw	23
  1849   0003EA  61DB               	cpfslt	detect_color@dist_B& (0+255),b
  1850   0003EC  EFFA  F001         	goto	u3801
  1851   0003F0  EFFC  F001         	goto	u3800
  1852   0003F4                     u3801:
  1853   0003F4  EF00  F002         	goto	l3965
  1854   0003F8                     u3800:
  1855   0003F8                     
  1856                           ; BSR set to: 0
  1857                           ;color.c: 114:             color = 2;
  1858   0003F8  0E02               	movlw	2
  1859   0003FA  6FD8               	movwf	detect_color@color& (0+255),b
  1860                           
  1861                           ;color.c: 115:         }
  1862   0003FC  EF38  F003         	goto	l42
  1863   000400                     l3965:
  1864                           
  1865                           ; BSR set to: 0
  1866   000400  0E1C               	movlw	28
  1867   000402  65D9               	cpfsgt	detect_color@dist_R& (0+255),b
  1868   000404  EF06  F002         	goto	u3811
  1869   000408  EF08  F002         	goto	u3810
  1870   00040C                     u3811:
  1871   00040C  EF34  F002         	goto	l3979
  1872   000410                     u3810:
  1873   000410                     
  1874                           ; BSR set to: 0
  1875   000410  0E23               	movlw	35
  1876   000412  61D9               	cpfslt	detect_color@dist_R& (0+255),b
  1877   000414  EF0E  F002         	goto	u3821
  1878   000418  EF10  F002         	goto	u3820
  1879   00041C                     u3821:
  1880   00041C  EF34  F002         	goto	l3979
  1881   000420                     u3820:
  1882   000420                     
  1883                           ; BSR set to: 0
  1884   000420  0E1F               	movlw	31
  1885   000422  65DA               	cpfsgt	detect_color@dist_G& (0+255),b
  1886   000424  EF16  F002         	goto	u3831
  1887   000428  EF18  F002         	goto	u3830
  1888   00042C                     u3831:
  1889   00042C  EF34  F002         	goto	l3979
  1890   000430                     u3830:
  1891   000430                     
  1892                           ; BSR set to: 0
  1893   000430  0E27               	movlw	39
  1894   000432  61DA               	cpfslt	detect_color@dist_G& (0+255),b
  1895   000434  EF1E  F002         	goto	u3841
  1896   000438  EF20  F002         	goto	u3840
  1897   00043C                     u3841:
  1898   00043C  EF34  F002         	goto	l3979
  1899   000440                     u3840:
  1900   000440                     
  1901                           ; BSR set to: 0
  1902   000440  0E1E               	movlw	30
  1903   000442  65DB               	cpfsgt	detect_color@dist_B& (0+255),b
  1904   000444  EF26  F002         	goto	u3851
  1905   000448  EF28  F002         	goto	u3850
  1906   00044C                     u3851:
  1907   00044C  EF34  F002         	goto	l3979
  1908   000450                     u3850:
  1909   000450                     
  1910                           ; BSR set to: 0
  1911   000450  0E26               	movlw	38
  1912   000452  61DB               	cpfslt	detect_color@dist_B& (0+255),b
  1913   000454  EF2E  F002         	goto	u3861
  1914   000458  EF30  F002         	goto	u3860
  1915   00045C                     u3861:
  1916   00045C  EF34  F002         	goto	l3979
  1917   000460                     u3860:
  1918   000460                     
  1919                           ; BSR set to: 0
  1920                           ;color.c: 117:             color = 3;
  1921   000460  0E03               	movlw	3
  1922   000462  6FD8               	movwf	detect_color@color& (0+255),b
  1923                           
  1924                           ;color.c: 118:         }
  1925   000464  EF38  F003         	goto	l42
  1926   000468                     l3979:
  1927                           
  1928                           ; BSR set to: 0
  1929   000468  0E31               	movlw	49
  1930   00046A  65D9               	cpfsgt	detect_color@dist_R& (0+255),b
  1931   00046C  EF3A  F002         	goto	u3871
  1932   000470  EF3C  F002         	goto	u3870
  1933   000474                     u3871:
  1934   000474  EF68  F002         	goto	l3993
  1935   000478                     u3870:
  1936   000478                     
  1937                           ; BSR set to: 0
  1938   000478  0E35               	movlw	53
  1939   00047A  61D9               	cpfslt	detect_color@dist_R& (0+255),b
  1940   00047C  EF42  F002         	goto	u3881
  1941   000480  EF44  F002         	goto	u3880
  1942   000484                     u3881:
  1943   000484  EF68  F002         	goto	l3993
  1944   000488                     u3880:
  1945   000488                     
  1946                           ; BSR set to: 0
  1947   000488  0E1D               	movlw	29
  1948   00048A  65DA               	cpfsgt	detect_color@dist_G& (0+255),b
  1949   00048C  EF4A  F002         	goto	u3891
  1950   000490  EF4C  F002         	goto	u3890
  1951   000494                     u3891:
  1952   000494  EF68  F002         	goto	l3993
  1953   000498                     u3890:
  1954   000498                     
  1955                           ; BSR set to: 0
  1956   000498  0E21               	movlw	33
  1957   00049A  61DA               	cpfslt	detect_color@dist_G& (0+255),b
  1958   00049C  EF52  F002         	goto	u3901
  1959   0004A0  EF54  F002         	goto	u3900
  1960   0004A4                     u3901:
  1961   0004A4  EF68  F002         	goto	l3993
  1962   0004A8                     u3900:
  1963   0004A8                     
  1964                           ; BSR set to: 0
  1965   0004A8  0E10               	movlw	16
  1966   0004AA  65DB               	cpfsgt	detect_color@dist_B& (0+255),b
  1967   0004AC  EF5A  F002         	goto	u3911
  1968   0004B0  EF5C  F002         	goto	u3910
  1969   0004B4                     u3911:
  1970   0004B4  EF68  F002         	goto	l3993
  1971   0004B8                     u3910:
  1972   0004B8                     
  1973                           ; BSR set to: 0
  1974   0004B8  0E14               	movlw	20
  1975   0004BA  61DB               	cpfslt	detect_color@dist_B& (0+255),b
  1976   0004BC  EF62  F002         	goto	u3921
  1977   0004C0  EF64  F002         	goto	u3920
  1978   0004C4                     u3921:
  1979   0004C4  EF68  F002         	goto	l3993
  1980   0004C8                     u3920:
  1981   0004C8                     
  1982                           ; BSR set to: 0
  1983                           ;color.c: 120:             color = 4;
  1984   0004C8  0E04               	movlw	4
  1985   0004CA  6FD8               	movwf	detect_color@color& (0+255),b
  1986                           
  1987                           ;color.c: 121:         }
  1988   0004CC  EF38  F003         	goto	l42
  1989   0004D0                     l3993:
  1990                           
  1991                           ; BSR set to: 0
  1992   0004D0  0E2F               	movlw	47
  1993   0004D2  65D9               	cpfsgt	detect_color@dist_R& (0+255),b
  1994   0004D4  EF6E  F002         	goto	u3931
  1995   0004D8  EF70  F002         	goto	u3930
  1996   0004DC                     u3931:
  1997   0004DC  EF9C  F002         	goto	l4007
  1998   0004E0                     u3930:
  1999   0004E0                     
  2000                           ; BSR set to: 0
  2001   0004E0  0E33               	movlw	51
  2002   0004E2  61D9               	cpfslt	detect_color@dist_R& (0+255),b
  2003   0004E4  EF76  F002         	goto	u3941
  2004   0004E8  EF78  F002         	goto	u3940
  2005   0004EC                     u3941:
  2006   0004EC  EF9C  F002         	goto	l4007
  2007   0004F0                     u3940:
  2008   0004F0                     
  2009                           ; BSR set to: 0
  2010   0004F0  0E1B               	movlw	27
  2011   0004F2  65DA               	cpfsgt	detect_color@dist_G& (0+255),b
  2012   0004F4  EF7E  F002         	goto	u3951
  2013   0004F8  EF80  F002         	goto	u3950
  2014   0004FC                     u3951:
  2015   0004FC  EF9C  F002         	goto	l4007
  2016   000500                     u3950:
  2017   000500                     
  2018                           ; BSR set to: 0
  2019   000500  0E1F               	movlw	31
  2020   000502  61DA               	cpfslt	detect_color@dist_G& (0+255),b
  2021   000504  EF86  F002         	goto	u3961
  2022   000508  EF88  F002         	goto	u3960
  2023   00050C                     u3961:
  2024   00050C  EF9C  F002         	goto	l4007
  2025   000510                     u3960:
  2026   000510                     
  2027                           ; BSR set to: 0
  2028   000510  0E14               	movlw	20
  2029   000512  65DB               	cpfsgt	detect_color@dist_B& (0+255),b
  2030   000514  EF8E  F002         	goto	u3971
  2031   000518  EF90  F002         	goto	u3970
  2032   00051C                     u3971:
  2033   00051C  EF9C  F002         	goto	l4007
  2034   000520                     u3970:
  2035   000520                     
  2036                           ; BSR set to: 0
  2037   000520  0E18               	movlw	24
  2038   000522  61DB               	cpfslt	detect_color@dist_B& (0+255),b
  2039   000524  EF96  F002         	goto	u3981
  2040   000528  EF98  F002         	goto	u3980
  2041   00052C                     u3981:
  2042   00052C  EF9C  F002         	goto	l4007
  2043   000530                     u3980:
  2044   000530                     
  2045                           ; BSR set to: 0
  2046                           ;color.c: 123:             color = 5;
  2047   000530  0E05               	movlw	5
  2048   000532  6FD8               	movwf	detect_color@color& (0+255),b
  2049                           
  2050                           ;color.c: 124:         }
  2051   000534  EF38  F003         	goto	l42
  2052   000538                     l4007:
  2053                           
  2054                           ; BSR set to: 0
  2055   000538  0E3A               	movlw	58
  2056   00053A  65D9               	cpfsgt	detect_color@dist_R& (0+255),b
  2057   00053C  EFA2  F002         	goto	u3991
  2058   000540  EFA4  F002         	goto	u3990
  2059   000544                     u3991:
  2060   000544  EFD0  F002         	goto	l4021
  2061   000548                     u3990:
  2062   000548                     
  2063                           ; BSR set to: 0
  2064   000548  0E3E               	movlw	62
  2065   00054A  61D9               	cpfslt	detect_color@dist_R& (0+255),b
  2066   00054C  EFAA  F002         	goto	u4001
  2067   000550  EFAC  F002         	goto	u4000
  2068   000554                     u4001:
  2069   000554  EFD0  F002         	goto	l4021
  2070   000558                     u4000:
  2071   000558                     
  2072                           ; BSR set to: 0
  2073   000558  0E15               	movlw	21
  2074   00055A  65DA               	cpfsgt	detect_color@dist_G& (0+255),b
  2075   00055C  EFB2  F002         	goto	u4011
  2076   000560  EFB4  F002         	goto	u4010
  2077   000564                     u4011:
  2078   000564  EFD0  F002         	goto	l4021
  2079   000568                     u4010:
  2080   000568                     
  2081                           ; BSR set to: 0
  2082   000568  0E19               	movlw	25
  2083   00056A  61DA               	cpfslt	detect_color@dist_G& (0+255),b
  2084   00056C  EFBA  F002         	goto	u4021
  2085   000570  EFBC  F002         	goto	u4020
  2086   000574                     u4021:
  2087   000574  EFD0  F002         	goto	l4021
  2088   000578                     u4020:
  2089   000578                     
  2090                           ; BSR set to: 0
  2091   000578  0E0F               	movlw	15
  2092   00057A  65DB               	cpfsgt	detect_color@dist_B& (0+255),b
  2093   00057C  EFC2  F002         	goto	u4031
  2094   000580  EFC4  F002         	goto	u4030
  2095   000584                     u4031:
  2096   000584  EFD0  F002         	goto	l4021
  2097   000588                     u4030:
  2098   000588                     
  2099                           ; BSR set to: 0
  2100   000588  0E13               	movlw	19
  2101   00058A  61DB               	cpfslt	detect_color@dist_B& (0+255),b
  2102   00058C  EFCA  F002         	goto	u4041
  2103   000590  EFCC  F002         	goto	u4040
  2104   000594                     u4041:
  2105   000594  EFD0  F002         	goto	l4021
  2106   000598                     u4040:
  2107   000598                     
  2108                           ; BSR set to: 0
  2109                           ;color.c: 126:             color = 6;
  2110   000598  0E06               	movlw	6
  2111   00059A  6FD8               	movwf	detect_color@color& (0+255),b
  2112                           
  2113                           ;color.c: 127:         }
  2114   00059C  EF38  F003         	goto	l42
  2115   0005A0                     l4021:
  2116                           
  2117                           ; BSR set to: 0
  2118   0005A0  0E20               	movlw	32
  2119   0005A2  65D9               	cpfsgt	detect_color@dist_R& (0+255),b
  2120   0005A4  EFD6  F002         	goto	u4051
  2121   0005A8  EFD8  F002         	goto	u4050
  2122   0005AC                     u4051:
  2123   0005AC  EF04  F003         	goto	l4035
  2124   0005B0                     u4050:
  2125   0005B0                     
  2126                           ; BSR set to: 0
  2127   0005B0  0E24               	movlw	36
  2128   0005B2  61D9               	cpfslt	detect_color@dist_R& (0+255),b
  2129   0005B4  EFDE  F002         	goto	u4061
  2130   0005B8  EFE0  F002         	goto	u4060
  2131   0005BC                     u4061:
  2132   0005BC  EF04  F003         	goto	l4035
  2133   0005C0                     u4060:
  2134   0005C0                     
  2135                           ; BSR set to: 0
  2136   0005C0  0E25               	movlw	37
  2137   0005C2  65DA               	cpfsgt	detect_color@dist_G& (0+255),b
  2138   0005C4  EFE6  F002         	goto	u4071
  2139   0005C8  EFE8  F002         	goto	u4070
  2140   0005CC                     u4071:
  2141   0005CC  EF04  F003         	goto	l4035
  2142   0005D0                     u4070:
  2143   0005D0                     
  2144                           ; BSR set to: 0
  2145   0005D0  0E29               	movlw	41
  2146   0005D2  61DA               	cpfslt	detect_color@dist_G& (0+255),b
  2147   0005D4  EFEE  F002         	goto	u4081
  2148   0005D8  EFF0  F002         	goto	u4080
  2149   0005DC                     u4081:
  2150   0005DC  EF04  F003         	goto	l4035
  2151   0005E0                     u4080:
  2152   0005E0                     
  2153                           ; BSR set to: 0
  2154   0005E0  0E19               	movlw	25
  2155   0005E2  65DB               	cpfsgt	detect_color@dist_B& (0+255),b
  2156   0005E4  EFF6  F002         	goto	u4091
  2157   0005E8  EFF8  F002         	goto	u4090
  2158   0005EC                     u4091:
  2159   0005EC  EF04  F003         	goto	l4035
  2160   0005F0                     u4090:
  2161   0005F0                     
  2162                           ; BSR set to: 0
  2163   0005F0  0E1D               	movlw	29
  2164   0005F2  61DB               	cpfslt	detect_color@dist_B& (0+255),b
  2165   0005F4  EFFE  F002         	goto	u4101
  2166   0005F8  EF00  F003         	goto	u4100
  2167   0005FC                     u4101:
  2168   0005FC  EF04  F003         	goto	l4035
  2169   000600                     u4100:
  2170   000600                     
  2171                           ; BSR set to: 0
  2172                           ;color.c: 129:             color = 7;
  2173   000600  0E07               	movlw	7
  2174   000602  6FD8               	movwf	detect_color@color& (0+255),b
  2175                           
  2176                           ;color.c: 130:         }
  2177   000604  EF38  F003         	goto	l42
  2178   000608                     l4035:
  2179                           
  2180                           ; BSR set to: 0
  2181   000608  0E2A               	movlw	42
  2182   00060A  65D9               	cpfsgt	detect_color@dist_R& (0+255),b
  2183   00060C  EF0A  F003         	goto	u4111
  2184   000610  EF0C  F003         	goto	u4110
  2185   000614                     u4111:
  2186   000614  EF38  F003         	goto	l56
  2187   000618                     u4110:
  2188   000618                     
  2189                           ; BSR set to: 0
  2190   000618  0E2E               	movlw	46
  2191   00061A  61D9               	cpfslt	detect_color@dist_R& (0+255),b
  2192   00061C  EF12  F003         	goto	u4121
  2193   000620  EF14  F003         	goto	u4120
  2194   000624                     u4121:
  2195   000624  EF38  F003         	goto	l56
  2196   000628                     u4120:
  2197   000628                     
  2198                           ; BSR set to: 0
  2199   000628  0E1F               	movlw	31
  2200   00062A  65DA               	cpfsgt	detect_color@dist_G& (0+255),b
  2201   00062C  EF1A  F003         	goto	u4131
  2202   000630  EF1C  F003         	goto	u4130
  2203   000634                     u4131:
  2204   000634  EF38  F003         	goto	l56
  2205   000638                     u4130:
  2206   000638                     
  2207                           ; BSR set to: 0
  2208   000638  0E23               	movlw	35
  2209   00063A  61DA               	cpfslt	detect_color@dist_G& (0+255),b
  2210   00063C  EF22  F003         	goto	u4141
  2211   000640  EF24  F003         	goto	u4140
  2212   000644                     u4141:
  2213   000644  EF38  F003         	goto	l56
  2214   000648                     u4140:
  2215   000648                     
  2216                           ; BSR set to: 0
  2217   000648  0E15               	movlw	21
  2218   00064A  65DB               	cpfsgt	detect_color@dist_B& (0+255),b
  2219   00064C  EF2A  F003         	goto	u4151
  2220   000650  EF2C  F003         	goto	u4150
  2221   000654                     u4151:
  2222   000654  EF38  F003         	goto	l56
  2223   000658                     u4150:
  2224   000658                     
  2225                           ; BSR set to: 0
  2226   000658  0E19               	movlw	25
  2227   00065A  61DB               	cpfslt	detect_color@dist_B& (0+255),b
  2228   00065C  EF32  F003         	goto	u4161
  2229   000660  EF34  F003         	goto	u4160
  2230   000664                     u4161:
  2231   000664  EF38  F003         	goto	l56
  2232   000668                     u4160:
  2233   000668                     
  2234                           ; BSR set to: 0
  2235                           ;color.c: 132:             color = 8;
  2236   000668  0E08               	movlw	8
  2237   00066A  6FD8               	movwf	detect_color@color& (0+255),b
  2238                           
  2239                           ;color.c: 133:         }
  2240   00066C  EF38  F003         	goto	l42
  2241   000670                     l56:
  2242   000670                     l42:
  2243                           
  2244                           ; BSR set to: 0
  2245                           ;color.c: 138:     color_flag = 0;
  2246   000670  0E00               	movlw	0
  2247   000672  6E55               	movwf	_color_flag^0,c
  2248                           
  2249                           ;color.c: 139:     return color;
  2250   000674  51D8               	movf	detect_color@color& (0+255),w,b
  2251   000676                     
  2252                           ; BSR set to: 0
  2253   000676  0012               	return		;funcret
  2254   000678                     __end_of_detect_color:
  2255                           	callstack 0
  2256                           
  2257 ;; *************** function ___xxtofl *****************
  2258 ;; Defined at:
  2259 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  2260 ;; Parameters:    Size  Location     Type
  2261 ;;  sign            1    wreg     unsigned char 
  2262 ;;  val             4    8[COMRAM] long 
  2263 ;; Auto vars:     Size  Location     Type
  2264 ;;  sign            1   16[COMRAM] unsigned char 
  2265 ;;  arg             4   18[COMRAM] unsigned long 
  2266 ;;  exp             1   17[COMRAM] unsigned char 
  2267 ;; Return value:  Size  Location     Type
  2268 ;;                  4    8[COMRAM] unsigned char 
  2269 ;; Registers used:
  2270 ;;		wreg, status,2, status,0
  2271 ;; Tracked objects:
  2272 ;;		On entry : 0/0
  2273 ;;		On exit  : 0/0
  2274 ;;		Unchanged: 0/0
  2275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2276 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2277 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2278 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2279 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2280 ;;Total ram usage:       14 bytes
  2281 ;; Hardware stack levels used: 1
  2282 ;; Hardware stack levels required when called: 7
  2283 ;; This function calls:
  2284 ;;		Nothing
  2285 ;; This function is called by:
  2286 ;;		_detect_color
  2287 ;; This function uses a non-reentrant model
  2288 ;;
  2289                           
  2290                           	psect	text4
  2291   000E3C                     __ptext4:
  2292                           	callstack 0
  2293   000E3C                     ___xxtofl:
  2294                           	callstack 22
  2295                           
  2296                           ; BSR set to: 0
  2297                           ;incstack = 0
  2298                           ;___xxtofl@sign stored from wreg
  2299   000E3C  6E11               	movwf	___xxtofl@sign^0,c
  2300   000E3E  5011               	movf	___xxtofl@sign^0,w,c
  2301   000E40  B4D8               	btfsc	status,2,c
  2302   000E42  EF25  F007         	goto	u2741
  2303   000E46  EF27  F007         	goto	u2740
  2304   000E4A                     u2741:
  2305   000E4A  EF49  F007         	goto	l1319
  2306   000E4E                     u2740:
  2307   000E4E  BE0C               	btfsc	(___xxtofl@val+3)^0,7,c
  2308   000E50  EF2E  F007         	goto	u2750
  2309   000E54  EF2C  F007         	goto	u2751
  2310   000E58                     u2751:
  2311   000E58  EF49  F007         	goto	l1319
  2312   000E5C                     u2750:
  2313   000E5C  C009  F00D         	movff	___xxtofl@val,??___xxtofl
  2314   000E60  C00A  F00E         	movff	___xxtofl@val+1,??___xxtofl+1
  2315   000E64  C00B  F00F         	movff	___xxtofl@val+2,??___xxtofl+2
  2316   000E68  C00C  F010         	movff	___xxtofl@val+3,??___xxtofl+3
  2317   000E6C  1E0D               	comf	??___xxtofl^0,f,c
  2318   000E6E  1E0E               	comf	(??___xxtofl+1)^0,f,c
  2319   000E70  1E0F               	comf	(??___xxtofl+2)^0,f,c
  2320   000E72  1E10               	comf	(??___xxtofl+3)^0,f,c
  2321   000E74  2A0D               	incf	??___xxtofl^0,f,c
  2322   000E76  0E00               	movlw	0
  2323   000E78  220E               	addwfc	(??___xxtofl+1)^0,f,c
  2324   000E7A  220F               	addwfc	(??___xxtofl+2)^0,f,c
  2325   000E7C  2210               	addwfc	(??___xxtofl+3)^0,f,c
  2326   000E7E  C00D  F013         	movff	??___xxtofl,___xxtofl@arg
  2327   000E82  C00E  F014         	movff	??___xxtofl+1,___xxtofl@arg+1
  2328   000E86  C00F  F015         	movff	??___xxtofl+2,___xxtofl@arg+2
  2329   000E8A  C010  F016         	movff	??___xxtofl+3,___xxtofl@arg+3
  2330   000E8E  EF51  F007         	goto	l3359
  2331   000E92                     l1319:
  2332   000E92  C009  F013         	movff	___xxtofl@val,___xxtofl@arg
  2333   000E96  C00A  F014         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2334   000E9A  C00B  F015         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2335   000E9E  C00C  F016         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2336   000EA2                     l3359:
  2337   000EA2  5009               	movf	___xxtofl@val^0,w,c
  2338   000EA4  100A               	iorwf	(___xxtofl@val+1)^0,w,c
  2339   000EA6  100B               	iorwf	(___xxtofl@val+2)^0,w,c
  2340   000EA8  100C               	iorwf	(___xxtofl@val+3)^0,w,c
  2341   000EAA  A4D8               	btfss	status,2,c
  2342   000EAC  EF5A  F007         	goto	u2761
  2343   000EB0  EF5C  F007         	goto	u2760
  2344   000EB4                     u2761:
  2345   000EB4  EF66  F007         	goto	l3365
  2346   000EB8                     u2760:
  2347   000EB8  0E00               	movlw	0
  2348   000EBA  6E09               	movwf	?___xxtofl^0,c
  2349   000EBC  0E00               	movlw	0
  2350   000EBE  6E0A               	movwf	(?___xxtofl+1)^0,c
  2351   000EC0  0E00               	movlw	0
  2352   000EC2  6E0B               	movwf	(?___xxtofl+2)^0,c
  2353   000EC4  0E00               	movlw	0
  2354   000EC6  6E0C               	movwf	(?___xxtofl+3)^0,c
  2355   000EC8  EFF7  F007         	goto	l1322
  2356   000ECC                     l3365:
  2357   000ECC  0E96               	movlw	150
  2358   000ECE  6E12               	movwf	___xxtofl@exp^0,c
  2359   000ED0  EF70  F007         	goto	l3369
  2360   000ED4                     l3367:
  2361   000ED4  2A12               	incf	___xxtofl@exp^0,f,c
  2362   000ED6  90D8               	bcf	status,0,c
  2363   000ED8  3216               	rrcf	(___xxtofl@arg+3)^0,f,c
  2364   000EDA  3215               	rrcf	(___xxtofl@arg+2)^0,f,c
  2365   000EDC  3214               	rrcf	(___xxtofl@arg+1)^0,f,c
  2366   000EDE  3213               	rrcf	___xxtofl@arg^0,f,c
  2367   000EE0                     l3369:
  2368   000EE0  0E00               	movlw	0
  2369   000EE2  1413               	andwf	___xxtofl@arg^0,w,c
  2370   000EE4  6E0D               	movwf	??___xxtofl^0,c
  2371   000EE6  0E00               	movlw	0
  2372   000EE8  1414               	andwf	(___xxtofl@arg+1)^0,w,c
  2373   000EEA  6E0E               	movwf	(??___xxtofl+1)^0,c
  2374   000EEC  0E00               	movlw	0
  2375   000EEE  1415               	andwf	(___xxtofl@arg+2)^0,w,c
  2376   000EF0  6E0F               	movwf	(??___xxtofl+2)^0,c
  2377   000EF2  0EFE               	movlw	254
  2378   000EF4  1416               	andwf	(___xxtofl@arg+3)^0,w,c
  2379   000EF6  6E10               	movwf	(??___xxtofl+3)^0,c
  2380   000EF8  500D               	movf	??___xxtofl^0,w,c
  2381   000EFA  100E               	iorwf	(??___xxtofl+1)^0,w,c
  2382   000EFC  100F               	iorwf	(??___xxtofl+2)^0,w,c
  2383   000EFE  1010               	iorwf	(??___xxtofl+3)^0,w,c
  2384   000F00  A4D8               	btfss	status,2,c
  2385   000F02  EF85  F007         	goto	u2771
  2386   000F06  EF87  F007         	goto	u2770
  2387   000F0A                     u2771:
  2388   000F0A  EF6A  F007         	goto	l3367
  2389   000F0E                     u2770:
  2390   000F0E  EF95  F007         	goto	l1326
  2391   000F12                     l3371:
  2392   000F12  2A12               	incf	___xxtofl@exp^0,f,c
  2393   000F14  0E01               	movlw	1
  2394   000F16  2613               	addwf	___xxtofl@arg^0,f,c
  2395   000F18  0E00               	movlw	0
  2396   000F1A  2214               	addwfc	(___xxtofl@arg+1)^0,f,c
  2397   000F1C  2215               	addwfc	(___xxtofl@arg+2)^0,f,c
  2398   000F1E  2216               	addwfc	(___xxtofl@arg+3)^0,f,c
  2399   000F20  90D8               	bcf	status,0,c
  2400   000F22  3216               	rrcf	(___xxtofl@arg+3)^0,f,c
  2401   000F24  3215               	rrcf	(___xxtofl@arg+2)^0,f,c
  2402   000F26  3214               	rrcf	(___xxtofl@arg+1)^0,f,c
  2403   000F28  3213               	rrcf	___xxtofl@arg^0,f,c
  2404   000F2A                     l1326:
  2405   000F2A  0E00               	movlw	0
  2406   000F2C  1413               	andwf	___xxtofl@arg^0,w,c
  2407   000F2E  6E0D               	movwf	??___xxtofl^0,c
  2408   000F30  0E00               	movlw	0
  2409   000F32  1414               	andwf	(___xxtofl@arg+1)^0,w,c
  2410   000F34  6E0E               	movwf	(??___xxtofl+1)^0,c
  2411   000F36  0E00               	movlw	0
  2412   000F38  1415               	andwf	(___xxtofl@arg+2)^0,w,c
  2413   000F3A  6E0F               	movwf	(??___xxtofl+2)^0,c
  2414   000F3C  0EFF               	movlw	255
  2415   000F3E  1416               	andwf	(___xxtofl@arg+3)^0,w,c
  2416   000F40  6E10               	movwf	(??___xxtofl+3)^0,c
  2417   000F42  500D               	movf	??___xxtofl^0,w,c
  2418   000F44  100E               	iorwf	(??___xxtofl+1)^0,w,c
  2419   000F46  100F               	iorwf	(??___xxtofl+2)^0,w,c
  2420   000F48  1010               	iorwf	(??___xxtofl+3)^0,w,c
  2421   000F4A  A4D8               	btfss	status,2,c
  2422   000F4C  EFAA  F007         	goto	u2781
  2423   000F50  EFAC  F007         	goto	u2780
  2424   000F54                     u2781:
  2425   000F54  EF89  F007         	goto	l3371
  2426   000F58                     u2780:
  2427   000F58  EFB4  F007         	goto	l3379
  2428   000F5C                     l3377:
  2429   000F5C  0612               	decf	___xxtofl@exp^0,f,c
  2430   000F5E  90D8               	bcf	status,0,c
  2431   000F60  3613               	rlcf	___xxtofl@arg^0,f,c
  2432   000F62  3614               	rlcf	(___xxtofl@arg+1)^0,f,c
  2433   000F64  3615               	rlcf	(___xxtofl@arg+2)^0,f,c
  2434   000F66  3616               	rlcf	(___xxtofl@arg+3)^0,f,c
  2435   000F68                     l3379:
  2436   000F68  BE15               	btfsc	(___xxtofl@arg+2)^0,7,c
  2437   000F6A  EFB9  F007         	goto	u2791
  2438   000F6E  EFBB  F007         	goto	u2790
  2439   000F72                     u2791:
  2440   000F72  EFC3  F007         	goto	l1333
  2441   000F76                     u2790:
  2442   000F76  0E02               	movlw	2
  2443   000F78  6012               	cpfslt	___xxtofl@exp^0,c
  2444   000F7A  EFC1  F007         	goto	u2801
  2445   000F7E  EFC3  F007         	goto	u2800
  2446   000F82                     u2801:
  2447   000F82  EFAE  F007         	goto	l3377
  2448   000F86                     u2800:
  2449   000F86                     l1333:
  2450   000F86  B012               	btfsc	___xxtofl@exp^0,0,c
  2451   000F88  EFC8  F007         	goto	u2811
  2452   000F8C  EFCA  F007         	goto	u2810
  2453   000F90                     u2811:
  2454   000F90  EFCB  F007         	goto	l3385
  2455   000F94                     u2810:
  2456   000F94  9E15               	bcf	(___xxtofl@arg+2)^0,7,c
  2457   000F96                     l3385:
  2458   000F96  90D8               	bcf	status,0,c
  2459   000F98  3212               	rrcf	___xxtofl@exp^0,f,c
  2460   000F9A  C012  F00D         	movff	___xxtofl@exp,??___xxtofl
  2461   000F9E  6A0E               	clrf	(??___xxtofl+1)^0,c
  2462   000FA0  6A0F               	clrf	(??___xxtofl+2)^0,c
  2463   000FA2  6A10               	clrf	(??___xxtofl+3)^0,c
  2464   000FA4  C00D  F010         	movff	??___xxtofl,??___xxtofl+3
  2465   000FA8  6A0F               	clrf	(??___xxtofl+2)^0,c
  2466   000FAA  6A0E               	clrf	(??___xxtofl+1)^0,c
  2467   000FAC  6A0D               	clrf	??___xxtofl^0,c
  2468   000FAE  500D               	movf	??___xxtofl^0,w,c
  2469   000FB0  1213               	iorwf	___xxtofl@arg^0,f,c
  2470   000FB2  500E               	movf	(??___xxtofl+1)^0,w,c
  2471   000FB4  1214               	iorwf	(___xxtofl@arg+1)^0,f,c
  2472   000FB6  500F               	movf	(??___xxtofl+2)^0,w,c
  2473   000FB8  1215               	iorwf	(___xxtofl@arg+2)^0,f,c
  2474   000FBA  5010               	movf	(??___xxtofl+3)^0,w,c
  2475   000FBC  1216               	iorwf	(___xxtofl@arg+3)^0,f,c
  2476   000FBE  5011               	movf	___xxtofl@sign^0,w,c
  2477   000FC0  B4D8               	btfsc	status,2,c
  2478   000FC2  EFE5  F007         	goto	u2821
  2479   000FC6  EFE7  F007         	goto	u2820
  2480   000FCA                     u2821:
  2481   000FCA  EFEF  F007         	goto	l3395
  2482   000FCE                     u2820:
  2483   000FCE  BE0C               	btfsc	(___xxtofl@val+3)^0,7,c
  2484   000FD0  EFEE  F007         	goto	u2830
  2485   000FD4  EFEC  F007         	goto	u2831
  2486   000FD8                     u2831:
  2487   000FD8  EFEF  F007         	goto	l3395
  2488   000FDC                     u2830:
  2489   000FDC  8E16               	bsf	(___xxtofl@arg+3)^0,7,c
  2490   000FDE                     l3395:
  2491   000FDE  C013  F009         	movff	___xxtofl@arg,?___xxtofl
  2492   000FE2  C014  F00A         	movff	___xxtofl@arg+1,?___xxtofl+1
  2493   000FE6  C015  F00B         	movff	___xxtofl@arg+2,?___xxtofl+2
  2494   000FEA  C016  F00C         	movff	___xxtofl@arg+3,?___xxtofl+3
  2495   000FEE                     l1322:
  2496   000FEE  0012               	return		;funcret
  2497   000FF0                     __end_of___xxtofl:
  2498                           	callstack 0
  2499                           
  2500 ;; *************** function ___fltol *****************
  2501 ;; Defined at:
  2502 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fltol.c"
  2503 ;; Parameters:    Size  Location     Type
  2504 ;;  f1              4   72[COMRAM] unsigned char 
  2505 ;; Auto vars:     Size  Location     Type
  2506 ;;  exp1            1   77[COMRAM] unsigned char 
  2507 ;;  sign1           1   76[COMRAM] unsigned char 
  2508 ;; Return value:  Size  Location     Type
  2509 ;;                  4   72[COMRAM] long 
  2510 ;; Registers used:
  2511 ;;		wreg, status,2, status,0
  2512 ;; Tracked objects:
  2513 ;;		On entry : 0/0
  2514 ;;		On exit  : 0/0
  2515 ;;		Unchanged: 0/0
  2516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2517 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2518 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2519 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2520 ;;      Totals:         6       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2521 ;;Total ram usage:       10 bytes
  2522 ;; Hardware stack levels used: 1
  2523 ;; Hardware stack levels required when called: 7
  2524 ;; This function calls:
  2525 ;;		Nothing
  2526 ;; This function is called by:
  2527 ;;		_detect_color
  2528 ;; This function uses a non-reentrant model
  2529 ;;
  2530                           
  2531                           	psect	text5
  2532   001470                     __ptext5:
  2533                           	callstack 0
  2534   001470                     ___fltol:
  2535                           	callstack 22
  2536   001470  344B               	rlcf	(___fltol@f1+2)^0,w,c
  2537   001472  344C               	rlcf	(___fltol@f1+3)^0,w,c
  2538   001474  6E4E               	movwf	___fltol@exp1^0,c
  2539   001476  504E               	movf	___fltol@exp1^0,w,c
  2540   001478  A4D8               	btfss	status,2,c
  2541   00147A  EF41  F00A         	goto	u3611
  2542   00147E  EF43  F00A         	goto	u3610
  2543   001482                     u3611:
  2544   001482  EF4D  F00A         	goto	l3889
  2545   001486                     u3610:
  2546   001486                     l3885:
  2547   001486  0E00               	movlw	0
  2548   001488  6E49               	movwf	?___fltol^0,c
  2549   00148A  0E00               	movlw	0
  2550   00148C  6E4A               	movwf	(?___fltol+1)^0,c
  2551   00148E  0E00               	movlw	0
  2552   001490  6E4B               	movwf	(?___fltol+2)^0,c
  2553   001492  0E00               	movlw	0
  2554   001494  6E4C               	movwf	(?___fltol+3)^0,c
  2555   001496  EFBB  F00A         	goto	l961
  2556   00149A                     l3889:
  2557   00149A  C049  F0C6         	movff	___fltol@f1,??___fltol
  2558   00149E  C04A  F0C7         	movff	___fltol@f1+1,??___fltol+1
  2559   0014A2  C04B  F0C8         	movff	___fltol@f1+2,??___fltol+2
  2560   0014A6  C04C  F0C9         	movff	___fltol@f1+3,??___fltol+3
  2561   0014AA  0E20               	movlw	32
  2562   0014AC  EF5E  F00A         	goto	u3620
  2563   0014B0                     u3625:
  2564   0014B0  0100               	movlb	0	; () banked
  2565   0014B2  90D8               	bcf	status,0,c
  2566   0014B4  33C9               	rrcf	(??___fltol+3)& (0+255),f,b
  2567   0014B6  33C8               	rrcf	(??___fltol+2)& (0+255),f,b
  2568   0014B8  33C7               	rrcf	(??___fltol+1)& (0+255),f,b
  2569   0014BA  33C6               	rrcf	??___fltol& (0+255),f,b
  2570   0014BC                     u3620:
  2571   0014BC  2EE8               	decfsz	wreg,f,c
  2572   0014BE  EF58  F00A         	goto	u3625
  2573   0014C2  51C6               	movf	??___fltol& (0+255),w,b
  2574   0014C4  6E4D               	movwf	___fltol@sign1^0,c
  2575   0014C6                     
  2576                           ; BSR set to: 0
  2577   0014C6  8E4B               	bsf	(___fltol@f1+2)^0,7,c
  2578   0014C8                     
  2579                           ; BSR set to: 0
  2580   0014C8  0EFF               	movlw	255
  2581   0014CA  1649               	andwf	___fltol@f1^0,f,c
  2582   0014CC  0EFF               	movlw	255
  2583   0014CE  164A               	andwf	(___fltol@f1+1)^0,f,c
  2584   0014D0  0EFF               	movlw	255
  2585   0014D2  164B               	andwf	(___fltol@f1+2)^0,f,c
  2586   0014D4  0E00               	movlw	0
  2587   0014D6  164C               	andwf	(___fltol@f1+3)^0,f,c
  2588   0014D8                     
  2589                           ; BSR set to: 0
  2590   0014D8  0E96               	movlw	150
  2591   0014DA  5E4E               	subwf	___fltol@exp1^0,f,c
  2592   0014DC                     
  2593                           ; BSR set to: 0
  2594   0014DC  BE4E               	btfsc	___fltol@exp1^0,7,c
  2595   0014DE  EF75  F00A         	goto	u3630
  2596   0014E2  EF73  F00A         	goto	u3631
  2597   0014E6                     u3631:
  2598   0014E6  EF8B  F00A         	goto	l3909
  2599   0014EA                     u3630:
  2600   0014EA                     
  2601                           ; BSR set to: 0
  2602   0014EA  504E               	movf	___fltol@exp1^0,w,c
  2603   0014EC  0A80               	xorlw	128
  2604   0014EE  0F97               	addlw	151
  2605   0014F0  B0D8               	btfsc	status,0,c
  2606   0014F2  EF7D  F00A         	goto	u3641
  2607   0014F6  EF7F  F00A         	goto	u3640
  2608   0014FA                     u3641:
  2609   0014FA  EF81  F00A         	goto	l3905
  2610   0014FE                     u3640:
  2611   0014FE  EF43  F00A         	goto	l3885
  2612   001502                     l3905:
  2613   001502  90D8               	bcf	status,0,c
  2614   001504  324C               	rrcf	(___fltol@f1+3)^0,f,c
  2615   001506  324B               	rrcf	(___fltol@f1+2)^0,f,c
  2616   001508  324A               	rrcf	(___fltol@f1+1)^0,f,c
  2617   00150A  3249               	rrcf	___fltol@f1^0,f,c
  2618   00150C  3E4E               	incfsz	___fltol@exp1^0,f,c
  2619   00150E  EF81  F00A         	goto	l3905
  2620   001512  EFA3  F00A         	goto	l3919
  2621   001516                     l3909:
  2622                           
  2623                           ; BSR set to: 0
  2624   001516  0E1F               	movlw	31
  2625   001518  644E               	cpfsgt	___fltol@exp1^0,c
  2626   00151A  EF91  F00A         	goto	u3651
  2627   00151E  EF93  F00A         	goto	u3650
  2628   001522                     u3651:
  2629   001522  EF9B  F00A         	goto	l3917
  2630   001526                     u3650:
  2631   001526  EF43  F00A         	goto	l3885
  2632   00152A                     l3915:
  2633   00152A  90D8               	bcf	status,0,c
  2634   00152C  3649               	rlcf	___fltol@f1^0,f,c
  2635   00152E  364A               	rlcf	(___fltol@f1+1)^0,f,c
  2636   001530  364B               	rlcf	(___fltol@f1+2)^0,f,c
  2637   001532  364C               	rlcf	(___fltol@f1+3)^0,f,c
  2638   001534  064E               	decf	___fltol@exp1^0,f,c
  2639   001536                     l3917:
  2640   001536  504E               	movf	___fltol@exp1^0,w,c
  2641   001538  A4D8               	btfss	status,2,c
  2642   00153A  EFA1  F00A         	goto	u3661
  2643   00153E  EFA3  F00A         	goto	u3660
  2644   001542                     u3661:
  2645   001542  EF95  F00A         	goto	l3915
  2646   001546                     u3660:
  2647   001546                     l3919:
  2648   001546  504D               	movf	___fltol@sign1^0,w,c
  2649   001548  B4D8               	btfsc	status,2,c
  2650   00154A  EFA9  F00A         	goto	u3671
  2651   00154E  EFAB  F00A         	goto	u3670
  2652   001552                     u3671:
  2653   001552  EFB3  F00A         	goto	l3923
  2654   001556                     u3670:
  2655   001556  1E4C               	comf	(___fltol@f1+3)^0,f,c
  2656   001558  1E4B               	comf	(___fltol@f1+2)^0,f,c
  2657   00155A  1E4A               	comf	(___fltol@f1+1)^0,f,c
  2658   00155C  6C49               	negf	___fltol@f1^0,c
  2659   00155E  0E00               	movlw	0
  2660   001560  224A               	addwfc	(___fltol@f1+1)^0,f,c
  2661   001562  224B               	addwfc	(___fltol@f1+2)^0,f,c
  2662   001564  224C               	addwfc	(___fltol@f1+3)^0,f,c
  2663   001566                     l3923:
  2664   001566  C049  F049         	movff	___fltol@f1,?___fltol
  2665   00156A  C04A  F04A         	movff	___fltol@f1+1,?___fltol+1
  2666   00156E  C04B  F04B         	movff	___fltol@f1+2,?___fltol+2
  2667   001572  C04C  F04C         	movff	___fltol@f1+3,?___fltol+3
  2668   001576                     l961:
  2669   001576  0012               	return		;funcret
  2670   001578                     __end_of___fltol:
  2671                           	callstack 0
  2672                           
  2673 ;; *************** function ___flmul *****************
  2674 ;; Defined at:
  2675 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcmul.c"
  2676 ;; Parameters:    Size  Location     Type
  2677 ;;  b               4   47[COMRAM] long 
  2678 ;;  a               4   51[COMRAM] long 
  2679 ;; Auto vars:     Size  Location     Type
  2680 ;;  prod            4   66[COMRAM] struct .
  2681 ;;  grs             4   60[COMRAM] unsigned long 
  2682 ;;  temp            2   70[COMRAM] struct .
  2683 ;;  bexp            1   65[COMRAM] unsigned char 
  2684 ;;  aexp            1   64[COMRAM] unsigned char 
  2685 ;;  sign            1   59[COMRAM] unsigned char 
  2686 ;; Return value:  Size  Location     Type
  2687 ;;                  4   47[COMRAM] unsigned char 
  2688 ;; Registers used:
  2689 ;;		wreg, status,2, status,0, prodl, prodh
  2690 ;; Tracked objects:
  2691 ;;		On entry : 0/0
  2692 ;;		On exit  : 0/0
  2693 ;;		Unchanged: 0/0
  2694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2695 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2696 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2697 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2698 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2699 ;;Total ram usage:       25 bytes
  2700 ;; Hardware stack levels used: 1
  2701 ;; Hardware stack levels required when called: 7
  2702 ;; This function calls:
  2703 ;;		Nothing
  2704 ;; This function is called by:
  2705 ;;		_detect_color
  2706 ;; This function uses a non-reentrant model
  2707 ;;
  2708                           
  2709                           	psect	text6
  2710   000678                     __ptext6:
  2711                           	callstack 0
  2712   000678                     ___flmul:
  2713                           	callstack 22
  2714   000678  5033               	movf	(___flmul@b+3)^0,w,c
  2715   00067A  0B80               	andlw	128
  2716   00067C  6E3C               	movwf	___flmul@sign^0,c
  2717   00067E  5033               	movf	(___flmul@b+3)^0,w,c
  2718   000680  2433               	addwf	(___flmul@b+3)^0,w,c
  2719   000682  6E42               	movwf	___flmul@bexp^0,c
  2720   000684  AE32               	btfss	(___flmul@b+2)^0,7,c
  2721   000686  EF47  F003         	goto	u2481
  2722   00068A  EF49  F003         	goto	u2480
  2723   00068E                     u2481:
  2724   00068E  EF4A  F003         	goto	l3185
  2725   000692                     u2480:
  2726   000692  8042               	bsf	___flmul@bexp^0,0,c
  2727   000694                     l3185:
  2728   000694  5042               	movf	___flmul@bexp^0,w,c
  2729   000696  B4D8               	btfsc	status,2,c
  2730   000698  EF50  F003         	goto	u2491
  2731   00069C  EF52  F003         	goto	u2490
  2732   0006A0                     u2491:
  2733   0006A0  EF65  F003         	goto	l3193
  2734   0006A4                     u2490:
  2735   0006A4  2842               	incf	___flmul@bexp^0,w,c
  2736   0006A6  A4D8               	btfss	status,2,c
  2737   0006A8  EF58  F003         	goto	u2501
  2738   0006AC  EF5A  F003         	goto	u2500
  2739   0006B0                     u2501:
  2740   0006B0  EF62  F003         	goto	l3191
  2741   0006B4                     u2500:
  2742   0006B4  0E00               	movlw	0
  2743   0006B6  6E30               	movwf	___flmul@b^0,c
  2744   0006B8  0E00               	movlw	0
  2745   0006BA  6E31               	movwf	(___flmul@b+1)^0,c
  2746   0006BC  0E00               	movlw	0
  2747   0006BE  6E32               	movwf	(___flmul@b+2)^0,c
  2748   0006C0  0E00               	movlw	0
  2749   0006C2  6E33               	movwf	(___flmul@b+3)^0,c
  2750   0006C4                     l3191:
  2751   0006C4  8E32               	bsf	(___flmul@b+2)^0,7,c
  2752   0006C6  EF6D  F003         	goto	l3195
  2753   0006CA                     l3193:
  2754   0006CA  0E00               	movlw	0
  2755   0006CC  6E30               	movwf	___flmul@b^0,c
  2756   0006CE  0E00               	movlw	0
  2757   0006D0  6E31               	movwf	(___flmul@b+1)^0,c
  2758   0006D2  0E00               	movlw	0
  2759   0006D4  6E32               	movwf	(___flmul@b+2)^0,c
  2760   0006D6  0E00               	movlw	0
  2761   0006D8  6E33               	movwf	(___flmul@b+3)^0,c
  2762   0006DA                     l3195:
  2763   0006DA  5037               	movf	(___flmul@a+3)^0,w,c
  2764   0006DC  0B80               	andlw	128
  2765   0006DE  1A3C               	xorwf	___flmul@sign^0,f,c
  2766   0006E0  5037               	movf	(___flmul@a+3)^0,w,c
  2767   0006E2  2437               	addwf	(___flmul@a+3)^0,w,c
  2768   0006E4  6E41               	movwf	___flmul@aexp^0,c
  2769   0006E6  AE36               	btfss	(___flmul@a+2)^0,7,c
  2770   0006E8  EF78  F003         	goto	u2511
  2771   0006EC  EF7A  F003         	goto	u2510
  2772   0006F0                     u2511:
  2773   0006F0  EF7B  F003         	goto	l3203
  2774   0006F4                     u2510:
  2775   0006F4  8041               	bsf	___flmul@aexp^0,0,c
  2776   0006F6                     l3203:
  2777   0006F6  5041               	movf	___flmul@aexp^0,w,c
  2778   0006F8  B4D8               	btfsc	status,2,c
  2779   0006FA  EF81  F003         	goto	u2521
  2780   0006FE  EF83  F003         	goto	u2520
  2781   000702                     u2521:
  2782   000702  EF96  F003         	goto	l3211
  2783   000706                     u2520:
  2784   000706  2841               	incf	___flmul@aexp^0,w,c
  2785   000708  A4D8               	btfss	status,2,c
  2786   00070A  EF89  F003         	goto	u2531
  2787   00070E  EF8B  F003         	goto	u2530
  2788   000712                     u2531:
  2789   000712  EF93  F003         	goto	l3209
  2790   000716                     u2530:
  2791   000716  0E00               	movlw	0
  2792   000718  6E34               	movwf	___flmul@a^0,c
  2793   00071A  0E00               	movlw	0
  2794   00071C  6E35               	movwf	(___flmul@a+1)^0,c
  2795   00071E  0E00               	movlw	0
  2796   000720  6E36               	movwf	(___flmul@a+2)^0,c
  2797   000722  0E00               	movlw	0
  2798   000724  6E37               	movwf	(___flmul@a+3)^0,c
  2799   000726                     l3209:
  2800   000726  8E36               	bsf	(___flmul@a+2)^0,7,c
  2801   000728  EF9E  F003         	goto	l1278
  2802   00072C                     l3211:
  2803   00072C  0E00               	movlw	0
  2804   00072E  6E34               	movwf	___flmul@a^0,c
  2805   000730  0E00               	movlw	0
  2806   000732  6E35               	movwf	(___flmul@a+1)^0,c
  2807   000734  0E00               	movlw	0
  2808   000736  6E36               	movwf	(___flmul@a+2)^0,c
  2809   000738  0E00               	movlw	0
  2810   00073A  6E37               	movwf	(___flmul@a+3)^0,c
  2811   00073C                     l1278:
  2812   00073C  5041               	movf	___flmul@aexp^0,w,c
  2813   00073E  B4D8               	btfsc	status,2,c
  2814   000740  EFA4  F003         	goto	u2541
  2815   000744  EFA6  F003         	goto	u2540
  2816   000748                     u2541:
  2817   000748  EFAE  F003         	goto	l3215
  2818   00074C                     u2540:
  2819   00074C  5042               	movf	___flmul@bexp^0,w,c
  2820   00074E  A4D8               	btfss	status,2,c
  2821   000750  EFAC  F003         	goto	u2551
  2822   000754  EFAE  F003         	goto	u2550
  2823   000758                     u2551:
  2824   000758  EFB8  F003         	goto	l3219
  2825   00075C                     u2550:
  2826   00075C                     l3215:
  2827   00075C  0E00               	movlw	0
  2828   00075E  6E30               	movwf	?___flmul^0,c
  2829   000760  0E00               	movlw	0
  2830   000762  6E31               	movwf	(?___flmul+1)^0,c
  2831   000764  0E00               	movlw	0
  2832   000766  6E32               	movwf	(?___flmul+2)^0,c
  2833   000768  0E00               	movlw	0
  2834   00076A  6E33               	movwf	(?___flmul+3)^0,c
  2835   00076C  EF50  F005         	goto	l1282
  2836   000770                     l3219:
  2837   000770  5036               	movf	(___flmul@a+2)^0,w,c
  2838   000772  0230               	mulwf	___flmul@b^0,c
  2839   000774  CFF3 F047          	movff	prodl,___flmul@temp
  2840   000778  CFF4 F048          	movff	prodh,___flmul@temp+1
  2841   00077C  5047               	movf	___flmul@temp^0,w,c
  2842   00077E  6E3D               	movwf	___flmul@grs^0,c
  2843   000780  6A3E               	clrf	(___flmul@grs+1)^0,c
  2844   000782  6A3F               	clrf	(___flmul@grs+2)^0,c
  2845   000784  6A40               	clrf	(___flmul@grs+3)^0,c
  2846   000786  5048               	movf	(___flmul@temp+1)^0,w,c
  2847   000788  6E43               	movwf	___flmul@prod^0,c
  2848   00078A  6A44               	clrf	(___flmul@prod+1)^0,c
  2849   00078C  6A45               	clrf	(___flmul@prod+2)^0,c
  2850   00078E  6A46               	clrf	(___flmul@prod+3)^0,c
  2851   000790  5035               	movf	(___flmul@a+1)^0,w,c
  2852   000792  0231               	mulwf	(___flmul@b+1)^0,c
  2853   000794  CFF3 F047          	movff	prodl,___flmul@temp
  2854   000798  CFF4 F048          	movff	prodh,___flmul@temp+1
  2855   00079C  5047               	movf	___flmul@temp^0,w,c
  2856   00079E  263D               	addwf	___flmul@grs^0,f,c
  2857   0007A0  0E00               	movlw	0
  2858   0007A2  223E               	addwfc	(___flmul@grs+1)^0,f,c
  2859   0007A4  223F               	addwfc	(___flmul@grs+2)^0,f,c
  2860   0007A6  2240               	addwfc	(___flmul@grs+3)^0,f,c
  2861   0007A8  5048               	movf	(___flmul@temp+1)^0,w,c
  2862   0007AA  2643               	addwf	___flmul@prod^0,f,c
  2863   0007AC  0E00               	movlw	0
  2864   0007AE  2244               	addwfc	(___flmul@prod+1)^0,f,c
  2865   0007B0  2245               	addwfc	(___flmul@prod+2)^0,f,c
  2866   0007B2  2246               	addwfc	(___flmul@prod+3)^0,f,c
  2867   0007B4  5034               	movf	___flmul@a^0,w,c
  2868   0007B6  0232               	mulwf	(___flmul@b+2)^0,c
  2869   0007B8  CFF3 F047          	movff	prodl,___flmul@temp
  2870   0007BC  CFF4 F048          	movff	prodh,___flmul@temp+1
  2871   0007C0  5047               	movf	___flmul@temp^0,w,c
  2872   0007C2  263D               	addwf	___flmul@grs^0,f,c
  2873   0007C4  0E00               	movlw	0
  2874   0007C6  223E               	addwfc	(___flmul@grs+1)^0,f,c
  2875   0007C8  223F               	addwfc	(___flmul@grs+2)^0,f,c
  2876   0007CA  2240               	addwfc	(___flmul@grs+3)^0,f,c
  2877   0007CC  5048               	movf	(___flmul@temp+1)^0,w,c
  2878   0007CE  2643               	addwf	___flmul@prod^0,f,c
  2879   0007D0  0E00               	movlw	0
  2880   0007D2  2244               	addwfc	(___flmul@prod+1)^0,f,c
  2881   0007D4  2245               	addwfc	(___flmul@prod+2)^0,f,c
  2882   0007D6  2246               	addwfc	(___flmul@prod+3)^0,f,c
  2883   0007D8  C03F  F040         	movff	___flmul@grs+2,___flmul@grs+3
  2884   0007DC  C03E  F03F         	movff	___flmul@grs+1,___flmul@grs+2
  2885   0007E0  C03D  F03E         	movff	___flmul@grs,___flmul@grs+1
  2886   0007E4  6A3D               	clrf	___flmul@grs^0,c
  2887   0007E6  5034               	movf	___flmul@a^0,w,c
  2888   0007E8  0231               	mulwf	(___flmul@b+1)^0,c
  2889   0007EA  CFF3 F047          	movff	prodl,___flmul@temp
  2890   0007EE  CFF4 F048          	movff	prodh,___flmul@temp+1
  2891   0007F2  5047               	movf	___flmul@temp^0,w,c
  2892   0007F4  263D               	addwf	___flmul@grs^0,f,c
  2893   0007F6  5048               	movf	(___flmul@temp+1)^0,w,c
  2894   0007F8  223E               	addwfc	(___flmul@grs+1)^0,f,c
  2895   0007FA  0E00               	movlw	0
  2896   0007FC  223F               	addwfc	(___flmul@grs+2)^0,f,c
  2897   0007FE  0E00               	movlw	0
  2898   000800  2240               	addwfc	(___flmul@grs+3)^0,f,c
  2899   000802  5035               	movf	(___flmul@a+1)^0,w,c
  2900   000804  0230               	mulwf	___flmul@b^0,c
  2901   000806  CFF3 F047          	movff	prodl,___flmul@temp
  2902   00080A  CFF4 F048          	movff	prodh,___flmul@temp+1
  2903   00080E  5047               	movf	___flmul@temp^0,w,c
  2904   000810  263D               	addwf	___flmul@grs^0,f,c
  2905   000812  5048               	movf	(___flmul@temp+1)^0,w,c
  2906   000814  223E               	addwfc	(___flmul@grs+1)^0,f,c
  2907   000816  0E00               	movlw	0
  2908   000818  223F               	addwfc	(___flmul@grs+2)^0,f,c
  2909   00081A  0E00               	movlw	0
  2910   00081C  2240               	addwfc	(___flmul@grs+3)^0,f,c
  2911   00081E  C03F  F040         	movff	___flmul@grs+2,___flmul@grs+3
  2912   000822  C03E  F03F         	movff	___flmul@grs+1,___flmul@grs+2
  2913   000826  C03D  F03E         	movff	___flmul@grs,___flmul@grs+1
  2914   00082A  6A3D               	clrf	___flmul@grs^0,c
  2915   00082C  5034               	movf	___flmul@a^0,w,c
  2916   00082E  0230               	mulwf	___flmul@b^0,c
  2917   000830  CFF3 F047          	movff	prodl,___flmul@temp
  2918   000834  CFF4 F048          	movff	prodh,___flmul@temp+1
  2919   000838  5047               	movf	___flmul@temp^0,w,c
  2920   00083A  263D               	addwf	___flmul@grs^0,f,c
  2921   00083C  5048               	movf	(___flmul@temp+1)^0,w,c
  2922   00083E  223E               	addwfc	(___flmul@grs+1)^0,f,c
  2923   000840  0E00               	movlw	0
  2924   000842  223F               	addwfc	(___flmul@grs+2)^0,f,c
  2925   000844  0E00               	movlw	0
  2926   000846  2240               	addwfc	(___flmul@grs+3)^0,f,c
  2927   000848  5036               	movf	(___flmul@a+2)^0,w,c
  2928   00084A  0231               	mulwf	(___flmul@b+1)^0,c
  2929   00084C  CFF3 F047          	movff	prodl,___flmul@temp
  2930   000850  CFF4 F048          	movff	prodh,___flmul@temp+1
  2931   000854  5047               	movf	___flmul@temp^0,w,c
  2932   000856  2643               	addwf	___flmul@prod^0,f,c
  2933   000858  5048               	movf	(___flmul@temp+1)^0,w,c
  2934   00085A  2244               	addwfc	(___flmul@prod+1)^0,f,c
  2935   00085C  0E00               	movlw	0
  2936   00085E  2245               	addwfc	(___flmul@prod+2)^0,f,c
  2937   000860  0E00               	movlw	0
  2938   000862  2246               	addwfc	(___flmul@prod+3)^0,f,c
  2939   000864  5035               	movf	(___flmul@a+1)^0,w,c
  2940   000866  0232               	mulwf	(___flmul@b+2)^0,c
  2941   000868  CFF3 F047          	movff	prodl,___flmul@temp
  2942   00086C  CFF4 F048          	movff	prodh,___flmul@temp+1
  2943   000870  5047               	movf	___flmul@temp^0,w,c
  2944   000872  2643               	addwf	___flmul@prod^0,f,c
  2945   000874  5048               	movf	(___flmul@temp+1)^0,w,c
  2946   000876  2244               	addwfc	(___flmul@prod+1)^0,f,c
  2947   000878  0E00               	movlw	0
  2948   00087A  2245               	addwfc	(___flmul@prod+2)^0,f,c
  2949   00087C  0E00               	movlw	0
  2950   00087E  2246               	addwfc	(___flmul@prod+3)^0,f,c
  2951   000880  5036               	movf	(___flmul@a+2)^0,w,c
  2952   000882  0232               	mulwf	(___flmul@b+2)^0,c
  2953   000884  CFF3 F047          	movff	prodl,___flmul@temp
  2954   000888  CFF4 F048          	movff	prodh,___flmul@temp+1
  2955   00088C  5047               	movf	___flmul@temp^0,w,c
  2956   00088E  6E38               	movwf	??___flmul^0,c
  2957   000890  5048               	movf	(___flmul@temp+1)^0,w,c
  2958   000892  6E39               	movwf	(??___flmul+1)^0,c
  2959   000894  6A3A               	clrf	(??___flmul+2)^0,c
  2960   000896  6A3B               	clrf	(??___flmul+3)^0,c
  2961   000898  C03A  F03B         	movff	??___flmul+2,??___flmul+3
  2962   00089C  C039  F03A         	movff	??___flmul+1,??___flmul+2
  2963   0008A0  C038  F039         	movff	??___flmul,??___flmul+1
  2964   0008A4  6A38               	clrf	??___flmul^0,c
  2965   0008A6  5038               	movf	??___flmul^0,w,c
  2966   0008A8  2643               	addwf	___flmul@prod^0,f,c
  2967   0008AA  5039               	movf	(??___flmul+1)^0,w,c
  2968   0008AC  2244               	addwfc	(___flmul@prod+1)^0,f,c
  2969   0008AE  503A               	movf	(??___flmul+2)^0,w,c
  2970   0008B0  2245               	addwfc	(___flmul@prod+2)^0,f,c
  2971   0008B2  503B               	movf	(??___flmul+3)^0,w,c
  2972   0008B4  2246               	addwfc	(___flmul@prod+3)^0,f,c
  2973   0008B6  C03D  F038         	movff	___flmul@grs,??___flmul
  2974   0008BA  C03E  F039         	movff	___flmul@grs+1,??___flmul+1
  2975   0008BE  C03F  F03A         	movff	___flmul@grs+2,??___flmul+2
  2976   0008C2  C040  F03B         	movff	___flmul@grs+3,??___flmul+3
  2977   0008C6  0E19               	movlw	25
  2978   0008C8  EF6B  F004         	goto	u2560
  2979   0008CC                     u2565:
  2980   0008CC  90D8               	bcf	status,0,c
  2981   0008CE  323B               	rrcf	(??___flmul+3)^0,f,c
  2982   0008D0  323A               	rrcf	(??___flmul+2)^0,f,c
  2983   0008D2  3239               	rrcf	(??___flmul+1)^0,f,c
  2984   0008D4  3238               	rrcf	??___flmul^0,f,c
  2985   0008D6                     u2560:
  2986   0008D6  2EE8               	decfsz	wreg,f,c
  2987   0008D8  EF66  F004         	goto	u2565
  2988   0008DC  5038               	movf	??___flmul^0,w,c
  2989   0008DE  2643               	addwf	___flmul@prod^0,f,c
  2990   0008E0  5039               	movf	(??___flmul+1)^0,w,c
  2991   0008E2  2244               	addwfc	(___flmul@prod+1)^0,f,c
  2992   0008E4  503A               	movf	(??___flmul+2)^0,w,c
  2993   0008E6  2245               	addwfc	(___flmul@prod+2)^0,f,c
  2994   0008E8  503B               	movf	(??___flmul+3)^0,w,c
  2995   0008EA  2246               	addwfc	(___flmul@prod+3)^0,f,c
  2996   0008EC  C03F  F040         	movff	___flmul@grs+2,___flmul@grs+3
  2997   0008F0  C03E  F03F         	movff	___flmul@grs+1,___flmul@grs+2
  2998   0008F4  C03D  F03E         	movff	___flmul@grs,___flmul@grs+1
  2999   0008F8  6A3D               	clrf	___flmul@grs^0,c
  3000   0008FA  5041               	movf	___flmul@aexp^0,w,c
  3001   0008FC  C042  F038         	movff	___flmul@bexp,??___flmul
  3002   000900  6A39               	clrf	(??___flmul+1)^0,c
  3003   000902  2638               	addwf	??___flmul^0,f,c
  3004   000904  0E00               	movlw	0
  3005   000906  2239               	addwfc	(??___flmul+1)^0,f,c
  3006   000908  0E82               	movlw	130
  3007   00090A  2438               	addwf	??___flmul^0,w,c
  3008   00090C  6E47               	movwf	___flmul@temp^0,c
  3009   00090E  0EFF               	movlw	255
  3010   000910  2039               	addwfc	(??___flmul+1)^0,w,c
  3011   000912  6E48               	movwf	(___flmul@temp+1)^0,c
  3012   000914  EFA1  F004         	goto	l3267
  3013   000918                     l3261:
  3014   000918  90D8               	bcf	status,0,c
  3015   00091A  3643               	rlcf	___flmul@prod^0,f,c
  3016   00091C  3644               	rlcf	(___flmul@prod+1)^0,f,c
  3017   00091E  3645               	rlcf	(___flmul@prod+2)^0,f,c
  3018   000920  3646               	rlcf	(___flmul@prod+3)^0,f,c
  3019   000922  AE40               	btfss	(___flmul@grs+3)^0,7,c
  3020   000924  EF96  F004         	goto	u2571
  3021   000928  EF98  F004         	goto	u2570
  3022   00092C                     u2571:
  3023   00092C  EF99  F004         	goto	l1285
  3024   000930                     u2570:
  3025   000930  8043               	bsf	___flmul@prod^0,0,c
  3026   000932                     l1285:
  3027   000932  90D8               	bcf	status,0,c
  3028   000934  363D               	rlcf	___flmul@grs^0,f,c
  3029   000936  363E               	rlcf	(___flmul@grs+1)^0,f,c
  3030   000938  363F               	rlcf	(___flmul@grs+2)^0,f,c
  3031   00093A  3640               	rlcf	(___flmul@grs+3)^0,f,c
  3032   00093C  0647               	decf	___flmul@temp^0,f,c
  3033   00093E  A0D8               	btfss	status,0,c
  3034   000940  0648               	decf	(___flmul@temp+1)^0,f,c
  3035   000942                     l3267:
  3036   000942  AE45               	btfss	(___flmul@prod+2)^0,7,c
  3037   000944  EFA6  F004         	goto	u2581
  3038   000948  EFA8  F004         	goto	u2580
  3039   00094C                     u2581:
  3040   00094C  EF8C  F004         	goto	l3261
  3041   000950                     u2580:
  3042   000950  0E00               	movlw	0
  3043   000952  6E41               	movwf	___flmul@aexp^0,c
  3044   000954  AE40               	btfss	(___flmul@grs+3)^0,7,c
  3045   000956  EFAF  F004         	goto	u2591
  3046   00095A  EFB1  F004         	goto	u2590
  3047   00095E                     u2591:
  3048   00095E  EFD5  F004         	goto	l1287
  3049   000962                     u2590:
  3050   000962  0EFF               	movlw	255
  3051   000964  143D               	andwf	___flmul@grs^0,w,c
  3052   000966  6E38               	movwf	??___flmul^0,c
  3053   000968  0EFF               	movlw	255
  3054   00096A  143E               	andwf	(___flmul@grs+1)^0,w,c
  3055   00096C  6E39               	movwf	(??___flmul+1)^0,c
  3056   00096E  0EFF               	movlw	255
  3057   000970  143F               	andwf	(___flmul@grs+2)^0,w,c
  3058   000972  6E3A               	movwf	(??___flmul+2)^0,c
  3059   000974  0E7F               	movlw	127
  3060   000976  1440               	andwf	(___flmul@grs+3)^0,w,c
  3061   000978  6E3B               	movwf	(??___flmul+3)^0,c
  3062   00097A  5038               	movf	??___flmul^0,w,c
  3063   00097C  1039               	iorwf	(??___flmul+1)^0,w,c
  3064   00097E  103A               	iorwf	(??___flmul+2)^0,w,c
  3065   000980  103B               	iorwf	(??___flmul+3)^0,w,c
  3066   000982  B4D8               	btfsc	status,2,c
  3067   000984  EFC6  F004         	goto	u2601
  3068   000988  EFC8  F004         	goto	u2600
  3069   00098C                     u2601:
  3070   00098C  EFCC  F004         	goto	l1288
  3071   000990                     u2600:
  3072   000990                     l3275:
  3073   000990  0E01               	movlw	1
  3074   000992  6E41               	movwf	___flmul@aexp^0,c
  3075   000994  EFD5  F004         	goto	l1287
  3076   000998                     l1288:
  3077   000998  A043               	btfss	___flmul@prod^0,0,c
  3078   00099A  EFD1  F004         	goto	u2611
  3079   00099E  EFD3  F004         	goto	u2610
  3080   0009A2                     u2611:
  3081   0009A2  EFD5  F004         	goto	l1287
  3082   0009A6                     u2610:
  3083   0009A6  EFC8  F004         	goto	l3275
  3084   0009AA                     l1287:
  3085   0009AA  5041               	movf	___flmul@aexp^0,w,c
  3086   0009AC  B4D8               	btfsc	status,2,c
  3087   0009AE  EFDB  F004         	goto	u2621
  3088   0009B2  EFDD  F004         	goto	u2620
  3089   0009B6                     u2621:
  3090   0009B6  EF01  F005         	goto	l3287
  3091   0009BA                     u2620:
  3092   0009BA  0E01               	movlw	1
  3093   0009BC  2643               	addwf	___flmul@prod^0,f,c
  3094   0009BE  0E00               	movlw	0
  3095   0009C0  2244               	addwfc	(___flmul@prod+1)^0,f,c
  3096   0009C2  2245               	addwfc	(___flmul@prod+2)^0,f,c
  3097   0009C4  2246               	addwfc	(___flmul@prod+3)^0,f,c
  3098   0009C6  A046               	btfss	(___flmul@prod+3)^0,0,c
  3099   0009C8  EFE8  F004         	goto	u2631
  3100   0009CC  EFEA  F004         	goto	u2630
  3101   0009D0                     u2631:
  3102   0009D0  EF01  F005         	goto	l3287
  3103   0009D4                     u2630:
  3104   0009D4  C043  F038         	movff	___flmul@prod,??___flmul
  3105   0009D8  C044  F039         	movff	___flmul@prod+1,??___flmul+1
  3106   0009DC  C045  F03A         	movff	___flmul@prod+2,??___flmul+2
  3107   0009E0  C046  F03B         	movff	___flmul@prod+3,??___flmul+3
  3108   0009E4  343B               	rlcf	(??___flmul+3)^0,w,c
  3109   0009E6  323B               	rrcf	(??___flmul+3)^0,f,c
  3110   0009E8  323A               	rrcf	(??___flmul+2)^0,f,c
  3111   0009EA  3239               	rrcf	(??___flmul+1)^0,f,c
  3112   0009EC  3238               	rrcf	??___flmul^0,f,c
  3113   0009EE  C038  F043         	movff	??___flmul,___flmul@prod
  3114   0009F2  C039  F044         	movff	??___flmul+1,___flmul@prod+1
  3115   0009F6  C03A  F045         	movff	??___flmul+2,___flmul@prod+2
  3116   0009FA  C03B  F046         	movff	??___flmul+3,___flmul@prod+3
  3117   0009FE  4A47               	infsnz	___flmul@temp^0,f,c
  3118   000A00  2A48               	incf	(___flmul@temp+1)^0,f,c
  3119   000A02                     l3287:
  3120   000A02  BE48               	btfsc	(___flmul@temp+1)^0,7,c
  3121   000A04  EF0C  F005         	goto	u2641
  3122   000A08  5048               	movf	(___flmul@temp+1)^0,w,c
  3123   000A0A  E108               	bnz	u2640
  3124   000A0C  2847               	incf	___flmul@temp^0,w,c
  3125   000A0E  A0D8               	btfss	status,0,c
  3126   000A10  EF0C  F005         	goto	u2641
  3127   000A14  EF0E  F005         	goto	u2640
  3128   000A18                     u2641:
  3129   000A18  EF18  F005         	goto	l3291
  3130   000A1C                     u2640:
  3131   000A1C  0E00               	movlw	0
  3132   000A1E  6E43               	movwf	___flmul@prod^0,c
  3133   000A20  0E00               	movlw	0
  3134   000A22  6E44               	movwf	(___flmul@prod+1)^0,c
  3135   000A24  0E80               	movlw	128
  3136   000A26  6E45               	movwf	(___flmul@prod+2)^0,c
  3137   000A28  0E7F               	movlw	127
  3138   000A2A  6E46               	movwf	(___flmul@prod+3)^0,c
  3139   000A2C  EF46  F005         	goto	l3303
  3140   000A30                     l3291:
  3141   000A30  BE48               	btfsc	(___flmul@temp+1)^0,7,c
  3142   000A32  EF25  F005         	goto	u2650
  3143   000A36  5048               	movf	(___flmul@temp+1)^0,w,c
  3144   000A38  E106               	bnz	u2651
  3145   000A3A  0447               	decf	___flmul@temp^0,w,c
  3146   000A3C  B0D8               	btfsc	status,0,c
  3147   000A3E  EF23  F005         	goto	u2651
  3148   000A42  EF25  F005         	goto	u2650
  3149   000A46                     u2651:
  3150   000A46  EF31  F005         	goto	l1295
  3151   000A4A                     u2650:
  3152   000A4A  0E00               	movlw	0
  3153   000A4C  6E43               	movwf	___flmul@prod^0,c
  3154   000A4E  0E00               	movlw	0
  3155   000A50  6E44               	movwf	(___flmul@prod+1)^0,c
  3156   000A52  0E00               	movlw	0
  3157   000A54  6E45               	movwf	(___flmul@prod+2)^0,c
  3158   000A56  0E00               	movlw	0
  3159   000A58  6E46               	movwf	(___flmul@prod+3)^0,c
  3160   000A5A  0E00               	movlw	0
  3161   000A5C  6E3C               	movwf	___flmul@sign^0,c
  3162   000A5E  EF46  F005         	goto	l3303
  3163   000A62                     l1295:
  3164   000A62  C047  F042         	movff	___flmul@temp,___flmul@bexp
  3165   000A66  0EFF               	movlw	255
  3166   000A68  1643               	andwf	___flmul@prod^0,f,c
  3167   000A6A  0EFF               	movlw	255
  3168   000A6C  1644               	andwf	(___flmul@prod+1)^0,f,c
  3169   000A6E  0E7F               	movlw	127
  3170   000A70  1645               	andwf	(___flmul@prod+2)^0,f,c
  3171   000A72  0E00               	movlw	0
  3172   000A74  1646               	andwf	(___flmul@prod+3)^0,f,c
  3173   000A76  A042               	btfss	___flmul@bexp^0,0,c
  3174   000A78  EF40  F005         	goto	u2661
  3175   000A7C  EF42  F005         	goto	u2660
  3176   000A80                     u2661:
  3177   000A80  EF43  F005         	goto	l3301
  3178   000A84                     u2660:
  3179   000A84  8E45               	bsf	(___flmul@prod+2)^0,7,c
  3180   000A86                     l3301:
  3181   000A86  90D8               	bcf	status,0,c
  3182   000A88  3042               	rrcf	___flmul@bexp^0,w,c
  3183   000A8A  6E46               	movwf	(___flmul@prod+3)^0,c
  3184   000A8C                     l3303:
  3185   000A8C  503C               	movf	___flmul@sign^0,w,c
  3186   000A8E  1246               	iorwf	(___flmul@prod+3)^0,f,c
  3187   000A90  C043  F030         	movff	___flmul@prod,?___flmul
  3188   000A94  C044  F031         	movff	___flmul@prod+1,?___flmul+1
  3189   000A98  C045  F032         	movff	___flmul@prod+2,?___flmul+2
  3190   000A9C  C046  F033         	movff	___flmul@prod+3,?___flmul+3
  3191   000AA0                     l1282:
  3192   000AA0  0012               	return		;funcret
  3193   000AA2                     __end_of___flmul:
  3194                           	callstack 0
  3195                           
  3196 ;; *************** function ___fldiv *****************
  3197 ;; Defined at:
  3198 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  3199 ;; Parameters:    Size  Location     Type
  3200 ;;  b               4   22[COMRAM] unsigned char 
  3201 ;;  a               4   26[COMRAM] unsigned char 
  3202 ;; Auto vars:     Size  Location     Type
  3203 ;;  grs             4   41[COMRAM] unsigned long 
  3204 ;;  rem             4   34[COMRAM] unsigned long 
  3205 ;;  new_exp         2   39[COMRAM] short 
  3206 ;;  aexp            1   46[COMRAM] unsigned char 
  3207 ;;  bexp            1   45[COMRAM] unsigned char 
  3208 ;;  sign            1   38[COMRAM] unsigned char 
  3209 ;; Return value:  Size  Location     Type
  3210 ;;                  4   22[COMRAM] unsigned char 
  3211 ;; Registers used:
  3212 ;;		wreg, status,2, status,0
  3213 ;; Tracked objects:
  3214 ;;		On entry : 0/0
  3215 ;;		On exit  : 0/0
  3216 ;;		Unchanged: 0/0
  3217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3218 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3219 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3220 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3221 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3222 ;;Total ram usage:       25 bytes
  3223 ;; Hardware stack levels used: 1
  3224 ;; Hardware stack levels required when called: 7
  3225 ;; This function calls:
  3226 ;;		Nothing
  3227 ;; This function is called by:
  3228 ;;		_detect_color
  3229 ;; This function uses a non-reentrant model
  3230 ;;
  3231                           
  3232                           	psect	text7
  3233   000AA2                     __ptext7:
  3234                           	callstack 0
  3235   000AA2                     ___fldiv:
  3236                           	callstack 22
  3237   000AA2  501A               	movf	(___fldiv@b+3)^0,w,c
  3238   000AA4  0B80               	andlw	128
  3239   000AA6  6E27               	movwf	___fldiv@sign^0,c
  3240   000AA8  501A               	movf	(___fldiv@b+3)^0,w,c
  3241   000AAA  241A               	addwf	(___fldiv@b+3)^0,w,c
  3242   000AAC  6E2E               	movwf	___fldiv@bexp^0,c
  3243   000AAE  AE19               	btfss	(___fldiv@b+2)^0,7,c
  3244   000AB0  EF5C  F005         	goto	u2251
  3245   000AB4  EF5E  F005         	goto	u2250
  3246   000AB8                     u2251:
  3247   000AB8  EF5F  F005         	goto	l3047
  3248   000ABC                     u2250:
  3249   000ABC  802E               	bsf	___fldiv@bexp^0,0,c
  3250   000ABE                     l3047:
  3251   000ABE  502E               	movf	___fldiv@bexp^0,w,c
  3252   000AC0  B4D8               	btfsc	status,2,c
  3253   000AC2  EF65  F005         	goto	u2261
  3254   000AC6  EF67  F005         	goto	u2260
  3255   000ACA                     u2261:
  3256   000ACA  EF7C  F005         	goto	l3057
  3257   000ACE                     u2260:
  3258   000ACE  282E               	incf	___fldiv@bexp^0,w,c
  3259   000AD0  A4D8               	btfss	status,2,c
  3260   000AD2  EF6D  F005         	goto	u2271
  3261   000AD6  EF6F  F005         	goto	u2270
  3262   000ADA                     u2271:
  3263   000ADA  EF77  F005         	goto	l3053
  3264   000ADE                     u2270:
  3265   000ADE  0E00               	movlw	0
  3266   000AE0  6E17               	movwf	___fldiv@b^0,c
  3267   000AE2  0E00               	movlw	0
  3268   000AE4  6E18               	movwf	(___fldiv@b+1)^0,c
  3269   000AE6  0E00               	movlw	0
  3270   000AE8  6E19               	movwf	(___fldiv@b+2)^0,c
  3271   000AEA  0E00               	movlw	0
  3272   000AEC  6E1A               	movwf	(___fldiv@b+3)^0,c
  3273   000AEE                     l3053:
  3274   000AEE  8E19               	bsf	(___fldiv@b+2)^0,7,c
  3275   000AF0  0E00               	movlw	0
  3276   000AF2  6E1A               	movwf	(___fldiv@b+3)^0,c
  3277   000AF4  EF84  F005         	goto	l3059
  3278   000AF8                     l3057:
  3279   000AF8  0E00               	movlw	0
  3280   000AFA  6E17               	movwf	___fldiv@b^0,c
  3281   000AFC  0E00               	movlw	0
  3282   000AFE  6E18               	movwf	(___fldiv@b+1)^0,c
  3283   000B00  0E00               	movlw	0
  3284   000B02  6E19               	movwf	(___fldiv@b+2)^0,c
  3285   000B04  0E00               	movlw	0
  3286   000B06  6E1A               	movwf	(___fldiv@b+3)^0,c
  3287   000B08                     l3059:
  3288   000B08  501E               	movf	(___fldiv@a+3)^0,w,c
  3289   000B0A  0B80               	andlw	128
  3290   000B0C  1A27               	xorwf	___fldiv@sign^0,f,c
  3291   000B0E  501E               	movf	(___fldiv@a+3)^0,w,c
  3292   000B10  241E               	addwf	(___fldiv@a+3)^0,w,c
  3293   000B12  6E2F               	movwf	___fldiv@aexp^0,c
  3294   000B14  AE1D               	btfss	(___fldiv@a+2)^0,7,c
  3295   000B16  EF8F  F005         	goto	u2281
  3296   000B1A  EF91  F005         	goto	u2280
  3297   000B1E                     u2281:
  3298   000B1E  EF92  F005         	goto	l3067
  3299   000B22                     u2280:
  3300   000B22  802F               	bsf	___fldiv@aexp^0,0,c
  3301   000B24                     l3067:
  3302   000B24  502F               	movf	___fldiv@aexp^0,w,c
  3303   000B26  B4D8               	btfsc	status,2,c
  3304   000B28  EF98  F005         	goto	u2291
  3305   000B2C  EF9A  F005         	goto	u2290
  3306   000B30                     u2291:
  3307   000B30  EFAF  F005         	goto	l3077
  3308   000B34                     u2290:
  3309   000B34  282F               	incf	___fldiv@aexp^0,w,c
  3310   000B36  A4D8               	btfss	status,2,c
  3311   000B38  EFA0  F005         	goto	u2301
  3312   000B3C  EFA2  F005         	goto	u2300
  3313   000B40                     u2301:
  3314   000B40  EFAA  F005         	goto	l3073
  3315   000B44                     u2300:
  3316   000B44  0E00               	movlw	0
  3317   000B46  6E1B               	movwf	___fldiv@a^0,c
  3318   000B48  0E00               	movlw	0
  3319   000B4A  6E1C               	movwf	(___fldiv@a+1)^0,c
  3320   000B4C  0E00               	movlw	0
  3321   000B4E  6E1D               	movwf	(___fldiv@a+2)^0,c
  3322   000B50  0E00               	movlw	0
  3323   000B52  6E1E               	movwf	(___fldiv@a+3)^0,c
  3324   000B54                     l3073:
  3325   000B54  8E1D               	bsf	(___fldiv@a+2)^0,7,c
  3326   000B56  0E00               	movlw	0
  3327   000B58  6E1E               	movwf	(___fldiv@a+3)^0,c
  3328   000B5A  EFB7  F005         	goto	l3079
  3329   000B5E                     l3077:
  3330   000B5E  0E00               	movlw	0
  3331   000B60  6E1B               	movwf	___fldiv@a^0,c
  3332   000B62  0E00               	movlw	0
  3333   000B64  6E1C               	movwf	(___fldiv@a+1)^0,c
  3334   000B66  0E00               	movlw	0
  3335   000B68  6E1D               	movwf	(___fldiv@a+2)^0,c
  3336   000B6A  0E00               	movlw	0
  3337   000B6C  6E1E               	movwf	(___fldiv@a+3)^0,c
  3338   000B6E                     l3079:
  3339   000B6E  501B               	movf	___fldiv@a^0,w,c
  3340   000B70  101C               	iorwf	(___fldiv@a+1)^0,w,c
  3341   000B72  101D               	iorwf	(___fldiv@a+2)^0,w,c
  3342   000B74  101E               	iorwf	(___fldiv@a+3)^0,w,c
  3343   000B76  A4D8               	btfss	status,2,c
  3344   000B78  EFC0  F005         	goto	u2311
  3345   000B7C  EFC2  F005         	goto	u2310
  3346   000B80                     u2311:
  3347   000B80  EFDA  F005         	goto	l3091
  3348   000B84                     u2310:
  3349   000B84  0E00               	movlw	0
  3350   000B86  6E17               	movwf	___fldiv@b^0,c
  3351   000B88  0E00               	movlw	0
  3352   000B8A  6E18               	movwf	(___fldiv@b+1)^0,c
  3353   000B8C  0E00               	movlw	0
  3354   000B8E  6E19               	movwf	(___fldiv@b+2)^0,c
  3355   000B90  0E00               	movlw	0
  3356   000B92  6E1A               	movwf	(___fldiv@b+3)^0,c
  3357   000B94  0E80               	movlw	128
  3358   000B96  1219               	iorwf	(___fldiv@b+2)^0,f,c
  3359   000B98  0E7F               	movlw	127
  3360   000B9A  121A               	iorwf	(___fldiv@b+3)^0,f,c
  3361   000B9C                     l3085:
  3362   000B9C  5027               	movf	___fldiv@sign^0,w,c
  3363   000B9E  121A               	iorwf	(___fldiv@b+3)^0,f,c
  3364   000BA0  C017  F017         	movff	___fldiv@b,?___fldiv
  3365   000BA4  C018  F018         	movff	___fldiv@b+1,?___fldiv+1
  3366   000BA8  C019  F019         	movff	___fldiv@b+2,?___fldiv+2
  3367   000BAC  C01A  F01A         	movff	___fldiv@b+3,?___fldiv+3
  3368   000BB0  EF1D  F007         	goto	l1246
  3369   000BB4                     l3091:
  3370   000BB4  502E               	movf	___fldiv@bexp^0,w,c
  3371   000BB6  A4D8               	btfss	status,2,c
  3372   000BB8  EFE0  F005         	goto	u2321
  3373   000BBC  EFE2  F005         	goto	u2320
  3374   000BC0                     u2321:
  3375   000BC0  EFEC  F005         	goto	l3099
  3376   000BC4                     u2320:
  3377   000BC4  0E00               	movlw	0
  3378   000BC6  6E17               	movwf	?___fldiv^0,c
  3379   000BC8  0E00               	movlw	0
  3380   000BCA  6E18               	movwf	(?___fldiv+1)^0,c
  3381   000BCC  0E00               	movlw	0
  3382   000BCE  6E19               	movwf	(?___fldiv+2)^0,c
  3383   000BD0  0E00               	movlw	0
  3384   000BD2  6E1A               	movwf	(?___fldiv+3)^0,c
  3385   000BD4  EF1D  F007         	goto	l1246
  3386   000BD8                     l3099:
  3387   000BD8  502F               	movf	___fldiv@aexp^0,w,c
  3388   000BDA  C02E  F01F         	movff	___fldiv@bexp,??___fldiv
  3389   000BDE  6A20               	clrf	(??___fldiv+1)^0,c
  3390   000BE0  5E1F               	subwf	??___fldiv^0,f,c
  3391   000BE2  0E00               	movlw	0
  3392   000BE4  5A20               	subwfb	(??___fldiv+1)^0,f,c
  3393   000BE6  0E7F               	movlw	127
  3394   000BE8  241F               	addwf	??___fldiv^0,w,c
  3395   000BEA  6E28               	movwf	___fldiv@new_exp^0,c
  3396   000BEC  0E00               	movlw	0
  3397   000BEE  2020               	addwfc	(??___fldiv+1)^0,w,c
  3398   000BF0  6E29               	movwf	(___fldiv@new_exp+1)^0,c
  3399   000BF2  C017  F023         	movff	___fldiv@b,___fldiv@rem
  3400   000BF6  C018  F024         	movff	___fldiv@b+1,___fldiv@rem+1
  3401   000BFA  C019  F025         	movff	___fldiv@b+2,___fldiv@rem+2
  3402   000BFE  C01A  F026         	movff	___fldiv@b+3,___fldiv@rem+3
  3403   000C02  0E00               	movlw	0
  3404   000C04  6E17               	movwf	___fldiv@b^0,c
  3405   000C06  0E00               	movlw	0
  3406   000C08  6E18               	movwf	(___fldiv@b+1)^0,c
  3407   000C0A  0E00               	movlw	0
  3408   000C0C  6E19               	movwf	(___fldiv@b+2)^0,c
  3409   000C0E  0E00               	movlw	0
  3410   000C10  6E1A               	movwf	(___fldiv@b+3)^0,c
  3411   000C12  0E00               	movlw	0
  3412   000C14  6E2A               	movwf	___fldiv@grs^0,c
  3413   000C16  0E00               	movlw	0
  3414   000C18  6E2B               	movwf	(___fldiv@grs+1)^0,c
  3415   000C1A  0E00               	movlw	0
  3416   000C1C  6E2C               	movwf	(___fldiv@grs+2)^0,c
  3417   000C1E  0E00               	movlw	0
  3418   000C20  6E2D               	movwf	(___fldiv@grs+3)^0,c
  3419   000C22  0E00               	movlw	0
  3420   000C24  6E2F               	movwf	___fldiv@aexp^0,c
  3421   000C26  EF4D  F006         	goto	l1248
  3422   000C2A                     l3109:
  3423   000C2A  502F               	movf	___fldiv@aexp^0,w,c
  3424   000C2C  B4D8               	btfsc	status,2,c
  3425   000C2E  EF1B  F006         	goto	u2331
  3426   000C32  EF1D  F006         	goto	u2330
  3427   000C36                     u2331:
  3428   000C36  EF34  F006         	goto	l3117
  3429   000C3A                     u2330:
  3430   000C3A  90D8               	bcf	status,0,c
  3431   000C3C  3623               	rlcf	___fldiv@rem^0,f,c
  3432   000C3E  3624               	rlcf	(___fldiv@rem+1)^0,f,c
  3433   000C40  3625               	rlcf	(___fldiv@rem+2)^0,f,c
  3434   000C42  3626               	rlcf	(___fldiv@rem+3)^0,f,c
  3435   000C44  90D8               	bcf	status,0,c
  3436   000C46  3617               	rlcf	___fldiv@b^0,f,c
  3437   000C48  3618               	rlcf	(___fldiv@b+1)^0,f,c
  3438   000C4A  3619               	rlcf	(___fldiv@b+2)^0,f,c
  3439   000C4C  361A               	rlcf	(___fldiv@b+3)^0,f,c
  3440   000C4E  AE2D               	btfss	(___fldiv@grs+3)^0,7,c
  3441   000C50  EF2C  F006         	goto	u2341
  3442   000C54  EF2E  F006         	goto	u2340
  3443   000C58                     u2341:
  3444   000C58  EF2F  F006         	goto	l1251
  3445   000C5C                     u2340:
  3446   000C5C  8017               	bsf	___fldiv@b^0,0,c
  3447   000C5E                     l1251:
  3448   000C5E  90D8               	bcf	status,0,c
  3449   000C60  362A               	rlcf	___fldiv@grs^0,f,c
  3450   000C62  362B               	rlcf	(___fldiv@grs+1)^0,f,c
  3451   000C64  362C               	rlcf	(___fldiv@grs+2)^0,f,c
  3452   000C66  362D               	rlcf	(___fldiv@grs+3)^0,f,c
  3453   000C68                     l3117:
  3454   000C68  501B               	movf	___fldiv@a^0,w,c
  3455   000C6A  5C23               	subwf	___fldiv@rem^0,w,c
  3456   000C6C  501C               	movf	(___fldiv@a+1)^0,w,c
  3457   000C6E  5824               	subwfb	(___fldiv@rem+1)^0,w,c
  3458   000C70  501D               	movf	(___fldiv@a+2)^0,w,c
  3459   000C72  5825               	subwfb	(___fldiv@rem+2)^0,w,c
  3460   000C74  501E               	movf	(___fldiv@a+3)^0,w,c
  3461   000C76  5826               	subwfb	(___fldiv@rem+3)^0,w,c
  3462   000C78  A0D8               	btfss	status,0,c
  3463   000C7A  EF41  F006         	goto	u2351
  3464   000C7E  EF43  F006         	goto	u2350
  3465   000C82                     u2351:
  3466   000C82  EF4C  F006         	goto	l3123
  3467   000C86                     u2350:
  3468   000C86  8C2D               	bsf	(___fldiv@grs+3)^0,6,c
  3469   000C88  501B               	movf	___fldiv@a^0,w,c
  3470   000C8A  5E23               	subwf	___fldiv@rem^0,f,c
  3471   000C8C  501C               	movf	(___fldiv@a+1)^0,w,c
  3472   000C8E  5A24               	subwfb	(___fldiv@rem+1)^0,f,c
  3473   000C90  501D               	movf	(___fldiv@a+2)^0,w,c
  3474   000C92  5A25               	subwfb	(___fldiv@rem+2)^0,f,c
  3475   000C94  501E               	movf	(___fldiv@a+3)^0,w,c
  3476   000C96  5A26               	subwfb	(___fldiv@rem+3)^0,f,c
  3477   000C98                     l3123:
  3478   000C98  2A2F               	incf	___fldiv@aexp^0,f,c
  3479   000C9A                     l1248:
  3480   000C9A  0E19               	movlw	25
  3481   000C9C  642F               	cpfsgt	___fldiv@aexp^0,c
  3482   000C9E  EF53  F006         	goto	u2361
  3483   000CA2  EF55  F006         	goto	u2360
  3484   000CA6                     u2361:
  3485   000CA6  EF15  F006         	goto	l3109
  3486   000CAA                     u2360:
  3487   000CAA  5023               	movf	___fldiv@rem^0,w,c
  3488   000CAC  1024               	iorwf	(___fldiv@rem+1)^0,w,c
  3489   000CAE  1025               	iorwf	(___fldiv@rem+2)^0,w,c
  3490   000CB0  1026               	iorwf	(___fldiv@rem+3)^0,w,c
  3491   000CB2  B4D8               	btfsc	status,2,c
  3492   000CB4  EF5E  F006         	goto	u2371
  3493   000CB8  EF60  F006         	goto	u2370
  3494   000CBC                     u2371:
  3495   000CBC  EF78  F006         	goto	l3135
  3496   000CC0                     u2370:
  3497   000CC0  802A               	bsf	___fldiv@grs^0,0,c
  3498   000CC2  EF78  F006         	goto	l3135
  3499   000CC6                     l3129:
  3500   000CC6  90D8               	bcf	status,0,c
  3501   000CC8  3617               	rlcf	___fldiv@b^0,f,c
  3502   000CCA  3618               	rlcf	(___fldiv@b+1)^0,f,c
  3503   000CCC  3619               	rlcf	(___fldiv@b+2)^0,f,c
  3504   000CCE  361A               	rlcf	(___fldiv@b+3)^0,f,c
  3505   000CD0  AE2D               	btfss	(___fldiv@grs+3)^0,7,c
  3506   000CD2  EF6D  F006         	goto	u2381
  3507   000CD6  EF6F  F006         	goto	u2380
  3508   000CDA                     u2381:
  3509   000CDA  EF70  F006         	goto	l1257
  3510   000CDE                     u2380:
  3511   000CDE  8017               	bsf	___fldiv@b^0,0,c
  3512   000CE0                     l1257:
  3513   000CE0  90D8               	bcf	status,0,c
  3514   000CE2  362A               	rlcf	___fldiv@grs^0,f,c
  3515   000CE4  362B               	rlcf	(___fldiv@grs+1)^0,f,c
  3516   000CE6  362C               	rlcf	(___fldiv@grs+2)^0,f,c
  3517   000CE8  362D               	rlcf	(___fldiv@grs+3)^0,f,c
  3518   000CEA  0628               	decf	___fldiv@new_exp^0,f,c
  3519   000CEC  A0D8               	btfss	status,0,c
  3520   000CEE  0629               	decf	(___fldiv@new_exp+1)^0,f,c
  3521   000CF0                     l3135:
  3522   000CF0  AE19               	btfss	(___fldiv@b+2)^0,7,c
  3523   000CF2  EF7D  F006         	goto	u2391
  3524   000CF6  EF7F  F006         	goto	u2390
  3525   000CFA                     u2391:
  3526   000CFA  EF63  F006         	goto	l3129
  3527   000CFE                     u2390:
  3528   000CFE  0E00               	movlw	0
  3529   000D00  6E2F               	movwf	___fldiv@aexp^0,c
  3530   000D02  AE2D               	btfss	(___fldiv@grs+3)^0,7,c
  3531   000D04  EF86  F006         	goto	u2401
  3532   000D08  EF88  F006         	goto	u2400
  3533   000D0C                     u2401:
  3534   000D0C  EFAC  F006         	goto	l1259
  3535   000D10                     u2400:
  3536   000D10  0EFF               	movlw	255
  3537   000D12  142A               	andwf	___fldiv@grs^0,w,c
  3538   000D14  6E1F               	movwf	??___fldiv^0,c
  3539   000D16  0EFF               	movlw	255
  3540   000D18  142B               	andwf	(___fldiv@grs+1)^0,w,c
  3541   000D1A  6E20               	movwf	(??___fldiv+1)^0,c
  3542   000D1C  0EFF               	movlw	255
  3543   000D1E  142C               	andwf	(___fldiv@grs+2)^0,w,c
  3544   000D20  6E21               	movwf	(??___fldiv+2)^0,c
  3545   000D22  0E7F               	movlw	127
  3546   000D24  142D               	andwf	(___fldiv@grs+3)^0,w,c
  3547   000D26  6E22               	movwf	(??___fldiv+3)^0,c
  3548   000D28  501F               	movf	??___fldiv^0,w,c
  3549   000D2A  1020               	iorwf	(??___fldiv+1)^0,w,c
  3550   000D2C  1021               	iorwf	(??___fldiv+2)^0,w,c
  3551   000D2E  1022               	iorwf	(??___fldiv+3)^0,w,c
  3552   000D30  B4D8               	btfsc	status,2,c
  3553   000D32  EF9D  F006         	goto	u2411
  3554   000D36  EF9F  F006         	goto	u2410
  3555   000D3A                     u2411:
  3556   000D3A  EFA3  F006         	goto	l1260
  3557   000D3E                     u2410:
  3558   000D3E                     l3143:
  3559   000D3E  0E01               	movlw	1
  3560   000D40  6E2F               	movwf	___fldiv@aexp^0,c
  3561   000D42  EFAC  F006         	goto	l1259
  3562   000D46                     l1260:
  3563   000D46  A017               	btfss	___fldiv@b^0,0,c
  3564   000D48  EFA8  F006         	goto	u2421
  3565   000D4C  EFAA  F006         	goto	u2420
  3566   000D50                     u2421:
  3567   000D50  EFAC  F006         	goto	l1259
  3568   000D54                     u2420:
  3569   000D54  EF9F  F006         	goto	l3143
  3570   000D58                     l1259:
  3571   000D58  502F               	movf	___fldiv@aexp^0,w,c
  3572   000D5A  B4D8               	btfsc	status,2,c
  3573   000D5C  EFB2  F006         	goto	u2431
  3574   000D60  EFB4  F006         	goto	u2430
  3575   000D64                     u2431:
  3576   000D64  EFD8  F006         	goto	l3155
  3577   000D68                     u2430:
  3578   000D68  0E01               	movlw	1
  3579   000D6A  2617               	addwf	___fldiv@b^0,f,c
  3580   000D6C  0E00               	movlw	0
  3581   000D6E  2218               	addwfc	(___fldiv@b+1)^0,f,c
  3582   000D70  2219               	addwfc	(___fldiv@b+2)^0,f,c
  3583   000D72  221A               	addwfc	(___fldiv@b+3)^0,f,c
  3584   000D74  A01A               	btfss	(___fldiv@b+3)^0,0,c
  3585   000D76  EFBF  F006         	goto	u2441
  3586   000D7A  EFC1  F006         	goto	u2440
  3587   000D7E                     u2441:
  3588   000D7E  EFD8  F006         	goto	l3155
  3589   000D82                     u2440:
  3590   000D82  C017  F01F         	movff	___fldiv@b,??___fldiv
  3591   000D86  C018  F020         	movff	___fldiv@b+1,??___fldiv+1
  3592   000D8A  C019  F021         	movff	___fldiv@b+2,??___fldiv+2
  3593   000D8E  C01A  F022         	movff	___fldiv@b+3,??___fldiv+3
  3594   000D92  3422               	rlcf	(??___fldiv+3)^0,w,c
  3595   000D94  3222               	rrcf	(??___fldiv+3)^0,f,c
  3596   000D96  3221               	rrcf	(??___fldiv+2)^0,f,c
  3597   000D98  3220               	rrcf	(??___fldiv+1)^0,f,c
  3598   000D9A  321F               	rrcf	??___fldiv^0,f,c
  3599   000D9C  C01F  F017         	movff	??___fldiv,___fldiv@b
  3600   000DA0  C020  F018         	movff	??___fldiv+1,___fldiv@b+1
  3601   000DA4  C021  F019         	movff	??___fldiv+2,___fldiv@b+2
  3602   000DA8  C022  F01A         	movff	??___fldiv+3,___fldiv@b+3
  3603   000DAC  4A28               	infsnz	___fldiv@new_exp^0,f,c
  3604   000DAE  2A29               	incf	(___fldiv@new_exp+1)^0,f,c
  3605   000DB0                     l3155:
  3606   000DB0  BE29               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3607   000DB2  EFE3  F006         	goto	u2451
  3608   000DB6  5029               	movf	(___fldiv@new_exp+1)^0,w,c
  3609   000DB8  E108               	bnz	u2450
  3610   000DBA  2828               	incf	___fldiv@new_exp^0,w,c
  3611   000DBC  A0D8               	btfss	status,0,c
  3612   000DBE  EFE3  F006         	goto	u2451
  3613   000DC2  EFE5  F006         	goto	u2450
  3614   000DC6                     u2451:
  3615   000DC6  EFF0  F006         	goto	l3159
  3616   000DCA                     u2450:
  3617   000DCA  0E00               	movlw	0
  3618   000DCC  6E29               	movwf	(___fldiv@new_exp+1)^0,c
  3619   000DCE  6828               	setf	___fldiv@new_exp^0,c
  3620   000DD0  0E00               	movlw	0
  3621   000DD2  6E17               	movwf	___fldiv@b^0,c
  3622   000DD4  0E00               	movlw	0
  3623   000DD6  6E18               	movwf	(___fldiv@b+1)^0,c
  3624   000DD8  0E00               	movlw	0
  3625   000DDA  6E19               	movwf	(___fldiv@b+2)^0,c
  3626   000DDC  0E00               	movlw	0
  3627   000DDE  6E1A               	movwf	(___fldiv@b+3)^0,c
  3628   000DE0                     l3159:
  3629   000DE0  BE29               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3630   000DE2  EFFD  F006         	goto	u2460
  3631   000DE6  5029               	movf	(___fldiv@new_exp+1)^0,w,c
  3632   000DE8  E106               	bnz	u2461
  3633   000DEA  0428               	decf	___fldiv@new_exp^0,w,c
  3634   000DEC  B0D8               	btfsc	status,0,c
  3635   000DEE  EFFB  F006         	goto	u2461
  3636   000DF2  EFFD  F006         	goto	u2460
  3637   000DF6                     u2461:
  3638   000DF6  EF0B  F007         	goto	l3163
  3639   000DFA                     u2460:
  3640   000DFA  0E00               	movlw	0
  3641   000DFC  6E29               	movwf	(___fldiv@new_exp+1)^0,c
  3642   000DFE  0E00               	movlw	0
  3643   000E00  6E28               	movwf	___fldiv@new_exp^0,c
  3644   000E02  0E00               	movlw	0
  3645   000E04  6E17               	movwf	___fldiv@b^0,c
  3646   000E06  0E00               	movlw	0
  3647   000E08  6E18               	movwf	(___fldiv@b+1)^0,c
  3648   000E0A  0E00               	movlw	0
  3649   000E0C  6E19               	movwf	(___fldiv@b+2)^0,c
  3650   000E0E  0E00               	movlw	0
  3651   000E10  6E1A               	movwf	(___fldiv@b+3)^0,c
  3652   000E12  0E00               	movlw	0
  3653   000E14  6E27               	movwf	___fldiv@sign^0,c
  3654   000E16                     l3163:
  3655   000E16  C028  F02E         	movff	___fldiv@new_exp,___fldiv@bexp
  3656   000E1A  A02E               	btfss	___fldiv@bexp^0,0,c
  3657   000E1C  EF12  F007         	goto	u2471
  3658   000E20  EF14  F007         	goto	u2470
  3659   000E24                     u2471:
  3660   000E24  EF17  F007         	goto	l3169
  3661   000E28                     u2470:
  3662   000E28  8E19               	bsf	(___fldiv@b+2)^0,7,c
  3663   000E2A  EF18  F007         	goto	l3171
  3664   000E2E                     l3169:
  3665   000E2E  9E19               	bcf	(___fldiv@b+2)^0,7,c
  3666   000E30                     l3171:
  3667   000E30  90D8               	bcf	status,0,c
  3668   000E32  302E               	rrcf	___fldiv@bexp^0,w,c
  3669   000E34  6E1A               	movwf	(___fldiv@b+3)^0,c
  3670   000E36  EFCE  F005         	goto	l3085
  3671   000E3A                     l1246:
  3672   000E3A  0012               	return		;funcret
  3673   000E3C                     __end_of___fldiv:
  3674                           	callstack 0
  3675                           
  3676 ;; *************** function _color_click_init *****************
  3677 ;; Defined at:
  3678 ;;		line 6 in file "color.c"
  3679 ;; Parameters:    Size  Location     Type
  3680 ;;		None
  3681 ;; Auto vars:     Size  Location     Type
  3682 ;;		None
  3683 ;; Return value:  Size  Location     Type
  3684 ;;                  1    wreg      void 
  3685 ;; Registers used:
  3686 ;;		wreg, status,2, status,0, cstack
  3687 ;; Tracked objects:
  3688 ;;		On entry : 0/0
  3689 ;;		On exit  : 0/0
  3690 ;;		Unchanged: 0/0
  3691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3694 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3695 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3696 ;;Total ram usage:        1 bytes
  3697 ;; Hardware stack levels used: 1
  3698 ;; Hardware stack levels required when called: 10
  3699 ;; This function calls:
  3700 ;;		_I2C_2_Master_Init
  3701 ;;		_color_writetoaddr
  3702 ;; This function is called by:
  3703 ;;		_main
  3704 ;; This function uses a non-reentrant model
  3705 ;;
  3706                           
  3707                           	psect	text8
  3708   0022DC                     __ptext8:
  3709                           	callstack 0
  3710   0022DC                     _color_click_init:
  3711                           	callstack 20
  3712   0022DC                     
  3713                           ;color.c: 9:     I2C_2_Master_Init();
  3714   0022DC  EC88  F011         	call	_I2C_2_Master_Init	;wreg free
  3715   0022E0                     
  3716                           ;color.c: 12:   color_writetoaddr(0x00, 0x01);
  3717   0022E0  0E01               	movlw	1
  3718   0022E2  6E0B               	movwf	color_writetoaddr@value^0,c
  3719   0022E4  0E00               	movlw	0
  3720   0022E6  EC1F  F012         	call	_color_writetoaddr
  3721   0022EA                     
  3722                           ;color.c: 13:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3723   0022EA  0E3F               	movlw	63
  3724   0022EC  6E0D               	movwf	??_color_click_init^0,c
  3725   0022EE  0E55               	movlw	85
  3726   0022F0                     u4227:
  3727   0022F0  2EE8               	decfsz	wreg,f,c
  3728   0022F2  D7FE               	bra	u4227
  3729   0022F4  2E0D               	decfsz	??_color_click_init^0,f,c
  3730   0022F6  D7FC               	bra	u4227
  3731   0022F8  F000               	nop	
  3732   0022FA                     
  3733                           ;color.c: 16:  color_writetoaddr(0x00, 0x03);
  3734   0022FA  0E03               	movlw	3
  3735   0022FC  6E0B               	movwf	color_writetoaddr@value^0,c
  3736   0022FE  0E00               	movlw	0
  3737   002300  EC1F  F012         	call	_color_writetoaddr
  3738   002304                     
  3739                           ;color.c: 19:  color_writetoaddr(0x01, 0xD5);
  3740   002304  0ED5               	movlw	213
  3741   002306  6E0B               	movwf	color_writetoaddr@value^0,c
  3742   002308  0E01               	movlw	1
  3743   00230A  EC1F  F012         	call	_color_writetoaddr
  3744   00230E  0012               	return		;funcret
  3745   002310                     __end_of_color_click_init:
  3746                           	callstack 0
  3747                           
  3748 ;; *************** function _I2C_2_Master_Init *****************
  3749 ;; Defined at:
  3750 ;;		line 4 in file "i2c.c"
  3751 ;; Parameters:    Size  Location     Type
  3752 ;;		None
  3753 ;; Auto vars:     Size  Location     Type
  3754 ;;		None
  3755 ;; Return value:  Size  Location     Type
  3756 ;;                  1    wreg      void 
  3757 ;; Registers used:
  3758 ;;		wreg, status,2
  3759 ;; Tracked objects:
  3760 ;;		On entry : 0/0
  3761 ;;		On exit  : 0/0
  3762 ;;		Unchanged: 0/0
  3763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3768 ;;Total ram usage:        0 bytes
  3769 ;; Hardware stack levels used: 1
  3770 ;; Hardware stack levels required when called: 7
  3771 ;; This function calls:
  3772 ;;		Nothing
  3773 ;; This function is called by:
  3774 ;;		_color_click_init
  3775 ;; This function uses a non-reentrant model
  3776 ;;
  3777                           
  3778                           	psect	text9
  3779   002310                     __ptext9:
  3780                           	callstack 0
  3781   002310                     _I2C_2_Master_Init:
  3782                           	callstack 22
  3783   002310                     
  3784                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3785   002310  010E               	movlb	14	; () banked
  3786   002312  51D9               	movf	217,w,b	;volatile
  3787   002314  0BF0               	andlw	-16
  3788   002316  0908               	iorlw	8
  3789   002318  6FD9               	movwf	217,b	;volatile
  3790   00231A                     
  3791                           ; BSR set to: 14
  3792                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3793   00231A  8BD9               	bsf	217,5,b	;volatile
  3794                           
  3795                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3796   00231C  0E9F               	movlw	159
  3797   00231E  6FD6               	movwf	214,b	;volatile
  3798   002320                     
  3799                           ; BSR set to: 14
  3800                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3801   002320  8A84               	bsf	132,5,c	;volatile
  3802   002322                     
  3803                           ; BSR set to: 14
  3804                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3805   002322  8C84               	bsf	132,6,c	;volatile
  3806   002324                     
  3807                           ; BSR set to: 14
  3808                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3809   002324  9BA7               	bcf	167,5,b	;volatile
  3810   002326                     
  3811                           ; BSR set to: 14
  3812                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3813   002326  9DA7               	bcf	167,6,b	;volatile
  3814                           
  3815                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3816   002328  0E1D               	movlw	29
  3817   00232A  6F1D               	movwf	29,b	;volatile
  3818                           
  3819                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3820   00232C  0E1E               	movlw	30
  3821   00232E  6F1C               	movwf	28,b	;volatile
  3822                           
  3823                           ;i2c.c: 18:   RD5PPS=0x1C;
  3824   002330  0E1C               	movlw	28
  3825   002332  6F6F               	movwf	111,b	;volatile
  3826                           
  3827                           ;i2c.c: 19:   RD6PPS=0x1B;
  3828   002334  0E1B               	movlw	27
  3829   002336  6F70               	movwf	112,b	;volatile
  3830   002338                     
  3831                           ; BSR set to: 14
  3832   002338  0012               	return		;funcret
  3833   00233A                     __end_of_I2C_2_Master_Init:
  3834                           	callstack 0
  3835                           
  3836 ;; *************** function _WhiteLight *****************
  3837 ;; Defined at:
  3838 ;;		line 17 in file "LED_Buttons.c"
  3839 ;; Parameters:    Size  Location     Type
  3840 ;;		None
  3841 ;; Auto vars:     Size  Location     Type
  3842 ;;		None
  3843 ;; Return value:  Size  Location     Type
  3844 ;;                  1    wreg      void 
  3845 ;; Registers used:
  3846 ;;		None
  3847 ;; Tracked objects:
  3848 ;;		On entry : 0/0
  3849 ;;		On exit  : 0/0
  3850 ;;		Unchanged: 0/0
  3851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3856 ;;Total ram usage:        0 bytes
  3857 ;; Hardware stack levels used: 1
  3858 ;; Hardware stack levels required when called: 7
  3859 ;; This function calls:
  3860 ;;		Nothing
  3861 ;; This function is called by:
  3862 ;;		_main
  3863 ;; This function uses a non-reentrant model
  3864 ;;
  3865                           
  3866                           	psect	text10
  3867   002528                     __ptext10:
  3868                           	callstack 0
  3869   002528                     _WhiteLight:
  3870                           	callstack 23
  3871   002528                     
  3872                           ;LED_Buttons.c: 18:     LATGbits.LATG1 = 1;
  3873   002528  827F               	bsf	127,1,c	;volatile
  3874                           
  3875                           ;LED_Buttons.c: 19:     LATAbits.LATA4 = 1;
  3876   00252A  8879               	bsf	121,4,c	;volatile
  3877                           
  3878                           ;LED_Buttons.c: 20:     LATFbits.LATF7 = 1;
  3879   00252C  8E7E               	bsf	126,7,c	;volatile
  3880   00252E  0012               	return		;funcret
  3881   002530                     __end_of_WhiteLight:
  3882                           	callstack 0
  3883                           
  3884 ;; *************** function _Update_RGBC *****************
  3885 ;; Defined at:
  3886 ;;		line 90 in file "color.c"
  3887 ;; Parameters:    Size  Location     Type
  3888 ;;  tempval         2   19[COMRAM] PTR struct RGB_val
  3889 ;;		 -> main@initial_color(8), 
  3890 ;; Auto vars:     Size  Location     Type
  3891 ;;		None
  3892 ;; Return value:  Size  Location     Type
  3893 ;;                  1    wreg      void 
  3894 ;; Registers used:
  3895 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3896 ;; Tracked objects:
  3897 ;;		On entry : 0/0
  3898 ;;		On exit  : 0/0
  3899 ;;		Unchanged: 0/0
  3900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3901 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3904 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3905 ;;Total ram usage:        2 bytes
  3906 ;; Hardware stack levels used: 1
  3907 ;; Hardware stack levels required when called: 10
  3908 ;; This function calls:
  3909 ;;		_color_read_Blue
  3910 ;;		_color_read_Clear
  3911 ;;		_color_read_Green
  3912 ;;		_color_read_Red
  3913 ;; This function is called by:
  3914 ;;		_main
  3915 ;; This function uses a non-reentrant model
  3916 ;;
  3917                           
  3918                           	psect	text11
  3919   001EAE                     __ptext11:
  3920                           	callstack 0
  3921   001EAE                     _Update_RGBC:
  3922                           	callstack 20
  3923   001EAE                     
  3924                           ;color.c: 92:     tempval->R = color_read_Red();
  3925   001EAE  EC3A  F010         	call	_color_read_Red	;wreg free
  3926   001EB2  C014  FFD9         	movff	Update_RGBC@tempval,fsr2l
  3927   001EB6  C015  FFDA         	movff	Update_RGBC@tempval+1,fsr2h
  3928   001EBA  C00D  FFDE         	movff	?_color_read_Red,postinc2
  3929   001EBE  C00E  FFDD         	movff	?_color_read_Red+1,postdec2
  3930                           
  3931                           ;color.c: 93:     tempval->G = color_read_Green();
  3932   001EC2  EC62  F010         	call	_color_read_Green	;wreg free
  3933   001EC6  EE20 F002          	lfsr	2,2
  3934   001ECA  5014               	movf	Update_RGBC@tempval^0,w,c
  3935   001ECC  26D9               	addwf	fsr2l,f,c
  3936   001ECE  5015               	movf	(Update_RGBC@tempval+1)^0,w,c
  3937   001ED0  22DA               	addwfc	fsr2h,f,c
  3938   001ED2  C00D  FFDE         	movff	?_color_read_Green,postinc2
  3939   001ED6  C00E  FFDD         	movff	?_color_read_Green+1,postdec2
  3940                           
  3941                           ;color.c: 94:     tempval->B = color_read_Blue();
  3942   001EDA  ECB2  F010         	call	_color_read_Blue	;wreg free
  3943   001EDE  EE20 F004          	lfsr	2,4
  3944   001EE2  5014               	movf	Update_RGBC@tempval^0,w,c
  3945   001EE4  26D9               	addwf	fsr2l,f,c
  3946   001EE6  5015               	movf	(Update_RGBC@tempval+1)^0,w,c
  3947   001EE8  22DA               	addwfc	fsr2h,f,c
  3948   001EEA  C00D  FFDE         	movff	?_color_read_Blue,postinc2
  3949   001EEE  C00E  FFDD         	movff	?_color_read_Blue+1,postdec2
  3950                           
  3951                           ;color.c: 95:     tempval->C = color_read_Clear();
  3952   001EF2  EC8A  F010         	call	_color_read_Clear	;wreg free
  3953   001EF6  EE20 F006          	lfsr	2,6
  3954   001EFA  5014               	movf	Update_RGBC@tempval^0,w,c
  3955   001EFC  26D9               	addwf	fsr2l,f,c
  3956   001EFE  5015               	movf	(Update_RGBC@tempval+1)^0,w,c
  3957   001F00  22DA               	addwfc	fsr2h,f,c
  3958   001F02  C00D  FFDE         	movff	?_color_read_Clear,postinc2
  3959   001F06  C00E  FFDD         	movff	?_color_read_Clear+1,postdec2
  3960   001F0A  0012               	return		;funcret
  3961   001F0C                     __end_of_Update_RGBC:
  3962                           	callstack 0
  3963                           
  3964 ;; *************** function _color_read_Red *****************
  3965 ;; Defined at:
  3966 ;;		line 32 in file "color.c"
  3967 ;; Parameters:    Size  Location     Type
  3968 ;;		None
  3969 ;; Auto vars:     Size  Location     Type
  3970 ;;  tmp             2   17[COMRAM] unsigned int 
  3971 ;; Return value:  Size  Location     Type
  3972 ;;                  2   12[COMRAM] unsigned int 
  3973 ;; Registers used:
  3974 ;;		wreg, status,2, status,0, cstack
  3975 ;; Tracked objects:
  3976 ;;		On entry : 0/0
  3977 ;;		On exit  : 0/0
  3978 ;;		Unchanged: 0/0
  3979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3980 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3981 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3982 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3983 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3984 ;;Total ram usage:        7 bytes
  3985 ;; Hardware stack levels used: 1
  3986 ;; Hardware stack levels required when called: 9
  3987 ;; This function calls:
  3988 ;;		_I2C_2_Master_Read
  3989 ;;		_I2C_2_Master_RepStart
  3990 ;;		_I2C_2_Master_Start
  3991 ;;		_I2C_2_Master_Stop
  3992 ;;		_I2C_2_Master_Write
  3993 ;; This function is called by:
  3994 ;;		_Update_RGBC
  3995 ;; This function uses a non-reentrant model
  3996 ;;
  3997                           
  3998                           	psect	text12
  3999   002074                     __ptext12:
  4000                           	callstack 0
  4001   002074                     _color_read_Red:
  4002                           	callstack 20
  4003   002074                     
  4004                           ;color.c: 34:  unsigned int tmp;;color.c: 35:  I2C_2_Master_Start();
  4005   002074  EC85  F012         	call	_I2C_2_Master_Start	;wreg free
  4006                           
  4007                           ;color.c: 36:  I2C_2_Master_Write(0x52 | 0x00);
  4008   002078  0E52               	movlw	82
  4009   00207A  EC6F  F012         	call	_I2C_2_Master_Write
  4010                           
  4011                           ;color.c: 37:  I2C_2_Master_Write(0xA0 | 0x16);
  4012   00207E  0EB6               	movlw	182
  4013   002080  EC6F  F012         	call	_I2C_2_Master_Write
  4014                           
  4015                           ;color.c: 38:  I2C_2_Master_RepStart();
  4016   002084  EC7B  F012         	call	_I2C_2_Master_RepStart	;wreg free
  4017                           
  4018                           ;color.c: 39:  I2C_2_Master_Write(0x52 | 0x01);
  4019   002088  0E53               	movlw	83
  4020   00208A  EC6F  F012         	call	_I2C_2_Master_Write
  4021                           
  4022                           ;color.c: 40:  tmp=I2C_2_Master_Read(1);
  4023   00208E  0E01               	movlw	1
  4024   002090  EC4D  F011         	call	_I2C_2_Master_Read
  4025   002094  6E0F               	movwf	??_color_read_Red^0,c
  4026   002096  500F               	movf	??_color_read_Red^0,w,c
  4027   002098  6E12               	movwf	color_read_Red@tmp^0,c
  4028   00209A  6A13               	clrf	(color_read_Red@tmp+1)^0,c
  4029                           
  4030                           ;color.c: 41:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4031   00209C  0E00               	movlw	0
  4032   00209E  EC4D  F011         	call	_I2C_2_Master_Read
  4033   0020A2  6E0F               	movwf	??_color_read_Red^0,c
  4034   0020A4  500F               	movf	??_color_read_Red^0,w,c
  4035   0020A6  6E11               	movwf	(??_color_read_Red+2)^0,c
  4036   0020A8  6A10               	clrf	(??_color_read_Red+1)^0,c
  4037   0020AA  5012               	movf	color_read_Red@tmp^0,w,c
  4038   0020AC  1010               	iorwf	(??_color_read_Red+1)^0,w,c
  4039   0020AE  6E12               	movwf	color_read_Red@tmp^0,c
  4040   0020B0  5013               	movf	(color_read_Red@tmp+1)^0,w,c
  4041   0020B2  1011               	iorwf	(??_color_read_Red+2)^0,w,c
  4042   0020B4  6E13               	movwf	(color_read_Red@tmp+1)^0,c
  4043                           
  4044                           ;color.c: 42:  I2C_2_Master_Stop();
  4045   0020B6  EC80  F012         	call	_I2C_2_Master_Stop	;wreg free
  4046   0020BA                     
  4047                           ;color.c: 43:  return tmp;
  4048   0020BA  C012  F00D         	movff	color_read_Red@tmp,?_color_read_Red
  4049   0020BE  C013  F00E         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  4050   0020C2  0012               	return		;funcret
  4051   0020C4                     __end_of_color_read_Red:
  4052                           	callstack 0
  4053                           
  4054 ;; *************** function _color_read_Green *****************
  4055 ;; Defined at:
  4056 ;;		line 46 in file "color.c"
  4057 ;; Parameters:    Size  Location     Type
  4058 ;;		None
  4059 ;; Auto vars:     Size  Location     Type
  4060 ;;  tmp             2   17[COMRAM] unsigned int 
  4061 ;; Return value:  Size  Location     Type
  4062 ;;                  2   12[COMRAM] unsigned int 
  4063 ;; Registers used:
  4064 ;;		wreg, status,2, status,0, cstack
  4065 ;; Tracked objects:
  4066 ;;		On entry : 0/0
  4067 ;;		On exit  : 0/0
  4068 ;;		Unchanged: 0/0
  4069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4070 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4071 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4072 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4073 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4074 ;;Total ram usage:        7 bytes
  4075 ;; Hardware stack levels used: 1
  4076 ;; Hardware stack levels required when called: 9
  4077 ;; This function calls:
  4078 ;;		_I2C_2_Master_Read
  4079 ;;		_I2C_2_Master_RepStart
  4080 ;;		_I2C_2_Master_Start
  4081 ;;		_I2C_2_Master_Stop
  4082 ;;		_I2C_2_Master_Write
  4083 ;; This function is called by:
  4084 ;;		_Update_RGBC
  4085 ;; This function uses a non-reentrant model
  4086 ;;
  4087                           
  4088                           	psect	text13
  4089   0020C4                     __ptext13:
  4090                           	callstack 0
  4091   0020C4                     _color_read_Green:
  4092                           	callstack 20
  4093   0020C4                     
  4094                           ;color.c: 48:  unsigned int tmp;;color.c: 49:  I2C_2_Master_Start();
  4095   0020C4  EC85  F012         	call	_I2C_2_Master_Start	;wreg free
  4096                           
  4097                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x00);
  4098   0020C8  0E52               	movlw	82
  4099   0020CA  EC6F  F012         	call	_I2C_2_Master_Write
  4100                           
  4101                           ;color.c: 51:  I2C_2_Master_Write(0xA0 | 0x18);
  4102   0020CE  0EB8               	movlw	184
  4103   0020D0  EC6F  F012         	call	_I2C_2_Master_Write
  4104                           
  4105                           ;color.c: 52:  I2C_2_Master_RepStart();
  4106   0020D4  EC7B  F012         	call	_I2C_2_Master_RepStart	;wreg free
  4107                           
  4108                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x01);
  4109   0020D8  0E53               	movlw	83
  4110   0020DA  EC6F  F012         	call	_I2C_2_Master_Write
  4111                           
  4112                           ;color.c: 54:  tmp=I2C_2_Master_Read(1);
  4113   0020DE  0E01               	movlw	1
  4114   0020E0  EC4D  F011         	call	_I2C_2_Master_Read
  4115   0020E4  6E0F               	movwf	??_color_read_Green^0,c
  4116   0020E6  500F               	movf	??_color_read_Green^0,w,c
  4117   0020E8  6E12               	movwf	color_read_Green@tmp^0,c
  4118   0020EA  6A13               	clrf	(color_read_Green@tmp+1)^0,c
  4119                           
  4120                           ;color.c: 55:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4121   0020EC  0E00               	movlw	0
  4122   0020EE  EC4D  F011         	call	_I2C_2_Master_Read
  4123   0020F2  6E0F               	movwf	??_color_read_Green^0,c
  4124   0020F4  500F               	movf	??_color_read_Green^0,w,c
  4125   0020F6  6E11               	movwf	(??_color_read_Green+2)^0,c
  4126   0020F8  6A10               	clrf	(??_color_read_Green+1)^0,c
  4127   0020FA  5012               	movf	color_read_Green@tmp^0,w,c
  4128   0020FC  1010               	iorwf	(??_color_read_Green+1)^0,w,c
  4129   0020FE  6E12               	movwf	color_read_Green@tmp^0,c
  4130   002100  5013               	movf	(color_read_Green@tmp+1)^0,w,c
  4131   002102  1011               	iorwf	(??_color_read_Green+2)^0,w,c
  4132   002104  6E13               	movwf	(color_read_Green@tmp+1)^0,c
  4133                           
  4134                           ;color.c: 56:  I2C_2_Master_Stop();
  4135   002106  EC80  F012         	call	_I2C_2_Master_Stop	;wreg free
  4136   00210A                     
  4137                           ;color.c: 57:  return tmp;
  4138   00210A  C012  F00D         	movff	color_read_Green@tmp,?_color_read_Green
  4139   00210E  C013  F00E         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  4140   002112  0012               	return		;funcret
  4141   002114                     __end_of_color_read_Green:
  4142                           	callstack 0
  4143                           
  4144 ;; *************** function _color_read_Clear *****************
  4145 ;; Defined at:
  4146 ;;		line 74 in file "color.c"
  4147 ;; Parameters:    Size  Location     Type
  4148 ;;		None
  4149 ;; Auto vars:     Size  Location     Type
  4150 ;;  tmp             2   17[COMRAM] unsigned int 
  4151 ;; Return value:  Size  Location     Type
  4152 ;;                  2   12[COMRAM] unsigned int 
  4153 ;; Registers used:
  4154 ;;		wreg, status,2, status,0, cstack
  4155 ;; Tracked objects:
  4156 ;;		On entry : 0/0
  4157 ;;		On exit  : 0/0
  4158 ;;		Unchanged: 0/0
  4159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4160 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4161 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4162 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4163 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4164 ;;Total ram usage:        7 bytes
  4165 ;; Hardware stack levels used: 1
  4166 ;; Hardware stack levels required when called: 9
  4167 ;; This function calls:
  4168 ;;		_I2C_2_Master_Read
  4169 ;;		_I2C_2_Master_RepStart
  4170 ;;		_I2C_2_Master_Start
  4171 ;;		_I2C_2_Master_Stop
  4172 ;;		_I2C_2_Master_Write
  4173 ;; This function is called by:
  4174 ;;		_Update_RGBC
  4175 ;; This function uses a non-reentrant model
  4176 ;;
  4177                           
  4178                           	psect	text14
  4179   002114                     __ptext14:
  4180                           	callstack 0
  4181   002114                     _color_read_Clear:
  4182                           	callstack 20
  4183   002114                     
  4184                           ;color.c: 76:  unsigned int tmp;;color.c: 77:  I2C_2_Master_Start();
  4185   002114  EC85  F012         	call	_I2C_2_Master_Start	;wreg free
  4186                           
  4187                           ;color.c: 78:  I2C_2_Master_Write(0x52 | 0x00);
  4188   002118  0E52               	movlw	82
  4189   00211A  EC6F  F012         	call	_I2C_2_Master_Write
  4190                           
  4191                           ;color.c: 79:  I2C_2_Master_Write(0xA0 | 0x14);
  4192   00211E  0EB4               	movlw	180
  4193   002120  EC6F  F012         	call	_I2C_2_Master_Write
  4194                           
  4195                           ;color.c: 80:  I2C_2_Master_RepStart();
  4196   002124  EC7B  F012         	call	_I2C_2_Master_RepStart	;wreg free
  4197                           
  4198                           ;color.c: 81:  I2C_2_Master_Write(0x52 | 0x01);
  4199   002128  0E53               	movlw	83
  4200   00212A  EC6F  F012         	call	_I2C_2_Master_Write
  4201                           
  4202                           ;color.c: 82:  tmp=I2C_2_Master_Read(1);
  4203   00212E  0E01               	movlw	1
  4204   002130  EC4D  F011         	call	_I2C_2_Master_Read
  4205   002134  6E0F               	movwf	??_color_read_Clear^0,c
  4206   002136  500F               	movf	??_color_read_Clear^0,w,c
  4207   002138  6E12               	movwf	color_read_Clear@tmp^0,c
  4208   00213A  6A13               	clrf	(color_read_Clear@tmp+1)^0,c
  4209                           
  4210                           ;color.c: 83:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4211   00213C  0E00               	movlw	0
  4212   00213E  EC4D  F011         	call	_I2C_2_Master_Read
  4213   002142  6E0F               	movwf	??_color_read_Clear^0,c
  4214   002144  500F               	movf	??_color_read_Clear^0,w,c
  4215   002146  6E11               	movwf	(??_color_read_Clear+2)^0,c
  4216   002148  6A10               	clrf	(??_color_read_Clear+1)^0,c
  4217   00214A  5012               	movf	color_read_Clear@tmp^0,w,c
  4218   00214C  1010               	iorwf	(??_color_read_Clear+1)^0,w,c
  4219   00214E  6E12               	movwf	color_read_Clear@tmp^0,c
  4220   002150  5013               	movf	(color_read_Clear@tmp+1)^0,w,c
  4221   002152  1011               	iorwf	(??_color_read_Clear+2)^0,w,c
  4222   002154  6E13               	movwf	(color_read_Clear@tmp+1)^0,c
  4223                           
  4224                           ;color.c: 84:  I2C_2_Master_Stop();
  4225   002156  EC80  F012         	call	_I2C_2_Master_Stop	;wreg free
  4226   00215A                     
  4227                           ;color.c: 85:  return tmp;
  4228   00215A  C012  F00D         	movff	color_read_Clear@tmp,?_color_read_Clear
  4229   00215E  C013  F00E         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  4230   002162  0012               	return		;funcret
  4231   002164                     __end_of_color_read_Clear:
  4232                           	callstack 0
  4233                           
  4234 ;; *************** function _color_read_Blue *****************
  4235 ;; Defined at:
  4236 ;;		line 60 in file "color.c"
  4237 ;; Parameters:    Size  Location     Type
  4238 ;;		None
  4239 ;; Auto vars:     Size  Location     Type
  4240 ;;  tmp             2   17[COMRAM] unsigned int 
  4241 ;; Return value:  Size  Location     Type
  4242 ;;                  2   12[COMRAM] unsigned int 
  4243 ;; Registers used:
  4244 ;;		wreg, status,2, status,0, cstack
  4245 ;; Tracked objects:
  4246 ;;		On entry : 0/0
  4247 ;;		On exit  : 0/0
  4248 ;;		Unchanged: 0/0
  4249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4250 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4251 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4252 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4253 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4254 ;;Total ram usage:        7 bytes
  4255 ;; Hardware stack levels used: 1
  4256 ;; Hardware stack levels required when called: 9
  4257 ;; This function calls:
  4258 ;;		_I2C_2_Master_Read
  4259 ;;		_I2C_2_Master_RepStart
  4260 ;;		_I2C_2_Master_Start
  4261 ;;		_I2C_2_Master_Stop
  4262 ;;		_I2C_2_Master_Write
  4263 ;; This function is called by:
  4264 ;;		_Update_RGBC
  4265 ;; This function uses a non-reentrant model
  4266 ;;
  4267                           
  4268                           	psect	text15
  4269   002164                     __ptext15:
  4270                           	callstack 0
  4271   002164                     _color_read_Blue:
  4272                           	callstack 20
  4273   002164                     
  4274                           ;color.c: 62:  unsigned int tmp;;color.c: 63:  I2C_2_Master_Start();
  4275   002164  EC85  F012         	call	_I2C_2_Master_Start	;wreg free
  4276                           
  4277                           ;color.c: 64:  I2C_2_Master_Write(0x52 | 0x00);
  4278   002168  0E52               	movlw	82
  4279   00216A  EC6F  F012         	call	_I2C_2_Master_Write
  4280                           
  4281                           ;color.c: 65:  I2C_2_Master_Write(0xA0 | 0x1A);
  4282   00216E  0EBA               	movlw	186
  4283   002170  EC6F  F012         	call	_I2C_2_Master_Write
  4284                           
  4285                           ;color.c: 66:  I2C_2_Master_RepStart();
  4286   002174  EC7B  F012         	call	_I2C_2_Master_RepStart	;wreg free
  4287                           
  4288                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x01);
  4289   002178  0E53               	movlw	83
  4290   00217A  EC6F  F012         	call	_I2C_2_Master_Write
  4291                           
  4292                           ;color.c: 68:  tmp=I2C_2_Master_Read(1);
  4293   00217E  0E01               	movlw	1
  4294   002180  EC4D  F011         	call	_I2C_2_Master_Read
  4295   002184  6E0F               	movwf	??_color_read_Blue^0,c
  4296   002186  500F               	movf	??_color_read_Blue^0,w,c
  4297   002188  6E12               	movwf	color_read_Blue@tmp^0,c
  4298   00218A  6A13               	clrf	(color_read_Blue@tmp+1)^0,c
  4299                           
  4300                           ;color.c: 69:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4301   00218C  0E00               	movlw	0
  4302   00218E  EC4D  F011         	call	_I2C_2_Master_Read
  4303   002192  6E0F               	movwf	??_color_read_Blue^0,c
  4304   002194  500F               	movf	??_color_read_Blue^0,w,c
  4305   002196  6E11               	movwf	(??_color_read_Blue+2)^0,c
  4306   002198  6A10               	clrf	(??_color_read_Blue+1)^0,c
  4307   00219A  5012               	movf	color_read_Blue@tmp^0,w,c
  4308   00219C  1010               	iorwf	(??_color_read_Blue+1)^0,w,c
  4309   00219E  6E12               	movwf	color_read_Blue@tmp^0,c
  4310   0021A0  5013               	movf	(color_read_Blue@tmp+1)^0,w,c
  4311   0021A2  1011               	iorwf	(??_color_read_Blue+2)^0,w,c
  4312   0021A4  6E13               	movwf	(color_read_Blue@tmp+1)^0,c
  4313                           
  4314                           ;color.c: 70:  I2C_2_Master_Stop();
  4315   0021A6  EC80  F012         	call	_I2C_2_Master_Stop	;wreg free
  4316   0021AA                     
  4317                           ;color.c: 71:  return tmp;
  4318   0021AA  C012  F00D         	movff	color_read_Blue@tmp,?_color_read_Blue
  4319   0021AE  C013  F00E         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  4320   0021B2  0012               	return		;funcret
  4321   0021B4                     __end_of_color_read_Blue:
  4322                           	callstack 0
  4323                           
  4324 ;; *************** function _I2C_2_Master_RepStart *****************
  4325 ;; Defined at:
  4326 ;;		line 33 in file "i2c.c"
  4327 ;; Parameters:    Size  Location     Type
  4328 ;;		None
  4329 ;; Auto vars:     Size  Location     Type
  4330 ;;		None
  4331 ;; Return value:  Size  Location     Type
  4332 ;;                  1    wreg      void 
  4333 ;; Registers used:
  4334 ;;		wreg, status,2, status,0, cstack
  4335 ;; Tracked objects:
  4336 ;;		On entry : 0/0
  4337 ;;		On exit  : 0/0
  4338 ;;		Unchanged: 0/0
  4339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4344 ;;Total ram usage:        0 bytes
  4345 ;; Hardware stack levels used: 1
  4346 ;; Hardware stack levels required when called: 8
  4347 ;; This function calls:
  4348 ;;		_I2C_2_Master_Idle
  4349 ;; This function is called by:
  4350 ;;		_color_read_Red
  4351 ;;		_color_read_Green
  4352 ;;		_color_read_Blue
  4353 ;;		_color_read_Clear
  4354 ;; This function uses a non-reentrant model
  4355 ;;
  4356                           
  4357                           	psect	text16
  4358   0024F6                     __ptext16:
  4359                           	callstack 0
  4360   0024F6                     _I2C_2_Master_RepStart:
  4361                           	callstack 20
  4362   0024F6                     
  4363                           ;i2c.c: 35:   I2C_2_Master_Idle();
  4364   0024F6  EC9D  F011         	call	_I2C_2_Master_Idle	;wreg free
  4365   0024FA                     
  4366                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  4367   0024FA  010E               	movlb	14	; () banked
  4368   0024FC  83DA               	bsf	218,1,b	;volatile
  4369   0024FE                     
  4370                           ; BSR set to: 14
  4371   0024FE  0012               	return		;funcret
  4372   002500                     __end_of_I2C_2_Master_RepStart:
  4373                           	callstack 0
  4374                           
  4375 ;; *************** function _I2C_2_Master_Read *****************
  4376 ;; Defined at:
  4377 ;;		line 51 in file "i2c.c"
  4378 ;; Parameters:    Size  Location     Type
  4379 ;;  ack             1    wreg     unsigned char 
  4380 ;; Auto vars:     Size  Location     Type
  4381 ;;  ack             1   10[COMRAM] unsigned char 
  4382 ;;  tmp             1   11[COMRAM] unsigned char 
  4383 ;; Return value:  Size  Location     Type
  4384 ;;                  1    wreg      unsigned char 
  4385 ;; Registers used:
  4386 ;;		wreg, status,2, status,0, cstack
  4387 ;; Tracked objects:
  4388 ;;		On entry : 0/0
  4389 ;;		On exit  : 0/0
  4390 ;;		Unchanged: 0/0
  4391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4393 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4394 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4395 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4396 ;;Total ram usage:        3 bytes
  4397 ;; Hardware stack levels used: 1
  4398 ;; Hardware stack levels required when called: 8
  4399 ;; This function calls:
  4400 ;;		_I2C_2_Master_Idle
  4401 ;; This function is called by:
  4402 ;;		_color_read_Red
  4403 ;;		_color_read_Green
  4404 ;;		_color_read_Blue
  4405 ;;		_color_read_Clear
  4406 ;; This function uses a non-reentrant model
  4407 ;;
  4408                           
  4409                           	psect	text17
  4410   00229A                     __ptext17:
  4411                           	callstack 0
  4412   00229A                     _I2C_2_Master_Read:
  4413                           	callstack 20
  4414                           
  4415                           ; BSR set to: 14
  4416                           ;incstack = 0
  4417                           ;I2C_2_Master_Read@ack stored from wreg
  4418   00229A  6E0B               	movwf	I2C_2_Master_Read@ack^0,c
  4419   00229C                     
  4420                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  4421   00229C  EC9D  F011         	call	_I2C_2_Master_Idle	;wreg free
  4422   0022A0                     
  4423                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  4424   0022A0  010E               	movlb	14	; () banked
  4425   0022A2  87DA               	bsf	218,3,b	;volatile
  4426                           
  4427                           ;i2c.c: 56:   I2C_2_Master_Idle();
  4428   0022A4  EC9D  F011         	call	_I2C_2_Master_Idle	;wreg free
  4429   0022A8                     
  4430                           ;i2c.c: 57:   tmp = SSP2BUF;
  4431   0022A8  CED5 F00C          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  4432                           
  4433                           ;i2c.c: 58:   I2C_2_Master_Idle();
  4434   0022AC  EC9D  F011         	call	_I2C_2_Master_Idle	;wreg free
  4435   0022B0                     
  4436                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  4437   0022B0  500B               	movf	I2C_2_Master_Read@ack^0,w,c
  4438   0022B2  B4D8               	btfsc	status,2,c
  4439   0022B4  EF5E  F011         	goto	u1991
  4440   0022B8  EF62  F011         	goto	u1990
  4441   0022BC                     u1991:
  4442   0022BC  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  4443   0022BE  2A0A               	incf	??_I2C_2_Master_Read^0,f,c
  4444   0022C0  EF63  F011         	goto	u2008
  4445   0022C4                     u1990:
  4446   0022C4  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  4447   0022C6                     u2008:
  4448   0022C6  3A0A               	swapf	??_I2C_2_Master_Read^0,f,c
  4449   0022C8  460A               	rlncf	??_I2C_2_Master_Read^0,f,c
  4450   0022CA  010E               	movlb	14	; () banked
  4451   0022CC  51DA               	movf	218,w,b	;volatile
  4452   0022CE  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  4453   0022D0  0BDF               	andlw	-33
  4454   0022D2  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  4455   0022D4  6FDA               	movwf	218,b	;volatile
  4456   0022D6                     
  4457                           ; BSR set to: 14
  4458                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  4459   0022D6  89DA               	bsf	218,4,b	;volatile
  4460   0022D8                     
  4461                           ; BSR set to: 14
  4462                           ;i2c.c: 61:   return tmp;
  4463   0022D8  500C               	movf	I2C_2_Master_Read@tmp^0,w,c
  4464   0022DA                     
  4465                           ; BSR set to: 14
  4466   0022DA  0012               	return		;funcret
  4467   0022DC                     __end_of_I2C_2_Master_Read:
  4468                           	callstack 0
  4469                           
  4470 ;; *************** function _Timer0_init *****************
  4471 ;; Defined at:
  4472 ;;		line 7 in file "timers.c"
  4473 ;; Parameters:    Size  Location     Type
  4474 ;;		None
  4475 ;; Auto vars:     Size  Location     Type
  4476 ;;		None
  4477 ;; Return value:  Size  Location     Type
  4478 ;;                  1    wreg      void 
  4479 ;; Registers used:
  4480 ;;		wreg, status,2
  4481 ;; Tracked objects:
  4482 ;;		On entry : 0/0
  4483 ;;		On exit  : 0/0
  4484 ;;		Unchanged: 0/0
  4485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4490 ;;Total ram usage:        0 bytes
  4491 ;; Hardware stack levels used: 1
  4492 ;; Hardware stack levels required when called: 7
  4493 ;; This function calls:
  4494 ;;		Nothing
  4495 ;; This function is called by:
  4496 ;;		_main
  4497 ;; This function uses a non-reentrant model
  4498 ;;
  4499                           
  4500                           	psect	text18
  4501   00241E                     __ptext18:
  4502                           	callstack 0
  4503   00241E                     _Timer0_init:
  4504                           	callstack 23
  4505   00241E                     
  4506                           ;timers.c: 9:     T0CON1bits.T0CS=0b010;
  4507   00241E  50D6               	movf	214,w,c	;volatile
  4508   002420  0B1F               	andlw	-225
  4509   002422  0940               	iorlw	64
  4510   002424  6ED6               	movwf	214,c	;volatile
  4511   002426                     
  4512                           ;timers.c: 10:     T0CON1bits.T0ASYNC=1;
  4513   002426  88D6               	bsf	214,4,c	;volatile
  4514                           
  4515                           ;timers.c: 11:     T0CON1bits.T0CKPS=0b1000;
  4516   002428  50D6               	movf	214,w,c	;volatile
  4517   00242A  0BF0               	andlw	-16
  4518   00242C  0908               	iorlw	8
  4519   00242E  6ED6               	movwf	214,c	;volatile
  4520   002430                     
  4521                           ;timers.c: 12:     T0CON0bits.T016BIT=1;
  4522   002430  88D5               	bsf	213,4,c	;volatile
  4523                           
  4524                           ;timers.c: 15:     TMR0H = 0b11000010;
  4525   002432  0EC2               	movlw	194
  4526   002434  6ED4               	movwf	212,c	;volatile
  4527                           
  4528                           ;timers.c: 16:     TMR0L = 0b11110110;
  4529   002436  0EF6               	movlw	246
  4530   002438  6ED3               	movwf	211,c	;volatile
  4531   00243A                     
  4532                           ;timers.c: 17:     T0CON0bits.T0EN=1;
  4533   00243A  8ED5               	bsf	213,7,c	;volatile
  4534   00243C  0012               	return		;funcret
  4535   00243E                     __end_of_Timer0_init:
  4536                           	callstack 0
  4537                           
  4538 ;; *************** function _MoveBuggy *****************
  4539 ;; Defined at:
  4540 ;;		line 175 in file "color_instructions.c"
  4541 ;; Parameters:    Size  Location     Type
  4542 ;;  color_detect    2   45[COMRAM] PTR unsigned char 
  4543 ;;		 -> RAM(3561), 
  4544 ;;  mL              2   47[COMRAM] PTR struct DC_motor
  4545 ;;		 -> main@motorL(9), 
  4546 ;;  mR              2   49[COMRAM] PTR struct DC_motor
  4547 ;;		 -> main@motorR(9), 
  4548 ;; Auto vars:     Size  Location     Type
  4549 ;;		None
  4550 ;; Return value:  Size  Location     Type
  4551 ;;                  1    wreg      void 
  4552 ;; Registers used:
  4553 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4554 ;; Tracked objects:
  4555 ;;		On entry : 0/0
  4556 ;;		On exit  : 0/0
  4557 ;;		Unchanged: 0/0
  4558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4559 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4562 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4563 ;;Total ram usage:        6 bytes
  4564 ;; Hardware stack levels used: 1
  4565 ;; Hardware stack levels required when called: 12
  4566 ;; This function calls:
  4567 ;;		_AppendMoves
  4568 ;;		_BlueInstructions
  4569 ;;		_GreenInstructions
  4570 ;;		_LightBlueInstructions
  4571 ;;		_OrangeInstructions
  4572 ;;		_PinkInstructions
  4573 ;;		_RedInstructions
  4574 ;;		_YellowInstructions
  4575 ;; This function is called by:
  4576 ;;		_main
  4577 ;;		_WhiteInstructions
  4578 ;; This function uses a non-reentrant model
  4579 ;;
  4580                           
  4581                           	psect	text19
  4582   000FF0                     __ptext19:
  4583                           	callstack 0
  4584   000FF0                     _MoveBuggy:
  4585                           	callstack 18
  4586   000FF0                     
  4587                           ;color_instructions.c: 176:     if (color_detected==1){
  4588   000FF0  042E               	decf	MoveBuggy@color_detected^0,w,c
  4589   000FF2  102F               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4590   000FF4  A4D8               	btfss	status,2,c
  4591   000FF6  EFFF  F007         	goto	u3361
  4592   000FFA  EF01  F008         	goto	u3360
  4593   000FFE                     u3361:
  4594   000FFE  EF18  F008         	goto	l3645
  4595   001002                     u3360:
  4596   001002                     
  4597                           ;color_instructions.c: 177:         RedInstructions(mL, mR);
  4598   001002  C030  F027         	movff	MoveBuggy@mL,RedInstructions@mL
  4599   001006  C031  F028         	movff	MoveBuggy@mL+1,RedInstructions@mL+1
  4600   00100A  C032  F029         	movff	MoveBuggy@mR,RedInstructions@mR
  4601   00100E  C033  F02A         	movff	MoveBuggy@mR+1,RedInstructions@mR+1
  4602   001012  ECCE  F00D         	call	_RedInstructions	;wreg free
  4603   001016                     
  4604                           ;color_instructions.c: 178:         AppendMoves(2,&moves_index,anti_moves_array);
  4605   001016  0E56               	movlw	low _moves_index
  4606   001018  6E09               	movwf	AppendMoves@moves_index^0,c
  4607   00101A  0E00               	movlw	high _moves_index
  4608   00101C  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4609   00101E  0E75               	movlw	low _anti_moves_array
  4610   001020  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4611   001022  0E00               	movlw	high _anti_moves_array
  4612   001024  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4613   001026  0E02               	movlw	2
  4614   001028  ECEB  F011         	call	_AppendMoves
  4615                           
  4616                           ;color_instructions.c: 179:     }
  4617   00102C  EFC8  F008         	goto	l641
  4618   001030                     l3645:
  4619   001030  0E02               	movlw	2
  4620   001032  182E               	xorwf	MoveBuggy@color_detected^0,w,c
  4621   001034  102F               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4622   001036  A4D8               	btfss	status,2,c
  4623   001038  EF20  F008         	goto	u3371
  4624   00103C  EF22  F008         	goto	u3370
  4625   001040                     u3371:
  4626   001040  EF39  F008         	goto	l3651
  4627   001044                     u3370:
  4628   001044                     
  4629                           ;color_instructions.c: 181:         GreenInstructions(mL, mR);
  4630   001044  C030  F027         	movff	MoveBuggy@mL,GreenInstructions@mL
  4631   001048  C031  F028         	movff	MoveBuggy@mL+1,GreenInstructions@mL+1
  4632   00104C  C032  F029         	movff	MoveBuggy@mR,GreenInstructions@mR
  4633   001050  C033  F02A         	movff	MoveBuggy@mR+1,GreenInstructions@mR+1
  4634   001054  ECDA  F00E         	call	_GreenInstructions	;wreg free
  4635   001058                     
  4636                           ;color_instructions.c: 182:         AppendMoves(1,&moves_index,anti_moves_array);
  4637   001058  0E56               	movlw	low _moves_index
  4638   00105A  6E09               	movwf	AppendMoves@moves_index^0,c
  4639   00105C  0E00               	movlw	high _moves_index
  4640   00105E  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4641   001060  0E75               	movlw	low _anti_moves_array
  4642   001062  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4643   001064  0E00               	movlw	high _anti_moves_array
  4644   001066  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4645   001068  0E01               	movlw	1
  4646   00106A  ECEB  F011         	call	_AppendMoves
  4647                           
  4648                           ;color_instructions.c: 183:     }
  4649   00106E  EFC8  F008         	goto	l641
  4650   001072                     l3651:
  4651   001072  0E03               	movlw	3
  4652   001074  182E               	xorwf	MoveBuggy@color_detected^0,w,c
  4653   001076  102F               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4654   001078  A4D8               	btfss	status,2,c
  4655   00107A  EF41  F008         	goto	u3381
  4656   00107E  EF43  F008         	goto	u3380
  4657   001082                     u3381:
  4658   001082  EF5A  F008         	goto	l3657
  4659   001086                     u3380:
  4660   001086                     
  4661                           ;color_instructions.c: 185:         BlueInstructions(mL, mR);
  4662   001086  C030  F027         	movff	MoveBuggy@mL,BlueInstructions@mL
  4663   00108A  C031  F028         	movff	MoveBuggy@mL+1,BlueInstructions@mL+1
  4664   00108E  C032  F029         	movff	MoveBuggy@mR,BlueInstructions@mR
  4665   001092  C033  F02A         	movff	MoveBuggy@mR+1,BlueInstructions@mR+1
  4666   001096  ECEA  F00C         	call	_BlueInstructions	;wreg free
  4667   00109A                     
  4668                           ;color_instructions.c: 186:         AppendMoves(3,&moves_index,anti_moves_array);
  4669   00109A  0E56               	movlw	low _moves_index
  4670   00109C  6E09               	movwf	AppendMoves@moves_index^0,c
  4671   00109E  0E00               	movlw	high _moves_index
  4672   0010A0  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4673   0010A2  0E75               	movlw	low _anti_moves_array
  4674   0010A4  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4675   0010A6  0E00               	movlw	high _anti_moves_array
  4676   0010A8  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4677   0010AA  0E03               	movlw	3
  4678   0010AC  ECEB  F011         	call	_AppendMoves
  4679                           
  4680                           ;color_instructions.c: 187:     }
  4681   0010B0  EFC8  F008         	goto	l641
  4682   0010B4                     l3657:
  4683   0010B4  0E04               	movlw	4
  4684   0010B6  182E               	xorwf	MoveBuggy@color_detected^0,w,c
  4685   0010B8  102F               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4686   0010BA  A4D8               	btfss	status,2,c
  4687   0010BC  EF62  F008         	goto	u3391
  4688   0010C0  EF64  F008         	goto	u3390
  4689   0010C4                     u3391:
  4690   0010C4  EF70  F008         	goto	l3661
  4691   0010C8                     u3390:
  4692   0010C8                     
  4693                           ;color_instructions.c: 189:         YellowInstructions(mL, mR);
  4694   0010C8  C030  F027         	movff	MoveBuggy@mL,YellowInstructions@mL
  4695   0010CC  C031  F028         	movff	MoveBuggy@mL+1,YellowInstructions@mL+1
  4696   0010D0  C032  F029         	movff	MoveBuggy@mR,YellowInstructions@mR
  4697   0010D4  C033  F02A         	movff	MoveBuggy@mR+1,YellowInstructions@mR+1
  4698   0010D8  EC8B  F00D         	call	_YellowInstructions	;wreg free
  4699                           
  4700                           ;color_instructions.c: 191:     }
  4701   0010DC  EFC8  F008         	goto	l641
  4702   0010E0                     l3661:
  4703   0010E0  0E05               	movlw	5
  4704   0010E2  182E               	xorwf	MoveBuggy@color_detected^0,w,c
  4705   0010E4  102F               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4706   0010E6  A4D8               	btfss	status,2,c
  4707   0010E8  EF78  F008         	goto	u3401
  4708   0010EC  EF7A  F008         	goto	u3400
  4709   0010F0                     u3401:
  4710   0010F0  EF86  F008         	goto	l3665
  4711   0010F4                     u3400:
  4712   0010F4                     
  4713                           ;color_instructions.c: 193:         PinkInstructions(mL, mR);
  4714   0010F4  C030  F027         	movff	MoveBuggy@mL,PinkInstructions@mL
  4715   0010F8  C031  F028         	movff	MoveBuggy@mL+1,PinkInstructions@mL+1
  4716   0010FC  C032  F029         	movff	MoveBuggy@mR,PinkInstructions@mR
  4717   001100  C033  F02A         	movff	MoveBuggy@mR+1,PinkInstructions@mR+1
  4718   001104  EC11  F00E         	call	_PinkInstructions	;wreg free
  4719                           
  4720                           ;color_instructions.c: 195:     }
  4721   001108  EFC8  F008         	goto	l641
  4722   00110C                     l3665:
  4723   00110C  0E06               	movlw	6
  4724   00110E  182E               	xorwf	MoveBuggy@color_detected^0,w,c
  4725   001110  102F               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4726   001112  A4D8               	btfss	status,2,c
  4727   001114  EF8E  F008         	goto	u3411
  4728   001118  EF90  F008         	goto	u3410
  4729   00111C                     u3411:
  4730   00111C  EFA7  F008         	goto	l3671
  4731   001120                     u3410:
  4732   001120                     
  4733                           ;color_instructions.c: 197:         OrangeInstructions(mL, mR);
  4734   001120  C030  F027         	movff	MoveBuggy@mL,OrangeInstructions@mL
  4735   001124  C031  F028         	movff	MoveBuggy@mL+1,OrangeInstructions@mL+1
  4736   001128  C032  F029         	movff	MoveBuggy@mR,OrangeInstructions@mR
  4737   00112C  C033  F02A         	movff	MoveBuggy@mR+1,OrangeInstructions@mR+1
  4738   001130  EC54  F00E         	call	_OrangeInstructions	;wreg free
  4739   001134                     
  4740                           ;color_instructions.c: 198:         AppendMoves(7,&moves_index,anti_moves_array);
  4741   001134  0E56               	movlw	low _moves_index
  4742   001136  6E09               	movwf	AppendMoves@moves_index^0,c
  4743   001138  0E00               	movlw	high _moves_index
  4744   00113A  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4745   00113C  0E75               	movlw	low _anti_moves_array
  4746   00113E  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4747   001140  0E00               	movlw	high _anti_moves_array
  4748   001142  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4749   001144  0E07               	movlw	7
  4750   001146  ECEB  F011         	call	_AppendMoves
  4751                           
  4752                           ;color_instructions.c: 199:     }
  4753   00114A  EFC8  F008         	goto	l641
  4754   00114E                     l3671:
  4755   00114E  0E07               	movlw	7
  4756   001150  182E               	xorwf	MoveBuggy@color_detected^0,w,c
  4757   001152  102F               	iorwf	(MoveBuggy@color_detected+1)^0,w,c
  4758   001154  A4D8               	btfss	status,2,c
  4759   001156  EFAF  F008         	goto	u3421
  4760   00115A  EFB1  F008         	goto	u3420
  4761   00115E                     u3421:
  4762   00115E  EFC8  F008         	goto	l635
  4763   001162                     u3420:
  4764   001162                     
  4765                           ;color_instructions.c: 201:         LightBlueInstructions(mL, mR);
  4766   001162  C030  F027         	movff	MoveBuggy@mL,LightBlueInstructions@mL
  4767   001166  C031  F028         	movff	MoveBuggy@mL+1,LightBlueInstructions@mL+1
  4768   00116A  C032  F029         	movff	MoveBuggy@mR,LightBlueInstructions@mR
  4769   00116E  C033  F02A         	movff	MoveBuggy@mR+1,LightBlueInstructions@mR+1
  4770   001172  EC97  F00E         	call	_LightBlueInstructions	;wreg free
  4771   001176                     
  4772                           ;color_instructions.c: 202:         AppendMoves(6,&moves_index,anti_moves_array);
  4773   001176  0E56               	movlw	low _moves_index
  4774   001178  6E09               	movwf	AppendMoves@moves_index^0,c
  4775   00117A  0E00               	movlw	high _moves_index
  4776   00117C  6E0A               	movwf	(AppendMoves@moves_index+1)^0,c
  4777   00117E  0E75               	movlw	low _anti_moves_array
  4778   001180  6E0B               	movwf	AppendMoves@anti_moves_array^0,c
  4779   001182  0E00               	movlw	high _anti_moves_array
  4780   001184  6E0C               	movwf	(AppendMoves@anti_moves_array+1)^0,c
  4781   001186  0E06               	movlw	6
  4782   001188  ECEB  F011         	call	_AppendMoves
  4783   00118C  EFC8  F008         	goto	l641
  4784   001190                     l635:
  4785   001190                     l641:
  4786   001190  0012               	return		;funcret
  4787   001192                     __end_of_MoveBuggy:
  4788                           	callstack 0
  4789                           
  4790 ;; *************** function _YellowInstructions *****************
  4791 ;; Defined at:
  4792 ;;		line 58 in file "color_instructions.c"
  4793 ;; Parameters:    Size  Location     Type
  4794 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  4795 ;;		 -> main@motorL(9), 
  4796 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  4797 ;;		 -> main@motorR(9), 
  4798 ;; Auto vars:     Size  Location     Type
  4799 ;;  a               1   44[COMRAM] unsigned char 
  4800 ;; Return value:  Size  Location     Type
  4801 ;;                  1    wreg      void 
  4802 ;; Registers used:
  4803 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4804 ;; Tracked objects:
  4805 ;;		On entry : 0/0
  4806 ;;		On exit  : 0/0
  4807 ;;		Unchanged: 0/0
  4808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4809 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4810 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4811 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4812 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4813 ;;Total ram usage:        7 bytes
  4814 ;; Hardware stack levels used: 1
  4815 ;; Hardware stack levels required when called: 11
  4816 ;; This function calls:
  4817 ;;		_fullSpeedBackwards
  4818 ;;		_stop
  4819 ;;		_turnRight90
  4820 ;; This function is called by:
  4821 ;;		_MoveBuggy
  4822 ;; This function uses a non-reentrant model
  4823 ;;
  4824                           
  4825                           	psect	text20
  4826   001B16                     __ptext20:
  4827                           	callstack 0
  4828   001B16                     _YellowInstructions:
  4829                           	callstack 18
  4830   001B16                     
  4831                           ;color_instructions.c: 60:     unsigned char a=0;
  4832   001B16  0E00               	movlw	0
  4833   001B18  6E2D               	movwf	YellowInstructions@a^0,c
  4834                           
  4835                           ;color_instructions.c: 61:     while (a<20){
  4836   001B1A  EF9A  F00D         	goto	l2973
  4837   001B1E                     l2969:
  4838                           
  4839                           ;color_instructions.c: 62:         fullSpeedBackwards(mL, mR);
  4840   001B1E  C027  F01C         	movff	YellowInstructions@mL,fullSpeedBackwards@mL
  4841   001B22  C028  F01D         	movff	YellowInstructions@mL+1,fullSpeedBackwards@mL+1
  4842   001B26  C029  F01E         	movff	YellowInstructions@mR,fullSpeedBackwards@mR
  4843   001B2A  C02A  F01F         	movff	YellowInstructions@mR+1,fullSpeedBackwards@mR+1
  4844   001B2E  EC15  F00C         	call	_fullSpeedBackwards	;wreg free
  4845   001B32                     
  4846                           ;color_instructions.c: 63:         a++;
  4847   001B32  2A2D               	incf	YellowInstructions@a^0,f,c
  4848   001B34                     l2973:
  4849                           
  4850                           ;color_instructions.c: 61:     while (a<20){
  4851   001B34  0E13               	movlw	19
  4852   001B36  642D               	cpfsgt	YellowInstructions@a^0,c
  4853   001B38  EFA0  F00D         	goto	u2171
  4854   001B3C  EFA2  F00D         	goto	u2170
  4855   001B40                     u2171:
  4856   001B40  EF8F  F00D         	goto	l2969
  4857   001B44                     u2170:
  4858   001B44  EFAF  F00D         	goto	l2979
  4859   001B48                     l2975:
  4860                           
  4861                           ;color_instructions.c: 66:         stop(mL, mR);
  4862   001B48  C027  F01C         	movff	YellowInstructions@mL,stop@mL
  4863   001B4C  C028  F01D         	movff	YellowInstructions@mL+1,stop@mL+1
  4864   001B50  C029  F01E         	movff	YellowInstructions@mR,stop@mR
  4865   001B54  C02A  F01F         	movff	YellowInstructions@mR+1,stop@mR+1
  4866   001B58  EC80  F00C         	call	_stop	;wreg free
  4867   001B5C                     
  4868                           ;color_instructions.c: 67:         a--;
  4869   001B5C  062D               	decf	YellowInstructions@a^0,f,c
  4870   001B5E                     l2979:
  4871                           
  4872                           ;color_instructions.c: 65:     while (a>0){
  4873   001B5E  502D               	movf	YellowInstructions@a^0,w,c
  4874   001B60  A4D8               	btfss	status,2,c
  4875   001B62  EFB5  F00D         	goto	u2181
  4876   001B66  EFB7  F00D         	goto	u2180
  4877   001B6A                     u2181:
  4878   001B6A  EFA4  F00D         	goto	l2975
  4879   001B6E                     u2180:
  4880   001B6E                     
  4881                           ;color_instructions.c: 69:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4882   001B6E  0E05               	movlw	5
  4883   001B70  6E2C               	movwf	(??_YellowInstructions+1)^0,c
  4884   001B72  0E0F               	movlw	15
  4885   001B74  6E2B               	movwf	??_YellowInstructions^0,c
  4886   001B76  0EF1               	movlw	241
  4887   001B78                     u4237:
  4888   001B78  2EE8               	decfsz	wreg,f,c
  4889   001B7A  D7FE               	bra	u4237
  4890   001B7C  2E2B               	decfsz	??_YellowInstructions^0,f,c
  4891   001B7E  D7FC               	bra	u4237
  4892   001B80  2E2C               	decfsz	(??_YellowInstructions+1)^0,f,c
  4893   001B82  D7FA               	bra	u4237
  4894   001B84  F000               	nop	
  4895   001B86                     
  4896                           ;color_instructions.c: 70:     turnRight90(mL, mR);
  4897   001B86  C027  F022         	movff	YellowInstructions@mL,turnRight90@mL
  4898   001B8A  C028  F023         	movff	YellowInstructions@mL+1,turnRight90@mL+1
  4899   001B8E  C029  F024         	movff	YellowInstructions@mR,turnRight90@mR
  4900   001B92  C02A  F025         	movff	YellowInstructions@mR+1,turnRight90@mR+1
  4901   001B96  EC86  F00F         	call	_turnRight90	;wreg free
  4902   001B9A  0012               	return		;funcret
  4903   001B9C                     __end_of_YellowInstructions:
  4904                           	callstack 0
  4905                           
  4906 ;; *************** function _RedInstructions *****************
  4907 ;; Defined at:
  4908 ;;		line 10 in file "color_instructions.c"
  4909 ;; Parameters:    Size  Location     Type
  4910 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  4911 ;;		 -> main@motorL(9), 
  4912 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  4913 ;;		 -> main@motorR(9), 
  4914 ;; Auto vars:     Size  Location     Type
  4915 ;;  a               1   44[COMRAM] unsigned char 
  4916 ;; Return value:  Size  Location     Type
  4917 ;;                  1    wreg      void 
  4918 ;; Registers used:
  4919 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4920 ;; Tracked objects:
  4921 ;;		On entry : 0/0
  4922 ;;		On exit  : 0/0
  4923 ;;		Unchanged: 0/0
  4924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4925 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4926 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4927 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4928 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4929 ;;Total ram usage:        7 bytes
  4930 ;; Hardware stack levels used: 1
  4931 ;; Hardware stack levels required when called: 11
  4932 ;; This function calls:
  4933 ;;		_fullSpeedBackwards
  4934 ;;		_stop
  4935 ;;		_turnRight90
  4936 ;; This function is called by:
  4937 ;;		_MoveBuggy
  4938 ;; This function uses a non-reentrant model
  4939 ;;
  4940                           
  4941                           	psect	text21
  4942   001B9C                     __ptext21:
  4943                           	callstack 0
  4944   001B9C                     _RedInstructions:
  4945                           	callstack 18
  4946   001B9C                     
  4947                           ;color_instructions.c: 12:     unsigned char a=0;
  4948   001B9C  0E00               	movlw	0
  4949   001B9E  6E2D               	movwf	RedInstructions@a^0,c
  4950                           
  4951                           ;color_instructions.c: 13:     while (a<8){
  4952   001BA0  EFDD  F00D         	goto	l2917
  4953   001BA4                     l2913:
  4954                           
  4955                           ;color_instructions.c: 14:         fullSpeedBackwards(mL, mR);
  4956   001BA4  C027  F01C         	movff	RedInstructions@mL,fullSpeedBackwards@mL
  4957   001BA8  C028  F01D         	movff	RedInstructions@mL+1,fullSpeedBackwards@mL+1
  4958   001BAC  C029  F01E         	movff	RedInstructions@mR,fullSpeedBackwards@mR
  4959   001BB0  C02A  F01F         	movff	RedInstructions@mR+1,fullSpeedBackwards@mR+1
  4960   001BB4  EC15  F00C         	call	_fullSpeedBackwards	;wreg free
  4961   001BB8                     
  4962                           ;color_instructions.c: 15:         a++;
  4963   001BB8  2A2D               	incf	RedInstructions@a^0,f,c
  4964   001BBA                     l2917:
  4965                           
  4966                           ;color_instructions.c: 13:     while (a<8){
  4967   001BBA  0E07               	movlw	7
  4968   001BBC  642D               	cpfsgt	RedInstructions@a^0,c
  4969   001BBE  EFE3  F00D         	goto	u2111
  4970   001BC2  EFE5  F00D         	goto	u2110
  4971   001BC6                     u2111:
  4972   001BC6  EFD2  F00D         	goto	l2913
  4973   001BCA                     u2110:
  4974   001BCA  EFF2  F00D         	goto	l2923
  4975   001BCE                     l2919:
  4976                           
  4977                           ;color_instructions.c: 18:         stop(mL, mR);
  4978   001BCE  C027  F01C         	movff	RedInstructions@mL,stop@mL
  4979   001BD2  C028  F01D         	movff	RedInstructions@mL+1,stop@mL+1
  4980   001BD6  C029  F01E         	movff	RedInstructions@mR,stop@mR
  4981   001BDA  C02A  F01F         	movff	RedInstructions@mR+1,stop@mR+1
  4982   001BDE  EC80  F00C         	call	_stop	;wreg free
  4983   001BE2                     
  4984                           ;color_instructions.c: 19:         a--;
  4985   001BE2  062D               	decf	RedInstructions@a^0,f,c
  4986   001BE4                     l2923:
  4987                           
  4988                           ;color_instructions.c: 17:     while (a>0){
  4989   001BE4  502D               	movf	RedInstructions@a^0,w,c
  4990   001BE6  A4D8               	btfss	status,2,c
  4991   001BE8  EFF8  F00D         	goto	u2121
  4992   001BEC  EFFA  F00D         	goto	u2120
  4993   001BF0                     u2121:
  4994   001BF0  EFE7  F00D         	goto	l2919
  4995   001BF4                     u2120:
  4996   001BF4                     
  4997                           ;color_instructions.c: 21:     _delay((unsigned long)((50)*(64000000/4000.0)));
  4998   001BF4  0E05               	movlw	5
  4999   001BF6  6E2C               	movwf	(??_RedInstructions+1)^0,c
  5000   001BF8  0E0F               	movlw	15
  5001   001BFA  6E2B               	movwf	??_RedInstructions^0,c
  5002   001BFC  0EF1               	movlw	241
  5003   001BFE                     u4247:
  5004   001BFE  2EE8               	decfsz	wreg,f,c
  5005   001C00  D7FE               	bra	u4247
  5006   001C02  2E2B               	decfsz	??_RedInstructions^0,f,c
  5007   001C04  D7FC               	bra	u4247
  5008   001C06  2E2C               	decfsz	(??_RedInstructions+1)^0,f,c
  5009   001C08  D7FA               	bra	u4247
  5010   001C0A  F000               	nop	
  5011   001C0C                     
  5012                           ;color_instructions.c: 22:     turnRight90(mL, mR);
  5013   001C0C  C027  F022         	movff	RedInstructions@mL,turnRight90@mL
  5014   001C10  C028  F023         	movff	RedInstructions@mL+1,turnRight90@mL+1
  5015   001C14  C029  F024         	movff	RedInstructions@mR,turnRight90@mR
  5016   001C18  C02A  F025         	movff	RedInstructions@mR+1,turnRight90@mR+1
  5017   001C1C  EC86  F00F         	call	_turnRight90	;wreg free
  5018   001C20  0012               	return		;funcret
  5019   001C22                     __end_of_RedInstructions:
  5020                           	callstack 0
  5021                           
  5022 ;; *************** function _turnRight90 *****************
  5023 ;; Defined at:
  5024 ;;		line 213 in file "dc_motor.c"
  5025 ;; Parameters:    Size  Location     Type
  5026 ;;  mL              2   33[COMRAM] PTR struct DC_motor
  5027 ;;		 -> main@motorL(9), 
  5028 ;;  mR              2   35[COMRAM] PTR struct DC_motor
  5029 ;;		 -> main@motorR(9), 
  5030 ;; Auto vars:     Size  Location     Type
  5031 ;;  a               1   37[COMRAM] unsigned char 
  5032 ;; Return value:  Size  Location     Type
  5033 ;;                  1    wreg      void 
  5034 ;; Registers used:
  5035 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5036 ;; Tracked objects:
  5037 ;;		On entry : 0/0
  5038 ;;		On exit  : 0/0
  5039 ;;		Unchanged: 0/0
  5040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5041 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5042 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5044 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5045 ;;Total ram usage:        5 bytes
  5046 ;; Hardware stack levels used: 1
  5047 ;; Hardware stack levels required when called: 10
  5048 ;; This function calls:
  5049 ;;		_stop
  5050 ;;		_turnRight
  5051 ;; This function is called by:
  5052 ;;		_RedInstructions
  5053 ;;		_YellowInstructions
  5054 ;;		_AntiYellow
  5055 ;; This function uses a non-reentrant model
  5056 ;;
  5057                           
  5058                           	psect	text22
  5059   001F0C                     __ptext22:
  5060                           	callstack 0
  5061   001F0C                     _turnRight90:
  5062                           	callstack 18
  5063   001F0C                     
  5064                           ;dc_motor.c: 215:     unsigned char a=0;
  5065   001F0C  0E00               	movlw	0
  5066   001F0E  6E26               	movwf	turnRight90@a^0,c
  5067                           
  5068                           ;dc_motor.c: 216:     while(a<17){
  5069   001F10  EF95  F00F         	goto	l2821
  5070   001F14                     l2817:
  5071                           
  5072                           ;dc_motor.c: 217:         turnRight(mL, mR);
  5073   001F14  C022  F01C         	movff	turnRight90@mL,turnRight@mL
  5074   001F18  C023  F01D         	movff	turnRight90@mL+1,turnRight@mL+1
  5075   001F1C  C024  F01E         	movff	turnRight90@mR,turnRight@mR
  5076   001F20  C025  F01F         	movff	turnRight90@mR+1,turnRight@mR+1
  5077   001F24  ECBC  F00A         	call	_turnRight	;wreg free
  5078   001F28                     
  5079                           ;dc_motor.c: 218:         a++;
  5080   001F28  2A26               	incf	turnRight90@a^0,f,c
  5081   001F2A                     l2821:
  5082                           
  5083                           ;dc_motor.c: 216:     while(a<17){
  5084   001F2A  0E10               	movlw	16
  5085   001F2C  6426               	cpfsgt	turnRight90@a^0,c
  5086   001F2E  EF9B  F00F         	goto	u2051
  5087   001F32  EF9D  F00F         	goto	u2050
  5088   001F36                     u2051:
  5089   001F36  EF8A  F00F         	goto	l2817
  5090   001F3A                     u2050:
  5091   001F3A  EFAA  F00F         	goto	l2827
  5092   001F3E                     l2823:
  5093                           
  5094                           ;dc_motor.c: 221:         stop(mL, mR);
  5095   001F3E  C022  F01C         	movff	turnRight90@mL,stop@mL
  5096   001F42  C023  F01D         	movff	turnRight90@mL+1,stop@mL+1
  5097   001F46  C024  F01E         	movff	turnRight90@mR,stop@mR
  5098   001F4A  C025  F01F         	movff	turnRight90@mR+1,stop@mR+1
  5099   001F4E  EC80  F00C         	call	_stop	;wreg free
  5100   001F52                     
  5101                           ;dc_motor.c: 222:         a--;
  5102   001F52  0626               	decf	turnRight90@a^0,f,c
  5103   001F54                     l2827:
  5104                           
  5105                           ;dc_motor.c: 220:     while(a>0){
  5106   001F54  5026               	movf	turnRight90@a^0,w,c
  5107   001F56  A4D8               	btfss	status,2,c
  5108   001F58  EFB0  F00F         	goto	u2061
  5109   001F5C  EFB2  F00F         	goto	u2060
  5110   001F60                     u2061:
  5111   001F60  EF9F  F00F         	goto	l2823
  5112   001F64                     u2060:
  5113   001F64  0012               	return		;funcret
  5114   001F66                     __end_of_turnRight90:
  5115                           	callstack 0
  5116                           
  5117 ;; *************** function _PinkInstructions *****************
  5118 ;; Defined at:
  5119 ;;		line 73 in file "color_instructions.c"
  5120 ;; Parameters:    Size  Location     Type
  5121 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  5122 ;;		 -> main@motorL(9), 
  5123 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  5124 ;;		 -> main@motorR(9), 
  5125 ;; Auto vars:     Size  Location     Type
  5126 ;;  a               1   44[COMRAM] unsigned char 
  5127 ;; Return value:  Size  Location     Type
  5128 ;;                  1    wreg      void 
  5129 ;; Registers used:
  5130 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5131 ;; Tracked objects:
  5132 ;;		On entry : 0/0
  5133 ;;		On exit  : 0/0
  5134 ;;		Unchanged: 0/0
  5135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5136 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5137 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5138 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5139 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5140 ;;Total ram usage:        7 bytes
  5141 ;; Hardware stack levels used: 1
  5142 ;; Hardware stack levels required when called: 11
  5143 ;; This function calls:
  5144 ;;		_fullSpeedBackwards
  5145 ;;		_stop
  5146 ;;		_turnLeft90
  5147 ;; This function is called by:
  5148 ;;		_MoveBuggy
  5149 ;; This function uses a non-reentrant model
  5150 ;;
  5151                           
  5152                           	psect	text23
  5153   001C22                     __ptext23:
  5154                           	callstack 0
  5155   001C22                     _PinkInstructions:
  5156                           	callstack 18
  5157   001C22                     
  5158                           ;color_instructions.c: 74:     unsigned char a=0;
  5159   001C22  0E00               	movlw	0
  5160   001C24  6E2D               	movwf	PinkInstructions@a^0,c
  5161                           
  5162                           ;color_instructions.c: 75:     while (a<20){
  5163   001C26  EF20  F00E         	goto	l2991
  5164   001C2A                     l2987:
  5165                           
  5166                           ;color_instructions.c: 76:         fullSpeedBackwards(mL, mR);
  5167   001C2A  C027  F01C         	movff	PinkInstructions@mL,fullSpeedBackwards@mL
  5168   001C2E  C028  F01D         	movff	PinkInstructions@mL+1,fullSpeedBackwards@mL+1
  5169   001C32  C029  F01E         	movff	PinkInstructions@mR,fullSpeedBackwards@mR
  5170   001C36  C02A  F01F         	movff	PinkInstructions@mR+1,fullSpeedBackwards@mR+1
  5171   001C3A  EC15  F00C         	call	_fullSpeedBackwards	;wreg free
  5172   001C3E                     
  5173                           ;color_instructions.c: 77:         a++;
  5174   001C3E  2A2D               	incf	PinkInstructions@a^0,f,c
  5175   001C40                     l2991:
  5176                           
  5177                           ;color_instructions.c: 75:     while (a<20){
  5178   001C40  0E13               	movlw	19
  5179   001C42  642D               	cpfsgt	PinkInstructions@a^0,c
  5180   001C44  EF26  F00E         	goto	u2191
  5181   001C48  EF28  F00E         	goto	u2190
  5182   001C4C                     u2191:
  5183   001C4C  EF15  F00E         	goto	l2987
  5184   001C50                     u2190:
  5185   001C50  EF35  F00E         	goto	l2997
  5186   001C54                     l2993:
  5187                           
  5188                           ;color_instructions.c: 80:         stop(mL, mR);
  5189   001C54  C027  F01C         	movff	PinkInstructions@mL,stop@mL
  5190   001C58  C028  F01D         	movff	PinkInstructions@mL+1,stop@mL+1
  5191   001C5C  C029  F01E         	movff	PinkInstructions@mR,stop@mR
  5192   001C60  C02A  F01F         	movff	PinkInstructions@mR+1,stop@mR+1
  5193   001C64  EC80  F00C         	call	_stop	;wreg free
  5194   001C68                     
  5195                           ;color_instructions.c: 81:         a--;
  5196   001C68  062D               	decf	PinkInstructions@a^0,f,c
  5197   001C6A                     l2997:
  5198                           
  5199                           ;color_instructions.c: 79:     while (a>0){
  5200   001C6A  502D               	movf	PinkInstructions@a^0,w,c
  5201   001C6C  A4D8               	btfss	status,2,c
  5202   001C6E  EF3B  F00E         	goto	u2201
  5203   001C72  EF3D  F00E         	goto	u2200
  5204   001C76                     u2201:
  5205   001C76  EF2A  F00E         	goto	l2993
  5206   001C7A                     u2200:
  5207   001C7A                     
  5208                           ;color_instructions.c: 83:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5209   001C7A  0E05               	movlw	5
  5210   001C7C  6E2C               	movwf	(??_PinkInstructions+1)^0,c
  5211   001C7E  0E0F               	movlw	15
  5212   001C80  6E2B               	movwf	??_PinkInstructions^0,c
  5213   001C82  0EF1               	movlw	241
  5214   001C84                     u4257:
  5215   001C84  2EE8               	decfsz	wreg,f,c
  5216   001C86  D7FE               	bra	u4257
  5217   001C88  2E2B               	decfsz	??_PinkInstructions^0,f,c
  5218   001C8A  D7FC               	bra	u4257
  5219   001C8C  2E2C               	decfsz	(??_PinkInstructions+1)^0,f,c
  5220   001C8E  D7FA               	bra	u4257
  5221   001C90  F000               	nop	
  5222   001C92                     
  5223                           ;color_instructions.c: 84:     turnLeft90(mL, mR);
  5224   001C92  C027  F022         	movff	PinkInstructions@mL,turnLeft90@mL
  5225   001C96  C028  F023         	movff	PinkInstructions@mL+1,turnLeft90@mL+1
  5226   001C9A  C029  F024         	movff	PinkInstructions@mR,turnLeft90@mR
  5227   001C9E  C02A  F025         	movff	PinkInstructions@mR+1,turnLeft90@mR+1
  5228   001CA2  EC0D  F010         	call	_turnLeft90	;wreg free
  5229   001CA6  0012               	return		;funcret
  5230   001CA8                     __end_of_PinkInstructions:
  5231                           	callstack 0
  5232                           
  5233 ;; *************** function _OrangeInstructions *****************
  5234 ;; Defined at:
  5235 ;;		line 88 in file "color_instructions.c"
  5236 ;; Parameters:    Size  Location     Type
  5237 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  5238 ;;		 -> main@motorL(9), 
  5239 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  5240 ;;		 -> main@motorR(9), 
  5241 ;; Auto vars:     Size  Location     Type
  5242 ;;  a               1   44[COMRAM] unsigned char 
  5243 ;; Return value:  Size  Location     Type
  5244 ;;                  1    wreg      void 
  5245 ;; Registers used:
  5246 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5247 ;; Tracked objects:
  5248 ;;		On entry : 0/0
  5249 ;;		On exit  : 0/0
  5250 ;;		Unchanged: 0/0
  5251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5252 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5253 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5254 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5255 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5256 ;;Total ram usage:        7 bytes
  5257 ;; Hardware stack levels used: 1
  5258 ;; Hardware stack levels required when called: 11
  5259 ;; This function calls:
  5260 ;;		_fullSpeedBackwards
  5261 ;;		_stop
  5262 ;;		_turnRight135
  5263 ;; This function is called by:
  5264 ;;		_MoveBuggy
  5265 ;; This function uses a non-reentrant model
  5266 ;;
  5267                           
  5268                           	psect	text24
  5269   001CA8                     __ptext24:
  5270                           	callstack 0
  5271   001CA8                     _OrangeInstructions:
  5272                           	callstack 18
  5273   001CA8                     
  5274                           ;color_instructions.c: 89:     unsigned char a=0;
  5275   001CA8  0E00               	movlw	0
  5276   001CAA  6E2D               	movwf	OrangeInstructions@a^0,c
  5277                           
  5278                           ;color_instructions.c: 90:     while (a<20){
  5279   001CAC  EF63  F00E         	goto	l3009
  5280   001CB0                     l3005:
  5281                           
  5282                           ;color_instructions.c: 91:         fullSpeedBackwards(mL, mR);
  5283   001CB0  C027  F01C         	movff	OrangeInstructions@mL,fullSpeedBackwards@mL
  5284   001CB4  C028  F01D         	movff	OrangeInstructions@mL+1,fullSpeedBackwards@mL+1
  5285   001CB8  C029  F01E         	movff	OrangeInstructions@mR,fullSpeedBackwards@mR
  5286   001CBC  C02A  F01F         	movff	OrangeInstructions@mR+1,fullSpeedBackwards@mR+1
  5287   001CC0  EC15  F00C         	call	_fullSpeedBackwards	;wreg free
  5288   001CC4                     
  5289                           ;color_instructions.c: 92:         a++;
  5290   001CC4  2A2D               	incf	OrangeInstructions@a^0,f,c
  5291   001CC6                     l3009:
  5292                           
  5293                           ;color_instructions.c: 90:     while (a<20){
  5294   001CC6  0E13               	movlw	19
  5295   001CC8  642D               	cpfsgt	OrangeInstructions@a^0,c
  5296   001CCA  EF69  F00E         	goto	u2211
  5297   001CCE  EF6B  F00E         	goto	u2210
  5298   001CD2                     u2211:
  5299   001CD2  EF58  F00E         	goto	l3005
  5300   001CD6                     u2210:
  5301   001CD6  EF78  F00E         	goto	l3015
  5302   001CDA                     l3011:
  5303                           
  5304                           ;color_instructions.c: 95:         stop(mL, mR);
  5305   001CDA  C027  F01C         	movff	OrangeInstructions@mL,stop@mL
  5306   001CDE  C028  F01D         	movff	OrangeInstructions@mL+1,stop@mL+1
  5307   001CE2  C029  F01E         	movff	OrangeInstructions@mR,stop@mR
  5308   001CE6  C02A  F01F         	movff	OrangeInstructions@mR+1,stop@mR+1
  5309   001CEA  EC80  F00C         	call	_stop	;wreg free
  5310   001CEE                     
  5311                           ;color_instructions.c: 96:         a--;
  5312   001CEE  062D               	decf	OrangeInstructions@a^0,f,c
  5313   001CF0                     l3015:
  5314                           
  5315                           ;color_instructions.c: 94:     while (a>0){
  5316   001CF0  502D               	movf	OrangeInstructions@a^0,w,c
  5317   001CF2  A4D8               	btfss	status,2,c
  5318   001CF4  EF7E  F00E         	goto	u2221
  5319   001CF8  EF80  F00E         	goto	u2220
  5320   001CFC                     u2221:
  5321   001CFC  EF6D  F00E         	goto	l3011
  5322   001D00                     u2220:
  5323   001D00                     
  5324                           ;color_instructions.c: 98:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5325   001D00  0E05               	movlw	5
  5326   001D02  6E2C               	movwf	(??_OrangeInstructions+1)^0,c
  5327   001D04  0E0F               	movlw	15
  5328   001D06  6E2B               	movwf	??_OrangeInstructions^0,c
  5329   001D08  0EF1               	movlw	241
  5330   001D0A                     u4267:
  5331   001D0A  2EE8               	decfsz	wreg,f,c
  5332   001D0C  D7FE               	bra	u4267
  5333   001D0E  2E2B               	decfsz	??_OrangeInstructions^0,f,c
  5334   001D10  D7FC               	bra	u4267
  5335   001D12  2E2C               	decfsz	(??_OrangeInstructions+1)^0,f,c
  5336   001D14  D7FA               	bra	u4267
  5337   001D16  F000               	nop	
  5338   001D18                     
  5339                           ;color_instructions.c: 100:     turnRight135(mL, mR);
  5340   001D18  C027  F022         	movff	OrangeInstructions@mL,turnRight135@mL
  5341   001D1C  C028  F023         	movff	OrangeInstructions@mL+1,turnRight135@mL+1
  5342   001D20  C029  F024         	movff	OrangeInstructions@mR,turnRight135@mR
  5343   001D24  C02A  F025         	movff	OrangeInstructions@mR+1,turnRight135@mR+1
  5344   001D28  ECB3  F00F         	call	_turnRight135	;wreg free
  5345   001D2C  0012               	return		;funcret
  5346   001D2E                     __end_of_OrangeInstructions:
  5347                           	callstack 0
  5348                           
  5349 ;; *************** function _turnRight135 *****************
  5350 ;; Defined at:
  5351 ;;		line 240 in file "dc_motor.c"
  5352 ;; Parameters:    Size  Location     Type
  5353 ;;  mL              2   33[COMRAM] PTR struct DC_motor
  5354 ;;		 -> main@motorL(9), 
  5355 ;;  mR              2   35[COMRAM] PTR struct DC_motor
  5356 ;;		 -> main@motorR(9), 
  5357 ;; Auto vars:     Size  Location     Type
  5358 ;;  a               1   37[COMRAM] unsigned char 
  5359 ;; Return value:  Size  Location     Type
  5360 ;;                  1    wreg      void 
  5361 ;; Registers used:
  5362 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5363 ;; Tracked objects:
  5364 ;;		On entry : 0/0
  5365 ;;		On exit  : 0/0
  5366 ;;		Unchanged: 0/0
  5367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5368 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5369 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5371 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5372 ;;Total ram usage:        5 bytes
  5373 ;; Hardware stack levels used: 1
  5374 ;; Hardware stack levels required when called: 10
  5375 ;; This function calls:
  5376 ;;		_stop
  5377 ;;		_turnRight
  5378 ;; This function is called by:
  5379 ;;		_OrangeInstructions
  5380 ;; This function uses a non-reentrant model
  5381 ;;
  5382                           
  5383                           	psect	text25
  5384   001F66                     __ptext25:
  5385                           	callstack 0
  5386   001F66                     _turnRight135:
  5387                           	callstack 18
  5388   001F66                     
  5389                           ;dc_motor.c: 242:     unsigned char a=0;
  5390   001F66  0E00               	movlw	0
  5391   001F68  6E26               	movwf	turnRight135@a^0,c
  5392                           
  5393                           ;dc_motor.c: 243:     while(a<21){
  5394   001F6A  EFC2  F00F         	goto	l2835
  5395   001F6E                     l2831:
  5396                           
  5397                           ;dc_motor.c: 244:         turnRight(mL, mR);
  5398   001F6E  C022  F01C         	movff	turnRight135@mL,turnRight@mL
  5399   001F72  C023  F01D         	movff	turnRight135@mL+1,turnRight@mL+1
  5400   001F76  C024  F01E         	movff	turnRight135@mR,turnRight@mR
  5401   001F7A  C025  F01F         	movff	turnRight135@mR+1,turnRight@mR+1
  5402   001F7E  ECBC  F00A         	call	_turnRight	;wreg free
  5403   001F82                     
  5404                           ;dc_motor.c: 245:         a++;
  5405   001F82  2A26               	incf	turnRight135@a^0,f,c
  5406   001F84                     l2835:
  5407                           
  5408                           ;dc_motor.c: 243:     while(a<21){
  5409   001F84  0E14               	movlw	20
  5410   001F86  6426               	cpfsgt	turnRight135@a^0,c
  5411   001F88  EFC8  F00F         	goto	u2071
  5412   001F8C  EFCA  F00F         	goto	u2070
  5413   001F90                     u2071:
  5414   001F90  EFB7  F00F         	goto	l2831
  5415   001F94                     u2070:
  5416   001F94  EFD7  F00F         	goto	l2841
  5417   001F98                     l2837:
  5418                           
  5419                           ;dc_motor.c: 248:         stop(mL, mR);
  5420   001F98  C022  F01C         	movff	turnRight135@mL,stop@mL
  5421   001F9C  C023  F01D         	movff	turnRight135@mL+1,stop@mL+1
  5422   001FA0  C024  F01E         	movff	turnRight135@mR,stop@mR
  5423   001FA4  C025  F01F         	movff	turnRight135@mR+1,stop@mR+1
  5424   001FA8  EC80  F00C         	call	_stop	;wreg free
  5425   001FAC                     
  5426                           ;dc_motor.c: 249:         a--;
  5427   001FAC  0626               	decf	turnRight135@a^0,f,c
  5428   001FAE                     l2841:
  5429                           
  5430                           ;dc_motor.c: 247:     while(a>0){
  5431   001FAE  5026               	movf	turnRight135@a^0,w,c
  5432   001FB0  A4D8               	btfss	status,2,c
  5433   001FB2  EFDD  F00F         	goto	u2081
  5434   001FB6  EFDF  F00F         	goto	u2080
  5435   001FBA                     u2081:
  5436   001FBA  EFCC  F00F         	goto	l2837
  5437   001FBE                     u2080:
  5438   001FBE  0012               	return		;funcret
  5439   001FC0                     __end_of_turnRight135:
  5440                           	callstack 0
  5441                           
  5442 ;; *************** function _turnRight *****************
  5443 ;; Defined at:
  5444 ;;		line 129 in file "dc_motor.c"
  5445 ;; Parameters:    Size  Location     Type
  5446 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  5447 ;;		 -> main@motorL(9), 
  5448 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  5449 ;;		 -> main@motorR(9), 
  5450 ;; Auto vars:     Size  Location     Type
  5451 ;;		None
  5452 ;; Return value:  Size  Location     Type
  5453 ;;                  1    wreg      void 
  5454 ;; Registers used:
  5455 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5456 ;; Tracked objects:
  5457 ;;		On entry : 0/0
  5458 ;;		On exit  : 0/0
  5459 ;;		Unchanged: 0/0
  5460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5461 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5463 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5464 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5465 ;;Total ram usage:        6 bytes
  5466 ;; Hardware stack levels used: 1
  5467 ;; Hardware stack levels required when called: 9
  5468 ;; This function calls:
  5469 ;;		_setMotorPWM
  5470 ;; This function is called by:
  5471 ;;		_turnRight90
  5472 ;;		_turnRight135
  5473 ;;		_turn180
  5474 ;; This function uses a non-reentrant model
  5475 ;;
  5476                           
  5477                           	psect	text26
  5478   001578                     __ptext26:
  5479                           	callstack 0
  5480   001578                     _turnRight:
  5481                           	callstack 18
  5482   001578                     
  5483                           ;dc_motor.c: 129: void turnRight(DC_motor *mL, DC_motor *mR);dc_motor.c: 130: {;dc_motor
      +                          .c: 132:     mL->direction = 1;
  5484   001578  EE20 F001          	lfsr	2,1
  5485   00157C  501C               	movf	turnRight@mL^0,w,c
  5486   00157E  26D9               	addwf	fsr2l,f,c
  5487   001580  501D               	movf	(turnRight@mL+1)^0,w,c
  5488   001582  22DA               	addwfc	fsr2h,f,c
  5489   001584  0E01               	movlw	1
  5490   001586  6EDF               	movwf	indf2,c
  5491                           
  5492                           ;dc_motor.c: 133:     mL->brakemode = 0;
  5493   001588  EE20 F002          	lfsr	2,2
  5494   00158C  501C               	movf	turnRight@mL^0,w,c
  5495   00158E  26D9               	addwf	fsr2l,f,c
  5496   001590  501D               	movf	(turnRight@mL+1)^0,w,c
  5497   001592  22DA               	addwfc	fsr2h,f,c
  5498   001594  0E00               	movlw	0
  5499   001596  6EDF               	movwf	indf2,c
  5500                           
  5501                           ;dc_motor.c: 135:     mR->direction = 0;
  5502   001598  EE20 F001          	lfsr	2,1
  5503   00159C  501E               	movf	turnRight@mR^0,w,c
  5504   00159E  26D9               	addwf	fsr2l,f,c
  5505   0015A0  501F               	movf	(turnRight@mR+1)^0,w,c
  5506   0015A2  22DA               	addwfc	fsr2h,f,c
  5507   0015A4  0E00               	movlw	0
  5508   0015A6  6EDF               	movwf	indf2,c
  5509                           
  5510                           ;dc_motor.c: 136:     mR->brakemode = 0;
  5511   0015A8  EE20 F002          	lfsr	2,2
  5512   0015AC  501E               	movf	turnRight@mR^0,w,c
  5513   0015AE  26D9               	addwf	fsr2l,f,c
  5514   0015B0  501F               	movf	(turnRight@mR+1)^0,w,c
  5515   0015B2  22DA               	addwfc	fsr2h,f,c
  5516   0015B4  0E00               	movlw	0
  5517   0015B6  6EDF               	movwf	indf2,c
  5518                           
  5519                           ;dc_motor.c: 139:     if(mL->power>75){mL->power=75;}
  5520   0015B8  C01C  FFD9         	movff	turnRight@mL,fsr2l
  5521   0015BC  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  5522   0015C0  50DF               	movf	indf2,w,c
  5523   0015C2  0A80               	xorlw	128
  5524   0015C4  0F34               	addlw	-204
  5525   0015C6  A0D8               	btfss	status,0,c
  5526   0015C8  EFE8  F00A         	goto	u1971
  5527   0015CC  EFEA  F00A         	goto	u1970
  5528   0015D0                     u1971:
  5529   0015D0  EFF0  F00A         	goto	l2739
  5530   0015D4                     u1970:
  5531   0015D4  C01C  FFD9         	movff	turnRight@mL,fsr2l
  5532   0015D8  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  5533   0015DC  0E4B               	movlw	75
  5534   0015DE  6EDF               	movwf	indf2,c
  5535   0015E0                     l2739:
  5536                           
  5537                           ;dc_motor.c: 140:     if(mR->power>75){mR->power=75;}
  5538   0015E0  C01E  FFD9         	movff	turnRight@mR,fsr2l
  5539   0015E4  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  5540   0015E8  50DF               	movf	indf2,w,c
  5541   0015EA  0A80               	xorlw	128
  5542   0015EC  0F34               	addlw	-204
  5543   0015EE  A0D8               	btfss	status,0,c
  5544   0015F0  EFFC  F00A         	goto	u1981
  5545   0015F4  EFFE  F00A         	goto	u1980
  5546   0015F8                     u1981:
  5547   0015F8  EF04  F00B         	goto	l2743
  5548   0015FC                     u1980:
  5549   0015FC  C01E  FFD9         	movff	turnRight@mR,fsr2l
  5550   001600  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  5551   001604  0E4B               	movlw	75
  5552   001606  6EDF               	movwf	indf2,c
  5553   001608                     l2743:
  5554                           
  5555                           ;dc_motor.c: 142:     mL->power = mL->power + 5 ;
  5556   001608  C01C  FFD9         	movff	turnRight@mL,fsr2l
  5557   00160C  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  5558   001610  50DF               	movf	indf2,w,c
  5559   001612  0F05               	addlw	5
  5560   001614  C01C  FFD9         	movff	turnRight@mL,fsr2l
  5561   001618  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  5562   00161C  6EDF               	movwf	indf2,c
  5563   00161E                     
  5564                           ;dc_motor.c: 143:     mR->power = mR->power + 5;
  5565   00161E  C01E  FFD9         	movff	turnRight@mR,fsr2l
  5566   001622  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  5567   001626  50DF               	movf	indf2,w,c
  5568   001628  0F05               	addlw	5
  5569   00162A  C01E  FFD9         	movff	turnRight@mR,fsr2l
  5570   00162E  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  5571   001632  6EDF               	movwf	indf2,c
  5572   001634                     
  5573                           ;dc_motor.c: 145:     setMotorPWM(mL);
  5574   001634  C01C  F016         	movff	turnRight@mL,setMotorPWM@m
  5575   001638  C01D  F017         	movff	turnRight@mL+1,setMotorPWM@m+1
  5576   00163C  EC82  F009         	call	_setMotorPWM	;wreg free
  5577   001640                     
  5578                           ;dc_motor.c: 146:     setMotorPWM(mR);
  5579   001640  C01E  F016         	movff	turnRight@mR,setMotorPWM@m
  5580   001644  C01F  F017         	movff	turnRight@mR+1,setMotorPWM@m+1
  5581   001648  EC82  F009         	call	_setMotorPWM	;wreg free
  5582   00164C                     
  5583                           ;dc_motor.c: 147:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5584   00164C  0E05               	movlw	5
  5585   00164E  6E21               	movwf	(??_turnRight+1)^0,c
  5586   001650  0E0F               	movlw	15
  5587   001652  6E20               	movwf	??_turnRight^0,c
  5588   001654  0EF1               	movlw	241
  5589   001656                     u4277:
  5590   001656  2EE8               	decfsz	wreg,f,c
  5591   001658  D7FE               	bra	u4277
  5592   00165A  2E20               	decfsz	??_turnRight^0,f,c
  5593   00165C  D7FC               	bra	u4277
  5594   00165E  2E21               	decfsz	(??_turnRight+1)^0,f,c
  5595   001660  D7FA               	bra	u4277
  5596   001662  F000               	nop	
  5597   001664  0012               	return		;funcret
  5598   001666                     __end_of_turnRight:
  5599                           	callstack 0
  5600                           
  5601 ;; *************** function _LightBlueInstructions *****************
  5602 ;; Defined at:
  5603 ;;		line 103 in file "color_instructions.c"
  5604 ;; Parameters:    Size  Location     Type
  5605 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  5606 ;;		 -> main@motorL(9), 
  5607 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  5608 ;;		 -> main@motorR(9), 
  5609 ;; Auto vars:     Size  Location     Type
  5610 ;;  a               1   44[COMRAM] unsigned char 
  5611 ;; Return value:  Size  Location     Type
  5612 ;;                  1    wreg      void 
  5613 ;; Registers used:
  5614 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5615 ;; Tracked objects:
  5616 ;;		On entry : 0/0
  5617 ;;		On exit  : 0/0
  5618 ;;		Unchanged: 0/0
  5619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5620 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5621 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5622 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5623 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5624 ;;Total ram usage:        7 bytes
  5625 ;; Hardware stack levels used: 1
  5626 ;; Hardware stack levels required when called: 11
  5627 ;; This function calls:
  5628 ;;		_fullSpeedBackwards
  5629 ;;		_stop
  5630 ;;		_turnLeft135
  5631 ;; This function is called by:
  5632 ;;		_MoveBuggy
  5633 ;; This function uses a non-reentrant model
  5634 ;;
  5635                           
  5636                           	psect	text27
  5637   001D2E                     __ptext27:
  5638                           	callstack 0
  5639   001D2E                     _LightBlueInstructions:
  5640                           	callstack 18
  5641   001D2E                     
  5642                           ;color_instructions.c: 104:     unsigned char a=0;
  5643   001D2E  0E00               	movlw	0
  5644   001D30  6E2D               	movwf	LightBlueInstructions@a^0,c
  5645                           
  5646                           ;color_instructions.c: 105:     while (a<20){
  5647   001D32  EFA6  F00E         	goto	l3027
  5648   001D36                     l3023:
  5649                           
  5650                           ;color_instructions.c: 106:         fullSpeedBackwards(mL, mR);
  5651   001D36  C027  F01C         	movff	LightBlueInstructions@mL,fullSpeedBackwards@mL
  5652   001D3A  C028  F01D         	movff	LightBlueInstructions@mL+1,fullSpeedBackwards@mL+1
  5653   001D3E  C029  F01E         	movff	LightBlueInstructions@mR,fullSpeedBackwards@mR
  5654   001D42  C02A  F01F         	movff	LightBlueInstructions@mR+1,fullSpeedBackwards@mR+1
  5655   001D46  EC15  F00C         	call	_fullSpeedBackwards	;wreg free
  5656   001D4A                     
  5657                           ;color_instructions.c: 107:         a++;
  5658   001D4A  2A2D               	incf	LightBlueInstructions@a^0,f,c
  5659   001D4C                     l3027:
  5660                           
  5661                           ;color_instructions.c: 105:     while (a<20){
  5662   001D4C  0E13               	movlw	19
  5663   001D4E  642D               	cpfsgt	LightBlueInstructions@a^0,c
  5664   001D50  EFAC  F00E         	goto	u2231
  5665   001D54  EFAE  F00E         	goto	u2230
  5666   001D58                     u2231:
  5667   001D58  EF9B  F00E         	goto	l3023
  5668   001D5C                     u2230:
  5669   001D5C  EFBB  F00E         	goto	l3033
  5670   001D60                     l3029:
  5671                           
  5672                           ;color_instructions.c: 110:         stop(mL, mR);
  5673   001D60  C027  F01C         	movff	LightBlueInstructions@mL,stop@mL
  5674   001D64  C028  F01D         	movff	LightBlueInstructions@mL+1,stop@mL+1
  5675   001D68  C029  F01E         	movff	LightBlueInstructions@mR,stop@mR
  5676   001D6C  C02A  F01F         	movff	LightBlueInstructions@mR+1,stop@mR+1
  5677   001D70  EC80  F00C         	call	_stop	;wreg free
  5678   001D74                     
  5679                           ;color_instructions.c: 111:         a--;
  5680   001D74  062D               	decf	LightBlueInstructions@a^0,f,c
  5681   001D76                     l3033:
  5682                           
  5683                           ;color_instructions.c: 109:     while (a>0){
  5684   001D76  502D               	movf	LightBlueInstructions@a^0,w,c
  5685   001D78  A4D8               	btfss	status,2,c
  5686   001D7A  EFC1  F00E         	goto	u2241
  5687   001D7E  EFC3  F00E         	goto	u2240
  5688   001D82                     u2241:
  5689   001D82  EFB0  F00E         	goto	l3029
  5690   001D86                     u2240:
  5691   001D86                     
  5692                           ;color_instructions.c: 113:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5693   001D86  0E05               	movlw	5
  5694   001D88  6E2C               	movwf	(??_LightBlueInstructions+1)^0,c
  5695   001D8A  0E0F               	movlw	15
  5696   001D8C  6E2B               	movwf	??_LightBlueInstructions^0,c
  5697   001D8E  0EF1               	movlw	241
  5698   001D90                     u4287:
  5699   001D90  2EE8               	decfsz	wreg,f,c
  5700   001D92  D7FE               	bra	u4287
  5701   001D94  2E2B               	decfsz	??_LightBlueInstructions^0,f,c
  5702   001D96  D7FC               	bra	u4287
  5703   001D98  2E2C               	decfsz	(??_LightBlueInstructions+1)^0,f,c
  5704   001D9A  D7FA               	bra	u4287
  5705   001D9C  F000               	nop	
  5706   001D9E                     
  5707                           ;color_instructions.c: 115:     turnLeft135(mL, mR);
  5708   001D9E  C027  F022         	movff	LightBlueInstructions@mL,turnLeft135@mL
  5709   001DA2  C028  F023         	movff	LightBlueInstructions@mL+1,turnLeft135@mL+1
  5710   001DA6  C029  F024         	movff	LightBlueInstructions@mR,turnLeft135@mR
  5711   001DAA  C02A  F025         	movff	LightBlueInstructions@mR+1,turnLeft135@mR+1
  5712   001DAE  ECE0  F00F         	call	_turnLeft135	;wreg free
  5713   001DB2  0012               	return		;funcret
  5714   001DB4                     __end_of_LightBlueInstructions:
  5715                           	callstack 0
  5716                           
  5717 ;; *************** function _turnLeft135 *****************
  5718 ;; Defined at:
  5719 ;;		line 253 in file "dc_motor.c"
  5720 ;; Parameters:    Size  Location     Type
  5721 ;;  mL              2   33[COMRAM] PTR struct DC_motor
  5722 ;;		 -> main@motorL(9), 
  5723 ;;  mR              2   35[COMRAM] PTR struct DC_motor
  5724 ;;		 -> main@motorR(9), 
  5725 ;; Auto vars:     Size  Location     Type
  5726 ;;  a               1   37[COMRAM] unsigned char 
  5727 ;; Return value:  Size  Location     Type
  5728 ;;                  1    wreg      void 
  5729 ;; Registers used:
  5730 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5731 ;; Tracked objects:
  5732 ;;		On entry : 0/0
  5733 ;;		On exit  : 0/0
  5734 ;;		Unchanged: 0/0
  5735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5736 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5737 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5739 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5740 ;;Total ram usage:        5 bytes
  5741 ;; Hardware stack levels used: 1
  5742 ;; Hardware stack levels required when called: 10
  5743 ;; This function calls:
  5744 ;;		_stop
  5745 ;;		_turnLeft
  5746 ;; This function is called by:
  5747 ;;		_LightBlueInstructions
  5748 ;; This function uses a non-reentrant model
  5749 ;;
  5750                           
  5751                           	psect	text28
  5752   001FC0                     __ptext28:
  5753                           	callstack 0
  5754   001FC0                     _turnLeft135:
  5755                           	callstack 18
  5756   001FC0                     
  5757                           ;dc_motor.c: 255:     unsigned char a=0;
  5758   001FC0  0E00               	movlw	0
  5759   001FC2  6E26               	movwf	turnLeft135@a^0,c
  5760                           
  5761                           ;dc_motor.c: 256:     while(a<21){
  5762   001FC4  EFEF  F00F         	goto	l2849
  5763   001FC8                     l2845:
  5764                           
  5765                           ;dc_motor.c: 257:         turnLeft(mL, mR);
  5766   001FC8  C022  F01C         	movff	turnLeft135@mL,turnLeft@mL
  5767   001FCC  C023  F01D         	movff	turnLeft135@mL+1,turnLeft@mL+1
  5768   001FD0  C024  F01E         	movff	turnLeft135@mR,turnLeft@mR
  5769   001FD4  C025  F01F         	movff	turnLeft135@mR+1,turnLeft@mR+1
  5770   001FD8  EC33  F00B         	call	_turnLeft	;wreg free
  5771   001FDC                     
  5772                           ;dc_motor.c: 258:         a++;
  5773   001FDC  2A26               	incf	turnLeft135@a^0,f,c
  5774   001FDE                     l2849:
  5775                           
  5776                           ;dc_motor.c: 256:     while(a<21){
  5777   001FDE  0E14               	movlw	20
  5778   001FE0  6426               	cpfsgt	turnLeft135@a^0,c
  5779   001FE2  EFF5  F00F         	goto	u2091
  5780   001FE6  EFF7  F00F         	goto	u2090
  5781   001FEA                     u2091:
  5782   001FEA  EFE4  F00F         	goto	l2845
  5783   001FEE                     u2090:
  5784   001FEE  EF04  F010         	goto	l2855
  5785   001FF2                     l2851:
  5786                           
  5787                           ;dc_motor.c: 261:         stop(mL, mR);
  5788   001FF2  C022  F01C         	movff	turnLeft135@mL,stop@mL
  5789   001FF6  C023  F01D         	movff	turnLeft135@mL+1,stop@mL+1
  5790   001FFA  C024  F01E         	movff	turnLeft135@mR,stop@mR
  5791   001FFE  C025  F01F         	movff	turnLeft135@mR+1,stop@mR+1
  5792   002002  EC80  F00C         	call	_stop	;wreg free
  5793   002006                     
  5794                           ;dc_motor.c: 262:         a--;
  5795   002006  0626               	decf	turnLeft135@a^0,f,c
  5796   002008                     l2855:
  5797                           
  5798                           ;dc_motor.c: 260:     while(a>0){
  5799   002008  5026               	movf	turnLeft135@a^0,w,c
  5800   00200A  A4D8               	btfss	status,2,c
  5801   00200C  EF0A  F010         	goto	u2101
  5802   002010  EF0C  F010         	goto	u2100
  5803   002014                     u2101:
  5804   002014  EFF9  F00F         	goto	l2851
  5805   002018                     u2100:
  5806   002018  0012               	return		;funcret
  5807   00201A                     __end_of_turnLeft135:
  5808                           	callstack 0
  5809                           
  5810 ;; *************** function _GreenInstructions *****************
  5811 ;; Defined at:
  5812 ;;		line 25 in file "color_instructions.c"
  5813 ;; Parameters:    Size  Location     Type
  5814 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  5815 ;;		 -> main@motorL(9), 
  5816 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  5817 ;;		 -> main@motorR(9), 
  5818 ;; Auto vars:     Size  Location     Type
  5819 ;;  a               1   44[COMRAM] unsigned char 
  5820 ;; Return value:  Size  Location     Type
  5821 ;;                  1    wreg      void 
  5822 ;; Registers used:
  5823 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5824 ;; Tracked objects:
  5825 ;;		On entry : 0/0
  5826 ;;		On exit  : 0/0
  5827 ;;		Unchanged: 0/0
  5828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5829 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5830 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5831 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5832 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5833 ;;Total ram usage:        7 bytes
  5834 ;; Hardware stack levels used: 1
  5835 ;; Hardware stack levels required when called: 11
  5836 ;; This function calls:
  5837 ;;		_fullSpeedBackwards
  5838 ;;		_stop
  5839 ;;		_turnLeft90
  5840 ;; This function is called by:
  5841 ;;		_MoveBuggy
  5842 ;; This function uses a non-reentrant model
  5843 ;;
  5844                           
  5845                           	psect	text29
  5846   001DB4                     __ptext29:
  5847                           	callstack 0
  5848   001DB4                     _GreenInstructions:
  5849                           	callstack 18
  5850   001DB4                     
  5851                           ;color_instructions.c: 26:     unsigned char a=0;
  5852   001DB4  0E00               	movlw	0
  5853   001DB6  6E2D               	movwf	GreenInstructions@a^0,c
  5854                           
  5855                           ;color_instructions.c: 27:     while (a<8){
  5856   001DB8  EFE9  F00E         	goto	l2935
  5857   001DBC                     l2931:
  5858                           
  5859                           ;color_instructions.c: 28:         fullSpeedBackwards(mL, mR);
  5860   001DBC  C027  F01C         	movff	GreenInstructions@mL,fullSpeedBackwards@mL
  5861   001DC0  C028  F01D         	movff	GreenInstructions@mL+1,fullSpeedBackwards@mL+1
  5862   001DC4  C029  F01E         	movff	GreenInstructions@mR,fullSpeedBackwards@mR
  5863   001DC8  C02A  F01F         	movff	GreenInstructions@mR+1,fullSpeedBackwards@mR+1
  5864   001DCC  EC15  F00C         	call	_fullSpeedBackwards	;wreg free
  5865   001DD0                     
  5866                           ;color_instructions.c: 29:         a++;
  5867   001DD0  2A2D               	incf	GreenInstructions@a^0,f,c
  5868   001DD2                     l2935:
  5869                           
  5870                           ;color_instructions.c: 27:     while (a<8){
  5871   001DD2  0E07               	movlw	7
  5872   001DD4  642D               	cpfsgt	GreenInstructions@a^0,c
  5873   001DD6  EFEF  F00E         	goto	u2131
  5874   001DDA  EFF1  F00E         	goto	u2130
  5875   001DDE                     u2131:
  5876   001DDE  EFDE  F00E         	goto	l2931
  5877   001DE2                     u2130:
  5878   001DE2  EFFE  F00E         	goto	l2941
  5879   001DE6                     l2937:
  5880                           
  5881                           ;color_instructions.c: 32:         stop(mL, mR);
  5882   001DE6  C027  F01C         	movff	GreenInstructions@mL,stop@mL
  5883   001DEA  C028  F01D         	movff	GreenInstructions@mL+1,stop@mL+1
  5884   001DEE  C029  F01E         	movff	GreenInstructions@mR,stop@mR
  5885   001DF2  C02A  F01F         	movff	GreenInstructions@mR+1,stop@mR+1
  5886   001DF6  EC80  F00C         	call	_stop	;wreg free
  5887   001DFA                     
  5888                           ;color_instructions.c: 33:         a--;
  5889   001DFA  062D               	decf	GreenInstructions@a^0,f,c
  5890   001DFC                     l2941:
  5891                           
  5892                           ;color_instructions.c: 31:     while (a>0){
  5893   001DFC  502D               	movf	GreenInstructions@a^0,w,c
  5894   001DFE  A4D8               	btfss	status,2,c
  5895   001E00  EF04  F00F         	goto	u2141
  5896   001E04  EF06  F00F         	goto	u2140
  5897   001E08                     u2141:
  5898   001E08  EFF3  F00E         	goto	l2937
  5899   001E0C                     u2140:
  5900   001E0C                     
  5901                           ;color_instructions.c: 35:     _delay((unsigned long)((50)*(64000000/4000.0)));
  5902   001E0C  0E05               	movlw	5
  5903   001E0E  6E2C               	movwf	(??_GreenInstructions+1)^0,c
  5904   001E10  0E0F               	movlw	15
  5905   001E12  6E2B               	movwf	??_GreenInstructions^0,c
  5906   001E14  0EF1               	movlw	241
  5907   001E16                     u4297:
  5908   001E16  2EE8               	decfsz	wreg,f,c
  5909   001E18  D7FE               	bra	u4297
  5910   001E1A  2E2B               	decfsz	??_GreenInstructions^0,f,c
  5911   001E1C  D7FC               	bra	u4297
  5912   001E1E  2E2C               	decfsz	(??_GreenInstructions+1)^0,f,c
  5913   001E20  D7FA               	bra	u4297
  5914   001E22  F000               	nop	
  5915   001E24                     
  5916                           ;color_instructions.c: 36:     turnLeft90(mL, mR);
  5917   001E24  C027  F022         	movff	GreenInstructions@mL,turnLeft90@mL
  5918   001E28  C028  F023         	movff	GreenInstructions@mL+1,turnLeft90@mL+1
  5919   001E2C  C029  F024         	movff	GreenInstructions@mR,turnLeft90@mR
  5920   001E30  C02A  F025         	movff	GreenInstructions@mR+1,turnLeft90@mR+1
  5921   001E34  EC0D  F010         	call	_turnLeft90	;wreg free
  5922   001E38  0012               	return		;funcret
  5923   001E3A                     __end_of_GreenInstructions:
  5924                           	callstack 0
  5925                           
  5926 ;; *************** function _BlueInstructions *****************
  5927 ;; Defined at:
  5928 ;;		line 39 in file "color_instructions.c"
  5929 ;; Parameters:    Size  Location     Type
  5930 ;;  mL              2   38[COMRAM] PTR struct DC_motor
  5931 ;;		 -> main@motorL(9), 
  5932 ;;  mR              2   40[COMRAM] PTR struct DC_motor
  5933 ;;		 -> main@motorR(9), 
  5934 ;; Auto vars:     Size  Location     Type
  5935 ;;  a               1   44[COMRAM] unsigned char 
  5936 ;; Return value:  Size  Location     Type
  5937 ;;                  1    wreg      void 
  5938 ;; Registers used:
  5939 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5940 ;; Tracked objects:
  5941 ;;		On entry : 0/0
  5942 ;;		On exit  : 0/0
  5943 ;;		Unchanged: 0/0
  5944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5945 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5946 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5947 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5948 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5949 ;;Total ram usage:        7 bytes
  5950 ;; Hardware stack levels used: 1
  5951 ;; Hardware stack levels required when called: 11
  5952 ;; This function calls:
  5953 ;;		_fullSpeedBackwards
  5954 ;;		_stop
  5955 ;;		_turnLeft90
  5956 ;; This function is called by:
  5957 ;;		_MoveBuggy
  5958 ;;		_AntiYellow
  5959 ;;		_AntiPink
  5960 ;;		_WhiteInstructions
  5961 ;; This function uses a non-reentrant model
  5962 ;;
  5963                           
  5964                           	psect	text30
  5965   0019D4                     __ptext30:
  5966                           	callstack 0
  5967   0019D4                     _BlueInstructions:
  5968                           	callstack 18
  5969   0019D4                     
  5970                           ;color_instructions.c: 40:     unsigned char a=0;
  5971   0019D4  0E00               	movlw	0
  5972   0019D6  6E2D               	movwf	BlueInstructions@a^0,c
  5973                           
  5974                           ;color_instructions.c: 41:     while (a<8){
  5975   0019D8  EFF9  F00C         	goto	l2953
  5976   0019DC                     l2949:
  5977                           
  5978                           ;color_instructions.c: 42:         fullSpeedBackwards(mL, mR);
  5979   0019DC  C027  F01C         	movff	BlueInstructions@mL,fullSpeedBackwards@mL
  5980   0019E0  C028  F01D         	movff	BlueInstructions@mL+1,fullSpeedBackwards@mL+1
  5981   0019E4  C029  F01E         	movff	BlueInstructions@mR,fullSpeedBackwards@mR
  5982   0019E8  C02A  F01F         	movff	BlueInstructions@mR+1,fullSpeedBackwards@mR+1
  5983   0019EC  EC15  F00C         	call	_fullSpeedBackwards	;wreg free
  5984   0019F0                     
  5985                           ;color_instructions.c: 43:         a++;
  5986   0019F0  2A2D               	incf	BlueInstructions@a^0,f,c
  5987   0019F2                     l2953:
  5988                           
  5989                           ;color_instructions.c: 41:     while (a<8){
  5990   0019F2  0E07               	movlw	7
  5991   0019F4  642D               	cpfsgt	BlueInstructions@a^0,c
  5992   0019F6  EFFF  F00C         	goto	u2151
  5993   0019FA  EF01  F00D         	goto	u2150
  5994   0019FE                     u2151:
  5995   0019FE  EFEE  F00C         	goto	l2949
  5996   001A02                     u2150:
  5997   001A02  EF0E  F00D         	goto	l2959
  5998   001A06                     l2955:
  5999                           
  6000                           ;color_instructions.c: 46:         stop(mL, mR);
  6001   001A06  C027  F01C         	movff	BlueInstructions@mL,stop@mL
  6002   001A0A  C028  F01D         	movff	BlueInstructions@mL+1,stop@mL+1
  6003   001A0E  C029  F01E         	movff	BlueInstructions@mR,stop@mR
  6004   001A12  C02A  F01F         	movff	BlueInstructions@mR+1,stop@mR+1
  6005   001A16  EC80  F00C         	call	_stop	;wreg free
  6006   001A1A                     
  6007                           ;color_instructions.c: 47:         a--;
  6008   001A1A  062D               	decf	BlueInstructions@a^0,f,c
  6009   001A1C                     l2959:
  6010                           
  6011                           ;color_instructions.c: 45:     while (a>0){
  6012   001A1C  502D               	movf	BlueInstructions@a^0,w,c
  6013   001A1E  A4D8               	btfss	status,2,c
  6014   001A20  EF14  F00D         	goto	u2161
  6015   001A24  EF16  F00D         	goto	u2160
  6016   001A28                     u2161:
  6017   001A28  EF03  F00D         	goto	l2955
  6018   001A2C                     u2160:
  6019   001A2C                     
  6020                           ;color_instructions.c: 49:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6021   001A2C  0E05               	movlw	5
  6022   001A2E  6E2C               	movwf	(??_BlueInstructions+1)^0,c
  6023   001A30  0E0F               	movlw	15
  6024   001A32  6E2B               	movwf	??_BlueInstructions^0,c
  6025   001A34  0EF1               	movlw	241
  6026   001A36                     u4307:
  6027   001A36  2EE8               	decfsz	wreg,f,c
  6028   001A38  D7FE               	bra	u4307
  6029   001A3A  2E2B               	decfsz	??_BlueInstructions^0,f,c
  6030   001A3C  D7FC               	bra	u4307
  6031   001A3E  2E2C               	decfsz	(??_BlueInstructions+1)^0,f,c
  6032   001A40  D7FA               	bra	u4307
  6033   001A42  F000               	nop	
  6034   001A44                     
  6035                           ;color_instructions.c: 52:     turnLeft90(mL, mR);
  6036   001A44  C027  F022         	movff	BlueInstructions@mL,turnLeft90@mL
  6037   001A48  C028  F023         	movff	BlueInstructions@mL+1,turnLeft90@mL+1
  6038   001A4C  C029  F024         	movff	BlueInstructions@mR,turnLeft90@mR
  6039   001A50  C02A  F025         	movff	BlueInstructions@mR+1,turnLeft90@mR+1
  6040   001A54  EC0D  F010         	call	_turnLeft90	;wreg free
  6041   001A58                     
  6042                           ;color_instructions.c: 53:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6043   001A58  0E05               	movlw	5
  6044   001A5A  6E2C               	movwf	(??_BlueInstructions+1)^0,c
  6045   001A5C  0E0F               	movlw	15
  6046   001A5E  6E2B               	movwf	??_BlueInstructions^0,c
  6047   001A60  0EF1               	movlw	241
  6048   001A62                     u4317:
  6049   001A62  2EE8               	decfsz	wreg,f,c
  6050   001A64  D7FE               	bra	u4317
  6051   001A66  2E2B               	decfsz	??_BlueInstructions^0,f,c
  6052   001A68  D7FC               	bra	u4317
  6053   001A6A  2E2C               	decfsz	(??_BlueInstructions+1)^0,f,c
  6054   001A6C  D7FA               	bra	u4317
  6055   001A6E  F000               	nop	
  6056                           
  6057                           ;color_instructions.c: 54:     turnLeft90(mL, mR);
  6058   001A70  C027  F022         	movff	BlueInstructions@mL,turnLeft90@mL
  6059   001A74  C028  F023         	movff	BlueInstructions@mL+1,turnLeft90@mL+1
  6060   001A78  C029  F024         	movff	BlueInstructions@mR,turnLeft90@mR
  6061   001A7C  C02A  F025         	movff	BlueInstructions@mR+1,turnLeft90@mR+1
  6062   001A80  EC0D  F010         	call	_turnLeft90	;wreg free
  6063   001A84  0012               	return		;funcret
  6064   001A86                     __end_of_BlueInstructions:
  6065                           	callstack 0
  6066                           
  6067 ;; *************** function _turnLeft90 *****************
  6068 ;; Defined at:
  6069 ;;		line 200 in file "dc_motor.c"
  6070 ;; Parameters:    Size  Location     Type
  6071 ;;  mL              2   33[COMRAM] PTR struct DC_motor
  6072 ;;		 -> main@motorL(9), 
  6073 ;;  mR              2   35[COMRAM] PTR struct DC_motor
  6074 ;;		 -> main@motorR(9), 
  6075 ;; Auto vars:     Size  Location     Type
  6076 ;;  a               1   37[COMRAM] unsigned char 
  6077 ;; Return value:  Size  Location     Type
  6078 ;;                  1    wreg      void 
  6079 ;; Registers used:
  6080 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6081 ;; Tracked objects:
  6082 ;;		On entry : 0/0
  6083 ;;		On exit  : 0/0
  6084 ;;		Unchanged: 0/0
  6085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6086 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6087 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6089 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6090 ;;Total ram usage:        5 bytes
  6091 ;; Hardware stack levels used: 1
  6092 ;; Hardware stack levels required when called: 10
  6093 ;; This function calls:
  6094 ;;		_stop
  6095 ;;		_turnLeft
  6096 ;; This function is called by:
  6097 ;;		_GreenInstructions
  6098 ;;		_BlueInstructions
  6099 ;;		_PinkInstructions
  6100 ;;		_AntiPink
  6101 ;; This function uses a non-reentrant model
  6102 ;;
  6103                           
  6104                           	psect	text31
  6105   00201A                     __ptext31:
  6106                           	callstack 0
  6107   00201A                     _turnLeft90:
  6108                           	callstack 18
  6109   00201A                     
  6110                           ;dc_motor.c: 202:     unsigned char a=0;
  6111   00201A  0E00               	movlw	0
  6112   00201C  6E26               	movwf	turnLeft90@a^0,c
  6113                           
  6114                           ;dc_motor.c: 203:     while(a<17){
  6115   00201E  EF1C  F010         	goto	l2807
  6116   002022                     l2803:
  6117                           
  6118                           ;dc_motor.c: 204:         turnLeft(mL, mR);
  6119   002022  C022  F01C         	movff	turnLeft90@mL,turnLeft@mL
  6120   002026  C023  F01D         	movff	turnLeft90@mL+1,turnLeft@mL+1
  6121   00202A  C024  F01E         	movff	turnLeft90@mR,turnLeft@mR
  6122   00202E  C025  F01F         	movff	turnLeft90@mR+1,turnLeft@mR+1
  6123   002032  EC33  F00B         	call	_turnLeft	;wreg free
  6124   002036                     
  6125                           ;dc_motor.c: 205:         a++;
  6126   002036  2A26               	incf	turnLeft90@a^0,f,c
  6127   002038                     l2807:
  6128                           
  6129                           ;dc_motor.c: 203:     while(a<17){
  6130   002038  0E10               	movlw	16
  6131   00203A  6426               	cpfsgt	turnLeft90@a^0,c
  6132   00203C  EF22  F010         	goto	u2031
  6133   002040  EF24  F010         	goto	u2030
  6134   002044                     u2031:
  6135   002044  EF11  F010         	goto	l2803
  6136   002048                     u2030:
  6137   002048  EF31  F010         	goto	l2813
  6138   00204C                     l2809:
  6139                           
  6140                           ;dc_motor.c: 208:         stop(mL, mR);
  6141   00204C  C022  F01C         	movff	turnLeft90@mL,stop@mL
  6142   002050  C023  F01D         	movff	turnLeft90@mL+1,stop@mL+1
  6143   002054  C024  F01E         	movff	turnLeft90@mR,stop@mR
  6144   002058  C025  F01F         	movff	turnLeft90@mR+1,stop@mR+1
  6145   00205C  EC80  F00C         	call	_stop	;wreg free
  6146   002060                     
  6147                           ;dc_motor.c: 209:         a--;
  6148   002060  0626               	decf	turnLeft90@a^0,f,c
  6149   002062                     l2813:
  6150                           
  6151                           ;dc_motor.c: 207:     while(a>0){
  6152   002062  5026               	movf	turnLeft90@a^0,w,c
  6153   002064  A4D8               	btfss	status,2,c
  6154   002066  EF37  F010         	goto	u2041
  6155   00206A  EF39  F010         	goto	u2040
  6156   00206E                     u2041:
  6157   00206E  EF26  F010         	goto	l2809
  6158   002072                     u2040:
  6159   002072  0012               	return		;funcret
  6160   002074                     __end_of_turnLeft90:
  6161                           	callstack 0
  6162                           
  6163 ;; *************** function _turnLeft *****************
  6164 ;; Defined at:
  6165 ;;		line 107 in file "dc_motor.c"
  6166 ;; Parameters:    Size  Location     Type
  6167 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6168 ;;		 -> main@motorL(9), 
  6169 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6170 ;;		 -> main@motorR(9), 
  6171 ;; Auto vars:     Size  Location     Type
  6172 ;;		None
  6173 ;; Return value:  Size  Location     Type
  6174 ;;                  1    wreg      void 
  6175 ;; Registers used:
  6176 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6177 ;; Tracked objects:
  6178 ;;		On entry : 0/0
  6179 ;;		On exit  : 0/0
  6180 ;;		Unchanged: 0/0
  6181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6182 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6184 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6185 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6186 ;;Total ram usage:        6 bytes
  6187 ;; Hardware stack levels used: 1
  6188 ;; Hardware stack levels required when called: 9
  6189 ;; This function calls:
  6190 ;;		_setMotorPWM
  6191 ;; This function is called by:
  6192 ;;		_turnLeft90
  6193 ;;		_turnLeft135
  6194 ;; This function uses a non-reentrant model
  6195 ;;
  6196                           
  6197                           	psect	text32
  6198   001666                     __ptext32:
  6199                           	callstack 0
  6200   001666                     _turnLeft:
  6201                           	callstack 18
  6202   001666                     
  6203                           ;dc_motor.c: 107: void turnLeft(DC_motor *mL, DC_motor *mR);dc_motor.c: 108: {;dc_motor.
      +                          c: 110:     mL->direction = 0;
  6204   001666  EE20 F001          	lfsr	2,1
  6205   00166A  501C               	movf	turnLeft@mL^0,w,c
  6206   00166C  26D9               	addwf	fsr2l,f,c
  6207   00166E  501D               	movf	(turnLeft@mL+1)^0,w,c
  6208   001670  22DA               	addwfc	fsr2h,f,c
  6209   001672  0E00               	movlw	0
  6210   001674  6EDF               	movwf	indf2,c
  6211                           
  6212                           ;dc_motor.c: 111:     mL->brakemode = 0;
  6213   001676  EE20 F002          	lfsr	2,2
  6214   00167A  501C               	movf	turnLeft@mL^0,w,c
  6215   00167C  26D9               	addwf	fsr2l,f,c
  6216   00167E  501D               	movf	(turnLeft@mL+1)^0,w,c
  6217   001680  22DA               	addwfc	fsr2h,f,c
  6218   001682  0E00               	movlw	0
  6219   001684  6EDF               	movwf	indf2,c
  6220                           
  6221                           ;dc_motor.c: 113:     mR->direction = 1;
  6222   001686  EE20 F001          	lfsr	2,1
  6223   00168A  501E               	movf	turnLeft@mR^0,w,c
  6224   00168C  26D9               	addwf	fsr2l,f,c
  6225   00168E  501F               	movf	(turnLeft@mR+1)^0,w,c
  6226   001690  22DA               	addwfc	fsr2h,f,c
  6227   001692  0E01               	movlw	1
  6228   001694  6EDF               	movwf	indf2,c
  6229                           
  6230                           ;dc_motor.c: 114:     mR->brakemode = 0;
  6231   001696  EE20 F002          	lfsr	2,2
  6232   00169A  501E               	movf	turnLeft@mR^0,w,c
  6233   00169C  26D9               	addwf	fsr2l,f,c
  6234   00169E  501F               	movf	(turnLeft@mR+1)^0,w,c
  6235   0016A0  22DA               	addwfc	fsr2h,f,c
  6236   0016A2  0E00               	movlw	0
  6237   0016A4  6EDF               	movwf	indf2,c
  6238                           
  6239                           ;dc_motor.c: 117:     if(mL->power>75){mL->power=75;}
  6240   0016A6  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6241   0016AA  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6242   0016AE  50DF               	movf	indf2,w,c
  6243   0016B0  0A80               	xorlw	128
  6244   0016B2  0F34               	addlw	-204
  6245   0016B4  A0D8               	btfss	status,0,c
  6246   0016B6  EF5F  F00B         	goto	u1951
  6247   0016BA  EF61  F00B         	goto	u1950
  6248   0016BE                     u1951:
  6249   0016BE  EF67  F00B         	goto	l2721
  6250   0016C2                     u1950:
  6251   0016C2  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6252   0016C6  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6253   0016CA  0E4B               	movlw	75
  6254   0016CC  6EDF               	movwf	indf2,c
  6255   0016CE                     l2721:
  6256                           
  6257                           ;dc_motor.c: 118:     if(mR->power>75){mR->power=75;}
  6258   0016CE  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6259   0016D2  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6260   0016D6  50DF               	movf	indf2,w,c
  6261   0016D8  0A80               	xorlw	128
  6262   0016DA  0F34               	addlw	-204
  6263   0016DC  A0D8               	btfss	status,0,c
  6264   0016DE  EF73  F00B         	goto	u1961
  6265   0016E2  EF75  F00B         	goto	u1960
  6266   0016E6                     u1961:
  6267   0016E6  EF7B  F00B         	goto	l2725
  6268   0016EA                     u1960:
  6269   0016EA  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6270   0016EE  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6271   0016F2  0E4B               	movlw	75
  6272   0016F4  6EDF               	movwf	indf2,c
  6273   0016F6                     l2725:
  6274                           
  6275                           ;dc_motor.c: 120:     mL->power = mL->power + 5 ;
  6276   0016F6  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6277   0016FA  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6278   0016FE  50DF               	movf	indf2,w,c
  6279   001700  0F05               	addlw	5
  6280   001702  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6281   001706  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6282   00170A  6EDF               	movwf	indf2,c
  6283   00170C                     
  6284                           ;dc_motor.c: 121:     mR->power = mR->power + 5;
  6285   00170C  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6286   001710  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6287   001714  50DF               	movf	indf2,w,c
  6288   001716  0F05               	addlw	5
  6289   001718  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6290   00171C  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6291   001720  6EDF               	movwf	indf2,c
  6292   001722                     
  6293                           ;dc_motor.c: 123:     setMotorPWM(mL);
  6294   001722  C01C  F016         	movff	turnLeft@mL,setMotorPWM@m
  6295   001726  C01D  F017         	movff	turnLeft@mL+1,setMotorPWM@m+1
  6296   00172A  EC82  F009         	call	_setMotorPWM	;wreg free
  6297   00172E                     
  6298                           ;dc_motor.c: 124:     setMotorPWM(mR);
  6299   00172E  C01E  F016         	movff	turnLeft@mR,setMotorPWM@m
  6300   001732  C01F  F017         	movff	turnLeft@mR+1,setMotorPWM@m+1
  6301   001736  EC82  F009         	call	_setMotorPWM	;wreg free
  6302   00173A                     
  6303                           ;dc_motor.c: 125:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6304   00173A  0E05               	movlw	5
  6305   00173C  6E21               	movwf	(??_turnLeft+1)^0,c
  6306   00173E  0E0F               	movlw	15
  6307   001740  6E20               	movwf	??_turnLeft^0,c
  6308   001742  0EF1               	movlw	241
  6309   001744                     u4327:
  6310   001744  2EE8               	decfsz	wreg,f,c
  6311   001746  D7FE               	bra	u4327
  6312   001748  2E20               	decfsz	??_turnLeft^0,f,c
  6313   00174A  D7FC               	bra	u4327
  6314   00174C  2E21               	decfsz	(??_turnLeft+1)^0,f,c
  6315   00174E  D7FA               	bra	u4327
  6316   001750  F000               	nop	
  6317   001752  0012               	return		;funcret
  6318   001754                     __end_of_turnLeft:
  6319                           	callstack 0
  6320                           
  6321 ;; *************** function _stop *****************
  6322 ;; Defined at:
  6323 ;;		line 87 in file "dc_motor.c"
  6324 ;; Parameters:    Size  Location     Type
  6325 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6326 ;;		 -> main@motorL(9), 
  6327 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6328 ;;		 -> main@motorR(9), 
  6329 ;; Auto vars:     Size  Location     Type
  6330 ;;		None
  6331 ;; Return value:  Size  Location     Type
  6332 ;;                  1    wreg      void 
  6333 ;; Registers used:
  6334 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6335 ;; Tracked objects:
  6336 ;;		On entry : 0/0
  6337 ;;		On exit  : 0/0
  6338 ;;		Unchanged: 0/0
  6339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6340 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6342 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6343 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6344 ;;Total ram usage:        5 bytes
  6345 ;; Hardware stack levels used: 1
  6346 ;; Hardware stack levels required when called: 9
  6347 ;; This function calls:
  6348 ;;		_setMotorPWM
  6349 ;; This function is called by:
  6350 ;;		_turnLeft90
  6351 ;;		_turnRight90
  6352 ;;		_turnRight135
  6353 ;;		_turnLeft135
  6354 ;;		_main
  6355 ;;		_RedInstructions
  6356 ;;		_GreenInstructions
  6357 ;;		_BlueInstructions
  6358 ;;		_YellowInstructions
  6359 ;;		_PinkInstructions
  6360 ;;		_OrangeInstructions
  6361 ;;		_LightBlueInstructions
  6362 ;;		_turn180
  6363 ;;		_AntiYellow
  6364 ;;		_AntiPink
  6365 ;;		_WhiteInstructions
  6366 ;; This function uses a non-reentrant model
  6367 ;;
  6368                           
  6369                           	psect	text33
  6370   001900                     __ptext33:
  6371                           	callstack 0
  6372   001900                     _stop:
  6373                           	callstack 21
  6374   001900                     
  6375                           ;dc_motor.c: 87: void stop(DC_motor *mL, DC_motor *mR);dc_motor.c: 88: {;dc_motor.c: 90:
      +                               mL->brakemode = 1;
  6376   001900  EE20 F002          	lfsr	2,2
  6377   001904  501C               	movf	stop@mL^0,w,c
  6378   001906  26D9               	addwf	fsr2l,f,c
  6379   001908  501D               	movf	(stop@mL+1)^0,w,c
  6380   00190A  22DA               	addwfc	fsr2h,f,c
  6381   00190C  0E01               	movlw	1
  6382   00190E  6EDF               	movwf	indf2,c
  6383                           
  6384                           ;dc_motor.c: 91:     mR->brakemode = 1;
  6385   001910  EE20 F002          	lfsr	2,2
  6386   001914  501E               	movf	stop@mR^0,w,c
  6387   001916  26D9               	addwf	fsr2l,f,c
  6388   001918  501F               	movf	(stop@mR+1)^0,w,c
  6389   00191A  22DA               	addwfc	fsr2h,f,c
  6390   00191C  0E01               	movlw	1
  6391   00191E  6EDF               	movwf	indf2,c
  6392                           
  6393                           ;dc_motor.c: 93:     if(mL->power<0){mL->power=0;}
  6394   001920  C01C  FFD9         	movff	stop@mL,fsr2l
  6395   001924  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6396   001928  0E00               	movlw	0
  6397   00192A  BEDB               	btfsc	plusw2,7,c
  6398   00192C  EF9C  F00C         	goto	u1930
  6399   001930  EF9A  F00C         	goto	u1931
  6400   001934                     u1931:
  6401   001934  EFA2  F00C         	goto	l2703
  6402   001938                     u1930:
  6403   001938  C01C  FFD9         	movff	stop@mL,fsr2l
  6404   00193C  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6405   001940  0E00               	movlw	0
  6406   001942  6EDF               	movwf	indf2,c
  6407   001944                     l2703:
  6408                           
  6409                           ;dc_motor.c: 94:     if(mR->power<0){mR->power=0;}
  6410   001944  C01E  FFD9         	movff	stop@mR,fsr2l
  6411   001948  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6412   00194C  0E00               	movlw	0
  6413   00194E  BEDB               	btfsc	plusw2,7,c
  6414   001950  EFAE  F00C         	goto	u1940
  6415   001954  EFAC  F00C         	goto	u1941
  6416   001958                     u1941:
  6417   001958  EFB4  F00C         	goto	l2707
  6418   00195C                     u1940:
  6419   00195C  C01E  FFD9         	movff	stop@mR,fsr2l
  6420   001960  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6421   001964  0E00               	movlw	0
  6422   001966  6EDF               	movwf	indf2,c
  6423   001968                     l2707:
  6424                           
  6425                           ;dc_motor.c: 96:     mL->power = mL->power - 5 ;
  6426   001968  C01C  FFD9         	movff	stop@mL,fsr2l
  6427   00196C  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6428   001970  50DF               	movf	indf2,w,c
  6429   001972  0FFB               	addlw	251
  6430   001974  C01C  FFD9         	movff	stop@mL,fsr2l
  6431   001978  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6432   00197C  6EDF               	movwf	indf2,c
  6433   00197E                     
  6434                           ;dc_motor.c: 97:     mR->power = mR->power - 5;
  6435   00197E  C01E  FFD9         	movff	stop@mR,fsr2l
  6436   001982  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6437   001986  50DF               	movf	indf2,w,c
  6438   001988  0FFB               	addlw	251
  6439   00198A  C01E  FFD9         	movff	stop@mR,fsr2l
  6440   00198E  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6441   001992  6EDF               	movwf	indf2,c
  6442                           
  6443                           ;dc_motor.c: 99:     mL->power = 0;
  6444   001994  C01C  FFD9         	movff	stop@mL,fsr2l
  6445   001998  C01D  FFDA         	movff	stop@mL+1,fsr2h
  6446   00199C  0E00               	movlw	0
  6447   00199E  6EDF               	movwf	indf2,c
  6448                           
  6449                           ;dc_motor.c: 100:     mR->power = 0;
  6450   0019A0  C01E  FFD9         	movff	stop@mR,fsr2l
  6451   0019A4  C01F  FFDA         	movff	stop@mR+1,fsr2h
  6452   0019A8  0E00               	movlw	0
  6453   0019AA  6EDF               	movwf	indf2,c
  6454   0019AC                     
  6455                           ;dc_motor.c: 101:     setMotorPWM(mL);
  6456   0019AC  C01C  F016         	movff	stop@mL,setMotorPWM@m
  6457   0019B0  C01D  F017         	movff	stop@mL+1,setMotorPWM@m+1
  6458   0019B4  EC82  F009         	call	_setMotorPWM	;wreg free
  6459   0019B8                     
  6460                           ;dc_motor.c: 102:     setMotorPWM(mR);
  6461   0019B8  C01E  F016         	movff	stop@mR,setMotorPWM@m
  6462   0019BC  C01F  F017         	movff	stop@mR+1,setMotorPWM@m+1
  6463   0019C0  EC82  F009         	call	_setMotorPWM	;wreg free
  6464   0019C4                     
  6465                           ;dc_motor.c: 103:     _delay((unsigned long)((10)*(64000000/4000.0)));
  6466   0019C4  0ED0               	movlw	208
  6467   0019C6  6E20               	movwf	??_stop^0,c
  6468   0019C8  0ECA               	movlw	202
  6469   0019CA                     u4337:
  6470   0019CA  2EE8               	decfsz	wreg,f,c
  6471   0019CC  D7FE               	bra	u4337
  6472   0019CE  2E20               	decfsz	??_stop^0,f,c
  6473   0019D0  D7FC               	bra	u4337
  6474   0019D2  0012               	return		;funcret
  6475   0019D4                     __end_of_stop:
  6476                           	callstack 0
  6477                           
  6478 ;; *************** function _fullSpeedBackwards *****************
  6479 ;; Defined at:
  6480 ;;		line 174 in file "dc_motor.c"
  6481 ;; Parameters:    Size  Location     Type
  6482 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6483 ;;		 -> main@motorL(9), 
  6484 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6485 ;;		 -> main@motorR(9), 
  6486 ;; Auto vars:     Size  Location     Type
  6487 ;;		None
  6488 ;; Return value:  Size  Location     Type
  6489 ;;                  1    wreg      void 
  6490 ;; Registers used:
  6491 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6492 ;; Tracked objects:
  6493 ;;		On entry : 0/0
  6494 ;;		On exit  : 0/0
  6495 ;;		Unchanged: 0/0
  6496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6497 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6499 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6500 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6501 ;;Total ram usage:        6 bytes
  6502 ;; Hardware stack levels used: 1
  6503 ;; Hardware stack levels required when called: 9
  6504 ;; This function calls:
  6505 ;;		_setMotorPWM
  6506 ;; This function is called by:
  6507 ;;		_RedInstructions
  6508 ;;		_GreenInstructions
  6509 ;;		_BlueInstructions
  6510 ;;		_YellowInstructions
  6511 ;;		_PinkInstructions
  6512 ;;		_OrangeInstructions
  6513 ;;		_LightBlueInstructions
  6514 ;; This function uses a non-reentrant model
  6515 ;;
  6516                           
  6517                           	psect	text34
  6518   00182A                     __ptext34:
  6519                           	callstack 0
  6520   00182A                     _fullSpeedBackwards:
  6521                           	callstack 19
  6522   00182A                     
  6523                           ;dc_motor.c: 177:     mL->direction = 0;
  6524   00182A  EE20 F001          	lfsr	2,1
  6525   00182E  501C               	movf	fullSpeedBackwards@mL^0,w,c
  6526   001830  26D9               	addwf	fsr2l,f,c
  6527   001832  501D               	movf	(fullSpeedBackwards@mL+1)^0,w,c
  6528   001834  22DA               	addwfc	fsr2h,f,c
  6529   001836  0E00               	movlw	0
  6530   001838  6EDF               	movwf	indf2,c
  6531                           
  6532                           ;dc_motor.c: 178:     mL->brakemode = 0;
  6533   00183A  EE20 F002          	lfsr	2,2
  6534   00183E  501C               	movf	fullSpeedBackwards@mL^0,w,c
  6535   001840  26D9               	addwf	fsr2l,f,c
  6536   001842  501D               	movf	(fullSpeedBackwards@mL+1)^0,w,c
  6537   001844  22DA               	addwfc	fsr2h,f,c
  6538   001846  0E00               	movlw	0
  6539   001848  6EDF               	movwf	indf2,c
  6540                           
  6541                           ;dc_motor.c: 180:     mR->direction = 0;
  6542   00184A  EE20 F001          	lfsr	2,1
  6543   00184E  501E               	movf	fullSpeedBackwards@mR^0,w,c
  6544   001850  26D9               	addwf	fsr2l,f,c
  6545   001852  501F               	movf	(fullSpeedBackwards@mR+1)^0,w,c
  6546   001854  22DA               	addwfc	fsr2h,f,c
  6547   001856  0E00               	movlw	0
  6548   001858  6EDF               	movwf	indf2,c
  6549                           
  6550                           ;dc_motor.c: 181:     mR->brakemode = 0;
  6551   00185A  EE20 F002          	lfsr	2,2
  6552   00185E  501E               	movf	fullSpeedBackwards@mR^0,w,c
  6553   001860  26D9               	addwf	fsr2l,f,c
  6554   001862  501F               	movf	(fullSpeedBackwards@mR+1)^0,w,c
  6555   001864  22DA               	addwfc	fsr2h,f,c
  6556   001866  0E00               	movlw	0
  6557   001868  6EDF               	movwf	indf2,c
  6558                           
  6559                           ;dc_motor.c: 184:     if(mL->power>50){mL->power=50;}
  6560   00186A  C01C  FFD9         	movff	fullSpeedBackwards@mL,fsr2l
  6561   00186E  C01D  FFDA         	movff	fullSpeedBackwards@mL+1,fsr2h
  6562   001872  50DF               	movf	indf2,w,c
  6563   001874  0A80               	xorlw	128
  6564   001876  0F4D               	addlw	-179
  6565   001878  A0D8               	btfss	status,0,c
  6566   00187A  EF41  F00C         	goto	u2011
  6567   00187E  EF43  F00C         	goto	u2010
  6568   001882                     u2011:
  6569   001882  EF49  F00C         	goto	l2787
  6570   001886                     u2010:
  6571   001886  C01C  FFD9         	movff	fullSpeedBackwards@mL,fsr2l
  6572   00188A  C01D  FFDA         	movff	fullSpeedBackwards@mL+1,fsr2h
  6573   00188E  0E32               	movlw	50
  6574   001890  6EDF               	movwf	indf2,c
  6575   001892                     l2787:
  6576                           
  6577                           ;dc_motor.c: 185:     if(mR->power>50){mR->power=50;}
  6578   001892  C01E  FFD9         	movff	fullSpeedBackwards@mR,fsr2l
  6579   001896  C01F  FFDA         	movff	fullSpeedBackwards@mR+1,fsr2h
  6580   00189A  50DF               	movf	indf2,w,c
  6581   00189C  0A80               	xorlw	128
  6582   00189E  0F4D               	addlw	-179
  6583   0018A0  A0D8               	btfss	status,0,c
  6584   0018A2  EF55  F00C         	goto	u2021
  6585   0018A6  EF57  F00C         	goto	u2020
  6586   0018AA                     u2021:
  6587   0018AA  EF5D  F00C         	goto	l2791
  6588   0018AE                     u2020:
  6589   0018AE  C01E  FFD9         	movff	fullSpeedBackwards@mR,fsr2l
  6590   0018B2  C01F  FFDA         	movff	fullSpeedBackwards@mR+1,fsr2h
  6591   0018B6  0E32               	movlw	50
  6592   0018B8  6EDF               	movwf	indf2,c
  6593   0018BA                     l2791:
  6594                           
  6595                           ;dc_motor.c: 187:     ++mL->power;
  6596   0018BA  C01C  FFD9         	movff	fullSpeedBackwards@mL,fsr2l
  6597   0018BE  C01D  FFDA         	movff	fullSpeedBackwards@mL+1,fsr2h
  6598   0018C2  2ADF               	incf	indf2,f,c
  6599   0018C4                     
  6600                           ;dc_motor.c: 188:     ++mR->power;
  6601   0018C4  C01E  FFD9         	movff	fullSpeedBackwards@mR,fsr2l
  6602   0018C8  C01F  FFDA         	movff	fullSpeedBackwards@mR+1,fsr2h
  6603   0018CC  2ADF               	incf	indf2,f,c
  6604   0018CE                     
  6605                           ;dc_motor.c: 190:     setMotorPWM(mL);
  6606   0018CE  C01C  F016         	movff	fullSpeedBackwards@mL,setMotorPWM@m
  6607   0018D2  C01D  F017         	movff	fullSpeedBackwards@mL+1,setMotorPWM@m+1
  6608   0018D6  EC82  F009         	call	_setMotorPWM	;wreg free
  6609   0018DA                     
  6610                           ;dc_motor.c: 191:     setMotorPWM(mR);
  6611   0018DA  C01E  F016         	movff	fullSpeedBackwards@mR,setMotorPWM@m
  6612   0018DE  C01F  F017         	movff	fullSpeedBackwards@mR+1,setMotorPWM@m+1
  6613   0018E2  EC82  F009         	call	_setMotorPWM	;wreg free
  6614   0018E6                     
  6615                           ;dc_motor.c: 192:     _delay((unsigned long)((50)*(64000000/4000.0)));
  6616   0018E6  0E05               	movlw	5
  6617   0018E8  6E21               	movwf	(??_fullSpeedBackwards+1)^0,c
  6618   0018EA  0E0F               	movlw	15
  6619   0018EC  6E20               	movwf	??_fullSpeedBackwards^0,c
  6620   0018EE  0EF1               	movlw	241
  6621   0018F0                     u4347:
  6622   0018F0  2EE8               	decfsz	wreg,f,c
  6623   0018F2  D7FE               	bra	u4347
  6624   0018F4  2E20               	decfsz	??_fullSpeedBackwards^0,f,c
  6625   0018F6  D7FC               	bra	u4347
  6626   0018F8  2E21               	decfsz	(??_fullSpeedBackwards+1)^0,f,c
  6627   0018FA  D7FA               	bra	u4347
  6628   0018FC  F000               	nop	
  6629   0018FE  0012               	return		;funcret
  6630   001900                     __end_of_fullSpeedBackwards:
  6631                           	callstack 0
  6632                           
  6633 ;; *************** function _setMotorPWM *****************
  6634 ;; Defined at:
  6635 ;;		line 64 in file "dc_motor.c"
  6636 ;; Parameters:    Size  Location     Type
  6637 ;;  m               2   21[COMRAM] PTR struct DC_motor
  6638 ;;		 -> main@motorR(9), main@motorL(9), 
  6639 ;; Auto vars:     Size  Location     Type
  6640 ;;  negDuty         1   26[COMRAM] unsigned char 
  6641 ;;  posDuty         1   25[COMRAM] unsigned char 
  6642 ;; Return value:  Size  Location     Type
  6643 ;;                  1    wreg      void 
  6644 ;; Registers used:
  6645 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6646 ;; Tracked objects:
  6647 ;;		On entry : 0/0
  6648 ;;		On exit  : 0/0
  6649 ;;		Unchanged: 0/0
  6650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6651 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6652 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6653 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6654 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6655 ;;Total ram usage:        6 bytes
  6656 ;; Hardware stack levels used: 1
  6657 ;; Hardware stack levels required when called: 8
  6658 ;; This function calls:
  6659 ;;		___lwdiv
  6660 ;;		___wmul
  6661 ;; This function is called by:
  6662 ;;		_stop
  6663 ;;		_turnLeft
  6664 ;;		_turnRight
  6665 ;;		_fullSpeedAhead
  6666 ;;		_fullSpeedBackwards
  6667 ;; This function uses a non-reentrant model
  6668 ;;
  6669                           
  6670                           	psect	text35
  6671   001304                     __ptext35:
  6672                           	callstack 0
  6673   001304                     _setMotorPWM:
  6674                           	callstack 21
  6675   001304                     
  6676                           ;dc_motor.c: 64: void setMotorPWM(DC_motor *m);dc_motor.c: 65: {;dc_motor.c: 66:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 68:     if(m->brakemode) {
  6677   001304  EE20 F002          	lfsr	2,2
  6678   001308  5016               	movf	setMotorPWM@m^0,w,c
  6679   00130A  26D9               	addwf	fsr2l,f,c
  6680   00130C  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6681   00130E  22DA               	addwfc	fsr2h,f,c
  6682   001310  50DF               	movf	indf2,w,c
  6683   001312  B4D8               	btfsc	status,2,c
  6684   001314  EF8E  F009         	goto	u1891
  6685   001318  EF90  F009         	goto	u1890
  6686   00131C                     u1891:
  6687   00131C  EFC4  F009         	goto	l2683
  6688   001320                     u1890:
  6689   001320                     
  6690                           ;dc_motor.c: 69:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  6691   001320  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  6692   001324  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  6693   001328  50DF               	movf	indf2,w,c
  6694   00132A  6E09               	movwf	___wmul@multiplier^0,c
  6695   00132C  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  6696   00132E  BE09               	btfsc	___wmul@multiplier^0,7,c
  6697   001330  060A               	decf	(___wmul@multiplier+1)^0,f,c
  6698   001332  EE20 F003          	lfsr	2,3
  6699   001336  5016               	movf	setMotorPWM@m^0,w,c
  6700   001338  26D9               	addwf	fsr2l,f,c
  6701   00133A  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6702   00133C  22DA               	addwfc	fsr2h,f,c
  6703   00133E  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  6704   001342  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  6705   001346  ECC5  F011         	call	___wmul	;wreg free
  6706   00134A  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  6707   00134E  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  6708   001352  0E00               	movlw	0
  6709   001354  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  6710   001356  0E64               	movlw	100
  6711   001358  6E11               	movwf	___lwdiv@divisor^0,c
  6712   00135A  EC1D  F00F         	call	___lwdiv	;wreg free
  6713   00135E  EE20 F003          	lfsr	2,3
  6714   001362  5016               	movf	setMotorPWM@m^0,w,c
  6715   001364  26D9               	addwf	fsr2l,f,c
  6716   001366  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6717   001368  22DA               	addwfc	fsr2h,f,c
  6718   00136A  50DF               	movf	indf2,w,c
  6719   00136C  6E18               	movwf	??_setMotorPWM^0,c
  6720   00136E  500F               	movf	?___lwdiv^0,w,c
  6721   001370  5C18               	subwf	??_setMotorPWM^0,w,c
  6722   001372  6E1A               	movwf	setMotorPWM@posDuty^0,c
  6723   001374                     
  6724                           ;dc_motor.c: 70:         negDuty=m->PWMperiod;
  6725   001374  EE20 F003          	lfsr	2,3
  6726   001378  5016               	movf	setMotorPWM@m^0,w,c
  6727   00137A  26D9               	addwf	fsr2l,f,c
  6728   00137C  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6729   00137E  22DA               	addwfc	fsr2h,f,c
  6730   001380  50DF               	movf	indf2,w,c
  6731   001382  6E1B               	movwf	setMotorPWM@negDuty^0,c
  6732                           
  6733                           ;dc_motor.c: 71:     }
  6734   001384  EFE7  F009         	goto	l2687
  6735   001388                     l2683:
  6736                           
  6737                           ;dc_motor.c: 73:         posDuty=0;
  6738   001388  0E00               	movlw	0
  6739   00138A  6E1A               	movwf	setMotorPWM@posDuty^0,c
  6740   00138C                     
  6741                           ;dc_motor.c: 74:   negDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  6742   00138C  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  6743   001390  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  6744   001394  50DF               	movf	indf2,w,c
  6745   001396  6E09               	movwf	___wmul@multiplier^0,c
  6746   001398  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  6747   00139A  BE09               	btfsc	___wmul@multiplier^0,7,c
  6748   00139C  060A               	decf	(___wmul@multiplier+1)^0,f,c
  6749   00139E  EE20 F003          	lfsr	2,3
  6750   0013A2  5016               	movf	setMotorPWM@m^0,w,c
  6751   0013A4  26D9               	addwf	fsr2l,f,c
  6752   0013A6  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6753   0013A8  22DA               	addwfc	fsr2h,f,c
  6754   0013AA  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  6755   0013AE  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  6756   0013B2  ECC5  F011         	call	___wmul	;wreg free
  6757   0013B6  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  6758   0013BA  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  6759   0013BE  0E00               	movlw	0
  6760   0013C0  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  6761   0013C2  0E64               	movlw	100
  6762   0013C4  6E11               	movwf	___lwdiv@divisor^0,c
  6763   0013C6  EC1D  F00F         	call	___lwdiv	;wreg free
  6764   0013CA  500F               	movf	?___lwdiv^0,w,c
  6765   0013CC  6E1B               	movwf	setMotorPWM@negDuty^0,c
  6766   0013CE                     l2687:
  6767                           
  6768                           ;dc_motor.c: 77:     if (m->direction) {
  6769   0013CE  EE20 F001          	lfsr	2,1
  6770   0013D2  5016               	movf	setMotorPWM@m^0,w,c
  6771   0013D4  26D9               	addwf	fsr2l,f,c
  6772   0013D6  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6773   0013D8  22DA               	addwfc	fsr2h,f,c
  6774   0013DA  50DF               	movf	indf2,w,c
  6775   0013DC  B4D8               	btfsc	status,2,c
  6776   0013DE  EFF3  F009         	goto	u1901
  6777   0013E2  EFF5  F009         	goto	u1900
  6778   0013E6                     u1901:
  6779   0013E6  EF17  F00A         	goto	l2691
  6780   0013EA                     u1900:
  6781   0013EA                     
  6782                           ;dc_motor.c: 78:         *(m->posDutyHighByte)=posDuty;
  6783   0013EA  EE20 F005          	lfsr	2,5
  6784   0013EE  5016               	movf	setMotorPWM@m^0,w,c
  6785   0013F0  26D9               	addwf	fsr2l,f,c
  6786   0013F2  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6787   0013F4  22DA               	addwfc	fsr2h,f,c
  6788   0013F6  CFDE F018          	movff	postinc2,??_setMotorPWM
  6789   0013FA  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  6790   0013FE  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  6791   001402  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  6792   001406  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  6793                           
  6794                           ;dc_motor.c: 79:         *(m->negDutyHighByte)=negDuty;
  6795   00140A  EE20 F007          	lfsr	2,7
  6796   00140E  5016               	movf	setMotorPWM@m^0,w,c
  6797   001410  26D9               	addwf	fsr2l,f,c
  6798   001412  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6799   001414  22DA               	addwfc	fsr2h,f,c
  6800   001416  CFDE F018          	movff	postinc2,??_setMotorPWM
  6801   00141A  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  6802   00141E  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  6803   001422  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  6804   001426  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  6805                           
  6806                           ;dc_motor.c: 80:     } else {
  6807   00142A  EF37  F00A         	goto	l188
  6808   00142E                     l2691:
  6809                           
  6810                           ;dc_motor.c: 81:         *(m->posDutyHighByte)=negDuty;
  6811   00142E  EE20 F005          	lfsr	2,5
  6812   001432  5016               	movf	setMotorPWM@m^0,w,c
  6813   001434  26D9               	addwf	fsr2l,f,c
  6814   001436  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6815   001438  22DA               	addwfc	fsr2h,f,c
  6816   00143A  CFDE F018          	movff	postinc2,??_setMotorPWM
  6817   00143E  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  6818   001442  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  6819   001446  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  6820   00144A  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  6821                           
  6822                           ;dc_motor.c: 82:         *(m->negDutyHighByte)=posDuty;
  6823   00144E  EE20 F007          	lfsr	2,7
  6824   001452  5016               	movf	setMotorPWM@m^0,w,c
  6825   001454  26D9               	addwf	fsr2l,f,c
  6826   001456  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6827   001458  22DA               	addwfc	fsr2h,f,c
  6828   00145A  CFDE F018          	movff	postinc2,??_setMotorPWM
  6829   00145E  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  6830   001462  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  6831   001466  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  6832   00146A  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  6833   00146E                     l188:
  6834   00146E  0012               	return		;funcret
  6835   001470                     __end_of_setMotorPWM:
  6836                           	callstack 0
  6837                           
  6838 ;; *************** function ___wmul *****************
  6839 ;; Defined at:
  6840 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  6841 ;; Parameters:    Size  Location     Type
  6842 ;;  multiplier      2    8[COMRAM] unsigned int 
  6843 ;;  multiplicand    2   10[COMRAM] unsigned int 
  6844 ;; Auto vars:     Size  Location     Type
  6845 ;;  product         2   12[COMRAM] unsigned int 
  6846 ;; Return value:  Size  Location     Type
  6847 ;;                  2    8[COMRAM] unsigned int 
  6848 ;; Registers used:
  6849 ;;		wreg, status,2, status,0, prodl, prodh
  6850 ;; Tracked objects:
  6851 ;;		On entry : 0/0
  6852 ;;		On exit  : 0/0
  6853 ;;		Unchanged: 0/0
  6854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6855 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6856 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6858 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6859 ;;Total ram usage:        6 bytes
  6860 ;; Hardware stack levels used: 1
  6861 ;; Hardware stack levels required when called: 7
  6862 ;; This function calls:
  6863 ;;		Nothing
  6864 ;; This function is called by:
  6865 ;;		_setMotorPWM
  6866 ;; This function uses a non-reentrant model
  6867 ;;
  6868                           
  6869                           	psect	text36
  6870   00238A                     __ptext36:
  6871                           	callstack 0
  6872   00238A                     ___wmul:
  6873                           	callstack 21
  6874   00238A  5009               	movf	___wmul@multiplier^0,w,c
  6875   00238C  020B               	mulwf	___wmul@multiplicand^0,c
  6876   00238E  CFF3 F00D          	movff	prodl,___wmul@product
  6877   002392  CFF4 F00E          	movff	prodh,___wmul@product+1
  6878   002396  5009               	movf	___wmul@multiplier^0,w,c
  6879   002398  020C               	mulwf	(___wmul@multiplicand+1)^0,c
  6880   00239A  50F3               	movf	243,w,c
  6881   00239C  260E               	addwf	(___wmul@product+1)^0,f,c
  6882   00239E  500A               	movf	(___wmul@multiplier+1)^0,w,c
  6883   0023A0  020B               	mulwf	___wmul@multiplicand^0,c
  6884   0023A2  50F3               	movf	243,w,c
  6885   0023A4  260E               	addwf	(___wmul@product+1)^0,f,c
  6886   0023A6  C00D  F009         	movff	___wmul@product,?___wmul
  6887   0023AA  C00E  F00A         	movff	___wmul@product+1,?___wmul+1
  6888   0023AE  0012               	return		;funcret
  6889   0023B0                     __end_of___wmul:
  6890                           	callstack 0
  6891                           
  6892 ;; *************** function ___lwdiv *****************
  6893 ;; Defined at:
  6894 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  6895 ;; Parameters:    Size  Location     Type
  6896 ;;  dividend        2   14[COMRAM] unsigned int 
  6897 ;;  divisor         2   16[COMRAM] unsigned int 
  6898 ;; Auto vars:     Size  Location     Type
  6899 ;;  quotient        2   18[COMRAM] unsigned int 
  6900 ;;  counter         1   20[COMRAM] unsigned char 
  6901 ;; Return value:  Size  Location     Type
  6902 ;;                  2   14[COMRAM] unsigned int 
  6903 ;; Registers used:
  6904 ;;		wreg, status,2, status,0
  6905 ;; Tracked objects:
  6906 ;;		On entry : 0/0
  6907 ;;		On exit  : 0/0
  6908 ;;		Unchanged: 0/0
  6909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6910 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6911 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6913 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6914 ;;Total ram usage:        7 bytes
  6915 ;; Hardware stack levels used: 1
  6916 ;; Hardware stack levels required when called: 7
  6917 ;; This function calls:
  6918 ;;		Nothing
  6919 ;; This function is called by:
  6920 ;;		_setMotorPWM
  6921 ;; This function uses a non-reentrant model
  6922 ;;
  6923                           
  6924                           	psect	text37
  6925   001E3A                     __ptext37:
  6926                           	callstack 0
  6927   001E3A                     ___lwdiv:
  6928                           	callstack 21
  6929   001E3A  0E00               	movlw	0
  6930   001E3C  6E14               	movwf	(___lwdiv@quotient+1)^0,c
  6931   001E3E  0E00               	movlw	0
  6932   001E40  6E13               	movwf	___lwdiv@quotient^0,c
  6933   001E42  5011               	movf	___lwdiv@divisor^0,w,c
  6934   001E44  1012               	iorwf	(___lwdiv@divisor+1)^0,w,c
  6935   001E46  B4D8               	btfsc	status,2,c
  6936   001E48  EF28  F00F         	goto	u1861
  6937   001E4C  EF2A  F00F         	goto	u1860
  6938   001E50                     u1861:
  6939   001E50  EF52  F00F         	goto	l1155
  6940   001E54                     u1860:
  6941   001E54  0E01               	movlw	1
  6942   001E56  6E15               	movwf	___lwdiv@counter^0,c
  6943   001E58  EF32  F00F         	goto	l2651
  6944   001E5C                     l2649:
  6945   001E5C  90D8               	bcf	status,0,c
  6946   001E5E  3611               	rlcf	___lwdiv@divisor^0,f,c
  6947   001E60  3612               	rlcf	(___lwdiv@divisor+1)^0,f,c
  6948   001E62  2A15               	incf	___lwdiv@counter^0,f,c
  6949   001E64                     l2651:
  6950   001E64  AE12               	btfss	(___lwdiv@divisor+1)^0,7,c
  6951   001E66  EF37  F00F         	goto	u1871
  6952   001E6A  EF39  F00F         	goto	u1870
  6953   001E6E                     u1871:
  6954   001E6E  EF2E  F00F         	goto	l2649
  6955   001E72                     u1870:
  6956   001E72                     l2653:
  6957   001E72  90D8               	bcf	status,0,c
  6958   001E74  3613               	rlcf	___lwdiv@quotient^0,f,c
  6959   001E76  3614               	rlcf	(___lwdiv@quotient+1)^0,f,c
  6960   001E78  5011               	movf	___lwdiv@divisor^0,w,c
  6961   001E7A  5C0F               	subwf	___lwdiv@dividend^0,w,c
  6962   001E7C  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  6963   001E7E  5810               	subwfb	(___lwdiv@dividend+1)^0,w,c
  6964   001E80  A0D8               	btfss	status,0,c
  6965   001E82  EF45  F00F         	goto	u1881
  6966   001E86  EF47  F00F         	goto	u1880
  6967   001E8A                     u1881:
  6968   001E8A  EF4C  F00F         	goto	l2661
  6969   001E8E                     u1880:
  6970   001E8E  5011               	movf	___lwdiv@divisor^0,w,c
  6971   001E90  5E0F               	subwf	___lwdiv@dividend^0,f,c
  6972   001E92  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  6973   001E94  5A10               	subwfb	(___lwdiv@dividend+1)^0,f,c
  6974   001E96  8013               	bsf	___lwdiv@quotient^0,0,c
  6975   001E98                     l2661:
  6976   001E98  90D8               	bcf	status,0,c
  6977   001E9A  3212               	rrcf	(___lwdiv@divisor+1)^0,f,c
  6978   001E9C  3211               	rrcf	___lwdiv@divisor^0,f,c
  6979   001E9E  2E15               	decfsz	___lwdiv@counter^0,f,c
  6980   001EA0  EF39  F00F         	goto	l2653
  6981   001EA4                     l1155:
  6982   001EA4  C013  F00F         	movff	___lwdiv@quotient,?___lwdiv
  6983   001EA8  C014  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6984   001EAC  0012               	return		;funcret
  6985   001EAE                     __end_of___lwdiv:
  6986                           	callstack 0
  6987                           
  6988 ;; *************** function _AppendMoves *****************
  6989 ;; Defined at:
  6990 ;;		line 17 in file "Memorization.c"
  6991 ;; Parameters:    Size  Location     Type
  6992 ;;  temp            1    wreg     unsigned char 
  6993 ;;  moves_index     2    8[COMRAM] PTR unsigned char 
  6994 ;;		 -> moves_index(1), 
  6995 ;;  anti_moves_a    2   10[COMRAM] PTR unsigned char 
  6996 ;;		 -> anti_moves_array(40), 
  6997 ;; Auto vars:     Size  Location     Type
  6998 ;;  temp            1   13[COMRAM] unsigned char 
  6999 ;; Return value:  Size  Location     Type
  7000 ;;                  1    wreg      void 
  7001 ;; Registers used:
  7002 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7003 ;; Tracked objects:
  7004 ;;		On entry : 0/0
  7005 ;;		On exit  : 0/0
  7006 ;;		Unchanged: 0/0
  7007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7008 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7009 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7010 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7011 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7012 ;;Total ram usage:        6 bytes
  7013 ;; Hardware stack levels used: 1
  7014 ;; Hardware stack levels required when called: 7
  7015 ;; This function calls:
  7016 ;;		Nothing
  7017 ;; This function is called by:
  7018 ;;		_MoveBuggy
  7019 ;; This function uses a non-reentrant model
  7020 ;;
  7021                           
  7022                           	psect	text38
  7023   0023D6                     __ptext38:
  7024                           	callstack 0
  7025   0023D6                     _AppendMoves:
  7026                           	callstack 22
  7027                           
  7028                           ;incstack = 0
  7029                           ;AppendMoves@temp stored from wreg
  7030   0023D6  6E0E               	movwf	AppendMoves@temp^0,c
  7031   0023D8                     
  7032                           ;Memorization.c: 19:     anti_moves_array[(*moves_index)++] = temp;
  7033   0023D8  C009  FFD9         	movff	AppendMoves@moves_index,fsr2l
  7034   0023DC  C00A  FFDA         	movff	AppendMoves@moves_index+1,fsr2h
  7035   0023E0  CFDF F00D          	movff	indf2,??_AppendMoves
  7036   0023E4  0E01               	movlw	1
  7037   0023E6  26DF               	addwf	indf2,f,c
  7038   0023E8  500D               	movf	??_AppendMoves^0,w,c
  7039   0023EA  240B               	addwf	AppendMoves@anti_moves_array^0,w,c
  7040   0023EC  6ED9               	movwf	fsr2l,c
  7041   0023EE  0E00               	movlw	0
  7042   0023F0  200C               	addwfc	(AppendMoves@anti_moves_array+1)^0,w,c
  7043   0023F2  6EDA               	movwf	fsr2h,c
  7044   0023F4  C00E  FFDF         	movff	AppendMoves@temp,indf2
  7045   0023F8  0012               	return		;funcret
  7046   0023FA                     __end_of_AppendMoves:
  7047                           	callstack 0
  7048                           
  7049 ;; *************** function _LED_init *****************
  7050 ;; Defined at:
  7051 ;;		line 7 in file "LED_Buttons.c"
  7052 ;; Parameters:    Size  Location     Type
  7053 ;;		None
  7054 ;; Auto vars:     Size  Location     Type
  7055 ;;		None
  7056 ;; Return value:  Size  Location     Type
  7057 ;;                  1    wreg      void 
  7058 ;; Registers used:
  7059 ;;		None
  7060 ;; Tracked objects:
  7061 ;;		On entry : 0/0
  7062 ;;		On exit  : 0/0
  7063 ;;		Unchanged: 0/0
  7064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7069 ;;Total ram usage:        0 bytes
  7070 ;; Hardware stack levels used: 1
  7071 ;; Hardware stack levels required when called: 7
  7072 ;; This function calls:
  7073 ;;		Nothing
  7074 ;; This function is called by:
  7075 ;;		_main
  7076 ;; This function uses a non-reentrant model
  7077 ;;
  7078                           
  7079                           	psect	text39
  7080   0024D2                     __ptext39:
  7081                           	callstack 0
  7082   0024D2                     _LED_init:
  7083                           	callstack 23
  7084   0024D2                     
  7085                           ;LED_Buttons.c: 8:     TRISGbits.TRISG1 = 0;
  7086   0024D2  9287               	bcf	135,1,c	;volatile
  7087                           
  7088                           ;LED_Buttons.c: 9:     TRISAbits.TRISA4 = 0;
  7089   0024D4  9881               	bcf	129,4,c	;volatile
  7090                           
  7091                           ;LED_Buttons.c: 10:     TRISFbits.TRISF7 = 0;
  7092   0024D6  9E86               	bcf	134,7,c	;volatile
  7093                           
  7094                           ;LED_Buttons.c: 12:     LATHbits.LATH3 = 0;
  7095   0024D8  9680               	bcf	128,3,c	;volatile
  7096                           
  7097                           ;LED_Buttons.c: 13:     TRISHbits.TRISH3 = 0;
  7098   0024DA  9688               	bcf	136,3,c	;volatile
  7099   0024DC  0012               	return		;funcret
  7100   0024DE                     __end_of_LED_init:
  7101                           	callstack 0
  7102                           
  7103 ;; *************** function _Interrupts_init *****************
  7104 ;; Defined at:
  7105 ;;		line 12 in file "interrupts.c"
  7106 ;; Parameters:    Size  Location     Type
  7107 ;;		None
  7108 ;; Auto vars:     Size  Location     Type
  7109 ;;		None
  7110 ;; Return value:  Size  Location     Type
  7111 ;;                  1    wreg      void 
  7112 ;; Registers used:
  7113 ;;		wreg, status,2, status,0, cstack
  7114 ;; Tracked objects:
  7115 ;;		On entry : 0/0
  7116 ;;		On exit  : 0/0
  7117 ;;		Unchanged: 0/0
  7118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7123 ;;Total ram usage:        0 bytes
  7124 ;; Hardware stack levels used: 1
  7125 ;; Hardware stack levels required when called: 12
  7126 ;; This function calls:
  7127 ;;		_interrupts_clear_colorclick
  7128 ;; This function is called by:
  7129 ;;		_main
  7130 ;; This function uses a non-reentrant model
  7131 ;;
  7132                           
  7133                           	psect	text40
  7134   0023B0                     __ptext40:
  7135                           	callstack 0
  7136   0023B0                     _Interrupts_init:
  7137                           	callstack 18
  7138   0023B0                     
  7139                           ;interrupts.c: 18:     TRISBbits.TRISB1 = 1;
  7140   0023B0  8282               	bsf	130,1,c	;volatile
  7141                           
  7142                           ;interrupts.c: 19:     ANSELBbits.ANSELB1 = 0;
  7143   0023B2  010E               	movlb	14	; () banked
  7144   0023B4  939A               	bcf	154,1,b	;volatile
  7145   0023B6                     
  7146                           ; BSR set to: 14
  7147                           ;interrupts.c: 20:     INT1PPS = 0x09;
  7148   0023B6  0E09               	movlw	9
  7149   0023B8  010D               	movlb	13	; () banked
  7150   0023BA  6FF1               	movwf	241,b	;volatile
  7151   0023BC                     
  7152                           ; BSR set to: 13
  7153                           ;interrupts.c: 21:     PIE0bits.INT1IE = 1;
  7154   0023BC  010E               	movlb	14	; () banked
  7155   0023BE  8329               	bsf	41,1,b	;volatile
  7156   0023C0                     
  7157                           ; BSR set to: 14
  7158                           ;interrupts.c: 22:     IPR0bits.INT1IP = 1;
  7159   0023C0  831F               	bsf	31,1,b	;volatile
  7160   0023C2                     
  7161                           ; BSR set to: 14
  7162                           ;interrupts.c: 23:     INTCONbits.INT1EDG = 0;
  7163   0023C2  92F2               	bcf	242,1,c	;volatile
  7164   0023C4                     
  7165                           ; BSR set to: 14
  7166                           ;interrupts.c: 26:     PIE0bits.TMR0IE=1;
  7167   0023C4  8B29               	bsf	41,5,b	;volatile
  7168   0023C6                     
  7169                           ; BSR set to: 14
  7170                           ;interrupts.c: 27:     IPR0bits.TMR0IP = 0;
  7171   0023C6  9B1F               	bcf	31,5,b	;volatile
  7172   0023C8                     
  7173                           ; BSR set to: 14
  7174                           ;interrupts.c: 30:     PIE4bits.RC4IE=1;
  7175   0023C8  872D               	bsf	45,3,b	;volatile
  7176   0023CA                     
  7177                           ; BSR set to: 14
  7178                           ;interrupts.c: 32:     interrupts_clear_colorclick();
  7179   0023CA  EC4F  F012         	call	_interrupts_clear_colorclick	;wreg free
  7180   0023CE                     
  7181                           ;interrupts.c: 34:     INTCONbits.IPEN = 1;
  7182   0023CE  8AF2               	bsf	242,5,c	;volatile
  7183   0023D0                     
  7184                           ;interrupts.c: 35:     INTCONbits.PEIE = 1;
  7185   0023D0  8CF2               	bsf	242,6,c	;volatile
  7186   0023D2                     
  7187                           ;interrupts.c: 36:     INTCONbits.GIE=1;
  7188   0023D2  8EF2               	bsf	242,7,c	;volatile
  7189   0023D4  0012               	return		;funcret
  7190   0023D6                     __end_of_Interrupts_init:
  7191                           	callstack 0
  7192                           
  7193 ;; *************** function _interrupts_clear_colorclick *****************
  7194 ;; Defined at:
  7195 ;;		line 57 in file "interrupts.c"
  7196 ;; Parameters:    Size  Location     Type
  7197 ;;		None
  7198 ;; Auto vars:     Size  Location     Type
  7199 ;;		None
  7200 ;; Return value:  Size  Location     Type
  7201 ;;                  1    wreg      void 
  7202 ;; Registers used:
  7203 ;;		wreg, status,2, status,0, cstack
  7204 ;; Tracked objects:
  7205 ;;		On entry : 0/0
  7206 ;;		On exit  : 0/0
  7207 ;;		Unchanged: 0/0
  7208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7213 ;;Total ram usage:        0 bytes
  7214 ;; Hardware stack levels used: 1
  7215 ;; Hardware stack levels required when called: 11
  7216 ;; This function calls:
  7217 ;;		_I2C_2_Master_Start
  7218 ;;		_I2C_2_Master_Stop
  7219 ;;		_I2C_2_Master_Write
  7220 ;;		_init_colorclick_interrupts
  7221 ;; This function is called by:
  7222 ;;		_Interrupts_init
  7223 ;; This function uses a non-reentrant model
  7224 ;;
  7225                           
  7226                           	psect	text41
  7227   00249E                     __ptext41:
  7228                           	callstack 0
  7229   00249E                     _interrupts_clear_colorclick:
  7230                           	callstack 18
  7231   00249E                     
  7232                           ;interrupts.c: 59:     I2C_2_Master_Start();
  7233   00249E  EC85  F012         	call	_I2C_2_Master_Start	;wreg free
  7234                           
  7235                           ;interrupts.c: 60:     I2C_2_Master_Write(0x52 | 0x00);
  7236   0024A2  0E52               	movlw	82
  7237   0024A4  EC6F  F012         	call	_I2C_2_Master_Write
  7238                           
  7239                           ;interrupts.c: 61:     I2C_2_Master_Write(0b11100110);
  7240   0024A8  0EE6               	movlw	230
  7241   0024AA  EC6F  F012         	call	_I2C_2_Master_Write
  7242                           
  7243                           ;interrupts.c: 62:     I2C_2_Master_Stop();
  7244   0024AE  EC80  F012         	call	_I2C_2_Master_Stop	;wreg free
  7245                           
  7246                           ;interrupts.c: 64:     init_colorclick_interrupts();
  7247   0024B2  ECDA  F010         	call	_init_colorclick_interrupts	;wreg free
  7248   0024B6  0012               	return		;funcret
  7249   0024B8                     __end_of_interrupts_clear_colorclick:
  7250                           	callstack 0
  7251                           
  7252 ;; *************** function _init_colorclick_interrupts *****************
  7253 ;; Defined at:
  7254 ;;		line 43 in file "interrupts.c"
  7255 ;; Parameters:    Size  Location     Type
  7256 ;;		None
  7257 ;; Auto vars:     Size  Location     Type
  7258 ;;		None
  7259 ;; Return value:  Size  Location     Type
  7260 ;;                  1    wreg      void 
  7261 ;; Registers used:
  7262 ;;		wreg, status,2, status,0, cstack
  7263 ;; Tracked objects:
  7264 ;;		On entry : 0/0
  7265 ;;		On exit  : 0/0
  7266 ;;		Unchanged: 0/0
  7267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7270 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7271 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7272 ;;Total ram usage:        1 bytes
  7273 ;; Hardware stack levels used: 1
  7274 ;; Hardware stack levels required when called: 10
  7275 ;; This function calls:
  7276 ;;		_color_writetoaddr
  7277 ;; This function is called by:
  7278 ;;		_interrupts_clear_colorclick
  7279 ;; This function uses a non-reentrant model
  7280 ;;
  7281                           
  7282                           	psect	text42
  7283   0021B4                     __ptext42:
  7284                           	callstack 0
  7285   0021B4                     _init_colorclick_interrupts:
  7286                           	callstack 18
  7287   0021B4                     
  7288                           ;interrupts.c: 45:     color_writetoaddr(0x00,0b10011);
  7289   0021B4  0E13               	movlw	19
  7290   0021B6  6E0B               	movwf	color_writetoaddr@value^0,c
  7291   0021B8  0E00               	movlw	0
  7292   0021BA  EC1F  F012         	call	_color_writetoaddr
  7293   0021BE                     
  7294                           ;interrupts.c: 46:     _delay((unsigned long)((3)*(64000000/4000.0)));
  7295   0021BE  0E3F               	movlw	63
  7296   0021C0  6E0D               	movwf	??_init_colorclick_interrupts^0,c
  7297   0021C2  0E55               	movlw	85
  7298   0021C4                     u4357:
  7299   0021C4  2EE8               	decfsz	wreg,f,c
  7300   0021C6  D7FE               	bra	u4357
  7301   0021C8  2E0D               	decfsz	??_init_colorclick_interrupts^0,f,c
  7302   0021CA  D7FC               	bra	u4357
  7303   0021CC  F000               	nop	
  7304   0021CE                     
  7305                           ;interrupts.c: 48:     color_writetoaddr(0x0C,0b0100);
  7306   0021CE  0E04               	movlw	4
  7307   0021D0  6E0B               	movwf	color_writetoaddr@value^0,c
  7308   0021D2  0E0C               	movlw	12
  7309   0021D4  EC1F  F012         	call	_color_writetoaddr
  7310   0021D8                     
  7311                           ;interrupts.c: 49:     color_writetoaddr(0x04,(int_threshold_low & 0xFF));
  7312   0021D8  C04F  F00B         	movff	_int_threshold_low,color_writetoaddr@value
  7313   0021DC  0E04               	movlw	4
  7314   0021DE  EC1F  F012         	call	_color_writetoaddr
  7315   0021E2                     
  7316                           ;interrupts.c: 50:     color_writetoaddr(0x05,(int_threshold_low >> 8));
  7317   0021E2  5050               	movf	(_int_threshold_low+1)^0,w,c
  7318   0021E4  6E0B               	movwf	color_writetoaddr@value^0,c
  7319   0021E6  0E05               	movlw	5
  7320   0021E8  EC1F  F012         	call	_color_writetoaddr
  7321   0021EC                     
  7322                           ;interrupts.c: 51:     color_writetoaddr(0x06,(int_threshold_high & 0xFF));
  7323   0021EC  C0FA  F00B         	movff	_int_threshold_high,color_writetoaddr@value
  7324   0021F0  0E06               	movlw	6
  7325   0021F2  EC1F  F012         	call	_color_writetoaddr
  7326   0021F6                     
  7327                           ;interrupts.c: 52:     color_writetoaddr(0x07,(int_threshold_high >> 8));
  7328   0021F6  0100               	movlb	0	; () banked
  7329   0021F8  51FB               	movf	(_int_threshold_high+1)& (0+255),w,b
  7330   0021FA  6E0B               	movwf	color_writetoaddr@value^0,c
  7331   0021FC  0E07               	movlw	7
  7332   0021FE  EC1F  F012         	call	_color_writetoaddr
  7333   002202  0012               	return		;funcret
  7334   002204                     __end_of_init_colorclick_interrupts:
  7335                           	callstack 0
  7336                           
  7337 ;; *************** function _color_writetoaddr *****************
  7338 ;; Defined at:
  7339 ;;		line 22 in file "color.c"
  7340 ;; Parameters:    Size  Location     Type
  7341 ;;  address         1    wreg     unsigned char 
  7342 ;;  value           1   10[COMRAM] unsigned char 
  7343 ;; Auto vars:     Size  Location     Type
  7344 ;;  address         1   11[COMRAM] unsigned char 
  7345 ;; Return value:  Size  Location     Type
  7346 ;;                  1    wreg      void 
  7347 ;; Registers used:
  7348 ;;		wreg, status,2, status,0, cstack
  7349 ;; Tracked objects:
  7350 ;;		On entry : 0/0
  7351 ;;		On exit  : 0/0
  7352 ;;		Unchanged: 0/0
  7353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7354 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7355 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7357 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7358 ;;Total ram usage:        2 bytes
  7359 ;; Hardware stack levels used: 1
  7360 ;; Hardware stack levels required when called: 9
  7361 ;; This function calls:
  7362 ;;		_I2C_2_Master_Start
  7363 ;;		_I2C_2_Master_Stop
  7364 ;;		_I2C_2_Master_Write
  7365 ;; This function is called by:
  7366 ;;		_color_click_init
  7367 ;;		_init_colorclick_interrupts
  7368 ;; This function uses a non-reentrant model
  7369 ;;
  7370                           
  7371                           	psect	text43
  7372   00243E                     __ptext43:
  7373                           	callstack 0
  7374   00243E                     _color_writetoaddr:
  7375                           	callstack 20
  7376                           
  7377                           ;incstack = 0
  7378                           ;color_writetoaddr@address stored from wreg
  7379   00243E  6E0C               	movwf	color_writetoaddr@address^0,c
  7380   002440                     
  7381                           ;color.c: 23:     I2C_2_Master_Start();
  7382   002440  EC85  F012         	call	_I2C_2_Master_Start	;wreg free
  7383                           
  7384                           ;color.c: 24:     I2C_2_Master_Write(0x52 | 0x00);
  7385   002444  0E52               	movlw	82
  7386   002446  EC6F  F012         	call	_I2C_2_Master_Write
  7387                           
  7388                           ;color.c: 25:     I2C_2_Master_Write(0x80 | address);
  7389   00244A  500C               	movf	color_writetoaddr@address^0,w,c
  7390   00244C  0980               	iorlw	128
  7391   00244E  EC6F  F012         	call	_I2C_2_Master_Write
  7392                           
  7393                           ;color.c: 26:     I2C_2_Master_Write(value);
  7394   002452  500B               	movf	color_writetoaddr@value^0,w,c
  7395   002454  EC6F  F012         	call	_I2C_2_Master_Write
  7396                           
  7397                           ;color.c: 27:     I2C_2_Master_Stop();
  7398   002458  EC80  F012         	call	_I2C_2_Master_Stop	;wreg free
  7399   00245C  0012               	return		;funcret
  7400   00245E                     __end_of_color_writetoaddr:
  7401                           	callstack 0
  7402                           
  7403 ;; *************** function _I2C_2_Master_Write *****************
  7404 ;; Defined at:
  7405 ;;		line 45 in file "i2c.c"
  7406 ;; Parameters:    Size  Location     Type
  7407 ;;  data_byte       1    wreg     unsigned char 
  7408 ;; Auto vars:     Size  Location     Type
  7409 ;;  data_byte       1    9[COMRAM] unsigned char 
  7410 ;; Return value:  Size  Location     Type
  7411 ;;                  1    wreg      void 
  7412 ;; Registers used:
  7413 ;;		wreg, status,2, status,0, cstack
  7414 ;; Tracked objects:
  7415 ;;		On entry : 0/0
  7416 ;;		On exit  : 0/0
  7417 ;;		Unchanged: 0/0
  7418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7420 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7422 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7423 ;;Total ram usage:        1 bytes
  7424 ;; Hardware stack levels used: 1
  7425 ;; Hardware stack levels required when called: 8
  7426 ;; This function calls:
  7427 ;;		_I2C_2_Master_Idle
  7428 ;; This function is called by:
  7429 ;;		_color_writetoaddr
  7430 ;;		_color_read_Red
  7431 ;;		_color_read_Green
  7432 ;;		_color_read_Blue
  7433 ;;		_color_read_Clear
  7434 ;;		_interrupts_clear_colorclick
  7435 ;; This function uses a non-reentrant model
  7436 ;;
  7437                           
  7438                           	psect	text44
  7439   0024DE                     __ptext44:
  7440                           	callstack 0
  7441   0024DE                     _I2C_2_Master_Write:
  7442                           	callstack 20
  7443                           
  7444                           ;incstack = 0
  7445                           ;I2C_2_Master_Write@data_byte stored from wreg
  7446   0024DE  6E0A               	movwf	I2C_2_Master_Write@data_byte^0,c
  7447   0024E0                     
  7448                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  7449   0024E0  EC9D  F011         	call	_I2C_2_Master_Idle	;wreg free
  7450   0024E4                     
  7451                           ;i2c.c: 48:   SSP2BUF = data_byte;
  7452   0024E4  C00A  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  7453   0024E8  0012               	return		;funcret
  7454   0024EA                     __end_of_I2C_2_Master_Write:
  7455                           	callstack 0
  7456                           
  7457 ;; *************** function _I2C_2_Master_Stop *****************
  7458 ;; Defined at:
  7459 ;;		line 39 in file "i2c.c"
  7460 ;; Parameters:    Size  Location     Type
  7461 ;;		None
  7462 ;; Auto vars:     Size  Location     Type
  7463 ;;		None
  7464 ;; Return value:  Size  Location     Type
  7465 ;;                  1    wreg      void 
  7466 ;; Registers used:
  7467 ;;		wreg, status,2, status,0, cstack
  7468 ;; Tracked objects:
  7469 ;;		On entry : 0/0
  7470 ;;		On exit  : 0/0
  7471 ;;		Unchanged: 0/0
  7472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7477 ;;Total ram usage:        0 bytes
  7478 ;; Hardware stack levels used: 1
  7479 ;; Hardware stack levels required when called: 8
  7480 ;; This function calls:
  7481 ;;		_I2C_2_Master_Idle
  7482 ;; This function is called by:
  7483 ;;		_color_writetoaddr
  7484 ;;		_color_read_Red
  7485 ;;		_color_read_Green
  7486 ;;		_color_read_Blue
  7487 ;;		_color_read_Clear
  7488 ;;		_interrupts_clear_colorclick
  7489 ;; This function uses a non-reentrant model
  7490 ;;
  7491                           
  7492                           	psect	text45
  7493   002500                     __ptext45:
  7494                           	callstack 0
  7495   002500                     _I2C_2_Master_Stop:
  7496                           	callstack 20
  7497   002500                     
  7498                           ;i2c.c: 41:   I2C_2_Master_Idle();
  7499   002500  EC9D  F011         	call	_I2C_2_Master_Idle	;wreg free
  7500   002504                     
  7501                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  7502   002504  010E               	movlb	14	; () banked
  7503   002506  85DA               	bsf	218,2,b	;volatile
  7504   002508                     
  7505                           ; BSR set to: 14
  7506   002508  0012               	return		;funcret
  7507   00250A                     __end_of_I2C_2_Master_Stop:
  7508                           	callstack 0
  7509                           
  7510 ;; *************** function _I2C_2_Master_Start *****************
  7511 ;; Defined at:
  7512 ;;		line 27 in file "i2c.c"
  7513 ;; Parameters:    Size  Location     Type
  7514 ;;		None
  7515 ;; Auto vars:     Size  Location     Type
  7516 ;;		None
  7517 ;; Return value:  Size  Location     Type
  7518 ;;                  1    wreg      void 
  7519 ;; Registers used:
  7520 ;;		wreg, status,2, status,0, cstack
  7521 ;; Tracked objects:
  7522 ;;		On entry : 0/0
  7523 ;;		On exit  : 0/0
  7524 ;;		Unchanged: 0/0
  7525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7530 ;;Total ram usage:        0 bytes
  7531 ;; Hardware stack levels used: 1
  7532 ;; Hardware stack levels required when called: 8
  7533 ;; This function calls:
  7534 ;;		_I2C_2_Master_Idle
  7535 ;; This function is called by:
  7536 ;;		_color_writetoaddr
  7537 ;;		_color_read_Red
  7538 ;;		_color_read_Green
  7539 ;;		_color_read_Blue
  7540 ;;		_color_read_Clear
  7541 ;;		_interrupts_clear_colorclick
  7542 ;; This function uses a non-reentrant model
  7543 ;;
  7544                           
  7545                           	psect	text46
  7546   00250A                     __ptext46:
  7547                           	callstack 0
  7548   00250A                     _I2C_2_Master_Start:
  7549                           	callstack 20
  7550   00250A                     
  7551                           ;i2c.c: 29:   I2C_2_Master_Idle();
  7552   00250A  EC9D  F011         	call	_I2C_2_Master_Idle	;wreg free
  7553   00250E                     
  7554                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  7555   00250E  010E               	movlb	14	; () banked
  7556   002510  81DA               	bsf	218,0,b	;volatile
  7557   002512                     
  7558                           ; BSR set to: 14
  7559   002512  0012               	return		;funcret
  7560   002514                     __end_of_I2C_2_Master_Start:
  7561                           	callstack 0
  7562                           
  7563 ;; *************** function _I2C_2_Master_Idle *****************
  7564 ;; Defined at:
  7565 ;;		line 22 in file "i2c.c"
  7566 ;; Parameters:    Size  Location     Type
  7567 ;;		None
  7568 ;; Auto vars:     Size  Location     Type
  7569 ;;		None
  7570 ;; Return value:  Size  Location     Type
  7571 ;;                  1    wreg      void 
  7572 ;; Registers used:
  7573 ;;		wreg, status,2, status,0
  7574 ;; Tracked objects:
  7575 ;;		On entry : 0/0
  7576 ;;		On exit  : 0/0
  7577 ;;		Unchanged: 0/0
  7578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7581 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7582 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7583 ;;Total ram usage:        1 bytes
  7584 ;; Hardware stack levels used: 1
  7585 ;; Hardware stack levels required when called: 7
  7586 ;; This function calls:
  7587 ;;		Nothing
  7588 ;; This function is called by:
  7589 ;;		_I2C_2_Master_Start
  7590 ;;		_I2C_2_Master_RepStart
  7591 ;;		_I2C_2_Master_Stop
  7592 ;;		_I2C_2_Master_Write
  7593 ;;		_I2C_2_Master_Read
  7594 ;; This function uses a non-reentrant model
  7595 ;;
  7596                           
  7597                           	psect	text47
  7598   00233A                     __ptext47:
  7599                           	callstack 0
  7600   00233A                     _I2C_2_Master_Idle:
  7601                           	callstack 20
  7602   00233A                     l90:
  7603   00233A  010E               	movlb	14	; () banked
  7604   00233C  B5D8               	btfsc	216,2,b	;volatile
  7605   00233E  EFA3  F011         	goto	u1841
  7606   002342  EFA5  F011         	goto	u1840
  7607   002346                     u1841:
  7608   002346  EF9D  F011         	goto	l90
  7609   00234A                     u1840:
  7610   00234A                     
  7611                           ; BSR set to: 14
  7612   00234A  CEDA F009          	movff	3802,??_I2C_2_Master_Idle	;volatile
  7613   00234E  0E1F               	movlw	31
  7614   002350  1609               	andwf	??_I2C_2_Master_Idle^0,f,c
  7615   002352  A4D8               	btfss	status,2,c
  7616   002354  EFAE  F011         	goto	u1851
  7617   002358  EFB0  F011         	goto	u1850
  7618   00235C                     u1851:
  7619   00235C  EF9D  F011         	goto	l90
  7620   002360                     u1850:
  7621   002360                     
  7622                           ; BSR set to: 14
  7623   002360  0012               	return		;funcret
  7624   002362                     __end_of_I2C_2_Master_Idle:
  7625                           	callstack 0
  7626                           
  7627 ;; *************** function _AppendTime *****************
  7628 ;; Defined at:
  7629 ;;		line 23 in file "Memorization.c"
  7630 ;; Parameters:    Size  Location     Type
  7631 ;;  temp            1    wreg     unsigned char 
  7632 ;;  time_index      2    8[COMRAM] PTR unsigned char 
  7633 ;;		 -> time_index(1), 
  7634 ;;  time_array      2   10[COMRAM] PTR unsigned char 
  7635 ;;		 -> time_array(40), 
  7636 ;; Auto vars:     Size  Location     Type
  7637 ;;  temp            1   13[COMRAM] unsigned char 
  7638 ;; Return value:  Size  Location     Type
  7639 ;;                  1    wreg      void 
  7640 ;; Registers used:
  7641 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7642 ;; Tracked objects:
  7643 ;;		On entry : 0/0
  7644 ;;		On exit  : 0/0
  7645 ;;		Unchanged: 0/0
  7646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7647 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7648 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7649 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7650 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7651 ;;Total ram usage:        6 bytes
  7652 ;; Hardware stack levels used: 1
  7653 ;; Hardware stack levels required when called: 7
  7654 ;; This function calls:
  7655 ;;		Nothing
  7656 ;; This function is called by:
  7657 ;;		_main
  7658 ;; This function uses a non-reentrant model
  7659 ;;
  7660                           
  7661                           	psect	text48
  7662   0023FA                     __ptext48:
  7663                           	callstack 0
  7664   0023FA                     _AppendTime:
  7665                           	callstack 23
  7666                           
  7667                           ; BSR set to: 14
  7668                           ;incstack = 0
  7669                           ;AppendTime@temp stored from wreg
  7670   0023FA  6E0E               	movwf	AppendTime@temp^0,c
  7671   0023FC                     
  7672                           ;Memorization.c: 25:     time_array[(*time_index)++] = temp;
  7673   0023FC  C009  FFD9         	movff	AppendTime@time_index,fsr2l
  7674   002400  C00A  FFDA         	movff	AppendTime@time_index+1,fsr2h
  7675   002404  CFDF F00D          	movff	indf2,??_AppendTime
  7676   002408  0E01               	movlw	1
  7677   00240A  26DF               	addwf	indf2,f,c
  7678   00240C  500D               	movf	??_AppendTime^0,w,c
  7679   00240E  240B               	addwf	AppendTime@time_array^0,w,c
  7680   002410  6ED9               	movwf	fsr2l,c
  7681   002412  0E00               	movlw	0
  7682   002414  200C               	addwfc	(AppendTime@time_array+1)^0,w,c
  7683   002416  6EDA               	movwf	fsr2h,c
  7684   002418  C00E  FFDF         	movff	AppendTime@temp,indf2
  7685   00241C  0012               	return		;funcret
  7686   00241E                     __end_of_AppendTime:
  7687                           	callstack 0
  7688                           
  7689 ;; *************** function _LowISR *****************
  7690 ;; Defined at:
  7691 ;;		line 74 in file "interrupts.c"
  7692 ;; Parameters:    Size  Location     Type
  7693 ;;		None
  7694 ;; Auto vars:     Size  Location     Type
  7695 ;;		None
  7696 ;; Return value:  Size  Location     Type
  7697 ;;                  1    wreg      void 
  7698 ;; Registers used:
  7699 ;;		wreg, status,2
  7700 ;; Tracked objects:
  7701 ;;		On entry : 0/0
  7702 ;;		On exit  : 0/0
  7703 ;;		Unchanged: 0/0
  7704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7707 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7708 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7709 ;;Total ram usage:        3 bytes
  7710 ;; Hardware stack levels used: 1
  7711 ;; Hardware stack levels required when called: 6
  7712 ;; This function calls:
  7713 ;;		Nothing
  7714 ;; This function is called by:
  7715 ;;		Interrupt level 1
  7716 ;; This function uses a non-reentrant model
  7717 ;;
  7718                           
  7719                           	psect	intcodelo
  7720   000018                     __pintcodelo:
  7721                           	callstack 0
  7722   000018                     _LowISR:
  7723                           	callstack 18
  7724                           
  7725                           ;incstack = 0
  7726   000018  8057               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  7727   00001A  CFD8 F006          	movff	status,??_LowISR
  7728   00001E  CFE8 F007          	movff	wreg,??_LowISR+1
  7729   000022  CFE0 F008          	movff	bsr,??_LowISR+2
  7730   000026                     
  7731                           ;interrupts.c: 77:     if(PIR0bits.TMR0IF){
  7732   000026  010E               	movlb	14	; () banked
  7733   000028  AB33               	btfss	51,5,b	;volatile
  7734   00002A  EF19  F000         	goto	i1u345_21
  7735   00002E  EF1B  F000         	goto	i1u345_20
  7736   000032                     i1u345_21:
  7737   000032  EF24  F000         	goto	i1l323
  7738   000036                     i1u345_20:
  7739   000036                     
  7740                           ; BSR set to: 14
  7741                           ;interrupts.c: 78:         TMR0H = 0b11000010;
  7742   000036  0EC2               	movlw	194
  7743   000038  6ED4               	movwf	212,c	;volatile
  7744                           
  7745                           ;interrupts.c: 79:         TMR0L = 0b11110110;
  7746   00003A  0EF6               	movlw	246
  7747   00003C  6ED3               	movwf	211,c	;volatile
  7748                           
  7749                           ;interrupts.c: 80:         tmr_ovf = 1;
  7750   00003E  0E01               	movlw	1
  7751   000040  0100               	movlb	0	; () banked
  7752   000042  6F74               	movwf	_tmr_ovf& (0+255),b
  7753   000044                     
  7754                           ; BSR set to: 0
  7755                           ;interrupts.c: 81:         PIR0bits.TMR0IF=0;
  7756   000044  010E               	movlb	14	; () banked
  7757   000046  9B33               	bcf	51,5,b	;volatile
  7758   000048                     i1l323:
  7759                           
  7760                           ; BSR set to: 14
  7761   000048  C008  FFE0         	movff	??_LowISR+2,bsr
  7762   00004C  C007  FFE8         	movff	??_LowISR+1,wreg
  7763   000050  C006  FFD8         	movff	??_LowISR,status
  7764   000054  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  7765   000056  0010               	retfie	
  7766   000058                     __end_of_LowISR:
  7767                           	callstack 0
  7768                           
  7769 ;; *************** function _HighISR *****************
  7770 ;; Defined at:
  7771 ;;		line 88 in file "interrupts.c"
  7772 ;; Parameters:    Size  Location     Type
  7773 ;;		None
  7774 ;; Auto vars:     Size  Location     Type
  7775 ;;		None
  7776 ;; Return value:  Size  Location     Type
  7777 ;;                  1    wreg      void 
  7778 ;; Registers used:
  7779 ;;		wreg, status,2, status,0, cstack
  7780 ;; Tracked objects:
  7781 ;;		On entry : 0/0
  7782 ;;		On exit  : 0/0
  7783 ;;		Unchanged: 0/0
  7784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7789 ;;Total ram usage:        0 bytes
  7790 ;; Hardware stack levels used: 1
  7791 ;; Hardware stack levels required when called: 5
  7792 ;; This function calls:
  7793 ;;		i2_interrupts_clear_colorclick
  7794 ;; This function is called by:
  7795 ;;		Interrupt level 2
  7796 ;; This function uses a non-reentrant model
  7797 ;;
  7798                           
  7799                           	psect	intcode
  7800   000008                     __pintcode:
  7801                           	callstack 0
  7802   000008                     _HighISR:
  7803                           	callstack 18
  7804                           
  7805                           ; BSR set to: 14
  7806                           ;incstack = 0
  7807   000008  8257               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7808   00000A  EF2F  F012         	goto	int_func
  7809                           
  7810                           	psect	intcode_body
  7811   00245E                     __pintcode_body:
  7812                           	callstack 18
  7813   00245E                     int_func:
  7814                           	callstack 18
  7815   00245E                     
  7816                           ;interrupts.c: 115:     if(PIR0bits.INT1IF){
  7817   00245E  010E               	movlb	14	; () banked
  7818   002460  A333               	btfss	51,1,b	;volatile
  7819   002462  EF35  F012         	goto	i2u346_41
  7820   002466  EF37  F012         	goto	i2u346_40
  7821   00246A                     i2u346_41:
  7822   00246A  EF3D  F012         	goto	i2l331
  7823   00246E                     i2u346_40:
  7824   00246E                     
  7825                           ; BSR set to: 14
  7826                           ;interrupts.c: 116:         color_flag = 1;
  7827   00246E  0E01               	movlw	1
  7828   002470  6E55               	movwf	_color_flag^0,c
  7829   002472                     
  7830                           ; BSR set to: 14
  7831                           ;interrupts.c: 118:         interrupts_clear_colorclick();
  7832   002472  EC5C  F012         	call	i2_interrupts_clear_colorclick	;wreg free
  7833   002476                     
  7834                           ;interrupts.c: 119:         PIR0bits.INT1IF = 0;
  7835   002476  010E               	movlb	14	; () banked
  7836   002478  9333               	bcf	51,1,b	;volatile
  7837   00247A                     i2l331:
  7838                           
  7839                           ; BSR set to: 14
  7840   00247A  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7841   00247C  0011               	retfie		f
  7842   00247E                     __end_of_HighISR:
  7843                           	callstack 0
  7844                           
  7845 ;; *************** function i2_interrupts_clear_colorclick *****************
  7846 ;; Defined at:
  7847 ;;		line 57 in file "interrupts.c"
  7848 ;; Parameters:    Size  Location     Type
  7849 ;;		None
  7850 ;; Auto vars:     Size  Location     Type
  7851 ;;		None
  7852 ;; Return value:  Size  Location     Type
  7853 ;;                  1    wreg      void 
  7854 ;; Registers used:
  7855 ;;		wreg, status,2, status,0, cstack
  7856 ;; Tracked objects:
  7857 ;;		On entry : 0/0
  7858 ;;		On exit  : 0/0
  7859 ;;		Unchanged: 0/0
  7860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7865 ;;Total ram usage:        0 bytes
  7866 ;; Hardware stack levels used: 1
  7867 ;; Hardware stack levels required when called: 4
  7868 ;; This function calls:
  7869 ;;		i2_I2C_2_Master_Start
  7870 ;;		i2_I2C_2_Master_Stop
  7871 ;;		i2_I2C_2_Master_Write
  7872 ;;		i2_init_colorclick_interrupts
  7873 ;; This function is called by:
  7874 ;;		_HighISR
  7875 ;; This function uses a non-reentrant model
  7876 ;;
  7877                           
  7878                           	psect	text51
  7879   0024B8                     __ptext51:
  7880                           	callstack 0
  7881   0024B8                     i2_interrupts_clear_colorclick:
  7882                           	callstack 18
  7883   0024B8                     
  7884                           ;interrupts.c: 59:     I2C_2_Master_Start();
  7885   0024B8  EC8F  F012         	call	i2_I2C_2_Master_Start	;wreg free
  7886                           
  7887                           ;interrupts.c: 60:     I2C_2_Master_Write(0x52 | 0x00);
  7888   0024BC  0E52               	movlw	82
  7889   0024BE  EC75  F012         	call	i2_I2C_2_Master_Write
  7890                           
  7891                           ;interrupts.c: 61:     I2C_2_Master_Write(0b11100110);
  7892   0024C2  0EE6               	movlw	230
  7893   0024C4  EC75  F012         	call	i2_I2C_2_Master_Write
  7894                           
  7895                           ;interrupts.c: 62:     I2C_2_Master_Stop();
  7896   0024C8  EC8A  F012         	call	i2_I2C_2_Master_Stop	;wreg free
  7897                           
  7898                           ;interrupts.c: 64:     init_colorclick_interrupts();
  7899   0024CC  EC02  F011         	call	i2_init_colorclick_interrupts	;wreg free
  7900   0024D0  0012               	return		;funcret
  7901   0024D2                     __end_ofi2_interrupts_clear_colorclick:
  7902                           	callstack 0
  7903                           
  7904 ;; *************** function i2_init_colorclick_interrupts *****************
  7905 ;; Defined at:
  7906 ;;		line 43 in file "interrupts.c"
  7907 ;; Parameters:    Size  Location     Type
  7908 ;;		None
  7909 ;; Auto vars:     Size  Location     Type
  7910 ;;		None
  7911 ;; Return value:  Size  Location     Type
  7912 ;;                  1    wreg      void 
  7913 ;; Registers used:
  7914 ;;		wreg, status,2, status,0, cstack
  7915 ;; Tracked objects:
  7916 ;;		On entry : 0/0
  7917 ;;		On exit  : 0/0
  7918 ;;		Unchanged: 0/0
  7919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7922 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7923 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7924 ;;Total ram usage:        1 bytes
  7925 ;; Hardware stack levels used: 1
  7926 ;; Hardware stack levels required when called: 3
  7927 ;; This function calls:
  7928 ;;		i2_color_writetoaddr
  7929 ;; This function is called by:
  7930 ;;		i2_interrupts_clear_colorclick
  7931 ;; This function uses a non-reentrant model
  7932 ;;
  7933                           
  7934                           	psect	text52
  7935   002204                     __ptext52:
  7936                           	callstack 0
  7937   002204                     i2_init_colorclick_interrupts:
  7938                           	callstack 18
  7939   002204                     
  7940                           ;interrupts.c: 45:     color_writetoaddr(0x00,0b10011);
  7941   002204  0E13               	movlw	19
  7942   002206  6E03               	movwf	i2color_writetoaddr@value^0,c
  7943   002208  0E00               	movlw	0
  7944   00220A  EC3F  F012         	call	i2_color_writetoaddr
  7945   00220E                     
  7946                           ;interrupts.c: 46:     _delay((unsigned long)((3)*(64000000/4000.0)));
  7947   00220E  0E3F               	movlw	63
  7948   002210  6E05               	movwf	??i2_init_colorclick_interrupts^0,c
  7949   002212  0E55               	movlw	85
  7950   002214                     i2u436_47:
  7951   002214  2EE8               	decfsz	wreg,f,c
  7952   002216  D7FE               	bra	i2u436_47
  7953   002218  2E05               	decfsz	??i2_init_colorclick_interrupts^0,f,c
  7954   00221A  D7FC               	bra	i2u436_47
  7955   00221C  F000               	nop	
  7956   00221E                     
  7957                           ;interrupts.c: 48:     color_writetoaddr(0x0C,0b0100);
  7958   00221E  0E04               	movlw	4
  7959   002220  6E03               	movwf	i2color_writetoaddr@value^0,c
  7960   002222  0E0C               	movlw	12
  7961   002224  EC3F  F012         	call	i2_color_writetoaddr
  7962   002228                     
  7963                           ;interrupts.c: 49:     color_writetoaddr(0x04,(int_threshold_low & 0xFF));
  7964   002228  C04F  F003         	movff	_int_threshold_low,i2color_writetoaddr@value
  7965   00222C  0E04               	movlw	4
  7966   00222E  EC3F  F012         	call	i2_color_writetoaddr
  7967   002232                     
  7968                           ;interrupts.c: 50:     color_writetoaddr(0x05,(int_threshold_low >> 8));
  7969   002232  5050               	movf	(_int_threshold_low+1)^0,w,c
  7970   002234  6E03               	movwf	i2color_writetoaddr@value^0,c
  7971   002236  0E05               	movlw	5
  7972   002238  EC3F  F012         	call	i2_color_writetoaddr
  7973   00223C                     
  7974                           ;interrupts.c: 51:     color_writetoaddr(0x06,(int_threshold_high & 0xFF));
  7975   00223C  C0FA  F003         	movff	_int_threshold_high,i2color_writetoaddr@value
  7976   002240  0E06               	movlw	6
  7977   002242  EC3F  F012         	call	i2_color_writetoaddr
  7978   002246                     
  7979                           ;interrupts.c: 52:     color_writetoaddr(0x07,(int_threshold_high >> 8));
  7980   002246  0100               	movlb	0	; () banked
  7981   002248  51FB               	movf	(_int_threshold_high+1)& (0+255),w,b
  7982   00224A  6E03               	movwf	i2color_writetoaddr@value^0,c
  7983   00224C  0E07               	movlw	7
  7984   00224E  EC3F  F012         	call	i2_color_writetoaddr
  7985   002252  0012               	return		;funcret
  7986   002254                     __end_ofi2_init_colorclick_interrupts:
  7987                           	callstack 0
  7988                           
  7989 ;; *************** function i2_color_writetoaddr *****************
  7990 ;; Defined at:
  7991 ;;		line 22 in file "color.c"
  7992 ;; Parameters:    Size  Location     Type
  7993 ;;  address         1    wreg     unsigned char 
  7994 ;;  value           1    2[COMRAM] unsigned char 
  7995 ;; Auto vars:     Size  Location     Type
  7996 ;;  address         1    3[COMRAM] unsigned char 
  7997 ;; Return value:  Size  Location     Type
  7998 ;;                  1    wreg      void 
  7999 ;; Registers used:
  8000 ;;		wreg, status,2, status,0, cstack
  8001 ;; Tracked objects:
  8002 ;;		On entry : 0/0
  8003 ;;		On exit  : 0/0
  8004 ;;		Unchanged: 0/0
  8005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8006 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8007 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8009 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8010 ;;Total ram usage:        2 bytes
  8011 ;; Hardware stack levels used: 1
  8012 ;; Hardware stack levels required when called: 2
  8013 ;; This function calls:
  8014 ;;		i2_I2C_2_Master_Start
  8015 ;;		i2_I2C_2_Master_Stop
  8016 ;;		i2_I2C_2_Master_Write
  8017 ;; This function is called by:
  8018 ;;		i2_init_colorclick_interrupts
  8019 ;; This function uses a non-reentrant model
  8020 ;;
  8021                           
  8022                           	psect	text53
  8023   00247E                     __ptext53:
  8024                           	callstack 0
  8025   00247E                     i2_color_writetoaddr:
  8026                           	callstack 18
  8027                           
  8028                           ;incstack = 0
  8029                           ;i2color_writetoaddr@address stored from wreg
  8030   00247E  6E04               	movwf	i2color_writetoaddr@address^0,c
  8031   002480                     
  8032                           ;color.c: 23:     I2C_2_Master_Start();
  8033   002480  EC8F  F012         	call	i2_I2C_2_Master_Start	;wreg free
  8034                           
  8035                           ;color.c: 24:     I2C_2_Master_Write(0x52 | 0x00);
  8036   002484  0E52               	movlw	82
  8037   002486  EC75  F012         	call	i2_I2C_2_Master_Write
  8038                           
  8039                           ;color.c: 25:     I2C_2_Master_Write(0x80 | address);
  8040   00248A  5004               	movf	i2color_writetoaddr@address^0,w,c
  8041   00248C  0980               	iorlw	128
  8042   00248E  EC75  F012         	call	i2_I2C_2_Master_Write
  8043                           
  8044                           ;color.c: 26:     I2C_2_Master_Write(value);
  8045   002492  5003               	movf	i2color_writetoaddr@value^0,w,c
  8046   002494  EC75  F012         	call	i2_I2C_2_Master_Write
  8047                           
  8048                           ;color.c: 27:     I2C_2_Master_Stop();
  8049   002498  EC8A  F012         	call	i2_I2C_2_Master_Stop	;wreg free
  8050   00249C  0012               	return		;funcret
  8051   00249E                     __end_ofi2_color_writetoaddr:
  8052                           	callstack 0
  8053                           
  8054 ;; *************** function i2_I2C_2_Master_Write *****************
  8055 ;; Defined at:
  8056 ;;		line 45 in file "i2c.c"
  8057 ;; Parameters:    Size  Location     Type
  8058 ;;  data_byte       1    wreg     unsigned char 
  8059 ;; Auto vars:     Size  Location     Type
  8060 ;;  data_byte       1    1[COMRAM] unsigned char 
  8061 ;; Return value:  Size  Location     Type
  8062 ;;                  1    wreg      void 
  8063 ;; Registers used:
  8064 ;;		wreg, status,2, status,0, cstack
  8065 ;; Tracked objects:
  8066 ;;		On entry : 0/0
  8067 ;;		On exit  : 0/0
  8068 ;;		Unchanged: 0/0
  8069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8071 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8073 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8074 ;;Total ram usage:        1 bytes
  8075 ;; Hardware stack levels used: 1
  8076 ;; Hardware stack levels required when called: 1
  8077 ;; This function calls:
  8078 ;;		i2_I2C_2_Master_Idle
  8079 ;; This function is called by:
  8080 ;;		i2_color_writetoaddr
  8081 ;;		i2_interrupts_clear_colorclick
  8082 ;; This function uses a non-reentrant model
  8083 ;;
  8084                           
  8085                           	psect	text54
  8086   0024EA                     __ptext54:
  8087                           	callstack 0
  8088   0024EA                     i2_I2C_2_Master_Write:
  8089                           	callstack 18
  8090                           
  8091                           ;incstack = 0
  8092                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  8093   0024EA  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  8094   0024EC                     
  8095                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  8096   0024EC  ECB1  F011         	call	i2_I2C_2_Master_Idle	;wreg free
  8097   0024F0                     
  8098                           ;i2c.c: 48:   SSP2BUF = data_byte;
  8099   0024F0  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  8100   0024F4  0012               	return		;funcret
  8101   0024F6                     __end_ofi2_I2C_2_Master_Write:
  8102                           	callstack 0
  8103                           
  8104 ;; *************** function i2_I2C_2_Master_Stop *****************
  8105 ;; Defined at:
  8106 ;;		line 39 in file "i2c.c"
  8107 ;; Parameters:    Size  Location     Type
  8108 ;;		None
  8109 ;; Auto vars:     Size  Location     Type
  8110 ;;		None
  8111 ;; Return value:  Size  Location     Type
  8112 ;;                  1    wreg      void 
  8113 ;; Registers used:
  8114 ;;		wreg, status,2, status,0, cstack
  8115 ;; Tracked objects:
  8116 ;;		On entry : 0/0
  8117 ;;		On exit  : 0/0
  8118 ;;		Unchanged: 0/0
  8119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8124 ;;Total ram usage:        0 bytes
  8125 ;; Hardware stack levels used: 1
  8126 ;; Hardware stack levels required when called: 1
  8127 ;; This function calls:
  8128 ;;		i2_I2C_2_Master_Idle
  8129 ;; This function is called by:
  8130 ;;		i2_color_writetoaddr
  8131 ;;		i2_interrupts_clear_colorclick
  8132 ;; This function uses a non-reentrant model
  8133 ;;
  8134                           
  8135                           	psect	text55
  8136   002514                     __ptext55:
  8137                           	callstack 0
  8138   002514                     i2_I2C_2_Master_Stop:
  8139                           	callstack 18
  8140   002514                     
  8141                           ;i2c.c: 41:   I2C_2_Master_Idle();
  8142   002514  ECB1  F011         	call	i2_I2C_2_Master_Idle	;wreg free
  8143   002518                     
  8144                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  8145   002518  010E               	movlb	14	; () banked
  8146   00251A  85DA               	bsf	218,2,b	;volatile
  8147   00251C                     
  8148                           ; BSR set to: 14
  8149   00251C  0012               	return		;funcret
  8150   00251E                     __end_ofi2_I2C_2_Master_Stop:
  8151                           	callstack 0
  8152                           
  8153 ;; *************** function i2_I2C_2_Master_Start *****************
  8154 ;; Defined at:
  8155 ;;		line 27 in file "i2c.c"
  8156 ;; Parameters:    Size  Location     Type
  8157 ;;		None
  8158 ;; Auto vars:     Size  Location     Type
  8159 ;;		None
  8160 ;; Return value:  Size  Location     Type
  8161 ;;                  1    wreg      void 
  8162 ;; Registers used:
  8163 ;;		wreg, status,2, status,0, cstack
  8164 ;; Tracked objects:
  8165 ;;		On entry : 0/0
  8166 ;;		On exit  : 0/0
  8167 ;;		Unchanged: 0/0
  8168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8173 ;;Total ram usage:        0 bytes
  8174 ;; Hardware stack levels used: 1
  8175 ;; Hardware stack levels required when called: 1
  8176 ;; This function calls:
  8177 ;;		i2_I2C_2_Master_Idle
  8178 ;; This function is called by:
  8179 ;;		i2_color_writetoaddr
  8180 ;;		i2_interrupts_clear_colorclick
  8181 ;; This function uses a non-reentrant model
  8182 ;;
  8183                           
  8184                           	psect	text56
  8185   00251E                     __ptext56:
  8186                           	callstack 0
  8187   00251E                     i2_I2C_2_Master_Start:
  8188                           	callstack 18
  8189   00251E                     
  8190                           ;i2c.c: 29:   I2C_2_Master_Idle();
  8191   00251E  ECB1  F011         	call	i2_I2C_2_Master_Idle	;wreg free
  8192   002522                     
  8193                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  8194   002522  010E               	movlb	14	; () banked
  8195   002524  81DA               	bsf	218,0,b	;volatile
  8196   002526                     
  8197                           ; BSR set to: 14
  8198   002526  0012               	return		;funcret
  8199   002528                     __end_ofi2_I2C_2_Master_Start:
  8200                           	callstack 0
  8201                           
  8202 ;; *************** function i2_I2C_2_Master_Idle *****************
  8203 ;; Defined at:
  8204 ;;		line 22 in file "i2c.c"
  8205 ;; Parameters:    Size  Location     Type
  8206 ;;		None
  8207 ;; Auto vars:     Size  Location     Type
  8208 ;;		None
  8209 ;; Return value:  Size  Location     Type
  8210 ;;                  1    wreg      void 
  8211 ;; Registers used:
  8212 ;;		wreg, status,2, status,0
  8213 ;; Tracked objects:
  8214 ;;		On entry : 0/0
  8215 ;;		On exit  : 0/0
  8216 ;;		Unchanged: 0/0
  8217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8220 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8221 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8222 ;;Total ram usage:        1 bytes
  8223 ;; Hardware stack levels used: 1
  8224 ;; This function calls:
  8225 ;;		Nothing
  8226 ;; This function is called by:
  8227 ;;		i2_I2C_2_Master_Start
  8228 ;;		i2_I2C_2_Master_Stop
  8229 ;;		i2_I2C_2_Master_Write
  8230 ;; This function uses a non-reentrant model
  8231 ;;
  8232                           
  8233                           	psect	text57
  8234   002362                     __ptext57:
  8235                           	callstack 0
  8236   002362                     i2_I2C_2_Master_Idle:
  8237                           	callstack 18
  8238   002362                     i2l90:
  8239   002362  010E               	movlb	14	; () banked
  8240   002364  B5D8               	btfsc	216,2,b	;volatile
  8241   002366  EFB7  F011         	goto	i2u191_41
  8242   00236A  EFB9  F011         	goto	i2u191_40
  8243   00236E                     i2u191_41:
  8244   00236E  EFB1  F011         	goto	i2l90
  8245   002372                     i2u191_40:
  8246   002372                     
  8247                           ; BSR set to: 14
  8248   002372  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  8249   002376  0E1F               	movlw	31
  8250   002378  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  8251   00237A  A4D8               	btfss	status,2,c
  8252   00237C  EFC2  F011         	goto	i2u192_41
  8253   002380  EFC4  F011         	goto	i2u192_40
  8254   002384                     i2u192_41:
  8255   002384  EFB1  F011         	goto	i2l90
  8256   002388                     i2u192_40:
  8257   002388                     
  8258                           ; BSR set to: 14
  8259   002388  0012               	return		;funcret
  8260   00238A                     __end_ofi2_I2C_2_Master_Idle:
  8261                           	callstack 0
  8262   000000                     
  8263                           	psect	rparam
  8264   000000                     
  8265                           	psect	temp
  8266   000057                     btemp:
  8267                           	callstack 0
  8268   000057                     	ds	1
  8269   000000                     int$flags	set	btemp
  8270   000000                     wtemp8	set	btemp+1
  8271   000000                     ttemp5	set	btemp+1
  8272   000000                     ttemp6	set	btemp+4
  8273   000000                     ttemp7	set	btemp+8
  8274                           
  8275                           	psect	idloc
  8276                           
  8277                           ;Config register IDLOC0 @ 0x200000
  8278                           ;	unspecified, using default values
  8279   200000                     	org	2097152
  8280   200000  0FFF               	dw	4095
  8281                           
  8282                           ;Config register IDLOC1 @ 0x200002
  8283                           ;	unspecified, using default values
  8284   200002                     	org	2097154
  8285   200002  0FFF               	dw	4095
  8286                           
  8287                           ;Config register IDLOC2 @ 0x200004
  8288                           ;	unspecified, using default values
  8289   200004                     	org	2097156
  8290   200004  0FFF               	dw	4095
  8291                           
  8292                           ;Config register IDLOC3 @ 0x200006
  8293                           ;	unspecified, using default values
  8294   200006                     	org	2097158
  8295   200006  0FFF               	dw	4095
  8296                           
  8297                           ;Config register IDLOC4 @ 0x200008
  8298                           ;	unspecified, using default values
  8299   200008                     	org	2097160
  8300   200008  0FFF               	dw	4095
  8301                           
  8302                           ;Config register IDLOC5 @ 0x20000A
  8303                           ;	unspecified, using default values
  8304   20000A                     	org	2097162
  8305   20000A  0FFF               	dw	4095
  8306                           
  8307                           ;Config register IDLOC6 @ 0x20000C
  8308                           ;	unspecified, using default values
  8309   20000C                     	org	2097164
  8310   20000C  0FFF               	dw	4095
  8311                           
  8312                           ;Config register IDLOC7 @ 0x20000E
  8313                           ;	unspecified, using default values
  8314   20000E                     	org	2097166
  8315   20000E  0FFF               	dw	4095
  8316                           
  8317                           	psect	config
  8318                           
  8319                           ;Config register CONFIG1L @ 0x300000
  8320                           ;	External Oscillator mode Selection bits
  8321                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  8322                           ;	Power-up default value for COSC bits
  8323                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  8324   300000                     	org	3145728
  8325   300000  AA                 	db	170
  8326                           
  8327                           ;Config register CONFIG1H @ 0x300001
  8328                           ;	unspecified, using default values
  8329                           ;	Clock Out Enable bit
  8330                           ;	CLKOUTEN = 0x1, unprogrammed default
  8331                           ;	Clock Switch Enable bit
  8332                           ;	CSWEN = 0x1, unprogrammed default
  8333                           ;	Fail-Safe Clock Monitor Enable bit
  8334                           ;	FCMEN = 0x1, unprogrammed default
  8335   300001                     	org	3145729
  8336   300001  FF                 	db	255
  8337                           
  8338                           ;Config register CONFIG2L @ 0x300002
  8339                           ;	unspecified, using default values
  8340                           ;	Master Clear Enable bit
  8341                           ;	MCLRE = 0x1, unprogrammed default
  8342                           ;	Power-up Timer Enable bit
  8343                           ;	PWRTE = 0x1, unprogrammed default
  8344                           ;	Low-power BOR enable bit
  8345                           ;	LPBOREN = 0x1, unprogrammed default
  8346                           ;	Brown-out Reset Enable bits
  8347                           ;	BOREN = 0x3, unprogrammed default
  8348   300002                     	org	3145730
  8349   300002  FF                 	db	255
  8350                           
  8351                           ;Config register CONFIG2H @ 0x300003
  8352                           ;	unspecified, using default values
  8353                           ;	Brown Out Reset Voltage selection bits
  8354                           ;	BORV = 0x3, unprogrammed default
  8355                           ;	ZCD Disable bit
  8356                           ;	ZCD = 0x1, unprogrammed default
  8357                           ;	PPSLOCK bit One-Way Set Enable bit
  8358                           ;	PPS1WAY = 0x1, unprogrammed default
  8359                           ;	Stack Full/Underflow Reset Enable bit
  8360                           ;	STVREN = 0x1, unprogrammed default
  8361                           ;	Debugger Enable bit
  8362                           ;	DEBUG = 0x1, unprogrammed default
  8363                           ;	Extended Instruction Set Enable bit
  8364                           ;	XINST = 0x1, unprogrammed default
  8365   300003                     	org	3145731
  8366   300003  FF                 	db	255
  8367                           
  8368                           ;Config register CONFIG3L @ 0x300004
  8369                           ;	WDT Period Select bits
  8370                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  8371                           ;	WDT operating mode
  8372                           ;	WDTE = OFF, WDT Disabled
  8373   300004                     	org	3145732
  8374   300004  9F                 	db	159
  8375                           
  8376                           ;Config register CONFIG3H @ 0x300005
  8377                           ;	unspecified, using default values
  8378                           ;	WDT Window Select bits
  8379                           ;	WDTCWS = 0x7, unprogrammed default
  8380                           ;	WDT input clock selector
  8381                           ;	WDTCCS = 0x7, unprogrammed default
  8382   300005                     	org	3145733
  8383   300005  FF                 	db	255
  8384                           
  8385                           ;Config register CONFIG4L @ 0x300006
  8386                           ;	unspecified, using default values
  8387                           ;	Write Protection Block 0
  8388                           ;	WRT0 = 0x1, unprogrammed default
  8389                           ;	Write Protection Block 1
  8390                           ;	WRT1 = 0x1, unprogrammed default
  8391                           ;	Write Protection Block 2
  8392                           ;	WRT2 = 0x1, unprogrammed default
  8393                           ;	Write Protection Block 3
  8394                           ;	WRT3 = 0x1, unprogrammed default
  8395                           ;	Write Protection Block 3
  8396                           ;	WRT4 = 0x1, unprogrammed default
  8397                           ;	Write Protection Block 3
  8398                           ;	WRT5 = 0x1, unprogrammed default
  8399                           ;	Write Protection Block 3
  8400                           ;	WRT6 = 0x1, unprogrammed default
  8401                           ;	Write Protection Block 3
  8402                           ;	WRT7 = 0x1, unprogrammed default
  8403   300006                     	org	3145734
  8404   300006  FF                 	db	255
  8405                           
  8406                           ;Config register CONFIG4H @ 0x300007
  8407                           ;	unspecified, using default values
  8408                           ;	Configuration Register Write Protection bit
  8409                           ;	WRTC = 0x1, unprogrammed default
  8410                           ;	Boot Block Write Protection bit
  8411                           ;	WRTB = 0x1, unprogrammed default
  8412                           ;	Data EEPROM Write Protection bit
  8413                           ;	WRTD = 0x1, unprogrammed default
  8414                           ;	Scanner Enable bit
  8415                           ;	SCANE = 0x1, unprogrammed default
  8416                           ;	Low Voltage Programming Enable bit
  8417                           ;	LVP = 0x1, unprogrammed default
  8418   300007                     	org	3145735
  8419   300007  FF                 	db	255
  8420                           
  8421                           ;Config register CONFIG5L @ 0x300008
  8422                           ;	unspecified, using default values
  8423                           ;	UserNVM Program Memory Code Protection bit
  8424                           ;	CP = 0x1, unprogrammed default
  8425                           ;	DataNVM Memory Code Protection bit
  8426                           ;	CPD = 0x1, unprogrammed default
  8427   300008                     	org	3145736
  8428   300008  FF                 	db	255
  8429                           
  8430                           ;Config register CONFIG5H @ 0x300009
  8431                           ;	unspecified, using default values
  8432   300009                     	org	3145737
  8433   300009  FF                 	db	255
  8434                           
  8435                           ;Config register CONFIG6L @ 0x30000A
  8436                           ;	unspecified, using default values
  8437                           ;	Table Read Protection Block 0
  8438                           ;	EBTR0 = 0x1, unprogrammed default
  8439                           ;	Table Read Protection Block 1
  8440                           ;	EBTR1 = 0x1, unprogrammed default
  8441                           ;	Table Read Protection Block 2
  8442                           ;	EBTR2 = 0x1, unprogrammed default
  8443                           ;	Table Read Protection Block 3
  8444                           ;	EBTR3 = 0x1, unprogrammed default
  8445                           ;	Table Read Protection Block 4
  8446                           ;	EBTR4 = 0x1, unprogrammed default
  8447                           ;	Table Read Protection Block 5
  8448                           ;	EBTR5 = 0x1, unprogrammed default
  8449                           ;	Table Read Protection Block 6
  8450                           ;	EBTR6 = 0x1, unprogrammed default
  8451                           ;	Table Read Protection Block 7
  8452                           ;	EBTR7 = 0x1, unprogrammed default
  8453   30000A                     	org	3145738
  8454   30000A  FF                 	db	255
  8455                           
  8456                           ;Config register CONFIG6H @ 0x30000B
  8457                           ;	unspecified, using default values
  8458                           ;	Boot Block Table Read Protection bit
  8459                           ;	EBTRB = 0x1, unprogrammed default
  8460   30000B                     	org	3145739
  8461   30000B  FF                 	db	255
  8462                           tosu	equ	0xFFF
  8463                           tosh	equ	0xFFE
  8464                           tosl	equ	0xFFD
  8465                           stkptr	equ	0xFFC
  8466                           pclatu	equ	0xFFB
  8467                           pclath	equ	0xFFA
  8468                           pcl	equ	0xFF9
  8469                           tblptru	equ	0xFF8
  8470                           tblptrh	equ	0xFF7
  8471                           tblptrl	equ	0xFF6
  8472                           tablat	equ	0xFF5
  8473                           prodh	equ	0xFF4
  8474                           prodl	equ	0xFF3
  8475                           indf0	equ	0xFEF
  8476                           postinc0	equ	0xFEE
  8477                           postdec0	equ	0xFED
  8478                           preinc0	equ	0xFEC
  8479                           plusw0	equ	0xFEB
  8480                           fsr0h	equ	0xFEA
  8481                           fsr0l	equ	0xFE9
  8482                           wreg	equ	0xFE8
  8483                           indf1	equ	0xFE7
  8484                           postinc1	equ	0xFE6
  8485                           postdec1	equ	0xFE5
  8486                           preinc1	equ	0xFE4
  8487                           plusw1	equ	0xFE3
  8488                           fsr1h	equ	0xFE2
  8489                           fsr1l	equ	0xFE1
  8490                           bsr	equ	0xFE0
  8491                           indf2	equ	0xFDF
  8492                           postinc2	equ	0xFDE
  8493                           postdec2	equ	0xFDD
  8494                           preinc2	equ	0xFDC
  8495                           plusw2	equ	0xFDB
  8496                           fsr2h	equ	0xFDA
  8497                           fsr2l	equ	0xFD9
  8498                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         170
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     78      86
    BANK0           160     52     156
    BANK1           256      0      60
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    AppendTime@time_index	PTR unsigned char  size(2) Largest target is 1
		 -> time_index(BANK0[1]), 

    AppendTime@time_array	PTR unsigned char  size(2) Largest target is 40
		 -> time_array(BANK0[40]), 

    AppendMoves@moves_index	PTR unsigned char  size(2) Largest target is 1
		 -> moves_index(COMRAM[1]), 

    AppendMoves@anti_moves_array	PTR unsigned char  size(2) Largest target is 40
		 -> anti_moves_array(BANK0[40]), 

    MoveBuggy@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    MoveBuggy@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    MoveBuggy@color_detected	PTR unsigned char  size(2) Largest target is 3561
		 -> RAM(DATA[3561]), 

    LightBlueInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    LightBlueInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    OrangeInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    OrangeInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    PinkInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    PinkInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    YellowInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    YellowInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    BlueInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    BlueInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    GreenInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    GreenInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    RedInstructions@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    RedInstructions@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    motorR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    motorR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    motorL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    motorL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnLeft135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight135@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight135@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnLeft90@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft90@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    fullSpeedBackwards@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    fullSpeedBackwards@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    fullSpeedBackwards@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    fullSpeedBackwards@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    fullSpeedBackwards@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    fullSpeedBackwards@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorL(BANK0[9]), 

    S1153DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhllllllll[1]), CCPR2H(BITBIGSFRhhhlll[1]), 

    S1153DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhllllllll[1]), CCPR1H(BITBIGSFRhhhlll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@motorR(BANK0[9]), main@motorL(BANK0[9]), 

    detect_color@tempval	PTR struct RGB_val size(2) Largest target is 8
		 -> main@initial_color(BANK0[8]), 

    Update_RGBC@tempval	PTR struct RGB_val size(2) Largest target is 8
		 -> main@initial_color(BANK0[8]), 


Critical Paths under _main in COMRAM

    _fullSpeedAhead->_setMotorPWM
    _detect_color->___fltol
    ___fltol->___flmul
    ___flmul->___fldiv
    ___fldiv->___xxtofl
    _color_click_init->_color_writetoaddr
    _Update_RGBC->_color_read_Blue
    _Update_RGBC->_color_read_Clear
    _Update_RGBC->_color_read_Green
    _Update_RGBC->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _MoveBuggy->_BlueInstructions
    _MoveBuggy->_GreenInstructions
    _MoveBuggy->_LightBlueInstructions
    _MoveBuggy->_OrangeInstructions
    _MoveBuggy->_PinkInstructions
    _MoveBuggy->_RedInstructions
    _MoveBuggy->_YellowInstructions
    _YellowInstructions->_turnRight90
    _RedInstructions->_turnRight90
    _turnRight90->_turnRight
    _PinkInstructions->_turnLeft90
    _OrangeInstructions->_turnRight135
    _turnRight135->_turnRight
    _turnRight->_setMotorPWM
    _LightBlueInstructions->_turnLeft135
    _turnLeft135->_turnLeft
    _GreenInstructions->_turnLeft90
    _BlueInstructions->_turnLeft90
    _turnLeft90->_turnLeft
    _turnLeft->_setMotorPWM
    _stop->_setMotorPWM
    _fullSpeedBackwards->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _interrupts_clear_colorclick->_init_colorclick_interrupts
    _init_colorclick_interrupts->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    i2_interrupts_clear_colorclick->i2_init_colorclick_interrupts
    i2_init_colorclick_interrupts->i2_color_writetoaddr
    i2_color_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_detect_color
    _detect_color->___fltol

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowISR in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowISR in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowISR in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowISR in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowISR in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowISR in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0  130245
                                             22 BANK0     30    30      0
                         _AppendTime
                    _Interrupts_init
                           _LED_init
                          _MoveBuggy
                        _Timer0_init
                        _Update_RGBC
                         _WhiteLight
                   _color_click_init
                       _detect_color
                     _fullSpeedAhead
                    _initDCmotorsPWM
                               _stop
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      98
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _fullSpeedAhead                                       6     2      4    2701
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _detect_color                                        18    16      2    6580
                                              4 BANK0     18    16      2
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     616
                                              8 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     517
                                             72 COMRAM     6     2      4
                                              0 BANK0      4     4      0
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    1886
                                             47 COMRAM    25    17      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1541
                                             22 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     750
                                             12 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WhiteLight                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Update_RGBC                                          2     0      2     616
                                             19 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              9 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _Timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MoveBuggy                                            6     0      6  112610
                                             45 COMRAM     6     0      6
                        _AppendMoves
                   _BlueInstructions
                  _GreenInstructions
              _LightBlueInstructions
                 _OrangeInstructions
                   _PinkInstructions
                    _RedInstructions
                 _YellowInstructions
 ---------------------------------------------------------------------------------
 (2) _YellowInstructions                                   7     3      4   15810
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                        _turnRight90
 ---------------------------------------------------------------------------------
 (2) _RedInstructions                                      7     3      4   15810
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                        _turnRight90
 ---------------------------------------------------------------------------------
 (3) _turnRight90                                          5     1      4    7753
                                             33 COMRAM     5     1      4
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _PinkInstructions                                     7     3      4   15962
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                         _turnLeft90
 ---------------------------------------------------------------------------------
 (2) _OrangeInstructions                                   7     3      4   15506
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                       _turnRight135
 ---------------------------------------------------------------------------------
 (3) _turnRight135                                         5     1      4    7449
                                             33 COMRAM     5     1      4
                               _stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (4) _turnRight                                            6     2      4    2593
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _LightBlueInstructions                                7     3      4   15354
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                        _turnLeft135
 ---------------------------------------------------------------------------------
 (3) _turnLeft135                                          5     1      4    7297
                                             33 COMRAM     5     1      4
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (2) _GreenInstructions                                    7     3      4   15962
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                         _turnLeft90
 ---------------------------------------------------------------------------------
 (2) _BlueInstructions                                     7     3      4   16462
                                             38 COMRAM     7     3      4
                 _fullSpeedBackwards
                               _stop
                         _turnLeft90
 ---------------------------------------------------------------------------------
 (3) _turnLeft90                                           5     1      4    7905
                                             33 COMRAM     5     1      4
                               _stop
                           _turnLeft
 ---------------------------------------------------------------------------------
 (4) _turnLeft                                             6     2      4    2441
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _stop                                                 5     1      4    4569
                                             27 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (3) _fullSpeedBackwards                                   6     2      4    3157
                                             27 COMRAM     6     2      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    1829
                                             21 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                             14 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _AppendMoves                                          6     2      4     826
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _LED_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0     772
        _interrupts_clear_colorclick
 ---------------------------------------------------------------------------------
 (2) _interrupts_clear_colorclick                          0     0      0     772
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
         _init_colorclick_interrupts
 ---------------------------------------------------------------------------------
 (3) _init_colorclick_interrupts                           1     1      0     750
                                             12 COMRAM     1     1      0
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     750
                                             10 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              9 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _AppendTime                                           6     2      4     218
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _LowISR                                               3     3      0       0
                                              5 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _HighISR                                              0     0      0     244
      i2_interrupts_clear_colorclick
 ---------------------------------------------------------------------------------
 (9) i2_interrupts_clear_colorclick                        0     0      0     244
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
       i2_init_colorclick_interrupts
 ---------------------------------------------------------------------------------
 (10) i2_init_colorclick_interrupts                        1     1      0     222
                                              4 COMRAM     1     1      0
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (11) i2_color_writetoaddr                                 2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (12) i2_I2C_2_Master_Write                                1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (12) i2_I2C_2_Master_Stop                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (12) i2_I2C_2_Master_Start                                0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (13) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AppendTime
   _Interrupts_init
     _interrupts_clear_colorclick
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
       _init_colorclick_interrupts
         _color_writetoaddr
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
   _LED_init
   _MoveBuggy
     _AppendMoves
     _BlueInstructions
       _fullSpeedBackwards
         _setMotorPWM
           ___lwdiv
             ___wmul (ARG)
           ___wmul
       _stop
         _setMotorPWM
       _turnLeft90
         _stop
         _turnLeft
           _setMotorPWM
     _GreenInstructions
       _fullSpeedBackwards
       _stop
       _turnLeft90
     _LightBlueInstructions
       _fullSpeedBackwards
       _stop
       _turnLeft135
         _stop
         _turnLeft
     _OrangeInstructions
       _fullSpeedBackwards
       _stop
       _turnRight135
         _stop
         _turnRight
           _setMotorPWM
     _PinkInstructions
       _fullSpeedBackwards
       _stop
       _turnLeft90
     _RedInstructions
       _fullSpeedBackwards
       _stop
       _turnRight90
         _stop
         _turnRight
     _YellowInstructions
       _fullSpeedBackwards
       _stop
       _turnRight90
   _Timer0_init
   _Update_RGBC
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _WhiteLight
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
   _detect_color
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       ___fldiv (ARG)
       ___xxtofl (ARG)
     ___fltol
       ___fldiv (ARG)
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _fullSpeedAhead
     _setMotorPWM
   _initDCmotorsPWM
   _stop

 _LowISR (ROOT)

 _HighISR (ROOT)
   i2_interrupts_clear_colorclick
     i2_I2C_2_Master_Start
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Stop
       i2_I2C_2_Master_Idle
     i2_I2C_2_Master_Write
       i2_I2C_2_Master_Idle
     i2_init_colorclick_interrupts
       i2_color_writetoaddr
         i2_I2C_2_Master_Start
         i2_I2C_2_Master_Stop
         i2_I2C_2_Master_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      64        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      3C       7       23.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     34      9C       5       97.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4E      56       1       91.5%
BITBIGSFRhlllh      52      0       0      41        0.0%
BITBIGSFRhlllll     37      0       0      43        0.0%
BITBIGSFRllh        2D      0       0      46        0.0%
BITBIGSFRlllhll     2A      0       0      54        0.0%
BITBIGSFRllllhl     23      0       0      61        0.0%
BITBIGSFRhhhlll     1D      0       0      38        0.0%
BITBIGSFRhhhhlh     1B      0       0      33        0.0%
BITBIGSFRhhhhll     13      0       0      34        0.0%
BITBIGSFRlllhhh     11      0       0      48        0.0%
BITBIGSFRlllhhh     11      0       0      49        0.0%
BITBIGSFRhhhlhh      E      0       0      35        0.0%
BITBIGSFRhhhhh       D      0       0      32        0.0%
BITBIGSFRlllhhh      C      0       0      47        0.0%
BITBIGSFRlllhll      9      0       0      58        0.0%
BITBIGSFRhlllll      8      0       0      44        0.0%
BITBIGSFRllllhh      6      0       0      60        0.0%
BITBIGSFRlllhll      6      0       0      53        0.0%
BITBIGSFRlllhll      5      0       0      56        0.0%
BITBIGSFRlllhlh      5      0       0      52        0.0%
BITBIGSFRlllhll      3      0       0      55        0.0%
BITBIGSFRlllhll      3      0       0      57        0.0%
BITBIGSFRlllhhl      3      0       0      51        0.0%
BITBIGSFRhllllh      2      0       0      42        0.0%
BITBIGSFRhhhllh      2      0       0      37        0.0%
BITBIGSFRlllll       2      0       0      62        0.0%
BITBIGSFRhhhlhl      1      0       0      36        0.0%
BITBIGSFRlllhhh      1      0       0      50        0.0%
BITBIGSFRhllhh       1      0       0      39        0.0%
BITBIGSFRhllhl       1      0       0      40        0.0%
BITBIGSFRlllhll      1      0       0      59        0.0%
BITBIGSFRlh          1      0       0      45        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12E      63        0.0%
DATA                 0      0     12E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Mar 11 17:06:43 2023

                       _color_read_Red 2074                           ___fldiv@aexp 002F  
                         ___fldiv@bexp 002E                           ___fldiv@sign 0027  
                      _color_read_Blue 2164                                     l21 230E  
                                   l30 2112                                     l24 245C  
                                   l33 21B2                                     l42 0670  
                                   l27 20C2                                     l36 2162  
                                   l60 0676                                     l39 1F0A  
                                   l56 0670                                     l90 233A  
                                   l93 2360                                     l87 2338  
                                   l96 2512                                     l99 24FE  
                                   bsr 000FE0                    ___wmul@multiplicand 000B  
                     _anti_moves_array 0075                       _color_read_Clear 2114  
                     _color_read_Green 20C4                      ??_Interrupts_init 000E  
                                  l102 2508                                    l105 24E8  
                                  l130 252E                                    l203 1664  
                                  l108 22DA                                    l213 18FE  
                                  l222 2072                                    l127 24DC  
                                  l231 1F64                                    l312 2202  
                                  l208 1828                                    l305 23D4  
                                  l315 24B6                                    l181 1B14  
                                  l193 19D2                                    l249 1FBE  
                                  l258 2018                                    l188 146E  
                                  l541 1C20                                    l429 243C  
                                  l198 1752                                    l550 1E38  
                                  l641 1190                                    l635 1190  
                                  l652 23F8                                    l655 241C  
                                  l559 1A84                                    l664 23AE  
                                  l568 1B9A                                    l577 1CA6  
                                  l586 1D2C                                    l595 1DB2  
                                  l961 1576                    i2_color_writetoaddr 247E  
                                  wreg 000FE8                           ___flmul@aexp 0041  
                         ___flmul@bexp 0042                           ___flmul@sign 003C  
                         ___flmul@temp 0047                           ___flmul@prod 0043  
                         ___fltol@exp1 004E                                   l3001 1C92  
                                 l1162 1EAC                                   l1322 0FEE  
                                 l1155 1EA4                                   l3011 1CDA  
                                 l3003 1CA8                                   l1251 0C5E  
                                 l1260 0D46                                   l3021 1D2E  
                                 l3013 1CEE                                   l3005 1CB0  
                                 l3101 0BF2                                   l1333 0F86  
                                 l1246 0E3A                                   l1326 0F2A  
                                 l3031 1D74                                   l3023 1D36  
                                 l3015 1CF0                                   l3007 1CC4  
                                 l3111 0C3A                                   l3103 0C02  
                                 l1319 0E92                                   l1248 0C9A  
                                 l3033 1D76                                   l3025 1D4A  
                                 l3017 1D00                                   l3009 1CC6  
                                 l1257 0CE0                                   l3121 0C88  
                                 l3113 0C4E                                   l3105 0C12  
                                 l3041 0AA2                                   l3201 06F4  
                                 l4001 0510                                   l1282 0AA0  
                                 l3035 1D86                                   l3027 1D4C  
                                 l3019 1D18                                   l1259 0D58  
                                 l3131 0CD0                                   l3123 0C98  
                                 l3115 0C5C                                   l3107 0C22  
                                 l3051 0ADE                                   l3043 0AAE  
                                 l3211 072C                                   l3203 06F6  
                                 l4011 0558                                   l4003 0520  
                                 l3037 1D9E                                   l3029 1D60  
                                 l3141 0D10                                   l3133 0CDE  
                                 l3125 0CAA                                   l3117 0C68  
                                 l3109 0C2A                                   l3061 0B0E  
                                 l3053 0AEE                                   l3045 0ABC  
                                 l3301 0A86                                   l1285 0932  
                                 l3221 077C                                   l3213 074C  
                                 l3205 0706                                   l4013 0568  
                                 l4021 05A0                                   l4005 0530  
                                 l4101 1278                                   l1278 073C  
                                 l3039 23D8                                   l3151 0D82  
                                 l3143 0D3E                                   l3127 0CC0  
                                 l3135 0CF0                                   l3119 0C86  
                                 l3071 0B44                                   l3063 0B14  
                                 l3055 0AF0                                   l3047 0ABE  
                                 l1295 0A62                                   l3303 0A8C  
                                 l1287 09AA                                   l3231 07CC  
                                 l3223 0786                                   l3215 075C  
                                 l3207 0716                                   l4031 05F0  
                                 l4023 05B0                                   l4015 0578  
                                 l4007 0538                                   l4111 12BE  
                                 l4103 128E                                   l1288 0998  
                                 l3161 0DFA                                   l3153 0DAC  
                                 l3137 0CFE                                   l3129 0CC6  
                                 l3081 0B84                                   l3073 0B54  
                                 l3065 0B22                                   l3049 0ACE  
                                 l3057 0AF8                                   l3305 0A90  
                                 l3241 080E                                   l3233 07D8  
                                 l3225 079C                                   l3209 0726  
                                 l4041 0638                                   l4033 0600  
                                 l4025 05C0                                   l4017 0588  
                                 l4009 0548                                   l4113 12D6  
                                 l4105 1294                                   l3171 0E30  
                                 l3163 0E16                                   l3147 0D68  
                                 l3155 0DB0                                   l3139 0D02  
                                 l3083 0B94                                   l3091 0BB4  
                                 l3075 0B56                                   l3067 0B24  
                                 l3059 0B08                                   l3251 0870  
                                 l3243 081E                                   l3235 07E6  
                                 l3227 07A8                                   l3219 0770  
                                 l4043 0648                                   l4027 05D0  
                                 l4035 0608                                   l4019 0598  
                                 l4115 12D8                                   l4107 12A8  
                                 l2701 1938                                   l3421 2304  
                                 l3413 22DC                                   l3165 0E1A  
                                 l3157 0DCA                                   l3149 0D74  
                                 l3093 0BC4                                   l3085 0B9C  
                                 l3069 0B34                                   l3077 0B5E  
                                 l3261 0918                                   l3253 088C  
                                 l3245 0838                                   l3237 07F2  
                                 l3229 07C0                                   l3181 0684  
                                 l4045 0658                                   l4037 0618  
                                 l4029 05E0                                   l4117 12FC  
                                 l4109 12AC                                   l4061 11D0  
                                 l4053 1192                                   l2711 19AC  
                                 l2703 1944                                   l3423 1EAE  
                                 l3415 22E0                                   l3167 0E28  
                                 l3159 0DE0                                   l3095 0BC4  
                                 l3087 0BA0                                   l3079 0B6E  
                                 l3271 0954                                   l3263 0922  
                                 l3255 08B6                                   l3247 0848  
                                 l3239 0802                                   l3191 06C4  
                                 l3183 0692                                   l4047 0668  
                                 l4039 0628                                   l4071 11EE  
                                 l4063 11D6                                   l4055 11B4  
                                 l2633 233A                                   l3601 23BC  
                                 l2713 19B8                                   l2705 195C  
                                 l2721 16CE                                   l2801 201A  
                                 l3417 22EA                                   l3169 0E2E  
                                 l3281 09C6                                   l3273 0962  
                                 l3265 0930                                   l3257 08EC  
                                 l3249 0864                                   l3193 06CA  
                                 l3185 0694                                   l3361 0EB8  
                                 l3353 0E3E                                   l4081 1208  
                                 l4073 11F4                                   l4065 11DA  
                                 l4057 11B8                                   l2635 234A  
                                 l3611 23C8                                   l3603 23C0  
                                 l2651 1E64                                   l2643 1E3A  
                                 l2715 19C4                                   l2707 1968  
                                 l2731 172E                                   l2723 16EA  
                                 l2811 2060                                   l2803 2022  
                                 l3419 22FA                                   l3099 0BD8  
                                 l3291 0A30                                   l3283 09D4  
                                 l3275 0990                                   l3267 0942  
                                 l3259 08FA                                   l3195 06DA  
                                 l3187 06A4                                   l3179 0678  
                                 l3371 0F12                                   l3355 0E4E  
                                 l4091 1238                                   l4083 1210  
                                 l4075 11F8                                   l4067 11DE  
                                 l4059 11BC                                   l3613 23CA  
                                 l3605 23C2                                   l2661 1E98  
                                 l2653 1E72                                   l2645 1E42  
                                 l2637 238A                                   l2709 197E  
                                 l2733 173A                                   l2725 16F6  
                                 l2717 1666                                   l2813 2062  
                                 l2805 2036                                   l2741 15FC  
                                 l2821 1F2A                                   l3293 0A4A  
                                 l3285 09FE                                   l3269 0950  
                                 l3197 06E0                                   l3189 06B4  
                                 l3381 0F76                                   l3373 0F14  
                                 l3365 0ECC                                   l3357 0E5C  
                                 l4093 123C                                   l4085 1216  
                                 l4077 11FC                                   l4069 11E6  
                                 l2671 24E4                                   l3615 23CE  
                                 l3607 23C4                                   l3551 24D2  
                                 l2663 1E9E                                   l2655 1E78  
                                 l2647 1E54                                   l2639 23A6  
                                 l2727 170C                                   l2719 16C2  
                                 l2807 2038                                   l2751 164C  
                                 l2743 1608                                   l2735 1578  
                                 l2831 1F6E                                   l2823 1F3E  
                                 l2815 1F0C                                   l2911 1B9C  
                                 l3631 2426                                   l2903 2114  
                                 l3295 0A66                                   l3279 09BA  
                                 l3287 0A02                                   l3199 06E6  
                                 l3391 0FCE                                   l3383 0F94  
                                 l3375 0F20                                   l3367 0ED4  
                                 l3359 0EA2                                   l4095 124C  
                                 l4087 121A                                   l4079 1200  
                                 l2665 250A                                   l2673 2500  
                                 l3617 23D0                                   l3609 23C6  
                                 l2657 1E8E                                   l2649 1E5C  
                                 l2681 1374                                   l2729 1722  
                                 l2809 204C                                   l2745 161E  
                                 l2737 15D4                                   l2841 1FAE  
                                 l2833 1F82                                   l2825 1F52  
                                 l2817 1F14                                   l2921 1BE2  
                                 l2913 1BA4                                   l3641 1002  
                                 l3633 2430                                   l2905 215A  
                                 l3553 2528                                   l3297 0A76  
                                 l3289 0A1C                                   l3393 0FDC  
                                 l3385 0F96                                   l3377 0F5C  
                                 l3369 0EE0                                   l3561 1AC0  
                                 l4097 1260                                   l4089 1226  
                                 l2667 250E                                   l2675 2504  
                                 l3619 23D2                                   l2659 1E96  
                                 l2691 142E                                   l2683 1388  
                                 l2931 1DBC                                   l2851 1FF2  
                                 l2843 1FC0                                   l2747 1634  
                                 l2739 15E0                                   l2835 1F84  
                                 l2827 1F54                                   l2819 1F28  
                                 l2923 1BE4                                   l2915 1BB8  
                                 l3651 1072                                   l3643 1016  
                                 l3635 243A                                   l2771 22A0  
                                 l3299 0A84                                   l3395 0FDE  
                                 l3387 0F9A                                   l3379 0F68  
                                 l3571 1AFC                                   l3563 1AE4  
                                 l3555 1A86                                   l4099 1268  
                                 l3637 23FC                                   l2669 24E0  
                                 l2861 21CE                                   l2909 249E  
                                 l2685 138C                                   l2677 1304  
                                 l2941 1DFC                                   l2933 1DD0  
                                 l2853 2006                                   l2845 1FC8  
                                 l2749 1640                                   l2837 1F98  
                                 l2829 1F66                                   l2925 1BF4  
                                 l2917 1BBA                                   l3661 10E0  
                                 l3653 1086                                   l3645 1030  
                                 l3629 241E                                   l2773 22A8  
                                 l2765 24F6                                   l3389 0FBE  
                                 l3581 17B0                                   l3573 1B06  
                                 l3565 1AEE                                   l3557 1A96  
                                 l2863 21D8                                   l2687 13CE  
                                 l2679 1320                                   l2791 18BA  
                                 l2783 182A                                   l2951 19F0  
                                 l2943 1E0C                                   l2935 1DD2  
                                 l2855 2008                                   l2847 1FDC  
                                 l2839 1FAC                                   l2927 1C0C  
                                 l2919 1BCE                                   l3671 114E  
                                 l3663 10F4                                   l3655 109A  
                                 l3647 1044                                   l3639 0FF0  
                                 l2775 22B0                                   l2767 24FA  
                                 l3591 17F8                                   l3583 17BC  
                                 l3575 1B08                                   l3567 1AF0  
                                 l3559 1ABC                                   l2697 2440  
                                 l2865 21E2                                   l2857 21B4  
                                 l2689 13EA                                   l2793 18C4  
                                 l2785 1886                                   l2961 1A2C  
                                 l2953 19F2                                   l2945 1E24  
                                 l2937 1DE6                                   l2929 1DB4  
                                 l2849 1FDE                                   l3673 1162  
                                 l3665 110C                                   l3657 10B4  
                                 l3649 1058                                   l2777 22D6  
                                 l2769 229C                                   l2881 2324  
                                 l2873 2310                                   l3921 1556  
                                 l3905 1502                                   l3593 1804  
                                 l3585 17D8                                   l3577 1B12  
                                 l3569 1AFA                                   l2867 21EC  
                                 l2859 21BE                                   l2795 18CE  
                                 l2787 1892                                   l2699 1900  
                                 l2963 1A44                                   l2955 1A06  
                                 l2947 19D4                                   l2939 1DFA  
                                 l2971 1B32                                   l3675 1176  
                                 l3667 1120                                   l3659 10C8  
                                 l2779 22D8                                   l2891 20C4  
                                 l2883 2326                                   l2875 231A  
                                 l3923 1566                                   l3915 152A  
                                 l3907 150C                                   l3931 0148  
                                 l3595 1810                                   l3587 17E4  
                                 l3579 1754                                   l2869 21F6  
                                 l3597 23B0                                   l2797 18DA  
                                 l2789 18AE                                   l2965 1A58  
                                 l2957 1A1A                                   l2949 19DC  
                                 l2981 1B6E                                   l2973 1B34  
                                 l3669 1134                                   l2893 210A  
                                 l2885 2074                                   l2877 2320  
                                 l3917 1536                                   l3909 1516  
                                 l3941 0350                                   l3933 0234  
                                 l3589 17EE                                   l3599 23B6  
                                 l2799 18E6                                   l2959 1A1C  
                                 l2991 1C40                                   l2983 1B86  
                                 l2975 1B48                                   l2967 1B16  
                                 l2887 20BA                                   l2879 2322  
                                 l3919 1546                                   l3943 0360  
                                 l3951 0398                                   l3935 0320  
                                 l3927 005C                                   l2993 1C54  
                                 l2985 1C22                                   l2977 1B5C  
                                 l2969 1B1E                                   l2897 2164  
                                 l3961 03E8                                   l3953 03A8  
                                 l3945 0370                                   l3937 0330  
                                 l3929 0062                                   l2995 1C68  
                                 l2987 1C2A                                   l2979 1B5E  
                                 l2899 21AA                                   l3891 14C6  
                                 l3883 1470                                   l3971 0430  
                                 l3963 03F8                                   l3955 03B8  
                                 l3947 0380                                   l3939 0340  
                                 l2997 1C6A                                   l2989 1C3E  
                                 l3893 14C8                                   l3885 1486  
                                 l3981 0478                                   l3973 0440  
                                 l3957 03C8                                   l3965 0400  
                                 l3949 0390                                   l2999 1C7A  
                                 l3895 14D8                                   l3991 04C8  
                                 l3983 0488                                   l3975 0450  
                                 l3967 0410                                   l3959 03D8  
                                 l3897 14DC                                   l3889 149A  
                                 l3985 0498                                   l3993 04D0  
                                 l3977 0460                                   l3969 0420  
                                 l3899 14EA                                   l3995 04E0  
                                 l3987 04A8                                   l3979 0468  
                                 l3997 04F0                                   l3989 04B8  
                                 l3999 0500                                   u2010 1886  
                                 u2011 1882                                   u2020 18AE  
                                 u2100 2018                                   u2021 18AA  
                                 u2101 2014                                   u2030 2048  
                                 u2110 1BCA                                   u2031 2044  
                                 u2111 1BC6                                   u2040 2072  
                                 u2200 1C7A                                   u2120 1BF4  
                                 u2008 22C6                                   u2041 206E  
                                 u2201 1C76                                   u2121 1BF0  
                                 u2130 1DE2                                   u2210 1CD6  
                                 u2050 1F3A                                   u2131 1DDE  
                                 u2211 1CD2                                   u2051 1F36  
                                 u2140 1E0C                                   u2220 1D00  
                                 u2060 1F64                                   u2300 0B44  
                                 u2141 1E08                                   u2221 1CFC  
                                 u2061 1F60                                   u2301 0B40  
                                 u2150 1A02                                   u2230 1D5C  
                                 u2070 1F94                                   u2310 0B84  
                                 u2151 19FE                                   u2231 1D58  
                                 u2071 1F90                                   u2311 0B80  
                                 u2160 1A2C                                   u2240 1D86  
                                 u2080 1FBE                                   u2400 0D10  
                                 u2320 0BC4                                   u4000 0558  
                         _BAUD4CONbits 000EE9                                   u2161 1A28  
                                 u2241 1D82                                   u2081 1FBA  
                                 u2401 0D0C                                   u2321 0BC0  
                                 u4001 0554                                   u2090 1FEE  
                                 u2170 1B44                                   u2410 0D3E  
                                 u2330 0C3A                                   u2250 0ABC  
                                 u4010 0568                                   u2091 1FEA  
                                 u2171 1B40                                   u2411 0D3A  
                                 u2331 0C36                                   u2251 0AB8  
                                 u4011 0564                                   u2180 1B6E  
                                 u2420 0D54                                   u2340 0C5C  
                                 u2260 0ACE                                   u2500 06B4  
                                 u4100 0600                                   u4020 0578  
                                 u2181 1B6A                                   u2421 0D50  
                                 u2341 0C58                                   u2261 0ACA  
                                 u2501 06B0                                   u4101 05FC  
                                 u4021 0574                                   u2190 1C50  
                                 u2430 0D68                                   u2350 0C86  
                                 u2270 0ADE                                   u2510 06F4  
                                 u4110 0618                                   u4030 0588  
                                 u2191 1C4C                                   u2431 0D64  
                                 u2351 0C82                                   u2271 0ADA  
                                 u2511 06F0                                   u4111 0614  
                                 u4031 0584                                   u3400 10F4  
                                 u2440 0D82                                   u2360 0CAA  
                                 u2280 0B22                                   u2600 0990  
                                 u2520 0706                                   u4120 0628  
                                 u4040 0598                                   u3401 10F0  
                                 u2441 0D7E                                   u2361 0CA6  
                                 u2281 0B1E                                   u2601 098C  
                                 u2521 0702                                   u4121 0624  
                                 u4041 0594                                   u3410 1120  
                                 u2450 0DCA                                   u2370 0CC0  
                                 u2290 0B34                                   u2610 09A6  
                                 u2530 0716                                   u4130 0638  
                                 u4050 05B0                                   u3330 17B0  
                                 _T2PR 000FBC                                   u3411 111C  
                                 u2451 0DC6                                   u2371 0CBC  
                                 u2291 0B30                                   u2611 09A2  
                                 u2531 0712                                   u4131 0634  
                                 u4051 05AC                                   u3331 17AC  
                                 u1900 13EA                                   u3420 1162  
                                 u2460 0DFA                                   u2380 0CDE  
                                 u2620 09BA                                   u2540 074C  
                                 u4140 0648                                   u4060 05C0  
                                 u3340 17D8                                   u1901 13E6  
                                 u3421 115E                                   u2461 0DF6  
                                 u2381 0CDA                                   u2621 09B6  
                                 u2541 0748                                   u4141 0644  
                                 u4061 05BC                                   u3341 17D4  
                                 u2470 0E28                                   u2390 0CFE  
                                 u2630 09D4                                   u2550 075C  
                                 u4150 0658                                   u4070 05D0  
                                 u2471 0E24                                   u2391 0CFA  
                                 u2631 09D0                                   u2551 0758  
                                 u4151 0654                                   u4071 05CC  
                                 u4207 12CA                                   u1840 234A  
                                 u3360 1002                                   u2640 0A1C  
                                 u2560 08D6                                   u2480 0692  
                                 u2800 0F86                                   u4160 0668  
                                 u4080 05E0                                   u1841 2346  
                                 u3361 0FFE                                   u2641 0A18  
                                 u2481 068E                                   u2801 0F82  
                                 u4161 0664                                   u4081 05DC  
                                 u4217 181A                                   u1850 2360  
                                 u1930 1938                                   u3370 1044  
                                 u2650 0A4A                                   u2570 0930  
                                 u2490 06A4                                   u3610 1486  
                                 u2810 0F94                                   u4090 05F0  
                                 u4170 124C                                   u1851 235C  
                                 u1931 1934                                   u4307 1A36  
                                 u3371 1040                                   u4227 22F0  
                                 u2651 0A46                                   u2571 092C  
                                 u2491 06A0                                   u3611 1482  
                                 u2811 0F90                                   u4091 05EC  
                                 u4171 1248                                   u1860 1E54  
                                 u1940 195C                                   u3380 1086  
                                 u2660 0A84                                   u2580 0950  
                                 u3620 14BC                                   u2820 0FCE  
                                 u2740 0E4E                                   u3700 0350  
                                 u4180 1278                                   u1861 1E50  
                                 u1941 1958                                   u4317 1A62  
                                 u4237 1B78                                   u3381 1082  
                                 u2661 0A80                                   u2581 094C  
                                 u2565 08CC                                   u2821 0FCA  
                                 u2741 0E4A                                   u3701 034C  
                                 u4181 1274                                   u1870 1E72  
                                 u1950 16C2                                   u3390 10C8  
                                 u2590 0962                                   u3630 14EA  
                                 u2830 0FDC                                   u2750 0E5C  
                                 u3710 0360                                   u4190 12BE  
                                 u1871 1E6E                                   u4327 1744  
                                 u1951 16BE                                   u4247 1BFE  
                                 u3391 10C4                                   u2591 095E  
                                 u3631 14E6                                   u2831 0FD8  
                                 u2751 0E58                                   u3711 035C  
                                 u4191 12BA                                   u1880 1E8E  
                                 u1960 16EA                                   u3640 14FE  
                                 u2760 0EB8                                   u3800 03F8  
                                 u3720 0370                                   u1881 1E8A  
                                 u4337 19CA                                   u1961 16E6  
                                 u4257 1C84                                   u3641 14FA  
                                 u3625 14B0                                   u2761 0EB4  
                                 u3801 03F4                                   u3721 036C  
                                 u1890 1320                                   u1970 15D4  
                                 u3650 1526                                   u2770 0F0E  
                                 u3810 0410                                   u3730 0380  
                                 u1891 131C                                   u4347 18F0  
                                 u1971 15D0                                   u4267 1D0A  
                                 u3651 1522                                   u2771 0F0A  
                                 u3811 040C                                   u3731 037C  
                                 u1980 15FC                                   u3660 1546  
                                 u2780 0F58                                   u3900 04A8  
                                 u3820 0420                                   u3740 0390  
                                 u4357 21C4                                   u4277 1656  
                                 u1981 15F8                                   u3661 1542  
                                 u2781 0F54                                   u3901 04A4  
                                 u3821 041C                                   u3741 038C  
                                 u1990 22C4                                   u3670 1556  
                                 u2790 0F76                                   u3910 04B8  
                                 u3830 0430                                   u3750 03A8  
                                 u4287 1D90                                   u1991 22BC  
                                 u3671 1552                                   u2791 0F72  
                                 u3911 04B4                                   u3831 042C  
                                 u3751 03A4                                   u3920 04C8  
                                 u3840 0440                                   u3760 03B8  
                                 u3680 0330                                   u4297 1E16  
                                 u3921 04C4                                   u3841 043C  
                                 u3761 03B4                                   u3681 032C  
                                 u3930 04E0                                   u3850 0450  
                                 u3770 03C8                                   u3690 0340  
                                 u3931 04DC                                   u3851 044C  
                                 u3771 03C4                                   u3691 033C  
                                 u3940 04F0                                   u3860 0460  
                                 u3780 03D8                                   u3941 04EC  
                                 u3861 045C                                   u3781 03D4  
                                 u3950 0500                                   u3870 0478  
                                 u3790 03E8                                   u3951 04FC  
                                 u3871 0474                                   u3791 03E4  
                                 i2l24 249C                                   u3960 0510  
                                 u3880 0488                                   u3961 050C  
                                 u3881 0484                                   u3970 0520  
                                 u3890 0498                                   u3971 051C  
                                 u3891 0494                                   u3980 0530  
                                 u3981 052C                                   u3990 0548  
                                 u3991 0544                                   i2l90 2362  
                                 i2l93 2388                                   i2l96 2526  
                                 _main 1192                    __end_of_AppendMoves 23FA  
                   _YellowInstructions 1B16                                   fsr2h 000FDA  
                                 indf2 000FDF                                   fsr2l 000FD9  
                                 btemp 0057                                   _stop 1900  
       ??i2_init_colorclick_interrupts 0005                      main@initial_color 00E0  
                                 prodh 000FF4                                   prodl 000FF3  
                                 start 0058                   ?i2_color_writetoaddr 0003  
                      ___fldiv@new_exp 0028                 __end_of_color_read_Red 20C4  
                      __end_of_HighISR 247E                           ___param_bank 000000  
                          _turnLeft135 1FC0                    ?_YellowInstructions 0027  
                          _turnRight90 1F0C                       __end_of_LED_init 24DE  
                        ___fltol@sign1 004D                             _AppendTime 23FA  
                                ?_main 0001                        __end_of___fldiv 0E3C  
                      __end_of___flmul 0AA2                        __end_of___fltol 1578  
                                ?_stop 001C                        __end_of___lwdiv 1EAE  
                                i1l323 0048                                  i2l102 251C  
                                i2l105 24F4                                  i2l312 2252  
                                i2l315 24D0                                  i2l331 247A  
                                _TMR0H 000FD4                                  _TMR0L 000FD3  
           __end_of_I2C_2_Master_Start 2514                   ??_YellowInstructions 002B  
           __end_of_I2C_2_Master_Write 24EA                       _PinkInstructions 1C22  
                   _int_threshold_high 00FA                                  main@b 00DE  
             __end_of_BlueInstructions 1A86                                  tablat 000FF5  
                                plusw2 000FDB                                  ttemp5 0058  
                                ttemp6 005B                                  ttemp7 005F  
                                status 000FD8                                  wtemp8 0058  
                  detect_color@tempval 00CA                  ??i2_color_writetoaddr 0004  
              __end_of_color_read_Blue 21B4                  _I2C_2_Master_RepStart 24F6  
                 fullSpeedBackwards@mL 001C                   fullSpeedBackwards@mR 001E  
                      ?_color_read_Red 000D                        __initialization 2254  
                         __end_of_main 1304                   __end_of_detect_color 0678  
                         __end_of_stop 19D4                  _LightBlueInstructions 1D2E  
                    ??_RedInstructions 002B    __end_of_interrupts_clear_colorclick 24B8  
       ?i2_interrupts_clear_colorclick 0001            _interrupts_clear_colorclick 249E  
                               ??_main 00DC                                 ??_stop 0020  
                        __activetblptr 000000                           _turnRight135 1F66  
                          _AppendMoves 23D6                           ?_setMotorPWM 0016  
                               _CCPR1H 000FAA                                 _CCPR2H 000FA6  
                               _CCPR3H 000F25                                 _CCPR4H 000F21  
                               _RC0PPS 000E62                                 _RC4REG 000EE3  
                               _RE2PPS 000E74                                 _RD5PPS 000E6F  
                               _RC7PPS 000E69                                 _RE4PPS 000E76  
                               _RD6PPS 000E70                                 i1l3693 0026  
                               i1l3695 0036                                 i2l3401 220E  
                               i1l3697 0044                                 i2l3411 2246  
                               i2l3403 221E                                 i2l3405 2228  
                               i2l3407 2232                                 i2l3409 223C  
                               i2l3701 246E                                 i2l3703 2472  
                               i2l2753 251E                                 i2l2761 24EC  
                               i2l3705 2476                                 i2l2755 2522  
                               i2l2763 24F0                                 i2l2693 2362  
                               i2l2757 2514                                 i2l2695 2372  
                               i2l2759 2518                                 i2l2871 2480  
                               i2l3399 2204                                 _RG6PPS 000E88  
                               i2l3677 24B8                                 i2l3699 245E  
                            ??_HighISR 0006               __end_of_color_click_init 2310  
                               _RX4PPS 000E15                                 _TX4REG 000EE4  
                     __end_of___xxtofl 0FF0                                 _LowISR 0018  
                        ??_Timer0_init 0009                           _CCPTMRS0bits 000FAD  
          AppendMoves@anti_moves_array 000B                                 ___wmul 238A  
                            ??___fldiv 001F                              ??___flmul 0038  
                            ??___fltol 00C6                              ??___lwdiv 0013  
                               clear_0 2272                                 clear_1 227E  
                               clear_2 228A                                 isa$std 000001  
                          ?_AppendTime 0009                             _WhiteLight 2528  
                               tblptrh 000FF7                                 tblptrl 000FF6  
                               tblptru 000FF8                                 stop@mL 001C  
                               stop@mR 001E                      ??_initDCmotorsPWM 000B  
           i2color_writetoaddr@address 0004                       __end_of_turnLeft 1754  
                         ___xxtofl@arg 0013                           ___xxtofl@exp 0012  
                         ___xxtofl@val 0009                          ??_Update_RGBC 0016  
                           __accesstop 0060                __end_of__initialization 2290  
             __end_of_color_read_Clear 2164               __end_of_color_read_Green 2114  
               ?_I2C_2_Master_RepStart 0001                          ___rparam_used 000001  
                            ?_LED_init 0001                             ___fltol@f1 0049  
                     ?_color_read_Blue 000D                      _GreenInstructions 1DB4  
                      _Interrupts_init 23B0                         __pcstackCOMRAM 0001  
               ?_LightBlueInstructions 0027                           __pidataBANK0 2530  
                   ?_GreenInstructions 0027                         AppendTime@temp 000E  
                    detect_color@color 00D8                    __end_of_Timer0_init 243E  
                          MoveBuggy@mL 0030                            MoveBuggy@mR 0032  
                  OrangeInstructions@a 002D                    ??_GreenInstructions 002B  
              MoveBuggy@color_detected 002E           ??_init_colorclick_interrupts 000D  
                    __end_of_MoveBuggy 1192                             __pbssBANK0 0060  
                           __pbssBANK1 0100              __end_of_GreenInstructions 1E3A  
                           ??_LED_init 0009                                ?_LowISR 0001  
                    _color_writetoaddr 243E                           _T2CLKCONbits 000FBF  
                         ?_turnLeft135 0022                    __end_of_Update_RGBC 1F0C  
                   ?_color_writetoaddr 000B                                ?___wmul 0009  
             __end_of_PinkInstructions 1CA8                           ?_turnRight90 0022  
                  ??_color_writetoaddr 000C                                _INT1PPS 000DF1  
                            ?___xxtofl 0009                            ?_WhiteLight 0001  
                              _SP4BRGH 000EE6                                _SP4BRGL 000EE5  
                              _SSP2ADD 000ED6                                _SSP2BUF 000ED5  
                           _color_flag 0055                           _detect_color 005C  
              __end_of_Interrupts_init 23D6                      ?_BlueInstructions 0027  
               color_writetoaddr@value 000B                       ??_color_read_Red 000F  
                              _HighISR 0008              __end_of_color_writetoaddr 245E  
                   ??_BlueInstructions 002B                        _RedInstructions 1B9C  
                   _I2C_2_Master_Start 250A                    i2_I2C_2_Master_Idle 2362  
                   _I2C_2_Master_Write 24DE                                __Hparam 0000  
                  i2_I2C_2_Master_Stop 2514                                __Lparam 0000  
                    color_read_Red@tmp 0012                            _Timer0_init 241E  
                  GreenInstructions@mL 0027                    GreenInstructions@mR 0029  
           __end_of_fullSpeedBackwards 1900                                ___fldiv 0AA2  
                              ___flmul 0678                                ___fltol 1470  
                  ?_I2C_2_Master_Start 0001                           turnLeft135@a 0026  
                              ___lwdiv 1E3A                    ?_I2C_2_Master_Write 0001  
                         turnLeft90@mL 0022                           turnLeft90@mR 0024  
                              __pcinit 2254                                __ramtop 0E00  
                            ?_turnLeft 001C                                __ptext0 1192  
                              __ptext1 1A86                                __ptext2 1754  
                              __ptext3 005C                                __ptext4 0E3C  
                              __ptext5 1470                                __ptext6 0678  
                              __ptext7 0AA2                                __ptext8 22DC  
                              __ptext9 2310                   ?i2_I2C_2_Master_Idle 0001  
 __end_ofi2_init_colorclick_interrupts 2254           i2_init_colorclick_interrupts 2204  
                            _T2CONbits 000FBD                             ??___xxtofl 000D  
                 ?i2_I2C_2_Master_Stop 0001                              _T2HLTbits 000FBE  
                        _RxBufWriteCnt 0054                           ?_AppendMoves 0009  
                              _tmr_ovf 0074                   ??_I2C_2_Master_Start 000A  
                 ??_I2C_2_Master_Write 000A                         __pintcode_body 245E  
                 end_of_initialization 2290            __end_ofi2_color_writetoaddr 249E  
                    RedInstructions@mL 0027                     main@color_detected 00DF  
                    RedInstructions@mR 0029                                int_func 245E  
                          _Update_RGBC 1EAE                      ?_color_click_init 0001  
                         turnRight90@a 0026             __end_of_OrangeInstructions 1D2E  
                   ??_color_click_init 000D                                postdec2 000FDD  
                              postinc0 000FEE                                postinc2 000FDE  
                           _time_array 009D                             _time_index 00C5  
                      _initDCmotorsPWM 1A86                             ??_turnLeft 0020  
                         ??_AppendTime 000D                     setMotorPWM@negDuty 001B  
                ??i2_I2C_2_Master_Idle 0001                      __end_of_turnRight 1666  
                ??i2_I2C_2_Master_Stop 0002                          ___xxtofl@sign 0011  
                  YellowInstructions@a 002D                              _TRISAbits 000F81  
                   setMotorPWM@posDuty 001A                              _TRISBbits 000F82  
                            _TRISCbits 000F83                              _TRISDbits 000F84  
   __end_of_init_colorclick_interrupts 2204          ?i2_init_colorclick_interrupts 0001  
           _init_colorclick_interrupts 21B4                              _TRISEbits 000F85  
                            _TRISFbits 000F86                              _TRISGbits 000F87  
                            _TRISHbits 000F88                            ___fldiv@grs 002A  
                          ___fldiv@rem 0023                     PinkInstructions@mL 0027  
                   PinkInstructions@mR 0029                       fullSpeedAhead@mL 001C  
                     fullSpeedAhead@mR 001E                __end_of_RedInstructions 1C22  
             color_writetoaddr@address 000C                ??_I2C_2_Master_RepStart 000A  
                     ?_Interrupts_init 0001                            ___flmul@grs 003D  
                          _CCP1CONbits 000FAB                      ?_color_read_Clear 000D  
                         _EUSART4RXbuf 0060                           _EUSART4TXbuf 0100  
                          _CCP2CONbits 000FA7                      ?_color_read_Green 000D  
                          _CCP3CONbits 000F26                            _CCP4CONbits 000F22  
                   __end_of_AppendTime 241E                ??_LightBlueInstructions 002B  
                           main@motorL 00E8                             main@motorR 00F1  
                   ??_color_read_Clear 000F                     ??_color_read_Green 000F  
                           _turnLeft90 201A                         __end_of_LowISR 0058  
               AppendMoves@moves_index 0009                         _fullSpeedAhead 1754  
                       __end_of___wmul 23B0                        AppendMoves@temp 000E  
                   detect_color@dist_B 00DB                     detect_color@dist_G 00DA  
                   detect_color@dist_R 00D9                      _int_threshold_low 004F  
                  color_read_Clear@tmp 0012                    start_initialization 2254  
                        _TxBufWriteCnt 0052                   OrangeInstructions@mL 0027  
                 OrangeInstructions@mR 0029                              _MoveBuggy 0FF0  
                  color_read_Green@tmp 0012                               ??_LowISR 0006  
              __end_of_initDCmotorsPWM 1B16                 __end_of_fullSpeedAhead 182A  
                             ??___wmul 000D                            __pdataBANK0 00FA  
        i2I2C_2_Master_Write@data_byte 0002                      ?_PinkInstructions 0027  
                   Update_RGBC@tempval 0014                     ??_PinkInstructions 002B  
         __end_ofi2_I2C_2_Master_Start 2528           __end_ofi2_I2C_2_Master_Write 24F6  
                            ___fldiv@a 001B                              ___fldiv@b 0017  
                            ___flmul@a 0034                              ___flmul@b 0030  
                          __pbssCOMRAM 004F                           ??_WhiteLight 0009  
                        __pcstackBANK0 00C6                   AppendTime@time_array 000B  
                 AppendTime@time_index 0009                       ?_RedInstructions 0027  
                             ?_HighISR 0001                             ?_MoveBuggy 002E  
                     ___lwdiv@dividend 000F                           ?_Timer0_init 0001  
                          ?_turnLeft90 0022                        ?_fullSpeedAhead 001C  
                   BlueInstructions@mL 0027                     BlueInstructions@mR 0029  
                            __pintcode 0008                     __end_of_WhiteLight 2530  
                             ?___fldiv 0017                               ?___flmul 0030  
                             ?___fltol 0049                               ?___lwdiv 000F  
                          __pintcodelo 0018           ?_interrupts_clear_colorclick 0001  
                 I2C_2_Master_Read@ack 000B                   I2C_2_Master_Read@tmp 000C  
                        ?_turnRight135 0022                      _I2C_2_Master_Idle 233A  
                   _fullSpeedBackwards 182A                      _I2C_2_Master_Init 2310  
                    _I2C_2_Master_Read 229A                      _I2C_2_Master_Stop 2500  
                         _RxBufReadCnt 0053                     GreenInstructions@a 002D  
                   ?_I2C_2_Master_Idle 0001                     ?_I2C_2_Master_Init 0001  
                   ?_I2C_2_Master_Read 0001                          ??_setMotorPWM 0018  
                   ?_I2C_2_Master_Stop 0001                       ___lwdiv@quotient 0013  
                          turnLeft90@a 0026               initDCmotorsPWM@PWMperiod 0009  
              LightBlueInstructions@mL 0027                LightBlueInstructions@mR 0029  
                  ?_fullSpeedBackwards 001C                    ??_I2C_2_Master_Idle 0009  
                  ??_I2C_2_Master_Init 0009                           ?_Update_RGBC 0014  
                  ??_I2C_2_Master_Read 000A                         ___wmul@product 000D  
                             _LATAbits 000F79                    ??_I2C_2_Master_Stop 000A  
                             _LATCbits 000F7B                               _LATEbits 000F7D  
                             _LATFbits 000F7E                               _LATGbits 000F7F  
                             _LATHbits 000F80                               _IPR0bits 000E1F  
                             _PIE0bits 000E29                               _LED_init 24D2  
                     RedInstructions@a 002D                               _PIE4bits 000E2D  
                             i1u345_20 0036                               i1u345_21 0032  
                          turnRight@mL 001C                            turnRight@mR 001E  
                             i2u191_40 2372                               i2u191_41 236E  
                             _PIR0bits 000E33                               i2u192_40 2388  
                             i2u192_41 2384                               i2u346_40 246E  
                             i2u346_41 246A                               i2u436_47 2214  
                             _PIR4bits 000E37                       ?_initDCmotorsPWM 0009  
                             _SSP2CON2 000EDA                               _SSP2STAT 000ED8  
                 ??_fullSpeedBackwards 0020                     _OrangeInstructions 1CA8  
                    PinkInstructions@a 002D              __end_of_I2C_2_Master_Idle 2362  
            __end_of_I2C_2_Master_Init 233A              __end_of_I2C_2_Master_Read 22DC  
                    ___wmul@multiplier 0009                         ??_turnRight135 0026  
            __end_of_I2C_2_Master_Stop 250A                           setMotorPWM@m 0016  
          I2C_2_Master_Write@data_byte 000A          ??_interrupts_clear_colorclick 000E  
           __end_of_YellowInstructions 1B9C                      ??_color_read_Blue 000F  
                  ?_OrangeInstructions 0027                           _TxBufReadCnt 0051  
          ?_init_colorclick_interrupts 0001               i2color_writetoaddr@value 0003  
                            _turnRight 1578          __end_of_I2C_2_Master_RepStart 2500  
                   color_read_Blue@tmp 0012                    __end_of_setMotorPWM 1470  
                          ??_MoveBuggy 0034                   i2_I2C_2_Master_Start 251E  
                 i2_I2C_2_Master_Write 24EA                               __Hrparam 0000  
                 ??_OrangeInstructions 002B                               __Lrparam 0000  
        __end_of_LightBlueInstructions 1DB4            __end_ofi2_I2C_2_Master_Idle 238A  
          __end_ofi2_I2C_2_Master_Stop 251E                         turnRight135@mL 0022  
                       turnRight135@mR 0024                          turnLeft135@mL 0022  
                        turnLeft135@mR 0024                             _ANSELBbits 000E9A  
                           _ANSELDbits 000EA7                               ___xxtofl 0E3C  
                           _T0CON0bits 000FD5                             _T0CON1bits 000FD6  
                      ___lwdiv@divisor 0011                      BlueInstructions@a 002D  
                      ___lwdiv@counter 0015                             ?_turnRight 001C  
                             __ptext10 2528                               __ptext11 1EAE  
                             __ptext20 1B16                               __ptext12 2074  
                             __ptext21 1B9C                               __ptext13 20C4  
                             __ptext30 19D4                               __ptext22 1F0C  
                             __ptext14 2114                               __ptext31 201A  
                             __ptext23 1C22                               __ptext15 2164  
                             __ptext40 23B0                               __ptext32 1666  
                             __ptext24 1CA8                               __ptext16 24F6  
                             __ptext41 249E                               __ptext33 1900  
                             __ptext25 1F66                               __ptext17 229A  
                             __ptext42 21B4                               __ptext34 182A  
                             __ptext26 1578                               __ptext18 241E  
                             __ptext51 24B8                               __ptext43 243E  
                             __ptext35 1304                               __ptext27 1D2E  
                             __ptext19 0FF0                               __ptext52 2204  
                             __ptext44 24DE                               __ptext36 238A  
                             __ptext28 1FC0                               __ptext53 247E  
                             __ptext45 2500                               __ptext37 1E3A  
                             __ptext29 1DB4                               __ptext54 24EA  
                             __ptext46 250A                               __ptext38 23D6  
                             __ptext55 2514                               __ptext47 233A  
                             __ptext39 24D2                               __ptext56 251E  
                             __ptext48 23FA                               __ptext57 2362  
                         _SSP2CON1bits 000ED9                           _SSP2CON2bits 000EDA  
      ??i2_interrupts_clear_colorclick 0006                 LightBlueInstructions@a 002D  
                           turnLeft@mL 001C                             turnLeft@mR 001E  
                ?i2_I2C_2_Master_Start 0001                  ?i2_I2C_2_Master_Write 0001  
                        ??_turnLeft135 0026                               isa$xinst 000000  
                           _RC4STAbits 000EE7                               int$flags 0057  
                        ??_turnRight90 0026                       _BlueInstructions 19D4  
                             _turnLeft 1666                             _INTCONbits 000FF2  
                          _setMotorPWM 1304                          ?_detect_color 00CA  
                        turnRight135@a 0026                               intlevel1 0000  
                             intlevel2 0000                          turnRight90@mL 0022  
                        turnRight90@mR 0024                       ??_fullSpeedAhead 0020  
                 __end_of_turnRight135 1FC0                           ??_turnLeft90 0026  
                          _moves_index 0056                       _color_click_init 22DC  
                  __end_of_turnLeft135 201A                             _SSP2DATPPS 000E1D  
                           _SSP2CLKPPS 000E1C                    __end_of_turnRight90 1F66  
                        ??_AppendMoves 000D                         ??_detect_color 00CC  
                          ??_turnRight 0020                     __end_of_turnLeft90 2074  
                           _TX4STAbits 000EE8                 ??i2_I2C_2_Master_Start 0002  
               ??i2_I2C_2_Master_Write 0002                   YellowInstructions@mL 0027  
                 YellowInstructions@mR 0029  __end_ofi2_interrupts_clear_colorclick 24D2  
        i2_interrupts_clear_colorclick 24B8  
